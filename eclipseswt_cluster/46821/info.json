{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "740435b604b18d06e71a401da1879914", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2271b64f38721d01f273722d2393b59a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "2d2908aafbcfc259e4cd16140b2915756521d48e", "commitAfterChange": "cc9ff1eaaea7372d6cef2dbd2a12ff220660892f", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": "\r public void setBounds (int x, int y, int width, int height)", "signatureAfterChange": "\r boolean setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "diff": ["+boolean setBounds (int x, int y, int width, int height, boolean move, boolean resize) {\r", "+\tint topHandle = topHandle ();\r", "+\tif (move && resize) {\r", "+\t\tint [] argList = {\r", "+\t\t\tOS.XmNx, 0, \t\t\t/* 1 */\r", "+\t\t\tOS.XmNy, 0, \t\t\t/* 3 */\r", "+\t\t\tOS.XmNwidth, 0, \t\t/* 5 */\r", "+\t\t\tOS.XmNheight, 0, \t\t/* 7 */\r", "+\t\t\tOS.XmNborderWidth, 0, \t/* 9 */\r", "+\t\t};\r", "+\t\tOS.XtGetValues (topHandle, argList, argList.length / 2);\r", "+\t\t/*\r", "+\t\t* Feature in Motif.  Motif will not allow a window\r", "+\t\t* to have a zero width or zero height.  The fix is\r", "+\t\t* to ensure these values are never zero.\r", "+\t\t*/\r", "+\t\twidth = Math.max (width - (argList [9] * 2), 1);\r", "+\t\theight = Math.max (height - (argList [9] * 2), 1);\r", "+\t\tboolean sameOrigin = (x == (short) argList [1]) && (y == (short) argList [3]);\r", "+\t\tboolean sameExtent = (width == argList [5]) && (height == argList [7]);\r", "+\t\tif (sameOrigin && sameExtent) return false;\r", "+\t\tOS.XtConfigureWidget (topHandle, x, y, width, height, argList [9]);\r", "+\t\tif (!sameOrigin) sendEvent (SWT.Move);\r", "+\t\tif (!sameExtent) sendEvent (SWT.Resize);\r", "+\t\treturn true;\r", "+\t}\r", "+\tif (move) {\r", "+\t\tint [] argList = {OS.XmNx, 0, OS.XmNy, 0};\r", "+\t\tOS.XtGetValues (topHandle, argList, argList.length / 2);\r", "+\t\tif (x == (short) argList [1] && y == (short) argList [3]) return false;\r", "+\t\tOS.XtMoveWidget (topHandle, x, y);\r", "+\t\tsendEvent (SWT.Move);\r", "+\t\treturn true;\r", "+\t}\r", "+\tif (resize) {\r", "+\t\tint [] argList = {OS.XmNwidth, 0, OS.XmNheight, 0, OS.XmNborderWidth, 0};\r", "+\t\tOS.XtGetValues (topHandle, argList, argList.length / 2);\r", "+\t\t/*\r", "+\t\t* Feature in Motif.  Motif will not allow a window\r", "+\t\t* to have a zero width or zero height.  The fix is\r", "+\t\t* to ensure these values are never zero.\r", "+\t\t*/\r", "+\t\twidth = Math.max (width - (argList [5] * 2), 1);\r", "+\t\theight = Math.max (height - (argList [5] * 2), 1);\r", "+\t\tif (width == argList [1] && height == argList [3]) return false;\r", "+\t\tOS.XtResizeWidget (topHandle, width, height, argList [5]);\r", "+\t\tsendEvent (SWT.Resize);\r", "+\t\treturn true;\r", "+\t}\r", "+\treturn false;\r", "+}\r", "-\t/*\r", "-\t* Feature in Motif.  Motif will not allow a window\r", "-\t* to have a zero width or zero height.  The fix is\r", "-\t* to ensure these values are never zero.\r", "-\t*/\r", "-\tint topHandle = topHandle ();\r", "-\tint [] argList = {\r", "-\t\tOS.XmNx, 0, \t\t\t/* 1 */\r", "-\t\tOS.XmNy, 0, \t\t\t/* 3 */\r", "-\t\tOS.XmNwidth, 0, \t\t/* 5 */\r", "-\t\tOS.XmNheight, 0, \t\t/* 7 */\r", "-\t\tOS.XmNborderWidth, 0, \t/* 9 */\r", "-\t};\r", "-\tOS.XtGetValues (topHandle, argList, argList.length / 2);\r", "-\tint newWidth = Math.max (width - (argList [9] * 2), 1);\r", "-\tint newHeight = Math.max (height - (argList [9] * 2), 1);\r", "-\tboolean sameOrigin = (x == (short) argList [1]) && (y == (short) argList [3]);\r", "-\tboolean sameExtent = (newWidth == argList [5]) && (newHeight == argList [7]);\r", "-\tif (sameOrigin && sameExtent) return;\r", "-\tOS.XtConfigureWidget (topHandle, x, y, newWidth, newHeight, argList [9]);\r", "-\tif (!sameOrigin) sendEvent (SWT.Move);\r", "-\tif (!sameExtent) sendEvent (SWT.Resize);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b13dc3d609ab9c92d9c00d905ee5f16e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "fb0ed33d9069b9fd0107f7de2f81037302ea46d7", "commitAfterChange": "84fc2c9805b2d2c52f9b3b56022cf3cd83acd074", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 38, "signatureBeforeChange": "\r \r boolean setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "signatureAfterChange": "\r \r boolean setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "diff": ["-\tint [] args = {OS.Pt_ARG_WINDOW_RENDER_FLAGS, 0, 0};\r", "-\tOS.PtGetResources (shellHandle, args.length / 3, args);\r", "-\tint flags = args [1];\r", "-\tint [] left = new int [1], top = new int [1];\r", "-\tint [] right = new int [1], bottom = new int [1];\r", "-\tOS.PtFrameSize (flags, 0, left, top, right, bottom);\r", "-\tPhArea_t area = new PhArea_t ();\r", "-\tOS.PtWidgetArea (shellHandle, area);\r", "-\tint frameWidth = area.size_w + left [0] + right [0];\r", "-\tint frameHeight = area.size_h + top [0] + bottom [0];\r", "-\tif (!move) {\r", "-\t\tx = area.pos_x;\r", "-\t\ty = area.pos_y;\r", "+\t\r", "+\tboolean caretVisible = caret != null && caret.isVisible ();\r", "+\tif (caretVisible) caret.hideCaret ();\r", "+\t\r", "+\tif (resize) {\r", "+\t\t/* Get the trimings */\r", "+\t\tint [] args = {OS.Pt_ARG_WINDOW_RENDER_FLAGS, 0, 0};\r", "+\t\tOS.PtGetResources (shellHandle, args.length / 3, args);\r", "+\t\tint flags = args [1];\r", "+\t\tint [] left = new int [1], top = new int [1];\r", "+\t\tint [] right = new int [1], bottom = new int [1];\r", "+\t\tOS.PtFrameSize (flags, 0, left, top, right, bottom);\r", "+\t\twidth = Math.max (width - left [0] - right [0], 0);\r", "+\t\theight = Math.max (height - top [0] - bottom [0], 0);\r", "-\tif (!resize) {\r", "-\t\twidth = frameWidth;\r", "-\t\theight = frameHeight;\r", "+\t\r", "+\tPhArea_t oldArea = new PhArea_t ();\r", "+\tOS.PtWidgetArea (shellHandle, oldArea);\r", "+\t\r", "+\tif (move && resize) {\r", "+\t\tPhArea_t area = new PhArea_t ();\r", "+\t\tarea.pos_x = (short) x;\r", "+\t\tarea.pos_y = (short) y;\r", "+\t\tarea.size_w = (short) width;\r", "+\t\tarea.size_h = (short) height;\r", "+\t\tint ptr = OS.malloc (PhArea_t.sizeof);\r", "+\t\tOS.memmove (ptr, area, PhArea_t.sizeof);\r", "+\t\tOS.PtSetResource (shellHandle, OS.Pt_ARG_AREA, ptr, 0);\r", "+\t\tOS.free (ptr);\r", "+\t} else {\r", "+\t\tif (move) {\r", "+\t\t\tPhPoint_t pt = new PhPoint_t ();\r", "+\t\t\tpt.x = (short) x;\r", "+\t\t\tpt.y = (short) y;\r", "+\t\t\tint ptr = OS.malloc (PhPoint_t.sizeof);\r", "+\t\t\tOS.memmove (ptr, pt, PhPoint_t.sizeof);\r", "+\t\t\tOS.PtSetResource (shellHandle, OS.Pt_ARG_POS, ptr, 0);\r", "+\t\t\tOS.free (ptr);\r", "+\t\t} else if (resize) {\r", "+\t\t\tint [] args = {\r", "+\t\t\t\tOS.Pt_ARG_WIDTH, width, 0,\r", "+\t\t\t\tOS.Pt_ARG_HEIGHT, height, 0,\r", "+\t\t\t};\r", "+\t\t\tOS.PtSetResources (shellHandle, args.length / 3, args);\r", "+\t\t}\r", "-\tboolean sameOrigin = x == area.pos_x && y == area.pos_y;\r", "-\tboolean sameExtent = width == frameWidth && height == frameHeight;\r", "-\tarea.pos_x = (short) x;\r", "-\tarea.pos_y = (short) y;\r", "-\tarea.size_w = (short) (Math.max (width - left [0] - right [0], 0));\r", "-\tarea.size_h = (short) (Math.max (height - top [0] - bottom [0], 0));\r", "-\tint ptr = OS.malloc (PhArea_t.sizeof);\r", "-\tOS.memmove (ptr, area, PhArea_t.sizeof);\r", "-\tOS.PtSetResource (shellHandle, OS.Pt_ARG_AREA, ptr, 0);\r", "-\tOS.free (ptr);\r", "+\r", "+\t\tPhArea_t newArea = new PhArea_t ();\r", "+\t\tOS.PtWidgetArea (shellHandle, newArea);\r", "+\t\tboolean sameOrigin = oldArea.pos_x == newArea.pos_x && oldArea.pos_y == newArea.pos_y;\r", "+\t\tboolean sameExtent = oldArea.size_w == newArea.size_w && oldArea.size_h == newArea.size_h;\r", "-\t\t\tresizeBounds (width, height);\r", "+\t\t\tresizeBounds (newArea.size_w, newArea.size_h);\r", "+\t\t\tif (layout != null) layout (false);\r", "-\treturn !sameOrigin || !sameExtent;\r", "-}\r", "+\t\r", "+\tif (caretVisible) caret.showCaret ();\r", "+\t\r", "+\treturn move || resize;\r"]}], "num": 46821}