{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "acb2ffeef8ed93a1c10aa438ea2e0462", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d3211442b4e1213503300e96f04453f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "7ee9370fb1f257b0959b64e9c229131ca3b8dbfc", "commitAfterChange": "0311d68036ad50521d345e1a90470acd1e4bf9b4", "methodNumberBeforeChange": 138, "methodNumberAfterChange": 128, "signatureBeforeChange": "  boolean tableView_shouldTrackCell_forTableColumn_row(int id, int sel, \t\tint table, int cell, int tableColumn, int rowIndex)", "signatureAfterChange": "  void selectRowIndexes_byExtendingSelection (int id, int sel, int indexes, boolean extend)", "diff": ["+void selectRowIndexes_byExtendingSelection (int /*long*/ id, int /*long*/ sel, int /*long*/ indexes, boolean extend) {", "+\tif (preventSelect && !ignoreSelect) return;", "+\tif ((style & SWT.SINGLE) != 0 && !ignoreSelect) {", "+\t\tNSIndexSet set = new NSIndexSet(indexes);", "+\t\tif (set.count() == 0) return;", "+\t}", "+\tsuper.selectRowIndexes_byExtendingSelection (id, sel, indexes, extend);", "+}", "-", "-boolean tableView_shouldTrackCell_forTableColumn_row(int /*long*/ id, int /*long*/ sel,", "-\t\tint /*long*/ table, int /*long*/ cell, /*long*/ int /*long*/ tableColumn, int /*long*/ rowIndex) {", "-\tNSCell theCell = new NSCell(cell);", "-\tNSTableView tableView = (NSTableView)view;", "-\tif (theCell.isKindOfClass(OS.class_NSButtonCell)) {", "-\t\t// Allow tracking of the checkbox area of the button, not the text itself.", "-\t\tNSRect cellFrame = tableView.frameOfCellAtColumn(0, rowIndex);", "-\t\tNSRect imageFrame = theCell.imageRectForBounds(cellFrame);", "-\t\tNSPoint hitPoint = tableView.convertPoint_fromView_(NSApplication.sharedApplication().currentEvent().locationInWindow(), null);", "-\t\tboolean shouldTrack = OS.NSPointInRect(hitPoint, imageFrame) && (display.trackedButtonRow == -1 || display.trackedButtonRow == rowIndex) && !didSelect;", "-\t\tif (OS.NSPointInRect(hitPoint, imageFrame) && display.trackedButtonRow == -1 && !didSelect) display.trackedButtonRow = rowIndex;", "-\t\treturn shouldTrack;", "-\t} else {", "-\t\treturn tableView.isRowSelected(rowIndex);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6da64a124084a1b98efdbf57aa71b2b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "deae4ffede0b128d12edaa3fadba406eb7ad3185", "commitAfterChange": "b6d9911240fd498e3f172d356c74aa9dea6cee07", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 85, "signatureBeforeChange": "  int outlineView_selectionIndexesForProposedSelection (int id, int sel, int aTableView, int indexSet)", "signatureAfterChange": "  boolean outlineView_shouldTrackCell_forTableColumn_item(int id, int sel, \t\tint table, int cell, int tableColumn, int item)", "diff": ["-int /*long*/ outlineView_selectionIndexesForProposedSelection (int /*long*/ id, int /*long*/ sel, int /*long*/ aTableView, int /*long*/ indexSet) {", "-\t\tNSIndexSet indexes = new NSIndexSet(indexSet);", "-\t\tNSOutlineView table = new NSOutlineView(aTableView);\t\t\t", "-\t\tif (indexes.count() != 1 && table.selectedRow() != -1) {", "-\t\t\tNSIndexSet newSelection = (NSIndexSet)new NSIndexSet().alloc();", "-\t\t\tnewSelection = newSelection.initWithIndex(table.selectedRow());", "-\t\t\tnewSelection.autorelease();", "-\t\t\treturn newSelection.id;", "-\t", "-\treturn indexSet;", "+boolean outlineView_shouldTrackCell_forTableColumn_item(int /*long*/ id, int /*long*/ sel,", "+\t\tint /*long*/ table, int /*long*/ cell, /*long*/ int /*long*/ tableColumn, int /*long*/ item) {", "+\tNSCell theCell = new NSCell(cell);", "+\tNSOutlineView tableView = (NSOutlineView)view;", "+\tint /*long*/ rowIndex = tableView.rowForItem(new id(item));", "+\tif (theCell.isKindOfClass(OS.class_NSButtonCell)) {", "+\t\t// Allow tracking of the checkbox area of the button, not the text itself.", "+\t\tint columnIndex = 0;", "+\t\tfor (int i=0; i<columnCount; i++) {", "+\t\t\tif (columns [i].nsColumn.id == tableColumn) {", "+\t\t\t\tcolumnIndex = i;", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t}", "+\t\tNSRect cellFrame = tableView.frameOfCellAtColumn(columnIndex, rowIndex);", "+\t\tNSRect imageFrame = theCell.imageRectForBounds(cellFrame);", "+\t\tNSPoint hitPoint = tableView.convertPoint_fromView_(NSApplication.sharedApplication().currentEvent().locationInWindow(), null);", "+\t\tboolean shouldTrack = OS.NSPointInRect(hitPoint, imageFrame) && (display.trackedButtonRow == -1 || display.trackedButtonRow == rowIndex) && !didSelect;", "+\t\tif (OS.NSPointInRect(hitPoint, imageFrame) && display.trackedButtonRow == -1 && !didSelect) display.trackedButtonRow = rowIndex;", "+\t\treturn shouldTrack;", "+\t} else {", "+\t\treturn tableView.isRowSelected(rowIndex);", "+\t}", "+}"]}], "num": 63427}