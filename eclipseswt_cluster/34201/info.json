{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fcf9761f3d656691f5552f0ae2b610b2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06f8572899df24cad8f87968c617c63a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/motif/org/eclipse/swt/program/Program.java", "commitBeforeChange": "6215640175ccfe897f3840a8201a886b754fe47e", "commitAfterChange": "45ceafadc60325534082e286f4aafee627d1de0d", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 10, "signatureBeforeChange": "  static String gnome_getMimeType(String name)", "signatureAfterChange": "  private static String gnome_getMimeTypeCommand(String mimeType, boolean gnomeExpectUri[])", "diff": ["+private static String gnome_getMimeTypeCommand(String mimeType, boolean gnomeExpectUri[]) {", "+\tString command = null;", "+\tGnomeVFSMimeApplication application = new GnomeVFSMimeApplication();", "+\tbyte[] mimeTypeBuffer = Converter.wcsToMbcs(null, mimeType+'\\0');", "+\tint ptr = GNOME.gnome_vfs_mime_get_default_application(mimeTypeBuffer);", "+\tif (ptr != 0) {", "+\t\tGNOME.memmove(application, ptr, GnomeVFSMimeApplication.sizeof);", "+\t\tint\tlength = OS.strlen(application.command);", "+\t\tbyte[] buffer = new byte[length];", "+\t\tOS.memmove(buffer, application.command, length);", "+\t\tcommand = new String(Converter.mbcsToWcs(null, buffer));", "+\t\tgnomeExpectUri[0] = application.expects_uris == GNOME.GNOME_VFS_MIME_APPLICATION_ARGUMENT_TYPE_URIS;", "+\t\tGNOME.gnome_vfs_mime_application_free(ptr);", "+\treturn command;", "-", "-static String gnome_getMimeType(String name) {", "-\t/* Use the character encoding for the default locale */", "-\tbyte [] nameBuffer = Converter.wcsToMbcs (null, name, true);", "-\tint ptr = GNOME.gnome_mime_type(nameBuffer);", "-\tif (ptr == 0) return null;", "-\tint length = OS.strlen(ptr);", "-\tbyte[] mimeBuffer = new byte[length];", "-\tOS.memmove(mimeBuffer, ptr, length);", "-\t/* Use the character encoding for the default locale */", "-\treturn new String(Converter.mbcsToWcs(null, mimeBuffer));", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdcddcf7d44f1485f1e59dc9ba142fdd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/carbon/org/eclipse/swt/printing/Printer.java", "commitBeforeChange": "5a4c552f73a8e969581b8a8c05bb5c55bdc6159e", "commitAfterChange": "8a3246b84b77d2fe701231e916fd116bcc49a2df", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 11, "signatureBeforeChange": " public Point getDPI()", "signatureAfterChange": " public Point getDPI()", "diff": ["-\tcheckDevice();", "-\t/* Use the character encoding for the default locale */", "-\t/* AW", "-\tbyte [] buffer = Converter.wcsToMbcs(null, \"default-printer-resolution\", true);", "-\tint pool = OS.XpGetOneAttribute(xDisplay, printContext, OS.XPDocAttr, buffer);", "-    int length = OS.strlen(pool);", "-\tbuffer = new byte[length];", "-\tOS.memmove(buffer, pool, length);", "-\tOS.XtFree(pool);", "-\tString resolution = new String(buffer, 0, buffer.length);", "-\tint res = 300; // default", "-\tif (resolution.length() == 0) {", "-\t*/", "-\t\t/* If we can't get the info from the DocAttrs, ask the printer. */", "-\t\t/* Use the character encoding for the default locale */", "-\t\t/* AW", "-\t\tbuffer = Converter.wcsToMbcs(null, \"printer-resolutions-supported\", true);", "-\t\tpool = OS.XpGetOneAttribute(xDisplay, printContext, OS.XPPrinterAttr, buffer);", "-    \t\tlength = OS.strlen(pool);", "-\t\tbuffer = new byte[length];", "-\t\tOS.memmove(buffer, pool, length);", "-\t\tOS.XtFree(pool);", "-\t\tint n = 0;", "-\t\twhile (!Compatibility.isWhitespace((char)buffer[n]) && n < buffer.length) n++;", "-\t\tresolution = new String(buffer, 0, n);", "-\t}", "-\tif (resolution.length() != 0) {", "-\t\ttry {", "-\t\t\tres = Integer.parseInt(resolution);", "-\t\t} catch (NumberFormatException ex) {}", "-\t}", "-\treturn new Point(res, res);", "-\t*/", "-\treturn new Point(72, 72);", "+\treturn new Point(0, 0);"]}], "num": 34201}