{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "00c25939afe7751f06dd05c66da9ad0f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83511f5994d2b47ea50c8cbaf16d90ab", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "533b32a9baa75e76ca7b7877ee9b9581fe18792e", "commitAfterChange": "9fedd0db5879e16f4217a567123278513c1d3514", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "\r void adjustItemWidths (Vector row, int width)", "signatureAfterChange": "\r void adjustItemWidths (Vector row, int width)", "diff": ["-\tint rowWidth = bounds.x + bounds.width;\r", "+\tint borders = getBorderWidth() * 2;\r", "+\tint rowWidth = bounds.x + bounds.width + borders;\r", "-\tif (width > rowWidth || width > bounds.x + CoolItem.MINIMUM_WIDTH) {\r", "-\t\tlast.setBounds(bounds.x, bounds.y, width - bounds.x, bounds.height);\r", "-\t\treturn;\r", "+\tint extraWidth = width - (bounds.x + CoolItem.MINIMUM_WIDTH + borders);\r", "+\tif (extraWidth < 0) {\r", "+\t\tmoveLeft(last, Math.abs(extraWidth)); \r", "-\t/* Shifting the last item ensures that all hidden items\r", "-\t   to its left are made visible as well.*/\r", "-\tlast.setBounds(bounds.x, bounds.y, CoolItem.MINIMUM_WIDTH, bounds.height);\r", "-\tmoveLeft(last, bounds.x - width + CoolItem.MINIMUM_WIDTH); \r", "+\tlast.setBounds(bounds.x, bounds.y, CoolItem.MINIMUM_WIDTH + extraWidth, bounds.height);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7324ec59ce1f13827404da4209dfe78", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "0eca40a26667c3712617b5dd23e67af76bcbab4d", "commitAfterChange": "c345d69dc06c2a69d5f698a12d1c7890b32841ad", "methodNumberBeforeChange": 114, "methodNumberAfterChange": 116, "signatureBeforeChange": " int getBottomIndex()", "signatureAfterChange": " int getBottomIndex()", "diff": ["-\tint lineCount = 1;", "-\tif (lineHeight != 0) {", "-\t\t// calculate the number of lines that are fully visible", "-\t\tint partialTopLineHeight = topIndex * lineHeight - verticalScrollOffset;", "-\t\tlineCount = (getClientArea().height - partialTopLineHeight) / lineHeight;", "+//\tint lineCount = 1;", "+//\tif (lineHeight != 0) {", "+//\t\t// calculate the number of lines that are fully visible", "+//\t\tint partialTopLineHeight = topIndex * lineHeight - verticalScrollOffset;", "+//\t\tlineCount = (getClientArea().height - partialTopLineHeight) / lineHeight;", "+//\t}", "+//\treturn Math.min(content.getLineCount() - 1, topIndex + Math.max(0, lineCount - 1));", "+\tint clientAreaHeight = getClientArea().height;", "+\tint bottomIndex = getLineIndex(clientAreaHeight);", "+\tif (bottomIndex > 0) {", "+\t\tint linePixel = getLinePixel(bottomIndex);", "+\t\tint lineHeight = lineCache.getLineHeight(bottomIndex);", "+\t\tif (linePixel + lineHeight > clientAreaHeight) {", "+\t\t\tbottomIndex--;", "+\t\t}", "-\treturn Math.min(content.getLineCount() - 1, topIndex + Math.max(0, lineCount - 1));", "+\treturn bottomIndex;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "811268bc84136c5312903da3cb01b363", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "7f06870c68e6cd50592de1618306ac4997d7e3b8", "commitAfterChange": "bbdec0fdbfbb88362f42e81e63fc5dac33f8b85a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  LRESULT CDDS_ITEMPOSTPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "signatureAfterChange": "  LRESULT CDDS_ITEMPOSTPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "diff": ["+\t\t\t\t\trect.left += 2;", "-\t\t\t\t\t\tif (index == 0) rect.left = Math.min (rect.right, rect.left + 2);", "-\t\t\t\t\t\tOS.SetRect (rect, rect.left + size.x + INSET, rect.top, rect.right - inset, rect.bottom);", "+\t\t\t\t\t\tint offset = i != 0 ? INSET : INSET + 2;", "+\t\t\t\t\t\tOS.SetRect (rect, rect.left + size.x + offset, rect.top, rect.right - inset, rect.bottom);", "-\t\t\t\t\t\tOS.SetRect (rect, rect.left + INSET, rect.top, rect.right - inset, rect.bottom);", "+\t\t\t\t\t\tint offset = i != 0 ? INSET : 2;", "+\t\t\t\t\t\tOS.SetRect (rect, rect.left + offset, rect.top, rect.right - inset, rect.bottom);", "-\t\t\t\t\t\t\trect.left = Math.min (rect.right, rect.left + 2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abc5f062e19cb305831db3cd36b082f3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Scrollable.java", "commitBeforeChange": "81639620c45c8f47d7dc6c6278208e66ec1e7699", "commitAfterChange": "26107c4df698e35753dc6a3dcb5e875af68d4199", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Rectangle computeTrim (int x, int y, int width, int height)", "signatureAfterChange": " public Rectangle computeTrim (int x, int y, int width, int height)", "diff": ["-\tcheckWidget ();", "-\tint hs=0, vs=0;", "-\t/* FIXME - just measured the width on one particular theme */", "-\tif ((style&SWT.H_SCROLL)!=0) hs=18;", "-\tif ((style&SWT.V_SCROLL)!=0) vs=18;\t", "-\treturn new Rectangle (x, y, width+vs, height+hs);", "+\tcheckWidget();", "+\t//FIXME - figure out scrollbar size and border", "+\tint border = 0;", "+\tint trimX = x - border, trimY = y - border;", "+\tint trimWidth = width + (border * 2), trimHeight = height + (border * 2);", "+\tif (horizontalBar != null) trimHeight += 18;", "+\tif (verticalBar != null) trimWidth += 18;", "+\treturn new Rectangle (trimX, trimY, trimWidth, trimHeight);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "010b81664167a8fa9bc79f2e4e3775da", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "d4eb14ad4f7b1074d4935c2b9211f94b2750616d", "commitAfterChange": "7d562ae8941ad5655a314eac8dd19e3b2aaef50c", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "\r protected void init ()", "signatureAfterChange": "\r protected void init ()", "diff": ["-\tif (windowProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);\t\r", "-\r", "+\tif (windowProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);\r", "+\t\r", "-\twindowClass = Converter.wcsToMbcs (0, WindowName + windowClassCount++ + \"\\0\");\r", "+\twindowClass = new TCHAR (0, WindowName + windowClassCount++, true);\r", "-\tWNDCLASSEX lpWndClass = new WNDCLASSEX ();\r", "-\tlpWndClass.cbSize = WNDCLASSEX.sizeof;\r", "-\tif (OS.GetClassInfoEx (hInstance, windowClass, lpWndClass)) {\r", "+\tWNDCLASS lpWndClass = new WNDCLASS ();\r", "+\tif (OS.GetClassInfo (hInstance, windowClass, lpWndClass)) {\r", "-\tlpWndClass.lpszClassName = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, windowClass.length);\r", "-\tOS.MoveMemory (lpWndClass.lpszClassName, windowClass, windowClass.length); \r", "-\tOS.RegisterClassEx (lpWndClass);\r", "-\tOS.HeapFree (hHeap, 0, lpWndClass.lpszClassName);\r", "+\tint byteCount = windowClass.length () * TCHAR.sizeof;\r", "+\tint lpszClassName = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount);\r", "+\tlpWndClass.lpszClassName = lpszClassName;\r", "+\tOS.MoveMemory (lpszClassName, windowClass, byteCount);\r", "+\tOS.RegisterClass (lpWndClass);\r", "+//\tOS.HeapFree (hHeap, 0, lpszClassName);\r"]}], "num": 50946}