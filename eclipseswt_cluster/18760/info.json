{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "858ee8f09cefcf4f308b7ec8d886b819", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3ccff96d985b09330a057226e252c20", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "9e4aa4f79d8d08d57d797296be9d3269723e755b", "commitAfterChange": "c7a37ce473beb9045c99b97900ef561257b98af2", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 68, "signatureBeforeChange": " \t \tid getRangeForLineParameterizedAttribute (id parameter, int childID)", "signatureAfterChange": " \t \tid getRangeForLineParameterizedAttribute (id parameter, int childID)", "diff": ["-", "-\t\tAccessibleControlEvent event = new AccessibleControlEvent(this);", "-\t\tevent.childID = childID;", "-\t\tevent.result = null;", "-\t\tfor (int i = 0; i < accessibleControlListeners.size(); i++) {", "-\t\t\tAccessibleControlListener listener = (AccessibleControlListener) accessibleControlListeners.elementAt(i);", "-\t\t\tlistener.getValue(event);", "-\t\t}", "-\t\tif (event.result != null) {", "-\t\t\tNSRange range = rangeForLineNumber (lineNumber, event.result);", "-\t\t\tif (range.location != -1) {", "-\t\t\t\treturnValue = NSValue.valueWithRange(range);", "+\t\tif (accessibleTextExtendedListeners.size() > 0) {", "+\t\t\tAccessibleTextExtendedEvent event = new AccessibleTextExtendedEvent(this);", "+\t\t\tevent.childID = childID;", "+\t\t\tevent.start = event.end = 0;", "+\t\t\tevent.count = lineNumber;", "+\t\t\tevent.type = ACC.TEXT_BOUNDARY_LINE;", "+\t\t\tfor (int i = 0; i < accessibleTextExtendedListeners.size(); i++) {", "+\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) accessibleTextExtendedListeners.elementAt(i);", "+\t\t\t\tlistener.getText(event);", "+\t\t\t}", "+\t\t\tNSRange range = new NSRange();", "+\t\t\trange.location = event.start;", "+\t\t\trange.length = event.end - event.start + 1;", "+\t\t\treturnValue = NSValue.valueWithRange(range);", "+\t\t} else {", "+\t\t\tAccessibleControlEvent event = new AccessibleControlEvent(this);", "+\t\t\tevent.childID = childID;", "+\t\t\tevent.result = null;", "+\t\t\tfor (int i = 0; i < accessibleControlListeners.size(); i++) {", "+\t\t\t\tAccessibleControlListener listener = (AccessibleControlListener) accessibleControlListeners.elementAt(i);", "+\t\t\t\tlistener.getValue(event);", "+\t\t\t}", "+\t\t\tif (event.result != null) {", "+\t\t\t\tNSRange range = rangeForLineNumber (lineNumber, event.result);", "+\t\t\t\tif (range.location != -1) {", "+\t\t\t\t\treturnValue = NSValue.valueWithRange(range);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e56dad08f902fb829a3e79ec17dd8178", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGeneratorUI.java", "commitBeforeChange": "8ed739aeb6bdf363f7b0e5c8d1e2c8f2b47241eb", "commitAfterChange": "37dd049635a9e27d1a8ac8a9fdb6deee1a837896", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tTreeItem addChild (Node node, TreeItem superItem, Hashtable extras)", "signatureAfterChange": "  \tTreeItem addChild (Node node, TreeItem superItem, Hashtable extras)", "diff": ["-\t\tNamedNodeMap attributes = node.getAttributes();", "-\t\tNode nameAttrib = getNameAttribute(attributes);", "+\t\tNode nameAttrib = gen.getNameAttribute(node);", "-\t\tNode extra = (Node)extras.get(getKey(node));", "+\t\titem.setData(node);", "+\t\tNode extra = (Node)extras.get(gen.getKey(node));", "-\t\t\tNamedNodeMap extraAttributes = extra.getAttributes();", "-\t\t\tNode gen = extraAttributes.getNamedItem(\"swt_gen\");", "-\t\t\tif (gen != null && gen.getNodeValue().equals(\"true\")) {", "-\t\t\t\titem.setChecked(true);", "+\t\t\tNamedNodeMap attributes = extra.getAttributes();", "+\t\t\tNode gen = attributes.getNamedItem(\"swt_gen\");", "+\t\t\titem.setChecked(gen != null && gen.getNodeValue().equals(\"true\"));", "+\t\t\tfor (int i = 0; i < attributes.getLength(); i++) {", "+\t\t\t\tNode attrib = attributes.item(i);", "+\t\t\t\tString attriName = attrib.getNodeName();", "+\t\t\t\tif (attriName.equals(\"swt_gen\") || !attriName.startsWith(\"swt_\")) continue;", "+\t\t\t\tint columnIndex = getColumnFor(attrib.getNodeName());", "+\t\t\t\titem.setText(columnIndex, attrib.getNodeValue());", "+\t\tNamedNodeMap attributes = node.getAttributes();", "-\t\t\ttext = attrib.getNodeName();", "-\t\t\tint columnIndex = getColumnFor(text);", "+\t\t\tint columnIndex = getColumnFor(attrib.getNodeName());", "+        boolean checked = item.getChecked();", "+        checkItems(item, checked);", "+        checkPath(item.getParentItem(), checked, false);"]}], "num": 18760}