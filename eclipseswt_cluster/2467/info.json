{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3e21c478cf30d9e90a2796533fa614a1", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77648843833227434414220e9a2a9744", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "26107c4df698e35753dc6a3dcb5e875af68d4199", "commitAfterChange": "98bbb377c8fa0a6157f81dc426a5fddf7133e096", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["-\tswitch (style & (SWT.SEPARATOR | SWT.RADIO | SWT.CHECK | SWT.PUSH | SWT.DROP_DOWN)) {", "-\t\tcase SWT.PUSH:", "-\t\tcase 0:", "-\t\t\thandle = OS.gtk_toolbar_insert_element (parent.handle,", "-\t\t\tOS.GTK_TOOLBAR_CHILD_BUTTON,", "-\t\t\t0, new byte[1], null, null,", "-\t\t\t0, 0, 0,", "-\t\t\tindex);", "-\t\t\treturn;", "-\t\tcase SWT.RADIO:", "-\t\t\thandle = OS.gtk_toolbar_insert_element (parent.handle,", "-\t\t\t\tOS.GTK_TOOLBAR_CHILD_RADIOBUTTON,", "-\t\t\t\t0, new byte[1], null, null,", "-\t\t\t\t0, 0, 0,", "-\t\t\t\tindex);", "-\t\t\treturn;", "-\t\tcase SWT.CHECK:", "-\t\t\thandle = OS.gtk_toolbar_insert_element (parent.handle,", "-\t\t\t\tOS.GTK_TOOLBAR_CHILD_TOGGLEBUTTON,", "-\t\t\t\t0, new byte[1], null, null,", "-\t\t\t\t0, 0, 0,", "-\t\t\t\tindex);", "-\t\t\treturn;", "+\tif ((style & SWT.SEPARATOR) == 0) {", "+\t\tboxHandle = (parent.style & SWT.RIGHT) != 0 ? OS.gtk_hbox_new (false, 0) : OS.gtk_vbox_new (false, 0);", "+\t\tif (boxHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\tlabelHandle = OS.gtk_label_new_with_mnemonic (null);", "+\t\tif (labelHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\tDisplay display = getDisplay ();", "+\t\tpixmapHandle = OS.gtk_pixmap_new (display.nullPixmap, 0);", "+\t\tif (pixmapHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\tOS.gtk_container_add (boxHandle, pixmapHandle);", "+\t\tOS.gtk_container_add (boxHandle, labelHandle);", "+\t\tOS.gtk_widget_show (boxHandle);", "+\t}\t", "+\tint bits = SWT.SEPARATOR | SWT.RADIO | SWT.CHECK | SWT.PUSH | SWT.DROP_DOWN;", "+\tswitch (style & bits) {", "-\t\t\tboxHandle = OS.gtk_event_box_new();", "-\t\t\tif (boxHandle==0) error(SWT.ERROR_NO_HANDLES);", "-\t\t\tboolean isVertical = (parent.getStyle()&SWT.VERTICAL) != 0;", "-\t\t\thandle = isVertical? OS.gtk_hseparator_new() : OS.gtk_vseparator_new();", "-\t\t\tif (handle==0) error(SWT.ERROR_NO_HANDLES);", "-\t\t\tOS.gtk_toolbar_insert_widget (", "-\t\t\t\tparent.handle,", "-\t\t\t\tboxHandle,", "-\t\t\t\tnew byte[1], new byte[1],", "-\t\t\t\tindex);", "-\t\t\tOS.gtk_container_add(boxHandle, handle);", "-\t\t\tOS.gtk_widget_show(boxHandle);", "-\t\t\tOS.gtk_widget_show(handle);", "-\t\t\treturn;", "+\t\t\thandle = OS.gtk_hbox_new (false, 0);", "+\t\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\t\tboolean isVertical = (parent.style & SWT.VERTICAL) != 0;", "+\t\t\tseparatorHandle = isVertical ? OS.gtk_hseparator_new() : OS.gtk_vseparator_new();", "+\t\t\tif (separatorHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\t\tOS.gtk_widget_set_size_request (separatorHandle, isVertical ? 15 : 2, isVertical ? 2 : 15);", "+\t\t\tOS.gtk_container_add (handle, separatorHandle);", "+\t\t\tOS.gtk_widget_show (separatorHandle);", "+\t\t\tbreak;", "-\t\t\t/* create the box */", "-\t\t\tisVertical = (parent.getStyle()&SWT.VERTICAL) != 0;", "-\t\t\tboxHandle = isVertical? OS.gtk_vbox_new(false, 0) : OS.gtk_hbox_new(false, 0);", "-\t\t\tif (boxHandle==0) error(SWT.ERROR_NO_HANDLES);", "-\t\t\t/* create the button */", "-\t\t\thandle = OS.gtk_button_new();", "-\t\t\tif (handle==0) error(SWT.ERROR_NO_HANDLES);", "-\t\t\tOS.gtk_button_set_relief(handle, OS.GTK_RELIEF_NONE);", "-\t\t\t/* create the arrow */", "+\t\t\thandle = OS.gtk_button_new ();", "+\t\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\t\tint arrowBoxHandle = OS.gtk_hbox_new (false, 0);", "+\t\t\tif (arrowBoxHandle == 0) error(SWT.ERROR_NO_HANDLES);", "-\t\t\tif (arrowHandle==0) error(SWT.ERROR_NO_HANDLES);", "-\t\t\tarrowButtonHandle = OS.gtk_button_new ();", "-\t\t\tif (arrowButtonHandle==0) error(SWT.ERROR_NO_HANDLES);", "-\t\t\tOS.gtk_button_set_relief(arrowButtonHandle, OS.GTK_RELIEF_NONE);", "-\t\t\tOS.gtk_container_set_border_width(arrowButtonHandle,0);", "-\t\t\t//?? LEAK", "-\t\t\tint style = OS.gtk_style_copy(OS.gtk_widget_get_style(arrowButtonHandle));", "-\t\t\tGtkStyle gtkStyle = new GtkStyle ();", "-\t\t\tOS.memmove(gtkStyle, style);", "-\t\t\tgtkStyle.xthickness = 0;", "-\t\t\tOS.memmove(style, gtkStyle);", "-\t\t\tOS.gtk_widget_set_style(arrowButtonHandle, style);", "-\t\t\t// when the arrow gets destroyed, it will dereference the clone", "-\t\t\t", "-\t\t\tOS.gtk_toolbar_insert_widget (", "-\t\t\t\tparent.handle,", "-\t\t\t\tboxHandle,", "-\t\t\t\tnew byte[1], new byte[1],", "-\t\t\t\tindex);", "-\t\t\tOS.gtk_box_pack_start(boxHandle, handle, true,true,0);", "-\t\t\tOS.gtk_box_pack_end(boxHandle, arrowButtonHandle, true,true,0);", "-\t\t\tOS.gtk_container_add (arrowButtonHandle, arrowHandle);", "-\t\t\tOS.gtk_widget_show(handle);", "+\t\t\tif (arrowHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\t\tOS.gtk_container_add (handle, arrowBoxHandle);", "+\t\t\tOS.gtk_container_add (arrowBoxHandle, boxHandle);\t", "+\t\t\tOS.gtk_container_add (arrowBoxHandle, arrowHandle);\t", "+\t\t\tOS.gtk_widget_show (arrowBoxHandle);", "-\t\t\tOS.gtk_widget_show (arrowButtonHandle);", "-\t\t\tOS.gtk_widget_show(boxHandle);", "-\t\t\treturn;", "+\t\t\tbreak;", "+\t\tcase SWT.RADIO:", "+\t\t\thandle = OS.gtk_radio_button_new (0);", "+\t\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\t\tOS.gtk_toggle_button_set_mode (handle, false);", "+\t\t\tOS.gtk_container_add (handle, boxHandle);\t", "+\t\t\tbreak;", "+\t\tcase SWT.CHECK:", "+\t\t\thandle = OS.gtk_toggle_button_new ();", "+\t\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\t\tOS.gtk_toggle_button_set_mode (handle, false);", "+\t\t\tOS.gtk_container_add (handle, boxHandle);\t", "+\t\t\tbreak;", "+\t\tcase SWT.PUSH:", "-\t\t\t/*", "-\t\t\t * Can not specify more than one style", "-\t\t\t */", "-\t\t\terror(SWT.ERROR_ITEM_NOT_ADDED);", "+\t\t\thandle = OS.gtk_button_new ();", "+\t\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\t\tOS.gtk_container_add (handle, boxHandle);", "+\t\t\tbreak;", "-}", "+\tif ((style & SWT.SEPARATOR) == 0) {", "+\t\tbyte [] button_relief = Converter.wcsToMbcs(null, \"button_relief\", true);", "+\t\tint [] relief = new int [1];", "+\t\tOS.gtk_widget_style_get (parent.handle, button_relief, relief, 0);", "+\t\tOS.gtk_button_set_relief (handle, relief [0]);", "+\t\tOS.GTK_WIDGET_UNSET_FLAGS (handle, OS.GTK_CAN_FOCUS);", "+\t}", "+\tOS.gtk_widget_show (handle);", "+\tOS.gtk_toolbar_insert_widget (parent.handle, handle, new byte[1], new byte[1], index);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55a0e782319c5fbc55c01a4a97fe55df", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "d4eb14ad4f7b1074d4935c2b9211f94b2750616d", "commitAfterChange": "7d562ae8941ad5655a314eac8dd19e3b2aaef50c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r public String open ()", "signatureAfterChange": "\r public String open ()", "diff": ["-\tif (title == null) title = \"\";\r", "+\tif (title == null) title = \"\";\t\r", "-\tbyte [] buffer3 = Converter.wcsToMbcs (0, title, true);\r", "-\tint lpstrTitle = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, buffer3.length);\r", "-\tOS.MoveMemory (lpstrTitle, buffer3, buffer3.length); \r", "+\tTCHAR buffer3 = new TCHAR (0, title, true);\r", "+\tint byteCount3 = buffer3.length () * TCHAR.sizeof;\r", "+\tint lpstrTitle = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount3);\r", "+\tOS.MoveMemory (lpstrTitle, buffer3, byteCount3); \r", "-\tbyte [] buffer4 = Converter.wcsToMbcs (0, strFilter, true);\r", "-\tint lpstrFilter = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, buffer4.length);\r", "-\tOS.MoveMemory (lpstrFilter, buffer4, buffer4.length);\r", "+\tTCHAR buffer4 = new TCHAR (0, strFilter, true);\r", "+\tint byteCount4 = buffer4.length () * TCHAR.sizeof;\r", "+\tint lpstrFilter = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount4);\r", "+\tOS.MoveMemory (lpstrFilter, buffer4, byteCount4);\r", "-\tbyte [] name = Converter.wcsToMbcs (0, fileName, false);\r", "-\tif (filterPath == null) filterPath = \"\";\r", "-\t/* Use the character encoding for the default locale */\r", "-\tbyte [] path = Converter.wcsToMbcs (0, filterPath, false);\r", "+\tTCHAR name = new TCHAR (0, fileName, true);\r", "-\tbyte [] buffer2 = new byte [name.length + 1];\r", "-\tSystem.arraycopy (name, 0, buffer2, 0, name.length);\r", "-\tif (OS.GetFileTitle (buffer2, null, (short) 0) < 0) {\r", "-\t\tname = new byte [0];\r", "+\tif (!OS.IsWinCE) {\r", "+\t\tif (OS.GetFileTitle (name, null, (short) 0) < 0) {\r", "+\t\t\tname = new TCHAR (0, \"\", true);\r", "+\t\t}\r", "-\tint bufferSize = 256;\r", "-\tif ((style & SWT.MULTI) != 0) bufferSize = Math.max (256, BUFFER_SIZE);\r", "-\tint lpstrFile = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, bufferSize);\r", "-\tOS.MoveMemory (lpstrFile, name, Math.min (name.length, bufferSize - 1)); \r", "+\tint nMaxFile = 256;\r", "+\tif ((style & SWT.MULTI) != 0) nMaxFile = Math.max (nMaxFile, BUFFER_SIZE);\r", "+\tint byteCount = nMaxFile * TCHAR.sizeof;\r", "+\tint lpstrFile = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount);\r", "+\tint byteCountFile = Math.min (name.length () * TCHAR.sizeof, byteCount - TCHAR.sizeof);\r", "+\tOS.MoveMemory (lpstrFile, name, byteCountFile); \r", "-\tint lpstrInitialDir = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, bufferSize);\r", "-\tOS.MoveMemory (lpstrInitialDir, path, Math.min (path.length, bufferSize - 1)); \r", "+\tif (filterPath == null) filterPath = \"\";\r", "+\t/* Use the character encoding for the default locale */\r", "+\tTCHAR path = new TCHAR (0, filterPath, true);\r", "+\tint lpstrInitialDir = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount);\r", "+\tint byteCountDir = Math.min (path.length () * TCHAR.sizeof, byteCount - TCHAR.sizeof);\r", "+\tOS.MoveMemory (lpstrInitialDir, path, byteCountDir); \r", "-\tstruct.nMaxFile = bufferSize;\r", "+\tstruct.nMaxFile = nMaxFile;\r", "-\t\tOS.MoveMemory (lpstrFile, new byte [1], 1);\r", "+\t\tOS.MoveMemory (lpstrFile, new TCHAR (0, \"\", true), TCHAR.sizeof);\r", "-\t\tint count = 0;\r", "-\t\tfileNames = new String [1];\r", "-\t\tbyte [] buffer = new byte [struct.nMaxFile];\r", "-\t\tOS.MoveMemory (buffer, lpstrFile, buffer.length);\r", "-\t\tbyte [] prefix = new byte [struct.nFileOffset - 1];\r", "-\t\tSystem.arraycopy (buffer, 0, prefix, 0, prefix.length);\r", "+\t\t\r", "-\t\tfilterPath = new String (Converter.mbcsToWcs (0, prefix));\r", "+\t\tTCHAR buffer = new TCHAR (0, struct.nMaxFile);\r", "+\t\tint byteCount1 = buffer.length () * TCHAR.sizeof;\r", "+\t\tOS.MoveMemory (buffer, lpstrFile, byteCount1);\r", "+\t\t\r", "+\t\t/* Use the character encoding for the default locale */\r", "+\t\tTCHAR prefix = new TCHAR (0, struct.nFileOffset - 1);\r", "+\t\tint byteCount2 = prefix.length () * TCHAR.sizeof;\r", "+\t\tOS.MoveMemory (prefix, lpstrFile, byteCount2);\r", "+\t\tfilterPath = prefix.toString (0, prefix.length ());\r", "+\t\t\r", "+\t\t/*\r", "+\t\t* Get each file from the buffer.  Files are delimited\r", "+\t\t* by a NULL character with 2 NULL characters at the end.\r", "+\t\t*/\r", "+\t\tint count = 0;\r", "+\t\tfileNames = new String [(style & SWT.MULTI) != 0 ? 4 : 1];\r", "-\t\t\twhile (end < buffer.length && buffer [end] != 0) end++;\r", "-\t\t\tbyte [] buffer1 = new byte [end - start];\r", "-\t\t\tSystem.arraycopy (buffer, start, buffer1, 0, buffer1.length);\r", "+\t\t\twhile (end < buffer.length () && buffer.tcharAt (end) != 0) end++;\r", "+\t\t\tString string = buffer.toString (start, end - start);\r", "-\t\t\t/* Use the character encoding for the default locale */\r", "-\t\t\tString string = new String (Converter.mbcsToWcs (0, buffer1));\r", "-\t\t} while (start < buffer.length && buffer [start] != 0);\r", "+\t\t} while (start < buffer.length () && buffer.tcharAt (start) != 0);\r", "+\t\t\r"]}], "num": 2467}