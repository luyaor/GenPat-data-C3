{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1731df08caea36cdd5674fe1b879dbd6", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "977c2088abeae68b585ab2b2336fabd4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "475e439e4759a6c2dcfaf3351506dbb3f18de1a4", "commitAfterChange": "5d349ccba41d0f7ef226037e533a9e5997cf8ec1", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " public void fillGradientRectangle(int x, int y, int width, int height, boolean vertical)", "signatureAfterChange": " public void fillGradientRectangle(int x, int y, int width, int height, boolean vertical)", "diff": ["-\t\t\tNSColor startingColor, endingColor;", "-\t\t\tif (OS.VERSION < 0x1060) {", "-\t\t\t\tstartingColor = NSColor.colorWithDeviceRed(fromRGB.red / 255f, fromRGB.green / 255f, fromRGB.blue / 255f, data.alpha / 255f);", "-\t\t\t\tendingColor = NSColor.colorWithDeviceRed(toRGB.red / 255f, toRGB.green / 255f, toRGB.blue / 255f, data.alpha / 255f);", "-\t\t\t} else {", "-\t\t\t\tstartingColor = NSColor.colorWithCalibratedRed(fromRGB.red / 255f, fromRGB.green / 255f, fromRGB.blue / 255f, data.alpha / 255f);", "-\t\t\t\tendingColor = NSColor.colorWithCalibratedRed(toRGB.red / 255f, toRGB.green / 255f, toRGB.blue / 255f, data.alpha / 255f);", "-\t\t\t}", "+\t\t\tNSColor startingColor = NSColor.colorWithCalibratedRed(fromRGB.red / 255f, fromRGB.green / 255f, fromRGB.blue / 255f, data.alpha / 255f);", "+\t\t\tNSColor endingColor = NSColor.colorWithCalibratedRed(toRGB.red / 255f, toRGB.green / 255f, toRGB.blue / 255f, data.alpha / 255f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9ba6e615ee23010297fcfc2055496ba", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "2c8787f90b3c8a7312f4b411ab7ee4586da3407f", "commitAfterChange": "a0c1f03fb4ceb2772afc376ff5167fd9d3ca7414", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "signatureAfterChange": " public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "diff": ["-\t\tif (cairo != 0 && OS.GTK_VERSION >= OS.VERSION(2, 8, 0)) {", "+\t\tif (cairo != 0) {", "-\t\t\t\tint width = (flags & SWT.FULL_SELECTION) != 0 ? 0x7fffffff : height / 3;", "-\t\t\t\tif (cairo != 0 && OS.GTK_VERSION >= OS.VERSION(2, 8, 0)) {", "+\t\t\t\tint width = (flags & SWT.FULL_SELECTION) != 0 ? 0x7fff : height / 3;", "+\t\t\t\tif (cairo != 0) {", "-\t\tif (cairo != 0 && OS.GTK_VERSION >= OS.VERSION(2, 8, 0)) {", "+\t\tif (cairo != 0) {", "-\t\tif (cairo != 0 && OS.GTK_VERSION >= OS.VERSION(2, 8, 0)) {", "+\t\tif (cairo != 0) {", "-\t\t\tif (cairo != 0 && OS.GTK_VERSION >= OS.VERSION(2, 8, 0)) {", "+\t\t\tif (cairo != 0) {", "-\t\t\tif (cairo != 0 && OS.GTK_VERSION >= OS.VERSION(2, 8, 0)) {", "+\t\t\tif (cairo != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3c8b3e8ea4ade2d6a9597f5ab941881", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "430bd34b39bf66d9727e00e542cf1f188b2721be", "commitAfterChange": "1e98dbe1530e9e3b1a311cfb51720f74be64f75f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  LRESULT CDDS_ITEMPOSTPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "signatureAfterChange": "  LRESULT CDDS_ITEMPOSTPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "diff": ["-\t\tif (EXPLORER_THEME) {", "-\t\t\tif (!OS.IsWinCE && OS.WIN32_VERSION >= OS.VERSION (6, 0)) {", "-\t\t\t\tif (explorerTheme) {", "-\t\t\t\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "-\t\t\t\t\tif ((bits & OS.TVS_TRACKSELECT) != 0) {", "-\t\t\t\t\t\tOS.SetTextColor (hDC, getForegroundPixel ());", "-\t\t\t\t\t}", "-\t\t\t\t}", "+\t\tif (explorerTheme) {", "+\t\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "+\t\t\tif ((bits & OS.TVS_TRACKSELECT) != 0) {", "+\t\t\t\tOS.SetTextColor (hDC, getForegroundPixel ());", "-\t\t\t\t\tif (EXPLORER_THEME) {", "-\t\t\t\t\t\tif (!OS.IsWinCE && OS.WIN32_VERSION >= OS.VERSION (6, 0)) {", "-\t\t\t\t\t\t\tif (explorerTheme) {", "-\t\t\t\t\t\t\t\tboolean hot = (nmcd.uItemState & OS.CDIS_HOT) != 0;", "-\t\t\t\t\t\t\t\tif (selected || hot) {", "-\t\t\t\t\t\t\t\t\tRECT pRect = new RECT ();", "-\t\t\t\t\t\t\t\t\tOS.SetRect (pRect, nmcd.left, nmcd.top, nmcd.right, nmcd.bottom);", "-\t\t\t\t\t\t\t\t\tif (count > 0 && hwndHeader != 0) {", "-\t\t\t\t\t\t\t\t\t\tint totalWidth = 0;", "-\t\t\t\t\t\t\t\t\t\tHDITEM hdItem = new HDITEM ();", "-\t\t\t\t\t\t\t\t\t\thdItem.mask = OS.HDI_WIDTH;", "-\t\t\t\t\t\t\t\t\t\tfor (int j=0; j<count; j++) {", "-\t\t\t\t\t\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEM, j, hdItem);", "-\t\t\t\t\t\t\t\t\t\t\ttotalWidth += hdItem.cxy;", "-\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\tif (totalWidth > clientRect.right - clientRect.left) {", "-\t\t\t\t\t\t\t\t\t\t\tpRect.left = 0;", "-\t\t\t\t\t\t\t\t\t\t\tpRect.right = totalWidth;", "-\t\t\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\t\t\tpRect.left = clientRect.left;", "-\t\t\t\t\t\t\t\t\t\t\tpRect.right = clientRect.right;", "-\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\tdraw = false;", "-\t\t\t\t\t\t\t\t\tint hTheme = OS.OpenThemeData (handle, Display.TREEVIEW);", "-\t\t\t\t\t\t\t\t\tint iStateId = selected ? OS.TREIS_SELECTED : OS.TREIS_HOT;", "-\t\t\t\t\t\t\t\t\tif (OS.GetFocus () != handle && selected && !hot) iStateId = OS.TREIS_SELECTEDNOTFOCUS;", "-\t\t\t\t\t\t\t\t\tOS.DrawThemeBackground (hTheme, hDC, OS.TVP_TREEITEM, iStateId, pRect, pClipRect);\t", "-\t\t\t\t\t\t\t\t\tOS.CloseThemeData (hTheme);", "+\t\t\t\t\tif (explorerTheme) {", "+\t\t\t\t\t\tboolean hot = (nmcd.uItemState & OS.CDIS_HOT) != 0;", "+\t\t\t\t\t\tif (selected || hot) {", "+\t\t\t\t\t\t\tRECT pRect = new RECT ();", "+\t\t\t\t\t\t\tOS.SetRect (pRect, nmcd.left, nmcd.top, nmcd.right, nmcd.bottom);", "+\t\t\t\t\t\t\tif (count > 0 && hwndHeader != 0) {", "+\t\t\t\t\t\t\t\tint totalWidth = 0;", "+\t\t\t\t\t\t\t\tHDITEM hdItem = new HDITEM ();", "+\t\t\t\t\t\t\t\thdItem.mask = OS.HDI_WIDTH;", "+\t\t\t\t\t\t\t\tfor (int j=0; j<count; j++) {", "+\t\t\t\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEM, j, hdItem);", "+\t\t\t\t\t\t\t\t\ttotalWidth += hdItem.cxy;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tif (totalWidth > clientRect.right - clientRect.left) {", "+\t\t\t\t\t\t\t\t\tpRect.left = 0;", "+\t\t\t\t\t\t\t\t\tpRect.right = totalWidth;", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tpRect.left = clientRect.left;", "+\t\t\t\t\t\t\t\t\tpRect.right = clientRect.right;", "+\t\t\t\t\t\t\tdraw = false;", "+\t\t\t\t\t\t\tint hTheme = OS.OpenThemeData (handle, Display.TREEVIEW);", "+\t\t\t\t\t\t\tint iStateId = selected ? OS.TREIS_SELECTED : OS.TREIS_HOT;", "+\t\t\t\t\t\t\tif (OS.GetFocus () != handle && selected && !hot) iStateId = OS.TREIS_SELECTEDNOTFOCUS;", "+\t\t\t\t\t\t\tOS.DrawThemeBackground (hTheme, hDC, OS.TVP_TREEITEM, iStateId, pRect, pClipRect);\t", "+\t\t\t\t\t\t\tOS.CloseThemeData (hTheme);", "-\t\t\t\t\tboolean draw = true;", "-\t\t\t\t\tif (EXPLORER_THEME) {", "-\t\t\t\t\t\tif (!OS.IsWinCE && OS.WIN32_VERSION >= OS.VERSION (6, 0)) {", "-\t\t\t\t\t\t\tif (explorerTheme) {", "-\t\t\t\t\t\t\t\tif ((style & SWT.FULL_SELECTION) == 0) draw = false;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tif (draw) fillBackground (hDC, OS.GetBkColor (hDC), rect);", "+\t\t\t\t\tif (!explorerTheme) fillBackground (hDC, OS.GetBkColor (hDC), rect);", "-\t\t\tif (EXPLORER_THEME) {", "-\t\t\t\tif (!OS.IsWinCE && OS.WIN32_VERSION >= OS.VERSION (6, 0)) {", "-\t\t\t\t\tif (explorerTheme) {", "-\t\t\t\t\t\tif (selected || (nmcd.uItemState & OS.CDIS_HOT) != 0) {", "-\t\t\t\t\t\t\tdrawBackground = false;", "-\t\t\t\t\t\t\tif ((style & SWT.FULL_SELECTION) == 0) {", "-\t\t\t\t\t\t\t\tif (index == 0) drawText = false;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "+\t\t\tif (explorerTheme) {", "+\t\t\t\tif (selected || (nmcd.uItemState & OS.CDIS_HOT) != 0) {", "+\t\t\t\t\tdrawBackground = false;", "+\t\t\t\t\tif ((style & SWT.FULL_SELECTION) == 0) {", "+\t\t\t\t\t\tif (index == 0) drawText = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "118dbc4cbfed81269d90bf106e76bf0c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "475e439e4759a6c2dcfaf3351506dbb3f18de1a4", "commitAfterChange": "5d349ccba41d0f7ef226037e533a9e5997cf8ec1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  NSAutoreleasePool checkGC (int mask)", "signatureAfterChange": "  NSAutoreleasePool checkGC (int mask)", "diff": ["-\t\t\tNSColor fg;", "-\t\t\tif (OS.VERSION < 0x1060)", "-\t\t\t\tfg = data.fg = NSColor.colorWithDeviceRed(color[0], color[1], color[2], data.alpha / 255f);", "-\t\t\telse", "-\t\t\t\tfg = data.fg = NSColor.colorWithCalibratedRed(color[0], color[1], color[2], data.alpha / 255f);", "+\t\t\tNSColor fg = data.fg = NSColor.colorWithCalibratedRed(color[0], color[1], color[2], data.alpha / 255f);", "-\t\t\tNSColor fg;", "-\t\t\tif (OS.VERSION < 0x1060)", "-\t\t\t\tfg = data.fg = NSColor.colorWithDeviceRed(color[0], color[1], color[2], data.alpha / 255f);", "-\t\t\telse", "-\t\t\t\tfg = data.fg = NSColor.colorWithCalibratedRed(color[0], color[1], color[2], data.alpha / 255f);", "+\t\t\tNSColor fg = data.fg = NSColor.colorWithCalibratedRed(color[0], color[1], color[2], data.alpha / 255f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cb0eeb9649585169d313d408c4be565", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "41bdd68738c0b4aa849e6a0d483da956ec49ea3d", "commitAfterChange": "5b490bb962a97813a4885b327f855701a501fd7e", "methodNumberBeforeChange": 220, "methodNumberAfterChange": 220, "signatureBeforeChange": " public void setEnabled (boolean enabled)", "signatureAfterChange": " public void setEnabled (boolean enabled)", "diff": ["-\t\t\tif (OS.GTK3 && OS.GTK_VERSION < OS.VERSION (3, 11, 9)) {", "-\t\t\t\tif (enterNotifyEventId > 0)", "-\t\t\t\t\tOS.g_signal_remove_emission_hook(enterNotifyEventSignalId, enterNotifyEventId);", "-\t\t\t\tenterNotifyEventId = 0;", "-", "-\t\t\t\t/*", "-\t\t\t\t * 427776: now we can remove any reference to the GdkWindow", "-\t\t\t\t * in a widget's internal hash table. this internal hash", "-\t\t\t\t * table was removed in GTK 3.11.9 so once only newer GTK is", "-\t\t\t\t * targeted, this workaround can be removed.", "-\t\t\t\t */", "-\t\t\t\tlong /*int*/ grabWidget = OS.g_object_get_qdata(enableWindow, SWT_GRAB_WIDGET);", "-\t\t\t\tif (grabWidget != 0) {", "-\t\t\t\t\tOS.g_object_set_qdata(grabWidget, GTK_POINTER_WINDOW, 0);", "-\t\t\t\t\tOS.g_object_set_qdata(enableWindow, SWT_GRAB_WIDGET, 0);", "-\t\t\t\t}", "-\t\t\t}", "-", "-\t\t\tOS.gdk_window_set_user_data (enableWindow, 0);", "-\t\t\tOS.gdk_window_destroy (enableWindow);", "-\t\t\tenableWindow = 0;", "+\t\t\tcleanupEnableWindow();", "-\t\t\tif (OS.GTK3 && OS.GTK_VERSION < OS.VERSION (3, 11, 9))", "+\t\t\tif (enterNotifyEventFunc != null)"]}], "num": 47533}