{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "03896f4b757604256896417de74e46ec", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2b0d39af1c93ca3f51cf91ec471f3a5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "60a9b0215b046632b51b65b9dcf0569516e0686e", "commitAfterChange": "610b674161bbe6c03029856ff3ee4570430b9973", "methodNumberBeforeChange": 279, "methodNumberAfterChange": 286, "signatureBeforeChange": " public void setStyleRange(StyleRange range)", "signatureAfterChange": " public void setStyleRange(StyleRange range)", "diff": ["-\tdefaultLineStyler.setStyleRange(range);", "+\tdefaultLineStyler.setStyleRange(range);\t", "+\t\tif (range.font != null) {", "+\t\t\tif (!isFixedLineHeight()) {", "+\t\t\t\tlineCache.setAllLinesDefaultHeight();", "+\t\t\t}", "+\t\t\tsetLineHeightVariable();", "+\t\t}", "-\t\tlineCache.reset(firstLine, lastLine - firstLine + 1, true);", "-", "-\t\tsetFixedLineHeight(range.font == null);", "+\t\tresetCache(firstLine, lastLine - firstLine + 1);", "-\t\tif (!isFixedLineHeight()) {", "-\t\t\tint partialTopIndex = getLineIndex(topMargin);", "-\t\t\tif (partialTopIndex >= firstLine) {", "-\t\t\t\tlineCache.calculate(firstLine, partialTopIndex - firstLine + 1);", "-\t\t\t\t//TODO fix verticalScrollOffset", "+\t\tif (isFixedLineHeight()) {", "+\t\t\t// if the style is not visible, there is no need to redraw", "+\t\t\tif (isAreaVisible(firstLine, lastLine)) {", "+\t\t\t\tint redrawTop = getLinePixel(firstLine);", "+\t\t\t\tint redrawBottom = getLinePixel(lastLine + 1);", "+\t\t\t\tsuper.redraw(0, redrawTop, getClientArea().width, redrawBottom - redrawTop, false);", "+\t\t} else {", "-\t\t\tdraw(0, redrawTop, clientArea.width, redrawBottom - redrawTop, true);\t\t\t", "-\t\t} else {\t\t\t", "-\t\t\t// if the style is not visible, there is no need to redraw", "-\t\t\tif (isAreaVisible(firstLine, lastLine)) {", "-\t\t\t\tint redrawTop = getLinePixel(firstLine);", "-\t\t\t\tint redrawBottom = getLinePixel(lastLine + 1);", "-\t\t\t\tdraw(0, redrawTop, getClientArea().width, redrawBottom - redrawTop, true);", "-\t\t\t}", "+\t\t\tsuper.redraw(0, redrawTop, clientArea.width, redrawBottom - redrawTop, false);\t\t\t", "-\t\t// clearing all styles", "-\t\tlineCache.reset(0, content.getLineCount(), false);", "-\t\tredraw();", "+\t\tresetCache(0, content.getLineCount());", "+\t\tsuper.redraw();", "-\t", "-\t// make sure that the caret is positioned correctly.", "-\t// caret location may change if font style changes.", "-\t// fixes 1G8FODP"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fee8ae9555c1197862a97187b3babafa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "b2239f422123a88b15e65957a6af7c2681a90cab", "commitAfterChange": "6bf174092d88d6ca6b0a2492d7221ddcd462d20e", "methodNumberBeforeChange": 166, "methodNumberAfterChange": 165, "signatureBeforeChange": "  static int fieldEditorProc(int id, int sel, int arg0, int arg1)", "signatureAfterChange": "  static Widget LookupWidget (int id, int sel)", "diff": ["+static Widget LookupWidget (int /*long*/ id, int /*long*/ sel) {", "+\tWidget widget = GetWidget(id);", "+\tif (widget == null) {", "+\t\tNSView view = new NSView (id);", "+\t\tif (view.isKindOfClass(OS.class_NSView)) {", "+\t\t\twhile (widget == null && (view = view.superview ()) != null) {", "+\t\t\t\twidget = GetWidget (view.id);", "+\t\t\t}", "+\t\t}", "-", "-static int /*long*/ fieldEditorProc(int /*long*/ id, int /*long*/ sel, int /*long*/ arg0, int /*long*/ arg1) {", "-\tWidget widget = null;", "-\tNSView view = new NSView (id);", "-\tdo {", "-\t\twidget = GetWidget (view.id);", "-\t\tif (widget != null) break;", "-\t\tview = view.superview ();", "-\t} while (view != null);", "-\tif (sel == OS.sel_shouldChangeTextInRange_replacementString_) {", "-\t\treturn widget.shouldChangeTextInRange_replacementString(id, sel, arg0, arg1) ? 1 : 0;", "-\t}", "-\treturn 0;", "+\treturn widget;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "765fc7b233c3e5ce01d21dff42d606f1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "6903a48c9a28004ca26f4cd40391ccf9248d20f7", "commitAfterChange": "af415d7e0bc4e49efa398f906a1d5ee777506b7b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \r void createItem (TabItem item, int index)", "signatureAfterChange": "\r \r void createItem (TabItem item, int index)", "diff": ["-\tint offset = 0;\r", "-\tfor (int i=0; i<count; i++) {\r", "-\t\tif (i == index) offset = 1;\r", "-\t\tint [] address = new int [1];\r", "-\t\tOS.memmove (address, oldPtr + (i * 4), 4);\r", "-\t\tint length = OS.strlen (address [0]);\r", "-\t\tint str = OS.malloc (length + 1);\r", "-\t\tif (str == 0) error (SWT.ERROR_ITEM_NOT_ADDED);\r", "-\t\tOS.memmove (str, address [0], length + 1);\r", "-\t\tOS.memmove (newPtr + ((i + offset) * 4), new int [] {str}, 4);\r", "+\tint j = 0;\r", "+\tint [] str = new int [1];\r", "+\tint [] address = new int [1];\r", "+\tfor (int i=0; i<=count; i++) {\r", "+\t\tif (i == index) {\r", "+\t\t\tstr [0] = OS.malloc (1);\r", "+\t\t} else {\r", "+\t\t\tOS.memmove (address, oldPtr + (j++ * 4), 4);\r", "+\t\t\tstr [0] = OS.strdup (address [0]);\r", "+\t\t}\r", "+\t\tif (str [0] == 0) error (SWT.ERROR_ITEM_NOT_ADDED);\r", "+\t\tOS.memmove (newPtr + (i * 4), str, 4);\r", "-\tint str = OS.malloc (1);\r", "-\tif (str == 0) error (SWT.ERROR_ITEM_NOT_ADDED);\r", "-\tOS.memmove (newPtr + (index * 4), new int [] {str}, 4);\r", "-\tfor (int i=0; i<count+1; i++) {\r", "-\t\tint [] address = new int [1];\r", "+\tfor (int i=0; i<=count; i++) {\r"]}], "num": 47824}