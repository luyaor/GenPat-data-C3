{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2022128a1dba318a6ff94216d647410d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5f1f3e2cbb49d96393097c028550a30", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "332536a6db872df6c8a55983e5b9507181322bee", "commitAfterChange": "c54491881240cacf62bc496023e05818dd936c3f", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "  void flagsChanged(int event)", "signatureAfterChange": "  boolean flagsChanged (int theEvent)", "diff": ["-void flagsChanged(int event) {", "+boolean flagsChanged (int theEvent) {", "+\tif ((state & SAFARI_EVENTS_FIX) != 0) return true;", "+\tint mask = 0;", "+\tNSEvent nsEvent = new NSEvent (theEvent);", "+\tint modifiers = nsEvent.modifierFlags ();", "+\tint keyCode = Display.translateKey (nsEvent.keyCode ());", "+\tif (keyCode == 0) return true;", "+\tswitch (keyCode) {", "+\t\tcase SWT.ALT: mask = OS.NSAlternateKeyMask; break;", "+\t\tcase SWT.CONTROL: mask = OS.NSControlKeyMask; break;", "+\t\tcase SWT.COMMAND: mask = OS.NSCommandKeyMask; break;", "+\t\tcase SWT.SHIFT: mask = OS.NSShiftKeyMask; break;", "+\t\tcase SWT.CAPS_LOCK:", "+\t\t\tEvent event = new Event();", "+\t\t\tevent.keyCode = keyCode;", "+\t\t\tsetInputState (event, nsEvent, SWT.KeyDown);", "+\t\t\tsendKeyEvent (SWT.KeyDown, event);", "+\t\t\tsetInputState (event, nsEvent, SWT.KeyUp);", "+\t\t\tsendKeyEvent (SWT.KeyUp, event);", "+\t\t\treturn true;", "+\t}", "+\tint type = (mask & modifiers) != 0 ? SWT.KeyDown : SWT.KeyUp;", "+\tEvent event = new Event();", "+\tevent.keyCode = keyCode;", "+\tsetInputState (event, nsEvent, type);", "+\treturn sendKeyEvent (type, event);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cec165d49e974b4d09a1fa9ef2c1d747", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Tracker.java", "commitBeforeChange": "3d7e9efdafdd63c6f019a7bc97c67f514df9a8ee", "commitAfterChange": "d7a6612b3248b775bccac31a7a2075f7133d0316", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  void key (NSEvent nsEvent)", "signatureAfterChange": "  void key (NSEvent nsEvent)", "diff": ["-\t//TODO send event", "-//\tif (!sendKeyEvent (SWT.KeyDown, theEvent)) return OS.noErr;", "+\tint nsType = (int)/*64*/nsEvent.type();", "+\tint nsKeyCode = nsEvent.keyCode();", "+\tint keyCode = Display.translateKey (nsKeyCode);", "+", "+\tswitch (nsType) {", "+\t\tcase OS.NSKeyDown:", "+\t\tcase OS.NSKeyUp: {", "+\t\t\tEvent event = new Event();", "+\t\t\tevent.keyCode = keyCode;", "+\t\t\tint type = nsType == OS.NSKeyDown ? SWT.KeyDown : SWT.KeyUp;", "+\t\t\tif (!setKeyState (event, type, nsEvent)) break;", "+\t\t\tsendKeyEvent (type, event);", "+\t\t\tbreak;", "+\t\t}", "+\t\tcase OS.NSFlagsChanged: {", "+\t\t\tint mask = 0;", "+\t\t\tswitch (keyCode) {", "+\t\t\t\tcase SWT.ALT: mask = OS.NSAlternateKeyMask; break;", "+\t\t\t\tcase SWT.CONTROL: mask = OS.NSControlKeyMask; break;", "+\t\t\t\tcase SWT.COMMAND: mask = OS.NSCommandKeyMask; break;", "+\t\t\t\tcase SWT.SHIFT: mask = OS.NSShiftKeyMask; break;", "+\t\t\t\tcase SWT.CAPS_LOCK:", "+\t\t\t\t\tEvent event = new Event();", "+\t\t\t\t\tevent.keyCode = keyCode;", "+\t\t\t\t\tsetInputState (event, nsEvent, SWT.KeyDown);", "+\t\t\t\t\tsendKeyEvent (SWT.KeyDown, event);", "+\t\t\t\t\tsetInputState (event, nsEvent, SWT.KeyUp);", "+\t\t\t\t\tsendKeyEvent (SWT.KeyUp, event);", "+\t\t\t\t\tbreak;", "+\t\t\t}", "+\t\t\tif (mask != 0) {", "+\t\t\t\tint type = (mask & modifierFlags) != 0 ? SWT.KeyDown : SWT.KeyUp;", "+\t\t\t\tEvent event = new Event();", "+\t\t\t\tevent.keyCode = keyCode;", "+\t\t\t\tsetLocationMask(event, nsEvent);", "+\t\t\t\tsetInputState (event, nsEvent, type);", "+\t\t\t\tif (!sendKeyEvent (type, event)) return;", "+\t\t\t}", "+\t\t\tbreak;", "+\t\t}", "+\t}", "+", "-\tswitch (nsEvent.keyCode()) {", "+\tswitch (nsKeyCode) {"]}], "num": 26658}