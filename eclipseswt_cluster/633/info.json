{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a7014f2343ef24fbcf2c67d1bddd5343", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c92a5ec00c3d4dc4e9e940783a15fe65", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "02b6cb36ad1c2dce27bd3810bc24ab9a523e494f", "commitAfterChange": "40e15e68f5fa0b6fe1e8ba9d3ffd820b3dca362f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  int accessibilityActionNames(int id, int sel)", "signatureAfterChange": "  int accessibilityActionNames(int id, int sel)", "diff": ["-\tif (handleIsAccessible(id) && accessible != null) {", "-\t\tNSArray returnValue = accessible.internal_accessibilityActionNames(ACC.CHILDID_SELF);", "-\t\tif (returnValue != null) return returnValue.id;", "+\tint /*long*/ returnValue = super.accessibilityActionNames(id, sel);", "+\tif (handleIsAccessible(id)) {", "+\t\tif (accessible != null) {", "+\t\t\tNSArray baseArray = accessible.internal_accessibilityActionNames(ACC.CHILDID_SELF);", "+\t\t\tif (baseArray != null) returnValue = baseArray.id;", "+\t\t}", "+\t\tif (hooks(SWT.MenuDetect) || (menu != null && !menu.isDisposed())) {", "+\t\t\tNSArray baseArray = new NSArray(returnValue);", "+\t\t\tNSMutableArray ourNames = NSMutableArray.arrayWithCapacity(baseArray.count() + 1);", "+\t\t\tourNames.addObjectsFromArray(baseArray);", "+\t\t\tourNames.addObject(OS.NSAccessibilityShowMenuAction);", "+\t\t\treturnValue = ourNames.id;", "+\t\t}", "-\t", "-\treturn super.accessibilityActionNames(id, sel);", "+\treturn returnValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8eb1b93cb5918e37ee690f19d8c2ea5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "32c09d8f3234247ca1b573423e5d4d72bbdbf08a", "commitAfterChange": "940e0a0cd5dddd2d3fdf0714f46e96d2b27435e7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  int accessibilityAttributeNames(int id, int sel)", "signatureAfterChange": "  int accessibilityAttributeNames(int id, int sel)", "diff": ["-\tif (id == accessibleHandle() && accessible != null) {\t\t\t", "-\t\tNSArray returnValue = accessible.internal_accessibilityAttributeNames(ACC.CHILDID_SELF);", "-\t\tif (returnValue != null) return returnValue.id;", "+\tint /*long*/ returnValue = 0;", "+\t", "+\tif (id == accessibleHandle() && accessible != null) {", "+\t\t// See if the accessible is defining the attribute set for the control.", "+\t\tid value = accessible.internal_accessibilityAttributeNames(ACC.CHILDID_SELF);", "+\t\treturnValue = (value != null ? value.id : 0);", "+\t\t", "+\t\t// If not, ask Cocoa for the set for this control.", "+\t\tif (returnValue == 0) returnValue = super.accessibilityAttributeNames(id, sel);", "+\t\t", "+\t\t// Add relationship attributes.", "+\t\treturnValue = accessible.internal_addRelationAttributes(returnValue);", "-\treturn super.accessibilityAttributeNames(id, sel);", "+\t// If the SWT accessibility didn't give us anything get the default for the view/cell.", "+\tif (returnValue == 0) returnValue = super.accessibilityAttributeNames(id, sel);", "+\t", "+\treturn returnValue;"]}], "num": 633}