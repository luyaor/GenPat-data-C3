{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1a24e0a39b1fe60eade42d607bc8e194", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46ed90f5c8f371c54ac3b98743869934", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "d5cf1c396dd6fc70c2ff1691fe757ac2af91424f", "commitAfterChange": "6d82b41e49943a9b4edcc7793f7d74b1be0c636a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": " void init(Device device, ImageData image)", "signatureAfterChange": " void init(Device device, ImageData image)", "diff": ["-\t\tif (device.useXRender && (alpha != -1 || alphaData != null)) {", "-\t\t\tmask = OS.XCreatePixmap(xDisplay, drawable, alpha != -1 ? 1 : image.width, alpha != -1 ? 1 : image.height, 8);", "-\t\t\tif (mask == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\t\tgc = OS.XCreateGC(xDisplay, mask, 0, null);", "-\t\t\tif (alpha != -1) {", "-\t\t\t\tOS.XSetForeground(xDisplay, gc, (alpha & 0xFF) << 8 | (alpha & 0xFF));", "-\t\t\t\tOS.XFillRectangle(xDisplay, mask, gc, 0, 0, 1, 1);", "-\t\t\t} else {", "-\t\t\t\tint imagePtr = OS.XGetImage(xDisplay, mask, 0, 0, image.width, image.height, OS.AllPlanes, OS.ZPixmap);", "-\t\t\t\tXImage xImage = new XImage();", "-\t\t\t\tOS.memmove(xImage, imagePtr, XImage.sizeof);", "-\t\t\t\tif (xImage.bytes_per_line == image.width) {", "-\t\t\t\t\tOS.memmove(xImage.data, alphaData, alphaData.length);", "-\t\t\t\t} else {", "-\t\t\t\t\tbyte[] line = new byte[xImage.bytes_per_line];", "-\t\t\t\t\tfor (int y = 0; y < image.height; y++) {", "-\t\t\t\t\t\tSystem.arraycopy(alphaData, image.width * y, line, 0, image.width);", "-\t\t\t\t\t\tOS.memmove(xImage.data + (xImage.bytes_per_line * y), line, xImage.bytes_per_line);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tOS.XPutImage(xDisplay, mask, gc, imagePtr, 0, 0, 0, 0, image.width, image.height);", "-\t\t\t\tOS.XDestroyImage(imagePtr);", "-\t\t\t}\t\t\t", "-\t\t\tOS.XFreeGC(xDisplay, gc);", "-\t\t}", "+\t\tcreateAlphaMask(image.width, image.height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45b1c8ac26fece7f1003afbd4efc9e1b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "b643808e4f52dd43d80a1e9e94b5c7e1e25a3b06", "commitAfterChange": "a9c82b91103bcd1315d5f013a883736f4e2bcbdc", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public Image(Device device, ImageData source, ImageData mask)", "signatureAfterChange": " public Image(Device device, ImageData source, ImageData mask)", "diff": ["-\tif (mask.depth != 1) {", "-\t\t/*", "-\t\t * Feature in Windows. 1-bit DIB sections are buggy on Win98, so we", "-\t\t * create 4-bit DIBs when given a 1-bit ImageData. In order to allow", "-\t\t * users to draw on the masks, we must also support 4-bit masks in", "-\t\t * icon creation by converting them into 1-bit masks.", "-\t\t */", "-\t\tif (mask.depth != 4) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "-\t\tPaletteData palette = new PaletteData(new RGB[] {new RGB(0, 0, 0), new RGB(255,255,255)});", "-\t\tImageData tempMask = new ImageData(mask.width, mask.height, 1, palette);", "-\t\t/* Find index of black in mask palette */", "-\t\tRGB[] rgbs = mask.getRGBs();", "-\t\tint blackIndex = 0;", "-\t\twhile (blackIndex < rgbs.length) {", "-\t\t\tif (rgbs[blackIndex].equals(palette.colors[0])) break;", "-\t\t\tblackIndex++;", "-\t\t}", "-\t\tif (blackIndex == rgbs.length) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "-\t\tint[] pixels = new int[mask.width];", "-\t\tfor (int y = 0; y < mask.height; y++) {", "-\t\t\tmask.getPixels(0, y, mask.width, pixels, 0);", "-\t\t\tfor (int i = 0; i < pixels.length; i++) {", "-\t\t\t\tif (pixels[i] == blackIndex) {", "-\t\t\t\t\tpixels[i] = 0;", "-\t\t\t\t} else {", "-\t\t\t\t\tpixels[i] = 1;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\ttempMask.setPixels(0, y, mask.width, pixels, 0);", "-\t\t}", "-\t\tmask = tempMask;", "-\t}", "+\tmask = ImageData.convertMask(mask);"]}], "num": 37961}