{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bd1f4ff3d193046714813bb2c0cc15c3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcd347ce718baf603fcc16279455638b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "7a2d94369e5ad6120bc0572ea6ad8f9f75b8147c", "commitAfterChange": "e84f4d8769abe77ed12791626675853956e621d2", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public ImageData getImageData()", "signatureAfterChange": " public ImageData getImageData()", "diff": ["-\t\t\tboolean isDib = false;", "-\t\t\tDIBSECTION dib = null;", "-\t\t\tif (bm.bmBits != 0) {", "-\t\t\t\t/* Only use DIB if image is top-down. */", "-\t\t\t\tdib = new DIBSECTION();", "-\t\t\t\tOS.GetObject(handle, DIBSECTION.sizeof, dib);", "-\t\t\t\tif (dib.biHeight < 0) isDib = true; ", "-\t\t\t}", "+\t\t\tboolean isDib = (bm.bmBits != 0);", "-\t\t\t\t\tdib = new DIBSECTION();", "-\t\t\t\t\tOS.GetObject(handle, DIBSECTION.sizeof, dib);", "+\t\t\t}", "+\t\t\tDIBSECTION dib = null;", "+\t\t\tif (isDib) {", "+\t\t\t\tdib = new DIBSECTION();", "+\t\t\t\tOS.GetObject(handle, DIBSECTION.sizeof, dib);", "-\t\t\t\t\tOS.MoveMemory(data, bm.bmBits, imageSize);", "+\t\t\t\t\tif (dib.biHeight < 0) {", "+\t\t\t\t\t\tOS.MoveMemory(data, bm.bmBits, imageSize);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tint stride = dib.bmWidthBytes;", "+\t\t\t\t\t\tint offset = 0;", "+\t\t\t\t\t\tbyte[] scanline = new byte[dib.bmWidthBytes];", "+\t\t\t\t\t\tfor (int i = 0; i < dib.biHeight; i++) {", "+\t\t\t\t\t\t\tint cur = dib.bmBits + dib.biHeight * stride - (i + 1) * stride;", "+\t\t\t\t\t\t\tOS.MoveMemory(scanline, cur, dib.bmWidthBytes);", "+\t\t\t\t\t\t\tSystem.arraycopy(scanline, 0, data, offset, dib.bmWidthBytes);", "+\t\t\t\t\t\t\toffset += stride;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4ff69ebdd131e60313ad5fb7ddc4d97", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "5ea8a8ca4643557ac6abd837d14400318b8125a6", "commitAfterChange": "5a29085071ce35026e7617b6fc1fdd2bf7e3205a", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " public void setColumnOrder (int [] order)", "signatureAfterChange": " public void setColumnOrder (int [] order)", "diff": ["+\t\tint x = 0;", "+\t\tshort [] width = new short [1];", "+\t\tint [] oldX = new int [oldOrder.length];", "+\t\tfor (int i=0; i<oldOrder.length; i++) {", "+\t\t\tint index = oldOrder [i];", "+\t\t\tTableColumn column = columns [index];", "+\t\t\toldX [index] =  x;", "+\t\t\tOS.GetDataBrowserTableViewNamedColumnWidth(handle, column.id, width);", "+\t\t\tx += width [0];", "+\t\t}", "+\t\tx = 0;", "+\t\tint [] newX = new int [order.length];", "-\t\t\tif (position != column.lastPosition) {", "-\t\t\t\tcolumn.lastPosition = position;", "-\t\t\t}", "+\t\t\tcolumn.lastPosition = position;", "+\t\t\tnewX [index] =  x;", "+\t\t\tOS.GetDataBrowserTableViewNamedColumnWidth(handle, column.id, width);", "+\t\t\tx += width [0];", "-\t\t\tTableColumn column = newColumns [oldOrder [i]];", "+\t\t\tTableColumn column = newColumns [i];", "-\t\t\t\tif (order [i] != oldOrder [i]) {", "+\t\t\t\tif (newX [i] != oldX [i]) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72afb6727046be5b99ad5d6d7aafcaa1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 49, "signatureBeforeChange": " public void setSelection (int start, int end)", "signatureAfterChange": "  public void setSelection (int start, int end)", "diff": ["- */", "+", "-\tif ((style & SWT.MULTI) != 0) deselectAll ();", "-\tselect (start, end);", "+\tcheckWidget ();", "+\tint length = end - start + 1;", "+\tif (length <= 0) return;", "+\tint count = length;", "+\tint [] ids = new int [length];", "+\tfor (int i=start; i<=end; i++) {", "+\t\tif (0 <= i && i < itemCount) ids [--count] = i + 1;", "+\t}", "+\tif (count != 0) return;", "+\tignoreSelect = true;", "+\tOS.SetDataBrowserSelectedItems (handle, count, ids, OS.kDataBrowserItemsAssign);", "+\tignoreSelect = false;", "+\tif (ids.length > 0) showIndex (ids [0] - 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37f1ff8f4843fb57ac6b915c1d22006f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 50, "signatureBeforeChange": " public void setSelection(int[] indices)", "signatureAfterChange": "  public void setSelection (int [] indices)", "diff": ["- */", "-public void setSelection(int[] indices) {", "-\tif ((style & SWT.MULTI) != 0) deselectAll ();", "-\tselect (indices);", "+", "+public void setSelection (int [] indices) {", "+\tif (indices == null) error (SWT.ERROR_NULL_ARGUMENT);", "+\tint length = indices.length;", "+\tint count = length;", "+\tint [] ids = new int [length];", "+\tfor (int i=0; i<length; i++) {", "+\t\tint index = indices [i];", "+\t\tif (0 <= index && index < itemCount) ids [--count] = index + 1;", "+\t}", "+\tif (count != 0) return;", "+\tignoreSelect = true;", "+\tOS.SetDataBrowserSelectedItems (handle, count, ids, OS.kDataBrowserItemsAssign);", "+\tignoreSelect = false;", "+\tif (ids.length > 0) showIndex (ids [0] - 1);"]}], "num": 27134}