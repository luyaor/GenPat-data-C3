{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "027b00b926aea8489f02824c7813e00e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de0d3accd025413ee998deaee8d0205b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "987b423214122474ac1f8141edd43608ed87bfc9", "commitAfterChange": "e19c01a8759e7b6d9ff3bd70bac15a05f9254fc9", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  void clearText ()", "signatureAfterChange": "  void clearText ()", "diff": ["-\t\t\tint /*long*/ str = OS.gtk_combo_box_get_active_text (handle);", "-\t\t\tif (str != 0) {", "-\t\t\t\tif (OS.strlen (str) > 0) postEvent (SWT.Modify);", "-\t\t\t\tOS.g_free (str);", "+\t\t\tint index = OS.gtk_combo_box_get_active (handle);", "+\t\t\tif (index != -1) {", "+\t\t\t\tint /*long*/ modelHandle = OS.gtk_combo_box_get_model (handle);", "+\t\t\t\tint /*long*/ [] ptr = new int /*long*/ [1];", "+\t\t\t\tint /*long*/ iter = OS.g_malloc (OS.GtkTreeIter_sizeof ());", "+\t\t\t\tOS.gtk_tree_model_iter_nth_child (modelHandle, iter, 0, index);", "+\t\t\t\tOS.gtk_tree_model_get (modelHandle, iter, 0, ptr, -1);", "+\t\t\t\tOS.g_free (iter);", "+\t\t\t\tif (ptr [0] != 0 && OS.strlen (ptr [0]) > 0) postEvent (SWT.Modify);", "+\t\t\t\tOS.g_free (ptr [0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da4cd1aa9d73ab16e74c4afcea68db51", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "fb0381a9298c2baaf1b996c42b6a80ea925bdfbc", "commitAfterChange": "f4bb8ef7d86d4b06d34d232ac624ae216be4183a", "methodNumberBeforeChange": 382, "methodNumberAfterChange": 382, "signatureBeforeChange": " void setSelection(int start, int length, boolean sendEvent, boolean doBlock)", "signatureAfterChange": " void setSelection(int start, int length, boolean sendEvent, boolean doBlock)", "diff": ["-\t\t\tclearSelection(sendEvent);", "+\t\t\tint charCount = content.getCharCount();", "+\t\t\t// called internally to remove selection after text is removed", "+\t\t\t// therefore make sure redraw range is valid.", "+\t\t\tint redrawX = Math.min(selection.x, charCount);", "+\t\t\tint redrawY = Math.min(selection.y, charCount);", "-\t\t\tinternalRedrawRange(selection.x, selection.y - selection.x);", "+\t\t\tredrawX = Math.min(redrawX, selection.x);", "+\t\t\tredrawY = Math.max(redrawY, selection.y);", "+\t\t\tif (redrawY - redrawX > 0) {", "+\t\t\t\tinternalRedrawRange(redrawX, redrawY - redrawX);", "+\t\t\t}", "+\t\t\tif (sendEvent) {", "+\t\t\t\tsendSelectionEvent();", "+\t\t\t}"]}], "num": 6763}