{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7dbc7b9ecfacac5ac0ecba1b06bc8869", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d831c2da1f406c4554272dcc59269254", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "df118cfee649740c3cfc2ab13c4b8610502d4d4e", "commitAfterChange": "49ca7a603b8ba36618c52950618a40e222d8f456", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public int indexOf (MenuItem item)", "signatureAfterChange": " public int indexOf (MenuItem item)", "diff": ["-\tint [] outMenu = new int [1];", "-\tshort [] outIndex = new short [1];", "-\tif (OS.GetIndMenuItemWithCommandID (handle, item.id, 1, outMenu, outIndex) == OS.noErr) {", "-\t\treturn handle == outMenu [0] ? outIndex [0] - 1 : 0;", "-\t}\t", "+\t", "+\t/* AW", "+\tint index = 0;", "+\tMENUITEMINFO info = new MENUITEMINFO ();", "+\tinfo.cbSize = MENUITEMINFO.sizeof;", "+\tinfo.fMask = OS.MIIM_ID;", "+\twhile (OS.GetMenuItemInfo (handle, index, true, info)) {", "+\t\tif (info.wID == item.id) return index;", "+\t\tindex++;", "+\t}", "+\t*/", "+\t", "+\tint[] menu= new int[1];", "+\tshort[] index= new short[1];", "+\tif (OS.GetIndMenuItemWithCommandID(handle, item.id, 1, menu, index) == OS.noErr) {", "+\t\tif (handle == menu[0])\t// ensure that we found item not in submenu", "+\t\t\treturn index[0];", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "681a500ad804bdd3c9ad77e58702dd3a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "b0693a12063ab35c44f34d89fd60d2e89368a94f", "commitAfterChange": "e9fff9da841962ff350a910fb52f584e5996a4f4", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r \r void destroyItem (MenuItem item)", "signatureAfterChange": "\r \r void destroyItem (MenuItem item)", "diff": ["-\tif (!OS.RemoveMenu (handle, item.id, OS.MF_BYCOMMAND)) {\r", "-\t\terror (SWT.ERROR_ITEM_NOT_REMOVED);\r", "+\tif (OS.IsWinCE) {\r", "+\t\tint index = 0;\r", "+\t\tMENUITEMINFO info = new MENUITEMINFO ();\r", "+\t\tinfo.cbSize = MENUITEMINFO.sizeof;\r", "+\t\tinfo.fMask = OS.MIIM_DATA;\r", "+\t\twhile (OS.GetMenuItemInfo (handle, index, true, info)) {\r", "+\t\t\tif (info.dwItemData == item.id) break;\r", "+\t\t\tindex++;\r", "+\t\t}\r", "+\t\tif (info.dwItemData != item.id) {\r", "+\t\t\terror (SWT.ERROR_ITEM_NOT_REMOVED);\r", "+\t\t}\t\r", "+\t\tif (!OS.RemoveMenu (handle, index, OS.MF_BYPOSITION)) {\r", "+\t\t\terror (SWT.ERROR_ITEM_NOT_REMOVED);\r", "+\t\t}\r", "+\t} else {\r", "+\t\tif (!OS.RemoveMenu (handle, item.id, OS.MF_BYCOMMAND)) {\r", "+\t\t\terror (SWT.ERROR_ITEM_NOT_REMOVED);\r", "+\t\t}\r"]}], "num": 23170}