{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d7bda81d71ac69b0462df283f59b5e44", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48080fb0fea2db6a9c71cf82ece517f1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 11, "signatureBeforeChange": " void doArrowRight(int keyMask)", "signatureAfterChange": " void doArrowRight(int stateMask)", "diff": ["+}", "+void doArrowRight(int stateMask) {", "+\tif ((stateMask & SWT.CTRL) != 0) {", "+\t\tScrollBar hBar = getHorizontalBar();", "+\t\tint maximum = hBar.getMaximum();", "+\t\tif (horizontalOffset == maximum) return;", "+\t\tint newSelection = Math.min (maximum, horizontalOffset + SIZE_HORIZONTALSCROLL);", "+\t\tRectangle clientArea = getClientArea();", "+\t\tGC gc = new GC(this);", "+\t\tgc.copyArea(", "+\t\t\t0, 0,", "+\t\t\tclientArea.width, clientArea.height,", "+\t\t\thorizontalOffset - newSelection, 0);", "+\t\tgc.dispose();", "+\t\thorizontalOffset = newSelection;", "+\t\thBar.setSelection(horizontalOffset);", "+\t\treturn;", "+\t}", "+\tTreeItem[] children = focusItem.getItems();", "+\tif (children.length == 0) return;", "+\tif (!focusItem.getExpanded()) {", "+\t\tfocusItem.setExpanded(true);", "+\t\tEvent newEvent = new Event();", "+\t\tnewEvent.item = focusItem;", "+\t\tinExpand = true;", "+\t\tsendEvent(SWT.Expand, newEvent);", "+\t\tinExpand = false;", "+\t\tif (isDisposed()) return;", "+\t\tif (focusItem.getItemCount() == 0) {", "+\t\t\tfocusItem.expanded = false;", "+\t\t}", "+\t\treturn;", "+\t}", "+\tselectItem(children[0], false);", "+\tsetFocusItem(children[0], true);", "+\tredrawItem(children[0].availableIndex);", "+\tshowItem(children[0]);", "+\tEvent newEvent = new Event();", "+\tnewEvent.item = children[0];", "+\tsendEvent(SWT.Selection, newEvent);", "+}", "- */", "-void doArrowRight(int keyMask) {", "-\tTreeItem focusItem = (TreeItem) getLastFocus();", "-\tTreeItem childItem;", "-", "-\tif (focusItem == null) {", "-\t\treturn;", "-\t}\t", "-\tif (keyMask == SWT.MOD1) {", "-\t\tsuper.doArrowRight(keyMask);", "-\t}", "-\telse", "-\tif (focusItem.isLeaf() == false) {", "-\t\tif (focusItem.getExpanded() == false) {\t\t\t// expand if collapsed", "-\t\t\texpand(focusItem, true);", "-\t\t} ", "-\t\telse {\t\t\t\t\t\t\t\t\t\t\t// go to the first child if there is one", "-\t\t\tchildItem = focusItem.getItems()[0];", "-\t\t\tdeselectAllExcept(childItem);", "-\t\t\tselectNotify(childItem);", "-\t\t}", "-\t}", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4ebf6df6cd10c3153c19500695d1c8c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 16, "signatureBeforeChange": " void doArrowRight(int stateMask)", "signatureAfterChange": " void doArrowRight(int keyMask)", "diff": ["-}", "-void doArrowRight(int stateMask) {", "-\tif ((stateMask & SWT.CTRL) != 0) {", "-\t\tScrollBar hBar = getHorizontalBar();", "-\t\tint maximum = hBar.getMaximum();", "-\t\tif (horizontalOffset == maximum) return;", "-\t\tint newSelection = Math.min (maximum, horizontalOffset + SIZE_HORIZONTALSCROLL);", "-\t\tRectangle clientArea = getClientArea();", "-\t\tGC gc = new GC(this);", "-\t\tgc.copyArea(", "-\t\t\t0, 0,", "-\t\t\tclientArea.width, clientArea.height,", "-\t\t\thorizontalOffset - newSelection, 0);", "-\t\tgc.dispose();", "-\t\thorizontalOffset = newSelection;", "-\t\thBar.setSelection(horizontalOffset);", "-\tTreeItem2[] children = focusItem.getItems();", "-\tif (children.length == 0) return;", "-\tif (!focusItem.getExpanded()) {", "-\t\tfocusItem.setExpanded(true);", "-\t\tEvent newEvent = new Event();", "-\t\tnewEvent.item = focusItem;", "-\t\tinExpand = true;", "-\t\tsendEvent(SWT.Expand, newEvent);", "-\t\tinExpand = false;", "-\t\tif (focusItem.getItemCount() == 0) {", "-\t\t\tfocusItem.expanded = false;", "-\t\t}", "-\t\treturn;", "-\tselectItem(children[0], false);", "-\tsetFocusItem(children[0], true);", "-\tredrawItem(children[0].availableIndex);", "-\tshowItem(children[0]);", "-\tEvent newEvent = new Event();", "-\tnewEvent.item = children[0];", "-\tsendEvent(SWT.Selection, newEvent);", "-}", "+ */", "+void doArrowRight(int keyMask) {", "+\tTreeItem2 focusItem = (TreeItem2) getLastFocus();", "+\tTreeItem2 childItem;", "+", "+\tif (focusItem == null) {", "+\t\treturn;", "+\t}\t", "+\tif (keyMask == SWT.MOD1) {", "+\t\tsuper.doArrowRight(keyMask);", "+\t}", "+\telse", "+\tif (focusItem.isLeaf() == false) {", "+\t\tif (focusItem.getExpanded() == false) {\t\t\t// expand if collapsed", "+\t\t\texpand(focusItem, true);", "+\t\t} ", "+\t\telse {\t\t\t\t\t\t\t\t\t\t\t// go to the first child if there is one", "+\t\t\tchildItem = focusItem.getItems()[0];", "+\t\t\tdeselectAllExcept(childItem);", "+\t\t\tselectNotify(childItem);", "+\t\t}", "+\t}", "+}"]}], "num": 11555}