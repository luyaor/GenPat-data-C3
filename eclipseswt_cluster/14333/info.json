{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "57bc8b04257d6497a7a783a71f03d8da", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20dc9430ad94e5ec9b2796350422bbad", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "5e05c860c75fb9386e23dd52fa60db7a593598e0", "commitAfterChange": "82a1c09af233bc8cd6f0c7fc54f4d78ed4a74ece", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 38, "signatureBeforeChange": " public void fillGradientRectangle(int x, int y, int width, int height, boolean vertical)", "signatureAfterChange": " public void fillGradientRectangle(int x, int y, int width, int height, boolean vertical)", "diff": ["-\tint xDisplay = data.display;", "-\tint xScreenNum = OS.XDefaultScreen(xDisplay);", "-\tXGCValues values = new XGCValues();", "-\tint fromColor, toColor;", "-\tOS.XGetGCValues(xDisplay, handle, OS.GCForeground | OS.GCBackground, values);", "-\tfromColor = values.foreground;", "-\ttoColor = values.background;", "+", "+\tRGB backgroundRGB, foregroundRGB;", "+\tbackgroundRGB = getBackground().getRGB();", "+\tforegroundRGB = getForeground().getRGB();", "+", "+\tRGB fromRGB, toRGB;", "+\tfromRGB = foregroundRGB;", "+\ttoRGB   = backgroundRGB;", "-\t\tfinal int t = fromColor;", "-\t\tfromColor = toColor;", "-\t\ttoColor = t;", "+\t\tfromRGB = backgroundRGB;", "+\t\ttoRGB   = foregroundRGB;", "-\tif (fromColor == toColor) {", "-\t\tOS.XFillRectangle(xDisplay, data.drawable, handle, x, y, width, height);", "+\tif (fromRGB.equals(toRGB)) {", "+\t\tfillRectangle(x, y, width, height);", "+\tint xDisplay = data.display;", "+\tint xScreenNum = OS.XDefaultScreen(xDisplay);", "-\tXColor xColor = new XColor();", "-\txColor.pixel = fromColor;", "-\tOS.XQueryColor(xDisplay, data.colormap, xColor);", "-\tfinal RGB fromRGB = new RGB((xColor.red & 0xffff) >>> 8, (xColor.green & 0xffff) >>> 8, (xColor.blue & 0xffff) >>> 8);", "-\txColor.pixel = toColor;", "-\tOS.XQueryColor(xDisplay, data.colormap, xColor);", "-\tfinal RGB toRGB = new RGB((xColor.red & 0xffff) >>> 8, (xColor.green & 0xffff) >>> 8, (xColor.blue & 0xffff) >>> 8);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbc33338a5511f707092bceb7448ed21", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/win32/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "be91c6378853be89eec60aa864eb2c5076be911c", "commitAfterChange": "9e2702afa6b962fde80f1108a5ec6c9116dd479c", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["-\tfinal Listener filter = new Listener () {", "-\t\tpublic void handleEvent (Event event) {", "-\t\t\tswitch (event.type) {", "-\t\t\t\tcase SWT.Traverse: {", "-\t\t\t\t\ttraverseNext = event.detail != SWT.TRAVERSE_TAB_PREVIOUS;", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t};", "-\t\t\t\tcase SWT.Activate: {", "-\t\t\t\t\tbrowser.getDisplay ().removeFilter (SWT.Traverse, filter);", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t\tcase SWT.Deactivate: {", "-\t\t\t\t\tbrowser.getDisplay ().removeFilter (SWT.Traverse, filter);", "-\t\t\t\t\tbrowser.getDisplay ().addFilter (SWT.Traverse, filter);", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t\t\tbrowser.getDisplay ().removeFilter (SWT.Traverse, filter);", "-\t\t\t\t\tonFocus ();", "+\t\t\t\t\tOS.SetFocus (webViewWindowHandle);", "-\tbrowser.addListener (SWT.Activate, listener);", "-\tbrowser.addListener (SWT.Deactivate, listener);", "-\tif (!browser.isFocusControl ()) {", "-\t\tbrowser.getDisplay ().addFilter (SWT.Traverse, filter);", "-\t}"]}], "num": 14333}