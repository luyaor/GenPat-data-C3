{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5157e891082a4da68118fe01fc7e96a6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "917ce0755efe0897ed5324353e36bf63", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "a7d9fb3f9b7a86369587f29f1f4445adda7f8964", "commitAfterChange": "9abc23faabf8b5bcd4e6b6e2275455ee69e4f44d", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " public void setForeground (int index, Color color)", "signatureAfterChange": " public void setForeground (int index, Color color)", "diff": ["+\t/*", "+\t* Bug in GTK.  When using fixed-height-mode,", "+\t* row changes do not cause the row to be repainted.  The fix is to", "+\t* invalidate the row when it is cleared.", "+\t*/", "+\tif ((parent.style & SWT.VIRTUAL) != 0) {", "+\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 3, 2) && OS.GTK_VERSION < OS.VERSION (2, 6, 3)) {", "+\t\t\tredraw ();", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "308b13160e799f4905a592f4f4d4e4bc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "a7d9fb3f9b7a86369587f29f1f4445adda7f8964", "commitAfterChange": "9abc23faabf8b5bcd4e6b6e2275455ee69e4f44d", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public void setForeground (Color color)", "signatureAfterChange": " public void setForeground (Color color)", "diff": ["+\t/*", "+\t* Bug in GTK.  When using fixed-height-mode,", "+\t* row changes do not cause the row to be repainted.  The fix is to", "+\t* invalidate the row when it is cleared.", "+\t*/", "+\tif ((parent.style & SWT.VIRTUAL) != 0) {", "+\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 3, 2) && OS.GTK_VERSION < OS.VERSION (2, 6, 3)) {", "+\t\t\tredraw ();", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b622fc5a9b3a12665f66de9ac7bcb76", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "3f050d0d0fc8d0194869d65b823ccab5c4d948c0", "commitAfterChange": "cf0ef481d38bf3ce2b181b6a518e656c9437a1c8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["+\t/*", "+\t* Bug in GTK. When a treeview is the child of an override shell, ", "+\t* and if the user has ever invokes the interactive search field, ", "+\t* and the treeview is disposed on a focus out event, it segment", "+\t* faults. The fix is to disable the search field in an override ", "+\t* shell.", "+\t*/", "+\tif ((getShell ().style & SWT.ON_TOP) != 0) {", "+\t\t/*", "+\t\t* Bug in GTK. Until GTK 2.6.5, calling gtk_tree_view_set_enable_search(FALSE)", "+\t\t* would prevent the user from being able to type in text to search the tree.", "+\t\t* After 2.6.5, GTK introduced Ctrl+F as being the key binding for interactive", "+\t\t* search. This meant that even if FALSE was passed to enable_search, the user", "+\t\t* can still bring up the search pop up using the keybinding. GTK also introduced", "+\t\t* the notion of passing a -1 to gtk_set_search_column to disable searching", "+\t\t* (including the search key binding).  The fix is to use the right calls", "+\t\t* for the right version.", "+\t\t*/", "+\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 6, 5)) {", "+\t\t\tOS.gtk_tree_view_set_search_column (handle, -1);", "+\t\t} else {", "+\t\t\tOS.gtk_tree_view_set_enable_search (handle, false);", "+\t\t}", "+\t}"]}], "num": 4124}