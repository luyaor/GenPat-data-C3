{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "949279e5803ffd71aee22ab7247f4650", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "584c3e569f1306dd01ae37a9ee2d0f8a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": " void createHandle (int index)", "signatureAfterChange": "  void createHandle ()", "diff": ["-void createHandle (int index) {", "-\tstate |= HANDLE;", "-\tint parentHandle = parent.handle;", "-\t/* AW", "-\tint [] argList = {", "-\t\tOS.XmNwidth, DEFAULT_WIDTH,", "-\t\tOS.XmNheight, DEFAULT_HEIGHT,", "-\t\tOS.XmNrecomputeSize, 0,", "-\t\tOS.XmNhighlightThickness, (parent.style & SWT.NO_FOCUS) != 0 ? 0 : 1,", "-\t\tOS.XmNmarginWidth, 2,", "-\t\tOS.XmNmarginHeight, 1,", "-\t\tOS.XmNtraversalOn, (parent.style & SWT.NO_FOCUS) != 0 ? 0 : 1,", "-\t\tOS.XmNpositionIndex, index,", "-\t\tOS.XmNshadowType, OS.XmSHADOW_OUT,", "-\t\tOS.XmNancestorSensitive, 1,", "-\t};", "-\thandle = OS.XmCreateDrawnButton (parentHandle, null, argList, argList.length / 2);", "-\t*/", "-\tint width= DEFAULT_WIDTH;", "-\tint height= DEFAULT_HEIGHT;", "-\tif ((style & SWT.SEPARATOR) != 0) {", "-\t\tif ((parent.style & SWT.HORIZONTAL) != 0)", "-\t\t\twidth= DEFAULT_SEPARATOR_WIDTH;", "-\t\telse", "-\t\t\theight= DEFAULT_SEPARATOR_WIDTH;", "-\t}", "-\thandle = MacUtil.createDrawingArea(parentHandle, index, false, width, height, 0);", "-\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "-}", "+", "+void createHandle () {", "+\tint [] outControl = new int [1];", "+\tint window = OS.GetControlOwner (parent.handle);", "+\tint features = OS.kControlSupportsEmbedding | 1 << 4;", "+\tOS.CreateUserPaneControl (window, null, features, outControl);", "+\tif (outControl [0] == 0) error (SWT.ERROR_NO_HANDLES);", "+\thandle = outControl [0];", "+\tint width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT;", "+\tif ((style & SWT.SEPARATOR) == 0) {", "+\t\tControlButtonContentInfo inContent = new ControlButtonContentInfo ();", "+\t\tif ((style & SWT.DROP_DOWN) != 0) {", "+\t\t\tOS.CreateIconControl(window, null, inContent, false, outControl);", "+\t\t\tif (outControl [0] == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\t\tarrowHandle = outControl [0];", "+\t\t\tupdateArrow ();", "+\t\t}", "+\t\tOS.CreateIconControl(window, null, inContent, false, outControl);", "+\t\tif (outControl [0] == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\ticonHandle = outControl [0];", "+\t\tOS.CreateIconControl(window, null, inContent, false, outControl);", "+\t\tif (outControl [0] == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\tlabelHandle = outControl [0];", "+\t} else {", "+\t\tif ((parent.style & SWT.HORIZONTAL) != 0) {", "+\t\t\twidth = DEFAULT_SEPARATOR_WIDTH;", "+\t\t} else {", "+\t\t\theight = DEFAULT_SEPARATOR_WIDTH;", "+\t\t}", "+\t}\t", "+\tsetBounds (0, 0, width, height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81c70ec06a15ad0aa65c50c529d88978", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " void createHandle (int index)", "signatureAfterChange": "  void createHandle ()", "diff": ["-}", "-void createHandle (int index) {", "-\tstate |= HANDLE;", "-\t\thandle= MacUtil.newControl(parent.handle, (short)0, (short)-12345, (short)-1, (short)(OS.kControlPopupButtonProc+1));", "-\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\tint[] menuRef= new int[1];", "-\t\tOS.CreateNewMenu(20000, 0, menuRef);", "-\t\tmenuHandle= menuRef[0];", "-\t\tif (menuHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\tOS.SetControlPopupMenuHandle(handle, menuHandle);", "-\t    int[] outComboBox= new int[1];", "-\t\tOS.HIComboBoxCreate(outComboBox, OS.kHIComboBoxAutoSizeListAttribute);", "-\t\thandle= outComboBox[0];", "-\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\tMacUtil.addControl(handle, parent.handle);", "-\t\tOS.HIViewSetVisible(handle, true);", "+", "+void createHandle () {", "+\t// NEEDS WORK - SIMPLE", "+\tif ((style & SWT.READ_ONLY) != 0) {", "+\t\tint [] outControl = new int [1];", "+\t\tint window = OS.GetControlOwner (parent.handle);", "+\t\t/* From ControlDefinitions.h:", "+\t\t * ", "+\t\t * Passing in a menu ID of -12345 causes the popup not to try and get the menu from a", "+\t\t * resource. Instead, you can build the menu and later stuff the MenuRef field in", "+\t\t * the popup data information.                                                                         ", "+\t\t */", "+\t\tOS.CreatePopupButtonControl(window, null, 0, (short)-12345, false, (short)0, (short)0, 0, outControl);", "+\t\tif (outControl [0] == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\thandle = outControl [0];", "+\t\tint[] menuRef= new int[1];", "+\t\tOS.CreateNewMenu ((short)0, 0, menuRef);", "+\t\tif (menuRef [0] == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\tmenuHandle = menuRef[0];", "+\t\tOS.SetControlPopupMenuHandle(handle, menuHandle);", "+\t\tOS.SetControl32BitMaximum(handle, 0x7FFF);", "+\t} else {", "+\t\tint [] outControl = new int [1];", "+\t\tCGRect rect = new CGRect ();", "+\t\tint inAttributes = OS.kHIComboBoxAutoCompletionAttribute | OS.kHIComboBoxAutoSizeListAttribute;", "+\t\tOS.HIComboBoxCreate(rect, 0, null, 0, inAttributes, outControl);", "+\t\tif (outControl [0] == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\thandle = outControl [0];", "+\t\tOS.HIViewSetVisible (handle, true);"]}], "num": 28493}