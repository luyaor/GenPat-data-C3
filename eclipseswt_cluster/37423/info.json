{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f6528a87fef78b6ac668b1b5c6bc133", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6d4456cab448af68e0ffc65800f4287", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 31, "signatureBeforeChange": " int getItemConnectorWidth()", "signatureAfterChange": " Rectangle getHitBounds ()", "diff": ["+ */", "+Rectangle getHitBounds () {", "+\tint contentX = getContentX (0);", "+\tint width = 0;", "+\tif (parent.getColumnCount () == 0) {", "+\t\twidth = getFocusX () + getTextPaintWidth (0) - contentX; ", "+\t} else {", "+\t\tTreeColumn column = parent.getColumn (0);", "+\t\twidth = column.getWidth () - contentX;", "+\t}", "+\treturn new Rectangle (contentX, parent.getItemY (this), width, parent.getItemHeight ());", "+}", "- */", "-int getItemConnectorWidth() {", "-\tTree parent = getParent();", "-\tPoint imageExtent = parent.getImageExtent();", "-\tint itemConnectorWidth;", "-\tint indicatorWidth = parent.getHierarchyIndicatorRect().width;", "-", "-\tif (imageExtent != null) {", "-\t\titemConnectorWidth = imageExtent.x / 2 + ITEM_CONNECTOR_PADDING;", "-\telse {", "-\t\titemConnectorWidth = DEFAULT_ITEM_CONNECTOR_WIDTH;", "-\tif (isLeaf() == false) {\t// has children = has hierarchy indicator = shorter connector", "-\t\titemConnectorWidth -= indicatorWidth / 2;", "-\t}", "-\treturn itemConnectorWidth;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e0d83ef1a29b757d2105b91928ce947", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 30, "signatureBeforeChange": " Point getSelectionExtent()", "signatureAfterChange": " Point[] getHconnectorEndpoints ()", "diff": ["+Point[] getHconnectorEndpoints () {", "+\tRectangle expanderBounds = getExpanderBounds ();", "+\tint x, width;", "+\tif (getItemCount () == 0) {", "+\t\tx = expanderBounds.x + Compatibility.ceil (expanderBounds.width, 2);", "+\t\twidth = Compatibility.floor (expanderBounds.width, 2) + INDENT_HIERARCHY;", "+\t} else {", "+\t\tx = expanderBounds.x + expanderBounds.width;", "+\t\twidth = INDENT_HIERARCHY;", "+\t}", "+\tint y = expanderBounds.y + expanderBounds.height / 2;", "+\treturn new Point[] {", "+\t\tnew Point (x, y),", "+\t\tnew Point (x + width, y)", "+\t};", "+}", "-Point getSelectionExtent() {", "-\tPoint selectionExtent = getItemExtent();", "-\tPoint imageExtent = getParent().getImageExtent();", "-\tint x = selectionExtent.x;", "-", "-\tif (imageExtent != null) {", "-\t\tx -= imageExtent.x + IMAGE_PADDING;", "-\t}", "-\treturn new Point(x, selectionExtent.y);"]}], "num": 37423}