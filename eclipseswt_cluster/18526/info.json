{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2f929c25b8167be8e9fe8a3dd95f0035", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17e278b3177203cad252fee60943da40", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "5a28f9d916645031873e21349842f1e9c20183c9", "commitAfterChange": "0bb8694700435df20f6d4a1639c4bae9f953c974", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  LRESULT CDDS_ITEMPOSTPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "signatureAfterChange": "  LRESULT CDDS_ITEMPOSTPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "diff": ["-\tif (handle == OS.GetFocus ()) {", "-\t\tint uiState = OS.SendMessage (handle, OS.WM_QUERYUISTATE, 0, 0);", "-\t\tif ((uiState & OS.UISF_HIDEFOCUS) == 0) {", "-\t\t\tint hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "-\t\t\tif (hItem == item.handle) {", "-\t\t\t\tif (!ignoreDrawFocus && (hooks (SWT.PaintItem) || findImageControl () != null)) {", "-\t\t\t\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "-\t\t\t\t\t\tRECT focusRect = new RECT ();", "-\t\t\t\t\t\tOS.SetRect (focusRect, nmcd.left, nmcd.top, nmcd.right, nmcd.bottom);", "-\t\t\t\t\t\tif (count > 0 && hwndHeader != 0) {", "-\t\t\t\t\t\t\tint width = 0;", "-\t\t\t\t\t\t\tHDITEM hdItem = new HDITEM ();", "-\t\t\t\t\t\t\thdItem.mask = OS.HDI_WIDTH;", "-\t\t\t\t\t\t\tfor (int j=0; j<count; j++) {", "-\t\t\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEM, j, hdItem);", "-\t\t\t\t\t\t\t\twidth += hdItem.cxy;", "+\tif (!explorerTheme) {", "+\t\tif (handle == OS.GetFocus ()) {", "+\t\t\tint uiState = OS.SendMessage (handle, OS.WM_QUERYUISTATE, 0, 0);", "+\t\t\tif ((uiState & OS.UISF_HIDEFOCUS) == 0) {", "+\t\t\t\tint hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "+\t\t\t\tif (hItem == item.handle) {", "+\t\t\t\t\tif (!ignoreDrawFocus && (hooks (SWT.PaintItem) || findImageControl () != null)) {", "+\t\t\t\t\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "+\t\t\t\t\t\t\tRECT focusRect = new RECT ();", "+\t\t\t\t\t\t\tOS.SetRect (focusRect, nmcd.left, nmcd.top, nmcd.right, nmcd.bottom);", "+\t\t\t\t\t\t\tif (count > 0 && hwndHeader != 0) {", "+\t\t\t\t\t\t\t\tint width = 0;", "+\t\t\t\t\t\t\t\tHDITEM hdItem = new HDITEM ();", "+\t\t\t\t\t\t\t\thdItem.mask = OS.HDI_WIDTH;", "+\t\t\t\t\t\t\t\tfor (int j=0; j<count; j++) {", "+\t\t\t\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEM, j, hdItem);", "+\t\t\t\t\t\t\t\t\twidth += hdItem.cxy;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tfocusRect.left = 0;", "+\t\t\t\t\t\t\t\tRECT rect = new RECT ();", "+\t\t\t\t\t\t\t\tOS.GetClientRect (handle, rect);", "+\t\t\t\t\t\t\t\tfocusRect.right = Math.max (width, rect.right);", "-\t\t\t\t\t\t\tfocusRect.left = 0;", "-\t\t\t\t\t\t\tRECT rect = new RECT ();", "-\t\t\t\t\t\t\tOS.GetClientRect (handle, rect);", "-\t\t\t\t\t\t\tfocusRect.right = Math.max (width, rect.right);", "+\t\t\t\t\t\t\tOS.DrawFocusRect (hDC, focusRect);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tint index = OS.SendMessage (hwndHeader, OS.HDM_ORDERTOINDEX, 0, 0);", "+\t\t\t\t\t\t\tRECT focusRect = item.getBounds (index, true, false, false, false, false, hDC);", "+\t\t\t\t\t\t\tRECT clipRect = item.getBounds (index, true, false, false, false, true, hDC);", "+\t\t\t\t\t\t\tOS.IntersectClipRect (hDC, clipRect.left, clipRect.top, clipRect.right, clipRect.bottom);", "+\t\t\t\t\t\t\tOS.DrawFocusRect (hDC, focusRect);", "+\t\t\t\t\t\t\tOS.SelectClipRgn (hDC, 0);", "-\t\t\t\t\t\tOS.DrawFocusRect (hDC, focusRect);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tint index = OS.SendMessage (hwndHeader, OS.HDM_ORDERTOINDEX, 0, 0);", "-\t\t\t\t\t\tRECT focusRect = item.getBounds (index, true, false, false, false, false, hDC);", "-\t\t\t\t\t\tRECT clipRect = item.getBounds (index, true, false, false, false, true, hDC);", "-\t\t\t\t\t\tOS.IntersectClipRect (hDC, clipRect.left, clipRect.top, clipRect.right, clipRect.bottom);", "-\t\t\t\t\t\tOS.DrawFocusRect (hDC, focusRect);", "-\t\t\t\t\t\tOS.SelectClipRgn (hDC, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf35f2a00a5dd161c7cd79b9e3af9f1d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "1b4bf2560a13cbe7bbaefe761d35208d64534690", "commitAfterChange": "4dfb9b2e7115a7b57c3f5b8a9e47ea812d940f92", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  LRESULT CDDS_ITEMPOSTPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "signatureAfterChange": "  LRESULT CDDS_ITEMPOSTPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "diff": ["-\tRECT clientRect = new RECT (), focusRect = null;", "+\tRECT clientRect = new RECT ();", "-\t\t\t\tignoreDrawForeground = ignoreDrawBackground = ignoreDrawSelection = false;", "+\t\t\t\tignoreDrawForeground = ignoreDrawBackground = ignoreDrawSelection = ignoreDrawFocus = false;", "+\t\t\t\t\t\t\tignoreDrawFocus = (event.detail & SWT.FOCUSED) == 0;", "-\t\t\t\t\t\t\tignoreDrawForeground = ignoreDrawBackground = ignoreDrawSelection = true;", "+\t\t\t\t\t\t\tignoreDrawForeground = ignoreDrawBackground = ignoreDrawSelection = ignoreDrawFocus = true;", "-\t\t\t\t\t\t\t\tif (!ignoreDrawSelection) {", "-\t\t\t\t\t\t\t\t\tif (handle == OS.GetFocus ()) {", "-\t\t\t\t\t\t\t\t\t\tint uiState = OS.SendMessage (handle, OS.WM_QUERYUISTATE, 0, 0);", "-\t\t\t\t\t\t\t\t\t\tif ((uiState & OS.UISF_HIDEFOCUS) == 0) {", "-\t\t\t\t\t\t\t\t\t\t\tint hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "-\t\t\t\t\t\t\t\t\t\t\tif (hItem == item.handle) {", "-\t\t\t\t\t\t\t\t\t\t\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "-\t\t\t\t\t\t\t\t\t\t\t\t\tfocusRect = new RECT ();", "-\t\t\t\t\t\t\t\t\t\t\t\t\tOS.SetRect (focusRect, nmcd.left, nmcd.top, nmcd.right, nmcd.bottom);", "-\t\t\t\t\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\t\t\t\t\tfocusRect = item.getBounds (index, true, false, false, false, true, hDC);", "-\t\t\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t}", "-\tif (focusRect != null) OS.DrawFocusRect (hDC, focusRect);", "+\tif (handle == OS.GetFocus ()) {", "+\t\tint uiState = OS.SendMessage (handle, OS.WM_QUERYUISTATE, 0, 0);", "+\t\tif ((uiState & OS.UISF_HIDEFOCUS) == 0) {", "+\t\t\tint hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "+\t\t\tif (hItem == item.handle) {", "+\t\t\t\tif ((!ignoreDrawFocus && hooks (SWT.PaintItem)) || findImageControl () != null) {", "+\t\t\t\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "+\t\t\t\t\t\tRECT focusRect = new RECT ();", "+\t\t\t\t\t\tOS.SetRect (focusRect, nmcd.left, nmcd.top, nmcd.right, nmcd.bottom);", "+\t\t\t\t\t\tif (count > 0 && hwndHeader != 0) {", "+\t\t\t\t\t\t\tint width = 0;", "+\t\t\t\t\t\t\tHDITEM hdItem = new HDITEM ();", "+\t\t\t\t\t\t\thdItem.mask = OS.HDI_WIDTH;", "+\t\t\t\t\t\t\tfor (int j=0; j<count; j++) {", "+\t\t\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEM, j, hdItem);", "+\t\t\t\t\t\t\t\twidth += hdItem.cxy;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tfocusRect.left = 0;", "+\t\t\t\t\t\t\tRECT rect = new RECT ();", "+\t\t\t\t\t\t\tOS.GetClientRect (handle, rect);", "+\t\t\t\t\t\t\tfocusRect.right = Math.max (width, rect.right);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tRECT focusRect = item.getBounds (0, true, false, false, false, false, hDC);", "+\t\t\t\t\t\tRECT clipRect = item.getBounds (0, true, false, false, false, true, hDC);", "+\t\t\t\t\t\tOS.IntersectClipRect (hDC, clipRect.left, clipRect.top, clipRect.right, clipRect.bottom);", "+\t\t\t\t\t\tOS.DrawFocusRect (hDC, focusRect);", "+\t\t\t\t\t\tOS.SelectClipRgn (hDC, 0);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}"]}], "num": 18526}