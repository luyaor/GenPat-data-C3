{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e8841e1f74bfbcb5cf404d13c00eb4d5", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5ecddd08864fe22b07109d97e40eb0e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Group.java", "commitBeforeChange": "915780e93536b69764c4dbeedaf055ff446243b3", "commitAfterChange": "53a72a1e26ee8b5bafe3e8ea17f31ca574a7582b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["+\tint textInset = 0;", "+\tif (length > 0) {", "+\t\t/* In the (rare) case where the text is wider than the client area,", "+\t\t * allow room for one average character to the right of the text.", "+\t\t */", "+\t\tTEXTMETRIC tm = OS.IsUnicode ? (TEXTMETRIC) new TEXTMETRICW () : new TEXTMETRICA ();", "+\t\tOS.GetTextMetrics (hDC, tm);", "+\t\ttextInset = tm.tmAveCharWidth;", "+\t}", "-\twidth = Math.max (trim.width, rect.right - rect.left + 6);", "+\twidth = Math.max (trim.width, rect.right - rect.left + INSET * 2 + textInset);", "+\tint border = getBorderWidth ();", "+\twidth += border * 2; height += border * 2;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "889b87b8d6317900410d4307d1f2b010", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Group.java", "commitBeforeChange": "0bd2d73bad65a57f8d100d549fa3a39b30167f1d", "commitAfterChange": "ba2cca7282429adc7c004f6b02c8075f67cb11e1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public Rectangle computeTrim (int x, int y, int width, int height)", "signatureAfterChange": "  public Rectangle computeTrim (int x, int y, int width, int height)", "diff": ["-", "-\tif (length > 0) {", "-\t\t/* If the group has text, and the text is wider than the", "-\t\t * client area, pad the width so the text is not clipped.", "-\t\t */", "+\tif (length != 0) {", "+\t\t/*", "+\t\t* If the group has text, and the text is wider than the", "+\t\t* client area, pad the width so the text is not clipped.", "+\t\t*/", "-\t", "-\ttrim.x -= CLIENT_INSET;  trim.y -= tm.tmHeight;", "+\ttrim.x -= CLIENT_INSET;", "+\ttrim.y -= tm.tmHeight;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "953f16246cdd6d0cabe4b2acc40c01da", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Group.java", "commitBeforeChange": "bf216ef6a93d103e9113ee67337be632fff4be9d", "commitAfterChange": "58098a35d5242498a1aa19f6b3c0a31e3d5b294c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public Rectangle computeTrim (int x, int y, int width, int height)", "signatureAfterChange": "  public Rectangle computeTrim (int x, int y, int width, int height)", "diff": ["+", "-\tint textWidth = 0;", "-\tint length = OS.GetWindowTextLength (handle);", "-\tif (length != 0) {", "-\t\t/*", "-\t\t* If the group has text, and the text is wider than the", "-\t\t* client area, pad the width so the text is not clipped.", "-\t\t*/", "-\t\tTCHAR buffer1 = new TCHAR (getCodePage (), length + 1);", "-\t\tOS.GetWindowText (handle, buffer1, length + 1);", "-\t\tRECT rect = new RECT ();", "-\t\tint flags = OS.DT_CALCRECT | OS.DT_SINGLELINE;", "-\t\tOS.DrawText (hDC, buffer1, length, rect, flags);", "-\t\ttextWidth = rect.right - rect.left + CLIENT_INSET * 4;", "-\t}", "-\ttrim.width = Math.max (trim.width, textWidth) + CLIENT_INSET * 2;", "+\ttrim.width += CLIENT_INSET * 2;"]}], "num": 25532}