{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d03ccad2d9c15da33f4bd1d0dca4eefb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "336f683c7c46f99f77c3d75f1b9f1533", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandItem.java", "commitBeforeChange": "581e2be923c73fa26ac8208dc1b808c769e30134", "commitAfterChange": "f9f3156adc6e8f40d328c15f0f2aa9510ae00291", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  void drawItem (GC gc, int hTheme, RECT clipRect, boolean drawFocus)", "signatureAfterChange": "  void drawItem (GC gc, int hTheme, RECT clipRect, boolean drawFocus)", "diff": ["-\tint headerHeight = ExpandBar.HEADER_HEIGHT;", "+\tint headerHeight = parent.getBandHeight ();", "-\t\t\tNONCLIENTMETRICS info = OS.IsUnicode ? (NONCLIENTMETRICS) new NONCLIENTMETRICSW () : new NONCLIENTMETRICSA ();", "-\t\t\tinfo.cbSize = NONCLIENTMETRICS.sizeof;", "-\t\t\tif (!OS.IsWinCE) {", "+\t\t\tif (!OS.IsWinCE && parent.hFont == 0) {", "+\t\t\t\tNONCLIENTMETRICS info = OS.IsUnicode ? (NONCLIENTMETRICS) new NONCLIENTMETRICSW () : new NONCLIENTMETRICSA ();", "+\t\t\t\tinfo.cbSize = NONCLIENTMETRICS.sizeof;", "-\trect.left = rect.right - headerHeight;", "+\tint chevronSize = ExpandItem.CHEVRON_SIZE;", "+\trect.left = rect.right - chevronSize;", "+\trect.top = y + (headerHeight - chevronSize) / 2;", "+\trect.bottom = rect.top + chevronSize;", "-\t\tif (OS.COMCTL32_MAJOR < 6 || !OS.IsAppThemed ()) {", "+\t\tif (!parent.isAppThemed ()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8e41e44b5b874c6a72a061cb99b237d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "5a65f3a302571e32a7c0f6324972c3df796a0ff5", "commitAfterChange": "c01f8c49c334c05717e45e714b4e74e0c65f3b9a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  LRESULT CDDS_ITEMPOSTPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "signatureAfterChange": "  LRESULT CDDS_ITEMPOSTPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "diff": ["-\t\t\t\t\t\t//int y = rect.top + (index == 0 ? (getItemHeight () - size.y) / 2 : 0);", "-\t\t\t\t\t\tint y = rect.top;", "-\t\t\t\t\t\t\t//TODO - share GC, clip the drawing for index == 0", "+\t\t\t\t\t\t\t//int y1 = rect.top + (index == 0 ? (getItemHeight () - size.y) / 2 : 0);", "+\t\t\t\t\t\t\tint y1 = rect.top;", "+\t\t\t\t\t\t\tint x1 = Math.max (rect.left, rect.left - inset + 1);", "-\t\t\t\t\t\t\t//if (index == 0) { //must clear", "-\t\t\t\t\t\t\t\t//gc.setClipping (rect.left, rect.top, rect.right - rect.left, rect.bottom - rect.top);", "-\t\t\t\t\t\t\t//}", "-\t\t\t\t\t\t\tgc.drawImage (image, 0, 0, bounds.width, bounds.height, rect.left - inset + 1, y, size.x, size.y);", "+\t\t\t\t\t\t\tgc.setClipping (x1, rect.top, rect.right - x1, rect.bottom - rect.top);", "+\t\t\t\t\t\t\tgc.drawImage (image, 0, 0, bounds.width, bounds.height, x1, y1, size.x, size.y);", "+\t\t\t\t\t\t\tOS.SelectClipRgn (hDC, 0);"]}], "num": 21647}