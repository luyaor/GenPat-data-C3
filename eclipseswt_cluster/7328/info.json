{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "73e1e3a22876989aa03cf65e4649739f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4f515e902e54477bb66a402c804fc6d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "0ad0a601d34f9b89eab0eb65f5e8c1953894af48", "commitAfterChange": "9bae3043b8c03528811ea12dd167ee4b0dbee04f", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 23, "signatureBeforeChange": " public boolean forceFocus ()", "signatureAfterChange": " public boolean forceFocus ()", "diff": ["-\tif (!isEnabled () || !isVisible ()) return false;", "+\tif (!isEnabled () || !isVisible () /* AW || !isActive () */) return false;", "-    /* AW", "-\treturn OS.XmProcessTraversal (handle, OS.XmTRAVERSE_CURRENT);", "-    */", "-\t", "-\tDisplay display= getDisplay();", "-\tif (display != null)", "-    \treturn display.setMacFocusHandle(((Shell)shell).shellHandle, handle);", "+\t/*", "+\t* This code is intentionally commented.", "+\t*", "+\t* When setting focus to a control, it is", "+\t* possible that application code can set", "+\t* the focus to another control inside of", "+\t* WM_SETFOCUS.  In this case, the original", "+\t* control will no longer have the focus", "+\t* and the call to setFocus() will return", "+\t* false indicating failure.", "+\t* ", "+\t* We are still working on a solution at", "+\t* this time.", "+\t*/", "+//\tif (OS.GetFocus () != OS.SetFocus (handle)) return false;", "-\tif (!isFocusControl ()) return false;", "-\tshell.setDefaultButton (null, false);", "-    return true;", "+\t/* AW", "+\tOS.SetFocus (handle);", "+\t*/", "+\t", "+\tboolean focus= false;", "+\t", "+\tif (this instanceof Text || this instanceof List || this instanceof Combo || this instanceof Canvas)", "+\t\tfocus= true;", "+\tif (!focus && MacUtil.FULL_KBD_NAV && this instanceof Button)", "+\t\tfocus= true;", "+\t", "+\tif (focus) {", "+\t\tDisplay display= getDisplay();", "+\t\tif (display != null)", "+\t\t\tdisplay.setMacFocusHandle(((Shell)shell).shellHandle, handle);", "+\t}", "+", "+\treturn isFocusControl ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ba513d23d4fd8ed4f7bc5b1a1ffe7cf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "894e6297387f95786ffea31acd399cd5951b0afc", "commitAfterChange": "0299b6fa52a38fa59ea3388c9448a5f9aa6191be", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 61, "signatureBeforeChange": "  LRESULT WM_ACTIVATE (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_ACTIVATE (int wParam, int lParam)", "diff": ["-\t\tsendEvent (SWT.Activate);", "-\t\tif (isDisposed ()) return LRESULT.ZERO;", "+\t\tControl control = display.findControl (lParam);", "+\t\tif (control == null || control instanceof Shell) {", "+\t\t\tif (this instanceof Shell) {", "+\t\t\t\tsendEvent (SWT.Activate);", "+\t\t\t\tif (isDisposed ()) return LRESULT.ZERO;", "+\t\t\t}", "+\t\t}", "-\t\tif (traverseGroup (true)) return LRESULT.ZERO;", "-\t", "-\t\tShell shell = getShell ();", "-\t\tshell.setActiveControl (null);", "-\t\tif (isDisposed ()) return LRESULT.ZERO;", "-\t\tsendEvent (SWT.Deactivate);", "-\t\tif (isDisposed ()) return LRESULT.ZERO;", "+\t\tControl control = display.findControl (lParam);", "+\t\tif (control == null || control instanceof Shell) {", "+\t\t\tif (this instanceof Shell) {", "+\t\t\t\tShell shell = getShell ();", "+\t\t\t\tshell.setActiveControl (null);", "+\t\t\t\tif (isDisposed ()) return LRESULT.ZERO;", "+\t\t\t\tsendEvent (SWT.Deactivate);", "+\t\t\t\tif (isDisposed ()) return LRESULT.ZERO;", "+\t\t\t}", "+\t\t}"]}], "num": 7328}