{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "981881338603f094741306475836b0b4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c802f7f09f09f726685e2079d3818d3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "2681b36d06d25661e1afa812c564628264b6526a", "commitAfterChange": "45c68f1ada5bfde16f69fc960b9db062c99361b2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void drawFocus(int x, int y, int width, int height)", "signatureAfterChange": " public void drawFocus(int x, int y, int width, int height)", "diff": ["-\t\t//\tint[] metric = new int[1];", "-\t\t//\tOS.GetThemeMetric(OS.kThemeMetricFocusRectOutset, metric);", "-\t\t//\tCGRect rect = new CGRect ();", "-\t\t//\trect.x = x + metric[0];", "-\t\t//\trect.y = y + metric[0];", "-\t\t//\trect.width = width - metric[0] * 2;", "-\t\t//\trect.height = height - metric[0] * 2;", "-\t\t//\tOS.HIThemeDrawFocusRect(rect, true, handle, OS.kHIThemeOrientationNormal);", "+\t\tint[] metric = new int[1];", "+\t\tOS.GetThemeMetric(OS.kThemeMetricFocusRectOutset, metric);", "+\t\tCGRect rect = new CGRect();", "+//\t\trect.origin.x = x; //- metric[0];", "+//\t\trect.origin.y = y; //- metric[0];", "+//\t\trect.size.width = width; // + metric[0] * 2;", "+//\t\trect.size.height = height; //+ metric[0] * 2;", "+\t\trect.origin.x = x + metric[0];", "+\t\trect.origin.y = y + metric[0];", "+\t\trect.size.width = width - metric[0] * 2;", "+\t\trect.size.height = height - metric[0] * 2;", "+\t\tOS.HIThemeDrawFocusRect(rect, true, handle.graphicsPort(), OS.kHIThemeOrientationNormal);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08cf545839282a1a080d357e5ba2854e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "f6e875ed31f2c4aed555fb5710379995dc8e6529", "commitAfterChange": "d77fd0933ebe489c9b42022eb9c894092dd1d274", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void drawFocus(int x, int y, int width, int height)", "signatureAfterChange": " public void drawFocus(int x, int y, int width, int height)", "diff": ["-\tif (OS.VERSION >= 0x1030) {", "-\t\tint[] metric = new int[1];", "-\t\tOS.GetThemeMetric(OS.kThemeMetricFocusRectOutset, metric);", "-\t\tCGRect rect = new CGRect ();", "-\t\trect.x = x + metric[0];", "-\t\trect.y = y + metric[0];", "-\t\trect.width = width - metric[0] * 2;", "-\t\trect.height = height - metric[0] * 2;", "-\t\tOS.HIThemeDrawFocusRect(rect, true, handle, OS.kHIThemeOrientationNormal);", "-\t}", "+\tint[] metric = new int[1];", "+\tOS.GetThemeMetric(OS.kThemeMetricFocusRectOutset, metric);", "+\tCGRect rect = new CGRect ();", "+\trect.x = x + metric[0];", "+\trect.y = y + metric[0];", "+\trect.width = width - metric[0] * 2;", "+\trect.height = height - metric[0] * 2;", "+\tOS.HIThemeDrawFocusRect(rect, true, handle, OS.kHIThemeOrientationNormal);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3279a7309c9f1bc4c8e82e4336a117b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void drawFocus(int x, int y, int width, int height)", "signatureAfterChange": " public void drawFocus(int x, int y, int width, int height)", "diff": ["-\tcheckGC(CLIPPING | TRANSFORM);", "-//\tint[] metric = new int[1];", "-//\tOS.GetThemeMetric(OS.kThemeMetricFocusRectOutset, metric);", "-//\tCGRect rect = new CGRect ();", "-//\trect.x = x + metric[0];", "-//\trect.y = y + metric[0];", "-//\trect.width = width - metric[0] * 2;", "-//\trect.height = height - metric[0] * 2;", "-//\tOS.HIThemeDrawFocusRect(rect, true, handle, OS.kHIThemeOrientationNormal);", "-\tuncheckGC();", "+\tNSAutoreleasePool pool = checkGC(CLIPPING | TRANSFORM);", "+\ttry {", "+\t\t//\tint[] metric = new int[1];", "+\t\t//\tOS.GetThemeMetric(OS.kThemeMetricFocusRectOutset, metric);", "+\t\t//\tCGRect rect = new CGRect ();", "+\t\t//\trect.x = x + metric[0];", "+\t\t//\trect.y = y + metric[0];", "+\t\t//\trect.width = width - metric[0] * 2;", "+\t\t//\trect.height = height - metric[0] * 2;", "+\t\t//\tOS.HIThemeDrawFocusRect(rect, true, handle, OS.kHIThemeOrientationNormal);", "+\t} finally {", "+\t\tuncheckGC(pool);", "+\t}"]}], "num": 59186}