{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a453c59175d9ae7b2bab1ed9acf565b6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebdb561f15d53a703d76a6d916b462e7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandItem.java", "commitBeforeChange": "a3a1752d4cca52a10819bc086957df9ad04a0a87", "commitAfterChange": "9effcc166dfa61e54b0f9bb76b17f1175f53b69b", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  void resizeControl (int yScroll)", "signatureAfterChange": "  void resizeControl (int yScroll)", "diff": ["-\tGtkAllocation allocation = new GtkAllocation ();", "-\t\t\tint x = 0;", "-\t\t\tint y = 0;", "-\t\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "-\t\t\t\tOS.gtk_widget_get_allocation(clientHandle, allocation);", "-\t\t\t\tx = allocation.x;", "-\t\t\t\ty = allocation.y;", "-\t\t\t} else {", "-\t\t\t\tx = OS.GTK_WIDGET_X (clientHandle);", "-\t\t\t\ty = OS.GTK_WIDGET_Y (clientHandle);", "-\t\t\t}", "+\t\t\tGtkAllocation allocation = new GtkAllocation ();", "+\t\t\tgtk_widget_get_allocation (clientHandle, allocation);", "+\t\t\tint x = allocation.x;", "+\t\t\tint y = allocation.y;", "-\t\t\t\tint width = 0;", "-\t\t\t\tint height = 0;", "-\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "-\t\t\t\t\tOS.gtk_widget_get_allocation(clientHandle, allocation);", "-\t\t\t\t\twidth = allocation.width;", "-\t\t\t\t\theight = allocation.height;\t", "-\t\t\t\t} else {", "-\t\t\t\t\twidth = OS.GTK_WIDGET_WIDTH (clientHandle);", "-\t\t\t\t\theight = OS.GTK_WIDGET_HEIGHT (clientHandle);\t", "-\t\t\t\t}", "+\t\t\t\tint width = allocation.width;", "+\t\t\t\tint height = allocation.height;\t", "-\t\t\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "-\t\t\t\t\t\t\tOS.gtk_widget_get_allocation(parent.scrolledHandle, allocation);", "-\t\t\t\t\t\t\twidth = allocation.width - parent.vScrollBarWidth () - 2 * parent.spacing;\t", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\twidth = OS.GTK_WIDGET_WIDTH (parent.scrolledHandle) - parent.vScrollBarWidth () - 2 * parent.spacing;\t", "-\t\t\t\t\t\t}", "+\t\t\t\t\t\tgtk_widget_get_allocation (parent.scrolledHandle, allocation);", "+\t\t\t\t\t\twidth = allocation.width - parent.vScrollBarWidth () - 2 * parent.spacing;\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14fa7f4c64578aa99e1b814bf1297e3a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ScrollBar.java", "commitBeforeChange": "a3a1752d4cca52a10819bc086957df9ad04a0a87", "commitAfterChange": "9effcc166dfa61e54b0f9bb76b17f1175f53b69b", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public Rectangle getThumbBounds ()", "signatureAfterChange": " public Rectangle getThumbBounds ()", "diff": ["+\tgtk_widget_get_allocation (handle, allocation);", "-\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "-\t\t\tOS.gtk_widget_get_allocation(handle, allocation);", "-\t\t\tx = allocation.x;", "-\t\t\twidth = allocation.width;", "-\t\t} else {", "-\t\t\tx = OS.GTK_WIDGET_X (handle);", "-\t\t\twidth = OS.GTK_WIDGET_WIDTH (handle);", "-\t\t}", "+\t\tx = allocation.x;", "+\t\twidth = allocation.width;", "-\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "-\t\t\tOS.gtk_widget_get_allocation(handle, allocation);", "-\t\t\ty = allocation.y;", "-\t\t\theight = allocation.height;", "-\t\t} else {", "-\t\t\ty = OS.GTK_WIDGET_Y (handle);", "-\t\t\theight = OS.GTK_WIDGET_HEIGHT (handle);", "-\t\t}", "+\t\ty = allocation.y;", "+\t\theight = allocation.height;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "833d92ee581dc40981581d185154c8b8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "a3a1752d4cca52a10819bc086957df9ad04a0a87", "commitAfterChange": "9effcc166dfa61e54b0f9bb76b17f1175f53b69b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public Rectangle computeTrim (int x, int y, int width, int height)", "signatureAfterChange": "  public Rectangle computeTrim (int x, int y, int width, int height)", "diff": ["-\tint clientX = 0;", "-\tint clientY = 0;", "-\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "-\t\tOS.gtk_widget_get_allocation(clientHandle, allocation);", "-\t\tclientX = allocation.x;", "-\t\tclientY = allocation.y;", "-\t} else {", "-\t\tclientX = OS.GTK_WIDGET_X (clientHandle);", "-\t\tclientY = OS.GTK_WIDGET_Y (clientHandle);\t", "-\t}", "+\tgtk_widget_get_allocation (clientHandle, allocation);", "+\tint clientX = allocation.x;", "+\tint clientY = allocation.y;", "-\t\tint parentHeight = 0;", "-\t\tint clientHeight = 0;", "-\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "-\t\t\tOS.gtk_widget_get_allocation(clientHandle, allocation);", "-\t\t\tclientHeight = allocation.height;", "-\t\t\tOS.gtk_widget_get_allocation(handle, allocation);", "-\t\t\tparentHeight = allocation.height;", "-\t\t} else {", "-\t\t\tparentHeight = OS.GTK_WIDGET_HEIGHT (handle);", "-\t\t\tclientHeight = OS.GTK_WIDGET_HEIGHT (clientHandle);", "-\t\t}", "+\t\tint clientHeight = allocation.height;", "+\t\tgtk_widget_get_allocation (handle, allocation);", "+\t\tint parentHeight = allocation.height;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab5a4e86e6c2c7ff21d568526e4ce66f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "a3a1752d4cca52a10819bc086957df9ad04a0a87", "commitAfterChange": "9effcc166dfa61e54b0f9bb76b17f1175f53b69b", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "  void moveChildren(int oldWidth)", "signatureAfterChange": "  void moveChildren(int oldWidth)", "diff": ["-\t\tint x = 0;", "-\t\tint y = 0;", "-\t\tint controlWidth = 0;", "-\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "-\t\t\tOS.gtk_widget_get_allocation(topHandle, allocation);", "-\t\t\tx = allocation.x;", "-\t\t\ty = allocation.y;", "-\t\t\tcontrolWidth = (child.state & ZERO_WIDTH) != 0 ? 0 : allocation.width;", "-\t\t} else {", "-\t\t\tx = OS.GTK_WIDGET_X (topHandle);", "-\t\t\ty = OS.GTK_WIDGET_Y (topHandle);", "-\t\t\tcontrolWidth = (child.state & ZERO_WIDTH) != 0 ? 0 : OS.GTK_WIDGET_WIDTH (topHandle);", "-\t\t}\t", "+\t\tgtk_widget_get_allocation (topHandle, allocation);", "+\t\tint x = allocation.x;", "+\t\tint y = allocation.y;", "+\t\tint controlWidth = (child.state & ZERO_WIDTH) != 0 ? 0 : allocation.width;", "-\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "-\t\t\tOS.gtk_widget_get_allocation(topHandle, allocation);", "-\t\t} else {", "-\t\t\tallocation.width = OS.GTK_WIDGET_WIDTH (topHandle);", "-\t\t\tallocation.height = OS.GTK_WIDGET_HEIGHT (topHandle);\t", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "649dec2e6ab419c62a7c973ad50e652f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "91d12e7fb40e96dc6324f0e393e3f0f025792ace", "commitAfterChange": "14be55c4cbe46a16b7300921fd246420e99a1bad", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 103, "signatureBeforeChange": " \t LRESULT wmNotifyChild (int wParam, int lParam)", "signatureAfterChange": " \t LRESULT wmNotifyChild (int wParam, int lParam)", "diff": ["-\t\t\t\tif (pnmlv.iItem != -1 && (pnmlv.uChanged & OS.LVIF_STATE) != 0) {", "-\t\t\t\t\tboolean isFocus = (pnmlv.uNewState & OS.LVIS_FOCUSED) != 0;", "-\t\t\t\t\tint index = OS.SendMessage (handle, OS.LVM_GETNEXTITEM, -1, OS.LVNI_FOCUSED);", "-\t\t\t\t\tif ((style & SWT.MULTI) != 0) {", "-\t\t\t\t\t\tif (OS.GetKeyState (OS.VK_CONTROL) < 0) {", "-\t\t\t\t\t\t\tif (!isFocus) {", "-\t\t\t\t\t\t\t\tif (index == pnmlv.iItem) {", "-\t\t\t\t\t\t\t\t\tboolean isSelected = (pnmlv.uNewState & OS.LVIS_SELECTED) != 0;", "-\t\t\t\t\t\t\t\t\tboolean wasSelected = (pnmlv.uOldState & OS.LVIS_SELECTED) != 0;", "-\t\t\t\t\t\t\t\t\tisFocus = isSelected != wasSelected;", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tisFocus = mouseDown;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tif (OS.GetKeyState (OS.VK_SPACE) < 0) isFocus = true;", "-\t\t\t\t\tif (isFocus) {", "-\t\t\t\t\t\tEvent event = new Event();", "-\t\t\t\t\t\tif (index != -1) {", "-\t\t\t\t\t\t\t/*", "-\t\t\t\t\t\t\t* This code is intentionally commented.", "-\t\t\t\t\t\t\t*/", "-//\t\t\t\t\t\t\tOS.SendMessage (handle, OS.LVM_ENSUREVISIBLE, index, 0);", "-\t\t\t\t\t\t\tevent.item = _getItem (index);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tpostEvent (SWT.Selection, event);", "+\t\t\t\tif ((pnmlv.uChanged & OS.LVIF_STATE) != 0) {", "+\t\t\t\t\tif (pnmlv.iItem == -1) {", "+\t\t\t\t\t\twasSelected = true;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tboolean oldSelected = (pnmlv.uNewState & OS.LVIS_SELECTED) != 0;", "+\t\t\t\t\t\tboolean newSelected = (pnmlv.uOldState & OS.LVIS_SELECTED) != 0;", "+\t\t\t\t\t\tif (oldSelected != newSelected) wasSelected = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49883a3d67a43d416ad5a6f07c4b3f48", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "4510458698a44cfe0ebb614544242955fbc20f7a", "commitAfterChange": "d07e719160ad9b5428874b3929f88d189e7c89ac", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 97, "signatureBeforeChange": "\r void sendKeyEvent (int type, XKeyEvent xEvent)", "signatureAfterChange": "\r byte [] sendKeyEvent (int type, XKeyEvent xEvent)", "diff": ["-void sendKeyEvent (int type, XKeyEvent xEvent) {\r", "+byte [] sendKeyEvent (int type, XKeyEvent xEvent) {\r", "-\t\tint size = 0;\r", "-\t\tbuffer = new byte [2];\r", "-\t\tint xIC = inputContext ();\r", "-\t\tif (xIC == 0) {\r", "-\t\t\tsize = OS.XmImMbLookupString (handle, xEvent, buffer, buffer.length, keysym, status);\r", "-\t\t\tif (status [0] == OS.XBufferOverflow) {\r", "-\t\t\t\tbuffer = new byte [size];\r", "-\t\t\t\tsize = OS.XmImMbLookupString (handle, xEvent, buffer, size, keysym, status);\r", "-\t\t\t}\r", "-\t\t} else {\r", "-\t\t\tsize = OS.XmbLookupString (xIC, xEvent, buffer, buffer.length, keysym, status);\r", "-\t\t\tif (status [0] == OS.XBufferOverflow) {\r", "-\t\t\t\tbuffer = new byte [size];\r", "-\t\t\t\tsize = OS.XmbLookupString (xIC, xEvent, buffer, size, keysym, status);\r", "-\t\t\t}\r", "+\t\t/*\r", "+\t\t* Bug in Motif. On Linux only, XmImMbLookupString() does not return \r", "+\t\t* XBufferOverflow as the status if the buffer is too small. The fix is\r", "+\t\t* to pass a bigger buffer.\r", "+\t\t*/\r", "+\t\tbuffer = new byte [512];\r", "+\t\tint size = OS.XmImMbLookupString (handle, xEvent, buffer, buffer.length, keysym, status);\r", "+\t\tif (status [0] == OS.XBufferOverflow) {\r", "+\t\t\tbuffer = new byte [size];\r", "+\t\t\tsize = OS.XmImMbLookupString (handle, xEvent, buffer, size, keysym, status);\r", "-\t\tif (size == 0) return;\r", "+\t\tif (size == 0) return null;\r", "-\tif (IsSunOS) {\r", "+\tif (OS.IsSunOS) {\r", "+\t/* Use the character encoding for the default locale */\r", "-\tfor (int i=0; i<result.length; i++) {\r", "+\tint index = 0;\r", "+\twhile (index < result.length) {\r", "+\t\tif (result [index] == 0) break;\r", "-\t\tevent.character = result [i];\r", "+\t\tevent.character = result [index];\r", "+\t\tindex++;\r", "+\t\r", "+\treturn buffer;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df308cb77fbc95c64122cf11d392a653", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "6752d439d76030429e87bce5575ca5fc06a4993b", "commitAfterChange": "44db0957d87cb491a85384855623a3380a72614e", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " public Control getFocusControl ()", "signatureAfterChange": " public Control getFocusControl ()", "diff": ["-\t\tif (view != null && view.respondsToSelector(OS.sel_tag)) {", "-\t\t\tint tag = OS.objc_msgSend(view.id, OS.sel_tag);", "-\t\t\tif (tag != -1) {", "-\t\t\t\tObject object = OS.JNIGetObject(tag);", "-\t\t\t\tif (object instanceof Control) {", "-\t\t\t\t\t//TODO go up hierarchy", "-\t\t\t\t\treturn (Control)object;", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\t/*", "-\t\t\t\t* If the first responder is the shared field editor then answer its", "-\t\t\t\t* delegate as the focus control.", "-\t\t\t\t*/", "-\t\t\t\tif (view.isKindOfClass(NSText.static_class())) {", "-\t\t\t\t\tNSText text = new NSText(view.id);", "-\t\t\t\t\tif (text.isFieldEditor()) {", "-\t\t\t\t\t\tid delegateId = text.delegate();", "-\t\t\t\t\t\tif (delegateId != null) {", "-\t\t\t\t\t\t\tNSObject delegate = new NSObject(delegateId.id);", "-\t\t\t\t\t\t\tif (delegate.respondsToSelector(OS.sel_tag)) {", "-\t\t\t\t\t\t\t\ttag = OS.objc_msgSend(delegate.id, OS.sel_tag);", "-\t\t\t\t\t\t\t\tif (tag != 0 && tag != -1) {", "-\t\t\t\t\t\t\t\t\tObject object = OS.JNIGetObject(tag);", "-\t\t\t\t\t\t\t\t\tif (object instanceof Control) {", "-\t\t\t\t\t\t\t\t\t\treturn (Control)object;", "-\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}", "+\t\tWidget widget = getWidget (view.id);", "+\t\tif (widget != null && widget instanceof Control) {", "+\t\t\t//TODO go up hierarchy", "+\t\t\treturn (Control)widget;", "+\t\t} else {", "+\t\t\t/*", "+\t\t\t* If the first responder is the shared field editor then answer its", "+\t\t\t* delegate as the focus control.", "+\t\t\t*/", "+\t\t\tif (view.isKindOfClass(NSText.static_class())) {", "+\t\t\t\tNSText text = new NSText(view.id);", "+\t\t\t\tif (text.isFieldEditor()) {", "+\t\t\t\t\tid delegateId = text.delegate();", "+\t\t\t\t\tif (delegateId != null) {", "+\t\t\t\t\t\twidget = getWidget (delegateId.id);", "+\t\t\t\t\t\tif (widget != null && widget instanceof Control) {", "+\t\t\t\t\t\t\treturn (Control)widget;"]}], "num": 34635}