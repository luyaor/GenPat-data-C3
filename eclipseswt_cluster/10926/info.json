{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2acf1b883c580fcd4fec3e1f6123036c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fd8a02866103c44655a9c8eaead191b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "4a12d1d6eea88c5ee824f832639afbd434b4c67f", "commitAfterChange": "cb6c1213faecee5a06dc536c9d7727408f52370a", "methodNumberBeforeChange": 113, "methodNumberAfterChange": 113, "signatureBeforeChange": "  String toolTipText (NMTTDISPINFO hdr)", "signatureAfterChange": "  String toolTipText (NMTTDISPINFO hdr)", "diff": ["-\t\tint pos = OS.GetMessagePos ();", "-\t\tPOINT pt = new POINT();", "-\t\tpt.x = (short) (pos & 0xFFFF);", "-\t\tpt.y = (short) (pos >> 16);", "-\t\tOS.ScreenToClient (handle, pt);", "-\t\tTVHITTESTINFO lpht = new TVHITTESTINFO ();", "-\t\tlpht.x = pt.x;", "-\t\tlpht.y = pt.y;", "-\t\tOS.SendMessage (handle, OS.TVM_HITTEST, 0, lpht);", "-\t\tif (lpht.hItem != 0) {", "-\t\t\tint hDC = OS.GetDC (handle);", "-\t\t\tint oldFont = 0, newFont = OS.SendMessage (handle, OS.WM_GETFONT, 0, 0);", "-\t\t\tif (newFont != 0) oldFont = OS.SelectObject (hDC, newFont);", "-\t\t\tRECT rect = new RECT ();", "-\t\t\tOS.GetClientRect (hwndParent, rect);", "-\t\t\tOS.MapWindowPoints (hwndParent, handle, rect, 2);", "-\t\t\tTreeItem item = _getItem (lpht.hItem);", "-\t\t\tString text = null;", "-\t\t\tint index = 0, count = Math.max (1, OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0));", "-\t\t\tint [] order = new int [count];", "-\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETORDERARRAY, count, order);", "-\t\t\twhile (index < count) {", "-\t\t\t\tint hFont = item.cellFont != null ? item.cellFont [order [index]] : -1;", "-\t\t\t\tif (hFont == -1) hFont = item.font;", "-\t\t\t\tif (hFont != -1) hFont = OS.SelectObject (hDC, hFont);", "-\t\t\t\tRECT cellRect = item.getBounds (order [index], true, false, true, false, true, hDC);", "-\t\t\t\tif (hFont != -1) OS.SelectObject (hDC, hFont);", "-\t\t\t\tif (cellRect.left > rect.right) break;", "-\t\t\t\tcellRect.right = Math.min (cellRect.right, rect.right);", "-\t\t\t\tif (OS.PtInRect (cellRect, pt)) {", "-\t\t\t\t\tRECT textRect = item.getBounds (order [index], true, false, false, false, false, hDC);", "-\t\t\t\t\tif (textRect.right > cellRect.right) {", "-\t\t\t\t\t\tif (order [index] == 0) {", "-\t\t\t\t\t\t\ttext = item.text;", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tString[] strings = item.strings;", "-\t\t\t\t\t\t\tif (strings != null) text = strings [order [index]];", "+\t\tif (toolTipText != null) return \"\";", "+\t\tif (!hooks (SWT.MeasureItem) && !hooks (SWT.EraseItem) && !hooks (SWT.PaintItem)) {", "+\t\t\tint pos = OS.GetMessagePos ();", "+\t\t\tPOINT pt = new POINT();", "+\t\t\tpt.x = (short) (pos & 0xFFFF);", "+\t\t\tpt.y = (short) (pos >> 16);", "+\t\t\tOS.ScreenToClient (handle, pt);", "+\t\t\tTVHITTESTINFO lpht = new TVHITTESTINFO ();", "+\t\t\tlpht.x = pt.x;", "+\t\t\tlpht.y = pt.y;", "+\t\t\tOS.SendMessage (handle, OS.TVM_HITTEST, 0, lpht);", "+\t\t\tif (lpht.hItem != 0) {", "+\t\t\t\tint hDC = OS.GetDC (handle);", "+\t\t\t\tint oldFont = 0, newFont = OS.SendMessage (handle, OS.WM_GETFONT, 0, 0);", "+\t\t\t\tif (newFont != 0) oldFont = OS.SelectObject (hDC, newFont);", "+\t\t\t\tRECT rect = new RECT ();", "+\t\t\t\tOS.GetClientRect (hwndParent, rect);", "+\t\t\t\tOS.MapWindowPoints (hwndParent, handle, rect, 2);", "+\t\t\t\tTreeItem item = _getItem (lpht.hItem);", "+\t\t\t\tString text = null;", "+\t\t\t\tint index = 0, count = Math.max (1, OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0));", "+\t\t\t\tint [] order = new int [count];", "+\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETORDERARRAY, count, order);", "+\t\t\t\twhile (index < count) {", "+\t\t\t\t\tint hFont = item.cellFont != null ? item.cellFont [order [index]] : -1;", "+\t\t\t\t\tif (hFont == -1) hFont = item.font;", "+\t\t\t\t\tif (hFont != -1) hFont = OS.SelectObject (hDC, hFont);", "+\t\t\t\t\tRECT cellRect = item.getBounds (order [index], true, false, true, false, true, hDC);", "+\t\t\t\t\tif (hFont != -1) OS.SelectObject (hDC, hFont);", "+\t\t\t\t\tif (cellRect.left > rect.right) break;", "+\t\t\t\t\tcellRect.right = Math.min (cellRect.right, rect.right);", "+\t\t\t\t\tif (OS.PtInRect (cellRect, pt)) {", "+\t\t\t\t\t\tRECT textRect = item.getBounds (order [index], true, false, false, false, false, hDC);", "+\t\t\t\t\t\tif (textRect.right > cellRect.right) {", "+\t\t\t\t\t\t\tif (order [index] == 0) {", "+\t\t\t\t\t\t\t\ttext = item.text;", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tString[] strings = item.strings;", "+\t\t\t\t\t\t\t\tif (strings != null) text = strings [order [index]];", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreak;", "-\t\t\t\t\tbreak;", "+\t\t\t\t\tindex++;", "-\t\t\t\tindex++;", "+\t\t\t\tif (newFont != 0) OS.SelectObject (hDC, oldFont);", "+\t\t\t\tOS.ReleaseDC (handle, hDC);", "+\t\t\t\tif (text != null) return text;", "-\t\t\tif (newFont != 0) OS.SelectObject (hDC, oldFont);", "-\t\t\tOS.ReleaseDC (handle, hDC);", "-\t\t\tif (text != null) return text;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d745c3ffbf67b37b44139d139e101aa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "425f5e146ccfeedf0e8a9e71cecdd40c504f2ca6", "commitAfterChange": "85cc420622362630290dcdb22e1f594b3766e6be", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\tif (wHint != SWT.DEFAULT) width = wHint;", "-\t\tif (hHint != SWT.DEFAULT) height = hHint;", "-\t\twidth += border * 2; height += border * 2;", "-\t\treturn new Point (width, height);", "-\t}", "-\tint extra = 0;", "-\tboolean hasImage = image != null, hasText = true;", "-\tif (OS.COMCTL32_MAJOR < 6) {", "-\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "-\t\thasImage = (bits & (OS.BS_BITMAP | OS.BS_ICON)) != 0;", "-\t\tif (hasImage) hasText = false;", "-\t}", "-\tif (hasImage) {", "-\t\tif (image != null) {", "-\t\t\tRectangle rect = image.getBounds ();", "-\t\t\twidth = rect.width;", "-\t\t\tif (hasText && text.length () != 0) {", "-\t\t\t\twidth += MARGIN * 2;", "+\t} else {", "+\t\tif ((style & SWT.COMMAND) != 0) {", "+\t\t\tSIZE size = new SIZE ();", "+\t\t\tif (wHint != SWT.DEFAULT) {", "+\t\t\t\tsize.cx = wHint;", "+\t\t\t\tOS.SendMessage (handle, OS.BCM_GETIDEALSIZE, 0, size);", "+\t\t\t\twidth = size.cx;", "+\t\t\t\theight = size.cy;", "+\t\t\t} else {", "+\t\t\t\tOS.SendMessage (handle, OS.BCM_GETIDEALSIZE, 0, size);", "+\t\t\t\twidth = size.cy;", "+\t\t\t\theight = size.cy;", "+\t\t\t\tsize.cy = 0;", "+\t\t\t\twhile (size.cy != height) {", "+\t\t\t\t\tsize.cx = width++;", "+\t\t\t\t\tsize.cy = 0;", "+\t\t\t\t\tOS.SendMessage (handle, OS.BCM_GETIDEALSIZE, 0, size);", "+\t\t\t\t}", "-\t\t\theight = rect.height;", "-\t\t\textra = MARGIN * 2;", "-\t\t}", "-\t}", "-\tif (hasText) {", "-\t\tint oldFont = 0;", "-\t\tint hDC = OS.GetDC (handle);", "-\t\tint newFont = OS.SendMessage (handle, OS.WM_GETFONT, 0, 0);", "-\t\tif (newFont != 0) oldFont = OS.SelectObject (hDC, newFont);", "-\t\tTEXTMETRIC lptm = OS.IsUnicode ? (TEXTMETRIC) new TEXTMETRICW () : new TEXTMETRICA ();", "-\t\tOS.GetTextMetrics (hDC, lptm);", "-\t\tint length = text.length ();", "-\t\tif (length == 0) {", "-\t\t\theight = Math.max (height, lptm.tmHeight);", "-\t\t\textra = Math.max (MARGIN * 2, lptm.tmAveCharWidth);", "-\t\t\tTCHAR buffer = new TCHAR (getCodePage (), text, true);", "-\t\t\tRECT rect = new RECT ();", "-\t\t\tint flags = OS.DT_CALCRECT | OS.DT_SINGLELINE;", "-\t\t\tOS.DrawText (hDC, buffer, -1, rect, flags);", "-\t\t\twidth += rect.right - rect.left;", "-\t\t\theight = Math.max (height, rect.bottom - rect.top);", "+\t\t\tint extra = 0;", "+\t\t\tboolean hasImage = image != null, hasText = true;", "+\t\t\tif (OS.COMCTL32_MAJOR < 6) {", "+\t\t\t\tif ((style & SWT.PUSH) == 0) {", "+\t\t\t\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "+\t\t\t\t\thasImage = (bits & (OS.BS_BITMAP | OS.BS_ICON)) != 0;", "+\t\t\t\t\tif (hasImage) hasText = false;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (hasImage) {", "+\t\t\t\tif (image != null) {", "+\t\t\t\t\tRectangle rect = image.getBounds ();", "+\t\t\t\t\twidth = rect.width;", "+\t\t\t\t\tif (hasText && text.length () != 0) {", "+\t\t\t\t\t\twidth += MARGIN * 2;", "+\t\t\t\t\t}", "+\t\t\t\t\theight = rect.height;", "+\t\t\t\t\textra = MARGIN * 2;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (hasText) {", "+\t\t\t\tint oldFont = 0;", "+\t\t\t\tint hDC = OS.GetDC (handle);", "+\t\t\t\tint newFont = OS.SendMessage (handle, OS.WM_GETFONT, 0, 0);", "+\t\t\t\tif (newFont != 0) oldFont = OS.SelectObject (hDC, newFont);", "+\t\t\t\tTEXTMETRIC lptm = OS.IsUnicode ? (TEXTMETRIC) new TEXTMETRICW () : new TEXTMETRICA ();", "+\t\t\t\tOS.GetTextMetrics (hDC, lptm);", "+\t\t\t\tint length = text.length ();", "+\t\t\t\tif (length == 0) {", "+\t\t\t\t\theight = Math.max (height, lptm.tmHeight);", "+\t\t\t\t} else {", "+\t\t\t\t\textra = Math.max (MARGIN * 2, lptm.tmAveCharWidth);", "+\t\t\t\t\tTCHAR buffer = new TCHAR (getCodePage (), text, true);", "+\t\t\t\t\tRECT rect = new RECT ();", "+\t\t\t\t\tint flags = OS.DT_CALCRECT | OS.DT_SINGLELINE;", "+\t\t\t\t\tOS.DrawText (hDC, buffer, -1, rect, flags);", "+\t\t\t\t\twidth += rect.right - rect.left;", "+\t\t\t\t\theight = Math.max (height, rect.bottom - rect.top);", "+\t\t\t\t}", "+\t\t\t\tif (newFont != 0) OS.SelectObject (hDC, oldFont);", "+\t\t\t\tOS.ReleaseDC (handle, hDC);", "+\t\t\t}", "+\t\t\tif ((style & (SWT.CHECK | SWT.RADIO)) != 0) {", "+\t\t\t\twidth += CHECK_WIDTH + extra;", "+\t\t\t\theight = Math.max (height, CHECK_HEIGHT + 3);", "+\t\t\t}", "+\t\t\tif ((style & (SWT.PUSH | SWT.TOGGLE)) != 0) {", "+\t\t\t\twidth += 12;  height += 10;", "+\t\t\t}", "-\t\tif (newFont != 0) OS.SelectObject (hDC, oldFont);", "-\t\tOS.ReleaseDC (handle, hDC);", "-\t}", "-\tif ((style & (SWT.CHECK | SWT.RADIO)) != 0) {", "-\t\twidth += CHECK_WIDTH + extra;", "-\t\theight = Math.max (height, CHECK_HEIGHT + 3);", "-\t}", "-\tif ((style & (SWT.PUSH | SWT.TOGGLE)) != 0) {", "-\t\twidth += 12;  height += 10;", "-\twidth += border * 2; height += border * 2;", "+\twidth += border * 2; ", "+\theight += border * 2;"]}], "num": 10926}