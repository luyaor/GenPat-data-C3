{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5ed455d17d809afd77b871d76efaf2d7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "681390a1eaa8579f1ea735626e0720b8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "272967205f3824ec29456112026262c64ae69dfa", "commitAfterChange": "fc62fa389f9358a82d98c59fbeba910f7ca8c593", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 70, "signatureBeforeChange": "  boolean sendMouseEvent (int type, int msg, int wParam, int lParam, Event event)", "signatureAfterChange": "  void mapEvent (int hwnd, Event event)", "diff": ["+void mapEvent (int hwnd, Event event) {", "+\tif (hwnd != handle) {", "+\t\tPOINT point = new POINT ();", "+\t\tpoint.x = event.x;", "+\t\tpoint.y = event.y;", "+\t\tOS.MapWindowPoints (hwnd, handle, point, 1);", "+\t\tevent.x = point.x;", "+\t\tevent.y = point.y;", "+\t}", "+}", "-", "-boolean sendMouseEvent (int type, int msg, int wParam, int lParam, Event event) {", "-\tpostEvent (type, event);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2de15106d4e5d97bbcc8c58bcb052c9e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "e2e7896b3cf0e9c97f6038a8e9fe8cfb357377bf", "commitAfterChange": "d2e697ac12d333462fab7aa686c0fbe95379eed0", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void showSelection ()", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["+", "+public Point computeSize (int wHint, int hHint, boolean changed) {", "+\tcheckWidget ();", "+\tif ((style & SWT.SINGLE) != 0) return super.computeSize (wHint, hHint, changed);", "+\tPoint size = computeNativeSize(handle, wHint, hHint, changed);", "+\tRectangle trim = computeTrim (0, 0, size.x, size.y);", "+\tsize.x = trim.width;", "+\tsize.y = trim.height;", "+\treturn size;", "-\t/*if ((style & SWT.SINGLE) != 0) return;", "-\tint start_pos, end_pos, pos;", "-\tpos = OS.gtk_editable_get_position (handle);", "-\tGtkEditable widget = new GtkEditable ();", "-\tOS.memmove (widget, handle, GtkEditable.sizeof);", "-\tstart_pos = Math.min(widget.selection_start_pos, widget.selection_end_pos) ;", "-\tend_pos = Math.max(widget.selection_start_pos, widget.selection_end_pos) ;", "-\tGtkText gtktext = new GtkText ();", "-\tOS.memmove (gtktext, handle, GtkText.sizeof);", "-\tint topCharIndex=gtktext.first_line_start_index;", "-\tif ( (topCharIndex > start_pos && topCharIndex < end_pos) || topCharIndex==start_pos ||", "-\t\ttopCharIndex == end_pos) return;", "-\tif (pos < start_pos || pos > end_pos) {", "-\t\tint adjustmentHandle = OS.gtk_scrolled_window_get_vadjustment(scrolledHandle);", "-\t\tGtkAdjustment adjustment = new GtkAdjustment(adjustmentHandle);", "-\t\tString tmpString= new String(getText(0,start_pos));", "-\t\tint currentln=getLineNumberInString(tmpString, '\\n');", "-\t\tint adjust = (int)(currentln*adjustment.upper/getLineCount()-adjustment.page_increment);", "-\t\tif (adjust <= 0) ", "-\t\t\tOS.gtk_adjustment_set_value (verticalBar.handle, 0);", "-\t\telse", "-\t\t\tOS.gtk_adjustment_set_value (verticalBar.handle, adjust);", "-\t\tOS.gtk_adjustment_value_changed(verticalBar.handle);", "-\t\tOS.gtk_editable_set_position (handle, widget.selection_end_pos);", "-\t\tOS.gtk_editable_select_region (handle, widget.selection_start_pos, widget.selection_end_pos);", "-\t}", "-*/"]}], "num": 36632}