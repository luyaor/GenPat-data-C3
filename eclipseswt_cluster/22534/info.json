{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f281d3523c818d73a3bcc138b0e5bb94", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a2656d1ffd1ee9eda910573ac22a8ad", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "e0915feea84314f1929f7d98993453c25761945d", "commitAfterChange": "e5b655b350cf36b64f0c549d46d2b69fb2d566fe", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "  boolean updateFont (Font oldFont, Font newFont)", "signatureAfterChange": "  void updateFont (Font oldFont, Font newFont)", "diff": ["-boolean updateFont (Font oldFont, Font newFont) {", "+void updateFont (Font oldFont, Font newFont) {", "+\tsuper.updateFont (oldFont, newFont);", "-\tboolean changed = super.updateFont (oldFont, newFont);", "-\tif (changed) {", "-\t\t/*", "-\t\t* Call layout() directly so that subclasses that reimplement", "-\t\t* this method instead of using a Layout will set the size and", "-\t\t* location of their children when the font changes.", "-\t\t*/", "-\t\tlayout (true);", "-\t}", "-\treturn changed;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c8b5cbc6945634026255200cae281ea", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "837759a66222e92f6b3f2741fb466d1b2ff99187", "commitAfterChange": "68f73a31d3bd23bb9be3de8de4cfa69258483b46", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "  void updateFont (Font oldFont, Font newFont)", "signatureAfterChange": "  boolean updateFont (Font oldFont, Font newFont)", "diff": ["-void updateFont (Font oldFont, Font newFont) {", "+boolean updateFont (Font oldFont, Font newFont) {", "-\tsuper.updateFont (oldFont, newFont);", "-\t/*", "-\t* Call layout() directly so that subclasses that reimplement", "-\t* this method instead of using a Layout will set the size and", "-\t* location of their children when the font changes.", "-\t*/", "-\tlayout (true);", "+\tboolean changed = super.updateFont (oldFont, newFont);", "+\tif (changed) {", "+\t\t/*", "+\t\t* Call layout() directly so that subclasses that reimplement", "+\t\t* this method instead of using a Layout will set the size and", "+\t\t* location of their children when the font changes.", "+\t\t*/", "+\t\tlayout (true);", "+\t}", "+\treturn changed;"]}], "num": 22534}