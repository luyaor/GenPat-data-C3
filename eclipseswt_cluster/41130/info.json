{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "97287b98ebe165e05ac8b1fbb57ec803", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce4f7f05125c5408de622d8ddb0b1e31", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "e38d4aec3f79c42ea6666a7a37c026187a8aa6ea", "commitAfterChange": "d21e629ef4abced572c6f75dba9278a3acf6ff45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tif (image != null) {", "-\t\tRectangle rect = image.getBounds();", "-\t\twidth = rect.width;", "-\t\tif (text.length () != 0) width += MARGIN;", "-\t\theight = rect.height;", "-\t}", "-\tint hDC = OS.GetDC (handle);", "-\tint newFont = OS.SendMessage (handle, OS.WM_GETFONT, 0, 0);", "-\tint oldFont = OS.SelectObject (hDC, newFont);", "-\tint length = OS.GetWindowTextLength (handle);", "-\tif (length == 0) {", "-\t\tTEXTMETRIC tm = OS.IsUnicode ? (TEXTMETRIC) new TEXTMETRICW () : new TEXTMETRICA ();", "-\t\tOS.GetTextMetrics (hDC, tm);", "-\t\theight = Math.max (height, tm.tmHeight);", "-\t} else {", "-\t\tRECT rect = new RECT ();", "-\t\tint flags = OS.DT_CALCRECT | OS.DT_EDITCONTROL | OS.DT_EXPANDTABS;", "-\t\tif ((style & SWT.WRAP) != 0 && wHint != SWT.DEFAULT) {", "-\t\t\tflags |= OS.DT_WORDBREAK;", "-\t\t\trect.right = wHint;", "+\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "+\tboolean hasImage = (bits & OS.SS_OWNERDRAW) == OS.SS_OWNERDRAW, hasText = true;", "+\tif (hasImage) {", "+\t\tif (image != null) {", "+\t\t\tRectangle rect = image.getBounds();", "+\t\t\twidth += rect.width;", "+\t\t\theight += rect.height;", "+\t\t\tif (IMAGE_AND_TEXT) {", "+\t\t\t\tif (text.length () != 0) width += MARGIN;", "+\t\t\t} else {", "+\t\t\t\thasText = false;", "+\t\t\t}", "-\t\tTCHAR buffer = new TCHAR (getCodePage (), length + 1);", "-\t\tOS.GetWindowText (handle, buffer, length + 1);", "-\t\tOS.DrawText (hDC, buffer, length, rect, flags);", "-\t\twidth += rect.right - rect.left;", "-\t\theight = Math.max (height, rect.bottom - rect.top);", "-\tif (newFont != 0) OS.SelectObject (hDC, oldFont);", "-\tOS.ReleaseDC (handle, hDC);", "+\tif (hasText) {", "+\t\tint hDC = OS.GetDC (handle);", "+\t\tint newFont = OS.SendMessage (handle, OS.WM_GETFONT, 0, 0);", "+\t\tint oldFont = OS.SelectObject (hDC, newFont);", "+\t\tint length = OS.GetWindowTextLength (handle);", "+\t\tif (length == 0) {", "+\t\t\tTEXTMETRIC tm = OS.IsUnicode ? (TEXTMETRIC) new TEXTMETRICW () : new TEXTMETRICA ();", "+\t\t\tOS.GetTextMetrics (hDC, tm);", "+\t\t\theight = Math.max (height, tm.tmHeight);", "+\t\t} else {", "+\t\t\tRECT rect = new RECT ();", "+\t\t\tint flags = OS.DT_CALCRECT | OS.DT_EDITCONTROL | OS.DT_EXPANDTABS;", "+\t\t\tif ((style & SWT.WRAP) != 0 && wHint != SWT.DEFAULT) {", "+\t\t\t\tflags |= OS.DT_WORDBREAK;", "+\t\t\t\trect.right = wHint;", "+\t\t\t}", "+\t\t\tTCHAR buffer = new TCHAR (getCodePage (), length + 1);", "+\t\t\tOS.GetWindowText (handle, buffer, length + 1);", "+\t\t\tOS.DrawText (hDC, buffer, length, rect, flags);", "+\t\t\twidth += rect.right - rect.left;", "+\t\t\theight = Math.max (height, rect.bottom - rect.top);", "+\t\t}", "+\t\tif (newFont != 0) OS.SelectObject (hDC, oldFont);", "+\t\tOS.ReleaseDC (handle, hDC);", "+\t}", "-\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "-\t\tboolean isOwnerDraw = (bits & OS.SS_OWNERDRAW) == OS.SS_OWNERDRAW;", "-\t\tif (!isOwnerDraw) width += 2;", "+\t\tif (!hasImage) width += 2;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea7b272c8aeea009a85faca41c64d3a1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "c63ca636edfbea4cd55ccc07da414186be375ce0", "commitAfterChange": "e38d4aec3f79c42ea6666a7a37c026187a8aa6ea", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tint width = 0, height = 0;", "-\tint border = getBorderWidth ();", "+\tint width = 0, height = 0, border = getBorderWidth ();", "-\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "-\tboolean isImage = (bits & OS.SS_OWNERDRAW) == OS.SS_OWNERDRAW;", "-\tif (isImage) {", "-\t\tif (image != null) {", "-\t\t\tRectangle rect = image.getBounds();", "-\t\t\twidth = rect.width;", "-\t\t\theight = rect.height;", "-\t\t}", "+\tif (image != null) {", "+\t\tRectangle rect = image.getBounds();", "+\t\twidth = rect.width;", "+\t\tif (text.length () != 0) width += MARGIN;", "+\t\theight = rect.height;", "+\t}", "+\tint hDC = OS.GetDC (handle);", "+\tint newFont = OS.SendMessage (handle, OS.WM_GETFONT, 0, 0);", "+\tint oldFont = OS.SelectObject (hDC, newFont);", "+\tint length = OS.GetWindowTextLength (handle);", "+\tif (length == 0) {", "+\t\tTEXTMETRIC tm = OS.IsUnicode ? (TEXTMETRIC) new TEXTMETRICW () : new TEXTMETRICA ();", "+\t\tOS.GetTextMetrics (hDC, tm);", "+\t\theight = Math.max (height, tm.tmHeight);", "-\t\tint hDC = OS.GetDC (handle);", "-\t\tint newFont = OS.SendMessage (handle, OS.WM_GETFONT, 0, 0);", "-\t\tint oldFont = OS.SelectObject (hDC, newFont);", "-\t\tint length = OS.GetWindowTextLength (handle);", "-\t\twidth = rect.right - rect.left;", "-\t\theight = rect.bottom - rect.top;", "-\t\tif (height == 0) {", "-\t\t\tTEXTMETRIC tm = OS.IsUnicode ? (TEXTMETRIC) new TEXTMETRICW () : new TEXTMETRICA ();", "-\t\t\tOS.GetTextMetrics (hDC, tm);", "-\t\t\theight = tm.tmHeight;", "-\t\t}", "-\t\tif (newFont != 0) OS.SelectObject (hDC, oldFont);", "-\t\tOS.ReleaseDC (handle, hDC);", "+\t\twidth += rect.right - rect.left;", "+\t\theight = Math.max (height, rect.bottom - rect.top);", "+\tif (newFont != 0) OS.SelectObject (hDC, oldFont);", "+\tOS.ReleaseDC (handle, hDC);", "-\twidth += border * 2; height += border * 2;", "+\twidth += border * 2;", "+\theight += border * 2;", "-\t* The fix is to increase the size.", "+\t* The fix is to increase the width to include", "+\t* this trim.", "-\t\t//TEST ME", "-\t\tif (!isImage) width += 2;", "+\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "+\t\tboolean isOwnerDraw = (bits & OS.SS_OWNERDRAW) == OS.SS_OWNERDRAW;", "+\t\tif (!isOwnerDraw) width += 2;"]}], "num": 41130}