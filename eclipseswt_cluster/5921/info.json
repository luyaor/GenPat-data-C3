{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e7bcbe6c0f7c4439446193e3b45ecb31", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9587f3ea16ea28930fdbf340fd584d2c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/Transfer.java", "commitBeforeChange": "6b0a245288556e7224d3c56682401ca81ba95245", "commitAfterChange": "4dbd09dcd54c5e8b8416ccbe2fdfacc6901be61f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " public static int registerType(String formatName)", "signatureAfterChange": " public static int registerType(String formatName)", "diff": ["-\tint length = formatName.length();", "-\t// TODO - hashcode may not be unique - need another way", "-\tif (length > 4) return formatName.hashCode();", "-\tint type = 0;", "-\tif (length > 0) type |= (formatName.charAt(0) & 0xff) << 24;", "-\tif (length > 1) type |= (formatName.charAt(1) & 0xff) << 16;", "-\tif (length > 2) type |= (formatName.charAt(2) & 0xff) << 8;", "-\tif (length > 3) type |= formatName.charAt(3) & 0xff; ", "-\treturn type;", "+\tfor (int i = 0; i < typeCount; i++) {", "+\t\tString type = types[i];", "+\t\tif (type != null && formatName.equals(type)) {", "+\t\t\treturn i;", "+\t\t}", "+\t}", "+\tif (typeCount + 1 == types.length) { // types[0] is null", "+\t\tString[] newTypes = new String[types.length + 4];", "+\t\tSystem.arraycopy(types, 0, newTypes, 0, types.length);", "+\t\ttypes = newTypes;", "+\t}", "+\ttypes[++typeCount] = formatName;", "+\treturn typeCount;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7352d21b259e13987a6250d2f2d14598", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "5b6167a269cbdff7d19c385167fb7b77812b82c6", "commitAfterChange": "f6487111032547e1ade3cf517d365a21b313b806", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " public FontMetrics getFontMetrics()", "signatureAfterChange": " public FontMetrics getFontMetrics()", "diff": ["-\tint fontList = data.fontList;", "+\tFont font = data.font;", "+\tint fontList = font.handle;", "-\t\tif (buffer[0] == 0) { ", "+\t\tif (buffer[0] == 0) {", "-\t\t\tascent = ascent > fontStruct.max_bounds_ascent ? ascent : fontStruct.max_bounds_ascent;", "-\t\t\tdescent = descent > fontStruct.descent ? descent : fontStruct.descent;", "-\t\t\tint tmp = fontStruct.ascent + fontStruct.descent;", "-\t\t\theight = height > tmp ? height : tmp;", "-\t\t\ttmp = fontStruct.ascent - fontStruct.max_bounds_ascent;", "-\t\t\tleading = leading > tmp ? leading : tmp;", "+\t\t\tascent = Math.max(ascent, fontStruct.max_bounds_ascent);", "+\t\t\tdescent = Math.max(descent, fontStruct.max_bounds_descent);", "+\t\t\tint fontHeight = fontStruct.max_bounds_ascent + fontStruct.max_bounds_descent;", "+\t\t\theight = Math.max(height, fontHeight);", "-\t\t}", "-\t\telse { ", "+\t\t} else {", "-\t\t\tfor (int i = 0; i < nFonts; i++) { ", "+\t\t\tfor (int i = 0; i < nFonts; i++) {", "-\t\t\t\tascent = ascent > fontStruct.max_bounds_ascent ? ascent : fontStruct.max_bounds_ascent;", "-\t\t\t\tdescent = descent > fontStruct.descent ? descent : fontStruct.descent;", "-\t\t\t\tint tmp = fontStruct.ascent + fontStruct.descent;", "-\t\t\t\theight = height > tmp ? height : tmp;", "-\t\t\t\ttmp = fontStruct.ascent - fontStruct.max_bounds_ascent;", "-\t\t\t\tleading = leading > tmp ? leading : tmp;", "+\t\t\t\tascent = Math.max(ascent, fontStruct.max_bounds_ascent);", "+\t\t\t\tdescent = Math.max(descent, fontStruct.max_bounds_descent);", "+\t\t\t\tint fontHeight = fontStruct.max_bounds_ascent + fontStruct.max_bounds_descent;", "+\t\t\t\theight = Math.max(height, fontHeight);"]}], "num": 5921}