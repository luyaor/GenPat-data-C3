{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dad0d93bf14a55f5c38c9b8b9a5f39d0", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de628cd52e81bddfc523e0fadca9d006", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/motif/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "35b4cbb3b7bb44a742ea63d0ccddf753c64fd69a", "commitAfterChange": "e5951bd17b31b8cb707a15cbf154c50c6581fd3e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 88, "signatureBeforeChange": "  public boolean setUrl(String url)", "signatureAfterChange": " public boolean setUrl(String url)", "diff": ["+ */", "-\treturn false;", "+\tif (!isLinux) return false;", "+\tint[] result = new int[1];", "+\tint rc = webBrowser.QueryInterface(nsIWebNavigation.NS_IWEBNAVIGATION_IID, result);", "+\tif (rc != XPCOM.NS_OK) throw new SWTError(XPCOM.errorMsg(rc));", "+\tif (result[0] == 0) throw new SWTError(XPCOM.errorMsg(XPCOM.NS_ERROR_NO_INTERFACE));", "+", "+\tnsIWebNavigation webNavigation = new nsIWebNavigation(result[0]);", "+\tchar[] arg = url.toCharArray(); ", "+\tchar[] c = new char[arg.length+1];", "+\tSystem.arraycopy(arg,0,c,0,arg.length);", "+\trc = webNavigation.LoadURI(c, nsIWebNavigation.LOAD_FLAGS_NONE, 0, 0, 0);", "+\tif (rc != XPCOM.NS_OK) throw new SWTError(XPCOM.errorMsg(rc));", "+\tonFocusGained(null); // Fixes the keyboard INput Tag issues", "+\twebNavigation.Release();", "+\t\t\t", "+\treturn true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5b65e84c3519c57723f29647d5d20b6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleClientSite.java", "commitBeforeChange": "306f95301b97e9d8ba82cad67812ad605a6ab86b", "commitAfterChange": "de5b9b1f68cbb466a86733b45d1a63f217e8c701", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": " private boolean saveToTraditionalFile(File file)", "signatureAfterChange": " private boolean saveToTraditionalFile(File file)", "diff": ["+\t/*", "+\t* Bug in Office 2007. Saving Office 2007 documents to compound file storage object", "+\t* causes the output file to be corrupted. The fix is to detect Office 2007 documents", "+\t* using the program ID and save only the content of the 'Package' stream. ", "+\t*/", "+\tif (isOffice2007()) {", "+\t\t/* Excel fails to open the package stream when the PersistStorage is not in hands off mode */", "+\t\tint /*long*/[] ppv = new int /*long*/[1];", "+\t\tIPersistStorage iPersistStorage = null;", "+\t\tif (objIUnknown.QueryInterface(COM.IIDIPersistStorage, ppv) == COM.S_OK) {", "+\t\t\tiPersistStorage = new IPersistStorage(ppv[0]);", "+\t\t\ttempStorage.AddRef();", "+\t\t\tiPersistStorage.HandsOffStorage();", "+\t\t}", "+\t\tboolean result = false;", "+\t\tint /*long*/[] address = new int /*long*/[1];", "+\t\tint grfMode = COM.STGM_DIRECT | COM.STGM_READ | COM.STGM_SHARE_EXCLUSIVE;", "+\t\tif (tempStorage.OpenStream(\"Package\", 0, grfMode, 0, address) == COM.S_OK) { //$NON-NLS-1$", "+\t\t\tresult = saveFromContents(address[0], file);", "+\t\t}", "+\t\tif (iPersistStorage != null) {", "+\t\t\tiPersistStorage.SaveCompleted(tempStorage.getAddress());", "+\t\t\ttempStorage.Release();", "+\t\t\tiPersistStorage.Release();", "+\t\t}", "+\t\treturn result;", "+\t}", "+\t"]}], "num": 59511}