{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1a361041b7e5c4b3c0a59473d68b30b6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf1039dac9560d9ea897a31cd170b8ac", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "6cbff223842b996727f72a9e7755fb89f9f00da3", "commitAfterChange": "d1287e0f5a870758b7df8c69e95f6c8689e39920", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 45, "signatureBeforeChange": " public void paste ()", "signatureAfterChange": " public void paste ()", "diff": ["-\t//NOT DONE - get clipboard text and verify or use undo?", "-\tOS.TXNPaste (txnObject);", "+\tboolean paste = true;", "+\tif (hooks (SWT.Verify) || filters (SWT.Verify)) {", "+\t\tString oldText = getClipboardText ();", "+\t\tif (oldText != null) {", "+\t\t\tPoint selection = getSelection ();", "+\t\t\tString newText = verifyText (oldText, selection.x, selection.y, null);", "+\t\t\tif (newText == null) return;", "+\t\t\tif (newText != oldText) {", "+\t\t\t\tsetTXNText (OS.kTXNUseCurrentSelection, OS.kTXNUseCurrentSelection, newText);", "+\t\t\t\tOS.TXNShowSelection (txnObject, false);", "+\t\t\t\tpaste = false;", "+\t\t\t}", "+\t\t}", "+\t}", "+\tif (paste) OS.TXNPaste (txnObject);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4dbfb8c06ec6b97e00b99cfb0c0d4a6a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "86e590387fc98740eb431ea80c5942750b2c6d0c", "commitAfterChange": "b9e679d47d2b65f7ad52dcb0b148e03cb3e9caf3", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 61, "signatureBeforeChange": "  int gtk_key_press_event (int widget, int event)", "signatureAfterChange": "  int gtk_key_press_event (int widget, int event)", "diff": ["+\tboolean handleSegments = false, segmentsCleared = false;", "+\tif (hooks (SWT.GetSegments) || filters (SWT.GetSegments)) {", "+\t\tGdkEventKey gdkEvent = new GdkEventKey ();", "+\t\tOS.memmove (gdkEvent, event, GdkEventKey.sizeof);", "+\t\tif (gdkEvent.length > 0 && (gdkEvent.state & (OS.GDK_MOD1_MASK | OS.GDK_CONTROL_MASK)) == 0) {", "+\t\t\thandleSegments = true;", "+\t\t\tif (segments != null) {", "+\t\t\t\tclearSegments (true);", "+\t\t\t\tsegmentsCleared = true;", "+\t\t\t}", "+\t\t}", "+\t}", "+\tif (handleSegments && (result != 0 || segmentsCleared)) {", "+\t\tapplySegments ();", "+\t}"]}], "num": 17021}