{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "53f5e0565bb7c821437bf6978467255e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c50d07668efd70b5c2070ac94e639cbc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "7a850966fcebc2510dcdae26a2185eb84e5caa97", "commitAfterChange": "ea4d187e18c5cb79cd146d623e9cb83cded32237", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " int addMerge(StyleRange[] mergeStyles, int mergeCount, int modifyStart, int modifyEnd)", "signatureAfterChange": " int addMerge(StyleRange[] mergeStyles, int mergeCount, int modifyStart, int modifyEnd)", "diff": ["-\t", "-\tint j = modifyStart;", "-\tfor (int i = 0; i < mergeCount; i++) {", "-\t\tStyleRange newStyle = mergeStyles[i], style;", "-\t\tif (j > 0 && (style = styles[j - 1]).start + style.length == newStyle.start && newStyle.similarTo(style)) {", "-\t\t\tstyle.length += newStyle.length;", "-\t\t} else {", "-\t\t\tstyles[j++] = newStyle;", "+\tif (MERGE_STYLES) {", "+\t\tint j = modifyStart;", "+\t\tfor (int i = 0; i < mergeCount; i++) {", "+\t\t\tStyleRange newStyle = mergeStyles[i], style;", "+\t\t\tif (j > 0 && (style = styles[j - 1]).start + style.length == newStyle.start && newStyle.similarTo(style)) {", "+\t\t\t\tstyle.length += newStyle.length;", "+\t\t\t} else {", "+\t\t\t\tstyles[j++] = newStyle;", "+\t\t\t}", "+\t\tStyleRange style = styles[j - 1];", "+\t\tif (endStyle != null && style.start + style.length == endStyle.start && endStyle.similarTo(style)) {", "+\t\t\tstyle.length += endStyle.length;", "+\t\t\tmodifyEnd++;", "+\t\t\tmergeCount++;", "+\t\t}", "+\t\tif (styleCount > modifyEnd) {", "+\t\t\tSystem.arraycopy(styles, modifyStart + mergeCount, styles, j, styleCount - modifyEnd);", "+\t\t}", "+\t\tgrow = (j - modifyStart) - (modifyEnd - modifyStart);", "+\t} else {", "+\t\tSystem.arraycopy(mergeStyles, 0, styles, modifyStart, mergeCount);", "-\tStyleRange style = styles[j - 1];", "-\tif (endStyle != null && style.start + style.length == endStyle.start && endStyle.similarTo(style)) {", "-\t\tstyle.length += endStyle.length;", "-\t\tmodifyEnd++;", "-\t\tmergeCount++;", "-\t}", "-\tif (styleCount > modifyEnd) {", "-\t\tSystem.arraycopy(styles, modifyStart + mergeCount, styles, j, styleCount - modifyEnd);", "-\t}", "-\tgrow = (j - modifyStart) - (modifyEnd - modifyStart);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf109b8b79249557e67933e25b418420", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "7a850966fcebc2510dcdae26a2185eb84e5caa97", "commitAfterChange": "ea4d187e18c5cb79cd146d623e9cb83cded32237", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " int addMerge(int[] mergeRanges, StyleRange[] mergeStyles, int mergeCount, int modifyStart, int modifyEnd)", "signatureAfterChange": " int addMerge(int[] mergeRanges, StyleRange[] mergeStyles, int mergeCount, int modifyStart, int modifyEnd)", "diff": ["-\t", "-\tint j = modifyStart;\t", "-\tfor (int i = 0; i < mergeCount; i += 2) {", "-\t\tif (j > 0 && ranges[j - 2] + ranges[j - 1] == mergeRanges[i] && mergeStyles[i >> 1].similarTo(styles[(j - 2) >> 1])) {", "-\t\t\tranges[j - 1] += mergeRanges[i + 1];", "-\t\t} else {", "-\t\t\tstyles[j >> 1] = mergeStyles[i >> 1];", "-\t\t\tranges[j++] = mergeRanges[i];", "-\t\t\tranges[j++] = mergeRanges[i + 1];", "+\tif (MERGE_STYLES) {", "+\t\tint j = modifyStart;\t", "+\t\tfor (int i = 0; i < mergeCount; i += 2) {", "+\t\t\tif (j > 0 && ranges[j - 2] + ranges[j - 1] == mergeRanges[i] && mergeStyles[i >> 1].similarTo(styles[(j - 2) >> 1])) {", "+\t\t\t\tranges[j - 1] += mergeRanges[i + 1];", "+\t\t\t} else {", "+\t\t\t\tstyles[j >> 1] = mergeStyles[i >> 1];", "+\t\t\t\tranges[j++] = mergeRanges[i];", "+\t\t\t\tranges[j++] = mergeRanges[i + 1];", "+\t\t\t}", "+\t\tif (endStyle != null && ranges[j - 2] + ranges[j - 1] == endStart && endStyle.similarTo(styles[(j - 2) >> 1])) {", "+\t\t\tranges[j - 1] += endLength;", "+\t\t\tmodifyEnd += 2;", "+\t\t\tmergeCount += 2;", "+\t\t}", "+\t\tif (rangeCount > modifyEnd) {", "+\t\t\tSystem.arraycopy(ranges, modifyStart + mergeCount, ranges, j, rangeCount - modifyEnd);", "+\t\t\tSystem.arraycopy(styles, (modifyStart + mergeCount) >> 1, styles, j >> 1, styleCount - (modifyEnd >> 1));", "+\t\t}", "+\t\tgrow = (j - modifyStart) - (modifyEnd - modifyStart);", "+\t} else {", "+\t\tSystem.arraycopy(mergeRanges, 0, ranges, modifyStart, mergeCount);", "+\t\tSystem.arraycopy(mergeStyles, 0, styles, modifyStart >> 1, mergeCount >> 1);", "-\tif (endStyle != null && ranges[j - 2] + ranges[j - 1] == endStart && endStyle.similarTo(styles[(j - 2) >> 1])) {", "-\t\tranges[j - 1] += endLength;", "-\t\tmodifyEnd += 2;", "-\t\tmergeCount += 2;", "-\t}", "-\tif (rangeCount > modifyEnd) {", "-\t\tSystem.arraycopy(ranges, modifyStart + mergeCount, ranges, j, rangeCount - modifyEnd);", "-\t\tSystem.arraycopy(styles, (modifyStart + mergeCount) >> 1, styles, j >> 1, styleCount - (modifyEnd >> 1));", "-\t}", "-\tgrow = (j - modifyStart) - (modifyEnd - modifyStart);"]}], "num": 19749}