{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c6951d08a94909bd04a39949cdde333b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2c044be27559cd5e7aab66151399bd1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "70ad0effe5f094be7c9f0fc126e3f2ba49252b61", "commitAfterChange": "d04fb3f614d054ed3cf2600f4c59c394b9406469", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " void setInputState (Event event, MacEvent mEvent)", "signatureAfterChange": " void setInputState (Event event, MacEvent mEvent)", "diff": ["-\tint modifiers= mEvent.getModifiers();", "-\tif ((modifiers & OS.optionKey) != 0) event.stateMask |= SWT.ALT;", "-\tif ((modifiers & OS.shiftKey) != 0) event.stateMask |= SWT.SHIFT;", "-\tswitch (mEvent.getWhat()) {", "-\tcase OS.mouseDown:", "-\tcase OS.mouseUp:", "-\tcase 12345:", "-\t\tif ((modifiers & OS.controlKey) != 0) {", "-\t\t\tevent.stateMask |= SWT.CONTROL;", "-\t\t\tif ((modifiers & OS.btnState) == 0) event.stateMask |= SWT.BUTTON3;", "-\t\t} else {", "-\t\t\tif ((modifiers & OS.btnState) == 0) event.stateMask |= SWT.BUTTON1;", "-\t\t}", "-\t\tbreak;", "+\tevent.stateMask= getDisplay().fMouseButtonState;", "+\t", "+\tint modifiers= mEvent.getModifiers();", "+\t", "+\tif ((modifiers & OS.shiftKey) != 0)", "+\t\tevent.stateMask |= SWT.SHIFT;", "+\t", "+\tif (false) {", "+\t\t// map option modifier to ALT modifier", "+\t\tif ((modifiers & OS.optionKey) != 0)", "+\t\t\tevent.stateMask |= SWT.ALT;", "+\t} else {", "+\t\t// map control modifier to ALT modifier", "+\t\tif ((modifiers & OS.controlKey) != 0)", "+\t\t\tevent.stateMask |= SWT.ALT;", "-\t/*", "-\tif ((modifiers & 2) != 0) event.stateMask |= SWT.BUTTON2;", "-\t*/"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc52e1dd447340b7959cf7e62799d6a8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "dac30c018d5cf7c70486c933b24c16540aaa8795", "commitAfterChange": "cbb5286fe0456df7469256efe91355db70428b9a", "methodNumberBeforeChange": 278, "methodNumberAfterChange": 278, "signatureBeforeChange": "\r public void setSelection(int start, int end)", "signatureAfterChange": "\r public void setSelection(int start, int end)", "diff": ["-\tcheckWidget();\r", "-\tint contentLength = getCharCount();\r", "-\t\r", "-\tif (start > end || start < 0 || end > contentLength) {\r", "-\t\tSWT.error(SWT.ERROR_INVALID_RANGE);\r", "-\t}\r", "-\tif (isLineDelimiter(start) || isLineDelimiter(end)) {\r", "-\t\t// the start offset or end offset of the selection range is inside a \r", "-\t\t// multi byte line delimiter. This is an illegal operation and an exception \r", "-\t\t// is thrown. Fixes 1GDKK3R\r", "-\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\r", "-\t}\t\t\t\t\r", "-\tinternalSetSelection(start, end - start, false);\r", "-\t// always update the caret location. fixes 1G8FODP\r", "-\tsetCaretLocation();\r", "-\tif (isBidi()) {\r", "-\t\tsetBidiKeyboardLanguage();\t\r", "-\t}\r", "+\t// checkWidget test done in setSelectionRange\r", "+\tsetSelectionRange(start, end - start);\r"]}], "num": 17349}