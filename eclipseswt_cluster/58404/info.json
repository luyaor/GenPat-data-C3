{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eec21ae7588a43752fb1a3c37bfbe596", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52f75538eff1860d1b6a60d8c131e7c7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/NativesGenerator.java", "commitBeforeChange": "5f337fe3ac34ee9a44ecfc3b3eed6c9c5e733012", "commitAfterChange": "81954812dbcfdc38385fc50d81091df34fbe46c4", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  void generateFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "signatureAfterChange": "  void generateFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "diff": ["-\toutput(method.getName());", "-\tgenerateFunctionCallRightSide(method, methodData, paramTypes);", "+\t/*", "+\t* ", "+\t*/", "+\tint paramStart = 0;", "+\tif (method.getName().equalsIgnoreCase(\"call\")) {", "+\t\toutput(\"(\");", "+\t\tParameterData paramData = getMetaData().getMetaData(method, 0);", "+\t\tString cast = paramData.getCast(); ", "+\t\tif (cast.length() != 0 && !cast.equals(\"()\")) {", "+\t\t\toutput(cast);", "+\t\t} else {", "+\t\t\toutput(\"(\");", "+\t\t\toutput(getTypeSignature2(returnType));", "+\t\t\toutput(\" (*)())\");", "+\t\t}", "+\t\toutput(\"arg0)\");", "+\t\tparamStart = 1;", "+\t} else {", "+\t\toutput(method.getName());", "+\t}", "+\tgenerateFunctionCallRightSide(method, methodData, paramTypes, paramStart);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e25655adbabb571ec0b99fa515715f9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/NativesGenerator.java", "commitBeforeChange": "962aa06448dfe17025be13278ac9735005635428", "commitAfterChange": "3a30a8e1b094d108c0c78d2525befff85da3e351", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  void generateDynamicFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "signatureAfterChange": "  void generateDynamicFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "diff": ["-\t\toutput(\"\\t\\tstatic int (*fptr)();\");", "+\t\toutput(\"\\t\\tstatic \");", "+\t\toutput(getTypeSignature2(returnType));", "+\t\toutput(\" (*fptr)(\");", "+\t\tfor (int i = 0; i < paramTypes.length; i++) {", "+\t\t\tif (i != 0) output(\", \");", "+\t\t\tClass paramType = paramTypes[i];", "+\t\t\tParameterData paramData = getMetaData().getMetaData(method, i);", "+\t\t\tString cast = paramData.getCast();", "+\t\t\tif (cast.length() > 2) {", "+\t\t\t\toutput(cast.substring(1, cast.length() - 1));", "+\t\t\t} else {", "+\t\t\t\toutput(getTypeSignature2(paramType));", "+\t\t\t}", "+\t\t}", "+\t\toutput(\");\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66437d46056d51525e50e018f4c18b60", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGenerator.java", "commitBeforeChange": "9d76923ef4c61a2ac65732c7dc4442df8d1594bc", "commitAfterChange": "34830c5ea1d64c3a02443211fb13e925cac126f1", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public void generateClasses() throws Exception", "signatureAfterChange": "  void generateClasses()", "diff": ["-", "-public void generateClasses() throws Exception {", "+void generateClasses() {", "-\t\tDocument document = getDocument(xmls[x]);", "+\t\tDocument document = documents[x];", "+\t\tif (document == null) continue;", "+\t\tHashtable extras = extraAttributes[x];", "+\t\t\t\tNode extra = (Node)extras.get(getKey(node));", "+\t\t\t\tNamedNodeMap extraAttributes = extra.getAttributes();", "-\t\t\t\tif (getGenerateClass(name)) {", "+\t\t\t\tNode gen = extraAttributes.getNamedItem(\"swt_gen\");", "+\t\t\t\tif (gen != null && gen.getNodeValue().equals(\"true\")) {", "-\t\t\t\t\t\tFileOutputStream  is = new FileOutputStream(outputDir + \"/\" + name + \".java\");", "-\t\t\t\t\t\tout = new PrintStream(new BufferedOutputStream(is));", "+//\t\t\t\t\t\tFileOutputStream  is = new FileOutputStream(outputDir + \"/\" + name + \".java\");", "+\t\t\t\t\t\tout = new PrintStream(new ByteArrayOutputStream());"]}], "num": 58404}