{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "683dfc0743c9dbc91cfe72b2231518cd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9006f60a7dfff11b547bfa83908be46f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "0b8bf3ea7e58ed07c83c3d4ee128c98a67a61593", "commitAfterChange": "28e876e1f1a0ab390ae537e897a528483e96b4ed", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": " public void showColumn (TreeColumn column)", "signatureAfterChange": " public void showColumn (TreeColumn column)", "diff": ["-\t// TODO", "+\tint x = column.getX ();", "+\tint rightX = x + column.getWidth ();", "+\tRectangle bounds = getClientArea ();", "+\tint boundsRight = bounds.x + bounds.width;", "+\tif (bounds.x <= x && rightX <= boundsRight) return;\t /* column is fully visible */", "+", "+\tint absX = 0;\t/* the X of the column irrespective of the horizontal scroll */", "+\tfor (int i = 0; i < column.getIndex (); i++) {", "+\t\tabsX += columns [i].width;", "+\t}", "+\tif (x < bounds.x) { \t/* column is to left of viewport */", "+\t\thorizontalOffset = absX;", "+\t} else {", "+\t\thorizontalOffset = boundsRight - absX;", "+\t}", "+\tgetHorizontalBar ().setSelection (horizontalOffset);", "+\tredraw ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75c25fcc113a18ff8f49d56ac97a2b5e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 106, "signatureBeforeChange": " public void showColumn (TableColumn column)", "signatureAfterChange": " public void showColumn (TableColumn column)", "diff": ["- */", "+}", "-\tif (column.isDisposed()) error(SWT.ERROR_INVALID_ARGUMENT);", "-\tif (column.getParent() != this) return;", "-\tif (columns == null || columns.size() <= 1) return;", "-}", "+\tif (column.isDisposed ()) error(SWT.ERROR_INVALID_ARGUMENT);", "+\tif (column.parent != this) return;", "+\tint x = column.getX ();", "+\tint rightX = x + column.width;", "+\tRectangle bounds = getClientArea ();", "+\tint boundsRight = bounds.x + bounds.width;", "+\tif (bounds.x <= x && rightX <= boundsRight) return;\t /* column is fully visible */", "+", "+\tint absX = 0;\t/* the X of the column irrespective of the horizontal scroll */", "+\tfor (int i = 0; i < column.getIndex (); i++) {", "+\t\tabsX += columns [i].width;", "+\t}", "+\tif (x < bounds.x) { \t/* column is to left of viewport */", "+\t\thorizontalOffset = absX;", "+\t} else {", "+\t\thorizontalOffset = boundsRight - absX;", "+\t}", "+\tgetHorizontalBar ().setSelection (horizontalOffset);", "+\tredraw ();"]}], "num": 47591}