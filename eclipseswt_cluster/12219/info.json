{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "940a0ca44738e74fa8cd0aa8a79a66a4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a287f055aa3f22ad4114c5041feda88", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_TableItem.java", "commitBeforeChange": "5d22575931f401a891c73ac22f54b63d39248ea3", "commitAfterChange": "9b8122220a1bb646b58218af6058dab52058c4f0", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void test_getImageBoundsI()", "signatureAfterChange": " public void test_getImageBoundsI()", "diff": ["-\tassertTrue(\":b:\", bounds.x > 0 && bounds.width == imageWidth && bounds.height == imageHeight);\t", "- \tassertEquals(new Rectangle(0, 0, 0, 0), tableItem.getImageBounds(1));\t", "+//\tassertTrue(\":b:\", bounds.x > 0 && bounds.width == imageWidth && bounds.height == imageHeight);\t", "+// \tassertEquals(new Rectangle(0, 0, 0, 0), tableItem.getImageBounds(1));\t", "-\tassertTrue(\":b:\", bounds.x > 0 && bounds.width > 0 && bounds.height == imageHeight);", "- \tassertEquals(new Rectangle(0, 0, 0, 0), tableItem2.getImageBounds(1));\t", "+//\tassertTrue(\":b:\", bounds.x > 0 && bounds.width > 0 && bounds.height == imageHeight);", "+// \tassertEquals(new Rectangle(0, 0, 0, 0), tableItem2.getImageBounds(1));\t", "-\tassertTrue(\":b:\", bounds.x > 0 && bounds.width > 0 && bounds.height == imageHeight);", "+//\tassertTrue(\":b:\", bounds.x > 0 && bounds.width > 0 && bounds.height == imageHeight);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89c402265f5c19fa089c01d033580686", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_TableColumn.java", "commitBeforeChange": "5a8cb08e8087589e7d19940d8bf3f1aaafd57c94", "commitAfterChange": "bccc589a105ee7f59092bce7c6038d31ce23d574", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public void test_getWidth()", "signatureAfterChange": "  public void test_getWidth()", "diff": ["-\tfinal int DEFAULT_WIDTH = 10;", "-\tassertTrue(\":a: width=\" + tableColumn.getWidth() + \" should be=\" + DEFAULT_WIDTH, tableColumn.getWidth() == DEFAULT_WIDTH);", "-", "-\tassertTrue(\":c: width=\" + tableColumn.getWidth() + \" should be=\" + 0, tableColumn.getWidth() == 0);", "+\tassertTrue(\":a: width=\" + tableColumn.getWidth() + \" should be=\" + 0, tableColumn.getWidth() == 0);", "-\tassertTrue(\":d: width=\" + tableColumn.getWidth() + \" should be=\" + testWidth, tableColumn.getWidth() == testWidth);", "+\tassertTrue(\":b: width=\" + tableColumn.getWidth() + \" should be=\" + testWidth, tableColumn.getWidth() == testWidth);", "-\tassertTrue(\":e: width=\" + tableColumn.getWidth() + \" should be=\" + testWidth, tableColumn.getWidth() == testWidth);", "+\tassertTrue(\":c: width=\" + tableColumn.getWidth() + \" should be=\" + testWidth, tableColumn.getWidth() == testWidth);"]}], "num": 12219}