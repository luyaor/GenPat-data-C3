{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f6887f9d604f0817860fcbb01047098b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4220861cd3c5108856c16c7c05dae21", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "9e9b22bcbb72aef5b3bb15c7ddbde8006ef6a7c8", "commitAfterChange": "2e3cc3f2343444e38d6648881ff7de0ee9aea010", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 24, "signatureBeforeChange": " public FontMetrics getLineMetrics (int lineIndex)", "signatureAfterChange": " public FontMetrics getLineMetrics (int lineIndex)", "diff": ["-\tif (text.length() == 0) {", "-\t\tOS.SelectObject(srcHdc, font != null ? font.handle : device.systemFont);", "-\t\tOS.GetTextMetrics(srcHdc, lptm);", "-\t\tlptm.tmAscent = Math.max(lptm.tmAscent, this.ascent);", "-\t\tlptm.tmDescent = Math.max(lptm.tmDescent, this.descent);\t\t", "-\t} else {", "-\t\tint ascent = this.ascent, descent = this.descent, leading = 0, aveCharWidth = 0, height = 0;", "+\tOS.SelectObject(srcHdc, font != null ? font.handle : device.systemFont);", "+\tOS.GetTextMetrics(srcHdc, lptm);", "+\tOS.DeleteDC(srcHdc);", "+\tdevice.internal_dispose_GC(hDC, null);", "+\t", "+\tint ascent = Math.max(lptm.tmAscent, this.ascent);", "+\tint descent = Math.max(lptm.tmDescent, this.descent);", "+\tint leading = lptm.tmInternalLeading;", "+\tif (text.length() != 0) {", "-\t\t\tcheckItem(srcHdc, run);", "-\t\t\tOS.SelectObject(srcHdc, getItemFont(run));", "-\t\t\tOS.GetTextMetrics(srcHdc, lptm);", "-\t\t\tascent = Math.max(ascent, lptm.tmAscent);", "-\t\t\tdescent = Math.max(descent, lptm.tmDescent);", "-\t\t\theight = Math.max(height, lptm.tmHeight);", "-\t\t\tleading = Math.max(leading, lptm.tmInternalLeading);", "-\t\t\taveCharWidth += lptm.tmAveCharWidth;", "+\t\t\tif (run.ascent > ascent) {", "+\t\t\t\tascent = run.ascent;", "+\t\t\t\tleading = run.leading;", "+\t\t\t}", "+\t\t\tdescent = Math.max(descent, run.descent);", "-\t\tlptm.tmAscent = ascent;", "-\t\tlptm.tmDescent = descent;", "-\t\tlptm.tmHeight = height;", "-\t\tlptm.tmInternalLeading = leading;", "-\t\tlptm.tmAveCharWidth = aveCharWidth / lineRuns.length;", "-\tif (srcHdc != 0) OS.DeleteDC(srcHdc);", "-\tdevice.internal_dispose_GC(hDC, null);", "+\tlptm.tmAscent = ascent;", "+\tlptm.tmDescent = descent;", "+\tlptm.tmHeight = ascent + descent;", "+\tlptm.tmInternalLeading = leading;", "+\tlptm.tmAveCharWidth = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b5c541189e23d0640ebe2aefcaebf7e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/textlayout/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "8b27ce8989bee24d774f8bcd7584db23e2967779", "commitAfterChange": "1e40480d2ebe5f918e1aa1d7b463a7d51c934488", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 21, "signatureBeforeChange": " public FontMetrics getLineMetrics (int lineIndex)", "signatureAfterChange": " public FontMetrics getLineMetrics (int lineIndex)", "diff": ["-\tFont font = this.font != null ? this.font : device.getSystemFont();", "-\tFontMetrics metrics = null;", "-\tif (text.length() == 0) {", "-\t\tgc.setFont(font);", "-\t\tmetrics = gc.getFontMetrics();", "-\t} else {", "-\t\tint ascent = this.ascent, descent = this.descent, leading = 0, aveCharWidth = 0, height = 0;", "+\tgc.setFont(this.font != null ? this.font : device.getSystemFont());", "+\tFontMetrics metrics = gc.getFontMetrics();", "+\tint ascent = Math.max(metrics.getAscent(), this.ascent);", "+\tint descent = Math.max(metrics.getDescent(), this.descent);", "+\tif (text.length() != 0) {", "-\t\t\tFont runFont = run.style != null ? run.style.font : null;", "-\t\t\tif (runFont == null) runFont = font;", "-\t\t\tgc.setFont(font);", "-\t\t\tmetrics = gc.getFontMetrics();", "-\t\t\tascent = Math.max (ascent, metrics.getAscent());", "-\t\t\tdescent = Math.max (descent, metrics.getDescent());", "-\t\t\theight = Math.max (height, metrics.getHeight());", "-\t\t\tleading = Math.max (leading, metrics.getLeading());", "-\t\t\taveCharWidth += metrics.getAverageCharWidth();", "+\t\t\tif (run.style != null) {", "+\t\t\t\tint runAscent = 0;", "+\t\t\t\tint runDescent = 0;", "+\t\t\t\tif (run.style.metrics != null) {", "+\t\t\t\t\tGlyphMetrics glyphMetrics = run.style.metrics;", "+\t\t\t\t\trunAscent = glyphMetrics.ascent;", "+\t\t\t\t\trunDescent = glyphMetrics.descent;", "+\t\t\t\t} else if (run.style.font != null) {", "+\t\t\t\t\tgc.setFont(run.style.font);", "+\t\t\t\t\tmetrics = gc.getFontMetrics();", "+\t\t\t\t\trunAscent = metrics.getAscent();", "+\t\t\t\t\trunDescent = metrics.getDescent();", "+\t\t\t\t}", "+\t\t\t\tascent = Math.max(ascent, runAscent + run.style.rise);", "+\t\t\t\tdescent = Math.max(descent, runDescent - run.style.rise);", "+\t\t\t}", "-\t\tmetrics = FontMetrics.internal_new(ascent, descent, aveCharWidth / lineRuns.length, leading, height);", "-\treturn metrics;", "+\treturn FontMetrics.gtk_new(ascent, descent, 0, 0, ascent + descent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64be6af4d39d784823ca877d6b916bb7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "065f2bc5320f7e3787bb8aa3b1fe53b5a5c29579", "commitAfterChange": "8b27ce8989bee24d774f8bcd7584db23e2967779", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 23, "signatureBeforeChange": " public FontMetrics getLineMetrics (int lineIndex)", "signatureAfterChange": " public FontMetrics getLineMetrics (int lineIndex)", "diff": ["-\tGC gc = new GC(device);", "-\tFont font = this.font != null ? this.font : device.systemFont;", "-\tFontMetrics metrics = null;", "-\tif (text.length() == 0) {", "-\t\tgc.setFont(font);", "-\t\tmetrics = gc.getFontMetrics();", "-\t\tmetrics.ascent = Math.max(metrics.ascent, this.ascent);", "-\t\tmetrics.descent = Math.max(metrics.descent, this.descent);\t\t", "-\t} else {", "-\t\tint ascent = this.ascent, descent = this.descent, leading = 0, aveCharWidth = 0, height = 0;", "+\tint ascent = Math.max(defaultAscent, this.ascent);", "+\tint descent = Math.max(defaultDescent, this.descent);", "+\tif (text.length() != 0) {", "+\t\tGC gc = new GC(device);", "-\t\t\tFont runFont = run.style != null ? run.style.font : null;", "-\t\t\tif (runFont == null) runFont = font;", "-\t\t\tgc.setFont(font);", "-\t\t\tmetrics = gc.getFontMetrics();", "-\t\t\tascent = Math.max (ascent, metrics.getAscent());", "-\t\t\tdescent = Math.max (descent, metrics.getDescent());", "-\t\t\theight = Math.max (height, metrics.getHeight());", "-\t\t\tleading = Math.max (leading, metrics.getLeading());", "-\t\t\taveCharWidth += metrics.getAverageCharWidth();", "+\t\t\tif (run.style != null) {", "+\t\t\t\tint runAscent = 0;", "+\t\t\t\tint runDescent = 0;", "+\t\t\t\tif (run.style.metrics != null) {", "+\t\t\t\t\tGlyphMetrics glyphMetrics = run.style.metrics;", "+\t\t\t\t\trunAscent = glyphMetrics.ascent;", "+\t\t\t\t\trunDescent = glyphMetrics.descent;", "+\t\t\t\t} else if (run.style.font != null) {", "+\t\t\t\t\tgc.setFont(run.style.font);", "+\t\t\t\t\tFontMetrics metrics = gc.getFontMetrics();", "+\t\t\t\t\trunAscent = metrics.getAscent();", "+\t\t\t\t\trunDescent = metrics.getDescent();", "+\t\t\t\t}", "+\t\t\t\tascent = Math.max(ascent, runAscent + run.style.rise);", "+\t\t\t\tdescent = Math.max(descent, runDescent - run.style.rise);", "+\t\t\t}", "-\t\tmetrics = FontMetrics.motif_new(ascent, descent, aveCharWidth / lineRuns.length, leading, height);", "+\t\tgc.dispose();", "-\tgc.dispose();", "-\treturn metrics;", "+\treturn FontMetrics.motif_new(ascent, descent, 0, 0, ascent + descent);"]}], "num": 11968}