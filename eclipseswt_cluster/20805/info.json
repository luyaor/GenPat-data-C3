{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "76e3ee227508ec0f97154c4637d19354", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c38eaee57de415e4b8cba8c39046d7aa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "f13bd9400fedc174bad61b02e297f54dcefc8695", "commitAfterChange": "dc7272eeeee95074eb6b23ed3ac3ab956c23492c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": " public String open ()", "signatureAfterChange": " public String open ()", "diff": ["+\tCallback selectCallback = null;\r", "+\tif ((style & SWT.MULTI) != 0) {\r", "+\t\tchild = OS.XmFileSelectionBoxGetChild (dialog, OS.XmDIALOG_LIST);\r", "+\t\tif (child != 0) {\r", "+\t\t\tint [] argList2 = {OS.XmNselectionPolicy, OS.XmEXTENDED_SELECT};\r", "+\t\t\tOS.XtSetValues(child, argList2, argList2.length / 2);\r", "+\t\t\tselectCallback = new Callback (this, \"itemSelected\", 3);\r", "+\t\t\tint selectAddress = selectCallback.getAddress ();\r", "+\t\t\tif (selectAddress == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);\r", "+\t\t\tOS.XtAddCallback (child, OS.XmNextendedSelectionCallback, selectAddress, 0);\r", "+\t\t}\r", "+\t}\r", "+\tif (selectCallback != null) selectCallback.dispose ();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2901db847bf1a1d85b38ce7350010eb5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "88080c08af2325fb66aea8c24d7f0210fa71fd6c", "commitAfterChange": "dcc2e380d1e3ea8a88162c2cf3d96db6df8c9c44", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  void drawIcon(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple)", "signatureAfterChange": "  void drawIcon(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple)", "diff": ["+\tint technology = OS.GetDeviceCaps(handle, OS.TECHNOLOGY);", "+", "-\tif (simple) {", "+\tif (simple && technology != OS.DT_RASPRINTER) {", "-\t\tif (simple)\t{", "+\t\tif (simple && technology != OS.DT_RASPRINTER)\t{", "-\t\t\t/* Select old bitmaps before creating the icon */\t\t\t", "-\t\t\tOS.SelectObject(srcHdc, oldSrcBitmap);", "-\t\t\tOS.SelectObject(dstHdc, oldDestBitmap);", "+\t\t\tif (technology == OS.DT_RASPRINTER) {", "+\t\t\t\tOS.SelectObject(srcHdc, newIconInfo.hbmColor);", "+\t\t\t\tOS.SelectObject(dstHdc, srcIconInfo.hbmMask);", "+\t\t\t\tdrawBitmapTransparentByClipping(srcHdc, dstHdc, 0, 0, destWidth, destHeight, destX, destY, destWidth, destHeight, true, destWidth, destHeight);\t", "+\t\t\t\tOS.SelectObject(srcHdc, oldSrcBitmap);", "+\t\t\t\tOS.SelectObject(dstHdc, oldDestBitmap);", "+\t\t\t} else {", "+\t\t\t\tOS.SelectObject(srcHdc, oldSrcBitmap);", "+\t\t\t\tOS.SelectObject(dstHdc, oldDestBitmap);", "+\t\t\t\tint hIcon = OS.CreateIconIndirect(newIconInfo);", "+\t\t\t\tif (hIcon == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\t\t\tOS.DrawIconEx(handle, destX, destY, hIcon, destWidth, destHeight, 0, 0, OS.DI_NORMAL);", "+\t\t\t\tOS.DestroyIcon(hIcon);", "+\t\t\t}", "-\t\t\t/* Create the new icon */", "-\t\t\tint hIcon = OS.CreateIconIndirect(newIconInfo);", "-\t\t\tif (hIcon == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\t\t", "-\t\t\t/* Draw the new icon */", "-\t\t\tOS.DrawIconEx(handle, destX, destY, hIcon, destWidth, destHeight, 0, 0, OS.DI_NORMAL);", "-\t\t\t", "-\t\t\t/* Destroy the new icon and hdc's*/", "-\t\t\tOS.DestroyIcon(hIcon);", "+\t\t\t/* Destroy the new icon src and mask and hdc's*/"]}], "num": 20805}