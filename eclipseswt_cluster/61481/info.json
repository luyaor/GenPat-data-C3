{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0307bbb3b18f8c06c0bc9feb4a2f5927", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88e59aa1f308f213e5b4429cec0dec82", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "9c5d567d04aa850b8991464cda209f35362e7d77", "commitAfterChange": "f1be65ba0f39f9cd9ae7b1430176adac122402ac", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  void hookEvents ()", "signatureAfterChange": "  void hookEvents ()", "diff": ["- \tint /*long*/ [] handles;", "-\tif (OS.GTK_VERSION >= OS.VERSION(2, 4, 0)) {", "-\t\tif (entryHandle != 0) {", "-\t\t\thandles = new int /*long*/ [] {entryHandle};", "-\t\t} else {", "-\t\t\thandles = new int /*long*/ [0];", "-\t\t}", "-\t} else {", "-\t\thandles = new int /*long*/ [] {arrowHandle, entryHandle, listHandle};", "-\t}", "+ \tint /*long*/ [] handles = new int /*long*/ [] {buttonHandle, entryHandle, listHandle};", "-\t\t\tif (eventHandle != entryHandle) {", "+\t\t\tif (eventHandle != focusHandle ()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1f82e3fdedf1020cdc5999b0ba413bf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java", "commitBeforeChange": "1ff5dc76daca83722cbc3a22652379df0452b7e8", "commitAfterChange": "e146916783f37aa41636cc83669e5f610cf7343a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["-\tif (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)){", "-\t\thandle = OS.gtk_box_new(OS.GTK_ORIENTATION_VERTICAL, 0);", "-\t\tOS.gtk_box_set_homogeneous(handle, false);", "-\t} else {", "-\t\thandle = OS.gtk_vbox_new (false, 0);", "-\t}", "+\thandle = gtk_box_new (OS.GTK_ORIENTATION_VERTICAL, false, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb0a450b26bdb46799a302ee1b6961ba", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "be7a6b56ec36f2937282f99ce8f6d3a09d752bb5", "commitAfterChange": "388089e4bec9dc7b9e91ccd2ec44faabbba9290c", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "  void invalWindowRgn (int window, int rgn)", "signatureAfterChange": "  void invalWindowRgn (int window, int rgn)", "diff": ["-\tif (OS.HIVIEW) {", "-\t\tdisplay.needsPaint = true;", "-\t\tif (invalRgn == 0) invalRgn = OS.NewRgn();", "-\t\tOS.UnionRgn (rgn, invalRgn, invalRgn);", "-\t\treturn;", "-\t}", "-\t/*", "-\t* Bug in the Macintosh.  InvalidWindowRgn() will not invalidate", "-\t* the window when it is called from the default kEventWindowUpdate", "-\t* handler.  The fix is to detect that case, acumulate the region", "-\t* to invalidate and call InvalWindowRgn() after the default handler", "-\t* is done.  ", "-\t*/", "-\tif (update) {", "-\t\tif (invalRgn == 0) invalRgn = OS.NewRgn();", "-\t\tOS.UnionRgn (rgn, invalRgn, invalRgn);", "-\t} else {", "-\t\tOS.InvalWindowRgn (window, rgn);", "-\t}", "-\t", "+\tdisplay.needsPaint = true;", "+\tif (invalRgn == 0) invalRgn = OS.NewRgn();", "+\tOS.UnionRgn (rgn, invalRgn, invalRgn);"]}], "num": 61481}