{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e0f8a00e0a55257cdd554b6ef416ada1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fda5c4529bc4810c7b32566368f7dffd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/JNIGeneratorApp.java", "commitBeforeChange": "dc99d9bb9843280e22befd705fd4e0f15ba22ec9", "commitAfterChange": "da66ed50e7f2fec0e5faf4b617a73367a0acde7d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public void generateAll()", "signatureAfterChange": "  public void generateAll()", "diff": ["-\t\tString[] list = ItemData.split(mainClasses, \",\");", "+\t\tString[] list = JNIGenerator.split(mainClasses, \",\");", "-\t\t\ttry {", "-\t\t\t\tClass.forName(className, false, getClass().getClassLoader());", "-\t\t\t} catch (Throwable e) {", "-\t\t\t\tcontinue;", "+\t\t\tif (!USE_AST) {", "+\t\t\t\ttry {", "+\t\t\t\t\tClass.forName(className, false, getClass().getClassLoader());", "+\t\t\t\t} catch (Throwable e) {", "+\t\t\t\t\tcontinue;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b729b835421e611c13eb87ef842a326", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "c57c255ba62c2e81ca76764236de593edad5546e", "commitAfterChange": "204c50b0be0f29d66fd92d0f611bfe32b5fd0c5a", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "  void tabView_willSelectTabViewItem(int id, int sel, int tabView, int tabViewItem)", "signatureAfterChange": "  void tabView_willSelectTabViewItem(int id, int sel, int tabView, int tabViewItem)", "diff": ["-\t\t\tEvent event = new Event ();", "-\t\t\tevent.item = item;", "-\t\t\tsendEvent (SWT.Selection, event);", "+\t\t\tif (!ignoreSelect) {", "+\t\t\t\tEvent event = new Event ();", "+\t\t\t\tevent.item = item;", "+\t\t\t\tsendEvent (SWT.Selection, event);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1550e85860c1b016acde310fa83fbe9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "e8149db40057c0f8d86c5eba67bc89ce508acc2e", "commitAfterChange": "8306686dc2a4ed363c2d58a33247efe29ec64d0e", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": "  LRESULT WM_NOTIFY (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_NOTIFY (int wParam, int lParam)", "diff": ["-\t\t\t\tNMHEADER phdn = new NMHEADER ();", "-\t\t\t\tOS.MoveMemory (phdn, lParam, NMHEADER.sizeof);", "-\t\t\t\tif (phdn.pitem != 0) {", "-\t\t\t\t\tHDITEM pitem = new HDITEM ();", "-\t\t\t\t\tOS.MoveMemory (pitem, phdn.pitem, HDITEM.sizeof);", "-\t\t\t\t\tif ((pitem.mask & OS.HDI_WIDTH) != 0) {", "-\t\t\t\t\t\tTableColumn column = columns [phdn.iItem];", "-\t\t\t\t\t\tif (column != null) {", "-\t\t\t\t\t\t\tcolumn.sendEvent (SWT.Resize);", "-\t\t\t\t\t\t\t/*", "-\t\t\t\t\t\t\t* It is possible (but unlikely), that application", "-\t\t\t\t\t\t\t* code could have disposed the widget in the resize", "-\t\t\t\t\t\t\t* event.  If this happens, end the processing of the", "-\t\t\t\t\t\t\t* Windows message by returning zero as the result of", "-\t\t\t\t\t\t\t* the window proc.", "-\t\t\t\t\t\t\t*/", "-\t\t\t\t\t\t\tif (isDisposed ()) return LRESULT.ZERO;\t", "-\t\t\t\t\t\t\tint count = OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0);", "-\t\t\t\t\t\t\tif (count == 1 && columns [0] == null) count = 0;", "-\t\t\t\t\t\t\t/*", "-\t\t\t\t\t\t\t* It is possible (but unlikely), that application", "-\t\t\t\t\t\t\t* code could have disposed the column in the move", "-\t\t\t\t\t\t\t* event.  If this happens, process the move event", "-\t\t\t\t\t\t\t* for those columns that have not been destroyed.", "-\t\t\t\t\t\t\t*/", "-\t\t\t\t\t\t\tTableColumn [] newColumns = new TableColumn [count];", "-\t\t\t\t\t\t\tSystem.arraycopy (columns, 0, newColumns, 0, count);", "-\t\t\t\t\t\t\tfor (int i=phdn.iItem+1; i<count; i++) {", "-\t\t\t\t\t\t\t\tif (newColumns [i] != null && !newColumns [i].isDisposed ()) {", "-\t\t\t\t\t\t\t\t\tnewColumns [i].sendEvent (SWT.Move);", "+\t\t\t\tif (!ignoreResize) {", "+\t\t\t\t\tNMHEADER phdn = new NMHEADER ();", "+\t\t\t\t\tOS.MoveMemory (phdn, lParam, NMHEADER.sizeof);", "+\t\t\t\t\tif (phdn.pitem != 0) {", "+\t\t\t\t\t\tHDITEM pitem = new HDITEM ();", "+\t\t\t\t\t\tOS.MoveMemory (pitem, phdn.pitem, HDITEM.sizeof);", "+\t\t\t\t\t\tif ((pitem.mask & OS.HDI_WIDTH) != 0) {", "+\t\t\t\t\t\t\tTableColumn column = columns [phdn.iItem];", "+\t\t\t\t\t\t\tif (column != null) {", "+\t\t\t\t\t\t\t\tcolumn.sendEvent (SWT.Resize);", "+\t\t\t\t\t\t\t\t/*", "+\t\t\t\t\t\t\t\t* It is possible (but unlikely), that application", "+\t\t\t\t\t\t\t\t* code could have disposed the widget in the resize", "+\t\t\t\t\t\t\t\t* event.  If this happens, end the processing of the", "+\t\t\t\t\t\t\t\t* Windows message by returning zero as the result of", "+\t\t\t\t\t\t\t\t* the window proc.", "+\t\t\t\t\t\t\t\t*/", "+\t\t\t\t\t\t\t\tif (isDisposed ()) return LRESULT.ZERO;\t", "+\t\t\t\t\t\t\t\tint count = OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0);", "+\t\t\t\t\t\t\t\tif (count == 1 && columns [0] == null) count = 0;", "+\t\t\t\t\t\t\t\t/*", "+\t\t\t\t\t\t\t\t* It is possible (but unlikely), that application", "+\t\t\t\t\t\t\t\t* code could have disposed the column in the move", "+\t\t\t\t\t\t\t\t* event.  If this happens, process the move event", "+\t\t\t\t\t\t\t\t* for those columns that have not been destroyed.", "+\t\t\t\t\t\t\t\t*/", "+\t\t\t\t\t\t\t\tTableColumn [] newColumns = new TableColumn [count];", "+\t\t\t\t\t\t\t\tSystem.arraycopy (columns, 0, newColumns, 0, count);", "+\t\t\t\t\t\t\t\tfor (int i=phdn.iItem+1; i<count; i++) {", "+\t\t\t\t\t\t\t\t\tif (newColumns [i] != null && !newColumns [i].isDisposed ()) {", "+\t\t\t\t\t\t\t\t\t\tnewColumns [i].sendEvent (SWT.Move);", "+\t\t\t\t\t\t\t\t\t}"]}], "num": 60380}