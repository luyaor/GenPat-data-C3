{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e5104167b7dc93df6283aac50417137f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35450a66a57af233809b2cdaebca9c78", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "f55b9c7d0d3a8a64405ef0aa7fcf98fc23ebefc1", "commitAfterChange": "1e518c01e875b59a6620cc36921365e0f813d739", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " void drawBullet(Bullet bullet, GC gc, int paintX, int paintY, int index, int lineAscent, int lineDescent)", "signatureAfterChange": " void drawBullet(Bullet bullet, GC gc, int paintX, int paintY, int index, int lineAscent, int lineDescent)", "diff": ["-\tif ((bullet.type & ST.BULLET_DOT) != 0 && StyledText.IS_MOTIF) {", "-\t\tint size = Math.max(4, (lineAscent + lineDescent) / 4);", "-\t\tif ((size & 1) == 0) size++;", "-\t\tif (color == null) {", "-\t\t\tDisplay display = styledText.getDisplay();", "-\t\t\tcolor = display.getSystemColor(SWT.COLOR_BLACK);", "-\t\t}", "-\t\tgc.setBackground(color);", "-\t\tint x = paintX + Math.max(0, metrics.width - size - BULLET_MARGIN);", "-\t\tgc.fillArc(x, paintY + size, size + 1, size + 1, 0, 360);", "-\t\treturn;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5763816ab93c407b81c1d713022e84b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "26e521309364bb658cf1c93d5815f7e3f172acfd", "commitAfterChange": "d5acf8725fb8dcc7039f8278a2f9accd6fd66d29", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 46, "signatureBeforeChange": " void releaseWidget ()", "signatureAfterChange": " void releaseWidget ()", "diff": ["-}", "-void releaseWidget () {", "+}", "+void releaseWidget () {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "619f0a7f874d80db19ae286774669404", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "6d45410e136f807ef79f7ae29764cf531166798d", "commitAfterChange": "b1a0e6d11ab761abaa61e0af2a65911b134dc63e", "methodNumberBeforeChange": 207, "methodNumberAfterChange": 207, "signatureBeforeChange": "\r void performPaint(GC gc,int startLine,int startY, int renderHeight, boolean drawDirect)", "signatureAfterChange": "\r void performPaint(GC gc,int startLine,int startY, int renderHeight)", "diff": ["-void performPaint(GC gc,int startLine,int startY, int renderHeight, boolean drawDirect)\t{\r", "+void performPaint(GC gc,int startLine,int startY, int renderHeight)\t{\r", "-\t// Do double buffering on direct draw operations only\r", "-\tif (drawDirect || SWT.getPlatform().equals(\"win32\")) {\r", "-\t\tImage lineBuffer = new Image(getDisplay(), clientArea.width, renderHeight);\r", "-\t\tGC lineGC = new GC(lineBuffer);\t\r", "+\tImage lineBuffer = new Image(getDisplay(), clientArea.width, renderHeight);\r", "+\tGC lineGC = new GC(lineBuffer);\t\r", "-\t\tlineGC.setFont(font);\r", "-\t\tlineGC.setForeground(foreground);\r", "-\t\tlineGC.setBackground(background);\r", "-\t\tfor (int i = startLine; paintY < renderHeight && i < lineCount; i++, paintY += lineHeight) {\r", "-\t\t\tString line = content.getLine(i);\r", "-\t\t\trenderer.drawLine(line, i, paintY, lineGC, background, foreground, fontData, true);\r", "-\t\t}\r", "-\t\tif (paintY < renderHeight) {\r", "-\t\t\tlineGC.setBackground(background);\r", "-\t\t\tlineGC.setForeground(background);\r", "-\t\t\tlineGC.fillRectangle(0, paintY, clientArea.width, renderHeight - paintY);\r", "-\t\t}\r", "-\t\tgc.drawImage(lineBuffer, 0, startY);\r", "-\t\tlineGC.dispose();\r", "-\t\tlineBuffer.dispose();\r", "-\t} else {\r", "-\t\tfor (int i = startLine; paintY < renderHeight && i < lineCount; i++, paintY += lineHeight) {\r", "-\t\t\tString line = content.getLine(i);\r", "-\t\t\trenderer.drawLine(line, i, paintY + startY, gc, background, foreground, fontData, true);\r", "-\t\t}\r", "-\t\tif (paintY < renderHeight) {\r", "-\t\t\tgc.setBackground(background);\r", "-\t\t\tgc.setForeground(background);\r", "-\t\t\tgc.fillRectangle(0, paintY + startY, clientArea.width, renderHeight - paintY);\r", "-\t\t}\r", "+\tlineGC.setFont(font);\r", "+\tlineGC.setForeground(foreground);\r", "+\tlineGC.setBackground(background);\r", "+\tfor (int i = startLine; paintY < renderHeight && i < lineCount; i++, paintY += lineHeight) {\r", "+\t\tString line = content.getLine(i);\r", "+\t\trenderer.drawLine(line, i, paintY, lineGC, background, foreground, fontData, true);\r", "+\tif (paintY < renderHeight) {\r", "+\t\tlineGC.setBackground(background);\r", "+\t\tlineGC.setForeground(background);\r", "+\t\tlineGC.fillRectangle(0, paintY, clientArea.width, renderHeight - paintY);\r", "+\t}\r", "+\tgc.drawImage(lineBuffer, 0, startY);\r", "+\tlineGC.dispose();\r", "+\tlineBuffer.dispose();\r"]}], "num": 43873}