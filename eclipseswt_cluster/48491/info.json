{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "02f934f15849089e9267a302c2266d50", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70b4d9e47dfc8a9706805b5a278e7e85", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "20b0eb441aada9604976583a80e3bdef4aa3362d", "commitAfterChange": "7a19591ebf7fe6141ff36a49f3e5c931d7f1c3df", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " int layoutItems ()", "signatureAfterChange": " int layoutItems ()", "diff": ["-\tint y = 0, maxWidth = 0, width = getSize().x;", "+\tint y = 0, width = getSize().x;", "+\twrapItems(width);", "-\t\tfor (int i = 0; i < items[row].length; i++) {", "+\t\tfor (int i = 0; i < count; i++) {", "-\t\t\tif (available < 0 && (width > item.internalGetMinimumWidth())) {", "-\t\t\t\t/* push the next items into the next row */", "-\t\t\t\tavailable += item.internalGetMinimumWidth();", "-\t\t\t\tint amount = items[row].length - i;\t", "-\t\t\t\tCoolItem[] nextRow;", "-\t\t\t\tif (row + 1 == items.length) { /* Adding a new row */", "-\t\t\t\t\tnextRow = new CoolItem [amount];", "-\t\t\t\t\tCoolItem[][] newItems = new CoolItem [items.length + 1][];", "-\t\t\t\t\tSystem.arraycopy(items, 0, newItems, 0, items.length);", "-\t\t\t\t\titems = newItems;", "-\t\t\t\t} else {", "-\t\t\t\t\tnextRow = new CoolItem [amount + items [row + 1].length];", "-\t\t\t\t\tSystem.arraycopy(items[row+1], 0, nextRow, amount, items [row + 1].length);", "-\t\t\t\t}", "-\t\t\t\tSystem.arraycopy(items[row], i, nextRow, 0, amount);", "-\t\t\t\titems [row + 1] = nextRow;", "-\t\t\t\tCoolItem[] thisRow = new CoolItem[i];", "-\t\t\t\tSystem.arraycopy(items[row], 0, thisRow, 0, i);", "-\t\t\t\titems[row] = thisRow;", "-\t\t\t\tbreak;\t\t\t", "-\t\t\t}", "-\t", "-\t\tfor (int i = 0; i < items[row].length; i++) {", "+\t\tfor (int i = 0; i < count; i++) {", "-\t\t\t\t}", "-\t\t\t\telse if (oldBounds.height != newBounds.height) {", "+\t\t\t\t} else if (oldBounds.height != newBounds.height) {", "-\t\t\t\t}", "-\t\t\t\telse if (oldBounds.x != newBounds.x) {", "+\t\t\t\t} else if (oldBounds.x != newBounds.x) {", "-\t\tmaxWidth = Math.max(maxWidth, x);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4fc5642feb0dff5c0c6f55a60a28348", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/gtk/org/eclipse/swt/program/Program.java", "commitBeforeChange": "dbb652fe193019d96be9d6af80af3f6e1918e181", "commitAfterChange": "a9865ce41544b9634fe7b5cf08a114ae91a2faeb", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 23, "signatureBeforeChange": " public boolean execute (String fileName)", "signatureAfterChange": " public boolean execute(String fileName)", "diff": ["-public boolean execute (String fileName) {", "+public boolean execute(String fileName) {", "-\t", "-\tif (desktop == DESKTOP_GNOME) {\t\t", "-\t\tif (gnomeExpectUri) {", "-\t\t\t/* Convert the given path into a URL */", "-\t\t\tfileName = \"file://\" + fileName;", "-\t\t}", "-", "-\t\t/* Parse the command into its individual arguments. */", "-\t\tString[] args = parseCommand(command);", "-\t\tint fileArg = -1;", "-\t\tint index;", "-\t\tfor (index = 0; index < args.length; index++) {", "-\t\t\tint j = args[index].indexOf(\"%f\");", "-\t\t\tif (j != -1) {", "-\t\t\t\tString value = args[index];", "-\t\t\t\tfileArg = index;", "-\t\t\t\targs[index] = value.substring(0, j) + fileName + value.substring(j + 2);", "-\t\t\t}", "-\t\t}", "-\t", "-\t\t/* If a file name was given but the command did not have \"%f\" */", "-\t\tif ((fileName.length() > 0) && (fileArg < 0)) {", "-\t\t\tString[] newArgs = new String[args.length + 1];", "-\t\t\tfor (index = 0; index < args.length; index++) newArgs[index] = args[index];", "-\t\t\tnewArgs[args.length] = fileName;", "-\t\t\targs = newArgs;", "-\t\t}", "-\t", "-\t\t/* Execute the command. */", "-\t\ttry {", "-\t\t\tCompatibility.exec(args);", "-\t\t} catch (IOException e) {", "-\t\t\treturn false;", "-\t\t}", "-\t\treturn true;", "-\t}\t\t", "-", "+\tswitch (desktop) {", "+\t\tcase DESKTOP_GNOME: return gnome_execute(fileName);", "+\t\tcase DESKTOP_KDE: return kde_execute(fileName);", "+\t}"]}], "num": 48491}