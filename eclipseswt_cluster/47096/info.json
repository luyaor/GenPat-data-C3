{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ea7546a22a069be8575f12e84d76b852", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b213f6553146faa23e8039a2ebcfab8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Font.java", "commitBeforeChange": "48512dc20e32e369917d3e1ccfb92109c9724e7e", "commitAfterChange": "1942f64e0b774317e0a8e6ec44902bb736bb7790", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public FontData[] getFontData()", "signatureAfterChange": " public FontData[] getFontData()", "diff": ["-\tint index=0;", "-\tint fnames = getFontNameList(handle);", "-\tint nfonts = OS.g_slist_length(fnames);", "-\tFontData[] answer = new FontData[nfonts];", "-\tfor (int i=0; i<nfonts; i++) {", "-\t\tFontData data = new FontData();", "-\t\t", "-\t\tint name = OS.g_slist_nth_data(fnames, index);", "-\t\tint length = OS.strlen(name);", "-\t\tbyte [] buffer1 = new byte[length];", "-\t\tOS.memmove(buffer1, name, length);", "-\t\tchar [] buffer2 = Converter.mbcsToWcs (null, buffer1);", "-\t\tString fontname =  new String (buffer2, 0, buffer2.length);", "-\t\tdata.setXlfd(fontname);", "-\t\t", "-\t\t// Wild guess, 'a' looks average enough", "-\t\tdata.averageWidth = OS.gdk_char_width(handle, (byte)'a');", "-\t\t", "-\t\t// Wild guess, a progressive font should probably have A wider than l", "-\t\tint widthA = OS.gdk_char_width(handle, (byte)'A');", "-\t\tint widthl = OS.gdk_char_width(handle, (byte)'l');", "-\t\tif (widthA == widthl) data.spacing = \"m\";", "-\t\t\telse data.spacing = \"p\";", "-\t\t", "-\t\tanswer[i] = data;", "-\t}", "+\tif (handle==0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);", "+\t/* REWRITE ME.", "+\t * THIS WILL NEVER WORK CORRECTLY.", "+\t * WE USED TO REACH DOWN TO GDK INTERNAL MEMORY", "+\t */", "+\tFontData[] answer = new FontData[1];", "+\tFontData data = new FontData();", "+\tdata.fontFamily = \"fixed\";", "+\tdata.weight = \"normal\";", "+\tdata.points = 120;", "+\tanswer[0] = data;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee16dc685fa48f0f5bd7022847490dee", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "a9716907b1a13066ba5ddfa4068ab07edf3473ae", "commitAfterChange": "1fd527c39129f45100a9be059c432ba659265e68", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  void destroyItem (TableItem item)", "signatureAfterChange": "  void destroyItem (TableItem item)", "diff": ["-\t", "-\tif (itemCount == 0) {", "-\t\tif (columnCount == 0) {", "-\t\t\tint column = OS.gtk_tree_view_get_column (handle, 0);", "-\t\t\tint list = OS.gtk_tree_view_column_get_cell_renderers (column);", "-\t\t\tint length = OS.g_list_length (list);", "-\t\t\tint renderer = OS.g_list_nth_data (list, length - 1);", "-\t\t\tOS.g_list_free (list);", "-\t\t\tOS.gtk_tree_view_column_set_cell_data_func (column, renderer, 0, 0, 0);", "-\t\t\tfirstCustomDraw = false;", "-\t\t} else {", "-\t\t\tfor (int i = 0; i < columnCount; i++) {", "-\t\t\t\tif (columns [i].customDraw) {", "-\t\t\t\t\tint column = OS.gtk_tree_view_get_column (handle, i);", "-\t\t\t\t\tint list = OS.gtk_tree_view_column_get_cell_renderers (column);", "-\t\t\t\t\tint length = OS.g_list_length (list);", "-\t\t\t\t\tint renderer = OS.g_list_nth_data (list, length - 1);", "-\t\t\t\t\tOS.g_list_free (list);", "-\t\t\t\t\tOS.gtk_tree_view_column_set_cell_data_func (column, renderer, 0, 0, 0);", "-\t\t\t\t\tcolumns [i].customDraw = false;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t}", "+\tif (itemCount == 0) resetCustomDraw ();"]}], "num": 47096}