{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "707031b87fdf75c064a95298650a5af7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "829ab85846b2bc9a921ff09cfff34961", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/WebSite.java", "commitBeforeChange": "e9c811762751416cc44a67667a332572107d4583", "commitAfterChange": "e937f989f66a0c9adeb042797da58cef9a65f09a", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "  int MapUrlToZone(int pwszUrl, int pdwZone, int dwFlags)", "signatureAfterChange": "  int MapUrlToZone(int pwszUrl, int pdwZone, int dwFlags)", "diff": ["-int MapUrlToZone(int pwszUrl, int pdwZone, int dwFlags) {", "-\tint cnt = OS.wcslen(pwszUrl);", "-\tchar[] buffer = new char[cnt];", "-\t/* ", "-\t* Note.  pwszUrl is unicode on both unicode and ansi platforms.", "-\t* The nbr of chars is multiplied by the constant 2 and not by TCHAR.sizeof since", "-\t* TCHAR.sizeof returns 1 on ansi platforms.", "-\t*/", "-\tOS.MoveMemory(buffer, pwszUrl, cnt * 2);", "-\tString url = new String(buffer);", "-\t", "+int MapUrlToZone(int pwszUrl, int pdwZone, int dwFlags) {\t", "-\t*/", "-\tint zone = Browser.URLZONE_INTRANET;", "-\t", "-\t/*", "-\t* Note.  Some ActiveX plugins crash when executing", "-\t* inside the embedded explorer itself running into", "-\t* a JVM.  The current workaround is to detect when", "-\t* such ActiveX is about to be started and refuse", "-\t* to execute it.", "-\t* ActiveX blocked in an object tag:", "-\t* - Shockwave director plugin (mime: application/x-director)", "-\t* - Java plugin", "-\t*/", "-", "-\tif (url.startsWith(Browser.URL_DIRECTOR) ||", "-\t\t(url.startsWith(Browser.URL_JAVA) && url.indexOf(Browser.URL_CAB) != -1) ||", "-\t\t(url.startsWith(Browser.URL_JAVA_15) && url.indexOf(Browser.URL_CAB) != -1)) {", "-\t\tzone = Browser.URLZONE_LOCAL_MACHINE;", "-\t}", "-\tCOM.MoveMemory(pdwZone, new int[] {zone}, 4);", "+\t*/\t", "+\tCOM.MoveMemory(pdwZone, new int[] {Browser.URLZONE_INTRANET}, 4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8795ed6e2982b8280d89361746c869a0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/WebSite.java", "commitBeforeChange": "e9c811762751416cc44a67667a332572107d4583", "commitAfterChange": "e937f989f66a0c9adeb042797da58cef9a65f09a", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": "  int ProcessUrlAction(int pwszUrl, int dwAction, int pPolicy, int cbPolicy, int pContext, int cbContext, int dwFlags, int dwReserved)", "signatureAfterChange": "  int ProcessUrlAction(int pwszUrl, int dwAction, int pPolicy, int cbPolicy, int pContext, int cbContext, int dwFlags, int dwReserved)", "diff": ["-\tif (dwAction >= Browser.URLACTION_ACTIVEX_MIN && dwAction <= Browser.URLACTION_ACTIVEX_MAX) {", "-\t\tint cnt = OS.wcslen(pwszUrl);", "-\t\tchar[] buffer = new char[cnt];", "-\t\t/* ", "-\t\t* Note.  pwszUrl is unicode on both unicode and ansi platforms.", "-\t\t* The nbr of chars is multiplied by the constant 2 and not by TCHAR.sizeof since", "-\t\t* TCHAR.sizeof returns 1 on ansi platforms.", "-\t\t*/", "-\t\tOS.MoveMemory(buffer, pwszUrl, cnt * 2);", "-\t\tString url = new String(buffer);", "-\t\t/*", "-\t\t* Note.  Some ActiveX plugins crash when executing", "-\t\t* inside the embedded explorer itself running into", "-\t\t* a JVM.  The current workaround is to detect when", "-\t\t* such ActiveX is about to be started and refuse", "-\t\t* to execute it.", "-\t\t* ActiveX blocked based on URL extension:", "-\t\t* - Shockwave director plugin (mime: application/x-director)", "-\t\t*/", "-\t\tif (url.endsWith(\".dcr\")) policy = Browser.URLPOLICY_DISALLOW; //$NON-NLS-1$", "+\t/*", "+\t* Note.  Some ActiveX plugins crash when executing", "+\t* inside the embedded explorer itself running into", "+\t* a JVM.  The current workaround is to detect when", "+\t* such ActiveX is about to be started and refuse", "+\t* to execute it.", "+\t*/", "+\tif (dwAction == Browser.URLACTION_ACTIVEX_RUN) {", "+\t\tGUID guid = new GUID();", "+\t\tCOM.MoveMemory(guid, pContext, GUID.sizeof);", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDJavaBeansBridge) || COM.IsEqualGUID(guid, COM.IIDShockwaveActiveXControl)) {", "+\t\t\tpolicy = Browser.URLPOLICY_DISALLOW;", "+\t\t}"]}], "num": 54102}