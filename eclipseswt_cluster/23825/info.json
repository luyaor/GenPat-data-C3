{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "342c3d15a6c2842cc03e739c3bdb794f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a06f69a2010a513a2c7f29a1fbd1f0f0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public Rectangle getBounds()", "signatureAfterChange": " public Rectangle getBounds()", "diff": ["-\tif (width != -1 && height != -1) {", "-\t\treturn new Rectangle(0, 0, width, height);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tif (width != -1 && height != -1) {", "+\t\t\treturn new Rectangle(0, 0, width, height);", "+\t\t}", "+\t\tNSSize size = handle.size();", "+\t\treturn new Rectangle(0, 0, width = (int)size.width, height = (int)size.height);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "-\tNSSize size = handle.size();", "-\treturn new Rectangle(0, 0, width = (int)size.width, height = (int)size.height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03bf9796adef292dea6320dd0cebfa89", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public Point getLocation(int offset, boolean trailing)", "signatureAfterChange": " public Point getLocation(int offset, boolean trailing)", "diff": ["-\tcomputeRuns();", "-\tint length = text.length();", "-\tif (!(0 <= offset && offset <= length)) SWT.error(SWT.ERROR_INVALID_RANGE);", "-\tif (length == 0) return new Point(0, 0);", "-\toffset = translateOffset(offset);", "-\tint /*long*/ glyphIndex = layoutManager.glyphIndexForCharacterAtIndex(offset);", "-\tNSRect rect = layoutManager.lineFragmentUsedRectForGlyphAtIndex(glyphIndex, 0);", "-\tNSPoint point = layoutManager.locationForGlyphAtIndex(glyphIndex);", "-\tif (trailing) {", "-\t\tNSRange range = new NSRange();", "-\t\trange.location = glyphIndex;", "-\t\trange.length = 1;", "-\t\tNSRect bounds = layoutManager.boundingRectForGlyphRange(range, textContainer);", "-\t\tpoint.x += bounds.width;", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tcomputeRuns();", "+\t\tint length = text.length();", "+\t\tif (!(0 <= offset && offset <= length)) SWT.error(SWT.ERROR_INVALID_RANGE);", "+\t\tif (length == 0) return new Point(0, 0);", "+\t\toffset = translateOffset(offset);", "+\t\tint /*long*/ glyphIndex = layoutManager.glyphIndexForCharacterAtIndex(offset);", "+\t\tNSRect rect = layoutManager.lineFragmentUsedRectForGlyphAtIndex(glyphIndex, 0);", "+\t\tNSPoint point = layoutManager.locationForGlyphAtIndex(glyphIndex);", "+\t\tif (trailing) {", "+\t\t\tNSRange range = new NSRange();", "+\t\t\trange.location = glyphIndex;", "+\t\t\trange.length = 1;", "+\t\t\tNSRect bounds = layoutManager.boundingRectForGlyphRange(range, textContainer);", "+\t\t\tpoint.x += bounds.width;", "+\t\t}", "+\t\treturn new Point((int)point.x, (int)rect.y);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "-\treturn new Point((int)point.x, (int)rect.y);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f5572e17410d27062fb5e0078b08b5b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Path.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void quadTo(float cx, float cy, float x, float y)", "signatureAfterChange": " public void quadTo(float cx, float cy, float x, float y)", "diff": ["-\tNSPoint pt = new NSPoint();", "-\tpt.x = x;", "-\tpt.y = y;", "-\tNSPoint ct = new NSPoint();", "-\tct.x = cx;", "-\tct.y = cy;", "-\thandle.curveToPoint(pt, ct, ct);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tNSPoint pt = new NSPoint();", "+\t\tpt.x = x;", "+\t\tpt.y = y;", "+\t\tNSPoint ct = new NSPoint();", "+\t\tct.x = cx;", "+\t\tct.y = cy;", "+\t\thandle.curveToPoint(pt, ct, ct);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e4583481b7f0ad1b4246c0e5e07569d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Path.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void cubicTo(float cx1, float cy1, float cx2, float cy2, float x, float y)", "signatureAfterChange": " public void cubicTo(float cx1, float cy1, float cx2, float cy2, float x, float y)", "diff": ["-\tNSPoint pt = new NSPoint();", "-\tpt.x = x;", "-\tpt.y = y;", "-\tNSPoint ct1 = new NSPoint();", "-\tct1.x = cx1;", "-\tct1.y = cy1;", "-\tNSPoint ct2 = new NSPoint();", "-\tct2.x = cx2;", "-\tct2.y = cy2;", "-\thandle.curveToPoint(pt, ct1, ct2);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tNSPoint pt = new NSPoint();", "+\t\tpt.x = x;", "+\t\tpt.y = y;", "+\t\tNSPoint ct1 = new NSPoint();", "+\t\tct1.x = cx1;", "+\t\tct1.y = cy1;", "+\t\tNSPoint ct2 = new NSPoint();", "+\t\tct2.x = cx2;", "+\t\tct2.y = cy2;", "+\t\thandle.curveToPoint(pt, ct1, ct2);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5da5bb8f9fda1e46c8d5af964d14e8a9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public int getOffset(int x, int y, int[] trailing)", "signatureAfterChange": " public int getOffset(int x, int y, int[] trailing)", "diff": ["-\tcomputeRuns();", "-\tif (trailing != null && trailing.length < 1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "-\tint length = text.length();", "-\tif (length == 0) return 0;", "-\tNSPoint pt = new NSPoint();", "-\tpt.x = x;", "-\tpt.y = y;", "-\tfloat /*double*/[] partialFration = new float /*double*/[1];", "-\tint /*long*/ glyphIndex = layoutManager.glyphIndexForPoint(pt, textContainer, partialFration);", "-\tint /*long*/ offset = layoutManager.characterIndexForGlyphAtIndex(glyphIndex);", "-\tif (trailing != null) trailing[0] = Math.round((float)/*64*/partialFration[0]);", "-\treturn Math.min(untranslateOffset((int)/*64*/offset), length - 1);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tcomputeRuns();", "+\t\tif (trailing != null && trailing.length < 1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\t\tint length = text.length();", "+\t\tif (length == 0) return 0;", "+\t\tNSPoint pt = new NSPoint();", "+\t\tpt.x = x;", "+\t\tpt.y = y;", "+\t\tfloat /*double*/[] partialFration = new float /*double*/[1];", "+\t\tint /*long*/ glyphIndex = layoutManager.glyphIndexForPoint(pt, textContainer, partialFration);", "+\t\tint /*long*/ offset = layoutManager.characterIndexForGlyphAtIndex(glyphIndex);", "+\t\tif (trailing != null) trailing[0] = Math.round((float)/*64*/partialFration[0]);", "+\t\treturn Math.min(untranslateOffset((int)/*64*/offset), length - 1);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "131bb88961d25349040cc93f188dd1e3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Region.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public boolean intersects (int x, int y, int width, int height)", "signatureAfterChange": " public boolean intersects (int x, int y, int width, int height)", "diff": ["-\tshort[] r = new short[4];", "-\tOS.SetRect(r, (short)x, (short)y, (short)(x + width),(short)(y + height));", "-\treturn OS.RectInRgn(rect, handle);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tshort[] r = new short[4];", "+\t\tOS.SetRect(r, (short)x, (short)y, (short)(x + width),(short)(y + height));", "+\t\treturn OS.RectInRgn(rect, handle);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09ce92c876948e2aa353c5cfe3f0cc47", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Transform.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void translate(float offsetX, float offsetY)", "signatureAfterChange": " public void translate(float offsetX, float offsetY)", "diff": ["-\thandle.translateXBy(offsetX, offsetY);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\thandle.translateXBy(offsetX, offsetY);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7f4f3b970eea90e93dfbd59c4ed375b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public Rectangle getBounds()", "signatureAfterChange": " public Rectangle getBounds()", "diff": ["-\tcomputeRuns();", "-\tNSRect rect = layoutManager.usedRectForTextContainer(textContainer);", "-\tif (wrapWidth != -1) rect.width = wrapWidth;", "-\tif (text.length() == 0) {", "-\t\tFont font = this.font != null ? this.font : device.systemFont;", "-\t\tNSFont nsFont = font.handle;", "-\t\trect.height = Math.max(rect.height, layoutManager.defaultLineHeightForFont(nsFont));", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tcomputeRuns();", "+\t\tNSRect rect = layoutManager.usedRectForTextContainer(textContainer);", "+\t\tif (wrapWidth != -1) rect.width = wrapWidth;", "+\t\tif (text.length() == 0) {", "+\t\t\tFont font = this.font != null ? this.font : device.systemFont;", "+\t\t\tNSFont nsFont = font.handle;", "+\t\t\trect.height = Math.max(rect.height, layoutManager.defaultLineHeightForFont(nsFont));", "+\t\t}", "+\t\trect.height = Math.max(rect.height, ascent + descent);", "+\t\treturn new Rectangle(0, 0, (int)rect.width, (int)rect.height);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "-\trect.height = Math.max(rect.height, ascent + descent);", "-\treturn new Rectangle(0, 0, (int)rect.width, (int)rect.height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5afe7f38d71a8a27b0a112ddff700d0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Path.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void addArc(float x, float y, float width, float height, float startAngle, float arcAngle)", "signatureAfterChange": " public void addArc(float x, float y, float width, float height, float startAngle, float arcAngle)", "diff": ["-\tNSAffineTransform transform = NSAffineTransform.transform();", "-\ttransform.translateXBy(x + width / 2f, y + height / 2f);", "-\ttransform.scaleXBy(width / 2f, height / 2f);", "-\tNSBezierPath path = NSBezierPath.bezierPath();", "-\tNSPoint center = new NSPoint();", "-\tfloat sAngle = -startAngle;", "-\tfloat eAngle = -(startAngle + arcAngle);", "-\tpath.appendBezierPathWithArcWithCenter(center, 1, sAngle,  eAngle, arcAngle>0);", "-\tpath.transformUsingAffineTransform(transform);", "-\thandle.appendBezierPath(path);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tNSAffineTransform transform = NSAffineTransform.transform();", "+\t\ttransform.translateXBy(x + width / 2f, y + height / 2f);", "+\t\ttransform.scaleXBy(width / 2f, height / 2f);", "+\t\tNSBezierPath path = NSBezierPath.bezierPath();", "+\t\tNSPoint center = new NSPoint();", "+\t\tfloat sAngle = -startAngle;", "+\t\tfloat eAngle = -(startAngle + arcAngle);", "+\t\tpath.appendBezierPathWithArcWithCenter(center, 1, sAngle,  eAngle, arcAngle>0);", "+\t\tpath.transformUsingAffineTransform(transform);", "+\t\thandle.appendBezierPath(path);", "+\t} finally { ", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43e243e2fdb30fb8515e0256ce1e6a68", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Transform.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public Transform (Device device, float m11, float m12, float m21, float m22, float dx, float dy)", "signatureAfterChange": " public Transform (Device device, float m11, float m12, float m21, float m22, float dx, float dy)", "diff": ["-\thandle = NSAffineTransform.transform();", "-\tif (handle == null) SWT.error(SWT.ERROR_NO_HANDLES);", "-\thandle.retain();", "-\tsetElements(m11, m12, m21, m22, dx, dy);", "-\tinit();", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\thandle = NSAffineTransform.transform();", "+\t\tif (handle == null) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\thandle.retain();", "+\t\tsetElements(m11, m12, m21, m22, dx, dy);", "+\t\tinit();", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "734863af28c253ecc7916e499d1c83ae", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Region.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public boolean contains(int x, int y)", "signatureAfterChange": " public boolean contains(int x, int y)", "diff": ["-\tshort[] point = new short[]{(short)x, (short)y};", "-\treturn OS.PtInRgn(point, handle);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tshort[] point = new short[]{(short)x, (short)y};", "+\t\treturn OS.PtInRgn(point, handle);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bb80cba31450cdfcf66d4a694e78e2f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Transform.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void invert()", "signatureAfterChange": " public void invert()", "diff": ["-\tNSAffineTransformStruct struct = handle.transformStruct();", "-\tif ((struct.m11 * struct.m22 - struct.m12 * struct.m21) == 0) {", "-\t\tSWT.error(SWT.ERROR_CANNOT_INVERT_MATRIX);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tNSAffineTransformStruct struct = handle.transformStruct();", "+\t\tif ((struct.m11 * struct.m22 - struct.m12 * struct.m21) == 0) {", "+\t\t\tSWT.error(SWT.ERROR_CANNOT_INVERT_MATRIX);", "+\t\t}", "+\t\thandle.invert();", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "-\thandle.invert();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2385d34ec43a50fab626fcaf876b214f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Region.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public Rectangle getBounds()", "signatureAfterChange": " public Rectangle getBounds()", "diff": ["-\tshort[] bounds = new short[4];", "-\tOS.GetRegionBounds(handle, bounds);", "-\tint width = bounds[3] - bounds[1];", "-\tint height = bounds[2] - bounds[0];", "-\treturn new Rectangle(bounds[1], bounds[0], width, height);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tshort[] bounds = new short[4];", "+\t\tOS.GetRegionBounds(handle, bounds);", "+\t\tint width = bounds[3] - bounds[1];", "+\t\tint height = bounds[2] - bounds[0];", "+\t\treturn new Rectangle(bounds[1], bounds[0], width, height);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f26188a377c331d3440ec7f6cb5586d5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public Image(Device device, int width, int height)", "signatureAfterChange": " public Image(Device device, int width, int height)", "diff": ["-\tinit(width, height);", "-\tinit();", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tinit(width, height);", "+\t\tinit();", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a7185a2bfbb2aba30bf35d47a1bfd6e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Transform.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void shear(float shearX, float shearY)", "signatureAfterChange": " public void shear(float shearX, float shearY)", "diff": ["-\tNSAffineTransformStruct struct = new NSAffineTransformStruct();", "-\tstruct.m11 = 1;", "-\tstruct.m12 = shearX;", "-\tstruct.m21 = shearY;", "-\tstruct.m22 = 1;", "-\tNSAffineTransform matrix = NSAffineTransform.transform();", "-\tmatrix.setTransformStruct(struct);", "-\thandle.prependTransform(matrix);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tNSAffineTransformStruct struct = new NSAffineTransformStruct();", "+\t\tstruct.m11 = 1;", "+\t\tstruct.m12 = shearX;", "+\t\tstruct.m21 = shearY;", "+\t\tstruct.m22 = 1;", "+\t\tNSAffineTransform matrix = NSAffineTransform.transform();", "+\t\tmatrix.setTransformStruct(struct);", "+\t\thandle.prependTransform(matrix);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb5846d97c10c1c457b363915fcaadc0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public Rectangle getLineBounds(int lineIndex)", "signatureAfterChange": " public Rectangle getLineBounds(int lineIndex)", "diff": ["-\tcomputeRuns();", "-\tif (!(0 <= lineIndex && lineIndex < lineBounds.length)) SWT.error(SWT.ERROR_INVALID_RANGE);", "-\tNSRect rect = lineBounds[lineIndex];", "-\treturn new Rectangle((int)rect.x, (int)rect.y, (int)rect.width, (int)rect.height);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tcomputeRuns();", "+\t\tif (!(0 <= lineIndex && lineIndex < lineBounds.length)) SWT.error(SWT.ERROR_INVALID_RANGE);", "+\t\tNSRect rect = lineBounds[lineIndex];", "+\t\treturn new Rectangle((int)rect.x, (int)rect.y, (int)rect.width, (int)rect.height);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f40ebb38b0817acbcdd16023ee1375b7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Region.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public Region(Device device)", "signatureAfterChange": " public Region(Device device)", "diff": ["-\thandle = OS.NewRgn();", "-\tif (handle == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\tinit();", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\thandle = OS.NewRgn();", "+\t\tif (handle == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\tinit();", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73a245706beb240e9038271bf30b072a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Path.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void close()", "signatureAfterChange": " public void close()", "diff": ["-\thandle.closePath();", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\thandle.closePath();", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4ff80870c97f71bc77fd6e67a5f0f29", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Transform.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void identity()", "signatureAfterChange": " public void identity()", "diff": ["-\tNSAffineTransformStruct struct = new NSAffineTransformStruct();", "-\tstruct.m11 = 1;", "-\tstruct.m22 = 1;", "-\thandle.setTransformStruct(struct);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tNSAffineTransformStruct struct = new NSAffineTransformStruct();", "+\t\tstruct.m11 = 1;", "+\t\tstruct.m22 = 1;", "+\t\thandle.setTransformStruct(struct);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad86c6d66211cd8a5c2f17442d2e4fa0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public Image(Device device, ImageData data)", "signatureAfterChange": " public Image(Device device, ImageData data)", "diff": ["-\tinit(data);", "-\tinit();", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tinit(data);", "+\t\tinit();", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e573a753a4bf4b52ff07f49c29cfc24", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Transform.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void scale(float scaleX, float scaleY)", "signatureAfterChange": " public void scale(float scaleX, float scaleY)", "diff": ["-\thandle.scaleXBy(scaleX, scaleY);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\thandle.scaleXBy(scaleX, scaleY);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a60f742dab2be54fbcd3c5961027956b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Region.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public void translate (int x, int y)", "signatureAfterChange": " public void translate (int x, int y)", "diff": ["-\tOS.OffsetRgn (handle, (short)x, (short)y);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tOS.OffsetRgn (handle, (short)x, (short)y);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39cb12b40d32d73607cad8cc51952613", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Path.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public Path (Device device)", "signatureAfterChange": " public Path (Device device)", "diff": ["-\thandle = NSBezierPath.bezierPath();", "-\tif (handle == null) SWT.error(SWT.ERROR_NO_HANDLES);", "-\thandle.retain();", "-\thandle.moveToPoint(new NSPoint());", "-\tinit();", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\thandle = NSBezierPath.bezierPath();", "+\t\tif (handle == null) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\thandle.retain();", "+\t\thandle.moveToPoint(new NSPoint());", "+\t\tinit();", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b44bfccaf8dc1cd018148081b7de297b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "ef782aa1d47f4cc453e1ff5e98420459bde2afbb", "commitAfterChange": "5a273c2ef1049cff7bd4d5ace6d67f7530a2ce69", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": " public void setClipping(int x, int y, int width, int height)", "signatureAfterChange": " public void setClipping(int x, int y, int width, int height)", "diff": ["-\tif (width < 0) {", "-\t\tx = x + width;", "-\t\twidth = -width;", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tif (width < 0) {", "+\t\t\tx = x + width;", "+\t\t\twidth = -width;", "+\t\t}", "+\t\tif (height < 0) {", "+\t\t\ty = y + height;", "+\t\t\theight = -height;", "+\t\t}", "+\t\tNSRect rect = new NSRect();", "+\t\trect.x = x;", "+\t\trect.y = y;", "+\t\trect.width = width;", "+\t\trect.height = height;", "+\t\tNSBezierPath path = NSBezierPath.bezierPathWithRect(rect);", "+\t\tpath.retain();", "+\t\tsetClipping(path);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "-\tif (height < 0) {", "-\t\ty = y + height;", "-\t\theight = -height;", "-\t}", "-\tNSRect rect = new NSRect();", "-\trect.x = x;", "-\trect.y = y;", "-\trect.width = width;", "-\trect.height = height;", "-\tNSBezierPath path = NSBezierPath.bezierPathWithRect(rect);", "-\tpath.retain();", "-\tsetClipping(path);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b566e8ec02775351730eac981251dc0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "ef782aa1d47f4cc453e1ff5e98420459bde2afbb", "commitAfterChange": "5a273c2ef1049cff7bd4d5ace6d67f7530a2ce69", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public GC(Drawable drawable, int style)", "signatureAfterChange": " public GC(Drawable drawable, int style)", "diff": ["-\tGCData data = new GCData();", "-\tdata.style = checkStyle(style);", "-\tint /*long*/ contextId = drawable.internal_new_GC(data);", "-\tDevice device = data.device;", "-\tif (device == null) device = Device.getDevice();", "-\tif (device == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "-\tthis.device = data.device = device;", "-\tinit(drawable, data, contextId);", "-\tinit();", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tGCData data = new GCData();", "+\t\tdata.style = checkStyle(style);", "+\t\tint /*long*/ contextId = drawable.internal_new_GC(data);", "+\t\tDevice device = data.device;", "+\t\tif (device == null) device = Device.getDevice();", "+\t\tif (device == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "+\t\tthis.device = data.device = device;", "+\t\tinit(drawable, data, contextId);", "+\t\tinit();", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4aff9b4c887348bfb37ccd49f190847d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public FontMetrics getLineMetrics (int lineIndex)", "signatureAfterChange": " public FontMetrics getLineMetrics (int lineIndex)", "diff": ["-\tcomputeRuns();", "-\tint lineCount = getLineCount();", "-\tif (!(0 <= lineIndex && lineIndex < lineCount)) SWT.error(SWT.ERROR_INVALID_RANGE);", "-\tint length = text.length();", "-\tif (length == 0) {", "-\t\tFont font = this.font != null ? this.font : device.systemFont;", "-\t\tNSFont nsFont = font.handle;", "-\t\tint ascent = (int)(0.5f + nsFont.ascender());", "-\t\tint descent = (int)(0.5f + (-nsFont.descender() + nsFont.leading()));\t", "-\t\tascent = Math.max(ascent, this.ascent);", "-\t\tdescent = Math.max(descent, this.descent);", "-\t\treturn FontMetrics.cocoa_new(ascent, descent, 0, 0, ascent + descent);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tcomputeRuns();", "+\t\tint lineCount = getLineCount();", "+\t\tif (!(0 <= lineIndex && lineIndex < lineCount)) SWT.error(SWT.ERROR_INVALID_RANGE);", "+\t\tint length = text.length();", "+\t\tif (length == 0) {", "+\t\t\tFont font = this.font != null ? this.font : device.systemFont;", "+\t\t\tNSFont nsFont = font.handle;", "+\t\t\tint ascent = (int)(0.5f + nsFont.ascender());", "+\t\t\tint descent = (int)(0.5f + (-nsFont.descender() + nsFont.leading()));\t", "+\t\t\tascent = Math.max(ascent, this.ascent);", "+\t\t\tdescent = Math.max(descent, this.descent);", "+\t\t\treturn FontMetrics.cocoa_new(ascent, descent, 0, 0, ascent + descent);", "+\t\t}", "+\t\tRectangle rect = getLineBounds(lineIndex);", "+\t\tint baseline = (int)layoutManager.typesetter().baselineOffsetInLayoutManager(layoutManager, getLineOffsets()[lineIndex]);", "+\t\treturn FontMetrics.cocoa_new(rect.height - baseline, baseline, 0, 0, rect.height);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "-\tRectangle rect = getLineBounds(lineIndex);", "-\tint baseline = (int)layoutManager.typesetter().baselineOffsetInLayoutManager(layoutManager, getLineOffsets()[lineIndex]);", "-\treturn FontMetrics.cocoa_new(rect.height - baseline, baseline, 0, 0, rect.height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a69ce233424d9542e64251b2a9a1e16", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public Rectangle getBounds(int start, int end)", "signatureAfterChange": " public Rectangle getBounds(int start, int end)", "diff": ["-\tcomputeRuns();", "-\tint length = text.length();", "-\tif (length == 0) return new Rectangle(0, 0, 0, 0);", "-\tif (start > end) return new Rectangle(0, 0, 0, 0);", "-\tstart = Math.min(Math.max(0, start), length - 1);", "-\tend = Math.min(Math.max(0, end), length - 1);", "-\tstart = translateOffset(start);", "-\tend = translateOffset(end);", "-\tNSRange range = new NSRange();", "-\trange.location = layoutManager.glyphIndexForCharacterAtIndex(start);", "-\trange.length = layoutManager.glyphIndexForCharacterAtIndex(end + 1) - range.location;", "-\tNSRect rect = layoutManager.boundingRectForGlyphRange(range, textContainer);", "-\treturn new Rectangle((int)rect.x, (int)rect.y, (int)Math.ceil(rect.width), (int)Math.ceil(rect.height));", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tcomputeRuns();", "+\t\tint length = text.length();", "+\t\tif (length == 0) return new Rectangle(0, 0, 0, 0);", "+\t\tif (start > end) return new Rectangle(0, 0, 0, 0);", "+\t\tstart = Math.min(Math.max(0, start), length - 1);", "+\t\tend = Math.min(Math.max(0, end), length - 1);", "+\t\tstart = translateOffset(start);", "+\t\tend = translateOffset(end);", "+\t\tNSRange range = new NSRange();", "+\t\trange.location = layoutManager.glyphIndexForCharacterAtIndex(start);", "+\t\trange.length = layoutManager.glyphIndexForCharacterAtIndex(end + 1) - range.location;", "+\t\tNSRect rect = layoutManager.boundingRectForGlyphRange(range, textContainer);", "+\t\treturn new Rectangle((int)rect.x, (int)rect.y, (int)Math.ceil(rect.width), (int)Math.ceil(rect.height));", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0349bff2b57488018e43afb7892b767e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public int[] getLineOffsets()", "signatureAfterChange": " public int[] getLineOffsets()", "diff": ["-\tcomputeRuns();", "-\tint[] offsets = new int[lineOffsets.length];", "-\tfor (int i = 0; i < offsets.length; i++) {", "-\t\toffsets[i] = untranslateOffset(lineOffsets[i]);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tcomputeRuns();", "+\t\tint[] offsets = new int[lineOffsets.length];", "+\t\tfor (int i = 0; i < offsets.length; i++) {", "+\t\t\toffsets[i] = untranslateOffset(lineOffsets[i]);", "+\t\t}", "+\t\treturn offsets;", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "-\treturn offsets;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c4e598c1be84a820144a4980f277b7d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public int getOffset(Point point, int[] trailing)", "signatureAfterChange": " public int getOffset(Point point, int[] trailing)", "diff": ["-\tcomputeRuns();", "-\tif (point == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "-\treturn getOffset(point.x, point.y, trailing);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tcomputeRuns();", "+\t\tif (point == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "+\t\treturn getOffset(point.x, point.y, trailing);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "604c5db3ab9a55d09c3dabfb7776bba7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Region.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public boolean isEmpty()", "signatureAfterChange": " public boolean isEmpty()", "diff": ["-\treturn OS.EmptyRgn(handle);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\treturn OS.EmptyRgn(handle);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9477e78697b48da31413c8bfc379928", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Path.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void lineTo(float x, float y)", "signatureAfterChange": " public void lineTo(float x, float y)", "diff": ["-\tNSPoint pt = new NSPoint();", "-\tpt.x = x;", "-\tpt.y = y;", "-\thandle.lineToPoint(pt);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tNSPoint pt = new NSPoint();", "+\t\tpt.x = x;", "+\t\tpt.y = y;", "+\t\thandle.lineToPoint(pt);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6599d62b5e97b045c93f23cb755eb4dd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Path.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public PathData getPathData()", "signatureAfterChange": " public PathData getPathData()", "diff": ["-\tint count = (int)/*64*/handle.elementCount();", "-\tint pointCount = 0, typeCount = 0;", "-\tbyte[] types = new byte[count];", "-\tfloat[] pointArray = new float[count * 6];", "-\tint /*long*/ points = OS.malloc(3 * NSPoint.sizeof);", "-\tif (points == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\tNSPoint pt = new NSPoint();", "-\tfor (int i = 0; i < count; i++) {", "-\t\tint element = (int)/*64*/handle.elementAtIndex(i, points);", "-\t\tswitch (element) {", "-\t\t\tcase OS.NSMoveToBezierPathElement:", "-\t\t\t\ttypes[typeCount++] = SWT.PATH_MOVE_TO;", "-\t\t\t\tOS.memmove(pt, points, NSPoint.sizeof);", "-\t\t\t\tpointArray[pointCount++] = (int)pt.x;", "-\t\t\t\tpointArray[pointCount++] = (int)pt.y;", "-\t\t\t\tbreak;", "-\t\t\tcase OS.NSLineToBezierPathElement:", "-\t\t\t\ttypes[typeCount++] = SWT.PATH_LINE_TO;", "-\t\t\t\tOS.memmove(pt, points, NSPoint.sizeof);", "-\t\t\t\tpointArray[pointCount++] = (int)pt.x;", "-\t\t\t\tpointArray[pointCount++] = (int)pt.y;", "-\t\t\t\tbreak;", "-\t\t\tcase OS.NSCurveToBezierPathElement:", "-\t\t\t\ttypes[typeCount++] = SWT.PATH_CUBIC_TO;", "-\t\t\t\tOS.memmove(pt, points, NSPoint.sizeof);", "-\t\t\t\tpointArray[pointCount++] = (int)pt.x;", "-\t\t\t\tpointArray[pointCount++] = (int)pt.y;", "-\t\t\t\tOS.memmove(pt, points + NSPoint.sizeof, NSPoint.sizeof);", "-\t\t\t\tpointArray[pointCount++] = (int)pt.x;", "-\t\t\t\tpointArray[pointCount++] = (int)pt.y;", "-\t\t\t\tOS.memmove(pt, points + NSPoint.sizeof + NSPoint.sizeof, NSPoint.sizeof);", "-\t\t\t\tpointArray[pointCount++] = (int)pt.x;", "-\t\t\t\tpointArray[pointCount++] = (int)pt.y;", "-\t\t\t\tbreak;", "-\t\t\tcase OS.NSClosePathBezierPathElement:", "-\t\t\t\ttypes[typeCount++] = SWT.PATH_CLOSE;", "-\t\t\t\tbreak;", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tint count = (int)/*64*/handle.elementCount();", "+\t\tint pointCount = 0, typeCount = 0;", "+\t\tbyte[] types = new byte[count];", "+\t\tfloat[] pointArray = new float[count * 6];", "+\t\tint /*long*/ points = OS.malloc(3 * NSPoint.sizeof);", "+\t\tif (points == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\tNSPoint pt = new NSPoint();", "+\t\tfor (int i = 0; i < count; i++) {", "+\t\t\tint element = (int)/*64*/handle.elementAtIndex(i, points);", "+\t\t\tswitch (element) {", "+\t\t\t\tcase OS.NSMoveToBezierPathElement:", "+\t\t\t\t\ttypes[typeCount++] = SWT.PATH_MOVE_TO;", "+\t\t\t\t\tOS.memmove(pt, points, NSPoint.sizeof);", "+\t\t\t\t\tpointArray[pointCount++] = (int)pt.x;", "+\t\t\t\t\tpointArray[pointCount++] = (int)pt.y;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase OS.NSLineToBezierPathElement:", "+\t\t\t\t\ttypes[typeCount++] = SWT.PATH_LINE_TO;", "+\t\t\t\t\tOS.memmove(pt, points, NSPoint.sizeof);", "+\t\t\t\t\tpointArray[pointCount++] = (int)pt.x;", "+\t\t\t\t\tpointArray[pointCount++] = (int)pt.y;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase OS.NSCurveToBezierPathElement:", "+\t\t\t\t\ttypes[typeCount++] = SWT.PATH_CUBIC_TO;", "+\t\t\t\t\tOS.memmove(pt, points, NSPoint.sizeof);", "+\t\t\t\t\tpointArray[pointCount++] = (int)pt.x;", "+\t\t\t\t\tpointArray[pointCount++] = (int)pt.y;", "+\t\t\t\t\tOS.memmove(pt, points + NSPoint.sizeof, NSPoint.sizeof);", "+\t\t\t\t\tpointArray[pointCount++] = (int)pt.x;", "+\t\t\t\t\tpointArray[pointCount++] = (int)pt.y;", "+\t\t\t\t\tOS.memmove(pt, points + NSPoint.sizeof + NSPoint.sizeof, NSPoint.sizeof);", "+\t\t\t\t\tpointArray[pointCount++] = (int)pt.x;", "+\t\t\t\t\tpointArray[pointCount++] = (int)pt.y;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase OS.NSClosePathBezierPathElement:", "+\t\t\t\t\ttypes[typeCount++] = SWT.PATH_CLOSE;", "+\t\t\t\t\tbreak;", "+\t\t\t}", "+\t\tOS.free(points);", "+\t\tif (pointCount != pointArray.length) {", "+\t\t\tfloat[] temp = new float[pointCount];", "+\t\t\tSystem.arraycopy(pointArray, 0, temp, 0, pointCount);", "+\t\t\tpointArray = temp;", "+\t\t}", "+\t\tPathData data = new PathData();", "+\t\tdata.types = types;", "+\t\tdata.points = pointArray;", "+\t\treturn data;", "+\t} finally {", "+\t\tif (pool != null)  pool.release();", "-\tOS.free(points);", "-\tif (pointCount != pointArray.length) {", "-\t\tfloat[] temp = new float[pointCount];", "-\t\tSystem.arraycopy(pointArray, 0, temp, 0, pointCount);", "-\t\tpointArray = temp;", "-\t}", "-\tPathData data = new PathData();", "-\tdata.types = types;", "-\tdata.points = pointArray;", "-\treturn data;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6159d40f094bb6ad83b5bfcdea012f6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public Image(Device device, InputStream stream)", "signatureAfterChange": " public Image(Device device, InputStream stream)", "diff": ["-\tinit(new ImageData(stream));", "-\tinit();", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tinit(new ImageData(stream));", "+\t\tinit();", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa5d75fd5e963060261b017c8a4de37a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Region.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t void add(int[] pointArray, int count)", "signatureAfterChange": " \t void add(int[] pointArray, int count)", "diff": ["-\tint /*long*/ polyRgn = polyRgn(pointArray, count);", "-\tOS.UnionRgn(handle, polyRgn, handle);", "-\tOS.DisposeRgn(polyRgn);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tint /*long*/ polyRgn = polyRgn(pointArray, count);", "+\t\tOS.UnionRgn(handle, polyRgn, handle);", "+\t\tOS.DisposeRgn(polyRgn);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cc39aae5065cef59f503f3a3c8dca82", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Transform.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public boolean isIdentity()", "signatureAfterChange": " public boolean isIdentity()", "diff": ["-\tNSAffineTransformStruct struct = handle.transformStruct();", "-\treturn struct.m11 == 1 && struct.m12 == 0 && struct.m21 == 0 && struct.m22 == 1 && struct.tX == 0 && struct.tY == 0;", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tNSAffineTransformStruct struct = handle.transformStruct();", "+\t\treturn struct.m11 == 1 && struct.m12 == 0 && struct.m21 == 0 && struct.m22 == 1 && struct.tX == 0 && struct.tY == 0;", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5868914f7a970185e97c4093b38a7ec", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public ImageData getImageData()", "signatureAfterChange": " public ImageData getImageData()", "diff": ["+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tNSSize size = handle.size();", "+\t\tint width = (int)size.width;", "+\t\tint height = (int)size.height;", "+\t\tNSBitmapImageRep imageRep = this.imageRep;", "+\t\tint /*long*/ bpr = imageRep.bytesPerRow();", "+\t\tint /*long*/ bpp = imageRep.bitsPerPixel();", "+\t\tint /*long*/ dataSize = height * bpr;", "+\t\tbyte[] srcData = new byte[(int)/*64*/dataSize];", "+\t\tOS.memmove(srcData, imageRep.bitmapData(), dataSize);", "-\tNSSize size = handle.size();", "-\tint width = (int)size.width;", "-\tint height = (int)size.height;", "-\tNSBitmapImageRep imageRep = this.imageRep;", "-\tint /*long*/ bpr = imageRep.bytesPerRow();", "-\tint /*long*/ bpp = imageRep.bitsPerPixel();", "-\tint /*long*/ dataSize = height * bpr;", "-\tbyte[] srcData = new byte[(int)/*64*/dataSize];", "-\tOS.memmove(srcData, imageRep.bitmapData(), dataSize);", "-\t", "-\tPaletteData palette = new PaletteData(0xFF0000, 0xFF00, 0xFF);", "-\tImageData data = new ImageData(width, height, (int)/*64*/bpp, palette, 4, srcData);", "-\tdata.bytesPerLine = (int)/*64*/bpr;", "+\t\tPaletteData palette = new PaletteData(0xFF0000, 0xFF00, 0xFF);", "+\t\tImageData data = new ImageData(width, height, (int)/*64*/bpp, palette, 4, srcData);", "+\t\tdata.bytesPerLine = (int)/*64*/bpr;", "-\tdata.transparentPixel = transparentPixel;", "-\tif (transparentPixel == -1 && type == SWT.ICON) {", "-\t\t/* Get the icon mask data */", "-\t\tint maskPad = 2;", "-\t\tint maskBpl = (((width + 7) / 8) + (maskPad - 1)) / maskPad * maskPad;", "-\t\tbyte[] maskData = new byte[height * maskBpl];", "-\t\tint offset = 0, maskOffset = 0;", "-\t\tfor (int y = 0; y<height; y++) {", "-\t\t\tfor (int x = 0; x<width; x++) {", "-\t\t\t\tif (srcData[offset] != 0) {", "-\t\t\t\t\tmaskData[maskOffset + (x >> 3)] |= (1 << (7 - (x & 0x7)));", "-\t\t\t\t} else {", "-\t\t\t\t\tmaskData[maskOffset + (x >> 3)] &= ~(1 << (7 - (x & 0x7)));", "+\t\tdata.transparentPixel = transparentPixel;", "+\t\tif (transparentPixel == -1 && type == SWT.ICON) {", "+\t\t\t/* Get the icon mask data */", "+\t\t\tint maskPad = 2;", "+\t\t\tint maskBpl = (((width + 7) / 8) + (maskPad - 1)) / maskPad * maskPad;", "+\t\t\tbyte[] maskData = new byte[height * maskBpl];", "+\t\t\tint offset = 0, maskOffset = 0;", "+\t\t\tfor (int y = 0; y<height; y++) {", "+\t\t\t\tfor (int x = 0; x<width; x++) {", "+\t\t\t\t\tif (srcData[offset] != 0) {", "+\t\t\t\t\t\tmaskData[maskOffset + (x >> 3)] |= (1 << (7 - (x & 0x7)));", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tmaskData[maskOffset + (x >> 3)] &= ~(1 << (7 - (x & 0x7)));", "+\t\t\t\t\t}", "+\t\t\t\t\toffset += 4;", "-\t\t\t\toffset += 4;", "+\t\t\t\tmaskOffset += maskBpl;", "-\t\t\tmaskOffset += maskBpl;", "+\t\t\tdata.maskData = maskData;", "+\t\t\tdata.maskPad = maskPad;", "-\t\tdata.maskData = maskData;", "-\t\tdata.maskPad = maskPad;", "+\t\tfor (int i = 0; i < srcData.length; i+= 4) {", "+\t\t\tsrcData[i] = 0;", "+\t\t}", "+\t\tdata.alpha = alpha;", "+\t\tif (alpha == -1 && alphaData != null) {", "+\t\t\tdata.alphaData = new byte[alphaData.length];", "+\t\t\tSystem.arraycopy(alphaData, 0, data.alphaData, 0, alphaData.length);", "+\t\t}", "+\t\treturn data;", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "-\tfor (int i = 0; i < srcData.length; i+= 4) {", "-\t\tsrcData[i] = 0;", "-\t}", "-\tdata.alpha = alpha;", "-\tif (alpha == -1 && alphaData != null) {", "-\t\tdata.alphaData = new byte[alphaData.length];", "-\t\tSystem.arraycopy(alphaData, 0, data.alphaData, 0, alphaData.length);", "-\t}", "-\treturn data;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cbad36be8021014f1ff4ac46f9935b1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Path.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void moveTo(float x, float y)", "signatureAfterChange": " public void moveTo(float x, float y)", "diff": ["-\tNSPoint pt = new NSPoint();", "-\tpt.x = x;", "-\tpt.y = y;", "-\thandle.moveToPoint(pt);", "-", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tNSPoint pt = new NSPoint();", "+\t\tpt.x = x;", "+\t\tpt.y = y;", "+\t\thandle.moveToPoint(pt);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc288fbe38ed82b5f67f14bd0a822b0e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Font.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public FontData[] getFontData()", "signatureAfterChange": " public FontData[] getFontData()", "diff": ["-\tNSString family = handle.familyName();", "-\tString name = family.getString();", "-\tNSString str = handle.fontName();", "-\tString nsName = str.getString();", "-\tint style = SWT.NORMAL;", "-\tif (nsName.indexOf(\"Italic\") != -1) style |= SWT.ITALIC;", "-\tif (nsName.indexOf(\"Bold\") != -1) style |= SWT.BOLD;", "-\tPoint dpi = device.dpi, screenDPI = device.getScreenDPI();", "-\tFontData data = new FontData(name, (float)/*64*/handle.pointSize() * screenDPI.y / dpi.y, style);", "-\tdata.nsName = nsName;", "-\treturn new FontData[]{data};", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tNSString family = handle.familyName();", "+\t\tString name = family.getString();", "+\t\tNSString str = handle.fontName();", "+\t\tString nsName = str.getString();", "+\t\tint style = SWT.NORMAL;", "+\t\tif (nsName.indexOf(\"Italic\") != -1) style |= SWT.ITALIC;", "+\t\tif (nsName.indexOf(\"Bold\") != -1) style |= SWT.BOLD;", "+\t\tPoint dpi = device.dpi, screenDPI = device.getScreenDPI();", "+\t\tFontData data = new FontData(name, (float)/*64*/handle.pointSize() * screenDPI.y / dpi.y, style);", "+\t\tdata.nsName = nsName;", "+\t\treturn new FontData[]{data};", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40096a65084cd64205df9ee8ef270d07", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Transform.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void rotate(float angle)", "signatureAfterChange": " public void rotate(float angle)", "diff": ["-\thandle.rotateByDegrees(angle);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\thandle.rotateByDegrees(angle);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3690ac2dad8232b026c22a1560faa5b7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Path.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public Path (Device device, PathData data)", "signatureAfterChange": " public Path (Device device, PathData data)", "diff": ["-\tif (data == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "-\tinit(data);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tif (data == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "+\t\tinit(data);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "151c0ce2c9636bcfbc7e6195d8b897fc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public Image(Device device, String filename)", "signatureAfterChange": " public Image(Device device, String filename)", "diff": ["-\tinit(new ImageData(filename));", "-\tinit();", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tinit(new ImageData(filename));", "+\t\tinit();", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68be824cde32e96ff599ea4c06dfeca5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "ef782aa1d47f4cc453e1ff5e98420459bde2afbb", "commitAfterChange": "5a273c2ef1049cff7bd4d5ace6d67f7530a2ce69", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " public Rectangle getClipping()", "signatureAfterChange": " public Rectangle getClipping()", "diff": ["-\tNSRect rect = null;", "-\tif (data.view != null) {", "-\t\trect = data.view.visibleRect();", "-\t} else {", "-\t\trect = new NSRect();", "-\t\tif (data.image != null) {", "-\t\t\tNSSize size = data.image.handle.size();", "-\t\t\trect.width = size.width;", "-\t\t\trect.height = size.height;", "-\t\t} else if (data.size != null) {", "-\t\t\trect.width = data.size.width;", "-\t\t\trect.height = data.size.height;", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tNSRect rect = null;", "+\t\tif (data.view != null) {", "+\t\t\trect = data.view.visibleRect();", "+\t\t} else {", "+\t\t\trect = new NSRect();", "+\t\t\tif (data.image != null) {", "+\t\t\t\tNSSize size = data.image.handle.size();", "+\t\t\t\trect.width = size.width;", "+\t\t\t\trect.height = size.height;", "+\t\t\t} else if (data.size != null) {", "+\t\t\t\trect.width = data.size.width;", "+\t\t\t\trect.height = data.size.height;", "+\t\t\t}", "+\t\tif (data.paintRect != null || data.clipPath != null || data.inverseTransform != null) {", "+\t\t\tif (data.paintRect != null) {", "+\t\t\t\tOS.NSIntersectionRect(rect, rect, data.paintRect);", "+\t\t\t}", "+\t\t\tif (data.clipPath != null) {", "+\t\t\t\tNSRect clip = data.clipPath.bounds();", "+\t\t\t\tOS.NSIntersectionRect(rect, rect, clip);", "+\t\t\t}", "+\t\t\tif (data.inverseTransform != null && rect.width > 0 && rect.height > 0) {", "+\t\t\t\tNSPoint pt = new NSPoint();", "+\t\t\t\tpt.x = rect.x;", "+\t\t\t\tpt.y = rect.y;", "+\t\t\t\tNSSize size = new NSSize();", "+\t\t\t\tsize.width = rect.width;", "+\t\t\t\tsize.height = rect.height;", "+\t\t\t\tpt = data.inverseTransform.transformPoint(pt);", "+\t\t\t\tsize =  data.inverseTransform.transformSize(size);", "+\t\t\t\trect.x = pt.x;", "+\t\t\t\trect.y = pt.y;", "+\t\t\t\trect.width = size.width;", "+\t\t\t\trect.height = size.height;", "+\t\t\t}", "+\t\t}", "+\t\treturn new Rectangle((int)rect.x, (int)rect.y, (int)rect.width, (int)rect.height);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "-\tif (data.paintRect != null || data.clipPath != null || data.inverseTransform != null) {", "-\t\tif (data.paintRect != null) {", "-\t\t\tOS.NSIntersectionRect(rect, rect, data.paintRect);", "-\t\t}", "-\t\tif (data.clipPath != null) {", "-\t\t\tNSRect clip = data.clipPath.bounds();", "-\t\t\tOS.NSIntersectionRect(rect, rect, clip);", "-\t\t}", "-\t\tif (data.inverseTransform != null && rect.width > 0 && rect.height > 0) {", "-\t\t\tNSPoint pt = new NSPoint();", "-\t\t\tpt.x = rect.x;", "-\t\t\tpt.y = rect.y;", "-\t\t\tNSSize size = new NSSize();", "-\t\t\tsize.width = rect.width;", "-\t\t\tsize.height = rect.height;", "-\t\t\tpt = data.inverseTransform.transformPoint(pt);", "-\t\t\tsize =  data.inverseTransform.transformSize(size);", "-\t\t\trect.x = pt.x;", "-\t\t\trect.y = pt.y;", "-\t\t\trect.width = size.width;", "-\t\t\trect.height = size.height;", "-\t\t}", "-\t}", "-\treturn new Rectangle((int)rect.x, (int)rect.y, (int)rect.width, (int)rect.height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a56f93d394d987262971bfff542c746", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void createAlpha ()", "signatureAfterChange": "  void createAlpha ()", "diff": ["-\tNSSize size = handle.size();", "-\tint height = (int)size.height;", "-\tint /*long*/ bpr = imageRep.bytesPerRow();", "-\tint /*long*/ dataSize = height * bpr;", "-\tbyte[] srcData = new byte[(int)/*64*/dataSize];", "-\tOS.memmove(srcData, imageRep.bitmapData(), dataSize);", "-\tif (transparentPixel != -1) {", "-\t\tfor (int i=0; i<dataSize; i+=4) {", "-\t\t\tint pixel = ((srcData[i+1] & 0xFF) << 16) | ((srcData[i+2] & 0xFF) << 8) | (srcData[i+3] & 0xFF);", "-\t\t\tsrcData[i] = (byte)(pixel == transparentPixel ? 0 : 0xFF); ", "-\t\t}", "-\t} else if (alpha != -1) {", "-\t\tbyte a = (byte)this.alpha;", "-\t\tfor (int i=0; i<dataSize; i+=4) {", "-\t\t\tsrcData[i] = a;\t\t\t\t", "-\t\t}", "-\t} else {", "-\t\tint width = (int)size.width;", "-\t\tint offset = 0, alphaOffset = 0;", "-\t\tfor (int y = 0; y<height; y++) {", "-\t\t\tfor (int x = 0; x<width; x++) {", "-\t\t\t\tsrcData[offset] = alphaData[alphaOffset];", "-\t\t\t\toffset += 4;", "-\t\t\t\talphaOffset += 1;", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tNSSize size = handle.size();", "+\t\tint height = (int)size.height;", "+\t\tint /*long*/ bpr = imageRep.bytesPerRow();", "+\t\tint /*long*/ dataSize = height * bpr;", "+\t\tbyte[] srcData = new byte[(int)/*64*/dataSize];", "+\t\tOS.memmove(srcData, imageRep.bitmapData(), dataSize);", "+\t\tif (transparentPixel != -1) {", "+\t\t\tfor (int i=0; i<dataSize; i+=4) {", "+\t\t\t\tint pixel = ((srcData[i+1] & 0xFF) << 16) | ((srcData[i+2] & 0xFF) << 8) | (srcData[i+3] & 0xFF);", "+\t\t\t\tsrcData[i] = (byte)(pixel == transparentPixel ? 0 : 0xFF); ", "+\t\t\t}", "+\t\t} else if (alpha != -1) {", "+\t\t\tbyte a = (byte)this.alpha;", "+\t\t\tfor (int i=0; i<dataSize; i+=4) {", "+\t\t\t\tsrcData[i] = a;\t\t\t\t", "+\t\t\t}", "+\t\t} else {", "+\t\t\tint width = (int)size.width;", "+\t\t\tint offset = 0, alphaOffset = 0;", "+\t\t\tfor (int y = 0; y<height; y++) {", "+\t\t\t\tfor (int x = 0; x<width; x++) {", "+\t\t\t\t\tsrcData[offset] = alphaData[alphaOffset];", "+\t\t\t\t\toffset += 4;", "+\t\t\t\t\talphaOffset += 1;", "+\t\t\t\t}", "+\t\tOS.memmove(imageRep.bitmapData(), srcData, dataSize);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "-\tOS.memmove(imageRep.bitmapData(), srcData, dataSize);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcdcc37e273515a04b0411be873095b5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public int getLineIndex(int offset)", "signatureAfterChange": " public int getLineIndex(int offset)", "diff": ["-\tcomputeRuns();", "-\tint length = text.length();", "-\tif (!(0 <= offset && offset <= length)) SWT.error(SWT.ERROR_INVALID_RANGE);", "-\toffset = translateOffset(offset);", "-\tfor (int line=0; line<lineOffsets.length - 1; line++) {", "-\t\tif (lineOffsets[line + 1] > offset) {", "-\t\t\treturn line;", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tcomputeRuns();", "+\t\tint length = text.length();", "+\t\tif (!(0 <= offset && offset <= length)) SWT.error(SWT.ERROR_INVALID_RANGE);", "+\t\toffset = translateOffset(offset);", "+\t\tfor (int line=0; line<lineOffsets.length - 1; line++) {", "+\t\t\tif (lineOffsets[line + 1] > offset) {", "+\t\t\t\treturn line;", "+\t\t\t}", "+\t\treturn lineBounds.length - 1;", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "-\treturn lineBounds.length - 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd64fa5165e85c4dee288b785c8e7d92", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Cursor.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public Cursor(Device device, int style)", "signatureAfterChange": " public Cursor(Device device, int style)", "diff": ["-\tswitch (style) {", "-\t\tcase SWT.CURSOR_HAND: \t\t\thandle = NSCursor.pointingHandCursor(); break;", "-\t\tcase SWT.CURSOR_ARROW: \t\t\thandle = NSCursor.arrowCursor(); break;", "-\t\tcase SWT.CURSOR_WAIT: \t\t\thandle = NSCursor.arrowCursor(); break;", "-\t\tcase SWT.CURSOR_CROSS:\t \t\thandle = NSCursor.crosshairCursor(); break;", "-\t\tcase SWT.CURSOR_APPSTARTING: \thandle = NSCursor.arrowCursor(); break;", "-\t\tcase SWT.CURSOR_HELP: \t\t\thandle = NSCursor.crosshairCursor(); break;", "-\t\tcase SWT.CURSOR_SIZEALL: \t\thandle = NSCursor.crosshairCursor(); break;", "-\t\tcase SWT.CURSOR_SIZENESW: \t\thandle = NSCursor.crosshairCursor(); break;", "-\t\tcase SWT.CURSOR_SIZENS:\t\t\thandle = NSCursor.resizeUpDownCursor(); break;", "-\t\tcase SWT.CURSOR_SIZENWSE: \t\thandle = NSCursor.crosshairCursor(); break;", "-\t\tcase SWT.CURSOR_SIZEWE: \t\thandle = NSCursor.resizeLeftRightCursor(); break;", "-\t\tcase SWT.CURSOR_SIZEN: \t\t\thandle = NSCursor.resizeUpCursor(); break;", "-\t\tcase SWT.CURSOR_SIZES: \t\t\thandle = NSCursor.resizeDownCursor(); break;", "-\t\tcase SWT.CURSOR_SIZEE: \t\t\thandle = NSCursor.resizeRightCursor(); break;", "-\t\tcase SWT.CURSOR_SIZEW: \t\t\thandle = NSCursor.resizeLeftCursor(); break;", "-\t\tcase SWT.CURSOR_SIZENE: \t\thandle = NSCursor.crosshairCursor(); break;", "-\t\tcase SWT.CURSOR_SIZESE: \t\thandle = NSCursor.crosshairCursor(); break;", "-\t\tcase SWT.CURSOR_SIZESW: \t\thandle = NSCursor.crosshairCursor(); break;", "-\t\tcase SWT.CURSOR_SIZENW: \t\thandle = NSCursor.crosshairCursor(); break;", "-\t\tcase SWT.CURSOR_UPARROW: \t\thandle = NSCursor.crosshairCursor(); break;", "-\t\tcase SWT.CURSOR_IBEAM: \t\t\thandle = NSCursor.IBeamCursor(); break;", "-\t\tcase SWT.CURSOR_NO: \t\t\thandle = NSCursor.crosshairCursor(); break;", "-\t\tdefault:", "-\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tswitch (style) {", "+\t\t\tcase SWT.CURSOR_HAND: \t\t\thandle = NSCursor.pointingHandCursor(); break;", "+\t\t\tcase SWT.CURSOR_ARROW: \t\t\thandle = NSCursor.arrowCursor(); break;", "+\t\t\tcase SWT.CURSOR_WAIT: \t\t\thandle = NSCursor.arrowCursor(); break;", "+\t\t\tcase SWT.CURSOR_CROSS:\t \t\thandle = NSCursor.crosshairCursor(); break;", "+\t\t\tcase SWT.CURSOR_APPSTARTING: \thandle = NSCursor.arrowCursor(); break;", "+\t\t\tcase SWT.CURSOR_HELP: \t\t\thandle = NSCursor.crosshairCursor(); break;", "+\t\t\tcase SWT.CURSOR_SIZEALL: \t\thandle = NSCursor.crosshairCursor(); break;", "+\t\t\tcase SWT.CURSOR_SIZENESW: \t\thandle = NSCursor.crosshairCursor(); break;", "+\t\t\tcase SWT.CURSOR_SIZENS:\t\t\thandle = NSCursor.resizeUpDownCursor(); break;", "+\t\t\tcase SWT.CURSOR_SIZENWSE: \t\thandle = NSCursor.crosshairCursor(); break;", "+\t\t\tcase SWT.CURSOR_SIZEWE: \t\thandle = NSCursor.resizeLeftRightCursor(); break;", "+\t\t\tcase SWT.CURSOR_SIZEN: \t\t\thandle = NSCursor.resizeUpCursor(); break;", "+\t\t\tcase SWT.CURSOR_SIZES: \t\t\thandle = NSCursor.resizeDownCursor(); break;", "+\t\t\tcase SWT.CURSOR_SIZEE: \t\t\thandle = NSCursor.resizeRightCursor(); break;", "+\t\t\tcase SWT.CURSOR_SIZEW: \t\t\thandle = NSCursor.resizeLeftCursor(); break;", "+\t\t\tcase SWT.CURSOR_SIZENE: \t\thandle = NSCursor.crosshairCursor(); break;", "+\t\t\tcase SWT.CURSOR_SIZESE: \t\thandle = NSCursor.crosshairCursor(); break;", "+\t\t\tcase SWT.CURSOR_SIZESW: \t\thandle = NSCursor.crosshairCursor(); break;", "+\t\t\tcase SWT.CURSOR_SIZENW: \t\thandle = NSCursor.crosshairCursor(); break;", "+\t\t\tcase SWT.CURSOR_UPARROW: \t\thandle = NSCursor.crosshairCursor(); break;", "+\t\t\tcase SWT.CURSOR_IBEAM: \t\t\thandle = NSCursor.IBeamCursor(); break;", "+\t\t\tcase SWT.CURSOR_NO: \t\t\thandle = NSCursor.crosshairCursor(); break;", "+\t\t\tdefault:", "+\t\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\t\t}", "+\t\thandle.retain();", "+\t\thandle.setOnMouseEntered(true);", "+\t\tinit();", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "-\thandle.retain();", "-\thandle.setOnMouseEntered(true);", "-\tinit();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "647cbd337b0b472dd03a57368f1b57b4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public int getLevel(int offset)", "signatureAfterChange": " public int getLevel(int offset)", "diff": ["-\tcomputeRuns();", "-\tint length = text.length();", "-\tif (!(0 <= offset && offset <= length)) SWT.error(SWT.ERROR_INVALID_RANGE);", "-\toffset = translateOffset(offset);\t", "-\tint level = 0;", "-\t//TODO", "-\treturn level;", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tcomputeRuns();", "+\t\tint length = text.length();", "+\t\tif (!(0 <= offset && offset <= length)) SWT.error(SWT.ERROR_INVALID_RANGE);", "+\t\toffset = translateOffset(offset);\t", "+\t\tint level = 0;", "+\t\t//TODO", "+\t\treturn level;", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a96f427921be94e1f10add595397eae8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Path.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public Path (Device device, Path path, float flatness)", "signatureAfterChange": " public Path (Device device, Path path, float flatness)", "diff": ["-\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "-\tif (path.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "-\tflatness = Math.max(0, flatness);", "-\tif (flatness == 0) {", "-\t\thandle = new NSBezierPath(path.handle.copy().id);", "-\t} else {", "-\t\tfloat /*double*/ defaultFlatness = NSBezierPath.defaultFlatness();", "-\t\tNSBezierPath.setDefaultFlatness(flatness);", "-\t\thandle = path.handle.bezierPathByFlatteningPath();", "-\t\tNSBezierPath.setDefaultFlatness(defaultFlatness);\t\t", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "+\t\tif (path.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\t\tflatness = Math.max(0, flatness);", "+\t\tif (flatness == 0) {", "+\t\t\thandle = new NSBezierPath(path.handle.copy().id);", "+\t\t} else {", "+\t\t\tfloat /*double*/ defaultFlatness = NSBezierPath.defaultFlatness();", "+\t\t\tNSBezierPath.setDefaultFlatness(flatness);", "+\t\t\thandle = path.handle.bezierPathByFlatteningPath();", "+\t\t\tNSBezierPath.setDefaultFlatness(defaultFlatness);\t\t", "+\t\t}", "+\t\tif (handle == null) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\tinit();", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "-\tif (handle == null) SWT.error(SWT.ERROR_NO_HANDLES);", "-\tinit();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1070197a1eae4e708a461574b3ea15ed", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Font.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Font(Device device, String name, int height, int style)", "signatureAfterChange": " public Font(Device device, String name, int height, int style)", "diff": ["-\tinit(name, height, style, null);", "-\tinit();", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tinit(name, height, style, null);", "+\t\tinit();", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afa792dde004456c56122ce64098f8e5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Transform.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void setElements(float m11, float m12, float m21, float m22, float dx, float dy)", "signatureAfterChange": " public void setElements(float m11, float m12, float m21, float m22, float dx, float dy)", "diff": ["-\tNSAffineTransformStruct struct = new NSAffineTransformStruct();", "-\tstruct.m11 = m11;", "-\tstruct.m12 = m12;", "-\tstruct.m21 = m21;", "-\tstruct.m22 = m22;", "-\tstruct.tX = dx;", "-\tstruct.tY = dy;", "-\thandle.setTransformStruct(struct);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tNSAffineTransformStruct struct = new NSAffineTransformStruct();", "+\t\tstruct.m11 = m11;", "+\t\tstruct.m12 = m12;", "+\t\tstruct.m21 = m21;", "+\t\tstruct.m22 = m22;", "+\t\tstruct.tX = dx;", "+\t\tstruct.tY = dy;", "+\t\thandle.setTransformStruct(struct);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "778433ac2a6be122e1c7ae70a015615b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public int getLineCount()", "signatureAfterChange": " public int getLineCount()", "diff": ["-\tcomputeRuns();\t", "-\treturn lineOffsets.length - 1;", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tcomputeRuns();\t", "+\t\treturn lineOffsets.length - 1;", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}], "num": 23825}