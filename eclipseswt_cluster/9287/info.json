{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "08607b3fad0fd6a5cf6e49f4eba4ed72", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01b1a15ffb6133601c99fb702e43e86c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "635a9e5d0a5f495ec272194dbb750eddc745876f", "commitAfterChange": "e83d77b7ddccf5500d06ea30a64ce0d090ac4b10", "methodNumberBeforeChange": 440, "methodNumberAfterChange": 307, "signatureBeforeChange": " void updateSelection(int startOffset, int replacedLength, int newLength)", "signatureAfterChange": " void updateSelection(int startOffset, int replacedLength, int newLength)", "diff": ["-\t\tinternalRedrawRange(selection.x, startOffset - selection.x, true);", "+\t\tinternalRedrawRange(selection.x, startOffset - selection.x);", "-\t\tinternalRedrawRange(redrawStart, selection.y + netNewLength - redrawStart, true);", "+\t\tinternalRedrawRange(redrawStart, selection.y + netNewLength - redrawStart);", "-\t\tinternalSetSelection(startOffset + newLength, 0, true);", "-\t\t// always update the caret location. fixes 1G8FODP", "-\t\tsetCaretLocation();", "-\t}", "-\telse {", "+\t\tsetSelection(startOffset + newLength, 0, true);", "+\t} else {", "-\t\tinternalSetSelection(selection.x + newLength - replacedLength, selection.y - selection.x, true);", "-\t\t// always update the caret location. fixes 1G8FODP", "-\t\tsetCaretLocation();", "-\t}\t", "-}", "+\t\tsetSelection(selection.x + newLength - replacedLength, selection.y - selection.x, true);", "+\tsetCaretLocation();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fc94eb1e4364101bfaeca8d79156bc0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "0a6811e80079fc0387e0cc87279a001c95b12743", "commitAfterChange": "def0218c22c8740186dfa86c4d354b293854c64b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void create(Composite parent, int style)", "signatureAfterChange": "  public void create(Composite parent, int style)", "diff": ["-\tmouseListener = new OleListener() {", "+\tdomListener = new OleListener() {", "-\t\t\thandleMouseEvent(e);", "+\t\t\thandleDOMEvent(e);", "-\t\t\t\t\t* so check for this before unhooking its mouse listeners.", "+\t\t\t\t\t* so check for this before unhooking its DOM listeners.", "-\t\t\t\t\tif (!frame.isDisposed ()) unhookMouseListeners(documents);", "+\t\t\t\t\tif (!frame.isDisposed ()) unhookDOMListeners(documents);", "-\t\t\t\t\tmouseListener = null;", "+\t\t\t\t\tdomListener = null;", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t\tcase SWT.KeyDown:", "-\t\t\t\tcase SWT.KeyUp: {", "-\t\t\t\t\tbrowser.notifyListeners(e.type, e);", "-\tsite.addListener(SWT.KeyDown, listener);", "-\tsite.addListener(SWT.KeyUp, listener);", "-\t\t\t\t\t\t\t\t/* unhook mouse listeners and unref the last document(s) */", "-\t\t\t\t\t\t\t\tunhookMouseListeners(documents);", "+\t\t\t\t\t\t\t\t/* unhook DOM listeners and unref the last document(s) */", "+\t\t\t\t\t\t\t\tunhookDOMListeners(documents);", "-\t\t\t\t\t\thookMouseListeners(webBrowser, isTop);", "+\t\t\t\t\t\thookDOMListeners(webBrowser, isTop);"]}], "num": 9287}