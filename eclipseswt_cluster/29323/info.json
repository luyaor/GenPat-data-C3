{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c066e4af462c16b2bc0ff03220d8f34d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adf383f0906eb1bc0bc5748fb61f4928", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "395eab8c58579be74c16a457d46d4dc575018141", "commitAfterChange": "e499c5210d4a27e6b55dd387daa5ebfb658b1bc0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["-\tDisplay display = parent.getDisplay ();", "+\tfinal Display display = parent.getDisplay ();", "-\t\t\t\t\tXPCOM.XPCOMGlueShutdown ();", "+\t\t\t\t\t/*", "+\t\t\t\t\t* XULRunner 1.9 can crash on Windows if XPCOMGlueShutdown is invoked here,", "+\t\t\t\t\t* presumably because one or more of its unloaded symbols are referenced when", "+\t\t\t\t\t* this callback returns.  The workaround is to delay invoking XPCOMGlueShutdown", "+\t\t\t\t\t* so that its symbols are still available once this callback returns.", "+\t\t\t\t\t*/", "+\t\t\t\t\tdisplay.asyncExec (new Runnable () {", "+\t\t\t\t\t\tpublic void run () {", "+\t\t\t\t\t\t\tXPCOM.XPCOMGlueShutdown ();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97dc7830766618c2a724fdabbd194068", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "360dd20c4bfdba6bc8c1d8560f6c4e4e98ff4d89", "commitAfterChange": "d9052f51780320105a9c8c51ba549b58b0882604", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["-\t\t\t\t\trc = prefService.SavePrefFile(prefFile.getAddress ());", "+\t\t\t\t\trc = prefService.SavePrefFile (prefFile.getAddress ());", "-\t\t\t\t\t* XULRunner 1.9 can crash on Windows if XPCOMGlueShutdown is invoked here,", "-\t\t\t\t\t* presumably because one or more of its unloaded symbols are referenced when", "-\t\t\t\t\t* this callback returns.  The workaround is to delay invoking XPCOMGlueShutdown", "-\t\t\t\t\t* so that its symbols are still available once this callback returns.", "+\t\t\t\t\t* The following is intentionally commented because it causes subsequent", "+\t\t\t\t\t* browser instantiations within the process to fail.  Mozilla does not", "+\t\t\t\t\t* support being unloaded and then re-initialized in a process, see", "+\t\t\t\t\t* http://www.mail-archive.com/dev-embedding@lists.mozilla.org/msg01732.html . ", "-\t\t\t\t\tdisplay.asyncExec (new Runnable () {", "-\t\t\t\t\t\tpublic void run () {", "-\t\t\t\t\t\t\tXPCOM.XPCOMGlueShutdown ();", "-\t\t\t\t\t\t}", "-\t\t\t\t\t});", "-", "-\t\t\t\t\t// the following is intentionally commented, because calling XRE_TermEmbedding", "-\t\t\t\t\t// causes subsequent browser instantiations within the process to fail", "+//\t\t\t\t\tXPCOM.XPCOMGlueShutdown ();"]}], "num": 29323}