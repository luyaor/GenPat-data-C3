{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e40443b2407439d1e76a3d42ab148c7f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c55ff7b936a708119cccbc9ebba059a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabItem.java", "commitBeforeChange": "4a41229267d8ec39ffddb937135f7f228c3d90ec", "commitAfterChange": "a3f5ef23bb9a2d806a5c1b1bcf9eba42e3d5e4ca", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r int preferredWidth(GC gc)", "signatureAfterChange": "\r int preferredWidth(GC gc)", "diff": ["-\tint tabWidth = LEFT_MARGIN + RIGHT_MARGIN;\r", "+\tint width = 0;\r", "-\tif (image != null) tabWidth += imageWidth() + INTERNAL_SPACING;\r", "-\ttabWidth += textWidth(gc);\r", "-\tif (parent.showClose) tabWidth += parent.closeBar.getSize().x;\r", "-\treturn tabWidth;\r", "+\tif (image != null) width += image.getBounds().width;\r", "+\tString text = getText();\r", "+\tif (text != null) {\r", "+\t\tif (image != null) width += INTERNAL_SPACING;\r", "+\t\twidth += gc.textExtent(text, SWT.DRAW_MNEMONIC).x;\r", "+\t}\r", "+\tif (parent.showClose) width += INTERNAL_SPACING + preferredHeight(gc); // closebar will be square and will fill preferred height\r", "+\treturn width + LEFT_MARGIN + RIGHT_MARGIN;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7803d0fea43ae819fa5697b6a7dff7a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": " Rectangle getBounds()", "signatureAfterChange": " int getContentWidth (GC gc, boolean useDisplayText)", "diff": ["- */", "-Rectangle getBounds() {", "-\treturn new Rectangle(bounds.x, bounds.y, bounds.width, bounds.height);\t// copy the object to prevent changes", "+int getContentWidth (GC gc, boolean useDisplayText) {", "+\tint contentWidth = 0;", "+\tString text = useDisplayText ? displayText : this.text;", "+\tif (text.length () > 0) {", "+\t\tcontentWidth += gc.textExtent (text, SWT.DRAW_MNEMONIC).x;", "+\t}", "+\tif (image != null) {", "+\t\tcontentWidth += image.getBounds ().width;", "+\t\tif (text.length () > 0) contentWidth += Table.MARGIN_IMAGE;", "+\t}", "+\treturn contentWidth;"]}], "num": 44761}