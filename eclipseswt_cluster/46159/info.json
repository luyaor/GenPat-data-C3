{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c848b5b0b53bb6ecbaaf5682ee4bbc3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab6bb9ee179662e09d7b3f7e4b466845", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "ad7faf2331d33c7f68735fad69a11baef3deb362", "commitAfterChange": "169f4f3eed024153ecdf584bb52e3a3a80efd99a", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 22, "signatureBeforeChange": "  int kEventControlDraw (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  void drawWidget (int control, int damageRgn, int visibleRgn, int theEvent)", "diff": ["+void drawWidget (int control, int damageRgn, int visibleRgn, int theEvent) {", "+\tif (control != handle) return;", "+\tif (!hooks (SWT.Paint) && !filters (SWT.Paint)) return;", "+", "+\t/* Retrieve the damage rect */", "+\tRect rect = new Rect ();", "+\tOS.GetRegionBounds (visibleRgn, rect);", "+\tRect bounds = new Rect ();", "+\tOS.GetControlBounds (handle, bounds);", "+\tOS.OffsetRect (rect, (short) -bounds.left, (short) -bounds.top);", "+", "+\t/* Send paint event */", "+\tGCData data = new GCData ();", "+\tdata.paintEvent = theEvent;", "+\tdata.visibleRgn = visibleRgn;", "+\tGC gc = GC.carbon_new (this, data);", "+\tEvent event = new Event ();", "+\tevent.gc = gc;", "+\tevent.x = rect.left;", "+\tevent.y = rect.top;", "+\tevent.width = rect.right - rect.left;", "+\tevent.height = rect.bottom - rect.top;", "+\tsendEvent (SWT.Paint, event);", "+\tevent.gc = null;", "+\tgc.dispose ();", "+}", "-", "-int kEventControlDraw (int nextHandler, int theEvent, int userData) {", "-\tint result = super.kEventControlDraw (nextHandler, theEvent, userData);", "-\tif (result == -1) return result;", "-\tint [] theControl = new int [1];", "-\tOS.GetEventParameter (theEvent, OS.kEventParamDirectObject, OS.typeControlRef, null, 4, null, theControl);", "-\tif (theControl [0] != handle) return result;", "-\tif (!hooks (SWT.Paint) && !filters (SWT.Paint)) return result;", "-", "-\t/* Retrieve the damage region */", "-\tint [] region = new int [1];\t", "-\tOS.GetEventParameter (theEvent, OS.kEventParamRgnHandle, OS.typeQDRgnHandle, null, 4, null, region);", "-\tRect bounds = new Rect ();", "-\tOS.GetRegionBounds (region [0], bounds);", "-\tRect rect = new Rect ();", "-\tOS.GetControlBounds (handle, rect);", "-\tif (!OS.SectRect (rect, bounds, bounds)) return result;", "-\tOS.OffsetRect (bounds, (short) -rect.left, (short) -rect.top);", "-", "-\tGCData data = new GCData ();", "-\tdata.paintEvent = theEvent;", "-\tGC gc = GC.carbon_new (this, data);", "-\t", "-\t/* Send the paint event */", "-\tEvent event = new Event ();", "-\tevent.gc = gc;", "-\tevent.x = bounds.left;", "-\tevent.y = bounds.top;", "-\tevent.width = bounds.right - bounds.left;", "-\tevent.height = bounds.bottom - bounds.top;", "-//\tgc.setClipping (Region.carbon_new (region [0]));", "-\tsendEvent (SWT.Paint, event);", "-\tevent.gc = null;", "-\tgc.dispose ();", "-", "-\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68f628b7420e4b38ae4fd70f82294cc8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 55, "signatureBeforeChange": " int processKeyDown (Object callData)", "signatureAfterChange": "  int kEventControlDraw (int nextHandler, int theEvent, int userData)", "diff": ["-}", "-int processKeyDown (Object callData) {", "-\tMacEvent macEvent = (MacEvent) callData;", "-\tif (translateTraversal (macEvent))", "-\t\treturn OS.kNoErr;", "-\t// widget could be disposed at this point", "-\tif (isDisposed ()) return 0;", "-\treturn sendKeyEvent (SWT.KeyDown, macEvent);", "-}", "+", "+int kEventControlDraw (int nextHandler, int theEvent, int userData) {", "+\tint result = super.kEventControlDraw (nextHandler, theEvent, userData);", "+\tint [] theControl = new int [1];", "+\tOS.GetEventParameter (theEvent, OS.kEventParamDirectObject, OS.typeControlRef, null, 4, null, theControl);", "+\tif (theControl [0] != handle) return result;", "+\tif (!hooks (SWT.Paint) && !filters (SWT.Paint)) return result;", "+", "+\t/* Retrieve the damage region */", "+\tint [] region = new int [1];\t", "+\tOS.GetEventParameter (theEvent, OS.kEventParamRgnHandle, OS.typeQDRgnHandle, null, 4, null, region);", "+\tRect bounds = new Rect ();", "+\tOS.GetRegionBounds (region [0], bounds);", "+\tRect rect = new Rect ();", "+\tOS.GetControlBounds (handle, rect);", "+\tif (!OS.SectRect (rect, bounds, bounds)) return result;", "+\tOS.OffsetRect (bounds, (short) -rect.left, (short) -rect.top);", "+", "+\tGCData data = new GCData ();", "+\tdata.paintEvent = theEvent;", "+\tGC gc = GC.carbon_new (this, data);", "+\t", "+\t/* Send the paint event */", "+\tEvent event = new Event ();", "+\tevent.gc = gc;", "+\tevent.x = bounds.left;", "+\tevent.y = bounds.top;", "+\tevent.width = bounds.right - bounds.left;", "+\tevent.height = bounds.bottom - bounds.top;", "+//\tgc.setClipping (Region.carbon_new (region [0]));", "+\tsendEvent (SWT.Paint, event);", "+\tevent.gc = null;", "+\tgc.dispose ();", "+", "+\treturn result;", "+}"]}], "num": 46159}