{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4dae5bffd47e98d6b5808e2c3ee63b01", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d57528e0d472901307466d013c02ecad", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "31688c68d3a4f46048f3504cdb5812f8b9066e99", "commitAfterChange": "bf8ec00c7e0997467c4d951702784d000849bf7f", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void setImage (Image image)", "signatureAfterChange": " public void setImage (Image image)", "diff": ["-\tsetBitmap (this.image = image);", "+\t", "+\tthis.image = image;", "+\t", "+\tif (fCIconHandle != 0) {", "+\t\tImage.DisposeCIcon(fCIconHandle);", "+\t\tfCIconHandle= 0;", "+\t}", "+\t", "+\tif (image != null) {", "+\t\tif (image.isDisposed()) error(SWT.ERROR_INVALID_ARGUMENT);", "+\t\tfCIconHandle= Image.carbon_createCIcon(image);", "+\t\tif (fCIconHandle != 0)", "+\t\t\tsetMode(fCIconHandle);", "+\t} else ", "+\t\tsetMode(0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7c31b4679672d140725f460c4179a93", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "6d149cea8448c374e850448d1db5d08377d92850", "commitAfterChange": "56fed3385518b20c64346b78a2691795f28c0e47", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public void setMenu (Menu menu)", "signatureAfterChange": " public void setMenu (Menu menu)", "diff": ["-\t/* Assign the new menu in the OS */", "+\tif (parent == null) {", "+\t\tSystem.out.println(\"MenuItem.setMenu: parent == null\");", "+\t\treturn;", "+\t}", "-\t/*", "-\t* Feature in Windows.  When SetMenuItemInfo () is used to", "-\t* set a submenu and the menu item already has a submenu,", "-\t* Windows destroys the previous menu.  This is undocumented", "-\t* and unexpected but not necessarily wrong.  The fix is to", "-\t* remove the item with RemoveMenu () which does not destroy", "-\t* the submenu and then insert the item with InsertMenuItem ().", "-\t*/", "+\t/* Assign the new menu in the OS */", "-\t/* AW", "-\tMENUITEMINFO info = new MENUITEMINFO ();", "-\tinfo.cbSize = MENUITEMINFO.sizeof;", "-\tinfo.fMask = OS.MIIM_ID;", "-\tint index = 0;", "-\twhile (OS.GetMenuItemInfo (hMenu, index, true, info)) {", "-\t\tif (info.wID == id) break;", "-\t\tindex++;", "-\t}", "-\tif (info.wID != id) return;", "-\tint cch = 128;", "-\tint hHeap = OS.GetProcessHeap ();", "-\tint byteCount = cch * TCHAR.sizeof;", "-\tint pszText = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount);", "-\tinfo.fMask = OS.MIIM_STATE | OS.MIIM_ID | OS.MIIM_TYPE;", "-\tinfo.dwTypeData = pszText;", "-\tinfo.cch = cch;", "-\tboolean success = OS.GetMenuItemInfo (hMenu, index, true, info);", "+\tint newMenuHandle= 0;", "-\t\tmenu.cascade = this; ", "-\t\tinfo.fMask |= OS.MIIM_SUBMENU;", "-\t\tinfo.hSubMenu = menu.handle;", "+\t\tmenu.cascade = this;", "+\t\tnewMenuHandle= menu.handle;", "-\tOS.RemoveMenu (hMenu, index, OS.MF_BYPOSITION);", "-\tif (OS.IsWinCE) {", "-\t\tsuccess = OS.InsertMenu (hMenu, index, OS.MF_BYPOSITION, id, null); ", "-\t\tif (success) success = OS.SetMenuItemInfo (hMenu, index, true, info);", "-\t} else {", "-\t\tsuccess = OS.InsertMenuItem (hMenu, index, true, info);", "-\t}", "-\tif (pszText != 0) OS.HeapFree (hHeap, 0, pszText);", "-\tif (!success) error (SWT.ERROR_CANNOT_SET_MENU);", "-\tparent.destroyAcceleratorTable ();", "-\t*/", "-\t\tOS.SetMenuItemHierarchicalMenu(hMenu, index[0], menu.handle);", "-\t\t// we set the menu's title to the item's title", "-\t\tint sHandle= 0;", "-\t\ttry {", "-\t\t\tsHandle= OS.CFStringCreateWithCharacters(removeMnemonicsAndShortcut(getText()));", "-\t\t\tOS.SetMenuTitleWithCFString(menu.handle, sHandle);", "-\t\t} finally {", "-\t\t\tif (sHandle != 0)", "-\t\t\t\tOS.CFRelease(sHandle);", "-\t\t}", "+\t\tif (OS.SetMenuItemHierarchicalMenu(hMenu, index[0], newMenuHandle) == OS.kNoErr) {", "+\t\t\tif (menu != null) {", "+\t\t\t\t// we set the menu's title to the item's title", "+\t\t\t\tint sHandle= 0;", "+\t\t\t\ttry {", "+\t\t\t\t\tsHandle= OS.CFStringCreateWithCharacters(removeMnemonicsAndShortcut(getText()));", "+\t\t\t\t\tOS.SetMenuTitleWithCFString(menu.handle, sHandle);", "+\t\t\t\t} finally {", "+\t\t\t\t\tif (sHandle != 0)", "+\t\t\t\t\t\tOS.CFRelease(sHandle);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} else", "+\t\t\terror (SWT.ERROR_CANNOT_SET_MENU);", "+\t", "+\tparent.destroyAcceleratorTable ();"]}], "num": 6043}