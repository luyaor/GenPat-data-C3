{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7f7b969408487229ceb098d98cc79446", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4a47c52b5d7d9e7e141b6b978160b31", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "ca61b834d1fe41e9ab22bc5da0c47a0e76e3922e", "commitAfterChange": "cd36ba0081113965df6d101260814c54e1600a54", "methodNumberBeforeChange": 164, "methodNumberAfterChange": 168, "signatureBeforeChange": "  boolean traverseMnemonic (Event event)", "signatureAfterChange": "  boolean traverseMnemonic (char key)", "diff": ["-boolean traverseMnemonic (Event event) {", "-\t// This code is intentionally commented.", "-\t// TraverseMnemonic always originates from the OS and", "-\t// never through the API, and on the GTK platform, accels", "-\t// are hooked by the OS before we get the key event.", "-\t// int shellHandle = _getShell ().topHandle ();", "-\t// return OS.gtk_accel_groups_activate (shellHandle, keyCode, stateMask);", "-\treturn true;", "+boolean traverseMnemonic (char key) {", "+\treturn mnemonicHit (key);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd896f2d3cc5e00d5d56669cd9576ac0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "297ecb13adebbb5301bf1b8ab0c102eb865816e0", "commitAfterChange": "418f6980fc8a9b6eb89a40a7e228738e385c8dbe", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 116, "signatureBeforeChange": " boolean traverseMnemonic (char key)", "signatureAfterChange": " boolean traverseMnemonic (Event event)", "diff": ["-boolean traverseMnemonic (char key) {", "+boolean traverseMnemonic (Event event) {", "+\t// This code is intentionally commented.", "+\t// TraverseMnemonic always originates from the OS and", "+\t// never through the API, and on the GTK platform, accels", "+\t// are hooked by the OS before we get the key event.", "+\t// int shellHandle = _getShell ().topHandle ();", "+\t// return OS.gtk_accel_groups_activate (shellHandle, keyCode, stateMask);"]}], "num": 13177}