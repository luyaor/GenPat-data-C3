{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "47abad24d28eec62e8847cf4be7186ba", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ba258a33611bf6cef25c2d1e32dbf1d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "7cb97e4ecc9781f006aacc94d00852f3c95f4dd1", "commitAfterChange": "750fbf7ef7f008b0864e26e584fad6255dbe4f53", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " public void showSelection ()", "signatureAfterChange": " public void showSelection ()", "diff": ["-\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, false, 0, 0);", "+\t/*", "+\t* This code intentionally commented.", "+\t* Bug in GTK.  According to the documentation, gtk_tree_view_scroll_to_cell", "+\t* should scroll the minimum amount to show the cell if use_align is false.", "+\t* However, what actually happens is the cell is scrolled to the top.", "+\t* The fix is to determine the new location and use gtk_tree_view_scroll_to_point.", "+\t* If the widget is a pinhead, calling gtk_tree_view_scroll_to_point", "+\t* will have no effect. Therefore, it is still neccessary to ", "+\t* call gtk_tree_view_scroll_to_cell.", "+\t*/", "+//\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, false, 0, 0);", "+\tOS.gtk_widget_realize (handle);", "+\tGdkRectangle cellRect = new GdkRectangle ();", "+\tOS.gtk_tree_view_get_cell_area (handle, path, 0, cellRect);", "+\tGdkRectangle visibleRect = new GdkRectangle ();", "+\tOS.gtk_tree_view_get_visible_rect (handle, visibleRect);", "+\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, false, 0f, 0f);", "+\tint height = Math.min (visibleRect.height, cellRect.height);", "+\tif (cellRect.y + height > visibleRect.y + visibleRect.height) {", "+\t\tint tree_y = visibleRect.y + cellRect.y - visibleRect.height + cellRect.height;", "+\t\tOS.gtk_tree_view_scroll_to_point (handle, -1, tree_y);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1ab8b5b765e9f0f8d856ecdaa6bae39", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "7cb97e4ecc9781f006aacc94d00852f3c95f4dd1", "commitAfterChange": "750fbf7ef7f008b0864e26e584fad6255dbe4f53", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 115, "signatureBeforeChange": "  void showItem (int iter)", "signatureAfterChange": "  void showItem (int iter)", "diff": ["-\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, false, 0, 0);", "+\t/*", "+\t* This code intentionally commented.", "+\t* Bug in GTK.  According to the documentation, gtk_tree_view_scroll_to_cell", "+\t* should scroll the minimum amount to show the cell if use_align is false.", "+\t* However, what actually happens is the cell is scrolled to the top.", "+\t* The fix is to determine the new location and use gtk_tree_view_scroll_to_point.", "+\t* If the widget is a pinhead, calling gtk_tree_view_scroll_to_point", "+\t* will have no effect. Therefore, it is still neccessary to ", "+\t* call gtk_tree_view_scroll_to_cell.", "+\t*/", "+//\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, false, 0, 0);", "+\tOS.gtk_widget_realize (handle);", "+\tGdkRectangle cellRect = new GdkRectangle ();", "+\tOS.gtk_tree_view_get_cell_area (handle, path, 0, cellRect);", "+\tGdkRectangle visibleRect = new GdkRectangle ();", "+\tOS.gtk_tree_view_get_visible_rect (handle, visibleRect);", "+\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, false, 0f, 0f);", "+\tint height = Math.min (visibleRect.height, cellRect.height);", "+\tif (cellRect.y + height > visibleRect.y + visibleRect.height) {", "+\t\tint tree_y = visibleRect.y + cellRect.y - visibleRect.height + cellRect.height;", "+\t\tOS.gtk_tree_view_scroll_to_point (handle, -1, tree_y);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a6e6770d4e9c6a08e3bfdeaa911dae7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "7cb97e4ecc9781f006aacc94d00852f3c95f4dd1", "commitAfterChange": "750fbf7ef7f008b0864e26e584fad6255dbe4f53", "methodNumberBeforeChange": 113, "methodNumberAfterChange": 113, "signatureBeforeChange": "  void showItem (int path, boolean scroll)", "signatureAfterChange": "  void showItem (int path, boolean scroll)", "diff": ["-\t\tif (isHidden) OS.gtk_tree_view_scroll_to_cell (handle, path, 0, depth != 1, 0.5f, 0.0f);\t", "+\t\tif (isHidden) {", "+\t\t\t/*", "+\t\t\t* This code intentionally commented.", "+\t\t\t* Bug in GTK.  According to the documentation, gtk_tree_view_scroll_to_cell", "+\t\t\t* should scroll the minimum amount to show the cell if use_align is false.", "+\t\t\t* However, what actually happens is the cell is scrolled to the top.", "+\t\t\t* The fix is to determine the new location and use gtk_tree_view_scroll_to_point.", "+\t\t\t* If the widget is a pinhead, calling gtk_tree_view_scroll_to_point", "+\t\t\t* will have no effect. Therefore, it is still neccessary to ", "+\t\t\t* call gtk_tree_view_scroll_to_cell.", "+\t\t\t*/", "+\t\t\t//\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, depth != 1, 0.5f, 0.0f);", "+\t\t\tif (depth != 1) {", "+\t\t\t\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, true, 0.5f, 0.0f);", "+\t\t\t} else {", "+\t\t\t\tOS.gtk_widget_realize (handle);", "+\t\t\t\tGdkRectangle cellRect = new GdkRectangle ();", "+\t\t\t\tOS.gtk_tree_view_get_cell_area (handle, path, 0, cellRect);", "+\t\t\t\tGdkRectangle visibleRect = new GdkRectangle ();", "+\t\t\t\tOS.gtk_tree_view_get_visible_rect (handle, visibleRect);", "+\t\t\t\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, false, 0f, 0f);", "+\t\t\t\tint height = Math.min (visibleRect.height, cellRect.height);", "+\t\t\t\tif (cellRect.y + height > visibleRect.y + visibleRect.height) {", "+\t\t\t\t\tint tree_y = visibleRect.y + cellRect.y - visibleRect.height + cellRect.height;", "+\t\t\t\t\tOS.gtk_tree_view_scroll_to_point (handle, -1, tree_y);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}"]}], "num": 57143}