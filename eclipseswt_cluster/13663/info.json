{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7ab7d3b25f0ac80f8938fdcf81485f92", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a99615ebbe063bee9eda98b07db7c19a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/photon/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "c0e47047fb12b4ad6c1cd291125c302ee4573df0", "commitAfterChange": "772f59dfc148ceb100936d7357b9a0b9d85ab236", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public Browser(Composite parent, int style)", "signatureAfterChange": " public Browser(Composite parent, int style)", "diff": ["-\t/* select server */", "-\tbyte[] serverBuffer = Converter.wcsToMbcs(null, server, true);", "-\tint serverPtr = OS.malloc(serverBuffer.length);", "-\tOS.memmove(serverPtr, serverBuffer, serverBuffer.length);", "-\tOS.PtSetResource(webHandle, OS.Pt_ARG_WEB_SERVER, serverPtr, 0);", "-\tOS.free(serverPtr);", "+\t/**", "+\t * Feature in Photon PtWebClient.  If you give a server name", "+\t * when the widget is created it will attempt to start a new server", "+\t * rather then attaching a new window context to the existing server.", "+\t * If you don't connect to the existing one then javascript window", "+\t * creation will fail.", "+\t */", "+\tif (instanceCount == 0) {", "+\t\t/* select server */", "+\t\tbyte[] serverBuffer = Converter.wcsToMbcs(null, server, true);", "+\t\tint serverPtr = OS.malloc(serverBuffer.length);", "+\t\tOS.memmove(serverPtr, serverBuffer, serverBuffer.length);", "+\t\tOS.PtSetResource(webHandle, OS.Pt_ARG_WEB_SERVER, serverPtr, 0);", "+\t\tOS.free(serverPtr);", "+\t} ", "+\tinstanceCount++;", "+\tOS.PtAddCallback(webHandle,OS.Pt_CB_WEB_CLOSE_WINDOW, webProc, OS.Pt_CB_WEB_CLOSE_WINDOW);", "+\tOS.PtAddCallback(webHandle,OS.Pt_CB_WEB_NEW_WINDOW, webProc, OS.Pt_CB_WEB_NEW_WINDOW);", "-\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f0d71114c8116b3d98d8c9f0c90249a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/motif/org/eclipse/swt/program/Program.java", "commitBeforeChange": "dbb652fe193019d96be9d6af80af3f6e1918e181", "commitAfterChange": "a9865ce41544b9634fe7b5cf08a114ae91a2faeb", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 17, "signatureBeforeChange": "  static boolean kde_init()", "signatureAfterChange": "  static boolean kde_init()", "diff": ["+", "+static boolean kde_init() {", "+\ttry {", "+\t\tLibrary.loadLibrary(\"swt-kde\");", "+\t} catch (Throwable e) {", "+\t\treturn false;", "+\t}", "+", "+\t/* Use the character encoding for the default locale */", "+\tbyte[] nameBuffer = Converter.wcsToMbcs(null, \"SWT\", true);", "+\tint qcString = KDE.QCString_new(nameBuffer);", "+\tint ptr = KDE.malloc(nameBuffer.length);", "+\tOS.memmove(ptr, nameBuffer, nameBuffer.length);", "+\tint[] argv = new int[]{ptr, 0};", "+\tKDE.KApplication_new(1, argv, qcString, false, false);", "+\tKDE.free(ptr);", "+\tKDE.QCString_delete(qcString);", "+\treturn true;", "+}", "-", "-static boolean kde_init() {", "-\ttry {", "-\t\tLibrary.loadLibrary(\"swt-kde\");", "-\t} catch (Throwable e) {", "-\t\treturn false;", "-\t}", "-", "-\t/* Use the character encoding for the default locale */", "-\tbyte[] nameBuffer = Converter.wcsToMbcs(null, \"SWT\", true);", "-\tint qcString = KDE.QCString_new(nameBuffer);", "-\tint ptr = OS.XtMalloc(nameBuffer.length);", "-\tOS.memmove(ptr, nameBuffer, nameBuffer.length);", "-\tint[] argv = new int[]{ptr, 0};", "-\tKDE.KApplication_new(1, argv, qcString, false, false);", "-\tOS.XtFree(ptr);", "-\tKDE.QCString_delete(qcString);", "-\treturn true;", "-}"]}], "num": 13663}