{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cef541970e720b6418af4fb15e303382", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ec951ace6e0db5ad8bbaf8334747b90", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "2c3d617dfc7ace796447cd7d973caeaf8024e8e7", "commitAfterChange": "9f9af4ad0c7e3e551752ef0d45c7733d9c3d7611", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 131, "signatureBeforeChange": " public boolean sleep ()", "signatureAfterChange": " public boolean sleep ()", "diff": ["+\tif (eventTable != null && eventTable.hooks (SWT.Settings)) {", "+\t\tRGBColor color = new RGBColor ();", "+\t\tint status = OS.noErr, depth = getDepth ();", "+\t\tdo {", "+\t\t\tallowTimers = false;", "+\t\t\tstatus = OS.ReceiveNextEvent (0, null, 0.5, false, null);", "+\t\t\tallowTimers = true;", "+\t\t\tif (status == OS.eventLoopTimedOutErr) {", "+\t\t\t\tOS.GetThemeBrushAsColor ((short) OS.kThemeBrushPrimaryHighlightColor, (short) depth, true, color);", "+\t\t\t\tif (highlightColor.red != color.red || highlightColor.green != color.green || highlightColor.blue != color.blue) {", "+\t\t\t\t\thighlightColor = color;", "+\t\t\t\t\trunSettings = true;", "+\t\t\t\t\treturn true;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} while (status == OS.eventLoopTimedOutErr);", "+\t\treturn status == OS.noErr;", "+\t}", "-\tboolean result = OS.ReceiveNextEvent (0, null, OS.kEventDurationForever, false, null) == OS.noErr;", "+\tint status = OS.ReceiveNextEvent (0, null, OS.kEventDurationForever, false, null);", "-\treturn result;", "+\treturn status == OS.noErr;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5af898acd5fe27ba9438e030646b2bf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 45, "signatureBeforeChange": " public void internal_dispose_GC (int xGC, GCData data)", "signatureAfterChange": "  public void internal_dispose_GC (int context, GCData data)", "diff": ["- */", "-public void internal_dispose_GC (int xGC, GCData data) {", "+", "+public void internal_dispose_GC (int context, GCData data) {", "-    /* AW", "-\tint xDisplay = 0;", "-\tif (data != null) xDisplay = data.display;", "-\tif (xDisplay == 0 && handle != 0) xDisplay = OS.XtDisplay (handle);", "-\tif (xDisplay == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\tOS.XFreeGC (xDisplay, xGC);", "-    */", "+\tif (data != null) {", "+\t\tint paintContext = 0, paintRgn = 0;", "+\t\tif (data.paintEvent != 0) {", "+\t\t\tint theEvent = data.paintEvent;", "+\t\t\tint [] buffer = new int [1];", "+\t\t\tOS.GetEventParameter (theEvent, OS.kEventParamCGContextRef, OS.typeCGContextRef, null, 4, null, buffer);", "+\t\t\tpaintContext = buffer [0];\t", "+\t\t\tOS.GetEventParameter (theEvent, OS.kEventParamRgnHandle, OS.typeQDRgnHandle, null, 4, null, buffer);", "+\t\t\tpaintRgn = buffer [0];", "+\t\t}", "+\t\tif (data.visibleRgn != 0 && data.visibleRgn != paintRgn) {", "+\t\t\tOS.DisposeRgn (data.visibleRgn);", "+\t\t\tdata.visibleRgn = 0;", "+\t\t}", "+\t\tif (paintContext == context) return;", "+\t}", "+\tOS.CGContextFlush (context);", "+\tOS.CGContextRelease (context);"]}], "num": 11921}