{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3faad588e424b9abb2a65c73354abf0f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08a2d9ece8c858c09546e696c23298d9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleClientSite.java", "commitBeforeChange": "deab298e3f8d4709a521587df51ebc6851da7b92", "commitAfterChange": "21e538be1341032af9956d667ab9b6dd4385e4d9", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "\r public int doVerb(int verb)", "signatureAfterChange": "\r public int doVerb(int verb)", "diff": ["+\t// Not all OLE clients (for example PowerPoint) can be set into the running state in the constructor.\r", "+\t// The fix is to ensure that the client is in the running state before invoking any verb on it.\r", "+\tif (state == STATE_NONE) {\r", "+\t\tif (COM.OleRun(objIUnknown.getAddress()) == OLE.S_OK) state = STATE_RUNNING;\r", "+\t}\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e4c5f3d3063e2a328fe51f1e8613190", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "0938215761017b2e3bcc6c328e9219ff30387f47", "commitAfterChange": "f4ec690d4cc83d52d0bd7d53b784840a1e241d6a", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": "  void windowSendEvent (int id, int sel, int event)", "signatureAfterChange": "  void windowSendEvent (int id, int sel, int event)", "diff": ["-\t\t\t\tif (control != null && control.isTrim (hitView[0])) trimControl = null;", "+\t\t\t\tif (trimControl != null && trimControl.isTrim (hitView[0])) trimControl = null;", "+\t\t\t\tif (trimControl != null && (!trimControl.isActive() || !trimControl.isEnabled())) trimControl = null;"]}], "num": 51278}