{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2dc8e91b281f9bf87d8823c52ec7b2f2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27d7b6990037740802545a8bf72db351", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/cocoa/org/eclipse/swt/browser/MozillaDelegate.java", "commitBeforeChange": "4edc576de20a88abac088ae701d29ce3e54ede4f", "commitAfterChange": "c2ec875b36ecf39df432358c14d183b7d7f45fe0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  static byte[] wcsToMbcs (String codePage, String string, boolean terminate)", "signatureAfterChange": "  static byte[] wcsToMbcs (String codePage, String string, boolean terminate)", "diff": ["-\tchar[] chars = new char [string.length()];", "-\tstring.getChars (0, chars.length, chars, 0);", "-\tint cfstring = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, chars, chars.length);", "-\tbyte[] buffer = null;", "-\tif (cfstring != 0) {", "-\t\tCFRange range = new CFRange ();", "-\t\trange.length = chars.length;", "-\t\tint encoding = OS.CFStringGetSystemEncoding ();", "-\t\tint[] size = new int[1];", "-\t\tint numChars = OS.CFStringGetBytes (cfstring, range, encoding, (byte)'?', true, null, 0, size);", "-\t\tbuffer = new byte [size[0] + (terminate ? 1 : 0)];", "-\t\tif (numChars != 0) {", "-\t\t\tnumChars = OS.CFStringGetBytes (cfstring, range, encoding, (byte)'?', true, buffer, size[0], size);", "-\t\t}", "-\t\tOS.CFRelease (cfstring);", "-\t}", "-\treturn buffer;", "+//\tchar[] chars = new char [string.length()];", "+//\tstring.getChars (0, chars.length, chars, 0);", "+//\tint cfstring = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, chars, chars.length);", "+//\tbyte[] buffer = null;", "+//\tif (cfstring != 0) {", "+//\t\tCFRange range = new CFRange ();", "+//\t\trange.length = chars.length;", "+//\t\tint encoding = OS.CFStringGetSystemEncoding ();", "+//\t\tint[] size = new int[1];", "+//\t\tint numChars = OS.CFStringGetBytes (cfstring, range, encoding, (byte)'?', true, null, 0, size);", "+//\t\tbuffer = new byte [size[0] + (terminate ? 1 : 0)];", "+//\t\tif (numChars != 0) {", "+//\t\t\tnumChars = OS.CFStringGetBytes (cfstring, range, encoding, (byte)'?', true, buffer, size[0], size);", "+//\t\t}", "+//\t\tOS.CFRelease (cfstring);", "+//\t}", "+//\treturn buffer;", "+\treturn (string + \"\\0\").getBytes();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89c9ba7f3cdf6aa5ccf872d47794eacb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/RTFTransfer.java", "commitBeforeChange": "89dd18f56416766e9f25e99fa93a3cfdf736ff7e", "commitAfterChange": "0333c3cd6e1227d0185cdb60c13b053083d72b21", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void javaToNative (Object object, TransferData transferData)", "signatureAfterChange": " public void javaToNative (Object object, TransferData transferData)", "diff": ["-\tif (object == null || !(object instanceof String)) {", "-\t\ttransferData.result = -1;", "-\t\treturn;", "-\t}", "+\ttransferData.result = -1;", "+\tif (object == null || !(object instanceof String) || !isSupportedType(transferData)) return;", "+\tif (string.length() == 0) return;", "-\tint ptr = OS.CFStringCreateWithCharacters(OS.kCFAllocatorDefault, chars, chars.length);", "-\tif (ptr == 0) {", "-\t\ttransferData.result = -1;", "-\t\treturn;", "+\tint cfstring = OS.CFStringCreateWithCharacters(OS.kCFAllocatorDefault, chars, chars.length);", "+\tif (cfstring == 0) return;", "+\ttry {", "+\t\tCFRange range = new CFRange();", "+\t\trange.length = chars.length;", "+\t\tint encoding = OS.CFStringGetSystemEncoding();", "+\t\tint[] size = new int[1];", "+\t\tint numChars = OS.CFStringGetBytes(cfstring, range, encoding, (byte)'?', true, null, 0, size);", "+\t\tif (numChars == 0 || size[0] == 0) return;", "+\t\tbyte[] buffer = new byte[size[0]];", "+\t\tnumChars = OS.CFStringGetBytes(cfstring, range, encoding, (byte)'?', true, buffer, size [0], size);", "+\t\tif (numChars == 0) return;", "+\t\ttransferData.data = new byte[1][];", "+\t\ttransferData.data[0] = buffer;", "+\t\ttransferData.result = 0;", "+\t} finally {", "+\t\tOS.CFRelease(cfstring);", "-\tCFRange range = new CFRange();", "-\trange.length = chars.length;", "-\tint encoding = OS.CFStringGetSystemEncoding();", "-\tint[] size = new int[1];", "-\tOS.CFStringGetBytes(ptr, range, encoding, (byte)'?', true, null, 0, size);", "-\tbyte[] buffer = new byte[size[0]];", "-\tOS.CFStringGetBytes(ptr, range, encoding, (byte)'?', true, buffer, size [0], size);", "-\tOS.CFRelease(ptr);", "-\tsuper.javaToNative(buffer, transferData);"]}], "num": 41170}