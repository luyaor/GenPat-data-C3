{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7f6e2b21c1705b980b43861772897966", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfb78133cfaa533c9958ce477610c7ad", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "87330b10800601c0b12e6edda61ce1010ad6b657", "commitAfterChange": "f8d214632226fe30e5dedb11397a3be1f8629823", "methodNumberBeforeChange": 137, "methodNumberAfterChange": 137, "signatureBeforeChange": "  int OnStateChange (int aWebProgress, int aRequest, int aStateFlags, int aStatus)", "signatureAfterChange": "  int OnStateChange (int aWebProgress, int aRequest, int aStateFlags, int aStatus)", "diff": ["-\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "-\t\t\tif (result[0] == 0) error (XPCOM.NS_NOINTERFACE);", "-\t\t\tnsIChannel channel = new nsIChannel (result[0]);", "-\t\t\tresult[0] = 0;", "-\t\t\trc = channel.GetURI (result);", "-\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "-\t\t\tif (result[0] == 0) error (XPCOM.NS_ERROR_NULL_POINTER);", "-\t\t\tchannel.Release ();", "+\t\t\tif (rc == XPCOM.NS_OK && result[0] != 0) {", "+\t\t\t\tnsIChannel channel = new nsIChannel (result[0]);", "+\t\t\t\tresult[0] = 0;", "+\t\t\t\trc = channel.GetURI (result);", "+\t\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\t\tif (result[0] == 0) error (XPCOM.NS_ERROR_NULL_POINTER);", "+\t\t\t\tchannel.Release ();", "-\t\t\tnsIURI uri = new nsIURI (result[0]);", "-\t\t\tresult[0] = 0;", "-\t\t\tint /*long*/ aSpec = XPCOM.nsEmbedCString_new ();", "-\t\t\trc = uri.GetSpec (aSpec);", "-\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "-\t\t\tint length = XPCOM.nsEmbedCString_Length (aSpec);", "-\t\t\tint /*long*/ buffer = XPCOM.nsEmbedCString_get (aSpec);", "-\t\t\tbyte[] bytes = new byte[length];", "-\t\t\tXPCOM.memmove (bytes, buffer, length);", "-\t\t\tlastNavigateURL = new String (bytes);", "-\t\t\tXPCOM.nsEmbedCString_delete (aSpec);", "-\t\t\turi.Release ();", "+\t\t\t\tnsIURI uri = new nsIURI (result[0]);", "+\t\t\t\tresult[0] = 0;", "+\t\t\t\tint /*long*/ aSpec = XPCOM.nsEmbedCString_new ();", "+\t\t\t\trc = uri.GetSpec (aSpec);", "+\t\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\t\tint length = XPCOM.nsEmbedCString_Length (aSpec);", "+\t\t\t\tint /*long*/ buffer = XPCOM.nsEmbedCString_get (aSpec);", "+\t\t\t\tbyte[] bytes = new byte[length];", "+\t\t\t\tXPCOM.memmove (bytes, buffer, length);", "+\t\t\t\tlastNavigateURL = new String (bytes);", "+\t\t\t\tXPCOM.nsEmbedCString_delete (aSpec);", "+\t\t\t\turi.Release ();", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a84310052d4be05da86bc3c33c6336a9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "993b8d4f37efd3c9263d7ac43197101ee2f14080", "commitAfterChange": "fe1179fec4e5c55336830f29e326f19e3a9554b8", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 135, "signatureBeforeChange": "  void setBounds (int x, int y, int width, int height, int flags, boolean defer)", "signatureAfterChange": "  void setBounds (int x, int y, int width, int height, int flags, boolean defer)", "diff": ["-\tint /*long*/ topHandle = topHandle ();", "-\tif (defer && parent != null) {", "-\t\tforceResize ();", "-\t\tif (OS.GetWindow (handle, OS.GW_CHILD) == 0) {", "-\t\t\tif (findImageControl () != null) {", "-\t\t\t\tflags |= OS.SWP_NOCOPYBITS;", "-\t\t\t} else {", "-\t\t\t\tif (OS.COMCTL32_MAJOR >= 6 && OS.IsAppThemed ()) {", "-\t\t\t\t\tif (findThemeControl () != null) flags |= OS.SWP_NOCOPYBITS;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\tWINDOWPOS [] lpwp = parent.lpwp;", "-\t\tif (lpwp == null) {", "-\t\t\tSetWindowPos (topHandle, 0, x, y, width, height, flags);", "-\t\t} else {", "-\t\t\tint index = 0;", "-\t\t\twhile (index < lpwp.length) {", "-\t\t\t\tif (lpwp [index] == null) break;", "-\t\t\t\tindex ++;", "-\t\t\t}", "-\t\t\tif (index == lpwp.length) {", "-\t\t\t\tWINDOWPOS [] newLpwp = new WINDOWPOS [lpwp.length + 4];", "-\t\t\t\tSystem.arraycopy (lpwp, 0, newLpwp, 0, lpwp.length);", "-\t\t\t\tparent.lpwp = lpwp = newLpwp;", "-\t\t\t}", "-\t\t\tWINDOWPOS wp = new WINDOWPOS ();", "-\t\t\twp.hwnd = topHandle;", "-\t\t\twp.x = x;", "-\t\t\twp.y = y;", "-\t\t\twp.cx = width;", "-\t\t\twp.cy = height;", "-\t\t\twp.flags = flags;", "-\t\t\tlpwp [index] = wp;", "-\t\t}", "+\tif (findImageControl () != null) {", "+\t\tif (backgroundImage == null) flags |= OS.SWP_NOCOPYBITS;", "-\t\tSetWindowPos (topHandle, 0, x, y, width, height, flags);", "+\t\tif (OS.GetWindow (handle, OS.GW_CHILD) == 0) {", "+\t\t\tif (OS.COMCTL32_MAJOR >= 6 && OS.IsAppThemed ()) {", "+\t\t\t\tif (findThemeControl () != null) flags |= OS.SWP_NOCOPYBITS;", "+\t\t\t}", "+\t\t}", "+\tint /*long*/ topHandle = topHandle ();", "+\tif (defer && parent != null && parent.lpwp != null) {", "+\t\tforceResize ();", "+\t\tint index = 0;", "+\t\tWINDOWPOS [] lpwp = parent.lpwp;", "+\t\twhile (index < lpwp.length) {", "+\t\t\tif (lpwp [index] == null) break;", "+\t\t\tindex ++;", "+\t\t}", "+\t\tif (index == lpwp.length) {", "+\t\t\tWINDOWPOS [] newLpwp = new WINDOWPOS [lpwp.length + 4];", "+\t\t\tSystem.arraycopy (lpwp, 0, newLpwp, 0, lpwp.length);", "+\t\t\tparent.lpwp = lpwp = newLpwp;", "+\t\t}", "+\t\tWINDOWPOS wp = new WINDOWPOS ();", "+\t\twp.hwnd = topHandle;", "+\t\twp.x = x;", "+\t\twp.y = y;", "+\t\twp.cx = width;", "+\t\twp.cy = height;", "+\t\twp.flags = flags;", "+\t\tlpwp [index] = wp;", "+\t\treturn;", "+\t}", "+\tSetWindowPos (topHandle, 0, x, y, width, height, flags);"]}], "num": 11485}