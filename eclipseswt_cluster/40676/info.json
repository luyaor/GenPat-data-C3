{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e5240d0765bd89cc23a5281de3c3b16d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d4dad992ddc36e55137626ba7cbaf55", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_ImageData.java", "commitBeforeChange": "14847fc50ac21dbfae0a2bd75c455ca661cd2bd0", "commitAfterChange": "db1f6bc7e04f75d6fd9d429b8b4d02d4787e43d9", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  public void test_setPixelIII()", "signatureAfterChange": "  public void test_setPixelIII()", "diff": ["-\twarnUnimpl(\"Test test_setPixelIII not written\");", "+\tint value;", "+\t", "+\tvalue = 0xAA;", "+\timageData.setPixel(0, 0, value);", "+\tassertEquals(\":a:\", value, imageData.getPixel(0, 0));", "+", "+\t// exception cases", "+\ttry {", "+\t\timageData.setPixel(-1, 1, value);", "+\t\tfail(\"No exception thrown for x out of bounds\");", "+\t} catch (IllegalArgumentException e) {", "+\t\tassertEquals(\"Incorrect exception thrown for x out of bounds\", SWT.ERROR_INVALID_ARGUMENT, e);", "+\t}", "+\ttry {", "+\t\timageData.setPixel(IMAGE_DIMENSION, 1, value);", "+\t\tfail(\"No exception thrown for x out of bounds\");", "+\t} catch (IllegalArgumentException e) {", "+\t\tassertEquals(\"Incorrect exception thrown for x out of bounds\", SWT.ERROR_INVALID_ARGUMENT, e);", "+\t}", "+\ttry {", "+\t\timageData.setPixel(0, -1, value);", "+\t\tfail(\"No exception thrown for y out of bounds\");", "+\t} catch (IllegalArgumentException e) {", "+\t\tassertEquals(\"Incorrect exception thrown for y out of bounds\", SWT.ERROR_INVALID_ARGUMENT, e);", "+\t}", "+\ttry {", "+\t\timageData.setPixel(0, IMAGE_DIMENSION, value);", "+\t\tfail(\"No exception thrown for y out of bounds\");", "+\t} catch (IllegalArgumentException e) {", "+\t\tassertEquals(\"Incorrect exception thrown for y out of bounds\", SWT.ERROR_INVALID_ARGUMENT, e);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "280202b999e17635e5ac9d26df14c69d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_ImageData.java", "commitBeforeChange": "14847fc50ac21dbfae0a2bd75c455ca661cd2bd0", "commitAfterChange": "db1f6bc7e04f75d6fd9d429b8b4d02d4787e43d9", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  public void test_setAlphaIII()", "signatureAfterChange": "  public void test_setAlphaIII()", "diff": ["-\twarnUnimpl(\"Test test_setAlphaIII not written\");", "+\tint value;", "+\t", "+\tvalue = 0xAA;", "+\timageData.setAlpha(0, 0, value);", "+\tassertEquals(\":a:\", value, imageData.getAlpha(0, 0));", "+", "+\t// exception cases", "+\ttry {", "+\t\timageData.setAlpha(-1, 1, value);", "+\t\tfail(\"No exception thrown for x out of bounds\");", "+\t} catch (IllegalArgumentException e) {", "+\t\tassertEquals(\"Incorrect exception thrown for x out of bounds\", SWT.ERROR_INVALID_ARGUMENT, e);", "+\t}", "+\ttry {", "+\t\timageData.setAlpha(IMAGE_DIMENSION, 1, value);", "+\t\tfail(\"No exception thrown for x out of bounds\");", "+\t} catch (IllegalArgumentException e) {", "+\t\tassertEquals(\"Incorrect exception thrown for x out of bounds\", SWT.ERROR_INVALID_ARGUMENT, e);", "+\t}", "+\ttry {", "+\t\timageData.setAlpha(0, -1, value);", "+\t\tfail(\"No exception thrown for y out of bounds\");", "+\t} catch (IllegalArgumentException e) {", "+\t\tassertEquals(\"Incorrect exception thrown for y out of bounds\", SWT.ERROR_INVALID_ARGUMENT, e);", "+\t}", "+\ttry {", "+\t\timageData.setAlpha(0, IMAGE_DIMENSION, value);", "+\t\tfail(\"No exception thrown for y out of bounds\");", "+\t} catch (IllegalArgumentException e) {", "+\t\tassertEquals(\"Incorrect exception thrown for y out of bounds\", SWT.ERROR_INVALID_ARGUMENT, e);", "+\t}"]}], "num": 40676}