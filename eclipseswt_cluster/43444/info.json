{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ea4e4ded68e13ebdfff092119c659c3d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41b43be5af5a9f7a5eafcc1eadfc09d4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "667671ba86e941a67f9a32fff49b72cd98dd7b45", "commitAfterChange": "adba51fd7df111f97fa2ca10d76f397d176f08d1", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": " boolean setItemSize()", "signatureAfterChange": " boolean setItemSize()", "diff": ["-\tint tabAreaWidth = size.x - borderLeft - borderRight - minRect.width - maxRect.width - chevronRect.width;", "+\t\t", "+\t\t\tint totalWidth = 0;", "+\t\t\tint tabAreaWidth = size.x - borderLeft - borderRight - minRect.width - maxRect.width;", "-\t\t\tint averageWidth = tabAreaWidth / count;", "-\t\t\tint oldAverageWidth = 0;", "-\t\t\twhile (averageWidth > oldAverageWidth) {", "-\t\t\t\tint width = tabAreaWidth;", "-\t\t\t\tfor (int i = 0; i < items.length; i++) {", "-\t\t\t\t\tif (widths[i] < averageWidth) {", "-\t\t\t\t\t\twidth -= widths[i];", "-\t\t\t\t\t\tcount--;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\toldAverageWidth = averageWidth;", "-\t\t\t\tif (count > 0) {", "-\t\t\t\t\taverageWidth = width / count;", "-\t\t\t\t}", "+\t\t\tfor (int i = 0 ; i < count; i++) {", "+\t\t\t\ttotalWidth += widths[i];", "-\t\t\taverageWidth = Math.max(averageWidth, MIN_TAB_WIDTH * tabHeight);", "-\t\t\tfor (int i = 0; i < items.length; i++) {", "-\t\t\t\tif (widths[i] > averageWidth) {", "-\t\t\t\t\twidths[i] = averageWidth;", "+\t\t\tif (totalWidth > tabAreaWidth) {", "+\t\t\t\t// try to compress items", "+\t\t\t\tint minWidth = MIN_TAB_WIDTH * tabHeight;", "+\t\t\t\ttotalWidth = 0;", "+\t\t\t\tint large = 0;", "+\t\t\t\tfor (int i = 0 ; i < count; i++) {", "+\t\t\t\t\ttotalWidth += Math.min(widths[i], minWidth);", "+\t\t\t\t\tif (widths[i] > minWidth) large++;", "+\t\t\t\t}", "+\t\t\t\tif (totalWidth >= tabAreaWidth) {", "+\t\t\t\t\t// maximum compression required", "+\t\t\t\t\tfor (int i = 0; i < count; i++) {", "+\t\t\t\t\t\twidths[i] = Math.min(widths[i], minWidth);", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\t// determine compression for each item", "+\t\t\t\t\tint extra = (tabAreaWidth - totalWidth)/large;", "+\t\t\t\t\twhile (true) {", "+\t\t\t\t\t\ttotalWidth = 0;", "+\t\t\t\t\t\tlarge = 0;", "+\t\t\t\t\t\tfor (int i = 0 ; i < count; i++) {", "+\t\t\t\t\t\t\ttotalWidth += Math.min(widths[i], minWidth + extra);", "+\t\t\t\t\t\t\tif (widths[i] > minWidth + extra) large++;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (totalWidth >= tabAreaWidth) {", "+\t\t\t\t\t\t\textra--;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (large == 0 ||tabAreaWidth - totalWidth < large) break;", "+\t\t\t\t\t\textra++;", "+\t\t\t\t\t}", "+\t\t\t\t\tfor (int i = 0; i < items.length; i++) {", "+\t\t\t\t\t\twidths[i] = Math.min(widths[i], minWidth + extra);", "+\t\t\t\t\t}\t", "+\tint tabAreaWidth = size.x - borderLeft - borderRight - minRect.width - maxRect.width - chevronRect.width;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ee7dbe0885a6688461297a5f8ae7e36", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/performance/Test_org_eclipse_swt_graphics_GC.java", "commitBeforeChange": "0d6738f372469d9527fdb6984c0f956cbb0c021a", "commitAfterChange": "69155e7bef60580890dcbd61eeae4b1c572aec32", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "  public void test_textExtentLjava_lang_StringI()", "signatureAfterChange": "  public void test_textExtentLjava_lang_StringI()", "diff": ["-\tPoint pt = gc.textExtent(\"abc\", 0);", "-\tassertTrue(pt.x > 0);", "-\tassertTrue(pt.y > 0);", "+\tPerformanceMeter meter = createMeter(\"transparent\");", "+\tmeter.start();", "+\tfor (int i = 0; i < COUNT; i++) {", "+\t\tgc.textExtent(\"\\t\\r\\na&bc&\", SWT.DRAW_TRANSPARENT);\t\t\t\t", "+\t}", "+\tmeter.stop();", "+\t", "+\tdisposeMeter(meter);", "+", "+\tmeter = createMeter(\"delimiter\");", "+\tmeter.start();", "+\tfor (int i = 0; i < COUNT; i++) {", "+\t\tgc.textExtent(\"\\t\\r\\na&bc&\", SWT.DRAW_DELIMITER);\t\t\t\t", "+\t}", "+\tmeter.stop();", "+\t", "+\tdisposeMeter(meter);", "+", "+\tmeter = createMeter(\"mnemonic\");", "+\tmeter.start();", "+\tfor (int i = 0; i < COUNT; i++) {", "+\t\tgc.textExtent(\"\\t\\r\\na&bc&\", SWT.DRAW_MNEMONIC);\t\t\t\t", "+\t}", "+\tmeter.stop();", "+\t", "+\tdisposeMeter(meter);", "+", "+\tmeter = createMeter(\"tab\");", "+\tmeter.start();", "+\tfor (int i = 0; i < COUNT; i++) {", "+\t\tgc.textExtent(\"\\t\\r\\na&bc&\", SWT.DRAW_TAB);\t\t\t\t", "+\t}", "+\tmeter.stop();", "+\t", "+\tdisposeMeter(meter);", "+\t", "+\tmeter = createMeter(\"no flags\");", "+\tmeter.start();", "+\tfor (int i = 0; i < COUNT; i++) {", "+\t\tgc.textExtent(\"\\t\\r\\na&bc&\", SWT.NONE);\t\t\t\t", "+\t}", "+\tmeter.stop();", "+\t", "+\tdisposeMeter(meter);"]}], "num": 43444}