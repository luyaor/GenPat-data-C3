{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "519704970d488307826efc9af76ab53b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b569b6714e9e0634ff49b01ddbe0ec2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/External.java", "commitBeforeChange": "3fa10aec500a4081c70ceb9a57998af702891944", "commitAfterChange": "a84c4f3464a5f713e18d5891323717c2051b011d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "  static Object convertToJava (nsIVariant variant, short type)", "signatureAfterChange": "  static Object convertToJava (nsIVariant variant)", "diff": ["-static Object convertToJava (nsIVariant variant, short type) {", "-\tswitch (type) {", "+static Object convertToJava (nsIVariant variant) {", "+\tshort[] dataType = new short[1];", "+\tint rc = variant.GetDataType (dataType);", "+\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "+\tswitch (dataType[0]) {", "-\t\t\tint rc = variant.GetAsBool (boolResult);", "+\t\t\trc = variant.GetAsBool (boolResult);", "-\t\t\t\t\tcurrentType[0] = 0;", "-\t\t\t\t\trc = currentVariant.GetDataType (currentType);", "-\t\t\t\t\t\tarrayReturn[i] = convertToJava (currentVariant, currentType[0]);", "+\t\t\t\t\t\tarrayReturn[i] = convertToJava (currentVariant);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d88e1972b36ca35bb4cf53815742071", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/External.java", "commitBeforeChange": "3fa10aec500a4081c70ceb9a57998af702891944", "commitAfterChange": "a84c4f3464a5f713e18d5891323717c2051b011d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "  static long invokeFunction (int functionId, long tokenVariant, long args)", "signatureAfterChange": "  static long invokeFunction (int functionId, long tokenVariant, long args)", "diff": ["-\t\t\tshort[] type = new short[1]; /* PRUint16 */", "-\t\t\tint rc = variant.GetDataType (type);", "-\t\t\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "-\t\t\tObject temp = convertToJava (variant, type[0]);", "-\t\t\ttype[0] = 0;", "+\t\t\tObject temp = convertToJava (variant);", "-\t\t\t\t\trc = variant.GetDataType (type);", "-\t\t\t\t\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "-\t\t\t\t\ttemp = convertToJava (variant, type[0]);", "+\t\t\t\t\ttemp = convertToJava (variant);"]}], "num": 978}