{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e7598537f47234807ee86ec257bc5b03", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "435bd62af7894e48158139214298fab8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Canvas.java", "commitBeforeChange": "873a9a76611be625b45716322ad5255e3ae4a6fc", "commitAfterChange": "7cb7064af33ca9ed27879223d92b079e0317e481", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void scroll (int destX, int destY, int x, int y, int width, int height, boolean all)", "signatureAfterChange": " public void scroll (int destX, int destY, int x, int y, int width, int height, boolean all)", "diff": ["-//\t\t\tOS.gdk_window_scroll (window, deltaX, deltaY);", "-\t\t\tlong /*int*/ cairo = OS.gdk_cairo_create(window);", "-\t\t\tCairo.cairo_rectangle(cairo, destX, destY, width, height);", "-\t\t\tCairo.cairo_clip(cairo);", "-\t\t\tCairo.cairo_translate(cairo, deltaX, deltaY);", "-\t\t\tCairo.cairo_set_operator(cairo, Cairo.CAIRO_OPERATOR_SOURCE);", "-\t\t\tCairo.cairo_push_group(cairo);", "-\t\t\tOS.gdk_cairo_set_source_window(cairo, window, 0, 0);", "-\t\t\tCairo.cairo_paint(cairo);", "-\t\t\tCairo.cairo_pop_group_to_source(cairo);", "-\t\t\tCairo.cairo_rectangle(cairo, destX - deltaX, destY - deltaY, width, height);", "-\t\t\tCairo.cairo_clip(cairo);", "-\t\t\tCairo.cairo_paint(cairo);", "-\t\t\tCairo.cairo_destroy(cairo);", "+\t\t\tOS.gdk_window_scroll (window, deltaX, deltaY);", "+//\t\t\tlong /*int*/ cairo = OS.gdk_cairo_create(window);", "+//\t\t\tCairo.cairo_rectangle(cairo, destX, destY, width, height);", "+//\t\t\tCairo.cairo_clip(cairo);", "+//\t\t\tCairo.cairo_translate(cairo, deltaX, deltaY);", "+//\t\t\tCairo.cairo_set_operator(cairo, Cairo.CAIRO_OPERATOR_SOURCE);", "+//\t\t\tCairo.cairo_push_group(cairo);", "+//\t\t\tOS.gdk_cairo_set_source_window(cairo, window, 0, 0);", "+//\t\t\tCairo.cairo_paint(cairo);", "+//\t\t\tCairo.cairo_pop_group_to_source(cairo);", "+//\t\t\tCairo.cairo_rectangle(cairo, destX - deltaX, destY - deltaY, width, height);", "+//\t\t\tCairo.cairo_clip(cairo);", "+//\t\t\tCairo.cairo_paint(cairo);", "+//\t\t\tCairo.cairo_destroy(cairo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c8596b25cdf6a53bc33af47f70e465b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolTip.java", "commitBeforeChange": "8768b4b57ea3e0d4a81ed87d1ceddaec1f0f3d74", "commitAfterChange": "7a336975c60c1d054f5553c0be260449fea9c75a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  void configure ()", "signatureAfterChange": "  void configure ()", "diff": ["-\tlong /*int*/ window = gtk_widget_get_window (handle);", "-\t/*", "-\t As methods required to replicate gdk_window_shape_combine_region ()", "-\t are available starting from GTK+ 3, Cairo implementation that replicates", "-\t gdk_region_polygon () should be also available to GTK+ 3.0 and higher.", "-\t */", "-\t if (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "-\t\t long /*int*/ cairo = OS.gdk_cairo_create(window);", "-\t\t int count = polyline.length / 2;", "-\t\t if (count == 0) return;", "-\t\t Cairo.cairo_move_to(cairo, polyline[0], polyline[1]);", "-\t\t for (int i=1,j=2; i<count; i++,j+=2) {", "-\t\t\t Cairo.cairo_move_to(cairo, polyline[j]+0.5, polyline[j+1]+0.5);", "-\t\t }", "-\t\t Cairo.cairo_close_path(cairo);", "-\t\t Cairo.cairo_set_fill_rule(cairo, Cairo.CAIRO_FILL_RULE_EVEN_ODD);", "-\t\t Cairo.cairo_fill(cairo);", "-\t\t long /*int*/ surface = Cairo.cairo_get_target(cairo);", "-\t\t long /*int*/ region = OS.gdk_cairo_region_create_from_surface(surface);", "-\t\t OS.gtk_widget_shape_combine_region (window, region);", "-\t\t Cairo.cairo_destroy(cairo);", "-\t } else {", "-\t\t long /*int*/ rgn = OS.gdk_region_polygon (polyline, polyline.length / 2, OS.GDK_EVEN_ODD_RULE);", "-\t\t OS.gdk_window_shape_combine_region (window, rgn, 0, 0);", "-\t\t OS.gdk_region_destroy (rgn);", "+\tif (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "+\t\tRegion region = new Region (display);", "+\t\tregion.add(polyline);", "+\t\tOS.gtk_widget_shape_combine_region (handle, region.handle);", "+\t\tregion.dispose ();", "+\t} else {", "+\t\tlong /*int*/ window = gtk_widget_get_window (handle);", "+\t\tlong /*int*/ rgn = OS.gdk_region_polygon (polyline, polyline.length / 2, OS.GDK_EVEN_ODD_RULE);", "+\t\tOS.gdk_window_shape_combine_region (window, rgn, 0, 0);", "+\t\tOS.gdk_region_destroy (rgn);"]}], "num": 33245}