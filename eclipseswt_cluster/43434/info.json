{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9ab27bdc8974a543e70e229c781a1a86", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69d2120cfe55f2fa9bd1b8f4ff7334c1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "d34258fe1d04f9f444f8c314b6f7abeb6bbbf98e", "commitAfterChange": "ae9d97e051d77a321720a6ce39eb923499b30ab4", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " public void select (int [] indices)", "signatureAfterChange": " public void select (int [] indices)", "diff": ["-\tcheckWidget();", "+\tcheckWidget ();", "-\tif (length == 0) return;", "+\tif (length == 0 || ((style & SWT.SINGLE) != 0 && length > 1)) return;", "-\t\t\tif ((style & SWT.SINGLE) != 0) {", "-\t\t\t\tids [0] = index + 1;", "-\t\t\t\tcount = 1;", "-\t\t\t} else {", "-\t\t\t\tids [count++] = index + 1;", "-\t\t\t}", "+\t\t\tids [count++] = index + 1;", "-\tselect (ids, count, false, false);", "+\tif (count > 0) select (ids, count, false, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ba638a97e1d6df8e25e0d8c479aca31", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "59b2491032a801ab7176764808e4a778061c6b28", "commitAfterChange": "dd05f312473477c63077f519775dd1f377f4a002", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": " \t LRESULT wmNotifyChild (int wParam, int lParam)", "signatureAfterChange": " \t LRESULT wmNotifyChild (int wParam, int lParam)", "diff": ["-\t\t\t\t\t* The fix is to assign a NULL pointer to pszText rather", "-\t\t\t\t\t* than a pointer to a zero length string.", "+\t\t\t\t\t* The fix is to use a space rather than an empty string", "+\t\t\t\t\t* when anything but a tool tip is requested (to avoid", "+\t\t\t\t\t* a tool tip that is a single space).", "-\t\t\t\t\tif (string.length () == 0 && plvfi.iSubItem == 0) {", "-\t\t\t\t\t\tplvfi.pszText = 0;", "-\t\t\t\t\t\tplvfi.cchTextMax = 0;", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tTCHAR buffer = new TCHAR (getCodePage (), string, false);", "-\t\t\t\t\t\tint byteCount = Math.min (buffer.length (), plvfi.cchTextMax - 1) * TCHAR.sizeof;", "-\t\t\t\t\t\tOS.MoveMemory (plvfi.pszText, buffer, byteCount);", "-\t\t\t\t\t\tOS.MoveMemory (plvfi.pszText + byteCount, new byte [TCHAR.sizeof], TCHAR.sizeof);", "-\t\t\t\t\t\tplvfi.cchTextMax = Math.min (plvfi.cchTextMax, string.length () + 1);", "+\t\t\t\t\tif (!tipRequested && string.length () == 0 && plvfi.iSubItem == 0) {", "+\t\t\t\t\t\tstring = \" \"; //$NON-NLS-1$", "+\t\t\t\t\tTCHAR buffer = new TCHAR (getCodePage (), string, false);", "+\t\t\t\t\tint byteCount = Math.min (buffer.length (), plvfi.cchTextMax - 1) * TCHAR.sizeof;", "+\t\t\t\t\tOS.MoveMemory (plvfi.pszText, buffer, byteCount);", "+\t\t\t\t\tOS.MoveMemory (plvfi.pszText + byteCount, new byte [TCHAR.sizeof], TCHAR.sizeof);", "+\t\t\t\t\tplvfi.cchTextMax = Math.min (plvfi.cchTextMax, string.length () + 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed30e606b23a14b1e4b2c5f7c477c1f8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ea66af2d3b8a57da8a62110cc4c1d680ff66cd69", "commitAfterChange": "ad7ec5ced5d5a1d21cb8d02245df76e46755a417", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " public void setSelection (TableItem [] items)", "signatureAfterChange": " public void setSelection (TableItem [] items)", "diff": ["-\tcheckWidget();", "+\tcheckWidget ();", "-\tif (length == 0) return;", "+\tif (length == 0 || ((style & SWT.SINGLE) != 0 && length > 1)) return;", "-\t\t\tif ((style & SWT.SINGLE) != 0) {", "-\t\t\t\tids [0] = index + 1;", "-\t\t\t\tcount = 1;", "-\t\t\t} else {", "-\t\t\t\tids [count++] = index + 1;", "-\t\t\t}", "+\t\t\tids [count++] = index + 1;", "-\tselect (ids, count, true, false);", "-\tif (count > 0) showIndex (ids [0] - 1);", "+\tif (count > 0) {", "+\t\tselect (ids, count, true, false);", "+\t\tshowIndex (ids [0] - 1);", "+\t}"]}], "num": 43434}