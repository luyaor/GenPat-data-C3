{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e60e522e0350026d46ba2e3a698412a5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8b573ed4b23a7bc4d517a38822e7d33", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "a2f6c56c96d7e25e3d41f0e2f92b4603ac8fff5c", "commitAfterChange": "afb3a79505a19ae9fb8bffcff94849cca01815db", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "\r \r public void setRedraw (boolean redraw)", "signatureAfterChange": "\r \r public void setRedraw (boolean redraw)", "diff": ["+\r", "+\t\t\t/*\r", "+\t\t\t* Bug in Windows.  For some reason, when WM_SETREDRAW is used \r", "+\t\t\t* to turn redraw back on this may result in a WM_SIZE.  If the table column\r", "+\t\t\t* widths are adjusted in the WM_SIZE callback, blank lines may be\r", "+\t\t\t* inserted at the top of the widget.  A call to LVM_GETTOPINDEX will\r", "+\t\t\t* return a negative number (this is an impossible result).  The fix is to\r", "+\t\t\t* ignore any resize generated by WM_SETREDRAW and defer the work\r", "+\t\t\t* until the WM_SETREDRAW has returned.\r", "+\t\t\t*/\r", "+\t\t\tignoreResize = true;\r", "+\t\t\tif (!ignoreResize) {\r", "+\t\t\t\tint count = getChildrenCount ();\r", "+\t\t\t\tif (count > 1 && hdwp == 0) {\r", "+\t\t\t\t\thdwp = OS.BeginDeferWindowPos (count);\r", "+\t\t\t\t}\r", "+\t\t\t\tif (layout != null) layout.layout (this, false);\r", "+\t\t\t\tsendEvent (SWT.Resize);\r", "+\t\t\t\t// widget may be disposed at this point\r", "+\t\t\t\tif (isDisposed ()) return;\r", "+\t\t\t\tint oldHdwp = hdwp;\r", "+\t\t\t\thdwp = 0;\r", "+\t\t\t\tif (oldHdwp != 0) OS.EndDeferWindowPos (oldHdwp);\r", "+\t\t\t}\r", "+\t\t\tignoreResize = false;\r", "+\t\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff1e5da75f434bca056fc86e9f610b7d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "c738133a2fdbe3d60fd9dfabbfd9e737153e1aa5", "commitAfterChange": "c9992cb98fd2a837c866ff6f32642b9e42588c7e", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "  void init(Drawable drawable, GCData data, int gdkGC)", "signatureAfterChange": "  void init(Drawable drawable, GCData data, int gdkGC)", "diff": ["+\tint context = OS.gdk_pango_context_get();", "+\tif (context == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\tdata.context = context;\t", "+\tint layout = OS.pango_layout_new(context);", "+\tif (context == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\tdata.layout = layout;", "+", "-\tif (background != null) OS.gdk_gc_set_background (gdkGC, background);", "+\tif (background != null) OS.gdk_gc_set_background (gdkGC, background);\t", "+\tint font = data.font;", "+\tif (font != 0) OS.pango_context_set_font_description(context, font);", "+"]}], "num": 41529}