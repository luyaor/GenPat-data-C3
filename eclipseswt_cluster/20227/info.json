{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "036670b9a75da1c5089aa42041fc0904", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9459b71eb880590de283b7f5caedbdde", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "f42c053356303e47bc6d7d2682ada8c7675ed0fc", "commitAfterChange": "e37c5d247d99282f597655a55a69f15eb55de4d4", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 61, "signatureBeforeChange": "\r \r int processResize (int callData)", "signatureAfterChange": "\r int XStructureNotify (int w, int client_data, int call_data, int continue_to_dispatch)", "diff": ["-\r", "-int processResize (int callData) {\r", "-\tXConfigureEvent xEvent = new XConfigureEvent ();\r", "-\tOS.memmove (xEvent, callData, XConfigureEvent.sizeof);\r", "-\tswitch (xEvent.type) {\r", "-\t\tcase OS.ReparentNotify: {\r", "-\t\t\tif (reparented) return 0;\r", "-\t\t\treparented = true;\r", "-\t\t\tshort [] root_x = new short [1], root_y = new short [1];\r", "-\t\t\tOS.XtTranslateCoords (shellHandle, (short) 0, (short) 0, root_x, root_y);\r", "-\t\t\tint [] argList = {OS.XmNwidth, 0, OS.XmNheight, 0};\r", "-\t\t\tOS.XtGetValues (shellHandle, argList, argList.length / 2);\t\r", "-\t\t\txEvent.x = root_x [0];  xEvent.y = root_y [0];\r", "-\t\t\txEvent.width = argList [1];  xEvent.height = argList [3];\r", "-\t\t\t// FALL THROUGH\r", "-\t\t}\r", "-\t\tcase OS.ConfigureNotify:\r", "-\t\t\tif (!reparented) return 0;\r", "-\t\t\tconfigured = false;\r", "-\t\t\tif (oldX != xEvent.x || oldY != xEvent.y) sendEvent (SWT.Move);\r", "-\t\t\tif (oldWidth != xEvent.width || oldHeight != xEvent.height) {\r", "-\t\t\t\tXAnyEvent event = new XAnyEvent ();\r", "-\t\t\t\tdisplay.resizeWindow = xEvent.window;\r", "-\t\t\t\tdisplay.resizeWidth = xEvent.width;\r", "-\t\t\t\tdisplay.resizeHeight = xEvent.height;\r", "-\t\t\t\tdisplay.resizeCount = 0;\r", "-\t\t\t\tint checkResizeProc = display.checkResizeProc;\r", "-\t\t\t\tOS.XCheckIfEvent (xEvent.display, event, checkResizeProc, 0);\r", "-\t\t\t\tif (display.resizeCount == 0) {\r", "-\t\t\t\t\tsendEvent (SWT.Resize);\r", "-\t\t\t\t\tif (layout != null) layout (false);\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t\tif (xEvent.x != 0) oldX = xEvent.x;\r", "-\t\t\tif (xEvent.y != 0) oldY = xEvent.y;\r", "-\t\t\toldWidth = xEvent.width;\r", "-\t\t\toldHeight = xEvent.height;\r", "-\t\t\treturn 0;\r", "-\t\tcase OS.UnmapNotify:\r", "-\t\t\tint [] argList = {OS.XmNmappedWhenManaged, 0};\r", "-\t\t\tOS.XtGetValues (shellHandle, argList, argList.length / 2);\r", "-\t\t\tif (argList [1] != 0) {\r", "-\t\t\t\tminimized = true;\r", "-\t\t\t\tsendEvent (SWT.Iconify);\r", "-\t\t\t}\r", "-\t\t\treturn 0;\r", "-\t\tcase OS.MapNotify:\r", "-\t\t\tif (minimized) {\r", "-\t\t\t\tminimized = false;\r", "-\t\t\t\tsendEvent (SWT.Deiconify);\r", "-\t\t\t}\r", "-\t\t\treturn 0;\r", "-\t}\r", "-\treturn 0;\r", "-}\r", "+}\r", "+int XStructureNotify (int w, int client_data, int call_data, int continue_to_dispatch) {\r", "+\tXConfigureEvent xEvent = new XConfigureEvent ();\r", "+\tOS.memmove (xEvent, call_data, XConfigureEvent.sizeof);\r", "+\tswitch (xEvent.type) {\r", "+\t\tcase OS.ReparentNotify: {\r", "+\t\t\tif (reparented) return 0;\r", "+\t\t\treparented = true;\r", "+\t\t\tshort [] root_x = new short [1], root_y = new short [1];\r", "+\t\t\tOS.XtTranslateCoords (shellHandle, (short) 0, (short) 0, root_x, root_y);\r", "+\t\t\tint [] argList = {OS.XmNwidth, 0, OS.XmNheight, 0};\r", "+\t\t\tOS.XtGetValues (shellHandle, argList, argList.length / 2);\t\r", "+\t\t\txEvent.x = root_x [0];  xEvent.y = root_y [0];\r", "+\t\t\txEvent.width = argList [1];  xEvent.height = argList [3];\r", "+\t\t\t// FALL THROUGH\r", "+\t\t}\r", "+\t\tcase OS.ConfigureNotify:\r", "+\t\t\tif (!reparented) return 0;\r", "+\t\t\tconfigured = false;\r", "+\t\t\tif (oldX != xEvent.x || oldY != xEvent.y) sendEvent (SWT.Move);\r", "+\t\t\tif (oldWidth != xEvent.width || oldHeight != xEvent.height) {\r", "+\t\t\t\tXAnyEvent event = new XAnyEvent ();\r", "+\t\t\t\tdisplay.resizeWindow = xEvent.window;\r", "+\t\t\t\tdisplay.resizeWidth = xEvent.width;\r", "+\t\t\t\tdisplay.resizeHeight = xEvent.height;\r", "+\t\t\t\tdisplay.resizeCount = 0;\r", "+\t\t\t\tint checkResizeProc = display.checkResizeProc;\r", "+\t\t\t\tOS.XCheckIfEvent (xEvent.display, event, checkResizeProc, 0);\r", "+\t\t\t\tif (display.resizeCount == 0) {\r", "+\t\t\t\t\tsendEvent (SWT.Resize);\r", "+\t\t\t\t\tif (layout != null) layout (false);\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t\tif (xEvent.x != 0) oldX = xEvent.x;\r", "+\t\t\tif (xEvent.y != 0) oldY = xEvent.y;\r", "+\t\t\toldWidth = xEvent.width;\r", "+\t\t\toldHeight = xEvent.height;\r", "+\t\t\treturn 0;\r", "+\t\tcase OS.UnmapNotify:\r", "+\t\t\tint [] argList = {OS.XmNmappedWhenManaged, 0};\r", "+\t\t\tOS.XtGetValues (shellHandle, argList, argList.length / 2);\r", "+\t\t\tif (argList [1] != 0) {\r", "+\t\t\t\tminimized = true;\r", "+\t\t\t\tsendEvent (SWT.Iconify);\r", "+\t\t\t}\r", "+\t\t\treturn 0;\r", "+\t\tcase OS.MapNotify:\r", "+\t\t\tif (minimized) {\r", "+\t\t\t\tminimized = false;\r", "+\t\t\t\tsendEvent (SWT.Deiconify);\r", "+\t\t\t}\r", "+\t\t\treturn 0;\r", "+\t}\r", "+\treturn 0;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8d6df7968309d9bcb433a82bc770807", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 40, "signatureBeforeChange": "  int processResize (Object callData)", "signatureAfterChange": "  int kEventWindowHidden (int nextHandler, int theEvent, int userData)", "diff": ["+", "+int kEventWindowHidden (int nextHandler, int theEvent, int userData) {", "+\tint result = super.kEventWindowHidden (nextHandler, theEvent, userData);", "+\tif (result == OS.noErr) return result;", "+\tShell [] shells = getShells ();", "+\tfor (int i=0; i<shells.length; i++) {", "+\t\tShell shell = shells [i];", "+\t\tif (!shell.isDisposed ()) shell.setWindowVisible (false);", "+\t}", "+\treturn OS.eventNotHandledErr;", "+}", "-int processResize (Object callData) {", "-", "-\tMacRect bounds= new MacRect();", "-", "-\t// outside bounds and location", "-\tOS.GetWindowBounds(shellHandle, OS.kWindowStructureRgn, bounds.getData());", "-\tint x= bounds.getX();", "-\tint y= bounds.getY();", "-", "-\t// inside bounds and location", "-\tOS.GetWindowBounds(shellHandle, OS.kWindowContentRgn, bounds.getData());", "-\tint w= bounds.getWidth();", "-\tint h= bounds.getHeight();", "-\t\t", "-\tboolean positionChanged= (oldX != x || oldY != y);", "-\tboolean sizeChanged= (oldWidth != w || oldHeight != h);", "-", "-\tif (scrolledHandle != 0 && sizeChanged) {", "-\t\thandleResize(scrolledHandle, new MacRect(0, 0, w, h));", "-\t}", "-\t", "-\tif (positionChanged) {", "-\t\t//System.out.println(\"Shell.send: SWT.Move\");", "-\t\tsendEvent(SWT.Move);", "-\t}", "-\t", "-\tif (sizeChanged) {", "-\t\t//System.out.println(\"Shell.send: SWT.Resize\");", "-\t\tsendEvent (SWT.Resize);", "-\t\tif (layout != null)", "-\t\t\tlayout (false);", "-\t}", "-\t", "-\tif (!OS.IsWindowVisible(shellHandle))", "-\t\treturn 0;", "-", "-\t", "-\tif (x != 0) oldX = x;", "-\tif (y != 0) oldY = y;", "-\toldWidth = w;", "-\toldHeight = h;", "-", "-    /* AW", "-\tXConfigureEvent xEvent = new XConfigureEvent ();", "-\tOS.memmove (xEvent, callData, XConfigureEvent.sizeof);", "-\tswitch (xEvent.type) {", "-\t\tcase OS.ReparentNotify: {", "-\t\t\tif (reparented) return 0;", "-\t\t\treparented = true;", "-\t\t\tshort [] root_x = new short [1], root_y = new short [1];", "-\t\t\tOS.XtTranslateCoords (scrolledHandle, (short) 0, (short) 0, root_x, root_y);", "-\t\t\tint [] argList = {OS.XmNwidth, 0, OS.XmNheight, 0};", "-\t\t\tOS.XtGetValues (scrolledHandle, argList, argList.length / 2);", "-\t\t\txEvent.x = root_x [0];  xEvent.y = root_y [0];", "-\t\t\txEvent.width = argList [1];  xEvent.height = argList [3];", "-\t\t\t// fall through", "-\t\t}", "-\t\tcase OS.ConfigureNotify:", "-\t\t\tif (!reparented) return 0;", "-\t\t\tif (oldX != xEvent.x || oldY != xEvent.y) sendEvent (SWT.Move);", "-\t\t\tif (oldWidth != xEvent.width || oldHeight != xEvent.height) {", "-\t\t\t\tsendEvent (SWT.Resize);", "-\t\t\t\tif (layout != null) layout (false);", "-\t\t\t}", "-\t\t\tif (xEvent.x != 0) oldX = xEvent.x;", "-\t\t\tif (xEvent.y != 0) oldY = xEvent.y;", "-\t\t\toldWidth = xEvent.width;", "-\t\t\toldHeight = xEvent.height;", "-\t\t\treturn 0;", "-\t\tcase OS.UnmapNotify:", "-\t\t\tint [] argList = {OS.XmNmappedWhenManaged, 0};", "-\t\t\tOS.XtGetValues (shellHandle, argList, argList.length / 2);", "-\t\t\tif (argList [1] != 0) {", "-\t\t\t\tminimized = true;", "-\t\t\t\tsendEvent (SWT.Iconify);", "-\t\t\t}", "-\t\t\treturn 0;", "-\t\tcase OS.MapNotify:", "-\t\t\tif (minimized) {", "-\t\t\t\tminimized = false;", "-\t\t\t\tsendEvent (SWT.Deiconify);", "-\t\t\t}", "-\t\t\treturn 0;", "-\t}", "-    */", "-\treturn 0;", "-}"]}], "num": 20227}