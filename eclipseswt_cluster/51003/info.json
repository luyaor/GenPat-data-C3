{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6a25e96712558d35808b829cc0b81f9d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9d8c2ee83e182d57cefe923d949da14", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "336b48f0e24bfd875ba417243e386132aec752ef", "commitAfterChange": "dc566e87e485fe5f0487a25503163ad99c82fd7c", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "  LRESULT WM_NCPAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_NCPAINT (int wParam, int lParam)", "diff": ["-\tint result = callWindowProc (handle, OS.WM_NCPAINT, wParam, lParam);", "+\tLRESULT result = super.WM_NCPAINT (wParam, lParam);", "+\tif (result != null) return result;", "-\t\tif (OS.COMCTL32_MAJOR >= 6 && OS.IsAppThemed ()) {", "-\t\t\tint bits = OS.GetWindowLong (handle, OS.GWL_EXSTYLE);", "-\t\t\tif ((bits & OS.WS_EX_CLIENTEDGE) != 0) {", "-\t\t\t\tint hDC = OS.GetWindowDC (handle);", "-\t\t\t\tRECT rect = new RECT ();", "-\t\t\t\tOS.GetWindowRect (handle, rect);", "-\t\t\t\trect.right -= rect.left;", "-\t\t\t\trect.bottom -= rect.top;", "-\t\t\t\trect.left = rect.top = 0;", "-\t\t\t\tint border = OS.GetSystemMetrics (OS.SM_CXEDGE);", "-\t\t\t\tOS.ExcludeClipRect (hDC, border, border, rect.right - border, rect.bottom - border);", "-\t\t\t\tint hTheme = OS.OpenThemeData (handle, EDIT);", "-\t\t\t\tOS.DrawThemeBackground (hTheme, hDC, OS.EP_EDITTEXT, OS.ETS_NORMAL, rect, null);", "-\t\t\t\tOS.CloseThemeData (handle);", "-\t\t\t\tOS.ReleaseDC (handle, hDC);", "-\t\t\t}", "-\t\t}", "+\t\tresult = wmNCPaint (handle, wParam, lParam);", "-\treturn new LRESULT (result);", "+\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cdcce12cf8aa86493ed70e9a9107dd6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Canvas.java", "commitBeforeChange": "4b7ac62e4c7abc2bdb8c97e1ee5fae6064a184d8", "commitAfterChange": "49a0d281d71c7b0b4f050c8585ea47184b029cc7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "  int kEventTextInputOffsetToPos (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventTextInputOffsetToPos (int nextHandler, int theEvent, int userData)", "diff": ["-\tif (!hooks (SWT.ImeComposition)) return OS.eventNotHandledErr;", "-\tif (caret == null) return OS.eventNotHandledErr;", "-\torg.eclipse.swt.internal.carbon.Point pt = new org.eclipse.swt.internal.carbon.Point ();", "-\tint sizeof = org.eclipse.swt.internal.carbon.Point.sizeof;", "-\torg.eclipse.swt.graphics.Point point = toDisplay (caret.x, caret.y + caret.height);", "-\tpt.h = (short)point.x;", "-\tpt.v = (short)point.y;", "-\tOS.SetEventParameter (theEvent, OS.kEventParamTextInputReplyPoint, OS.typeQDPoint, sizeof, pt);", "-\treturn OS.noErr;", "+\tif (ime != null) {", "+\t\tint result = ime.kEventTextInputOffsetToPos (nextHandler, theEvent, userData);", "+\t\tif (result != OS.eventNotHandledErr) return result;", "+\t}", "+\treturn super.kEventTextInputOffsetToPos (nextHandler, theEvent, userData);"]}], "num": 51003}