{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5099c8c4286205cb14891b741c3c7199", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09854e92f6a029b0a9ebc93dcc5cb785", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "527e849a2526f3d8802def278cb1e6f6d555176e", "commitAfterChange": "732b93a3746a83c09a87316a75d0a62edeb31a1a", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r void moveUp(CoolItem item, int x_root)", "signatureAfterChange": "\r void moveUp(CoolItem item, int x_root)", "diff": ["-\tint oldRowIndex = getRowIndex(item);\r", "-\tVector oldRowItems = (Vector) rows.elementAt(oldRowIndex);\r", "-\tif (oldRowIndex == 0 && oldRowItems.size() == 1) {\r", "+\tPoint point = findItem(item);\r", "+\tint oldRowIndex = point.y;\r", "+\tif (oldRowIndex == 0 && items[oldRowIndex].length == 1) {\r", "-\t\r", "-\tremoveItemFromRow(item, oldRowItems);\r", "-\tint newRowIndex = oldRowIndex - 1;\r", "-\tint newRowY = ROW_SPACING;\r", "-\tfor (int i = 0; i < newRowIndex; i++) {\r", "-\t\tnewRowY += getRowHeight(i) + ROW_SPACING;\t\r", "-\t}\r", "-\t\r", "+\tremoveItemFromRow(item, oldRowIndex);\r", "+\tRectangle old = item.getBounds();\r", "+\tredraw(old.x, old.y, CoolItem.MINIMUM_WIDTH, old.height, false);\r", "+\tint newRowIndex = Math.max(0, oldRowIndex - 1);\r", "-\t\tVector newRow = new Vector(10);\r", "-\t\tinsertItemIntoRow(item, newRow, x_root, newRowY);\r", "-\t\trows.insertElementAt(newRow, 0);\r", "-\t\tadjustItemHeights(0);\r", "+\t\tCoolItem[][] newRows = new CoolItem[items.length + 1][];\r", "+\t\tSystem.arraycopy(items, 0, newRows, 1, items.length);\r", "+\t\tnewRows[0] = new CoolItem[1];\r", "+\t\tnewRows[0][0] = item;\r", "+\t\titems = newRows;\r", "+\t}\r", "+\telse {\r", "+\t\tinsertItemIntoRow(item, newRowIndex, x_root);\r", "+\t}\r", "+\trelayout();\r", "+}\r", "-\t\r", "-\tVector newRowItems = (Vector) rows.elementAt(newRowIndex);\r", "-\tinsertItemIntoRow(item, newRowItems, x_root, newRowY);\r", "-\tadjustItemHeights(newRowIndex);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f60a692003f7ae2e2ee56dce5145bde", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "527e849a2526f3d8802def278cb1e6f6d555176e", "commitAfterChange": "732b93a3746a83c09a87316a75d0a62edeb31a1a", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r void moveDown(CoolItem item, int x_root)", "signatureAfterChange": "\r void moveDown(CoolItem item, int x_root)", "diff": ["-\tint oldRowIndex = getRowIndex(item);\r", "-\tVector oldRowItems = (Vector) rows.elementAt(oldRowIndex);\t\r", "-\tif (oldRowIndex == rows.size() - 1 && oldRowItems.size() == 1) {\r", "+\tint oldRowIndex = findItem(item).y;\r", "+\tif (oldRowIndex == items.length - 1 && items[oldRowIndex].length == 1) {\r", "-\t\r", "-\tint newRowIndex = (oldRowItems.size() == 1) ? oldRowIndex : oldRowIndex + 1;\r", "-\tremoveItemFromRow(item, oldRowItems);\r", "-\t\r", "-\tint newRowY = ROW_SPACING;\r", "-\tfor (int i = 0; i < newRowIndex; i++) {\r", "-\t\tnewRowY += getRowHeight(i) + ROW_SPACING;\t\r", "-\t}\r", "-\t\r", "-\tif (newRowIndex == rows.size()) {\r", "+\tint newRowIndex = (items[oldRowIndex].length == 1) ? oldRowIndex : oldRowIndex + 1;\r", "+\tremoveItemFromRow(item, oldRowIndex);\r", "+\tRectangle old = item.getBounds();\r", "+\tredraw(old.x, old.y, CoolItem.MINIMUM_WIDTH, old.height, false);\r", "+\tif (newRowIndex == items.length) {\r", "-\t\tVector newRow = new Vector(10);\r", "-\t\tinsertItemIntoRow(item, newRow, x_root, newRowY);\r", "-\t\trows.addElement(newRow);\r", "-\t\tadjustItemHeights(oldRowIndex);\r", "-\t\treturn;\r", "+\t\tCoolItem[][] newRows = new CoolItem[items.length + 1][];\r", "+\t\tSystem.arraycopy(items, 0, newRows, 0, items.length);\r", "+\t\tint row = items.length;\r", "+\t\tnewRows[row] = new CoolItem[1];\r", "+\t\tnewRows[row][0] = item;\r", "+\t\titems = newRows;\r", "-\t\r", "-\tVector newRowItems = (Vector) rows.elementAt(newRowIndex);\r", "-\tinsertItemIntoRow(item, newRowItems, x_root, newRowY);\r", "-\tadjustItemHeights(oldRowIndex);\r", "+\telse {\t\r", "+\t\tinsertItemIntoRow(item, newRowIndex, x_root);\r", "+\t}\r", "+\trelayout();\r"]}], "num": 9739}