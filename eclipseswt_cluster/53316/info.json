{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c1fec3cedf84ea6d3fca0ced9664842", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa8623d125f66c3c42d19f29acdaf1a1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "cd052a67830e2dfce04e2d02ba6794766effaa3f", "commitAfterChange": "edb3c448d2e5db9ed24e3e9c1106a87ac7fb5993", "methodNumberBeforeChange": 143, "methodNumberAfterChange": 143, "signatureBeforeChange": "  LRESULT WM_HSCROLL (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_HSCROLL (int wParam, int lParam)", "diff": ["-\t* When there are many columns in a table, scrolling performance", "-\t* can be improved by temporarily unsubclassing the window proc", "-\t* so that internal messages are dispatched directly to the table.", "-\t* If the application expects to see a paint event or has a child", "-\t* whose font, foreground or background color might be needed,", "-\t* the window proc cannot be unsubclassed", "+\t* Feature in Windows.  When there are many columns in a table,", "+\t* scrolling performance can be improved by unsubclassing the", "+\t* window proc so that internal messages are dispatched directly", "+\t* to the table.  If the application expects to see a paint event", "+\t* or has a child whose font, foreground or background color might", "+\t* be needed, the window proc cannot be unsubclassed", "+\t", "+\t/*", "+\t* Feature in Windows.  For some reason, when the table window", "+\t* proc processes WM_HSCROLL or WM_VSCROLL when there are many", "+\t* columns in the table, scrolling is slow and the table does", "+\t* not keep up with the position of the scroll bar.  The fix", "+\t* is to turn off redraw, scroll, turn redraw back on and redraw", "+\t* the entire table.  Strangly, redrawing the entire table is", "+\t* faster.", "+\t*/", "+\tboolean fixScroll = false;", "+\tif (OS.COMCTL32_MAJOR >= 6 && columnCount > SCROLL_LIMIT) {", "+\t\tfixScroll = drawCount == 0 && OS.IsWindowVisible (handle);", "+\t}", "+\tif (fixScroll) OS.DefWindowProc (handle, OS.WM_SETREDRAW, 0, 0);", "+\tif (fixScroll) {", "+\t\tOS.DefWindowProc (handle, OS.WM_SETREDRAW, 1, 0);", "+\t\tint flags = OS.RDW_ERASE | OS.RDW_FRAME | OS.RDW_INVALIDATE | OS.RDW_ALLCHILDREN;", "+\t\tOS.RedrawWindow (handle, null, 0, flags);", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02fbd2521044aa1c80596e663fbb2e1c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "cd052a67830e2dfce04e2d02ba6794766effaa3f", "commitAfterChange": "edb3c448d2e5db9ed24e3e9c1106a87ac7fb5993", "methodNumberBeforeChange": 144, "methodNumberAfterChange": 144, "signatureBeforeChange": "  LRESULT WM_VSCROLL (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_VSCROLL (int wParam, int lParam)", "diff": ["+", "+\t/*", "+\t* Feature in Windows.  For some reason, when the table window", "+\t* proc processes WM_HSCROLL or WM_VSCROLL when there are many", "+\t* columns in the table, scrolling is slow and the table does", "+\t* not keep up with the position of the scroll bar.  The fix", "+\t* is to turn off redraw, scroll, turn redraw back on and redraw", "+\t* the entire table.  Strangly, redrawing the entire table is", "+\t* faster.", "+\t*/", "+\tboolean fixScroll = false;", "+\tif (OS.COMCTL32_MAJOR >= 6 && columnCount > SCROLL_LIMIT) {", "+\t\tfixScroll = drawCount == 0 && OS.IsWindowVisible (handle);", "+\t}", "+\tif (fixScroll) OS.DefWindowProc (handle, OS.WM_SETREDRAW, 0, 0);", "+\tif (fixScroll) {", "+\t\tOS.DefWindowProc (handle, OS.WM_SETREDRAW, 1, 0);", "+\t\tint flags = OS.RDW_ERASE | OS.RDW_FRAME | OS.RDW_INVALIDATE | OS.RDW_ALLCHILDREN;", "+\t\tOS.RedrawWindow (handle, null, 0, flags);", "+\t}", "+\t"]}], "num": 53316}