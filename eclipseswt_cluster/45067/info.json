{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f589cef02551d9165a0be988611ac05", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8320ec6d1223c89073d8893a16e5d214", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "d2b2731da124108eb5bccfe6363ec342d70dfbc1", "commitAfterChange": "6fa64c0ca137224ae52d6423153f9854a4e2c074", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 54, "signatureBeforeChange": "  void releaseWidget ()", "signatureAfterChange": " \t void releaseWidget ()", "diff": ["-void releaseWidget () {", "-\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "-\tint columnCount = OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0);", "-\tif (columnCount == 1 && columns [0] == null) columnCount = 0;", "-\tint itemCount = OS.SendMessage (handle, OS.LVM_GETITEMCOUNT, 0, 0);", "-\t/*", "-\t* Feature in Windows 98.  When there are a large number", "-\t* of columns and items in a table (>1000) where each", "-\t* of the subitems in the table has a string, it is much", "-\t* faster to delete each item with LVM_DELETEITEM rather", "-\t* than using LVM_DELETEALLITEMS.  The fix is to detect", "-\t* this case and delete the items, one by one.  The fact", "-\t* that the fix is only necessary on Windows 98 was", "-\t* confirmed using version 5.81 of COMCTL32.DLL on both", "-\t* Windows 98 and NT.", "-\t*", "-\t* NOTE: LVM_DELETEALLITEMS is also sent by the table", "-\t* when the table is destroyed.", "-\t*/\t", "-\tif (OS.IsWin95 && columnCount > 1) {", "-\t\t/* Turn off redraw and leave it off */", "-\t\tOS.SendMessage (handle, OS.WM_SETREDRAW, 0, 0);", "-\t\tfor (int i=itemCount-1; i>=0; --i) {", "-\t\t\tTableItem item = items [i];", "-\t\t\tignoreSelect = ignoreShrink = true;", "-\t\t\tOS.SendMessage (handle, OS.LVM_DELETEITEM, i, 0);", "-\t\t\tignoreSelect = ignoreShrink = false;", "-\t\t\tif (item != null && !item.isDisposed ()) item.releaseResources ();", "-\t} else {\t", "-\t\tfor (int i=0; i<itemCount; i++) {", "-\t\t\tTableItem item = items [i];", "-\t\t\tif (item != null && !item.isDisposed ()) item.releaseResources ();", "-\t\t}", "+\t", "+void releaseWidget () {", "+\tsuper.releaseWidget ();", "-\titems = null;", "-\tfor (int i=0; i<columnCount; i++) {", "-\t\tTableColumn column = columns [i];", "-\t\tif (!column.isDisposed ()) column.releaseResources ();", "-\t}", "-\tcolumns = null;", "+\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "-\tsuper.releaseWidget ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "153b8ec6178b0df690d40b60fa95507c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "1c6a4189f07d97e9405f58322637972f78a68429", "commitAfterChange": "a11744334121c31b812d90d1d6c723eac3d03dc2", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "\r \r void releaseWidget ()", "signatureAfterChange": "\r \r void releaseWidget ()", "diff": ["-\t\r", "+\r", "-\t* of items in a table (>1000), it is much faster to\r", "-\t* delete each item with LVM_DELETEITEM rather than\r", "-\t* using LVM_DELETEALLITEMS.  The fix is to delete the\r", "-\t* items, one by one.\r", "+\t* of columns and items in a table (>1000) where each\r", "+\t* of the subitems in the table has a string, it is much\r", "+\t* faster to delete each item with LVM_DELETEITEM rather\r", "+\t* than using LVM_DELETEALLITEMS.  The fix is to detect\r", "+\t* this case and delete the items, one by one.\r", "-\t*/\r", "-\t/* Turn off redraw and leave it off */\r", "-\tOS.SendMessage (handle, OS.WM_SETREDRAW, 0, 0);\r", "-\tfor (int i=itemCount-1; i>=0; --i) {\r", "-\t\tignoreSelect = true;\r", "-\t\tOS.SendMessage (handle, OS.LVM_DELETEITEM, i, 0);\r", "-\t\tignoreSelect = false;\r", "-\t\tTableItem item = items [i];\r", "-\t\tif (!item.isDisposed ()) item.releaseResources ();\r", "+\t*/\t\r", "+\tif (columnCount > 1) {\r", "+\t\t/* Turn off redraw and leave it off */\r", "+\t\tOS.SendMessage (handle, OS.WM_SETREDRAW, 0, 0);\r", "+\t\tfor (int i=itemCount-1; i>=0; --i) {\r", "+\t\t\tignoreSelect = true;\r", "+\t\t\tOS.SendMessage (handle, OS.LVM_DELETEITEM, i, 0);\r", "+\t\t\tignoreSelect = false;\r", "+\t\t\tTableItem item = items [i];\r", "+\t\t\tif (!item.isDisposed ()) item.releaseResources ();\r", "+\t\t}\r", "+\t} else {\t\r", "+\t\tfor (int i=0; i<itemCount; i++) {\r", "+\t\t\tTableItem item = items [i];\r", "+\t\t\tif (!item.isDisposed ()) item.releaseWidget ();\r", "+\t\t}\r", "-\t\r", "-\t/*\r", "-\t* This code is intentionally commmented.  This is\r", "-\t* the correct code, assuming that the problem with\r", "-\t* LVM_DELETEALLITEMS did not occur.\r", "-\t*/\r", "-//\tfor (int i=0; i<itemCount; i++) {\r", "-//\t\tTableItem item = items [i];\r", "-//\t\tif (!item.isDisposed ()) item.releaseWidget ();\r", "-//\t}\r", "-\r"]}], "num": 45067}