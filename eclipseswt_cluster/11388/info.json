{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "43abe2bad9bd3d9cd56897d63d4f6a75", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7284ae998e354392b7e1159b56fca886", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/carbon/org/eclipse/swt/program/Program.java", "commitBeforeChange": "14581ca5a7841e362a4bb6a68c76d00675c70760", "commitAfterChange": "2882bbd7423650466596733b7f7109e5d58042c8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 9, "signatureBeforeChange": "  static Program getProgram (String key)", "signatureAfterChange": "  static Program getProgram(byte[] fsRef)", "diff": ["-", "-static Program getProgram (String key) {", "-\tString[] extentions = getExtensions();", "-\tint i = 0;", "-\twhile (i < extentions.length) {", "-\t\tString ext = extentions[i];", "-\t\tif (ext.equals(key)) break;", "-\t\ti++;", "-\t}", "-\tif (i == extentions.length) return null;", "-", "-\t/* Name */", "-\tString name = key;", "-\tif (name == null || name.length () == 0) return null;", "-", "-\t/* Command */", "-\tString command = \"/usr/bin/open %f\";", "-", "-\t/* Icon */", "-\tString iconName = \"icon\";", "-", "-\tProgram program = new Program ();", "-\tprogram.name = name;", "-\tprogram.command = command;", "-\tprogram.iconName = iconName;", "-\treturn program;", "+", "+static Program getProgram(byte[] fsRef) {", "+\tString name = \"\";", "+\tint[] namePtr = new int[1];", "+\tOS.LSCopyDisplayNameForRef(fsRef, namePtr);", "+\tif (namePtr[0] != 0) {", "+\t\tint length = OS.CFStringGetLength(namePtr[0]);", "+\t\tif (length != 0) {", "+\t\t\tchar[] buffer= new char[length];", "+\t\t\tCFRange range = new CFRange();", "+\t\t\trange.length = length;", "+\t\t\tOS.CFStringGetCharacters(namePtr[0], range, buffer);", "+\t\t\tname = new String(buffer);", "+\t\t}", "+\t\tOS.CFRelease(namePtr[0]);", "+\t}", "+\tProgram program = new Program();", "+\tprogram.fsRef = fsRef;", "+\tprogram.name = name;", "+\treturn program;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99b3917222d54c8301880c41e226e8aa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void setBackground (int columnIndex, Color value)", "signatureAfterChange": " int getGlobalIndex()", "diff": ["+int getGlobalIndex() {", "+\tint globalItemIndex = getIndex();", "+\tAbstractTreeItem item = null;", "+\tif (isRoot() == false) {", "+\t\titem = getParentItem();", "+\t\tglobalItemIndex++;\t\t\t\t\t\t// adjust for 0-based non-root items", "+\telse {\t", "+\t\titem = getParent().getRoot();", "+\t}", "+", "+\tglobalItemIndex += item.getVisibleIndex(getIndex());", "+\treturn globalItemIndex;", "+}", "-}", "-public void setBackground (int columnIndex, Color value) {", "-\tcheckWidget ();", "-\tif (value != null && value.isDisposed ()) {", "-\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);", "-\t}", "-\tint validColumnCount = Math.max (1, parent.getColumnCount());", "-\tif (!(0 <= columnIndex && columnIndex < validColumnCount)) return;", "-\tif (cellBackground == null) {", "-\t\tcellBackground = new Color [validColumnCount];", "-\t}", "-\tif (cellBackground [columnIndex] == value) return;", "-\tif (cellBackground [columnIndex] != null && cellBackground [columnIndex].equals (value)) return;", "-\tcellBackground [columnIndex] = value;", "-\tredrawItem ();", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ac900d12357d2f1ec92a1f5dfe347a0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 58, "signatureBeforeChange": " public void setForeground (int columnIndex, Color value)", "signatureAfterChange": "  public void setText(String newText)", "diff": ["+", "+public void setText(String newText) {", "+\tcheckWidget();", "+\tTree2 parent = getParent();\t", "+\tString oldText = getText();", "+\tint redrawX = 0;", "+\tint redrawWidth = 0;", "+", "+\tif (newText == null) {", "+\t\terror(SWT.ERROR_NULL_ARGUMENT);", "+\t}", "+\tsuper.setText(newText);\t", "+\tif (newText.equals(oldText) == false) {", "+\t\tif (parent.getVisibleRedrawY(this) != -1) {", "+\t\t\tredrawX = getTextXPos();", "+\t\t\tredrawWidth = parent.getClientArea().width - redrawX;", "+\t\t}", "+\t\tparent.itemChanged(this, redrawX, redrawWidth);", "+\t}", "+}", "-}", "-public void setForeground (int columnIndex, Color value) {", "-\tcheckWidget ();", "-\tif (value != null && value.isDisposed ()) {", "-\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);", "-\t}", "-\tint validColumnCount = Math.max(1, parent.getColumnCount ());", "-\tif (!(0 <= columnIndex && columnIndex < validColumnCount)) return;", "-\tif (cellForeground == null) {", "-\t\tcellForeground = new Color [validColumnCount];", "-\t}", "-\tif (cellForeground [columnIndex] == value) return;", "-\tif (cellForeground [columnIndex] != null && cellForeground [columnIndex].equals (value)) return;", "-\tcellForeground [columnIndex] = value;", "-\tredrawItem ();", "-}"]}], "num": 11388}