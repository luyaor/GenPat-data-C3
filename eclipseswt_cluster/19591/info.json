{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "93032354ba775c4daad05bcb64f6b4f3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2fa1c714bf6964a6f4d4f7d1830a7db", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "33a44d8f9cd8fb97f47f03bd3dfd0a34047d5e0b", "commitAfterChange": "eb5fa7d6608bbc21cdb8c7606a37ce0601413346", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["+\t\t* Check for proxy values set as documented java properties and update mozilla's", "+\t\t* preferences with these values if needed.", "+\t\t*/", "+\t\tString proxyHost = System.getProperty (PROPERTY_PROXYHOST);", "+\t\tString proxyPortString = System.getProperty (PROPERTY_PROXYPORT);", "+", "+\t\tint port = -1;", "+\t\tif (proxyPortString != null) {", "+\t\t\ttry {", "+\t\t\t\tint value = Integer.valueOf (proxyPortString).intValue ();", "+\t\t\t\tif (0 <= value && value <= MAX_PORT) port = value;", "+\t\t\t} catch (NumberFormatException e) {", "+\t\t\t\t/* do nothing, java property has non-integer value */", "+\t\t\t}", "+\t\t}", "+", "+\t\tif (proxyHost != null) {", "+\t\t\tbyte[] contractID = MozillaDelegate.wcsToMbcs (null, XPCOM.NS_PREFLOCALIZEDSTRING_CONTRACTID, true);", "+\t\t\trc = componentManager.CreateInstanceByContractID (contractID, 0, nsIPrefLocalizedString.NS_IPREFLOCALIZEDSTRING_IID, result);", "+\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\tif (result[0] == 0) error (XPCOM.NS_NOINTERFACE);", "+", "+\t\t\tlocalizedString = new nsIPrefLocalizedString (result[0]);", "+\t\t\tresult[0] = 0;", "+\t\t\tint length = proxyHost.length ();", "+\t\t\tchar[] charBuffer = new char[length + 1];", "+\t\t\tproxyHost.getChars (0, length, charBuffer, 0);", "+\t\t\trc = localizedString.SetDataWithLength (length, charBuffer);", "+\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\tbuffer = MozillaDelegate.wcsToMbcs (null, PREFERENCE_PROXYHOST_FTP, true);", "+\t\t\trc = prefBranch.SetComplexValue (buffer, nsIPrefLocalizedString.NS_IPREFLOCALIZEDSTRING_IID, localizedString.getAddress ());", "+\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\tbuffer = MozillaDelegate.wcsToMbcs (null, PREFERENCE_PROXYHOST_HTTP, true);", "+\t\t\trc = prefBranch.SetComplexValue (buffer, nsIPrefLocalizedString.NS_IPREFLOCALIZEDSTRING_IID, localizedString.getAddress ());", "+\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\tbuffer = MozillaDelegate.wcsToMbcs (null, PREFERENCE_PROXYHOST_SSL, true);", "+\t\t\trc = prefBranch.SetComplexValue (buffer, nsIPrefLocalizedString.NS_IPREFLOCALIZEDSTRING_IID, localizedString.getAddress ());", "+\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\tlocalizedString.Release ();", "+\t\t}", "+", "+\t\tif (port != -1) {", "+\t\t\tbuffer = MozillaDelegate.wcsToMbcs (null, PREFERENCE_PROXYPORT_FTP, true);", "+\t\t\trc = prefBranch.SetIntPref (buffer, port);", "+\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\tbuffer = MozillaDelegate.wcsToMbcs (null, PREFERENCE_PROXYPORT_HTTP, true);", "+\t\t\trc = prefBranch.SetIntPref (buffer, port);", "+\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\tbuffer = MozillaDelegate.wcsToMbcs (null, PREFERENCE_PROXYPORT_SSL, true);", "+\t\t\trc = prefBranch.SetIntPref (buffer, port);", "+\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t}", "+", "+\t\tif (proxyHost != null || port != -1) {", "+\t\t\tbuffer = MozillaDelegate.wcsToMbcs (null, PREFERENCE_PROXYTYPE, true);", "+\t\t\trc = prefBranch.SetIntPref (buffer, 1);", "+\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t}", "+", "+\t\t/*", "+", "-\tupdateProxy ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3b848587f7eb722de70ba07329cb585", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "207a4b25fd56c9312ed63c7b379bc292f193f84c", "commitAfterChange": "18ce373e262126236e66fff74f7d2ddc7fffb312", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 109, "signatureBeforeChange": "  void initPreferences (nsIServiceManager serviceManager, nsIComponentManager componentManager)", "signatureAfterChange": "  void initPreferences (nsIServiceManager serviceManager, nsIComponentManager componentManager)", "diff": ["+\t\t", "-\t\tchar[] charBuffer = new char[length + 1];", "+\t\tchar[] charBuffer = new char[length];", "+", "+\t\trc = prefBranch.GetComplexValue (buffer, nsIPrefLocalizedString.NS_IPREFLOCALIZEDSTRING_IID, result);", "+\t\tif (rc == XPCOM.NS_OK && result[0] != 0) {", "+\t\t\tnsIPrefLocalizedString value = new nsIPrefLocalizedString (result[0]);", "+\t\t\tresult[0] = 0;", "+\t\t\trc = value.ToString (result);", "+\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\tif (result[0] == 0) error (XPCOM.NS_ERROR_NULL_POINTER);", "+\t\t\tlength = XPCOM.strlen_PRUnichar (result[0]);", "+\t\t\tchar[] dest = new char[length];", "+\t\t\tXPCOM.memmove (dest, result[0], length * 2);", "+\t\t\toldProxyHostFTP = new String (dest);", "+\t\t} else {", "+\t\t\t/* value is default */", "+\t\t\toldProxyHostFTP = DEFAULTVALUE_STRING;", "+\t\t}", "+\t\tresult[0] = 0;", "+", "+\t\trc = prefBranch.GetComplexValue (buffer, nsIPrefLocalizedString.NS_IPREFLOCALIZEDSTRING_IID, result);", "+\t\tif (rc == XPCOM.NS_OK && result[0] != 0) {", "+\t\t\tnsIPrefLocalizedString value = new nsIPrefLocalizedString (result[0]);", "+\t\t\tresult[0] = 0;", "+\t\t\trc = value.ToString (result);", "+\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\tif (result[0] == 0) error (XPCOM.NS_ERROR_NULL_POINTER);", "+\t\t\tlength = XPCOM.strlen_PRUnichar (result[0]);", "+\t\t\tchar[] dest = new char[length];", "+\t\t\tXPCOM.memmove (dest, result[0], length * 2);", "+\t\t\toldProxyHostHTTP = new String (dest);", "+\t\t} else {", "+\t\t\t/* value is default */", "+\t\t\toldProxyHostHTTP = DEFAULTVALUE_STRING;", "+\t\t}", "+\t\tresult[0] = 0;", "+", "+\t\trc = prefBranch.GetComplexValue (buffer, nsIPrefLocalizedString.NS_IPREFLOCALIZEDSTRING_IID, result);", "+\t\tif (rc == XPCOM.NS_OK && result[0] != 0) {", "+\t\t\tnsIPrefLocalizedString value = new nsIPrefLocalizedString (result[0]);", "+\t\t\tresult[0] = 0;", "+\t\t\trc = value.ToString (result);", "+\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\tif (result[0] == 0) error (XPCOM.NS_ERROR_NULL_POINTER);", "+\t\t\tlength = XPCOM.strlen_PRUnichar (result[0]);", "+\t\t\tchar[] dest = new char[length];", "+\t\t\tXPCOM.memmove (dest, result[0], length * 2);", "+\t\t\toldProxyHostSSL = new String (dest);", "+\t\t} else {", "+\t\t\t/* value is default */", "+\t\t\toldProxyHostSSL = DEFAULTVALUE_STRING;", "+\t\t}", "+\t\tresult[0] = 0;", "+", "+\tint[] intResult = new int[1]; /* C long*/", "+\t\trc = prefBranch.GetIntPref (buffer, intResult);", "+\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\toldProxyPortFTP = intResult[0];", "+\t\tintResult[0] = 0;", "+", "+\t\trc = prefBranch.GetIntPref (buffer, intResult);", "+\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\toldProxyPortHTTP = intResult[0];", "+\t\tintResult[0] = 0;", "+", "+\t\trc = prefBranch.GetIntPref (buffer, intResult);", "+\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\toldProxyPortSSL = intResult[0];", "+\t\tintResult[0] = 0;", "+\t\trc = prefBranch.GetIntPref (buffer, intResult);", "+\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\toldProxyType = intResult[0];", "+\t\tintResult[0] = 0;"]}], "num": 19591}