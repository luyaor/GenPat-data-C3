{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "abcae5b5eb8c773e68b8352f2dd2a40e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78bf7d8cfbb3b030d29aa075e48040db", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "3c8cfdbbd754248da346ff43d9532ef978c8355d", "commitAfterChange": "272b7e6aa07980126e2a1fb1fbd02a4a8d5decd1", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  void drawBackground (GC gc, int x, int y, int width, int height)", "signatureAfterChange": "  void drawBackground (GC gc, int x, int y, int width, int height)", "diff": ["-\tint /*long*/ gdkGC = gc.handle;", "-\tGdkGCValues values = new GdkGCValues ();", "-\tOS.gdk_gc_get_values (gdkGC, values);", "-\tif (control == null) control = this;", "-\tif (control.backgroundImage != null) {", "-\t\tPoint pt = display.map (this, control, 0, 0);", "-\t\tOS.gdk_gc_set_fill (gdkGC, OS.GDK_TILED);", "-\t\tOS.gdk_gc_set_ts_origin (gdkGC, -pt.x, -pt.y);", "-\t\tOS.gdk_gc_set_tile (gdkGC, control.backgroundImage.pixmap);", "-\t\tgc.fillRectangle (x, y, width, height);", "-\t\tOS.gdk_gc_set_fill (gdkGC, values.fill);", "-\t\tOS.gdk_gc_set_ts_origin (gdkGC, values.ts_x_origin, values.ts_y_origin);", "+\tif (control != null) {", "+\t\tint /*long*/ gdkGC = gc.handle;", "+\t\tGdkGCValues values = new GdkGCValues ();", "+\t\tOS.gdk_gc_get_values (gdkGC, values);", "+\t\tif (control.backgroundImage != null) {", "+\t\t\tPoint pt = display.map (this, control, 0, 0);", "+\t\t\tOS.gdk_gc_set_fill (gdkGC, OS.GDK_TILED);", "+\t\t\tOS.gdk_gc_set_ts_origin (gdkGC, -pt.x, -pt.y);", "+\t\t\tOS.gdk_gc_set_tile (gdkGC, control.backgroundImage.pixmap);", "+\t\t\tgc.fillRectangle (x, y, width, height);", "+\t\t\tOS.gdk_gc_set_fill (gdkGC, values.fill);", "+\t\t\tOS.gdk_gc_set_ts_origin (gdkGC, values.ts_x_origin, values.ts_y_origin);", "+\t\t} else {", "+\t\t\tgc.setBackground (control.getBackground ());", "+\t\t\tgc.fillRectangle (x, y, width, height);", "+\t\t\tGdkColor color = new GdkColor ();", "+\t\t\tcolor.pixel = values.background_pixel;", "+\t\t\tOS.gdk_gc_set_background (gdkGC, color);", "+\t\t}", "-\t\tgc.setBackground (control.getBackground ());", "-\t\tGdkColor color = new GdkColor ();", "-\t\tcolor.pixel = values.background_pixel;", "-\t\tOS.gdk_gc_set_background (gdkGC, color);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a19af977416fa1f6e5ece288cb85f396", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Canvas.java", "commitBeforeChange": "272b7e6aa07980126e2a1fb1fbd02a4a8d5decd1", "commitAfterChange": "baa15d4bd537b29c7879967cc6bfddad938fe3fa", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public void drawBackground (GC gc, int x, int y, int width, int height)", "signatureAfterChange": "  public void drawBackground (GC gc, int x, int y, int width, int height)", "diff": ["-\tif (control == null) control = this;", "-\tcontrol.fillBackground (handle, gc.handle, new Rectangle (x, y, width, height));", "+\tif (control != null) {", "+\t\tcontrol.fillBackground (handle, gc.handle, new Rectangle (x, y, width, height));", "+\t} else {", "+\t\tgc.fillRectangle (x, y, width, height);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28d0044eebb8351507fd3496cd325d10", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "3c8cfdbbd754248da346ff43d9532ef978c8355d", "commitAfterChange": "272b7e6aa07980126e2a1fb1fbd02a4a8d5decd1", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " void drawBackground (GC gc, int x, int y, int width, int height)", "signatureAfterChange": " void drawBackground (GC gc, int x, int y, int width, int height)", "diff": ["-\tint xDisplay = OS.XtDisplay (handle);", "-\tif (xDisplay == 0) return;", "-\tint xGC = gc.handle;", "-\tXGCValues values = new XGCValues();", "-\tif (control == null) control = this;", "-\tif (control.backgroundImage != null) {", "-\t\tOS.XGetGCValues (xDisplay, xGC, OS.GCFillStyle | OS.GCTile | OS.GCTileStipXOrigin | OS.GCTileStipYOrigin, values);", "-\t\tshort [] root_x = new short [1], root_y = new short [1];", "-\t\tOS.XtTranslateCoords (handle, (short) 0, (short) 0, root_x, root_y);", "-\t\tshort [] control_x = new short [1], control_y = new short [1];", "-\t\tOS.XtTranslateCoords (control.handle, (short) 0, (short) 0, control_x, control_y);", "-\t\tint tileX = root_x[0] - control_x[0], tileY = root_y[0] - control_y[0];", "-\t\tOS.XSetFillStyle (xDisplay, xGC, OS.FillTiled);", "-\t\tOS.XSetTSOrigin (xDisplay, xGC, -tileX, -tileY);", "-\t\tOS.XSetTile (xDisplay, xGC, control.backgroundImage.pixmap);", "-\t\tgc.fillRectangle (x, y, width, height);", "-\t\tOS.XSetFillStyle (xDisplay, xGC, values.fill_style);", "-\t\tOS.XSetTSOrigin (xDisplay, xGC, values.ts_x_origin, values.ts_y_origin);", "+\tif (control != null) {", "+\t\tint xDisplay = OS.XtDisplay (handle);", "+\t\tif (xDisplay == 0) return;", "+\t\tint xGC = gc.handle;", "+\t\tXGCValues values = new XGCValues();", "+\t\tif (control.backgroundImage != null) {", "+\t\t\tOS.XGetGCValues (xDisplay, xGC, OS.GCFillStyle | OS.GCTile | OS.GCTileStipXOrigin | OS.GCTileStipYOrigin, values);", "+\t\t\tshort [] root_x = new short [1], root_y = new short [1];", "+\t\t\tOS.XtTranslateCoords (handle, (short) 0, (short) 0, root_x, root_y);", "+\t\t\tshort [] control_x = new short [1], control_y = new short [1];", "+\t\t\tOS.XtTranslateCoords (control.handle, (short) 0, (short) 0, control_x, control_y);", "+\t\t\tint tileX = root_x[0] - control_x[0], tileY = root_y[0] - control_y[0];", "+\t\t\tOS.XSetFillStyle (xDisplay, xGC, OS.FillTiled);", "+\t\t\tOS.XSetTSOrigin (xDisplay, xGC, -tileX, -tileY);", "+\t\t\tOS.XSetTile (xDisplay, xGC, control.backgroundImage.pixmap);", "+\t\t\tgc.fillRectangle (x, y, width, height);", "+\t\t\tOS.XSetFillStyle (xDisplay, xGC, values.fill_style);", "+\t\t\tOS.XSetTSOrigin (xDisplay, xGC, values.ts_x_origin, values.ts_y_origin);", "+\t\t} else {", "+\t\t\tOS.XGetGCValues (xDisplay, xGC, OS.GCBackground, values);", "+\t\t\tgc.setBackground (control.getBackground ());", "+\t\t\tgc.fillRectangle (x, y, width, height);", "+\t\t\tOS.XSetBackground (xDisplay, xGC, values.background);", "+\t\t}", "-\t\tOS.XGetGCValues (xDisplay, xGC, OS.GCBackground, values);", "-\t\tgc.setBackground (control.getBackground ());", "-\t\tOS.XSetBackground (xDisplay, xGC, values.background);"]}], "num": 2277}