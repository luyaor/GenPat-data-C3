{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b88beedee2c2b9857c017f836089735c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94b5fd79b032494a9abe94de3466c465", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/cocoa/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "fb0a54ecc21961877156b63a1966bffc49530779", "commitAfterChange": "6aa70af2b2255a8835f7c355b62ecd1f4b80e177", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  void webView_didFailProvisionalLoadWithError_forFrame(int sender, int error, int frame)", "signatureAfterChange": "  void webView_didFailProvisionalLoadWithError_forFrame(int sender, int error, int frame)", "diff": ["+", "+\tNSError nserror = new NSError(error);", "+\tint errorCode = nserror.code();", "+\tif (errorCode <= OS.NSURLErrorBadURL) {", "+\t\tNSString description = nserror.localizedDescription();", "+\t\tif (description != null) {", "+\t\t\tchar[] buffer = new char[description.length()];", "+\t\t\tdescription.getCharacters_(buffer);", "+\t\t\tString descriptionString = new String(buffer);", "+\t\t\tString urlString = null;", "+\t\t\tNSDictionary info = nserror.userInfo();", "+\t\t\tif (info != null) {", "+\t\t\t\tNSString key = new NSString(OS.NSErrorFailingURLStringKey());", "+\t\t\t\tid id = info.valueForKey(key);", "+\t\t\t\tif (id != null) {", "+\t\t\t\t\tNSString url = new NSString(id.id);", "+\t\t\t\t\tbuffer = new char[url.length()];", "+\t\t\t\t\turl.getCharacters_(buffer);", "+\t\t\t\t\turlString = new String(buffer);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tString message = urlString != null ? urlString + \"\\n\\n\" : \"\"; //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tmessage += Compatibility.getMessage (\"SWT_Page_Load_Failed\", new Object[] {descriptionString}); //$NON-NLS-1$", "+\t\t\tMessageBox messageBox = new MessageBox(browser.getShell(), SWT.OK | SWT.ICON_ERROR);", "+\t\t\tmessageBox.setMessage(message);", "+\t\t\tmessageBox.open();", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9389073740f47c2e0a0d7bf2e901577c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_ImageData.java", "commitBeforeChange": "14847fc50ac21dbfae0a2bd75c455ca661cd2bd0", "commitAfterChange": "db1f6bc7e04f75d6fd9d429b8b4d02d4787e43d9", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  public void test_scaledToII()", "signatureAfterChange": "  public void test_scaledToII()", "diff": ["-\twarnUnimpl(\"Test test_scaledToII not written\");", "+\tfinal int imageDimension = 8;", "+\tRGB[] rgbs = new RGB[]{new RGB(0, 0, 0), new RGB(255, 255, 255)};", "+\tbyte[] pixelData = new byte[(imageDimension*imageDimension) / 8];", "+\t", "+\tpixelData[0] = 0x4F;", "+\timageData = new ImageData(imageDimension, imageDimension, 1, new PaletteData(rgbs), 1, pixelData);", "+", "+\tImageData scaledImageData = imageData.scaledTo(-imageDimension, -imageDimension);", "+\tbyte[] scaledPixelData = new byte[imageDimension];", "+\tscaledImageData.getPixels(0, imageDimension - 1, scaledPixelData.length, scaledPixelData, 0);\t", "+\tbyte[] expectedPixelData = new byte[] {0x1, 0x1, 0x1, 0x1, 0, 0, 0x1, 0};", "+\tassertEquals(\":a:\", expectedPixelData, scaledPixelData);", "+", "+\tscaledImageData = imageData.scaledTo(imageDimension * 10, imageDimension);", "+\tscaledPixelData = new byte[imageDimension * 10];", "+\tscaledImageData.getPixels(0, 0, scaledPixelData.length, scaledPixelData, 0);\t", "+\tassertEquals(\":b:\", 0, scaledPixelData[0]);", "+\tassertEquals(\":c:\", 0, scaledPixelData[1]);", "+", "+\tscaledImageData = imageData.scaledTo(imageDimension, imageDimension * 10);", "+\tscaledPixelData = new byte[imageDimension];", "+\tscaledImageData.getPixels(0, 0, scaledPixelData.length, scaledPixelData, 0);\t", "+\texpectedPixelData = new byte[] {0, 0x1, 0, 0, 0x1, 0x1, 0x1, 0x1};", "+\tassertEquals(\":d:\", expectedPixelData, scaledPixelData);"]}], "num": 55417}