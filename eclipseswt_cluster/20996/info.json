{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6fcc90b10fc10e8bd2f2101dd4397e5e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fbfacae1a9bddcbacfa3a59b9dd00e1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "0ec16a191637037ae868aa23c8c55cf2d8a64f40", "commitAfterChange": "d78a1f304fc5886faf978adcf843b66da4334afd", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 53, "signatureBeforeChange": "  int processToggle(int path, int handle)", "signatureAfterChange": "  int processTreeToggle (int renderer, int arg1)", "diff": ["+", "+int processTreeToggle (int renderer, int arg1) {", "+\tint path = OS.gtk_tree_path_new_from_string (arg1);", "+\tif (path == 0) return 0;", "+\tint indices = OS.gtk_tree_path_get_indices (path);", "+\tif (indices != 0) {", "+\t\tint [] index = new int [1];", "+\t\tOS.memmove (index, indices, 4);", "+\t\tTableItem item = items [index [0]];", "+\t\titem.setChecked (!item.getChecked ());", "+\t\tEvent event = new Event ();", "+\t\tevent.detail = SWT.CHECK;", "+\t\tevent.item = item;", "+\t\tpostEvent (SWT.Selection, event);", "+\t}", "+\tOS.gtk_tree_path_free (path);", "+\treturn 0;", "-", "-int processToggle(int path, int handle) {", "-\tint length = OS.strlen(path);", "-\tbyte[] pathBytes = new byte[length+1];", "-\tOS.memmove(pathBytes, path, length);", "-\tchar[] pathChars = Converter.mbcsToWcs(null, pathBytes);", "-\tint itemIndex = Integer.parseInt(new String(pathChars));", "-\tboolean checked = items[itemIndex].getChecked();", "-\tchecked = !checked;", "-\titems[itemIndex].setChecked(checked);", "-\tEvent event = new Event();", "-\tevent.detail = SWT.CHECK;", "-\tevent.item = items[itemIndex];", "-\tpostEvent(SWT.Selection, event);", "-\treturn 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2da6c3551bb624cc4ce4f12e8be1a50f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/carbon/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "e38f7ba08e4cd9896dddbc5916c5187c2e1b63eb", "commitAfterChange": "7349d1b65ee9a9edeeac8e2e96a33b2c8d655b80", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tint getRoleAttribute (int nextHandler, int theEvent, int userData)", "signatureAfterChange": " \t \tint getRoleAttribute (int nextHandler, int theEvent, int userData)", "diff": ["-\t\tint code = OS.CallNextEventHandler (nextHandler, theEvent);", "-\t\tosRoleAttribute = null;", "-\t\tint [] stringRef = new int [1];", "-\t\tif (code == OS.noErr) {", "-\t\t\tOS.GetEventParameter (theEvent, OS.kEventParamAccessibleAttributeValue, OS.typeCFStringRef, null, 4, null, stringRef);", "-\t\t\tosRoleAttribute = stringRefToString (stringRef [0]);", "-\t\t}", "-\t\tevent.detail = osToRole(osRoleAttribute);", "+\t\tevent.detail = -1;", "-\t\tstringRef [0] = stringToStringRef (roleToOs (event.detail));", "-\t\tif (stringRef [0] == 0) return code;", "-\t\tOS.SetEventParameter (theEvent, OS.kEventParamAccessibleAttributeValue, OS.typeCFStringRef, 4, stringRef);", "-\t\treturn OS.noErr;", "+\t\tif (event.detail != -1) {", "+\t\t\tString appRole = roleToOs (event.detail);", "+\t\t\tint index = appRole.indexOf(':');", "+\t\t\tif (index != -1) appRole = appRole.substring(0, index);", "+\t\t\tint stringRef = stringToStringRef (appRole);", "+\t\t\tif (stringRef != 0) {", "+\t\t\t\tOS.SetEventParameter (theEvent, OS.kEventParamAccessibleAttributeValue, OS.typeCFStringRef, 4, new int [] {stringRef});", "+\t\t\t\tOS.CFRelease(stringRef);", "+\t\t\t\treturn OS.noErr;", "+\t\t\t}", "+\t\t}", "+\t\treturn OS.CallNextEventHandler (nextHandler, theEvent);"]}], "num": 20996}