{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e84e59dab3dd9130a1207d9740f93f0d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff6377e0b7627871ad2a817483271b44", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "7e632feed9e029d710fd3c7c625039dfd91ea9ad", "commitAfterChange": "f248d27eba65ed41c9146d5bdd2fea733e2f0658", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "  public boolean setText(final String html, boolean trusted)", "signatureAfterChange": "  public boolean setText(final String html, boolean trusted)", "diff": ["-\t* If the browser has not completed its initial navigate to about:blank", "-\t* then delay setting this text content until the navigate has completed.", "+\t* If the browser is navigating to about:blank in response to its first", "+\t* setUrl() invocation then delay setting this text content until the", "+\t* navigate has completed.  about:blank will be re-navigated to in order", "+\t* to ensure that all expected client events are sent.", "-\tif (!initialNavigateComplete) {", "+\tif (performingInitialNavigate) {", "-\t* loaded, so no Stop or Navigate is required.  Just set the html that is to", "-\t* be shown.", "+\t* loaded from a previous setText() invocation, so no Stop or Navigate is", "+\t* required.  Just set the html that is to be shown.", "-\t", "+", "-\tint[] rgdispid;", "-\trgdispid = auto.getIDsOfNames(new String[] { \"ReadyState\" }); //$NON-NLS-1$", "-\tVariant pVarResult = auto.getProperty(rgdispid[0]);", "-\tif (pVarResult == null) return false;", "-\tdelaySetText = pVarResult.getInt() != READYSTATE_COMPLETE;", "-\tpVarResult.dispose();", "-\trgdispid = auto.getIDsOfNames(new String[] { \"Stop\" }); //$NON-NLS-1$", "-\tauto.invoke(rgdispid[0]);", "+\tif (_getUrl().length() != 0) {", "+\t\tint[] rgdispid = auto.getIDsOfNames(new String[] { \"ReadyState\" }); //$NON-NLS-1$", "+\t\tVariant pVarResult = auto.getProperty(rgdispid[0]);", "+\t\tif (pVarResult == null) return false;", "+\t\tdelaySetText = pVarResult.getInt() != READYSTATE_COMPLETE;", "+\t\tpVarResult.dispose();", "+\t\trgdispid = auto.getIDsOfNames(new String[] { \"Stop\" }); //$NON-NLS-1$", "+\t\tauto.invoke(rgdispid[0]);", "+\t}", "-\tif (getUrl().equals(ABOUT_BLANK)) {", "+\tif (_getUrl().equals(ABOUT_BLANK)) {", "-\trgdispid = auto.getIDsOfNames(new String[] { \"Navigate\", \"URL\" }); //$NON-NLS-1$ //$NON-NLS-2$", "+\tint[] rgdispid = auto.getIDsOfNames(new String[] { \"Navigate\", \"URL\" }); //$NON-NLS-1$ //$NON-NLS-2$", "-\tpVarResult = auto.invoke(rgdispid[0], rgvarg, rgdispidNamedArgs);", "+\tVariant pVarResult = auto.invoke(rgdispid[0], rgvarg, rgdispidNamedArgs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e67adc4eb5e7038b9668cf2b79fd6049", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "a5c1cfcec95b92d93db65966120f9c3e9574da47", "commitAfterChange": "41bdae326eb353ce74e20d44ac4455a5c572579f", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "  public boolean setText(final String html, boolean trusted)", "signatureAfterChange": "  public boolean setText(final String html, boolean trusted)", "diff": ["+\t* If the browser has not completed its initial navigate to about:blank", "+\t* then delay setting this text content until the navigate has completed.", "+\t*/", "+\tif (!initialNavigateComplete) {", "+\t\tpendingText = new Object[] {html, new Boolean (trusted)};", "+\t\tpendingUrl = null;", "+\t\treturn true;", "+\t}", "+", "+\t/*", "-\tif (navigate) {", "-\t\t/*", "-\t\t* Stopping the loading of a page causes DocumentComplete events from previous", "-\t\t* requests to be received before the DocumentComplete for this page.  In such", "-\t\t* cases we must be sure to not set the html into the browser too soon, since", "-\t\t* doing so could result in its page being cleared out by a subsequent", "-\t\t* DocumentComplete.  The Browser's ReadyState can be used to determine whether", "-\t\t* these extra events will be received or not.", "-\t\t*/", "-\t\trgdispid = auto.getIDsOfNames(new String[] { \"ReadyState\" }); //$NON-NLS-1$", "-\t\tVariant pVarResult = auto.getProperty(rgdispid[0]);", "-\t\tif (pVarResult == null) return false;", "-\t\tdelaySetText = pVarResult.getInt() != READYSTATE_COMPLETE;", "-\t\tpVarResult.dispose();", "-\t\trgdispid = auto.getIDsOfNames(new String[] { \"Stop\" }); //$NON-NLS-1$", "-\t\tauto.invoke(rgdispid[0]);", "-\t}", "+", "+\t/*", "+\t* Stopping the loading of a page causes DocumentComplete events from previous", "+\t* requests to be received before the DocumentComplete for this page.  In such", "+\t* cases we must be sure to not set the html into the browser too soon, since", "+\t* doing so could result in its page being cleared out by a subsequent", "+\t* DocumentComplete.  The Browser's ReadyState can be used to determine whether", "+\t* these extra events will be received or not.", "+\t*/", "+\trgdispid = auto.getIDsOfNames(new String[] { \"ReadyState\" }); //$NON-NLS-1$", "+\tVariant pVarResult = auto.getProperty(rgdispid[0]);", "+\tif (pVarResult == null) return false;", "+\tdelaySetText = pVarResult.getInt() != READYSTATE_COMPLETE;", "+\tpVarResult.dispose();", "+\trgdispid = auto.getIDsOfNames(new String[] { \"Stop\" }); //$NON-NLS-1$", "+\tauto.invoke(rgdispid[0]);", "-\tnavigate = true;", "-\tVariant pVarResult = auto.invoke(rgdispid[0], rgvarg, rgdispidNamedArgs);", "+\tpVarResult = auto.invoke(rgdispid[0], rgvarg, rgdispidNamedArgs);"]}], "num": 32177}