{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1ec6c2f9c203f5ac499b3e85ee706a69", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09303b62c11eb96fbd75e8ab8435d692", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ab0779f2602601dfc972ab053571e64e971964b6", "commitAfterChange": "6cc1e8b477c265a207539782df12118a051c9a36", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "\r \r public void setFont (Font font)", "signatureAfterChange": "\r \r public void setFont (Font font)", "diff": ["+\t/*\r", "+\t * Feature in Windows.  Setting the font will cause the \r", "+\t * table area to be redrawn but not the column headers.\r", "+\t * Fix is to force a redraw on the column headers.\r", "+\t */\r", "+\tint hwndHeader =  OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);\t\t \r", "+\tif (OS.IsWinCE) {\r", "+\t\tOS.InvalidateRect (hwndHeader, null, true);\r", "+\t} else {\r", "+\t\tint flags = OS.RDW_ERASE | OS.RDW_FRAME | OS.RDW_INVALIDATE;\r", "+\t\tOS.RedrawWindow (hwndHeader, null, 0, flags);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fafced6892bb0dba9ad2c90301535bb3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "4081902c239578f63f15203c525f876d179f2f59", "commitAfterChange": "6342d60ee241e531740db13f1e8f8d595ad76a9f", "methodNumberBeforeChange": 199, "methodNumberAfterChange": 201, "signatureBeforeChange": "  LRESULT WM_MOVE (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_MOVE (int wParam, int lParam)", "diff": ["+\tif (OS.COMCTL32_MAJOR >= 6 && OS.IsAppThemed ()) {", "+\t\tif (OS.IsWindowVisible (handle)) {", "+\t\t\tif (findThemeControl () != null) {", "+\t\t\t\tint flags = OS.RDW_ERASE | OS.RDW_INVALIDATE | OS.RDW_ALLCHILDREN;", "+\t\t\t\tOS.RedrawWindow (handle, null, 0, flags);", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49214d1e3def327839879688068c7a54", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "12b4c1be4d5749031aa0d1bce6810aebb4500e6f", "commitAfterChange": "0e8bc705ce8896f0647de5def1a3ee30c219f71d", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  void setBackgroundPixel (int pixel)", "signatureAfterChange": "  void setBackgroundPixel (int pixel)", "diff": ["+\t/*", "+\t* Feature in Windows.  For some reason, Windows", "+\t* does not fully erase the coolbar area and coolbar", "+\t* items when you set the background.  The work around", "+\t* is to invalidate the coolbar area.", "+\t*/", "+\tif (!OS.IsWindowVisible (handle)) return;", "+\tif (OS.IsWinCE) {", "+\t\tOS.InvalidateRect (handle, null, true);", "+\t} else {", "+\t\tint flags = OS.RDW_ERASE | OS.RDW_FRAME | OS.RDW_INVALIDATE | OS.RDW_ALLCHILDREN;", "+\t\tOS.RedrawWindow (handle, null, 0, flags);", "+\t}"]}], "num": 57490}