{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa65e4031ea81789a538a287d4397bbe", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3481099ccd8df64e0ea14e60e09d226d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Canvas.java", "commitBeforeChange": "df55805e4a74ab0fc8f545a1792d755c95a4e419", "commitAfterChange": "b178ded274cefa13fff8fc6fb8115ee14a844dc8", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void scroll (int destX, int destY, int x, int y, int width, int height, boolean all)", "signatureAfterChange": " public void scroll (int destX, int destY, int x, int y, int width, int height, boolean all)", "diff": ["-\tGdkRectangle srcRect = new GdkRectangle ();", "-\tsrcRect.x = x;", "-\tsrcRect.y = y;", "-\tsrcRect.width = width;", "-\tsrcRect.height = height;", "-\tlong /*int*/ copyRegion = OS.gdk_region_rectangle (srcRect);", "-\tOS.gdk_region_intersect(copyRegion, visibleRegion);", "-\tlong /*int*/ invalidateRegion = OS.gdk_region_rectangle (srcRect);\t", "-\tOS.gdk_region_subtract (invalidateRegion, visibleRegion);", "-\tOS.gdk_region_offset (invalidateRegion, deltaX, deltaY);", "-\tGdkRectangle copyRect = new GdkRectangle();", "-\tOS.gdk_region_get_clipbox (copyRegion, copyRect);", "-\tif (copyRect.width != 0 && copyRect.height != 0) {", "-\t\tupdate ();", "-\t}", "-\tControl control = findBackgroundControl ();", "-\tif (control == null) control = this;", "-\tif (control.backgroundImage != null) {", "-\t\tredrawWidget (x, y, width, height, false, false, false);", "-\t\tredrawWidget (destX, destY, width, height, false, false, false);", "-\t} else {", "-//\t\tGC gc = new GC (this);", "-//\t\tgc.copyArea (x, y, width, height, destX, destY);", "-//\t\tgc.dispose ();", "-\t\tif (OS.USE_CAIRO) {", "-\t\t\tOS.gdk_window_invalidate_rect (window, copyRect, true);", "-\t\t\tlong /*int*/ cairo = OS.gdk_cairo_create (window);", "-\t\t\tOS.gdk_cairo_set_source_window (cairo, window, 0, 0);", "-\t\t\tCairo.cairo_rectangle (cairo, copyRect.x + deltaX, copyRect.y + deltaY, copyRect.width, copyRect.height);", "-\t\t\tCairo.cairo_fill (cairo);", "-\t\t\tCairo.cairo_destroy (cairo);", "-\t\t} else {", "-\t\t\tlong /*int*/ gdkGC = OS.gdk_gc_new (window);", "-\t\t\tOS.gdk_gc_set_exposures (gdkGC, true);", "-\t\t\tOS.gdk_draw_drawable (window, gdkGC, window, copyRect.x, copyRect.y, copyRect.x + deltaX, copyRect.y + deltaY, copyRect.width, copyRect.height);", "-\t\t\tOS.g_object_unref (gdkGC);", "+\tif(OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "+\t\tcairo_rectangle_int_t srcRect = new cairo_rectangle_int_t();", "+\t\tsrcRect.x = x;", "+\t\tsrcRect.y = y;", "+\t\tsrcRect.width = width;", "+\t\tsrcRect.height = height;", "+\t\tlong /*int*/ copyRegion = Cairo.cairo_region_create_rectangle (srcRect);", "+\t\tCairo.cairo_region_intersect (copyRegion, visibleRegion);", "+\t\tlong /*int*/ invalidateRegion = Cairo.cairo_region_create_rectangle (srcRect);\t", "+\t\tCairo.cairo_region_subtract (invalidateRegion, visibleRegion);", "+\t\tCairo.cairo_region_translate (invalidateRegion, deltaX, deltaY);", "+\t\tcairo_rectangle_int_t copyRect = new cairo_rectangle_int_t ();", "+\t\tCairo.cairo_region_get_extents (copyRegion, copyRect);", "+\t\tif (copyRect.width != 0 && copyRect.height != 0) {", "+\t\t\tupdate ();", "-\t\tboolean disjoint = (destX + width < x) || (x + width < destX) || (destY + height < y) || (y + height < destY);", "-\t\tif (disjoint) {", "-\t\t\tGdkRectangle rect = new GdkRectangle ();", "-\t\t\trect.x = x;", "-\t\t\trect.y = y;", "-\t\t\trect.width = width;", "-\t\t\trect.height = height;", "-\t\t\tOS.gdk_region_union_with_rect (invalidateRegion, rect);", "+\t\tControl control = findBackgroundControl ();", "+\t\tif (control == null) control = this;", "+\t\tif (control.backgroundImage != null) {", "+\t\t\tredrawWidget (x, y, width, height, false, false, false);", "+\t\t\tredrawWidget (destX, destY, width, height, false, false, false);", "-\t\t\tGdkRectangle rect = new GdkRectangle ();", "-\t\t\tif (deltaX != 0) {", "-\t\t\t\tint newX = destX - deltaX;", "-\t\t\t\tif (deltaX < 0) newX = destX + width;", "-\t\t\t\trect.x = newX;", "+\t//\t\tGC gc = new GC (this);", "+\t//\t\tgc.copyArea (x, y, width, height, destX, destY);", "+\t//\t\tgc.dispose ();", "+\t\t\tif (OS.USE_CAIRO) {", "+\t\t\t\tOS.gdk_window_invalidate_region (window, copyRegion, true);", "+\t\t\t\tlong /*int*/ cairo = OS.gdk_cairo_create (window);", "+\t\t\t\tOS.gdk_cairo_set_source_window (cairo, window, 0, 0);", "+\t\t\t\tCairo.cairo_rectangle (cairo, copyRect.x + deltaX, copyRect.y + deltaY, copyRect.width, copyRect.height);", "+\t\t\t\tCairo.cairo_fill (cairo);", "+\t\t\t\tCairo.cairo_destroy (cairo);", "+\t\t\t} else {", "+\t\t\t\tlong /*int*/ gdkGC = OS.gdk_gc_new (window);", "+\t\t\t\tOS.gdk_gc_set_exposures (gdkGC, true);", "+\t\t\t\tOS.gdk_draw_drawable (window, gdkGC, window, copyRect.x, copyRect.y, copyRect.x + deltaX, copyRect.y + deltaY, copyRect.width, copyRect.height);", "+\t\t\t\tOS.g_object_unref (gdkGC);", "+\t\t\t}", "+\t\t\tboolean disjoint = (destX + width < x) || (x + width < destX) || (destY + height < y) || (y + height < destY);", "+\t\t\tif (disjoint) {", "+\t\t\t\tcairo_rectangle_int_t rect = new cairo_rectangle_int_t ();", "+\t\t\t\trect.x = x;", "-\t\t\t\trect.width = Math.abs(deltaX);", "+\t\t\t\trect.width = width;", "+\t\t\t\trect.height = height;", "+\t\t\t\tCairo.cairo_region_union_rectangle (invalidateRegion, rect);", "+\t\t\t} else {", "+\t\t\t\tcairo_rectangle_int_t rect = new cairo_rectangle_int_t ();", "+\t\t\t\tif (deltaX != 0) {", "+\t\t\t\t\tint newX = destX - deltaX;", "+\t\t\t\t\tif (deltaX < 0) newX = destX + width;", "+\t\t\t\t\trect.x = newX;", "+\t\t\t\t\trect.y = y;", "+\t\t\t\t\trect.width = Math.abs(deltaX);", "+\t\t\t\t\trect.height = height;", "+\t\t\t\t\tCairo.cairo_region_union_rectangle (invalidateRegion, rect);", "+\t\t\t\t}", "+\t\t\t\tif (deltaY != 0) {", "+\t\t\t\t\tint newY = destY - deltaY;", "+\t\t\t\t\tif (deltaY < 0) newY = destY + height;", "+\t\t\t\t\trect.x = x;", "+\t\t\t\t\trect.y = newY;", "+\t\t\t\t\trect.width = width;", "+\t\t\t\t\trect.height = Math.abs(deltaY);", "+\t\t\t\t\tCairo.cairo_region_union_rectangle (invalidateRegion, rect);", "+\t\t\t\t}", "+\t\t\t}\t", "+\t\t\tCairo.cairo_region_destroy (visibleRegion);", "+\t\t\tCairo.cairo_region_destroy (copyRegion);", "+\t\t\tCairo.cairo_region_destroy (invalidateRegion);", "+\t\t}", "+\t} else {", "+\t\t\tGdkRectangle srcRect = new GdkRectangle ();", "+\t\t\tsrcRect.x = x;", "+\t\t\tsrcRect.y = y;", "+\t\t\tsrcRect.width = width;", "+\t\t\tsrcRect.height = height;", "+\t\t\tlong /*int*/ copyRegion = OS.gdk_region_rectangle (srcRect);", "+\t\t\tOS.gdk_region_intersect(copyRegion, visibleRegion);", "+\t\t\tlong /*int*/ invalidateRegion = OS.gdk_region_rectangle (srcRect);\t", "+\t\t\tOS.gdk_region_subtract (invalidateRegion, visibleRegion);", "+\t\t\tOS.gdk_region_offset (invalidateRegion, deltaX, deltaY);", "+\t\t\tGdkRectangle copyRect = new GdkRectangle();", "+\t\t\tOS.gdk_region_get_clipbox (copyRegion, copyRect);", "+\t\t\tif (copyRect.width != 0 && copyRect.height != 0) {", "+\t\t\t\tupdate ();", "+\t\t\t}", "+\t\t\tControl control = findBackgroundControl ();", "+\t\t\tif (control == null) control = this;", "+\t\t\tif (control.backgroundImage != null) {", "+\t\t\t\tredrawWidget (x, y, width, height, false, false, false);", "+\t\t\t\tredrawWidget (destX, destY, width, height, false, false, false);", "+\t\t\t} else {", "+//\t\t\tGC gc = new GC (this);", "+//\t\t\tgc.copyArea (x, y, width, height, destX, destY);", "+//\t\t\tgc.dispose ();", "+\t\t\tif (OS.USE_CAIRO) {", "+\t\t\t\tOS.gdk_window_invalidate_region (window, copyRegion, true);", "+\t\t\t\tlong /*int*/ cairo = OS.gdk_cairo_create (window);", "+\t\t\t\tOS.gdk_cairo_set_source_window (cairo, window, 0, 0);", "+\t\t\t\tCairo.cairo_rectangle (cairo, copyRect.x + deltaX, copyRect.y + deltaY, copyRect.width, copyRect.height);", "+\t\t\t\tCairo.cairo_fill (cairo);", "+\t\t\t\tCairo.cairo_destroy (cairo);", "+\t\t\t} else {", "+\t\t\t\tlong /*int*/ gdkGC = OS.gdk_gc_new (window);", "+\t\t\t\tOS.gdk_gc_set_exposures (gdkGC, true);", "+\t\t\t\tOS.gdk_draw_drawable (window, gdkGC, window, copyRect.x, copyRect.y, copyRect.x + deltaX, copyRect.y + deltaY, copyRect.width, copyRect.height);", "+\t\t\t\tOS.g_object_unref (gdkGC);", "+\t\t\t}", "+\t\t\tboolean disjoint = (destX + width < x) || (x + width < destX) || (destY + height < y) || (y + height < destY);", "+\t\t\tif (disjoint) {", "+\t\t\t\tGdkRectangle rect = new GdkRectangle ();", "+\t\t\t\trect.x = x;", "+\t\t\t\trect.y = y;", "+\t\t\t\trect.width = width;", "-\t\t\t}", "-\t\t\tif (deltaY != 0) {", "-\t\t\t\tint newY = destY - deltaY;", "-\t\t\t\tif (deltaY < 0) newY = destY + height;", "-\t\t\t\trect.x = x;", "-\t\t\t\trect.y = newY;", "-\t\t\t\trect.width = width;", "-\t\t\t\trect.height = Math.abs(deltaY);", "-\t\t\t\tOS.gdk_region_union_with_rect (invalidateRegion, rect);", "-\t\t\t}", "-\t\t}\t", "-\t\tOS.gdk_window_invalidate_region(window, invalidateRegion, all);", "-\t\tOS.gdk_region_destroy (visibleRegion);", "-\t\tOS.gdk_region_destroy (copyRegion);", "-\t\tOS.gdk_region_destroy (invalidateRegion);", "+\t\t\t} else {", "+\t\t\t\tGdkRectangle rect = new GdkRectangle ();", "+\t\t\t\tif (deltaX != 0) {", "+\t\t\t\t\tint newX = destX - deltaX;", "+\t\t\t\t\tif (deltaX < 0) newX = destX + width;", "+\t\t\t\t\trect.x = newX;", "+\t\t\t\t\trect.y = y;", "+\t\t\t\t\trect.width = Math.abs(deltaX);", "+\t\t\t\t\trect.height = height;", "+\t\t\t\t\tOS.gdk_region_union_with_rect (invalidateRegion, rect);", "+\t\t\t\t}", "+\t\t\t\tif (deltaY != 0) {", "+\t\t\t\t\tint newY = destY - deltaY;", "+\t\t\t\t\tif (deltaY < 0) newY = destY + height;", "+\t\t\t\t\trect.x = x;", "+\t\t\t\t\trect.y = newY;", "+\t\t\t\t\trect.width = width;", "+\t\t\t\t\trect.height = Math.abs(deltaY);", "+\t\t\t\t\tOS.gdk_region_union_with_rect (invalidateRegion, rect);", "+\t\t\t\t}", "+\t\t\t}\t", "+\t\t\tOS.gdk_window_invalidate_region(window, invalidateRegion, all);", "+\t\t\tOS.gdk_region_destroy (visibleRegion);", "+\t\t\tOS.gdk_region_destroy (copyRegion);", "+\t\t\tOS.gdk_region_destroy (invalidateRegion);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a74151e1ff3b14ef149acfd363384f96", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Canvas.java", "commitBeforeChange": "4631a5a5553c2a27a1c80b2611f4f0cea8081a20", "commitAfterChange": "21eb151f1a668a710645fe690cf473d0b86ddaf0", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void scroll (int destX, int destY, int x, int y, int width, int height, boolean all)", "signatureAfterChange": " public void scroll (int destX, int destY, int x, int y, int width, int height, boolean all)", "diff": ["-\tlong /*int*/ visibleRegion = 0;", "-\tif(OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "-\t\tvisibleRegion = OS.gdk_window_get_visible_region (window);", "-\t\tcairo_rectangle_int_t srcRect = new cairo_rectangle_int_t();", "-\t\tsrcRect.x = x;", "-\t\tsrcRect.y = y;", "-\t\tsrcRect.width = width;", "-\t\tsrcRect.height = height;", "-\t\tlong /*int*/ copyRegion = Cairo.cairo_region_create_rectangle (srcRect);", "-\t\tCairo.cairo_region_intersect (copyRegion, visibleRegion);", "-\t\tlong /*int*/ invalidateRegion = Cairo.cairo_region_create_rectangle (srcRect);\t", "-\t\tCairo.cairo_region_subtract (invalidateRegion, visibleRegion);", "-\t\tCairo.cairo_region_translate (invalidateRegion, deltaX, deltaY);", "-\t\tcairo_rectangle_int_t copyRect = new cairo_rectangle_int_t ();", "-\t\tCairo.cairo_region_get_extents (copyRegion, copyRect);", "-\t\tif (copyRect.width != 0 && copyRect.height != 0) {", "-\t\t\tupdate ();", "-\t\t}", "-\t\tControl control = findBackgroundControl ();", "-\t\tif (control == null) control = this;", "-\t\tif (control.backgroundImage != null) {", "-\t\t\tredrawWidget (x, y, width, height, false, false, false);", "-\t\t\tredrawWidget (destX, destY, width, height, false, false, false);", "-\t\t} else {", "-\t//\t\tGC gc = new GC (this);", "-\t//\t\tgc.copyArea (x, y, width, height, destX, destY);", "-\t//\t\tgc.dispose ();", "-\t\t\tif (OS.USE_CAIRO) {", "-\t\t\t\tOS.gdk_window_invalidate_region (window, copyRegion, true);", "-\t\t\t\tlong /*int*/ cairo = OS.gdk_cairo_create (window);", "-\t\t\t\tOS.gdk_cairo_set_source_window (cairo, window, 0, 0);", "-\t\t\t\tCairo.cairo_rectangle (cairo, copyRect.x + deltaX, copyRect.y + deltaY, copyRect.width, copyRect.height);", "-\t\t\t\tCairo.cairo_fill (cairo);", "-\t\t\t\tCairo.cairo_destroy (cairo);", "-\t\t\t} else {", "-\t\t\t\tlong /*int*/ gdkGC = OS.gdk_gc_new (window);", "-\t\t\t\tOS.gdk_gc_set_exposures (gdkGC, true);", "-\t\t\t\tOS.gdk_draw_drawable (window, gdkGC, window, copyRect.x, copyRect.y, copyRect.x + deltaX, copyRect.y + deltaY, copyRect.width, copyRect.height);", "-\t\t\t\tOS.g_object_unref (gdkGC);", "-\t\t\t}", "-\t\t\tboolean disjoint = (destX + width < x) || (x + width < destX) || (destY + height < y) || (y + height < destY);", "-\t\t\tif (disjoint) {", "-\t\t\t\tcairo_rectangle_int_t rect = new cairo_rectangle_int_t ();", "-\t\t\t\trect.x = x;", "-\t\t\t\trect.y = y;", "-\t\t\t\trect.width = width;", "-\t\t\t\trect.height = height;", "-\t\t\t\tCairo.cairo_region_union_rectangle (invalidateRegion, rect);", "-\t\t\t} else {", "-\t\t\t\tcairo_rectangle_int_t rect = new cairo_rectangle_int_t ();", "-\t\t\t\tif (deltaX != 0) {", "-\t\t\t\t\tint newX = destX - deltaX;", "-\t\t\t\t\tif (deltaX < 0) newX = destX + width;", "-\t\t\t\t\trect.x = newX;", "-\t\t\t\t\trect.y = y;", "-\t\t\t\t\trect.width = Math.abs(deltaX);", "-\t\t\t\t\trect.height = height;", "-\t\t\t\t\tCairo.cairo_region_union_rectangle (invalidateRegion, rect);", "-\t\t\t\t}", "-\t\t\t\tif (deltaY != 0) {", "-\t\t\t\t\tint newY = destY - deltaY;", "-\t\t\t\t\tif (deltaY < 0) newY = destY + height;", "-\t\t\t\t\trect.x = x;", "-\t\t\t\t\trect.y = newY;", "-\t\t\t\t\trect.width = width;", "-\t\t\t\t\trect.height = Math.abs(deltaY);", "-\t\t\t\t\tCairo.cairo_region_union_rectangle (invalidateRegion, rect);", "-\t\t\t\t}", "-\t\t\t}\t", "-\t\t\tCairo.cairo_region_destroy (visibleRegion);", "-\t\t\tCairo.cairo_region_destroy (copyRegion);", "-\t\t\tCairo.cairo_region_destroy (invalidateRegion);", "-\t\t}", "+\tlong /*int*/ visibleRegion = OS.gdk_drawable_get_visible_region (window);", "+\tGdkRectangle srcRect = new GdkRectangle ();", "+\tsrcRect.x = x;", "+\tsrcRect.y = y;", "+\tsrcRect.width = width;", "+\tsrcRect.height = height;", "+\tlong /*int*/ copyRegion = OS.gdk_region_rectangle (srcRect);", "+\tOS.gdk_region_intersect(copyRegion, visibleRegion);", "+\tlong /*int*/ invalidateRegion = OS.gdk_region_rectangle (srcRect);\t", "+\tOS.gdk_region_subtract (invalidateRegion, visibleRegion);", "+\tOS.gdk_region_offset (invalidateRegion, deltaX, deltaY);", "+\tGdkRectangle copyRect = new GdkRectangle();", "+\tOS.gdk_region_get_clipbox (copyRegion, copyRect);", "+\tif (copyRect.width != 0 && copyRect.height != 0) {", "+\t\tupdate ();", "+\t}", "+\tControl control = findBackgroundControl ();", "+\tif (control == null) control = this;", "+\tif (control.backgroundImage != null) {", "+\t\tredrawWidget (x, y, width, height, false, false, false);", "+\t\tredrawWidget (destX, destY, width, height, false, false, false);", "-\t\t\tvisibleRegion = OS.gdk_drawable_get_visible_region (window);", "-\t\t\tGdkRectangle srcRect = new GdkRectangle ();", "-\t\t\tsrcRect.x = x;", "-\t\t\tsrcRect.y = y;", "-\t\t\tsrcRect.width = width;", "-\t\t\tsrcRect.height = height;", "-\t\t\tlong /*int*/ copyRegion = OS.gdk_region_rectangle (srcRect);", "-\t\t\tOS.gdk_region_intersect(copyRegion, visibleRegion);", "-\t\t\tlong /*int*/ invalidateRegion = OS.gdk_region_rectangle (srcRect);\t", "-\t\t\tOS.gdk_region_subtract (invalidateRegion, visibleRegion);", "-\t\t\tOS.gdk_region_offset (invalidateRegion, deltaX, deltaY);", "-\t\t\tGdkRectangle copyRect = new GdkRectangle();", "-\t\t\tOS.gdk_region_get_clipbox (copyRegion, copyRect);", "-\t\t\tif (copyRect.width != 0 && copyRect.height != 0) {", "-\t\t\t\tupdate ();", "-\t\t\t}", "-\t\t\tControl control = findBackgroundControl ();", "-\t\t\tif (control == null) control = this;", "-\t\t\tif (control.backgroundImage != null) {", "-\t\t\t\tredrawWidget (x, y, width, height, false, false, false);", "-\t\t\t\tredrawWidget (destX, destY, width, height, false, false, false);", "-\t\t\t} else {", "-//\t\t\tGC gc = new GC (this);", "-//\t\t\tgc.copyArea (x, y, width, height, destX, destY);", "-//\t\t\tgc.dispose ();", "+//\t\tGC gc = new GC (this);", "+//\t\tgc.copyArea (x, y, width, height, destX, destY);", "+//\t\tgc.dispose ();", "+\t\tif (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "+\t\t\tOS.gdk_window_invalidate_rect (window, copyRect, true);", "+\t\t\tlong /*int*/ cairo = OS.gdk_cairo_create (window);", "+\t\t\tOS.gdk_cairo_set_source_window (cairo, window, 0, 0);", "+\t\t\tCairo.cairo_rectangle (cairo, copyRect.x + deltaX, copyRect.y + deltaY, copyRect.width, copyRect.height);", "+\t\t\tCairo.cairo_fill (cairo);", "+\t\t\tCairo.cairo_destroy (cairo);", "+\t\t} else {", "-\t\t\tboolean disjoint = (destX + width < x) || (x + width < destX) || (destY + height < y) || (y + height < destY);", "-\t\t\tif (disjoint) {", "-\t\t\t\tGdkRectangle rect = new GdkRectangle ();", "-\t\t\t\trect.x = x;", "+\t\t}", "+\t\tboolean disjoint = (destX + width < x) || (x + width < destX) || (destY + height < y) || (y + height < destY);", "+\t\tif (disjoint) {", "+\t\t\tGdkRectangle rect = new GdkRectangle ();", "+\t\t\trect.x = x;", "+\t\t\trect.y = y;", "+\t\t\trect.width = width;", "+\t\t\trect.height = height;", "+\t\t\tOS.gdk_region_union_with_rect (invalidateRegion, rect);", "+\t\t} else {", "+\t\t\tGdkRectangle rect = new GdkRectangle ();", "+\t\t\tif (deltaX != 0) {", "+\t\t\t\tint newX = destX - deltaX;", "+\t\t\t\tif (deltaX < 0) newX = destX + width;", "+\t\t\t\trect.x = newX;", "-\t\t\t\trect.width = width;", "+\t\t\t\trect.width = Math.abs(deltaX);", "-\t\t\t} else {", "-\t\t\t\tGdkRectangle rect = new GdkRectangle ();", "-\t\t\t\tif (deltaX != 0) {", "-\t\t\t\t\tint newX = destX - deltaX;", "-\t\t\t\t\tif (deltaX < 0) newX = destX + width;", "-\t\t\t\t\trect.x = newX;", "-\t\t\t\t\trect.y = y;", "-\t\t\t\t\trect.width = Math.abs(deltaX);", "-\t\t\t\t\trect.height = height;", "-\t\t\t\t\tOS.gdk_region_union_with_rect (invalidateRegion, rect);", "-\t\t\t\t}", "-\t\t\t\tif (deltaY != 0) {", "-\t\t\t\t\tint newY = destY - deltaY;", "-\t\t\t\t\tif (deltaY < 0) newY = destY + height;", "-\t\t\t\t\trect.x = x;", "-\t\t\t\t\trect.y = newY;", "-\t\t\t\t\trect.width = width;", "-\t\t\t\t\trect.height = Math.abs(deltaY);", "-\t\t\t\t\tOS.gdk_region_union_with_rect (invalidateRegion, rect);", "-\t\t\t\t}", "-\t\t\t}\t", "-\t\t\tOS.gdk_window_invalidate_region(window, invalidateRegion, all);", "-\t\t\tOS.gdk_region_destroy (visibleRegion);", "-\t\t\tOS.gdk_region_destroy (copyRegion);", "-\t\t\tOS.gdk_region_destroy (invalidateRegion);", "-\t\t}", "+\t\t\t}", "+\t\t\tif (deltaY != 0) {", "+\t\t\t\tint newY = destY - deltaY;", "+\t\t\t\tif (deltaY < 0) newY = destY + height;", "+\t\t\t\trect.x = x;", "+\t\t\t\trect.y = newY;", "+\t\t\t\trect.width = width;", "+\t\t\t\trect.height = Math.abs(deltaY);", "+\t\t\t\tOS.gdk_region_union_with_rect (invalidateRegion, rect);", "+\t\t\t}", "+\t\t}\t", "+\t\tOS.gdk_window_invalidate_region(window, invalidateRegion, all);", "+\t\tOS.gdk_region_destroy (visibleRegion);", "+\t\tOS.gdk_region_destroy (copyRegion);", "+\t\tOS.gdk_region_destroy (invalidateRegion);"]}], "num": 13863}