{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fd6faa33d1559e5592c663a85d44e19c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7324ec59ce1f13827404da4209dfe78", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "0eca40a26667c3712617b5dd23e67af76bcbab4d", "commitAfterChange": "c345d69dc06c2a69d5f698a12d1c7890b32841ad", "methodNumberBeforeChange": 114, "methodNumberAfterChange": 116, "signatureBeforeChange": " int getBottomIndex()", "signatureAfterChange": " int getBottomIndex()", "diff": ["-\tint lineCount = 1;", "-\tif (lineHeight != 0) {", "-\t\t// calculate the number of lines that are fully visible", "-\t\tint partialTopLineHeight = topIndex * lineHeight - verticalScrollOffset;", "-\t\tlineCount = (getClientArea().height - partialTopLineHeight) / lineHeight;", "+//\tint lineCount = 1;", "+//\tif (lineHeight != 0) {", "+//\t\t// calculate the number of lines that are fully visible", "+//\t\tint partialTopLineHeight = topIndex * lineHeight - verticalScrollOffset;", "+//\t\tlineCount = (getClientArea().height - partialTopLineHeight) / lineHeight;", "+//\t}", "+//\treturn Math.min(content.getLineCount() - 1, topIndex + Math.max(0, lineCount - 1));", "+\tint clientAreaHeight = getClientArea().height;", "+\tint bottomIndex = getLineIndex(clientAreaHeight);", "+\tif (bottomIndex > 0) {", "+\t\tint linePixel = getLinePixel(bottomIndex);", "+\t\tint lineHeight = lineCache.getLineHeight(bottomIndex);", "+\t\tif (linePixel + lineHeight > clientAreaHeight) {", "+\t\t\tbottomIndex--;", "+\t\t}", "-\treturn Math.min(content.getLineCount() - 1, topIndex + Math.max(0, lineCount - 1));", "+\treturn bottomIndex;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "010b81664167a8fa9bc79f2e4e3775da", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "d4eb14ad4f7b1074d4935c2b9211f94b2750616d", "commitAfterChange": "7d562ae8941ad5655a314eac8dd19e3b2aaef50c", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "\r protected void init ()", "signatureAfterChange": "\r protected void init ()", "diff": ["-\tif (windowProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);\t\r", "-\r", "+\tif (windowProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);\r", "+\t\r", "-\twindowClass = Converter.wcsToMbcs (0, WindowName + windowClassCount++ + \"\\0\");\r", "+\twindowClass = new TCHAR (0, WindowName + windowClassCount++, true);\r", "-\tWNDCLASSEX lpWndClass = new WNDCLASSEX ();\r", "-\tlpWndClass.cbSize = WNDCLASSEX.sizeof;\r", "-\tif (OS.GetClassInfoEx (hInstance, windowClass, lpWndClass)) {\r", "+\tWNDCLASS lpWndClass = new WNDCLASS ();\r", "+\tif (OS.GetClassInfo (hInstance, windowClass, lpWndClass)) {\r", "-\tlpWndClass.lpszClassName = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, windowClass.length);\r", "-\tOS.MoveMemory (lpWndClass.lpszClassName, windowClass, windowClass.length); \r", "-\tOS.RegisterClassEx (lpWndClass);\r", "-\tOS.HeapFree (hHeap, 0, lpWndClass.lpszClassName);\r", "+\tint byteCount = windowClass.length () * TCHAR.sizeof;\r", "+\tint lpszClassName = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount);\r", "+\tlpWndClass.lpszClassName = lpszClassName;\r", "+\tOS.MoveMemory (lpszClassName, windowClass, byteCount);\r", "+\tOS.RegisterClass (lpWndClass);\r", "+//\tOS.HeapFree (hHeap, 0, lpszClassName);\r"]}], "num": 50901}