{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "330fbb0094748b1c2557ab042a0ce317", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eadb4a3a1896f0df4d5daa078d26a72e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "635a9e5d0a5f495ec272194dbb750eddc745876f", "commitAfterChange": "e83d77b7ddccf5500d06ea30a64ce0d090ac4b10", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 144, "signatureBeforeChange": "   \tvoid calculateVisible(int startLine, int newLineCount)", "signatureAfterChange": " int getPartialTopIndex()", "diff": ["-\t */  ", "-\tvoid calculateVisible(int startLine, int newLineCount) {", "-\t\tint topIndex = parent.getTopIndex();", "-\t\tint bottomLine = Math.min(getPartialBottomIndex(), startLine + newLineCount);", "-\t\t", "-\t\tstartLine = Math.max(startLine, topIndex);", "-\t\tcalculate(startLine, bottomLine - startLine + 1);", "-\t}", "+ */", "+int getPartialTopIndex() {", "+\tif (isFixedLineHeight()) {", "+\t\tint lineHeight = renderer.getLineHeight();", "+\t\treturn getVerticalScrollOffset() / lineHeight;", "+\t}", "+\treturn partialHeight == 0 ? topIndex : topIndex - 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "749703fff61ba2926b7a9a401c6622ed", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "0eca40a26667c3712617b5dd23e67af76bcbab4d", "commitAfterChange": "c345d69dc06c2a69d5f698a12d1c7890b32841ad", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "   \tvoid calculateVisible(int startLine, int newLineCount)", "signatureAfterChange": " \tpublic void calculateClientArea ()", "diff": ["-\t */  ", "-\tvoid calculateVisible(int startLine, int newLineCount) {", "-\t\tint topIndex = parent.getTopIndex();", "-\t\tint bottomLine = Math.min(parent.getPartialBottomIndex(), startLine + newLineCount);", "-\t\tstartLine = Math.max(startLine, topIndex);", "-\t\tcalculate(startLine, bottomLine - startLine + 1);", "+\t */", "+\tpublic void calculateClientArea () {", "+\t\tint index = parent.getTopIndex();", "+\t\tint lineCount = parent.content.getLineCount();", "+\t\tint height = parent.getClientArea().height;", "+\t\tint y = 0;", "+\t\twhile (height > y && lineCount > index) {", "+\t\t\tcalculate(index, 1);", "+\t\t\ty += lineHeight[index++];", "+\t\t}"]}], "num": 15626}