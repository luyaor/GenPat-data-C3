{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2886419b73383aa51d2cc4552740d37a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edd90b576bffd7100b44498ba532e711", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "03f23aa773469b8a3f3e0a770076508526525b40", "commitAfterChange": "1051f4ce684a4239d50c42e8ac0e4ce13591cb56", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " void drawBorder(GC gc)", "signatureAfterChange": " void drawBorder(GC gc)", "diff": ["-\t\tint y = onBottom ? size.y - borderBottom - tabHeight : tabHeight - SELECTION_BORDER + 1;", "+\t\tint y = onBottom ? size.y - borderBottom - tabHeight - HIGHLIGHT_HEADER : borderTop + tabHeight + 1;", "-\t\tint height = SELECTION_BORDER - 1;", "+\t\tint height = HIGHLIGHT_HEADER - 1;", "-\t\ty = (onBottom) ? size.y - borderBottom - tabHeight + SELECTION_BORDER - 1 : borderTop + tabHeight - SELECTION_BORDER;", "+\t\ty = (onBottom) ? size.y - borderBottom - tabHeight - 1 : borderTop + tabHeight;", "-\t\tint y = onBottom ? size.y - borderBottom - tabHeight : borderTop + tabHeight - SELECTION_BORDER + 1;", "+\t\tint y = onBottom ? size.y - borderBottom - tabHeight - HIGHLIGHT_HEADER : borderTop + tabHeight + 1;", "-\t\tint height = SELECTION_BORDER - 1;", "+\t\tint height = HIGHLIGHT_HEADER - 1;", "-\t\tdrawSelectionBackground(gc, y, shape);", "+\t\tdrawSelectionBackground(gc, shape);", "-\t\t\t", "-\t\t\tshape[index++] = itemY + SELECTION_BORDER - 1;", "+\t\t\tshape[index++] = itemY - 1;", "-\t\t\tshape[index++] = itemY + SELECTION_BORDER - 1;", "-\t\t\t", "+\t\t\tshape[index++] = itemY - 1;", "-\t\t\t\tshape[index++]=itemX + left[2*i];", "-\t\t\t\tshape[index++]=itemY + itemH + left[2*i+1]-1;", "+\t\t\t\tshape[index++] = itemX + left[2*i];", "+\t\t\t\tshape[index++] = itemY + itemH + left[2*i+1]-1;", "-\t\t\t\tshape[index++]=itemX + itemW - extra + right[2*i];", "-\t\t\t\tshape[index++]=itemY + right[2*i+1] - 2;", "-\t\t\t}\t", "+\t\t\t\tshape[index++] = itemX + itemW - extra + right[2*i];", "+\t\t\t\tshape[index++] = itemY + right[2*i+1] - 2;", "+\t\t\t}", "-\t\t\tint rightTabEdge = size.x - borderRight - chevronRect.width - closeRect.width - 1;", "+\t\t\tint rightTabEdge = size.x - borderRight - chevronRect.width - expandRect.width - closeRect.width - 1;", "-\t\t\t\t\t\ttemp = itemY + SELECTION_BORDER - 1;", "+\t\t\t\t\t\ttemp = itemY - 1;", "-\t\t\tshape[index++] = itemY + SELECTION_BORDER - 1;", "+\t\t\tshape[index++] = itemY - 1;", "-\t\t\tshape[index++] = itemY + SELECTION_BORDER - 1;", "+\t\t\tshape[index++] = itemY - 1;", "-\t\t\tshape[index++] = itemY + itemH - SELECTION_BORDER;", "+\t\t\tshape[index++] = itemY + itemH;", "-\t\t\tshape[index++] = itemY + itemH - SELECTION_BORDER;", "+\t\t\tshape[index++] = itemY + itemH;", "-\t\t\t\tshape[index++]=itemX + left[2*i];", "-\t\t\t\tshape[index++]=itemY + left[2*i+1];", "+\t\t\t\tshape[index++] = itemX + left[2*i];", "+\t\t\t\tshape[index++] = itemY + left[2*i+1];", "-\t\t\t\tshape[index++]=itemX + itemW - extra + right[2*i];", "-\t\t\t\tshape[index++]=itemY + right[2*i+1];", "+\t\t\t\tshape[index++] = itemX + itemW - extra + right[2*i];", "+\t\t\t\tshape[index++] = itemY + right[2*i+1];", "-\t\t\tint rightTabEdge = size.x - borderRight - chevronRect.width - closeRect.width - 1;", "+\t\t\tint rightTabEdge = size.x - borderRight - chevronRect.width - expandRect.width - closeRect.width - 1;", "-\t\t\t\t\t\ttemp = itemY + itemH - SELECTION_BORDER;", "+\t\t\t\t\t\ttemp = itemY + itemH;", "-\t\t\tshape[index++] = itemY + item.height - SELECTION_BORDER;", "+\t\t\tshape[index++] = itemY + itemH;", "-\t\t\tshape[index++] = itemY + item.height - SELECTION_BORDER;", "+\t\t\tshape[index++] = itemY + itemH;", "-\t//draw border around outside", "+\t//draw 1 pixel border around outside for flat look", "+\tif (borderLeft == 1) {", "+\t\tdrawFlatBorder(gc);", "+\t} else {", "+\t\tdraw3DBorder(gc);", "+\t}", "+}", "-\t\tgc.drawLine(0, borderTop - 1, 0, size.y - tabHeight - borderBottom + SELECTION_BORDER - 1); // left", "-\t\tgc.drawLine(size.x - borderRight, borderTop - 1, size.x - borderRight, size.y - tabHeight - borderBottom + SELECTION_BORDER - 1); // right", "-\t\tgc.drawLine(0, borderTop - 1, size.x - borderRight, borderTop - 1); // top", "-\t\t\tint x = 0;", "-\t\t\tint y = size.y - borderBottom - tabHeight + SELECTION_BORDER;", "-\t\t\tint height = tabHeight - SELECTION_BORDER - 1;", "-\t\tgc.drawLine(borderLeft - 1, borderTop + tabHeight - SELECTION_BORDER, borderLeft - 1, size.y - borderBottom); // left", "-\t\tgc.drawLine(size.x - borderRight, borderTop + tabHeight - SELECTION_BORDER, size.x - borderRight, size.y - borderBottom); // right", "-\t\tgc.drawLine(borderLeft - 1, size.y - borderBottom, size.x - borderRight, size.y - borderBottom); //bottom", "-\t\t\tint x = 0;", "-\t\t\tint height = tabHeight - SELECTION_BORDER - 1;", "-\t", "-\tif (borderRight == 1) return;", "-\t", "-\t// Draw drop shadow", "-\tif (onBottom) {", "-\t\tcolor = getParent().getBackground();", "-\t\tgc.setForeground(color);", "-\t\t", "-\t\tgc.drawLine(0, 0, 1, 0);//top left", "-\t\tgc.drawPoint(0, 1);//top left", "-\t\tgc.drawLine(size.x - borderRight + 1, size.y - tabHeight - borderBottom + SELECTION_BORDER - 2, size.x - borderRight + 1, size.y); //bottom right", "-\t\tgc.drawLine(size.x - borderRight + 2, size.y - tabHeight - borderBottom + SELECTION_BORDER - 2, size.x - borderRight + 2, size.y);//bottom right", "-\t\t", "-\t\tcolor = showBorder ? border2Color : getParent().getBackground();", "-\t\tgc.setForeground(color);", "-\t\t", "-\t\tgc.drawLine(size.x - borderRight + 1, borderTop - 1, size.x - borderRight + 1, size.y - tabHeight - borderBottom + SELECTION_BORDER - 2); // right 1", "-\t\tgc.drawLine(1, borderTop - 2, size.x - borderRight + 1, borderTop - 2); // top 1", "-\t\t", "-\t\tcolor = showBorder ? border3Color : getParent().getBackground();", "-\t\tgc.setForeground(color);", "-\t\t", "-\t\tgc.drawLine(size.x - borderRight + 2, borderTop - 2, size.x - borderRight + 2, size.y - tabHeight - borderBottom + SELECTION_BORDER - 3); // right 2", "-\t\tgc.drawLine(2, borderTop - 3, size.x - borderRight + 2, borderTop - 3); // top 2", "-\t\tcolor = getParent().getBackground();", "-\t\tgc.setForeground(color);", "-\t\t", "-\t\tgc.drawLine(size.x - 1, 0, size.x - 1, borderTop + tabHeight - SELECTION_BORDER + 1);//top right", "-\t\tgc.drawLine(size.x - 2, 0, size.x - 2, borderTop + tabHeight - SELECTION_BORDER);//top right", "-\t\tgc.drawPoint(0, size.y - borderBottom + 1); //bottom left", "-\t\tgc.drawLine(0, size.y - borderBottom + 2, 1, size.y - borderBottom + 2);//bottom left", "-\t\t", "-\t\tcolor = showBorder ? border2Color : getParent().getBackground();", "-\t\tgc.setForeground(color);", "-\t\t", "-\t\tgc.drawLine(size.x - borderRight + 1, borderTop + tabHeight - SELECTION_BORDER + 1, size.x - borderRight + 1, size.y - borderBottom + 1); // right 1", "-\t\tgc.drawLine(1, size.y - borderBottom + 1, size.x - borderRight + 1, size.y - borderBottom + 1); //bottom 1", "-\t\t", "-\t\tcolor = showBorder ? border3Color : getParent().getBackground();", "-\t\tgc.setForeground(color);", "-\t\t", "-\t\tgc.drawLine(size.x - borderRight + 2, borderTop + tabHeight - SELECTION_BORDER + 2, size.x - borderRight + 2, size.y - borderBottom + 2); // right 2", "-\t\tgc.drawLine(2, size.y - borderBottom + 2, size.x - borderRight + 2, size.y - borderBottom + 2); //bottom 2"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d11cc1d2f415a8cdea5ac5598afe229", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "65aaf6e9768e61429e9ffb0c0ae5577af65eba85", "commitAfterChange": "2cef3fa78da7f2885ce55fa509348982e00b2225", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 62, "signatureBeforeChange": " void onPaint(Event event)", "signatureAfterChange": " void onPaint(Event event)", "diff": ["-\t", "-\tGC gc = event.gc;", "-\tPoint size = getSize();", "-\t", "+", "+//{", "+//GC gc = event.gc;", "+//Point size = getSize();\t", "+//}", "-\tColor parentBackground = getParent().getBackground();", "-\tColor background = getBackground();", "-\t", "+\tGC gc = event.gc;", "-\t\tgc.setBackground(parentBackground);", "+\t\tPoint size = getSize();\t", "+\t\tgc.setBackground(getParent().getBackground());", "-\t// Fill in the empty spaces to the right and left of the tabs", "-\tif (single) {", "-\t\tint[] shapeLeft = null;", "-\t\tint[] shapeRight = null;", "-\t\tif (onBottom) {", "-\t\t\tint x = Math.max(0, borderLeft - 1);", "-\t\t\tint y = size.y - borderBottom - tabHeight;", "-\t\t\tint width = (selectedIndex == -1) ? size.x/2 : items[selectedIndex].x - x;", "-\t\t\tint height = tabHeight;", "-\t\t\tif (borderRight > 0) height -= 1; // fill in behind border", "-\t\t\tshapeLeft = new int[BOTTOM_LEFT_OUTSIDE_CORNER.length+6];", "-\t\t\tint index = 0;", "-\t\t\tshapeLeft[index++] = x;", "-\t\t\tshapeLeft[index++] = y;", "-\t\t\tfor (int i = 0; i < BOTTOM_LEFT_OUTSIDE_CORNER.length/2; i++) {", "-\t\t\t\tshapeLeft[index++] = x+BOTTOM_LEFT_OUTSIDE_CORNER[2*i];", "-\t\t\t\tshapeLeft[index++] = y+height+BOTTOM_LEFT_OUTSIDE_CORNER[2*i+1];", "-\t\t\t}", "-\t\t\tshapeLeft[index++] = x+width;", "-\t\t\tshapeLeft[index++] = y + height;", "-\t\t\tshapeLeft[index++] = x+width;", "-\t\t\tshapeLeft[index++] = y;", "-\t\t\t", "-\t\t\tx = (selectedIndex == -1) ? x + size.x/2 : items[selectedIndex].x + items[selectedIndex].width;", "-\t\t\twidth = size.x - borderRight - x;", "-\t\t\tif (borderRight > 0) width += 1; // +1 overlap with border", "-\t\t\tshapeRight = new int[BOTTOM_RIGHT_OUTSIDE_CORNER.length+6];", "-\t\t\tindex = 0;", "-\t\t\tshapeRight[index++] = x;", "-\t\t\tshapeRight[index++] = y;", "-\t\t\tshapeRight[index++] = x;", "-\t\t\tshapeRight[index++] = y+height;", "-\t\t\tfor (int i = 0; i < BOTTOM_RIGHT_OUTSIDE_CORNER.length/2; i++) {", "-\t\t\t\tshapeRight[index++] = x+width+BOTTOM_RIGHT_OUTSIDE_CORNER[2*i];", "-\t\t\t\tshapeRight[index++] = y+height+BOTTOM_RIGHT_OUTSIDE_CORNER[2*i+1];", "-\t\t\t}", "-\t\t\tshapeRight[index++] = x+width;", "-\t\t\tshapeRight[index++] = y;", "-\t\t} else { // tabs on top", "-\t\t\tint x = Math.max(0, borderLeft - 1);", "-\t\t\tint y = borderTop;", "-\t\t\tint width = (selectedIndex == -1) ? size.x/2 : items[selectedIndex].x - x;", "-\t\t\tint height = tabHeight;", "-\t\t\tshapeLeft = new int[TOP_LEFT_OUTSIDE_CORNER.length+6];", "-\t\t\tint index = 0;", "-\t\t\tshapeLeft[index++] = x;", "-\t\t\tshapeLeft[index++] = y+height;", "-\t\t\tfor (int i = 0; i < TOP_LEFT_OUTSIDE_CORNER.length/2; i++) {", "-\t\t\t\tshapeLeft[index++] = x+TOP_LEFT_OUTSIDE_CORNER[2*i];", "-\t\t\t\tshapeLeft[index++] = y+TOP_LEFT_OUTSIDE_CORNER[2*i+1];", "-\t\t\t}", "-\t\t\tshapeLeft[index++] = x+width;", "-\t\t\tshapeLeft[index++] = y;", "-\t\t\tshapeLeft[index++] = x+width;", "-\t\t\tshapeLeft[index++] = y+height;", "-\t\t\t", "-\t\t\tx = (selectedIndex == -1) ? x + size.x/2 : items[selectedIndex].x + items[selectedIndex].width;", "-\t\t\twidth = size.x - borderRight - x;", "-\t\t\tif (borderRight > 0) width += 1; // +1 overlap with border", "-\t\t\tshapeRight = new int[TOP_RIGHT_OUTSIDE_CORNER.length+6];", "-\t\t\tindex = 0;", "-\t\t\tshapeRight[index++] = x;", "-\t\t\tshapeRight[index++] = y+height;", "-\t\t\tshapeRight[index++] = x;", "-\t\t\tshapeRight[index++] = y;", "-\t\t\tfor (int i = 0; i < TOP_RIGHT_OUTSIDE_CORNER.length/2; i++) {", "-\t\t\t\tshapeRight[index++] = x+width+TOP_RIGHT_OUTSIDE_CORNER[2*i];", "-\t\t\t\tshapeRight[index++] = y+TOP_RIGHT_OUTSIDE_CORNER[2*i+1];", "-\t\t\t}", "-\t\t\tshapeRight[index++] = x+width;", "-\t\t\tshapeRight[index++] = y+height;", "-\t\t}", "-\t\t// Shape is non-rectangular, fill in gaps with parent colours\t", "-\t\tRegion r = new Region();", "-\t\tint x = Math.max(0, borderLeft - 1);", "-\t\tint y = onBottom ? size.y - borderBottom - tabHeight : borderTop;", "-\t\tint width = (selectedIndex == -1) ? size.x/2 : items[selectedIndex].x - x;", "-\t\tint height = tabHeight;", "-\t\tr.add(new Rectangle(x, y, width, height));", "-\t\tr.subtract(shapeLeft);", "-\t\tgc.setBackground(getParent().getBackground());", "-\t\tfillRegion(gc, r);", "-\t\tgc.setBackground(background);", "-\t\tgc.fillPolygon(shapeLeft);", "-\t\t", "-\t\tx = (selectedIndex == -1) ? x + size.x/2 : items[selectedIndex].x + items[selectedIndex].width;", "-\t\twidth = size.x - borderRight - x;", "-\t\tif (width > 0) {", "-\t\t\tif (borderRight > 0) width += 1; // +1 overlap with border", "-\t\t\tr.subtract(r); // clear region", "-\t\t\tr.add(new Rectangle(x, y, width, height));", "-\t\t\tr.subtract(shapeRight);", "-\t\t\tgc.setBackground(getParent().getBackground());", "-\t\t\tfillRegion(gc, r);", "-\t\t\tgc.setBackground(background);", "-\t\t\tgc.fillPolygon(shapeRight);", "-\t\t}", "-\t\tr.dispose();", "-\t} else {", "-\t\t// Fill in the empty space to the right of the last tab", "-\t\t// with the parent background color", "-\t\tCTabItem2 lastItem = items[items.length -1];", "-\t\tint edge = lastItem.x+lastItem.width;", "-\t\tif (edge < size.x) {", "-\t\t\tint x = edge;", "-\t\t\tint y = onBottom ? size.y - borderBottom - tabHeight - 1 : borderTop;", "-\t\t\tint width = size.x - edge - borderRight + 1;", "-\t\t\tint height = tabHeight + 1;", "-\t\t\tgc.setBackground(parentBackground);", "-\t\t\tgc.fillRectangle(x, y, width, height);", "-\t\t}", "-\t}", "-\t", "-\t// Draw the unselected tabs.", "-\tif (!single) {", "-\t\tfor (int i=0; i < items.length; i++) {", "-\t\t\tif (i != selectedIndex && event.getBounds().intersects(items[i].getBounds())) {", "-\t\t\t\titems[i].onPaint(gc, false);", "-\t\t\t}", "-\t\t}", "-\t}", "-\t", "-\t// Draw selected tab", "-\tif (selectedIndex != -1) {", "-\t\tCTabItem2 item = items[selectedIndex];", "-\t\titem.onPaint(gc, true);", "-\t} else {", "-\t\t// no selected tab - draw line across bottom of all tabs", "-\t\tint x = borderLeft;", "-\t\tint y = onBottom ? size.y - borderBottom - tabHeight - HIGHLIGHT_HEADER : borderTop + tabHeight + 1;", "-\t\tint width = size.x - borderLeft - borderRight;", "-\t\tint height = HIGHLIGHT_HEADER - 1;", "-\t\tgc.setBackground(getBackground());", "-\t\tgc.fillRectangle(x, y, width, height);", "-\t\tx = borderLeft;", "-\t\ty = (onBottom) ? size.y - borderBottom - tabHeight - 1 : borderTop + tabHeight;", "-\t\tgc.setForeground(borderColor1);", "-\t\tgc.drawLine(x, y, x + width, y);", "-\t}", "-\t", "-\tdrawChevron(gc);", "-\tdrawMinimize(gc);", "-\tdrawMaximize(gc);", "-\tdrawBorder(gc);", "-\t", "-\t// draw insertion mark", "-//\tif (insertionIndex > -2) {", "-//\t\tgc.setForeground(getDisplay().getSystemColor(SWT.COLOR_LIST_SELECTION));", "-//\t\tif (insertionIndex == -1) {", "-//\t\t\tRectangle bounds = items[0].getBounds();", "-//\t\t\tgc.drawLine(bounds.x, bounds.y, bounds.x, bounds.y + bounds.height - 1);", "-//\t\t\tgc.drawLine(bounds.x - 2, bounds.y, bounds.x + 2, bounds.y);", "-//\t\t\tgc.drawLine(bounds.x - 1, bounds.y + 1, bounds.x + 1, bounds.y + 1);", "-//\t\t\tgc.drawLine(bounds.x - 1, bounds.y + bounds.height - 2, bounds.x + 1, bounds.y + bounds.height - 2);", "-//\t\t\tgc.drawLine(bounds.x - 2, bounds.y + bounds.height - 1, bounds.x + 2, bounds.y + bounds.height - 1);", "-//", "-//\t\t} else {", "-//\t\t\tRectangle bounds = items[insertionIndex].getBounds();", "-//\t\t\tgc.drawLine(bounds.x + bounds.width, bounds.y, bounds.x + bounds.width, bounds.y + bounds.height - 1);", "-//\t\t\tgc.drawLine(bounds.x + bounds.width - 2, bounds.y, bounds.x + bounds.width + 2, bounds.y);", "-//\t\t\tgc.drawLine(bounds.x + bounds.width - 1, bounds.y + 1, bounds.x + bounds.width + 1, bounds.y + 1);", "-//\t\t\tgc.drawLine(bounds.x + bounds.width - 1, bounds.y + bounds.height - 2, bounds.x + bounds.width + 1, bounds.y + bounds.height - 2);", "-//\t\t\tgc.drawLine(bounds.x + bounds.width - 2, bounds.y + bounds.height - 1, bounds.x + bounds.width + 2, bounds.y + bounds.height - 1);", "-//\t\t}", "-//\t}", "+\tdrawBody(event);", "+\tdrawTabArea(event);"]}], "num": 55754}