{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "93d7931e4bf173ed7bc619403dc5faf9", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43179599736564eaf57ba1923a91253c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "31462aa64c613f1f396a319c52c06f3d03b3cf9e", "commitAfterChange": "7add66a49dd4237025fd3d0537eeee6f7c1d3c8b", "methodNumberBeforeChange": 227, "methodNumberAfterChange": 227, "signatureBeforeChange": " void handleTraverse(Event event)", "signatureAfterChange": " void handleTraverse(Event event)", "diff": ["-\tint style = getStyle();", "-\tboolean ignoreTab = (style & SWT.MULTI) != 0 && !editable || isSingleLine();", "-\t", "-\tif ((event.detail == SWT.TRAVERSE_TAB_NEXT || ", "-\t\t event.detail == SWT.TRAVERSE_RETURN) && ignoreTab) {", "-\t\tevent.doit = true;", "+\tswitch (event.detail) {", "+\t\tcase SWT.TRAVERSE_ESCAPE:", "+\t\t\tevent.doit = true;", "+\t\t\tbreak;", "+\t\tcase SWT.TRAVERSE_RETURN:", "+\t\tcase SWT.TRAVERSE_TAB_NEXT:", "+\t\tcase SWT.TRAVERSE_TAB_PREVIOUS:", "+\t\t\tif ((getStyle() & SWT.SINGLE) != 0) {", "+\t\t\t\tevent.doit = true;", "+\t\t\t} else {", "+\t\t\t\tif (!editable || (event.stateMask & SWT.MODIFIER_MASK) != 0) {", "+\t\t\t\t\tevent.doit = true;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd21c11980f06c5253f322e9000f5167", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "30eaec187a22ddf0998c34e45a71b135fb6c6509", "commitAfterChange": "4e3ace7441083b52059381fc7315ed0ffaa59c75", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 265, "signatureBeforeChange": " \t \tint get_accDefaultAction(int varChild, int pszDefaultAction)", "signatureAfterChange": " \tint get_accDefaultAction(int varChild, int pszDefaultAction)", "diff": ["+\t/* get_accDefaultAction([in] varChild, [out] pszDefaultAction) */", "-\t\tif (iaccessible == null) return COM.CO_E_OBJNOTCONNECTED;", "-\t\t", "-\t\t/* Get the default defaultAction from the OS. */", "+\t\tint code = COM.DISP_E_MEMBERNOTFOUND;", "-\t\tint code = iaccessible.get_accDefaultAction(varChild, pszDefaultAction);", "-\t\tif (code == COM.E_INVALIDARG) code = COM.S_FALSE; // proxy doesn't know about app childID", "-\t\tif (accessibleControlListeners.size() == 0) return code;", "-\t\tif (code == COM.S_OK) {", "-\t\t\tint /*long*/[] pDefaultAction = new int /*long*/[1];", "-\t\t\tCOM.MoveMemory(pDefaultAction, pszDefaultAction, OS.PTR_SIZEOF);", "-\t\t\tint size = COM.SysStringByteLen(pDefaultAction[0]);", "-\t\t\tif (size > 0) {", "-\t\t\t\tchar[] buffer = new char[(size + 1) /2];", "-\t\t\t\tCOM.MoveMemory(buffer, pDefaultAction[0], size);", "-\t\t\t\tosDefaultAction = new String(buffer);", "+\t\tif (iaccessible != null) {", "+\t\t\t/* Get the default defaultAction from the OS. */", "+\t\t\tcode = iaccessible.get_accDefaultAction(varChild, pszDefaultAction);", "+\t\t\tif (code == COM.E_INVALIDARG) code = COM.S_FALSE; // proxy doesn't know about app childID", "+\t\t\tif (accessibleControlListeners.size() == 0) return code;", "+\t\t\tif (code == COM.S_OK) {", "+\t\t\t\tint /*long*/[] pDefaultAction = new int /*long*/[1];", "+\t\t\t\tCOM.MoveMemory(pDefaultAction, pszDefaultAction, OS.PTR_SIZEOF);", "+\t\t\t\tint size = COM.SysStringByteLen(pDefaultAction[0]);", "+\t\t\t\tif (size > 0) {", "+\t\t\t\t\tchar[] buffer = new char[(size + 1) /2];", "+\t\t\t\t\tCOM.MoveMemory(buffer, pDefaultAction[0], size);", "+\t\t\t\t\tosDefaultAction = new String(buffer);", "+\t\t\t\t}", "+\t\tif ((event.result == null || event.result.length() == 0) && v.lVal == COM.CHILDID_SELF) {", "+\t\t\tcode = get_name(0, pszDefaultAction);", "+\t\t}", "-\t\tchar[] data = (event.result + \"\\0\").toCharArray();", "-\t\tint /*long*/ ptr = COM.SysAllocString(data);", "-\t\tCOM.MoveMemory(pszDefaultAction, new int /*long*/[] { ptr }, OS.PTR_SIZEOF);", "+\t\tif (event.result.length() == 0) return COM.S_FALSE;", "+\t\tsetString(pszDefaultAction, event.result);"]}], "num": 10364}