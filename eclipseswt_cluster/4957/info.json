{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b5f12579e35d0eb8c247d4643d71b54b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14c6b249bc81d6ebd109fbbb7cf219cf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "1d67cb81820ee47ac4fa8190acbc28b62ffc992b", "commitAfterChange": "0a1923f1322cc502adb0b04213f1a8047dd9381a", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": "  boolean dragDetect (int x, int y, boolean filter, boolean [] consume)", "signatureAfterChange": "  public boolean dragDetect (MouseEvent event)", "diff": ["+", "+public boolean dragDetect (MouseEvent event) {", "+\tcheckWidget ();", "+\tif (event == null) error (SWT.ERROR_NULL_ARGUMENT);", "+\treturn dragDetect (event.button, event.count, event.stateMask, event.x, event.y);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5697fae86ca0b56105429551ac8b4877", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "79227b5a49c00b963ad602edd42ff8b19e607168", "commitAfterChange": "2e59efd73e90759ed48636b0f81f17f1c8202cfa", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 98, "signatureBeforeChange": "\r byte [] sendKeyEvent (int type, XKeyEvent xEvent)", "signatureAfterChange": "\r void sendKeyEvent (int type, XKeyEvent xEvent)", "diff": ["-byte [] sendKeyEvent (int type, XKeyEvent xEvent) {\r", "-\t\r", "-\t/* Look up the keysym and character(s) */\r", "-\tbyte [] buffer;\r", "-\tboolean isVirtual = false;\r", "-\tint [] keysym = new int [1];\r", "-\tif (xEvent.keycode != 0) {\r", "-\t\tbuffer = new byte [1];\r", "-\t\tisVirtual = OS.XLookupString (xEvent, buffer, buffer.length, keysym, null) == 0;\r", "-\t} else {\r", "-\t\t/*\r", "-\t\t* Bug in Motif. On Linux only, XmImMbLookupString() does not return \r", "-\t\t* XBufferOverflow as the status if the buffer is too small. The fix is\r", "-\t\t* to pass a bigger buffer.\r", "-\t\t*/\r", "-\t\tbuffer = new byte [512];\r", "-\t\tint [] status = new int [1];\r", "-\t\tint size = OS.XmImMbLookupString (handle, xEvent, buffer, buffer.length, keysym, status);\r", "-\t\tif (status [0] == OS.XBufferOverflow) {\r", "-\t\t\tbuffer = new byte [size];\r", "-\t\t\tsize = OS.XmImMbLookupString (handle, xEvent, buffer, size, keysym, status);\r", "-\t\t}\r", "-\t\tif (size == 0) return null;\r", "-\t}\r", "-\r", "-\t* Bug in MOTIF.  On Solaris only, XK_F11 and XK_F12 are not\r", "-\t* translated correctly by XLookupString().  They are mapped\r", "-\t* to 0x1005FF10 and 0x1005FF11 respectively.  The fix is to\r", "-\t* look for these values explicitly and correct them.\r", "-\tif (OS.IsSunOS) {\r", "-\t\tif ((keysym [0] == 0x1005FF10) || (keysym [0] == 0x1005FF11)) {\r", "-\t\t\tif (keysym [0] == 0x1005FF10) keysym [0] = OS.XK_F11;\r", "-\t\t\tif (keysym [0] == 0x1005FF11) keysym [0] = OS.XK_F12;\r", "-\t\t}\r", "-\t/*\r", "-\t* Bug in MOTIF.  On Solaris only, their is garbage in the\r", "-\t* high 16-bits for Keysyms such as XK_Down.  Since Keysyms\r", "-\t* must be 16-bits to fit into a Character, mask away the\r", "-\t* high 16-bits on all platforms.\r", "-\t*/\r", "-\tkeysym [0] &= 0xFFFF;\r", "-\r", "-\t\tif (isVirtual) event.keyCode = Display.translateKey (keysym [0]);\r", "-\t\tif ((xEvent.state & OS.Mod1Mask) != 0) event.stateMask |= SWT.ALT;\r", "-\t\tif ((xEvent.state & OS.ShiftMask) != 0) event.stateMask |= SWT.SHIFT;\r", "-\t\tif ((xEvent.state & OS.ControlMask) != 0) event.stateMask |= SWT.CONTROL;\r", "-\t\tif ((xEvent.state & OS.Button1Mask) != 0) event.stateMask |= SWT.BUTTON1;\r", "-\t\tif ((xEvent.state & OS.Button2Mask) != 0) event.stateMask |= SWT.BUTTON2;\r", "-\t\tif ((xEvent.state & OS.Button3Mask) != 0) event.stateMask |= SWT.BUTTON3;\r", "-\t\r", "+void sendKeyEvent (int type, XKeyEvent xEvent) {\r", "+\tEvent event = new Event ();\r", "+\tevent.time = xEvent.time;\r", "+\tsetKeyState (event, xEvent);\r", "+\tpostEvent (type, event);\r", "+}\r"]}], "num": 4957}