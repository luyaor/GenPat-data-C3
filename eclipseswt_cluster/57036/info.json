{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5995546a0021c9ff35daef4fac10ec7f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "488103a684daea3562e12624b62c739e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "bb50d013efc19825e8fad10d3794d4669d974d4f", "commitAfterChange": "3432d57cc04ef1f655fa110268dd9aa31a9cd42d", "methodNumberBeforeChange": 251, "methodNumberAfterChange": 237, "signatureBeforeChange": " \tint get_accFocus(int pvarChild)", "signatureAfterChange": " \tint get_accFocus(int pvarChild)", "diff": ["-\t\t\tif (accessibleControlListeners.size() == 0) return code;", "-\t\t\t\tif (v.vt == COM.VT_I4) osChild = osToChildID(v.lVal);", "+\t\t\t\tif (v.vt == COM.VT_I4) osChild = v.lVal;", "+\t\t\t\t// TODO: need to check VT_DISPATCH (don't use struct)", "+\t\t\t\tif (DEBUG) if (v.vt == COM.VT_DISPATCH) print(\"IAccessible::get_accFocus() super returned VT_DISPATCH\"); ", "+\t\t\t}", "+\t\t\tif (accessibleControlListeners.size() == 0) {", "+\t\t\t\tif (DEBUG) print(this + \".IAccessible::get_accFocus() returning childID=\" + osChild + \" from super\" + hresult(code));", "+\t\t\t\treturn code;", "-\t\tevent.childID = osChild;", "+\t\tevent.childID = osChild == ACC.CHILDID_NONE ? ACC.CHILDID_NONE : osToChildID(osChild);", "+\t\t\tif (DEBUG) print(this + \".IAccessible::get_accFocus() returning accessible \" + accessible.getAddress() + hresult(COM.S_OK));", "+\t\t\tif (DEBUG) print(this + \".IAccessible::get_accFocus() returning VT_EMPTY\" + hresult(COM.S_FALSE));", "+\t\t\tif (DEBUG) print(this + \".IAccessible::get_accFocus() returning accessible \" + getAddress() + hresult(COM.S_OK));", "+\t\tif (DEBUG) print(this + \".IAccessible::get_accFocus() returning childID \" + childIDToOs(childID) + hresult(COM.S_OK));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8832a43d844e81e5e3b559c39ad8f62f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "bb50d013efc19825e8fad10d3794d4669d974d4f", "commitAfterChange": "3432d57cc04ef1f655fa110268dd9aa31a9cd42d", "methodNumberBeforeChange": 243, "methodNumberAfterChange": 229, "signatureBeforeChange": " \tint accHitTest(int xLeft, int yTop, int pvarChild)", "signatureAfterChange": " \tint accHitTest(int xLeft, int yTop, int pvarChild)", "diff": ["-\t/* accHitTest([in] xLeft, [in] yTop, [out] pvarChild) */", "+\t/* IAccessible::accHitTest([in] xLeft, [in] yTop, [out] pvarChild) */", "-\t\t\tif (accessibleControlListeners.size() == 0) return code;", "-\t\t\t\tif (v.vt == COM.VT_I4) osChild = osToChildID(v.lVal);", "+\t\t\t\tif (v.vt == COM.VT_I4) osChild = v.lVal;", "+\t\t\t\t\tif (DEBUG) print(this + \".IAccessible::accHitTest() super returned VT_DISPATCH\");", "+\t\t\t}", "+\t\t\tif (accessibleControlListeners.size() == 0) {", "+\t\t\t\tif (DEBUG) print(this + \".IAccessible::accHitTest returning childID=\" + osChild + \" from super\" + hresult(code));", "+\t\t\t\treturn code;", "-\t\tevent.childID = osChild;", "+\t\tevent.childID = osChild == ACC.CHILDID_NONE ? ACC.CHILDID_NONE : osToChildID(osChild);", "+\t\t\tif (DEBUG) print(this + \".IAccessible::accHitTest returning \" + accessible.getAddress() + hresult(COM.S_OK));", "-\t\t\tif (osChildObject != 0) return COM.S_OK;", "+\t\t\tif (osChildObject != 0) {", "+\t\t\t\tif (DEBUG) print(this + \".IAccessible::accHitTest returning osChildObject \" + osChildObject + \" from super\" + hresult(COM.S_OK));", "+\t\t\t\treturn COM.S_OK;", "+\t\t\t}", "+\t\t\tif (DEBUG) print(this + \".IAccessible::accHitTest returning VT_EMPTY\" + hresult(COM.S_FALSE));", "+\t\tif (DEBUG) print(this + \".IAccessible::accHitTest returning \" + childIDToOs(childID) + hresult(COM.S_OK));"]}], "num": 57036}