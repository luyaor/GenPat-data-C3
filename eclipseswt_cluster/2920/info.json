{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4d5d2bd9d1488db4b62a4554a8c2b7a4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dabc95dbb5233b81726f8b55a80a70ba", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/carbon/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "e38f7ba08e4cd9896dddbc5916c5187c2e1b63eb", "commitAfterChange": "7349d1b65ee9a9edeeac8e2e96a33b2c8d655b80", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \t \tint getChildrenAttribute (int nextHandler, int theEvent, int userData)", "signatureAfterChange": " \t \tint getChildrenAttribute (int nextHandler, int theEvent, int userData)", "diff": ["-\t\treturn getAttribute (nextHandler, theEvent, userData);", "+\t\tAccessibleControlEvent event = new AccessibleControlEvent(this);", "+\t\tfor (int i = 0; i < accessibleControlListeners.size(); i++) {", "+\t\t\tAccessibleControlListener listener = (AccessibleControlListener) accessibleControlListeners.elementAt(i);", "+\t\t\tlistener.getChildren(event);", "+\t\t}", "+\t\tObject [] appChildren = event.children;", "+\t\tif (appChildren != null && appChildren.length > 0) {", "+\t\t\t/* return a CFArrayRef of AXUIElementRefs */", "+\t\t\tint children = OS.CFArrayCreateMutable (OS.kCFAllocatorDefault, 0, 0);", "+\t\t\tif (children != 0) {", "+\t\t\t\tfor (int i = 0; i < appChildren.length; i++) {", "+\t\t\t\t\tObject child = appChildren[i];", "+\t\t\t\t\tif (child instanceof Integer) {", "+\t\t\t\t\t\tOS.CFArrayAppendValue (children, childIDToOs(((Integer)child).intValue()));", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tOS.CFArrayAppendValue (children, ((Accessible)child).axuielementref);", "+\t\t\t\t\t}", "+\t\t\t\t}\t\t\t", "+\t\t\t\tOS.SetEventParameter (theEvent, OS.kEventParamAccessibleAttributeValue, OS.typeCFMutableArrayRef, 4, new int [] {children});", "+\t\t\t\tOS.CFRelease(children);", "+\t\t\t\treturn OS.noErr;", "+\t\t\t}", "+\t\t}", "+\t\treturn OS.CallNextEventHandler (nextHandler, theEvent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1f530ebbe5e71262c108411e70670c0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/carbon/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "db31883b9f41fd00bb5b0a446bfa1b3f53fba5d7", "commitAfterChange": "95bcccfd921c2b52375a1f493e992d80dc6832b5", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t \tint getChildrenAttribute (int nextHandler, int theEvent, int userData)", "signatureAfterChange": " \t \tint getChildrenAttribute (int nextHandler, int theEvent, int userData)", "diff": ["+\t\tint code = userData;", "-\t\t\t\treturn OS.noErr;", "-\t\t\t}", "-\t\t\tfor (int i = 0; i < accessibleControlListeners.size(); i++) {", "-\t\t\t\tAccessibleControlListener listener = (AccessibleControlListener) accessibleControlListeners.elementAt(i);", "-\t\t\t\tlistener.getChildren(event);", "-\t\t\t}", "-\t\t\tObject [] appChildren = event.children;", "-\t\t\tif (appChildren != null && appChildren.length > 0) {", "-\t\t\t\t/* return a CFArrayRef of AXUIElementRefs */", "-\t\t\t\tint children = OS.CFArrayCreateMutable (OS.kCFAllocatorDefault, 0, 0);", "-\t\t\t\tif (children != 0) {", "-\t\t\t\t\tfor (int i = 0; i < appChildren.length; i++) {", "-\t\t\t\t\t\tObject child = appChildren[i];", "-\t\t\t\t\t\tif (child instanceof Integer) {", "-\t\t\t\t\t\t\tOS.CFArrayAppendValue (children, childIDToOs(((Integer)child).intValue()));", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tOS.CFArrayAppendValue (children, ((Accessible)child).axuielementref);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}\t\t\t", "-\t\t\t\t\tOS.SetEventParameter (theEvent, OS.kEventParamAccessibleAttributeValue, OS.typeCFMutableArrayRef, 4, new int [] {children});", "-\t\t\t\t\tOS.CFRelease(children);", "-\t\t\t\t\treturn OS.noErr;", "+\t\t\t\tcode = OS.noErr;", "+\t\t\t} else if (event.detail > 0) {", "+\t\t\t\tfor (int i = 0; i < accessibleControlListeners.size(); i++) {", "+\t\t\t\t\tAccessibleControlListener listener = (AccessibleControlListener) accessibleControlListeners.elementAt(i);", "+\t\t\t\t\tlistener.getChildren(event);", "+\t\t\t\t}", "+\t\t\t\tObject [] appChildren = event.children;", "+\t\t\t\tif (appChildren != null && appChildren.length > 0) {", "+\t\t\t\t\t/* return a CFArrayRef of AXUIElementRefs */", "+\t\t\t\t\tint children = OS.CFArrayCreateMutable (OS.kCFAllocatorDefault, 0, 0);", "+\t\t\t\t\tif (children != 0) {", "+\t\t\t\t\t\tfor (int i = 0; i < appChildren.length; i++) {", "+\t\t\t\t\t\t\tObject child = appChildren[i];", "+\t\t\t\t\t\t\tif (child instanceof Integer) {", "+\t\t\t\t\t\t\t\tOS.CFArrayAppendValue (children, childIDToOs(((Integer)child).intValue()));", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tOS.CFArrayAppendValue (children, ((Accessible)child).axuielementref);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}\t\t\t", "+\t\t\t\t\t\tOS.SetEventParameter (theEvent, OS.kEventParamAccessibleAttributeValue, OS.typeCFMutableArrayRef, 4, new int [] {children});", "+\t\t\t\t\t\tOS.CFRelease(children);", "+\t\t\t\t\t\tcode = OS.noErr;", "+\t\t\t\t\t}", "-\t\treturn OS.eventNotHandledErr;", "+\t\treturn code;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d69cb9af8e40b1c0a8e970b11b5b5589", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/carbon/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "006d9583acddd2d2c813b743b6df5768ec76cd9d", "commitAfterChange": "64c700c763e86589cd386ff2011f203300090e0b", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": " \t \tint getChildrenAttribute (int nextHandler, int theEvent, int userData)", "signatureAfterChange": " \t \tint getChildrenAttribute (int nextHandler, int theEvent, int userData)", "diff": ["-\t\tAccessibleControlEvent event = new AccessibleControlEvent(this);", "-\t\tfor (int i = 0; i < accessibleControlListeners.size(); i++) {", "-\t\t\tAccessibleControlListener listener = (AccessibleControlListener) accessibleControlListeners.elementAt(i);", "-\t\t\tlistener.getChildren(event);", "-\t\t}", "-\t\tObject [] appChildren = event.children;", "-\t\tif (appChildren != null && appChildren.length > 0) {", "-\t\t\t/* return a CFArrayRef of AXUIElementRefs */", "-\t\t\tint children = OS.CFArrayCreateMutable (OS.kCFAllocatorDefault, 0, 0);", "-\t\t\tif (children != 0) {", "-\t\t\t\tfor (int i = 0; i < appChildren.length; i++) {", "-\t\t\t\t\tObject child = appChildren[i];", "-\t\t\t\t\tif (child instanceof Integer) {", "-\t\t\t\t\t\tOS.CFArrayAppendValue (children, childIDToOs(((Integer)child).intValue()));", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tOS.CFArrayAppendValue (children, ((Accessible)child).axuielementref);", "-\t\t\t\t\t}", "-\t\t\t\t}\t\t\t", "-\t\t\t\tOS.SetEventParameter (theEvent, OS.kEventParamAccessibleAttributeValue, OS.typeCFMutableArrayRef, 4, new int [] {children});", "-\t\t\t\tOS.CFRelease(children);", "-\t\t\t\treturn OS.noErr;", "+\t\tint childID = getChildIDFromEvent(theEvent);", "+\t\tif (childID == ACC.CHILDID_SELF) {", "+\t\t\tAccessibleControlEvent event = new AccessibleControlEvent(this);", "+\t\t\tevent.childID = childID;", "+\t\t\tfor (int i = 0; i < accessibleControlListeners.size(); i++) {", "+\t\t\t\tAccessibleControlListener listener = (AccessibleControlListener) accessibleControlListeners.elementAt(i);", "+\t\t\t\tlistener.getChildren(event);", "+\t\t\t}", "+\t\t\tObject [] appChildren = event.children;", "+\t\t\tif (appChildren != null && appChildren.length > 0) {", "+\t\t\t\t/* return a CFArrayRef of AXUIElementRefs */", "+\t\t\t\tint children = OS.CFArrayCreateMutable (OS.kCFAllocatorDefault, 0, 0);", "+\t\t\t\tif (children != 0) {", "+\t\t\t\t\tfor (int i = 0; i < appChildren.length; i++) {", "+\t\t\t\t\t\tObject child = appChildren[i];", "+\t\t\t\t\t\tif (child instanceof Integer) {", "+\t\t\t\t\t\t\tOS.CFArrayAppendValue (children, childIDToOs(((Integer)child).intValue()));", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tOS.CFArrayAppendValue (children, ((Accessible)child).axuielementref);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}\t\t\t", "+\t\t\t\t\tOS.SetEventParameter (theEvent, OS.kEventParamAccessibleAttributeValue, OS.typeCFMutableArrayRef, 4, new int [] {children});", "+\t\t\t\t\tOS.CFRelease(children);", "+\t\t\t\t\treturn OS.noErr;", "+\t\t\t\t}"]}], "num": 2920}