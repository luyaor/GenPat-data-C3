{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4edd6faf1d8de3c76e68aeb87b29cfeb", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "426489a0d5bc91373cad666b07560571", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "f4bb8ef7d86d4b06d34d232ac624ae216be4183a", "commitAfterChange": "358e077459326bfde3a675b949aa20349d21bc3d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 6, "signatureBeforeChange": "  @Override public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  @Override public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["+", "+\t//For Date and Time, we cache the preffered size as there is no need to recompute it.", "+\tif (!changed && (isDate () || isTime ()) && OS.GTK3 && prefferedSize != null) {", "+\t\twidth = (wHint != SWT.DEFAULT) ? wHint : prefferedSize.x;", "+\t\theight= (hHint != SWT.DEFAULT) ? hHint : prefferedSize.y;", "+\t\treturn new Point (width,height);", "+\t}", "+", "-\t\tif ((style & SWT.CALENDAR) != 0) {", "-\t\t\tPoint size = computeNativeSize(handle, wHint, hHint, changed);", "+\t\tif (isCalendar ()) {", "+\t\t\tPoint size = computeNativeSize (containerHandle, wHint, hHint, changed);", "-\t\t} else { /* SWT.DATE and SWT.TIME */", "-\t\t\tGC gc = new GC(text);", "-\t\t\tPoint textSize = gc.stringExtent(getComputeSizeString(style));", "-\t\t\tgc.dispose();", "-\t\t\tRectangle trim = text.computeTrim(0, 0, textSize.x, textSize.y);", "-\t\t\tPoint buttonSize = down.computeSize(SWT.DEFAULT, SWT.DEFAULT, changed);", "-\t\t\twidth = trim.width + buttonSize.x;", "-\t\t\theight = Math.max(trim.height, buttonSize.y);", "+\t\t} else {", "+\t\t\tPoint textSize = computeNativeSize (textEntryHandle, wHint, hHint, changed);", "+\t\t\tRectangle trim = computeTrim (0,0, textSize.x,textSize.y);", "+\t\t\tif (isDateWithDropDownButton ()){", "+\t\t\t\tPoint buttonSize = down.computeSize (SWT.DEFAULT, SWT.DEFAULT, changed);", "+\t\t\t\twidth = trim.width + buttonSize.x;", "+\t\t\t\theight = Math.max (trim.height, buttonSize.y);", "+\t\t\t} else if (isDate () || isTime ()) {", "+\t\t\t\tif (OS.GTK3) {", "+\t\t\t\t\twidth = trim.width;", "+\t\t\t\t\theight = trim.height;", "+\t\t\t\t} else", "+\t\t\t\t{ //in GTK2, spin button looks broken if you incorperate the trim. Thus do not compute trim.", "+\t\t\t\t\twidth = textSize.x;", "+\t\t\t\t\theight = textSize.y;", "+\t\t\t\t}", "+\t\t\t}", "-\treturn new Point (width + 2*borderWidth, height+ 2*borderWidth);", "+", "+\tif (prefferedSize == null && (isDateWithDropDownButton () && OS.GTK3)) {", "+\t\tprefferedSize = new Point (width + 2*borderWidth, height+ 2*borderWidth);", "+\t\treturn prefferedSize;", "+\t} else {", "+\t\treturn new Point (width + 2*borderWidth, height+ 2*borderWidth);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41755b29e558f63f5730d358e20f702b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/datetime/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "f86b9ebe2b0df4c73482603496c165ab5faee1d3", "commitAfterChange": "8980b86038eacdc7bd892692fe36237fa3f5ae14", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["+\tint width = 0, height = 0;", "+\tRectangle trim;", "-\t\tPoint buttonSize = monthDown.computeSize(SWT.DEFAULT, SWT.DEFAULT);", "-\t\tint width = wHint == SWT.DEFAULT ? cellSize.x * 7 : wHint;", "-\t\tint height = hHint == SWT.DEFAULT ? cellSize.y * 7 + Math.max(cellSize.y, buttonSize.y) : hHint;", "-\t\tRectangle trim = computeTrim(0, 0, width, height);", "-\t\treturn new Point(trim.width, trim.height);", "+\t\tPoint buttonSize = monthDown.computeSize(SWT.DEFAULT, SWT.DEFAULT, changed);", "+\t\twidth = cellSize.x * 7;", "+\t\theight = cellSize.y * 7 + Math.max(cellSize.y, buttonSize.y);", "+\t} else { /* SWT.DATE and SWT.TIME */", "+\t\tGC gc = new GC(text);", "+\t\tPoint textSize = gc.stringExtent(getComputeSizeString(style));", "+\t\tgc.dispose();", "+\t\ttrim = text.computeTrim(0, 0, textSize.x, textSize.y);", "+\t\tPoint buttonSize = up.computeSize(SWT.DEFAULT, SWT.DEFAULT, changed);", "+\t\twidth = trim.width + buttonSize.x;", "+\t\theight = Math.max(trim.height, buttonSize.y);", "-\treturn super.computeSize (wHint, hHint, changed);", "+\tif (wHint != SWT.DEFAULT) width = wHint;", "+\tif (hHint != SWT.DEFAULT) height = hHint;", "+\tint borderWidth = getBorderWidth ();", "+\treturn new Point (width + 2*borderWidth, height + 2*borderWidth);", "+}"]}], "num": 62049}