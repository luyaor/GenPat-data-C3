{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "29150e472fc14bd2b870d7b575158649", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97dd2685c2454445d9746852ace7975d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/DropTarget.java", "commitBeforeChange": "0ef9617c1012a47a6d1ff1554f6abcb04cfa36ad", "commitAfterChange": "26cde76ce3c88c1f3b47c43e3bb62261f679e704", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public DropTarget(Control control, int style)", "signatureAfterChange": " public DropTarget(Control control, int style)", "diff": ["-\tif (control.getData(DROPTARGETID) != null)", "+\tif (DragTrackingHandler == null || DragTrackingHandler == null) {", "+\t}", "+\tif (control.getData(DROPTARGETID) != null) {", "+\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);", "+\t}", "-\t\t\tif (time >= dragOverStart) {", "-\t\t\t\t", "+\t\t\tif (time < dragOverStart) {", "+\t\t\t\tdelay = (int)(dragOverStart - time);", "+\t\t\t} else {\t", "-\t\t\t\t", "+\t\t\t\t//pass a copy of data types in to listeners in case application modifies it", "+\t\t\t\tTransferData[] dataTypes = new TransferData[allowedTypes.length];", "+\t\t\t\tSystem.arraycopy(allowedTypes, 0, dataTypes, 0, dataTypes.length);", "+\t", "-\t\t\t\tevent.widget = DropTarget.this.control;", "-\t\t\t\tevent.time = (int)time;", "+\t\t\t\tevent.widget = dragOverEvent.widget;", "+\t\t\t\tevent.time = (int)time;", "-\t\t\t\tevent.dataTypes  = allowedTypes;", "-\t\t\t\tevent.dataType  = selectedDataType;", "-\t\t\t\tevent.operations = allowedOperations;", "+\t\t\t\tevent.dataTypes = dataTypes;", "+\t\t\t\tevent.dataType = selectedDataType;", "+\t\t\t\tevent.operations = dragOverEvent.operations;", "-\t\t\t\tnotifyListeners(DND.DragOver, event);", "+\t\t\t\t", "+\t\t\t\ttry {", "+\t\t\t\t\tnotifyListeners(DND.DragOver, event);", "+\t\t\t\t} catch (Throwable e) {", "+\t\t\t\t\tevent.dataType = null;", "+\t\t\t\t\tevent.detail  = DND.DROP_NONE;", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\t", "-\t\t\t", "+", "-\t\t\t} else {", "-\t\t\t\tdelay = (int)(dragOverStart - time);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf898f157c3748553bfa7a6150aa2c9b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/DropTarget.java", "commitBeforeChange": "1c37647de5534f8029867b682ff6e27fa9349dcf", "commitAfterChange": "96591e42a75d692597f71a4a0cadb654241fef4e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r private int dragProcCallback(int widget, int client_data, int call_data)", "signatureAfterChange": "\r private int dragProcCallback(int widget, int client_data, int call_data)", "diff": ["+}\r", "+\t\t\t\tdragOverHeartbeat = new Runnable() {\r", "+\t\t\t\t\tpublic void run() {\r", "+\t\t\t\t\t\tif (control.isDisposed() || dragOverStart == 0) return;\r", "+\t\t\t\t\t\tlong time = System.currentTimeMillis();\r", "+\t\t\t\t\t\tint delay = DRAGOVER_HYSTERESIS;\r", "+\t\t\t\t\t\tif (time >= dragOverStart) {\r", "+\t\t\t\t\t\t\tDNDEvent event = new DNDEvent();\r", "+\t\t\t\t\t\t\tevent.widget = control;\r", "+\t\t\t\t\t\t\tevent.time = (int)time;\r", "+\t\t\t\t\t\t\tevent.x = dragOverEvent.x;\r", "+\t\t\t\t\t\t\tevent.y = dragOverEvent.y;\r", "+\t\t\t\t\t\t\tevent.dataTypes  = dragOverEvent.dataTypes;\r", "+\t\t\t\t\t\t\tevent.feedback = DND.FEEDBACK_SELECT;\r", "+\t\t\t\t\t\t\tevent.operations = dragOverEvent.operations;\r", "+\t\t\t\t\t\t\tevent.dataType  = dragOverEvent.dataType;\r", "+\t\t\t\t\t\t\tevent.detail  = dragOverEvent.detail;\r", "+\t\t\t\t\t\t\tnotifyListeners(DND.DragOver, event);\r", "+\t\t\t\t\t\t\teffect.show(event.feedback, event.x, event.y);\r", "+\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\tdelay = (int)(dragOverStart - time);\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t\tcontrol.getDisplay().timerExec(delay, dragOverHeartbeat);\r", "+\t\t\t\t\t}\r", "+\t\t\t\t};\r", "+\t\t\t\tupdateDragOverHover(DRAGOVER_HYSTERESIS, event);\r", "+\t\t\t\t\r", "+\t\t\t\tdragOverHeartbeat.run();\r", "+\t\t\t\tupdateDragOverHover(DRAGOVER_HYSTERESIS, event);\r", "+\t\t\t\tupdateDragOverHover(DRAGOVER_HYSTERESIS, event);\r", "+\t\t\t\tupdateDragOverHover(0, null);\r"]}], "num": 6236}