{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9eb327d94c563bea6fbb66f75dff1010", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cfba4dcbb67555e19eb7b07908c7868", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/carbon/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "2a9bec4cc92d05b864a6b5dea199e38d5dda5649", "commitAfterChange": "e466860c6da17975be249d6dc77b6da1b30692ab", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "  void handleEvent(int evt)", "signatureAfterChange": "  void handleEvent(int evt)", "diff": ["-\t\t* Bug in Safari.  Attempting to traverse out of Safari backwards (Shift+Tab) leaves", "-\t\t* Safari in a strange state where it no longer has focus but still receives keys.", "-\t\t* The Carbon-based Safari examples have the same problem.  The workaround is to", "-\t\t* only allow forward Tab traversals within the Browser.", "+\t\t* Bug in Safari.  As a result of using HIWebViewCreate on OSX versions < 10.5 (Leopard), attempting", "+\t\t* to traverse out of Safari backwards (Shift+Tab) leaves it in a strange state where Safari no", "+\t\t* longer has focus but still receives keys.  The Carbon-based Safari examples have the same", "+\t\t* problem.  The workaround is to only allow forward Tab traversals in the Browser on OSX < 10.5.", "-\t\tif (doit && keyEvent.keyCode == SWT.TAB && (keyEvent.stateMask & SWT.SHIFT) != 0) {", "+\t\tif (doit && OS.VERSION < 0x1050 && keyEvent.keyCode == SWT.TAB && (keyEvent.stateMask & SWT.SHIFT) != 0) {", "-\t\t\tif (keyEvent.keyCode == SWT.TAB && DOMEVENT_KEYUP.equals(typeString)) {", "-\t\t\t\tif (!hasNewFocusElement) {", "-\t\t\t\t\tbrowser.traverse(SWT.TRAVERSE_TAB_NEXT);", "-\t\t\t\t}", "+\t\t\tif (!hasNewFocusElement && keyEvent.keyCode == SWT.TAB && DOMEVENT_KEYUP.equals(typeString)) {", "+\t\t\t\tbrowser.traverse(SWT.TRAVERSE_TAB_NEXT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9a6c748524f74616b338143ab4d4274", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/carbon/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "8a9ef840bc86ae2bf34f98752798326225f9d841", "commitAfterChange": "37ab6e99930a6eb0c65b6690b0349f90233e4e96", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 58, "signatureBeforeChange": "  void handleEvent(int evt)", "signatureAfterChange": "  void handleEvent(int evt)", "diff": ["+\tif (typeString.equals(DOMEVENT_FOCUSIN)) {", "+\t\thasNewFocusElement = true;", "+\t\treturn;", "+\t}", "+\tif (typeString.equals(DOMEVENT_FOCUSOUT)) {", "+\t\thasNewFocusElement = false;", "+\t\treturn;", "+\t}", "+", "-\t\tif (!keyEvent.doit) {", "+", "+\t\tboolean doit = keyEvent.doit;", "+\t\t/*", "+\t\t* Bug in Safari.  Attempting to traverse out of Safari backwards (Shift+Tab) leaves", "+\t\t* Safari in a strange state where it no longer has focus but still receives keys.", "+\t\t* The Carbon-based Safari examples have the same problem.  The workaround is to", "+\t\t* only allow forward Tab traversals within the Browser.", "+\t\t*/", "+\t\tif (doit && keyEvent.keyCode == SWT.TAB && (keyEvent.stateMask & SWT.SHIFT) != 0) {", "+\t\t\tdoit = false;", "+\t\t}", "+\t\tif (!doit) {", "+\t\t} else {", "+\t\t\tif (keyEvent.keyCode == SWT.TAB && DOMEVENT_KEYUP.equals(typeString)) {", "+\t\t\t\tif (!hasNewFocusElement) {", "+\t\t\t\t\tbrowser.traverse(SWT.TRAVERSE_TAB_NEXT);", "+\t\t\t\t}", "+\t\t\t\thasNewFocusElement = false;", "+\t\t\t}"]}], "num": 47104}