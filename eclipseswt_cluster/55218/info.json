{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c8995e892ee5f6de30498df7816a5f20", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0164b7b99d2de90ae439f7411b16ce7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "6d671179e56122bf4c75081a96a44e45b06a5b27", "commitAfterChange": "33615efba6b3b14d1b8ee0928c8a1f12f629315a", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 21, "signatureBeforeChange": "  Point minimumSize (int wHint, int Hint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["+", "+public Point computeSize (int wHint, int hHint, boolean changed) {", "+\tPoint size = super.computeSize (wHint, hHint, changed);", "+\tif (toolBar != null) {", "+\t\tif (wHint == SWT.DEFAULT && toolBar.itemCount > 0) {", "+\t\t\tPoint tbSize = toolBar.computeSize (SWT.DEFAULT, SWT.DEFAULT);", "+\t\t\tsize.x = Math.max (tbSize.x, size.x);", "+\t\t}", "+\t}", "+\treturn size;", "-", "-Point minimumSize (int wHint, int Hint, boolean changed) {", "-\t// minimumSize is used by computeSize() to figure out how big the view", "-\t// (or, in this case, the content view of the Shell) should be.", "-\t// An NSToolbar does not contribute to the content area, but must be", "-\t// accounted for. If the shell has a toolbar but no other children", "-\t// this will return the width of the toolbar and a height of 1", "-\tControl [] children = _getChildren ();", "-\tint width = 0, height = 0;", "-\tfor (int i=0; i<children.length; i++) {", "-\t\tRectangle rect = children [i].getBounds ();", "-\t\twidth = Math.max (width, rect.x + rect.width);", "-\t\tif (children[i] != toolBar)\t{", "-\t\t\theight = Math.max (height, rect.y + rect.height);", "-\t\t} else {", "-\t\t\theight = Math.max (height, 1);", "-\t\t}", "-\t}", "-\treturn new Point (width, height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3a1071261299b8c269b75ce9d03e8ba", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "bf216ef6a93d103e9113ee67337be632fff4be9d", "commitAfterChange": "58098a35d5242498a1aa19f6b3c0a31e3d5b294c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["+\tPoint size = super.computeSize (wHint, hHint, changed);", "-\tint width = insetRect.left - insetRect.right, height = 0;", "+\tint width = insetRect.left - insetRect.right;", "-\tPoint size = null;", "-\tif (layout != null) {", "-\t\tsize = layout.computeSize (this, wHint, hHint, changed);", "-\t} else {", "-\t\tsize = minimumSize (wHint, hHint, changed);", "-\t}", "-\tif (size.x == 0) size.x = DEFAULT_WIDTH;", "-\tif (size.y == 0) size.y = DEFAULT_HEIGHT;", "-\tif (wHint != SWT.DEFAULT) size.x = wHint;", "-\tif (hHint != SWT.DEFAULT) size.y = hHint;", "-\twidth = Math.max (width, size.x);", "-\theight = Math.max (height, size.y);", "-\tRectangle trim = computeTrim (0, 0, width, height);", "-\twidth = trim.width;  height = trim.height;", "-\treturn new Point (width, height);", "+\tRECT rect = new RECT ();", "+\tOS.SetRect (rect, 0, 0, width, size.y);", "+\tOS.SendMessage (handle, OS.TCM_ADJUSTRECT, 1, rect);", "+\tint border = getBorderWidth ();", "+\trect.left -= border;  rect.right += border;", "+\twidth = rect.right - rect.left;", "+\tsize.x = Math.max (width, size.x);", "+\treturn size;"]}], "num": 55218}