{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3c9fad343659c4574f704be43670d5a6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88e767b6ff7c46b8beccbd04c8d9e45a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "60339544016210e2d9863cd6da13fc263df99fa6", "commitAfterChange": "9050491c59cdd7ef518ef2de78581f4975cc9bc7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \r void createHandle ()", "signatureAfterChange": "\r \r void createHandle ()", "diff": ["+\tint hwndToolTip = OS.SendMessage (handle, OS.TB_GETTOOLTIPS, 0, 0);\t\r", "-//\tint hwndToolTip = OS.SendMessage (handle, OS.TB_GETTOOLTIPS, 0, 0);\r", "+\t* Feature in Windows.  When the tool tip control is\r", "+\t* created, the parent of the tool tip is the shell.\r", "+\t* If SetParent () is used to reparent the tool bar\r", "+\t* into a new shell, the tool tip is not reparented\r", "+\t* and pops up underneath the new shell.  The fix is\r", "+\t* to make sure the tool tip is a topmost window.\r", "+\t*/\r", "+\tint flags = OS.SWP_NOACTIVATE | OS.SWP_NOMOVE | OS.SWP_NOSIZE;\r", "+\tOS.SetWindowPos (hwndToolTip, OS.HWND_TOPMOST, 0, 0, 0, 0, flags);\r", "+\r", "+\t/*\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a15466e7c54eb8646730a329d1b3d78", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "f2eaf4de8227661ef29880af04d52e370a50fc82", "commitAfterChange": "94a122c53cdac9ad83d93591a22041a78c4e39d5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public CoolBar (Composite parent, int style)", "signatureAfterChange": " public CoolBar (Composite parent, int style)", "diff": ["+\t/*", "+\t* Ensure that either of HORIZONTAL or VERTICAL is set.", "+\t* NOTE: HORIZONTAL and VERTICAL have the same values", "+\t* as H_SCROLL and V_SCROLL so it is necessary to first", "+\t* clear these bits to avoid scroll bars and then reset", "+\t* the bits using the original style supplied by the", "+\t* programmer.", "+\t* ", "+\t* NOTE: The CCS_VERT style cannot be applied when the", "+\t* widget is created because of this conflict.", "+\t*/", "+\tif ((style & SWT.VERTICAL) != 0) {", "+\t\tthis.style |= SWT.VERTICAL;", "+\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "+\t\tOS.SetWindowLong (handle, OS.GWL_STYLE, bits | OS.CCS_VERT);", "+\t} else {", "+\t\tthis.style |= SWT.HORIZONTAL;", "+\t}"]}], "num": 52390}