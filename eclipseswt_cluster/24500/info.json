{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "44b2a3f32b11294b3e67749e5b0c510e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f652870b1a2935435f500050338f27da", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "11d0b0d18bda846f1e5cb17f59bf97787897d9eb", "commitAfterChange": "52ff68e0ac086701551c8c0f3b36fff0b7b1fdea", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  int appleEventProc (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int appleEventProc (int nextHandler, int theEvent, int userData)", "diff": ["-\t\t\tint [] aeEventID = new int [1];", "-\t\t\tif (OS.GetEventParameter (theEvent, OS.kEventParamAEEventID, OS.typeType, null, 4, null, aeEventID) == OS.noErr) {", "-\t\t\t\tif (aeEventID [0] == OS.kAEQuitApplication) {", "-\t\t\t\t\tEvent event = new Event ();", "-\t\t\t\t\tsendEvent (SWT.Close, event);", "-\t\t\t\t\tif (event.doit) {", "-\t\t\t\t\t\t/*", "-\t\t\t\t\t\t* When the application is closing, no SWT program can continue", "-\t\t\t\t\t\t* to run.  In order to avoid running code after the display has", "-\t\t\t\t\t\t* been disposed, exit from Java.", "-\t\t\t\t\t\t*/", "-\t\t\t\t\t\tdispose ();", "-\t\t\t\t\t\tSystem.exit (0);", "-\t\t\t\t\t}", "-\t\t\t\t\treturn OS.userCanceledErr;", "-\t\t\t\t}", "+\t\t\tEventRecord eventRecord = new EventRecord ();", "+\t\t\tboolean release = false;", "+\t\t\tif (OS.IsEventInQueue (queue, theEvent)) {", "+\t\t\t\tOS.RetainEvent (theEvent);", "+\t\t\t\trelease = true;", "+\t\t\t\tOS.RemoveEventFromQueue (queue, theEvent);", "-\t\t\tbreak;", "+\t\t\tOS.ConvertEventRefToEventRecord (theEvent, eventRecord);", "+\t\t\tOS.AEProcessAppleEvent (eventRecord);", "+\t\t\tif (release) OS.ReleaseEvent (theEvent);", "+\t\t\treturn OS.noErr;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6d4456cab448af68e0ffc65800f4287", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 31, "signatureBeforeChange": " int getItemConnectorWidth()", "signatureAfterChange": " Rectangle getHitBounds ()", "diff": ["+ */", "+Rectangle getHitBounds () {", "+\tint contentX = getContentX (0);", "+\tint width = 0;", "+\tif (parent.getColumnCount () == 0) {", "+\t\twidth = getFocusX () + getTextPaintWidth (0) - contentX; ", "+\t} else {", "+\t\tTreeColumn column = parent.getColumn (0);", "+\t\twidth = column.getWidth () - contentX;", "+\t}", "+\treturn new Rectangle (contentX, parent.getItemY (this), width, parent.getItemHeight ());", "+}", "- */", "-int getItemConnectorWidth() {", "-\tTree parent = getParent();", "-\tPoint imageExtent = parent.getImageExtent();", "-\tint itemConnectorWidth;", "-\tint indicatorWidth = parent.getHierarchyIndicatorRect().width;", "-", "-\tif (imageExtent != null) {", "-\t\titemConnectorWidth = imageExtent.x / 2 + ITEM_CONNECTOR_PADDING;", "-\telse {", "-\t\titemConnectorWidth = DEFAULT_ITEM_CONNECTOR_WIDTH;", "-\tif (isLeaf() == false) {\t// has children = has hierarchy indicator = shorter connector", "-\t\titemConnectorWidth -= indicatorWidth / 2;", "-\t}", "-\treturn itemConnectorWidth;"]}], "num": 24500}