{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "74d4ef0d7f5d520d800076fa4494de63", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9104d91ed72aec66291625ab2ab3e0a3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "ac974de9da95e2001454f2d3c2ad1159e165254a", "commitAfterChange": "6eed09ef63d812f113250ffc9b38871b7bfdd632", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  void drawBorder(GC gc, int x, int y, GdkColor selectionColor)", "signatureAfterChange": "  void drawBorder(GC gc, int x, int y, GdkColor selectionColor)", "diff": ["-\t\tif (style.underline && style.underlineColor != null && OS.GTK_VERSION < OS.VERSION(2, 6, 0)) drawUnderline = true;", "+\t\tif (style.underline && style.underlineColor != null) drawUnderline = true;", "-\t\tif (style.strikeout && style.strikeoutColor != null && OS.GTK_VERSION < OS.VERSION(2, 6, 0)) drawStrikeout = true;", "+\t\tif (style.strikeout && style.strikeoutColor != null) drawStrikeout = true;", "-\t\tint byteStart = (int)/*64*/(OS.g_utf8_offset_to_pointer(ptr, styles[i].start) - ptr);", "-\t\tint byteEnd = (int)/*64*/(OS.g_utf8_offset_to_pointer(ptr, styles[i+1].start) - ptr);", "+\t\tint start = translateOffset(styles[i].start);", "+\t\tint end = translateOffset(styles[i+1].start - 1);", "+\t\tint byteStart = (int)/*64*/(OS.g_utf8_offset_to_pointer(ptr, start) - ptr);", "+\t\tint byteEnd = (int)/*64*/(OS.g_utf8_offset_to_pointer(ptr, end + 1) - ptr);", "-\t\t\t\tGdkColor color = selectionColor;", "+\t\t\t\tGdkColor color = null;", "+\t\t\t\tif (color == null && selectionColor != null) color = selectionColor;", "-\t\t\t\tGdkColor color = selectionColor;", "+\t\t\t\tGdkColor color = null;", "+\t\t\t\tif (color == null && selectionColor != null) color = selectionColor;", "+\t\t\t\tif (color == null && style.foreground != null) color = style.foreground.handle;", "-\t\t\t\tOS.gdk_gc_set_foreground(gdkGC, color);", "+\t\t\t\tif (cairo != 0 && OS.GTK_VERSION >= OS.VERSION(2, 8, 0)) {", "+\t\t\t\t\tCairo.cairo_set_source_rgba(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF, data.alpha / (float)0xFF);", "+\t\t\t\t} else {", "+\t\t\t\t\tOS.gdk_gc_set_foreground(gdkGC, color);", "+\t\t\t\t}", "+\t\t\t\tint underlinePosition = -1;", "-\t\t\t\tOS.gdk_gc_set_line_attributes(gdkGC, underlineThickness, OS.GDK_LINE_SOLID, OS.GDK_CAP_BUTT, OS.GDK_JOIN_MITER);", "+\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION(2, 6, 0)) {", "+\t\t\t\t\tFont font = style.font;", "+\t\t\t\t\tif (font == null) font = this.font;", "+\t\t\t\t\tif (font == null) font = device.systemFont;", "+\t\t\t\t\tint /*long*/ lang = OS.pango_context_get_language(context);", "+\t\t\t\t\tint /*long*/ metrics = OS.pango_context_get_metrics(context, font.handle, lang);", "+\t\t\t\t\tunderlinePosition = OS.PANGO_PIXELS(OS.pango_font_metrics_get_underline_position(metrics));", "+\t\t\t\t\tunderlineThickness = OS.PANGO_PIXELS(OS.pango_font_metrics_get_underline_thickness(metrics));", "+\t\t\t\t\tOS.pango_font_metrics_unref(metrics);", "+\t\t\t\t}", "-\t\t\t\t\tint underlineY = rect.y + metrics.ascent + 1 - style.rise;", "+\t\t\t\t\tint underlineY = rect.y + metrics.ascent - underlinePosition - style.rise;", "-\t\t\t\t\t\t\tOS.gdk_draw_lines(data.drawable, gdkGC, points, points.length / 2);", "+\t\t\t\t\t\t\tif (cairo != 0 && OS.GTK_VERSION >= OS.VERSION(2, 8, 0)) {", "+\t\t\t\t\t\t\t\tCairo.cairo_set_line_width(cairo, squigglyThickness);", "+\t\t\t\t\t\t\t\tCairo.cairo_set_line_cap(cairo, Cairo.CAIRO_LINE_CAP_BUTT);", "+\t\t\t\t\t\t\t\tCairo.cairo_set_line_join(cairo, Cairo.CAIRO_LINE_JOIN_MITER);", "+\t\t\t\t\t\t\t\tif (points.length > 0) {", "+\t\t\t\t\t\t\t\t\tdouble xOffset = 0.5, yOffset = 0.5; ", "+\t\t\t\t\t\t\t\t\tCairo.cairo_move_to(cairo, points[0] + xOffset, points[1] + yOffset);", "+\t\t\t\t\t\t\t\t\tfor (int k = 2; k < points.length; k += 2) {", "+\t\t\t\t\t\t\t\t\t\tCairo.cairo_line_to(cairo, points[k] + xOffset, points[k + 1] + yOffset);", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tCairo.cairo_stroke(cairo);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t} else {\t", "+\t\t\t\t\t\t\t\tOS.gdk_gc_set_line_attributes(gdkGC, squigglyThickness, OS.GDK_LINE_SOLID, OS.GDK_CAP_BUTT, OS.GDK_JOIN_MITER);", "+\t\t\t\t\t\t\t\tOS.gdk_draw_lines(data.drawable, gdkGC, points, points.length / 2);", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tOS.gdk_draw_line(data.drawable, gdkGC, rect.x, underlineY + underlineThickness * 2, rect.x + rect.width, underlineY + underlineThickness * 2);", "+\t\t\t\t\t\t\tif (cairo != 0 && OS.GTK_VERSION >= OS.VERSION(2, 8, 0)) {", "+\t\t\t\t\t\t\t\tCairo.cairo_rectangle(cairo, rect.x, underlineY + underlineThickness * 2, rect.width, underlineThickness);", "+\t\t\t\t\t\t\t\tCairo.cairo_fill(cairo);", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tOS.gdk_draw_rectangle(data.drawable, gdkGC, 1, rect.x, underlineY + underlineThickness * 2, rect.width, underlineThickness);", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tOS.gdk_draw_line(data.drawable, gdkGC, rect.x, underlineY, rect.x + rect.width, underlineY);", "+\t\t\t\t\t\t\tif (cairo != 0 && OS.GTK_VERSION >= OS.VERSION(2, 8, 0)) {", "+\t\t\t\t\t\t\t\tCairo.cairo_rectangle(cairo, rect.x, underlineY, rect.width, underlineThickness);", "+\t\t\t\t\t\t\t\tCairo.cairo_fill(cairo);", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tOS.gdk_draw_rectangle(data.drawable, gdkGC, 1, rect.x, underlineY, rect.width, underlineThickness);", "+\t\t\t\t\t\t\t}", "-\t\t\t\tGdkColor color = selectionColor;", "+\t\t\t\tGdkColor color = null;", "+\t\t\t\tif (color == null && selectionColor != null) color = selectionColor;", "+\t\t\t\tif (color == null && style.foreground != null) color = style.foreground.handle;", "-\t\t\t\tOS.gdk_gc_set_foreground(gdkGC, color);", "+\t\t\t\tif (cairo != 0 && OS.GTK_VERSION >= OS.VERSION(2, 8, 0)) {", "+\t\t\t\t\tCairo.cairo_set_source_rgba(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF, data.alpha / (float)0xFF);", "+\t\t\t\t} else {", "+\t\t\t\t\tOS.gdk_gc_set_foreground(gdkGC, color);", "+\t\t\t\t}", "+\t\t\t\tint strikeoutPosition = -1;", "-\t\t\t\tOS.gdk_gc_set_line_attributes(gdkGC, strikeoutThickness, OS.GDK_LINE_SOLID, OS.GDK_CAP_BUTT, OS.GDK_JOIN_MITER);", "+\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION(2, 6, 0)) {", "+\t\t\t\t\tFont font = style.font;", "+\t\t\t\t\tif (font == null) font = this.font;", "+\t\t\t\t\tif (font == null) font = device.systemFont;", "+\t\t\t\t\tint /*long*/ lang = OS.pango_context_get_language(context);", "+\t\t\t\t\tint /*long*/ metrics = OS.pango_context_get_metrics(context, font.handle, lang);", "+\t\t\t\t\tstrikeoutPosition = OS.PANGO_PIXELS(OS.pango_font_metrics_get_strikethrough_position(metrics));", "+\t\t\t\t\tstrikeoutThickness = OS.PANGO_PIXELS(OS.pango_font_metrics_get_strikethrough_thickness(metrics));", "+\t\t\t\t\tOS.pango_font_metrics_unref(metrics);", "+\t\t\t\t}", "-\t\t\t\t\tint strikeoutY = rect.y + rect.height / 2;", "-\t\t\t\t\tOS.gdk_draw_line(data.drawable, gdkGC, rect.x, strikeoutY, rect.x + rect.width - 1, strikeoutY);", "+\t\t\t\t\tint strikeoutY = rect.y + rect.height / 2 - style.rise;", "+\t\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION(2, 6, 0)) {", "+\t\t\t\t\t\tint offset = getOffset(rect.x - x, rect.y - y, null);", "+\t\t\t\t\t\tint lineIndex = getLineIndex(offset);", "+\t\t\t\t\t\tFontMetrics metrics = getLineMetrics(lineIndex);", "+\t\t\t\t\t\tstrikeoutY = rect.y + metrics.ascent - strikeoutPosition - style.rise;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (cairo != 0 && OS.GTK_VERSION >= OS.VERSION(2, 8, 0)) {", "+\t\t\t\t\t\tCairo.cairo_rectangle(cairo, rect.x, strikeoutY, rect.width, strikeoutThickness);", "+\t\t\t\t\t\tCairo.cairo_fill(cairo);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tOS.gdk_draw_rectangle(data.drawable, gdkGC, 1, rect.x, strikeoutY, rect.width, strikeoutThickness);", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc98fd4843b56d9897f647925058b4f7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "2c8787f90b3c8a7312f4b411ab7ee4586da3407f", "commitAfterChange": "a0c1f03fb4ceb2772afc376ff5167fd9d3ca7414", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  void drawBorder(GC gc, int x, int y, GdkColor selectionColor)", "signatureAfterChange": "  void drawBorder(GC gc, int x, int y, GdkColor selectionColor)", "diff": ["-\tif (cairo != 0 && OS.GTK_VERSION >= OS.VERSION(2, 8, 0)) {", "+\tif (cairo != 0) {", "-\t\t\t\tif (cairo != 0 && OS.GTK_VERSION >= OS.VERSION(2, 8, 0)) {", "+\t\t\t\tif (cairo != 0) {", "-\t\t", "-\t\tboolean drawUnderline = false;", "-\t\tif (style.underline && style.underlineColor != null) drawUnderline = true;", "-\t\tif (style.underline && (style.underlineStyle == SWT.UNDERLINE_ERROR || style.underlineStyle == SWT.UNDERLINE_SQUIGGLE)&& OS.GTK_VERSION < OS.VERSION(2, 4, 0)) drawUnderline = true;", "-\t\tif (drawUnderline && !style.isAdherentUnderline(styles[i+1].style)) {", "-\t\t\tint start = styles[i].start;", "-\t\t\tfor (int j = i; j > 0 && style.isAdherentUnderline(styles[j-1].style); j--) {", "-\t\t\t\tstart = styles[j - 1].start;", "-\t\t\t}", "-\t\t\tstart = translateOffset(start);", "-\t\t\tint end = translateOffset(styles[i+1].start - 1);", "-\t\t\tint byteStart = (int)/*64*/(OS.g_utf16_offset_to_pointer(ptr, start) - ptr);", "-\t\t\tint byteEnd = (int)/*64*/(OS.g_utf16_offset_to_pointer(ptr, end + 1) - ptr);", "-\t\t\tint[] ranges = new int[]{byteStart, byteEnd};", "-\t\t\tint /*long*/ rgn = OS.gdk_pango_layout_get_clip_region(layout, x, y, ranges, ranges.length / 2);", "-\t\t\tif (rgn != 0) {", "-\t\t\t\tint[] nRects = new int[1];", "-\t\t\t\tint /*long*/[] rects = new int /*long*/[1];", "-\t\t\t\tOS.gdk_region_get_rectangles(rgn, rects, nRects);", "-\t\t\t\tGdkRectangle rect = new GdkRectangle();", "-\t\t\t\tGdkColor color = null;", "-\t\t\t\tif (color == null && style.underlineColor != null) color = style.underlineColor.handle;", "-\t\t\t\tif (color == null && selectionColor != null) color = selectionColor;", "-\t\t\t\tif (color == null && style.foreground != null) color = style.foreground.handle;", "-\t\t\t\tif (color == null) color = data.foreground;", "-\t\t\t\tif (cairo != 0 && OS.GTK_VERSION >= OS.VERSION(2, 8, 0)) {", "-\t\t\t\t\tCairo.cairo_set_source_rgba(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF, data.alpha / (float)0xFF);", "-\t\t\t\t} else {", "-\t\t\t\t\tif (gcValues == null) {", "-\t\t\t\t\t\tgcValues = new GdkGCValues();", "-\t\t\t\t\t\tOS.gdk_gc_get_values(gdkGC, gcValues);", "-\t\t\t\t\t}", "-\t\t\t\t\tOS.gdk_gc_set_foreground(gdkGC, color);", "-\t\t\t\t}", "-\t\t\t\tint underlinePosition = -1;", "-\t\t\t\tint underlineThickness = 1;", "-\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION(2, 6, 0)) {", "-\t\t\t\t\tFont font = style.font;", "-\t\t\t\t\tif (font == null) font = this.font;", "-\t\t\t\t\tif (font == null) font = device.systemFont;", "-\t\t\t\t\tint /*long*/ lang = OS.pango_context_get_language(context);", "-\t\t\t\t\tint /*long*/ metrics = OS.pango_context_get_metrics(context, font.handle, lang);", "-\t\t\t\t\tunderlinePosition = OS.PANGO_PIXELS(OS.pango_font_metrics_get_underline_position(metrics));", "-\t\t\t\t\tunderlineThickness = OS.PANGO_PIXELS(OS.pango_font_metrics_get_underline_thickness(metrics));", "-\t\t\t\t\tOS.pango_font_metrics_unref(metrics);", "-\t\t\t\t}", "-\t\t\t\tfor (int j=0; j<nRects[0]; j++) {", "-\t\t\t\t\tOS.memmove(rect, rects[0] + (j * GdkRectangle.sizeof), GdkRectangle.sizeof);", "-\t\t\t\t\tint offset = getOffset(rect.x - x, rect.y - y, null);", "-\t\t\t\t\tint lineIndex = getLineIndex(offset);", "-\t\t\t\t\tFontMetrics metrics = getLineMetrics(lineIndex);", "-\t\t\t\t\tint underlineY = rect.y + metrics.ascent - underlinePosition - style.rise;", "-\t\t\t\t\tswitch (style.underlineStyle) {", "-\t\t\t\t\t\tcase SWT.UNDERLINE_SQUIGGLE:", "-\t\t\t\t\t\tcase SWT.UNDERLINE_ERROR: {", "-\t\t\t\t\t\t\tint squigglyThickness = underlineThickness;", "-\t\t\t\t\t\t\tint squigglyHeight = 2 * squigglyThickness;", "-\t\t\t\t\t\t\tint squigglyY = Math.min(underlineY, rect.y + rect.height - squigglyHeight - 1);", "-\t\t\t\t\t\t\tint[] points = computePolyline(rect.x, squigglyY, rect.x + rect.width, squigglyY + squigglyHeight);", "-\t\t\t\t\t\t\tif (cairo != 0 && OS.GTK_VERSION >= OS.VERSION(2, 8, 0)) {", "-\t\t\t\t\t\t\t\tCairo.cairo_set_line_width(cairo, squigglyThickness);", "-\t\t\t\t\t\t\t\tCairo.cairo_set_line_cap(cairo, Cairo.CAIRO_LINE_CAP_BUTT);", "-\t\t\t\t\t\t\t\tCairo.cairo_set_line_join(cairo, Cairo.CAIRO_LINE_JOIN_MITER);", "-\t\t\t\t\t\t\t\tif (points.length > 0) {", "-\t\t\t\t\t\t\t\t\tdouble xOffset = 0.5, yOffset = 0.5; ", "-\t\t\t\t\t\t\t\t\tCairo.cairo_move_to(cairo, points[0] + xOffset, points[1] + yOffset);", "-\t\t\t\t\t\t\t\t\tfor (int k = 2; k < points.length; k += 2) {", "-\t\t\t\t\t\t\t\t\t\tCairo.cairo_line_to(cairo, points[k] + xOffset, points[k + 1] + yOffset);", "-\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\tCairo.cairo_stroke(cairo);", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t} else {\t", "-\t\t\t\t\t\t\t\tOS.gdk_gc_set_line_attributes(gdkGC, squigglyThickness, OS.GDK_LINE_SOLID, OS.GDK_CAP_BUTT, OS.GDK_JOIN_MITER);", "-\t\t\t\t\t\t\t\tOS.gdk_draw_lines(data.drawable, gdkGC, points, points.length / 2);", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tcase SWT.UNDERLINE_DOUBLE:", "-\t\t\t\t\t\t\tif (cairo != 0 && OS.GTK_VERSION >= OS.VERSION(2, 8, 0)) {", "-\t\t\t\t\t\t\t\tCairo.cairo_rectangle(cairo, rect.x, underlineY + underlineThickness * 2, rect.width, underlineThickness);", "-\t\t\t\t\t\t\t\tCairo.cairo_fill(cairo);", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tOS.gdk_draw_rectangle(data.drawable, gdkGC, 1, rect.x, underlineY + underlineThickness * 2, rect.width, underlineThickness);", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t//FALLTHROUGH", "-\t\t\t\t\t\tcase SWT.UNDERLINE_LINK:", "-\t\t\t\t\t\tcase SWT.UNDERLINE_SINGLE:", "-\t\t\t\t\t\t\tif (cairo != 0 && OS.GTK_VERSION >= OS.VERSION(2, 8, 0)) {", "-\t\t\t\t\t\t\t\tCairo.cairo_rectangle(cairo, rect.x, underlineY, rect.width, underlineThickness);", "-\t\t\t\t\t\t\t\tCairo.cairo_fill(cairo);", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tOS.gdk_draw_rectangle(data.drawable, gdkGC, 1, rect.x, underlineY, rect.width, underlineThickness);", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tif (rects[0] != 0) OS.g_free(rects[0]);", "-\t\t\t\tOS.gdk_region_destroy(rgn);", "-\t\t\t}", "-\t\t}", "-\t\t", "-\t\tboolean drawStrikeout = false;", "-\t\tif (style.strikeout && style.strikeoutColor != null) drawStrikeout = true;", "-\t\tif (drawStrikeout && !style.isAdherentStrikeout(styles[i+1].style)) {", "-\t\t\tint start = styles[i].start;", "-\t\t\tfor (int j = i; j > 0 && style.isAdherentStrikeout(styles[j-1].style); j--) {", "-\t\t\t\tstart = styles[j - 1].start;", "-\t\t\t}", "-\t\t\tstart = translateOffset(start);", "-\t\t\tint end = translateOffset(styles[i+1].start - 1);", "-\t\t\tint byteStart = (int)/*64*/(OS.g_utf16_offset_to_pointer(ptr, start) - ptr);", "-\t\t\tint byteEnd = (int)/*64*/(OS.g_utf16_offset_to_pointer(ptr, end + 1) - ptr);", "-\t\t\tint[] ranges = new int[]{byteStart, byteEnd};", "-\t\t\tint /*long*/ rgn = OS.gdk_pango_layout_get_clip_region(layout, x, y, ranges, ranges.length / 2);", "-\t\t\tif (rgn != 0) {", "-\t\t\t\tint[] nRects = new int[1];", "-\t\t\t\tint /*long*/[] rects = new int /*long*/[1];", "-\t\t\t\tOS.gdk_region_get_rectangles(rgn, rects, nRects);", "-\t\t\t\tGdkRectangle rect = new GdkRectangle();", "-\t\t\t\tGdkColor color = null;", "-\t\t\t\tif (color == null && style.strikeoutColor != null) color = style.strikeoutColor.handle;", "-\t\t\t\tif (color == null && selectionColor != null) color = selectionColor;", "-\t\t\t\tif (color == null && style.foreground != null) color = style.foreground.handle;", "-\t\t\t\tif (color == null) color = data.foreground;", "-\t\t\t\tif (cairo != 0 && OS.GTK_VERSION >= OS.VERSION(2, 8, 0)) {", "-\t\t\t\t\tCairo.cairo_set_source_rgba(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF, data.alpha / (float)0xFF);", "-\t\t\t\t} else {", "-\t\t\t\t\tif (gcValues == null) {", "-\t\t\t\t\t\tgcValues = new GdkGCValues();", "-\t\t\t\t\t\tOS.gdk_gc_get_values(gdkGC, gcValues);", "-\t\t\t\t\t}", "-\t\t\t\t\tOS.gdk_gc_set_foreground(gdkGC, color);", "-\t\t\t\t}", "-\t\t\t\tint strikeoutPosition = -1;", "-\t\t\t\tint strikeoutThickness = 1;", "-\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION(2, 6, 0)) {", "-\t\t\t\t\tFont font = style.font;", "-\t\t\t\t\tif (font == null) font = this.font;", "-\t\t\t\t\tif (font == null) font = device.systemFont;", "-\t\t\t\t\tint /*long*/ lang = OS.pango_context_get_language(context);", "-\t\t\t\t\tint /*long*/ metrics = OS.pango_context_get_metrics(context, font.handle, lang);", "-\t\t\t\t\tstrikeoutPosition = OS.PANGO_PIXELS(OS.pango_font_metrics_get_strikethrough_position(metrics));", "-\t\t\t\t\tstrikeoutThickness = OS.PANGO_PIXELS(OS.pango_font_metrics_get_strikethrough_thickness(metrics));", "-\t\t\t\t\tOS.pango_font_metrics_unref(metrics);", "-\t\t\t\t}", "-\t\t\t\tfor (int j=0; j<nRects[0]; j++) {", "-\t\t\t\t\tOS.memmove(rect, rects[0] + (j * GdkRectangle.sizeof), GdkRectangle.sizeof);", "-\t\t\t\t\tint strikeoutY = rect.y + rect.height / 2 - style.rise;", "-\t\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION(2, 6, 0)) {", "-\t\t\t\t\t\tint offset = getOffset(rect.x - x, rect.y - y, null);", "-\t\t\t\t\t\tint lineIndex = getLineIndex(offset);", "-\t\t\t\t\t\tFontMetrics metrics = getLineMetrics(lineIndex);", "-\t\t\t\t\t\tstrikeoutY = rect.y + metrics.ascent - strikeoutPosition - style.rise;", "-\t\t\t\t\t}", "-\t\t\t\t\tif (cairo != 0 && OS.GTK_VERSION >= OS.VERSION(2, 8, 0)) {", "-\t\t\t\t\t\tCairo.cairo_rectangle(cairo, rect.x, strikeoutY, rect.width, strikeoutThickness);", "-\t\t\t\t\t\tCairo.cairo_fill(cairo);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tOS.gdk_draw_rectangle(data.drawable, gdkGC, 1, rect.x, strikeoutY, rect.width, strikeoutThickness);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tif (rects[0] != 0) OS.g_free(rects[0]);", "-\t\t\t\tOS.gdk_region_destroy(rgn);", "-\t\t\t}", "-\t\t}", "-\tif (cairo != 0 && OS.GTK_VERSION >= OS.VERSION(2, 8, 0)) {", "+\tif (cairo != 0) {"]}], "num": 45206}