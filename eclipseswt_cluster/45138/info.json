{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "97561ee5c0f0e77e384ffcf696f45608", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38af45897175fc8d491f7d458cf89820", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "f699db6750189f737837a9f6195bd87512c2c588", "commitAfterChange": "ece89cfb21571317fb6c86186d3424edb03c00a2", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 120, "signatureBeforeChange": "  int windowProc (int hwnd, int msg, int wParam, int lParam)", "signatureAfterChange": "  int windowProc (int hwnd, int msg, int wParam, int lParam)", "diff": ["-\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "-\t\tif (hwnd == hwndHeader) {", "-\t\t\tswitch (msg) {", "-\t\t\t\t/* This code is intentionally commented */", "-//\t\t\t\tcase OS.WM_CONTEXTMENU: {", "-//\t\t\t\t\tLRESULT result = wmContextMenu (hwnd, wParam, lParam);", "-//\t\t\t\t\tif (result != null) return result.value;", "-//\t\t\t\t\tbreak;", "-//\t\t\t\t}", "-\t\t\t\tcase OS.WM_CAPTURECHANGED: {", "-\t\t\t\t\t/*", "-\t\t\t\t\t* Bug in Windows.  When the capture changes during a", "-\t\t\t\t\t* header drag, Windows does not redraw the header item", "-\t\t\t\t\t* such that the header remains pressed.  For example,", "-\t\t\t\t\t* when focus is assigned to a push button, the mouse is", "-\t\t\t\t\t* pressed (but not released), then the SPACE key is", "-\t\t\t\t\t* pressed to activate the button, the capture changes,", "-\t\t\t\t\t* the header not notified and NM_RELEASEDCAPTURE is not", "-\t\t\t\t\t* sent.  The fix is to redraw the header when the capture", "-\t\t\t\t\t* changes to another control.", "-\t\t\t\t\t* ", "-\t\t\t\t\t* This does not happen on XP.", "-\t\t\t\t\t*/", "-\t\t\t\t\tif (OS.COMCTL32_MAJOR < 6) {", "-\t\t\t\t\t\tif (lParam != 0 && lParam != hwndHeader) {", "-\t\t\t\t\t\t\tOS.InvalidateRect (hwndHeader, null, true);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t\tcase OS.WM_MOUSELEAVE: {", "-\t\t\t\t\t/*", "-\t\t\t\t\t* Bug in Windows.  On XP, when a tooltip is hidden", "-\t\t\t\t\t* due to a time out or mouse press, the tooltip", "-\t\t\t\t\t* remains active although no longer visible and", "-\t\t\t\t\t* won't show again until another tooltip becomes", "-\t\t\t\t\t* active.  The fix is to reset the tooltip bounds.", "-\t\t\t\t\t*/", "-\t\t\t\t\tif (OS.COMCTL32_MAJOR >= 6) updateHeaderToolTips ();", "-\t\t\t\t\tupdateHeaderToolTips ();", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t\tcase OS.WM_NOTIFY: {", "-\t\t\t\t\tNMHDR hdr = new NMHDR ();", "-\t\t\t\t\tOS.MoveMemory (hdr, lParam, NMHDR.sizeof);", "-\t\t\t\t\tswitch (hdr.code) {", "-\t\t\t\t\t\tcase OS.TTN_SHOW:", "-\t\t\t\t\t\tcase OS.TTN_POP: ", "-\t\t\t\t\t\tcase OS.TTN_GETDISPINFOA:", "-\t\t\t\t\t\tcase OS.TTN_GETDISPINFOW:", "-\t\t\t\t\t\t\treturn OS.SendMessage (handle, msg, wParam, lParam);", "+\t\tswitch (msg) {", "+\t\t\t/* This code is intentionally commented */", "+//\t\t\tcase OS.WM_CONTEXTMENU: {", "+//\t\t\t\tLRESULT result = wmContextMenu (hwnd, wParam, lParam);", "+//\t\t\t\tif (result != null) return result.value;", "+//\t\t\t\tbreak;", "+//\t\t\t}", "+\t\t\tcase OS.WM_CAPTURECHANGED: {", "+\t\t\t\t/*", "+\t\t\t\t* Bug in Windows.  When the capture changes during a", "+\t\t\t\t* header drag, Windows does not redraw the header item", "+\t\t\t\t* such that the header remains pressed.  For example,", "+\t\t\t\t* when focus is assigned to a push button, the mouse is", "+\t\t\t\t* pressed (but not released), then the SPACE key is", "+\t\t\t\t* pressed to activate the button, the capture changes,", "+\t\t\t\t* the header not notified and NM_RELEASEDCAPTURE is not", "+\t\t\t\t* sent.  The fix is to redraw the header when the capture", "+\t\t\t\t* changes to another control.", "+\t\t\t\t* ", "+\t\t\t\t* This does not happen on XP.", "+\t\t\t\t*/", "+\t\t\t\tif (OS.COMCTL32_MAJOR < 6) {", "+\t\t\t\t\tif (lParam != 0) {", "+\t\t\t\t\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "+\t\t\t\t\t\tif (lParam != hwndHeader) OS.InvalidateRect (hwndHeader, null, true);", "+\t\t\t\tbreak;", "-\t\t\treturn callWindowProc (hwnd, msg, wParam, lParam);", "+\t\t\tcase OS.WM_MOUSELEAVE: {", "+\t\t\t\t/*", "+\t\t\t\t* Bug in Windows.  On XP, when a tooltip is hidden", "+\t\t\t\t* due to a time out or mouse press, the tooltip", "+\t\t\t\t* remains active although no longer visible and", "+\t\t\t\t* won't show again until another tooltip becomes", "+\t\t\t\t* active.  The fix is to reset the tooltip bounds.", "+\t\t\t\t*/", "+\t\t\t\tif (OS.COMCTL32_MAJOR >= 6) updateHeaderToolTips ();", "+\t\t\t\tupdateHeaderToolTips ();", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t\tcase OS.WM_NOTIFY: {", "+\t\t\t\tNMHDR hdr = new NMHDR ();", "+\t\t\t\tOS.MoveMemory (hdr, lParam, NMHDR.sizeof);", "+\t\t\t\tswitch (hdr.code) {", "+\t\t\t\t\tcase OS.TTN_SHOW:", "+\t\t\t\t\tcase OS.TTN_POP: ", "+\t\t\t\t\tcase OS.TTN_GETDISPINFOA:", "+\t\t\t\t\tcase OS.TTN_GETDISPINFOW:", "+\t\t\t\t\t\treturn OS.SendMessage (handle, msg, wParam, lParam);", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\treturn callWindowProc (hwnd, msg, wParam, lParam);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ad5512a316fda78f8ba23d481df33ed", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/FontDialog.java", "commitBeforeChange": "e1128c0d5e9e7b8b4e65a3a4aaf19424d2b37dc9", "commitAfterChange": "2ad35a79e1da2fe8318bbce6af2fdb11b9910104", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " void initStyleCombo ()", "signatureAfterChange": " void initStyleCombo ()", "diff": ["-\tint size = DEFAULT_SIZE;\r", "-\t\tsize = Integer.valueOf (fontSizeCombo.getText ()).intValue ();\r", "+\t\tint size = Integer.valueOf (fontSizeCombo.getText ()).intValue ();\r", "+\t\tif (size > 0) {\r", "+\t\t\tHashtable styles = getStyles (characterSet, faceName, extStyle, size);\r", "+\t\t\tsetItemsSorted (fontStyleCombo, styles);\r", "+\t\t}\r", "-\t\t/*\r", "-\t\t * This block is purposely left empty since a default\r", "-\t\t * value is already specified above.\r", "-\t\t */\r", "+\t\t// fall through\r", "-\tHashtable styles = getStyles (characterSet, faceName, extStyle, size);\r", "-\tif (styles == null) return;\r", "-\tsetItemsSorted (fontStyleCombo, styles);\r", "-\t\r", "+\r"]}], "num": 45138}