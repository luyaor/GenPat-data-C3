{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5fdd7216ba4688c358e146f91d9f37e6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7cdc7b1ad96bbc3be03b204c38d6c1c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/gtk/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "50faacc77c8469b77cc806df42849ac7cbcd65bc", "commitAfterChange": "980f8449da2a6c3333d608f725147751f134ab5c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public Browser(Composite parent, int style)", "signatureAfterChange": " public Browser(Composite parent, int style)", "diff": ["+\t\tString prefLocales = null;", "+\t\tnsIPrefLocalizedString localizedString = null;", "-\t\tif (rc != XPCOM.NS_OK) error(rc);", "-\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "-", "-\t\tnsIPrefLocalizedString localizedString = new nsIPrefLocalizedString(result[0]);", "+\t\t/* ", "+\t\t * Feature of Debian.  For some reason attempting to query for the current locale", "+\t\t * preference fails on Debian.  The workaround for this is to assume a value of", "+\t\t * \"en-us,en\" since this is typically the default value when mozilla is used without", "+\t\t * a profile.", "+\t\t */", "+\t\tif (rc != XPCOM.NS_OK) {", "+\t\t\tprefLocales = \"en-us,en\" + TOKENIZER_LOCALE;\t//$NON-NLS-1$", "+\t\t} else {", "+\t\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "+\t\t\tlocalizedString = new nsIPrefLocalizedString(result[0]);", "+\t\t\tresult[0] = 0;", "+\t\t\trc = localizedString.ToString(result);", "+\t\t\tif (rc != XPCOM.NS_OK) error(rc);", "+\t\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "+\t\t\tint length = XPCOM.strlen_PRUnichar(result[0]);", "+\t\t\tchar[] dest = new char[length];", "+\t\t\tXPCOM.memmove(dest, result[0], length * 2);", "+\t\t\tprefLocales = new String(dest) + TOKENIZER_LOCALE;", "+\t\t}", "-\t\trc = localizedString.ToString(result);", "-\t\tif (rc != XPCOM.NS_OK) error(rc);", "-\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "-\t\tint length = XPCOM.strlen_PRUnichar(result[0]);", "-\t\tchar[] dest = new char[length];", "-\t\tXPCOM.memmove(dest, result[0], length * 2);", "-\t\tString prefLocales = new String(dest) + TOKENIZER_LOCALE;", "-\t\t\tlength = newLocales.length();", "+\t\t\tint length = newLocales.length();", "+\t\t\tif (localizedString == null) {", "+\t\t\t\tbyte[] contractID = Converter.wcsToMbcs(null, XPCOM.NS_PREFLOCALIZEDSTRING_CONTRACTID, true);", "+\t\t\t\trc = componentManager.CreateInstanceByContractID(contractID, 0, nsIPrefLocalizedString.NS_IPREFLOCALIZEDSTRING_IID, result);", "+\t\t\t\tif (rc != XPCOM.NS_OK) error(rc);", "+\t\t\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "+\t\t\t\tlocalizedString = new nsIPrefLocalizedString(result[0]);", "+\t\t\t\tresult[0] = 0;", "+\t\t\t}", "-\t\tlocalizedString.Release();", "+\t\tif (localizedString != null) {", "+\t\t\tlocalizedString.Release();", "+\t\t\tlocalizedString = null;", "+\t\t}", "+\t\tString prefCharset = null;", "-\t\tif (rc != XPCOM.NS_OK) error(rc);", "-\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "-", "-\t\tlocalizedString = new nsIPrefLocalizedString(result[0]);", "+\t\t/* ", "+\t\t * Feature of Debian.  For some reason attempting to query for the current charset", "+\t\t * preference fails on Debian.  The workaround for this is to assume a value of", "+\t\t * \"ISO-8859-1\" since this is typically the default value when mozilla is used", "+\t\t * without a profile.", "+\t\t */", "+\t\tif (rc != XPCOM.NS_OK) {", "+\t\t\tprefCharset = \"ISO-8859-1\";\t//$NON_NLS-1$", "+\t\t} else {", "+\t\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "+\t\t\tlocalizedString = new nsIPrefLocalizedString(result[0]);", "+\t\t\tresult[0] = 0;", "+\t\t\trc = localizedString.ToString(result);", "+\t\t\tif (rc != XPCOM.NS_OK) error(rc);", "+\t\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "+\t\t\tint length = XPCOM.strlen_PRUnichar(result[0]);", "+\t\t\tchar[] dest = new char[length];", "+\t\t\tXPCOM.memmove(dest, result[0], length * 2);", "+\t\t\tprefCharset = new String(dest);", "+\t\t}", "-\t\trc = localizedString.ToString(result);", "-\t\tif (rc != XPCOM.NS_OK) error(rc);", "-\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "-\t\tlength = XPCOM.strlen_PRUnichar(result[0]);", "-\t\tdest = new char[length];", "-\t\tXPCOM.memmove(dest, result[0], length * 2);", "-\t\tString prefCharsets = new String(dest);", "-\t\tif (!newCharset.equals(prefCharsets)) {", "+\t\tif (!newCharset.equals(prefCharset)) {", "-\t\t\tlength = newCharset.length();", "+\t\t\tint length = newCharset.length();", "+\t\t\tif (localizedString == null) {", "+\t\t\t\tbyte[] contractID = Converter.wcsToMbcs(null, XPCOM.NS_PREFLOCALIZEDSTRING_CONTRACTID, true);", "+\t\t\t\trc = componentManager.CreateInstanceByContractID(contractID, 0, nsIPrefLocalizedString.NS_IPREFLOCALIZEDSTRING_IID, result);", "+\t\t\t\tif (rc != XPCOM.NS_OK) error(rc);", "+\t\t\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "+\t\t\t\tlocalizedString = new nsIPrefLocalizedString(result[0]);", "+\t\t\t\tresult[0] = 0;", "+\t\t\t}", "-\t\tlocalizedString.Release();", "+\t\tif (localizedString != null) localizedString.Release();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aeb0213fd735f4ef8acfb24484ae2223", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/motif/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "980f8449da2a6c3333d608f725147751f134ab5c", "commitAfterChange": "0f572b0e7928cb18e1457e99e63a9c16d3ed411f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public Browser(Composite parent, int style)", "signatureAfterChange": " public Browser(Composite parent, int style)", "diff": ["+\t\tString prefLocales = null;", "+\t\tnsIPrefLocalizedString localizedString = null;", "-\t\tif (rc != XPCOM.NS_OK) error(rc);", "-\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "-", "-\t\tnsIPrefLocalizedString localizedString = new nsIPrefLocalizedString(result[0]);", "+\t\t/* ", "+\t\t * Feature of Debian.  For some reason attempting to query for the current locale", "+\t\t * preference fails on Debian.  The workaround for this is to assume a value of", "+\t\t * \"en-us,en\" since this is typically the default value when mozilla is used without", "+\t\t * a profile.", "+\t\t */", "+\t\tif (rc != XPCOM.NS_OK) {", "+\t\t\tprefLocales = \"en-us,en\" + TOKENIZER_LOCALE;\t//$NON-NLS-1$", "+\t\t} else {", "+\t\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "+\t\t\tlocalizedString = new nsIPrefLocalizedString(result[0]);", "+\t\t\tresult[0] = 0;", "+\t\t\trc = localizedString.ToString(result);", "+\t\t\tif (rc != XPCOM.NS_OK) error(rc);", "+\t\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "+\t\t\tint length = XPCOM.strlen_PRUnichar(result[0]);", "+\t\t\tchar[] dest = new char[length];", "+\t\t\tXPCOM.memmove(dest, result[0], length * 2);", "+\t\t\tprefLocales = new String(dest) + TOKENIZER_LOCALE;", "+\t\t}", "-\t\trc = localizedString.ToString(result);", "-\t\tif (rc != XPCOM.NS_OK) error(rc);", "-\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "-\t\tint length = XPCOM.strlen_PRUnichar(result[0]);", "-\t\tchar[] dest = new char[length];", "-\t\tXPCOM.memmove(dest, result[0], length * 2);", "-\t\tString prefLocales = new String(dest) + TOKENIZER_LOCALE;", "-\t\t\tlength = newLocales.length();", "+\t\t\tint length = newLocales.length();", "+\t\t\tif (localizedString == null) {", "+\t\t\t\tbyte[] contractID = Converter.wcsToMbcs(null, XPCOM.NS_PREFLOCALIZEDSTRING_CONTRACTID, true);", "+\t\t\t\trc = componentManager.CreateInstanceByContractID(contractID, 0, nsIPrefLocalizedString.NS_IPREFLOCALIZEDSTRING_IID, result);", "+\t\t\t\tif (rc != XPCOM.NS_OK) error(rc);", "+\t\t\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "+\t\t\t\tlocalizedString = new nsIPrefLocalizedString(result[0]);", "+\t\t\t\tresult[0] = 0;", "+\t\t\t}", "-\t\tlocalizedString.Release();", "+\t\tif (localizedString != null) {", "+\t\t\tlocalizedString.Release();", "+\t\t\tlocalizedString = null;", "+\t\t}", "+\t\tString prefCharset = null;", "-\t\tif (rc != XPCOM.NS_OK) error(rc);", "-\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "-", "-\t\tlocalizedString = new nsIPrefLocalizedString(result[0]);", "+\t\t/* ", "+\t\t * Feature of Debian.  For some reason attempting to query for the current charset", "+\t\t * preference fails on Debian.  The workaround for this is to assume a value of", "+\t\t * \"ISO-8859-1\" since this is typically the default value when mozilla is used", "+\t\t * without a profile.", "+\t\t */", "+\t\tif (rc != XPCOM.NS_OK) {", "+\t\t\tprefCharset = \"ISO-8859-1\";\t//$NON_NLS-1$", "+\t\t} else {", "+\t\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "+\t\t\tlocalizedString = new nsIPrefLocalizedString(result[0]);", "+\t\t\tresult[0] = 0;", "+\t\t\trc = localizedString.ToString(result);", "+\t\t\tif (rc != XPCOM.NS_OK) error(rc);", "+\t\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "+\t\t\tint length = XPCOM.strlen_PRUnichar(result[0]);", "+\t\t\tchar[] dest = new char[length];", "+\t\t\tXPCOM.memmove(dest, result[0], length * 2);", "+\t\t\tprefCharset = new String(dest);", "+\t\t}", "-\t\trc = localizedString.ToString(result);", "-\t\tif (rc != XPCOM.NS_OK) error(rc);", "-\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "-\t\tlength = XPCOM.strlen_PRUnichar(result[0]);", "-\t\tdest = new char[length];", "-\t\tXPCOM.memmove(dest, result[0], length * 2);", "-\t\tString prefCharsets = new String(dest);", "-\t\tif (!newCharset.equals(prefCharsets)) {", "+\t\tif (!newCharset.equals(prefCharset)) {", "-\t\t\tlength = newCharset.length();", "+\t\t\tint length = newCharset.length();", "+\t\t\tif (localizedString == null) {", "+\t\t\t\tbyte[] contractID = Converter.wcsToMbcs(null, XPCOM.NS_PREFLOCALIZEDSTRING_CONTRACTID, true);", "+\t\t\t\trc = componentManager.CreateInstanceByContractID(contractID, 0, nsIPrefLocalizedString.NS_IPREFLOCALIZEDSTRING_IID, result);", "+\t\t\t\tif (rc != XPCOM.NS_OK) error(rc);", "+\t\t\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "+\t\t\t\tlocalizedString = new nsIPrefLocalizedString(result[0]);", "+\t\t\t\tresult[0] = 0;", "+\t\t\t}", "-\t\tlocalizedString.Release();", "+\t\tif (localizedString != null) localizedString.Release();"]}], "num": 62659}