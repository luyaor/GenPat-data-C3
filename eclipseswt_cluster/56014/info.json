{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5f2d25d6a5eef860d5fafd3f07562691", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87a3367da0347b2ef082033bc75a6f20", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "9ff10cb48f82b9ae865058d0bbaabcdfd7febeca", "commitAfterChange": "74127501f3b2eceb3db2c2e14c28ae868f8a3b22", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "  boolean shape (int hdc, StyleItem run, char[] chars, int[] glyphCount, int maxGlyphs, SCRIPT_PROPERTIES sp)", "signatureAfterChange": "  boolean shape (int hdc, StyleItem run, char[] chars, int[] glyphCount, int maxGlyphs, boolean useCMAPcheck)", "diff": ["-boolean shape (int /*long*/ hdc, StyleItem run, char[] chars, int[] glyphCount, int maxGlyphs, SCRIPT_PROPERTIES sp) {", "-\tboolean useCMAPcheck = !sp.fComplex && !sp.fPrivateUseArea; ", "-\tSCRIPT_FONTPROPERTIES fp = new SCRIPT_FONTPROPERTIES ();", "-\tfp.cBytes = SCRIPT_FONTPROPERTIES.sizeof;", "-\tOS.ScriptGetFontProperties(hdc, run.psc, fp);", "+boolean shape (int /*long*/ hdc, StyleItem run, char[] chars, int[] glyphCount, int maxGlyphs, boolean useCMAPcheck) {", "+\tuseCMAPcheck = false;", "+//\t\tif (run.analysis.fNoGlyphIndex) return true;", "+\t\t", "+\t\tSCRIPT_FONTPROPERTIES fp = new SCRIPT_FONTPROPERTIES ();", "+\t\tfp.cBytes = SCRIPT_FONTPROPERTIES.sizeof;", "+\t\tOS.ScriptGetFontProperties(hdc, run.psc, fp);", "-\t\tif (i == glyphs.length) return true;", "+\t\tif (i == glyphs.length) ", "+\t\t\treturn true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "749e4bbdfe7979ccad69ac01e8784de6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "74127501f3b2eceb3db2c2e14c28ae868f8a3b22", "commitAfterChange": "4994670aef66c143f8196f33f0e5020a1d0f1eec", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "  boolean shape (int hdc, StyleItem run, char[] chars, int[] glyphCount, int maxGlyphs, boolean useCMAPcheck)", "signatureAfterChange": "  boolean shape (int hdc, StyleItem run, char[] chars, int[] glyphCount, int maxGlyphs, SCRIPT_PROPERTIES sp)", "diff": ["-boolean shape (int /*long*/ hdc, StyleItem run, char[] chars, int[] glyphCount, int maxGlyphs, boolean useCMAPcheck) {", "-\tuseCMAPcheck = false;", "+boolean shape (int /*long*/ hdc, StyleItem run, char[] chars, int[] glyphCount, int maxGlyphs, SCRIPT_PROPERTIES sp) {", "+\tboolean useCMAPcheck = !sp.fComplex && !sp.fPrivateUseArea; ", "+\tSCRIPT_FONTPROPERTIES fp = new SCRIPT_FONTPROPERTIES ();", "+\tfp.cBytes = SCRIPT_FONTPROPERTIES.sizeof;", "+\tOS.ScriptGetFontProperties(hdc, run.psc, fp);", "-//\t\tif (run.analysis.fNoGlyphIndex) return true;", "-\t\t", "-\t\tSCRIPT_FONTPROPERTIES fp = new SCRIPT_FONTPROPERTIES ();", "-\t\tfp.cBytes = SCRIPT_FONTPROPERTIES.sizeof;", "-\t\tOS.ScriptGetFontProperties(hdc, run.psc, fp);", "-\t\tif (i == glyphs.length) ", "-\t\t\treturn true;", "+\t\tif (i == glyphs.length) return true;"]}], "num": 56014}