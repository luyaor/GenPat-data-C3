{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "57afc018455784bdde750766dff12ff0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91f86b47bfac67c12c450e1e6cf18d17", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Canvas.java", "commitBeforeChange": "08d3303dffe0cb7265bf994e8344de3d64cefc09", "commitAfterChange": "c82a97b2812d5521f2430f8e8dcf4457c63aa927", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void scroll (int destX, int destY, int x, int y, int width, int height, boolean all)", "signatureAfterChange": " public void scroll (int destX, int destY, int x, int y, int width, int height, boolean all)", "diff": ["-//\tGC gc = new GC (this);", "-//\tgc.copyArea (x, y, width, height, destX, destY);", "-//\tgc.dispose ();", "-\tint /*long*/ gdkGC = OS.gdk_gc_new (window);", "-\tOS.gdk_gc_set_exposures (gdkGC, true);", "-\tOS.gdk_draw_drawable (window, gdkGC, window, copyRect.x, copyRect.y, copyRect.x + deltaX, copyRect.y + deltaY, copyRect.width, copyRect.height);", "-\tOS.g_object_unref (gdkGC);", "-\tboolean disjoint = (destX + width < x) || (x + width < destX) || (destY + height < y) || (y + height < destY);", "-\tif (disjoint) {", "-\t\tGdkRectangle rect = new GdkRectangle ();", "-\t\trect.x = x;", "-\t\trect.y = y;", "-\t\trect.width = width;", "-\t\trect.height = height;", "-\t\tOS.gdk_region_union_with_rect (invalidateRegion, rect);", "+\tControl control = findBackgroundControl ();", "+\tif (control == null) control = this;", "+\tif (control.backgroundImage != null) {", "+\t\tredrawWidget (x, y, width, height, false, false, false);", "+\t\tredrawWidget (destX, destY, width, height, false, false, false);", "-\t\tGdkRectangle rect = new GdkRectangle ();", "-\t\tif (deltaX != 0) {", "-\t\t\tint newX = destX - deltaX;", "-\t\t\tif (deltaX < 0) newX = destX + width;", "-\t\t\trect.x = newX;", "+//\t\tGC gc = new GC (this);", "+//\t\tgc.copyArea (x, y, width, height, destX, destY);", "+//\t\tgc.dispose ();", "+\t\tint /*long*/ gdkGC = OS.gdk_gc_new (window);", "+\t\tOS.gdk_gc_set_exposures (gdkGC, true);", "+\t\tOS.gdk_draw_drawable (window, gdkGC, window, copyRect.x, copyRect.y, copyRect.x + deltaX, copyRect.y + deltaY, copyRect.width, copyRect.height);", "+\t\tOS.g_object_unref (gdkGC);", "+\t\tboolean disjoint = (destX + width < x) || (x + width < destX) || (destY + height < y) || (y + height < destY);", "+\t\tif (disjoint) {", "+\t\t\tGdkRectangle rect = new GdkRectangle ();", "+\t\t\trect.x = x;", "-\t\t\trect.width = Math.abs(deltaX);", "+\t\t\trect.width = width;", "-\t\t}", "-\t\tif (deltaY != 0) {", "-\t\t\tint newY = destY - deltaY;", "-\t\t\tif (deltaY < 0) newY = destY + height;", "-\t\t\trect.x = x;", "-\t\t\trect.y = newY;", "-\t\t\trect.width = width;", "-\t\t\trect.height = Math.abs(deltaY);", "-\t\t\tOS.gdk_region_union_with_rect (invalidateRegion, rect);", "-\t\t}", "-\t}\t", "-\tOS.gdk_window_invalidate_region(window, invalidateRegion, all);", "-\tOS.gdk_region_destroy (visibleRegion);", "-\tOS.gdk_region_destroy (copyRegion);", "-\tOS.gdk_region_destroy (invalidateRegion);", "+\t\t} else {", "+\t\t\tGdkRectangle rect = new GdkRectangle ();", "+\t\t\tif (deltaX != 0) {", "+\t\t\t\tint newX = destX - deltaX;", "+\t\t\t\tif (deltaX < 0) newX = destX + width;", "+\t\t\t\trect.x = newX;", "+\t\t\t\trect.y = y;", "+\t\t\t\trect.width = Math.abs(deltaX);", "+\t\t\t\trect.height = height;", "+\t\t\t\tOS.gdk_region_union_with_rect (invalidateRegion, rect);", "+\t\t\t}", "+\t\t\tif (deltaY != 0) {", "+\t\t\t\tint newY = destY - deltaY;", "+\t\t\t\tif (deltaY < 0) newY = destY + height;", "+\t\t\t\trect.x = x;", "+\t\t\t\trect.y = newY;", "+\t\t\t\trect.width = width;", "+\t\t\t\trect.height = Math.abs(deltaY);", "+\t\t\t\tOS.gdk_region_union_with_rect (invalidateRegion, rect);", "+\t\t\t}", "+\t\t}\t", "+\t\tOS.gdk_window_invalidate_region(window, invalidateRegion, all);", "+\t\tOS.gdk_region_destroy (visibleRegion);", "+\t\tOS.gdk_region_destroy (copyRegion);", "+\t\tOS.gdk_region_destroy (invalidateRegion);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd06489d59c694212583e83e7142aea2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Canvas.java", "commitBeforeChange": "cd2b01e0fcf17cc00575d93beaa51e7423626230", "commitAfterChange": "2c61b8994b5a2e56e3902814e6b7517fcf807f88", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void scroll (int destX, int destY, int x, int y, int width, int height, boolean all)", "signatureAfterChange": " public void scroll (int destX, int destY, int x, int y, int width, int height, boolean all)", "diff": ["-", "-\t", "-\t/* Hide the caret */", "-//\t/* Emit a NoExpose Event */", "-//\tint window = paintWindow ();", "-//\tint gc = OS.gdk_gc_new (window);", "-//\tOS.gdk_gc_set_exposures(gc, true);", "-//\tOS.gdk_draw_drawable(window, gc, window, x, y, x, y, width, height);", "-//\tOS.g_object_unref (gc);", "-//", "-//\t/* Flush outstanding Exposes */", "-//\tint gdkEvent = 0;", "-//\twhile ((gdkEvent = OS.gdk_event_get_graphics_expose(window)) != 0) {", "-//\t\tOS.gtk_widget_send_expose (handle, gdkEvent);", "-//\t\tGdkEventExpose event = new GdkEventExpose(gdkEvent);", "-//\t\tOS.gdk_event_free (gdkEvent);", "-//\t\tif (event.count == 0) break;", "-//\t}", "-", "-\tupdate ();", "-\tint window = paintWindow ();", "-//\tOS.gdk_window_process_updates (window, all);", "-\tOS.gdk_window_scroll (window, deltaX, deltaY);", "-", "+", "+\tupdate ();", "-\t/* Show the caret */", "+\tint window = paintWindow ();", "+\tint visibleRegion = OS.gdk_drawable_get_visible_region (window);", "+\tGdkRectangle srcRect = new GdkRectangle ();", "+\tsrcRect.x = x;", "+\tsrcRect.y = y;", "+\tsrcRect.width = width;", "+\tsrcRect.height = height;", "+\tint copyRegion = OS.gdk_region_new ();", "+\tOS.gdk_region_union_with_rect (copyRegion, srcRect);", "+\tOS.gdk_region_intersect(copyRegion, visibleRegion);", "+\tint invalidateRegion = OS.gdk_region_new ();", "+\tOS.gdk_region_union_with_rect (invalidateRegion, srcRect);\t", "+\tOS.gdk_region_subtract (invalidateRegion, visibleRegion);", "+\tOS.gdk_region_offset (invalidateRegion, deltaX, deltaY);", "+\tGdkRectangle copyRect = new GdkRectangle();", "+\tOS.gdk_region_get_clipbox (copyRegion, copyRect);", "+\tint gdkGC = OS.gdk_gc_new (window);", "+\tOS.gdk_gc_set_exposures (gdkGC, true);", "+\tOS.gdk_draw_drawable (window, gdkGC, window, copyRect.x, copyRect.y, copyRect.x + deltaX, copyRect.y + deltaY, copyRect.width, copyRect.height);", "+\tOS.g_object_unref (gdkGC);", "+\tboolean disjoint = (destX + width < x) || (x + width < destX) || (destY + height < y) || (y + height < destY);", "+\tGdkRectangle rect = new GdkRectangle ();", "+\tif (disjoint) {", "+\t\trect.x = x;", "+\t\trect.y = y;", "+\t\trect.width = width;", "+\t\trect.height = height;", "+\t\tOS.gdk_region_union_with_rect (invalidateRegion, rect);", "+\t} else {", "+\t\tif (deltaX != 0) {", "+\t\t\tint newX = destX - deltaX;", "+\t\t\tif (deltaX < 0) newX = destX + width;", "+\t\t\trect.x = newX;", "+\t\t\trect.y = y;", "+\t\t\trect.width = Math.abs(deltaX);", "+\t\t\trect.height = height;", "+\t\t\tOS.gdk_region_union_with_rect (invalidateRegion, rect);", "+\t\t}", "+\t\tif (deltaY != 0) {", "+\t\t\tint newY = destY - deltaY;", "+\t\t\tif (deltaY < 0) newY = destY + height;", "+\t\t\trect.x = x;", "+\t\t\trect.y = newY;", "+\t\t\trect.width = width;", "+\t\t\trect.height = Math.abs(deltaY);", "+\t\t\tOS.gdk_region_union_with_rect (invalidateRegion, rect);", "+\t\t}", "+\t}\t", "+\tOS.gdk_window_invalidate_region(window, invalidateRegion, all);", "+\tOS.gdk_region_destroy (visibleRegion);", "+\tOS.gdk_region_destroy (copyRegion);", "+\tOS.gdk_region_destroy (invalidateRegion);", "+\t"]}], "num": 59595}