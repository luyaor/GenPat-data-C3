{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "190ee8cff89174ee6641cc9c056133bc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83511f5994d2b47ea50c8cbaf16d90ab", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "533b32a9baa75e76ca7b7877ee9b9581fe18792e", "commitAfterChange": "9fedd0db5879e16f4217a567123278513c1d3514", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "\r void adjustItemWidths (Vector row, int width)", "signatureAfterChange": "\r void adjustItemWidths (Vector row, int width)", "diff": ["-\tint rowWidth = bounds.x + bounds.width;\r", "+\tint borders = getBorderWidth() * 2;\r", "+\tint rowWidth = bounds.x + bounds.width + borders;\r", "-\tif (width > rowWidth || width > bounds.x + CoolItem.MINIMUM_WIDTH) {\r", "-\t\tlast.setBounds(bounds.x, bounds.y, width - bounds.x, bounds.height);\r", "-\t\treturn;\r", "+\tint extraWidth = width - (bounds.x + CoolItem.MINIMUM_WIDTH + borders);\r", "+\tif (extraWidth < 0) {\r", "+\t\tmoveLeft(last, Math.abs(extraWidth)); \r", "-\t/* Shifting the last item ensures that all hidden items\r", "-\t   to its left are made visible as well.*/\r", "-\tlast.setBounds(bounds.x, bounds.y, CoolItem.MINIMUM_WIDTH, bounds.height);\r", "-\tmoveLeft(last, bounds.x - width + CoolItem.MINIMUM_WIDTH); \r", "+\tlast.setBounds(bounds.x, bounds.y, CoolItem.MINIMUM_WIDTH + extraWidth, bounds.height);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "add817befc8463b3ac5357567c2c4111", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "f515cf977205e790f69e546ea06080d6e95f1110", "commitAfterChange": "523afa78b09b03ec06cca70da8a3120493bd6102", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "\r void adjustItemWidths (Vector row, int width)", "signatureAfterChange": "\r void adjustItemWidths (Vector row, int width)", "diff": ["-\tint borders = getBorderWidth() * 2;\r", "-\tint rowWidth = bounds.x + bounds.width + borders;\r", "+\tint rowWidth = bounds.x + bounds.width;\r", "-\tint extraWidth = width - (bounds.x + CoolItem.MINIMUM_WIDTH + borders);\r", "-\tif (extraWidth < 0) {\r", "-\t\tmoveLeft(last, Math.abs(extraWidth)); \r", "+\tif (width > rowWidth || width > bounds.x + CoolItem.MINIMUM_WIDTH) {\r", "+\t\tlast.setBounds(bounds.x, bounds.y, width - bounds.x, bounds.height);\r", "+\t\treturn;\r", "-\tlast.setBounds(bounds.x, bounds.y, CoolItem.MINIMUM_WIDTH + extraWidth, bounds.height);\r", "+\t/* Shifting the last item ensures that all hidden items\r", "+\t   to its left are made visible as well.*/\r", "+\tlast.setBounds(bounds.x, bounds.y, CoolItem.MINIMUM_WIDTH, bounds.height);\r", "+\tmoveLeft(last, bounds.x - width + CoolItem.MINIMUM_WIDTH); \r"]}], "num": 53061}