{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "16d6c6de9f1135bf46ca57c37a47ce96", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfd3c1000a5d6a1f702a50115a3b97f3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "f90690ed596a8f30b41c7d4456524b19ed4d1117", "commitAfterChange": "aaa79206d378da865f144bf1058ff0a4339c36eb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void _setVisible (boolean visible)", "signatureAfterChange": "  void _setVisible (boolean visible)", "diff": ["-\tif (!visible) return;", "-\torg.eclipse.swt.internal.carbon.Point where = new org.eclipse.swt.internal.carbon.Point ();", "-\tif (hasLocation) {", "-\t\twhere.h = (short) x;", "-\t\twhere.v = (short) y;", "+\tif (visible) {", "+\t\torg.eclipse.swt.internal.carbon.Point where = new org.eclipse.swt.internal.carbon.Point ();", "+\t\tif (hasLocation) {", "+\t\t\twhere.h = (short) x;", "+\t\t\twhere.v = (short) y;", "+\t\t} else {", "+\t\t\tOS.GetGlobalMouse (where);", "+\t\t}", "+\t\t/*", "+\t\t* Feature in the Macintosh.  When the application FruitMenu is installed,", "+\t\t* the output parameters cannot be NULL or ContextualMenuSelect() crashes.", "+\t\t* The fix is to ensure they are not NULL.", "+\t\t*/", "+\t\tOS.ContextualMenuSelect (handle, where, false, OS.kCMHelpItemRemoveHelp, null, null, new int [1], new short [1], new short [1]);", "-\t\tOS.GetGlobalMouse (where);", "+\t\tOS.CancelMenuTracking (handle, true, 0);", "-\t/*", "-\t* Feature in the Macintosh.  When the application FruitMenu is installed,", "-\t* the output parameters cannot be NULL or ContextualMenuSelect() crashes.", "-\t* The fix is to ensure they are not NULL.", "-\t*/", "-\tOS.ContextualMenuSelect (handle, where, false, OS.kCMHelpItemRemoveHelp, null, null, new int [1], new short [1], new short [1]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7f5d6509bab021b5254bf9545fa773b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "14bdf5e037717bdb532f891ebad5b34bab53b57f", "commitAfterChange": "c571794cdf393e2a3331c1a5dc34dc1ad7b8dcd4", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void _setVisible (boolean visible)", "signatureAfterChange": "  void _setVisible (boolean visible)", "diff": ["+\torg.eclipse.swt.internal.carbon.Point where = new org.eclipse.swt.internal.carbon.Point ();", "+\tOS.GetGlobalMouse (where);", "-\t\torg.eclipse.swt.internal.carbon.Point where = new org.eclipse.swt.internal.carbon.Point ();", "-\t\tOS.GetGlobalMouse (where);", "+\t/*", "+\t* Feature in the Macintosh.  PopUpMenuSelect() does not position", "+\t* the menu at the specified coordinates. The x coordinate is honoured,", "+\t* but the top of the menu is placed a few pixels above the y coordinate.", "+\t* This means that the first item in the menu will be under the mouse", "+\t* and will draw selected.  This is against the Macintosh User Guidelines.", "+\t* The fix is to offset the menu by one pixel in both directions when", "+\t* it coincides with the mouse location. ", "+\t*/", "+\tif (left == where.h) left++;", "+\tif (top == where.v) top++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f73d187834ca62afc1d8242ae71e7a2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet335.java", "commitBeforeChange": "b2e5d0b116756159b57866a8e058d1cb743ecb3b", "commitAfterChange": "3f089cd88d12856b1a32a2c2eaac8ab30e2a044c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public static void main(String[] args)", "signatureAfterChange": "  public static void main(String[] args)", "diff": ["-\tGridData data = new GridData();", "-\tdata.widthHint = 10;\t\t\t\t\t// <-- default width", "-\tdata.horizontalAlignment = SWT.FILL;\t// <-- grow to fill available width", "-\tlabel.setLayoutData(data);", "+\tGridData labelData = new GridData();", "+\tlabelData.widthHint = 10;\t\t\t\t\t// <-- default width", "+\tlabelData.horizontalAlignment = SWT.FILL;\t// <-- grow to fill available width", "+\tlabel.setLayoutData(labelData);", "-", "+", "+\t/* do an initial pack() so that the Shell determines its required width */", "+", "+\t/* update the Label's width hint to match what the layout allocated for it */", "+\tlabelData.widthHint = label.getBounds().width;", "+\t", "+\t/*", "+\t * do a second pack() so that the Label will compute its required height", "+\t * based on its correct width instead of its previously-set default width", "+\t */", "+\tshell.pack();", "+"]}], "num": 7435}