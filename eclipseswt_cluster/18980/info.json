{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8043f970ba0fbfb8ffeb34c62a1a17ff", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "821f507c4bee243b0c64ff98411acf86", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "71e082670a2e587e99ba9f0683312b9a404c65b8", "commitAfterChange": "2c2409b91eac452fa03efa9c9e69da66618d6519", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": "  LRESULT WM_KEYDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_KEYDOWN (int wParam, int lParam)", "diff": ["-\t\t\t\t\t\t\tOS.SendMessage (handle, OS.TVM_GETITEMRECT, 1, rect1);", "-\t\t\t\t\t\t\tOS.SendMessage (handle, OS.TVM_GETITEMRECT, 1, rect2);", "+\t\t\t\t\t\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "+\t\t\t\t\t\t\tint fItemRect = (bits & OS.TVS_FULLROWSELECT) != 0 ? 0 : 1;", "+\t\t\t\t\t\t\tOS.SendMessage (handle, OS.TVM_GETITEMRECT, fItemRect, rect1);", "+\t\t\t\t\t\t\tOS.SendMessage (handle, OS.TVM_GETITEMRECT, fItemRect, rect2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95ebe1f0b9e6c36331ad64691f5003e6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "494b4ab06fa97ca6b89aadc5dbcd27839da40534", "commitAfterChange": "ca611642fc41807588637202b032414f273f2b1e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  int defaultBackground ()", "signatureAfterChange": "  int defaultBackground ()", "diff": ["-\treturn OS.GetSysColor (OS.COLOR_WINDOW);", "+\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "+\treturn OS.GetSysColor ((bits & OS.ES_READONLY) != 0 ? OS.COLOR_3DFACE : OS.COLOR_WINDOW);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1becdeac5d432e5ef720bb39c93d66c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/win32/org/eclipse/swt/internal/win32/OS.java", "commitBeforeChange": "21ec52698e595c1519fe8cf59e52e9511e00131c", "commitAfterChange": "d1cfc073966d2df4835f012cb9c5cb74fbf2bbe2", "methodNumberBeforeChange": 234, "methodNumberAfterChange": 234, "signatureBeforeChange": "  public static final long ImmEscape (long hKL,long hIMC, int uEscape, long [] lpData)", "signatureAfterChange": "  public static final long ImmEscape (long hKL,long hIMC, int uEscape, TCHAR lpData)", "diff": ["-public static final long /*int*/ ImmEscape (long /*int*/ hKL,long /*int*/ hIMC, int uEscape, long /*int*/ [] lpData) {", "+public static final long /*int*/ ImmEscape (long /*int*/ hKL,long /*int*/ hIMC, int uEscape, TCHAR lpData) {", "-\t\treturn ImmEscapeW (hKL, hIMC, uEscape, lpData);", "+\t\tchar [] lpData1 = lpData == null ? null : lpData.chars;", "+\t\treturn ImmEscapeW (hKL, hIMC, uEscape, lpData1);", "-\treturn ImmEscapeA (hKL, hIMC, uEscape, lpData);", "+\tbyte [] lpData1 = lpData == null ? null : lpData.bytes;", "+\treturn ImmEscapeA (hKL, hIMC, uEscape, lpData1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2464032ebbbbc34d219a77b647195b3c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "a5d4aeac5e364020692454d7543de0bd1815a366", "commitAfterChange": "3e00e7ddd12750ac72a0ebae06901b35c9fbd9f3", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "  void setBounds (int x, int y, int width, int height, int flags, boolean defer)", "signatureAfterChange": "  void setBounds (int x, int y, int width, int height, int flags, boolean defer)", "diff": ["+\t/*", "+\t* Bug in Windows.  When a window has alpha and", "+\t* SetWindowPos() is called with SWP_DRAWFRAME,", "+\t* the contents of the window are copied rather", "+\t* than allowing the windows underneath to draw.", "+\t* This causes pixel corruption.  The fix is to", "+\t* clear the SWP_DRAWFRAME bits.", "+\t*/", "+\tint bits = OS.GetWindowLong (handle, OS.GWL_EXSTYLE); ", "+\tif ((bits & OS.WS_EX_LAYERED) != 0) {", "+\t\tflags &= ~OS.SWP_DRAWFRAME;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0687f5daae93de10685c990448f8ddb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "c6e9619d897b0115821305c8c2b3861743ec8279", "commitAfterChange": "02d745a32b10a8f685d12785397c35d7fec9a725", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 128, "signatureBeforeChange": "  LRESULT WM_SIZE (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_SIZE (int wParam, int lParam)", "diff": ["+\t/*", "+\t * Bug in Windows.  When TVS_NOHSCROLL is set when the", "+\t * size of the tree is zero, the scrol bar is shown the", "+\t * next time the tree resizes.  The fix is to hide the", "+\t * scroll bar every time the tree is resized.", "+\t */", "+\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "+\tif ((bits & OS.TVS_NOHSCROLL) != 0) {", "+\t\tif (!OS.IsWinCE) OS.ShowScrollBar (handle, OS.SB_HORZ, false);", "+\t}"]}], "num": 18980}