{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "098b0b8e05c2930bd735bd304723c100", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39d563cd2d52e78f98a90c5a847db7ac", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "e253003f379a5077ef9bad1970e6ecd3caffe942", "commitAfterChange": "13106f1c871b402082825e5386ce5c12162603e8", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r \r void drawBitmapTransparent(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, BITMAP bm, int imgWidth, int imgHeight)", "signatureAfterChange": "\r \r void drawBitmapTransparent(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, BITMAP bm, int imgWidth, int imgHeight)", "diff": ["-\t\t\tint maxColors = 1 << bm.bmBitsPixel;\r", "-\t\t\tbyte[] oldColors = new byte[maxColors * 4];\r", "-\t\t\tif (OS.IsWinCE) SWT.error(SWT.ERROR_NOT_IMPLEMENTED);\r", "-\t\t\tint numColors = OS.GetDIBColorTable(srcHdc, 0, maxColors, oldColors);\r", "-\t\t\tint offset = srcImage.transparentPixel * 4;\r", "-\t\t\tbyte[] newColors = new byte[oldColors.length];\r", "-\t\t\ttransRed = transGreen = transBlue = 0xff;\r", "-\t\t\tnewColors[offset] = (byte)transBlue;\r", "-\t\t\tnewColors[offset+1] = (byte)transGreen;\r", "-\t\t\tnewColors[offset+2] = (byte)transRed;\r", "-\t\t\tif (OS.IsWinCE) SWT.error(SWT.ERROR_NOT_IMPLEMENTED);\r", "-\t\t\tOS.SetDIBColorTable(srcHdc, 0, maxColors, newColors);\r", "-\t\t\toriginalColors = oldColors;\r", "+\t\t\tif (OS.IsWinCE) {\r", "+\t\t\t\tbyte[] pBits = new byte[1];\r", "+\t\t\t\tOS.MoveMemory(pBits, bm.bmBits, 1);\r", "+\t\t\t\tbyte oldValue = pBits[0];\t\t\t\r", "+\t\t\t\tint mask = (0xFF << (8 - bm.bmBitsPixel)) & 0x00FF;\r", "+\t\t\t\tpBits[0] = (byte)((srcImage.transparentPixel << (8 - bm.bmBitsPixel)) | (pBits[0] & ~mask));\r", "+\t\t\t\tOS.MoveMemory(bm.bmBits, pBits, 1);\r", "+\t\t\t\tint color = OS.GetPixel(srcHdc, 0, 0);\r", "+          \t\tpBits[0] = oldValue;\r", "+           \t\tOS.MoveMemory(bm.bmBits, pBits, 1);\t\t\t\t\r", "+\t\t\t\ttransBlue = (color & 0xFF0000) >> 16;\r", "+\t\t\t\ttransGreen = (color & 0xFF00) >> 8;\r", "+\t\t\t\ttransRed = color & 0xFF;\t\t\t\t\r", "+\t\t\t} else {\r", "+\t\t\t\tint maxColors = 1 << bm.bmBitsPixel;\r", "+\t\t\t\tbyte[] oldColors = new byte[maxColors * 4];\r", "+\t\t\t\tint numColors = OS.GetDIBColorTable(srcHdc, 0, maxColors, oldColors);\r", "+\t\t\t\tint offset = srcImage.transparentPixel * 4;\r", "+\t\t\t\tbyte[] newColors = new byte[oldColors.length];\r", "+\t\t\t\ttransRed = transGreen = transBlue = 0xff;\r", "+\t\t\t\tnewColors[offset] = (byte)transBlue;\r", "+\t\t\t\tnewColors[offset+1] = (byte)transGreen;\r", "+\t\t\t\tnewColors[offset+2] = (byte)transRed;\r", "+\t\t\t\tOS.SetDIBColorTable(srcHdc, 0, maxColors, newColors);\r", "+\t\t\t\toriginalColors = oldColors;\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b5bf51c96a05d37c4c95cbcca64b3ec", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "780f04a4a2bfb76be67115dc4995fa55281e0c0b", "commitAfterChange": "65d545fe69e1b722ada75cb0ac7117daf14ca44b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r public ImageData getImageData()", "signatureAfterChange": "\r public ImageData getImageData()", "diff": ["-\t\t\t\t\tbyte[] colors = new byte[numColors * 4];\r", "-\t\t\t\t\tif (OS.IsWinCE) SWT.error(SWT.ERROR_NOT_IMPLEMENTED);\r", "-\t\t\t\t\tOS.GetDIBColorTable(hBitmapDC, 0, numColors, colors);\r", "-\t\t\t\t\tint colorIndex = 0;\r", "-\t\t\t\t\tfor (int i = 0; i < rgbs.length; i++) {\r", "-\t\t\t\t\t\trgbs[i] = new RGB(colors[colorIndex + 2] & 0xFF, colors[colorIndex + 1] & 0xFF, colors[colorIndex] & 0xFF);\r", "-\t\t\t\t\t\tcolorIndex += 4;\r", "+\t\t\t\t\tif (OS.IsWinCE) {\r", "+\t\t\t\t\t\t/* \r", "+\t\t\t\t\t\t* Feature on WinCE.  GetDIBColorTable is not supported.\r", "+\t\t\t\t\t\t* The workaround is to set a pixel to the desired\r", "+\t\t\t\t\t\t* palette index and use getPixel to get the corresponding\r", "+\t\t\t\t\t\t* RGB value.\r", "+\t\t\t\t\t\t*/\r", "+\t\t\t\t\t\tint red = 0, green = 0, blue = 0;\r", "+\t\t\t\t\t\tbyte[] pBits = new byte[1];\r", "+\t\t\t\t\t\tOS.MoveMemory(pBits, bm.bmBits, 1);\r", "+\t\t\t\t\t\tbyte oldValue = pBits[0];\t\t\t\r", "+\t\t\t\t\t\tint mask = (0xFF << (8 - bm.bmBitsPixel)) & 0x00FF;\r", "+\t\t\t\t\t\tfor (int i = 0; i < numColors; i++) {\r", "+\t\t\t\t\t\t\tpBits[0] = (byte)((i << (8 - bm.bmBitsPixel)) | (pBits[0] & ~mask));\r", "+\t\t\t\t\t\t\tOS.MoveMemory(bm.bmBits, pBits, 1);\r", "+\t\t\t\t\t\t\tint color = OS.GetPixel(hBitmapDC, 0, 0);\r", "+\t\t\t\t\t\t\tblue = (color & 0xFF0000) >> 16;\r", "+\t\t\t\t\t\t\tgreen = (color & 0xFF00) >> 8;\r", "+\t\t\t\t\t\t\tred = color & 0xFF;\r", "+\t\t\t\t\t\t\trgbs[i] = new RGB(red, green, blue);\r", "+\t\t\t\t\t\t}\r", "+\t\t       \t\t\tpBits[0] = oldValue;\r", "+\t\t\t       \t\tOS.MoveMemory(bm.bmBits, pBits, 1);\t\t\t\t\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\tbyte[] colors = new byte[numColors * 4];\r", "+\t\t\t\t\t\tOS.GetDIBColorTable(hBitmapDC, 0, numColors, colors);\r", "+\t\t\t\t\t\tint colorIndex = 0;\r", "+\t\t\t\t\t\tfor (int i = 0; i < rgbs.length; i++) {\r", "+\t\t\t\t\t\t\trgbs[i] = new RGB(colors[colorIndex + 2] & 0xFF, colors[colorIndex + 1] & 0xFF, colors[colorIndex] & 0xFF);\r", "+\t\t\t\t\t\t\tcolorIndex += 4;\r", "+\t\t\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "489bb7d57607ec22a092e6baf40dd3c0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "bda40c2136397091c0c6b06cbdfc4de3549df904", "commitAfterChange": "fd30b29ee0463456ac143e05fc57036f9d927816", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r public Color getBackground()", "signatureAfterChange": "\r public Color getBackground()", "diff": ["-\t\tbyte[] color = new byte[4];\r", "-\t\tif (OS.IsWinCE) SWT.error(SWT.ERROR_NOT_IMPLEMENTED);\r", "-\t\tint numColors = OS.GetDIBColorTable(hdcMem, transparentPixel, 1, color);\r", "-\t\tblue = color[0] & 0xFF;\r", "-\t\tgreen = color[1] & 0xFF;\r", "-\t\tred = color[2] & 0xFF;\r", "+\t\tif (OS.IsWinCE) {\r", "+\t\t\tbyte[] pBits = new byte[1];\r", "+\t\t\tOS.MoveMemory(pBits, bm.bmBits, 1);\r", "+\t\t\tbyte oldValue = pBits[0];\t\t\t\r", "+\t\t\tint mask = (0xFF << (8 - bm.bmBitsPixel)) & 0x00FF;\r", "+\t\t\tpBits[0] = (byte)((transparentPixel << (8 - bm.bmBitsPixel)) | (pBits[0] & ~mask));\r", "+\t\t\tOS.MoveMemory(bm.bmBits, pBits, 1);\r", "+\t\t\tint color = OS.GetPixel(hdcMem, 0, 0);\r", "+       \t\tpBits[0] = oldValue;\r", "+       \t\tOS.MoveMemory(bm.bmBits, pBits, 1);\t\t\t\t\r", "+\t\t\tblue = (color & 0xFF0000) >> 16;\r", "+\t\t\tgreen = (color & 0xFF00) >> 8;\r", "+\t\t\tred = color & 0xFF;\r", "+\t\t} else {\r", "+\t\t\tbyte[] color = new byte[4];\r", "+\t\t\tint numColors = OS.GetDIBColorTable(hdcMem, transparentPixel, 1, color);\r", "+\t\t\tblue = color[0] & 0xFF;\r", "+\t\t\tgreen = color[1] & 0xFF;\r", "+\t\t\tred = color[2] & 0xFF;\r", "+\t\t}\r"]}], "num": 9791}