{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ad39e4578759fb1eb0bf8d22cee6de1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83101388c13b6db36f12a6ecf531d387", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " public void getClipping(Region region)", "signatureAfterChange": " public void getClipping(Region region)", "diff": ["-public void getClipping(Region region) {", "+public void getClipping(Region region) {\t", "-\t", "-\tif (region.handle == 0)", "-\t\tregion.handle= OS.NewRgn();", "-\t\t", "-\t\tif (data.controlHandle != 0) {", "-\t\t\tOS.GetControlRegion(data.controlHandle, OS.kWindowContentRgn, region.handle);", "-\t\t} else", "-\t\t\tSystem.out.println(\"GC.getClipping(Region): nyi\");", "-\t} else {", "-\t\tOS.CopyRgn(data.clipRgn, region.handle);", "-\t}", "-\t", "-\t/* AW", "-\tif (clipRgn == 0) {", "-\t\tint[] width = new int[1]; int[] height = new int[1];", "-\t\tint[] unused = new int[1];", "-\t\tOS.XGetGeometry(data.display, data.drawable, unused, unused, unused, width, height, unused, unused);", "-\t\tOS.XSubtractRegion (hRegion, hRegion, hRegion);", "-\t\tXRectangle rect = new XRectangle();", "-\t\trect.x = 0; rect.y = 0;", "-\t\trect.width = (short)width[0]; rect.height = (short)height[0];", "-\t\tOS.XUnionRectWithRegion(rect, hRegion, hRegion);", "+\t\tint width = 0, height = 0;", "+\t\tif (data.control != 0) {", "+\t\t\tRect bounds = new Rect();", "+\t\t\tOS.GetControlBounds(data.control, bounds);", "+\t\t\twidth = bounds.right - bounds.left;", "+\t\t\theight = bounds.bottom - bounds.top;", "+\t\t}", "+\t\tif (data.image != null) {", "+\t\t\tint image = data.image.handle;", "+\t\t\twidth = OS.CGImageGetWidth(image);", "+\t\t\theight = OS.CGImageGetHeight(image);", "+\t\t}", "+\t\tOS.SetRectRgn(region.handle, (short) 0, (short) 0, (short) width, (short) height);", "-\tOS.XSubtractRegion (hRegion, hRegion, hRegion);", "-\tOS.XUnionRegion (clipRgn, hRegion, hRegion);", "-\t*/", "+\tOS.CopyRgn(data.clipRgn, region.handle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d937eca13b264ed29e3fe379153088ca", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "ee510be0e6733f40c52758e9f053de39ccbe4fdc", "commitAfterChange": "c37c989213b272d8a36110fb60dbd868a10a7d97", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "diff": ["-\tif (OS.IsPPC) {", "-\t\t/*", "-\t\t* Note: On WinCE PPC, only attempt to recognize the gesture for", "-\t\t* a context menu when the control contains a valid menu or there", "-\t\t* are listeners for the MenuDetect event.", "-\t\t*/", "-\t\tboolean hasMenu = menu != null && !menu.isDisposed ();", "-\t\tif (hasMenu || hooks (SWT.MenuDetect)) {", "-\t\t\tint x = (short) (lParam & 0xFFFF);", "-\t\t\tint y = (short) (lParam >> 16);", "-\t\t\tSHRGINFO shrg = new SHRGINFO ();", "-\t\t\tshrg.cbSize = SHRGINFO.sizeof;", "-\t\t\tshrg.hwndClient = handle;", "-\t\t\tshrg.ptDown_x = x;", "-\t\t\tshrg.ptDown_y = y; ", "-\t\t\tshrg.dwFlags = OS.SHRG_RETURNCMD;", "-\t\t\tint type = OS.SHRecognizeGesture (shrg);", "-\t\t\tif (type == OS.GN_CONTEXTMENU) showMenu (x, y);", "-\t\t}", "-\t}"]}], "num": 51178}