{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b93148d81a905f775eb6730ba8a661a1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7d4c8e6b36573df7a4b6b2df92e16f6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/Tab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r void createSizeGroup ()", "signatureAfterChange": "\r \tvoid createSizeGroup ()", "diff": ["-*/\r", "-void createSizeGroup () {\r", "-\r", "-\t/* Create the group */\r", "-\tsizeGroup = new Group (controlGroup, SWT.NONE);\r", "-\tsizeGroup.setLayout (new GridLayout());\r", "-\tsizeGroup.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\tsizeGroup.setText (resControls.getString(\"Size\"));\r", "-\r", "-\t/* Create the controls */\r", "-\r", "-\t/*\r", "-\t* The preferred size of a widget is the size returned\r", "-\t* by widget.computeSize (SWT.DEFAULT, SWT.DEFAULT).\r", "-\t* This size is defined on a widget by widget basis.\r", "-\t* Many widgets will attempt to display their contents.\r", "-\t*/\r", "-\tpreferredButton = new Button (sizeGroup, SWT.RADIO);\r", "-\tpreferredButton.setText (resControls.getString(\"Preferred\"));\r", "-\ttooSmallButton = new Button (sizeGroup, SWT.RADIO);\r", "-\ttooSmallButton.setText (TOO_SMALL_SIZE + \" X \" + TOO_SMALL_SIZE);\r", "-\tsmallButton = new Button(sizeGroup, SWT.RADIO);\r", "-\tsmallButton.setText (SMALL_SIZE + \" X \" + SMALL_SIZE);\r", "-\tlargeButton = new Button (sizeGroup, SWT.RADIO);\r", "-\tlargeButton.setText (LARGE_SIZE + \" X \" + LARGE_SIZE);\r", "-\r", "-\t/* Add the listeners */\r", "-\tSelectionAdapter selectionListener = new SelectionAdapter () {\r", "-\t\tpublic void widgetSelected (SelectionEvent event) {\r", "-\t\t\tif (!((Button) event.widget).getSelection ()) return;\r", "-\t\t\tsetExampleWidgetSize ();\r", "-\t\t};\r", "-\t};\r", "-\tpreferredButton.addSelectionListener(selectionListener);\r", "-\ttooSmallButton.addSelectionListener(selectionListener);\r", "-\tsmallButton.addSelectionListener(selectionListener);\r", "-\tlargeButton.addSelectionListener(selectionListener);\r", "-\r", "-\t/* Set the default state */\r", "-\tpreferredButton.setSelection (true);\r", "-}\r", "+\t */\r", "+\tvoid createSizeGroup () {\r", "+\t\t/* Create the group */\r", "+\t\tsizeGroup = new Group (controlGroup, SWT.NONE);\r", "+\t\tsizeGroup.setLayout (new GridLayout());\r", "+\t\tsizeGroup.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\tsizeGroup.setText (ControlExample.getResourceString(\"Size\"));\r", "+\t\r", "+\t\t/* Create the controls */\r", "+\t\r", "+\t\t/*\r", "+\t\t * The preferred size of a widget is the size returned\r", "+\t\t * by widget.computeSize (SWT.DEFAULT, SWT.DEFAULT).\r", "+\t\t * This size is defined on a widget by widget basis.\r", "+\t\t * Many widgets will attempt to display their contents.\r", "+\t\t */\r", "+\t\tpreferredButton = new Button (sizeGroup, SWT.RADIO);\r", "+\t\tpreferredButton.setText (ControlExample.getResourceString(\"Preferred\"));\r", "+\t\ttooSmallButton = new Button (sizeGroup, SWT.RADIO);\r", "+\t\ttooSmallButton.setText (TOO_SMALL_SIZE + \" X \" + TOO_SMALL_SIZE);\r", "+\t\tsmallButton = new Button(sizeGroup, SWT.RADIO);\r", "+\t\tsmallButton.setText (SMALL_SIZE + \" X \" + SMALL_SIZE);\r", "+\t\tlargeButton = new Button (sizeGroup, SWT.RADIO);\r", "+\t\tlargeButton.setText (LARGE_SIZE + \" X \" + LARGE_SIZE);\r", "+\t\r", "+\t\t/* Add the listeners */\r", "+\t\tSelectionAdapter selectionListener = new SelectionAdapter () {\r", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {\r", "+\t\t\t\tif (!((Button) event.widget).getSelection ()) return;\r", "+\t\t\t\tsetExampleWidgetSize ();\r", "+\t\t\t};\r", "+\t\t};\r", "+\t\tpreferredButton.addSelectionListener(selectionListener);\r", "+\t\ttooSmallButton.addSelectionListener(selectionListener);\r", "+\t\tsmallButton.addSelectionListener(selectionListener);\r", "+\t\tlargeButton.addSelectionListener(selectionListener);\r", "+\t\r", "+\t\t/* Set the default state */\r", "+\t\tpreferredButton.setSelection (true);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4317c33219140e1675c908fffa1b93bc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/Tab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r void createSizeGroup ()", "signatureAfterChange": "\r \tvoid createSizeGroup ()", "diff": ["-*/\r", "-void createSizeGroup () {\r", "-\r", "-\t/* Create the group */\r", "-\tsizeGroup = new Group (controlGroup, SWT.NONE);\r", "-\tsizeGroup.setLayout (new GridLayout());\r", "-\tsizeGroup.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\tsizeGroup.setText (resControls.getString(\"Size\"));\r", "-\r", "-\t/* Create the controls */\r", "-\r", "-\t/*\r", "-\t* The preferred size of a widget is the size returned\r", "-\t* by widget.computeSize (SWT.DEFAULT, SWT.DEFAULT).\r", "-\t* This size is defined on a widget by widget basis.\r", "-\t* Many widgets will attempt to display their contents.\r", "-\t*/\r", "-\tpreferredButton = new Button (sizeGroup, SWT.RADIO);\r", "-\tpreferredButton.setText (resControls.getString(\"Preferred\"));\r", "-\ttooSmallButton = new Button (sizeGroup, SWT.RADIO);\r", "-\ttooSmallButton.setText (TOO_SMALL_SIZE + \" X \" + TOO_SMALL_SIZE);\r", "-\tsmallButton = new Button(sizeGroup, SWT.RADIO);\r", "-\tsmallButton.setText (SMALL_SIZE + \" X \" + SMALL_SIZE);\r", "-\tlargeButton = new Button (sizeGroup, SWT.RADIO);\r", "-\tlargeButton.setText (LARGE_SIZE + \" X \" + LARGE_SIZE);\r", "-\r", "-\t/* Add the listeners */\r", "-\tSelectionAdapter selectionListener = new SelectionAdapter () {\r", "-\t\tpublic void widgetSelected (SelectionEvent event) {\r", "-\t\t\tif (!((Button) event.widget).getSelection ()) return;\r", "-\t\t\tsetExampleWidgetSize ();\r", "-\t\t};\r", "-\t};\r", "-\tpreferredButton.addSelectionListener(selectionListener);\r", "-\ttooSmallButton.addSelectionListener(selectionListener);\r", "-\tsmallButton.addSelectionListener(selectionListener);\r", "-\tlargeButton.addSelectionListener(selectionListener);\r", "-\r", "-\t/* Set the default state */\r", "-\tpreferredButton.setSelection (true);\r", "-}\r", "+\t */\r", "+\tvoid createSizeGroup () {\r", "+\t\t/* Create the group */\r", "+\t\tsizeGroup = new Group (controlGroup, SWT.NONE);\r", "+\t\tsizeGroup.setLayout (new GridLayout());\r", "+\t\tsizeGroup.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\tsizeGroup.setText (ControlExample.getResourceString(\"Size\"));\r", "+\t\r", "+\t\t/* Create the controls */\r", "+\t\r", "+\t\t/*\r", "+\t\t * The preferred size of a widget is the size returned\r", "+\t\t * by widget.computeSize (SWT.DEFAULT, SWT.DEFAULT).\r", "+\t\t * This size is defined on a widget by widget basis.\r", "+\t\t * Many widgets will attempt to display their contents.\r", "+\t\t */\r", "+\t\tpreferredButton = new Button (sizeGroup, SWT.RADIO);\r", "+\t\tpreferredButton.setText (ControlExample.getResourceString(\"Preferred\"));\r", "+\t\ttooSmallButton = new Button (sizeGroup, SWT.RADIO);\r", "+\t\ttooSmallButton.setText (TOO_SMALL_SIZE + \" X \" + TOO_SMALL_SIZE);\r", "+\t\tsmallButton = new Button(sizeGroup, SWT.RADIO);\r", "+\t\tsmallButton.setText (SMALL_SIZE + \" X \" + SMALL_SIZE);\r", "+\t\tlargeButton = new Button (sizeGroup, SWT.RADIO);\r", "+\t\tlargeButton.setText (LARGE_SIZE + \" X \" + LARGE_SIZE);\r", "+\t\r", "+\t\t/* Add the listeners */\r", "+\t\tSelectionAdapter selectionListener = new SelectionAdapter () {\r", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {\r", "+\t\t\t\tif (!((Button) event.widget).getSelection ()) return;\r", "+\t\t\t\tsetExampleWidgetSize ();\r", "+\t\t\t};\r", "+\t\t};\r", "+\t\tpreferredButton.addSelectionListener(selectionListener);\r", "+\t\ttooSmallButton.addSelectionListener(selectionListener);\r", "+\t\tsmallButton.addSelectionListener(selectionListener);\r", "+\t\tlargeButton.addSelectionListener(selectionListener);\r", "+\t\r", "+\t\t/* Set the default state */\r", "+\t\tpreferredButton.setSelection (true);\r", "+\t}\r"]}], "num": 15047}