{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3c8a0edb1317fd2a094343f05b72f60b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94f720c30cac0c281465a9b0822b6fa5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "aef40797195cb5e2b3bf6818f1b0fa0d190030aa", "commitAfterChange": "ad01c128726baa60f2941a7ca2694366e486fcac", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \tstatic int atkObject_ref_child (int atkObject, int index)", "signatureAfterChange": "  \tstatic int atkObject_ref_child (int atkObject, int index)", "diff": ["+\t\t\tAccessible accessible = object.accessible;", "+\t\t\tVector listeners = accessible.accessibleControlListeners;", "+\t\t\tint length = listeners.size();", "+\t\t\tif (length > 0) {", "+\t\t\t\tAccessibleControlEvent event = new AccessibleControlEvent(accessible);", "+\t\t\t\tevent.childID = ACC.CHILDID_CHILD_AT_INDEX;", "+\t\t\t\tevent.detail = (int)/*64*/index;", "+\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\tAccessibleControlListener listener = (AccessibleControlListener) listeners.elementAt(i);", "+\t\t\t\t\tlistener.getChild(event);", "+\t\t\t\t}", "+\t\t\t\tif (event.accessible != null) {", "+\t\t\t\t\tAccessibleObject accObject = event.accessible.getAccessibleObject();", "+\t\t\t\t\tif (accObject != null) {", "+\t\t\t\t\t\treturn OS.g_object_ref (accObject.handle);\t", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dab2b1dffcddbaac6c78e3cc05cd3da", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "b22a7d19afbe2a3811a0f8aa54c1e85d92c62a2c", "commitAfterChange": "6b3c7f0839c7bbe5167edd98f5372c12c1468362", "methodNumberBeforeChange": 308, "methodNumberAfterChange": 308, "signatureBeforeChange": " \tint get_groupPosition(long pGroupLevel, long pSimilarItemsInGroup, long pPositionInGroup)", "signatureAfterChange": " \tint get_groupPosition(long pGroupLevel, long pSimilarItemsInGroup, long pPositionInGroup)", "diff": ["-\t\t// TODO: handle where possible - maybe add AccessibleGroup later", "-\t\t//get the role", "-\t\t//if it has role tree, then the level is the value else 0 (for N/A)", "-\t\tint groupLevel = 0;", "-\t\tCOM.MoveMemory(pGroupLevel, new int [] { groupLevel }, 4);", "-\t\t//get the children of the parent", "-\t\t//count all children with the same role, if none, then 0 (for N/A)", "-\t\t//find this control's 1-based index in the same-type children of the parent (0 for N/A)", "-\t\tint similarItemsInGroup = 0;", "-\t\tint positionInGroup = 0;", "-\t\tif (control instanceof Button && ((control.getStyle() & SWT.RADIO) != 0)) {", "-\t\t\t/* We currently only determine position and count for radio buttons. */", "-\t\t\tControl [] children = control.getParent().getChildren();", "-\t\t\tpositionInGroup = 1;", "-\t\t\tsimilarItemsInGroup = 1;", "-\t\t\tfor (int i = 0; i < children.length; i++) {", "-\t\t\t\tControl child = children[i];", "-\t\t\t\tif (child instanceof Button && ((child.getStyle() & SWT.RADIO) != 0)) {", "-\t\t\t\t\tif (child == control) positionInGroup = similarItemsInGroup;", "-\t\t\t\t\telse similarItemsInGroup++;", "+\t\tAccessibleAttributeEvent event = new AccessibleAttributeEvent(this);", "+\t\tevent.groupLevel = event.groupCount = event.groupIndex = -1;", "+\t\tfor (int i = 0; i < accessibleAttributeListenersSize(); i++) {", "+\t\t\tAccessibleAttributeListener listener = (AccessibleAttributeListener) accessibleAttributeListeners.elementAt(i);", "+\t\t\tlistener.getAttributes(event);", "+\t\t}", "+\t\tint groupLevel = (event.groupLevel != -1) ? event.groupLevel : 0;", "+\t\tint similarItemsInGroup = (event.groupCount != -1) ? event.groupCount : 0;", "+\t\tint positionInGroup = (event.groupIndex != -1) ? event.groupIndex : 0;", "+\t\tif (similarItemsInGroup == 0 && positionInGroup == 0) {", "+\t\t\t/* Determine position and count for radio buttons. */", "+\t\t\tif (control instanceof Button && ((control.getStyle() & SWT.RADIO) != 0)) {", "+\t\t\t\tControl [] children = control.getParent().getChildren();", "+\t\t\t\tpositionInGroup = 1;", "+\t\t\t\tsimilarItemsInGroup = 1;", "+\t\t\t\tfor (int i = 0; i < children.length; i++) {", "+\t\t\t\t\tControl child = children[i];", "+\t\t\t\t\tif (child instanceof Button && ((child.getStyle() & SWT.RADIO) != 0)) {", "+\t\t\t\t\t\tif (child == control) positionInGroup = similarItemsInGroup;", "+\t\t\t\t\t\telse similarItemsInGroup++;", "+\t\t\t\t\t}", "+\t\tCOM.MoveMemory(pGroupLevel, new int [] { groupLevel }, 4);", "-\t\tif (DEBUG) print(this + \".IAccessible2::get_groupPosition() returning\" + hresult(groupLevel == 0 && similarItemsInGroup == 0 && positionInGroup == 0 ? COM.S_FALSE : COM.S_OK));", "+\t\tif (DEBUG) print(this + \".IAccessible2::get_groupPosition() returning level=\" + groupLevel + \", count=\" + similarItemsInGroup + \", index=\" + positionInGroup + hresult(groupLevel == 0 && similarItemsInGroup == 0 && positionInGroup == 0 ? COM.S_FALSE : COM.S_OK));"]}], "num": 36032}