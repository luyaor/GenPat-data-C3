{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "30392ef1d600d6a82eb053908d08be28", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ebed3f249bfc02ec0b1da952f04263f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Composite.java", "commitBeforeChange": "34b48a1450d691429218250a2c0b9f1d585dff6c", "commitAfterChange": "6c48129efab113803ef6d6a35457b5eb7eea82a5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public void test_getChildren()", "signatureAfterChange": "  public void test_getChildren()", "diff": ["-\tassertEquals(\":a:\", new Control[]{}, composite.getChildren());", "+\tassertArrayEquals(\":a:\", new Control[]{}, composite.getChildren());", "-\tassertEquals(\":b:\", new Control[]{c1}, composite.getChildren());", "+\tassertArrayEquals(\":b:\", new Control[]{c1}, composite.getChildren());", "-\tassertEquals(\":c:\", new Control[]{c1, c2}, composite.getChildren());", "+\tassertArrayEquals(\":c:\", new Control[]{c1, c2}, composite.getChildren());", "-\tassertEquals(\":d:\", new Control[]{c1, c2, c3}, composite.getChildren());", "+\tassertArrayEquals(\":d:\", new Control[]{c1, c2, c3}, composite.getChildren());", "-\tassertEquals(\":e:\", new Control[]{c1, c3}, composite.getChildren());", "+\tassertArrayEquals(\":e:\", new Control[]{c1, c3}, composite.getChildren());", "-\tassertEquals(\":f:\", new Control[]{}, composite.getChildren());", "+\tassertArrayEquals(\":f:\", new Control[]{}, composite.getChildren());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0adb3977d896eed68dbfbbbe4e4c74b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_List.java", "commitBeforeChange": "b06cbf7a0e056ef6e3191b7116c2c78a7e2ab1bd", "commitAfterChange": "488ea245d8ed955ed7da346350d79cf2cba672a8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public void test_addLjava_lang_StringI()", "signatureAfterChange": "  public void test_addLjava_lang_StringI()", "diff": ["+\tlist.add(\"\", 0);", "+\tassertSame(\":a:\", new String[] {\"\"}, list.getItems());", "+\tlist.add(\"some \\n text\", 1);", "+\tassertSame(\":b:\", new String[] {\"\", \"some \\n text\"}, list.getItems());", "+\tlist.add(\"some text\", 0);", "+\tassertSame(\":c:\", new String[] {\"some text\", \"\", \"some \\n text\" }, list.getItems());", "+\t", "+\ttry {", "+\t\tlist.add(null, 0);", "+\t\tfail(\"No exception thrown string == null\");", "+\t} catch (IllegalArgumentException e) {", "+\t}", "+", "+\ttry {", "+\t\tlist.add(\"string\", -1);", "+\t\tfail(\"No exception thrown index < 0\");", "+\t} catch (IllegalArgumentException e) {", "+\t}", "+\t", "+\t", "+\tlist.add(\"\", 0);", "+\tassertSame(\":a:\", new String[] {\"\"}, list.getItems());", "+\tlist.add(\"some \\n text\", 1);", "+\tassertSame(\":b:\", new String[] {\"\", \"some \\n text\"}, list.getItems());", "+\tlist.add(\"some text\", 0);", "+\tassertSame(\":c:\", new String[] {\"some text\", \"\", \"some \\n text\" }, list.getItems());", "+\t", "+\ttry {", "+\t\tlist.add(null, 0);", "+\t\tfail(\"No exception thrown string == null\");", "+\t} catch (IllegalArgumentException e) {", "+\t}", "+", "+\ttry {", "+\t\tlist.add(\"string\", -1);", "+\t\tfail(\"No exception thrown index < 0\");", "+\t} catch (IllegalArgumentException e) {", "+\t}"]}], "num": 36116}