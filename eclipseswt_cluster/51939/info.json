{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "52fa3b9a6ee28db0be1da0ccd9f3799d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60d5c5a413622d35b9d4e3397dce07a2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "b38b5175e2e229ee431fed7b6e825a0ca1d6d557", "commitAfterChange": "6dd7844e62939b2d1c667e0d7710ef1b6cc160a2", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "\r \r void resizeControl ()", "signatureAfterChange": "\r \r void resizeControl ()", "diff": ["+\t\t/*\r", "+\t\t* Set the size and location of the control\r", "+\t\t* separately to minimize flashing in the\r", "+\t\t* case where the control does not resize\r", "+\t\t* to the size that was requested.  This\r", "+\t\t* case can occur when the control is a\r", "+\t\t* combo box.\r", "+\t\t*/\r", "-\t\tcontrol.setBounds (itemRect);\r", "+\t\tcontrol.setSize (itemRect.width, itemRect.height);\r", "-\t\tif (!rect.equals (itemRect)) {\r", "-\t\t\trect.x = itemRect.x + (itemRect.width - rect.width) / 2;\r", "-\t\t\trect.y = itemRect.y + (itemRect.height - rect.height) / 2;\r", "-\t\t\tcontrol.setBounds (rect);\r", "-\t\t}\r", "+\t\trect.x = itemRect.x + (itemRect.width - rect.width) / 2;\r", "+\t\trect.y = itemRect.y + (itemRect.height - rect.height) / 2;\r", "+\t\tcontrol.setLocation (rect.x, rect.y);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "930a532394a44a0bfb30c52d42fed5da", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet296.java", "commitBeforeChange": "e60a3ad64bf035f641febfe15e4f9e47e3913f05", "commitAfterChange": "f18e9dda2b54542a6afc8eb341f631aa41a0ddf7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public static void main (String[] args)", "signatureAfterChange": " \t public static void main (String[] args)", "diff": ["+\t/*", "+\t * The following listener ensures that a newly-selected item", "+\t * in the Tree is always visible.", "+\t */", "+\ttree.addSelectionListener(new SelectionAdapter() {", "+\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\tTreeItem [] selectedItems = tree.getSelection();", "+\t\t\tif (selectedItems.length > 0) {", "+\t\t\t\tRectangle itemRect = selectedItems[0].getBounds();", "+\t\t\t\tRectangle area = sc.getClientArea();", "+\t\t\t\tPoint origin = sc.getOrigin();", "+\t\t\t\tif (itemRect.x < origin.x || itemRect.y < origin.y", "+\t\t\t\t\t\t|| itemRect.x + itemRect.width > origin.x + area.width", "+\t\t\t\t\t\t|| itemRect.y + itemRect.height > origin.y + area.height) {", "+\t\t\t\t\tsc.setOrigin(itemRect.x, itemRect.y);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t});"]}], "num": 51939}