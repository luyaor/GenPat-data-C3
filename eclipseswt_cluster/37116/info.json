{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a874b1255a08fb09e1e61f0c5779958b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e899a316cd1fc658a5f5fa7a3ed8c7f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "6903a48c9a28004ca26f4cd40391ccf9248d20f7", "commitAfterChange": "af415d7e0bc4e49efa398f906a1d5ee777506b7b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r \r void destroyItem (TabItem item)", "signatureAfterChange": "\r \r void destroyItem (TabItem item)", "diff": ["-\tint offset = 0;\r", "+\tint j = 0;\r", "+\tint [] str = new int [1];\r", "+\tint [] address = new int [1];\r", "-\t\tif (i == index) {\r", "-\t\t\toffset = -1;\r", "-\t\t\tcontinue;\r", "-\t\t}\r", "-\t\tint [] address = new int [1];\r", "+\t\tif (i == index) continue;\r", "-\t\tint length = OS.strlen (address [0]);\r", "-\t\tint str = OS.malloc (length + 1);\r", "-\t\tif (str == 0) error (SWT.ERROR_ITEM_NOT_ADDED);\r", "-\t\tOS.memmove (str, address [0], length + 1);\r", "-\t\tOS.memmove (newPtr + ((i + offset) * 4), new int [] {str}, 4);\r", "+\t\tstr [0] = OS.strdup (address [0]);\r", "+\t\tif (str [0] == 0) error (SWT.ERROR_ITEM_NOT_ADDED);\r", "+\t\tOS.memmove (newPtr + (j++ * 4), str, 4);\r", "-\t\tint [] address = new int [1];\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "765fc7b233c3e5ce01d21dff42d606f1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "6903a48c9a28004ca26f4cd40391ccf9248d20f7", "commitAfterChange": "af415d7e0bc4e49efa398f906a1d5ee777506b7b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \r void createItem (TabItem item, int index)", "signatureAfterChange": "\r \r void createItem (TabItem item, int index)", "diff": ["-\tint offset = 0;\r", "-\tfor (int i=0; i<count; i++) {\r", "-\t\tif (i == index) offset = 1;\r", "-\t\tint [] address = new int [1];\r", "-\t\tOS.memmove (address, oldPtr + (i * 4), 4);\r", "-\t\tint length = OS.strlen (address [0]);\r", "-\t\tint str = OS.malloc (length + 1);\r", "-\t\tif (str == 0) error (SWT.ERROR_ITEM_NOT_ADDED);\r", "-\t\tOS.memmove (str, address [0], length + 1);\r", "-\t\tOS.memmove (newPtr + ((i + offset) * 4), new int [] {str}, 4);\r", "+\tint j = 0;\r", "+\tint [] str = new int [1];\r", "+\tint [] address = new int [1];\r", "+\tfor (int i=0; i<=count; i++) {\r", "+\t\tif (i == index) {\r", "+\t\t\tstr [0] = OS.malloc (1);\r", "+\t\t} else {\r", "+\t\t\tOS.memmove (address, oldPtr + (j++ * 4), 4);\r", "+\t\t\tstr [0] = OS.strdup (address [0]);\r", "+\t\t}\r", "+\t\tif (str [0] == 0) error (SWT.ERROR_ITEM_NOT_ADDED);\r", "+\t\tOS.memmove (newPtr + (i * 4), str, 4);\r", "-\tint str = OS.malloc (1);\r", "-\tif (str == 0) error (SWT.ERROR_ITEM_NOT_ADDED);\r", "-\tOS.memmove (newPtr + (index * 4), new int [] {str}, 4);\r", "-\tfor (int i=0; i<count+1; i++) {\r", "-\t\tint [] address = new int [1];\r", "+\tfor (int i=0; i<=count; i++) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46e348c435938145a4aac8e769decea8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/TabItem.java", "commitBeforeChange": "6903a48c9a28004ca26f4cd40391ccf9248d20f7", "commitAfterChange": "af415d7e0bc4e49efa398f906a1d5ee777506b7b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \r public void setText (String string)", "signatureAfterChange": "\r \r public void setText (String string)", "diff": ["+\tint [] str = new int [1];\r", "+\tint [] address = new int [1];\r", "+\tbyte [] buffer = Converter.wcsToMbcs (null, stripMnemonics (string));\r", "-\t\tint str;\r", "-\t\t\tbyte [] buffer = Converter.wcsToMbcs (null, stripMnemonics (string));\r", "-\t\t\tstr = OS.malloc (buffer.length + 1);\r", "-\t\t\tOS.memmove (str, buffer, buffer.length);\r", "+\t\t\tstr [0] = OS.malloc (buffer.length + 1);\r", "+\t\t\tOS.memmove (str [0], buffer, buffer.length);\r", "-\t\t\tint [] address = new int [1];\r", "-\t\t\tint length = OS.strlen (address [0]);\r", "-\t\t\tstr = OS.malloc (length + 1);\r", "-\t\t\tOS.memmove (str, address [0], length + 1);\r", "+\t\t\tstr [0] = OS.strdup (address [0]);\r", "-\t\tOS.memmove (newPtr + (i * 4), new int [] {str}, 4);\r", "+\t\tOS.memmove (newPtr + (i * 4), str, 4);\r", "-\t\tint [] address = new int [1];\r"]}], "num": 37116}