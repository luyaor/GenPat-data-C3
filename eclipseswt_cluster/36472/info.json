{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3cd943b4c8c321e348ad52827891ba66", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52fecbd0dcbeb56de5eba0d7e48162b6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "9bd03104d009c82145f5c8f56f22061b9cfa52e5", "commitAfterChange": "6d7b00971b6d8f6daef5e4ed7641a103a3009522", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r \r static int[] init(Device device, Image image, ImageData i)", "signatureAfterChange": "\r \r static int[] init(Device device, Image image, ImageData i)", "diff": ["-\t * (0xFF000000, 0xFF0000, 0xFF00).  Make sure the image is\r", "+\t * (0x00FF0000, 0x0000FF00, 0x000000FF) as documented in \r", "+\t * MSDN BITMAPINFOHEADER.  Make sure the image is \r", "+\t/*\r", "+\t* Note on WinCE.  CreateDIBSection requires the biCompression\r", "+\t* field of the BITMAPINFOHEADER to be set to BI_BITFIELDS for\r", "+\t* 16 and 32 bit direct images (see MSDN for CreateDIBSection).\r", "+\t* In this case, the color mask can be set to any value.  For\r", "+\t* consistency, it is set to the same mask used by non WinCE\r", "+\t* platforms in BI_RGB mode.\r", "+\t*/\r", "-\t\t\tbmi[40] = (byte)((redMask & 0xFF) >> 0);\r", "-\t\t\tbmi[41] = (byte)((redMask & 0xFF00) >> 8);\r", "-\t\t\tbmi[42] = (byte)((redMask & 0xFF0000) >> 16);\r", "-\t\t\tbmi[43] = (byte)((redMask & 0xFF000000) >> 24);\r", "-\t\t\tbmi[44] = (byte)((greenMask & 0xFF) >> 0);\r", "-\t\t\tbmi[45] = (byte)((greenMask & 0xFF00) >> 8);\r", "-\t\t\tbmi[46] = (byte)((greenMask & 0xFF0000) >> 16);\r", "-\t\t\tbmi[47] = (byte)((greenMask & 0xFF000000) >> 24);\r", "-\t\t\tbmi[48] = (byte)((blueMask & 0xFF) >> 0);\r", "-\t\t\tbmi[49] = (byte)((blueMask & 0xFF00) >> 8);\r", "-\t\t\tbmi[50] = (byte)((blueMask & 0xFF0000) >> 16);\r", "-\t\t\tbmi[51] = (byte)((blueMask & 0xFF000000) >> 24);\r", "+\t\t\t/*\r", "+\t\t\t * The color masks must be written based on the\r", "+\t\t\t * endianness of the ImageData.\r\t\t\t */\r", "+\t\t\tif (i.getByteOrder() == ImageData.LSB_FIRST) {\r", "+\t\t\t\tbmi[40] = (byte)((redMask & 0xFF) >> 0);\r", "+\t\t\t\tbmi[41] = (byte)((redMask & 0xFF00) >> 8);\r", "+\t\t\t\tbmi[42] = (byte)((redMask & 0xFF0000) >> 16);\r", "+\t\t\t\tbmi[43] = (byte)((redMask & 0xFF000000) >> 24);\r", "+\t\t\t\tbmi[44] = (byte)((greenMask & 0xFF) >> 0);\r", "+\t\t\t\tbmi[45] = (byte)((greenMask & 0xFF00) >> 8);\r", "+\t\t\t\tbmi[46] = (byte)((greenMask & 0xFF0000) >> 16);\r", "+\t\t\t\tbmi[47] = (byte)((greenMask & 0xFF000000) >> 24);\r", "+\t\t\t\tbmi[48] = (byte)((blueMask & 0xFF) >> 0);\r", "+\t\t\t\tbmi[49] = (byte)((blueMask & 0xFF00) >> 8);\r", "+\t\t\t\tbmi[50] = (byte)((blueMask & 0xFF0000) >> 16);\r", "+\t\t\t\tbmi[51] = (byte)((blueMask & 0xFF000000) >> 24);\r", "+\t\t\t} else {\r", "+\t\t\t\tbmi[40] = (byte)((redMask & 0xFF000000) >> 24);\r", "+\t\t\t\tbmi[41] = (byte)((redMask & 0xFF0000) >> 16);\r", "+\t\t\t\tbmi[42] = (byte)((redMask & 0xFF00) >> 8);\r", "+\t\t\t\tbmi[43] = (byte)((redMask & 0xFF) >> 0);\r", "+\t\t\t\tbmi[44] = (byte)((greenMask & 0xFF000000) >> 24);\r", "+\t\t\t\tbmi[45] = (byte)((greenMask & 0xFF0000) >> 16);\r", "+\t\t\t\tbmi[46] = (byte)((greenMask & 0xFF00) >> 8);\r", "+\t\t\t\tbmi[47] = (byte)((greenMask & 0xFF) >> 0);\r", "+\t\t\t\tbmi[48] = (byte)((blueMask & 0xFF000000) >> 24);\r", "+\t\t\t\tbmi[49] = (byte)((blueMask & 0xFF0000) >> 16);\r", "+\t\t\t\tbmi[50] = (byte)((blueMask & 0xFF00) >> 8);\r", "+\t\t\t\tbmi[51] = (byte)((blueMask & 0xFF) >> 0);\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5413a41ee6d6e0aa4cc8f0192b2f5953", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "9c4bff2323bd0415c8033ce7de629d361e3ac9e3", "commitAfterChange": "37260278a8f433431d86d82db4bf8e9fe53b4d66", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  void initNative(String filename)", "signatureAfterChange": "  void initNative(String filename)", "diff": ["-\t\tif (hasAlpha) OS.objc_msgSend(nativeRep.id, OS.sel_setAlpha_, 0);", "-\t\tif (hasAlpha) OS.objc_msgSend(nativeRep.id, OS.sel_setAlpha_, 1);", "+\t\t\t\tfloat alpha = alphaData[a] & 0xFF;", "+\t\t\t\tif (alpha != 0) {", "+\t\t\t\t\tsrcData[p+1] = (byte)(((srcData[p+1] & 0xFF) / alpha) * 0xFF);", "+\t\t\t\t\tsrcData[p+2] = (byte)(((srcData[p+2] & 0xFF) / alpha) * 0xFF);", "+\t\t\t\t\tsrcData[p+3] = (byte)(((srcData[p+3] & 0xFF) / alpha) * 0xFF);", "+\t\t\t\t}", "-\t\t\t\tthis.transparentPixel = (red << 16) + (green << 8) + blue;", "+\t\t\t\tthis.transparentPixel = (red << 16) | (green << 8) | blue;", "-\t\t\t\t\t\tint pixel = (srcData[j+1] << 16) + (srcData[j+2] << 8) + srcData[j+3];", "+\t\t\t\t\t\tint pixel = ((srcData[j+1] & 0xFF) << 16) | ((srcData[j+2] & 0xFF) << 8) | (srcData[j+3] & 0xFF);"]}], "num": 36472}