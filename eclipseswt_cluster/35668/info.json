{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7d80986f3d55297c6262c2bce6de26c2", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acb1877c3aacbfffc1625b336956e7c9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "7f1555a570e0630345de4a3befbd9ab7828e99f7", "commitAfterChange": "d9938ffe936060d86e28a5c1d8df54b2cab1524f", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": " void removeColumn(TableColumn column)", "signatureAfterChange": " void removeColumn(TableColumn column)", "diff": ["+\t\t\tEnumeration items = getItemVector ().elements ();", "+\t\t\twhile (items.hasMoreElements()) {", "+\t\t\t\tTableItem item = (TableItem)items.nextElement();", "+\t\t\t\tColor [] cellBackground = item.cellBackground;", "+\t\t\t\tif (cellBackground != null) {", "+\t\t\t\t\tColor [] temp = new Color [columnCount];", "+\t\t\t\t\tSystem.arraycopy (cellBackground, 0, temp, 0, index);", "+\t\t\t\t\tSystem.arraycopy (cellBackground, index + 1, temp, index, columnCount - index);", "+\t\t\t\t\titem.cellBackground = temp;", "+\t\t\t\t}", "+\t\t\t\tColor [] cellForeground = item.cellForeground;", "+\t\t\t\tif (cellForeground != null) {", "+\t\t\t\t\tColor [] temp = new Color [columnCount];", "+\t\t\t\t\tSystem.arraycopy (cellForeground, 0, temp, 0, index);", "+\t\t\t\t\tSystem.arraycopy (cellForeground, index + 1, temp, index, columnCount - index);", "+\t\t\t\t\titem.cellForeground = temp;", "+\t\t\t\t}", "+\t\t\t}\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "837e15b4b0665e102ecfc9b8c1c632e4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "7f1555a570e0630345de4a3befbd9ab7828e99f7", "commitAfterChange": "d9938ffe936060d86e28a5c1d8df54b2cab1524f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " void addColumn(TableColumn column)", "signatureAfterChange": " void addColumn(TableColumn column)", "diff": ["-\tif (getColumnCount() > 1) {", "+\tint columnCount = getColumnCount();", "+\tif (columnCount > 1) {", "+\t\tEnumeration items = getItemVector ().elements ();", "+\t\twhile (items.hasMoreElements()) {", "+\t\t\tTableItem item = (TableItem)items.nextElement();", "+\t\t\tColor [] cellBackground = item.cellBackground;", "+\t\t\tif (cellBackground != null) {", "+\t\t\t\tColor [] temp = new Color [columnCount];", "+\t\t\t\tSystem.arraycopy (cellBackground, 0, temp, 0, index);", "+\t\t\t\tSystem.arraycopy (cellBackground, index, temp, index+1, columnCount - index - 1);", "+\t\t\t\titem.cellBackground = temp;", "+\t\t\t}", "+\t\t\tColor [] cellForeground = item.cellForeground;", "+\t\t\tif (cellForeground != null) {", "+\t\t\t\tColor [] temp = new Color [columnCount];", "+\t\t\t\tSystem.arraycopy (cellForeground, 0, temp, 0, index);", "+\t\t\t\tSystem.arraycopy (cellForeground, index, temp, index+1, columnCount - index - 1);", "+\t\t\t\titem.cellForeground = temp;", "+\t\t\t}", "+\t\t}", "+\t"]}], "num": 35668}