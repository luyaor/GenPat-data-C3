{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d2fe5c9dc9c69d8f63e52f706e91f194", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57b45166285998517d73c1fb273d730c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 71, "signatureBeforeChange": "\r void showToolTip (int handle, String toolTipText)", "signatureAfterChange": "\r void showToolTip (int handle, String toolTipText)", "diff": ["-\t/* Create the tooltip widgets. */\t\r", "+\t/* Create the tooltip widgets */\t\r", "-\tint [] argList = {OS.XmNmwmDecorations, 0, OS.XmNborderWidth, 1};\r", "-\tint shellHandle = OS.XtCreatePopupShell (null, widgetClass, handle, argList, argList.length / 2);\r", "+\tint [] argList1 = {OS.XmNmwmDecorations, 0, OS.XmNborderWidth, 1};\r", "+\tint shellHandle = OS.XtCreatePopupShell (null, widgetClass, handle, argList1, argList1.length / 2);\r", "-\t/* Set the tooltip foreground and background. */\r", "+\t/* Set the tooltip foreground and background */\r", "-\tOS.XtManageChild(toolTipHandle);\t\t\r", "+\tOS.XtManageChild (toolTipHandle);\t\t\r", "-\t/* Set the tooltip label string. */\r", "+\t/* Set the tooltip label string */\r", "-\t\r", "-\t/* Position and popup the tooltip. */\r", "-\tint xWindow = OS.XDefaultRootWindow (xDisplay);\r", "-\tint [] rootX = new int [1], rootY = new int [1], unused = new int [1];\r", "-\tOS.XQueryPointer (xDisplay, xWindow, unused, unused, rootX, rootY, unused, unused, unused);\r", "-\t\r", "+\t\t\r", "-\t*/\r", "-\tint x = rootX [0] + 16, y = rootY [0] + 16;\t\r", "-\tOS.XtMoveWidget (shellHandle, x, y);\r", "+\t*/", "+\tint xWindow = OS.XDefaultRootWindow (xDisplay);", "+\tint [] rootX = new int [1], rootY = new int [1], unused = new int [1];", "+\tOS.XQueryPointer (xDisplay, xWindow, unused, unused, rootX, rootY, unused, unused, unused);", "+\tint x = rootX [0] + 16, y = rootY [0] + 16;", "+\t", "+\t/*", "+\t* Ensure that the tooltip is on the screen.", "+\t*/", "+\tint screen = OS.XDefaultScreen (xDisplay);", "+\tint width = OS.XDisplayWidth (xDisplay, screen);", "+\tint height = OS.XDisplayHeight (xDisplay, screen);", "+\tint [] argList4 = {OS.XmNwidth, 0, OS.XmNheight, 0};", "+\tOS.XtGetValues (toolTipHandle, argList4, argList4.length / 2);", "+\tx = Math.max (0, Math.min (x, width - argList4 [1]));", "+\ty = Math.max (0, Math.min (y, height - argList4 [3]));", "+\tOS.XtMoveWidget (shellHandle, x, y);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "545cf00c479d286e0963d8561d6e87d1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "23fa2220ca73d0019e71d1a505d792c8e8e639c2", "commitAfterChange": "b40f035552decb939f682913a77fb6342278feb4", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 72, "signatureBeforeChange": "\r void showToolTip (int handle, String toolTipText)", "signatureAfterChange": "\r void showToolTip (int handle, String toolTipText)", "diff": ["+}\r", "-\tif (toolTipText == null || toolTipText.length () == 0 || toolTipHandle != 0) {\r", "-\t\t return;\r", "-\t}\r", "-\t\r", "-\t/* Create the shell and tool tip widget */\r", "-\tint widgetClass = OS.OverrideShellWidgetClass ();\r", "-\tint [] argList1 = {OS.XmNmwmDecorations, 0, OS.XmNborderWidth, 1};\r", "-\tint shellHandle = OS.XtCreatePopupShell (null, widgetClass, handle, argList1, argList1.length / 2);\r", "-\tColor infoForeground = getSystemColor (SWT.COLOR_INFO_FOREGROUND);\r", "-\tColor infoBackground = getSystemColor (SWT.COLOR_INFO_BACKGROUND);\r", "-\tint foregroundPixel = infoForeground.handle.pixel;\r", "-\tint backgroundPixel = infoBackground.handle.pixel;\r", "+\tint shellHandle = 0;\r", "-\tint [] argList2 = {\r", "-\t\tOS.XmNforeground, foregroundPixel, \r", "-\t\tOS.XmNbackground, backgroundPixel,\r", "-\t\tOS.XmNalignment, OS.XmALIGNMENT_BEGINNING,\r", "-\t};\r", "-\ttoolTipHandle = OS.XmCreateLabel (shellHandle, buffer, argList2, argList2.length / 2);\r", "-\tOS.XtManageChild (toolTipHandle);\t\r", "+\tif (toolTipHandle != 0) {\r", "+\t\tshellHandle = OS.XtParent (toolTipHandle);\r", "+\t\tint shellParent = OS.XtParent (shellHandle);\r", "+\t\tif (handle != shellParent) return;\r", "+\t\tint xmString = OS.XmStringGenerate (buffer, null, OS.XmCHARSET_TEXT, null);\r", "+\t\tint [] argList = {OS.XmNlabelString, xmString};\r", "+\t\tOS.XtSetValues (toolTipHandle, argList, argList.length / 2);\r", "+\t\tif (xmString != 0) OS.XmStringFree (xmString);\r", "+\t} else {\r", "+\t\tint widgetClass = OS.OverrideShellWidgetClass ();\r", "+\t\tint [] argList1 = {OS.XmNmwmDecorations, 0, OS.XmNborderWidth, 1};\r", "+\t\tshellHandle = OS.XtCreatePopupShell (null, widgetClass, handle, argList1, argList1.length / 2);\r", "+\t\tColor infoForeground = getSystemColor (SWT.COLOR_INFO_FOREGROUND);\r", "+\t\tColor infoBackground = getSystemColor (SWT.COLOR_INFO_BACKGROUND);\r", "+\t\tint foregroundPixel = infoForeground.handle.pixel;\r", "+\t\tint backgroundPixel = infoBackground.handle.pixel;\r", "+\t\tint [] argList2 = {\r", "+\t\t\tOS.XmNforeground, foregroundPixel, \r", "+\t\t\tOS.XmNbackground, backgroundPixel,\r", "+\t\t\tOS.XmNalignment, OS.XmALIGNMENT_BEGINNING,\r", "+\t\t};\r", "+\t\ttoolTipHandle = OS.XmCreateLabel (shellHandle, buffer, argList2, argList2.length / 2);\r", "+\t\tOS.XtManageChild (toolTipHandle);\r", "+\t}\r", "+\tif (toolTipText == null || toolTipText.length () == 0) {\r", "+\t\tOS.XtPopdown (shellHandle);\r", "+\t} else {\r", "+\t\t/*\r", "+\t\t* Feature in X.  There is no way to query the size of a cursor.\r", "+\t\t* The fix is to use the default cursor size which is 16x16.\r", "+\t\t*/\r", "+\t\tint xWindow = OS.XDefaultRootWindow (xDisplay);\r", "+\t\tint [] rootX = new int [1], rootY = new int [1], unused = new int [1];\r", "+\t\tOS.XQueryPointer (xDisplay, xWindow, unused, unused, rootX, rootY, unused, unused, unused);\r", "+\t\tint x = rootX [0] + 16, y = rootY [0] + 16;\r", "-\t/*\r", "-\t* Feature in X.  There is no way to query the size of a cursor.\r", "-\t* The fix is to use the default cursor size which is 16x16.\r", "-\t*/\r", "-\tint xWindow = OS.XDefaultRootWindow (xDisplay);\r", "-\tint [] rootX = new int [1], rootY = new int [1], unused = new int [1];\r", "-\tOS.XQueryPointer (xDisplay, xWindow, unused, unused, rootX, rootY, unused, unused, unused);\r", "-\tint x = rootX [0] + 16, y = rootY [0] + 16;\r", "-\t\r", "-\t/*\r", "-\t* Ensure that the tool tip is on the screen.\r", "-\t*/\r", "-\tint screen = OS.XDefaultScreen (xDisplay);\r", "-\tint width = OS.XDisplayWidth (xDisplay, screen);\r", "-\tint height = OS.XDisplayHeight (xDisplay, screen);\r", "-\tint [] argList4 = {OS.XmNwidth, 0, OS.XmNheight, 0};\r", "-\tOS.XtGetValues (toolTipHandle, argList4, argList4.length / 2);\r", "-\tx = Math.max (0, Math.min (x, width - argList4 [1]));\r", "-\ty = Math.max (0, Math.min (y, height - argList4 [3]));\r", "-\tOS.XtMoveWidget (shellHandle, x, y);\r", "-\tOS.XtPopup (shellHandle, OS.XtGrabNone);\r", "+\t\t/*\r", "+\t\t* Ensure that the tool tip is on the screen.\r", "+\t\t*/\r", "+\t\tint screen = OS.XDefaultScreen (xDisplay);\r", "+\t\tint width = OS.XDisplayWidth (xDisplay, screen);\r", "+\t\tint height = OS.XDisplayHeight (xDisplay, screen);\r", "+\t\tint [] argList4 = {OS.XmNwidth, 0, OS.XmNheight, 0};\r", "+\t\tOS.XtGetValues (toolTipHandle, argList4, argList4.length / 2);\r", "+\t\tx = Math.max (0, Math.min (x, width - argList4 [1]));\r", "+\t\ty = Math.max (0, Math.min (y, height - argList4 [3]));\r", "+\t\tOS.XtMoveWidget (shellHandle, x, y);\r", "+\t\tOS.XtPopup (shellHandle, OS.XtGrabNone);\r", "+\t}\r"]}], "num": 38345}