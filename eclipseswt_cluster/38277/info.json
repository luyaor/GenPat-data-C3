{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f5eed6938a4c321a524127ebf0876d53", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ad594bf60c14c82d6777c7b2d40bc03", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/TextTransfer.java", "commitBeforeChange": "33f2a3b50a61626d5964cb87570beb2c3096fcc1", "commitAfterChange": "40ae2a746cec0132025185d602a721edfecbbfea", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void javaToNative (Object object, TransferData transferData)", "signatureAfterChange": " public void javaToNative (Object object, TransferData transferData)", "diff": ["-\tbyte [] buffer = Converter.wcsToMbcs (null, (String)object, true);\r", "-\tsuper.javaToNative(buffer, transferData);\r", "+\tbyte[] buffer = Converter.wcsToMbcs (null, (String)object, true);\r", "+\tif (transferData.type == TYPEID1) { // COMPOUND_TEXT\r", "+\t\tDisplay display = Display.getCurrent();\r", "+\t\tif (display == null) {\r", "+\t\t\ttransferData.result = 0;\r", "+\t\t\treturn;\r", "+\t\t}\r", "+\t\tint xDisplay = display.xDisplay;\r", "+\t\tint pBuffer = OS.XtMalloc(buffer.length);\r", "+\t\tOS.memmove(pBuffer, buffer, buffer.length);\r", "+\t\tint list = OS.XtMalloc(4);\r", "+\t\tOS.memmove(list, new int[] {pBuffer}, 4);\r", "+\t\tXTextProperty text_prop_return = new XTextProperty();\r", "+\t\tint result = OS.XmbTextListToTextProperty (xDisplay, list, 1, OS.XCompoundTextStyle, text_prop_return);\r", "+\t\tOS.XtFree(pBuffer);\r", "+\t\tOS.XtFree(list);\r", "+\t\tif (result != 0){\r", "+\t\t\ttransferData.result = 0;\r", "+\t\t} else {\t\r", "+\t\t\ttransferData.format = text_prop_return.format;\r", "+\t\t\ttransferData.length = text_prop_return.nitems;\r", "+\t\t\ttransferData.pValue = text_prop_return.value;\r", "+\t\t\ttransferData.type = text_prop_return.encoding;\r", "+\t\t\ttransferData.result = 1;\r", "+\t\t}\r", "+\t} else {\r", "+\t\tsuper.javaToNative(buffer, transferData);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc951378d55a57fa5f417c6e5e0e5951", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "ff7a7565646414b3418637259a20a7e8cc0d7d33", "commitAfterChange": "625d7442af2e067cc40f25eb22b19ef7acd83ba7", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "\r \r void initializeWidgetFonts ()", "signatureAfterChange": "\r \r void initializeWidgetFonts ()", "diff": ["+\tString property = System.getProperty (\"swt.system.font\");\r", "+\tif (property != null) {\r", "+\t\tdefaultFont = Converter.wcsToMbcs (null, property, true);\r", "+\t\tTEXT_FONT = LIST_FONT = GAUGE_FONT = TITLE_FONT = defaultFont;\r", "+\t\tGROUP_FONT = Converter.wcsToMbcs (null, property + \"b\", true);\r", "+\t\treturn;\r", "+\t}\r", "+\t\r", "+\tint [] args = new int [] {OS.Pt_ARG_TITLE_FONT, 0, 0};\r", "+\tOS.PtGetResources (shellHandle, args.length / 3, args);\r", "+\tint length = OS.strlen (args [1]);\r", "+\tGROUP_FONT = TITLE_FONT = new byte [length + 1];\r", "+\tOS.memmove (TITLE_FONT, args [1], length);\r", "+\t\r", "-\tint [] args = {OS.Pt_ARG_LIST_FONT, 0, 0};\r", "+\targs = new int [] {OS.Pt_ARG_LIST_FONT, 0, 0};\r", "-\tint count = OS.strlen (args [1]);\r", "-\tLIST_FONT = new byte [count + 1];\r", "-\tOS.memmove (LIST_FONT, args [1], count);\r", "+\tlength = OS.strlen (args [1]);\r", "+\tLIST_FONT = new byte [length + 1];\r", "+\tOS.memmove (LIST_FONT, args [1], length);\r", "+\r", "-\tcount = OS.strlen (args [1]);\r", "-\tTEXT_FONT = new byte [count + 1];\r", "-\tOS.memmove (TEXT_FONT, args [1], count);\r", "+\tlength = OS.strlen (args [1]);\r", "+\tTEXT_FONT = new byte [length + 1];\r", "+\tOS.memmove (TEXT_FONT, args [1], length);\r", "+\t\r", "+\tint scrollHandle = OS.PtCreateWidget (OS.PtScrollbar (), shellHandle, 0, null);\r", "+\targs = new int [] {OS.Pt_ARG_GAUGE_FONT, 0, 0};\r", "+\tOS.PtGetResources (scrollHandle, args.length / 3, args);\r", "+\tlength = OS.strlen (args [1]);\r", "+\tGAUGE_FONT = new byte [length + 1];\r", "+\tOS.memmove (GAUGE_FONT, args [1], length);\r", "+\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "557da40838d8a964b864ffa64606f6c1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/TextTransfer.java", "commitBeforeChange": "33f2a3b50a61626d5964cb87570beb2c3096fcc1", "commitAfterChange": "40ae2a746cec0132025185d602a721edfecbbfea", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Object nativeToJava(TransferData transferData)", "signatureAfterChange": " public Object nativeToJava(TransferData transferData)", "diff": ["-\tbyte[] buffer = (byte[])super.nativeToJava(transferData);\r", "+\tbyte[] buffer = null;\r", "+\tif (transferData.type == TYPEID1){ //COMPOUND_TEXT\r", "+\t\tDisplay display = Display.getCurrent();\r", "+\t\tif (display == null) return null;\r", "+\t\tint xDisplay = display.xDisplay;\r", "+\t\tXTextProperty text_prop = new XTextProperty();\r", "+\t\ttext_prop.encoding = transferData.type;\r", "+\t\ttext_prop.format = transferData.format;\r", "+\t\ttext_prop.nitems = transferData.length;\r", "+\t\ttext_prop.value = transferData.pValue;\r", "+\t\tint[] list_return = new int[1];\r", "+\t\tint[] count_return = new int[1];\r", "+\t\tint result = OS.XmbTextPropertyToTextList (xDisplay, text_prop, list_return, count_return);\r", "+\t\tif (result != 0) return null;\r", "+\t\t//Note: only handling the first string in list\r", "+\t\tint[] ptr = new int[1];\r", "+\t\tOS.memmove(ptr, list_return[0], 4);\r", "+\t\tint length = OS.strlen(ptr[0]);\r", "+\t\tbuffer = new byte[length];\r", "+\t\tOS.memmove(buffer, ptr[0], buffer.length);\r", "+\t\tOS.XFreeStringList(list_return[0]);\r", "+\t} else {\r", "+\t\tbuffer = (byte[])super.nativeToJava(transferData);\r", "+\t}\r"]}], "num": 38277}