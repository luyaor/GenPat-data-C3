{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7b8def45c4ab6af03190ea748017ef9c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cc134555201ba857d9af3df97292eb0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 71, "signatureBeforeChange": "  public void setText(String newText)", "signatureAfterChange": " public void setText (int columnIndex, String value)", "diff": ["-", "-public void setText(String newText) {", "-\tcheckWidget();", "-\tTree parent = getParent();\t", "-\tString oldText = getText();", "-\tint redrawX = 0;", "-\tint redrawWidth = 0;", "-", "-\tif (newText == null) {", "-\t\terror(SWT.ERROR_NULL_ARGUMENT);", "-\t}", "-\tsuper.setText(newText);\t", "-\tif (newText.equals(oldText) == false) {", "-\t\tif (parent.getVisibleRedrawY(this) != -1) {", "-\t\t\tredrawX = getTextXPos();", "-\t\t\tredrawWidth = parent.getClientArea().width - redrawX;", "-\t\t}", "-\t\tparent.itemChanged(this, redrawX, redrawWidth);", "-\t}", "-}", "+}", "+public void setText (int columnIndex, String value) {", "+\tcheckWidget ();", "+\tif (value == null) error (SWT.ERROR_NULL_ARGUMENT);", "+\tint validColumnCount = Math.max (1, parent.getColumnCount());", "+\tif (!(0 <= columnIndex && columnIndex < validColumnCount)) return;", "+\tif (columnIndex == 0) super.setText (value);\t// TODO can remove this", "+\tif (texts.length < columnIndex + 1) {", "+\t\tString[] newTexts = new String[columnIndex + 1];", "+\t\tSystem.arraycopy (texts, 0, newTexts, 0, texts.length);", "+\t\ttexts = newTexts;", "+\t\tint[] newTextWidths = new int[columnIndex + 1];", "+\t\tSystem.arraycopy (textWidths, 0, newTextWidths, 0, textWidths.length);", "+\t\ttextWidths = newTextWidths;", "+\t} else {", "+\t\tif (value.equals (internalGetText (columnIndex))) return;\t/* same value */", "+\t}", "+\ttexts[columnIndex] = value;", "+\tGC gc = new GC (parent);", "+\ttextWidths[columnIndex] = gc.textExtent (value).x;", "+\tgc.dispose ();", "+\tredrawItem ();", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3587f89fc36edab79ea9ea209645486f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 47, "signatureBeforeChange": " public void setFont (int index, Font font)", "signatureAfterChange": " public void setFont (int columnIndex, Font value)", "diff": ["- */", "-public void setFont (int index, Font font) {", "-\tcheckWidget ();", "-\tif (font != null && font.isDisposed ()) {", "-\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);", "-\t}", "-\tTable parent = getParent ();", "-\tint count = Math.max (1, parent.getColumnCount ());", "-\tif (0 > index || index > count - 1) return;", "-\tif (cellFont == null) {", "-\t\tcellFont = new Font [count];", "-\t}", "-\tif (cellFont [index] == font) return;", "-\tif (cellFont [index] != null && cellFont [index].equals (font)) return;", "-\tcellFont [index] = font;", "-\tclearTextWidths (index);", "-\tredraw ();", "-}", "+}", "+public void setFont (int columnIndex, Font value) {", "+\tcheckWidget ();", "+\tif (value != null && value.isDisposed ()) {", "+\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);", "+\t}", "+", "+\tint validColumnCount = Math.max (1, parent.columns.length);", "+\tif (!(0 <= columnIndex && columnIndex < validColumnCount)) return;", "+\tif (cellFonts == null) cellFonts = new Font [validColumnCount];", "+\tif (cellFonts [columnIndex] == value) return;", "+\tif (cellFonts [columnIndex] != null && cellFonts [columnIndex].equals (value)) return;", "+\tcellFonts [columnIndex] = value;", "+\t", "+\t/* recompute cached values for string measurements */", "+\tGC gc = new GC (parent);", "+\tgc.setFont (getFont (columnIndex));", "+\tif (fontHeights == null) fontHeights = new int [validColumnCount];", "+\tfontHeights [columnIndex] = gc.getFontMetrics ().getHeight ();", "+\tcomputeDisplayText (columnIndex, gc);", "+\ttextWidths [columnIndex] = gc.textExtent (getDisplayText (columnIndex)).x;", "+\tgc.dispose ();", "+", "+\tRectangle bounds = getCellBounds (columnIndex);", "+\tparent.redraw (bounds.x, bounds.y, bounds.width, bounds.height, false);", "+}"]}], "num": 20389}