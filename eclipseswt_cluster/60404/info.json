{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4a740531bf633366631ed19d2165d21c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d566433baa9e6c2e90a90e0f8141e69f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "cb49a6d2f8f3f9a40eac2f482526f691922fcc89", "commitAfterChange": "a1cedd58d52b28d936b71cea33845220b7b635ec", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["+", "+\t\t/*", "+\t\t* Browser clients that ship XULRunner in a plug-in must have an opportunity ", "+\t\t* to set the org.eclipse.swt.browser.XULRunnerPath system property to point", "+\t\t* at their XULRunner before the first Mozilla-based Browser is created.  To", "+\t\t* facilitate this, reflection is used to reference non-existent class", "+\t\t* org.eclipse.swt.browser.XULRunnerInitializer the first time a Mozilla-", "+\t\t* based Browser is created.   A client wishing to use this hook can do so", "+\t\t* by creating a fragment of org.eclipse.swt that implements this class and", "+\t\t* sets the system property in its static initializer.", "+\t\t*/", "+\t\tif (mozillaPath == null) {", "+\t\t\ttry {", "+\t\t\t\tClass clazz = Class.forName (\"org.eclipse.swt.browser.XULRunnerInitializer\"); //$NON-NLS-1$", "+\t\t\t\tmozillaPath = System.getProperty (XULRUNNER_PATH);", "+\t\t\t} catch (ClassNotFoundException e) {", "+\t\t\t\t/* no fragment is providing this class, which is the typical case */", "+\t\t\t}", "+\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0ecdea4a551f5b3a5be68d7de6758dc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_List.java", "commitBeforeChange": "b06cbf7a0e056ef6e3191b7116c2c78a7e2ab1bd", "commitAfterChange": "488ea245d8ed955ed7da346350d79cf2cba672a8", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  public void test_select$I()", "signatureAfterChange": "  public void test_select$I()", "diff": ["+\ttry {", "+\t\tlist.select((int[]) null);", "+\t\tfail(\"No exception thrown\");", "+\t} catch (IllegalArgumentException e) {", "+\t}", "+\t"]}], "num": 60404}