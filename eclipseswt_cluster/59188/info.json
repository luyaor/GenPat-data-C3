{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7c1757bd764c024667d9f36d29a70ac5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb92b5023b67e72499912ada5bc22de9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/internal/image/FileFormat.java", "commitBeforeChange": "53384da893223313aba5640789830bdbd8f35283", "commitAfterChange": "af018cfe8d256e37fa7517b7cc46083bbd40d6b6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public static ImageData[] load(InputStream is, ImageLoader loader)", "signatureAfterChange": "\r \r public static ImageData[] load(InputStream is, ImageLoader loader)", "diff": ["+\r", "-\tif (GIFFileFormat.isGIFFile(stream)) {\r", "-\t\tfileFormat = new GIFFileFormat();\r", "-\t} else if (WinBMPFileFormat.isBMPFile(stream)) {\r", "-\t\tfileFormat = new WinBMPFileFormat();\r", "-\t} else if (WinICOFileFormat.isICOFile(stream)) {\r", "-\t\tfileFormat = new WinICOFileFormat();\r", "-\t} else if (JPEGFileFormat.isJPEGFile(stream)) {\r", "-\t\tfileFormat = new JPEGFileFormat();\r", "-\t} else if (PNGFileFormat.isPNGFile(stream)) {\r", "-\t\tfileFormat = new PNGFileFormat();\r", "-\t} else {\r", "-\t\tSWT.error(SWT.ERROR_UNSUPPORTED_FORMAT);\r", "+\tboolean isSupported = false;\t\r", "+\tfor (int i = 1; i < FORMATS.length; i++) {\r", "+\t\ttry {\r", "+\t\t\tClass clazz = Class.forName(FORMAT_PACKAGE + '.' + FORMATS[i] + FORMAT_SUFFIX);\r", "+\t\t\tfileFormat = (FileFormat) clazz.newInstance();\r", "+\t\t\tif (fileFormat.isFileFormat(stream)) {\r", "+\t\t\t\tisSupported = true;\r", "+\t\t\t\tbreak;\r", "+\t\t\t}\r", "+\t\t} catch (Exception e) {\r", "+\t\t}\r", "+\tif (!isSupported) SWT.error(SWT.ERROR_UNSUPPORTED_FORMAT);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ec141b6d02a5f182b5fdb745d64aacf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/internal/image/FileFormat.java", "commitBeforeChange": "53384da893223313aba5640789830bdbd8f35283", "commitAfterChange": "af018cfe8d256e37fa7517b7cc46083bbd40d6b6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public static void save(OutputStream os, int format, ImageLoader loader)", "signatureAfterChange": "\r \r public static void save(OutputStream os, int format, ImageLoader loader)", "diff": ["+\r", "+\tif (format < 0 || format >= FORMATS.length) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\r", "+\r", "-\tswitch (format) {\r", "-\t\tcase SWT.IMAGE_BMP:\r", "-\t\t\tWinBMPFileFormat f = new WinBMPFileFormat();\r", "-\t\t\tf.unloadIntoStream(data, stream);\r", "-\t\t\tbreak;\r", "-\t\tcase SWT.IMAGE_BMP_RLE:\r", "-\t\t\tf = new WinBMPFileFormat();\r", "-\t\t\tif (data.depth == 8)\r", "-\t\t\t\tf.compression = 1;\r", "-\t\t\tif (data.depth == 4)\r", "-\t\t\t\tf.compression = 2;\r", "-\t\t\tf.unloadIntoStream(data, stream);\r", "-\t\t\tbreak;\r", "-\t\tcase SWT.IMAGE_GIF:\r", "-\t\t\tGIFFileFormat g = new GIFFileFormat();\r", "-\t\t\tg.unloadIntoStream(data, stream);\r", "-\t\t\tbreak;\r", "-\t\tcase SWT.IMAGE_ICO:\r", "-\t\t\tWinICOFileFormat i = new WinICOFileFormat();\r", "-\t\t\ti.unloadIntoStream(data, stream);\r", "-\t\t\tbreak;\r", "-\t\tcase SWT.IMAGE_JPEG:\r", "-\t\t\tJPEGFileFormat j = new JPEGFileFormat();\r", "-\t\t\tj.unloadIntoStream(data, stream);\r", "-\t\t\tbreak;\r", "-\t\tcase SWT.IMAGE_PNG:\r", "-\t\t\tPNGFileFormat p = new PNGFileFormat();\r", "-\t\t\tp.unloadIntoStream(data, stream);\r", "-\t\t\tbreak;\r", "-\t\tdefault:\r", "-\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\r", "+\tFileFormat fileFormat = null;\r", "+\ttry {\r", "+\t\tClass clazz = Class.forName(FORMAT_PACKAGE + '.' + FORMATS[format] + FORMAT_SUFFIX);\r", "+\t\tfileFormat = (FileFormat) clazz.newInstance();\r", "+\t} catch (Exception e) {\r", "+\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\r", "+\tif (format == SWT.IMAGE_BMP_RLE) {\r", "+\t\tswitch (data.depth) {\r", "+\t\t\tcase 8: fileFormat.compression = 1; break;\r", "+\t\t\tcase 4: fileFormat.compression = 2; break;\r", "+\t\t}\r", "+\t}\r", "+\tfileFormat.unloadIntoStream(data, stream);\r"]}], "num": 59188}