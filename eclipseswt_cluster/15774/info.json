{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4fd73d988d380bc2bc1cde7b4c2cfce1", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c31a31438e82f92fe5c573359ee5ed6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "c2e593e3cbfc4496e068aef605abc9a7d9c3882a", "commitAfterChange": "723b1d512892bf38284a569af00c3d6fc1897f30", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  void createItem (MenuItem item, int index)", "signatureAfterChange": "  void createItem (MenuItem item, int index)", "diff": ["+\t/*", "+\t* Bug in the Macintosh.  Mac segments fault, if the item in", "+\t* a menu bar does not have a menu attached.  The fix is to", "+\t* temporarily attach an empty menu. ", "+\t*/", "-//\t\tDisplay display = getDisplay ();", "-//\t\tshort menuID = display.nextMenuId ();", "-//\t\tint outMenuRef [] = new int [1];", "-//\t\tif (OS.CreateNewMenu (menuID, 0, outMenuRef) != OS.noErr) {", "-//\t\t\terror (SWT.ERROR_NO_HANDLES);", "-//\t\t}", "-//\t\tOS.SetMenuItemHierarchicalMenu (handle, (short) (index + 1), outMenuRef [0]);", "+\t\tint outMenuRef [] = new int [1];", "+\t\tif (OS.CreateNewMenu ((short) 0, 0, outMenuRef) != OS.noErr) {", "+\t\t\terror (SWT.ERROR_NO_HANDLES);", "+\t\t}", "+\t\tOS.SetMenuItemHierarchicalMenu (handle, (short) (index + 1), outMenuRef [0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ef55bb7230d2629695242477288d2a5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "c2e593e3cbfc4496e068aef605abc9a7d9c3882a", "commitAfterChange": "723b1d512892bf38284a569af00c3d6fc1897f30", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public void setMenu (Menu menu)", "signatureAfterChange": " public void setMenu (Menu menu)", "diff": ["-//\t\t\tDisplay display = getDisplay ();", "-//\t\t\tshort menuID = display.nextMenuId ();", "-//\t\t\tif (OS.CreateNewMenu (menuID, 0, outMenuRef) != OS.noErr) {", "-//\t\t\t\terror (SWT.ERROR_NO_HANDLES);", "-//\t\t\t}", "+\t\t\tif (OS.CreateNewMenu ((short) 0, 0, outMenuRef) != OS.noErr) {", "+\t\t\t\terror (SWT.ERROR_NO_HANDLES);", "+\t\t\t}", "-//\t\t\t\tOS.GetMenuItemHierarchicalMenu (parent.handle, outIndex [0], outMenuRef);", "-//\t\t\t\tif (outMenuRef [0] != 0) {", "-//\t\t\t\t\tOS.DeleteMenu (OS.GetMenuID (outMenuRef [0]));", "-//\t\t\t\t\tOS.DisposeMenu (outMenuRef [0]);", "-//\t\t\t\t}", "+\t\t\t\tOS.GetMenuItemHierarchicalMenu (parent.handle, menuIndex, outMenuRef);", "+\t\t\t\tif (outMenuRef [0] != 0) {", "+\t\t\t\t\tOS.DisposeMenu (outMenuRef [0]);", "+\t\t\t\t}", "-\t\tint [] outString = new int [1];", "-\t\tif (OS.CopyMenuItemTextAsCFString (parent.handle, menuIndex, outString) != OS.noErr) {", "-\t\t\terror (SWT.ERROR_CANNOT_SET_MENU);", "-\t\t}", "-\t\tOS.SetMenuTitleWithCFString (outMenuRef [0], outString [0]);", "-\t\tOS.CFRelease (outString [0]);", "+\tint [] outString = new int [1];", "+\tif (OS.CopyMenuItemTextAsCFString (parent.handle, menuIndex, outString) != OS.noErr) {", "+\t\terror (SWT.ERROR_CANNOT_SET_MENU);", "+\t}", "+\tOS.SetMenuTitleWithCFString (outMenuRef [0], outString [0]);", "+\tOS.CFRelease (outString [0]);"]}], "num": 15774}