{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eab2c536f51a181e1d3ef2e9af502e2f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56929efa594068c554c4f1f337d264bb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGenerator.java", "commitBeforeChange": "98fc614af4e0736880ddc01f544655cbdad4088c", "commitAfterChange": "3b27b41db1dd3c54eec31645b5eb2d11fe630ed4", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 43, "signatureBeforeChange": "  void generateFunctions()", "signatureAfterChange": "  void generateFunctions()", "diff": ["-\t\t\t\tNamedNodeMap attributes = node.getAttributes();", "-\t\t\t\tString name = attributes.getNamedItem(\"name\").getNodeValue();", "-\t\t\t\tout(\"public static final native \");", "-\t\t\t\tNode returnNode = getReturnNode(node.getChildNodes());", "-\t\t\t\tif (returnNode != null) {", "-\t\t\t\t\tout(getType(returnNode));", "-\t\t\t\t\tout(\" \");", "-\t\t\t\t} else {", "-\t\t\t\t\tout(\"void \");", "-\t\t\t\t}", "-\t\t\t\tout(name);", "-\t\t\t\tout(\"(\");", "-\t\t\t\tNodeList params = node.getChildNodes();", "-\t\t\t\tboolean first = true;", "-\t\t\t\tfor (int j = 0; j < params.getLength(); j++) {", "-\t\t\t\t\tNode param = params.item(j);", "-\t\t\t\t\tif (\"arg\".equals(param.getNodeName())) {", "-\t\t\t\t\t\tNamedNodeMap paramAttributes = param.getAttributes();", "-\t\t\t\t\t\tif (!first) out(\", \");", "-\t\t\t\t\t\tout(getType(param));", "-\t\t\t\t\t\tfirst = false;", "+\t\t\t\tif (getGen(node)) {", "+\t\t\t\t\tNamedNodeMap attributes = node.getAttributes();", "+\t\t\t\t\tString name = attributes.getNamedItem(\"name\").getNodeValue();", "+\t\t\t\t\tout(\"public static final native \");", "+\t\t\t\t\tNode returnNode = getReturnNode(node.getChildNodes());", "+\t\t\t\t\tif (returnNode != null) {", "+\t\t\t\t\t\tout(getType(returnNode));", "-\t\t\t\t\t\tout(paramAttributes.getNamedItem(\"name\").getNodeValue());", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tout(\"void \");", "+\t\t\t\t\tout(name);", "+\t\t\t\t\tout(\"(\");", "+\t\t\t\t\tNodeList params = node.getChildNodes();", "+\t\t\t\t\tboolean first = true;", "+\t\t\t\t\tfor (int j = 0; j < params.getLength(); j++) {", "+\t\t\t\t\t\tNode param = params.item(j);", "+\t\t\t\t\t\tif (\"arg\".equals(param.getNodeName())) {", "+\t\t\t\t\t\t\tNamedNodeMap paramAttributes = param.getAttributes();", "+\t\t\t\t\t\t\tif (!first) out(\", \");", "+\t\t\t\t\t\t\tout(getType(param));", "+\t\t\t\t\t\t\tfirst = false;", "+\t\t\t\t\t\t\tout(\" \");", "+\t\t\t\t\t\t\tout(paramAttributes.getNamedItem(\"name\").getNodeValue());", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tout(\");\");", "+\t\t\t\t\toutln();", "-\t\t\t\tout(\");\");", "-\t\t\t\toutln();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab7c0f1dba780c33d0cc1c256c23961e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGenerator.java", "commitBeforeChange": "98fc614af4e0736880ddc01f544655cbdad4088c", "commitAfterChange": "3b27b41db1dd3c54eec31645b5eb2d11fe630ed4", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 37, "signatureBeforeChange": "  void generateClassesConst()", "signatureAfterChange": "  void generateClassesConst()", "diff": ["-\t\t\t\tNamedNodeMap attributes = node.getAttributes();", "-\t\t\t\tString name = attributes.getNamedItem(\"name\").getNodeValue();", "-//\t\t\t\tif (getGenerateClass(name)) {", "+\t\t\t\tif (getGen(node)) {", "+\t\t\t\t\tNamedNodeMap attributes = node.getAttributes();", "+\t\t\t\t\tString name = attributes.getNamedItem(\"name\").getNodeValue();", "-//\t\t\t\t}", "+\t\t\t\t}"]}], "num": 47733}