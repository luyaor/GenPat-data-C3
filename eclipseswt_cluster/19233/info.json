{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "708aae5fff48ab8d3e16afbbca5a68a1", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e723d1645d90f0a2d1ca170234a6e4cb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "46d5c58e9e9f7efe56c99ee8e486fd4948a51fc9", "commitAfterChange": "5efec7858782696a576765aeb725ce585f93dae0", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "\r \r int processHide (int info)", "signatureAfterChange": "\r \r int processHide (int info)", "diff": ["+\tShell shell = getShell ();\r", "+\tif (shell.activeMenu == this) {\r", "+\t\tshell.activeMenu = null;\r", "+\t\tif (cascade != null) {\r", "+\t\t\tMenu parent = cascade.parent;\r", "+\t\t\tif (parent != null && (parent.style & SWT.BAR) == 0) {\r", "+\t\t\t\tif (OS.PtWidgetIsRealized (parent.handle)) {\r", "+\t\t\t\t\tshell.activeMenu = parent;\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t}\r", "+\t}\r", "+\treturn OS.Pt_CONTINUE;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7fa3de4ed277569b1d57b4a744c4584", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/DragSource.java", "commitBeforeChange": "8d4a8d36954b727772c9fb84be537887ea3b321d", "commitAfterChange": "248c829608847aec52ef9adcf472f5f7cdf0b9ec", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " private int dropFinishCallback(int widget, int client_data, int call_data)", "signatureAfterChange": " private int dropFinishCallback(int widget, int client_data, int call_data)", "diff": ["-\t", "-", "-\tif (data.dropAction != OS.XmDROP || data.dropSiteStatus != OS.XmDROP_SITE_VALID) return 0;", "-", "+\tif (data.dropAction != OS.XmDROP || data.dropSiteStatus != OS.XmDROP_SITE_VALID) {", "+\t\tDNDEvent event = new DNDEvent();", "+\t\tevent.widget = this.control;", "+\t\tevent.time = data.timeStamp;", "+\t\tevent.detail = DND.DROP_NONE;", "+\t\tevent.doit = false;", "+\t\ttry {", "+\t\t\tnotifyListeners(DND.DragEnd,event);", "+\t\t} catch (Throwable err) {", "+\t\t}", "+\t\treturn 0;", "+\t} ", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b45c8a91a5667e21a078687ca60a5729", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "f58ccd83db58f36bdb07149ae18acd8b9fdb8fa7", "commitAfterChange": "d314f513a989cc3e1d28bd135c01b43b1ff1c912", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "\r \r int processResize (int callData)", "signatureAfterChange": "\r \r int processResize (int callData)", "diff": ["-\t\t\t// fall through\r", "+\t\t\t// FALL THROUGH\r", "-\t\t\t\tsendEvent (SWT.Resize);\r", "-\t\t\t\tif (layout != null) layout (false);\r", "+\t\t\t\tXAnyEvent event = new XAnyEvent ();\r", "+\t\t\t\tdisplay.resizeWindow = xEvent.window;\r", "+\t\t\t\tdisplay.resizeWidth = xEvent.width;\r", "+\t\t\t\tdisplay.resizeHeight = xEvent.height;\r", "+\t\t\t\tdisplay.resizeCount = 0;\r", "+\t\t\t\tint checkResizeProc = display.checkResizeProc;\r", "+\t\t\t\tOS.XCheckIfEvent (xEvent.display, event, checkResizeProc, 0);\r", "+\t\t\t\tif (display.resizeCount == 0) {\r", "+\t\t\t\t\tsendEvent (SWT.Resize);\r", "+\t\t\t\t\tif (layout != null) layout (false);\r", "+\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d887a34fa7f14e3b38934b7df3a43d27", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "9c5d567d04aa850b8991464cda209f35362e7d77", "commitAfterChange": "f1be65ba0f39f9cd9ae7b1430176adac122402ac", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 122, "signatureBeforeChange": "  int gtk_event_after (int widget, int gdkEvent)", "signatureAfterChange": "  int gtk_event_after (int widget, int gdkEvent)", "diff": ["+", "+\t\t\t/*", "+\t\t\t * Feature in GTK. The GTK combo box popup under some window managers", "+\t\t\t * is implemented as a GTK_MENU.  When it pops up, it causes the combo", "+\t\t\t * box to lose focus when focus is received for the menu.  The", "+\t\t\t * fix is to check the current grab handle and see if it is a GTK_MENU", "+\t\t\t * and ignore the focus event when the menu is both shown and hidden.", "+\t\t\t */", "+\t\t\tDisplay display = this.display;", "+\t\t\tif (gdkEventFocus.in != 0) {", "+\t\t\t\tif (display.ignoreFocus) { ", "+\t\t\t\t\tdisplay.ignoreFocus = false;", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tdisplay.ignoreFocus = false;", "+\t\t\t\tint /*long*/ grabHandle = OS.gtk_grab_get_current ();", "+\t\t\t\tif (grabHandle != 0) {", "+\t\t\t\t\tif (OS.G_OBJECT_TYPE (grabHandle) == OS.GTK_TYPE_MENU ()) {", "+\t\t\t\t\t\tdisplay.ignoreFocus = true;", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+"]}], "num": 19233}