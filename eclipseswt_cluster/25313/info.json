{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e115399982ada598dc1a258b70138f25", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7d72f7557695443475a478dcd2fd522", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/DragSource.java", "commitBeforeChange": "4cee1510f39bbb7c7d4f6e9abf9fd1a33eea8ac5", "commitAfterChange": "3ab56b5604383800c8a292b023ac3e8e38549981", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void drag(Event dragEvent)", "signatureAfterChange": "  void drag(Event dragEvent)", "diff": ["+\tImage newImage = null;", "+\t\t\t/* Bug174467: It seems that SetDragImageWithCGImage expects an image with the alpha", "+\t\t\t * channel; otherwise the image will not be visible.", "+\t\t\t */", "+\t\t\tif (OS.CGImageGetAlphaInfo(image.handle) == OS.kCGImageAlphaNoneSkipFirst) {", "+\t\t\t\tImageData data = image.getImageData();", "+\t\t\t\tdata.alpha = 0xFF;", "+\t\t\t\tnewImage = new Image(image.getDevice(), data);", "+\t\t\t\timage = newImage;", "+\t\t\t}", "+\t\tif (newImage != null) newImage.dispose();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed97816cc3bd3b2c7832be61f3d2fc7a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "a87a0403ac3b9edf077183bd0f22ecbd0e7e4a59", "commitAfterChange": "ce5bc5ccb4b7e34346accfd668928ba52a6f7a27", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 111, "signatureBeforeChange": "  void initXPCOM (String mozillaPath, boolean isXULRunner)", "signatureAfterChange": "  void initXPCOM (String mozillaPath, boolean isXULRunner)", "diff": ["-\t\tbyte[] bytes = MozillaDelegate.wcsToMbcs (null, \"XRE_InitEmbedding\", true); //$NON-NLS-1$", "+\t\tint version = Integer.getInteger(XULRUNNER_VERSION, 0).intValue();", "+\t\tif (version < 2) IsPre_2 = true;", "+\t\tString initFunctionName = IsPre_2 ? \"XRE_InitEmbedding\" : \"XRE_InitEmbedding2\";", "+\t\tbyte[] bytes = MozillaDelegate.wcsToMbcs (null, initFunctionName, true); //$NON-NLS-1$", "-\t\trc = XPCOM.Call (functionPtr, localFile.getAddress (), localFile.getAddress (), LocationProvider.getAddress (), 0, 0);", "+\t\tif (IsPre_2) {", "+\t\t\trc = XPCOM.Call (functionPtr, localFile.getAddress (), localFile.getAddress (), LocationProvider.getAddress (), 0, 0);", "+\t\t} else {", "+\t\t\trc = XPCOM.Call (functionPtr, localFile.getAddress (), localFile.getAddress (), LocationProvider.getAddress ());", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f3d2eaf5a4ca4f6bca767c96bafacfb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "2c118f140ba91a7fc1cc0d9d500f4bf87baa4b83", "commitAfterChange": "99b4684be0370208c176493487bdf6723943c26b", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "\r \r LRESULT wmNotifyChild (int wParam, int lParam)", "signatureAfterChange": "\r \r LRESULT wmNotifyChild (int wParam, int lParam)", "diff": ["+\t\t\t\tint index = OS.SendMessage (handle, OS.TB_COMMANDTOINDEX, lpnmtb.iItem, 0);\r", "+\t\t\t\tRECT rect = new RECT ();\r", "+\t\t\t\tOS.SendMessage (handle, OS.TB_GETITEMRECT, index, rect);\r", "+\t\t\t\tevent.x = rect.left;\r", "+\t\t\t\tevent.y = rect.bottom;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0064c8630c309ec5faaf3a73cc9493b5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/CoolItem.java", "commitBeforeChange": "af35bb868ce7a4db640d728af68bfb767fa4e09f", "commitAfterChange": "a1b6110a7c4d57ed7e255ff1bd265349917f369d", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r \r public void setPreferredSize (int width, int height)", "signatureAfterChange": "\r \r public void setPreferredSize (int width, int height)", "diff": ["+\tRECT rect = new RECT ();\r", "+\tOS.SendMessage (hwnd, OS.RB_GETBANDBORDERS, index, rect);\r", "-\trbBand.fMask = OS.RBBIM_CHILDSIZE | OS.RBBIM_IDEALSIZE | OS.RBBIM_SIZE;\r", "-\trbBand.cx = rbBand.cxIdeal = width;\r", "-\trbBand.cyMinChild = rbBand.cyMaxChild = height;\r", "+\trbBand.fMask = OS.RBBIM_CHILDSIZE | OS.RBBIM_IDEALSIZE;\r", "+\trbBand.cxIdeal = Math.max (0, width - rect.left - rect.right);\r", "+\trbBand.cyChild = Math.max (MINIMUM_CHILD_HEIGHT, height);\r", "+\trbBand.cyMinChild = rbBand.cyMaxChild = rbBand.cyChild;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47537fd60427dbb73d1d351643a59bcf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/TextTransfer.java", "commitBeforeChange": "41379afd447e143f3a057620b8db69d0717b2e63", "commitAfterChange": "26a56a1cbfe587585a35a9712abb11e853344060", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void javaToNative (Object object, TransferData transferData)", "signatureAfterChange": " public void javaToNative (Object object, TransferData transferData)", "diff": ["-\tbyte[] buffer = Converter.wcsToMbcs (null, string, true);", "+\tbyte[] utf8 = Converter.wcsToMbcs (null, string, true);", "-\t\tboolean result = OS.gdk_utf8_to_compound_text(buffer, encoding, format, ctext, length);", "+\t\tboolean result = OS.gdk_utf8_to_compound_text(utf8, encoding, format, ctext, length);", "-\tif (transferData.type == UTF8_STRING_ID ||", "-\t\ttransferData.type == STRING_ID) {", "-\t\tint /*long*/ pValue = OS.g_malloc(buffer.length);", "+\tif (transferData.type == UTF8_STRING_ID) {", "+\t\tint /*long*/ pValue = OS.g_malloc(utf8.length);", "-\t\tOS.memmove(pValue, buffer, buffer.length);", "-\t\ttransferData.type = transferData.type;", "+\t\tOS.memmove(pValue, utf8, utf8.length);", "+\t\ttransferData.type = UTF8_STRING_ID;", "-\t\ttransferData.length = buffer.length - 1;", "+\t\ttransferData.length = utf8.length - 1;", "+\t\ttransferData.result = 1;", "+\t}", "+\tif (transferData.type == STRING_ID) {", "+\t\tint /*long*/ string_target = OS.gdk_utf8_to_string_target(utf8);", "+\t\tif (string_target ==  0) return;", "+\t\ttransferData.type = STRING_ID;", "+\t\ttransferData.format = 8;", "+\t\ttransferData.length = OS.strlen(string_target);", "+\t\ttransferData.pValue = string_target;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e40e6d2b78a198fb89622768d489fd33", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TreeColumn.java", "commitBeforeChange": "8d3631502ca09c349ac914019053fe9dc5836449", "commitAfterChange": "d57af5b94984a9a66bde1cbb0b0e8b9659346329", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void setWidth (int width)", "signatureAfterChange": " public void setWidth (int width)", "diff": ["+\tRECT itemRect = new RECT ();", "+\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, index, itemRect);", "+\tint hwnd = parent.handle;", "+\tRECT rect = new RECT ();", "+\tOS.GetClientRect (hwnd, rect);", "+\trect.left = itemRect.left;", "+\tOS.InvalidateRect (hwnd, rect, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2294550f7d4346091a9e2d1de59243e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "63b9676d71b622d3fd359268b0fbe912d481491b", "commitAfterChange": "1e89cbe9e7486859cad9754c80b8d785b322e1e8", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  LRESULT CDDS_ITEMPOSTPAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT CDDS_ITEMPOSTPAINT (int wParam, int lParam)", "diff": ["+\t\t\t\t\t\tif (i == 0 && OS.SendMessage (handle, OS.TVM_GETIMAGELIST, OS.TVSIL_NORMAL, 0) != 0) {", "+\t\t\t\t\t\t\tif (size == null) size = getImageSize ();", "+\t\t\t\t\t\t\trect.left = Math.min (rect.left + size.x, rect.right);", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tif (index != 0) flags |= OS.DT_ENDELLIPSIS;", "+\t\t\t\t\t\t\tif (i != 0) flags |= OS.DT_ENDELLIPSIS;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13f91ce25faedc1ec6d4b6b2ce1552e4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/gtk/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "f074fc3e3925d2d22fe9e0cc683dea5325986b4c", "commitAfterChange": "2f3d49ba73e9698816b3279c62658e8cff81ad99", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["+", "+\tint minor = WebKitGTK.webkit_minor_version ();", "+\tif (minor >= 10) {", "+\t\tPoint size = browser.getSize();", "+\t\tsize.x += 1; size.y += 1;", "+\t\tbrowser.setSize(size);", "+\t\tsize.x -= 1; size.y += 1;", "+\t\tbrowser.setSize(size);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c03880b474a4e0cd6f578b86a8beb5b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/motif/org/eclipse/swt/printing/Printer.java", "commitBeforeChange": "e98339cc7fb1c72d59ae0703dfdb477f6c4de9c5", "commitAfterChange": "697358ce3235fa7c9f7df6b81c2eaac5ddca47d9", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 12, "signatureBeforeChange": " public int internal_new_GC(GCData data)", "signatureAfterChange": " public int internal_new_GC(GCData data)", "diff": ["-public int internal_new_GC(GCData data) {\r", "-\tif (xDrawable == 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\r", "-\tint xGC = OS.XCreateGC(xDisplay, xDrawable, 0, null);\r", "-\tif (xGC == 0) SWT.error(SWT.ERROR_NO_HANDLES);\r", "-\tif (data != null) {\r", "-\t\tdata.device = this;\r", "-\t\tdata.display = xDisplay;\r", "-\t\tdata.drawable = xDrawable; // not valid until after startJob\r", "-\t\tdata.fontList = defaultFont.handle;\r", "-\t\tdata.codePage = defaultFont.codePage;\r", "-\t\tdata.colormap = OS.XDefaultColormapOfScreen(xScreen);\r", "-\t}\r", "-\treturn xGC;\r", "-}\r", "+public int internal_new_GC(GCData data) {", "+\tint xGC = OS.XCreateGC(xDisplay, xDrawable, 0, null);", "+\tif (xGC == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\tif (data != null) {", "+\t\tdata.device = this;", "+\t\tdata.display = xDisplay;", "+\t\tdata.drawable = xDrawable;", "+\t\tdata.fontList = defaultFont.handle;", "+\t\tdata.codePage = defaultFont.codePage;", "+\t\tdata.colormap = OS.XDefaultColormapOfScreen(xScreen);", "+\t\tint defaultGC = OS.XDefaultGCOfScreen(xScreen);", "+\t\tif (defaultGC != 0) {", "+\t\t\tXGCValues values = new XGCValues();", "+\t\t\tOS.XGetGCValues(xDisplay, defaultGC, OS.GCBackground | OS.GCForeground, values);", "+\t\t\tdata.foreground = values.foreground;", "+\t\t\tdata.background = values.background;", "+\t\t}\t", "+\t}", "+\treturn xGC;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9207a65e58b07fde458aa165ff19ae36", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "355aa7a91b5dc1948c71d03784e23e9c3fd5302b", "commitAfterChange": "896d60415bed50ca33e94246bc490088b77da5c0", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " public void setTopIndex (int index)", "signatureAfterChange": " public void setTopIndex (int index)", "diff": ["-\t//TODO no working", "-//\tNSTextView widget = (NSTextView) view;", "-//\tNSRange range = new NSRange ();", "-//\tNSRect rect = widget.firstRectForCharacterRange (range);", "-//\tview.scrollRectToVisible (rect);", "+\tint row = Math.max(0, Math.min(index, getLineCount()));", "+\tNSPoint pt = new NSPoint();", "+\tpt.x = scrollView.contentView().bounds().x;", "+\tpt.y = getLineHeight() * row;", "+\tview.scrollPoint(pt);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f80322d5a63922cecba7bf3b2f1f3daf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "3d1071088ced6ed6e9f01c8d7208fa00cb52a57a", "commitAfterChange": "a9f618df2b93f8cb19629621c0313294fe974299", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "\r public MenuItem getItem (int index)", "signatureAfterChange": "\r public MenuItem getItem (int index)", "diff": ["-\tMENUITEMINFO info = new MENUITEMINFO ();\r", "-\tinfo.cbSize = MENUITEMINFO.sizeof;\r", "-\tinfo.fMask = OS.MIIM_DATA;\r", "-\tif (!OS.GetMenuItemInfo (handle, index, true, info)) {\r", "-\t\terror (SWT.ERROR_INVALID_RANGE);\r", "+\tint id = 0;\r", "+\tif (OS.IsPPC && hwndCB != 0) {\r", "+\t\tTBBUTTON lpButton = new TBBUTTON ();\r", "+\t\tint result = OS.SendMessage (hwndCB, OS.TB_GETBUTTON, index, lpButton);\r", "+\t\tif (result == 0) error (SWT.ERROR_CANNOT_GET_ITEM);\r", "+\t\tid = lpButton.idCommand;\r", "+\t} else {\r", "+\t\tMENUITEMINFO info = new MENUITEMINFO ();\r", "+\t\tinfo.cbSize = MENUITEMINFO.sizeof;\r", "+\t\tinfo.fMask = OS.MIIM_DATA;\r", "+\t\tif (!OS.GetMenuItemInfo (handle, index, true, info)) {\r", "+\t\t\terror (SWT.ERROR_INVALID_RANGE);\r", "+\t\t}\r", "+\t\tid = info.dwItemData;\r", "-\treturn parent.findMenuItem (info.dwItemData);\r", "+\treturn parent.findMenuItem (id);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1951dd52c8963f88447a535a8185a74c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "cab2e6ac3392e3b13d9331de0b8b2739782ad19a", "commitAfterChange": "043c304583a23ffa2293051da40878601bc19ea8", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " public void setExpanded (boolean expanded)", "signatureAfterChange": " public void setExpanded (boolean expanded)", "diff": ["+\tRECT oldRect = null;", "-\tint count = 0, hTopItem = OS.SendMessage (hwnd, OS.TVM_GETNEXTITEM, OS.TVGN_FIRSTVISIBLE, 0);", "+\tint count = 0, hBottomItem = 0;", "+\tint hTopItem = OS.SendMessage (hwnd, OS.TVM_GETNEXTITEM, OS.TVGN_FIRSTVISIBLE, 0);", "+\t\t\t\thBottomItem = hItem;", "+\t\t\t\toldRect = new RECT ();", "+\t\t\t\tOS.GetClientRect (hwnd, oldRect);", "-\t\t\t\tint hItem = hTopItem, index = 0;", "-\t\t\t\twhile (hItem != 0 && index < count) {", "-\t\t\t\t\tRECT rect = new RECT ();", "-\t\t\t\t\trect.left = hItem;", "-\t\t\t\t\tif (OS.SendMessage (hwnd, OS.TVM_GETITEMRECT, 1, rect) != 0) {", "-\t\t\t\t\t\tif (!OS.EqualRect (rect, rects [index])) {", "-\t\t\t\t\t\t\tbreak;", "+\t\t\t\tRECT newRect = new RECT ();", "+\t\t\t\tOS.GetClientRect (hwnd, newRect);", "+\t\t\t\tif (OS.EqualRect (oldRect, newRect)) {", "+\t\t\t\t\tint hItem = hTopItem, index = 0;", "+\t\t\t\t\twhile (hItem != 0 && index < count) {", "+\t\t\t\t\t\tRECT rect = new RECT ();", "+\t\t\t\t\t\trect.left = hItem;", "+\t\t\t\t\t\tif (OS.SendMessage (hwnd, OS.TVM_GETITEMRECT, 1, rect) != 0) {", "+\t\t\t\t\t\t\tif (!OS.EqualRect (rect, rects [index])) {", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\thItem = OS.SendMessage (hwnd, OS.TVM_GETNEXTITEM, OS.TVGN_NEXTVISIBLE, hItem);", "+\t\t\t\t\t\tindex++;", "-\t\t\t\t\thItem = OS.SendMessage (hwnd, OS.TVM_GETNEXTITEM, OS.TVGN_NEXTVISIBLE, hItem);", "-\t\t\t\t\tindex++;", "+\t\t\t\t\tfixScroll = index == count && hItem == hBottomItem;", "-\t\t\t\tfixScroll = index == count;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9624b43b3b4ba3a7cce80940f0844658", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/motif/org/eclipse/swt/program/Program.java", "commitBeforeChange": "c121bfa57942c896c00e3ff4112c06d496bc4869", "commitAfterChange": "28381e66974d7f43e17f28f1e68736f65a7183d4", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public boolean execute(String fileName)", "signatureAfterChange": " public boolean execute(String fileName)", "diff": ["-\t\t\t\tactionID = CDE.DtActionInvoke(shell.intValue(), action, fileArg, 1, null, null, null, 1, 0, 0);", "+\t\t\t\tint ptr = OS.XtMalloc(fileArg.length);", "+\t\t\t\tOS.memmove(ptr, fileArg, fileArg.length);", "+\t\t\t\tDtActionArg args = new DtActionArg();", "+\t\t\t\targs.argClass = CDE.DtACTION_FILE;", "+\t\t\t\targs.name = ptr;", "+\t\t\t\tactionID = CDE.DtActionInvoke(shell.intValue(), action, args, 1, null, null, null, 1, 0, 0);", "+\t\t\t\tOS.XtFree(ptr);"]}], "num": 25313}