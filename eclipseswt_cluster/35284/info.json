{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8a47a45ae13df2b0b45104d76fedb559", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ff93c69364afdb7cd68e0e2a158a342", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/win32/org/eclipse/swt/browser/WebUIDelegate.java", "commitBeforeChange": "73bece2a93a84ede732dede8b40b2d8c17119094", "commitAfterChange": "3684f6f68db473f62f594c1867c30510d320282b", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 94, "signatureBeforeChange": " \tpublic TextPrompter (Shell parent)", "signatureAfterChange": "  String showTextPrompter (String title, String message, String defaultText)", "diff": ["+", "+String showTextPrompter (String title, String message, String defaultText) {", "+\tShell parent = browser.getShell ();", "+\tfinal Shell dialog = new Shell (parent, SWT.APPLICATION_MODAL | SWT.DIALOG_TRIM);", "+\tdialog.setLayout (new GridLayout ());", "+\tdialog.setText (title);", "+", "+\tLabel label = new Label (dialog, SWT.NONE);", "+\tlabel.setLayoutData (new GridData (GridData.FILL_HORIZONTAL));", "+\tlabel.setText (message);", "+", "+\tfinal Text textBox = new Text (dialog, SWT.SINGLE | SWT.BORDER);", "+\tGridData data = new GridData (GridData.FILL_HORIZONTAL);", "+\tdata.widthHint = 300;", "+\ttextBox.setLayoutData (data);", "+\ttextBox.setText (defaultText);", "+", "+\tComposite buttons = new Composite (dialog, SWT.NONE);", "+\tbuttons.setLayout (new GridLayout (2, true));", "+\tbuttons.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_CENTER));", "+\tButton ok = new Button (buttons, SWT.PUSH);", "+\tok.setText (SWT.getMessage (\"SWT_OK\")); //$NON-NLS-1$", "+\tok.setLayoutData (new GridData (GridData.FILL_HORIZONTAL));", "+", "+\tfinal String[] result = new String[1];", "+\tok.addSelectionListener (new SelectionAdapter () {", "+\t\tpublic void widgetSelected (SelectionEvent e) {", "+\t\t\tresult[0] = textBox.getText ();", "+\t\t\tdialog.dispose ();", "+\t\t}", "+\t});", "+\tButton cancel = new Button (buttons, SWT.PUSH);", "+\tcancel.setText (SWT.getMessage (\"SWT_Cancel\")); //$NON-NLS-1$", "+\tcancel.setLayoutData (new GridData (GridData.FILL_HORIZONTAL));", "+\tcancel.addSelectionListener (new SelectionAdapter () {", "+\t\tpublic void widgetSelected (SelectionEvent e) {", "+\t\t\tdialog.dispose ();", "+\t\t}", "+\t});", "+", "+\tdialog.setDefaultButton (ok);", "+\tdialog.pack ();", "+\tRectangle parentSize = parent.getBounds ();", "+\tRectangle dialogSize = dialog.getBounds ();", "+\tint x = parent.getLocation ().x + (parentSize.width - dialogSize.width) / 2;", "+\tint y = parent.getLocation ().y + (parentSize.height - dialogSize.height) / 2;", "+\tdialog.setLocation (x, y);", "+\tdialog.open ();", "+\tDisplay display = browser.getDisplay ();", "+\twhile (!dialog.isDisposed ()) {", "+\t\tif (!display.readAndDispatch ()) display.sleep ();", "+\t}", "+\treturn result[0];", "+}", "-\tString text;", "-\tpublic TextPrompter (Shell parent) {", "-\t\tthis (parent, SWT.APPLICATION_MODAL);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2135ccc4762e129e783f7cc6acb38abb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet251.java", "commitBeforeChange": "fc48378e9f0f4b0897a68c392d2c3184541abb46", "commitAfterChange": "c40be34806a07a7e02209f4d38b2fe1e33df8ea4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public static void main (String [] args)", "signatureAfterChange": "  public static void main (String [] args)", "diff": ["-\tShell shell = new Shell (display);", "+\tfinal Shell shell = new Shell (display);", "+\tshell.setLayout(new FillLayout());", "-\tfinal Shell dialog = new Shell (shell, SWT.DIALOG_TRIM);", "-\tdialog.setLayout (new GridLayout (2, false));", "-", "-\tfinal DateTime calendar = new DateTime (dialog, SWT.CALENDAR | SWT.BORDER);", "-\tfinal DateTime time = new DateTime (dialog, SWT.TIME | SWT.SHORT);", "-", "-\tnew Label (dialog, SWT.NONE);", "-\tButton ok = new Button (dialog, SWT.PUSH);", "-\tok.setText (\"OK\");", "-\tok.setLayoutData(new GridData (SWT.FILL, SWT.CENTER, false, false));", "-\tok.addSelectionListener (new SelectionAdapter () {", "+\tButton open = new Button (shell, SWT.PUSH);", "+\topen.setText (\"Open Dialog\");", "+\topen.addSelectionListener (new SelectionAdapter () {", "-\t\t\tSystem.out.println (\"Date selected (MM/DD/YYYY) = \" + (calendar.getMonth () + 1) + \"/\" + calendar.getDay () + \"/\" + calendar.getYear ());", "-\t\t\tSystem.out.println (\"Time selected (HH:MM) = \" + time.getHours () + \":\" + time.getMinutes ());", "-\t\t\tdialog.close ();", "+\t\t\tfinal Shell dialog = new Shell (shell, SWT.DIALOG_TRIM);", "+\t\t\tdialog.setLayout (new GridLayout (3, false));", "+", "+\t\t\tfinal DateTime calendar = new DateTime (dialog, SWT.CALENDAR | SWT.BORDER);", "+\t\t\tfinal DateTime date = new DateTime (dialog, SWT.DATE | SWT.SHORT);", "+\t\t\tfinal DateTime time = new DateTime (dialog, SWT.TIME | SWT.SHORT);", "+", "+\t\t\tnew Label (dialog, SWT.NONE);", "+\t\t\tnew Label (dialog, SWT.NONE);", "+\t\t\tButton ok = new Button (dialog, SWT.PUSH);", "+\t\t\tok.setText (\"OK\");", "+\t\t\tok.setLayoutData(new GridData (SWT.FILL, SWT.CENTER, false, false));", "+\t\t\tok.addSelectionListener (new SelectionAdapter () {", "+\t\t\t\tpublic void widgetSelected (SelectionEvent e) {", "+\t\t\t\t\tSystem.out.println (\"Calendar date selected (MM/DD/YYYY) = \" + (calendar.getMonth () + 1) + \"/\" + calendar.getDay () + \"/\" + calendar.getYear ());", "+\t\t\t\t\tSystem.out.println (\"Date selected (MM/YYYY) = \" + (date.getMonth () + 1) + \"/\" + date.getYear ());", "+\t\t\t\t\tSystem.out.println (\"Time selected (HH:MM) = \" + time.getHours () + \":\" + time.getMinutes ());", "+\t\t\t\t\tdialog.close ();", "+\t\t\t\t}", "+\t\t\t});", "+\t\t\tdialog.setDefaultButton (ok);", "+\t\t\tdialog.pack ();", "+\t\t\tdialog.open ();", "-\tdialog.setDefaultButton (ok);", "-", "-\t", "-\tdialog.pack ();", "-\tdialog.open ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "146d47916e20b1ffe3da964261df2e9b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet51.java", "commitBeforeChange": "df6c9943808b7d2db2d255f473822e899df784cd", "commitAfterChange": "51a851b43d5a5b67f153def5a601fa54671236bd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public static void main (String [] args)", "signatureAfterChange": "  public static void main(String [] args)", "diff": ["-public static void main (String [] args) {", "-\tDisplay display = new Display ();", "-\tShell shell = new Shell (display);", "-\tTable table = new Table (shell, SWT.BORDER | SWT.MULTI);", "-\ttable.setSize (200, 200);", "-\tfor (int i=0; i<128; i++) {", "-\t\tTableItem item = new TableItem (table, SWT.NONE);", "-\t\titem.setText (\"Item \" + i);", "+public static void main(String [] args) {", "+\tDisplay display = new Display();", "+\tShell shell = new Shell(display);", "+\tshell.setBounds(10,10,300,300);", "+\tshell.setLayout(new GridLayout(2,true));", "+\tfinal Table table = new Table(shell, SWT.NONE);", "+\tGridData data = new GridData(GridData.FILL_BOTH);", "+\tdata.horizontalSpan = 2;", "+\ttable.setLayoutData(data);", "+\tfor (int i = 0; i < 99; i++) {", "+\t\tnew TableItem(table, SWT.NONE).setText(\"item \" + i);", "-\ttable.setTopIndex (95);", "-\tshell.pack ();", "-\tshell.open ();", "-\twhile (!shell.isDisposed ()) {", "-\t\tif (!display.readAndDispatch ()) display.sleep ();", "+\tButton upButton = new Button(shell, SWT.PUSH);", "+\tupButton.setText(\"Scroll up one page\");", "+\tupButton.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, false));", "+\tupButton.addListener(SWT.Selection, new Listener() {", "+\t\tpublic void handleEvent(Event event) {", "+\t\t\tint height = table.getClientArea().height;", "+\t\t\tint visibleItemCount = height / table.getItemHeight();", "+\t\t\tint topIndex = table.getTopIndex();", "+\t\t\tint newTopIndex = Math.max(0, topIndex - visibleItemCount);", "+\t\t\tif (topIndex != newTopIndex) {", "+\t\t\t\ttable.setTopIndex(newTopIndex);", "+\t\t\t}", "+\t\t}", "+\t});", "+\tButton downButton = new Button(shell, SWT.PUSH);", "+\tdownButton.setText(\"Scroll down one page\");", "+\tdownButton.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, false));", "+\tdownButton.addListener(SWT.Selection, new Listener() {", "+\t\tpublic void handleEvent(Event event) {", "+\t\t\tint height = table.getClientArea().height;", "+\t\t\tint visibleItemCount = height / table.getItemHeight();", "+\t\t\tint topIndex = table.getTopIndex();", "+\t\t\tint newTopIndex = Math.min(table.getItemCount(), topIndex + visibleItemCount);", "+\t\t\tif (topIndex != newTopIndex) {", "+\t\t\t\ttable.setTopIndex(newTopIndex);", "+\t\t\t}", "+\t\t}", "+\t});", "+\tshell.open();", "+\twhile (!shell.isDisposed()) {", "+\t\tif (!display.readAndDispatch()) display.sleep();", "-\tdisplay.dispose ();", "+\tdisplay.dispose();"]}], "num": 35284}