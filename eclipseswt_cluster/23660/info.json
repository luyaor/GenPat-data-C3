{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a1c01df6552169058773ee0b3e62ee89", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d47f9b155bfe4d0ddb1456221502157", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/GraphicsExample.java", "commitBeforeChange": "c327fc3f4b8bf26c4623cadeef77e521a02c4b24", "commitAfterChange": "209f51079f19d7fa93af90aeb940601ba3ef3375", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": " static Image createImage(Display display, Color color)", "signatureAfterChange": " static Image createImage(Device device, Color color)", "diff": ["-static Image createImage(Display display, Color color) {", "-\tImage image = new Image(display, 16, 16);", "+static Image createImage(Device device, Color color) {", "+\tImage image = new Image(device, 16, 16);", "-\tif (color.equals(display.getSystemColor(SWT.COLOR_BLACK))) {", "-\t\tgc.setForeground(display.getSystemColor(SWT.COLOR_WHITE));", "+\tif (color.equals(device.getSystemColor(SWT.COLOR_BLACK))) {", "+\t\tgc.setForeground(device.getSystemColor(SWT.COLOR_WHITE));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5d0f98c4a7c524f0975436788358d34", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/GraphicsExample.java", "commitBeforeChange": "c327fc3f4b8bf26c4623cadeef77e521a02c4b24", "commitAfterChange": "209f51079f19d7fa93af90aeb940601ba3ef3375", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": " static Image createImage(Display display, Color color1, Color color2, int width, int height)", "signatureAfterChange": " static Image createImage(Device device, Color color1, Color color2, int width, int height)", "diff": ["-static Image createImage(Display display, Color color1, Color color2, int width, int height) {", "-\tImage image = new Image(display, width, height);", "+static Image createImage(Device device, Color color1, Color color2, int width, int height) {", "+\tImage image = new Image(device, width, height);", "-\tPattern pattern = new Pattern(display, rect.x, rect.y, rect.width - 1,", "+\tPattern pattern = new Pattern(device, rect.x, rect.y, rect.width - 1,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e04fafc2bbc15c6b07446c9ad69c6328", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/BlackHoleTab.java", "commitBeforeChange": "3171f2c0b5c00fa1e644dbb5db3f5f89f3003805", "commitAfterChange": "3115c688b669b47ffc62b1474228715f401177a1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void paint(GC gc, int width, int height)", "signatureAfterChange": "  public void paint(GC gc, int width, int height)", "diff": ["-\tDisplay display = Display.getCurrent();", "-\tgc.setBackground(display.getSystemColor(SWT.COLOR_BLACK));", "+\tDevice device = gc.getDevice();", "+\tgc.setBackground(device.getSystemColor(SWT.COLOR_BLACK));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91327cc355c4879fbaec4b9e864dbedb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/widgets/Synchronizer.java", "commitBeforeChange": "cb7b8ee2a3c27e0f47e09479d16a5109a9a7baca", "commitAfterChange": "54a12a83f618c3be97f23ee7642fea31a005fe3f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \t\r void addLast (RunnableLock entry)", "signatureAfterChange": "\r \t\r void addLast (RunnableLock lock)", "diff": ["-void addLast (RunnableLock entry) {\r", "+void addLast (RunnableLock lock) {\r", "-\t\tif (messagesSize == messages.length) {\r", "-\t\t\tRunnableLock[] newMessages = new RunnableLock [messagesSize + 4];\r", "-\t\t\tSystem.arraycopy (messages, 0, newMessages, 0, messagesSize);\r", "+\t\tif (messageCount == messages.length) {\r", "+\t\t\tRunnableLock[] newMessages = new RunnableLock [messageCount + 4];\r", "+\t\t\tSystem.arraycopy (messages, 0, newMessages, 0, messageCount);\r", "-\t\tmessages [messagesSize++] = entry;\r", "+\t\tmessages [messageCount++] = lock;\r"]}], "num": 23660}