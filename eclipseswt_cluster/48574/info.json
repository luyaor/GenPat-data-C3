{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "079fd25c0a3fb350e8dc21ec63ba91cd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc893cc783f20b39d295826c496eb7dc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/carbon/org/eclipse/swt/internal/carbon/MacUtil.java", "commitBeforeChange": "252214e1ac298f0a0afcabaddbea343521d62472", "commitAfterChange": "2b385ebc26547316a8160b0ea7e137048ba66f40", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic static void embedControl(int controlHandle, int parentControlHandle, int pos)", "signatureAfterChange": " \tpublic static int newControl(int parentControlHandle, int pos, short init, short min, short max, short procID)", "diff": ["-\t */", "-\tpublic static void embedControl(int controlHandle, int parentControlHandle, int pos) {", "-\t\tint n= countSubControls(parentControlHandle);", "-\t\t", "-\t\t// add at end", "-\t\tif (OSEmbedControl(controlHandle, parentControlHandle) != OS.kNoErr)", "-\t\t\tSystem.out.println(\"MacUtil.embedControl: could not embed control in parent\");", "-\t\t\t", "-\t\tif (pos < 0 || pos > n)", "-\t\t\tpos= n;", "-\t\t", "-\t\tint[] outControl= new int[1];", "-\t\tfor (int i= 0; i < pos; i++) {", "-\t\t\tif (OS.GetIndexedSubControl(parentControlHandle, (short)(n-pos+1), outControl) == 0)", "-\t\t\t\tif (OSEmbedControl(outControl[0], parentControlHandle) != OS.kNoErr)", "-\t\t\t\t\tSystem.out.println(\"MacUtil.embedControl: couldn't move control to end\");", "-\t\t}", "-\t\t", "-\t\t// verify correct position", "-\t\tn++;", "-\t\tfor (int i= 0; i < n; i++) {", "-\t\t\tint index= (n-i);", "-\t\t\tint[] outHandle= new int[1];", "-\t\t\tif (OS.GetIndexedSubControl(parentControlHandle, (short)index, outHandle) == 0) {\t// indices are 1 based", "-\t\t\t\tif (outHandle[0] == controlHandle) {", "-\t\t\t\t\tif (i != pos)", "-\t\t\t\t\t\tSystem.out.println(\"MacUtil.embedControl: creation at position nyi (is: \"+i+\" should: \"+ pos+\")\");", "-\t\t\t\t\treturn;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\tSystem.out.println(\"MacUtil.embedControl: new child not found\");", "-\t}", "+\t\tint controlHandle;", "+\t\tif (HIVIEW) {", "+\t\t\tcontrolHandle= OS.NewControl(0, false, init, min, max, procID);", "+\t\t\tinsertControl(controlHandle, parentControlHandle, pos);", "+\t\t\tOS.HIViewSetVisible(controlHandle, true);", "+\t\t\tOS.HIViewSetNeedsDisplay(controlHandle, true);", "+\t\t} else {", "+\t\t\tint windowHandle= OS.GetControlOwner(parentControlHandle);", "+\t\t\tcontrolHandle= OS.NewControl(windowHandle, false, init, min, max, procID);", "+\t\t\tinsertControl(controlHandle, parentControlHandle, pos);", "+\t\t\tinitLocation(controlHandle);", "+\t\t\tOS.HIViewSetVisible(controlHandle, true);", "+\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13a8e23bceaf76095edf7fd24bc657b2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 7, "signatureBeforeChange": " int getAlignmentOffset(int columnIndex, int columnWidth, GC gc)", "signatureAfterChange": " void computeDisplayTexts (GC gc)", "diff": ["+}", "+void computeDisplayTexts (GC gc) {", "+\tint columnCount = parent.columns.length;", "+\tif (columnCount == 0) return;", "+\t", "+\tFont oldFont = gc.getFont ();", "+\tfor (int i = 0; i < columnCount; i++) {", "+\t\tboolean fontChanged = false;", "+\t\tFont font = getFont (i);", "+\t\tif (!font.equals (oldFont)) {", "+\t\t\tgc.setFont (font);", "+\t\t\tfontChanged = true;", "+\t\tcomputeDisplayText (i, gc);", "+\t\tif (fontChanged) gc.setFont (oldFont);", "-int getAlignmentOffset(int columnIndex, int columnWidth, GC gc) {", "-\tTable parent = getParent();", "-\tTableColumn column = parent.internalGetColumn (columnIndex);", "-\tImage image = getImage(columnIndex);\t", "-\tint alignmentOffset = 0;", "-\tint alignment = column.getAlignment();", "-\tString label  = getText(gc, column);", "-\tint imageWidth = 0;", "-\tint textWidth = gc.stringExtent (label).x;", "-\tPoint imageExtent = parent.getImageExtent();", "-\tif (((columnIndex == TableColumn.FIRST &&\t\t\t\t\t\t\t\t// always add the image width for the first column ", "- \t \t  parent.hasFirstColumnImage() == true) ||\t\t\t\t\t\t\t// if any item in the first column has an image", "-\t\t (columnIndex != TableColumn.FIRST && \t\t\t\t\t\t\t\t// add the image width if it's not the first column", "-\t\t  image != null)) &&\t\t\t\t\t\t\t\t\t\t \t\t// only when the item actually has an image", "-\t\timageExtent != null) {\t\t\t\t\t\t\t\t\t", "-\t\ttextWidth += imageExtent.x;", "-\t}", "-\tif ((alignment & SWT.RIGHT) != 0) {", "-\t\talignmentOffset = columnWidth - textWidth - imageWidth - TEXT_INDENT - TEXT_INDENT;", "-\t}", "-\tif ((alignment & SWT.CENTER) != 0) {", "-\t\talignmentOffset = ((columnWidth - textWidth) / 2) - imageWidth - TEXT_INDENT;", "-\t}", "-\tif (alignmentOffset < 0) alignmentOffset = 0;", "-\treturn alignmentOffset;"]}], "num": 48574}