{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "376856b24a224ca2141f0dfef210727a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cf111f0003624929bf18d99189666b0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleAutomation.java", "commitBeforeChange": "22bc05eaf9c493c6def1696f8ddd7e758b4f9f70", "commitAfterChange": "5697dfc7d0dd9b5b488c7047b208e76212de6ab2", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 24, "signatureBeforeChange": "\r public boolean setProperty(int dispIdMember, Variant rgvarg)", "signatureAfterChange": "\r public boolean setProperty(int dispIdMember, Variant rgvarg)", "diff": ["-\r", "-\t// get the IDispatch interface for the control\r", "-\tif (objIDispatch == null) return false;\r", "-\r", "-\t// create Dispparams structure with input parameters\r", "-\tDISPPARAMS pDispParams = new DISPPARAMS();\r", "-\tpDispParams.cArgs = 1;\r", "-\tpDispParams.rgvarg = OS.GlobalAlloc(COM.GMEM_FIXED | COM.GMEM_ZEROINIT, Variant.sizeof);\r", "-\trgvarg.getData(pDispParams.rgvarg);\r", "-\t\r", "-\t// add in information for named args\r", "-\tpDispParams.cNamedArgs = 1;\r", "-\tpDispParams.rgdispidNamedArgs = OS.GlobalAlloc(COM.GMEM_FIXED | COM.GMEM_ZEROINIT, 4);\r", "-\tCOM.MoveMemory(pDispParams.rgdispidNamedArgs, new int[] {COM.DISPID_PROPERTYPUT}, 4);\r", "-\r", "-\tint pVarResultAddress = OS.GlobalAlloc(OS.GMEM_FIXED | OS.GMEM_ZEROINIT, Variant.sizeof);\r", "-\tEXCEPINFO excepInfo = new EXCEPINFO();\r", "-\tint[] pArgErr = new int[1];\r", "+\tVariant[] rgvarg2 = new Variant[] {rgvarg};\r", "+\tint[] rgdispidNamedArgs = new int[] {COM.DISPID_PROPERTYPUT};\r", "-\tint rc = objIDispatch.Invoke(dispIdMember, new GUID(), COM.LOCALE_USER_DEFAULT, dwFlags, pDispParams, pVarResultAddress, excepInfo, pArgErr);\r", "-\r", "-\t// free the result\r", "-\tCOM.VariantClear(pVarResultAddress);\r", "-\tOS.GlobalFree(pVarResultAddress);\r", "-\t\r", "-\t// free the Dispparams resources\r", "-\tOS.GlobalFree(pDispParams.rgdispidNamedArgs);\r", "-\tCOM.VariantClear(pDispParams.rgvarg);\r", "-\tOS.GlobalFree(pDispParams.rgvarg);\r", "-\t\r", "-\t// save error string and cleanup EXCEPINFO\r", "-\tmanageExcepinfo(rc, excepInfo);\r", "-\t\t\r", "-\treturn (rc == COM.S_OK);\r", "-\r", "+\tVariant pVarResult = new Variant();\r", "+\tint result = invoke(dispIdMember, dwFlags, rgvarg2, rgdispidNamedArgs, pVarResult);\r", "+\treturn (result == COM.S_OK);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "038c592f097b56dad448094c7b82db17", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleAutomation.java", "commitBeforeChange": "22bc05eaf9c493c6def1696f8ddd7e758b4f9f70", "commitAfterChange": "5697dfc7d0dd9b5b488c7047b208e76212de6ab2", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r public Variant getProperty(int dispIdMember)", "signatureAfterChange": "\r public Variant getProperty(int dispIdMember)", "diff": ["-\t// get the IDispatch interface for the control\r", "-\tif (objIDispatch == null) return null;\r", "-\t\r", "-\tDISPPARAMS pDispParams = new DISPPARAMS();\r", "-\tEXCEPINFO excepInfo = new EXCEPINFO();\r", "-\tint[] pArgErr = new int[1];\r", "-\tint pVarResultAddress = OS.GlobalAlloc(OS.GMEM_FIXED | OS.GMEM_ZEROINIT, Variant.sizeof);\r", "-\tint result = objIDispatch.Invoke(dispIdMember, new GUID(), COM.LOCALE_USER_DEFAULT, COM.DISPATCH_PROPERTYGET, pDispParams, pVarResultAddress, excepInfo, pArgErr);\r", "-\t\r", "-\t// save error string and cleanup EXCEPINFO\r", "-\tmanageExcepinfo(result, excepInfo);\r", "-\r", "-\tVariant pVarResult = null;\r", "-\tif (result == COM.S_OK) {\r", "-\t\tpVarResult = new Variant();\r", "-\t\tpVarResult.setData(pVarResultAddress);\r", "-\t}\r", "-\t\r", "-\tCOM.VariantClear(pVarResultAddress);\r", "-\tOS.GlobalFree(pVarResultAddress);\r", "-\t\t\r", "-\treturn pVarResult;\r", "+\tVariant pVarResult = new Variant();\r", "+\tint result = invoke(dispIdMember, COM.DISPATCH_PROPERTYGET, null, null, pVarResult);\r", "+\treturn (result == OLE.S_OK) ? pVarResult : null;\r", "+}\r"]}], "num": 56642}