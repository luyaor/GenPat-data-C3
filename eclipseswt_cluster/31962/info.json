{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "36f631af335949f69e7d38b6e5949eda", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc6495e40ff4f01e14e354ea550bc500", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "0256418210990c9e8f7fef6b740018d8b9ac238b", "commitAfterChange": "1e86d180ad8e86da26dd9b591f9c39ecc198b3fe", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void setBackground(Color color)", "signatureAfterChange": " public void setBackground(Color color)", "diff": ["-//\tbyte red = (byte)((transparentPixel >> 16) & 0xFF);", "-//\tbyte green = (byte)((transparentPixel >> 8) & 0xFF);", "-//\tbyte blue = (byte)((transparentPixel >> 0) & 0xFF);", "-//\tbyte newRed = (byte)((int)(color.handle[0] * 255) & 0xFF);", "-//\tbyte newGreen = (byte)((int)(color.handle[1] * 255) & 0xFF);", "-//\tbyte newBlue = (byte)((int)(color.handle[2] * 255) & 0xFF);", "-//\tint height = OS.CGImageGetHeight(handle);", "-//\tint bpl = OS.CGImageGetBytesPerRow(handle);", "-//\tbyte[] line = new byte[bpl];", "-//\tfor (int i = 0, offset = 0; i < height; i++, offset += bpl) {", "-//\t\tOS.memmove(line, data + offset, bpl);", "-//\t\tfor (int j = 0; j  < line.length; j += 4) {", "-//\t\t\tif (line[j+ 1] == red && line[j + 2] == green && line[j + 3] == blue) {", "-//\t\t\t\tline[j + 1] = newRed;", "-//\t\t\t\tline[j + 2] = newGreen;", "-//\t\t\t\tline[j + 3] = newBlue;", "-//\t\t\t}", "-//\t\t}", "-//\t\tOS.memmove(data + offset, line, bpl);", "-//\t}", "-//\ttransparentPixel = (newRed & 0xFF) << 16 | (newGreen & 0xFF) << 8 | (newBlue & 0xFF);", "+\tbyte red = (byte)((transparentPixel >> 16) & 0xFF);", "+\tbyte green = (byte)((transparentPixel >> 8) & 0xFF);", "+\tbyte blue = (byte)((transparentPixel >> 0) & 0xFF);", "+\tbyte newRed = (byte)((int)(color.handle[0] * 255) & 0xFF);", "+\tbyte newGreen = (byte)((int)(color.handle[1] * 255) & 0xFF);", "+\tbyte newBlue = (byte)((int)(color.handle[2] * 255) & 0xFF);", "+\tint /*long*/ bpr = imageRep.bytesPerRow();", "+\tint /*long*/ data = imageRep.bitmapData();", "+\tbyte[] line = new byte[(int)bpr];", "+\tfor (int i = 0, offset = 0; i < height; i++, offset += bpr) {", "+\t\tOS.memmove(line, data + offset, bpr);", "+\t\tfor (int j = 0; j  < line.length; j += 4) {", "+\t\t\tif (line[j+ 1] == red && line[j + 2] == green && line[j + 3] == blue) {", "+\t\t\t\tline[j + 1] = newRed;", "+\t\t\t\tline[j + 2] = newGreen;", "+\t\t\t\tline[j + 3] = newBlue;", "+\t\t\t}", "+\t\t}", "+\t\tOS.memmove(data + offset, line, bpr);", "+\t}", "+\ttransparentPixel = (newRed & 0xFF) << 16 | (newGreen & 0xFF) << 8 | (newBlue & 0xFF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaef75f4d649d60a4d1b6ee6b943770e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "2aaa1a0283d754fe16d3915e88a62bfb651f5b89", "commitAfterChange": "7f9dc8104b76a609a5e67f58367b8050b088975e", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void setBackground(Color color)", "signatureAfterChange": " public void setBackground(Color color)", "diff": ["-\t//NOT DONE", "+\tbyte red = (byte)((transparentPixel >> 16) & 0xFF);", "+\tbyte green = (byte)((transparentPixel >> 8) & 0xFF);", "+\tbyte blue = (byte)((transparentPixel >> 0) & 0xFF);", "+\tbyte newRed = (byte)((int)(color.handle[0] * 255) & 0xFF);", "+\tbyte newGreen = (byte)((int)(color.handle[1] * 255) & 0xFF);", "+\tbyte newBlue = (byte)((int)(color.handle[2] * 255) & 0xFF);", "+\tint height = OS.CGImageGetHeight(handle);", "+\tint bpl = OS.CGImageGetBytesPerRow(handle);", "+\tbyte[] line = new byte[bpl];", "+\tfor (int i = 0, offset = 0; i < height; i++, offset += bpl) {", "+\t\tOS.memcpy(line, data + offset, bpl);", "+\t\tfor (int j = 0; j  < line.length; j += 4) {", "+\t\t\tif (line[j+ 1] == red && line[j + 2] == green && line[j + 3] == blue) {", "+\t\t\t\tline[j + 1] = newRed;", "+\t\t\t\tline[j + 2] = newGreen;", "+\t\t\t\tline[j + 3] = newBlue;", "+\t\t\t}", "+\t\t}", "+\t\tOS.memcpy(data + offset, line, bpl);", "+\t}", "+\ttransparentPixel = (newRed & 0xFF) << 16 | (newGreen & 0xFF) << 8 | (newBlue & 0xFF);"]}], "num": 31962}