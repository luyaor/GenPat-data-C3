{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "952bbf98e482e4bbdc7908bcd65be5c1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75aadfe1b7139120b9afb534eb8f7b45", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Slider.java", "commitBeforeChange": "ecd1439b859941293b6ce2277d9cfbd049a2cdb6", "commitAfterChange": "13a310a2d86d21288f6ba8222bb84b202aeb8f10", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  int gtk_value_changed (int adjustment)", "signatureAfterChange": "  int gtk_value_changed (int adjustment)", "diff": ["+", "+int /*long*/ gtk_value_changed (int /*long*/ adjustment) {", "+\tswitch (detail) {", "+\tdetail = OS.GTK_SCROLL_NONE;", "-", "-int /*long*/ gtk_value_changed (int /*long*/ adjustment) {", "-\tpostEvent (SWT.Selection);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c2c30074fd6171ad062d2f1a7665963", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "9e4aa4f79d8d08d57d797296be9d3269723e755b", "commitAfterChange": "c7a37ce473beb9045c99b97900ef561257b98af2", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 99, "signatureBeforeChange": "\t \t \tString roleToOs(int role)", "signatureAfterChange": "\t \t \tString roleToOs(int role)", "diff": ["+\t\t\tcase ACC.ROLE_COLUMN: nsReturnValue =  OS.NSAccessibilityColumnRole; break;", "+\t\t\tcase ACC.ROLE_ROW: nsReturnValue =  concatStringsAsRole(OS.NSAccessibilityRowRole, OS.NSAccessibilityTableRowSubrole); break;", "-\t\t\tcase ACC.ROLE_TABLECELL: nsReturnValue = concatStringsAsRole(OS.NSAccessibilityRowRole, OS.NSAccessibilityTableRowSubrole); break;", "+\t\t\tcase ACC.ROLE_TABLECELL: ", "+\t\t\t\tif (OS.VERSION >= 0x1060) {", "+\t\t\t\t\tnsReturnValue = OS.NSAccessibilityCellRole;", "+\t\t\t\t} else {", "+\t\t\t\t\tnsReturnValue = concatStringsAsRole(OS.NSAccessibilityRowRole, OS.NSAccessibilityTableRowSubrole);", "+\t\t\t\t}", "+\t\t\t", "+\t\t\t//10.6 only -> case ACC.ROLE_CANVAS: nsReturnValue = OS.NSAccessibilityLayoutAreaRole; break;", "+\t\t\tcase ACC.ROLE_CANVAS: nsReturnValue = OS.NSAccessibilityGroupRole; break;", "+\t\t\tcase ACC.ROLE_GRAPHIC: nsReturnValue = OS.NSAccessibilityImageRole; break;", "+\t\t\tcase ACC.ROLE_COLOR_CHOOSER: nsReturnValue = OS.NSAccessibilityColorWellRole; break;", "+\t\t", "+\t\t\t//CLIENT_AREA uses NSAccessibilityGroupRole already", "+\t\t\tcase ACC.ROLE_GROUP: nsReturnValue = OS.NSAccessibilityGroupRole; break;  ", "+\t\t\t//SPLIT_BUTTON uses NSAccessibilityMenuButtonRole already", "+\t\t\tcase ACC.ROLE_CHECK_MENU_ITEM: nsReturnValue = OS.NSAccessibilityMenuButtonRole; break;", "+\t\t\tcase ACC.ROLE_RADIO_MENU_ITEM: nsReturnValue = OS.NSAccessibilityMenuButtonRole; break;", "+\t\t\t//don't know the right answer for these:", "+\t\t\tcase ACC.ROLE_ALERT: ", "+\t\t\tcase ACC.ROLE_ANIMATION: ", "+\t\t\tcase ACC.ROLE_DOCUMENT:", "+\t\t\tcase ACC.ROLE_HEADING: ", "+\t\t\tcase ACC.ROLE_SPINBUTTON:", "+\t\t\tcase ACC.ROLE_STATUSBAR:", "+\t\t\tcase ACC.ROLE_CLOCK:", "+\t\t\tcase ACC.ROLE_DATE_EDITOR:", "+\t\t\tcase ACC.ROLE_FILE_CHOOSER:", "+\t\t\tcase ACC.ROLE_FONT_CHOOSER:", "+\t\t\t\tnsReturnValue = OS.NSAccessibilityUnknownRole;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f460f36e18516a1b5b0db549bd9afc3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ScrollBar.java", "commitBeforeChange": "ecd1439b859941293b6ce2277d9cfbd049a2cdb6", "commitAfterChange": "13a310a2d86d21288f6ba8222bb84b202aeb8f10", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  int gtk_value_changed (int adjustment)", "signatureAfterChange": "  int gtk_value_changed (int adjustment)", "diff": ["+", "+int /*long*/ gtk_value_changed (int /*long*/ adjustment) {", "+\tswitch (detail) {", "+\tdetail = OS.GTK_SCROLL_NONE;", "-", "-int /*long*/ gtk_value_changed (int /*long*/ adjustment) {", "-\tpostEvent (SWT.Selection);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "054d796ba4f16d8e8351f88312de1dea", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "91d12e7fb40e96dc6324f0e393e3f0f025792ace", "commitAfterChange": "14be55c4cbe46a16b7300921fd246420e99a1bad", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam)", "signatureAfterChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam)", "diff": ["+\tboolean checkSelection = false, checkFilter = false, checkActivate = false;", "+\t\tcase OS.WM_CHAR:", "+\t\tcase OS.WM_IME_CHAR:", "+\t\tcase OS.WM_KEYUP:", "+\t\tcase OS.WM_SYSCHAR:", "+\t\tcase OS.WM_SYSKEYDOWN:", "+\t\tcase OS.WM_SYSKEYUP:", "+\t\tcase OS.WM_LBUTTONDBLCLK:", "+\t\tcase OS.WM_LBUTTONUP:", "+\t\tcase OS.WM_MBUTTONDBLCLK:", "+\t\tcase OS.WM_MBUTTONUP:", "+\t\tcase OS.WM_MOUSEHOVER:", "+\t\tcase OS.WM_MOUSELEAVE:", "+\t\tcase OS.WM_MOUSEMOVE:", "+//\t\tcase OS.WM_MOUSEWHEEL:", "+\t\tcase OS.WM_RBUTTONDBLCLK:", "+\t\tcase OS.WM_RBUTTONUP:", "+\t\tcase OS.WM_XBUTTONDBLCLK:", "+\t\tcase OS.WM_XBUTTONUP:", "+\t\t\tcheckSelection = true;", "+\t\t\tbreak;", "-\t\tcase OS.WM_XBUTTONDOWN: {", "-\t\t\tDisplay display = this.display;", "-\t\t\tdisplay.ignoreMsgFilter = true;", "-\t\t\tint code = OS.CallWindowProc (TableProc, hwnd, msg, wParam, lParam);", "-\t\t\tdisplay.ignoreMsgFilter = false;", "-\t\t\treturn code;", "-\t\t}", "+\t\tcase OS.WM_XBUTTONDOWN:", "+\t\t\tcheckSelection = checkFilter = true;", "+\t\t\tbreak;", "-\t\tcase OS.WM_KEYDOWN: {", "-\t\t\tignoreActivate = true;", "-\t\t\tint code = OS.CallWindowProc (TableProc, hwnd, msg, wParam, lParam);", "-\t\t\tignoreActivate = false;", "-\t\t\treturn code;", "-\t\t}", "+\t\tcase OS.WM_KEYDOWN:", "+\t\t\tcheckSelection = checkActivate = true;", "+\t\t\tbreak;", "-\treturn OS.CallWindowProc (TableProc, hwnd, msg, wParam, lParam);", "+\tboolean oldSelected = wasSelected;", "+\tif (checkSelection) wasSelected = false;", "+\tif (checkActivate) ignoreActivate = true;", "+\tif (checkFilter) display.ignoreMsgFilter = true;", "+\tint code = OS.CallWindowProc (TableProc, hwnd, msg, wParam, lParam);", "+\tif (checkFilter) display.ignoreMsgFilter = false;", "+\tif (checkActivate) ignoreActivate = false;", "+\tif (checkSelection) {", "+\t\tif (wasSelected) {", "+\t\t\tEvent event = new Event ();", "+\t\t\tint index = OS.SendMessage (handle, OS.LVM_GETNEXTITEM, -1, OS.LVNI_FOCUSED);", "+\t\t\tif (index != -1) event.item = _getItem (index);", "+\t\t\tpostEvent (SWT.Selection, event);", "+\t\t}", "+\t\twasSelected = oldSelected;", "+\t}", "+\treturn code;"]}], "num": 47726}