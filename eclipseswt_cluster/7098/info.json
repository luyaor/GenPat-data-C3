{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aacfc74d245c84e89fa6792d3b737cde", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41530151cc872f83cc5a78779b8fdfea", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "c7a37ce473beb9045c99b97900ef561257b98af2", "commitAfterChange": "1a876750782f037ea9cd2cbd6b3dfc67d39d1b46", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \t \tstatic int atkTable_ref_at (int atkObject, int row, int column)", "signatureAfterChange": " \t \tstatic int atkTable_ref_at (int atkObject, int row, int column)", "diff": ["+\t\tif (object != null) {", "+\t\t\tAccessible accessible = object.accessible;", "+\t\t\tVector listeners = accessible.accessibleTableListeners;", "+\t\t\tint length = listeners.size();", "+\t\t\tif (length > 0) {", "+\t\t\t\tAccessibleTableEvent event = new AccessibleTableEvent(accessible);", "+\t\t\t\tevent.row = (int)/*64*/row;", "+\t\t\t\tevent.column = (int)/*64*/column;", "+\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\tAccessibleTableListener listener = (AccessibleTableListener) listeners.elementAt(i);", "+\t\t\t\t\tlistener.getCell(event);", "+\t\t\t\t}", "+\t\t\t\tAccessible result = event.accessible;", "+\t\t\t\tif (result != null) {", "+\t\t\t\t\tAccessibleObject accessibleObject = result.getAccessibleObject();", "+\t\t\t\t\tOS.g_object_ref(accessibleObject.handle);", "+\t\t\t\t\treturn accessibleObject.handle;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "-\t\t}", "-\t\tif (object != null) {", "-\t\t\tAccessible accessible = object.accessible;", "-\t\t\tVector listeners = accessible.accessibleTableListeners;", "-\t\t\tAccessibleTableEvent event = new AccessibleTableEvent(accessible);", "-\t\t\tevent.row = (int)/*64*/row;", "-\t\t\tevent.column = (int)/*64*/column;", "-\t\t\tfor (int i = 0, length = listeners.size(); i < length; i++) {", "-\t\t\t\tAccessibleTableListener listener = (AccessibleTableListener) listeners.elementAt(i);", "-\t\t\t\tlistener.getCell(event);", "-\t\t\t}", "-\t\t\tAccessible result = event.accessible;", "-\t\t\tif (result != null) {", "-\t\t\t\tif (parentResult != 0) OS.g_object_unref(parentResult);", "-\t\t\t\tAccessibleObject accessibleObject = result.getAccessibleObject();", "-\t\t\t\tOS.g_object_ref(accessibleObject.handle);", "-\t\t\t\treturn accessibleObject.handle;", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "911f9651303c8981f002cdaded6e90e4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "c7a37ce473beb9045c99b97900ef561257b98af2", "commitAfterChange": "1a876750782f037ea9cd2cbd6b3dfc67d39d1b46", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  \tstatic int atkTable_get_index_at (int atkObject, int row, int column)", "signatureAfterChange": "  \tstatic int atkTable_get_index_at (int atkObject, int row, int column)", "diff": ["-\t\t\tAccessibleTableEvent event = new AccessibleTableEvent(accessible);", "-\t\t\tevent.row = (int)/*64*/row;", "-\t\t\tevent.column = (int)/*64*/column;", "-\t\t\tfor (int i = 0, length = listeners.size(); i < length; i++) {", "-\t\t\t\tAccessibleTableListener listener = (AccessibleTableListener) listeners.elementAt(i);", "-\t\t\t\tlistener.getCell(event);", "+\t\t\tint length = listeners.size();", "+\t\t\tif (length > 0) {", "+\t\t\t\tAccessibleTableEvent event = new AccessibleTableEvent(accessible);", "+\t\t\t\tevent.row = (int)/*64*/row;", "+\t\t\t\tevent.column = (int)/*64*/column;", "+\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\tAccessibleTableListener listener = (AccessibleTableListener) listeners.elementAt(i);", "+\t\t\t\t\tlistener.getCell(event);", "+\t\t\t\t}", "+\t\t\t\tAccessible result = event.accessible;", "+\t\t\t\tif (result == null) return -1;", "+\t\t\t\tevent = new AccessibleTableEvent(accessible);", "+\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\tAccessibleTableListener listener = (AccessibleTableListener) listeners.elementAt(i);", "+\t\t\t\t\tlistener.getColumnCount(event);", "+\t\t\t\t}", "+\t\t\t\treturn row * event.count + column;", "-\t\t\tAccessible result = event.accessible;", "-\t\t\tif (result == null) return -1;", "-\t\t\tevent = new AccessibleTableEvent(accessible);", "-\t\t\tfor (int i = 0, length = listeners.size(); i < length; i++) {", "-\t\t\t\tAccessibleTableListener listener = (AccessibleTableListener) listeners.elementAt(i);", "-\t\t\t\tlistener.getColumnCount(event);", "-\t\t\t}", "-\t\t\treturn row * event.count + column;"]}], "num": 7098}