{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9155dc7087889ecd92dc04687057e5a7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be41acc0c758c652811f0b46f9dfed38", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/gtk/org/eclipse/swt/program/Program.java", "commitBeforeChange": "86fca253a46bd2484362c1070c7215dc4a7f17bf", "commitAfterChange": "98e192d43291fda4fd3ef0ea1b9ac46736826b70", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " boolean gio_execute(String fileName)", "signatureAfterChange": " boolean gio_execute(String fileName)", "diff": ["-\tint /*long*/ application = OS.g_app_info_create_from_commandline(commandBuffer, nameBuffer, gnomeExpectUri ? OS.G_APP_INFO_CREATE_SUPPORTS_URIS : OS.G_APP_INFO_CREATE_NONE, 0);", "+\tint /*long*/ application = OS.g_app_info_create_from_commandline(commandBuffer, nameBuffer, gnomeExpectUri", "+\t\t\t\t? OS.G_APP_INFO_CREATE_SUPPORTS_URIS : OS.G_APP_INFO_CREATE_NONE, 0);", "-\t\tint /*long*/ file = OS.g_file_new_for_path (fileNameBuffer);", "+\t\tint /*long*/ file = 0;", "+\t\tif (OS.g_app_info_supports_uris (application)) {", "+\t\t\tfile = OS.g_file_new_for_uri (fileNameBuffer);", "+\t\t} else {", "+\t\t\tfile = OS.g_file_new_for_path (fileNameBuffer);", "+\t\t}", "-\t\t\tOS.g_list_free(list);", "+\t\t\tOS.g_list_free (list);", "-\t}\t", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1308a83ba0f870afe3f2ccb2d31e4cbd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/gtk/org/eclipse/swt/program/Program.java", "commitBeforeChange": "14120886fce522b10b4a78abec3834ceb820f1f5", "commitAfterChange": "3dbca50e1d527f9d970adadbc94c490ef4ed4b08", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  static boolean gio_isExecutable(String fileName)", "signatureAfterChange": "  static boolean gio_isExecutable(String fileName)", "diff": ["-\treturn OS.g_file_test(fileNameBuffer, OS.G_FILE_TEST_IS_EXECUTABLE);", "+\tif (!OS.g_file_test(fileNameBuffer, OS.G_FILE_TEST_IS_EXECUTABLE)) return false;", "+\tint /*long*/ file = OS.g_file_new_for_path (fileNameBuffer);", "+\tboolean result = false;", "+\tif (file != 0) {", "+\t\tbyte[] buffer = Converter.wcsToMbcs (null, \"*\", true); //$NON-NLS-1$", "+\t\tint /*long*/ fileInfo = OS.g_file_query_info(file, buffer, 0, 0, 0);", "+\t\tif (fileInfo != 0) {", "+\t\t\tint /*long*/ contentType = OS.g_file_info_get_content_type(fileInfo);", "+\t\t\tif (contentType != 0) {", "+\t\t\t\tbyte[] exeType = Converter.wcsToMbcs (null, \"application/x-executable\", true); //$NON-NLS-1$", "+\t\t\t\tresult = OS.g_content_type_is_a(contentType, exeType);", "+\t\t\t\tif (!result) {", "+\t\t\t\t\tbyte [] shellType = Converter.wcsToMbcs (null, \"application/x-shellscript\", true); //$NON-NLS-1$", "+\t\t\t\t\tresult = OS.g_content_type_equals(contentType, shellType);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tOS.g_object_unref(fileInfo);", "+\t\t}", "+\t\tOS.g_object_unref (file);", "+\t}", "+\treturn result;"]}], "num": 7691}