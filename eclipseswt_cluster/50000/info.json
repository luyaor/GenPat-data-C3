{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c11f45b3bab02326c55ee4e445793a43", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f522631031d0baa47a23930b4146e13", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "1338b222e8fc4ec17a59048d25fbe907c6449246", "commitAfterChange": "3af337e8a4ee357dca7904022351ca6f859cc723", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " void doMouseDown(Event event)", "signatureAfterChange": " void doMouseDown(Event event)", "diff": ["-\t\t\tif (focusItem != null && focusItem.getItemCount() == 0) {", "-\t\t\t\tfocusItem.expanded = false;", "+\t\t\tif (selectedItem.getItemCount() == 0) {", "+\t\t\t\tselectedItem.expanded = false;", "-\t\tif (!selectedItem.selected) {", "+\t\tif (!selectedItem.isSelected()) {", "-\tif (!selectedItem.selected) {", "+\tif (!selectedItem.isSelected()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0a225901eebc271be890922837d1f4f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "7e280f5c0e35250d8d8799cb54631612dc7eb00c", "commitAfterChange": "9f8eb72337687cebc60515e6291539655a3619af", "methodNumberBeforeChange": 148, "methodNumberAfterChange": 148, "signatureBeforeChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "diff": ["+\t/*", "+\t* Feature in Windows.  When the tree has the style", "+\t* TVS_FULLROWSELECT, the background color for the", "+\t* entire row is filled when an item is painted,", "+\t* drawing on top of any custom drawing.  The fix", "+\t* is to emulate TVS_FULLROWSELECT.", "+\t*/", "+\tboolean selected = false;", "+\tboolean fakeSelection = false;", "+\tif (lpht.hItem != 0) {", "+\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "+\t\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "+\t\t\tif ((bits & OS.TVS_FULLROWSELECT) == 0) fakeSelection = true;", "+\t\t} else {", "+\t\t\tif (hooks (SWT.MeasureItem)) {", "+\t\t\t\tselected = hitTestSelection (lpht.hItem, lpht.x, lpht.y);", "+\t\t\t\tif (selected) {", "+\t\t\t\t\tif ((lpht.flags & OS.TVHT_ONITEM) == 0) fakeSelection = true;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}", "+\t", "-\tif ((style & SWT.FULL_SELECTION) == 0) {", "-\t\tif ((lpht.flags & OS.TVHT_ONITEM) == 0 && !hooks (SWT.MeasureItem)) {", "+\tif (!selected && (style & SWT.FULL_SELECTION) == 0) {", "+\t\tif ((lpht.flags & OS.TVHT_ONITEM) == 0) {", "-\tboolean selected = true;", "-\t\thittestSelected = (tvItem.state & OS.TVIS_SELECTED) != 0;", "+\t\thittestSelected = selected || (tvItem.state & OS.TVIS_SELECTED) != 0;", "-\t/*", "-\t* Feature in Windows.  When the tree has the style", "-\t* TVS_FULLROWSELECT, the background color for the", "-\t* entire row is filled when an item is painted,", "-\t* drawing on top of any custom drawing.  The fix", "-\t* is to emulate TVS_FULLROWSELECT.", "-\t*/", "-\tboolean fakeSelection = false;", "-\tif (lpht.hItem != 0) {", "-\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "-\t\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "-\t\t\tif ((bits & OS.TVS_FULLROWSELECT) == 0) fakeSelection = true;", "-\t\t} else {", "-\t\t\tif (hooks (SWT.MeasureItem)) {", "-\t\t\t\tselected = hitTestSelection (lpht.hItem, lpht.x, lpht.y);", "-\t\t\t\tif (selected) {", "-\t\t\t\t\tif ((lpht.flags & OS.TVHT_ONITEM) == 0) fakeSelection = true;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t}", "-\tif (selected && !gestureCompleted) {", "+\tif (!gestureCompleted) {"]}], "num": 50000}