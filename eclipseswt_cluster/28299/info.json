{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f4475fa9f43ea69af930a86f7ff6be7c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d44b298cf36049742f3800b7e1d667e6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/performance/Test_org_eclipse_swt_graphics_GC.java", "commitBeforeChange": "3c3560a8a0694cddb84d310c44e8be981d7200ba", "commitAfterChange": "6a109d46b1134102ab2fd951d1b2441f44e33ab3", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "  public void test_hashCode()", "signatureAfterChange": "  public void test_hashCode()", "diff": ["-\tassertTrue(gc.hashCode() == gc.hashCode());", "-\tGC gc2 = new GC(shell);", "-\tassertFalse(gc.hashCode() == gc2.hashCode());", "-\tgc2.dispose();", "+\tPerformanceMeter meter = createMeter();", "+\tmeter.start();", "+\tfor (int i = 0; i < COUNT; i++) {", "+\t\tgc.hashCode();", "+\t}", "+\tmeter.stop();", "+\t", "+\tdisposeMeter(meter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e4d7b4d9a2dca186f6591b36b86935b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "1f174a766b5476ad0c84e8e12dd476b60439aa7a", "commitAfterChange": "13344c79de4fc1eb07ffda86acb835ae0f732c21", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "  TouchSource findTouchSource(int touchDevice, Monitor sourceMonitor)", "signatureAfterChange": "  TouchSource findTouchSource (int touchDevice, Monitor monitor)", "diff": ["-TouchSource findTouchSource(int /*long*/ touchDevice, Monitor sourceMonitor) {", "+TouchSource findTouchSource (int /*long*/ touchDevice, Monitor monitor) {", "-\tint index = 0;", "-\tTouchSource source = null;", "-", "-\twhile (index < length) {", "-\t\tif (touchSources[index] != null && touchSources[index].handle == touchDevice) {", "-\t\t\tsource = touchSources[index];", "-\t\t\tbreak;", "+\tfor (int i=0; i<length; i++) {", "+\t\tif (touchSources [i] != null && touchSources [i].handle == touchDevice) {", "+\t\t\treturn touchSources [i];", "+\t}", "+\tint index = 0;", "+\twhile (index < length) {", "+\t\tif (touchSources [index] == null) break;", "-", "-\tif (source != null) return source;", "-", "-\t\tTouchSource [] newList = new TouchSource [length + 4];", "-\t\tSystem.arraycopy(touchSources, 0, newList, 0, length);", "-\t\ttouchSources = newList;", "+\t\tTouchSource [] newTouchSources = new TouchSource [length + 4];", "+\t\tSystem.arraycopy (touchSources, 0, newTouchSources, 0, length);", "+\t\ttouchSources = newTouchSources;", "-", "-\tsource = new TouchSource(touchDevice, true, sourceMonitor.getBounds());", "-\ttouchSources [index] = source;", "-\treturn source;", "+\treturn touchSources [index] = new TouchSource (touchDevice, true, monitor.getBounds ()); "]}], "num": 28299}