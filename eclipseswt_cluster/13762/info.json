{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f5760ba4b98a65bfd1e39f2efb7af3c5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8652e506252c1aadd329a2ce2549964", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "add63531e54321a29c008d33afde4204f0cb5aee", "commitAfterChange": "96fd165a61160456fdae7b1059d270095fdb471e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["+\t", "+\t/*", "+\t* Feature in GTK.  There is no API to query the arrow", "+\t* handle from a combo box although it is possible to", "+\t* get the list and text field.  The arrow handle is needed", "+\t* to hook events.  The fix is to find the first child that is", "+\t* not the entry or list and assume this is the arrow handle.", "+\t*/", "+\tint list = OS.gtk_container_get_children (handle);", "+\tif (list != 0) {", "+\t\tint i = 0, count = OS.g_list_length (list);", "+\t\twhile (i<count) {", "+\t\t\tint childHandle = OS.g_list_nth_data (list, i);", "+\t\t\tif (childHandle != entryHandle && childHandle != listHandle) {", "+\t\t\t\tarrowHandle = childHandle;", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t\ti++;", "+\t\t}", "+\t\tOS.g_list_free (list);", "+\t}", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "794841b2636898b4b0b2ea9277a2fded", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "475110f8cb2fad975e3b958e7f0a5c8a0c59f010", "commitAfterChange": "0d66d44355244adf6ce753df2baacbf8eb205fc4", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["+\tstate &= ~CANVAS;", "+", "+\t/* Get the text and list window procs */", "+\tint hwndText = OS.GetDlgItem (handle, CBID_EDIT);", "+\tif (hwndText != 0 && EditProc == 0) {", "+\t\tEditProc = OS.GetWindowLong (hwndText, OS.GWL_WNDPROC);", "+\t}", "+\tint hwndList = OS.GetDlgItem (handle, CBID_LIST);", "+\tif (hwndList != 0 && ListProc == 0) {", "+\t\tListProc = OS.GetWindowLong (hwndList, OS.GWL_WNDPROC);", "+\t}", "+", "-\tstate &= ~CANVAS;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40d33ca96564c525fde2e3314c35a59b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "d4eb14ad4f7b1074d4935c2b9211f94b2750616d", "commitAfterChange": "7d562ae8941ad5655a314eac8dd19e3b2aaef50c", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "\r \r void setBounds (int x, int y, int width, int height, int flags)", "signatureAfterChange": "\r \r void setBounds (int x, int y, int width, int height, int flags)", "diff": ["-\tif (((rect.right - rect.left) != width) || ((rect.bottom - rect.top) != height)) {\r", "-\t\tOS.RedrawWindow (handle, null, 0, OS.RDW_ERASE | OS.RDW_INVALIDATE | OS.RDW_ALLCHILDREN);\r", "+\tif ((rect.right - rect.left) != width || (rect.bottom - rect.top) != height) {\r", "+\t\tif (OS.IsWinCE) {\t\r", "+\t\t\tint hwndText = OS.GetDlgItem (handle, CBID_EDIT);\r", "+\t\t\tif (hwndText != 0) OS.InvalidateRect (hwndText, null, true);\r", "+\t\t\tint hwndList = OS.GetDlgItem (handle, CBID_LIST);\r", "+\t\t\tif (hwndList != 0) OS.InvalidateRect (hwndList, null, true);\r", "+\t\t} else {\r", "+\t\t\tint uFlags = OS.RDW_ERASE | OS.RDW_INVALIDATE | OS.RDW_ALLCHILDREN;\r", "+\t\t\tOS.RedrawWindow (handle, null, 0, uFlags);\r", "+\t\t}\r"]}], "num": 13762}