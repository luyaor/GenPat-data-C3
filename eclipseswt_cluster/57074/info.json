{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "64e781cb635e25f53cd5ccd022e7b7d0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33109b58fa6bf11bc790a7435d842696", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "21db765cd71e211ed7a422832ea159585ff971e3", "commitAfterChange": "cfc1e42b8ee7293ce68f0fd9dcd0e1b2cb8bb08a", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": "  \tprivate int handleUserPaneDraw(int cHandle, int partCode)", "signatureAfterChange": " \t \tprivate int handleControlProc(int inCallRef, int inEvent, int cHandle)", "diff": ["-", "-\tprivate int handleUserPaneDraw(int cHandle, int partCode) {", "-\t\tint updateRgn= fUpdateRegion;", "-\t\tif (updateRgn == 0) {", "-\t\t\tupdateRgn= OS.NewRgn();", "-\t\t\tint wHandle= OS.GetControlOwner(cHandle);", "-\t\t\tOS.GetPortVisibleRegion(OS.GetWindowPort(wHandle), updateRgn);", "-\t\t}", "-\t\tint status= windowProc(cHandle, SWT.Paint, new MacControlEvent(cHandle, fUpdateRegion));", "-\t\tif (updateRgn != fUpdateRegion && updateRgn != 0)", "-\t\t\tOS.DisposeRgn(updateRgn);", "-\t\treturn status;", "-\t}", "+\t", "+\tprivate int handleControlProc(int inCallRef, int inEvent, int cHandle) {", "+\t\tint clazz= OS.GetEventClass(inEvent);", "+\t\tif (OS.GetEventClass(inEvent) == OS.kEventClassControl) {", "+\t\t\tint kind= OS.GetEventKind(inEvent);", "+\t\t\tswitch (kind) {", "+\t\t\tcase OS.kEventControlDraw:", "+\t\t\t", "+\t\t\t\tint[] gccontext= new int[1];", "+\t\t\t\tOS.GetEventParameter(inEvent, OS.kEventParamCGContextRef, OS.typeCGContextRef, null, 4, null, gccontext);", "+\t\t\t", "+\t\t\t\tint[] region= new int[1];", "+\t\t\t\tif (OS.GetEventParameter(inEvent, OS.kEventParamRgnHandle, OS.typeQDRgnHandle, null, 4, null, region) != OS.noErr)", "+\t\t\t\t\tSystem.err.println(\"kEventControlDraw: couldn't retrieve region\");", "+\t\t\t\t", "+\t\t\t\twindowProc(cHandle, SWT.Paint, new MacControlEvent(inEvent, region[0], gccontext[0]));", "+\t\t\t\treturn OS.noErr;", "+\t\t\t\t", "+\t\t\tdefault:", "+\t\t\t\tSystem.out.println(\"Display.handleControlProc: wrong event kind: \" + kind);", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t} else {", "+\t\t\tSystem.out.println(\"Display.handleControlProc: wrong event class: \" + clazz);", "+\t\t}", "+\t\treturn OS.eventNotHandledErr;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "456efdf3a40b6b67e5d84e33df5d22a8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "8f4a546302656f071aaae80c1cdabdf9312e2bf9", "commitAfterChange": "3bfcb7a837c685da281c2313b6f3e30acb61e727", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " void computeRuns ()", "signatureAfterChange": " void computeRuns ()", "diff": ["-\t\t\t\t\tint strikeout = OS.TextDecorations_Strikethrough();", "+\t\t\t\t\tint pen = 0;", "+\t\t\t\t\tif (style.strikeoutColor != null) {", "+\t\t\t\t\t\tint color = style.strikeoutColor.handle;", "+\t\t\t\t\t\tint brush = OS.gcnew_SolidColorBrush(color);", "+\t\t\t\t\t\tpen = OS.gcnew_Pen(brush, 1);", "+\t\t\t\t\t\tOS.GCHandle_Free(brush);", "+\t\t\t\t\t}", "+\t\t\t\t\tint strikeout = OS.gcnew_TextDecoration(OS.TextDecorationLocation_Strikethrough, pen, 0, OS.TextDecorationUnit_FontRecommended, OS.TextDecorationUnit_FontRecommended);", "+\t\t\t\t\tif (pen != 0) OS.GCHandle_Free(pen);", "-\t\t\t\t\tint underline = OS.TextDecorations_Underline();", "+\t\t\t\t\tint pen = 0;", "+\t\t\t\t\tif (style.underlineColor != null) {", "+\t\t\t\t\t\tint color = style.underlineColor.handle;", "+\t\t\t\t\t\tint brush = OS.gcnew_SolidColorBrush(color);", "+\t\t\t\t\t\tpen = OS.gcnew_Pen(brush, 1);", "+\t\t\t\t\t\tOS.GCHandle_Free(brush);", "+\t\t\t\t\t}", "+\t\t\t\t\tint underline = OS.gcnew_TextDecoration(OS.TextDecorationLocation_Underline, pen, 0, OS.TextDecorationUnit_FontRecommended, OS.TextDecorationUnit_FontRecommended);", "+\t\t\t\t\tif (pen != 0) OS.GCHandle_Free(pen);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35f7a02cef1db07790550628c2ad40a6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 112, "signatureBeforeChange": " void removeColumnVisual(TableColumn column)", "signatureAfterChange": " void updateHorizontalBar (int newRightX, int rightXchange)", "diff": ["- */", "-void removeColumnVisual(TableColumn column) {", "-\tint columnWidth = column.getWidth();", "-\t\t", "-\t// move following columns to the left", "-\tmoveColumns(column.getIndex(), columnWidth * -1);", "-\tredraw();", "-\tgetHeader().redraw();", "-}", "+ */", "+void updateHorizontalBar (int newRightX, int rightXchange) {", "+\tnewRightX += horizontalOffset;", "+\tScrollBar hBar = getHorizontalBar ();", "+\tint barMaximum = hBar.getMaximum ();", "+\tif (newRightX > barMaximum) {\t/* item has extended beyond previous maximum */", "+\t\thBar.setMaximum (newRightX);", "+\t\tint clientAreaWidth = getClientArea ().width;", "+\t\tint thumb = Math.min (newRightX, clientAreaWidth);", "+\t\thBar.setThumb (thumb);", "+\t\thBar.setPageIncrement (thumb);", "+\t\thBar.setVisible (clientAreaWidth <= newRightX);", "+\t\treturn;", "+\t}", "+\tint previousRightX = newRightX - rightXchange;", "+\tif (previousRightX != barMaximum) {", "+\t\t/* this was not the rightmost item, so just check for client width change */", "+\t\tint clientAreaWidth = getClientArea ().width;", "+\t\tint thumb = Math.min (barMaximum, clientAreaWidth);", "+\t\thBar.setThumb (thumb);", "+\t\thBar.setPageIncrement (thumb);", "+\t\thBar.setVisible (clientAreaWidth <= barMaximum);", "+\t\treturn;", "+\t}", "+\tupdateHorizontalBar ();\t\t/* must search for the new rightmost item */", "+}"]}], "num": 57074}