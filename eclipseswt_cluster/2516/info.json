{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "907d116a26e47946a24bef4565b9b955", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42b90c7fbfa5ec528ddc1957639a4c37", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "b70eece9fa211b52cf66a04a6e755c2252498108", "commitAfterChange": "b87ca47e323c90369c28285f7daf0d6d4b2db3c2", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 151, "signatureBeforeChange": " LineCache getLineCache(StyledTextContent content)", "signatureAfterChange": "\r LineCache getLineCache(StyledTextContent content)", "diff": ["- */", "-LineCache getLineCache(StyledTextContent content) {", "-    LineCache lineCache;", "-    ", "-\tif (wordWrap) {", "-\t    lineCache = new WordWrapCache(this, (WrappedContent) content);", "-\t}", "-\telse {", "-\t    lineCache = new ContentWidthCache(this, content.getLineCount());", "-\t}", "-\treturn lineCache;", "-}", "+ */\r", "+LineCache getLineCache(StyledTextContent content) {\r", "+    LineCache lineCache;\r", "+    \r", "+\tif (wordWrap) {\r", "+\t    lineCache = new WordWrapCache(this, (WrappedContent) content);\r", "+\t}\r", "+\telse {\r", "+\t    lineCache = new ContentWidthCache(this, content);\r", "+\t}\r", "+\treturn lineCache;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28a9276fa728bb0d5993995432fe12c4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "b70eece9fa211b52cf66a04a6e755c2252498108", "commitAfterChange": "b87ca47e323c90369c28285f7daf0d6d4b2db3c2", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " public StyledText(Composite parent, int style)", "signatureAfterChange": "\r public StyledText(Composite parent, int style)", "diff": ["- */", "-public StyledText(Composite parent, int style) {", "-\tsuper(parent, checkStyle(style | SWT.NO_REDRAW_RESIZE | SWT.NO_BACKGROUND));", "-\t// set the bg/fg in the OS to ensure that these are the same as StyledText, necessary", "-\t// for ensuring that the bg/fg the IME box uses is the same as what StyledText uses", "-\tsuper.setForeground(getForeground());", "-\tsuper.setBackground(getBackground());", "-\tDisplay display = getDisplay();", "-\tboolean isRightOriented = (getStyle() & SWT.MIRRORED) != 0;", "-\tisBidi = StyledTextBidi.isBidiPlatform() || isRightOriented;", "-\tif ((style & SWT.READ_ONLY) != 0) {", "-\t\tsetEditable(false);", "-\t}", "-\tif ((style & SWT.BORDER) == 0 || (style & SWT.SINGLE) == 0) {", "-\t\tleftMargin = topMargin = rightMargin = bottomMargin = 0;", "-\t}", "-\tclipboard = new Clipboard(display);", "-\tinstallDefaultContent();", "-\tinitializeRenderer();", "-\tif ((style & SWT.WRAP) != 0) {", "-\t\tsetWordWrap(true);", "-\t}", "-\telse {", "-\t    lineCache = new ContentWidthCache(this, content.getLineCount());", "-\t}\t", "-\tif (isBidi() == false) {", "-\t\tCaret caret = new Caret(this, SWT.NULL);", "-\t\tcaret.setSize(1, caret.getSize().y);", "-\t} ", "-\telse {", "-\t\tcreateCaretBitmaps();", "-\t\tif (isRightOriented) {", "-\t\t\tBidiUtil.setKeyboardLanguage(BidiUtil.KEYBOARD_BIDI);", "-\t\t}", "-\t\tnew Caret(this, SWT.NULL);\t\t\t", "-\t\tsetBidiCaretDirection();", "-\t\tRunnable runnable = new Runnable() {", "-\t\t\tpublic void run() {", "-\t\t\t\t// setBidiCaretLocation calculates caret location like during ", "-\t\t\t\t// cursor movement and takes keyboard language into account. ", "-\t\t\t\t// Fixes 1GKPYMK", "-\t\t\t\tsetBidiCaretLocation(null);", "-\t\t\t}", "-\t\t};", "-\t\tStyledTextBidi.addLanguageListener(this, runnable);", "-\t}", "-\t", "-\tString platform= SWT.getPlatform();", "-\tisCarbon = \"carbon\".equals(platform);\t", "-\t", "-\t// set the caret width, the height of the caret will default to the line height", "-\tcalculateScrollBars();", "-\tcreateKeyBindings();", "-\tibeamCursor = new Cursor(display, SWT.CURSOR_IBEAM);", "-\tsetCursor(ibeamCursor);", "-\tinstallListeners();", "-\tinstallDefaultLineStyler();", "-}", "+ */\r", "+public StyledText(Composite parent, int style) {\r", "+\tsuper(parent, checkStyle(style | SWT.NO_REDRAW_RESIZE | SWT.NO_BACKGROUND));\r", "+\t// set the bg/fg in the OS to ensure that these are the same as StyledText, necessary\r", "+\t// for ensuring that the bg/fg the IME box uses is the same as what StyledText uses\r", "+\tsuper.setForeground(getForeground());\r", "+\tsuper.setBackground(getBackground());\r", "+\tDisplay display = getDisplay();\r", "+\tboolean isRightOriented = (getStyle() & SWT.MIRRORED) != 0;\r", "+\tisBidi = StyledTextBidi.isBidiPlatform() || isRightOriented;\r", "+\tif ((style & SWT.READ_ONLY) != 0) {\r", "+\t\tsetEditable(false);\r", "+\t}\r", "+\tif ((style & SWT.BORDER) == 0 || (style & SWT.SINGLE) == 0) {\r", "+\t\tleftMargin = topMargin = rightMargin = bottomMargin = 0;\r", "+\t}\r", "+\tclipboard = new Clipboard(display);\r", "+\tinstallDefaultContent();\r", "+\tinitializeRenderer();\r", "+\tif ((style & SWT.WRAP) != 0) {\r", "+\t\tsetWordWrap(true);\r", "+\t}\r", "+\telse {\r", "+\t    lineCache = new ContentWidthCache(this, content);\r", "+\t}\t\r", "+\tif (isBidi() == false) {\r", "+\t\tCaret caret = new Caret(this, SWT.NULL);\r", "+\t\tcaret.setSize(1, caret.getSize().y);\r", "+\t} \r", "+\telse {\r", "+\t\tcreateCaretBitmaps();\r", "+\t\tif (isRightOriented) {\r", "+\t\t\tBidiUtil.setKeyboardLanguage(BidiUtil.KEYBOARD_BIDI);\r", "+\t\t}\r", "+\t\tnew Caret(this, SWT.NULL);\t\t\t\r", "+\t\tsetBidiCaretDirection();\r", "+\t\tRunnable runnable = new Runnable() {\r", "+\t\t\tpublic void run() {\r", "+\t\t\t\t// setBidiCaretLocation calculates caret location like during \r", "+\t\t\t\t// cursor movement and takes keyboard language into account. \r", "+\t\t\t\t// Fixes 1GKPYMK\r", "+\t\t\t\tsetBidiCaretLocation(null);\r", "+\t\t\t}\r", "+\t\t};\r", "+\t\tStyledTextBidi.addLanguageListener(this, runnable);\r", "+\t}\r", "+\t\r", "+\tString platform= SWT.getPlatform();\r", "+\tisCarbon = \"carbon\".equals(platform);\t\r", "+\t\r", "+\t// set the caret width, the height of the caret will default to the line height\r", "+\tcalculateScrollBars();\r", "+\tcreateKeyBindings();\r", "+\tibeamCursor = new Cursor(display, SWT.CURSOR_IBEAM);\r", "+\tsetCursor(ibeamCursor);\r", "+\tinstallListeners();\r", "+\tinstallDefaultLineStyler();\r", "+}\r"]}], "num": 2516}