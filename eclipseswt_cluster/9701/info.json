{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7251ff1ec97f16422e2d652775280dc6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34fca35f4dcca8d0e7a43fc59308b8d8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/gtk/org/eclipse/swt/internal/gtk/OS.java", "commitBeforeChange": "50c09de4a56d0cb9a2785e0143f4e09696aa0da3", "commitAfterChange": "4faa718e848bca5a7335031d1c00baad23787159", "methodNumberBeforeChange": 923, "methodNumberAfterChange": 1716, "signatureBeforeChange": " public static final synchronized native boolean pango_layout_line_x_to_index(int line, int x_pos, int[] index_, int[] trailing);", "signatureAfterChange": " public static final boolean pango_layout_line_x_to_index(int line, int x_pos, int[] index_, int[] trailing)", "diff": ["-public static final synchronized native void pango_layout_line_get_extents(int /*long*/ line, PangoRectangle ink_rect, PangoRectangle logical_rect);", "-public static final synchronized native boolean pango_layout_line_x_to_index(int /*long*/ line, int x_pos, int[] index_, int[] trailing);", "+public static final native boolean _pango_layout_line_x_to_index(int /*long*/ line, int x_pos, int[] index_, int[] trailing);", "+public static final boolean pango_layout_line_x_to_index(int /*long*/ line, int x_pos, int[] index_, int[] trailing) {", "+\tlock.lock();", "+\ttry {", "+\t\treturn _pango_layout_line_x_to_index(line, x_pos, index_, trailing);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbefa085e624fca1ca2a5f6241e5a467", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/gtk/org/eclipse/swt/internal/gtk/OS.java", "commitBeforeChange": "50c09de4a56d0cb9a2785e0143f4e09696aa0da3", "commitAfterChange": "4faa718e848bca5a7335031d1c00baad23787159", "methodNumberBeforeChange": 692, "methodNumberAfterChange": 1304, "signatureBeforeChange": " public static final synchronized native boolean gtk_tree_view_column_cell_get_position(int tree_column, int cell_renderer, int[] start_pos, int[] width);", "signatureAfterChange": " public static final boolean gtk_tree_view_column_cell_get_position(int tree_column, int cell_renderer, int[] start_pos, int[] width)", "diff": ["-public static final synchronized native void gtk_tree_view_column_add_attribute(int /*long*/ treeColumn, int /*long*/ cellRenderer, byte[] attribute, int column);", "-public static final synchronized native boolean gtk_tree_view_column_cell_get_position(int /*long*/ tree_column, int /*long*/ cell_renderer, int[] start_pos, int[] width);", "+public static final native boolean _gtk_tree_view_column_cell_get_position(int /*long*/ tree_column, int /*long*/ cell_renderer, int[] start_pos, int[] width);", "+public static final boolean gtk_tree_view_column_cell_get_position(int /*long*/ tree_column, int /*long*/ cell_renderer, int[] start_pos, int[] width) {", "+\tlock.lock();", "+\ttry {", "+\t\treturn _gtk_tree_view_column_cell_get_position(tree_column, cell_renderer, start_pos, width);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e3ad84972c18fdda794921f2bef2f3d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/gtk/org/eclipse/swt/internal/gtk/OS.java", "commitBeforeChange": "50c09de4a56d0cb9a2785e0143f4e09696aa0da3", "commitAfterChange": "4faa718e848bca5a7335031d1c00baad23787159", "methodNumberBeforeChange": 220, "methodNumberAfterChange": 360, "signatureBeforeChange": " public static final synchronized native boolean gdk_colormap_alloc_color(int colormap, GdkColor color, boolean writeable, boolean best_match);", "signatureAfterChange": " public static final boolean gdk_colormap_alloc_color(int colormap, GdkColor color, boolean writeable, boolean best_match)", "diff": ["-public static final synchronized native boolean gdk_color_white(int /*long*/ colormap, GdkColor color);", "-public static final synchronized native boolean gdk_colormap_alloc_color(int /*long*/ colormap, GdkColor color, boolean writeable, boolean best_match);", "+public static final native boolean _gdk_colormap_alloc_color(int /*long*/ colormap, GdkColor color, boolean writeable, boolean best_match);", "+public static final boolean gdk_colormap_alloc_color(int /*long*/ colormap, GdkColor color, boolean writeable, boolean best_match) {", "+\tlock.lock();", "+\ttry {", "+\t\treturn _gdk_colormap_alloc_color(colormap, color, writeable, best_match);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09c3b797e7ab8556afd8a8c54fd98679", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/gtk/org/eclipse/swt/internal/gtk/OS.java", "commitBeforeChange": "50c09de4a56d0cb9a2785e0143f4e09696aa0da3", "commitAfterChange": "4faa718e848bca5a7335031d1c00baad23787159", "methodNumberBeforeChange": 206, "methodNumberAfterChange": 332, "signatureBeforeChange": " public static final synchronized native int g_type_register_static (int parent_type, byte[] type_name, int info, int flags);", "signatureAfterChange": " public static final int g_type_register_static (int parent_type, byte[] type_name, int info, int flags)", "diff": ["-public static final synchronized native void g_type_query (int /*long*/ type, int /*long*/ query);", "-public static final synchronized native int /*long*/ g_type_register_static (int /*long*/ parent_type, byte[] type_name, int /*long*/ info, int flags);", "+public static final native int /*long*/ _g_type_register_static (int /*long*/ parent_type, byte[] type_name, int /*long*/ info, int flags);", "+public static final int /*long*/ g_type_register_static (int /*long*/ parent_type, byte[] type_name, int /*long*/ info, int flags) {", "+\tlock.lock();", "+\ttry {", "+\t\treturn _g_type_register_static(parent_type, type_name, info, flags);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fbd9e3d5b4d04f2754939aedb0f2efa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/motif/org/eclipse/swt/internal/motif/OS.java", "commitBeforeChange": "50c09de4a56d0cb9a2785e0143f4e09696aa0da3", "commitAfterChange": "4faa718e848bca5a7335031d1c00baad23787159", "methodNumberBeforeChange": 250, "methodNumberAfterChange": 491, "signatureBeforeChange": " public static final synchronized native int XmRenderTableAddRenditions(int oldTable, int[] renditions, int renditionCount, int mergeMode);", "signatureAfterChange": " public static final int XmRenderTableAddRenditions(int oldTable, int[] renditions, int renditionCount, int mergeMode)", "diff": ["-public static final synchronized native boolean XmProcessTraversal(int widget, int dir);", "-public static final synchronized native int XmRenderTableAddRenditions(int oldTable, int[] renditions, int renditionCount, int mergeMode);", "+public static final native int _XmRenderTableAddRenditions(int oldTable, int[] renditions, int renditionCount, int mergeMode);", "+public static final int XmRenderTableAddRenditions(int oldTable, int[] renditions, int renditionCount, int mergeMode) {", "+\tlock.lock();", "+\ttry {", "+\t\treturn _XmRenderTableAddRenditions(oldTable, renditions, renditionCount, mergeMode);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}], "num": 9701}