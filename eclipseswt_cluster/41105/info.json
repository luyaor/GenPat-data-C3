{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4b206929eb3bed739359107b6eb1f25c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1fb246cf6713d3c871dd6b0a92865d2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleControlSite.java", "commitBeforeChange": "bd432d5503e3b467245c44ddc188a8b0b6ceca5a", "commitAfterChange": "c4f953c90faceb32a6a69ff132cd69cd560b6bd5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r private void connectEventSink()", "signatureAfterChange": "\r void addEventListener(int iunknown, GUID guid, int eventID, OleListener listener)", "diff": ["+}\r", "+void addEventListener(int iunknown, GUID guid, int eventID, OleListener listener) {\r", "+\tif (listener == null || iunknown == 0 || guid == null) OLE.error (SWT.ERROR_NULL_ARGUMENT);\r", "+\t// have we connected to this kind of event sink before?\r", "+\tint index = -1;\r", "+\tfor (int i = 0; i < oleEventSinkGUID.length; i++) {\r", "+\t\tif (COM.IsEqualGUID(oleEventSinkGUID[i], guid)) {\r", "+\t\t\tif (iunknown == oleEventSinkIUnknown[i]) {\r", "+\t\t\t\tindex = i; \r", "+\t\t\t\tbreak;\r", "+\t\t\t}\r", "+\t\t}\r", "+\t}\r", "+\tif (index != -1) {\r", "+\t\toleEventSink[index].addListener(eventID, listener);\r", "+\t} else {\r", "+\t\tint oldLength = oleEventSink.length;\r", "+\t\tOleEventSink[] newOleEventSink = new OleEventSink[oldLength + 1];\r", "+\t\tGUID[] newOleEventSinkGUID = new GUID[oldLength + 1];\r", "+\t\tint[] newOleEventSinkIUnknown = new int[oldLength + 1];\r", "+\t\tSystem.arraycopy(oleEventSink, 0, newOleEventSink, 0, oldLength);\r", "+\t\tSystem.arraycopy(oleEventSinkGUID, 0, newOleEventSinkGUID, 0, oldLength);\r", "+\t\tSystem.arraycopy(oleEventSinkIUnknown, 0, newOleEventSinkIUnknown, 0, oldLength);\r", "+\t\toleEventSink = newOleEventSink;\r", "+\t\toleEventSinkGUID = newOleEventSinkGUID;\r", "+\t\toleEventSinkIUnknown = newOleEventSinkIUnknown;\r", "+\t\t\r", "+\t\toleEventSink[oldLength] = new OleEventSink(this, iunknown, guid);\r", "+\t\toleEventSinkGUID[oldLength] = guid;\r", "+\t\toleEventSinkIUnknown[oldLength] = iunknown;\r", "+\t\toleEventSink[oldLength].AddRef();\r", "+\t\toleEventSink[oldLength].connect();\r", "+\t\toleEventSink[oldLength].addListener(eventID, listener);\r", "+\t\t\r", "+\t}\r", "-private void connectEventSink() {\r", "-\toleEventSink = new OleEventSink(this);\r", "-\toleEventSink.AddRef();\r", "-\toleEventSink.connect(objIUnknown);\r", "-}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd749c64872ccd9b182be87c37b75a5e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleControlSite.java", "commitBeforeChange": "6b926f942deba913dd5d0080fd5d2d84fde42797", "commitAfterChange": "40fb376e304991eb2f10a072a9bab714d59c76b4", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "\r void removeEventListener(int iunknown, GUID guid, int eventID, OleListener listener)", "signatureAfterChange": "\r void removeEventListener(int iunknown, GUID guid, int eventID, OleListener listener)", "diff": ["+\t\t\t\tif (!oleEventSink[i].hasListeners()) {\r", "+\t\t\t\t\t//free resources associated with event sink\r", "+\t\t\t\t\toleEventSink[i].disconnect();\r", "+\t\t\t\t\toleEventSink[i].Release();\r", "+\t\t\t\t\tint oldLength = oleEventSink.length;\r", "+\t\t\t\t\tif (oldLength == 1) {\r", "+\t\t\t\t\t\toleEventSink = new OleEventSink[0];\r", "+\t\t\t\t\t\toleEventSinkGUID = new GUID[0];\r", "+\t\t\t\t\t\toleEventSinkIUnknown = new int[0];\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\tOleEventSink[] newOleEventSink = new OleEventSink[oldLength - 1];\r", "+\t\t\t\t\t\tSystem.arraycopy(oleEventSink, 0, newOleEventSink, 0, i);\r", "+\t\t\t\t\t\tSystem.arraycopy(oleEventSink, i + 1, newOleEventSink, 0, oldLength - i - 1);\r", "+\t\t\t\t\t\toleEventSink = newOleEventSink;\r", "+\t\t\t\t\t\t\r", "+\t\t\t\t\t\tGUID[] newOleEventSinkGUID = new GUID[oldLength - 1];\r", "+\t\t\t\t\t\tSystem.arraycopy(oleEventSinkGUID, 0, newOleEventSinkGUID, 0, i);\r", "+\t\t\t\t\t\tSystem.arraycopy(oleEventSinkGUID, i + 1, newOleEventSinkGUID, 0, oldLength - i - 1);\r", "+\t\t\t\t\t\toleEventSinkGUID = newOleEventSinkGUID;\r", "+\t\t\t\t\t\t\r", "+\t\t\t\t\t\tint[] newOleEventSinkIUnknown = new int[oldLength - 1];\r", "+\t\t\t\t\t\tSystem.arraycopy(oleEventSinkIUnknown, 0, newOleEventSinkIUnknown, 0, i);\r", "+\t\t\t\t\t\tSystem.arraycopy(oleEventSinkIUnknown, i + 1, newOleEventSinkIUnknown, 0, oldLength - i - 1);\r", "+\t\t\t\t\t\toleEventSinkIUnknown = newOleEventSinkIUnknown;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r"]}], "num": 41105}