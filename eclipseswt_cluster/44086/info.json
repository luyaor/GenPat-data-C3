{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cec7c48558d4f2fd7549580770996e07", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bdda6892e7b4ed8025a6c53fff40ab2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "179e1e8feb58af613b2d9e2d8a1b0f959cbc3d62", "commitAfterChange": "67f57a1503dff18128d85f6be9ce1151c584d527", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 94, "signatureBeforeChange": " public void setColumnOrder (int [] order)", "signatureAfterChange": " public void setColumnOrder (int [] order)", "diff": ["-\t// TODO", "+\tif (columns.length == 0) {", "+\t\tif (order.length != 0) error (SWT.ERROR_INVALID_ARGUMENT);", "+\t\treturn;", "+\t}", "+\tif (order.length != columns.length) error (SWT.ERROR_INVALID_ARGUMENT);", "+\tboolean reorder = false;", "+\tboolean [] seen = new boolean [columns.length];", "+\tint[] oldOrder = getColumnOrder ();", "+\tfor (int i = 0; i < order.length; i++) {", "+\t\tint index = order [i];", "+\t\tif (index < 0 || index >= columns.length) error (SWT.ERROR_INVALID_RANGE);", "+\t\tif (seen [index]) error (SWT.ERROR_INVALID_ARGUMENT);", "+\t\tseen [index] = true;", "+\t\tif (index != oldOrder [i]) reorder = true;", "+\t}", "+\tif (!reorder) return;", "+", "+\tint[] oldX = new int [columns.length];", "+\tfor (int i = 0; i < columns.length; i++) {", "+\t\toldX [i] = columns [i].getX ();", "+\t}", "+\torderedColumns = new TableColumn [order.length];", "+\tfor (int i = 0; i < order.length; i++) {", "+\t\torderedColumns [i] = columns [order [i]];", "+\t}", "+\tfor (int i = 0; i < orderedColumns.length; i++) {", "+\t\tTableColumn column = orderedColumns [i];", "+\t\tif (!column.isDisposed () && column.getX () != oldX [column.getIndex ()]) {", "+\t\t\tcolumn.sendEvent (SWT.Move);", "+\t\t}", "+\t}", "+", "+\tredraw ();", "+\tif (header.isVisible ()) header.redraw ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed4c5a6e48b9246e257eeadffb9438af", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "15cd4b3b02a9366a3c91dffa7606a25c162b7d95", "commitAfterChange": "b6dab3dc248d9135e08e65943e15a6ae36c16846", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 79, "signatureBeforeChange": " public void setColumnOrder (int [] order)", "signatureAfterChange": " public void setColumnOrder (int [] order)", "diff": ["-\t//TODO", "+\tif (order.length != columnCount) error (SWT.ERROR_INVALID_ARGUMENT);", "+\tint [] oldOrder = getColumnOrder ();", "+\tboolean reorder = false;", "+\tboolean [] seen = new boolean [columnCount];", "+\tfor (int i=0; i<order.length; i++) {", "+\t\tint index = order [i];", "+\t\tif (index < 0 || index >= columnCount) error (SWT.ERROR_INVALID_ARGUMENT);", "+\t\tif (seen [index]) error (SWT.ERROR_INVALID_ARGUMENT);", "+\t\tseen [index] = true;", "+\t\tif (order [i] != oldOrder [i]) reorder = true;", "+\t}", "+\tif (!reorder) return;", "+\tint gvColumns = OS.GridView_Columns (gridViewHandle);", "+\tfor (int i = 0; i < order.length; i++) {", "+\t\tTableColumn column = columns [order [i]];", "+\t\tint index = OS.IList_IndexOf (gvColumns, column.handle);", "+\t\tif (index != i) OS.ObservableCollectionGridViewColumn_Move (gvColumns, index, i);\t", "+\t}", "+\tOS.GCHandle_Free (gvColumns);"]}], "num": 44086}