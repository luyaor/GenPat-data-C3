{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "958da4573babc6acf8f74e69b536221a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "898f4335882e0811f3310082570d445f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "d6a36d8b7f3dd367aff8479d4445ce8e13db19a6", "commitAfterChange": "156b3671e8f8498d491d682297aab9ef33479ff6", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " public int getLineCap()", "signatureAfterChange": " public int getLineCap()", "diff": ["-\t\tOS.GetObject(hPen, size, logPen);", "+\t\tif (size <= EXTLOGPEN.sizeof) {", "+\t\t\tOS.GetObject(hPen, size, logPen);", "+\t\t} else {", "+\t\t\tint hHeap = OS.GetProcessHeap();", "+\t\t\tint ptr = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, size);", "+\t\t\tOS.GetObject(hPen, size, ptr);", "+\t\t\tOS.MoveMemory(logPen, ptr, EXTLOGPEN.sizeof);", "+\t\t\tOS.HeapFree(hHeap, 0, ptr);", "+\t\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b9e9e01831c484010509db6300c820f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "d6a36d8b7f3dd367aff8479d4445ce8e13db19a6", "commitAfterChange": "156b3671e8f8498d491d682297aab9ef33479ff6", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 53, "signatureBeforeChange": " public int getLineWidth()", "signatureAfterChange": " public int getLineWidth()", "diff": ["-\t\tOS.GetObject(hPen, size, logPen);", "+\t\tif (size <= EXTLOGPEN.sizeof) {", "+\t\t\tOS.GetObject(hPen, size, logPen);", "+\t\t} else {", "+\t\t\tint hHeap = OS.GetProcessHeap();", "+\t\t\tint ptr = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, size);", "+\t\t\tOS.GetObject(hPen, size, ptr);", "+\t\t\tOS.MoveMemory(logPen, ptr, EXTLOGPEN.sizeof);", "+\t\t\tOS.HeapFree(hHeap, 0, ptr);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e4c6da96b0ef1c84077b8d300c3cadd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "5aebd96e6e03d77d1ec1be3bdce35459d0a39900", "commitAfterChange": "da8686b28118a56acbe181513b1c7f6508988143", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  static int createGdipFont(int hDC, int hFont)", "signatureAfterChange": " static int createGdipFont(int hDC, int hFont, int graphics, int[] outFont)", "diff": ["-", "-static int /*long*/ createGdipFont(int /*long*/ hDC, int /*long*/ hFont) {", "+static int /*long*/ createGdipFont(int /*long*/ hDC, int /*long*/ hFont, int /*long*/ graphics, int /*long*/[] outFont) {", "+\t\tif (outFont != null) {", "+\t\t\tint /*long*/ hHeap = OS.GetProcessHeap();", "+\t\t\tint pLogFont = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, LOGFONTW.sizeof);", "+\t\t\tGdip.Font_GetLogFontW(font, graphics, pLogFont);", "+\t\t\toutFont[0] = OS.CreateFontIndirectW(pLogFont);", "+\t\t\tOS.HeapFree(hHeap, 0, pLogFont);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a052638981b1914b8cb519aa502db1af", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "d6a36d8b7f3dd367aff8479d4445ce8e13db19a6", "commitAfterChange": "156b3671e8f8498d491d682297aab9ef33479ff6", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 51, "signatureBeforeChange": " public int getLineJoin()", "signatureAfterChange": " public int getLineJoin()", "diff": ["-\t\tOS.GetObject(hPen, size, logPen);", "+\t\tif (size <= EXTLOGPEN.sizeof) {", "+\t\t\tOS.GetObject(hPen, size, logPen);", "+\t\t} else {", "+\t\t\tint hHeap = OS.GetProcessHeap();", "+\t\t\tint ptr = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, size);", "+\t\t\tOS.GetObject(hPen, size, ptr);", "+\t\t\tOS.MoveMemory(logPen, ptr, EXTLOGPEN.sizeof);", "+\t\t\tOS.HeapFree(hHeap, 0, ptr);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a845ea9b17270612e31661ad52157b1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/cocoa/org/eclipse/swt/printing/Printer.java", "commitBeforeChange": "367e51305c2bcc3c55811c1630b119c94d774080", "commitAfterChange": "64dd74abceaffd6fd714781a32013e0db4bfab22", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " protected void create(DeviceData deviceData)", "signatureAfterChange": " protected void create(DeviceData deviceData)", "diff": ["-\tview = (NSView)new NSView().alloc();", "+\tString className = \"SWTPrinterView\"; //$NON-NLS-1$", "+\tif (OS.objc_lookUpClass(className) == 0) {", "+\t\tIsFlipped = new Callback(getClass(), \"isFlipped\", 2); //$NON-NLS-1$", "+\t\tint /*long*/ cls = OS.objc_allocateClassPair(OS.class_NSView, className, 0);", "+\t\tOS.class_addMethod(cls, OS.sel_isFlipped, IsFlipped.getAddress(), \"@:\");", "+\t\tOS.objc_registerClassPair(cls);", "+\t}", "+\tview = (NSView)new SWTPrinterView().alloc();"]}], "num": 25066}