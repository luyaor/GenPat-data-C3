{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5dce982510cffa31e93370c171f69c01", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae7ac25c300be26faf45d8ed7e14cd1e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "eda2a2418c4450b2d104d71f5bf6f8ca33cebc34", "commitAfterChange": "531850a3e0806300795ef7d038564fab44c70aee", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " boolean setKeyState (Event event, XKeyEvent xEvent)", "signatureAfterChange": " boolean setKeyState (Event event, XKeyEvent xEvent)", "diff": ["-\tboolean isNull = false;", "-\t", "-\t/*", "-\t* Bug in MOTIF.  On Solaris only, XK_F11 and XK_F12 are not", "-\t* translated correctly by XLookupString().  They are mapped", "-\t* to 0x1005FF10 and 0x1005FF11 respectively.  The fix is to", "-\t* look for these values explicitly and correct them.", "-\t*/", "-\tif (OS.IsSunOS && keysym [0] != 0) {", "-\t\tswitch (keysym [0]) {", "-\t\t\tcase 0x1005FF10: ", "-\t\t\t\tkeysym [0] = OS.XK_F11;", "-\t\t\t\tbuffer [0] = 0;", "-\t\t\t\tbreak;", "-\t\t\tcase 0x1005FF11:", "-\t\t\t\tkeysym [0] = OS.XK_F12;", "-\t\t\t\tbuffer [0] = 0;", "-\t\t\t\tbreak;", "-\t\t}", "-\t\t/*", "-\t\t* Bug in MOTIF.  On Solaris only, there is garbage in the", "-\t\t* high 16-bits for Keysyms such as XK_Down.  Since Keysyms", "-\t\t* must be 16-bits to fit into a Character, mask away the", "-\t\t* high 16-bits on all platforms.", "-\t\t*/", "-\t\tkeysym [0] &= 0xFFFF;", "-\t}", "-\t", "-\t/*", "-\t* Bug in Motif.  On HP-UX only, Shift+F9, Shift+F10, Shift+F11", "-\t* and Shift+F12 are not translated correctly by XLookupString().", "-\t* The fix is to look for these values explicitly and correct them.", "-\t*/", "-\tif (OS.IsHPUX && keysym [0] != 0) {", "-\t\tswitch (keysym [0]) {", "-\t\t\tcase 0xFF91: keysym [0] = OS.XK_F9; break;", "-\t\t\tcase 0xFF92: keysym [0] = OS.XK_F10; break;", "-\t\t\tcase 0xFF93: keysym [0] = OS.XK_F11; break;", "-\t\t\tcase 0xFF94: keysym [0] = OS.XK_F12; break;", "-\t\t}", "-\t}", "-\t", "-\t/*", "-\t* Feature in MOTIF. For some reason, XLookupString() fails ", "-\t* to translate both the keysym and the character when the", "-\t* control key is down.  For example, Ctrl+2 has the correct", "-\t* keysym value (50) but no character value, while Ctrl+/ has", "-\t* the keysym value (2F) but an invalid character value", "-\t* (1F).  It seems that Motif is applying the algorithm to", "-\t* convert a character to a control character for characters", "-\t* that are not valid control characters.  The fix is to test", "-\t* for 7-bit ASCII keysym values that fall outside of the", "-\t* the valid control character range and use the keysym value", "-\t* as the character, not the incorrect value that XLookupString()", "-\t* returns.  Even though lower case values are not strictly", "-\t* valid control characters, they are included in the range.", "-\t* ", "-\t* Some other cases include Ctrl+3..Ctr+8, Ctrl+[.", "-\t*/", "-\tint key = keysym [0];", "-\tif ((xEvent.state & OS.ControlMask) != 0) {", "-\t\tif (0 <= key && key <= 0x7F) {", "-\t\t\tif ('a' <= key && key <= 'z') key -= 'a' - 'A';", "-\t\t\tif (!(64 <= key && key <= 95)) buffer [0] = (byte) key;", "-\t\t\tisNull = key == '@' && buffer [0] == 0;", "-\t\t} else {", "-\t\t\tswitch (keysym [0]) {", "-\t\t\t\tcase OS.XK_KP_0: buffer [0] = '0'; break;", "-\t\t\t\tcase OS.XK_KP_1: buffer [0] = '1'; break;", "-\t\t\t\tcase OS.XK_KP_2: buffer [0] = '2'; break;", "-\t\t\t\tcase OS.XK_KP_3: buffer [0] = '3'; break;", "-\t\t\t\tcase OS.XK_KP_4: buffer [0] = '4'; break;", "-\t\t\t\tcase OS.XK_KP_5: buffer [0] = '5'; break;", "-\t\t\t\tcase OS.XK_KP_6: buffer [0] = '6'; break;", "-\t\t\t\tcase OS.XK_KP_7: buffer [0] = '7'; break;", "-\t\t\t\tcase OS.XK_KP_8: buffer [0] = '8'; break;", "-\t\t\t\tcase OS.XK_KP_9: buffer [0] = '9'; break;", "-\t\t\t}", "-\t\t}", "-\t}", "-\t", "-\t/*", "-\t* Bug in Motif.  There are some keycodes for which ", "-\t* XLookupString() does not translate the character.", "-\t* Some of examples are Shift+Tab and Ctrl+Space.", "-\t*/", "-\tswitch (keysym [0]) {", "-\t\tcase OS.XK_KP_Delete: buffer [0] = 0x7f; break;", "-\t\tcase OS.XK_ISO_Left_Tab: buffer [0] = '\\t'; break;", "-\t\tcase OS.XK_space: buffer [0] = ' '; break;", "-\t}", "-\t\t", "-\t/* Fill in the event keyCode or character */", "+\tboolean isNull = display.fixKey (keysym, buffer, xEvent.state);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf45d2692fc0b0a8152c990f3abe93bd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "eb0dd46e7194a9f7d813095a5dca290fae54babc", "commitAfterChange": "8174cf2444655210718c9dde4ae430f251492a85", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "\r \r int processKey (int info)", "signatureAfterChange": "\r \r int processKey (int info)", "diff": ["+\r", "+\t/* Ignore repeating modifier keys */\r", "-\t/* Determine if this is a traverse event */\r", "+\t/* Determine event type */\r", "+\tint type = SWT.KeyUp;\r", "-\t\t\r", "+\t\ttype = SWT.KeyDown;\r", "+\t}\r", "+\r", "+\t/* Determine if this is a traverse event */\r", "+\tif (type == SWT.KeyDown) {\r", "+\r", "-\tDisplay display = getDisplay ();\r", "+\r", "-\tint type = SWT.KeyUp;\r", "-\tif ((ke.key_flags & (OS.Pk_KF_Key_Down | OS.Pk_KF_Key_Repeat)) != 0) {\r", "-\t\ttype = SWT.KeyDown;\r", "-\t}\r", "-\tint key = 0;\r", "-\tif ((ke.key_flags & OS.Pk_KF_Sym_Valid) != 0) {\r", "-\t\t key = ke.key_sym;\r", "-\t} else {\r", "-\t\tif ((ke.key_flags & OS.Pk_KF_Cap_Valid) != 0 && type == SWT.KeyDown) {\r", "-\t\t\tkey = ke.key_cap;\r", "-\t\t\tif ((ke.key_mods & OS.Pk_KM_Ctrl) != 0) {\r", "-\t\t\t\tif ('a'  <= key && key <= 'z') key -= 'a' - 'A';\r", "-\t\t\t\tif (64 <= key && key <= 95) key -= 64;\r", "-\t\t\t}\r", "-\t\t}\r", "-\t}\r", "-\tevent.keyCode = Display.translateKey (key);\r", "-\tif (event.keyCode == 0) {\r", "-\t\tswitch (key) {\r", "-\t\t\tcase OS.Pk_BackSpace:\tevent.character = '\\b'; break;\r", "-\t\t\tcase OS.Pk_KP_Tab:\r", "-\t\t\tcase OS.Pk_Tab: \t\t\t\tevent.character = '\\t'; break;\r", "-\t\t\tcase OS.Pk_Linefeed:\t\tevent.character = '\\n'; break;\r", "-\t\t\tcase OS.Pk_Clear: \t\t\tevent.character = 0xB; break;\r", "-\t\t\tcase OS.Pk_Return: \t\t\tevent.character = '\\r'; break;\r", "-\t\t\tcase OS.Pk_Pause:\t\t\tevent.character = 0x13; break;\r", "-\t\t\tcase OS.Pk_Scroll_Lock:\tevent.character = 0x14; break;\r", "-\t\t\tcase OS.Pk_Escape:\t\tevent.character = 0x1B; break;\r", "-\t\t\tcase OS.Pk_Delete:\t\t\tevent.character = 0x7F; break;\r", "-\t\t\tdefault:\r", "-\t\t\t\tevent.character = (char) key;\r", "-\t\t}\r", "-\t}\r", "+\tsetKeyState (event, ke);\r", "+\tDisplay display = getDisplay ();\r", "-\t}\r", "-\tsetKeyState(event, ke);\r", "-\tif (type == SWT.KeyUp) {\t\r", "+\t} else {\r"]}], "num": 40129}