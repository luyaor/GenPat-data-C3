{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bb1d94896c857aa5cb152b016f79303c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a318c0c4b13290aeff7c1d56651d57b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "9e4aa4f79d8d08d57d797296be9d3269723e755b", "commitAfterChange": "c7a37ce473beb9045c99b97900ef561257b98af2", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 72, "signatureBeforeChange": " \t \tid getStringForRangeAttribute (id parameter, int childID)", "signatureAfterChange": " \t \tid getStringForRangeAttribute (id parameter, int childID)", "diff": ["-\t\tNSRange range = parameterObject.rangeValue();\t\t", "-\t\tAccessibleControlEvent event = new AccessibleControlEvent(this);", "-\t\tevent.childID = childID;", "-\t\tevent.result = null;", "-\t\tfor (int i = 0; i < accessibleControlListeners.size(); i++) {", "-\t\t\tAccessibleControlListener listener = (AccessibleControlListener) accessibleControlListeners.elementAt(i);", "-\t\t\tlistener.getValue(event);", "+\t\tNSRange range = parameterObject.rangeValue();", "+\t\tif (accessibleTextExtendedListeners.size() > 0) {", "+\t\t\tAccessibleTextExtendedEvent event = new AccessibleTextExtendedEvent(this);", "+\t\t\tevent.childID = childID;", "+\t\t\tevent.start = (int) /*64*/ range.location;", "+\t\t\tevent.end = (int) /*64*/ (range.location + range.length);", "+\t\t\tevent.type = ACC.TEXT_BOUNDARY_ALL;", "+\t\t\tfor (int i = 0; i < accessibleTextExtendedListeners.size(); i++) {", "+\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) accessibleTextExtendedListeners.elementAt(i);", "+\t\t\t\tlistener.getText(event);", "+\t\t\t}", "+\t\t\tif (event.result != null) returnValue = NSString.stringWith(event.result);", "+\t\t} else {", "+\t\t\tAccessibleControlEvent event = new AccessibleControlEvent(this);", "+\t\t\tevent.childID = childID;", "+\t\t\tevent.result = null;", "+\t\t\tfor (int i = 0; i < accessibleControlListeners.size(); i++) {", "+\t\t\t\tAccessibleControlListener listener = (AccessibleControlListener) accessibleControlListeners.elementAt(i);", "+\t\t\t\tlistener.getValue(event);", "+\t\t\t}", "+\t\t\tString appValue = event.result;", "+\t", "+\t\t\tif (appValue != null) {", "+\t\t\t\treturnValue = NSString.stringWith(appValue.substring((int)/*64*/range.location, (int)/*64*/(range.location + range.length)));", "+\t\t\t}", "-\t\tString appValue = event.result;", "-", "-\t\tif (appValue != null) {", "-\t\t\treturnValue = NSString.stringWith(appValue.substring((int)/*64*/range.location, (int)/*64*/(range.location + range.length)));", "-\t\t}", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c008332c06189aed727efd0072ec997d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "13c7ba94b389ac7c444b6a0c4c21ecac48b2f8f4", "commitAfterChange": "27c0efa85174869eed1eeedefcfdd6ce7fa3b42e", "methodNumberBeforeChange": 246, "methodNumberAfterChange": 246, "signatureBeforeChange": " \tpublic void textChanged (int type, int startIndex, int length)", "signatureAfterChange": " \tpublic void textChanged (int type, int startIndex, int length)", "diff": ["+\t\tAccessibleTextEvent event = new AccessibleTextEvent(this);", "+\t\tevent.start = startIndex;", "+\t\tevent.end = startIndex + length;", "+\t\tevent.count = 0;", "+\t\tevent.type = ACC.TEXT_BOUNDARY_ALL;", "+\t\tfor (int i = 0; i < accessibleTextExtendedListeners.size(); i++) {", "+\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) accessibleTextExtendedListeners.elementAt(i);", "+\t\t\tlistener.getText(event);", "+\t\t}", "+\t\tif (event.result != null) {", "+\t\t\tObject[] eventData = new Object[] {", "+\t\t\t\t\tnew Integer(type),", "+\t\t\t\t\tnew Integer(startIndex),", "+\t\t\t\t\tnew Integer(startIndex + length),", "+\t\t\t\t\tevent.result};", "+\t\t\tsendEvent(ACC.EVENT_TEXT_CHANGED, eventData);", "+\t\t\treturn;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3ccff96d985b09330a057226e252c20", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "9e4aa4f79d8d08d57d797296be9d3269723e755b", "commitAfterChange": "c7a37ce473beb9045c99b97900ef561257b98af2", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 68, "signatureBeforeChange": " \t \tid getRangeForLineParameterizedAttribute (id parameter, int childID)", "signatureAfterChange": " \t \tid getRangeForLineParameterizedAttribute (id parameter, int childID)", "diff": ["-", "-\t\tAccessibleControlEvent event = new AccessibleControlEvent(this);", "-\t\tevent.childID = childID;", "-\t\tevent.result = null;", "-\t\tfor (int i = 0; i < accessibleControlListeners.size(); i++) {", "-\t\t\tAccessibleControlListener listener = (AccessibleControlListener) accessibleControlListeners.elementAt(i);", "-\t\t\tlistener.getValue(event);", "-\t\t}", "-\t\tif (event.result != null) {", "-\t\t\tNSRange range = rangeForLineNumber (lineNumber, event.result);", "-\t\t\tif (range.location != -1) {", "-\t\t\t\treturnValue = NSValue.valueWithRange(range);", "+\t\tif (accessibleTextExtendedListeners.size() > 0) {", "+\t\t\tAccessibleTextExtendedEvent event = new AccessibleTextExtendedEvent(this);", "+\t\t\tevent.childID = childID;", "+\t\t\tevent.start = event.end = 0;", "+\t\t\tevent.count = lineNumber;", "+\t\t\tevent.type = ACC.TEXT_BOUNDARY_LINE;", "+\t\t\tfor (int i = 0; i < accessibleTextExtendedListeners.size(); i++) {", "+\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) accessibleTextExtendedListeners.elementAt(i);", "+\t\t\t\tlistener.getText(event);", "+\t\t\t}", "+\t\t\tNSRange range = new NSRange();", "+\t\t\trange.location = event.start;", "+\t\t\trange.length = event.end - event.start + 1;", "+\t\t\treturnValue = NSValue.valueWithRange(range);", "+\t\t} else {", "+\t\t\tAccessibleControlEvent event = new AccessibleControlEvent(this);", "+\t\t\tevent.childID = childID;", "+\t\t\tevent.result = null;", "+\t\t\tfor (int i = 0; i < accessibleControlListeners.size(); i++) {", "+\t\t\t\tAccessibleControlListener listener = (AccessibleControlListener) accessibleControlListeners.elementAt(i);", "+\t\t\t\tlistener.getValue(event);", "+\t\t\t}", "+\t\t\tif (event.result != null) {", "+\t\t\t\tNSRange range = rangeForLineNumber (lineNumber, event.result);", "+\t\t\t\tif (range.location != -1) {", "+\t\t\t\t\treturnValue = NSValue.valueWithRange(range);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5e2582653d36ee67ecb2e4616bb47f0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "9e4aa4f79d8d08d57d797296be9d3269723e755b", "commitAfterChange": "c7a37ce473beb9045c99b97900ef561257b98af2", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 70, "signatureBeforeChange": " \t \tid getSelectedTextRangeAttribute (int childID)", "signatureAfterChange": " \t \tid getSelectedTextRangeAttribute (int childID)", "diff": ["-\t\tAccessibleTextEvent event = new AccessibleTextEvent(this);", "-\t\tevent.childID = childID;", "-\t\tevent.offset = -1;", "-\t\tevent.length = 0;", "-\t\tfor (int i = 0; i < accessibleTextListeners.size(); i++) {", "-\t\t\tAccessibleTextListener listener = (AccessibleTextListener) accessibleTextListeners.elementAt(i);", "-\t\t\tlistener.getSelectionRange(event);", "-\t\t}", "-\t\tif (event.offset != -1) {", "+\t\tif (accessibleTextExtendedListeners.size() > 0) {", "+\t\t\tAccessibleTextExtendedEvent event = new AccessibleTextExtendedEvent(this);", "+\t\t\tevent.childID = childID;", "+\t\t\tevent.index = 0;", "+\t\t\tfor (int i = 0; i < accessibleTextExtendedListeners.size(); i++) {", "+\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) accessibleTextExtendedListeners.elementAt(i);", "+\t\t\t\tlistener.getSelection(event);", "+\t\t\t}", "-\t\t\trange.location = event.offset;", "-\t\t\trange.length = event.length;", "+\t\t\trange.location = event.start;", "+\t\t\trange.length = event.end - event.start;", "+\t\t} else {", "+\t\t\tAccessibleTextEvent event = new AccessibleTextEvent(this);", "+\t\t\tevent.childID = childID;", "+\t\t\tevent.offset = -1;", "+\t\t\tevent.length = 0;", "+\t\t\tfor (int i = 0; i < accessibleTextListeners.size(); i++) {", "+\t\t\t\tAccessibleTextListener listener = (AccessibleTextListener) accessibleTextListeners.elementAt(i);", "+\t\t\t\tlistener.getSelectionRange(event);", "+\t\t\t}", "+\t\t\tif (event.offset != -1) {", "+\t\t\t\tNSRange range = new NSRange();", "+\t\t\t\trange.location = event.offset;", "+\t\t\t\trange.length = event.length;", "+\t\t\t\treturnValue = NSValue.valueWithRange(range);", "+\t\t\t}", "+\t}"]}], "num": 51561}