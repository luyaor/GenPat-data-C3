{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f5759e09360bbfaf8438352788d67f9", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f154c87ecbef348ed23bdeea485aa11", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "4ae7c7f058994a04613cca5e83c6754094e0435f", "commitAfterChange": "630867c677acb403ca1cea9965df17e2af419fee", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground)", "signatureAfterChange": " public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground)", "diff": ["+\tGCData data = gc.data;", "+\tint /*long*/ cairo = data.cairo;", "-\t\tOS.gdk_draw_layout(gc.data.drawable, gc.handle, x, y, layout);", "+\t\tif (cairo != 0 && OS.GTK_VERSION >= OS.VERSION(2, 8, 0)) {", "+\t\t\tCairo.cairo_move_to(cairo, x, y);", "+\t\t\tOS.pango_cairo_show_layout(cairo, layout);", "+\t\t} else {", "+\t\t\tOS.gdk_draw_layout(data.drawable, gc.handle, x, y, layout);", "+\t\t}", "-\t\t\tOS.gdk_draw_layout_with_colors(gc.data.drawable, gc.handle, x, y, layout, selectionForeground.handle, selectionBackground.handle);", "+\t\t\tif (cairo != 0 && OS.GTK_VERSION >= OS.VERSION(2, 8, 0)) {", "+\t\t\t\tint /*long*/ ptr = OS.pango_layout_get_text(layout);", "+\t\t\t\tdrawWithCairo(cairo, x, y, 0, OS.strlen(ptr), fullSelection, selectionBackground.handle, selectionForeground.handle);", "+\t\t\t} else {", "+\t\t\t\tOS.gdk_draw_layout_with_colors(data.drawable, gc.handle, x, y, layout, selectionForeground.handle, selectionBackground.handle);", "+\t\t\t}", "-\t\t\tRegion clipping = new Region();", "-\t\t\tgc.getClipping(clipping);", "-\t\t\tOS.gdk_draw_layout(gc.data.drawable, gc.handle, x, y, layout);", "-\t\t\tint[] ranges = new int[]{byteSelStart, byteSelEnd};", "-\t\t\tint /*long*/ rgn = OS.gdk_pango_layout_get_clip_region(layout, x, y, ranges, ranges.length / 2);", "-\t\t\tif (rgn != 0) {", "-\t\t\t\tOS.gdk_gc_set_clip_region(gc.handle, rgn);", "-\t\t\t\tOS.gdk_region_destroy(rgn);", "+\t\t\tif (cairo != 0 && OS.GTK_VERSION >= OS.VERSION(2, 8, 0)) {", "+\t\t\t\tdrawWithCairo(cairo, x, y, byteSelStart, byteSelEnd, fullSelection, selectionBackground.handle, selectionForeground.handle);", "+\t\t\t} else {", "+\t\t\t\tRegion clipping = new Region();", "+\t\t\t\tgc.getClipping(clipping);", "+\t\t\t\tOS.gdk_draw_layout(data.drawable, gc.handle, x, y, layout);", "+\t\t\t\tint[] ranges = new int[]{byteSelStart, byteSelEnd};", "+\t\t\t\tint /*long*/ rgn = OS.gdk_pango_layout_get_clip_region(layout, x, y, ranges, ranges.length / 2);", "+\t\t\t\tif (rgn != 0) {", "+\t\t\t\t\tOS.gdk_gc_set_clip_region(gc.handle, rgn);", "+\t\t\t\t\tOS.gdk_region_destroy(rgn);", "+\t\t\t\t}", "+\t\t\t\tOS.gdk_draw_layout_with_colors(data.drawable, gc.handle, x, y, layout, selectionForeground.handle, selectionBackground.handle);", "+\t\t\t\tgc.setClipping(clipping);", "+\t\t\t\tclipping.dispose();", "-\t\t\tOS.gdk_draw_layout_with_colors(gc.data.drawable, gc.handle, x, y, layout, selectionForeground.handle, selectionBackground.handle);", "-\t\t\tgc.setClipping(clipping);", "-\t\t\tclipping.dispose();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "836e3781e3493f1a99d19785e6795646", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "165a14baa4f28638048d0b616f73e1b86413e4a2", "commitAfterChange": "195c35fb4aaf6777b97d64fa53ba79208d6d54ee", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "  int setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "signatureAfterChange": "  int setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "diff": ["-\t\tint oldWidth = (state & ZERO_WIDTH) != 0 ? 0 : OS.GTK_WIDGET_WIDTH (topHandle);", "-\t\tint oldX = clientWidth - oldWidth - OS.GTK_WIDGET_X (topHandle);", "+\t\tint oldWidth = 0;", "+\t\tint oldX = 0;", "+\t\tGtkAllocation allocation = new GtkAllocation ();", "+\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "+\t\t\tOS.gtk_widget_get_allocation(topHandle, allocation);", "+\t\t\toldWidth = (state & ZERO_WIDTH) != 0 ? 0 : allocation.width;", "+\t\t\toldX = clientWidth - oldWidth - allocation.x;", "+\t\t} else {", "+\t\t\toldWidth = (state & ZERO_WIDTH) != 0 ? 0 : OS.GTK_WIDGET_WIDTH (topHandle);", "+\t\t\toldX = clientWidth - oldWidth - OS.GTK_WIDGET_X (topHandle);", "+\t\t}", "+\t\t", "-\t\tint oldWidth = (state & ZERO_WIDTH) != 0 ? 0 : OS.GTK_WIDGET_WIDTH (topHandle);", "-\t\tint oldHeight = (state & ZERO_HEIGHT) != 0 ? 0 : OS.GTK_WIDGET_HEIGHT (topHandle);", "+\t\tint oldWidth = 0;", "+\t\tint oldHeight = 0;", "+\t\tGtkAllocation allocation = new GtkAllocation ();", "+\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "+\t\t\tOS.gtk_widget_get_allocation(topHandle, allocation);", "+\t\t\toldWidth = (state & ZERO_WIDTH) != 0 ? 0 : allocation.width;", "+\t\t\toldHeight = (state & ZERO_HEIGHT) != 0 ? 0 : allocation.height;", "+\t\t} else {", "+\t\t\toldWidth = (state & ZERO_WIDTH) != 0 ? 0 : OS.GTK_WIDGET_WIDTH (topHandle);", "+\t\t\toldHeight = (state & ZERO_HEIGHT) != 0 ? 0 : OS.GTK_WIDGET_HEIGHT (topHandle);", "+\t\t}", "-\t\t\tallocation.x = OS.GTK_WIDGET_X (topHandle);", "-\t\t\tallocation.y = OS.GTK_WIDGET_Y (topHandle);", "+\t\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "+\t\t\t\tOS.gtk_widget_get_allocation(topHandle, allocation);", "+\t\t\t} else {", "+\t\t\t\tallocation.x = OS.GTK_WIDGET_X (topHandle);", "+\t\t\t\tallocation.y = OS.GTK_WIDGET_Y (topHandle);\t", "+\t\t\t}", "+", "-\t\t\tallocation.width = OS.GTK_WIDGET_WIDTH (topHandle);", "-\t\t\tallocation.height = OS.GTK_WIDGET_HEIGHT (topHandle);", "+\t\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "+\t\t\t\tOS.gtk_widget_get_allocation(topHandle, allocation);", "+\t\t\t} else {", "+\t\t\t\tallocation.width = OS.GTK_WIDGET_WIDTH (topHandle);", "+\t\t\t\tallocation.height = OS.GTK_WIDGET_HEIGHT (topHandle);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b818f731e36ae3b87370c287b8d4f3b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "165a14baa4f28638048d0b616f73e1b86413e4a2", "commitAfterChange": "195c35fb4aaf6777b97d64fa53ba79208d6d54ee", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  int gtk_clicked (int widget)", "signatureAfterChange": "  int gtk_clicked (int widget)", "diff": ["-\t\t\t\t\t\tint x = OS.GTK_WIDGET_X (arrowHandle) - OS.GTK_WIDGET_X (handle);", "-\t\t\t\t\t\tint width = OS.GTK_WIDGET_WIDTH (arrowHandle);", "+\t\t\t\t\t\tint x = 0;", "+\t\t\t\t\t\tint width = 0;", "+\t\t\t\t\t\tGtkAllocation handleAllocation = new GtkAllocation ();", "+\t\t\t\t\t\tGtkAllocation arrowHandleAllocation = new GtkAllocation ();", "+\t\t\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "+\t\t\t\t\t\t\tOS.gtk_widget_get_allocation(arrowHandle, arrowHandleAllocation);", "+\t\t\t\t\t\t\tOS.gtk_widget_get_allocation(handle, handleAllocation);", "+\t\t\t\t\t\t\tx = arrowHandleAllocation.x - handleAllocation.x;", "+\t\t\t\t\t\t\twidth = arrowHandleAllocation.width;", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tx = OS.GTK_WIDGET_X (arrowHandle) - OS.GTK_WIDGET_X (handle);", "+\t\t\t\t\t\t\twidth = OS.GTK_WIDGET_WIDTH (arrowHandle);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\t", "-\t\t\t\t\t\tevent.x = OS.GTK_WIDGET_X (topHandle);", "-\t\t\t\t\t\tif ((parent.style & SWT.MIRRORED) != 0) event.x = parent.getClientWidth () - OS.GTK_WIDGET_WIDTH (topHandle) - event.x;", "-\t\t\t\t\t\tevent.y = OS.GTK_WIDGET_Y (topHandle) + OS.GTK_WIDGET_HEIGHT (topHandle);", "+\t\t\t\t\t\tGtkAllocation allocation = new GtkAllocation ();", "+\t\t\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "+\t\t\t\t\t\t\tOS.gtk_widget_get_allocation(topHandle, allocation);", "+\t\t\t\t\t\t\tevent.x = allocation.x;", "+\t\t\t\t\t\t\tif ((parent.style & SWT.MIRRORED) != 0) event.x = parent.getClientWidth () - allocation.width - event.x;", "+\t\t\t\t\t\t\tevent.y = allocation.y + allocation.height;", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tevent.x = OS.GTK_WIDGET_X (topHandle);", "+\t\t\t\t\t\t\tif ((parent.style & SWT.MIRRORED) != 0) event.x = parent.getClientWidth () - OS.GTK_WIDGET_WIDTH (topHandle) - event.x;", "+\t\t\t\t\t\t\tevent.y = OS.GTK_WIDGET_Y (topHandle) + OS.GTK_WIDGET_HEIGHT (topHandle);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a4355f6bf6535329b7e62be8fdba3ec", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandItem.java", "commitBeforeChange": "165a14baa4f28638048d0b616f73e1b86413e4a2", "commitAfterChange": "195c35fb4aaf6777b97d64fa53ba79208d6d54ee", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  void resizeControl (int yScroll)", "signatureAfterChange": "  void resizeControl (int yScroll)", "diff": ["+\tGtkAllocation allocation = new GtkAllocation ();", "-\t\t\tint x = OS.GTK_WIDGET_X (clientHandle);", "-\t\t\tint y = OS.GTK_WIDGET_Y (clientHandle);", "+\t\t\tint x = 0;", "+\t\t\tint y = 0;", "+\t\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "+\t\t\t\tOS.gtk_widget_get_allocation(clientHandle, allocation);", "+\t\t\t\tx = allocation.x;", "+\t\t\t\ty = allocation.y;", "+\t\t\t} else {", "+\t\t\t\tx = OS.GTK_WIDGET_X (clientHandle);", "+\t\t\t\ty = OS.GTK_WIDGET_Y (clientHandle);", "+\t\t\t}", "-\t\t\t\tint width = OS.GTK_WIDGET_WIDTH (clientHandle);", "-\t\t\t\tint height = OS.GTK_WIDGET_HEIGHT (clientHandle);", "+\t\t\t\tint width = 0;", "+\t\t\t\tint height = 0;", "+\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "+\t\t\t\t\tOS.gtk_widget_get_allocation(clientHandle, allocation);", "+\t\t\t\t\twidth = allocation.width;", "+\t\t\t\t\theight = allocation.height;\t", "+\t\t\t\t} else {", "+\t\t\t\t\twidth = OS.GTK_WIDGET_WIDTH (clientHandle);", "+\t\t\t\t\theight = OS.GTK_WIDGET_HEIGHT (clientHandle);\t", "+\t\t\t\t}", "-\t\t\t\t\t\twidth = OS.GTK_WIDGET_WIDTH (parent.scrolledHandle) - parent.vScrollBarWidth () - 2 * parent.spacing;", "+\t\t\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "+\t\t\t\t\t\t\tOS.gtk_widget_get_allocation(parent.scrolledHandle, allocation);", "+\t\t\t\t\t\t\twidth = allocation.width - parent.vScrollBarWidth () - 2 * parent.spacing;\t", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\twidth = OS.GTK_WIDGET_WIDTH (parent.scrolledHandle) - parent.vScrollBarWidth () - 2 * parent.spacing;\t", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7994fd8caf1cc119d3d0b4de46e6b7c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ScrollBar.java", "commitBeforeChange": "165a14baa4f28638048d0b616f73e1b86413e4a2", "commitAfterChange": "195c35fb4aaf6777b97d64fa53ba79208d6d54ee", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public Rectangle getThumbTrackBounds ()", "signatureAfterChange": " public Rectangle getThumbTrackBounds ()", "diff": ["+\tGtkAllocation allocation = new GtkAllocation ();", "+\tint stepperSize = 0;\t", "-\t\tint stepperSize = OS.GTK_WIDGET_WIDTH (handle);", "-\t\tx = OS.GTK_WIDGET_X (handle);", "+\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "+\t\t\tOS.gtk_widget_get_allocation(handle, allocation);", "+\t\t\tstepperSize = allocation.width;", "+\t\t\tx = allocation.x;", "+\t\t} else {", "+\t\t\tstepperSize = OS.GTK_WIDGET_WIDTH (handle);\t", "+\t\t\tx = OS.GTK_WIDGET_X (handle);", "+\t\t}", "-\t\twidth = OS.GTK_WIDGET_WIDTH (handle);", "-\t\theight = OS.GTK_WIDGET_HEIGHT (handle) - y;", "+\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "+\t\t\twidth = allocation.width;", "+\t\t\theight = allocation.height - y;\t", "+\t\t} else {", "+\t\t\twidth = OS.GTK_WIDGET_WIDTH (handle);", "+\t\t\theight = OS.GTK_WIDGET_HEIGHT (handle) - y;\t", "+\t\t}", "-\t\tint stepperSize = OS.GTK_WIDGET_HEIGHT (handle);", "+\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "+\t\t\tOS.gtk_widget_get_allocation(handle, allocation);", "+\t\t\tstepperSize = allocation.height;", "+\t\t} else {", "+\t\t\tstepperSize = OS.GTK_WIDGET_HEIGHT (handle);\t", "+\t\t}", "-\t\ty = OS.GTK_WIDGET_Y (handle);", "-\t\twidth = OS.GTK_WIDGET_WIDTH (handle) - x;", "+\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "+\t\t\ty = allocation.y;", "+\t\t\twidth = allocation.width -x;", "+\t\t} else {", "+\t\t\ty = OS.GTK_WIDGET_Y (handle);", "+\t\t\twidth = OS.GTK_WIDGET_WIDTH (handle) - x;\t", "+\t\t}", "-\t\theight = OS.GTK_WIDGET_HEIGHT (handle);", "+\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "+\t\t\theight = allocation.height;", "+\t\t} else {", "+\t\t\theight = OS.GTK_WIDGET_HEIGHT (handle);\t", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "983412857a81bf1ce9ae850ad19c9e03", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "0354f2fcd681774fe492f4e3d5f23f1a78e0b89a", "commitAfterChange": "1f0268d817d4d6da6a35f97f46ada77b8aa2e671", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 58, "signatureBeforeChange": "  void printWidget (int gc, int drawable, int depth, int x, int y)", "signatureAfterChange": "  void printWidget (GC gc, int drawable, int depth, int x, int y)", "diff": ["-void printWidget (int gc, int drawable, int depth, int x, int y) {", "+void printWidget (GC gc, int /*long*/ drawable, int depth, int x, int y) {", "+\tRegion oldClip = new Region (gc.getDevice ());", "+\tRegion newClip = new Region (gc.getDevice ());", "+\tgc.getClipping (oldClip);", "+\tRectangle rect = getBounds ();", "+\tnewClip.add (oldClip);", "+\tnewClip.intersect (x, y, rect.width, rect.height);", "+\tgc.setClipping (newClip);", "+\tRectangle clientRect = getClientArea ();", "+\tPoint pt = display.map (this, parent, clientRect.x, clientRect.y);", "+\tclientRect.x = x + pt.x - rect.x;", "+\tclientRect.y = y + pt.y - rect.y;", "+\tnewClip.intersect (clientRect);", "+\tgc.setClipping (newClip);", "-\tfor (int i=children.length-1; i>= 0; --i) {", "+\tfor (int i=children.length-1; i>=0; --i) {", "+\tgc.setClipping (oldClip);", "+\toldClip.dispose ();", "+\tnewClip.dispose ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bfbc2586d4df00f150e14c9dbbba14b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ColorDialog.java", "commitBeforeChange": "1a14ea69ecd8828d401196778d87114e683d18b8", "commitAfterChange": "93a94094191ba6bab3d01c83b707e1431df666a6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public RGB open ()", "signatureAfterChange": " public RGB open ()", "diff": ["-\tlong /*int*/ handle = OS.gtk_color_selection_dialog_new (buffer);", "+\tlong /*int*/ handle = 0;", "+\tif (OS.GTK_VERSION >= OS.VERSION(3, 4, 0)) {", "+\t\thandle = OS.gtk_color_chooser_dialog_new(buffer, parent.topHandle());", "+\t} else {", "+\t\thandle = OS.gtk_color_selection_dialog_new(buffer);", "+\t}", "-\tif (parent != null) {", "-\t\tlong /*int*/ shellHandle = parent.topHandle ();", "-\t\tOS.gtk_window_set_transient_for (handle, shellHandle);", "-\t\tlong /*int*/ pixbufs = OS.gtk_window_get_icon_list (shellHandle);", "-\t\tif (pixbufs != 0) {", "-\t\t\tOS.gtk_window_set_icon_list (handle, pixbufs);", "-\t\t\tOS.g_list_free (pixbufs);", "+\tlong /*int*/ colorsel = 0;", "+\tGdkColor color = new GdkColor();", "+\tGdkRGBA rgba = new GdkRGBA();", "+\tif (OS.GTK_VERSION <= OS.VERSION(3, 4, 0)){", "+\t\tif (parent != null) {", "+\t\t\tlong /*int*/ shellHandle = parent.topHandle ();", "+\t\t\tOS.gtk_window_set_transient_for (handle, shellHandle);", "+\t\t\tlong /*int*/ pixbufs = OS.gtk_window_get_icon_list (shellHandle);", "+\t\t\tif (pixbufs != 0) {", "+\t\t\t\tOS.gtk_window_set_icon_list (handle, pixbufs);", "+\t\t\t\tOS.g_list_free (pixbufs);", "+\t\t\t}", "-\t}", "-\tif (OS.GTK_VERSION >= OS.VERSION (2, 10, 0)) {", "-\t\tlong /*int*/ group = OS.gtk_window_get_group(0);", "-\t\tOS.gtk_window_group_add_window (group, handle);", "-\t}", "-\tOS.gtk_window_set_modal (handle, true);", "-\tlong /*int*/ colorsel;", "-\tif (OS.GTK_VERSION >= OS.VERSION(2, 14, 0)) {", "-\t\tcolorsel = OS.gtk_color_selection_dialog_get_color_selection(handle);", "-\t} else{", "-\t\tGtkColorSelectionDialog dialog = new GtkColorSelectionDialog ();", "-\t\tOS.memmove (dialog, handle);", "-\t\tcolorsel = dialog.colorsel;", "+\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 10, 0)) {", "+\t\t\tlong /*int*/ group = OS.gtk_window_get_group(0);", "+\t\t\tOS.gtk_window_group_add_window (group, handle);", "+\t\t}", "+\t\tOS.gtk_window_set_modal (handle, true);", "+", "+\t\tif (OS.GTK_VERSION >= OS.VERSION(2, 14, 0)) {", "+\t\t\tcolorsel = OS.gtk_color_selection_dialog_get_color_selection(handle);", "+\t\t} else{", "+\t\t\tGtkColorSelectionDialog dialog = new GtkColorSelectionDialog ();", "+\t\t\tOS.memmove (dialog, handle);", "+\t\t\tcolorsel = dialog.colorsel;", "+\t\t}", "+\t\tif (rgb != null) {", "+\t\t\tcolor.red = (short)((rgb.red & 0xFF) | ((rgb.red & 0xFF) << 8));", "+\t\t\tcolor.green = (short)((rgb.green & 0xFF) | ((rgb.green & 0xFF) << 8));", "+\t\t\tcolor.blue = (short)((rgb.blue & 0xFF) | ((rgb.blue & 0xFF) << 8));", "+\t\t\tOS.gtk_color_selection_set_current_color (colorsel, color);", "+\t\t}", "+\t\tOS.gtk_color_selection_set_has_palette (colorsel, true);", "+\t} else {", "+\t\tOS.gtk_color_chooser_set_use_alpha(handle,false); ", "+\t\tOS.gtk_color_chooser_set_rgba(handle, rgba);", "-\tGdkColor color = new GdkColor();", "-\tif (rgb != null) {", "-\t\tcolor.red = (short)((rgb.red & 0xFF) | ((rgb.red & 0xFF) << 8));", "-\t\tcolor.green = (short)((rgb.green & 0xFF) | ((rgb.green & 0xFF) << 8));", "-\t\tcolor.blue = (short)((rgb.blue & 0xFF) | ((rgb.blue & 0xFF) << 8));", "-\t\tOS.gtk_color_selection_set_current_color (colorsel, color);", "-\t}", "-\tOS.gtk_color_selection_set_has_palette (colorsel, true);", "-\t\tOS.gtk_color_selection_get_current_color (colorsel, color);", "-\t\tint red = (color.red >> 8) & 0xFF;", "-\t\tint green = (color.green >> 8) & 0xFF;", "-\t\tint blue = (color.blue >> 8) & 0xFF;", "-\t\trgb = new RGB (red, green, blue);", "+\t\tint red = 0;", "+\t\tint green = 0;", "+\t\tint blue = 0;", "+\t  if (OS.GTK_VERSION >= OS.VERSION(3, 4, 0)){", "+\t\t  OS.gtk_color_chooser_get_rgba(handle, rgba);", "+\t\t  red =  (int) (rgba.red * 255);", "+\t\t  green = (int) (rgba.green * 255);", "+\t\t  blue =  (int) (rgba.blue *  255);", "+\t  } else {", "+\t\t  OS.gtk_color_selection_get_current_color (colorsel, color);", "+\t\t  red = (color.red >> 8) & 0xFF;", "+\t\t  green = (color.green >> 8) & 0xFF;", "+\t\t  blue = (color.blue >> 8) & 0xFF;", "+", "+\t  }", "+\t  rgb = new RGB (red, green, blue); ", "+\t\t"]}], "num": 42403}