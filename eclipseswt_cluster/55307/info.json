{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5f8110613726c2f6a26ee15e7664f2ce", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b5aaf067b2ad85c508b3e6aba9327f4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "4def951fc85e643080de398e85c25cb30ec79f91", "commitAfterChange": "ea10febb5ae3b0d1b19a13c89b6c7b27ab367f3a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  void hookEvents ()", "signatureAfterChange": "  void hookEvents ()", "diff": ["+\t//TO DO - get rid of enter/exit for mouse crossing border", "-\tOS.g_signal_connect (eventHandle, OS.popup_menu, windowProc2, SWT.Show);", "-\tOS.g_signal_connect (eventHandle, OS.show_help, windowProc3, SWT.Help);", "-\tOS.g_signal_connect (eventHandle, OS.button_press_event, windowProc3, SWT.MouseDown);", "-\tOS.g_signal_connect (eventHandle, OS.button_release_event, windowProc3, SWT.MouseUp);", "-\tOS.g_signal_connect (eventHandle, OS.key_press_event, windowProc3, SWT.KeyDown);", "-\tOS.g_signal_connect (eventHandle, OS.key_release_event, windowProc3, SWT.KeyUp);", "-\tOS.g_signal_connect (eventHandle, OS.motion_notify_event, windowProc3, SWT.MouseMove);", "-\tOS.g_signal_connect (eventHandle, OS.focus_in_event, windowProc3, SWT.FocusIn);", "-\tOS.g_signal_connect (eventHandle, OS.focus_out_event, windowProc3, SWT.FocusOut);", "-\tOS.g_signal_connect_after (eventHandle, OS.button_press_event, windowProc3, -SWT.MouseDown);", "-\tOS.g_signal_connect_after (eventHandle, OS.button_release_event, windowProc3, -SWT.MouseUp);", "-\tOS.g_signal_connect_after (eventHandle, OS.motion_notify_event, windowProc3, -SWT.MouseMove);", "-\tOS.g_signal_connect_after (eventHandle, OS.enter_notify_event, windowProc3, SWT.MouseEnter);", "-\tOS.g_signal_connect_after (eventHandle, OS.leave_notify_event, windowProc3, SWT.MouseExit);", "-\tOS.g_signal_connect_after (eventHandle, OS.expose_event, windowProc3, SWT.Paint);", "+\tOS.g_signal_connect (eventHandle, OS.popup_menu, windowProc2, POPUP_MENU);", "+\tOS.g_signal_connect (eventHandle, OS.show_help, windowProc3, SHOW_HELP);", "+\tOS.g_signal_connect (eventHandle, OS.button_press_event, windowProc3, BUTTON_PRESS_EVENT);", "+\tOS.g_signal_connect (eventHandle, OS.button_release_event, windowProc3, BUTTON_RELEASE_EVENT);", "+\tOS.g_signal_connect (eventHandle, OS.motion_notify_event, windowProc3, MOTION_NOTIFY_EVENT);", "+\tOS.g_signal_connect (eventHandle, OS.key_press_event, windowProc3, KEY_PRESS_EVENT);", "+\tOS.g_signal_connect (eventHandle, OS.key_release_event, windowProc3, KEY_RELEASE_EVENT);", "+\tOS.g_signal_connect (eventHandle, OS.focus_in_event, windowProc3, FOCUS_IN_EVENT);", "+\tOS.g_signal_connect (eventHandle, OS.focus_out_event, windowProc3, FOCUS_OUT_EVENT);", "+\tOS.g_signal_connect_after (eventHandle, OS.enter_notify_event, windowProc3, ENTER_NOTIFY_EVENT);", "+\tOS.g_signal_connect_after (eventHandle, OS.leave_notify_event, windowProc3, LEAVE_NOTIFY_EVENT);", "+\tOS.g_signal_connect_after (eventHandle, OS.expose_event, windowProc3, EXPOSE_EVENT);", "+\t", "+\t/*", "+\t* Feature in GTK.  Events such as mouse move are propagate up", "+\t* the widget hierarchy and are seen by the parent.  This is the", "+\t* correct GTK behavior but not correct for SWT.  The fix is to", "+\t* hook a signal after and stop the propagation using a negative", "+\t* event number to distinguish this case.", "+\t*/", "+\tOS.g_signal_connect_after (eventHandle, OS.button_press_event, windowProc3, -BUTTON_PRESS_EVENT);", "+\tOS.g_signal_connect_after (eventHandle, OS.button_release_event, windowProc3, -BUTTON_RELEASE_EVENT);", "+\tOS.g_signal_connect_after (eventHandle, OS.motion_notify_event, windowProc3, -MOTION_NOTIFY_EVENT);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fd12eda989fe2f430a036f50e9e3a87", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "444917b413ab57ed5d6b6ade8c5b5c63d6e5c5c4", "commitAfterChange": "0d91639586859ce4261d393e72ea9fbc2b8ece3c", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": " \t \tvoid sendEvent(int event, int childID, Object eventData)", "signatureAfterChange": " \t \tvoid sendEvent(int event, Object eventData)", "diff": ["-\tvoid sendEvent(int event, int childID, Object eventData) {", "+\tvoid sendEvent(int event, Object eventData) {", "-\t\t\t\t//TODO - needs to have old and new state", "+\t\t\t\t//TODO needs the state that changed", "+//\t\t\t\tOS.g_signal_emit_by_name (handle, ATK.state_change, );", "+\t\t\t\t//TODO needs the new bounds", "+//\t\t\t\tOS.g_signal_emit_by_name (handle, ATK.bounds_changed);", "+\t\t\t\tOS.g_signal_emit_by_name (handle, ATK.load_complete);", "+\t\t\t\tOS.g_signal_emit_by_name (handle, ATK.load_stopped);", "+\t\t\t\tOS.g_signal_emit_by_name (handle, ATK.reload);", "+\t\t\t\tOS.g_object_notify(handle, ATK.end_index);", "+\t\t\t\tOS.g_object_notify(handle, ATK.number_of_anchors);", "+\t\t\t\tOS.g_object_notify(handle, ATK.selected_link);", "+\t\t\t\tOS.g_object_notify(handle, ATK.start_index);", "+\t\t\t\tOS.g_signal_emit_by_name (handle, ATK.link_activated);", "+\t\t\t\t//TODO needs the index the link that was selected", "+//\t\t\t\tOS.g_signal_emit_by_name (handle, ATK.link_selected);", "+\t\t\t\tOS.g_object_notify(handle, ATK.accessible_hypertext_nlinks);", "+\t\t\t\tOS.g_signal_emit_by_name (handle, ATK.attributes_changed);", "+\t\t\t\tOS.g_object_notify(handle, ATK.accessible_table_caption_object);", "+\t\t\t\tOS.g_object_notify(handle, ATK.accessible_table_column_description);", "+\t\t\t\tOS.g_object_notify(handle, ATK.accessible_table_column_header);", "-\t\t\tcase ACC.EVENT_TABLE_CHANGED:", "+\t\t\tcase ACC.EVENT_TABLE_CHANGED: {", "+\t\t\t\tif (!(eventData instanceof int[])) break;", "+\t\t\t\tint[] array = (int[])eventData;", "+\t\t\t\tint type =  array[0];", "+\t\t\t\tint rowStart = array[1];", "+\t\t\t\tint rowCount = array[2];", "+\t\t\t\tint columnStart = array[3];", "+\t\t\t\tint columnCount = array[4];", "+\t\t\t\tswitch (type) {", "+\t\t\t\t\tcase ACC.DELETE:", "+\t\t\t\t\t\tif (rowCount > 0) OS.g_signal_emit_by_name (handle, ATK.row_deleted, rowStart, rowCount);", "+\t\t\t\t\t\tif (columnCount > 0) OS.g_signal_emit_by_name (handle, ATK.column_deleted, columnStart, columnCount);", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase ACC.INSERT:", "+\t\t\t\t\t\tif (rowCount > 0) OS.g_signal_emit_by_name (handle, ATK.row_inserted, rowStart, rowCount);", "+\t\t\t\t\t\tif (columnCount > 0) OS.g_signal_emit_by_name (handle, ATK.column_inserted, columnStart, columnCount);", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\t\tOS.g_object_notify(handle, ATK.accessible_table_row_description);", "+\t\t\t\tOS.g_object_notify(handle, ATK.accessible_table_row_header);", "+\t\t\t\tOS.g_object_notify(handle, ATK.accessible_table_summary);", "+\t\t\t\tOS.g_signal_emit_by_name (handle, ATK.text_attributes_changed);", "-\t\t\t\tbreak;", "+\t\t\t\t//TODO needs the new position of the caret", "+\t\t\t\tOS.g_signal_emit_by_name (handle, ATK.text_caret_moved);", "-\t\t\tcase ACC.EVENT_TEXT_CHANGED:", "+\t\t\tcase ACC.EVENT_TEXT_CHANGED: {", "+\t\t\t\tif (!(eventData instanceof Object[])) break;", "+\t\t\t\tObject[] data = (Object[])eventData;", "+\t\t\t\tint type = ((Integer)data[0]).intValue();", "+\t\t\t\tint start = ((Integer)data[1]).intValue();", "+\t\t\t\tint end = ((Integer)data[2]).intValue();", "+\t\t\t\tswitch (type) {", "+\t\t\t\t\tcase ACC.DELETE:", "+\t\t\t\t\t\tOS.g_signal_emit_by_name (handle, ATK.text_changed_delete, start, end -start);", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase ACC.INSERT:", "+\t\t\t\t\t\tOS.g_signal_emit_by_name (handle, ATK.text_changed_insert, start, end -start);", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 55307}