{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "30ac0182dfeefe3b4a349000ce0634e0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cb4cf35526d108dd1681e1cde9b5e0b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "c204154909a9d6903f66ea2c97f8cb0cb5eaa814", "commitAfterChange": "b4e13940b738ca380f99e9bdd9e55dadba13486b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 22, "signatureBeforeChange": "  public void setSize (int width, int height)", "signatureAfterChange": "  int processMouseMove (int callData, int arg1, int int2)", "diff": ["-", "-public void setSize (int width, int height) {", "-\tsuper.setSize(width, height);", "-\tlayout();", "-}", "+", "+int processMouseMove (int callData, int arg1, int int2) {", "+\tint result = super.processMouseMove (callData, arg1, int2);", "+\treturn (state & CANVAS) != 0 ? 1 : result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89a8edb7cb78963aadfdddd98aa8ec79", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "f42c053356303e47bc6d7d2682ada8c7675ed0fc", "commitAfterChange": "e37c5d247d99282f597655a55a69f15eb55de4d4", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 69, "signatureBeforeChange": "\r int processVerify (int callData)", "signatureAfterChange": "\r int XmNmodifyVerifyCallback (int w, int client_data, int call_data)", "diff": ["-}\r", "-int processVerify (int callData) {\r", "-\tsuper.processVerify (callData);\r", "-\tif (echoCharacter == '\\0' && !hooks (SWT.Verify) && !filters (SWT.Verify)) return 0;\r", "-\tXmTextVerifyCallbackStruct textVerify = new XmTextVerifyCallbackStruct ();\r", "-\tOS.memmove (textVerify, callData, XmTextVerifyCallbackStruct.sizeof);\r", "-\tXmTextBlockRec textBlock = new XmTextBlockRec ();\r", "-\tOS.memmove (textBlock, textVerify.text, XmTextBlockRec.sizeof);\r", "-\tbyte [] buffer = new byte [textBlock.length];\r", "-\tOS.memmove (buffer, textBlock.ptr, textBlock.length);\r", "-\tString codePage = getCodePage ();\r", "-\tString text = new String (Converter.mbcsToWcs (codePage, buffer));\r", "-\tString newText = text;\r", "-\tif (!ignoreChange) {\r", "-\t\tEvent event = new Event ();\r", "-\t\tif (textVerify.event != 0) {\r", "-\t\t\tXKeyEvent xEvent = new XKeyEvent ();\r", "-\t\t\tOS.memmove (xEvent, textVerify.event, XKeyEvent.sizeof);\r", "-\t\t\tevent.time = xEvent.time;\r", "-\t\t\tsetKeyState (event, xEvent);\r", "-\t\t}\r", "-\t\tevent.start = textVerify.startPos;\r", "-\t\tevent.end = textVerify.endPos;\r", "-\t\tevent.doit = textVerify.doit == 1;\r", "-\t\tevent.text = text;\r", "-\t\tsendEvent (SWT.Verify, event);\r", "-\t\tnewText = event.text;\r", "-\t\ttextVerify.doit = (byte) ((event.doit && newText != null) ? 1 : 0);\r", "-\t}\r", "-\tif (newText != null) {\r", "-\t\tif (echoCharacter != '\\0' && (textVerify.doit != 0)) {\r", "-\t\t\tString prefix = hiddenText.substring (0, textVerify.startPos);\r", "-\t\t\tString suffix = hiddenText.substring (textVerify.endPos, hiddenText.length ());\r", "-\t\t\thiddenText = prefix + newText + suffix;\r", "-\t\t\tchar [] charBuffer = new char [newText.length ()];\r", "-\t\t\tfor (int i=0; i<charBuffer.length; i++) {\r", "-\t\t\t\tcharBuffer [i] = echoCharacter;\r", "-\t\t\t}\r", "-\t\t\tnewText = new String (charBuffer);\r", "-\t\t}\r", "-\t\tif (newText != text) {\r", "-\t\t\tbyte [] buffer2 = Converter.wcsToMbcs (codePage, newText, true);\r", "-\t\t\tint length = buffer2.length;\r", "-\t\t\tint ptr = OS.XtMalloc (length);\r", "-\t\t\tOS.memmove (ptr, buffer2, length);\r", "-\t\t\ttextBlock.ptr = ptr;\r", "-\t\t\ttextBlock.length = buffer2.length - 1;\r", "-\t\t\tOS.memmove (textVerify.text, textBlock, XmTextBlockRec.sizeof);\r", "-\t\t}\r", "-\t}\r", "-\tOS.memmove (callData, textVerify, XmTextVerifyCallbackStruct.sizeof);\r", "-\ttextVerify = null;\r", "+}\r", "+int XmNmodifyVerifyCallback (int w, int client_data, int call_data) {\r", "+\tint result = super.XmNmodifyVerifyCallback (w, client_data, call_data);\r", "+\tif (result != 0) return result;\r", "+\tif (echoCharacter == '\\0' && !hooks (SWT.Verify) && !filters (SWT.Verify)) return result;\r", "+\tXmTextVerifyCallbackStruct textVerify = new XmTextVerifyCallbackStruct ();\r", "+\tOS.memmove (textVerify, call_data, XmTextVerifyCallbackStruct.sizeof);\r", "+\tXmTextBlockRec textBlock = new XmTextBlockRec ();\r", "+\tOS.memmove (textBlock, textVerify.text, XmTextBlockRec.sizeof);\r", "+\tbyte [] buffer = new byte [textBlock.length];\r", "+\tOS.memmove (buffer, textBlock.ptr, textBlock.length);\r", "+\tString codePage = getCodePage ();\r", "+\tString text = new String (Converter.mbcsToWcs (codePage, buffer));\r", "+\tString newText = text;\r", "+\tif (!ignoreChange) {\r", "+\t\tEvent event = new Event ();\r", "+\t\tif (textVerify.event != 0) {\r", "+\t\t\tXKeyEvent xEvent = new XKeyEvent ();\r", "+\t\t\tOS.memmove (xEvent, textVerify.event, XKeyEvent.sizeof);\r", "+\t\t\tevent.time = xEvent.time;\r", "+\t\t\tsetKeyState (event, xEvent);\r", "+\t\t}\r", "+\t\tevent.start = textVerify.startPos;\r", "+\t\tevent.end = textVerify.endPos;\r", "+\t\tevent.doit = textVerify.doit == 1;\r", "+\t\tevent.text = text;\r", "+\t\tsendEvent (SWT.Verify, event);\r", "+\t\tnewText = event.text;\r", "+\t\ttextVerify.doit = (byte) ((event.doit && newText != null) ? 1 : 0);\r", "+\t}\r", "+\tif (newText != null) {\r", "+\t\tif (echoCharacter != '\\0' && (textVerify.doit != 0)) {\r", "+\t\t\tString prefix = hiddenText.substring (0, textVerify.startPos);\r", "+\t\t\tString suffix = hiddenText.substring (textVerify.endPos, hiddenText.length ());\r", "+\t\t\thiddenText = prefix + newText + suffix;\r", "+\t\t\tchar [] charBuffer = new char [newText.length ()];\r", "+\t\t\tfor (int i=0; i<charBuffer.length; i++) {\r", "+\t\t\t\tcharBuffer [i] = echoCharacter;\r", "+\t\t\t}\r", "+\t\t\tnewText = new String (charBuffer);\r", "+\t\t}\r", "+\t\tif (newText != text) {\r", "+\t\t\tbyte [] buffer2 = Converter.wcsToMbcs (codePage, newText, true);\r", "+\t\t\tint length = buffer2.length;\r", "+\t\t\tint ptr = OS.XtMalloc (length);\r", "+\t\t\tOS.memmove (ptr, buffer2, length);\r", "+\t\t\ttextBlock.ptr = ptr;\r", "+\t\t\ttextBlock.length = buffer2.length - 1;\r", "+\t\t\tOS.memmove (textVerify.text, textBlock, XmTextBlockRec.sizeof);\r", "+\t\t}\r", "+\t}\r", "+\tOS.memmove (call_data, textVerify, XmTextVerifyCallbackStruct.sizeof);\r", "+\ttextVerify = null;\r", "+\treturn result;\r", "+}\r"]}], "num": 11156}