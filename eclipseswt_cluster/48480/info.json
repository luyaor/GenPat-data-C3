{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "579e7fa51778b154c4b00939f14fe7c3", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38af45897175fc8d491f7d458cf89820", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "f699db6750189f737837a9f6195bd87512c2c588", "commitAfterChange": "ece89cfb21571317fb6c86186d3424edb03c00a2", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 120, "signatureBeforeChange": "  int windowProc (int hwnd, int msg, int wParam, int lParam)", "signatureAfterChange": "  int windowProc (int hwnd, int msg, int wParam, int lParam)", "diff": ["-\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "-\t\tif (hwnd == hwndHeader) {", "-\t\t\tswitch (msg) {", "-\t\t\t\t/* This code is intentionally commented */", "-//\t\t\t\tcase OS.WM_CONTEXTMENU: {", "-//\t\t\t\t\tLRESULT result = wmContextMenu (hwnd, wParam, lParam);", "-//\t\t\t\t\tif (result != null) return result.value;", "-//\t\t\t\t\tbreak;", "-//\t\t\t\t}", "-\t\t\t\tcase OS.WM_CAPTURECHANGED: {", "-\t\t\t\t\t/*", "-\t\t\t\t\t* Bug in Windows.  When the capture changes during a", "-\t\t\t\t\t* header drag, Windows does not redraw the header item", "-\t\t\t\t\t* such that the header remains pressed.  For example,", "-\t\t\t\t\t* when focus is assigned to a push button, the mouse is", "-\t\t\t\t\t* pressed (but not released), then the SPACE key is", "-\t\t\t\t\t* pressed to activate the button, the capture changes,", "-\t\t\t\t\t* the header not notified and NM_RELEASEDCAPTURE is not", "-\t\t\t\t\t* sent.  The fix is to redraw the header when the capture", "-\t\t\t\t\t* changes to another control.", "-\t\t\t\t\t* ", "-\t\t\t\t\t* This does not happen on XP.", "-\t\t\t\t\t*/", "-\t\t\t\t\tif (OS.COMCTL32_MAJOR < 6) {", "-\t\t\t\t\t\tif (lParam != 0 && lParam != hwndHeader) {", "-\t\t\t\t\t\t\tOS.InvalidateRect (hwndHeader, null, true);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t\tcase OS.WM_MOUSELEAVE: {", "-\t\t\t\t\t/*", "-\t\t\t\t\t* Bug in Windows.  On XP, when a tooltip is hidden", "-\t\t\t\t\t* due to a time out or mouse press, the tooltip", "-\t\t\t\t\t* remains active although no longer visible and", "-\t\t\t\t\t* won't show again until another tooltip becomes", "-\t\t\t\t\t* active.  The fix is to reset the tooltip bounds.", "-\t\t\t\t\t*/", "-\t\t\t\t\tif (OS.COMCTL32_MAJOR >= 6) updateHeaderToolTips ();", "-\t\t\t\t\tupdateHeaderToolTips ();", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t\tcase OS.WM_NOTIFY: {", "-\t\t\t\t\tNMHDR hdr = new NMHDR ();", "-\t\t\t\t\tOS.MoveMemory (hdr, lParam, NMHDR.sizeof);", "-\t\t\t\t\tswitch (hdr.code) {", "-\t\t\t\t\t\tcase OS.TTN_SHOW:", "-\t\t\t\t\t\tcase OS.TTN_POP: ", "-\t\t\t\t\t\tcase OS.TTN_GETDISPINFOA:", "-\t\t\t\t\t\tcase OS.TTN_GETDISPINFOW:", "-\t\t\t\t\t\t\treturn OS.SendMessage (handle, msg, wParam, lParam);", "+\t\tswitch (msg) {", "+\t\t\t/* This code is intentionally commented */", "+//\t\t\tcase OS.WM_CONTEXTMENU: {", "+//\t\t\t\tLRESULT result = wmContextMenu (hwnd, wParam, lParam);", "+//\t\t\t\tif (result != null) return result.value;", "+//\t\t\t\tbreak;", "+//\t\t\t}", "+\t\t\tcase OS.WM_CAPTURECHANGED: {", "+\t\t\t\t/*", "+\t\t\t\t* Bug in Windows.  When the capture changes during a", "+\t\t\t\t* header drag, Windows does not redraw the header item", "+\t\t\t\t* such that the header remains pressed.  For example,", "+\t\t\t\t* when focus is assigned to a push button, the mouse is", "+\t\t\t\t* pressed (but not released), then the SPACE key is", "+\t\t\t\t* pressed to activate the button, the capture changes,", "+\t\t\t\t* the header not notified and NM_RELEASEDCAPTURE is not", "+\t\t\t\t* sent.  The fix is to redraw the header when the capture", "+\t\t\t\t* changes to another control.", "+\t\t\t\t* ", "+\t\t\t\t* This does not happen on XP.", "+\t\t\t\t*/", "+\t\t\t\tif (OS.COMCTL32_MAJOR < 6) {", "+\t\t\t\t\tif (lParam != 0) {", "+\t\t\t\t\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "+\t\t\t\t\t\tif (lParam != hwndHeader) OS.InvalidateRect (hwndHeader, null, true);", "+\t\t\t\tbreak;", "-\t\t\treturn callWindowProc (hwnd, msg, wParam, lParam);", "+\t\t\tcase OS.WM_MOUSELEAVE: {", "+\t\t\t\t/*", "+\t\t\t\t* Bug in Windows.  On XP, when a tooltip is hidden", "+\t\t\t\t* due to a time out or mouse press, the tooltip", "+\t\t\t\t* remains active although no longer visible and", "+\t\t\t\t* won't show again until another tooltip becomes", "+\t\t\t\t* active.  The fix is to reset the tooltip bounds.", "+\t\t\t\t*/", "+\t\t\t\tif (OS.COMCTL32_MAJOR >= 6) updateHeaderToolTips ();", "+\t\t\t\tupdateHeaderToolTips ();", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t\tcase OS.WM_NOTIFY: {", "+\t\t\t\tNMHDR hdr = new NMHDR ();", "+\t\t\t\tOS.MoveMemory (hdr, lParam, NMHDR.sizeof);", "+\t\t\t\tswitch (hdr.code) {", "+\t\t\t\t\tcase OS.TTN_SHOW:", "+\t\t\t\t\tcase OS.TTN_POP: ", "+\t\t\t\t\tcase OS.TTN_GETDISPINFOA:", "+\t\t\t\t\tcase OS.TTN_GETDISPINFOW:", "+\t\t\t\t\t\treturn OS.SendMessage (handle, msg, wParam, lParam);", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\treturn callWindowProc (hwnd, msg, wParam, lParam);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57bd58f26443f27367abc67a035c64e1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "376095fdf66c1b831ad5252eeda210931946760b", "commitAfterChange": "b74e378548c2324a9fbc6521b49afe2fd9218337", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 5, "signatureBeforeChange": "  boolean fixScroll (int hItem)", "signatureAfterChange": "  boolean checkScroll (int hItem)", "diff": ["+boolean checkScroll (int hItem) {", "+\t* Feature in Windows.  If redraw is turned off using WM_SETREDRAW ", "+\t* a tree item that is not a child the first root is selected or", "+\t* scrolled using TVM_SELECTITEM or TVM_ENSUREVISIBLE, then scrolling", "+\t* does not occur.  The fix is to detect this case, and make sure", "+\t* that redraw is temporarly enabled.", "+\tif (drawCount == 0) return false;", "+\tint hRoot = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_ROOT, 0);", "+\tint hParent = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_PARENT, hItem);", "+\twhile (hParent != hRoot && hParent != 0) {", "+\t\thParent = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_PARENT, hParent);", "+\t}", "+\treturn hParent == 0;", "-", "-boolean fixScroll (int hItem) {", "-\t/*", "-\t* Feature in Windows.  If WM_SETREDRAW is false and the hItem", "-\t* is not a child of TVGN_ROOT, then TVM_SELECTITEM for the hItem", "-\t* does not work. The fix is to detect this case, and make sure", "-\t* WM_SETREDRAW is enabled for the TVM_SELECTITEM call.", "-\t*/", "-\tif (hItem != 0 && drawCount != 0) {", "-\t\tint hRoot = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_ROOT, 0);", "-\t\tint hParent = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_PARENT, hItem);", "-\t\twhile (hParent != hRoot && hParent != 0) {", "-\t\t\thParent = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_PARENT, hParent);", "-\t\t}", "-\t\treturn hParent == 0;", "-\t}", "-\treturn false;"]}], "num": 48480}