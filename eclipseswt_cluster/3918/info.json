{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "81e954545d5e125b2941db20bb742005", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e67adc4eb5e7038b9668cf2b79fd6049", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "a5c1cfcec95b92d93db65966120f9c3e9574da47", "commitAfterChange": "41bdae326eb353ce74e20d44ac4455a5c572579f", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "  public boolean setText(final String html, boolean trusted)", "signatureAfterChange": "  public boolean setText(final String html, boolean trusted)", "diff": ["+\t* If the browser has not completed its initial navigate to about:blank", "+\t* then delay setting this text content until the navigate has completed.", "+\t*/", "+\tif (!initialNavigateComplete) {", "+\t\tpendingText = new Object[] {html, new Boolean (trusted)};", "+\t\tpendingUrl = null;", "+\t\treturn true;", "+\t}", "+", "+\t/*", "-\tif (navigate) {", "-\t\t/*", "-\t\t* Stopping the loading of a page causes DocumentComplete events from previous", "-\t\t* requests to be received before the DocumentComplete for this page.  In such", "-\t\t* cases we must be sure to not set the html into the browser too soon, since", "-\t\t* doing so could result in its page being cleared out by a subsequent", "-\t\t* DocumentComplete.  The Browser's ReadyState can be used to determine whether", "-\t\t* these extra events will be received or not.", "-\t\t*/", "-\t\trgdispid = auto.getIDsOfNames(new String[] { \"ReadyState\" }); //$NON-NLS-1$", "-\t\tVariant pVarResult = auto.getProperty(rgdispid[0]);", "-\t\tif (pVarResult == null) return false;", "-\t\tdelaySetText = pVarResult.getInt() != READYSTATE_COMPLETE;", "-\t\tpVarResult.dispose();", "-\t\trgdispid = auto.getIDsOfNames(new String[] { \"Stop\" }); //$NON-NLS-1$", "-\t\tauto.invoke(rgdispid[0]);", "-\t}", "+", "+\t/*", "+\t* Stopping the loading of a page causes DocumentComplete events from previous", "+\t* requests to be received before the DocumentComplete for this page.  In such", "+\t* cases we must be sure to not set the html into the browser too soon, since", "+\t* doing so could result in its page being cleared out by a subsequent", "+\t* DocumentComplete.  The Browser's ReadyState can be used to determine whether", "+\t* these extra events will be received or not.", "+\t*/", "+\trgdispid = auto.getIDsOfNames(new String[] { \"ReadyState\" }); //$NON-NLS-1$", "+\tVariant pVarResult = auto.getProperty(rgdispid[0]);", "+\tif (pVarResult == null) return false;", "+\tdelaySetText = pVarResult.getInt() != READYSTATE_COMPLETE;", "+\tpVarResult.dispose();", "+\trgdispid = auto.getIDsOfNames(new String[] { \"Stop\" }); //$NON-NLS-1$", "+\tauto.invoke(rgdispid[0]);", "-\tnavigate = true;", "-\tVariant pVarResult = auto.invoke(rgdispid[0], rgvarg, rgdispidNamedArgs);", "+\tpVarResult = auto.invoke(rgdispid[0], rgvarg, rgdispidNamedArgs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2afe94373f2299caa47f3f461e77c1a8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "0bd12479039445d98671301731eb07939c5a5f1e", "commitAfterChange": "90dcbad0d2940fe328385cc72057ca35f38e1967", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "diff": ["-\tdragStarted = false;", "+\tdragStarted = gestureCompleted = false;", "-\ttvItem.hItem = hNewItem;", "-\ttvItem.mask = OS.TVIF_PARAM;", "-\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "-\tEvent event = new Event ();", "-\tevent.item = items [tvItem.lParam];", "-\tpostEvent (SWT.Selection, event);", "+\tif (!gestureCompleted) {", "+\t\ttvItem.hItem = hNewItem;", "+\t\ttvItem.mask = OS.TVIF_PARAM;", "+\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "+\t\tEvent event = new Event ();", "+\t\tevent.item = items [tvItem.lParam];", "+\t\tpostEvent (SWT.Selection, event);", "+\t}", "+\tgestureCompleted = false;", "-\t\tevent = new Event ();", "+\t\tEvent event = new Event ();"]}], "num": 3918}