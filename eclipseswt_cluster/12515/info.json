{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fe8ea5e264ddaf63dc4bfbc5c08ee1c0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b1f431d8dfe31c509144bd5c20c3b74", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "baf95176a8708225157483f4b3724dbe808b4b2d", "commitAfterChange": "08b35427b630b058d33816f10064b6c3de68a1f4", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void copyArea(int srcX, int srcY, int width, int height, int destX, int destY)", "signatureAfterChange": " public void copyArea(int srcX, int srcY, int width, int height, int destX, int destY, boolean paint)", "diff": ["+ */", "+public void copyArea(int srcX, int srcY, int width, int height, int destX, int destY, boolean paint) {", "-\t\tint res = OS.ScrollWindowEx(hwnd, destX - srcX, destY - srcY, lprcScroll, lprcClip, 0, null, OS.SW_INVALIDATE | OS.SW_ERASE); ", "+\t\tint flags = paint ? OS.SW_INVALIDATE | OS.SW_ERASE : 0;", "+\t\tint res = OS.ScrollWindowEx(hwnd, destX - srcX, destY - srcY, lprcScroll, lprcClip, 0, null, flags); ", "-\t\t\tint deltaX = destX - srcX, deltaY = destY - srcY;", "-\t\t\tboolean disjoint = (destX + width < srcX) || (srcX + width < destX) || (destY + height < srcY) || (srcY + height < destY);", "-\t\t\tif (disjoint) {", "-\t\t\t\tOS.InvalidateRect(hwnd, lprcScroll, true);", "-\t\t\t} else {", "-\t\t\t\tif (deltaX != 0) {", "-\t\t\t\t\tint newX = destX - deltaX;", "-\t\t\t\t\tif (deltaX < 0) newX = destX + width;", "-\t\t\t\t\tOS.SetRect(lprcScroll, newX, srcY, newX + Math.abs(deltaX), srcY + height);", "+\t\t\tif (paint) {", "+\t\t\t\tint deltaX = destX - srcX, deltaY = destY - srcY;", "+\t\t\t\tboolean disjoint = (destX + width < srcX) || (srcX + width < destX) || (destY + height < srcY) || (srcY + height < destY);", "+\t\t\t\tif (disjoint) {", "-\t\t\t\t}", "-\t\t\t\tif (deltaY != 0) {", "-\t\t\t\t\tint newY = destY - deltaY;", "-\t\t\t\t\tif (deltaY < 0) newY = destY + height;", "-\t\t\t\t\tOS.SetRect(lprcScroll, srcX, newY, srcX + width, newY + Math.abs(deltaY));", "-\t\t\t\t\tOS.InvalidateRect(hwnd, lprcScroll, true);", "+\t\t\t\t} else {", "+\t\t\t\t\tif (deltaX != 0) {", "+\t\t\t\t\t\tint newX = destX - deltaX;", "+\t\t\t\t\t\tif (deltaX < 0) newX = destX + width;", "+\t\t\t\t\t\tOS.SetRect(lprcScroll, newX, srcY, newX + Math.abs(deltaX), srcY + height);", "+\t\t\t\t\t\tOS.InvalidateRect(hwnd, lprcScroll, true);", "+\t\t\t\t\t}", "+\t\t\t\t\tif (deltaY != 0) {", "+\t\t\t\t\t\tint newY = destY - deltaY;", "+\t\t\t\t\t\tif (deltaY < 0) newY = destY + height;", "+\t\t\t\t\t\tOS.SetRect(lprcScroll, srcX, newY, srcX + width, newY + Math.abs(deltaY));", "+\t\t\t\t\t\tOS.InvalidateRect(hwnd, lprcScroll, true);", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2625bf52657aee88df137fa0d4a64cf2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "746fe6441506cb40673655a85d6587679ea0fd0c", "commitAfterChange": "788b093da8f54ec94d6ab0ae4d08ccec4c1464eb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public void copyArea(int srcX, int srcY, int width, int height, int destX, int destY)", "signatureAfterChange": "\r public void copyArea(int srcX, int srcY, int width, int height, int destX, int destY)", "diff": ["-\tif (OS.IsWinCE) SWT.error(SWT.ERROR_NOT_IMPLEMENTED);\r", "-\tint hwnd = OS.WindowFromDC(handle);\r", "+\t/*\r", "+\t* Feature in WinCE.  The function WindowFromDC is not part of the\r", "+\t* WinCE SDK.\r", "+\t*/\r", "+\tint hwnd = data.hwnd;\r", "-\t\tOS.ScrollWindowEx(hwnd, destX - srcX, destY - srcY, lprcScroll, lprcClip, 0, null, OS.SW_INVALIDATE | OS.SW_ERASE);\r", "+\t\tint res = OS.ScrollWindowEx(hwnd, destX - srcX, destY - srcY, lprcScroll, lprcClip, 0, null, OS.SW_INVALIDATE | OS.SW_ERASE); \r", "+\r", "+\t\t/*\r", "+\t\t* Feature in WinCE.  ScrollWindowEx does not accept combined\r", "+\t\t* vertical and horizontal scrollings.  The fix is to do a\r", "+\t\t* BitBlt and invalidate the appropriate source area.\r", "+\t\t*/\r", "+\t\tif (res == 0 && OS.IsWinCE) {\r", "+\t\t\tOS.BitBlt(handle, destX, destY, width, height, handle, srcX, srcY, OS.SRCCOPY);\r", "+\t\t\tint deltaX = destX - srcX, deltaY = destY - srcY;\r", "+\t\t\tboolean disjoint = (destX + width < srcX) || (srcX + width < destX) || (destY + height < srcY) || (srcY + height < destY);\r", "+\t\t\tif (disjoint) {\r", "+\t\t\t\tOS.InvalidateRect(hwnd, lprcScroll, true);\r", "+\t\t\t} else {\r", "+\t\t\t\tRECT rect = new RECT();\r", "+\t\t\t\tif (deltaX != 0) {\r", "+\t\t\t\t\tint newX = destX - deltaX;\r", "+\t\t\t\t\tif (deltaX < 0) newX = destX + width;\r", "+\t\t\t\t\tOS.SetRect(rect, newX, srcY, newX + Math.abs(deltaX), srcY + height);\r", "+\t\t\t\t\tOS.InvalidateRect(hwnd, rect, true);\r", "+\t\t\t\t}\r", "+\t\t\t\tif (deltaY != 0) {\r", "+\t\t\t\t\tint newY = destY - deltaY;\r", "+\t\t\t\t\tif (deltaY < 0) newY = destY + height;\r", "+\t\t\t\t\tOS.SetRect(rect, srcX, newY, srcX + width, newY + Math.abs(deltaY));\r", "+\t\t\t\t\tOS.InvalidateRect(hwnd, rect, true);\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t}\r"]}], "num": 12515}