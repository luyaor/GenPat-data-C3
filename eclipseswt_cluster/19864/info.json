{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b7959aebe3385197a74b73d116e47427", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d07b71f46289abf5310887fd3eac90e3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "6792575e9ebdb961dabdb7dc271f66f85beb9c8c", "commitAfterChange": "c2c8934388f1a5373cba0d0285144058a8b19928", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": "  public boolean setText (String html)", "signatureAfterChange": "  public boolean setText (String html)", "diff": ["-\t * Feature of Mozilla.  Setting the browser's content from a stream does not", "+\t * Feature of XULRunner.  Setting the browser's content from a stream does not", "-\tunhookDOMListeners ();", "+\tif (IsXULRunner) unhookDOMListeners ();", "-\thookDOMListeners ();", "+", "+\t/*", "+\t * Feature of XULRunner.  Setting the browser's content from a stream does not", "+\t * lead to nsIWebProgressListener.OnStateChange being called with STATE_TRANSFERRING,", "+\t * which is the event that is used to hook DOM listeners, so hook them here.", "+\t */", "+\tif (IsXULRunner) hookDOMListeners ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27df7ca15ef41026e68fac19a0a65ed6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "caa512aad37dedd16ed84b5d8b521cfb5fd78adc", "commitAfterChange": "30a9563f38681ae614bc8194165e01d676d62b8c", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": "  public boolean setText (String html)", "signatureAfterChange": "  public boolean setText (String html)", "diff": ["+\t/*", "+\t * Feature of Mozilla.  Setting the browser's content from a stream does not", "+\t * fire a DOM \"unload\" event for the previous page, which is the event that", "+\t * is used to unhook registered DOM listeners.  As a workaround, unhook them", "+\t * now before setting the new page content.  ", "+\t */", "+\tunhookDOMListeners ();", "+", "+\thookDOMListeners ();"]}], "num": 19864}