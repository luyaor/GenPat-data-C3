{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5cb36949b32010aa7bff4932f1a1b63c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38971c44f1f8db60ccd8806dd2795c66", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/WebSite.java", "commitBeforeChange": "3a670e49d56d8ce2324eb811636b11c3f1a2af49", "commitAfterChange": "54a06f051b357cadc16a1f8df983127830a202a7", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "  int TranslateAccelerator(int lpMsg, int pguidCmdGroup, int nCmdID)", "signatureAfterChange": "  int TranslateAccelerator(int lpMsg, int pguidCmdGroup, int nCmdID)", "diff": ["-\t* the Internet Explorer shortcuts.  F5 causes refresh.  CTRL-N opens a standalone Internet ", "-\t* Explorer.  These behaviours are undesired when rendering HTML in memory.", "-\t* The workaround is to block the default CTRL-N and F5 handling by IE when the URL is about:blank.", "+\t* the Internet Explorer shortcuts.  CTRL-N opens a standalone IE, which is undesirable", "+\t* and can cause a crash in some contexts.  F5 causes a refresh, which is not appropriate", "+\t* when rendering HTML from memory.  The workaround is to block the handling of these", "+\t* shortcuts by IE when necessary.", "-\tOleAutomation auto = new OleAutomation(this);", "-\tint[] rgdispid = auto.getIDsOfNames(new String[] { \"LocationURL\" }); //$NON-NLS-1$", "-\tVariant pVarResult = auto.getProperty(rgdispid[0]);", "-\tauto.dispose();", "-\tif (pVarResult != null) {", "-\t\tif (pVarResult.getType() == OLE.VT_BSTR) {", "-\t\t\tString url = pVarResult.getString();", "-\t\t\tif (url.equals(IE.ABOUT_BLANK)) {", "-\t\t\t\tMSG msg = new MSG();", "-\t\t\t\tOS.MoveMemory(msg, lpMsg, MSG.sizeof);", "-\t\t\t\tif (msg.message == OS.WM_KEYDOWN && msg.wParam == OS.VK_F5) result = COM.S_OK;", "-\t\t\t\tif (msg.message == OS.WM_KEYDOWN && msg.wParam == OS.VK_N && OS.GetKeyState (OS.VK_CONTROL) < 0) result = COM.S_OK;", "+\tMSG msg = new MSG();", "+\tOS.MoveMemory(msg, lpMsg, MSG.sizeof);", "+\tif (msg.message == OS.WM_KEYDOWN && msg.wParam == OS.VK_N && OS.GetKeyState (OS.VK_CONTROL) < 0) {", "+\t\tresult = COM.S_OK;", "+\t} else {", "+\t\tif (msg.message == OS.WM_KEYDOWN && msg.wParam == OS.VK_F5) {", "+\t\t\tOleAutomation auto = new OleAutomation(this);", "+\t\t\tint[] rgdispid = auto.getIDsOfNames(new String[] { \"LocationURL\" }); //$NON-NLS-1$", "+\t\t\tVariant pVarResult = auto.getProperty(rgdispid[0]);", "+\t\t\tauto.dispose();", "+\t\t\tif (pVarResult != null) {", "+\t\t\t\tif (pVarResult.getType() == OLE.VT_BSTR) {", "+\t\t\t\t\tString url = pVarResult.getString();", "+\t\t\t\t\tif (url.equals(IE.ABOUT_BLANK)) result = COM.S_OK;", "+\t\t\t\t}", "+\t\t\t\tpVarResult.dispose();", "-\t\tpVarResult.dispose();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dbf0fc8fa27a8ffdf72a252e213517c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/WebSite.java", "commitBeforeChange": "03e9e6eb9d4ad36ec8f95263229d6fbf1b98311a", "commitAfterChange": "52911904339b8301dfbfd66cbe5eb5d710bce246", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "  int TranslateAccelerator(int lpMsg, int pguidCmdGroup, int nCmdID)", "signatureAfterChange": "  int TranslateAccelerator(int lpMsg, int pguidCmdGroup, int nCmdID)", "diff": ["-\t* and can cause a crash in some contexts.  F5 causes a refresh, which is not appropriate", "+\t* and can cause a crash in some contexts.  CTRL-O is being intercepted by IE, but this", "+\t* accelerator should be handled by Eclipse. F5 causes a refresh, which is not appropriate", "-\t* shortcuts by IE when necessary.", "+\t* shortcuts by IE when necessary, and in some cases ensure that Eclipse has an opportunity", "+\t* to handle these accelerators.", "-\tif (msg.message == OS.WM_KEYDOWN && msg.wParam == OS.VK_N && OS.GetKeyState (OS.VK_CONTROL) < 0) {", "-\t\tresult = COM.S_OK;", "-\t} else {", "-\t\tif (msg.message == OS.WM_KEYDOWN && msg.wParam == OS.VK_F5) {", "-\t\t\tOleAutomation auto = new OleAutomation(this);", "-\t\t\tint[] rgdispid = auto.getIDsOfNames(new String[] { \"LocationURL\" }); //$NON-NLS-1$", "-\t\t\tVariant pVarResult = auto.getProperty(rgdispid[0]);", "-\t\t\tauto.dispose();", "-\t\t\tif (pVarResult != null) {", "-\t\t\t\tif (pVarResult.getType() == OLE.VT_BSTR) {", "-\t\t\t\t\tString url = pVarResult.getString();", "-\t\t\t\t\tif (url.equals(IE.ABOUT_BLANK)) result = COM.S_OK;", "+\tif (msg.message == OS.WM_KEYDOWN) {", "+\t\tswitch (msg.wParam) {", "+\t\t\tcase OS.VK_N:", "+\t\t\tcase OS.VK_O:", "+\t\t\t\tif (OS.GetKeyState (OS.VK_CONTROL) < 0) {", "+\t\t\t\t\tgetParent().setData(CONSUME_KEY, \"true\"); //$NON-NLS-1$", "+\t\t\t\t\tresult = COM.S_OK;", "-\t\t\t\tpVarResult.dispose();", "-\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase OS.VK_F5:", "+\t\t\t\tOleAutomation auto = new OleAutomation(this);", "+\t\t\t\tint[] rgdispid = auto.getIDsOfNames(new String[] { \"LocationURL\" }); //$NON-NLS-1$", "+\t\t\t\tVariant pVarResult = auto.getProperty(rgdispid[0]);", "+\t\t\t\tauto.dispose();", "+\t\t\t\tif (pVarResult != null) {", "+\t\t\t\t\tif (pVarResult.getType() == OLE.VT_BSTR) {", "+\t\t\t\t\t\tString url = pVarResult.getString();", "+\t\t\t\t\t\tif (url.equals(IE.ABOUT_BLANK)) result = COM.S_OK;", "+\t\t\t\t\t}", "+\t\t\t\t\tpVarResult.dispose();", "+\t\t\t\t}", "+\t\t\t\tbreak;"]}], "num": 1403}