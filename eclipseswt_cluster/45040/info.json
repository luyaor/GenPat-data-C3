{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "128929e1fe35b43eb4f8b588cf0fdbd4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "016d8659ceca4ba9a08966746cbd29bb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "4def951fc85e643080de398e85c25cb30ec79f91", "commitAfterChange": "ea10febb5ae3b0d1b19a13c89b6c7b27ab367f3a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 19, "signatureBeforeChange": "  void hookEvents ()", "signatureAfterChange": "  void hookEvents ()", "diff": ["-void hookEvents () {", "-\tsuper.hookEvents ();", "-\tif ((style & SWT.SEPARATOR) != 0) return;", "-\tDisplay display = getDisplay ();", "-\tint windowProc2 = display.windowProc2;", "-\tint windowProc3 = display.windowProc3;", "-\tOS.g_signal_connect (handle, OS.clicked, windowProc2, SWT.Selection);", "-\tOS.g_signal_connect (handle, OS.enter_notify_event, windowProc3, SWT.MouseEnter);", "-\tOS.g_signal_connect (handle, OS.leave_notify_event, windowProc3, SWT.MouseExit);", "-", "-\t/*", "-\t * Feature in GTK.", "-\t * Usually, GTK widgets propagate all events to their parent when they", "-\t * are done their own processing.  However, in contrast to other widgets,", "-\t * the buttons that make up the tool items, do not propagate the mouse", "-\t * up/down events.", "-\t * (It is interesting to note that they DO propagate mouse motion events.)", "-\t */", "-\tint mask =", "-\t\tOS.GDK_EXPOSURE_MASK | OS.GDK_POINTER_MOTION_MASK |", "-\t\tOS.GDK_BUTTON_PRESS_MASK | OS.GDK_BUTTON_RELEASE_MASK | ", "-\t\tOS.GDK_ENTER_NOTIFY_MASK | OS.GDK_LEAVE_NOTIFY_MASK | ", "-\t\tOS.GDK_KEY_PRESS_MASK | OS.GDK_KEY_RELEASE_MASK |", "-\t\tOS.GDK_FOCUS_CHANGE_MASK;", "-\tOS.gtk_widget_add_events (handle, mask);", "-\tOS.g_signal_connect (handle, OS.button_press_event, windowProc3, SWT.MouseDown);", "-\tOS.g_signal_connect (handle, OS.button_release_event, windowProc3, SWT.MouseUp);", "-}", "+", "+void hookEvents () {", "+\tsuper.hookEvents ();", "+\tif ((style & SWT.SEPARATOR) != 0) return;", "+\tDisplay display = getDisplay ();", "+\tint windowProc2 = display.windowProc2;", "+\tint windowProc3 = display.windowProc3;", "+\tOS.g_signal_connect (handle, OS.clicked, windowProc2, CLICKED);", "+\tOS.g_signal_connect (handle, OS.enter_notify_event, windowProc3, ENTER_NOTIFY_EVENT);", "+\tOS.g_signal_connect (handle, OS.leave_notify_event, windowProc3, LEAVE_NOTIFY_EVENT);", "+", "+\t/*", "+\t * Feature in GTK.", "+\t * Usually, GTK widgets propagate all events to their parent when they", "+\t * are done their own processing.  However, in contrast to other widgets,", "+\t * the buttons that make up the tool items, do not propagate the mouse", "+\t * up/down events.", "+\t * (It is interesting to note that they DO propagate mouse motion events.)", "+\t */", "+\tint mask =", "+\t\tOS.GDK_EXPOSURE_MASK | OS.GDK_POINTER_MOTION_MASK |", "+\t\tOS.GDK_BUTTON_PRESS_MASK | OS.GDK_BUTTON_RELEASE_MASK | ", "+\t\tOS.GDK_ENTER_NOTIFY_MASK | OS.GDK_LEAVE_NOTIFY_MASK | ", "+\t\tOS.GDK_KEY_PRESS_MASK | OS.GDK_KEY_RELEASE_MASK |", "+\t\tOS.GDK_FOCUS_CHANGE_MASK;", "+\tOS.gtk_widget_add_events (handle, mask);", "+\tOS.g_signal_connect (handle, OS.button_press_event, windowProc3, BUTTON_PRESS_EVENT);", "+\tOS.g_signal_connect (handle, OS.button_release_event, windowProc3, BUTTON_RELEASE_EVENT);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "180e2afe12a438bfeb3d4e3b7ce0d18f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "add63531e54321a29c008d33afde4204f0cb5aee", "commitAfterChange": "96fd165a61160456fdae7b1059d270095fdb471e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  void hookEvents ()", "signatureAfterChange": "  void hookEvents ()", "diff": ["-\t//FIXME - missing button handle", "-\tint [] handles = new int [] {entryHandle, listHandle, /*combo.button*/};", "+\tint [] handles = new int [] {arrowHandle, entryHandle, listHandle};", "-\t\tOS.gtk_widget_add_events (handle, mask);", "-\t\tOS.g_signal_connect (handle, OS.button_press_event, windowProc3, BUTTON_PRESS_EVENT);", "-\t\tOS.g_signal_connect (handle, OS.button_release_event, windowProc3, BUTTON_RELEASE_EVENT);", "-\t\tOS.g_signal_connect (handle, OS.motion_notify_event, windowProc3, MOTION_NOTIFY_EVENT);", "-\t\tOS.g_signal_connect (handle, OS.key_press_event, windowProc3, KEY_PRESS_EVENT);", "-\t\tOS.g_signal_connect (handle, OS.key_release_event, windowProc3, KEY_RELEASE_EVENT);", "-\t", "-\t\t/*", "-\t\t* Feature in GTK.  Events such as mouse move are propagate up", "-\t\t* the widget hierarchy and are seen by the parent.  This is the", "-\t\t* correct GTK behavior but not correct for SWT.  The fix is to", "-\t\t* hook a signal after and stop the propagation using a negative", "-\t\t* event number to distinguish this case.", "-\t\t*/", "-\t\tOS.g_signal_connect_after (handle, OS.button_press_event, windowProc3, -BUTTON_PRESS_EVENT);", "-\t\tOS.g_signal_connect_after (handle, OS.button_release_event, windowProc3, -BUTTON_RELEASE_EVENT);", "-\t\tOS.g_signal_connect_after (handle, OS.motion_notify_event, windowProc3, -MOTION_NOTIFY_EVENT);", "+\t\tif (handle != 0) {", "+\t\t\tOS.gtk_widget_add_events (handle, mask);", "+\t\t\tOS.g_signal_connect (handle, OS.button_press_event, windowProc3, BUTTON_PRESS_EVENT);", "+\t\t\tOS.g_signal_connect (handle, OS.button_release_event, windowProc3, BUTTON_RELEASE_EVENT);", "+\t\t\tOS.g_signal_connect (handle, OS.motion_notify_event, windowProc3, MOTION_NOTIFY_EVENT);", "+\t\t\tOS.g_signal_connect (handle, OS.key_press_event, windowProc3, KEY_PRESS_EVENT);", "+\t\t\tOS.g_signal_connect (handle, OS.key_release_event, windowProc3, KEY_RELEASE_EVENT);", "+\t\t", "+\t\t\t/*", "+\t\t\t* Feature in GTK.  Events such as mouse move are propagate up", "+\t\t\t* the widget hierarchy and are seen by the parent.  This is the", "+\t\t\t* correct GTK behavior but not correct for SWT.  The fix is to", "+\t\t\t* hook a signal after and stop the propagation using a negative", "+\t\t\t* event number to distinguish this case.", "+\t\t\t*/", "+\t\t\tOS.g_signal_connect_after (handle, OS.button_press_event, windowProc3, -BUTTON_PRESS_EVENT);", "+\t\t\tOS.g_signal_connect_after (handle, OS.button_release_event, windowProc3, -BUTTON_RELEASE_EVENT);", "+\t\t\tOS.g_signal_connect_after (handle, OS.motion_notify_event, windowProc3, -MOTION_NOTIFY_EVENT);", "+\t\t}"]}], "num": 45040}