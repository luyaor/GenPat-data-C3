{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c8543ae6367d21f8b0839496e18a50d8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50d44be31c93dfdf455247949f841e50", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "4795e367064c6a575be6f5a39856b9babc26012b", "commitAfterChange": "05c7d4bb9f02f88c0d9d0a290cb1774b2aae3613", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 121, "signatureBeforeChange": " boolean traverseGroup (boolean next)", "signatureAfterChange": " boolean traverseGroup (boolean next)", "diff": ["-\treturn true;", "+\tControl root = computeTabRoot();", "+\tControl group = computeTabGroup();", "+\tControl[] list = root.computeTabList();", "+\tint length = list.length;", "+\tint index = 0;", "+\twhile (index < length) {", "+\t\tif (list [index] == group) break;", "+\t\tindex++;", "+\t}", "+\t/*", "+\t* It is possible (but unlikely), that application", "+\t* code could have disposed the widget in focus in", "+\t* or out events.  Ensure that a disposed widget is", "+\t* not accessed.", "+\t*/", "+\tif (index == length) return false;", "+\tint start = index, offset = (next) ? 1 : -1;", "+\twhile ((index = ((index + offset + length) % length)) != start) {", "+\t\tControl control = list [index];", "+\t\tif (!control.isDisposed () && control.setTabGroupFocus ()) {", "+\t\t\tif (!isDisposed () && !isFocusControl ()) return true;", "+\t\t}", "+\t}", "+\tif (group.isDisposed ()) return false;", "+\treturn group.setTabGroupFocus ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "723e8bd051d6b5072e05e569c439e7c6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 124, "signatureBeforeChange": "  boolean traverseGroup (boolean next)", "signatureAfterChange": "  boolean traverseGroup (boolean next)", "diff": ["-\tControl root = computeTabRoot ();", "-\tControl group = computeTabGroup ();", "-\tControl [] list = root.computeTabList ();", "-\tint length = list.length;", "-\tint index = 0;", "-\twhile (index < length) {", "-\t\tif (list [index] == group) break;", "-\t\tindex++;", "-\t}", "-\t/*", "-\t* It is possible (but unlikely), that application", "-\t* code could have disposed the widget in focus in", "-\t* or out events.  Ensure that a disposed widget is", "-\t* not accessed.", "-\t*/", "-\tif (index == length) return false;", "-\tint start = index, offset = (next) ? 1 : -1;", "-\twhile ((index = ((index + offset + length) % length)) != start) {", "-\t\tControl control = list [index];", "-\t\tif (!control.isDisposed () && control.setTabGroupFocus ()) {", "-\t\t\tif (!isDisposed () && !isFocusControl ()) return true;", "-\t\t}", "-\t}", "-\tif (group.isDisposed ()) return false;", "-\treturn group.setTabGroupFocus ();", "+\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c60e76664a4f15de78a9ce79a2dd013e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "35b3e5ac684cde54119d58ece02c16504e7a077c", "commitAfterChange": "43cccb7c09eeeeb743e40d795384af951511f59c", "methodNumberBeforeChange": 136, "methodNumberAfterChange": 140, "signatureBeforeChange": "  boolean traverseGroup (boolean next)", "signatureAfterChange": "  boolean traverseGroup (boolean next)", "diff": ["-\treturn false;", "+\tControl root = computeTabRoot ();", "+\tControl group = computeTabGroup ();", "+\tControl [] list = root.computeTabList ();", "+\tint length = list.length;", "+\tint index = 0;", "+\twhile (index < length) {", "+\t\tif (list [index] == group) break;", "+\t\tindex++;", "+\t}", "+\t/*", "+\t* It is possible (but unlikely), that application", "+\t* code could have disposed the widget in focus in", "+\t* or out events.  Ensure that a disposed widget is", "+\t* not accessed.", "+\t*/", "+\tif (index == length) return false;", "+\tint start = index, offset = (next) ? 1 : -1;", "+\twhile ((index = ((index + offset + length) % length)) != start) {", "+\t\tControl control = list [index];", "+\t\tif (!control.isDisposed () && control.setTabGroupFocus ()) {", "+\t\t\tif (!isDisposed () && !isFocusControl ()) return true;", "+\t\t}", "+\t}", "+\tif (group.isDisposed ()) return false;", "+\treturn group.setTabGroupFocus ();"]}], "num": 37743}