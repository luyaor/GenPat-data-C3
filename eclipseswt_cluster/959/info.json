{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d76036fa3c17c04eb28bab8c309c6f65", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f72d5bbdb6e24d51e42ce8071ec2e522", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "e86035e65ddb9883c55bfd1d1805aa43058a91c8", "commitAfterChange": "ee9b40960339cb073a160f4a991908b1b404f3db", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void create(Composite parent, int style)", "signatureAfterChange": "  public void create(Composite parent, int style)", "diff": ["-\t\t\t\t* embedded within the Browser (eg.- if the WebSite has focus then", "-\t\t\t\t* a typical backwards-traversal re-assigns focus within the parent", "-\t\t\t\t* Browser).  The workaround is to listen for traversals and re-", "-\t\t\t\t* perform the traversal on the appropriate control.", "+\t\t\t\t* control embedded within the Browser.  The workaround is to", "+\t\t\t\t* listen for traversals and re-perform the traversal on the", "+\t\t\t\t* appropriate control.", "-\t\t\t\t\tif (e.widget instanceof WebSite) {", "-\t\t\t\t\t\tif (e.detail == SWT.TRAVERSE_TAB_PREVIOUS && e.doit) {", "-\t\t\t\t\t\t\tbrowser.traverse(SWT.TRAVERSE_TAB_PREVIOUS);", "-\t\t\t\t\t\t\te.doit = false;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else { /* instanceof Browser */", "-\t\t\t\t\t\tif (e.detail == SWT.TRAVERSE_TAB_NEXT) {", "-\t\t\t\t\t\t\tif (ignoreTraverse) {", "-\t\t\t\t\t\t\t\tignoreTraverse = false;", "-\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tignoreTraverse = true;", "-\t\t\t\t\t\t\te.doit = nextTraverseDoit;", "-\t\t\t\t\t\t\tbrowser.notifyListeners(e.type, e);", "-\t\t\t\t\t\t\te.type = SWT.NONE;", "-\t\t\t\t\t\t\tif (e.doit) {", "-\t\t\t\t\t\t\t\tsite.traverse(SWT.TRAVERSE_TAB_NEXT);", "-\t\t\t\t\t\t\t\te.doit = false;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\te.doit = nextTraverseDoit;", "-\t\t\t\t\t\t}", "+\t\t\t\t\tif (e.detail == SWT.TRAVERSE_TAB_PREVIOUS && e.widget instanceof WebSite) {", "+\t\t\t\t\t\t/* otherwise will traverse to the Browser control */", "+\t\t\t\t\t\tbrowser.traverse(SWT.TRAVERSE_TAB_PREVIOUS, e);", "+\t\t\t\t\t\te.doit = false;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (e.detail == SWT.TRAVERSE_TAB_NEXT && e.widget instanceof Browser) {", "+\t\t\t\t\t\t/* otherwise will traverse to the WebSite control */", "+\t\t\t\t\t\tsite.traverse(SWT.TRAVERSE_TAB_NEXT, e);", "+\t\t\t\t\t\te.doit = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3680ffef948d88ba9be89356d82b3947", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "953ca18350a344dd04af4811bafee035eeede5d1", "commitAfterChange": "1990d21b38ad9eb025b792e0e6abf2d70c98eec0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void create(Composite parent, int style)", "signatureAfterChange": "  public void create(Composite parent, int style)", "diff": ["-\t\t\t\t/* ", "-\t\t\t\t * FocusIn and Traverse are hooked to handle traversal into", "-\t\t\t\t * and out of the Browser when it has key listeners.", "-\t\t\t\t */", "+\t\t\t\t/*", "+\t\t\t\t* Tabbing out of the browser can fail as a result of the WebSite", "+\t\t\t\t* embedded within the Browser (eg.- if the WebSite has focus then", "+\t\t\t\t* a typical backwards-traversal re-assigns focus within the parent", "+\t\t\t\t* Browser).  The workaround is to listen for traversals and re-", "+\t\t\t\t* perform the traversal on the appropriate control.", "+\t\t\t\t*/", "-\t\t\t\t\tif (browser.isListening(SWT.KeyDown) || browser.isListening(SWT.KeyUp)) {", "-\t\t\t\t\t\tif (e.detail == SWT.TRAVERSE_TAB_PREVIOUS) {", "+\t\t\t\t\tif (e.widget instanceof WebSite) {", "+\t\t\t\t\t\tif (e.detail == SWT.TRAVERSE_TAB_PREVIOUS && e.doit) {", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else { /* instanceof Browser */", "+\t\t\t\t\t\tif (e.detail == SWT.TRAVERSE_TAB_NEXT) {", "+\t\t\t\t\t\t\tif (ignoreTraverse) {", "+\t\t\t\t\t\t\t\tignoreTraverse = false;", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tignoreTraverse = true;", "+\t\t\t\t\t\t\te.doit = nextTraverseDoit;", "+\t\t\t\t\t\t\tbrowser.notifyListeners(e.type, e);", "+\t\t\t\t\t\t\te.type = SWT.NONE;", "+\t\t\t\t\t\t\tif (e.doit) {", "+\t\t\t\t\t\t\t\tsite.traverse(SWT.TRAVERSE_TAB_NEXT);", "+\t\t\t\t\t\t\t\te.doit = false;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\te.doit = nextTraverseDoit;", "+\tbrowser.addListener(SWT.Traverse, listener);"]}], "num": 959}