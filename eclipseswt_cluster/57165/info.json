{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e0bff8ee23486f33a6b6688d4e115f59", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ac015716c27db27e5419546f81c7971", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "3f33e2ee9272fba6be3a63b7b75ef498c2473100", "commitAfterChange": "b4868533def1ddff0d2225e5c0ba417b8720cc48", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " StyleItem[] reorder (StyleItem[] runs)", "signatureAfterChange": " StyleItem[] reorder (StyleItem[] runs)", "diff": ["-\tbyte[] bidiLevels = new byte[runs.length];", "-\tfor (int i=0; i<runs.length; i++) {", "+\tint length = runs.length;", "+\tif (length <= 1) return runs;", "+\tbyte[] bidiLevels = new byte[length];", "+\tfor (int i=0; i<length; i++) {", "-\tint[] log2vis = new int[runs.length];", "-\tOS.ScriptLayout(runs.length, bidiLevels, null, log2vis);", "-\tStyleItem[] result = new StyleItem[runs.length];", "-\tfor (int i=0; i<runs.length; i++) {", "+\t/*", "+\t* Feature in Windows.  If the orientation is RTL Uniscribe will", "+\t* resolve the level of line breaks to 1, this can cause the line ", "+\t* break to be reorder to the middle of the line. The fix is to set", "+\t* the level to zero to prevent it to be reordered.", "+\t*/", "+\tStyleItem lastRun = runs[length - 1];", "+\tif (lastRun.lineBreak && !lastRun.softBreak) {", "+\t\tbidiLevels[length - 1] = 0;", "+\t}", "+\tint[] log2vis = new int[length];", "+\tOS.ScriptLayout(length, bidiLevels, null, log2vis);", "+\tStyleItem[] result = new StyleItem[length];", "+\tfor (int i=0; i<length; i++) {", "-\t\tfor (int i = 0; i < (result.length - 1) / 2 ; i++) {", "+\t\tfor (int i = 0; i < (length - 1) / 2 ; i++) {", "-\t\t\tresult[i] = result[result.length - i - 2];", "-\t\t\tresult[result.length - i - 2] = tmp;", "+\t\t\tresult[i] = result[length - i - 2];", "+\t\t\tresult[length - i - 2] = tmp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe73f95286b2e881e06adbb26d38d229", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "b16a097ce1f227d4fd237cb6f8c0ba950eb50b9e", "commitAfterChange": "ad9e4c7cb4e85f9de20630936ecc2b154a562c71", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 64, "signatureBeforeChange": "  int itemCompareProc (int browser, int itemOne, int itemTwo, int sortProperty)", "signatureAfterChange": "  int itemCompareProc (int browser, int itemOne, int itemTwo, int sortProperty)", "diff": ["-\tint index1 = itemOne - 1;", "-\tif (!(0 <= index1 && index1 < items.length)) return OS.noErr;", "-\tint index2 = itemTwo - 1;", "-\tif (!(0 <= index2 && index2 < items.length)) return OS.noErr;", "+\tif (!(0 < itemOne && itemOne <= items.length)) return OS.noErr;", "+\tif (!(0 < itemTwo && itemTwo <= items.length)) return OS.noErr;", "+\tTreeItem item1 = items [itemOne - 1];", "+\tTreeItem item2 = items [itemTwo - 1];", "+\tif (item1 == null || item2 == null) return OS.noErr;", "+\tint index1 = _indexOf (item1.parentItem, item1);", "+\tint index2 = _indexOf (item2.parentItem , item2);", "-\t\treturn items [index1].index > items [index2].index ? 1 : 0;", "+\t\treturn index1 > index2 ? 1 : 0;", "-\treturn items [index1].index < items [index2].index ? 1 : 0;", "+\treturn index1 < index2 ? 1 : 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9667db693343585310aa8fb53f7ed0b3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "53d68389d874bf0612678cd48bcc79b21f414a1e", "commitAfterChange": "d3976c81101b5b8e71696348322de538640ebfdd", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  void createItem (TableColumn column, int index)", "signatureAfterChange": "  void createItem (TableColumn column, int index)", "diff": ["-\tif (count != 0) {", "-\t\tint itemCount = OS.SendMessage (handle, OS.LVM_GETITEMCOUNT, 0, 0);", "-\t\tfor (int i=0; i<itemCount; i++) {", "-\t\t\tTableItem item = items [i];", "-\t\t\tif (item != null) {", "-\t\t\t\tString [] strings = item.strings;", "-\t\t\t\tif (strings != null) {", "-\t\t\t\t\tString [] temp = new String [columnCount];", "-\t\t\t\t\tSystem.arraycopy (strings, 0, temp, 0, index);", "-\t\t\t\t\tSystem.arraycopy (strings, index, temp, index+1, columnCount-index-1);", "-\t\t\t\t\ttemp [index] = \"\";", "-\t\t\t\t\titem.strings = temp;", "+\tint itemCount = OS.SendMessage (handle, OS.LVM_GETITEMCOUNT, 0, 0);", "+\tfor (int i=0; i<itemCount; i++) {", "+\t\tTableItem item = items [i];", "+\t\tif (item != null) {", "+\t\t\tString [] strings = item.strings;", "+\t\t\tif (strings != null) {", "+\t\t\t\tString [] temp = new String [columnCount];", "+\t\t\t\tSystem.arraycopy (strings, 0, temp, 0, index);", "+\t\t\t\tSystem.arraycopy (strings, index, temp, index+1, columnCount-index-1);", "+\t\t\t\titem.strings = temp;", "+\t\t\t}", "+\t\t\tImage [] images = item.images;", "+\t\t\tif (images != null) {", "+\t\t\t\tImage [] temp = new Image [columnCount];", "+\t\t\t\tSystem.arraycopy (images, 0, temp, 0, index);", "+\t\t\t\tSystem.arraycopy (images, index, temp, index+1, columnCount-index-1);", "+\t\t\t\titem.images = temp;", "+\t\t\t}", "+\t\t\tif (index == 0) {", "+\t\t\t\tif (count != 0) {", "+\t\t\t\t\tif (strings == null) {", "+\t\t\t\t\t\titem.strings = new String [columnCount];", "+\t\t\t\t\t\titem.strings [1] = item.text;", "+\t\t\t\t\t}", "+\t\t\t\t\titem.text = \"\";", "+\t\t\t\t\tif (images == null) {", "+\t\t\t\t\t\titem.images = new Image [columnCount];", "+\t\t\t\t\t\titem.images [1] = item.image;", "+\t\t\t\t\t}", "+\t\t\t\t\titem.image = null;", "-\t\t\t\tif (index == 0) item.text = \"\";", "-\t\t\t\tImage [] images = item.images;", "-\t\t\t\tif (images != null) {", "-\t\t\t\t\tImage [] temp = new Image [columnCount];", "-\t\t\t\t\tSystem.arraycopy (images, 0, temp, 0, index);", "-\t\t\t\t\tSystem.arraycopy (images, index, temp, index+1, columnCount-index-1);", "-\t\t\t\t\titem.images = temp;", "-\t\t\t\t}", "-\t\t\t\tif (index == 0) item.image = null;", "-\t\t\t\tif (item.cellBackground != null) {", "-\t\t\t\t\tint [] cellBackground = item.cellBackground;", "-\t\t\t\t\tint [] temp = new int [columnCount];", "-\t\t\t\t\tSystem.arraycopy (cellBackground, 0, temp, 0, index);", "-\t\t\t\t\tSystem.arraycopy (cellBackground, index, temp, index+1, columnCount-index-1);", "-\t\t\t\t\ttemp [index] = -1;", "-\t\t\t\t\titem.cellBackground = temp;", "-\t\t\t\t}", "-\t\t\t\tif (item.cellForeground != null) {", "-\t\t\t\t\tint [] cellForeground = item.cellForeground;", "-\t\t\t\t\tint [] temp = new int [columnCount];", "-\t\t\t\t\tSystem.arraycopy (cellForeground, 0, temp, 0, index);", "-\t\t\t\t\tSystem.arraycopy (cellForeground, index, temp, index+1, columnCount-index-1);", "-\t\t\t\t\ttemp [index] = -1;", "-\t\t\t\t\titem.cellForeground = temp;", "-\t\t\t\t}", "-\t\t\t\tif (item.cellFont != null) {", "-\t\t\t\t\tint [] cellFont = item.cellFont;", "-\t\t\t\t\tint [] temp = new int [columnCount];", "-\t\t\t\t\tSystem.arraycopy (cellFont, 0, temp, 0, index);", "-\t\t\t\t\tSystem.arraycopy (cellFont, index, temp, index+1, columnCount-index-1);", "-\t\t\t\t\ttemp [index] = -1;", "-\t\t\t\t\titem.cellFont = temp;", "-\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (item.cellBackground != null) {", "+\t\t\t\tint [] cellBackground = item.cellBackground;", "+\t\t\t\tint [] temp = new int [columnCount];", "+\t\t\t\tSystem.arraycopy (cellBackground, 0, temp, 0, index);", "+\t\t\t\tSystem.arraycopy (cellBackground, index, temp, index+1, columnCount-index-1);", "+\t\t\t\ttemp [index] = -1;", "+\t\t\t\titem.cellBackground = temp;", "+\t\t\t}", "+\t\t\tif (item.cellForeground != null) {", "+\t\t\t\tint [] cellForeground = item.cellForeground;", "+\t\t\t\tint [] temp = new int [columnCount];", "+\t\t\t\tSystem.arraycopy (cellForeground, 0, temp, 0, index);", "+\t\t\t\tSystem.arraycopy (cellForeground, index, temp, index+1, columnCount-index-1);", "+\t\t\t\ttemp [index] = -1;", "+\t\t\t\titem.cellForeground = temp;", "+\t\t\t}", "+\t\t\tif (item.cellFont != null) {", "+\t\t\t\tint [] cellFont = item.cellFont;", "+\t\t\t\tint [] temp = new int [columnCount];", "+\t\t\t\tSystem.arraycopy (cellFont, 0, temp, 0, index);", "+\t\t\t\tSystem.arraycopy (cellFont, index, temp, index+1, columnCount-index-1);", "+\t\t\t\ttemp [index] = -1;", "+\t\t\t\titem.cellFont = temp;", "-\t\t\tint itemCount = OS.SendMessage (handle, OS.LVM_GETITEMCOUNT, 0, 0);"]}], "num": 57165}