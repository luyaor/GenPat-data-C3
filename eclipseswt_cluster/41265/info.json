{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3a9b5356776d6855e90a4d9e2a49f017", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ae9cd84579d3f412f9da6bdc88cd09c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/LockGenerator.java", "commitBeforeChange": "dc99d9bb9843280e22befd705fd4e0f15ba22ec9", "commitAfterChange": "da66ed50e7f2fec0e5faf4b617a73367a0acde7d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  String getReturn(Method method)", "signatureAfterChange": "  String getReturn(JNIMethod method)", "diff": ["-String getReturn(Method method) {", "-\tClass returnType = method.getReturnType();", "-\tif (returnType != Integer.TYPE) return getTypeSignature3(returnType);", "+String getReturn(JNIMethod method) {", "+\tJNIType returnType = method.getReturnType();", "+\tif (!returnType.isType(\"int\")) return returnType.getTypeSignature3(false);", "-\t\t\treturn getTypeSignature3(Integer.TYPE) + \" /*long*/\";", "+\t\t\treturn new ReflectType(Integer.TYPE).getTypeSignature3(false) + \" /*long*/\";", "-\treturn getTypeSignature3(Integer.TYPE);", "+\treturn new ReflectType(Integer.TYPE).getTypeSignature3(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e092dbebef21e1b38e89c223dd5aed0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/NativesGenerator.java", "commitBeforeChange": "dc99d9bb9843280e22befd705fd4e0f15ba22ec9", "commitAfterChange": "da66ed50e7f2fec0e5faf4b617a73367a0acde7d", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 23, "signatureBeforeChange": "  void generateFunctionPrototype(Method method, String function, Class[] paramTypes, Class returnType, boolean singleLine)", "signatureAfterChange": "  void generateFunctionPrototype(JNIMethod method, String function, JNIParameter[] params, JNIType returnType, JNIType returnType64, boolean singleLine)", "diff": ["-void generateFunctionPrototype(Method method, String function, Class[] paramTypes, Class returnType, boolean singleLine) {", "+void generateFunctionPrototype(JNIMethod method, String function, JNIParameter[] params, JNIType returnType, JNIType returnType64, boolean singleLine) {", "-\toutput(getTypeSignature2(returnType));", "+\toutput(returnType.getTypeSignature2(!returnType.equals(returnType64)));", "-\toutput(getClassName(method.getDeclaringClass()));", "+\toutput(method.getDeclaringClass().getSimpleName());", "-\tfor (int i = 0; i < paramTypes.length; i++) {", "-\t\tClass paramType = paramTypes[i];", "+\tfor (int i = 0; i < params.length; i++) {", "-\t\toutput(getTypeSignature2(paramType));", "+\t\tJNIType paramType = params[i].getType(), paramType64 = params[i].getType64();", "+\t\toutput(paramType.getTypeSignature2(!paramType.equals(paramType64)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edb98240e4fac190e2132a93d4ab82e6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/NativesGenerator.java", "commitBeforeChange": "dc99d9bb9843280e22befd705fd4e0f15ba22ec9", "commitAfterChange": "da66ed50e7f2fec0e5faf4b617a73367a0acde7d", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 17, "signatureBeforeChange": "  void generateFunctionCallLeftSide(Method method, MethodData methodData, Class returnType, boolean needsReturn)", "signatureAfterChange": "  void generateFunctionCallLeftSide(JNIMethod method, JNIType returnType, JNIType returnType64, boolean needsReturn)", "diff": ["-void generateFunctionCallLeftSide(Method method, MethodData methodData, Class returnType, boolean needsReturn) {", "+void generateFunctionCallLeftSide(JNIMethod method, JNIType returnType, JNIType returnType64, boolean needsReturn) {", "-\tif (returnType != Void.TYPE) {", "+\tif (!returnType.isType(\"void\")) {", "-\t\toutput(getTypeSignature2(returnType));", "+\t\toutput(returnType.getTypeSignature2(!returnType.equals(returnType64)));", "-\tif (methodData.getFlag(FLAG_ADDRESS)) {", "+\tif (method.getFlag(FLAG_ADDRESS)) {", "-\tif (methodData.getFlag(FLAG_JNI)) {", "+\tif (method.getFlag(FLAG_JNI)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "979762ed47d9c7fb379c54a14b84a85c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/NativesGenerator.java", "commitBeforeChange": "dc99d9bb9843280e22befd705fd4e0f15ba22ec9", "commitAfterChange": "da66ed50e7f2fec0e5faf4b617a73367a0acde7d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  void generateExitMacro(Method method, String function)", "signatureAfterChange": "  void generateEnterExitMacro(JNIMethod method, String function, String function64, boolean enter)", "diff": ["-void generateExitMacro(Method method, String function) {", "+void generateEnterExitMacro(JNIMethod method, String function, String function64, boolean enter) {", "+\tif (!function.equals(function64)) {", "+\t\toutput(\"#ifndef \");", "+\t\toutput(JNI64);", "+\t\toutputln();", "+\t}", "-\toutput(getClassName(method.getDeclaringClass()));", "-\toutput(\"_NATIVE_EXIT(env, that, \");", "+\toutput(method.getDeclaringClass().getSimpleName());", "+\toutput(\"_NATIVE_\");", "+\toutput(enter ? \"ENTER\" : \"EXIT\");", "+\toutput(\"(env, that, \");", "+\tif (!function.equals(function64)) {", "+\t\toutputln(\"#else\");", "+\t\toutput(\"\\t\");", "+\t\toutput(method.getDeclaringClass().getSimpleName());", "+\t\toutput(\"_NATIVE_\");", "+\t\toutput(enter ? \"ENTER\" : \"EXIT\");", "+\t\toutput(\"(env, that, \");", "+\t\toutput(function64);", "+\t\toutputln(\"_FUNC);\");", "+\t\toutputln(\"#endif\");", "+\t}"]}], "num": 41265}