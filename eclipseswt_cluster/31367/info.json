{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "14310c0a5e226a704c7d7556fc857253", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ef817c3af1b1033a0fdf2fac3bfcc1f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "a5c1cfcec95b92d93db65966120f9c3e9574da47", "commitAfterChange": "41bdae326eb353ce74e20d44ac4455a5c572579f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void create(Composite parent, int style)", "signatureAfterChange": "  public void create(Composite parent, int style)", "diff": ["-\tOleListener oleListener = new OleListener() {", "+\tfinal OleListener oleListener = new OleListener() {", "-\tsite.addEventListener(BeforeNavigate2, oleListener);", "-\tsite.addEventListener(CommandStateChange, oleListener);", "-\tsite.addEventListener(DocumentComplete, oleListener);", "-\tsite.addEventListener(NavigateComplete2, oleListener);", "-\tsite.addEventListener(NavigateError, oleListener);", "-\tsite.addEventListener(NewWindow2, oleListener);", "-\tsite.addEventListener(OnMenuBar, oleListener);", "-\tsite.addEventListener(OnStatusBar, oleListener);", "-\tsite.addEventListener(OnToolBar, oleListener);", "-\tsite.addEventListener(OnVisible, oleListener);", "-\tsite.addEventListener(ProgressChange, oleListener);", "-\tsite.addEventListener(StatusTextChange, oleListener);", "-\tsite.addEventListener(TitleChange, oleListener);", "-\tsite.addEventListener(WindowClosing, oleListener);", "-\tsite.addEventListener(WindowSetHeight, oleListener);", "-\tsite.addEventListener(WindowSetLeft, oleListener);", "-\tsite.addEventListener(WindowSetTop, oleListener);", "-\tsite.addEventListener(WindowSetWidth, oleListener);", "-\t", "+", "-\t", "+", "+", "+\t/*", "+\t* Navigate initially to about:blank, in order to be consistent with", "+\t* the other browser implementations which auto-navigate there on startup,", "+\t* and to work around IE bug http://support.microsoft.com/kb/320153.", "+\t* Do not add the oleListener callbacks until this navigate has completed", "+\t* so that clients will not receive events for this free navigation.", "+\t*/", "+\tnavigate(ABOUT_BLANK, null, null, true);", "+\tsite.addEventListener(DocumentComplete, new OleListener() {", "+\t\tpublic void handleEvent(OleEvent event) {", "+\t\t\tinitialNavigateComplete = true;", "+\t\t\tsite.removeEventListener(DocumentComplete, this);", "+", "+\t\t\tsite.addEventListener(BeforeNavigate2, oleListener);", "+\t\t\tsite.addEventListener(CommandStateChange, oleListener);", "+\t\t\tsite.addEventListener(DocumentComplete, oleListener);", "+\t\t\tsite.addEventListener(NavigateComplete2, oleListener);", "+\t\t\tsite.addEventListener(NavigateError, oleListener);", "+\t\t\tsite.addEventListener(NewWindow2, oleListener);", "+\t\t\tsite.addEventListener(OnMenuBar, oleListener);", "+\t\t\tsite.addEventListener(OnStatusBar, oleListener);", "+\t\t\tsite.addEventListener(OnToolBar, oleListener);", "+\t\t\tsite.addEventListener(OnVisible, oleListener);", "+\t\t\tsite.addEventListener(ProgressChange, oleListener);", "+\t\t\tsite.addEventListener(StatusTextChange, oleListener);", "+\t\t\tsite.addEventListener(TitleChange, oleListener);", "+\t\t\tsite.addEventListener(WindowClosing, oleListener);", "+\t\t\tsite.addEventListener(WindowSetHeight, oleListener);", "+\t\t\tsite.addEventListener(WindowSetLeft, oleListener);", "+\t\t\tsite.addEventListener(WindowSetTop, oleListener);", "+\t\t\tsite.addEventListener(WindowSetWidth, oleListener);", "+", "+\t\t\t/*", "+\t\t\t* If browser content was provided by the client before the", "+\t\t\t* initial navigate to about:blank completed then set it now.", "+\t\t\t*/", "+\t\t\tif (pendingText != null) {", "+\t\t\t\tsetText((String)pendingText[0], ((Boolean)pendingText[1]).booleanValue());", "+\t\t\t} else {", "+\t\t\t\tif (pendingUrl != null) {", "+\t\t\t\t\tsetUrl((String)pendingUrl[0], (String)pendingUrl[1], (String[])pendingUrl[2]);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tpendingText = pendingUrl = null;", "+\t\t}", "+\t});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac8854d971d429691d7a90bd84436d92", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "9fa79aeba4b9912c6be5926b5f6c38fc069dbacc", "commitAfterChange": "3c4f798159da31abdd1871f5b8302f18d5ff3bb2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public Browser(Composite parent, int style)", "signatureAfterChange": " public Browser(Composite parent, int style)", "diff": ["-\taddListener(SWT.Dispose, new Listener() {", "+", "+\tListener listener = new Listener() {", "-\t\t\tif (auto != null)", "-\t\t\t\tauto.dispose();", "-\t\t\tauto = null;", "+\t\t\tswitch (e.type) {", "+\t\t\t\tcase SWT.Dispose: {", "+\t\t\t\t\tif (auto != null) auto.dispose();", "+\t\t\t\t\tauto = null;", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t\tcase SWT.Resize: {", "+\t\t\t\t\tframe.setBounds(getClientArea());", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t\tcase SWT.KeyDown:", "+\t\t\t\tcase SWT.KeyUp: {", "+\t\t\t\t\tnotifyListeners(e.type, e);", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "-\t});", "-\taddListener(SWT.Resize, new Listener() {", "-\t\tpublic void handleEvent(Event e) {", "-\t\t\tframe.setBounds(getClientArea());", "-\t\t}", "-\t});", "-\tOleListener listener = new OleListener() {", "+\t};", "+\taddListener(SWT.Dispose, listener);", "+\taddListener(SWT.Resize, listener);", "+\tsite.addListener(SWT.KeyDown, listener);", "+\tsite.addListener(SWT.KeyUp, listener);", "+\t", "+\tOleListener oleListener = new OleListener() {", "-\tsite.addEventListener(BeforeNavigate2, listener);", "-\tsite.addEventListener(CommandStateChange, listener);", "-\tsite.addEventListener(DocumentComplete, listener);", "-\tsite.addEventListener(NavigateComplete2, listener);", "-\tsite.addEventListener(NewWindow2, listener);", "-\tsite.addEventListener(OnMenuBar, listener);", "-\tsite.addEventListener(OnStatusBar, listener);", "-\tsite.addEventListener(OnToolBar, listener);", "-\tsite.addEventListener(OnVisible, listener);", "-\tsite.addEventListener(ProgressChange, listener);", "-\tsite.addEventListener(StatusTextChange, listener);", "-\tsite.addEventListener(TitleChange, listener);", "-\tsite.addEventListener(WindowClosing, listener);", "-\tsite.addEventListener(WindowSetHeight, listener);", "-\tsite.addEventListener(WindowSetLeft, listener);", "-\tsite.addEventListener(WindowSetTop, listener);", "-\tsite.addEventListener(WindowSetWidth, listener);", "-\t\t", "+\tsite.addEventListener(BeforeNavigate2, oleListener);", "+\tsite.addEventListener(CommandStateChange, oleListener);", "+\tsite.addEventListener(DocumentComplete, oleListener);", "+\tsite.addEventListener(NavigateComplete2, oleListener);", "+\tsite.addEventListener(NewWindow2, oleListener);", "+\tsite.addEventListener(OnMenuBar, oleListener);", "+\tsite.addEventListener(OnStatusBar, oleListener);", "+\tsite.addEventListener(OnToolBar, oleListener);", "+\tsite.addEventListener(OnVisible, oleListener);", "+\tsite.addEventListener(ProgressChange, oleListener);", "+\tsite.addEventListener(StatusTextChange, oleListener);", "+\tsite.addEventListener(TitleChange, oleListener);", "+\tsite.addEventListener(WindowClosing, oleListener);", "+\tsite.addEventListener(WindowSetHeight, oleListener);", "+\tsite.addEventListener(WindowSetLeft, oleListener);", "+\tsite.addEventListener(WindowSetTop, oleListener);", "+\tsite.addEventListener(WindowSetWidth, oleListener);", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b147ef8a6b9970607fbbe55e628f9e0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "b4ae2dccb1afcb17304534adc1455fcf71d00263", "commitAfterChange": "8ef930f766ea10009bb20bfa077def090f5df7a9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void create(Composite parent, int style)", "signatureAfterChange": "  public void create(Composite parent, int style)", "diff": ["-\tfinal OleListener oleListener = new OleListener() {", "+\tOleListener oleListener = new OleListener() {", "+\t\t\t\t\t\t/* don't send client events if the initial navigate to about:blank has not completed */", "+\t\t\t\t\t\tif (!initialNavigateComplete) break;", "+", "+\t\t\t\t\t\tif (!initialNavigateComplete) {", "+\t\t\t\t\t\t\t/* this event marks the completion of the initial navigate to about:blank */", "+\t\t\t\t\t\t\tinitialNavigateComplete = true;", "+", "+\t\t\t\t\t\t\t/* if browser content has been provided by the client then set it now */", "+\t\t\t\t\t\t\tif (pendingText != null) {", "+\t\t\t\t\t\t\t\tsetText((String)pendingText[0], ((Boolean)pendingText[1]).booleanValue());", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tif (pendingUrl != null) {", "+\t\t\t\t\t\t\t\t\tsetUrl((String)pendingUrl[0], (String)pendingUrl[1], (String[])pendingUrl[2]);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tpendingText = pendingUrl = null;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+", "-\t", "+", "+\t\t\t\t\t\t/* don't send client events if the initial navigate to about:blank has not completed */", "+\t\t\t\t\t\tif (!initialNavigateComplete) break;", "+", "+\t\t\t\t\t\t/* don't send client events if the initial navigate to about:blank has not completed */", "+\t\t\t\t\t\tif (!initialNavigateComplete) break;", "+", "+\t\t\t\t\t\t/* don't send client events if the initial navigate to about:blank has not completed */", "+\t\t\t\t\t\tif (!initialNavigateComplete) break;", "+", "+\tsite.addEventListener(BeforeNavigate2, oleListener);", "+\tsite.addEventListener(CommandStateChange, oleListener);", "+\tsite.addEventListener(DocumentComplete, oleListener);", "+\tsite.addEventListener(NavigateComplete2, oleListener);", "+\tsite.addEventListener(NavigateError, oleListener);", "+\tsite.addEventListener(NewWindow2, oleListener);", "+\tsite.addEventListener(OnMenuBar, oleListener);", "+\tsite.addEventListener(OnStatusBar, oleListener);", "+\tsite.addEventListener(OnToolBar, oleListener);", "+\tsite.addEventListener(OnVisible, oleListener);", "+\tsite.addEventListener(ProgressChange, oleListener);", "+\tsite.addEventListener(StatusTextChange, oleListener);", "+\tsite.addEventListener(TitleChange, oleListener);", "+\tsite.addEventListener(WindowClosing, oleListener);", "+\tsite.addEventListener(WindowSetHeight, oleListener);", "+\tsite.addEventListener(WindowSetLeft, oleListener);", "+\tsite.addEventListener(WindowSetTop, oleListener);", "+\tsite.addEventListener(WindowSetWidth, oleListener);", "-\t* and to work around IE bug http://support.microsoft.com/kb/320153.", "-\t* Do not add the oleListener callbacks until this navigate has completed", "-\t* so that clients will not receive events for this free navigation.", "+\t* and to work around IE bug http://support.microsoft.com/kb/320153.  Any", "+\t* content that is set via setUrl() or setText() will be held as pending", "+\t* until the first DocumentComplete callback is received, indicating the", "+\t* completion of this initial navigate to about:blank.", "-\tsite.addEventListener(DocumentComplete, new OleListener() {", "-\t\tpublic void handleEvent(OleEvent event) {", "-\t\t\tinitialNavigateComplete = true;", "-\t\t\tsite.removeEventListener(DocumentComplete, this);", "-", "-\t\t\tsite.addEventListener(BeforeNavigate2, oleListener);", "-\t\t\tsite.addEventListener(CommandStateChange, oleListener);", "-\t\t\tsite.addEventListener(DocumentComplete, oleListener);", "-\t\t\tsite.addEventListener(NavigateComplete2, oleListener);", "-\t\t\tsite.addEventListener(NavigateError, oleListener);", "-\t\t\tsite.addEventListener(NewWindow2, oleListener);", "-\t\t\tsite.addEventListener(OnMenuBar, oleListener);", "-\t\t\tsite.addEventListener(OnStatusBar, oleListener);", "-\t\t\tsite.addEventListener(OnToolBar, oleListener);", "-\t\t\tsite.addEventListener(OnVisible, oleListener);", "-\t\t\tsite.addEventListener(ProgressChange, oleListener);", "-\t\t\tsite.addEventListener(StatusTextChange, oleListener);", "-\t\t\tsite.addEventListener(TitleChange, oleListener);", "-\t\t\tsite.addEventListener(WindowClosing, oleListener);", "-\t\t\tsite.addEventListener(WindowSetHeight, oleListener);", "-\t\t\tsite.addEventListener(WindowSetLeft, oleListener);", "-\t\t\tsite.addEventListener(WindowSetTop, oleListener);", "-\t\t\tsite.addEventListener(WindowSetWidth, oleListener);", "-", "-\t\t\t/*", "-\t\t\t* If browser content was provided by the client before the", "-\t\t\t* initial navigate to about:blank completed then set it now.", "-\t\t\t*/", "-\t\t\tif (pendingText != null) {", "-\t\t\t\tsetText((String)pendingText[0], ((Boolean)pendingText[1]).booleanValue());", "-\t\t\t} else {", "-\t\t\t\tif (pendingUrl != null) {", "-\t\t\t\t\tsetUrl((String)pendingUrl[0], (String)pendingUrl[1], (String[])pendingUrl[2]);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tpendingText = pendingUrl = null;", "-\t\t}", "-\t});"]}], "num": 31367}