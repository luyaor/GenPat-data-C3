{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f981ed76d7c72053abfd7b33a020c47c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f66a455df2b592a9109fa17e10bf4392", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "efa3cc10a3a052f8a67e5c48cf6286507347e1fd", "commitAfterChange": "b9b42edbf34f6ec383c2c1d7c5f17dfff2bb98fb", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": "\r int processIMEFocusIn ()", "signatureAfterChange": "\r int processIMEFocusIn ()", "diff": ["-\t* a GPF. The fix is to call XmImVaSetFocusValues instead.\r", "+\t* a GPF when the XmNfontList value does not containt a FontSet. The fix\r", "+\t* is to call XmImSetValues to set the values and then call\r", "+\t* XmImSetFocusValues.\r", "-\tOS.XmImVaSetFocusValues (handle, \r", "-\t\tOS.XmNforeground, getForegroundPixel(),\r", "-\t\tOS.XmNbackground, getBackgroundPixel(),\r", "-\t\tOS.XmNspotLocation, ptr,\r", "-\t\tOS.XmNfontList, font.handle,\r", "-\t\t0);\r", "+\tint[] argList = {\r", "+        OS.XmNforeground, getForegroundPixel(),\r", "+        OS.XmNbackground, getBackgroundPixel(),\r", "+        OS.XmNspotLocation, ptr,\r", "+        OS.XmNfontList, font.handle,\r", "+\t};\r", "+\tOS.XmImSetValues(handle, argList, argList.length / 2);\r", "+\tOS.XmImSetFocusValues (handle, null, 0);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d78f71e24c14434878c5f0b1887a5b5f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "b79ba2005210b58296b47fa06470ceb99d936ad1", "commitAfterChange": "5547944a22700b2edc1badfd225a2314a1868254", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 75, "signatureBeforeChange": "\r int processFocusIn ()", "signatureAfterChange": "\r int processFocusIn ()", "diff": ["-\tprocessIMEFocusIn ();\r", "+\tif (!hasIMSupport()) {\r", "+\t\tif (hooks (SWT.KeyDown) || hooks (SWT.KeyUp)) {\r", "+\t\t\tshort [] point = getIMECaretPos ();\r", "+\t\t\tint ptr = OS.XtMalloc (4);\r", "+\t\t\tOS.memmove (ptr, point, 4);\r", "+\t\t\r", "+\t\t\t/*\r", "+\t\t\t* Bug in Motif. On Linux Japanese only, XmImSetFocusValues will cause\r", "+\t\t\t* a GPF when the XmNfontList value does not containt a FontSet. The fix\r", "+\t\t\t* is to call XmImSetValues to set the values and then call\r", "+\t\t\t* XmImSetFocusValues.\r", "+\t\t\t*/\r", "+\t\t\tint[] argList = {\r", "+//\t\t\t\tOS.XmNforeground, getForegroundPixel(),\r", "+//\t\t\t\tOS.XmNbackground, getBackgroundPixel(),\r", "+\t\t\t\tOS.XmNspotLocation, ptr,\r", "+\t\t\t\tOS.XmNfontList, font.handle,\r", "+\t\t\t};\r", "+\t\t\tOS.XmImSetValues (handle, argList, argList.length / 2);\r", "+\t\t\tOS.XmImSetFocusValues (handle, null, 0);\r", "+\t\t\tif (ptr != 0) OS.XtFree (ptr);\r", "+\t\t}\r", "+\t}\t\r"]}], "num": 41168}