{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e2d7d8cde24a48172813e7c0a2ea89a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f1609d329273f766d1dbfd108013367", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "1cdb6ac60d808b5abe4b3260c8c5ac8c7e554559", "commitAfterChange": "79dc2e0426425c125758f7e958dd88564888758f", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void setMenu (Menu menu)", "signatureAfterChange": " public void setMenu (Menu menu)", "diff": ["-", "+\t", "-\tMenu oldMenu = this.menu;", "-\tif (oldMenu == menu) return;", "-\tif (oldMenu != null) oldMenu.cascade = null;", "-\tthis.menu = menu;", "-", "-\tif (parent == null) {", "-\t\tSystem.out.println(\"MenuItem.setMenu: parent == null\");", "-\t\treturn;", "+\tif (this.menu == menu) return;", "+\tif (this.menu != null) this.menu.cascade = null;", "+\tshort [] outIndex = new short [1];", "+\tif (OS.GetIndMenuItemWithCommandID (parent.handle, id, 1, null, outIndex) != OS.noErr) {", "+\t\terror (SWT.ERROR_CANNOT_SET_MENU);", "-\t", "-\t/* Assign the new menu in the OS */", "-\tint hMenu = parent.handle;", "-\tint newMenuHandle= 0;", "-\tif (menu != null) {", "+\tint newHandle = menu != null ? menu.handle : 0;", "+\tif (OS.SetMenuItemHierarchicalMenu (parent.handle, outIndex [0], newHandle) != OS.noErr) {", "+\t\terror (SWT.ERROR_CANNOT_SET_MENU);", "+\t}", "+\tif ((this.menu = menu) != null) {", "-\t\tnewMenuHandle= menu.handle;", "-\t}", "-\t", "-\tshort[] index= new short[1];", "-\tOS.GetIndMenuItemWithCommandID(hMenu, id, 1, null, index);", "-\tif (index[0] >= 1) {", "-\t\tif (OS.SetMenuItemHierarchicalMenu(hMenu, index[0], newMenuHandle) == OS.noErr) {", "-\t\t\tif (menu != null) {", "-\t\t\t\t// we set the menu's title to the item's title", "-\t\t\t\tint sHandle= 0;", "-\t\t\t\ttry {", "-\t\t\t\t\tsHandle= OS.CFStringCreateWithCharacters(removeMnemonicsAndShortcut(getText()));", "-\t\t\t\t\tOS.SetMenuTitleWithCFString(menu.handle, sHandle);", "-\t\t\t\t} finally {", "-\t\t\t\t\tif (sHandle != 0)", "-\t\t\t\t\t\tOS.CFRelease(sHandle);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t} else", "+\t\tint [] outString = new int [1];", "+\t\tif (OS.CopyMenuItemTextAsCFString (parent.handle, outIndex [0], outString) != OS.noErr) {", "+\t\t}", "+\t\tOS.SetMenuTitleWithCFString (menu.handle, outString [0]);", "+\t\tOS.CFRelease (outString [0]);", "-\t", "-\tparent.destroyAcceleratorTable ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6a6ccd8677a52d9461b5bea2bcd0312", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "13163ffb801b68fe75798ba09db22dc411fc60ae", "commitAfterChange": "e9cef2704b8fbeb607e5cdb6bad1b13dc87829dd", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 26, "signatureBeforeChange": " public void setMenu (Menu menu)", "signatureAfterChange": " public void setMenu (Menu menu)", "diff": ["-", "+\t", "-\tMenu oldMenu = this.menu;", "-\tif (oldMenu == menu) return;", "-\tif (oldMenu != null) oldMenu.cascade = null;", "-\tthis.menu = menu;", "-", "-\tif (parent == null) {", "-\t\tSystem.out.println(\"MenuItem.setMenu: parent == null\");", "-\t\treturn;", "+\tif (this.menu == menu) return;", "+\tif (this.menu != null) this.menu.cascade = null;", "+\tshort [] outIndex = new short [1];", "+\tif (OS.GetIndMenuItemWithCommandID (parent.handle, id, 1, null, outIndex) != OS.kNoErr) {", "+\t\terror (SWT.ERROR_CANNOT_SET_MENU);", "-\t", "-\t/* Assign the new menu in the OS */", "-\tint hMenu = parent.handle;", "-\tint newMenuHandle= 0;", "-\tif (menu != null) {", "+\tint inHierMenu = menu != null ? menu.handle : 0;", "+\tif (OS.SetMenuItemHierarchicalMenu (parent.handle, outIndex [0], inHierMenu) != OS.kNoErr) {", "+\t\terror (SWT.ERROR_CANNOT_SET_MENU);", "+\t}", "+\tif ((this.menu = menu) != null) {", "-\t\tnewMenuHandle= menu.handle;", "-\t}", "-\t", "-\tshort[] index= new short[1];", "-\tOS.GetIndMenuItemWithCommandID(hMenu, id, 1, null, index);", "-\tif (index[0] >= 1) {", "-\t\tif (OS.SetMenuItemHierarchicalMenu(hMenu, index[0], newMenuHandle) == OS.kNoErr) {", "-\t\t\tif (menu != null) {", "-\t\t\t\t// we set the menu's title to the item's title", "-\t\t\t\tint sHandle= 0;", "-\t\t\t\ttry {", "-\t\t\t\t\tsHandle= OS.CFStringCreateWithCharacters(removeMnemonicsAndShortcut(getText()));", "-\t\t\t\t\tOS.SetMenuTitleWithCFString(menu.handle, sHandle);", "-\t\t\t\t} finally {", "-\t\t\t\t\tif (sHandle != 0)", "-\t\t\t\t\t\tOS.CFRelease(sHandle);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t} else", "+\t\tint [] outString = new int [1];", "+\t\tif (OS.CopyMenuItemTextAsCFString (parent.handle, outIndex [0], outString) != OS.kNoErr) {", "+\t\t}", "+\t\tOS.SetMenuTitleWithCFString (inHierMenu, outString [0]);", "+\t\tOS.CFRelease (outString [0]);", "-\t", "-\tparent.destroyAcceleratorTable ();", "+}"]}], "num": 33504}