{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "199845390862663253c1632a4baa2afa", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88c2d84fa1078c8d21f5f1902a857ef4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "c6606207f5aaf3a7a5d75c3b53dd323015c92f52", "commitAfterChange": "9d4e1a3d62ccc6637fb62ca8592f9f40bfc73a84", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 134, "signatureBeforeChange": " void sort (int [] items)", "signatureAfterChange": " void sortAscent (TableItem [] items)", "diff": ["-void sort (int [] items) {", "+}", "+void sortAscent (TableItem [] items) {", "+\t/* Shell Sort from K&R, pg 108 */", "+\tint length = items.length;", "+\tfor (int gap=length/2; gap>0; gap/=2) {", "+\t\tfor (int i=gap; i<length; i++) {", "+\t\t\tfor (int j=i-gap; j>=0; j-=gap) {", "+\t\t\t\tif (items [j].index >= items [j + gap].index) {", "+\t\t\t\t\tTableItem swap = items [j];", "+\t\t\t\t\titems [j] = items [j + gap];", "+\t\t\t\t\titems [j + gap] = swap;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67b1aeeee14244dd0a3aa7eb7eaa9183", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "1b66399dbbf2051dfb4cf848c776cda64c551d38", "commitAfterChange": "35912387a1904d7c91e3925da740c3925d02c157", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " void paint (GC gc, TreeColumn column, boolean paintCellContent)", "signatureAfterChange": " void paint (GC gc, TreeColumn column, boolean paintCellContent)", "diff": ["-\t\tint itemCount = getItemCount ();", "-\t\tif (itemCount == 0) {", "+\t\tif (items.length == 0) {", "-\t\t\tif (itemCount != 0) y2 += expanderBounds.height;", "+\t\t\tif (items.length != 0) y2 += expanderBounds.height;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef625b11ce40d2271ef805a27fb7505b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 31, "signatureBeforeChange": " public TableItem getItem(int index)", "signatureAfterChange": " public TableItem getItem (int index)", "diff": ["+}", "+public TableItem getItem (int index) {", "+\tcheckWidget ();", "+\tif (!(0 <= index && index < items.length)) error (SWT.ERROR_INVALID_RANGE);", "+\treturn items [index];", "+}", "- */", "-public TableItem getItem(int index) {", "-\tcheckWidget();", "-\t", "-\tif (!(0 <= index && index < getItemCount())) {", "-\t\terror(SWT.ERROR_INVALID_RANGE);", "-\t}\t\t", "-\treturn (TableItem) getVisibleItem(index);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26a9a44da057a11cb70ead4268a561aa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Font.java", "commitBeforeChange": "cc902662976a8f7e17011f5175c406b2f798039e", "commitAfterChange": "974aef95d4683540d6c7c67f0c56b9bab4c83e43", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public FontData[] getFontData()", "signatureAfterChange": " public FontData[] getFontData()", "diff": ["-\t\tint /*long*/ weight = manager.weightOfFont(handle);", "-\t\tif (weight == 9) style |= SWT.BOLD;", "+\t\tif ((traits & OS.NSBoldFontMask) != 0) style |= SWT.BOLD;"]}], "num": 35344}