{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1b813b25e8f27730fd6bde440585b79e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3619897e8b218348ed814218a295fd4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Pattern.java", "commitBeforeChange": "318db07572f802684686e2d87de4c5cccc86c0c1", "commitAfterChange": "f1ffe447f89a7d8532ffe030209f91a9cbb41cb7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public Pattern(Device device, float x1, float y1, float x2, float y2, Color foreground, Color background)", "signatureAfterChange": " public Pattern(Device device, float x1, float y1, float x2, float y2, Color color1, Color color2)", "diff": ["-public Pattern(Device device, float x1, float y1, float x2, float y2, Color foreground, Color background) {", "+public Pattern(Device device, float x1, float y1, float x2, float y2, Color color1, Color color2) {", "-\tif (foreground == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "-\tif (foreground.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "-\tif (background == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "-\tif (background.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\tif (color1 == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "+\tif (color1.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\tif (color2 == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "+\tif (color2.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "-\tint colorRef = foreground.handle;", "+\tint colorRef = color1.handle;", "-\tcolorRef = background.handle;", "+\tcolorRef = color2.handle;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5b0b99d1d645a52e5a7ada321902cfe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "075a49840c046c62dc7adb3fc54f6d6df5b0ad40", "commitAfterChange": "8eb3c5627dbf43c31a784f365fbe909f5c9d345a", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \t \tint QueryInterface(int arg1, int arg2)", "signatureAfterChange": " \tint QueryInterface(int iid, int ppvObject)", "diff": ["-\tint QueryInterface(int arg1, int arg2) {", "+\t */", "+\tint QueryInterface(int iid, int ppvObject) {", "-\t\tCOM.MoveMemory(guid, arg1, GUID.sizeof);", "+\t\tCOM.MoveMemory(guid, iid, GUID.sizeof);", "-\t\t\tCOM.MoveMemory(arg2, new int[] { objIAccessible.getAddress()}, 4);", "+\t\t\tCOM.MoveMemory(ppvObject, new int[] { objIAccessible.getAddress()}, 4);", "-\t\t\tCOM.MoveMemory(arg2, new int[] { objIAccessible.getAddress()}, 4);", "+\t\t\tCOM.MoveMemory(ppvObject, new int[] { objIAccessible.getAddress()}, 4);", "-\t\t\tCOM.MoveMemory(arg2, new int[] { objIAccessible.getAddress()}, 4);", "+\t\t\tCOM.MoveMemory(ppvObject, new int[] { objIAccessible.getAddress()}, 4);", "-\t\t\tCOM.MoveMemory(arg2, new int[] { objIEnumVARIANT.getAddress()}, 4);", "+\t\t\tCOM.MoveMemory(ppvObject, new int[] { objIEnumVARIANT.getAddress()}, 4);", "-\t\tint[] ppvObject = new int[1];", "-\t\tint result = iaccessible.QueryInterface(guid, ppvObject);", "-\t\tCOM.MoveMemory(arg2, ppvObject, 4);", "+\t\tint[] ppv = new int[1];", "+\t\tint result = iaccessible.QueryInterface(guid, ppv);", "+\t\tCOM.MoveMemory(ppvObject, ppv, 4);"]}], "num": 14961}