{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6b9a7600233e095b4b8a4a398c5989b8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1164df69801cc3b18da2cc58cf98a34", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "aee5bcc275e60428c46825a3909cdbdce5886ab0", "commitAfterChange": "66356690c17aa1deac5b9e1ff65f6f002f3ca7ba", "methodNumberBeforeChange": 123, "methodNumberAfterChange": 123, "signatureBeforeChange": " void updateColumnWidth (TreeColumn column, int width)", "signatureAfterChange": " void updateColumnWidth (TreeColumn column, int width)", "diff": ["-\thBar.setMaximum (maximum);", "+\thBar.setMaximum (Math.max (1, maximum));\t/* setting a value of 0 here is ignored */", "+", "+\tif (availableItemsCount == 0) redraw ();\t/* ensure that static focus rectangle updates properly */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f3af4b63c4008ebaeac06c0f24e9c7b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CCombo.java", "commitBeforeChange": "17fad0d150689faed65a1d0a5250c6614101c36e", "commitAfterChange": "3a71e3fa702def69bec5f8fc774bf667aeff88c4", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 16, "signatureBeforeChange": " char getMnemonic (String string)", "signatureAfterChange": " char _findMnemonic (String string)", "diff": ["+ */", "+char _findMnemonic (String string) {", "+\tif (string == null) return '\\0';", "+\tint index = 0;", "+\tint length = string.length ();", "+\tdo {", "+\t\twhile (index < length && string.charAt (index) != '&') index++;", "+\t\tif (++index >= length) return '\\0';", "+\t\tif (string.charAt (index) != '&') return Character.toLowerCase (string.charAt (index));", "+\t\tindex++;", "+\t} while (index < length);", "+ \treturn '\\0';", "+}", "-}", "-char getMnemonic (String string) {", "-\tint index = 0;", "-\tint length = string.length ();", "-\tdo {", "-\t\twhile ((index < length) && (string.charAt (index) != '&')) index++;", "-\t\tif (++index >= length) return '\\0';", "-\t\tif (string.charAt (index) != '&') return string.charAt (index);", "-\t\tindex++;", "-\t} while (index < length);", "- \treturn '\\0';"]}], "num": 37262}