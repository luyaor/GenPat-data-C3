{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7ad5b6f62893034ce5240a97e9598c1c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cbc27cb2fbacc5024e5f107d5996f5f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "2ef6e4fc0f94a18262893aedff96a27b9f89d5fa", "commitAfterChange": "d0b3b06b87cdacfce998efd05f4c64a2bcf1116c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " void createScrolledHandle (int topHandle)", "signatureAfterChange": " void createHandle (int index, int parentHandle, boolean scroll)", "diff": ["-void createScrolledHandle (int topHandle) {", "-\tint [] argList = {OS.XmNancestorSensitive, 1};", "-\tscrolledHandle = OS.XmCreateMainWindow (topHandle, null, argList, argList.length / 2);", "-\tif (scrolledHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\tif ((style & (SWT.H_SCROLL | SWT.V_SCROLL | SWT.BORDER)) != 0) {", "+void createHandle (int index, int parentHandle, boolean scroll) {", "+\tif (scroll) {", "+\t\tint [] argList = {OS.XmNancestorSensitive, 1};", "+\t\tscrolledHandle = OS.XmCreateMainWindow (parentHandle, null, argList, argList.length / 2);", "+\t\tif (scrolledHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t}", "+\tif ((style & (SWT.H_SCROLL | SWT.V_SCROLL)) != 0) {", "-\t\t\tOS.XmNshadowThickness, (style & SWT.BORDER) != 0 ? display.buttonShadowThickness : 0,", "+\t\t\tOS.XmNshadowThickness, hasBorder () ? display.buttonShadowThickness : 0,", "+\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\tint [] argList3 = {", "+\t\tint border = hasBorder () ? 1 : 0;", "+\t\tint [] argList = {", "+\t\t\tOS.XmNancestorSensitive, 1,", "+\t\t\tOS.XmNborderWidth, border,", "-\t\thandle = OS.XmCreateDrawingArea (scrolledHandle, null, argList3, argList3.length / 2);", "+\t\tif (scrolledHandle != 0) parentHandle = scrolledHandle;", "+\t\thandle = OS.XmCreateDrawingArea (parentHandle, null, argList, argList.length / 2);", "+\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "-\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "+\tif ((style & SWT.NO_FOCUS) == 0) {", "+\t\tint [] argList = {OS.XmNtraversalOn, 0};", "+\t\tfocusHandle = OS.XmCreateDrawingArea (handle, null, argList, argList.length / 2);", "+\t\tif (focusHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f60121455be6429f63dd6acf7e9e19a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r void createHandle (int index)", "signatureAfterChange": "\r void createHandle (int index)", "diff": ["+\tint parentHandle = parent.handle;\r", "+\t\t\tOS.XmNancestorSensitive, 1,\r", "-\t\thandle = OS.XmCreateArrowButton (parent.handle, null, argList, argList.length / 2);\r", "+\t\thandle = OS.XmCreateArrowButton (parentHandle, null, argList, argList.length / 2);\r", "+\t\tDisplay display = getDisplay ();\r", "+\t\tint thickness = display.buttonShadowThickness;\r", "+\t\t\tOS.XmNancestorSensitive, 1,\r", "-\t\t\tOS.XmNshadowThickness, (style & SWT.FLAT) != 0 ? 1 : 2,\r", "+\t\t\tOS.XmNshadowThickness, (style & SWT.FLAT) != 0 ? 1 : thickness,\r", "-\t\thandle = OS.XmCreateToggleButton (parent.handle, null, argList, argList.length / 2);\r", "+\t\thandle = OS.XmCreateToggleButton (parentHandle, null, argList, argList.length / 2);\r", "-\t\tint [] argList = {\r", "+\t\tint [] argList = {\t\r", "+\t\t\tOS.XmNancestorSensitive, 1,\r", "-\t\thandle = OS.XmCreateToggleButton (parent.handle, null, argList, argList.length / 2);\r", "+\t\thandle = OS.XmCreateToggleButton (parentHandle, null, argList, argList.length / 2);\r", "+\t\tOS.XmNancestorSensitive, 1,\r", "+\t\t/*\r", "+\t\t* This code is intentionally commented.  On some\r", "+\t\t* platforms, the standard behavior is that push\r", "+\t\t* buttons are tab groups, traversed with the tab\r", "+\t\t* key.  On Motif, push buttons are tab items, \r", "+\t\t* that are traversed with the arrow keys.  This\r", "+\t\t* behavior is unspecifed so the line remains\r", "+\t\t* commented.\r", "+\t\t*/\r", "+//\t\tOS.XmNnavigationType, OS.XmTAB_GROUP,\r", "-\thandle = OS.XmCreatePushButton (parent.handle, null, argList, argList.length / 2);\r", "+\thandle = OS.XmCreatePushButton (parentHandle, null, argList, argList.length / 2);\r"]}], "num": 57817}