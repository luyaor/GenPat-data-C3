{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "31552cffc2a1bfeceae49a4ccb606813", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7964a9c7fae0c51cc1feb524fdfd9008", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "4b153967141a0651f1018fe2ba0657659072c82d", "commitAfterChange": "27f7331368505aac6c0b7804490971409304be6d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  int panel_shouldShowFilename (int id, int sel, int arg0, int arg1)", "signatureAfterChange": "  int panel_shouldShowFilename (int id, int sel, int arg0, int arg1)", "diff": ["-\t\t\t\tNSString ext = path.pathExtension();", "-\t\t\t\tif (ext != null) {", "-\t\t\t\t\tint filterIndex = (int)/*64*/popup.indexOfSelectedItem();", "-\t\t\t\t\tString extension = ext.getString();", "-\t\t\t\t\tString extensions = filterExtensions [filterIndex];", "-\t\t\t\t\tint start = 0, length = extensions.length ();", "-\t\t\t\t\twhile (start < length) {", "-\t\t\t\t\t\tint index = extensions.indexOf (EXTENSION_SEPARATOR, start);", "-\t\t\t\t\t\tif (index == -1) index = length;", "-\t\t\t\t\t\tString filter = extensions.substring (start, index).trim ();", "-\t\t\t\t\t\tif (filter.equals (\"*\") || filter.equals (\"*.*\")) return 1;", "-\t\t\t\t\t\tif (filter.startsWith (\"*.\")) filter = filter.substring (2);", "-\t\t\t\t\t\tif (filter.toLowerCase ().equals(extension.toLowerCase ())) return 1;", "-\t\t\t\t\t\tstart = index + 1;", "-\t\t\t\t\t}", "+\t\t\t\tString fileName = path.lastPathComponent().getString();", "+\t\t\t\tint filterIndex = (int)/*64*/popup.indexOfSelectedItem();", "+\t\t\t\tString extensions = filterExtensions [filterIndex];", "+\t\t\t\tint start = 0, length = extensions.length ();", "+\t\t\t\twhile (start < length) {", "+\t\t\t\t\tint index = extensions.indexOf (EXTENSION_SEPARATOR, start);", "+\t\t\t\t\tif (index == -1) index = length;", "+\t\t\t\t\tString filter = extensions.substring (start, index).trim ();", "+\t\t\t\t\tif (filter.equals (\"*\") || filter.equals (\"*.*\")) return 1;", "+\t\t\t\t\tif (filter.startsWith (\"*.\")) filter = filter.substring (2);", "+\t\t\t\t\tif ((fileName.toLowerCase ()).endsWith(\".\" + filter.toLowerCase ())) return 1;", "+\t\t\t\t\tstart = index + 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f18a9a7d6f441ee98aa4665f47ac1a65", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet244.java", "commitBeforeChange": "c8d6607e5d8bd7d80d520e6339aa0eada6a65b18", "commitAfterChange": "32e74cebe8b69d97c369c5abb2b432ca97ac2c07", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static void main(String[] args)", "signatureAfterChange": "     public static void main(String[] args)", "diff": ["-        final Color RED = display.getSystemColor(SWT.COLOR_RED);", "-        text.addListener(SWT.Paint, new Listener() {", "-\t\t\tpublic void handleEvent(Event event) {", "-\t\t\t\tString contents = text.getText();", "-\t\t\t\tint stringWidth = event.gc.stringExtent(SEARCH_STRING).x;", "-\t\t\t\tint lineHeight = text.getLineHeight();", "-\t\t\t\tevent.gc.setForeground(RED);", "-\t\t\t\tint index = contents.indexOf(SEARCH_STRING);", "-\t\t\t\twhile (index != -1) {", "-\t\t\t\t\tPoint topLeft = text.getLocationAtOffset(index);", "-\t\t\t\t\tevent.gc.drawRectangle(topLeft.x - 1, topLeft.y, stringWidth + 1, lineHeight - 1);", "-\t\t\t\t\tindex = contents.indexOf(SEARCH_STRING, index + 1);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t});", "-        text.setText(\"This demonstrates drawing a box\\naround every occurrence of the word\\nbox in the StyledText\");", "+        StyleRange style = new StyleRange();", "+        style.borderColor = display.getSystemColor(SWT.COLOR_RED);", "+        style.borderStyle = SWT.BORDER_SOLID;", "+        StyleRange[] styles = {style};", "+        String contents = \"This demonstrates drawing a box\\naround every occurrence of the word\\nbox in the StyledText\";", "+        text.setText(contents);", "+\t\tint index = contents.indexOf(SEARCH_STRING);", "+\t\twhile (index != -1) {", "+\t\t\ttext.setStyleRanges(0, 0, new int[] {index, SEARCH_STRING.length()}, styles);", "+\t\t\tindex = contents.indexOf(SEARCH_STRING, index + 1);", "+\t\t}", "+        "]}], "num": 17444}