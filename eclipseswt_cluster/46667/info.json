{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9b69756198cc83f97bfeff4a19a71f78", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae48befabf0b7af61014a414b901f420", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "97fd072af6f318acadb846fa5d1a96cdf45e8a3d", "commitAfterChange": "f4cf3d6e03683b2a6cdbd10adda0fba73e537e38", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": " public Point getSelection ()", "signatureAfterChange": " public Point getSelection ()", "diff": ["-\t\tshort [] selection = new short [2];", "-\t\tOS.GetControlData (handle, (short) OS.kHIComboBoxEditTextPart, OS.kControlEditTextSelectionTag, 4, selection, null);", "-\t\treturn new Point (selection [0], selection [1]);", "+\t\tControlEditTextSelectionRec selection;", "+\t\tif (this.selection != null) {", "+\t\t\tselection = this.selection;", "+\t\t} else {", "+\t\t\tselection = new ControlEditTextSelectionRec ();", "+\t\t\tOS.GetControlData (handle, (short) OS.kHIComboBoxEditTextPart, OS.kControlEditTextSelectionTag, 4, selection, null);", "+\t\t}", "+\t\treturn new Point (selection.selStart, selection.selEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f2d4726d486010e4362474b14f76be0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ColorDialog.java", "commitBeforeChange": "fe0ebc5087a885bb876f5273be443716ad862e78", "commitAfterChange": "cca6fa301c44053938f49fd91649a58044002d08", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public RGB open ()", "signatureAfterChange": "\r public RGB open ()", "diff": ["-\tint hwndOwner = 0;\r", "-\tif (parent != null) hwndOwner = parent.handle;\r", "+\tint hwndOwner = parent.handle;\r", "-\t/* Open the dialog */\r", "-\tint hHeap = OS.GetProcessHeap ();\r", "-\tint lpCustColors = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, 16 * 4);\r", "+\t/* Allocate the Custom Colors */\r", "+\tDisplay display = parent.getDisplay ();\r", "+\tif (display.lpCustColors == 0) {\r", "+\t\tint hHeap = OS.GetProcessHeap ();\r", "+\t\tdisplay.lpCustColors = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, 16 * 4);\r", "+\t}\r", "+\t\r", "+\t/* Open the dialog */\t\r", "-\tlpcc.lpCustColors = lpCustColors;\r", "+\tlpcc.lpCustColors = display.lpCustColors;\r", "-\t/* Free the OS memory */\r", "-\tif (lpCustColors != 0) OS.HeapFree (hHeap, 0, lpCustColors);\r", "+\t/* Free the Custom Colors */\r", "+\t/*\r", "+\t* This code is intentionally commented.  Currently,\r", "+\t* there is exactly one set of custom colors per display.\r", "+\t* The memory associated with these colors is released\r", "+\t* when the display is disposed.\r", "+\t*/\r", "+//\tif (lpCustColors != 0) OS.HeapFree (hHeap, 0, lpCustColors);\r"]}], "num": 46667}