{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "95f0c6c2882ed9890807a1b2cfe7e45e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8898a8fc7c8f0b8dc3a56a6b8357486", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "4554e604711848107217e581c2ea19dd3a200ccc", "commitAfterChange": "943950684f8a4ea21db196bca596eabbe07db1ea", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " void addColumn (TreeColumn column)", "signatureAfterChange": " void addColumn (TreeColumn column)", "diff": ["-\tif (index == 0 && columnCount > 1) {", "+\tint orderedIndex = column.getOrderIndex ();", "+\tif (orderedIndex == 0 && columnCount > 1) {", "-\t\t * The new second column now has more space available to it than it did while it", "-\t\t * was the first column since it no longer has to show hierarchy decorations, so", "-\t\t * recompute its displayText.", "+\t\t * The new second ordered column now has more space available to it than it did while", "+\t\t * it was the first ordered column since it no longer has to show hierarchy decorations,", "+\t\t * so recompute its displayText.", "+\t\tTreeColumn[] orderedColumns = parent.getOrderedColumns ();", "+\t\tint secondColumnIndex = orderedColumns [1].getIndex ();", "-\t\tgc.setFont (getFont (1, false));", "-\t\tcomputeDisplayText (1, gc);", "+\t\tgc.setFont (getFont (secondColumnIndex, false));", "+\t\tcomputeDisplayText (secondColumnIndex, gc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a11ae8fb7ee4ec2b69d68303f8a1ac2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/carbon/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "a83fcf6055f867f0050aa97de300cbeb9da19a0d", "commitAfterChange": "56fb1e5d19b79846a4a91435e0ae039e4404a5a0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  int handleCallback(int nextHandler, int theEvent)", "signatureAfterChange": "  int handleCallback(int nextHandler, int theEvent)", "diff": ["-\t\t\t\t\tbreak;", "+\t\t\t\t\t/*", "+\t\t\t\t\t* Bug in Carbon.  OSX crashes if a HICocoaView is disposed during a key event,", "+\t\t\t\t\t* presumably as a result of attempting to use it after its refcount has reached", "+\t\t\t\t\t* 0.  The workaround is to temporarily add an extra ref to the view while the", "+\t\t\t\t\t* DOM listener is handling the event, in case the Browser gets disposed in a", "+\t\t\t\t\t* callback.", "+\t\t\t\t\t*/", "+\t\t\t\t\tint webViewHandle = this.webViewHandle;", "+\t\t\t\t\tOS.CFRetain (webViewHandle);", "+\t\t\t\t\tint result = OS.CallNextEventHandler (nextHandler, theEvent);", "+\t\t\t\t\tOS.CFRelease (webViewHandle);", "+\t\t\t\t\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb3124bb84aba359573a8a514d174179", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeColumn.java", "commitBeforeChange": "17caf8b5f40adf1530e44958f27621ead405c3d6", "commitAfterChange": "978ea11c631116c3a1a28b676bc6a2629bb2b7fe", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " int getX()", "signatureAfterChange": " int getX()", "diff": ["-\treturn x;", "-}", "+\tint index = getIndex();", "+\tif (index == 0) return 0;", "+\tTreeColumn[] columns = parent.getColumns();", "+\treturn columns[index - 1].getX() + width;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd9cb524ffbd96e2b9ea5a6fb2ab5a17", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "815d8a015760d9b36aa7397a2d25fe3a8a323d93", "commitAfterChange": "275c01310814ee88384fe751b5e56e6b74327b82", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "  void hookEvents ()", "signatureAfterChange": "  void hookEvents ()", "diff": ["-\t\tOS.GDK_BUTTON_RELEASE_MASK | OS.GDK_ENTER_NOTIFY_MASK |", "-\t\tOS.GDK_LEAVE_NOTIFY_MASK;", "+\t\tOS.GDK_BUTTON_RELEASE_MASK;", "-\tOS.g_signal_connect_closure_by_id (eventHandle, display.signalIds [ENTER_NOTIFY_EVENT], 0, display.closures [ENTER_NOTIFY_EVENT], false);", "-\tOS.g_signal_connect_closure_by_id (eventHandle, display.signalIds [LEAVE_NOTIFY_EVENT], 0, display.closures [LEAVE_NOTIFY_EVENT], false);", "+\t", "+\t/* Connect enter/exit signals */", "+\tint /*long*/ enterExitHandle = enterExitHandle ();", "+\tint enterExitMask = OS.GDK_ENTER_NOTIFY_MASK | OS.GDK_LEAVE_NOTIFY_MASK;", "+\tOS.gtk_widget_add_events (enterExitHandle, enterExitMask);", "+\tOS.g_signal_connect_closure_by_id (enterExitHandle, display.signalIds [ENTER_NOTIFY_EVENT], 0, display.closures [ENTER_NOTIFY_EVENT], false);", "+\tOS.g_signal_connect_closure_by_id (enterExitHandle, display.signalIds [LEAVE_NOTIFY_EVENT], 0, display.closures [LEAVE_NOTIFY_EVENT], false);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf4a9952720ab104bafa7fdfe402f734", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "53ba736f4633d3d8389e9f96e6bbede3723ea9dc", "commitAfterChange": "f7b2c9990b237c89473402d89842c681d975cc4f", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "  int kEventWindowDeactivated (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventWindowDeactivated (int nextHandler, int theEvent, int userData)", "diff": ["-\t//TEMPORARY CODE - should be send, but causes a GP", "-\tpostEvent (SWT.Deactivate);", "-\tif (isDisposed ()) return result;", "-\tsaveFocus ();", "-\tif (savedFocus != null) {", "-\t\t/*", "-\t\t* Bug in the Macintosh.  When ClearKeyboardFocus() is called,", "-\t\t* the control that has focus gets two kEventControlSetFocus", "-\t\t* events indicating that focus was lost.  The fix is to ignore", "-\t\t* both of these and send the focus lost event explicitly.", "-\t\t*/", "-\t\tdisplay.ignoreFocus = true;", "-\t\tOS.ClearKeyboardFocus (shellHandle);", "-\t\tdisplay.ignoreFocus = false;", "-\t\t//TEMPORARY CODE - should be send, but causes a GP", "-\t\tif (!savedFocus.isDisposed ()) savedFocus.sendFocusEvent (SWT.FocusOut, true);", "+\t/*", "+\t* Bug in the Macintosh.  The default handler of kEventWindowDeactivated", "+\t* segment faults when DisposeWindow() is called in previous handlers.", "+\t* The fix is to use RetainWindow() so that the window does not get", "+\t* disposed until the handler returns.", "+\t*/", "+\tDisplay display = this.display;", "+\tOS.RetainWindow (shellHandle);", "+\tresult = OS.CallNextEventHandler (nextHandler, theEvent);", "+\tsendEvent (SWT.Deactivate);", "+\tif (!isDisposed ()) {", "+\t\tsaveFocus ();", "+\t\tif (savedFocus != null) {", "+\t\t\t/*", "+\t\t\t* Bug in the Macintosh.  When ClearKeyboardFocus() is called,", "+\t\t\t* the control that has focus gets two kEventControlSetFocus", "+\t\t\t* events indicating that focus was lost.  The fix is to ignore", "+\t\t\t* both of these and send the focus lost event explicitly.", "+\t\t\t*/", "+\t\t\tdisplay.ignoreFocus = true;", "+\t\t\tOS.ClearKeyboardFocus (shellHandle);", "+\t\t\tdisplay.ignoreFocus = false;", "+\t\t\tif (!savedFocus.isDisposed ()) {", "+\t\t\t\tsavedFocus.sendFocusEvent (SWT.FocusOut);", "+\t\t\t}", "+\t\t}", "+\tOS.ReleaseWindow (shellHandle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "268d513b8cda6217564f701af74660c5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/gtk/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "06f06dd0c77f0d9a4c38817b6ad1d77e716043a0", "commitAfterChange": "d14f8bb5597318e3cc79d5bf73227756c5a0ecbb", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["+\t\t\tint major = WebKitGTK.webkit_major_version ();", "+\t\t\tint minor = WebKitGTK.webkit_minor_version ();", "+\t\t\tint micro = WebKitGTK.webkit_micro_version ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d784e0a24432fe6cbf969f87065d86e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "56201926f64ad6ea7f48b4affd1bb7e12a2c8db2", "commitAfterChange": "55a22ab9240db91b3cefd3f1694927c9a71b6ad8", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "  int gtk_insert_text (int widget, int new_text, int new_text_length, int position)", "signatureAfterChange": "  int gtk_insert_text (int widget, int new_text, int new_text_length, int position)", "diff": ["-\tif (pos [0] == -1) {", "-\t\tint /*long*/ ptr = OS.gtk_entry_get_text (handle);", "-\t\tpos [0] = (int)/*64*/OS.g_utf8_strlen (ptr, -1);", "-\t}", "+\tint /*long*/ ptr = OS.gtk_entry_get_text (handle);", "+\tif (pos [0] == -1) pos [0] = (int)/*64*/OS.g_utf8_strlen (ptr, -1);", "+\tstart = (int)/*64*/OS.g_utf8_offset_to_utf16_offset (ptr, start);", "+\tend = (int)/*64*/OS.g_utf8_offset_to_utf16_offset (ptr, end);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d05e7be9ff167a5c420ec281c0ec772", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "666a2f0fc7d98cb182d8236a90b318f359ea646b", "commitAfterChange": "80ccbfe68257eb81f84289e5b87e565be75d78f2", "methodNumberBeforeChange": 159, "methodNumberAfterChange": 159, "signatureBeforeChange": "  LRESULT wmNotifyToolTip (NMTTCUSTOMDRAW nmcd, int lParam)", "signatureAfterChange": "  LRESULT wmNotifyToolTip (NMTTCUSTOMDRAW nmcd, int lParam)", "diff": ["-\t\t\t\t\tif (findCell (lpti.left, lpti.top, item, index, cellRect, itemRect)) {", "+\t\t\t\t\tint x = (lpti.right - lpti.left) / 2, y = (lpti.bottom - lpti.top) / 2;", "+\t\t\t\t\tif (findCell (x, y, item, index, cellRect, itemRect)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38b98e91f3626d97bbfcab370b29d40a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/JNIGeneratorAppUI.java", "commitBeforeChange": "dde9991d8ece5d41693dc005023b2dc541580423", "commitAfterChange": "aff6542aefdf98147416efac500d241557e9b5a3", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  void createMembersPanel(Composite panel)", "signatureAfterChange": "  void createMembersPanel(Composite panel)", "diff": ["-\t\t\t\t\t\t\t\t\tif (text.length() == 0) text = data.getField().getName();", "+\t\t\t\t\t\t\t\t\tif (text.length() == 0) {", "+\t\t\t\t\t\t\t\t\t\ttext = data.getField().getName();", "+\t\t\t\t\t\t\t\t\t\tint index = text.lastIndexOf('_');", "+\t\t\t\t\t\t\t\t\t\tif (index != -1) {", "+\t\t\t\t\t\t\t\t\t\t\tchar[] chars = text.toCharArray();", "+\t\t\t\t\t\t\t\t\t\t\tchars[index] = '.';", "+\t\t\t\t\t\t\t\t\t\t\ttext = new String(chars);", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55289f8e195d580b31def55a79cf0991", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "d7c1fc5764f6967174b7e672c5757dca7558afa1", "commitAfterChange": "f6e0d0d1edf37b12b050c1459d864b748a7d7855", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void clearSelection ()", "signatureAfterChange": " public void clearSelection ()", "diff": ["-\tif ((style & SWT.PASSWORD) != 0)", "+\tif ((style & SWT.PASSWORD) != 0) return;", "+\tint start = OS.TextBox_SelectionStart (handle);", "+\tint len = OS.TextBox_SelectionLength (handle);", "+\tOS.TextBox_SelectionStart (handle, start + len);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a93550a6d326e65fa24464e7fef6b8f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "ab790bd82f5e4890a492355780ef36249213722b", "commitAfterChange": "cc703a210cab43a0952faee5efb930efd15a385f", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " public void insert (String string)", "signatureAfterChange": " public void insert (String string)", "diff": ["-\t\tstring = verifyText (string);", "+\t\tint start = OS.TextBox_SelectionStart (handle);", "+\t\tint end = start + OS.TextBox_SelectionLength (handle);", "+\t\tstring = verifyText (string, start, end, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a8b5edd5eec7b881c430cd28fcc3489", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "4554e604711848107217e581c2ea19dd3a200ccc", "commitAfterChange": "943950684f8a4ea21db196bca596eabbe07db1ea", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " Rectangle getBounds (boolean checkData)", "signatureAfterChange": " Rectangle getBounds (boolean checkData)", "diff": ["-\tint textPaintWidth = textWidths [0] + 2 * MARGIN_TEXT;", "-\treturn new Rectangle (getTextX (0), parent.getItemY (this), textPaintWidth, parent.itemHeight - 1);", "+\tTreeColumn[] orderedColumns = parent.getOrderedColumns ();", "+\tint orderedCol0Index = orderedColumns.length == 0 ? 0 : orderedColumns [0].getIndex ();", "+\tint textPaintWidth = textWidths [orderedCol0Index] + 2 * MARGIN_TEXT;", "+\treturn new Rectangle (getTextX (orderedCol0Index), parent.getItemY (this), textPaintWidth, parent.itemHeight - 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e29110aca9465e1aaf357b5f40b12e3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "d636f4503e6c6894569c1f5530b46b3e87886345", "commitAfterChange": "d2bd83a1a061070b632f8cef24791707051becdb", "methodNumberBeforeChange": 191, "methodNumberAfterChange": 200, "signatureBeforeChange": "\r public void redrawRange(int start, int length, boolean clearBackground)", "signatureAfterChange": "\r public void redrawRange(int start, int length, boolean clearBackground)", "diff": ["+\tint firstLine = content.getLineAtOffset(start);\r", "+\tint lastLine = content.getLineAtOffset(start + length);\r", "+\t\r", "+\t// reset all affected lines but let the redraw recalculate only \r", "+\t// those that are visible.\r", "+\tcontentWidth.reset(firstLine, lastLine - firstLine);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b92c85388b8a3a4798d0ad3b228b0bfd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "6c8ddc14842db875e3aeba64510b1b07b5058312", "commitAfterChange": "c91e3af4fa0fb2a3e07fcb8ac172b85146075e0b", "methodNumberBeforeChange": 212, "methodNumberAfterChange": 212, "signatureBeforeChange": " void handleMouseDown(Event event)", "signatureAfterChange": " void handleMouseDown(Event event)", "diff": ["+\t\t\t// position cursor", "+\t\t\tint x = event.x;", "+\t\t\tint y = event.y - topMargin;", "+\t\t\tdoMouseLocationChange(x, y, false);", "+\t\t\t// insert text"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f88ec6264e99f745934d957fcdc2e913", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "5a45eee3fd3579f44b8bf252399596c0117ebf2e", "commitAfterChange": "a5200ba6a1f6d8adff75848627559a90fec3761e", "methodNumberBeforeChange": 155, "methodNumberAfterChange": 155, "signatureBeforeChange": "  void sendSelectionEvent (int eventType, Event event, boolean send)", "signatureAfterChange": "  void sendSelectionEvent (int eventType, Event event, boolean send)", "diff": ["-//\tsetInputState (event, state);", "+\tint chord = OS.GetCurrentEventButtonState ();", "+\tint modifiers = OS.GetCurrentEventKeyModifiers ();", "+\tsetInputState (event, eventType, chord, modifiers);"]}], "num": 10229}