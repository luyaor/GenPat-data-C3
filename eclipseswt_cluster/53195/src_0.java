package org.eclipse.swt.internal.motif;

import org.eclipse.swt.internal.*;

/*
 * (c) Copyright IBM Corp. 2000, 2001.
 * All Rights Reserved
 */
 
public class OS {

	/* Load the SWT library. */
	static {
		Callback.loadLibrary ();
	}

	/* BEGIN Visual classes */
	//public static final int StaticGray = 0;
	//public static final int GrayScale = 1;
	//public static final int StaticColor = 2;
	//public static final int PseudoColor = 3;
	//public static final int TrueColor = 4;
	//public static final int DirectColor = 5;
	/* END Visual clases */

	/* X/Xt/Xm Constants */
	public static final byte [] XmFONTLIST_DEFAULT_TAG = {0x46, 0x4F, 0x4E, 0x54, 0x4C, 0x49, 0x53, 0x54, 0x5F, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4C, 0x54, 0x5F, 0x54, 0x41, 0x47, 0x5F, 0x53, 0x54, 0x52, 0x49, 0x4E, 0x47, 0x0};
	public static final int Above = 0;
	public static final int AllPlanes = 0xFFFFFFFF;
	public static final int AlreadyGrabbed = 1;
//	public static final int ArcChord = 0x0;
//	public static final int ArcPieSlice = 0x1;
	public static final int Below = 1;
//	public static final int BottomIf = 3;
	public static final int Button1Mask = (1<<8);
//	public static final int Button1MotionMask = 1 << 8;
	public static final int Button2Mask = (1<<9);
//	public static final int Button2MotionMask = 1 << 9;
	public static final int Button3Mask = (1<<10);
//	public static final int Button3MotionMask = 1 << 10;
//	public static final int Button4Mask = (1<<11);
//	public static final int Button4MotionMask = 1 << 11;
//	public static final int Button5Mask = (1<<12);
//	public static final int Button5MotionMask = 1 << 12;
//	public static final int ButtonMotionMask = 1 << 13;
	public static final int ButtonPress = 4;
	public static final int ButtonPressMask = 1 << 2;
	public static final int ButtonRelease = 5;
	public static final int ButtonReleaseMask = 1 << 3;
	public static final int CapButt = 0x1;
//	public static final int CapNotLast = 0x0;
//	public static final int CapProjecting = 0x3;
//	public static final int CapRound = 0x2;
//	public static final int CenterGravity = 5;
//	public static final int CirculateNotify = 26;
//	public static final int CirculateRequest = 27;
//	public static final int ClientMessage = 33;
//	public static final int ClipByChildren = 0x0;
//	public static final int ColormapChangeMask = 1 << 23;
//	public static final int ColormapNotify = 32;
	public static final int Complex = 0;
	public static final int ConfigureNotify = 22;
//	public static final int ConfigureRequest = 23;
	public static final int ControlMask = (1<<2);
	public static final int Convex = 2;
	public static final int CoordModeOrigin = 0x0;
//	public static final int CoordModePrevious = 0x1;
//	public static final int CreateNotify = 16;
	public static final int CurrentTime = 0;
//	public static final int CWBackingPixel = 0x100;
//	public static final int CWBackingPlanes = 0x80;
//	public static final int CWBackingStore = 0x40;
//	public static final int CWBackPixel = 0x2;
	public static final int CWBackPixmap = 0x1;
	public static final int CWBitGravity = 0x10;
//	public static final int CWBorderPixel = 0x8;
//	public static final int CWBorderPixmap = 0x4;
//	public static final int CWBorderWidth = 0x10;
//	public static final int CWColormap = 0x2000;
//	public static final int CWCursor = 0x4000;
	public static final int CWDontPropagate = 0x1000;
	public static final int CWEventMask = 0x800;
	public static final int CWHeight = 0x8;
//	public static final int CWOverrideRedirect = 0x200;
//	public static final int CWSaveUnder = 0x400;
	public static final int CWSibling = 0x20;
	public static final int CWStackMode = 0x40;
	public static final int CWWidth = 0x4;
//	public static final int CWWinGravity = 0x20;
//	public static final int CWX = 0x1;
//	public static final int CWY = 0x2;
//	public static final int DestroyNotify = 17;
//	public static final int EastGravity = 6;
//	public static final int EnterNotify = 7;
	public static final int EnterWindowMask = 1 << 4;
//	public static final int EvenOddRule = 0x0;
	public static final int Expose = 12;
	public static final int ExposureMask = 1 << 15;
//	public static final int FillOpaqueStippled = 0x3;
//	public static final int FillSolid = 0x0;
	public static final int FillStippled = 0x2;
//	public static final int FillTiled = 0x1;
	public static final int FocusChangeMask = 1 << 21;
	public static final int FocusIn = 9;
	public static final int FocusOut = 10;
	public static final int ForgetGravity = 0;
//	public static final int GCArcMode = 0x400000;
	public static final int GCBackground = 0x8;
//	public static final int GCCapStyle = 0x40;
//	public static final int GCClipMask = 0x80000;
//	public static final int GCClipXOrigin = 0x20000;
//	public static final int GCClipYOrigin = 0x40000;
//	public static final int GCDashList = 0x200000;
//	public static final int GCDashOffset = 0x100000;
//	public static final int GCFillRule = 0x200;
//	public static final int GCFillStyle = 0x100;
//	public static final int GCFont = 0x4000;
	public static final int GCForeground = 0x4;
	public static final int GCFunction = 0x1;
//	public static final int GCGraphicsExposures = 0x10000;
//	public static final int GCJoinStyle = 0x80;
//	public static final int GCLastBit = 0x16;
//	public static final int GCLineStyle = 0x20;
	public static final int GCLineWidth = 0x10;
//	public static final int GCPlaneMask = 0x2;
//	public static final int GCStipple = 0x800;
	public static final int GCSubwindowMode = 0x8000;
//	public static final int GCTile = 0x400;
//	public static final int GCTileStipXOrigin = 0x1000;
//	public static final int GCTileStipYOrigin = 0x2000;
//	public static final int GrabFrozen = 4;
//	public static final int GrabInvalidTime = 2;
	public static final int GrabModeAsync = 1;
//	public static final int GrabModeSync = 0;
//	public static final int GrabNotViewable = 3;
//	public static final int GrabSuccess = 0;
	public static final int GraphicsExpose = 13;
//	public static final int GravityNotify = 24;
	public static final int GXand = 0x1;
//	public static final int GXandInverted = 0x4;
//	public static final int GXandReverse = 0x2;
//	public static final int GXclear = 0x0;
	public static final int GXcopy = 0x3;
//	public static final int GXcopy = 0x3;
//	public static final int GXcopyInverted = 0xC;
//	public static final int GXequiv = 0x9;
//	public static final int GXinvert = 0xA;
//	public static final int GXnand = 0xE;
//	public static final int GXnoop = 0x5;
//	public static final int GXnor = 0x8;
	public static final int GXor = 0x7;
//	public static final int GXorInverted = 0xD;
//	public static final int GXorReverse = 0xB;
//	public static final int GXset = 0xF;
	public static final int GXxor = 0x6;
	public static final int IncludeInferiors = 0x1;
//	public static final int IsUnmapped = 0x0;
 	public static final int IsUnviewable = 0x1;
	public static final int IsViewable = 0x2;
//	public static final int JoinBevel = 0x2;
	public static final int JoinMiter = 0x0;
//	public static final int JoinRound = 0x1;
//	public static final int KeymapNotify = 11;
//	public static final int KeymapStateMask = 1 << 14;
	public static final int KeyPress = 2;
	public static final int KeyPressMask = 1 << 0;
	public static final int KeyRelease = 3;
	public static final int KeyReleaseMask = 1 << 1;
//	public static final int LeaveNotify = 8;
	public static final int LeaveWindowMask	= 1 << 5;
	public static final int LineDoubleDash = 0x2;
	public static final int LineOnOffDash = 0x1;
	public static final int LineSolid = 0x0;
//	public static final int LockMask = (1<<1);
	public static final int LSBFirst = 0;
	public static final int MapNotify = 19;
//	public static final int MappingNotify = 34;
//	public static final int MapRequest = 20;
	public static final int Mod1Mask = (1<<3);
//	public static final int Mod2Mask = (1<<4);
//	public static final int Mod3Mask = (1<<5);
//	public static final int Mod4Mask = (1<<6);
//	public static final int Mod5Mask = (1<<7);
	public static final int MotionNotify = 6;
	public static final int MSBFirst = 1;
//	public static final int MWM_DECOR_ALL = 0x1;
	public static final int MWM_DECOR_BORDER = 0x2;
	public static final int MWM_DECOR_MAXIMIZE = 0x40;
	public static final int MWM_DECOR_MENU = 0x10;
	public static final int MWM_DECOR_MINIMIZE = 0x20;
	public static final int MWM_DECOR_RESIZEH = 0x4;
	public static final int MWM_DECOR_TITLE = 0x8;
//	public static final int MWM_FUNC_ALL = 0x1;
//	public static final int MWM_FUNC_CLOSE = 0x20;
//	public static final int MWM_FUNC_MAXIMIZE = 0x10;
//	public static final int MWM_FUNC_MINIMIZE = 0x8;
//	public static final int MWM_FUNC_MOVE = 0x4;
//	public static final int MWM_FUNC_RESIZE = 0x2;
//	public static final int MWM_HINTS_DECORATIONS = 0x2;
//	public static final int MWM_HINTS_FUNCTIONS = 0x1;
//	public static final int MWM_HINTS_INPUT_MODE = 0x4;
//	public static final int MWM_HINTS_STATUS = 0x8;
//	public static final int MWM_INFO_STARTUP_CUSTOM = 0x2;
//	public static final int MWM_INFO_STARTUP_STANDARD = 0x1;
	public static final int MWM_INPUT_FULL_APPLICATION_MODAL = 0x3;
	public static final int MWM_INPUT_MODELESS = 0x0;
	public static final int MWM_INPUT_PRIMARY_APPLICATION_MODAL = 0x1;
	public static final int MWM_INPUT_SYSTEM_MODAL = 0x2;
//	public static final int MWM_TEAR_OFF_WINDOW = 0x1;
//	public static final int NoEventMask = 0;
//	public static final int NoExpose = 14;
//	public static final int Nonconvex = 1;
	public static final int None = 0;
//	public static final int NorthEastGravity = 3;
//	public static final int NorthGravity = 2;
	public static final int NorthWestGravity = 1;
//	public static final int NorthWestGravity = 1;
	public static final int NotifyAncestor = 0x0;
//	public static final int NotifyDetailNone = 0x7;
//	public static final int NotifyGrab = 0x1;
//	public static final int NotifyHint = 0x1;
	public static final int NotifyInferior = 0x2;
	public static final int NotifyNonlinear = 0x3;
//	public static final int NotifyNonlinearVirtual = 0x4;
	public static final int NotifyNormal = 0x0;
//	public static final int NotifyPointer = 0x5;
//	public static final int NotifyPointerRoot = 0x6;
//	public static final int NotifyUngrab = 0x2;
//	public static final int NotifyVirtual = 0x1;
//	public static final int NotifyWhileGrabbed = 0x3;
//	public static final int Opposite = 4;
//	public static final int OwnerGrabButtonMask = 1 << 24;
//	public static final int PointerMotionHintMask = 1 << 7;
	public static final int PointerMotionMask = 1 << 6;
//	public static final int PropertyChangeMask = 1 << 22;
//	public static final int PropertyNotify = 28;
//	public static final int RectangleIn = 0x1;
	public static final int RectangleOut = 0x0;
//	public static final int RectanglePart = 0x2;
	public static final int ReparentNotify = 21;
	public static final int ResizeRedirectMask = 1 << 18;
//	public static final int ResizeRequest = 25;
//	public static final int RevertToNone = 0x0;
	public static final int RevertToParent = 0x2;
//	public static final int RevertToPointerRoot = 0x1;
//	public static final int SelectionClear = 29;
//	public static final int SelectionNotify = 31;
//	public static final int SelectionRequest = 30;
	public static final int ShiftMask = (1<<0);
//	public static final int SouthEastGravity = 9;
//	public static final int SouthGravity = 8;
//	public static final int SouthWestGravity = 7;
//	public static final int StaticGravity = 10;
	public static final int StructureNotifyMask = 1 << 17;
	public static final int SubstructureNotifyMask = 1 << 19;
	public static final int SubstructureRedirectMask = 1 << 20;
//	public static final int TopIf = 2;
	public static final int UnmapNotify = 18;
	public static final int Unsorted = 0x0;
//	public static final int VisibilityChangeMask = 1 << 16;
//	public static final int VisibilityNotify = 15;
//	public static final int WestGravity = 4;
//	public static final int WindingRule = 0x1;
	public static final int XA_FONT = 18;
	public static final int XBufferOverflow = 0xFFFFFFFF;
//	public static final int XC_arrow = 2;
//	public static final int XC_based_arrow_down = 4;
//	public static final int XC_based_arrow_up = 6;
//	public static final int XC_boat = 8;
//	public static final int XC_bogosity= 10;
	public static final int XC_bottom_left_corner = 12;
	public static final int XC_bottom_right_corner = 14;
	public static final int XC_bottom_side = 16;
//	public static final int XC_bottom_tee = 18;
//	public static final int XC_box_spiral = 20;
//	public static final int XC_center_ptr = 22;
//	public static final int XC_circle = 24;
//	public static final int XC_clock = 26;
//	public static final int XC_coffee_mug = 28;
	public static final int XC_cross = 30;
//	public static final int XC_cross_reverse = 32;
//	public static final int XC_crosshair = 34;
	public static final int XC_diamond_cross = 36;
//	public static final int XC_dot = 38;
//	public static final int XC_dotbox = 40;
	public static final int XC_double_arrow = 42;
//	public static final int XC_draft_large = 44;
//	public static final int XC_draft_small = 46;
//	public static final int XC_draped_box = 48;
//	public static final int XC_exchange = 50;
//	public static final int XC_fleur = 52;
//	public static final int XC_gobbler = 54;
//	public static final int XC_gumby = 56;
//	public static final int XC_hand1 = 58;
	public static final int XC_hand2 = 60;
//	public static final int XC_heart = 62;
//	public static final int XC_icon = 64;
//	public static final int XC_iron_cross = 66;
	public static final int XC_left_ptr = 68;
	public static final int XC_left_side = 70;
//	public static final int XC_left_tee = 72;
//	public static final int XC_leftbutton = 74;
//	public static final int XC_ll_angle = 76;
//	public static final int XC_lr_angle = 78;
//	public static final int XC_man = 80;
//	public static final int XC_middlebutton = 82;
//	public static final int XC_mouse = 84;
//	public static final int XC_num_glyphs = 154;
//	public static final int XC_pencil = 86;
//	public static final int XC_pirate = 88;
//	public static final int XC_plus = 90;
	public static final int XC_question_arrow = 92;
//	public static final int XC_right_ptr = 94;
	public static final int XC_right_side = 96;
//	public static final int XC_right_tee = 98;
//	public static final int XC_rightbutton = 100;
//	public static final int XC_rtl_logo = 102;
//	public static final int XC_sailboat = 104;
//	public static final int XC_sb_down_arrow = 106;
	public static final int XC_sb_h_double_arrow = 108;
//	public static final int XC_sb_left_arrow = 110;
//	public static final int XC_sb_right_arrow = 112;
	public static final int XC_sb_up_arrow = 114;
	public static final int XC_sb_v_double_arrow = 116;
//	public static final int XC_shuttle = 118;
	public static final int XC_sizing = 120;
//	public static final int XC_spider = 122;
//	public static final int XC_spraycan = 124;
//	public static final int XC_star = 126;
//	public static final int XC_target = 128;
//	public static final int XC_tcross = 130;
//	public static final int XC_top_left_arrow = 132;
	public static final int XC_top_left_corner = 134;
	public static final int XC_top_right_corner = 136;
	public static final int XC_top_side = 138;
//	public static final int XC_top_tee = 140;
//	public static final int XC_trek = 142;
//	public static final int XC_ul_angle = 144;
//	public static final int XC_umbrella = 146;
//	public static final int XC_ur_angle = 148;
	public static final int XC_watch = 150;
	public static final int XC_X_cursor = 0;
	public static final int XC_xterm = 152;
	public static final int XK_Alt_L = 0xFFE9;
	public static final int XK_Alt_R = 0xFFEA;
	public static final int XK_Cancel = 0xFF69;
	public static final int XK_Control_L = 0xFFE3;
	public static final int XK_Control_R = 0xFFE4;
//	public static final int XK_Delete = 0xFFFF;
	public static final int XK_Down = 0xFF54;
	public static final int XK_End = 0xFF57;
	public static final int XK_Escape = 0xFF1B;
	public static final int XK_F1 = 0xFFBE;
	public static final int XK_F10 = 0xFFC7;
	public static final int XK_F11 = 0xFFC8;
	public static final int XK_F12 = 0xFFC9;
	public static final int XK_F2 = 0xFFBF;
	public static final int XK_F3 = 0xFFC0;
	public static final int XK_F4 = 0xFFC1;
	public static final int XK_F5 = 0xFFC2;
	public static final int XK_F6 = 0xFFC3;
	public static final int XK_F7 = 0xFFC4;
	public static final int XK_F8 = 0xFFC5;
	public static final int XK_F9 = 0xFFC6;
	public static final int XK_Home = 0xFF50;
	public static final int XK_Insert = 0xFF63;
//	public static final int XK_KP_0 = 0xFFB0;
//	public static final int XK_KP_1 = 0xFFB1;
//	public static final int XK_KP_2 = 0xFFB2;
//	public static final int XK_KP_3 = 0xFFB3;
//	public static final int XK_KP_4 = 0xFFB4;
//	public static final int XK_KP_5 = 0xFFB5;
//	public static final int XK_KP_6 = 0xFFB6;
//	public static final int XK_KP_7 = 0xFFB7;
//	public static final int XK_KP_8 = 0xFFB8;
//	public static final int XK_KP_9 = 0xFFB9;
//	public static final int XK_KP_Add = 0xFFAB;
//	public static final int XK_KP_Decimal = 0xFFAE;
//	public static final int XK_KP_Divide = 0xFFAF;
//	public static final int XK_KP_Enter = 0xFF8D;
//	public static final int XK_KP_Multiply = 0xFFAA;
//	public static final int XK_KP_Subtract = 0xFFAD;
	public static final int XK_Left = 0xFF51;
	public static final int XK_Page_Down = 0xFF56;
	public static final int XK_Page_Up = 0xFF55;
	public static final int XK_Right = 0xFF53;
	public static final int XK_Return = 0xFF0D;
	public static final int XK_Shift_L = 0xFFE1;
	public static final int XK_Shift_R = 0xFFE2;
	public static final int XK_Tab = 0xFF09;
	public static final int XK_Up = 0xFF52;
	public static final int XK_VoidSymbol = 0xFFFFFF;
//	public static final int XLookupBoth = 0x4;
//	public static final int XLookupChars = 0x2;
//	public static final int XLookupKeySym = 0x3;
//	public static final int XLookupNone = 0x1;
	public static final int XmALIGNMENT_BEGINNING = 0x0;
	public static final int XmALIGNMENT_CENTER = 0x1;
	public static final int XmALIGNMENT_END = 0x2;
	public static final int XmARROW_DOWN = 0x1;
	public static final int XmARROW_LEFT = 0x2;
	public static final int XmARROW_RIGHT = 0x3;
	public static final int XmARROW_UP = 0x0;
//	public static final int XmARROWS_END = 0x0;
//	public static final int XmAS_NEEDED = 0x1;
//	public static final int XmATTACH_CENTER = 0x8;
//	public static final int XmATTACH_EAST = 0x3;
	public static final int XmATTACH_FORM = 0x1;
//	public static final int XmATTACH_HOT = 0x9;
//	public static final int XmATTACH_NONE = 0x0;
//	public static final int XmATTACH_NORTH = 0x1;
//	public static final int XmATTACH_NORTH_EAST = 0x2;
//	public static final int XmATTACH_NORTH_WEST = 0x0;
//	public static final int XmATTACH_OPPOSITE_FORM = 0x2;
//	public static final int XmATTACH_OPPOSITE_WIDGET = 0x4;
//	public static final int XmATTACH_POSITION = 0x5;
//	public static final int XmATTACH_SELF = 0x6;
//	public static final int XmATTACH_SOUTH = 0x5;
//	public static final int XmATTACH_SOUTH_EAST = 0x4;
//	public static final int XmATTACH_SOUTH_WEST = 0x6;
//	public static final int XmATTACH_WEST = 0x7;
//	public static final int XmATTACH_WIDGET = 0x3;
	public static final int XmBLEND_ALL = 0x0;
	public static final int XmBROWSE_SELECT = 0x3;
	public static final int XmCHARSET_TEXT = 0x0;
	public static final int XmClipboardFail = 0x0;
	public static final int XmClipboardSuccess = 0x1;
	public static final int XmClipboardLocked = 0x4;
	public static final int XmClipboardNoData = 0x6;
	public static final int XmCOMBO_BOX = 0x0;
	public static final int XmCONSTANT = 0x1;
	public static final int XmCOPY_FAILED = 0x0;
//	public static final int XmCOPY_SUCCEEDED = 0x1;
	public static final int XmCOPY_TRUNCATED = 0x2;
//	public static final int XmCR_ACTIVATE = 0xA;
//	public static final int XmCR_APPLY = 0x22;
//	public static final int XmCR_ARM = 0xB;
//	public static final int XmCR_BROWSE_SELECT = 0x1A;
//	public static final int XmCR_CANCEL = 0x20;
//	public static final int XmCR_CASCADING = 0x1E;
//	public static final int XmCR_CLIPBOARD_DATA_DELETE = 0x1D;
//	public static final int XmCR_CLIPBOARD_DATA_REQUEST = 0x1C;
//	public static final int XmCR_COMMAND_CHANGED = 0x25;
//	public static final int XmCR_COMMAND_ENTERED = 0x24;
//	public static final int XmCR_CREATE = 0x2B;
	public static final int XmCR_DECREMENT = 0x4;
//	public static final int XmCR_DEFAULT_ACTION = 0x1B;
//	public static final int XmCR_DISARM = 0xC;
	public static final int XmCR_DRAG = 0x9;
//	public static final int XmCR_DRAGDROP_FINISH = 0x7;
//	public static final int XmCR_DRAG_MOTION = 0x2;
//	public static final int XmCR_DROP_FINISH = 0x6;
//	public static final int XmCR_DROP_MESSAGE = 0x4;
//	public static final int XmCR_DROP_SITE_ENTER = 0x3;
	public static final int XmCR_DROP_SITE_ENTER_MESSAGE = 0x2;
//	public static final int XmCR_DROP_SITE_LEAVE = 0x4;
	public static final int XmCR_DROP_SITE_LEAVE_MESSAGE = 0x1;
	public static final int XmCR_DROP_SITE_MOTION_MESSAGE = 0x3;
//	public static final int XmCR_DROP_START = 0x5;
//	public static final int XmCR_EXECUTE = 0x16;
//	public static final int XmCR_EXPOSE = 0x26;
//	public static final int XmCR_EXTENDED_SELECT = 0x19;
//	public static final int XmCR_FOCUS = 0x12;
//	public static final int XmCR_GAIN_PRIMARY = 0x29;
//	public static final int XmCR_HELP = 0x1;
	public static final int XmCR_INCREMENT = 0x3;
//	public static final int XmCR_INPUT = 0x28;
//	public static final int XmCR_LOSE_PRIMARY = 0x2A;
//	public static final int XmCR_LOSING_FOCUS = 0x13;
//	public static final int XmCR_MAP = 0x10;
//	public static final int XmCR_MODIFYING_TEXT_VALUE = 0x14;
//	public static final int XmCR_MOVING_INSERT_CURSOR = 0x15;
//	public static final int XmCR_MULTIPLE_SELECT = 0x18;
//	public static final int XmCR_NO_MATCH = 0x23;
//	public static final int XmCR_NONE = 0x0;
//	public static final int XmCR_OBSCURED_TRAVERSAL = 0x2E;
//	public static final int XmCR_OK = 0x1F;
	public static final int XmCR_OPERATION_CHANGED = 0x8;
	public static final int XmCR_PAGE_DECREMENT = 0x6;
	public static final int XmCR_PAGE_INCREMENT = 0x5;
//	public static final int XmCR_PROTOCOLS = 0x2F;
//	public static final int XmCR_RESIZE = 0x27;
//	public static final int XmCR_SINGLE_SELECT = 0x17;
//	public static final int XmCR_TEAR_OFF_ACTIVATE = 0x2C;
//	public static final int XmCR_TEAR_OFF_DEACTIVATE = 0x2D;
	public static final int XmCR_TO_BOTTOM = 0x8;
//	public static final int XmCR_TOP_LEVEL_ENTER = 0x0;
//	public static final int XmCR_TOP_LEVEL_LEAVE = 0x1;
	public static final int XmCR_TO_TOP = 0x7;
//	public static final int XmCR_UNMAP = 0x11;
	public static final int XmCR_VALUE_CHANGED = 0x2;
//	public static final int XmCR_WMPROTOCOLS = 0x1A0A;
//	public static final int XmDESTROY = 0x0;
	public static final int XmDIALOG_APPLICATION_MODAL = 0x1;
	public static final int XmDIALOG_APPLY_BUTTON = 0x1;
	public static final int XmDIALOG_CANCEL_BUTTON = 0x2;
//	public static final int XmDIALOG_COMMAND = 0x3;
//	public static final int XmDIALOG_COMMAND_TEXT = 0xD;
//	public static final int XmDIALOG_DEFAULT_BUTTON = 0x3;
//	public static final int XmDIALOG_DIR_LIST = 0xF;
//	public static final int XmDIALOG_DIR_LIST_LABEL = 0x10;
//	public static final int XmDIALOG_ERROR = 0x1;
//	public static final int XmDIALOG_FILE_LIST = 0x8;
//	public static final int XmDIALOG_FILE_LIST_LABEL = 0x9;
//	public static final int XmDIALOG_FILE_SELECTION = 0x4;
	public static final int XmDIALOG_FILTER_LABEL = 0x5;
	public static final int XmDIALOG_FILTER_TEXT = 0x6;
	public static final int XmDIALOG_FULL_APPLICATION_MODAL = 0x2;
	public static final int XmDIALOG_HELP_BUTTON = 0x7;
//	public static final int XmDIALOG_HISTORY_LIST = 0x8;
//	public static final int XmDIALOG_INFORMATION = 0x2;
	public static final int XmDIALOG_LIST = 0x8;
	public static final int XmDIALOG_LIST_LABEL = 0x9;
//	public static final int XmDIALOG_MESSAGE = 0x3;
	public static final int XmDIALOG_MESSAGE_LABEL = 0xA;
	public static final int XmDIALOG_MODELESS = 0x0;
//	public static final int XmDIALOG_NONE = 0x0;
	public static final int XmDIALOG_OK_BUTTON = 0x4;
	public static final int XmDIALOG_PRIMARY_APPLICATION_MODAL = 0x1;
//	public static final int XmDIALOG_PROMPT = 0x1;
//	public static final int XmDIALOG_PROMPT_LABEL = 0xB;
//	public static final int XmDIALOG_QUESTION = 0x4;
//	public static final int XmDIALOG_SELECTION = 0x2;
	public static final int XmDIALOG_SELECTION_LABEL = 0xB;
//	public static final int XmDIALOG_SEPARATOR = 0xE;
//	public static final int XmDIALOG_SYMBOL_LABEL = 0xC;
	public static final int XmDIALOG_SYSTEM_MODAL = 0x3;
//	public static final int XmDIALOG_TEMPLATE = 0x0;
	public static final int XmDIALOG_TEXT = 0xD;
//	public static final int XmDIALOG_VALUE_TEXT = 0xD;
//	public static final int XmDIALOG_WARNING = 0x5;
//	public static final int XmDIALOG_WORK_AREA = 0x0;
//	public static final int XmDIALOG_WORKING = 0x6;
	public static final int XmDO_NOTHING = 0x2;
//	public static final int XmDOUBLE_DASHED_LINE = 0x4;
//	public static final int XmDOUBLE_LINE = 0x2;
	public static final int XmDRAG_DYNAMIC = 5;
	public static final int XmDRAG_UNDER_NONE = 0;
	public static final byte XmDROP_COPY = (1 << 1);
	public static final int XmDROP_DOWN_COMBO_BOX = 0x1;
	public static final int XmDROP_DOWN_LIST = 0x2;	
	public static final byte XmDROP_LINK = (1 << 2);
	public static final byte XmDROP_MOVE = (1 << 0);
	public static final byte XmDROP_NOOP = 0;
	public static final int XmDROP_SITE_ACTIVE = 0;
	public static final int XmDROP_SITE_INVALID = 2;
	public static final int XmDROP_SITE_VALID = 3;
	public static final int XmDROP_SITE_COMPOSITE = 1;
	public static final byte XmDROP = 0;
	public static final int XmEXTENDED_SELECT = 0x2;
	public static final int XmFONT_IS_FONT = 0x0;
	public static final int XmFONT_IS_FONTSET = 0x1;
//	public static final int XmFRAME_GENERIC_CHILD = 0x0;
	public static final int XmFRAME_TITLE_CHILD = 0x2;
//	public static final int XmFRAME_WORKAREA_CHILD = 0x1;
	public static final int XmHIGHLIGHT_NORMAL = 0x0;
//	public static final int XmHIGHLIGHT_SECONDARY_SELECTED = 0x2;
//	public static final int XmHIGHLIGHT_SELECTED = 0x1;
	public static final int XmHORIZONTAL = 0x2;
	public static final int XmLAST_POSITION = -1;
	public static final int XmMAX_ON_BOTTOM = 0x1;
//	public static final int XmMAX_ON_LEFT = 0x2;
	public static final int XmMAX_ON_RIGHT = 0x3;
	public static final int XmMAX_ON_TOP = 0x0;
	public static final int XmMERGE_REPLACE = 0x1;
	public static final int XmMULTI_LINE_EDIT = 0x0;
	public static final int XmMULTIPLE_SELECT = 0x1;
	public static final int XmN_OF_MANY = 0x1;
	public static final int XmNONE = 0x0;
//	public static final int XmNUMERIC = 0x3;

	/* byte */
	public static final int XmNancestorSensitive = malloc ("ancestorSensitive");
	public static final int XmNanimationStyle = malloc ("animationStyle");
	public static final int XmNalignment = malloc ("alignment");
	public static final int XmNarrowDirection = malloc ("arrowDirection");
	public static final int XmNblendModel = malloc ("blendModel");
	public static final int XmNbottomAttachment = malloc ("bottomAttachment");
	public static final int XmNchildType = malloc ("childType");
	public static final int XmNcomboBoxType = malloc ("comboBoxType");
	public static final int XmNdialogStyle = malloc ("dialogStyle");
	public static final int XmNcursorPositionVisible = malloc ("cursorPositionVisible");
	public static final int XmNdeleteResponse = malloc ("deleteResponse");
	public static final int XmNdragInitiatorProtocolStyle = malloc ("dragInitiatorProtocolStyle");
	public static final int XmNdragReceiverProtocolStyle = malloc ("dragReceiverProtocolStyle");
	public static final int XmNdragOperations = malloc ("dragOperations");
	public static final int XmNeditable = malloc ("editable");
	public static final int XmNenableThinThickness = malloc ("enableThinThickness");
	public static final int XmNiconic = malloc ("iconic");
	public static final int XmNlabelType = malloc ("labelType");
	public static final int XmNleftAttachment = malloc ("leftAttachment");
	public static final int XmNlistSizePolicy = malloc ("listSizePolicy");
	public static final int XmNindicatorOn = malloc ("indicatorOn");
	public static final int XmNindicatorType = malloc ("indicatorType");
	public static final int XmNnoResize = malloc ("noResize");
	public static final int XmNorientation = malloc ("orientation");
	public static final int XmNoverrideRedirect = malloc ("overrideRedirect");
	public static final int XmNprocessingDirection = malloc ("processingDirection");
	public static final int XmNrecomputeSize = malloc ("recomputeSize");
	public static final int XmNpushButtonEnabled = malloc ("pushButtonEnabled");
	public static final int XmNresizable = malloc ("resizable");
	public static final int XmNresizePolicy = malloc ("resizePolicy");
	public static final int XmNrightAttachment = malloc ("rightAttachment");
	public static final int XmNscrollHorizontal = malloc ("scrollHorizontal");
	public static final int XmNscrollVertical = malloc ("scrollVertical");
	public static final int XmNselectionPolicy = malloc ("selectionPolicy");
	public static final int XmNsensitive = malloc ("sensitive");
	public static final int XmNseparatorType = malloc ("separatorType");
	public static final int XmNset = malloc ("set");
	public static final int XmNshadowType = malloc ("shadowType");
	public static final int XmNtraversalOn = malloc ("traversalOn");
	public static final int XmNtopAttachment = malloc ("topAttachment");
	public static final int XmNverifyBell = malloc ("verifyBell");
	public static final int XmNwordWrap = malloc ("wordWrap");
	public static final int XmNnavigationType = malloc ("navigationType");
		
	/* short */
	public static final int XmNarrowSize = malloc ("arrowSize");
	public static final int XmNarrowSpacing = malloc ("arrowSpacing");
	public static final int XmNborderWidth = malloc ("borderWidth");
	public static final int XmNheight = malloc ("height");
	public static final int XmNhighlightThickness = malloc ("highlightThickness");
	public static final int XmNlistMarginHeight = malloc ("listMarginHeight");
	public static final int XmNlistMarginWidth = malloc ("listMarginWidth");
	public static final int XmNlistSpacing = malloc ("listSpacing");
	public static final int XmNmarginBottom = malloc ("marginBottom");
	public static final int XmNmarginHeight = malloc ("marginHeight");
	public static final int XmNmarginLeft = malloc ("marginLeft");
	public static final int XmNmarginRight = malloc ("marginRight");
	public static final int XmNmarginTop = malloc ("marginTop");
	public static final int XmNmarginWidth = malloc ("marginWidth");
	public static final int XmNpositionIndex = malloc ("positionIndex");
	public static final int XmNrows = malloc ("rows");
	public static final int XmNshadowThickness = malloc ("shadowThickness");
	public static final int XmNshowAsDefault = malloc ("showAsDefault");
	public static final int XmNwidth = malloc ("width");
	public static final int XmNx = malloc ("x");
	public static final int XmNy = malloc ("y");
			
	/* int */
	public static final int XmNaccelerator = malloc ("accelerator");
	public static final int XmNacceleratorText = malloc ("acceleratorText");
	public static final int XmNactivateCallback = malloc ("activateCallback");
	public static final int XmNarmCallback = malloc ("armCallback");
	public static final int XmNbackground = malloc ("background");
	public static final int XmNborderColor = malloc ("borderColor");
	public static final int XmNbottomShadowColor = malloc ("bottomShadowColor");
	public static final int XmNbrowseSelectionCallback = malloc ("browseSelectionCallback");
	public static final int XmNcancelCallback = malloc ("cancelCallback");
	public static final int XmNcancelLabelString = malloc ("cancelLabelString");
	public static final int XmNcascadingCallback = malloc ("cascadingCallback");
	public static final int XmNchildren = malloc ("children");
	public static final int XmNclientData = malloc ("clientData");
	public static final int XmNcolormap = malloc ("colormap");
	public static final int XmNconvertProc = malloc ("convertProc");
	public static final int XmNdecrementCallback = malloc ("decrementCallback");
	public static final int XmNdefaultActionCallback = malloc ("defaultActionCallback");
	public static final int XmNdefaultButtonShadowThickness = malloc ("defaultButtonShadowThickness");
	public static final int XmNdialogTitle = malloc ("dialogTitle");
	public static final int XmNdirectory = malloc ("directory");
	public static final int XmNdirSpec = malloc ("dirSpec");
	public static final int XmNdirMask = malloc ("dirMask");
	public static final int XmNdragCallback = malloc ("dragCallback");
	public static final int XmNdragDropFinishCallback = malloc ("dragDropFinishCallback");
	public static final int XmNdragProc = malloc ("dragProc");
	public static final int XmNdropFinishCallback = malloc ("dropFinishCallback");
	public static final int XmNdropProc = malloc("dropProc");
	public static final int XmNeditMode = malloc ("editMode");
	public static final int XmNexportTargets = malloc ("exportTargets");
	public static final int XmNexposeCallback = malloc ("exposeCallback");
	public static final int XmNextendedSelectionCallback = malloc ("extendedSelectionCallback");
	public static final int XmNfilterLabelString = malloc ("filterLabelString");
	public static final int XmNfont = malloc ("font");
	public static final int XmNfontList = malloc ("fontList");
	public static final int XmNfontType = malloc ("fontType");
	public static final int XmNforeground = malloc ("foreground");
	public static final int XmNhelpCallback = malloc ("helpCallback");
	public static final int XmNhelpLabelString = malloc ("helpLabelString");
	public static final int XmNhighlightColor = malloc ("highlightColor");
	public static final int XmNhorizontalScrollBar = malloc ("horizontalScrollBar");
	public static final int XmNiconMask = malloc ("iconMask");
	public static final int XmNiconPixmap = malloc ("iconPixmap");
	public static final int XmNincrement = malloc ("increment");
	public static final int XmNincrementCallback = malloc ("incrementCallback");
	public static final int XmNitemCount = malloc ("itemCount");
	public static final int XmNitems = malloc ("items");
	public static final int XmNlabelInsensitivePixmap = malloc ("labelInsensitivePixmap");
	public static final int XmNlabelPixmap = malloc ("labelPixmap");
	public static final int XmNlabelString = malloc ("labelString");
	public static final int XmNlist = malloc ("list");
	public static final int XmNmapCallback = malloc ("mapCallback");
	public static final int XmNmappedWhenManaged = malloc ("mappedWhenManaged");
	public static final int XmNmaximum = malloc ("maximum"); 
	public static final int XmNmenuBar = malloc ("menuBar");
	public static final int XmNmessageString = malloc ("messageString");
	public static final int XmNminimum = malloc ("minimum");
	public static final int XmNmodifyVerifyCallback = malloc ("modifyVerifyCallback");
	public static final int XmNmwmDecorations = malloc ("mwmDecorations");
	public static final int XmNmwmInputMode = malloc ("mwmInputMode");
	public static final int XmNnumChildren = malloc ("numChildren");
	public static final int XmNnumDropTransfers = malloc ("numDropTransfers");
	public static final int XmNnumExportTargets = malloc ("numExportTargets");
	public static final int XmNnumImportTargets = malloc("numImportTargets");
	public static final int XmNmnemonic = malloc ("mnemonic");
	public static final int XmNimportTargets = malloc("importTargets");
	public static final int XmNokCallback = malloc ("okCallback");
	public static final int XmNokLabelString = malloc ("okLabelString");
	public static final int XmNoperationCursorIcon = malloc ("operationCursorIcon");
	public static final int XmNselectionCallback = malloc ("selectionCallback");
	public static final int XmNsourceCursorIcon = malloc ("sourceCursorIcon");
	public static final int XmNstateCursorIcon = malloc ("stateCursorIcon");
	public static final int XmNsubstitute = malloc ("substitute");
	public static final int XmNpageDecrementCallback = malloc ("pageDecrementCallback");
	public static final int XmNpageIncrement = malloc ("pageIncrement");
	public static final int XmNpageIncrementCallback = malloc ("pageIncrementCallback");
	public static final int XmNpattern = malloc ("pattern");
	public static final int XmNrenderTable = malloc ("renderTable");
	public static final int XmNscaleMultiple = malloc ("scaleMultiple");
	public static final int XmNselectedItemCount = malloc ("selectedItemCount");
	public static final int XmNselectedItems = malloc ("selectedItems");
	public static final int XmNselectedPosition = malloc ("selectedPosition");
	public static final int XmNselectionArrayCount = malloc ("selectionArrayCount");
	public static final int XmNsliderSize = malloc ("sliderSize");
	public static final int XmNsubMenuId = malloc ("subMenuId");
	public static final int XmNtabList = malloc ("tabList");
	public static final int XmNtextField = malloc ("textField");
	public static final int XmNtitle = malloc ("title");
	public static final int XmNtitleString = malloc ("titleString");
	public static final int XmNtoBottomCallback = malloc ("toBottomCallback");
	public static final int XmNtoTopCallback = malloc ("toTopCallback");
//	public static final int XmNtopCharacter = malloc ("topCharacter");
	public static final int XmNtopItemPosition = malloc ("topItemPosition");
	public static final int XmNtopShadowColor = malloc ("topShadowColor");
	public static final int XmNtransferProc = malloc ("transferProc");
	public static final int XmNtransferStatus = malloc ("transferStatus");
	public static final int XmNtroughColor = malloc ("troughColor");
	public static final int XmNunmapCallback = malloc ("unmapCallback");
	public static final int XmNuserData = malloc ("userData");
	public static final int XmNvalue = malloc ("value");
	public static final int XmNvalueChangedCallback = malloc ("valueChangedCallback");
	public static final int XmNverticalScrollBar = malloc ("verticalScrollBar");
	public static final int XmNvisibleItemCount = malloc ("visibleItemCount");
	public static final int XmNdropTransfers  = malloc ("dropTransfers");
	public static final int XmNshowArrows = malloc ("showArrows");
			
	/* Unknown */	
	public static final int XmNdropSiteActivity = malloc("dropSiteActivity");
	public static final int XmNdropSiteOperations = malloc("dropSiteOperations");
	public static final int XmNdropSiteType = malloc("dropSiteType");

	public static final int XmNO_LINE = 0x0;
	public static final int XmONE_OF_MANY = 0x2;
	public static final int XmOUTPUT_ALL = 0x0;
	public static final int XmPIXELS = 0x0;
	public static final int XmPIXMAP = 0x1;
	public static final int XmRELATIVE = 0x1;
//	public static final int XmRESIZE_ANY = 0x2;
//	public static final int XmRESIZE_GROW = 0x1;
//	public static final int XmRESIZE_IF_POSSIBLE = 0x2;
	public static final int XmRESIZE_NONE = 0x0;
	public static final int XmSHADOW_ETCHED_IN = 0x5;
//	public static final int XmSHADOW_ETCHED_IN_DASH = 0x7;
	public static final int XmSHADOW_ETCHED_OUT = 0x6;
//	public static final int XmSHADOW_ETCHED_OUT_DASH = 0x8;
	public static final int XmSHADOW_IN = 0x7;
	public static final int XmSHADOW_OUT = 0x8;
//	public static final int XmSINGLE_DASHED_LINE = 0x3;
//	public static final int XmSINGLE_LINE = 0x1;
	public static final int XmSINGLE_LINE_EDIT = 0x1;
//	public static final int XmSINGLE_SELECT = 0x0;
//	public static final int XmSPIN_NEXT = 0x3E;
//	public static final int XmSPIN_PRIOR = 0x3F;
//	public static final int XmSTATIC = 0x0;
	public static final int XmSTRING = 0x2;
	public static final int XmSTRING_COMPONENT_SEPARATOR = 0x4;
	public static final int XmSTRING_COMPONENT_TAB = 0xC;	
	public static final int XmTAB_GROUP = 0x1;
	public static final int XmTRANSFER_FAILURE = 0;
	public static final int XmTRAVERSE_CURRENT = 0x0;
//	public static final int XmTRAVERSE_DOWN = 0x7;
//	public static final int XmTRAVERSE_HOME = 0x3;
//	public static final int XmTRAVERSE_LEFT = 0x8;
	public static final int XmTRAVERSE_NEXT = 0x1;
	public static final int XmTRAVERSE_NEXT_TAB_GROUP = 0x4;
	public static final int XmTRAVERSE_PREV = 0x2;
	public static final int XmTRAVERSE_PREV_TAB_GROUP = 0x5;
//	public static final int XmTRAVERSE_RIGHT = 0x9;
//	public static final int XmTRAVERSE_UP = 0x6;
//	public static final int XmUNMAP = 0x1;
	public static final int XmUNSPECIFIED_PIXMAP = 0x2;
	public static final int XmVARIABLE = 0x0;
	public static final int XmVERTICAL = 0x1;
//	public static final int XtCWQueryOnly = 128;
//	public static final int XtGeometryAlmost = 0x2;
//	public static final int XtGeometryDone = 0x3;
//	public static final int XtGeometryNo = 0x1;
//	public static final int XtGeometryYes = 0x0;
//	public static final int XtGrabExclusive = 0x2;
	public static final int XtGrabNone = 0x0;
//	public static final int XtGrabNonexclusive = 0x1;
//	public static final int XtIMAll = 0x7;
	public static final int XtIMAlternateInput = 0x4;
	public static final int XtIMTimer = 0x2;
	public static final int XtIMXEvent = 0x1;
	public static final int XYBitmap = 0;
//	public static final int XYPixmap = 1;
//	public static final int YSorted = 0x1;
//	public static final int YXBanded = 0x3;
//	public static final int YXSorted = 0x2;
	public static final int ZPixmap = 2;

	/* Unused X Structs */
	/*
	public class XPoint {
		public short x, y;
		public static final int sizeof = 4;
	}
	*/

	/* Unused Natives */
	/*
	public static final native int XBlackPixel (int display, int screenNum);
	public static final native void XChangeActivePointerGrab (int display, int eventMask, int cursor, int time);
	public static final native int XDefaultGC (int display, int screen_number);
	public static final native void XNoOp (int display);
	public static final native int XRootWindowOfScreen (int screen);
	public static final native int XSendEvent (int display, int w, boolean propagate, int event_mask, XAnyEvent event);
	public static final native int XmCreateCascadeButton (int parent, byte [] name, int [] arglist, int argcount);
	public static final native int XmCreateDrawnButton (int parent, byte [] name, int [] arglist, int argcount);
	public static final native int XmCreateRowColumn (int parent, byte [] name, int [] arglist, int argcount);
	public static final native int XmCreateScrolledWindow (int parent, byte [] name, int [] arglist, int argcount);
	public static final native int XmGetFocusWidget (int widget);
	public static final native void XmListAddItemsUnselected (int list, int xmStringTable, int item_count, int position);
	public static final native void XmListDeleteItem (int list, int item);
	public static final native void XmListDeselectItem (int list, int xmString);
	public static final native void XmListSelectItem (int list, int xmString, boolean notify);
	public static final native int XmPushButtonWidgetClass ();
	public static final native void XmStringDrawUnderline (int display, int window, int fontlist, int xmString, int gc, int x, int y, int width, int align, int lay_dir, XRectangle clip, int xmStringUnderline);
	public static final native int XmStringLineCount (int xmString);
	public static final native boolean XmTextRemove (int widget);
	public static final native int XtAppSetErrorHandler (int app_context, int handler);
	public static final native int XtAppSetWarningHandler (int app_context, int handler);
	public static final native void XtCallActionProc (int widget, byte [] action, XAnyEvent event, byte [] params, int num_params);
	public static final native void XtCloseDisplay (int display);
	public static final native int XtCreateWidget (byte [] name, int widgetClass, int parent, int [] argList, int argCount);
	public static final native void XtRemoveCallback (int widget, int callback_name, int callback, int client_data);
	public static final native void XtRemoveEventHandler (int widget, int event_mask, boolean nonmaskable, int proc, int client_data);
	public static final native int XtScreen (int widget);
	*/
public static final native int OverrideShellWidgetClass ();
public static final native int ShellWidgetClass ();
public static final native int TopLevelShellWidgetClass ();
public static final native int TransientShellWidgetClass ();
public static final native int XAllocColor (int display, int colormap, XColor color);
public static final native void XBell (int display, int ms);
public static final native int XBitmapBitOrder (int display);
public static final native int XBlackPixel (int display, int screenNum);
public static final native int XChangeActivePointerGrab(int display, int event_mask, int cursor, int time);
public static final native int XChangeGC (int display, int gc, int valuemask, XGCValues values);
public static final native void XChangeWindowAttributes (int display, int window, int mask, XSetWindowAttributes attributes);
public static final native boolean XCheckMaskEvent (int display, int mask, XAnyEvent event);
public static final native boolean XCheckWindowEvent (int display, int window, int mask, XAnyEvent event);
public static final native void XClearArea (int display, int window, int x, int y, int width, int height, boolean exposures);
public static final native void XClipBox (int region, XRectangle rectangle);
public static final native void XCopyArea (int display, int src, int dest, int gc, int src_x, int src_y, int width, int height, int dest_x, int dest_y);
public static final native void XCopyPlane (int display, int src, int dest, int gc, int src_x, int src_y, int width, int height, int dest_x, int dest_y, int plane);
public static final native int XCreateBitmapFromData (int display, int drawable, byte [] data, int width, int height);
public static final native int XCreateFontCursor (int display, int shape);
public static final native int XCreateGC (int display, int window, int mask, XGCValues values);
public static final native int XCreateImage (int display, int visual, int depth, int format, int offset, int data, int width, int height, int bitmap_pad, int bytes_per_line);
public static final native int XCreatePixmap (int display, int drawable, int width, int height, int depth);
public static final native int XCreatePixmapCursor (int display, int source, int mask, XColor foreground_color, XColor background_color, int x, int y);
public static final native int XCreateRegion ();
public static final native int XDefaultColormap (int display, int screen_number);
public static final native int XDefaultDepthOfScreen (int screen);
public static final native int XDefaultRootWindow (int display);
public static final native int XDefaultScreen (int display);
public static final native int XDefaultScreenOfDisplay (int display);
public static final native int XDefaultVisual (int display, int screen_number);
public static final native void XDefineCursor (int display, int window, int cursor);
public static final native int XDestroyImage(int ximage);
public static final native void XDestroyRegion (int region);
public static final native int XDisplayHeight (int display, int screen);
public static final native int XDisplayHeightMM (int display, int screen);
public static final native int XDisplayWidth (int display, int screen);
public static final native int XDisplayWidthMM (int display, int screen);
public static final native void XDrawArc (int display, int drawable, int gc, int x1, int y1, int x2, int y2, int a1, int a2);
public static final native void XDrawLine (int display, int drawable, int gc, int x1, int y1, int x2, int y2);
public static final native void XDrawLines (int display, int drawable, int gc, short[] xPoints, int nPoints, int mode);
public static final native void XDrawRectangle (int display, int drawable, int gc, int x, int y, int width, int height);
public static final native boolean XEmptyRegion (int region);
public static final native boolean XEqualRegion (int region1, int region2);
public static final native void XFillArc (int display, int drawable, int gc, int x1, int y1, int x2, int y2, int a1, int a2);
public static final native int XFillPolygon (int display, int drawable, int gc, short[] xPoints, int nPoints, int mode, int style);
public static final native void XFillRectangle (int display, int drawable, int gc, int x, int y, int width, int height);
public static final native boolean XFilterEvent (XAnyEvent event, int window);
public static final native void XFlush (int display);
public static final native int XFontsOfFontSet (int fontSet, int[] fontStructs, int[] fontNames);
public static final native int XFree (int address);
public static final native int XFreeColors (int display, int colormap, int [] pixels, int npixels, int planes);
public static final native void XFreeCursor (int display, int pixmap);
public static final native void XFreeFontNames(int list);
public static final native void XFreeFont(int display, int font_struct);
public static final native void XFreeFontSet(int display, int font_set);
public static final native void XFreeGC (int display, int gc);
public static final native void XFreePixmap (int display, int pixmap);
public static final native int XGetGCValues (int display, int gc, int valuemask, XGCValues values);
public static final native int XGetGeometry (int display, int drawable, int [] root_return, int [] x_return, int [] y_return, int [] width_return, int [] height_return, int [] border_width_return, int [] depth_return);
public static final native int XGetImage (int display, int drawable, int x, int y, int width, int height, int plane_mask, int format);
public static final native int XGetInputFocus (int display, int [] window, int [] revert);
public static final native boolean XGetWindowAttributes (int display, int window, XWindowAttributes attributes);
public static final native int XGrabPointer (
	int display, 
	int grabWindow,
	int ownerEvents,
	int eventMask,
	int pointerMode,
	int keyboardMode,
	int confineToWindow,
	int cursor,
	int time);
public static final native int XInitThreads ();	
public static final native int XInternAtom( int display, byte [] name, boolean ifExists );
public static final native int XKeysymToString (int keysym);
public static final native int XListFonts(int display, byte[] pattern, int maxnames, int[] actual_count_return);
public static final native int XListProperties(int display, int window, int[] num_prop_return);
public static final native int XLookupString (XKeyEvent event, byte [] string, int size, int [] keysym, int [] status);
public static final native int XLowerWindow (int display, int window);
public static final native boolean XPointInRegion (int region, int x, int y);
public static final native int XPutImage (int display, int drawable, int gc, int image, int srcX, int srcY, int destX, int destY, int width, int height);
public static final native int XQueryColor (int display, int colormap, XColor color);
public static final native int XQueryPointer (
	int display, 
	int window, 
	int [] root,
	int [] child,
	int [] rootX,
	int [] rootY,
	int [] windowX,
	int [] windowY,
	int [] mask);
public static final native int XQueryTree (int display, int window, int [] root_return, int [] parent_return, int [] children_return, int [] nChildren_return);
public static final native int XRaiseWindow (int display, int window);
public static final native int XReconfigureWMWindow (int display, int window, int screen, int valueMask, XWindowChanges values);
public static final native int XRectInRegion (int region, int x, int y, int width, int height);
public static final native void XSetBackground (int display, int gc, int background);
public static final native void XSetClipMask (int display, int gc, int pixmap);
public static final native void XSetClipRectangles (int display, int gc, int clip_x_origin, int clip_y_origin, XRectangle rectangles, int n, int ordering);
public static final native int XSetDashes (int display, int gc, int dash_offset, byte[] dash_list, int n);
public static final native int XSetErrorHandler (int handler);
public static final native void XSetFillStyle (int display, int gc, int fill_style);
public static final native int XSetFont (int display, int gc, int font);
public static final native void XSetForeground (int display, int gc, int foreground);
public static final native void XSetFunction (int display, int gc, int function);
public static final native void XSetGraphicsExposures (int display, int gc, boolean graphics_exposures);
public static final native int XSetInputFocus (int display, int window, int revert, int time);
public static final native int XSetLineAttributes (int display, int gc, int lineWidth, int lineStyle, int capStyle, int joinStyle);
public static final native void XSetRegion (int display, int gc, int region);
public static final native void XSetStipple (int display, int gc, int pixmap);
public static final native void XSetSubwindowMode (int display, int gc, int subwindow_mode);
public static final native void XSetWindowBorderWidth (int display, int window, int width);
public static final native void XSubtractRegion (int sra, int srb, int dr_return);
public static final native void XSync (int display, boolean discard);
public static final native int XSynchronize (int display, boolean onoff);
public static final native void XUndefineCursor (int display, int window);
public static final native int XUngrabPointer (int display, int time);
public static final native void XUnionRectWithRegion (XRectangle rectangle, int src_region, int dest_region_return);
public static final native void XUnionRegion (int sra, int srb, int dr_return);
public static final native int XWhitePixel (int display, int screenNum);
public static final native void XWithdrawWindow (int display, int window, int screen);
public static final native void XmAddWMProtocolCallback (int shell, int protocol, int callback, int closure);
public static final native void XmChangeColor (int widget, int pixel);
public static final native int XmClipboardCopy(int display, int window, int item_id, byte[] format_name, byte[] buffer, int length, int private_id, int[] data_id);
public static final native int XmClipboardEndCopy(int display, int window, int item_id);
public static final native int XmClipboardStartCopy(int display, int window, int clip_label, int timestamp, int widget, int callback, int[] item_id);
public static final native int XmClipboardInquireLength(int display, int widget, byte[] format_name, int[] length);
public static final native int XmClipboardInquireFormat(int display, int window, int index, byte[] format_name_buf, int buffer_len, int[]copied_len);
public static final native int XmClipboardInquireCount(int display, int window, int[] count, int[] max_format_name_length);
public static final native int XmClipboardStartRetrieve(int display, int window, int timestamp);
public static final native int XmClipboardRetrieve(int display, int window, byte[] format_name, byte[] buffer, int length, int[] num_bytes, int[] private_id);
public static final native int XmClipboardEndRetrieve(int display, int window);
public static final native void XmComboBoxAddItem(int widget, int xmString, int position, boolean unique);
public static final native void XmComboBoxDeletePos(int widget, int position);
public static final native void XmComboBoxSelectItem(int widget, int xmString);
public static final native int XmCreateArrowButton (int parent, byte [] name, int [] arglist, int argcount);
public static final native int XmCreateCascadeButtonGadget (int parent, byte [] name, int [] arglist, int argcount);
public static final native int XmCreateComboBox(int parent, byte [] name, int [] arglist, int argcount);
public static final native int XmCreateDialogShell (int parent, byte [] name, int [] arglist, int argcount);
public static final native int XmCreateDrawingArea (int parent, byte [] name, int [] arglist, int argcount);
//public static final native int XmCreateDrawnButton (int parent, byte [] name, int [] arglist, int argcount);
public static final native int XmCreateErrorDialog (int parent, byte [] name, int [] arglist, int argcount);
public static final native int XmCreateFileSelectionDialog (int parent, byte [] name, int [] arglist, int argcount);
public static final native int XmCreateForm (int parent, byte [] name, int [] arglist, int argcount);
public static final native int XmCreateFrame (int parent, byte [] name, int [] arglist, int argcount);
public static final native int XmCreateInformationDialog (int parent, byte [] name, int [] arglist, int argcount);
public static final native int XmCreateLabel (int parent, byte [] name, int [] arglist, int argcount);
public static final native int XmCreateList (int parent, byte [] name, int [] arglist, int argcount);
public static final native int XmCreateMainWindow (int parent, byte [] name, int [] arglist, int argcount);
public static final native int XmCreateMenuBar (int parent, byte [] name, int [] arglist, int argcount);
public static final native int XmCreateMessageDialog (int parent, byte [] name, int [] arglist, int argcount);
public static final native int XmCreatePopupMenu (int parent, byte [] name, int [] arglist, int argcount);
public static final native int XmCreatePulldownMenu (int parent, byte [] name, int [] arglist, int argcount);
public static final native int XmCreatePushButton (int parent, byte [] name, int [] arglist, int argcount);
public static final native int XmCreatePushButtonGadget (int parent, byte [] name, int [] arglist, int argcount);
public static final native int XmCreateQuestionDialog (int parent, byte [] name, int [] arglist, int argcount);
public static final native int XmCreateScale (int parent, byte [] name, int [] arglist, int argcount);
public static final native int XmCreateScrollBar (int parent, byte [] name, int [] arglist, int argcount);
public static final native int XmCreateScrolledList (int parent, byte [] name, int [] arglist, int argcount);
public static final native int XmCreateScrolledText (int parent, byte [] name, int [] arglist, int argcount);
public static final native int XmCreateSeparator (int parent, byte [] name, int [] arglist, int argcount);
public static final native int XmCreateSeparatorGadget (int parent, byte [] name, int [] arglist, int argcount);
//public static final native int XmCreateSimpleSpinBox (int parent, byte [] name, int [] arglist, int argcount);
//public static final native int XmCreateSpinBox (int parent, byte [] name, int [] arglist, int argcount);
public static final native int XmCreateTextField (int parent, byte [] name, int [] arglist, int argcount);
public static final native int XmCreateToggleButton (int parent, byte [] name, int [] arglist, int argcount);
public static final native int XmCreateToggleButtonGadget (int parent, byte [] name, int [] arglist, int argcount);
public static final native int XmCreateWarningDialog (int parent, byte [] name, int [] arglist, int argcount);
public static final native boolean XmDestroyPixmap (int screen, int pixmap);
public static final native void XmDragCancel(int dragcontext);
public static final native int XmDragStart(int widget, XAnyEvent event, int[] arglist, int argcount);
public static final native void XmDropSiteRegister(int widget, int [] arglist, int argcount);
public static final native void XmDropSiteUnregister(int widget);
public static final native void XmDropSiteUpdate(int widget, int [] arglist, int argcount);
public static final native void XmDropTransferAdd(int drop_transfer, int [] transfers, int num_transfers);
public static final native int XmDropTransferStart(int widget, int [] arglist, int argcount);
public static final native int XmFileSelectionBoxGetChild (int widget, int child);
public static final native int XmFontListAppendEntry (int oldList, int entry);
public static final native int XmFontListCopy (int fontlist);
public static final native void XmFontListEntryFree  (int[] entry);
public static final native int XmFontListEntryGetFont (int entry, int[] type_return);
public static final native int XmFontListEntryLoad (int display, byte [] fontName, int type, byte[] tag);
public static final native void XmFontListFree (int list);
public static final native void XmFontListFreeFontContext (int context);
public static final native boolean XmFontListInitFontContext (int[] context,int fontList);
public static final native int XmFontListNextEntry (int context); 
public static final native int XmGetAtomName (int display, int atom);
public static final native int XmGetDragContext (int widget, int timestamp);
public static final native int XmGetFocusWidget (int widget);
public static final native int XmGetPixmap( int screen, byte [] name, int fgPixel, int bgPixel );
public static final native int XmGetPixmapByDepth (int screen, byte [] image_name, int foreground, int background, int depth);
public static final native int XmGetXmDisplay (int display);
public static final native int XmImMbLookupString (int widget, XKeyEvent event, byte [] string, int size, int [] keysym, int [] status);
public static final native int XmInternAtom (int display, byte [] name, boolean only_if_exists);
public static final native void XmListAddItemUnselected (int list, int xmString, int position);
public static final native void XmListDeleteAllItems (int list);
public static final native void XmListDeleteItemsPos (int list, int item_count, int position);
public static final native void XmListDeletePos (int list, int position);
public static final native void XmListDeletePositions (int list, int [] position_list, int position_count);
public static final native void XmListDeselectAllItems (int list);
public static final native void XmListDeselectPos (int list, int position);
public static final native int XmListGetKbdItemPos (int list);
public static final native boolean XmListGetSelectedPos (int list, int [] positions, int [] count);
public static final native int XmListItemPos (int list, int xmString);
public static final native boolean XmListPosSelected (int list, int position);
public static final native void XmListReplaceItemsPosUnselected (int list, int [] new_items, int item_count, int position);
public static final native void XmListSelectPos (int list, int position, boolean notify);
public static final native boolean XmListSetKbdItemPos (int list, int position);
public static final native void XmListSetPos (int list, int position);
public static final native void XmListUpdateSelectedList (int list);
public static final native void XmMainWindowSetAreas (int widget, int menu, int command, int hscroll, int vscroll, int wregion);
public static final native int XmMenuShellWidgetClass ();
public static final native int XmMessageBoxGetChild (int widget, int child);
public static final native int XmParseMappingCreate (int [] argList, int argCount);
public static final native void XmParseMappingFree (int parseMapping);
public static final native void XmParseTableFree (int [] parseTable, int mappingCount);
public static final native boolean XmProcessTraversal (int widget, int dir);
public static final native int XmRenderTableAddRenditions(int oldTable, int[] renditions, int renditionCount, int mergeMode);
public static final native void XmRenderTableFree(int renderTable);
public static final native int XmRenditionCreate(int widget, byte[] tag, int[] argList, int argCount);
public static final native void XmRenditionFree(int rendition);
public static final native boolean XmStringCompare (int xmString1, int xmString2);
public static final native int XmStringComponentCreate (int type, int length, byte[] value);
public static final native int XmStringCreate (byte [] string, byte [] charset);
public static final native int XmStringCreateLocalized (byte [] string);
public static final native int XmStringCreateLtoR (byte [] string, byte [] charset);
public static final native void XmStringDraw (int display, int window, int renderTable, int xmString, int gc, int x, int y, int width, int align, int lay_dir, XRectangle clip);
public static final native void XmStringDrawImage (int display, int window, int renderTable, int xmString, int gc, int x, int y, int width, int align, int lay_dir, XRectangle clip);
public static final native boolean XmStringEmpty (int s1);
public static final native void XmStringFree (int xmString);
public static final native boolean XmStringGetLtoR (int xmString, byte [] charset, int [] text);
public static final native int XmStringGenerate(byte[] text, byte[] tag, int type, byte[] rendition);
public static final native int XmStringHeight (int fontList, int xmString);
public static final native int XmStringParseText (byte[] text, int textEnd, byte [] tag, int tagType, int [] parseTable, int parseCount, int callData);
public static final native int XmStringWidth (int fontList, int xmString);
public static final native int XmStringUnparse (int xmString, byte [] tag, int tagType, int outputType, int [] parseTable, int parseCount, int parseModel);
public static final native int XmTabCreate(int value, byte units, byte offsetModel, byte alignment, byte[] decimal);
public static final native void XmTabFree(int tab);
public static final native void XmTabListFree(int tabList);
public static final native int XmTabListInsertTabs(int oldList, int[] tabs, int tab_count, int position);
public static final native void XmTextClearSelection (int widget, int time);
public static final native boolean XmTextCopy (int widget, int time);
public static final native boolean XmTextCut (int widget, int time);
public static final native void XmTextDisableRedisplay (int widget);
public static final native void XmTextEnableRedisplay (int widget);
public static final native int XmTextGetInsertionPosition (int widget);
public static final native int XmTextGetLastPosition (int widget);
public static final native int XmTextGetMaxLength (int widget);
public static final native int XmTextGetSelection (int widget);
public static final native boolean XmTextGetSelectionPosition (int widget, int [] left, int [] right);
public static final native int XmTextGetString (int widget);
public static final native int XmTextGetSubstring (int widget, int start, int num_chars, int buffer_size, byte [] buffer);
public static final native int XmTextGetSubstringWcs (int widget, int start, int num_chars, int buffer_size, char [] buffer);
public static final native void XmTextInsert (int widget, int position, byte [] value);
public static final native boolean XmTextPaste (int widget);
public static final native boolean XmTextPosToXY (int widget, int position, short [] x, short [] y);
public static final native void XmTextReplace (int widget, int from_pos, int to_pos, byte [] value);
public static final native void XmTextScroll (int widget, int lines);
public static final native void XmTextSetEditable (int widget, boolean editable);
public static final native void XmTextSetHighlight (int widget, int left, int right, int mode);
public static final native void XmTextSetInsertionPosition (int widget, int position);
public static final native void XmTextSetMaxLength (int widget, int max_length);
public static final native void XmTextSetSelection (int widget, int first, int last, int time);
public static final native void XmTextSetString (int widget, byte [] value);
public static final native void XmTextShowPosition (int widget, int position);
public static final native void XmUpdateDisplay (int widget);
public static final native boolean XmWidgetGetDisplayRect (int region, XRectangle rectangle);
public static final native int XmbLookupString (int ic, XKeyEvent event, byte [] string, int size, int [] keysym, int [] status);
public static final native void XtAddCallback (int widget, int callback_name, int callback, int client_data);
public static final native void XtAddEventHandler (int widget, int event_mask, boolean nonmaskable, int proc, int client_data);
public static final native void XtAddExposureToRegion (int event, int region);
public static final native int XtAppAddTimeOut (int app_context, int interval, int proc, int client_data);
public static final native int XtAppCreateShell (
	byte [] appName, 
	byte [] appClass, 
	int widgetClass, 
	int display,
	int [] argList,
	int argCount);
public static final native void XtAppNextEvent (int appContext, XAnyEvent event);
public static final native boolean XtAppPeekEvent (int appContext, XAnyEvent event);
public static final native int XtAppPending (int appContext);
public static final native void XtAppProcessEvent (int appContext, int inputMask);
public static final native int XtAppSetErrorHandler (int app_context, int msg_handler);
public static final native int XtAppSetWarningHandler (int app_context, int msg_handler);
public static final native int XtBuildEventMask (int widget);
public static final native void XtCallActionProc (int widget, byte []  action, XAnyEvent event, int [] params, int num_params);
public static final native int XtClass (int widget);
public static final native void XtConfigureWidget (int widget, int x, int y, int width, int height, int borderWidth);
public static final native int XtCreateApplicationContext ();
public static final native int XtCreatePopupShell (byte [] name, int widgetClass, int parent, int [] argList, int argCount);
public static final native void XtDestroyApplicationContext (int appContext);
public static final native void XtDestroyWidget (int widget);
public static final native boolean XtDispatchEvent (XAnyEvent event);
public static final native int XtDisplay (int widget);
public static final native int XtDisplayToApplicationContext (int display);
public static final native void XtFree (int ptr);
public static final native int XtGetMultiClickTime (int display);
public static final native void XtGetValues (int widget, int [] argList, int numArgs);
public static final native boolean XtIsManaged (int widget);
public static final native boolean XtIsRealized (int widget);
public static final native boolean XtIsSubclass (int widget, int widgetClass);
public static final native boolean XtIsTopLevelShell (int widget);
public static final native boolean XtIsWidget (int widget);
public static final native int XtLastTimestampProcessed (int display);
public static final native int XtMalloc (int size);
public static final native void XtManageChild (int widget);
public static final native void XtMapWidget (int widget);
public static final native void XtMoveWidget (int widget, int x, int y);
public static final native int XtOpenDisplay (
	int xtAppContext, 
	byte [] displayName, 
	byte [] applicationName, 
	byte [] applicationClass,
	int options, 
	int numOptions, 
	int [] argc, 
	int argv);
public static final native void XtOverrideTranslations (int w, int translations);
public static final native int XtParent (int widget);
public static final native int XtParseTranslationTable (byte [] string);
public static final native void XtPopdown (int widget);
public static final native void XtPopup (int widget, int flags);
public static final native int XtQueryGeometry (int widget, XtWidgetGeometry intended, XtWidgetGeometry preferred_return);
public static final native void XtRealizeWidget (int widget);
public static final native void XtRemoveTimeOut (int id);
public static final native void XtResizeWidget (int widget, int width, int height, int borderWidth);
public static final native void XtResizeWindow (int widget);
public static final native int XtSetLanguageProc (int appContext, int languageProc, int pointer);
public static final native void XtSetMappedWhenManaged (int widget, boolean flag);
public static final native void XtSetValues (int widget, int [] argList, int numArgs);
public static final native void XtToolkitInitialize ();
public static final native void XtTranslateCoords (int widget, short x, short y, short [] root_x, short [] root_y);
public static final native void XtUnmanageChild (int widget);
public static final native void XtUnmapWidget (int widget);
public static final native int XtWindow (int widget);
public static final native int XtWindowToWidget (int display, int widget);
static int malloc(String name) {
	int length = name.length();
	int ptr = OS.XtMalloc (length + 1);
	char [] unicode = new char [length];
	name.getChars (0, length, unicode, 0);
	byte[] buffer = new byte [length + 1];
	for (int i = 0; i < length; i++) {
		buffer[i] = (byte) unicode[i];
	}
	OS.memmove (ptr, buffer, length + 1);
	return ptr;
}
public static final native void memmove (int dest, XImage src, int count);
public static final native void memmove (int dest, XmDragProcCallback src, int count);
public static final native void memmove (int dest, XmTextBlockRec src, int count);
public static final native void memmove (int dest, XmTextVerifyCallbackStruct src, int count);
public static final native void memmove (int dest, byte [] src, int count);
public static final native void memmove (int dest, int [] src, int count);
public static final native void memmove (Visual dest, int src, int count);
public static final native void memmove (XButtonEvent dest, int src, int count);
public static final native void memmove (int dest, XButtonEvent src, int count);
public static final native void memmove (XCharStruct dest, int src, int count);
public static final native void memmove (XConfigureEvent dest, int src, int count);
public static final native void memmove (XCrossingEvent dest, int src, int count);
public static final native void memmove (XExposeEvent dest, int src, int count);
public static final native void memmove (XFocusChangeEvent dest, int src, int count);
public static final native void memmove (XFontStruct dest, int src, int count);
public static final native void memmove (XImage dest, int src, int count);
public static final native void memmove (XKeyEvent dest, int src, int count);
public static final native void memmove (XKeyEvent dest, XAnyEvent src, int count);
public static final native void memmove (XMotionEvent dest, int src, int count);
public static final native void memmove (XmAnyCallbackStruct dest, int src, int count);
public static final native void memmove (XmDragProcCallback dest, int src, int count);
public static final native void memmove (XmDropFinishCallback dest, int src, int count);
public static final native void memmove (XmDropProcCallback dest, int src, int count);
public static final native void memmove (XmTextBlockRec dest, int src, int count);
public static final native void memmove (XmTextVerifyCallbackStruct dest, int src, int count);
public static final native void memmove (byte [] dest, int src, int count);
public static final native void memmove (int [] dest, int src, int count);
public static final native int strlen (int string);
public static final native int XmCreateDrawnButton (int parent, byte [] name, int [] arglist, int argcount);
public static final native int XCheckIfEvent (int display, XAnyEvent event_return, int predicate, int arg);
public static final native boolean XtToolkitThreadInitialize ();
public static final native int Call (int proc, int arg1, int arg2);
public static final native int XSetIOErrorHandler (int handler);
public static final native boolean XmTextFieldPaste (int widget);

/*
 * ======== Start of printing constants and functions ========
 */
	public static final byte XPJobAttr = 1;
	public static final byte XPDocAttr = 2;
	public static final byte XPPrinterAttr = 4;
	public static final byte XPAttrMerge = 2;
	public static final byte XPSpool = 1;
	public static final int CopyFromParent = 0;

public static final native int XpCreateContext(int display, byte [] printer_name);
public static final native int XpGetPrinterList(int display, byte [] printer_name, int [] list_count);
public static final native void XpFreePrinterList(int printer_list);
public static final native int XpGetAttributes(int display, int print_context, byte type);
public static final native void XpSetAttributes(int display, int print_context, byte type, byte [] pool, byte replacement_rule);
public static final native int XpGetOneAttribute(int display, int print_context, byte type, byte [] attribute_name);
public static final native void XpSetContext(int display, int print_context);    
public static final native int XpGetScreenOfContext(int display, int print_context);
public static final native void XpDestroyContext(int display, int print_context);
public static final native int XpGetPageDimensions(int display, int print_context, short [] width, short [] height, XRectangle reproducible_area);
public static final native void XpStartJob(int display, byte save_data);
public static final native void XpStartPage(int display, int window);
public static final native void XpEndPage(int display);
public static final native void XpEndJob(int display);
public static final native void XpCancelJob(int display, boolean discard);
public static final native int XpQueryVersion(int display, short[] major_version, short[] minor_version);
public static final native int XDefaultGCOfScreen(int screen);
public static final native int XDefaultColormapOfScreen(int screen);
public static final native int XRootWindowOfScreen(int screen);
public static final native int XScreenNumberOfScreen(int screen);
public static final native int XCreateWindow(int display, int parent, int x, int y, int width, int height,
		int border_width, int depth, int clazz, int visual, long value_mask, int attributes);	
public static final native void XDestroyWindow(int display, int w);

/*
 * ======== End of printing constants and functions ========
 */

public static final native int pipe (int [] filedes);
public static final native int read (int filedes, byte [] buf, int nbyte);
public static final native int write (int filedes, byte [] buf, int nbyte);
public static final native int close (int filedes);
public static final native int XtAppAddInput (int app_context, int source, int condition, int proc, int client_data);
public static final native void XtRemoveInput (int id);
//	public static final int XtInputNoneMask = 0;
	public static final int XtInputReadMask = 1;
//	public static final int XtInputWriteMask = 2;
//	public static final int XtInputExceptMask = 4;

public static final native int XLoadQueryFont (int display, byte[] name);
public static final native int XmFontListEntryCreate (byte[] tag, int type, int font);

}
