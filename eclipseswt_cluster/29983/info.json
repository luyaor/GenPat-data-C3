{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c193f05d090d3c5a7990adb54a1d349c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad01286d8bb5090a47bde9c4b466f0f2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "11bccded3c22e8e6857213e8db2ccad6f605ba46", "commitAfterChange": "79662ee8cc3f613263cefb586b48c6b804026f52", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "  LRESULT sendMouseDownEvent (int type, int button, int msg, int wParam, int lParam)", "signatureAfterChange": "  LRESULT sendMouseDownEvent (int type, int button, int msg, int wParam, int lParam)", "diff": ["+\t* ", "+\t* NOTE: This code runs for multi-select as well, ignoring", "+\t* the selection that is issed from WM_NOTIFY.", "-\tif ((style & SWT.SINGLE) != 0) {", "-\t\tint count = OS.SendMessage (handle, OS.LVM_GETSELECTEDCOUNT, 0, 0);", "-\t\tif (count == 1 && pinfo.iItem != -1) {", "-\t\t\tLVITEM lvItem = new LVITEM ();", "-\t\t\tlvItem.mask = OS.LVIF_STATE;", "-\t\t\tlvItem.stateMask = OS.LVIS_SELECTED;", "-\t\t\tlvItem.iItem = pinfo.iItem;", "-\t\t\tOS.SendMessage (handle, OS.LVM_GETITEM, 0, lvItem);", "-\t\t\twasSelected = (lvItem.state & OS.LVIS_SELECTED) != 0;", "-\t\t\tif (wasSelected) ignoreSelect = true;", "-\t\t}", "+\tint count = OS.SendMessage (handle, OS.LVM_GETSELECTEDCOUNT, 0, 0);", "+\tif (count == 1 && pinfo.iItem != -1) {", "+\t\tLVITEM lvItem = new LVITEM ();", "+\t\tlvItem.mask = OS.LVIF_STATE;", "+\t\tlvItem.stateMask = OS.LVIS_SELECTED;", "+\t\tlvItem.iItem = pinfo.iItem;", "+\t\tOS.SendMessage (handle, OS.LVM_GETITEM, 0, lvItem);", "+\t\twasSelected = (lvItem.state & OS.LVIS_SELECTED) != 0;", "+\t\tif (wasSelected) ignoreSelect = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fb6ef72bda1c00b2f3586195cc5d0f1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public int getTextHeight ()", "signatureAfterChange": "  public int getTextHeight ()", "diff": ["- */", "+", "-\tif ((style & SWT.DROP_DOWN) != 0) {", "-\t\t/*", "-\t\t* Bug in MOTIF.  For some reason, XtQueryGeometry ()", "-\t\t* returns the wrong height when the combo is not realized.", "-\t\t* The fix is to force the combo to be realized by forcing", "-\t\t* the shell to be realized.", "-\t\t*/", "-        /* AW", "-\t\tif (!OS.XtIsRealized (handle)) getShell ().realizeWidget ();", "-\t\tXtWidgetGeometry result = new XtWidgetGeometry ();", "-\t\tresult.request_mode = OS.CWHeight;", "-\t\tOS.XtQueryGeometry (handle, null, result);", "-\t\treturn result.height;", "-        */", "-        return 26;", "-\t} else {", "-\t\t/* Calculate text field height. */", "-        /* AW", "-\t\tint [] argList = {OS.XmNtextField, 0};", "-\t\tOS.XtGetValues (handle, argList, argList.length / 2);", "-\t\tint [] argList2 = {OS.XmNmarginHeight, 0};", "-\t\tOS.XtGetValues (argList[1], argList2, argList2.length / 2);", "-\t\tint height = getFontHeight ();", "-\t\tXRectangle rect = new XRectangle ();", "-\t\tOS.XmWidgetGetDisplayRect (argList[1], rect);", "-\t\theight += (rect.y * 2) + (2 * argList2[1]);", "-        */", "-", "-\t\t/* Add in combo box margins. */", "-        /* AW", "-\t\tint [] argList3 = {OS.XmNmarginHeight, 0, OS.XmNshadowThickness, 0, OS.XmNhighlightThickness, 0};", "-\t\tOS.XtGetValues(handle, argList3, argList3.length / 2);", "-\t\theight += (2 * argList3[1]) + (2 * argList3[3]) + (2 * argList3[5]);", "-", "-\t\treturn height;", "-        */", "-        return 26;", "-\t}", "+\treturn 26; // NEEDS WORK"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9ca83277e3d59a302290246be94f354", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "328c240c1f5fd5b8443a33f6337d785d753067bb", "commitAfterChange": "0cb48e6dc6d4cd7842728d49aab01617b288dc45", "methodNumberBeforeChange": 147, "methodNumberAfterChange": 147, "signatureBeforeChange": "  int OnStateChange (int aWebProgress, int aRequest, int aStateFlags, int aStatus)", "signatureAfterChange": "  int OnStateChange (int aWebProgress, int aRequest, int aStateFlags, int aStatus)", "diff": ["-\t} else if ((aStateFlags & nsIWebProgressListener.STATE_TRANSFERRING) != 0) {", "-\t\tif (!IsPre_4) {", "-\t\t\tregisterFunctionsOnState = nsIWebProgressListener.STATE_IS_REQUEST | nsIWebProgressListener.STATE_STOP;", "-\t\t}", "+\t\tif (!IsPre_4) {", "+\t\t\tregisterFunctionsOnState = nsIWebProgressListener.STATE_IS_REQUEST | nsIWebProgressListener.STATE_STOP;", "+\t\t}", "+"]}], "num": 29983}