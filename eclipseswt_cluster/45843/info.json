{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e6dfbdcfdd6c29dfcff379425a4f2126", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b013a8aa0df85a8d66bf3fbc93d7c64", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "60a9b0215b046632b51b65b9dcf0569516e0686e", "commitAfterChange": "610b674161bbe6c03029856ff3ee4570430b9973", "methodNumberBeforeChange": 239, "methodNumberAfterChange": 241, "signatureBeforeChange": " public void replaceStyleRanges(int start, int length, StyleRange[] ranges)", "signatureAfterChange": " public void replaceStyleRanges(int start, int length, StyleRange[] ranges)", "diff": ["-\tlineCache.reset(firstLine, lastLine - firstLine + 1, true);", "-", "+\tfor (int i = 0; i < ranges.length; i++) {", "+\t\tStyleRange range = ranges[i];", "+\t\tif (range != null && range.font != null) {", "+\t\t\tif (!isFixedLineHeight()) {", "+\t\t\t\tlineCache.setAllLinesDefaultHeight();", "+\t\t\t}", "+\t\t\tsetLineHeightVariable();", "+\t\t\tbreak;", "+\t\t}", "+\t}", "+\tresetCache(firstLine, lastLine - firstLine + 1);", "+\t", "-\t\tdraw(0, redrawTop, getClientArea().width, redrawBottom - redrawTop, true);", "+\t\tsuper.redraw(0, redrawTop, getClientArea().width, redrawBottom - redrawTop, false);", "-", "-\t// make sure that the caret is positioned correctly.", "-\t// caret location may change if font style changes.", "-\t// fixes 1G8FODP"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d865bacedca11ac48cc61c8cea46bbd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "60a9b0215b046632b51b65b9dcf0569516e0686e", "commitAfterChange": "610b674161bbe6c03029856ff3ee4570430b9973", "methodNumberBeforeChange": 280, "methodNumberAfterChange": 287, "signatureBeforeChange": " public void setStyleRanges(StyleRange[] ranges)", "signatureAfterChange": " public void setStyleRanges(StyleRange[] ranges)", "diff": ["- \t// check the last range, make sure it falls within the range of the", "- \t// current text ", "+\tdefaultLineStyler.setStyleRanges(ranges);", "+ \t \t// check the last range, make sure it falls within the range of the", "+ \t \t// current text ", "-\t\t} \t", "+\t\t}", "+\t\t", "+\t\tfor (int i = 0; i < ranges.length; i++) {", "+\t\t\tStyleRange range = ranges[i];", "+\t\t\tif (range != null && range.font != null) {", "+\t\t\t\tif (!isFixedLineHeight()) {", "+\t\t\t\t\tlineCache.setAllLinesDefaultHeight();", "+\t\t\t\t}", "+\t\t\t\tsetLineHeightVariable();", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t}", "-\t\t// reset all lines affected by the style change", "-\t\tlineCache.reset(firstLine, lastLine - firstLine + 1, true);", "+\t\tresetCache(firstLine, lastLine - firstLine + 1);", "-\t\t// reset all lines", "-\t\tlineCache.reset(0, content.getLineCount(), false);", "+\t\tresetCache(0, content.getLineCount());", "-\tdefaultLineStyler.setStyleRanges(ranges);", "-\tredraw(); // should only redraw affected area to avoid flashing", "-\t// make sure that the caret is positioned correctly.", "-\t// caret location may change if font style changes.", "-\t// fixes 1G8FODP", "+ \tsuper.redraw();"]}], "num": 45843}