{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d9523168080c3d0f0ede86c4766cf0fd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35fb712cc738420ec3417dc22ee62c39", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "2d5c32b550f83e127b0647d88a40b04985e0f98b", "commitAfterChange": "7f06870c68e6cd50592de1618306ac4997d7e3b8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  void _setBackgroundPixel (int newPixel)", "signatureAfterChange": "  void _setBackgroundPixel (int newPixel)", "diff": ["-\t\tif (oldPixel != -1) OS.SendMessage (handle, OS.TVM_SETBKCOLOR, 0, -1);", "+\t\tif (oldPixel != -1) {", "+\t\t\tOS.SendMessage (handle, OS.TVM_SETBKCOLOR, 0, -1);", "+\t\t}", "+", "+\t\t/* Set the background color */", "+\t\t", "+\t\t/*", "+\t\t* Feature in Windows.  When TVM_SETBKCOLOR is used to", "+\t\t* set the background color of a tree, the plus/minus", "+\t\t* animation draws badly.  The fix is to clear the effect.", "+\t\t*/\t", "+\t\tif (EXPLORER_THEME) {", "+\t\t\tif (!OS.IsWinCE && OS.WIN32_VERSION >= OS.VERSION (6, 0)) {", "+\t\t\t\tif (explorerTheme) {", "+\t\t\t\t\tint bits2 = OS.SendMessage (handle, OS.TVM_GETEXTENDEDSTYLE, 0, 0);", "+\t\t\t\t\tif (newPixel == -1 && findImageControl () == null) {", "+\t\t\t\t\t\tbits2 |= OS.TVS_EX_FADEINOUTEXPANDOS;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tbits2 &= ~OS.TVS_EX_FADEINOUTEXPANDOS;", "+\t\t\t\t\t}", "+\t\t\t\t\tOS.SendMessage (handle, OS.TVM_SETEXTENDEDSTYLE, 0, bits2);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+", "+\t\t/* Set the checkbox image list */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d07689f9704c5d51bee7d56adb664839", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "179e1e8feb58af613b2d9e2d8a1b0f959cbc3d62", "commitAfterChange": "67f57a1503dff18128d85f6be9ce1151c584d527", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void dispose ()", "signatureAfterChange": " public void dispose ()", "diff": ["+\tint index = getIndex ();", "+\tint orderIndex = getOrderIndex ();", "+", "+\t/* ", "+\t * If column 0 was disposed and if the parent has style CHECK then", "+\t * the new column 0 will change, so explicitly redraw it if it appears to", "+\t * the left of the disposed column in the column order.", "+\t */", "+\tif ((parent.style & SWT.CHECK) != 0 && index == 0) {", "+\t\tif (parent.columns.length > 0) {", "+\t\t\tTableColumn newColumn0 = parent.columns [0];", "+\t\t\tif (newColumn0.getOrderIndex () < orderIndex) {", "+\t\t\t\tparent.redraw (newColumn0.getX (), 0, newColumn0.width, parentBounds.height, false);", "+\t\t\t}", "+\t\t}", "+\t}"]}], "num": 44678}