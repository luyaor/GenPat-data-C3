{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0630cdcb8c21ab4efea970e89aa2d4a8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0917c12be28407be7337b6b4ace68896", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "811bdeccc1df1329eadad9688114f47a526dc8ab", "commitAfterChange": "3d4fc78948c5be186415043f009f2521a6863797", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": "\r \r int processPaint (int damage)", "signatureAfterChange": "\r \r int processPaint (int damage)", "diff": ["+\t\t\t\r", "+\t\t\t/* Get the clipping tiles for children and siblings */\r", "+\t\t\tint clip_tile = getClipping (handle, topHandle (), true, true);\r", "+\r", "+\t\t\t/* Translate the clipping to the current GC coordinates */\r", "+\t\t\tshort [] abs_x = new short [1], abs_y = new short [1];\r", "+\t\t\tOS.PtGetAbsPosition (handle, abs_x, abs_y);\r", "+\t\t\tshort [] dis_abs_x = new short [1], dis_abs_y = new short [1];\r", "+\t\t\tOS.PtGetAbsPosition (OS.PtFindDisjoint (handle), dis_abs_x, dis_abs_y);\r", "+\t\t\tPhPoint_t delta = new PhPoint_t ();\r", "+\t\t\tdelta.x = (short) (abs_x [0] - dis_abs_x [0]);\r", "+\t\t\tdelta.y = (short) (abs_y [0] - dis_abs_y [0]);\r", "+\t\t\tOS.PhTranslateTiles(clip_tile, delta);\r", "+\r", "+\t\t\t/* Set the clipping */\r", "+\t\t\tint[] clip_rects_count = new int [1];\r", "+\t\t\tint clip_rects = OS.PhTilesToRects (clip_tile, clip_rects_count);\r", "+\t\t\tOS.PhFreeTiles (clip_tile);\t\r", "+\t\t\tif (clip_rects_count [0] == 0) {\r", "+\t\t\t\tclip_rects_count [0] = 1;\r", "+\t\t\t\tOS.free (clip_rects);\r", "+\t\t\t\tclip_rects = OS.malloc (PhRect_t.sizeof);\r", "+\t\t\t}\r", "+\t\t\tOS.PgSetMultiClip (clip_rects_count[0], clip_rects);\r", "+\t\t\tOS.free (clip_rects);\r", "+\t\t\t\r", "+\t\t\t/* Draw the widget */\r", "+\t\t\t\r", "+\t\t\t/* Reset the clipping */\r", "+\t\t\tOS.PgSetMultiClip (0, 0);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78db364ed89f74e3591a87494a527ca9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Canvas.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \r public void scroll (int destX, int destY, int x, int y, int width, int height, boolean all)", "signatureAfterChange": "\r \r public void scroll (int destX, int destY, int x, int y, int width, int height, boolean all)", "diff": ["-\tPhRect_t rect = new PhRect_t();\r", "-\trect.ul_x = (short)x;\r", "-\trect.ul_y = (short)y;\r", "-\trect.lr_x = (short)(x + width - 1);\r", "-\trect.lr_y = (short)(y + height - 1);\r", "-\tPhPoint_t delta = new PhPoint_t();\r", "-\tdelta.x = (short)deltaX;\r", "-\tdelta.y = (short)deltaY;\r", "-\tOS.PtFlush ();\r", "-\tOS.PhBlit(OS.PtWidgetRid(handle), rect, delta);\r", "-\tboolean overlaps = (destX < x + width) && (destY < y + height) &&\r", "-\t\t(destX + width > x) && (destY + height > y);\r", "-\tif (!overlaps) {\r", "-\t\tOS.PtDamageExtent (handle, rect);\r", "-\t} else {\r", "-\t\tint src = OS.PhGetTile();\r", "-\t\tint dest = OS.PhGetTile();\r", "-\t\tOS.memmove(src, rect, PhRect_t.sizeof);\r", "-\t\tOS.memmove(dest, rect, PhRect_t.sizeof);\r", "-\t\tOS.PhTranslateTiles(dest, delta);\r", "-\t\tint damage_tile = OS.PhClipTilings(src, dest, null);\r", "-\t\tint[] damage_rects_count = new int[1];\r", "-\t\tint damage_rects = OS.PhTilesToRects(damage_tile, damage_rects_count);\r", "-\t\tOS.PhFreeTiles(dest);\r", "-\t\tOS.PhFreeTiles(damage_tile);\r", "-\t\tfor (int i=0; i<damage_rects_count[0]; i++) {\r", "-\t\t\tOS.memmove(rect, damage_rects + (i * PhRect_t.sizeof), PhRect_t.sizeof);\r", "-\t\t\tOS.PtDamageExtent (handle, rect);\r", "-\t\t}\r", "-\t\tOS.free(damage_rects);\r", "-\t}\r", "+\tGC gc = new GC (this);\r", "+\tgc.copyArea (x, y, width, height, destX, destY);\r", "+\tgc.dispose ();\r"]}], "num": 17291}