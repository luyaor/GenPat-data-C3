{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b95bbdce8ee69d8108a6544898f4d00a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c4fd82b4519dafed3c7e0eba790857d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "6c4a2c166738e67832efca98869d4a51c06db92b", "commitAfterChange": "84d56fe220646f29848300da6bc168504ddc3a77", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void setAlignment (int alignment)", "signatureAfterChange": " public void setAlignment (int alignment)", "diff": ["-public void setAlignment (int alignment) {\r", "-\tcheckWidget();\r", "-\tif ((alignment & (SWT.LEFT | SWT.RIGHT | SWT.CENTER)) == 0) return;\r", "-\tint index = parent.indexOf (this);\r", "-\tif (index == -1 || index == 0) return;\r", "-\tint table = parent.handle;\r", "-\tstyle &= ~(SWT.LEFT | SWT.RIGHT | SWT.CENTER);\r", "-\tstyle |= alignment & (SWT.LEFT | SWT.RIGHT | SWT.CENTER);\r", "-\tint justification = 0;\r", "-\tif ((style & SWT.LEFT) == SWT.LEFT) justification |= OS.GTK_JUSTIFY_LEFT;\r", "-\tif ((style & SWT.CENTER) == SWT.CENTER) justification |= OS.GTK_JUSTIFY_CENTER;\r", "-\tif ((style & SWT.RIGHT) == SWT.RIGHT) justification |= OS.GTK_JUSTIFY_RIGHT;\r", "-\tOS.gtk_clist_set_column_justification (table, index, justification);\r", "-}\r", "+public void setAlignment (int alignment) {", "+\tcheckWidget();", "+\tif ((alignment & (SWT.LEFT | SWT.RIGHT | SWT.CENTER)) == 0) return;", "+\t// FIXME", "+\t// NOT IMPLEMENTED", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5eecad7515644404cec2df6ef2009286", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/gtk/org/eclipse/swt/browser/MozillaDelegate.java", "commitBeforeChange": "8a021d89105adb15defec05f4bb294256be0d2ff", "commitAfterChange": "41acd10ceebece3466a430c500d8003c98a28198", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  int getHandle ()", "signatureAfterChange": "  int getHandle ()", "diff": ["-\tif (eventCallback == null) {", "-\t\teventCallback = new Callback (getClass (), \"eventProc\", 3); //$NON-NLS-1$", "-\t\teventProc = eventCallback.getAddress ();", "-\t\tif (eventProc == 0) {", "-\t\t\tbrowser.dispose ();", "-\t\t\tMozilla.error (SWT.ERROR_NO_MORE_CALLBACKS);", "-\t\t}", "-\t}", "-", "-\tint /*long*/ embedHandle = OS.gtk_hbox_new (false, 0);", "+\tembedHandle = OS.gtk_hbox_new (false, 0);", "-\t", "-\t/*", "-\t* Feature in Mozilla.  GtkEvents such as key down, key pressed may be consumed", "-\t* by Mozilla and never be received by the parent embedder.  The workaround", "-\t* is to find the top Mozilla gtk widget that receives all the Mozilla GtkEvents,", "-\t* i.e. the first child of the parent embedder. Then hook event callbacks and", "-\t* forward the event to the parent embedder before Mozilla received and consumed", "-\t* them.", "-\t*/", "-\tint /*long*/ list = OS.gtk_container_get_children (embedHandle);", "-\tif (list != 0) {", "-\t\tmozillaHandle = OS.g_list_data (list);", "-\t\tOS.g_list_free (list);", "-\t\t", "-\t\tif (mozillaHandle != 0) {\t\t\t", "-\t\t\tbrowser.getDisplay ().setData (ADD_WIDGET_KEY, new Object[] {new LONG (mozillaHandle), browser});", "-", "-\t\t\t/* Note. Callback to get events before Mozilla receives and consumes them. */", "-\t\t\tOS.g_signal_connect (mozillaHandle, OS.event, eventProc, 0);", "-\t\t\t", "-\t\t\t/* ", "-\t\t\t* Note.  Callback to get the events not consumed by Mozilla - and to block ", "-\t\t\t* them so that they don't get propagated to the parent handle twice.  ", "-\t\t\t* This hook is set after Mozilla and is therefore called after Mozilla's ", "-\t\t\t* handler because GTK dispatches events in their order of registration.", "-\t\t\t*/", "-\t\t\tOS.g_signal_connect (mozillaHandle, OS.key_press_event, eventProc, STOP_PROPOGATE);", "-\t\t\tOS.g_signal_connect (mozillaHandle, OS.key_release_event, eventProc, STOP_PROPOGATE);", "-\t\t}", "-\t}"]}], "num": 7520}