{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3c3ed48fe2bc985f86190186819b5bee", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d78f71e24c14434878c5f0b1887a5b5f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "b79ba2005210b58296b47fa06470ceb99d936ad1", "commitAfterChange": "5547944a22700b2edc1badfd225a2314a1868254", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 75, "signatureBeforeChange": "\r int processFocusIn ()", "signatureAfterChange": "\r int processFocusIn ()", "diff": ["-\tprocessIMEFocusIn ();\r", "+\tif (!hasIMSupport()) {\r", "+\t\tif (hooks (SWT.KeyDown) || hooks (SWT.KeyUp)) {\r", "+\t\t\tshort [] point = getIMECaretPos ();\r", "+\t\t\tint ptr = OS.XtMalloc (4);\r", "+\t\t\tOS.memmove (ptr, point, 4);\r", "+\t\t\r", "+\t\t\t/*\r", "+\t\t\t* Bug in Motif. On Linux Japanese only, XmImSetFocusValues will cause\r", "+\t\t\t* a GPF when the XmNfontList value does not containt a FontSet. The fix\r", "+\t\t\t* is to call XmImSetValues to set the values and then call\r", "+\t\t\t* XmImSetFocusValues.\r", "+\t\t\t*/\r", "+\t\t\tint[] argList = {\r", "+//\t\t\t\tOS.XmNforeground, getForegroundPixel(),\r", "+//\t\t\t\tOS.XmNbackground, getBackgroundPixel(),\r", "+\t\t\t\tOS.XmNspotLocation, ptr,\r", "+\t\t\t\tOS.XmNfontList, font.handle,\r", "+\t\t\t};\r", "+\t\t\tOS.XmImSetValues (handle, argList, argList.length / 2);\r", "+\t\t\tOS.XmImSetFocusValues (handle, null, 0);\r", "+\t\t\tif (ptr != 0) OS.XtFree (ptr);\r", "+\t\t}\r", "+\t}\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "545cf00c479d286e0963d8561d6e87d1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "23fa2220ca73d0019e71d1a505d792c8e8e639c2", "commitAfterChange": "b40f035552decb939f682913a77fb6342278feb4", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 72, "signatureBeforeChange": "\r void showToolTip (int handle, String toolTipText)", "signatureAfterChange": "\r void showToolTip (int handle, String toolTipText)", "diff": ["+}\r", "-\tif (toolTipText == null || toolTipText.length () == 0 || toolTipHandle != 0) {\r", "-\t\t return;\r", "-\t}\r", "-\t\r", "-\t/* Create the shell and tool tip widget */\r", "-\tint widgetClass = OS.OverrideShellWidgetClass ();\r", "-\tint [] argList1 = {OS.XmNmwmDecorations, 0, OS.XmNborderWidth, 1};\r", "-\tint shellHandle = OS.XtCreatePopupShell (null, widgetClass, handle, argList1, argList1.length / 2);\r", "-\tColor infoForeground = getSystemColor (SWT.COLOR_INFO_FOREGROUND);\r", "-\tColor infoBackground = getSystemColor (SWT.COLOR_INFO_BACKGROUND);\r", "-\tint foregroundPixel = infoForeground.handle.pixel;\r", "-\tint backgroundPixel = infoBackground.handle.pixel;\r", "+\tint shellHandle = 0;\r", "-\tint [] argList2 = {\r", "-\t\tOS.XmNforeground, foregroundPixel, \r", "-\t\tOS.XmNbackground, backgroundPixel,\r", "-\t\tOS.XmNalignment, OS.XmALIGNMENT_BEGINNING,\r", "-\t};\r", "-\ttoolTipHandle = OS.XmCreateLabel (shellHandle, buffer, argList2, argList2.length / 2);\r", "-\tOS.XtManageChild (toolTipHandle);\t\r", "+\tif (toolTipHandle != 0) {\r", "+\t\tshellHandle = OS.XtParent (toolTipHandle);\r", "+\t\tint shellParent = OS.XtParent (shellHandle);\r", "+\t\tif (handle != shellParent) return;\r", "+\t\tint xmString = OS.XmStringGenerate (buffer, null, OS.XmCHARSET_TEXT, null);\r", "+\t\tint [] argList = {OS.XmNlabelString, xmString};\r", "+\t\tOS.XtSetValues (toolTipHandle, argList, argList.length / 2);\r", "+\t\tif (xmString != 0) OS.XmStringFree (xmString);\r", "+\t} else {\r", "+\t\tint widgetClass = OS.OverrideShellWidgetClass ();\r", "+\t\tint [] argList1 = {OS.XmNmwmDecorations, 0, OS.XmNborderWidth, 1};\r", "+\t\tshellHandle = OS.XtCreatePopupShell (null, widgetClass, handle, argList1, argList1.length / 2);\r", "+\t\tColor infoForeground = getSystemColor (SWT.COLOR_INFO_FOREGROUND);\r", "+\t\tColor infoBackground = getSystemColor (SWT.COLOR_INFO_BACKGROUND);\r", "+\t\tint foregroundPixel = infoForeground.handle.pixel;\r", "+\t\tint backgroundPixel = infoBackground.handle.pixel;\r", "+\t\tint [] argList2 = {\r", "+\t\t\tOS.XmNforeground, foregroundPixel, \r", "+\t\t\tOS.XmNbackground, backgroundPixel,\r", "+\t\t\tOS.XmNalignment, OS.XmALIGNMENT_BEGINNING,\r", "+\t\t};\r", "+\t\ttoolTipHandle = OS.XmCreateLabel (shellHandle, buffer, argList2, argList2.length / 2);\r", "+\t\tOS.XtManageChild (toolTipHandle);\r", "+\t}\r", "+\tif (toolTipText == null || toolTipText.length () == 0) {\r", "+\t\tOS.XtPopdown (shellHandle);\r", "+\t} else {\r", "+\t\t/*\r", "+\t\t* Feature in X.  There is no way to query the size of a cursor.\r", "+\t\t* The fix is to use the default cursor size which is 16x16.\r", "+\t\t*/\r", "+\t\tint xWindow = OS.XDefaultRootWindow (xDisplay);\r", "+\t\tint [] rootX = new int [1], rootY = new int [1], unused = new int [1];\r", "+\t\tOS.XQueryPointer (xDisplay, xWindow, unused, unused, rootX, rootY, unused, unused, unused);\r", "+\t\tint x = rootX [0] + 16, y = rootY [0] + 16;\r", "-\t/*\r", "-\t* Feature in X.  There is no way to query the size of a cursor.\r", "-\t* The fix is to use the default cursor size which is 16x16.\r", "-\t*/\r", "-\tint xWindow = OS.XDefaultRootWindow (xDisplay);\r", "-\tint [] rootX = new int [1], rootY = new int [1], unused = new int [1];\r", "-\tOS.XQueryPointer (xDisplay, xWindow, unused, unused, rootX, rootY, unused, unused, unused);\r", "-\tint x = rootX [0] + 16, y = rootY [0] + 16;\r", "-\t\r", "-\t/*\r", "-\t* Ensure that the tool tip is on the screen.\r", "-\t*/\r", "-\tint screen = OS.XDefaultScreen (xDisplay);\r", "-\tint width = OS.XDisplayWidth (xDisplay, screen);\r", "-\tint height = OS.XDisplayHeight (xDisplay, screen);\r", "-\tint [] argList4 = {OS.XmNwidth, 0, OS.XmNheight, 0};\r", "-\tOS.XtGetValues (toolTipHandle, argList4, argList4.length / 2);\r", "-\tx = Math.max (0, Math.min (x, width - argList4 [1]));\r", "-\ty = Math.max (0, Math.min (y, height - argList4 [3]));\r", "-\tOS.XtMoveWidget (shellHandle, x, y);\r", "-\tOS.XtPopup (shellHandle, OS.XtGrabNone);\r", "+\t\t/*\r", "+\t\t* Ensure that the tool tip is on the screen.\r", "+\t\t*/\r", "+\t\tint screen = OS.XDefaultScreen (xDisplay);\r", "+\t\tint width = OS.XDisplayWidth (xDisplay, screen);\r", "+\t\tint height = OS.XDisplayHeight (xDisplay, screen);\r", "+\t\tint [] argList4 = {OS.XmNwidth, 0, OS.XmNheight, 0};\r", "+\t\tOS.XtGetValues (toolTipHandle, argList4, argList4.length / 2);\r", "+\t\tx = Math.max (0, Math.min (x, width - argList4 [1]));\r", "+\t\ty = Math.max (0, Math.min (y, height - argList4 [3]));\r", "+\t\tOS.XtMoveWidget (shellHandle, x, y);\r", "+\t\tOS.XtPopup (shellHandle, OS.XtGrabNone);\r", "+\t}\r"]}], "num": 56745}