{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a8bae3bfb438fce7a91506572d07ceb4", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10cd1cd25f6165a34a4ac382c8c53c98", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "4b21419a582289fce72ef15bfe70049085b3c772", "commitAfterChange": "b2343fc03843d983cdbcf528d75f7e9524819b07", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  void createSurface()", "signatureAfterChange": "  void createSurface()", "diff": ["+\tif (mask != 0) {", "+\t\tint[] w = new int[1], h = new int[1];", "+\t \tOS.gdk_drawable_get_size(pixmap, w, h);", "+\t \tint width = w[0], height = h[0]; \t", "+\t \tint /*long*/ pixbuf = OS.gdk_pixbuf_new(OS.GDK_COLORSPACE_RGB, true, 8, width, height);", "+\t\tif (pixbuf == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\tint /*long*/ colormap = OS.gdk_colormap_get_system();", "+\t\tOS.gdk_pixbuf_get_from_drawable(pixbuf, pixmap, colormap, 0, 0, 0, 0, width, height);", "+\t\tint stride = OS.gdk_pixbuf_get_rowstride(pixbuf);", "+\t\tint /*long*/ pixels = OS.gdk_pixbuf_get_pixels(pixbuf);", "+\t\tint /*long*/ gdkImagePtr = OS.gdk_drawable_get_image(mask, 0, 0, width, height);", "+\t\tbyte[] line = new byte[stride];", "+\t\tfor (int y=0; y<height; y++) {", "+\t\t\tint /*long*/ offset = pixels + (y * stride);", "+\t\t\tOS.memmove(line, offset, stride);", "+\t\t\tfor (int x=0; x<width; x++) {", "+\t\t\t\tint offset1 = x * 4;", "+\t\t\t\tif (gdkImagePtr != 0) {", "+\t\t\t\t\tif (OS.gdk_image_get_pixel(gdkImagePtr, x, y) == 0) {", "+\t\t\t\t\t\tline[offset1+3] = 0;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tbyte temp = line[offset1];", "+\t\t\t\tline[offset1] = line[offset1 + 2];", "+\t\t\t\tline[offset1 + 2] = temp;", "+\t\t\t}", "+\t\t\tOS.memmove(offset, line, stride);", "+\t\t}", "+\t\tif (gdkImagePtr != 0) OS.g_object_unref(gdkImagePtr);", "+\t\tsurfaceData = OS.g_malloc(stride * height);", "+\t\tOS.memmove(surfaceData, pixels, stride * height);", "+\t\tsurface = Cairo.cairo_surface_create_for_image(surfaceData, Cairo.CAIRO_FORMAT_ARGB32, width, height, stride);", "+\t\tOS.g_object_unref(pixbuf);", "+\t\treturn;", "+\t}\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e079cfbdabc958901fab71023516d167", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ImageList.java", "commitBeforeChange": "d2b11c9d030e3f8aaf3856a4d3490cccac39d4bf", "commitAfterChange": "ff683e5cf06a749982dd8f9b55aee8e169aeb5ba", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public int add (Image image)", "signatureAfterChange": "  public int add (Image image)", "diff": ["-\tint width = w [0], height = h [0]; \t", "-\tint /*long*/ pixbuf = OS.gdk_pixbuf_new (OS.GDK_COLORSPACE_RGB, hasMask, 8, width, height);", "+\tint /*long*/ pixbuf = OS.gdk_pixbuf_new (OS.GDK_COLORSPACE_RGB, hasMask, 8, w [0], h [0]);", "-\tOS.gdk_pixbuf_get_from_drawable (pixbuf, image.pixmap, colormap, 0, 0, 0, 0, width, height);", "+\tOS.gdk_pixbuf_get_from_drawable (pixbuf, image.pixmap, colormap, 0, 0, 0, 0, w [0], h [0]);", "-\t\tint /*long*/ gdkMaskImagePtr = OS.gdk_drawable_get_image (image.mask, 0, 0, width, height);", "+\t\tint /*long*/ gdkMaskImagePtr = OS.gdk_drawable_get_image (image.mask, 0, 0, w [0], h [0]);", "-\t\tfor (int y=0; y<height; y++) {", "+\t\tfor (int y=0; y<h[0]; y++) {", "-\t\t\tfor (int x=0; x<width; x++) {", "+\t\t\tfor (int x=0; x<w[0]; x++) {", "+\tif (width == -1 || height == -1) {", "+\t\twidth = w [0];", "+\t\theight = h [0];", "+\t}", "+\tif (w [0] != width || h [0] != height) {", "+\t\tint /*long*/ scaledPixbuf = OS.gdk_pixbuf_scale_simple(pixbuf, width, height, OS.GDK_INTERP_BILINEAR);", "+\t\tOS.g_object_unref (pixbuf);", "+\t\tpixbuf = scaledPixbuf;", "+\t}"]}], "num": 36991}