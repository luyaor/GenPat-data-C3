{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a7ce33c948f94129d2a22613813b3e4c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "557bf96a7deae0a0906e0f93a5931bc8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "  void createItem (MenuItem item, int index)", "signatureAfterChange": "  void createItem (MenuItem item, int index)", "diff": ["-\tparent.add (item);", "-\tboolean success = false;", "-\t/*", "-\tif (OS.IsWinCE) {", "-\t\tint flags = OS.MF_BYPOSITION;", "-\t\tif ((style & SWT.SEPARATOR) != 0) flags |= OS.MF_SEPARATOR;", "-\t\tsuccess = OS.InsertMenu (handle, index, flags, item.id, null); ", "-\t} else {", "-\t\tint hHeap = OS.GetProcessHeap ();", "-\t\tint pszText = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, TCHAR.sizeof);", "-\t\tMENUITEMINFO info = new MENUITEMINFO ();", "-\t\tinfo.cbSize = MENUITEMINFO.sizeof;", "-\t\tinfo.fMask = OS.MIIM_ID | OS.MIIM_TYPE;", "-\t\tinfo.wID = item.id;", "-\t\tinfo.fType = item.widgetStyle ();", "-\t\tinfo.dwTypeData = pszText;", "-\t\tsuccess = OS.InsertMenuItem (handle, index, true, info);", "-\t\tif (pszText != 0) OS.HeapFree (hHeap, 0, pszText);", "-\t}", "-\t*/", "-\t", "-\t/*", "-\tif ((style & SWT.SEPARATOR) != 0) return OS.MFT_SEPARATOR;", "-\tif ((style & SWT.RADIO) != 0) return OS.MFT_RADIOCHECK;", "-\treturn OS.MFT_STRING;", "-\t*/", "-\t", "-\tint attributes= 0;", "-\tif ((item.style & SWT.SEPARATOR) != 0) ", "-\t\tattributes= OS.kMenuItemAttrSeparator;", "-\tif (OS.InsertMenuItemTextWithCFString(handle, 0, (short) index, attributes, item.id) == OS.kNoErr)", "-\t\tsuccess= true;", "-\t", "-\tif (!success) {", "-\t\tparent.remove (item);", "+\tDisplay display = getDisplay ();", "+\tdisplay.addMenuItem (item);", "+\tint attributes = 0;", "+\tif ((item.style & SWT.SEPARATOR) != 0) attributes = OS.kMenuItemAttrSeparator;", "+\tint result = OS.InsertMenuItemTextWithCFString (handle, 0, (short) index, attributes, item.id);", "+\tif (result != OS.noErr) {", "+\t\tdisplay.removeMenuItem (item);", "-\t/* AW\t", "-\tredraw ();", "-\t*/", "-}", "+\tif ((style & SWT.BAR) != 0) {", "+//\t\tDisplay display = getDisplay ();", "+//\t\tshort menuID = display.nextMenuId ();", "+//\t\tint outMenuRef [] = new int [1];", "+//\t\tif (OS.CreateNewMenu (menuID, 0, outMenuRef) != OS.noErr) {", "+//\t\t\terror (SWT.ERROR_NO_HANDLES);", "+//\t\t}", "+//\t\tOS.SetMenuItemHierarchicalMenu (handle, (short) (index + 1), outMenuRef [0]);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79ac69c05ba1ca0e5592942ffe307a29", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "6268623a1aefd83248566a5b16698cb19ee6b719", "commitAfterChange": "8f69618fc3b877d652c7fe2fd695fbdc73e7c8ea", "methodNumberBeforeChange": 142, "methodNumberAfterChange": 142, "signatureBeforeChange": "  boolean sendTouchEvent (int hWnd, TOUCHINPUT touchInput[])", "signatureAfterChange": "  boolean sendTouchEvent (TOUCHINPUT touchInput [])", "diff": ["-boolean sendTouchEvent (int /*long*/ hWnd, TOUCHINPUT touchInput[]) {", "+boolean sendTouchEvent (TOUCHINPUT touchInput []) {", "-\tPoint cursorLoc = display.getCursorLocation();", "-\tcursorLoc = toControl(cursorLoc);", "-\tevent.x = cursorLoc.x;", "-\tevent.y = cursorLoc.y;", "-\t", "-\tTouch[] touches = new Touch[touchInput.length];", "-", "+\tPOINT pt = new POINT ();", "+\tOS.GetCursorPos (pt);", "+\tOS.ScreenToClient (handle, pt);", "+\tevent.x = pt.x;", "+\tevent.y = pt.y;", "+\tTouch [] touches = new Touch [touchInput.length];", "+\tMonitor monitor = getMonitor ();", "-\t\tTOUCHINPUT touch = touchInput[i];", "-\t\tint identity = touch.dwID;", "-\t\tint /*long*/ source = touch.hSource;", "-\t\tTouchSource inputSource = display.findTouchSource(source, getMonitor());", "+\t\tTOUCHINPUT ti = touchInput [i];", "+\t\tTouchSource inputSource = display.findTouchSource (ti.hSource, monitor);", "-\t\tboolean primary = false;", "-\t\tif ((touch.dwFlags & OS.TOUCHEVENTF_DOWN) != 0) state = SWT.TOUCHSTATE_DOWN;", "-\t\tif ((touch.dwFlags & OS.TOUCHEVENTF_UP) != 0) state = SWT.TOUCHSTATE_UP;", "-\t\tif ((touch.dwFlags & OS.TOUCHEVENTF_MOVE) != 0) state = SWT.TOUCHSTATE_MOVE;", "-\t\tif ((touch.dwFlags & OS.TOUCHEVENTF_PRIMARY) != 0) primary = true;", "-\t\ttouches[i] = new Touch(identity, inputSource, state, primary, (int)OS.TOUCH_COORD_TO_PIXEL(touch.x), (int)OS.TOUCH_COORD_TO_PIXEL(touch.y));", "+\t\tif ((ti.dwFlags & OS.TOUCHEVENTF_DOWN) != 0) state = SWT.TOUCHSTATE_DOWN;", "+\t\tif ((ti.dwFlags & OS.TOUCHEVENTF_UP) != 0) state = SWT.TOUCHSTATE_UP;", "+\t\tif ((ti.dwFlags & OS.TOUCHEVENTF_MOVE) != 0) state = SWT.TOUCHSTATE_MOVE;", "+\t\tboolean primary = (ti.dwFlags & OS.TOUCHEVENTF_PRIMARY) != 0;", "+\t\tint x = (int)OS.TOUCH_COORD_TO_PIXEL (ti.x);", "+\t\tint y = (int)OS.TOUCH_COORD_TO_PIXEL (ti.y);", "+\t\ttouches [i] = new Touch (ti.dwID, inputSource, state, primary, x, y);", "-", "-\treturn event.doit;", "+\treturn true;"]}], "num": 15472}