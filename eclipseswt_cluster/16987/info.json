{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fcd65a64351053398fd10e46a56a754c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7e2e054a110d8a3e0c5c240149ed98d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "b00764edfb26d776b9fe9f82005b87f9053f74be", "commitAfterChange": "9f92620cff35d9ff76864dca0ccbf8d389c56f61", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " public void remove (int [] indices)", "signatureAfterChange": " public void remove (int [] indices)", "diff": ["-\tint last = -1;", "-\tfor (int i=0; i<newIndices.length; i++) {", "+\tint [] id = new int [newIndices.length];", "+\tfor (int i = 0; i < newIndices.length; i++) {", "-\t\tif (index != last) {", "-\t\t\tremove (index);", "-\t\t\tlast = index;", "-\t\t}", "+\t\tif (index != itemCount - 1) fixSelection (index, false);", "+\t\tid [id.length-i-1] = itemCount;", "+\t\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);", "+\t\titems [itemCount] = null;", "+\tif (OS.RemoveDataBrowserItems (handle, OS.kDataBrowserNoItem, id.length, id, 0) != OS.noErr) {", "+\t\terror (SWT.ERROR_ITEM_NOT_REMOVED);", "+\t}", "+\tOS.UpdateDataBrowserItems (handle, 0, 0, null, OS.kDataBrowserItemNoProperty, OS.kDataBrowserNoItem);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a1093067adb943695605f9a1088db62", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "b00764edfb26d776b9fe9f82005b87f9053f74be", "commitAfterChange": "9f92620cff35d9ff76864dca0ccbf8d389c56f61", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": " public void remove (int [] indices)", "signatureAfterChange": " public void remove (int [] indices)", "diff": ["-\tint last = -1;", "-\tfor (int i=0; i<newIndices.length; i++) {", "+\tint [] id = new int [newIndices.length];", "+\tfor (int i = 0; i < newIndices.length; i++) {", "-\t\tif (index != last) {", "-\t\t\tremove (index);", "-\t\t\tlast = index;", "-\t\t}", "+\t\tTableItem item = items [index];", "+\t\tif (item != null && !item.isDisposed ()) item.release (false);", "+\t\tif (index != itemCount - 1) fixSelection (index, false);", "+\t\tid [id.length-i-1] = itemCount;", "+\t\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);", "+\t\titems [itemCount] = null;", "+\t}", "+\tif (OS.RemoveDataBrowserItems (handle, OS.kDataBrowserNoItem, id.length, id, 0) != OS.noErr) {", "+\t\terror (SWT.ERROR_ITEM_NOT_REMOVED);", "+\t}", "+\tOS.UpdateDataBrowserItems (handle, 0, 0, null, OS.kDataBrowserItemNoProperty, OS.kDataBrowserNoItem);", "+\tif (itemCount == 0) {", "+\t\tsetTableEmpty ();", "+\t} else {", "+\t\tfixScrollBar ();"]}], "num": 16987}