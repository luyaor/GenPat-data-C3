{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f726ccab8c449d602898c8a76baf198", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3a177aead65bb88c8c5af9c86b76c9a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleControlSite.java", "commitBeforeChange": "969037905edb01e822acbedf20be7bd6a3192341", "commitAfterChange": "1ca19e7d9900f1c3fbb9858fe7dab02471e085df", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " void addEventListener(int iunknown, GUID guid, int eventID, OleListener listener)", "signatureAfterChange": " public void addEventListener(OleAutomation automation, String eventSinkId, int eventID, OleListener listener)", "diff": ["+ */", "+public void addEventListener(OleAutomation automation, String eventSinkId, int eventID, OleListener listener) {", "+\tif (listener == null || automation == null || eventSinkId == null) OLE.error (SWT.ERROR_NULL_ARGUMENT);", "+\tint address = automation.getAddress();", "+\tif (address == 0) return;", "+\tchar[] buffer = (eventSinkId +\"\\0\").toCharArray();", "+\tGUID guid = new GUID();", "+\tif (COM.IIDFromString(buffer, guid) != COM.S_OK) return;", "+\taddEventListener(address, guid, eventID, listener);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11e5b9d1689b9762ef876c308b7c0247", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleControlSite.java", "commitBeforeChange": "125ef12abe520c2fccfd62bac0d2e33d2acb0ade", "commitAfterChange": "65d296d18629b55a1e6fc7fc06553aa462279ab4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r void addEventListener(int iunknown, GUID guid, int eventID, OleListener listener)", "signatureAfterChange": "\r public void addEventListener(OleAutomation automation, int eventID, OleListener listener)", "diff": ["+ */\r", "+public void addEventListener(OleAutomation automation, int eventID, OleListener listener) {\r", "+\tif (listener == null || automation == null) OLE.error (SWT.ERROR_NULL_ARGUMENT);\r", "+\tint address = automation.getAddress();\r", "+\tIUnknown unknown = new IUnknown(address);\r", "+\tGUID guid = getDefaultEventSinkGUID(unknown);\r", "+\taddEventListener(address, guid, eventID, listener);\r"]}], "num": 3471}