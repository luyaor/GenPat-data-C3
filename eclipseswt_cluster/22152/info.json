{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dbe240a50f0a7f2cfabbbbe8f3d5851d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97a4492af46ee63fbf93f16f024a6510", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/cocoa/org/eclipse/swt/program/Program.java", "commitBeforeChange": "2703b6b4917ee70e34e69f6beabdf6e17c0e648e", "commitAfterChange": "0e0eae7504b067875076ee5d9af4693ac4a9b250", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public ImageData getImageData ()", "signatureAfterChange": " public ImageData getImageData ()", "diff": ["-\t\t\t\tNSBitmapImageRep imageRep = null;", "-\t\t\t\tNSImageRep rep = nsImage.bestRepresentationForDevice(null);", "-\t\t\t\tif (rep.isKindOfClass(OS.class_NSBitmapImageRep)) { ", "-\t\t\t\t\timageRep = new NSBitmapImageRep(rep.id);", "-\t\t\t\t}", "-\t\t\t\tif (imageRep != null) {", "-\t\t\t\t\tint width = (int)/*64*/imageRep.pixelsWide();", "-\t\t\t\t\tint height = (int)/*64*/imageRep.pixelsHigh();", "-\t\t\t\t\tint bpr = (int)/*64*/imageRep.bytesPerRow();", "-\t\t\t\t\tint bpp = (int)/*64*/imageRep.bitsPerPixel();", "-\t\t\t\t\tint dataSize = height * bpr;", "-\t\t\t\t\tbyte[] srcData = new byte[dataSize];", "-\t\t\t\t\tOS.memmove(srcData, imageRep.bitmapData(), dataSize);", "-\t\t\t\t\t//TODO: Image representation wrong???", "-\t\t\t\t\tPaletteData palette = new PaletteData(0xFF000000, 0xFF0000, 0xFF00);", "-\t\t\t\t\tImageData data = new ImageData(width, height, bpp, palette, 4, srcData);", "-\t\t\t\t\tdata.bytesPerLine = bpr;", "-\t\t\t\t\tdata.alphaData = new byte[width * height];", "-\t\t\t\t\tfor (int i = 3, o = 0; i < srcData.length; i+= 4, o++) {", "-\t\t\t\t\t\tdata.alphaData[o] = srcData[i];", "-\t\t\t\t\t}", "-\t\t\t\t\treturn data;", "-\t\t\t\t}", "+\t\t\t\tnsImage.retain();", "+\t\t\t\tImage image = Image.cocoa_new(Display.getCurrent(), SWT.BITMAP, nsImage);", "+\t\t\t\tImageData imageData = image.getImageData();", "+\t\t\t\timage.dispose();", "+\t\t\t\treturn imageData;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a43fb14871b70dbdd96fae1578243fb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "044fd90b6f02270ce85cc919371a3e049679ef13", "commitAfterChange": "3b7c754a64f4896cc12aead5bba291fc54708bf4", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 40, "signatureBeforeChange": " public void setVisible (boolean visible)", "signatureAfterChange": " public void setVisible (boolean visible)", "diff": ["-\t\tdisplay.runDeferredEvents ();", "-\t\tsendEvent (SWT.Show);", "-\t\tif (getItemCount () != 0) {", "-\t\t\tint xDisplay = OS.XtDisplay (handle);", "-\t\t\tif (xDisplay == 0) return;", "-\t\t\tint xWindow = OS.XDefaultRootWindow (xDisplay);", "-\t\t\tif (xWindow == 0) return;", "-\t\t\tint [] rootX = new int [1], rootY = new int [1], unused = new int [1], mask = new int [1];", "-\t\t\tif (OS.XQueryPointer (xDisplay, xWindow, unused, unused, rootX, rootY, unused, unused, mask) == 0) {", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t\tif (!hasLocation) {", "-\t\t\t\t/*", "-\t\t\t\t* Bug in Motif.  For some reason, when a menu is popped up", "-\t\t\t\t* under the mouse, the menu will not highlight until the", "-\t\t\t\t* mouse exits and then enters the menu again.  The fix is", "-\t\t\t\t* to pop the menu up outside the current mouse position", "-\t\t\t\t* causing highlighting to work properly when the user", "-\t\t\t\t* waits for the menu to appear.", "-\t\t\t\t*/", "-\t\t\t\trootX[0] += 1;  rootY[0] += 1;", "-\t\t\t\tint [] argList = {OS.XmNx, rootX [0], OS.XmNy, rootY [0]};", "-\t\t\t\tOS.XtSetValues (handle, argList, argList.length / 2);", "-\t\t\t}", "-\t\t\t/*", "-\t\t\t* Feature in Motif.  If an X grab is active, then", "-\t\t\t* the menu pops us but issues and error message an", "-\t\t\t* fails to grab the pointer.  The fix is to ensure", "-\t\t\t* that no grab is active before showing the menu.", "-\t\t\t*/", "-\t\t\tOS.XUngrabPointer (xDisplay, OS.CurrentTime);", "-\t\t\tOS.XtManageChild (handle);", "-\t\t\t/*", "-\t\t\t* Feature in Motif.  There is no API to force the menu", "-\t\t\t* to accept keyboard traversal when popped up using", "-\t\t\t* XtManageChild.  The fix is to call undocumented API", "-\t\t\t* to do this.", "-\t\t\t*/", "-\t\t\tint flags = OS.Button1Mask | OS.Button2Mask | OS.Button3Mask;", "-\t\t\tif ((mask [0] & flags) == 0) OS._XmSetMenuTraversal (handle, true);", "-\t\t} else {", "-\t\t\tsendEvent (SWT.Hide);", "-\t\t}", "+\t\tdisplay.addPopup (this);", "-\t\tOS.XtUnmanageChild (handle);", "+\t\tdisplay.removePopup (this);", "+\t\t_setVisible (false);"]}], "num": 22152}