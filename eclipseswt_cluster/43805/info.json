{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "408f6ef96ebba5f60a85d53d5afa01fb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e175c981906db7400f03ccb2f9b48c50", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 68, "signatureBeforeChange": " public void setFont (Font value)", "signatureAfterChange": " public void setFont (Font font)", "diff": ["-public void setFont (Font value) {", "-\tcheckWidget ();", "-\tif (value != null && value.isDisposed ()) {", "-\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);", "-\t}", "-\tif (font == value) return;", "-\tif (value != null && value.equals (font)) return;", "-\t", "-\tfont = value;", "-\t/* recompute cached values for string measurements */", "-\tGC gc = new GC (parent);", "-\tgc.setFont (getFont ());", "-\trecomputeTextWidths (gc);", "-\tfontHeight = gc.getFontMetrics ().getHeight ();", "-\tgc.dispose ();", "-\tredrawItem ();", "-}", "+ */", "+public void setFont (Font font){", "+\tcheckWidget ();", "+\tif (font != null && font.isDisposed ()) {", "+\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);", "+\t}", "+\tif (this.font == font) return;", "+\tif (this.font != null && this.font.equals (font)) return;", "+\tthis.font = font;", "+\tredraw ();", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae7b591202d82daedbead6ba37efb695", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 61, "signatureBeforeChange": " public void setFont (Font font)", "signatureAfterChange": " public void setFont (Font value)", "diff": ["+}", "+public void setFont (Font value) {", "+\tcheckWidget ();", "+\tif (value != null && value.isDisposed ()) {", "+\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);", "+\t}", "+\tif (font == value) return;", "+\tif (value != null && value.equals (font)) return;", "+\t", "+\tfont = value;", "+\t/* recompute cached values for string measurements */", "+\tGC gc = new GC (parent);", "+\tgc.setFont (getFont ());", "+\trecomputeTextWidths (gc);", "+\tfontHeight = gc.getFontMetrics ().getHeight ();", "+\tgc.dispose ();", "+\tredrawItem ();", "+}", "- */", "-public void setFont (Font font){", "-\tif (font != null && font.isDisposed ()) {", "-\tif (this.font == font) return;", "-\tif (this.font != null && this.font.equals (font)) return;", "-\tthis.font = font;", "-\tredraw ();", "-}"]}], "num": 43805}