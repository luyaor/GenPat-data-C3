{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6c01e1d12203bc92398122f634c32f1c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "392d5ef978aa57efb0f70683c8dc6860", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CBanner.java", "commitBeforeChange": "4f6cacc9f76349f45c7a4f16b88a3566ae23ff3b", "commitAfterChange": "8e878fd2cf08a4ff98d0bd94fbda608760fdcee1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Point computeSize(int wHint, int hHint, boolean changed)", "signatureAfterChange": " public Point computeSize(int wHint, int hHint, boolean changed)", "diff": ["-\tPoint rightSize = (right == null) ? new Point(0, 0) : right.computeSize(rightWidth, hHint);", "-\tint width = (wHint == SWT.DEFAULT) ? SWT.DEFAULT : wHint - rightSize.x - CURVE_WIDTH + INDENT_LEFT + INDENT_RIGHT;", "-\tPoint leftSize = (left == null) ? new Point(0, 0) : left.computeSize(width, hHint);", "+\tPoint rightSize = new Point(0, 0);", "+\tif (right != null) {", "+\t\tPoint trim = right.computeSize(rightWidth, hHint);", "+\t\ttrim.x = trim.x - rightWidth;", "+\t\trightSize = right.computeSize(rightWidth == SWT.DEFAULT ? SWT.DEFAULT : rightWidth - trim.x, hHint);", "+\t}", "+\tint width = (wHint == SWT.DEFAULT) ? SWT.DEFAULT : (right == null ? wHint : wHint - rightSize.x - curveWidth + 2* curveIndent);", "+\tPoint leftSize = new Point(0, 0);", "+\tif (left != null) {", "+\t\tPoint trim = left.computeSize(width, hHint);", "+\t\ttrim.x = trim.x - width;", "+\t\tleftSize = left.computeSize(width == SWT.DEFAULT ? SWT.DEFAULT : width - trim.x, hHint);", "+\t}", "-\tsize.x = leftSize.x + CURVE_WIDTH - INDENT_LEFT - INDENT_RIGHT + rightSize.x;", "-\tsize.y = Math.max (leftSize.y, rightSize.y);", "+\tsize.x = leftSize.x;", "+\tif (left != null && right != null) size.x += curveWidth - 2*curveIndent;", "+\tsize.x += rightSize.x;", "+\tsize.y = left != null ? leftSize.y : rightSize.y;", "+\t", "+\tsize.x += (left == null || right == null) ? 0 : BORDER_LEFT + BORDER_RIGHT;", "+\tsize.y += (left == null || right == null) ? 0 : BORDER_TOP + BORDER_BOTTOM + 2*BORDER_STRIPE;", "-\tRectangle trim = computeTrim(0, 0, size.x, size.y);", "-\treturn new Point(trim.width, trim.height);", "+\treturn new Point(size.x, size.y);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11db327221ef8ad9d445512d2330c860", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "e5f41a05f7e47d4efb399397a97a6160f1d952e1", "commitAfterChange": "f383b0c2a90e2358bdf171b766e7e5d9d21cf2f6", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": " boolean setButtonBounds()", "signatureAfterChange": " boolean setButtonBounds()", "diff": ["-\t\t\tcase SWT.FILL:", "-\t\t\t\tint rightEdge = getRightItemEdge();", "-\t\t\t\tint lastIndex = getLastIndex();", "-\t\t\t\tif (lastIndex == -1) {", "-\t\t\t\t\ttopRightRect.x = borderLeft + 3;", "-\t\t\t\t\ttopRightRect.width = rightEdge - topRightRect.x;", "-\t\t\t\t} else {", "-\t\t\t\t\tCTabItem lastItem = items[lastIndex];", "-\t\t\t\t\tif (single) {", "-\t\t\t\t\t\t// fill size is 0 if item compressed", "-\t\t\t\t\t\tif (lastItem.x + lastItem.width >= rightEdge) {", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t}", "+\t\t\tcase SWT.FILL: {", "+\t\t\t\tint rightEdge = size.x - borderRight - 3 - maxRect.width - minRect.width;", "+\t\t\t\tif (single) {", "+\t\t\t\t\tif (items.length == 0 || selectedIndex == -1) {", "+\t\t\t\t\t\ttopRightRect.x = borderLeft + 3;", "+\t\t\t\t\t\ttopRightRect.width = rightEdge - topRightRect.x;", "-\t\t\t\t\t\t// fill size is 0 if chevron showing", "-\t\t\t\t\t\tif (showChevron) {", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t}", "+\t\t\t\t\t\t// fill size is 0 if item compressed", "+\t\t\t\t\t\tCTabItem item = items[selectedIndex];", "+\t\t\t\t\t\tif (item.x + item.width + 7 + 3*BUTTON_SIZE/2 >= rightEdge) break;", "+\t\t\t\t\t\ttopRightRect.x = item.x + item.width + 7 + 3*BUTTON_SIZE/2;", "+\t\t\t\t\t\ttopRightRect.width = rightEdge - topRightRect.x;", "-\t\t\t\t\ttopRightRect.x = lastItem.x + lastItem.width;", "+\t\t\t\t} else {", "+\t\t\t\t\t// fill size is 0 if chevron showing", "+\t\t\t\t\tif (showChevron) break;", "+\t\t\t\t\tCTabItem item = items[items.length - 1];", "+\t\t\t\t\ttopRightRect.x = item.x + item.width;", "-\t\t\t\tbreak;", "-\t\t\tcase SWT.RIGHT:", "-\t\t\t\tPoint topRightSize = topRight.computeSize(SWT.DEFAULT, tabHeight);", "-\t\t\t\tif (single && selectedIndex > -1) {", "-\t\t\t\t\tCTabItem item = items[selectedIndex];", "-\t\t\t\t\ttopRightRect.x = Math.min(item.x +item.width + BUTTON_SIZE, size.x - borderRight - minRect.width - maxRect.width - topRightSize.x - 3);", "-\t\t\t\t} else {", "-\t\t\t\t\ttopRightRect.x = size.x - borderRight - minRect.width - maxRect.width - topRightSize.x - 3;", "-\t\t\t\t}", "-\t\t\t\ttopRightRect.width = topRightSize.x;", "+\t\t\t\ttopRightRect.y = onBottom ? size.y - borderBottom - tabHeight: borderTop + 1;", "+\t\t\t\ttopRightRect.height = tabHeight - 1;", "-\t\t\ttopRightRect.y = onBottom ? size.y - borderBottom - tabHeight: borderTop + 1;", "-\t\t\ttopRightRect.height = tabHeight - 1;", "-\t\t\ttopRight.setBounds(topRightRect);", "+\t\t\tcase SWT.RIGHT: {", "+\t\t\t\tPoint topRightSize = topRight.computeSize(SWT.DEFAULT, tabHeight);", "+\t\t\t\tint rightEdge = size.x - borderRight - 3 - maxRect.width - minRect.width;", "+\t\t\t\ttopRightRect.x = rightEdge - topRightSize.x;", "+\t\t\t\ttopRightRect.width = topRightSize.x;", "+\t\t\t\ttopRightRect.y = onBottom ? size.y - borderBottom - tabHeight: borderTop + 1;", "+\t\t\t\ttopRightRect.height = tabHeight - 1;", "+\t\t\t}", "+\t\t}", "+\t\ttopRight.setBounds(topRightRect);", "-\t\tif (selectedIndex == -1 || items.length > 1){", "+\t\tif (selectedIndex == -1 || items.length > 1) {", "-\t\t\tchevronRect.x = getRightItemEdge();", "+\t\t\tif (selectedIndex == -1) {", "+\t\t\t\tchevronRect.x = size.x - borderRight - 3 - minRect.width - maxRect.width - topRightRect.width - chevronRect.width;", "+\t\t\t} else {", "+\t\t\t\tCTabItem item = items[selectedIndex];", "+\t\t\t\tint w = size.x - borderRight - 3 - minRect.width - maxRect.width - chevronRect.width;", "+\t\t\t\tif (topRightRect.width > 0) w -= topRightRect.width + 3;", "+\t\t\t\tchevronRect.x = Math.min(item.x + item.width + 3, w);", "+\t\t\t}"]}], "num": 28347}