{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fabfd11fb9010bfdd6cad69c38fe75d0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6286a99e5407e61f7fe45869137e7268", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "2a454fe804b800bda7308985ff1c504f23c6c2df", "commitAfterChange": "73435a29b3d514274292dbf94b7cddcffcdcd978", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 55, "signatureBeforeChange": " public void paste ()", "signatureAfterChange": " public void paste ()", "diff": ["+\tString oldText = null;", "-\t\tString oldText = getClipboardText ();", "+\t\toldText = getClipboardText ();", "-\t\t\t\tsetTXNText (OS.kTXNUseCurrentSelection, OS.kTXNUseCurrentSelection, newText);", "-\t\t\t\tOS.TXNShowSelection (txnObject, false);", "+\t\t\t\tif (txnObject == 0) {", "+\t\t\t\t\tinsertEditText (newText);", "+\t\t\t\t} else {", "+\t\t\t\t\tsetTXNText (OS.kTXNUseCurrentSelection, OS.kTXNUseCurrentSelection, newText);", "+\t\t\t\t\tOS.TXNShowSelection (txnObject, false);", "+\t\t\t\t}", "-\tif (paste) OS.TXNPaste (txnObject);", "+\tif (paste) {", "+\t\tif (txnObject == 0) {", "+\t\t\tif (oldText == null) oldText = getClipboardText ();", "+\t\t\tinsertEditText (oldText);", "+\t\t} else {", "+\t\t\tOS.TXNPaste (txnObject);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf1039dac9560d9ea897a31cd170b8ac", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "6cbff223842b996727f72a9e7755fb89f9f00da3", "commitAfterChange": "d1287e0f5a870758b7df8c69e95f6c8689e39920", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 45, "signatureBeforeChange": " public void paste ()", "signatureAfterChange": " public void paste ()", "diff": ["-\t//NOT DONE - get clipboard text and verify or use undo?", "-\tOS.TXNPaste (txnObject);", "+\tboolean paste = true;", "+\tif (hooks (SWT.Verify) || filters (SWT.Verify)) {", "+\t\tString oldText = getClipboardText ();", "+\t\tif (oldText != null) {", "+\t\t\tPoint selection = getSelection ();", "+\t\t\tString newText = verifyText (oldText, selection.x, selection.y, null);", "+\t\t\tif (newText == null) return;", "+\t\t\tif (newText != oldText) {", "+\t\t\t\tsetTXNText (OS.kTXNUseCurrentSelection, OS.kTXNUseCurrentSelection, newText);", "+\t\t\t\tOS.TXNShowSelection (txnObject, false);", "+\t\t\t\tpaste = false;", "+\t\t\t}", "+\t\t}", "+\t}", "+\tif (paste) OS.TXNPaste (txnObject);"]}], "num": 53009}