{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d4581579065818b97f9563df4b209511", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b725f5d46145bc5c44d6a26c7035d4b4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "635a9e5d0a5f495ec272194dbb750eddc745876f", "commitAfterChange": "e83d77b7ddccf5500d06ea30a64ce0d090ac4b10", "methodNumberBeforeChange": 299, "methodNumberAfterChange": 160, "signatureBeforeChange": " public StyleRange [] getStyleRanges(int start, int length)", "signatureAfterChange": " public StyleRange[] getStyleRanges(int start, int length, boolean includeRanges)", "diff": ["-public StyleRange [] getStyleRanges(int start, int length) {", "+ */", "+public StyleRange[] getStyleRanges(int start, int length, boolean includeRanges) {", "-\t}\t", "-\tStyleRange styles[];", "-\t", "-\tif (!userLineStyle) {", "-\t\tstyles = defaultLineStyler.getStyleRangesFor(start, length);", "-\t\tif (styles == null) return new StyleRange[0];", "-\t\t// adjust the first and last style to reflect the specified ", "-\t\t// range, clone these styles since the returned styles are the", "-\t\t// styles cached by the widget", "-\t\tif (styles.length == 1) {", "-\t\t\tStyleRange style = styles[0];", "-\t\t\tif (style.start < start) {", "-\t\t\t\tStyleRange newStyle = (StyleRange)styles[0].clone();", "-\t\t\t\tnewStyle.length = newStyle.length - (start - newStyle.start);", "-\t\t\t\tnewStyle.start = start;", "-\t\t\t\tstyles[0] = newStyle;", "-\t\t\t}", "-\t\t\tif (style.start + style.length > (start + length)) {", "-\t\t\t\tStyleRange newStyle = (StyleRange)styles[0].clone();", "-\t\t\t\tnewStyle.length = start + length - newStyle.start;", "-\t\t\t\tstyles[0] = newStyle;", "-\t\t\t}", "-\t\t} else if (styles.length > 1) {", "-\t\t\tStyleRange style = styles[0];", "-\t\t\tif (style.start < start) {", "-\t\t\t\tStyleRange newStyle = (StyleRange)styles[0].clone();", "-\t\t\t\tnewStyle.length = newStyle.length - (start - newStyle.start);", "-\t\t\t\tnewStyle.start = start;", "-\t\t\t\tstyles[0] = newStyle;", "-\t\t\t}", "-\t\t\tstyle = styles[styles.length - 1];", "-\t\t\tif (style.start + style.length > (start + length)) {", "-\t\t\t\tStyleRange newStyle = (StyleRange)styles[styles.length - 1].clone();", "-\t\t\t\tnewStyle.length = start + length - newStyle.start;", "-\t\t\t\tstyles[styles.length - 1] = newStyle;", "-\t\t\t}", "-\t\t}", "-\telse {", "-\t\tstyles = new StyleRange[0];", "+\tif (!isListening(LineGetStyle)) {", "+\t\tStyleRange[] ranges = renderer.getStyleRanges(start, length, includeRanges);", "+\t\tif (ranges != null) return ranges;", "-\treturn styles;", "+\treturn new StyleRange[0];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b2e129e2ec067f4eaaaf8e93ad54f37", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextBidi.java", "commitBeforeChange": "fa823c434008ea53c7f2ea796b1cfcbe3b183518", "commitAfterChange": "13552ff33b940b98db338e6cce2fcef14a9bfd3a", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "\r private int[] segmentedRangesFor(int[] ranges)", "signatureAfterChange": "\r private StyleRange[] segmentedRangesFor(StyleRange[] ranges)", "diff": ["-private int[] segmentedRangesFor(int[] ranges) {\r", "+private StyleRange[] segmentedRangesFor(StyleRange[] ranges) {\r", "-\tfor (int i=0; i<ranges.length; i+=2) {\r", "-\t\tint start = ranges[i];\r", "-\t\tint end = start+ranges[i+1];\r", "+\tfor (int i=0; i<ranges.length; i++) {\r", "+\t\tint start = ranges[i].start;\r", "+\t\tint end = start+ranges[i].length;\r", "-\t\t\tnewRanges.addElement(new Integer(start));\r", "-\t\t\tnewRanges.addElement(new Integer(end-start));\r", "+\t\t\tStyleRange newStyle = new StyleRange(start, end-start, null, null);\r", "+\t\t\tnewRanges.addElement(newStyle);\r", "-\t\t\tnewRanges.addElement(new Integer(start));\r", "-\t\t\tnewRanges.addElement(new Integer(bidiSegments[startSegment+1]-start));\r", "+\t\t\tStyleRange newStyle = new StyleRange(start, bidiSegments[startSegment+1]-start, null, null);\r", "+\t\t\tnewRanges.addElement(newStyle);\r", "-\t\t\t\tnewRanges.addElement(new Integer(bidiSegments[k]));\r", "-\t\t\t\tnewRanges.addElement(new Integer(bidiSegments[k+1]-bidiSegments[k]));\r", "+\t\t\t\tnewStyle = new StyleRange(bidiSegments[k], bidiSegments[k+1]-bidiSegments[k], null, null);\r", "+\t\t\t\tnewRanges.addElement(newStyle);\r", "-\t\t\tnewRanges.addElement(new Integer(bidiSegments[endSegment]));\r", "-\t\t\tnewRanges.addElement(new Integer(end-bidiSegments[endSegment]));\r", "+\t\t\tnewStyle = new StyleRange(bidiSegments[endSegment], end-bidiSegments[endSegment], null, null);\r", "+\t\t\tnewRanges.addElement(newStyle);\r", "-\tint[] intArray = new int[newRanges.size()];\r", "+\tStyleRange[] rangeArray = new StyleRange[newRanges.size()];\r", "-\t\tintArray[i]=((Integer)newRanges.elementAt(i)).intValue();\r", "+\t\trangeArray[i]=(StyleRange)newRanges.elementAt(i);\r", "-\treturn intArray;\r", "+\treturn rangeArray;\r"]}], "num": 61217}