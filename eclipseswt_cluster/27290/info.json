{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b41525cc71d3831417195de975f20e65", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b6e8cde2d0da5102fa487d3b52cf902", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 70, "signatureBeforeChange": " int mouseHoverProc (int id, int handle)", "signatureAfterChange": "  int mouseHoverProc (int id, int handle)", "diff": ["-int mouseHoverProc (int id, int handle) {", "-\tif (mouseHoverID != 0) OS.RemoveEventLoopTimer(mouseHoverID);", "-\tmouseHoverID = mouseHoverHandle = 0;", "-\tint rc= windowProc (handle, SWT.MouseHover, new MacMouseEvent());", "-\tsendUserEvent(54321);", "-\treturn rc;", "+", "+int mouseHoverProc (int id, int handle) {", "+\tif (hoverControl == null) return 0;", "+\tif (hoverControl.handle == handle && !hoverControl.isDisposed ()) {", "+\t\t//OPTIMIZE - use OS calls", "+\t\tint chord = OS.GetCurrentEventButtonState ();", "+\t\tint modifiers = OS.GetCurrentEventKeyModifiers ();", "+\t\tPoint pt = hoverControl.toControl (getCursorLocation ());", "+\t\thoverControl.sendMouseEvent (SWT.MouseHover, (short)0, chord, (short)pt.x, (short)pt.y, modifiers);", "+\t}", "+\thoverControl = null;", "+\treturn 0;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe98ca1d0839bed774b2c0a1be213efb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "74b44aac273bace6e70511de497711ba9cb87f49", "commitAfterChange": "6e4b0c1d4fdb9e23181a7b945123e706fd39c5bb", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": "  int mouseHoverProc (int id, int handle)", "signatureAfterChange": "  int mouseHoverProc (int id, int handle)", "diff": ["-\tif (hoverControl == null) return 0;", "-\tif (hoverControl.handle == handle && !hoverControl.isDisposed ()) {", "+\tif (currentControl == null) return 0;", "+\tif (!currentControl.isDisposed ()) {", "-\t\tPoint pt = hoverControl.toControl (getCursorLocation ());", "-\t\thoverControl.sendMouseEvent (SWT.MouseHover, (short)0, chord, (short)pt.x, (short)pt.y, modifiers);", "+\t\tPoint pt = currentControl.toControl (getCursorLocation ());", "+\t\tcurrentControl.sendMouseEvent (SWT.MouseHover, (short)0, chord, (short)pt.x, (short)pt.y, modifiers);", "-\thoverControl = null;"]}], "num": 27290}