{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "360297c61af28acdcc93fbaca0881967", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30a451e532f139fccbedef3b832eb02e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "1f8ccb4d651305368c3eceafb64408428ad3bd2f", "commitAfterChange": "f27363ddd25b50221bfb5c0686beb43d23d52a27", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "  void destroyItem (TableColumn column)", "signatureAfterChange": "  void destroyItem (TableColumn column)", "diff": ["-\t\tString [] strings = items [i].strings;", "-\t\tif (strings != null) {", "-\t\t\tif (columnCount == 0) {", "-\t\t\t\titems [i].strings = null;", "-\t\t\t} else {", "-\t\t\t\tif (index == 0) items [i].text = strings [1];", "-\t\t\t\tString [] temp = new String [columnCount];", "-\t\t\t\tSystem.arraycopy (strings, 0, temp, 0, index);", "-\t\t\t\tSystem.arraycopy (strings, index + 1, temp, index, columnCount - index);", "-\t\t\t\titems [i].strings = temp;", "+\t\tTableItem item = items [i];", "+\t\tif (item != null) {", "+\t\t\tString [] strings = item.strings;", "+\t\t\tif (strings != null) {", "+\t\t\t\tif (columnCount == 0) {", "+\t\t\t\t\titem.strings = null;", "+\t\t\t\t} else {", "+\t\t\t\t\tif (index == 0) item.text = strings [1];", "+\t\t\t\t\tString [] temp = new String [columnCount];", "+\t\t\t\t\tSystem.arraycopy (strings, 0, temp, 0, index);", "+\t\t\t\t\tSystem.arraycopy (strings, index + 1, temp, index, columnCount - index);", "+\t\t\t\t\titem.strings = temp;", "+\t\t\t\t}", "-\t\t}", "-\t\tImage [] images = items [i].images;", "-\t\tif (images != null) {", "-\t\t\tif (columnCount == 0) {", "-\t\t\t\titems [i].images = null;", "-\t\t\t} else {", "-\t\t\t\tif (index == 0) items [i].image = images [1];", "-\t\t\t\tImage [] temp = new Image [columnCount];", "-\t\t\t\tSystem.arraycopy (images, 0, temp, 0, index);", "-\t\t\t\tSystem.arraycopy (images, index + 1, temp, index, columnCount - index);", "-\t\t\t\titems [i].images = temp;", "+\t\t\tImage [] images = item.images;", "+\t\t\tif (images != null) {", "+\t\t\t\tif (columnCount == 0) {", "+\t\t\t\t\titem.images = null;", "+\t\t\t\t} else {", "+\t\t\t\t\tif (index == 0) item.image = images [1];", "+\t\t\t\t\tImage [] temp = new Image [columnCount];", "+\t\t\t\t\tSystem.arraycopy (images, 0, temp, 0, index);", "+\t\t\t\t\tSystem.arraycopy (images, index + 1, temp, index, columnCount - index);", "+\t\t\t\t\titem.images = temp;", "+\t\t\t\t}", "-\t\t}", "-\t\tif (items [i].cellBackground != null) {", "-\t\t\tif (columnCount == 0) {", "-\t\t\t\titems [i].cellBackground = null;", "-\t\t\t} else {", "-\t\t\t\tint [] cellBackground = items [i].cellBackground;", "-\t\t\t\tint [] temp = new int [columnCount];", "-\t\t\t\tSystem.arraycopy (cellBackground, 0, temp, 0, index);", "-\t\t\t\tSystem.arraycopy (cellBackground, index + 1, temp, index, columnCount - index);", "-\t\t\t\titems [i].cellBackground = temp;", "+\t\t\tif (item.cellBackground != null) {", "+\t\t\t\tif (columnCount == 0) {", "+\t\t\t\t\titem.cellBackground = null;", "+\t\t\t\t} else {", "+\t\t\t\t\tint [] cellBackground = item.cellBackground;", "+\t\t\t\t\tint [] temp = new int [columnCount];", "+\t\t\t\t\tSystem.arraycopy (cellBackground, 0, temp, 0, index);", "+\t\t\t\t\tSystem.arraycopy (cellBackground, index + 1, temp, index, columnCount - index);", "+\t\t\t\t\titem.cellBackground = temp;", "+\t\t\t\t}", "-\t\t}", "-\t\tif (items [i].cellForeground != null) {", "-\t\t\tif (columnCount == 0) {", "-\t\t\t\titems [i].cellForeground = null;", "-\t\t\t} else {", "-\t\t\t\tint [] cellForeground = items [i].cellForeground;", "-\t\t\t\tint [] temp = new int [columnCount];", "-\t\t\t\tSystem.arraycopy (cellForeground, 0, temp, 0, index);", "-\t\t\t\tSystem.arraycopy (cellForeground, index + 1, temp, index, columnCount - index);", "-\t\t\t\titems [i].cellForeground = temp;", "+\t\t\tif (item.cellForeground != null) {", "+\t\t\t\tif (columnCount == 0) {", "+\t\t\t\t\titem.cellForeground = null;", "+\t\t\t\t} else {", "+\t\t\t\t\tint [] cellForeground = item.cellForeground;", "+\t\t\t\t\tint [] temp = new int [columnCount];", "+\t\t\t\t\tSystem.arraycopy (cellForeground, 0, temp, 0, index);", "+\t\t\t\t\tSystem.arraycopy (cellForeground, index + 1, temp, index, columnCount - index);", "+\t\t\t\t\titem.cellForeground = temp;", "+\t\t\t\t}", "-\t\t}", "-\t\tif (items [i].cellFont != null) {", "-\t\t\tif (columnCount == 0) {", "-\t\t\t\titems [i].cellFont = null;", "-\t\t\t} else {", "-\t\t\t\tint [] cellFont = items [i].cellFont;", "-\t\t\t\tint [] temp = new int [columnCount];", "-\t\t\t\tSystem.arraycopy (cellFont, 0, temp, 0, index);", "-\t\t\t\tSystem.arraycopy (cellFont, index + 1, temp, index, columnCount - index);", "-\t\t\t\titems [i].cellFont = temp;", "+\t\t\tif (item.cellFont != null) {", "+\t\t\t\tif (columnCount == 0) {", "+\t\t\t\t\titem.cellFont = null;", "+\t\t\t\t} else {", "+\t\t\t\t\tint [] cellFont = item.cellFont;", "+\t\t\t\t\tint [] temp = new int [columnCount];", "+\t\t\t\t\tSystem.arraycopy (cellFont, 0, temp, 0, index);", "+\t\t\t\t\tSystem.arraycopy (cellFont, index + 1, temp, index, columnCount - index);", "+\t\t\t\t\titem.cellFont = temp;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16f4061727b41e761163fbc61b9ad75f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "8549b1db39ac8fd4bb7564c61e5b9a04b5efde6f", "commitAfterChange": "2b3120470b46968368044df3f94129d586bc41d5", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 92, "signatureBeforeChange": "  LRESULT wmNotifyChild (int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmNotifyChild (int wParam, int lParam)", "diff": ["-\t\t//NOT DONE", "-//\t\tcase OS.LVN_GETDISPINFOA:", "-//\t\tcase OS.LVN_GETDISPINFOW: {", "-//\t\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "-//\t\t\tif ((bits & OS.LVS_OWNERDATA) != 0) {", "-//\t\t\t\tNMLVDISPINFO info = new NMLVDISPINFO ();", "-//\t\t\t\tOS.MoveMemory (info, lParam, NMLVDISPINFO.sizeof);", "-//\t\t\t\tSystem.out.println (\"LVN_GETDISPINFO: \" + Integer.toHexString (info.mask));", "-//\t\t\t\tif ((info.mask & OS.LVIF_TEXT) != 0) {", "-//\t\t\t\t\tSystem.out.println (\"\\tLVIF_TEXT\");", "-//\t\t\t\t\tTableItem item = items [info.iItem];", "-//\t\t\t\t\tString string = item.text;", "-//\t\t\t\t\t//BUG - no null when overflow buffer", "-//\t\t\t\t\tTCHAR buffer = new TCHAR (getCodePage (), string, true);", "-//\t\t\t\t\tint byteCount = Math.min (buffer.length (), info.cchTextMax) * TCHAR.sizeof;", "-//\t\t\t\t\tOS.MoveMemory (info.pszText, buffer, byteCount);", "-//\t\t\t\t}", "-//\t\t\t\tif ((info.mask & OS.LVIF_IMAGE) != 0) {", "-//\t\t\t\t\tSystem.out.println (\"\\tLVIF_IMAGE\");", "-//\t\t\t\t\tTableItem item = items [info.iItem];", "-//\t\t\t\t\tif (item.image != null) info.iImage = imageIndex (item.image);", "-//\t\t\t\t}", "-//\t\t\t\tif ((info.mask & OS.LVIF_STATE) != 0) {", "-//\t\t\t\t\tSystem.out.println (\"\\tLVIF_STATE\");", "-//\t\t\t\t\tTableItem item = items [info.iItem];", "-//\t\t\t\t\tint state = 3;", "-//\t\t\t\t\t//if (item.checked) state++;", "-//\t\t\t\t\t//if (item.grayed) state +=2;", "-//\t\t\t\t\tinfo.state = state << 12;", "-//\t\t\t\t\tinfo.stateMask = OS.LVIS_STATEIMAGEMASK;", "-//\t\t\t\t}", "-//\t\t\t\tif ((info.mask & OS.LVIF_INDENT) != 0) {", "-//\t\t\t\t\tSystem.out.println (\"\\tLVIF_INDENT\");", "-//\t\t\t\t\tTableItem item = items [info.iItem];", "-//\t\t\t\t\t//info.iIndent = 1;", "-//\t\t\t\t}", "-//\t\t\t\tOS.MoveMemory (lParam, info, NMLVDISPINFO.sizeof);", "-//\t\t\t}", "-//\t\t\tbreak;", "-//\t\t}", "+\t\tcase OS.LVN_ODFINDITEMA:", "+\t\tcase OS.LVN_ODFINDITEMW: {", "+\t\t\tif ((style & SWT.VIRTUAL) != 0) {", "+\t\t\t\tNMLVFINDITEM pnmfi = new NMLVFINDITEM ();", "+\t\t\t\tOS.MoveMemory (pnmfi, lParam, NMLVFINDITEM.sizeof);", "+\t\t\t\tint index = Math.max (0, pnmfi.iStart - 1);", "+\t\t\t\treturn new LRESULT (index);", "+\t\t\t}", "+\t\t\tbreak;", "+\t\t}", "+\t\tcase OS.LVN_GETDISPINFOA:", "+\t\tcase OS.LVN_GETDISPINFOW: {", "+\t\t\tNMLVDISPINFO plvfi = new NMLVDISPINFO ();", "+\t\t\tOS.MoveMemory (plvfi, lParam, NMLVDISPINFO.sizeof);", "+\t\t\tlastIndexOf = plvfi.iItem;", "+\t\t\tTableItem item = items [plvfi.iItem];", "+\t\t\titem.requested = true;", "+\t\t\tif ((style & SWT.VIRTUAL) != 0) {", "+\t\t\t\tEvent event = new Event ();", "+\t\t\t\tevent.item = item;", "+\t\t\t\tignoreRedraw = true;", "+\t\t\t\tsendEvent (SWT.SetData, event);", "+\t\t\t\t//widget could be disposed at this point", "+\t\t\t\tif (isDisposed ()) break;", "+\t\t\t\tignoreRedraw = false;", "+\t\t\t\tif (setScrollWidth (item, true)) redraw ();", "+\t\t\t}", "+\t\t\tif ((plvfi.mask & OS.LVIF_TEXT) != 0) {", "+\t\t\t\tString string = null;", "+\t\t\t\tif (plvfi.iSubItem == 0) {", "+\t\t\t\t\tstring = item.text;", "+\t\t\t\t} else {", "+\t\t\t\t\tString [] strings  = item.strings;", "+\t\t\t\t\tif (strings != null) string = strings [plvfi.iSubItem];", "+\t\t\t\t}", "+\t\t\t\tif (string != null) {", "+\t\t\t\t\tTCHAR buffer = new TCHAR (getCodePage (), string, false);", "+\t\t\t\t\tint byteCount = Math.min (buffer.length (), plvfi.cchTextMax - 1) * TCHAR.sizeof;", "+\t\t\t\t\tOS.MoveMemory (plvfi.pszText, buffer, byteCount);", "+\t\t\t\t\tOS.MoveMemory (plvfi.pszText + byteCount, new byte [TCHAR.sizeof], TCHAR.sizeof);", "+\t\t\t\t\tplvfi.cchTextMax = Math.min (plvfi.cchTextMax, string.length () + 1);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif ((plvfi.mask & OS.LVIF_IMAGE) != 0) {", "+\t\t\t\tImage image = null;", "+\t\t\t\tif (plvfi.iSubItem == 0) {", "+\t\t\t\t\timage = item.image;", "+\t\t\t\t} else {", "+\t\t\t\t\tImage [] images = item.images;", "+\t\t\t\t\tif (images != null) image = images [plvfi.iSubItem];", "+\t\t\t\t}", "+\t\t\t\tif (image != null) plvfi.iImage = imageIndex (image);", "+\t\t\t}", "+\t\t\tif ((plvfi.mask & OS.LVIF_STATE) != 0) {", "+\t\t\t\tif (plvfi.iSubItem == 0) {", "+\t\t\t\t\tint state = 1;", "+\t\t\t\t\tif (item.checked) state++;", "+\t\t\t\t\tif (item.grayed) state +=2;", "+\t\t\t\t\tplvfi.state = state << 12;", "+\t\t\t\t\tplvfi.stateMask = OS.LVIS_STATEIMAGEMASK;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif ((plvfi.mask & OS.LVIF_INDENT) != 0) {", "+\t\t\t\tif (plvfi.iSubItem == 0) plvfi.iIndent = item.imageIndent;", "+\t\t\t}", "+\t\t\tOS.MoveMemory (lParam, plvfi, NMLVDISPINFO.sizeof);", "+\t\t\tbreak;", "+\t\t}"]}], "num": 5567}