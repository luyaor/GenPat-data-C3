{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "929a7b29b977050068c0f5018ad19707", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9407ab6729b55e9c54914670ccf1ab8d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/carbon/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "ea6bf58c55a1ccfba682400237d7c1f40ceeffab", "commitAfterChange": "06d90d9a57442d7814f25b224526651743c00e35", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["+", "+\tif (!Initialized) {", "+\t\tInitialized = true;", "+\t\t/* disable applets */", "+\t\tint preferences = Cocoa.objc_msgSend(Cocoa.C_WebPreferences, Cocoa.S_standardPreferences);", "+\t\tCocoa.objc_msgSend(preferences, Cocoa.S_setJavaEnabled, 0);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25bbc8d42d215e5dffc4df8157355094", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "52cc9f66dc2d916f415347f67eda980737e233af", "commitAfterChange": "611c48be2a5b0acb1edc3bcfeb11ba4a0ab72001", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "  LRESULT WM_COMMAND (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_COMMAND (int wParam, int lParam)", "diff": ["-\t* Note in WinCE PPC.  Menu events originate from the command bar.", "+\t* Note in WinCE PPC.  Sub menu item events originate from the menubar.", "+\t* Top menu items event originate from the toolbar used internally by", "+\t* the menubar. The toolbar has been observed to be the first child", "+\t* of the menubar.", "-\t\t\tif (hwndCB != 0 && lParam == hwndCB) {", "-\t\t\t\treturn super.WM_COMMAND (wParam, 0);", "+\t\t\tif (lParam != 0 && hwndCB != 0) {", "+\t\t\t\tif (lParam == hwndCB) {", "+\t\t\t\t\treturn super.WM_COMMAND (wParam, 0);", "+\t\t\t\t} else {", "+\t\t\t\t\tint hwndChild = OS.GetWindow (hwndCB, OS.GW_CHILD);", "+\t\t\t\t\tif (lParam == hwndChild) return super.WM_COMMAND (wParam, 0);\t\t\t\t\t", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db233a9b4be0b11b988a695b0a69fc8e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "91064314b0fe7d24ca6f1d0aa7b46583d20f8d4a", "commitAfterChange": "6cd02c001a8e8a3460c0bcd9b61fa0912251d302", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " public boolean post(Event event)", "signatureAfterChange": " public boolean post(Event event)", "diff": ["-\t\t\t\tmouseCursorPosition.x = event.x;", "-\t\t\t\tmouseCursorPosition.y = event.y;", "+\t\t\t\t\tmouseCursorPosition.x = event.x;", "+\t\t\t\t\tmouseCursorPosition.y = event.y;", "-", "+\t \t\t\t\t", "+\t \t\t\t\tNSPoint nsCursorPosition = NSEvent.mouseLocation();", "+\t \t\t\t\tNSRect primaryFrame = getPrimaryFrame();", "+\t \t\t\t\tmouseCursorPosition.x = nsCursorPosition.x;", "+\t \t\t\t\tmouseCursorPosition.y = (int) (primaryFrame.height - nsCursorPosition.y);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80185a94e8fcc0b04b88b7c3c392362a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "37a4190dbc5ad26eb692e7bd68ed00c0c4125cab", "commitAfterChange": "496d4a0977bda5ea90289b447545064afbcbabfa", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["+\t/*", "+\t* Set the default icon for the shell to IDI_APPLICATION.", "+\t* This is not necessary for native applications but later", "+\t* versions of Java set the icon in javaw.exe instead of", "+\t* leaving the default.", "+\t* ", "+\t* NOTE:  The icon is not leaked.  It is shared within", "+\t* the process by all theads and is released when the", "+\t* process exits.", "+\t*/", "+\tif (!OS.IsWinCE) {", "+\t\tint hIcon = OS.LoadIcon (0, OS.IDI_APPLICATION);", "+\t\tOS.SendMessage (handle, OS.WM_SETICON, OS.ICON_SMALL, hIcon);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c332ca3fd4551d2ce5737847b5f58450", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CLabel.java", "commitBeforeChange": "c4f1f56c86ea0f324367d5bf40bcbb49d4323f3e", "commitAfterChange": "fca875eb72108e60782c178db548975d58286f47", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  void onPaint(PaintEvent event)", "signatureAfterChange": "  void onPaint(PaintEvent event)", "diff": ["-\t       lines[i] = shortenText(gc, lines[i], availableWidth);", "-\t       extent.x = Math.max(extent.x, getTotalSize(null, lines[i]).x);", "+\t    \tPoint e = gc.textExtent(lines[i], DRAW_FLAGS);", "+\t    \tif (e.x > availableWidth) {", "+\t    \t\tlines[i] = shortenText(gc, lines[i], availableWidth);", "+\t    \t\textent.x = Math.max(extent.x, getTotalSize(null, lines[i]).x);", "+\t    \t} else {", "+\t    \t\textent.x = Math.max(extent.x, e.x);", "+\t    \t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd7017803a3f81feef4efcb423cebdfb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "a45e2f0f4688ba8750d124e41802861dc3176c91", "commitAfterChange": "26e521309364bb658cf1c93d5815f7e3f172acfd", "methodNumberBeforeChange": 148, "methodNumberAfterChange": 148, "signatureBeforeChange": " int getPartialBottomIndex()", "signatureAfterChange": " int getPartialBottomIndex()", "diff": ["-//\tint partialLineCount = Compatibility.ceil(getClientArea().height, lineHeight);", "-//\treturn Math.min(content.getLineCount(), topIndex + partialLineCount) - 1;", "+\tif (isFixedLineHeight()) {", "+\t\tint partialLineCount = Compatibility.ceil(getClientArea().height, lineHeight);", "+\t\treturn Math.min(content.getLineCount(), topIndex + partialLineCount) - 1;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e884e74b359dbbf07b7459ccfd0b85d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/Tab.java", "commitBeforeChange": "96fea6775a7e6f8bd4c7a6296214dc1e7c92c2d6", "commitAfterChange": "1f128a237cdce67120a8f30673e7c66123dafbc3", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tvoid createListenerSelectionDialog ()", "signatureAfterChange": " \tvoid createListenerSelectionDialog ()", "diff": ["+\t\t/*", "+\t\t * If the preferred size of the dialog is too tall for the screen,", "+\t\t * then reduce the height, so that the vertical scrollbar will appear.", "+\t\t */", "+\t\tPoint size = dialog.getSize();", "+\t\tRectangle bounds = display.getBounds();", "+\t\tif (size.y > bounds.height) {", "+\t\t\tdialog.setSize(bounds.height, size.x);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25498447b0b967f19530f810648737cc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "4df75498fdab17c2d1e2d874e7ccc227afa49b01", "commitAfterChange": "f17083d4db46878a6139bee0326050eca39ba8de", "methodNumberBeforeChange": 127, "methodNumberAfterChange": 127, "signatureBeforeChange": "  void applicationSendMouseEvent (NSEvent nsEvent, boolean send)", "signatureAfterChange": "  void applicationSendMouseEvent (NSEvent nsEvent, boolean send)", "diff": ["-\t\t\t\tif (nsEvent.clickCount() == 1 && (control.state & Widget.DRAG_DETECT) != 0 && control.hooks (SWT.DragDetect) && control.dragDetect()) {", "-\t\t\t\t\tdragging = true;", "+\t\t\t\tif (nsEvent.clickCount() == 1 && (control.state & Widget.DRAG_DETECT) != 0 && control.hooks (SWT.DragDetect)) {", "+\t\t\t\t\tNSPoint windowLoc = nsEvent.locationInWindow();", "+\t\t\t\t\tNSPoint viewLoc = control.view.convertPoint_toView_(windowLoc, null);", "+\t\t\t\t\tif (control.dragDetect((int)viewLoc.x, (int)viewLoc.y, false, null))", "+\t\t\t\t\t\tdragging = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12df3ddf31ffa1501000b86e043bced6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "7fb06e9229d8e53de398a263a33af7e61a8f59eb", "commitAfterChange": "bb1e385f95eb37fa76b180b753e27affb4d9475d", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " public void getClipping (Region region)", "signatureAfterChange": " public void getClipping (Region region)", "diff": ["-\t\t\tOS.CombineRgn(region.handle, hRgn, 0, OS.RGN_COPY);", "+\t\t\tif (!OS.IsWinCE) {", "+\t\t\t\tPOINT pt = new POINT ();", "+\t\t\t\tOS.GetWindowOrgEx (handle, pt);", "+\t\t\t\tOS.OffsetRgn (hRgn, pt.x, pt.y);", "+\t\t\t}", "+\t\t\tOS.CombineRgn(region.handle, hRgn, 0, OS.RGN_COPY);\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f1b12df5a72a703de62ed202202fdd0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "486b4ea7d81301a5e42feb98f944e7969e16da53", "commitAfterChange": "e28f955cfbae343ba2d1e7979294f3aa1d31bba5", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "  void setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "signatureAfterChange": "  void setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "diff": ["-\tif (!resize) {", "+\tif (resize) {", "+\t\tNSSize minSize = window.minSize();", "+\t\twidth = Math.max(width, (int)minSize.width);", "+\t\theight = Math.max(height, (int)minSize.height);", "+\t} else {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be17813a445c0d96f96203ca6bf91ee9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "bce33e0833e5ea22e197f70bbd36284a765724a8", "commitAfterChange": "abfdcfb2a80c73d1ca40740cee6b7363f053a0e4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  void drawBackground (Control control, int window, int region, int x, int y, int width, int height)", "signatureAfterChange": "  void drawBackground (Control control, int window, int region, int x, int y, int width, int height)", "diff": ["+\t\t\tPoint pt = display.map (this, control, 0, 0);", "+\t\t\tCairo.cairo_translate (cairo, -pt.x, -pt.y);", "+\t\t\tx += pt.x;", "+\t\t\ty += pt.y;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8a349f4c8b6a43a8ab98867e2ef4d5f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextPrinter.java", "commitBeforeChange": "3f60fcacd616ca7d380ba17c3ae127fa333fd5c0", "commitAfterChange": "e812b9dfe4c79fb83c6958c31b84248b22b4e3e4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \t\r \tStyledTextPrinter(StyledText styledText, Printer printer)", "signatureAfterChange": "\r \t\r \tStyledTextPrinter(StyledText styledText, Printer printer)", "diff": ["+\t\tPrinterData data = printer.getPrinterData();\r", "+\t\tstartPage = 1;\r", "+\t\tendPage = Integer.MAX_VALUE;\r", "+\t\tif (data.scope == PrinterData.PAGE_RANGE) {\r", "+\t\t\tstartPage = data.startPage;\r", "+\t\t\tendPage = data.endPage;\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b40708ff010739b6f09009d481484ee", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/cocoa/org/eclipse/swt/printing/Printer.java", "commitBeforeChange": "f4abd83d57d77245094f225bf96065fc437b4479", "commitAfterChange": "8ab0cb1a59e576205e88d233b12556089108ede1", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public Rectangle getClientArea()", "signatureAfterChange": " public Rectangle getClientArea()", "diff": ["-//\tPMRect pageRect = new PMRect();", "-//\tOS.PMGetAdjustedPageRect(pageFormat, pageRect);", "-//\treturn new Rectangle(0, 0, (int)(pageRect.right-pageRect.left), (int)(pageRect.bottom-pageRect.top));", "-\treturn null;", "+\tNSRect rect = printInfo.imageablePageBounds();", "+\treturn new Rectangle((int)rect.x, (int)rect.y, (int)rect.width, (int)rect.height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1032cbc167607400830e874d62bec70d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "8dffb9b37b47212432b736bc6131dcb35540ad90", "commitAfterChange": "32e29cd1567579844c1e9016615e9bcfee13c09e", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": "\r public void cut()", "signatureAfterChange": "\r public void cut()", "diff": ["-\tif (selection.y > selection.x) {\r", "-\t\tcopy();\r", "+\tint length = selection.y - selection.x;\r", "+\t\r", "+\tif (length > 0) {\r", "+\t\ttry {\r", "+\t\t\tsetClipboardContent(selection.x, length);\r", "+\t\t}\r", "+\t\tcatch (SWTError error) {\r", "+\t\t\t// Copy to clipboard failed. This happens when another application \r", "+\t\t\t// is accessing the clipboard while we copy. Ignore the error.\r", "+\t\t\t// Fixes 1GDQAVN\r", "+\t\t\t// Rethrow all other errors. Fixes bug 17578.\r", "+\t\t\tif (error.code != DND.ERROR_CANNOT_SET_CLIPBOARD) {\r", "+\t\t\t\tthrow error;\r", "+\t\t\t}\r", "+\t\t\t// Abort cut operation if copy to clipboard fails.\r", "+\t\t\t// Fixes bug 21030.\r", "+\t\t\treturn;\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "739a5870d8b6d65851c2cb953e82cc06", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "fc8e38f2680acf108bcc8932def45b522b2f2367", "commitAfterChange": "0e9002fe6e242cf1196df7e1db7cca0e1f375209", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " public void getClipping (Region region)", "signatureAfterChange": " public void getClipping (Region region)", "diff": ["+\tPOINT pt = new POINT ();", "+\tOS.GetWindowOrgEx (handle, pt);", "+\t} else {", "+\t\tif (pt.x != 0 || pt.y != 0) OS.OffsetRgn (region.handle, pt.x, pt.y);", "-\t\t\tPOINT pt = new POINT ();", "-\t\t\tOS.GetWindowOrgEx (handle, pt);", "-\t\t\t\t\tPOINT pt = new POINT();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05bd42a0b27e5c60bed2ef1f246b6f0a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "f059eca39b2172be0b6301e4c573d020aed8a169", "commitAfterChange": "de616cb540caa204a7c99866db54d7b6909f33eb", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void setDigits (int value)", "signatureAfterChange": " public void setDigits (int value)", "diff": ["-//\tif (value == digits) return;", "-//\tdigits = value;", "-//\tint pos = OS.GetControl32BitValue (buttonHandle);\t", "-//\tsetSelection (pos, false, true, false);", "+\tif (value == digits) return;", "+\tdigits = value;", "+\tint pos = (int)buttonView.doubleValue();\t", "+\ttextFormatter.setMaximumFractionDigits(digits);", "+\tsetSelection (pos, false, true, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d888632a83bbf4416b0f03a701e36419", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "a1f7149f8a67dd08842e95288d377cd23ead83aa", "commitAfterChange": "b82b6bee783c1b3671f806906cfa127c639f7ce6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  LRESULT CDDS_ITEMPREPAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT CDDS_ITEMPREPAINT (int wParam, int lParam)", "diff": ["-\tif (ignoreCustomDraw) {", "-\t\tint hDC = nmcd.hdc;", "-\t\tint index = hwndHeader != 0 ? OS.SendMessage (hwndHeader, OS.HDM_ORDERTOINDEX, 0, 0) : 0;", "-\t\tint hFont = item.cellFont != null ? item.cellFont [index] : -1;", "-\t\tif (hFont == -1) hFont = item.font;", "-\t\tif (hFont != -1) OS.SelectObject (hDC, hFont);", "-\t\treturn new LRESULT (hFont == -1 ? OS.CDRF_DODEFAULT : OS.CDRF_NEWFONT);", "-\t}", "+\tif (ignoreCustomDraw || (nmcd.left == nmcd.right)) {", "+\t\tint hDC = nmcd.hdc;", "+\t\tint index = hwndHeader != 0 ? OS.SendMessage (hwndHeader, OS.HDM_ORDERTOINDEX, 0, 0) : 0;", "+\t\tint hFont = item.cellFont != null ? item.cellFont [index] : -1;", "+\t\tif (hFont == -1) hFont = item.font;", "+\t\tif (hFont != -1) OS.SelectObject (hDC, hFont);", "+\t\treturn new LRESULT (hFont == -1 ? OS.CDRF_DODEFAULT : OS.CDRF_NEWFONT);", "+\t}", "+\t\tPOINT lpPoint = new POINT ();", "+\t\tOS.GetWindowOrgEx (hDC, lpPoint);", "+\t\tOS.OffsetRgn (hRgn, -lpPoint.x, -lpPoint.y);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d88a9f41b34087a5112de7c3c8802f2f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tracker.java", "commitBeforeChange": "e56031a9a16aa140372a72b5db2042b5e7d0b0de", "commitAfterChange": "51bd759f969719177523a5f93608aff2d9678559", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  void drawRectangles (int window, Rectangle [] rects, boolean erase)", "signatureAfterChange": "  void drawRectangles (int window, Rectangle [] rects, boolean erase)", "diff": ["+\tPoint parentOrigin;", "+\tif (parent != null) {", "+\t\tparentOrigin = display.map (parent, null, 0, 0);", "+\t} else {", "+\t\tparentOrigin = new Point (0, 0);\t", "+\t}", "-\t\tcgRect.x = rect.x;", "-\t\tcgRect.y = rect.y;", "+\t\tcgRect.x = rect.x + parentOrigin.x;", "+\t\tcgRect.y = rect.y + parentOrigin.y;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a82215718d2d0e406bd7bd0ed380baeb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "1abca3de880ca8fa3712038f321ffb3a0803dd38", "commitAfterChange": "1fcdb5569a20cdd8ecab2986180db47c5142ee2d", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public Point getLocation(int offset, boolean trailing)", "signatureAfterChange": " public Point getLocation(int offset, boolean trailing)", "diff": ["-\t\toffset = translateOffset(offset);", "-\t\tint /*long*/ glyphIndex = layoutManager.glyphIndexForCharacterAtIndex(offset);", "-\t\tNSRect rect = layoutManager.lineFragmentUsedRectForGlyphAtIndex(glyphIndex, 0);", "-\t\tNSPoint point = layoutManager.locationForGlyphAtIndex(glyphIndex);", "-\t\tboolean rtl = false;", "-\t\tNSRange range  = new NSRange();", "-\t\trange.location = glyphIndex;", "-\t\trange.length = 1;", "-\t\tbyte[] bidiLevels = new byte[1];", "-\t\tint /*long*/ result = layoutManager.getGlyphsInRange(range, 0, 0, 0, 0, bidiLevels);", "-\t\tif (result > 0) {", "-\t\t\trtl = (bidiLevels[0] & 1) != 0;", "-\t\t}", "-\t\tif (trailing != rtl) {", "-\t\t\tint /*long*/ [] rectCount = new int /*long*/ [1];", "-\t\t\tint /*long*/ pArray = layoutManager.rectArrayForGlyphRange(range, range, textContainer, rectCount);", "-\t\t\tif (rectCount[0] > 0) {", "-\t\t\t\tNSRect bounds = new NSRect();", "-\t\t\t\tOS.memmove(bounds, pArray, NSRect.sizeof);", "-\t\t\t\tfixRect(bounds);", "-\t\t\t\tpoint.x += bounds.width;", "+\t\tif (offset == length) {", "+\t\t\tNSRect rect = lineBounds[lineBounds.length - 1];", "+\t\t\treturn new Point((int)(rect.x + rect.width), (int)rect.y);", "+\t\t} else {", "+\t\t\toffset = translateOffset(offset);", "+\t\t\tint /*long*/ glyphIndex = layoutManager.glyphIndexForCharacterAtIndex(offset);", "+\t\t\tNSRect rect = layoutManager.lineFragmentUsedRectForGlyphAtIndex(glyphIndex, 0);", "+\t\t\tNSPoint point = layoutManager.locationForGlyphAtIndex(glyphIndex);", "+\t\t\tboolean rtl = false;", "+\t\t\tNSRange range  = new NSRange();", "+\t\t\trange.location = glyphIndex;", "+\t\t\trange.length = 1;", "+\t\t\tbyte[] bidiLevels = new byte[1];", "+\t\t\tint /*long*/ result = layoutManager.getGlyphsInRange(range, 0, 0, 0, 0, bidiLevels);", "+\t\t\tif (result > 0) {", "+\t\t\t\trtl = (bidiLevels[0] & 1) != 0;", "+\t\t\tif (trailing != rtl) {", "+\t\t\t\tint /*long*/ [] rectCount = new int /*long*/ [1];", "+\t\t\t\tint /*long*/ pArray = layoutManager.rectArrayForGlyphRange(range, range, textContainer, rectCount);", "+\t\t\t\tif (rectCount[0] > 0) {", "+\t\t\t\t\tNSRect bounds = new NSRect();", "+\t\t\t\t\tOS.memmove(bounds, pArray, NSRect.sizeof);", "+\t\t\t\t\tfixRect(bounds);", "+\t\t\t\t\tpoint.x += bounds.width;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\treturn new Point((int)point.x, (int)rect.y);", "-\t\treturn new Point((int)point.x, (int)rect.y);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0e35e577dd67ed0b8d874a6c0ba0753", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "5f0a43f5b96ff1bf18fe8995d1b162bd6a21031c", "commitAfterChange": "515a9ed3ebbdfad1dc65dc37f1c3b036e39871c5", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  void bringToTop (boolean force)", "signatureAfterChange": "  void bringToTop (boolean force)", "diff": ["+\tif (hasFocus) return;", "-\tif (shell == this) return;", "+\tif (!force) {", "+\t\tif (shell == null) return;", "+\t\tint focusHandle = OS.gtk_window_get_focus (shell.shellHandle);", "+\t\tif (focusHandle == 0 || !OS.GTK_WIDGET_HAS_FOCUS (focusHandle)) return;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab4b9f96a43244640acf842b928fd50a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "1e6a842d4ccd28f3b51791a1faef5cd03b315547", "commitAfterChange": "b0182391bf88c058e2b9f9da845ed5dc87d477b2", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  void drawImage(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple)", "signatureAfterChange": "  void drawImage(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple)", "diff": ["-\t\t\tCairo.cairo_translate(cairo, destX - srcX, destY - srcY);", "-\t\t\t\tCairo.cairo_scale(cairo, destWidth / (float)srcWidth,  destHeight / (float)srcHeight);", "+\t\t\t\tfloat scaleX = destWidth / (float)srcWidth;", "+\t\t\t\tfloat scaleY = destHeight / (float)srcHeight;", "+\t\t\t\tCairo.cairo_translate(cairo, destX - (int)(srcX * scaleX), destY - (int)(srcY * scaleY));", "+\t\t\t\tCairo.cairo_scale(cairo, scaleX, scaleY);", "+\t\t\t} else {", "+\t\t\t\tCairo.cairo_translate(cairo, destX - srcX, destY - srcY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b38208b0bd027ef9e691ec512cb51e55", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/internal/image/FileFormat.java", "commitBeforeChange": "553d7364f85189cde07e065aaa5ba7380f0c1418", "commitAfterChange": "ff32f7578b312ab2cf7bee31c19161e45b3b344c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public static void save(OutputStream os, int format, ImageLoader loader)", "signatureAfterChange": "\t public static void save(OutputStream os, int format, ImageLoader loader)", "diff": ["+ */\t", "+\tif (loader.data == null || loader.data.length < 1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "-\t/* We do not currently support writing multi-image files,", "-\t * so we use the first image data in the loader's array. */", "-\tImageData data = loader.data[0];", "-\t\tswitch (data.depth) {", "+\t\tswitch (loader.data[0].depth) {", "-\tfileFormat.unloadIntoStream(data, stream);", "+\tfileFormat.unloadIntoStream(loader, stream);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa912c8011b601d1ea0ebc6fac499fe6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tracker.java", "commitBeforeChange": "1179f16912e74ae60b1efbf009a154d76fd2bb7e", "commitAfterChange": "75566563a93f07334aa0c58b632e1fd81057f518", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public boolean open ()", "signatureAfterChange": " public boolean open ()", "diff": ["-\t\t\t\tOS.gdk_window_get_pointer (window, newX,newY, null);", "+\t\t\t\tOS.gdk_window_get_pointer (window, newX, newY, null);", "-\t\t\t\t\tevent.x = newX [0];", "-\t\t\t\t\tevent.y = newY [0];", "+\t\t\t\t\tif (parent == null) {", "+\t\t\t\t\t\tevent.x = newX [0];", "+\t\t\t\t\t\tevent.y = newY [0];", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tPoint screenCoord = display.map (parent, null, newX [0], newY [0]);", "+\t\t\t\t\t\tevent.x = screenCoord.x;", "+\t\t\t\t\t\tevent.y = screenCoord.y;", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76507202b84e7c3446ead36c59da8756", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "fc8e38f2680acf108bcc8932def45b522b2f2367", "commitAfterChange": "0e9002fe6e242cf1196df7e1db7cca0e1f375209", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": "  void initGdip(boolean draw, boolean fill)", "signatureAfterChange": "  void initGdip(boolean draw, boolean fill)", "diff": ["+\t\tPOINT pt = new POINT ();", "+\t\tOS.GetWindowOrgEx (handle, pt);", "+\t\tif (pt.x != 0 || pt.y != 0) OS.OffsetRgn (hRgn, pt.x, pt.y);"]}], "num": 41320}