{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2dd9556fc182fe578c2b17a9bd18430d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fcc7234782039d5a6d7807d2d5335e2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/Device.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": " public int getDepth ()", "signatureAfterChange": " public int getDepth ()", "diff": ["- */", "-public int getDepth () {", "-\tcheckDevice ();", "-\treturn fScreenDepth;", "+ */", "+public int getDepth () {", "+\tcheckDevice ();\t", "+\tint gdevice = OS.GetMainDevice();", "+\tint[] ptr = new int[1];", "+\tOS.memcpy(ptr, gdevice, 4);", "+\tGDevice device = new GDevice();", "+\tOS.memcpy(device, ptr[0], GDevice.sizeof);", "+\tint depth = OS.GetPixDepth(device.gdPMap);", "+\treturn depth;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ec53d18743a33f79fbc138d14525579", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "c57bbbc354e79f4476be13ddb59b564f33f991b8", "commitAfterChange": "08433acf7c4ed76e9a9f4bfb92f30ccfa1f0fc04", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": " public int internal_new_GC (GCData data)", "signatureAfterChange": " public int internal_new_GC (GCData data)", "diff": ["-\tif (window == 0) window = gcWindow = createOverlayWindow ();", "+\tif (window == 0) {", "+\t\twindow = gcWindow = createOverlayWindow ();", "+\t} else {", "+\t\tint gdevice = OS.GetMainDevice ();", "+\t\tint [] ptr = new int [1];", "+\t\tOS.memcpy (ptr, gdevice, 4);", "+\t\tGDevice device = new GDevice ();", "+\t\tOS.memcpy (device, ptr [0], GDevice.sizeof);", "+\t\tRect rect = new Rect ();\t", "+\t\tOS.SetRect (rect, device.left, device.top, device.right, device.bottom);", "+\t\tOS.SetWindowBounds (window, (short) OS.kWindowStructureRgn, rect);", "+\t}"]}], "num": 42348}