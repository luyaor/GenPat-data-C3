{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "56128ca266ac1dc24b468076ef0e1d3c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d05332c12e59bee2f043fd492832152d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \r public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "\r \r public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tint border = getBorderWidth ();\r", "-\tint width = border * 2, height = border * 2;\r", "+\t\tint border = getBorderWidth ();\r", "+\t\tint width = border * 2, height = border * 2;\r", "+\r", "+\tif ((style & SWT.WRAP) != 0) {\r", "+\t\tint [] args = {\r", "+\t\t\tOS.Pt_ARG_LABEL_TYPE, 0, 0,\t\t// 1\r", "+\t\t\tOS.Pt_ARG_TEXT_FONT, 0, 0,\t\t// 4\r", "+\t\t\tOS.Pt_ARG_LINE_SPACING, 0, 0,\t// 7\r", "+\t\t\tOS.Pt_ARG_MARGIN_WIDTH, 0, 0,\t// 10\r", "+\t\t\tOS.Pt_ARG_MARGIN_HEIGHT, 0, 0,\t// 13\r", "+\t\t\tOS.Pt_ARG_MARGIN_LEFT, 0, 0,\t// 16\r", "+\t\t\tOS.Pt_ARG_MARGIN_RIGHT, 0, 0,\t// 19\r", "+\t\t\tOS.Pt_ARG_MARGIN_TOP, 0, 0,\t\t// 22\r", "+\t\t\tOS.Pt_ARG_MARGIN_BOTTOM, 0, 0,\t// 25\r", "+\t\t};\r", "+\t\tOS.PtGetResources (handle, args.length / 3, args);\r", "+\t\t/* If we are wrapping text, calculate the height based on wHint. */\r", "+\t\tif (args [1] == OS.Pt_Z_STRING) {\r", "+\t\t\tint length = OS.strlen (args [4]);\r", "+\t\t\tbyte [] font = new byte [length + 1];\r", "+\t\t\tOS.memmove (font, args [4], length);\r", "+\t\t\tDisplay display = getDisplay ();\r", "+\t\t\tPhRect_t rect = new PhRect_t ();\r", "+\t\t\tString string = text;\r", "+\t\t\tif (wHint != SWT.DEFAULT) {\r", "+\t\t\t\tstring = display.wrapText (text, font, wHint);\r", "+\t\t\t}\r", "+\t\t\tif (hHint != SWT.DEFAULT) {\r", "+\t\t\t\trect.ul_y = 0;\r", "+\t\t\t\trect.lr_y = (short)(hHint - 1);\r", "+\t\t\t} else {\r", "+\t\t\t\tbyte [] buffer = Converter.wcsToMbcs (null, string, false);\r", "+\t\t\t\tOS.PgExtentMultiText (rect, null, font, buffer, buffer.length, args [7]);\r", "+\t\t\t}\r", "+\t\t\tPhArea_t area = new PhArea_t ();\r", "+\t\t\tOS.PtSetAreaFromWidgetCanvas (handle, rect, area);\r", "+\t\t\tint width = area.size_w;\r", "+\t\t\tint height = area.size_h;\r", "+\t\t\twidth += (args [10] * 2) + args [16] + args [19];\r", "+\t\t\theight += (args [13] * 2) + args [22] + args [25];\r", "+\t\t\treturn new Point (width, height);\r", "+\t\t}\r", "+\t}\r", "+\t\r", "-\twidth = dim.w; height = dim.h;\r", "+\tint width = dim.w, height = dim.h;\r", "+\t\tint [] args = {\r", "+\t\t\tOS.Pt_ARG_MARGIN_WIDTH, 0, 0,\t// 1\r", "+\t\t\tOS.Pt_ARG_MARGIN_HEIGHT, 0, 0,\t// 4\r", "+\t\t\tOS.Pt_ARG_MARGIN_LEFT, 0, 0,\t// 7\r", "+\t\t\tOS.Pt_ARG_MARGIN_RIGHT, 0, 0,\t// 10\r", "+\t\t\tOS.Pt_ARG_MARGIN_TOP, 0, 0,\t\t// 13\r", "+\t\t\tOS.Pt_ARG_MARGIN_BOTTOM, 0, 0,\t// 16\r", "+\t\t};\r", "+\t\tOS.PtGetResources (handle, args.length / 3, args);\r", "-\t\tif (wHint != SWT.DEFAULT) width = area.size_w;\r", "-\t\tif (hHint != SWT.DEFAULT) height = area.size_h;\r", "+\t\tif (wHint != SWT.DEFAULT) {\r", "+\t\t\twidth = area.size_w + (args [1] * 2) + args [7] + args [10];\r", "+\t\t}\r", "+\t\tif (hHint != SWT.DEFAULT) {\r", "+\t\t\theight = area.size_h + (args [4] * 2) + args [13] + args [16];\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "437b62ad02d8ea9edea6025b324d736e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "b8b3d8d333270c82331f79c34684ac5101f04bf4", "commitAfterChange": "f5441d1714ca7f50c8c942b97ca2567450f3ceff", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "diff": ["+\t\t/*", "+\t\t* In a multi-select tree, if the user is collapsing a subtree that", "+\t\t* contains selected items, clear the selection from these items and", "+\t\t* issue a selection event.  Only items that are selected and visible", "+\t\t* are cleared.", "+\t\t*/", "+\t\tboolean fixSelection = false, deselected = false;", "+\t\tif ((style & SWT.MULTI) != 0) {", "+\t\t\tif (lpht.hItem != 0 && (lpht.flags & OS.TVHT_ONITEMBUTTON) != 0) {", "+\t\t\t\tint hSelection = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "+\t\t\t\tif (hSelection != 0) {", "+\t\t\t\t\tTVITEM tvItem = new TVITEM ();", "+\t\t\t\t\ttvItem.mask = OS.TVIF_STATE | OS.TVIF_PARAM;", "+\t\t\t\t\ttvItem.hItem = lpht.hItem;", "+\t\t\t\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "+\t\t\t\t\tif ((tvItem.state & OS.TVIS_EXPANDED) != 0) {", "+\t\t\t\t\t\tfixSelection = true;", "+\t\t\t\t\t\ttvItem.stateMask = OS.TVIS_SELECTED;", "+\t\t\t\t\t\tint hParent = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_PARENT, lpht.hItem);", "+\t\t\t\t\t\tint hLast = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_LASTVISIBLE, lpht.hItem);", "+\t\t\t\t\t\tint hNext = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXTVISIBLE, lpht.hItem);", "+\t\t\t\t\t\twhile (hNext != 0 && hNext != hLast) {", "+\t\t\t\t\t\t\ttvItem.hItem = hNext;", "+\t\t\t\t\t\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "+\t\t\t\t\t\t\tif ((tvItem.state & OS.TVIS_SELECTED) != 0) deselected = true;", "+\t\t\t\t\t\t\ttvItem.state = 0;", "+\t\t\t\t\t\t\tOS.SendMessage (handle, OS.TVM_SETITEM, 0, tvItem);", "+\t\t\t\t\t\t\tif ((hNext = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXTVISIBLE, hNext)) == 0) break;", "+\t\t\t\t\t\t\tif (hParent == OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_PARENT, hNext)) break;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\tif (fixSelection) ignoreDeselect = ignoreSelect = lockSelection = true;", "+\t\tif (fixSelection) ignoreDeselect = ignoreSelect = lockSelection = false;", "+\t\tif (deselected) {", "+\t\t\tTVITEM tvItem = new TVITEM ();", "+\t\t\ttvItem.mask = OS.TVIF_PARAM;", "+\t\t\ttvItem.hItem = lpht.hItem;", "+\t\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "+\t\t\tEvent event = new Event ();", "+\t\t\tevent.item = items [tvItem.lParam];", "+\t\t\tpostEvent (SWT.Selection, event);", "+\t\t}"]}], "num": 2145}