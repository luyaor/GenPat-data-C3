{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3fd0957eace91deeb33b69a0bf8ec0a9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9597a1421ad8ebf310ca9d3ada179755", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "69dda192f297e6da101ddc0c83e03a5e332b59a2", "commitAfterChange": "b3103c9cfd8bc21e24ef79ed4f3a3f2f439d3613", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " public void setText (String string)", "signatureAfterChange": " public void setText (String string)", "diff": ["-\tignoreSelect = true;", "+\t/*", "+\t* Feature in gtk.  When text is set in gtk, separate events are fired for the deletion and ", "+\t* insertion of the text.  This is not wrong, but is inconsistent with other platforms.  The workaround", "+\t* is to block the firing of these events and fire them ourselves in a consistent manner. ", "+\t*/", "+\tOS.g_signal_handlers_block_matched (entryHandle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);", "-\tignoreSelect = false;", "+\tOS.g_signal_handlers_unblock_matched (entryHandle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);", "+\tsendEvent (SWT.Modify);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e56cdc0085fa9440a9e5e3401ea7a3d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "d227a506118c2de93a448ba9902bdded788588dd", "commitAfterChange": "e88d85701eb3f196b632b0da3b6a6a6f8376e5b2", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": "  void gtk_widget_reparent (Control control, long newParent)", "signatureAfterChange": " void gtk_widget_reparent (long widget, long newParent)", "diff": ["-void gtk_widget_reparent (Control control, long /*int*/ newParent) {", "-\tlong /*int*/ widget = control.topHandle ();", "-\tlong /*int*/ oldParent = control.parent.topHandle ();", "-\tgtk_widget_reparent(widget, oldParent, newParent);", "-}", "+void gtk_widget_reparent (long /*int*/ widget, long /*int*/ newParent) {", "+\t//Note, we do not actually call  * 'gtk_widget_reparent(...) as it's deprecated as of gtk 3.14", "+\tOS.gtk_container_remove (OS.gtk_widget_get_parent (widget), widget);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd13a8201914b388ff23acf25b958cc1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "8fcb69bd9ef5f3703415156d7ea495d1528c0bed", "commitAfterChange": "830f06eadee48db7328f257efefef81e6ded0f5e", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 96, "signatureBeforeChange": " \t\t \tpublic void updateWindow(int whichWindow)", "signatureAfterChange": " \t\t \tpublic void updateWindow(int whichWindow)", "diff": ["-\t\tupdateWindow2(whichWindow);", "+\t\tint updateRegion= OS.NewRgn();", "+\t\tOS.GetPortVisibleRegion(OS.GetWindowPort(whichWindow), updateRegion);", "+\t\tOS.EraseRgn(updateRegion);", "+\t\tOS.UpdateControls(whichWindow, updateRegion);\t\t\t", "+\t\tOS.DisposeRgn(updateRegion);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "228253e0400e61c066d0b2fe1a768b79", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "66ba06815f9cd8d1981e6de1b6886e103901bde9", "commitAfterChange": "e55ec02f6620bafd13a57d29a43e4e88da3f51a9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  boolean drawGripper (int x, int y, int width, int height, boolean vertical)", "signatureAfterChange": "  boolean drawGripper (GC gc, int x, int y, int width, int height, boolean vertical)", "diff": ["-boolean drawGripper (int x, int y, int width, int height, boolean vertical) {", "+boolean drawGripper (GC gc, int x, int y, int width, int height, boolean vertical) {", "-\t\tlong /*int*/ cairo = OS.gdk_cairo_create (window);", "-\t\tlong /*int*/ context = OS.gtk_widget_get_style_context(paintHandle);", "-\t\tOS.gtk_render_handle(context, cairo, x, y, width, height);", "-\t\tCairo.cairo_destroy (cairo);", "+\t\tlong /*int*/ context = OS.gtk_widget_get_style_context (paintHandle);", "+\t\tOS.gtk_style_context_save (context);", "+\t\tOS.gtk_style_context_add_class (context, OS.GTK_STYLE_CLASS_PANE_SEPARATOR);", "+\t\tOS.gtk_style_context_set_state (context, OS.GTK_STATE_FLAG_NORMAL);", "+\t\tOS.gtk_render_handle (context, gc.handle, x, y, width, height);", "+\t\tOS.gtk_style_context_restore (context);"]}], "num": 22606}