{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f4734a7dd42768803e6c4b40d0409423", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dea9fba56ceba35c9bdb46b7aa5e350e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Canvas.java", "commitBeforeChange": "98219893e96e27d43665c2c221695c0e23c48d1e", "commitAfterChange": "b442fe081a10b6cf12b9377426105607d8e0a739", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void scroll (int destX, int destY, int x, int y, int width, int height, boolean all)", "signatureAfterChange": " public void scroll (int destX, int destY, int x, int y, int width, int height, boolean all)", "diff": ["-\tGdkRectangle rect = new GdkRectangle ();", "+\t\tGdkRectangle rect = new GdkRectangle ();", "+\t\tGdkRectangle rect = new GdkRectangle ();", "-\t", "+\tif (all) {", "+\t\tControl [] children = _getChildren ();", "+\t\tfor (int i=0; i<children.length; i++) {", "+\t\t\tControl child = children [i];", "+\t\t\tRectangle rect = child.getBounds ();", "+\t\t\tif (Math.min(x + width, rect.x + rect.width) >= Math.max (x, rect.x) && ", "+\t\t\t\tMath.min(y + height, rect.y + rect.height) >= Math.max (y, rect.y)) {", "+\t\t\t\t\tchild.setLocation (rect.x + deltaX, rect.y + deltaY);\t\t\t\t\t", "+\t\t\t}", "+\t\t}", "+\t}\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e08d704361c7c9d5f4bdd0e23babffc6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Canvas.java", "commitBeforeChange": "060dafd8659c6172dae888c79a06bee8479f97cc", "commitAfterChange": "dac4800c8efbce7f1c43645913b07c7017ce3d3e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void scroll (int destX, int destY, int x, int y, int width, int height, boolean all)", "signatureAfterChange": " public void scroll (int destX, int destY, int x, int y, int width, int height, boolean all)", "diff": ["+    if (all) {", "+\t\tControl [] children = _getChildren ();", "+\t\tfor (int i=0; i<children.length; i++) {", "+\t\t\tControl child = children [i];", "+\t\t\tRectangle rect = child.getBounds ();", "+\t\t\tif (Math.min(x + width, rect.x + rect.width) > Math.max (x, rect.x) && ", "+\t\t\t\tMath.min(y + height, rect.y + rect.height) > Math.max (y, rect.y)) {", "+\t\t\t\t\tchild.setLocation (rect.x + deltaX, rect.y + deltaY);", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13cbd932284cca15821cd65e25d66cfe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Canvas.java", "commitBeforeChange": "8c4aab30e72216e23f2c03bdb2b40776fb26240c", "commitAfterChange": "060dafd8659c6172dae888c79a06bee8479f97cc", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void scroll (int destX, int destY, int x, int y, int width, int height, boolean all)", "signatureAfterChange": " public void scroll (int destX, int destY, int x, int y, int width, int height, boolean all)", "diff": ["+\tif (all) {", "+\t\tControl [] children = _getChildren ();", "+\t\tfor (int i=0; i<children.length; i++) {", "+\t\t\tControl child = children [i];", "+\t\t\tRectangle rect = child.getBounds ();", "+\t\t\tif (Math.min(x + width, rect.x + rect.width) > Math.max (x, rect.x) && ", "+\t\t\t\tMath.min(y + height, rect.y + rect.height) > Math.max (y, rect.y)) {", "+\t\t\t\t\tchild.setLocation (rect.x + deltaX, rect.y + deltaY);", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ce6c77257ca961a47f281e6fbf7765c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Canvas.java", "commitBeforeChange": "38e23d067c681e2f6d4eedd990f7acb4e0416bd6", "commitAfterChange": "7b707211bdc588e23e1bb82a94bae0c99005f5c9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void scroll (int destX, int destY, int x, int y, int width, int height, boolean all)", "signatureAfterChange": " public void scroll (int destX, int destY, int x, int y, int width, int height, boolean all)", "diff": ["+\tif (all) {", "+\t\tControl [] children = _getChildren ();", "+\t\tfor (int i=0; i<children.length; i++) {", "+\t\t\tControl child = children [i];", "+\t\t\tRectangle rect = child.getBounds ();", "+\t\t\tif (Math.min(x + width, rect.x + rect.width) > Math.max (x, rect.x) && ", "+\t\t\t\tMath.min(y + height, rect.y + rect.height) > Math.max (y, rect.y)) {", "+\t\t\t\t\tchild.setLocation(rect.x + deltaX, rect.y + deltaY);", "+\t\t\t}", "+\t\t}", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "203cafe201cc7877d88dcab7c38f5bc6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Canvas.java", "commitBeforeChange": "8bd177cbeb23abde04c3e9a9b26ff34ca214ed1b", "commitAfterChange": "8c4aab30e72216e23f2c03bdb2b40776fb26240c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void scroll (int destX, int destY, int x, int y, int width, int height, boolean all)", "signatureAfterChange": " public void scroll (int destX, int destY, int x, int y, int width, int height, boolean all)", "diff": ["-\tRECT rect = new RECT ();", "-\tOS.SetRect (rect, x, y, x + width, y + height);", "+\tRECT lpRect = new RECT ();", "+\tOS.SetRect (lpRect, x, y, x + width, y + height);", "-\tif (all) flags |= OS.SW_SCROLLCHILDREN;", "-\tOS.ScrollWindowEx (handle, deltaX, deltaY, rect, null, 0, null, flags);", "+\t/*", "+\t* Feature in Windows.  If any child in the widget tree partially", "+\t* intersects the scrolling rectangle, Windows moves the child", "+\t* and copies the bits that intersect the scrolling rectangle but", "+\t* does not redraw the child.", "+\t* ", "+\t* Feature in Windows.  When any child in the widget tree does", "+\t* not intersect the scrolling rectangle but the parent does intersect,", "+\t* Windows does not move the child.  This is the documented (but", "+\t* strange) Windows behavior.", "+\t* ", "+\t* The fix is to not use SW_SCROLLCHILDREN and move the children", "+\t* explicitly after scrolling.  ", "+\t*/", "+\t//if (all) flags |= OS.SW_SCROLLCHILDREN;", "+\tOS.ScrollWindowEx (handle, deltaX, deltaY, lpRect, null, 0, null, flags);", "+\tif (all) {", "+\t\tControl [] children = _getChildren ();", "+\t\tfor (int i=0; i<children.length; i++) {", "+\t\t\tControl child = children [i];", "+\t\t\tRectangle rect = child.getBounds ();", "+\t\t\tif (Math.min(x + width, rect.x + rect.width) > Math.max (x, rect.x) && ", "+\t\t\t\tMath.min(y + height, rect.y + rect.height) > Math.max (y, rect.y)) {", "+\t\t\t\t\tchild.setLocation (rect.x + deltaX, rect.y + deltaY);", "+\t\t\t}", "+\t\t}", "+\t}"]}], "num": 11341}