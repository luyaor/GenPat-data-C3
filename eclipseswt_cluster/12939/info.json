{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9bc79830bb4694b7f426f27d5b4f93bd", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3d588e3ac99791618a051d78b601511", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "dfe00aa4cfee79ba1a155e4c692019683638c002", "commitAfterChange": "842605f742f8c29f08cbbd2532df7d2c1a130b3a", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  int processKeyDown (int callData, int arg1, int int2)", "signatureAfterChange": "  int processKeyDown (int callData, int arg1, int int2)", "diff": ["-\t* the space bar, GTK does not issue notification.", "-\t* The fix is to ignore the notification that is sent", "-\t* by GTK and look for the space key.", "+\t* the space bar or default selected using the return key,", "+\t* GTK does not issue notification. The fix is to ignore the", "+\t* notification that is sent by GTK and look for the space key.", "-\tint length = keyEvent.length;", "-\tif (length == 1) {", "-\t\tint string = keyEvent.string;", "-\t\tbyte [] buffer = new byte [length];", "-\t\tOS.memmove (buffer, string, length);", "-\t\tchar [] unicode = Converter.mbcsToWcs (null, buffer);", "-\t\tswitch (unicode [0]) {", "-\t\t\tcase ' ':", "-\t\t\t\tif (OS.GTK_CLIST_FOCUS_ROW (handle) != -1) {", "-\t\t\t\t\tpostEvent (SWT.Selection);", "-\t\t\t\t}", "-\t\t\t\tbreak;", "+\tint key = keyEvent.keyval;", "+\tswitch (key) {", "+\t\tcase OS.GDK_Return:", "+\t\tcase OS.GDK_KP_Enter:", "+\t\tcase OS.GDK_space: {", "+\t\t\tif (OS.GTK_CLIST_FOCUS_ROW (handle) != -1) {", "+\t\t\t\tint type = key == OS.GDK_space ? SWT.Selection : SWT.DefaultSelection;", "+\t\t\t\tpostEvent (type);", "+\t\t\t}", "+\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e5746b4dd1a6f107a4e91864e46a761", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "dfe00aa4cfee79ba1a155e4c692019683638c002", "commitAfterChange": "842605f742f8c29f08cbbd2532df7d2c1a130b3a", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "  int processKeyDown (int callData, int arg1, int int2)", "signatureAfterChange": "  int processKeyDown (int callData, int arg1, int int2)", "diff": ["-\t* the space bar, GTK does not issue notification.", "-\t* The fix is to ignore the notification that is sent", "-\t* by GTK and look for the space key.", "+\t* the space bar or default selected using the return key,", "+\t* GTK does not issue notification. The fix is to ignore the", "+\t* notification that is sent by GTK and look for the space key.", "-\tint length = keyEvent.length;", "-\tif (length == 1) {", "-\t\tint string = keyEvent.string;", "-\t\tbyte [] buffer = new byte [length];", "-\t\tOS.memmove (buffer, string, length);", "-\t\tchar [] unicode = Converter.mbcsToWcs (null, buffer);", "-\t\tswitch (unicode [0]) {", "-\t\t\tcase ' ':", "-\t\t\t\tint focus_row = OS.GTK_CLIST_FOCUS_ROW (handle);", "-\t\t\t\tif (focus_row != -1) {", "-\t\t\t\t\tEvent event = new Event ();", "-\t\t\t\t\tevent.item = items [focus_row];", "-\t\t\t\t\tpostEvent (SWT.Selection, event);", "-\t\t\t\t}", "-\t\t\t\tbreak;", "+\tint key = keyEvent.keyval;", "+\tswitch (key) {", "+\t\tcase OS.GDK_Return:", "+\t\tcase OS.GDK_KP_Enter:", "+\t\tcase OS.GDK_space: {", "+\t\t\tint focus_row = OS.GTK_CLIST_FOCUS_ROW (handle);", "+\t\t\tif (focus_row != -1) {", "+\t\t\t\tEvent event = new Event ();", "+\t\t\t\tevent.item = items [focus_row];", "+\t\t\t\tint type = key == OS.GDK_space ? SWT.Selection : SWT.DefaultSelection;", "+\t\t\t\tpostEvent (type, event);", "+\t\t\t}", "+\t\t\tbreak;"]}], "num": 12939}