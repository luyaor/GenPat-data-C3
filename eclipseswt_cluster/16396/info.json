{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "353c6a148af8b5424e1698088af5fcec", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cfeefb92497a9b5b786ef8357461b75", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "364bc551573f7c1c8e6f7362c22d320d70d40f34", "commitAfterChange": "d4ba4ba3092d3f6e9ac539271bf860a2604431a5", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  void destroyItem (TreeItem item, int hItem)", "signatureAfterChange": "  void destroyItem (TreeItem item, int hItem)", "diff": ["+\t* ", "+\t* NOTE: This fix is not necessary when double buffering and", "+\t* can cause problems for virtual trees due to the call to", "+\t* UpdateWindow() that flushes outstanding WM_PAINT events,", "+\t* allowing application code to add or remove items.", "-\tif (drawCount == 0 && OS.IsWindowVisible (handle)) {", "-\t\tRECT rect = new RECT ();", "-\t\trect.left = hItem;", "-\t\tfixRedraw = OS.SendMessage (handle, OS.TVM_GETITEMRECT, 0, rect) == 0;", "+\tif ((style & SWT.DOUBLE_BUFFERED) == 0) {", "+\t\tif (drawCount == 0 && OS.IsWindowVisible (handle)) {", "+\t\t\tRECT rect = new RECT ();", "+\t\t\trect.left = hItem;", "+\t\t\tfixRedraw = OS.SendMessage (handle, OS.TVM_GETITEMRECT, 0, rect) == 0;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58daded031983e625996e25a7aa5e038", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "4e33ab6a6b184887de2c99db0f551ffeb18ad0f6", "commitAfterChange": "8edb26f7765e14b1b7eb8e23e69c89af78088ea8", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  void createItem (TreeItem item, int hParent, int hInsertAfter)", "signatureAfterChange": "  void createItem (TreeItem item, int hParent, int hInsertAfter)", "diff": ["-\t* indicator.  The fix is to detect this case and force a redraw.", "+\t* indicator.  The fix is to detect the case when the first", "+\t* child is added to a visible parent item and redraw the parent.", "-\tif (hChild == 0 || OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hChild) != 0) {", "-\t\treturn;", "-\t}", "-\tRECT rect = new RECT ();", "-\trect.left = hParent;", "-\tif (OS.SendMessage (handle, OS.TVM_GETITEMRECT, 0, rect) != 0) {", "-\t\tOS.InvalidateRect (handle, rect, false);", "+\tif (hChild != 0 && OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hChild) == 0) {", "+\t\tRECT rect = new RECT ();", "+\t\trect.left = hParent;", "+\t\tif (OS.SendMessage (handle, OS.TVM_GETITEMRECT, 0, rect) != 0) {", "+\t\t\tOS.InvalidateRect (handle, rect, true);", "+\t\t}"]}], "num": 16396}