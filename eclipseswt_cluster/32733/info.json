{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "712e117fcf32c6ca090eadc89d34ba36", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "389ff78e2f899be96064c5110fa00a20", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "635a9e5d0a5f495ec272194dbb750eddc745876f", "commitAfterChange": "e83d77b7ddccf5500d06ea30a64ce0d090ac4b10", "methodNumberBeforeChange": 254, "methodNumberAfterChange": 105, "signatureBeforeChange": " int getBottomIndex()", "signatureAfterChange": " int getBottomIndex()", "diff": ["-\tint lineCount = 1;", "-\t", "-\tif (lineHeight != 0) {", "-\t\t// calculate the number of lines that are fully visible", "-\t\tint partialTopLineHeight = topIndex * lineHeight - verticalScrollOffset;", "-\t\tlineCount = (getClientArea().height - partialTopLineHeight) / lineHeight;", "+\tint bottomIndex;", "+\tif (isFixedLineHeight()) {", "+\t\tint lineCount = 1;", "+\t\tint lineHeight = renderer.getLineHeight();", "+\t\tif (lineHeight != 0) {", "+\t\t\t// calculate the number of lines that are fully visible", "+\t\t\tint partialTopLineHeight = topIndex * lineHeight - getVerticalScrollOffset();", "+\t\t\tlineCount = (getClientArea().height - partialTopLineHeight) / lineHeight;", "+\t\t}", "+\t\tbottomIndex = Math.min(content.getLineCount() - 1, topIndex + Math.max(0, lineCount - 1));", "+\t} else {", "+\t\tint clientAreaHeight = getClientArea().height - bottomMargin;", "+\t\tbottomIndex = getLineIndex(clientAreaHeight);", "+\t\tif (bottomIndex > 0) {", "+\t\t\tint linePixel = getLinePixel(bottomIndex);", "+\t\t\tint lineHeight = renderer.getLineHeight(bottomIndex);", "+\t\t\tif (linePixel + lineHeight > clientAreaHeight) {", "+\t\t\t\tbottomIndex--;", "+\t\t\t}", "+\t\t}", "-\treturn Math.min(content.getLineCount() - 1, topIndex + Math.max(0, lineCount - 1));", "+\treturn bottomIndex;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7598791142ea54b0773c82e918142b80", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Scrollable.java", "commitBeforeChange": "7a26d49f7fcf65bf8625393f1af4a67b482a7c35", "commitAfterChange": "c204154909a9d6903f66ea2c97f8cb0cb5eaa814", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": " public Rectangle getClientArea ()", "signatureAfterChange": " public Rectangle getClientArea ()", "diff": ["-\tcheckWidget();", "-\t/* FIXME.  Why do we do it here, in the first place?  Scrollable is abstract... */", "-\treturn new Rectangle (0, 0, 10, 10);", "+\tcheckWidget ();", "+\t//FIXME - List, Table, Tree, ...", "+\tint clientHandle = clientHandle ();", "+\tint width = OS.GTK_WIDGET_WIDTH (clientHandle);", "+\tint height = OS.GTK_WIDGET_HEIGHT (clientHandle);", "+\tif ((state & CANVAS) != 0) {", "+\t\treturn new Rectangle (0, 0, width, height);", "+\t}", "+\tint x = OS.GTK_WIDGET_X (clientHandle);", "+\tint y = OS.GTK_WIDGET_Y (clientHandle);", "+\treturn new Rectangle (x, y, width, height);"]}], "num": 32733}