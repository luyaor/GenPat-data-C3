{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e69f0a0f43caa0e4935ac2c64a6eb55e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f273c32a2ab762783c4d1d2079de1f63", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "9cd26d5223bd03ea08324197722fd8b6203b707d", "commitAfterChange": "4b95c7f69273e725cd95810021784658917b8481", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 38, "signatureBeforeChange": " char stripMnemonic(char[] text)", "signatureAfterChange": " char fixMnemonic(char[] text)", "diff": ["+}", "+char fixMnemonic(char[] text) {", "+\tchar mnemonic=0;", "+\tint i=0, j=0;", "+\twhile (i < text.length) {", "+\t\tif ((text [j++] = text [i++]) == '&') {", "+\t\t\tif (i == text.length) {continue;}", "+\t\t\tif (text [i] == '&') {i++; continue;}", "+\t\t\tif (mnemonic == 0) mnemonic = text [i];", "+\t\t\tj--;", "+\t\t}", "+\t}", "+\twhile (j < text.length) text [j++] = 0;", "+\treturn mnemonic;", "-}", "-char stripMnemonic(char[] text) {", "-\tchar mnemonic=0;", "-\tint i=0, j=0;", "-\twhile (i < text.length) {", "-\t\tif ((text [j++] = text [i++]) == '&') {", "-\t\t\tif (i == text.length) {continue;}", "-\t\t\tif (text [i] == '&') {i++; continue;}", "-\t\t\tif (mnemonic == 0) mnemonic = text [i];", "-\t\t\tj--;", "-\t\t}", "-\twhile (j < text.length) text [j++] = 0;", "-\treturn mnemonic;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66c0c7212740dedca9c77c3dca047c33", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "fe9cf8b69b05605c0699efe7aea722d3e2396198", "commitAfterChange": "a76fbcdb2bea80d2aa22d622558bd4081d9e971a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 21, "signatureBeforeChange": " static String stripMnemonics (String string)", "signatureAfterChange": "  char fixMnemonic (char [] buffer)", "diff": ["- */", "-static String stripMnemonics (String string) {", "-\tchar [] text = new char [string.length ()];", "-\tstring.getChars (0, text.length, text, 0);", "-\tint j = 0;", "-\tfor (int i = 0; i < text.length;) {", "-\t\tif ((text[j++] = text[i++]) == Mnemonic) {", "-\t\t\tif (i != text.length) {", "-\t\t\t\tif (text[i] == Mnemonic) i++; else j--;", "-\t\t\t}", "-\t\t}", "-\t}", "-\treturn new String(text, 0, j);", "+char fixMnemonic (char [] buffer) {", "+\tint i=0, j=0;", "+\tchar mnemonic=0;", "+\twhile (i < buffer.length) {", "+\t\tif ((buffer [j++] = buffer [i++]) == '&') {", "+\t\t\tif (i == buffer.length) {continue;}", "+\t\t\tif (buffer [i] == '&') {i++; continue;}", "+\t\t\tif (mnemonic == 0) mnemonic = buffer [i];", "+\t\t\tj--;", "+\t\t}", "+\t}", "+\twhile (j < buffer.length) buffer [j++] = 0;", "+\treturn mnemonic;", "+}"]}], "num": 63371}