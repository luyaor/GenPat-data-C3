{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b7354b7ca5e36cb63bac3450f43f23b1", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bfdf851b22370aab1398bde7de04d6f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "80cbdf5537b3141c180b026fdf21ef20cbe166d3", "commitAfterChange": "58edc7e135918e5036ad9a0c3b3f1152abcd40f2", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " public void setExpanded (boolean value)", "signatureAfterChange": " public void setExpanded (boolean value)", "diff": ["+", "+\t\tif (availableIndex != parent.availableItems.length - 1) {", "+\t\t\t/* the receiver is not the last available item */", "+\t\t\tRectangle clientArea = parent.getClientArea ();", "+\t\t\tint y = parent.getItemY (this) + parent.itemHeight;", "+\t\t\tif (0 < y && y < clientArea.height) {", "+\t\t\t\tparent.update ();", "+\t\t\t\tGC gc = new GC (parent);", "+\t\t\t\tgc.copyArea (", "+\t\t\t\t\t0, y,", "+\t\t\t\t\tclientArea.width, clientArea.height - y,", "+\t\t\t\t\t0, y + ((descendentsCount - 1) * parent.itemHeight));\t\t\t\t", "+\t\t\t\tgc.dispose ();", "+\t\t\t}", "+\t\t}", "+", "-\t\tint previousNextAvailableIndex = availableIndex + descendentsCount;", "-\t\tif (previousNextAvailableIndex != parent.availableItems.length) {", "-\t\t\t/* the receiver was not the last available item before being expanded */", "-\t\t\tRectangle clientArea = parent.getClientArea ();", "-\t\t\tint y = parent.getItemY (parent.availableItems [availableIndex + 1]);", "-\t\t\tparent.update ();", "-\t\t\tGC gc = new GC (parent);", "-\t\t\tgc.copyArea (", "-\t\t\t\t0, y,", "-\t\t\t\tclientArea.width, clientArea.height - y,", "-\t\t\t\t0, y + ((descendentsCount - 1) * parent.itemHeight));\t\t\t\t", "-\t\t\tgc.dispose ();", "-\t\t}", "-\t\tint oldAvailableLength = parent.availableItems.length;", "-\t\tint itemY = parent.getItemY (this);", "-\t\tint startY = itemY + descendents.length * parent.itemHeight;", "-\t\tint imageHeight = Math.max (0, clientArea.height - startY);", "-\t\tImage image = null;", "-\t\tGC gc = null;", "-\t\tif (imageHeight > 0) {", "-\t\t\timage = new Image (display, clientArea.width, imageHeight);", "-\t\t\tgc = new GC (parent);", "-\t\t\tgc.copyArea (image, 0, startY);", "-\t\t}", "+", "+\t\tint y = parent.getItemY (this) + parent.itemHeight;", "+\t\tint startY = y + (descendents.length - 1) * parent.itemHeight;", "+\t\tparent.update ();", "+\t\tGC gc = new GC (parent);", "+\t\tgc.copyArea (0, startY, clientArea.width, clientArea.height - startY, 0, y);", "+\t\tgc.dispose ();", "+\t\tint redrawY = clientArea.height - startY + y;", "+\t\tparent.redraw (0, redrawY, clientArea.width, clientArea.height - redrawY, false);", "+", "+", "-\t\titemY = parent.getItemY (this);", "-\t\tif (image != null) {", "-\t\t\tgc.drawImage (image, 0, itemY + parent.itemHeight);", "-\t\t\timage.dispose ();", "-\t\t\tgc.dispose ();", "-\t\t}", "-\t\tint drawY = itemY + parent.itemHeight;", "-\t\tparent.redraw (0, drawY, clientArea.width, clientArea.height - drawY, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "979f8dfe0a01e7771b6a536ec0120f71", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/WrappedContent.java", "commitBeforeChange": "5544ce1d748561f71c4f1d1997c431f82e5c4c86", "commitAfterChange": "24e0049851c0d0a09cb9f25e5892d112e2936fed", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 20, "signatureBeforeChange": " private int wrapLineRange(int startLine, int endLine, int visualLineIndex, int width)", "signatureAfterChange": " private int wrapLineRange(int startLine, int endLine, int visualLineIndex, int width)", "diff": ["-    GC gc = renderer.getGC();", "-\tint numChars = Math.max(1, width / gc.getFontMetrics().getAverageCharWidth());", "-", "-", "-\t\tStyleRange[] styles = null;", "-\t\tint startOffset = 0;", "-\t\tint startX = 0;", "-\t\t\t\t", "-\t\tif (event != null) {", "-\t\t\tstyles = renderer.filterLineStyles(event.styles);", "+\t\tTextLayout layout = renderer.getTextLayout(line, lineOffset, event);", "+\t\tlayout.setWidth(Math.max(1, width));", "+\t\tint lineCount = layout.getLineCount();", "+\t\tfor (int j = 0; j < lineCount; j++) {", "+\t\t\tPoint lineOffsets = layout.getLineOffsets(j);", "+\t\t\tsetVisualLine(visualLineIndex++, lineOffset + lineOffsets.x, lineOffsets.y - lineOffsets.x + 1);", "-\t\twhile (startOffset < lineLength) {\t", "-\t\t    int[] result = wrapLine(line, lineOffset, startOffset, startX, width, numChars, styles, gc);", "-", "-\t\t\tsetVisualLine(visualLineIndex, lineOffset + startOffset, result[WRAP_LINE_LENGTH]);", "-\t\t\tstartOffset += result[WRAP_LINE_LENGTH];", "-\t\t\tstartX += result[WRAP_LINE_WIDTH];", "-\t\t\tvisualLineIndex++;", "-\t\t}", "+\t\trenderer.disposeTextLayout(layout, event); ", "-\trenderer.disposeGC(gc);"]}], "num": 46038}