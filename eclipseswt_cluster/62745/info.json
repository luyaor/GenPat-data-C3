{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "902c4360ab49647195a086ae0196bfb3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6f4a0dfede3cb7ebec72a9a8c60d030", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Region.java", "commitBeforeChange": "df55805e4a74ab0fc8f545a1792d755c95a4e419", "commitAfterChange": "b178ded274cefa13fff8fc6fb8115ee14a844dc8", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void subtract (int[] pointArray)", "signatureAfterChange": " public void subtract (int[] pointArray)", "diff": ["-\tlong /*int*/ polyRgn = OS.gdk_region_polygon(pointArray, pointArray.length / 2, OS.GDK_EVEN_ODD_RULE);", "-\tOS.gdk_region_subtract(handle, polyRgn);", "-\tOS.gdk_region_destroy(polyRgn);", "+\tif (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "+\t\t long /*ing*/ cairo = OS.gdk_cairo_create(handle);", "+\t\t int count = pointArray.length / 2;", "+\t\t if (count == 0) return;", "+\t\t Cairo.cairo_move_to(cairo, pointArray[0], pointArray[1]);", "+\t\t for (int i=1,j=2; i<count; i++,j+=2) {", "+\t\t\t Cairo.cairo_move_to(cairo, pointArray[j]+0.5, pointArray[j+1]+0.5);", "+\t\t }", "+\t\t Cairo.cairo_close_path(cairo);", "+\t\t Cairo.cairo_set_fill_rule(cairo, Cairo.CAIRO_FILL_RULE_EVEN_ODD);", "+\t\t Cairo.cairo_fill(cairo);", "+\t\t long /*ing*/ surface = Cairo.cairo_get_target(cairo);", "+\t\t long /*int*/ polyRgn = OS.gdk_cairo_region_create_from_surface(surface);", "+\t\t Cairo.cairo_region_subtract(handle, polyRgn);", "+\t\t Cairo.cairo_destroy(cairo);", "+\t } else {", "+\t\tlong /*int*/ polyRgn = OS.gdk_region_polygon(pointArray, pointArray.length / 2, OS.GDK_EVEN_ODD_RULE);", "+\t\tOS.gdk_region_subtract(handle, polyRgn);", "+\t\tOS.gdk_region_destroy(polyRgn);", "+\t }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55ed234d5bf7c730cdc4d4706450f251", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "df55805e4a74ab0fc8f545a1792d755c95a4e419", "commitAfterChange": "b178ded274cefa13fff8fc6fb8115ee14a844dc8", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  long convertRgn(long rgn, double[] matrix)", "signatureAfterChange": "  long convertRgn(long rgn, double[] matrix)", "diff": ["-\tlong /*int*/ newRgn = OS.gdk_region_new();", "+\tlong /*int*/ newRgn = cairo_region_create ();", "-\tOS.gdk_region_get_rectangles(rgn, rects, nRects);", "+\tcairo_region_get_rectangles (rgn, rects, nRects);", "-\t\tlong /*int*/ polyRgn = OS.gdk_region_polygon(pointArray, pointArray.length / 2, OS.GDK_EVEN_ODD_RULE);", "-\t\tOS.gdk_region_union(newRgn, polyRgn);", "-\t\tOS.gdk_region_destroy(polyRgn);", "+\t\t if (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "+\t\t\t long /*ing*/ cairo = OS.gdk_cairo_create(newRgn);", "+\t\t\t int count = pointArray.length / 2;", "+\t\t\t if (count == 0) return 0;", "+\t\t\t Cairo.cairo_move_to(cairo, pointArray[0], pointArray[1]);", "+\t\t\t for (int n=1,j=2; n<count; n++,j+=2) {", "+\t\t\t\t Cairo.cairo_move_to(cairo, pointArray[j]+0.5, pointArray[j+1]+0.5);", "+\t\t\t }", "+\t\t\t Cairo.cairo_close_path(cairo);", "+\t\t\t Cairo.cairo_set_fill_rule(cairo, Cairo.CAIRO_FILL_RULE_EVEN_ODD);", "+\t\t\t Cairo.cairo_fill(cairo);", "+\t\t\t long /*ing*/ surface = Cairo.cairo_get_target(cairo);", "+\t\t\t long /*int*/ polyRgn = OS.gdk_cairo_region_create_from_surface(surface);", "+\t\t\t Cairo.cairo_region_union(newRgn, polyRgn);", "+\t\t\t Cairo.cairo_destroy(cairo);", "+\t\t } else {", "+\t\t\tlong /*int*/ polyRgn = OS.gdk_region_polygon(pointArray, pointArray.length / 2, OS.GDK_EVEN_ODD_RULE);", "+\t\t\tOS.gdk_region_union(newRgn, polyRgn);", "+\t\t\tOS.gdk_region_destroy(polyRgn);", "+\t\t }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9935bbf5d6fa4ec8f69d60a3ef6dfdc8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Region.java", "commitBeforeChange": "df55805e4a74ab0fc8f545a1792d755c95a4e419", "commitAfterChange": "b178ded274cefa13fff8fc6fb8115ee14a844dc8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void add (int[] pointArray)", "signatureAfterChange": " public void add (int[] pointArray)", "diff": ["-\tlong /*int*/ polyRgn = OS.gdk_region_polygon(pointArray, pointArray.length / 2, OS.GDK_EVEN_ODD_RULE);", "-\tOS.gdk_region_union(handle, polyRgn);", "-\tOS.gdk_region_destroy(polyRgn);", "+\t if (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "+\t\t long /*ing*/ cairo = OS.gdk_cairo_create(handle);", "+\t\t int count = pointArray.length / 2;", "+\t\t if (count == 0) return;", "+\t\t Cairo.cairo_move_to(cairo, pointArray[0], pointArray[1]);", "+\t\t for (int i=1,j=2; i<count; i++,j+=2) {", "+\t\t\t Cairo.cairo_move_to(cairo, pointArray[j]+0.5, pointArray[j+1]+0.5);", "+\t\t }", "+\t\t Cairo.cairo_close_path(cairo);", "+\t\t Cairo.cairo_set_fill_rule(cairo, Cairo.CAIRO_FILL_RULE_EVEN_ODD);", "+\t\t Cairo.cairo_fill(cairo);", "+\t\t long /*ing*/ surface = Cairo.cairo_get_target(cairo);", "+\t\t long /*int*/ polyRgn = OS.gdk_cairo_region_create_from_surface(surface);", "+\t\t Cairo.cairo_region_union (handle, polyRgn);", "+\t\t Cairo.cairo_destroy(cairo);", "+\t } else {", "+\t\t long /*int*/ polyRgn = OS.gdk_region_polygon(pointArray, pointArray.length / 2, OS.GDK_EVEN_ODD_RULE);", "+\t\t\tOS.gdk_region_union(handle, polyRgn);", "+\t\t\tOS.gdk_region_destroy(polyRgn);", "+\t }", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb0aa3f7448dc97ee99dc7a9fea41d66", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "bd2766fbbc1833bd27095dbb70acd67cae7b7651", "commitAfterChange": "5f4db6cac20e7848d08e2ea1bbe5bd403d3937b3", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  void init(int width, int height)", "signatureAfterChange": "  void init(int width, int height)", "diff": ["-\t\tsurface = Cairo.cairo_image_surface_create(Cairo.CAIRO_FORMAT_RGB24, width, height);", "+\t\tif (OS.GTK_VERSION >= OS.VERSION(2, 22, 0)) {", "+\t\t\tsurface = OS.gdk_window_create_similar_surface(OS.GDK_ROOT_PARENT(), Cairo.CAIRO_CONTENT_COLOR, width, height);", "+\t\t} else {", "+\t\t\tint /*long*/ xDisplay = OS.GDK_DISPLAY();", "+\t\t\tint /*long*/ xDrawable = OS.GDK_PIXMAP_XID(OS.GDK_ROOT_PARENT());", "+\t\t\tint /*long*/ xVisual = OS.gdk_x11_visual_get_xvisual(OS.gdk_visual_get_system());", "+\t\t\tint /*long*/ rootSurface = Cairo.cairo_xlib_surface_create(xDisplay, xDrawable, xVisual, 1, 1);", "+\t\t\tif (rootSurface == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\t\tsurface = Cairo.cairo_surface_create_similar(rootSurface, Cairo.CAIRO_CONTENT_COLOR, width, height);", "+\t\t\tCairo.cairo_surface_destroy(rootSurface);", "+\t\t}", "-\t\tint stride = Cairo.cairo_image_surface_get_stride(surface);", "-\t\tint /*long*/ data = Cairo.cairo_image_surface_get_data(surface);", "-\t\tOS.memset(data, 0xff, stride * height);", "+\t\tint /*long*/ cairo = Cairo.cairo_create(surface);", "+\t\tif (cairo == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\tCairo.cairo_set_source_rgb(cairo, 1, 1, 1);", "+\t\tCairo.cairo_rectangle(cairo, 0, 0, width, height);", "+\t\tCairo.cairo_fill(cairo);", "+\t\tCairo.cairo_destroy(cairo);"]}], "num": 62745}