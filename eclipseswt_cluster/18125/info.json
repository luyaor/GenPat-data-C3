{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eb55eaa62a82a969e5a4a911e5e4366e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "151209f7fdc769ec203bc8a5509ce04a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "c63ca636edfbea4cd55ccc07da414186be375ce0", "commitAfterChange": "e38d4aec3f79c42ea6666a7a37c026187a8aa6ea", "methodNumberBeforeChange": 121, "methodNumberAfterChange": 123, "signatureBeforeChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "diff": ["+\t}", "+\tif (backgroundImage != null) {", "+\t\tGC gc = null;", "+\t\tint paintDC = 0;", "+\t\tPAINTSTRUCT ps = new PAINTSTRUCT ();", "+\t\tif (hooks (SWT.Paint)) {", "+\t\t\tGCData data = new GCData ();", "+\t\t\tdata.ps = ps;", "+\t\t\tdata.hwnd = handle;", "+\t\t\tgc = GC.win32_new (this, data);", "+\t\t\tpaintDC = gc.handle;", "+\t\t} else {", "+\t\t\tpaintDC = OS.BeginPaint (handle, ps);", "+\t\t}", "+", "+\t\t//TODO - only double buffer the damage", "+//\t\tint x = ps.left, y = ps.top;", "+//\t\tint width = ps.right - ps.left;", "+//\t\tint height = ps.bottom - ps.top;", "+\t\tRECT rect = new RECT ();", "+\t\tOS.GetClientRect (handle, rect);", "+\t\tint x = rect.left, y = rect.top;", "+\t\tint width = rect.right - rect.left;", "+\t\tint height = rect.bottom - rect.top;", "+", "+\t\tint hDC = OS.CreateCompatibleDC (paintDC);", "+\t\tint hBitmap = OS.CreateCompatibleBitmap (paintDC, width, height);", "+\t\tint hOldBitmap = OS.SelectObject (hDC, hBitmap);", "+\t\tfillBackground (hDC, backgroundImage, rect);", "+\t\tint code = callWindowProc (handle, OS.WM_PAINT, hDC, 0);", "+\t\tOS.BitBlt (paintDC, x, y, width, height, hDC, 0, 0, OS.SRCCOPY);", "+\t\tOS.SelectObject (hDC, hOldBitmap);", "+\t\tOS.DeleteObject (hBitmap);", "+\t\tOS.DeleteObject (hDC);", "+\t\tif (hooks (SWT.Paint)) {", "+\t\t\tEvent event = new Event ();", "+\t\t\tevent.gc = gc;", "+\t\t\tevent.x = ps.left;", "+\t\t\tevent.y = ps.top;", "+\t\t\tevent.width = ps.right - ps.left;", "+\t\t\tevent.height = ps.bottom - ps.top;", "+\t\t\tsendEvent (SWT.Paint, event);", "+\t\t\t// widget could be disposed at this point", "+\t\t\tevent.gc = null;", "+\t\t\tgc.dispose ();", "+\t\t} else {", "+\t\t\tOS.EndPaint (handle, ps);", "+\t\t}", "+\t\treturn new LRESULT (code);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "077b5212701d19d40401ff9a3916ed86", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "93edbf9a37454e1a7d3dd3384a4625155d37717d", "commitAfterChange": "267407a8dd2a3c199a181934e5b56e8dc6cfea99", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 128, "signatureBeforeChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "diff": ["+\tif ((style & SWT.DOUBLE_BUFFERED) != 0) {", "+\t\tint bits = OS.SendMessage (handle, OS.LVM_GETEXTENDEDLISTVIEWSTYLE, 0, 0);", "+\t\tif ((bits & OS.LVS_EX_DOUBLEBUFFER) == 0) {", "+\t\t\tGC gc = null;", "+\t\t\tint paintDC = 0;", "+\t\t\tPAINTSTRUCT ps = new PAINTSTRUCT ();", "+\t\t\tif (hooks (SWT.Paint)) {", "+\t\t\t\tGCData data = new GCData ();", "+\t\t\t\tdata.ps = ps;", "+\t\t\t\tdata.hwnd = handle;", "+\t\t\t\tgc = GC.win32_new (this, data);", "+\t\t\t\tpaintDC = gc.handle;", "+\t\t\t} else {", "+\t\t\t\tpaintDC = OS.BeginPaint (handle, ps);", "+\t\t\t}", "+\t\t\t", "+\t\t\t//TODO - only double buffer the damage", "+//\t\t\tint x = ps.left, y = ps.top;", "+//\t\t\tint width = ps.right - ps.left;", "+//\t\t\tint height = ps.bottom - ps.top;", "+\t\t\tforceResize ();", "+\t\t\tRECT rect = new RECT ();", "+\t\t\tOS.GetClientRect (handle, rect);", "+\t\t\tint x = rect.left, y = rect.top;", "+\t\t\tint width = rect.right - rect.left;", "+\t\t\tint height = rect.bottom - rect.top;", "+\t\t\t", "+\t\t\tint hDC = OS.CreateCompatibleDC (paintDC);", "+\t\t\tint hBitmap = OS.CreateCompatibleBitmap (paintDC, width, height);", "+\t\t\tint hOldBitmap = OS.SelectObject (hDC, hBitmap);", "+\t\t\tint code = callWindowProc (handle, OS.WM_PAINT, hDC, 0);", "+\t\t\tOS.BitBlt (paintDC, x, y, width, height, hDC, 0, 0, OS.SRCCOPY);", "+\t\t\tOS.SelectObject (hDC, hOldBitmap);", "+\t\t\tOS.DeleteObject (hBitmap);", "+\t\t\tOS.DeleteObject (hDC);", "+\t\t\tif (hooks (SWT.Paint)) {", "+\t\t\t\tEvent event = new Event ();", "+\t\t\t\tevent.gc = gc;", "+\t\t\t\tevent.x = ps.left;", "+\t\t\t\tevent.y = ps.top;", "+\t\t\t\tevent.width = ps.right - ps.left;", "+\t\t\t\tevent.height = ps.bottom - ps.top;", "+\t\t\t\tsendEvent (SWT.Paint, event);", "+\t\t\t\t// widget could be disposed at this point", "+\t\t\t\tevent.gc = null;", "+\t\t\t\tgc.dispose ();", "+\t\t\t} else {", "+\t\t\t\tOS.EndPaint (handle, ps);", "+\t\t\t}", "+\t\t\treturn new LRESULT (code);", "+\t\t}", "+\t}"]}], "num": 18125}