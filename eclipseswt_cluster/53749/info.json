{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1a4681dc6320490c30b137bd33b67944", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f147252061bb1c4381b6d21cafca18e5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "f9b2da66a3aa86a16bf7c87de7bf57c3a591dc41", "commitAfterChange": "ab3a0e2212badb4230b4950583046c2765ca9b1b", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 51, "signatureBeforeChange": " \r private void onResize()", "signatureAfterChange": " \r private void onResize()", "diff": ["-\r", "+\t\r", "+\tif (layoutItems()) {\r", "+\t\tredrawTabArea(-1);\r", "+\t}\r", "+\t\r", "-\tif (oldArea == null || oldArea.width == 0 || oldArea.height == 0) {\r", "-\t\tlayoutItems();\r", "+\tif (oldArea == null) {\r", "-\t\tif (onBottom && oldArea.height != area.height){\r", "-\t\t\t// move tabs up or down if tabs on bottom\r", "-\t\t\tlayoutItems();\r", "+\t\tif (onBottom && area.height != oldArea.height) {\r", "-\t\t\tint width = 0;\r", "-\t\t\tif (oldArea.width < area.width) {\r", "-\t\t\t\twidth = area.width - oldArea.width + borderRight;\r", "-\t\t\t} else if (oldArea.width > area.width) {\r", "-\t\t\t\twidth = borderRight;\t\t\t\r", "-\t\t\t}\r", "-\t\t\tredraw(area.x + area.width - width, area.y, width, area.height, false);\r", "-\t\t\t\r", "-\t\t\tint height = 0;\r", "-\t\t\tif (oldArea.height < area.height) {\r", "-\t\t\t\theight = area.height - oldArea.height + borderBottom;\t\t\r", "-\t\t\t}\r", "-\t\t\tif (oldArea.height > area.height) {\r", "-\t\t\t\theight = borderBottom;\t\t\r", "-\t\t\t}\r", "-\t\t\tredraw(area.x, area.y + area.height - height, area.width, height, false);\t\r", "-\t\t\r", "-\t\t\tif (oldArea.width != area.width) {\r", "-\t\t\t\t// resize the widths so that all tabs are visible\r", "-\t\t\t\tlayoutItems();\r", "-\t\t\t\tredrawTabArea(-1);\r", "-\t\t\t}\r", "+\t\t\tint x1 = Math.min(area.width, oldArea.width);\r", "+\t\t\tif (area.width != oldArea.width) x1 -= 10;\r", "+\t\t\tint y1 = Math.min(area.height, oldArea.height);\r", "+\t\t\tif (area.height != oldArea.height) y1 -= 10;\r", "+\t\t\tint x2 = Math.max(area.width, oldArea.width);\r", "+\t\t\tint y2 = Math.max(area.height, oldArea.height);\t\t\r", "+\t\t\tredraw(0, y1, x2 + 10, y2 - y1, false);\r", "+\t\t\tredraw(x1, 0, x2 - x1, y2, false);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6dc6a3dcf751064f1e3c0b312af0b93", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "e3ffa03ceaf7703e7ab3292990f53dd9ebc09848", "commitAfterChange": "bad1afba2bae87fcb485bb971088066d4ff1a6e9", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 103, "signatureBeforeChange": "\r \r boolean translateTraversal (int key_sym, PhKeyEvent_t phEvent)", "signatureAfterChange": "\r \r boolean translateTraversal (int key_sym, PhKeyEvent_t phEvent)", "diff": ["-\tint detail = 0;\r", "-\tboolean shift = (phEvent.key_mods & OS.Pk_KM_Shift) != 0;\r", "-\tboolean control = (phEvent.key_mods & OS.Pk_KM_Ctrl) != 0;\r", "+\tint detail = SWT.TRAVERSE_NONE;\r", "+\tint code = traversalCode (key_sym, phEvent);\r", "+\tboolean all = false;\r", "-\t\tcase OS.Pk_Escape:\r", "+\t\tcase OS.Pk_Escape: {\r", "-\t\t\tif (shell.parent == null) return false;\r", "-\t\tcase OS.Pk_Return:\r", "+\t\t}\r", "+\t\tcase OS.Pk_Return: {\r", "+\t\t}\r", "-\t\tcase OS.Pk_KP_Tab:\r", "-\t\t\tdetail = SWT.TRAVERSE_TAB_NEXT;\r", "-\t\t\tif (shift) detail = SWT.TRAVERSE_TAB_PREVIOUS;\r", "+\t\tcase OS.Pk_KP_Tab: {\r", "+\t\t\tboolean next = (phEvent.key_mods & OS.Pk_KM_Shift) == 0;\r", "+\t\t\tdetail = next ? SWT.TRAVERSE_TAB_NEXT : SWT.TRAVERSE_TAB_PREVIOUS;\r", "+\t\t}\r", "-\t\tcase OS.Pk_Left: \r", "+\t\tcase OS.Pk_Left: {\r", "+\t\t}\r", "-\t\tcase OS.Pk_Right:\r", "+\t\tcase OS.Pk_Right: {\r", "+\t\t}\r", "+\t\tcase OS.Pk_Pg_Down:\r", "+\t\tcase OS.Pk_Pg_Up: {\r", "+\t\t\tall = true;\r", "+\t\t\tif ((phEvent.key_mods & OS.Pk_KM_Ctrl) == 0) return false;\r", "+\t\t\tdetail = key_sym == OS.Pk_Pg_Down ? SWT.TRAVERSE_PAGE_NEXT : SWT.TRAVERSE_PAGE_PREVIOUS;\r", "+\t\t\tbreak;\r", "+\t\t}\r", "-\tboolean doit = (detail & traversalCode (key_sym, phEvent)) != 0;\r", "-\tif (!doit && control && (key_sym == OS.Pk_Tab || key_sym == OS.Pk_Tab)) {\r", "-\t\tdoit = true;\r", "-\t\tcontrol = false;\r", "-\t}\r", "-\tif (hooks (SWT.Traverse)) {\r", "-\t\tEvent event = new Event();\r", "-\t\tevent.doit = doit;\r", "-\t\tevent.detail = detail;\r", "-\t\tsetKeyState (event, phEvent);\r", "-\t\tsendEvent (SWT.Traverse, event);\r", "-\t\tif (isDisposed ()) return true;\r", "-\t\tdoit = event.doit;\r", "-\t\tdetail = event.detail;\r", "-\t}\r", "-\tif (doit) {\r", "-\t\tswitch (detail) {\r", "-\t\t\tcase SWT.TRAVERSE_ESCAPE:\t\treturn traverseEscape ();\r", "-\t\t\tcase SWT.TRAVERSE_RETURN:\t\treturn traverseReturn ();\r", "-\t\t\tcase SWT.TRAVERSE_TAB_NEXT:\t\treturn traverseGroup (true, control);\r", "-\t\t\tcase SWT.TRAVERSE_TAB_PREVIOUS:\t\treturn traverseGroup (false, control);\r", "-\t\t\tcase SWT.TRAVERSE_ARROW_NEXT:\t\treturn traverseItem (true);\r", "-\t\t\tcase SWT.TRAVERSE_ARROW_PREVIOUS:\treturn traverseItem (false);\t\r", "-\t\t}\r", "-\t}\r", "+\tEvent event = new Event ();\r", "+\tevent.doit = (code & detail) != 0 || (phEvent.key_mods & OS.Pk_KM_Ctrl) != 0;\r", "+\tevent.detail = detail;\r", "+\tsetKeyState (event, phEvent);\r", "+\tShell shell = getShell ();\r", "+\tControl control = this;\r", "+\tdo {\r", "+\t\tif (control.traverse (event)) return true;\r", "+\t\tif (control == shell) return false;\r", "+\t\tcontrol = control.parent;\r", "+\t} while (all && control != null);\r"]}], "num": 53749}