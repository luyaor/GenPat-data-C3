{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7e4e669be1dd4d52910ee6958d3206eb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "385ea680755e444e9f359bee4ea73198", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples.launcher/src/org/eclipse/swt/examples/launcher/LauncherPlugin.java", "commitBeforeChange": "3e598e8fea235d7a9c983581a55cea45da430457", "commitAfterChange": "59dac96e3990f1d34aa3e0337733650a5cd65613", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic static ItemTreeNode getLaunchItemTree()", "signatureAfterChange": " \tpublic static ItemTreeNode getLaunchItemTree()", "diff": ["-\t\tHashMap idMap = new HashMap();", "+\t\tHashMap<String, ItemTreeNode> idMap = new HashMap<String, ItemTreeNode>();", "-\t\tSet tempIdSet = new HashSet(); // used to prevent duplicates from being entered into the tree", "+\t\tSet<String> tempIdSet = new HashSet<String>(); // used to prevent duplicates from being entered into the tree", "-\t\t\t\tfinal ItemTreeNode theNode = (ItemTreeNode) idMap.get(attribId);", "+\t\t\t\tfinal ItemTreeNode theNode = idMap.get(attribId);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01421df9c6712ec21c740fdad52dc718", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/EmbedMetaData.java", "commitBeforeChange": "3418cfa63d3b83d0b2d185baa847e100d68881e8", "commitAfterChange": "d45fca5fe38816ea0e49d88992f8a36f2c79c3af", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  @Override public void generate(JNIClass clazz)", "signatureAfterChange": "  @Override public void generate(JNIClass clazz)", "diff": ["-\tinserts = new TreeMap();", "+\tinserts = new TreeMap<Integer, String>();", "-\tSet set = inserts.keySet();", "-\tArrayList keys = new ArrayList();", "+\tSet<Integer> set = inserts.keySet();", "+\tArrayList<Integer> keys = new ArrayList<Integer>();", "-\tfor (Iterator iterator = keys.iterator(); iterator.hasNext();) {", "-\t\tInteger index = (Integer) iterator.next();", "-\t\tString doc = (String)inserts.get(index);", "+\tfor (Iterator<Integer> iterator = keys.iterator(); iterator.hasNext();) {", "+\t\tInteger index = iterator.next();", "+\t\tString doc = inserts.get(index);"]}], "num": 5080}