{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e8a173106ad69d6e867f5b96dace48a5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1176e84519c4098cb28d716797e225f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "48512dc20e32e369917d3e1ccfb92109c9724e7e", "commitAfterChange": "1942f64e0b774317e0a8e6ec44902bb736bb7790", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 37, "signatureBeforeChange": "  int processPaint (int callData, int int2, int int3)", "signatureAfterChange": "  int processPaint (int callData, int int2, int int3)", "diff": ["-\t//if (!hooks (SWT.Paint)) return 1;", "-\t", "-\tGdkEventExpose gdkEvent = new GdkEventExpose ();", "-\tOS.memmove (gdkEvent, callData, GdkEventExpose.sizeof);", "+/*\tGdkEventExpose gdkEvent = new GdkEventExpose (callData);", "-\tevent.gc = null;", "-\treturn 1;", "-/*}else{", "-\tGdkRectangle gdkEvent = new GdkRectangle ();", "-\tOS.memmove (gdkEvent, callData, GdkRectangle.sizeof);", "-\tEvent event = new Event ();", "-//\tevent.count = gdkEvent.count;", "-\tevent.x = gdkEvent.x;  event.y = gdkEvent.y;", "-\tevent.width = gdkEvent.width;  event.height = gdkEvent.height;", "-\tGC gc = event.gc = new GC (this);", "-\tOS.gdk_gc_set_clip_rectangle (gc.handle, gdkEvent);", "-\tsendEvent (SWT.Paint, event);", "-\tgc.dispose ();", "-\tevent.gc = null;", "-\treturn 1;", "-}\t*/", "+\tevent.gc = null;*/", "+\treturn 0;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66541512fe46f793a133733e9cfbac1d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "d5a4ededf2481056ea93e92d58ed0317fbe18940", "commitAfterChange": "f6ebb3048a103916c33ccf5fea60ac90efeac776", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " public void setRegion (Region region)", "signatureAfterChange": " public void setRegion (Region region)", "diff": ["-\tImage image = null;", "-\tif (region != null) {", "-\t\tColor black = display.getSystemColor (SWT.COLOR_BLACK);", "-\t\tColor white = display.getSystemColor (SWT.COLOR_WHITE);", "-\t\tPaletteData palette = new PaletteData (new RGB[] {white.getRGB(), black.getRGB()});", "-\t\tRectangle rect = region.getBounds ();", "-\t\tif (rect.width == 0 || rect.height == 0) {", "-\t\t\tImageData data = new ImageData (1, 1, 1, palette);", "-\t\t\tdata.transparentPixel = 0;", "-\t\t\timage = new Image (display, data);", "-\t\t} else {", "-\t\tImageData data = new ImageData (rect.x + rect.width, rect.y + rect.height, 1, palette);", "-\t\t\tdata.transparentPixel = 0;", "-\t\t\timage = new Image (display, data);", "-\t\t\tGC gc = new GC (image);", "-\t\t\tgc.setClipping (region);", "-\t\t\tgc.setForeground (black);", "-\t\t\tgc.fillRectangle (0, 0, rect.x + rect.width, rect.y + rect.height);", "-\t\t\tgc.dispose ();", "-\t\t}", "-\t}", "-\tOS.gtk_widget_shape_combine_mask (shellHandle, image == null ? 0 : image.mask, 0, 0);", "-\tif (image != null) image.dispose ();", "+\tint window = OS.GTK_WIDGET_WINDOW (shellHandle);", "+\tint shape_region = (region == null) ? 0 : region.handle;", "+\tOS.gdk_window_shape_combine_region (window, shape_region, 0, 0);"]}], "num": 41258}