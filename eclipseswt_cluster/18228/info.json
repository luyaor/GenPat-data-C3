{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "032aa06a6b580285e229c62cf959388d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11f50fe1483b2d762b806af03bc5f5d8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "9be50f235bbc31557960b17275b7cebd73643650", "commitAfterChange": "10db8dbc96013208bcbf8d30efcda65b3990ef39", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  static synchronized void checkDisplay (Thread thread, boolean multiple)", "signatureAfterChange": "  static void checkDisplay (Thread thread, boolean multiple)", "diff": ["-static synchronized void checkDisplay (Thread thread, boolean multiple) {", "-\tfor (int i=0; i<Displays.length; i++) {", "-\t\tif (Displays [i] != null) {", "-\t\t\tif (!multiple) SWT.error (SWT.ERROR_NOT_IMPLEMENTED, null, \" [multiple displays]\");", "-\t\t\tif (Displays [i].thread == thread) SWT.error (SWT.ERROR_THREAD_INVALID_ACCESS);", "+static void checkDisplay (Thread thread, boolean multiple) {", "+\tsynchronized (Device.class) {", "+\t\tfor (int i=0; i<Displays.length; i++) {", "+\t\t\tif (Displays [i] != null) {", "+\t\t\t\tif (!multiple) SWT.error (SWT.ERROR_NOT_IMPLEMENTED, null, \" [multiple displays]\");", "+\t\t\t\tif (Displays [i].thread == thread) SWT.error (SWT.ERROR_THREAD_INVALID_ACCESS);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27e01309d3ff0048754e9de6ade8dab7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "98b59845e52006919cc7fbceba0837163033848c", "commitAfterChange": "0bc6123ef86527be2e97dc69f141ed93a42a5c55", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": " public void wake ()", "signatureAfterChange": " public void wake ()", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\tif (thread == Thread.currentThread ()) return;", "-\twakeThread ();", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\tif (thread == Thread.currentThread ()) return;", "+\t\twakeThread ();", "+\t}"]}], "num": 18228}