{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c3c3a569e18db74db7b663a0648582a7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc40528fcba5cb02ae2a52ff1d20c4e4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "5e05c860c75fb9386e23dd52fa60db7a593598e0", "commitAfterChange": "82a1c09af233bc8cd6f0c7fc54f4d78ed4a74ece", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 75, "signatureBeforeChange": " void init(Drawable drawable, GCData data, int xGC)", "signatureAfterChange": " void init(Drawable drawable, GCData data, int xGC)", "diff": ["-\tint xDisplay = data.display;", "-\tint foreground = data.foreground;", "-\tif (foreground != -1) OS.XSetForeground (xDisplay, xGC, foreground);", "-\tint background = data.background;", "-\tif (background != -1) OS.XSetBackground (xDisplay, xGC, background);", "+\tif (data.foreground != null) data.state &= ~(FOREGROUND | FOREGROUND_RGB);", "+\tif (data.background != null) data.state &= ~(BACKGROUND | BACKGROUND_BG | BACKGROUND_RGB);", "+\tif (data.font != null) data.state &= ~FONT;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c26a2f087756ee9949df9e205a5dd57", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "bb50d013efc19825e8fad10d3794d4669d974d4f", "commitAfterChange": "3432d57cc04ef1f655fa110268dd9aa31a9cd42d", "methodNumberBeforeChange": 308, "methodNumberAfterChange": 342, "signatureBeforeChange": " \tint get_imageSize(int pHeight, int pWidth)", "signatureAfterChange": "  \tvoid checkUniqueID(int childID)", "diff": ["-\t/* IAccessibleImage::get_imageSize([out] pHeight, [out] pWidth) */", "-\tint get_imageSize(int /*long*/ pHeight, int /*long*/ pWidth) {", "-\t\t// TODO: does it make sense to just reuse getLocation?", "-\t\tAccessibleControlEvent event = new AccessibleControlEvent(this);", "-\t\tfor (int i = 0; i < accessibleControlListeners.size(); i++) {", "-\t\t\tAccessibleControlListener listener = (AccessibleControlListener) accessibleControlListeners.elementAt(i);", "-\t\t\tlistener.getLocation(event);", "-\t\t}", "-\t\tCOM.MoveMemory(pHeight, new int [] { event.height }, 4);", "-\t\tCOM.MoveMemory(pWidth, new int [] { event.width }, 4);", "-\t\treturn COM.S_OK;", "-\t}", "+", "+\tvoid checkUniqueID(int childID) {", "+\t\t/* If the application is using child ids, check whether there's a corresponding", "+\t\t * accessible, and if so, use the child id as that accessible's unique id. */", "+\t\tAccessibleControlEvent event = new AccessibleControlEvent(this);", "+\t\tevent.childID = childID;", "+\t\tfor (int l = 0; l < accessibleControlListeners.size(); l++) {", "+\t\t\tAccessibleControlListener listener = (AccessibleControlListener) accessibleControlListeners.elementAt(l);", "+\t\t\tlistener.getChild(event);", "+\t\t}", "+\t\tAccessible accessible = event.accessible;", "+\t\tif (accessible != null && accessible.uniqueID == -1) {", "+\t\t\taccessible.uniqueID = childID;", "+\t\t}", "+\t}"]}], "num": 26402}