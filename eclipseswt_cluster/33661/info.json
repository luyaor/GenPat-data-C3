{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d87c1e27e7adc88940f07fc01517906e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30e3adf0e7f63d489949d717eb428829", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  void copyModel (int oldModel, int oldStart, int newModel, int newStart, int [] types, int oldParent, int newParent, int modelLength)", "signatureAfterChange": "  void copyModel (long oldModel, int oldStart, long newModel, int newStart, long [] types, long oldParent, long newParent, int modelLength)", "diff": ["-void copyModel (int /*long*/ oldModel, int oldStart, int /*long*/ newModel, int newStart, int /*long*/ [] types, int /*long*/ oldParent, int /*long*/ newParent, int modelLength) {", "-\tint /*long*/ iter = OS.g_malloc(OS.GtkTreeIter_sizeof ());", "+void copyModel (long /*int*/ oldModel, int oldStart, long /*int*/ newModel, int newStart, long /*int*/ [] types, long /*int*/ oldParent, long /*int*/ newParent, int modelLength) {", "+\tlong /*int*/ iter = OS.g_malloc(OS.GtkTreeIter_sizeof ());", "-\t\tint /*long*/ [] oldItems = new int /*long*/ [OS.gtk_tree_model_iter_n_children (oldModel, oldParent)];", "+\t\tlong /*int*/ [] oldItems = new long /*int*/ [OS.gtk_tree_model_iter_n_children (oldModel, oldParent)];", "-\t\tint /*long*/ [] ptr = new int /*long*/ [1];", "+\t\tlong /*int*/ [] ptr = new long /*int*/ [1];", "-\t\t\tint /*long*/ newItem = OS.g_malloc (OS.GtkTreeIter_sizeof ());", "+\t\t\tlong /*int*/ newItem = OS.g_malloc (OS.GtkTreeIter_sizeof ());", "-\t\t\t\t\tint /*long*/ oldItem = item.handle;", "+\t\t\t\t\tlong /*int*/ oldItem = item.handle;", "-\t\t\tint /*long*/ oldItem = oldItems [i];", "+\t\t\tlong /*int*/ oldItem = oldItems [i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "829376264af6b3fc244933bca154d7e9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": "  int rendererGetSizeProc (int cell, int widget, int cell_area, int x_offset, int y_offset, int width, int height)", "signatureAfterChange": "  long rendererGetSizeProc (long cell, long widget, long cell_area, long x_offset, long y_offset, long width, long height)", "diff": ["-int /*long*/ rendererGetSizeProc (int /*long*/ cell, int /*long*/ widget, int /*long*/ cell_area, int /*long*/ x_offset, int /*long*/ y_offset, int /*long*/ width, int /*long*/ height) {", "-\tint /*long*/ g_class = OS.g_type_class_peek_parent (OS.G_OBJECT_GET_CLASS (cell));", "+long /*int*/ rendererGetSizeProc (long /*int*/ cell, long /*int*/ widget, long /*int*/ cell_area, long /*int*/ x_offset, long /*int*/ y_offset, long /*int*/ width, long /*int*/ height) {", "+\tlong /*int*/ g_class = OS.g_type_class_peek_parent (OS.G_OBJECT_GET_CLASS (cell));", "-\t\tint /*long*/ iter = OS.g_object_get_qdata (cell, Display.SWT_OBJECT_INDEX2);", "+\t\tlong /*int*/ iter = OS.g_object_get_qdata (cell, Display.SWT_OBJECT_INDEX2);", "-\t\t\t\tint /*long*/ columnHandle = OS.g_object_get_qdata (cell, Display.SWT_OBJECT_INDEX1);", "+\t\t\t\tlong /*int*/ columnHandle = OS.g_object_get_qdata (cell, Display.SWT_OBJECT_INDEX1);", "-\t\t\t\tint /*long*/ path = OS.gtk_tree_model_get_path (modelHandle, iter);", "-\t\t\t\tint /*long*/ selection = OS.gtk_tree_view_get_selection (handle);", "+\t\t\t\tlong /*int*/ path = OS.gtk_tree_model_get_path (modelHandle, iter);", "+\t\t\t\tlong /*int*/ selection = OS.gtk_tree_view_get_selection (handle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01b28b7305486bfff8d9b3f8880f1f39", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": "  int rendererGetSizeProc (int cell, int widget, int cell_area, int x_offset, int y_offset, int width, int height)", "signatureAfterChange": "  long rendererGetSizeProc (long cell, long widget, long cell_area, long x_offset, long y_offset, long width, long height)", "diff": ["-int /*long*/ rendererGetSizeProc (int /*long*/ cell, int /*long*/ widget, int /*long*/ cell_area, int /*long*/ x_offset, int /*long*/ y_offset, int /*long*/ width, int /*long*/ height) {", "-\tint /*long*/ g_class = OS.g_type_class_peek_parent (OS.G_OBJECT_GET_CLASS (cell));", "+long /*int*/ rendererGetSizeProc (long /*int*/ cell, long /*int*/ widget, long /*int*/ cell_area, long /*int*/ x_offset, long /*int*/ y_offset, long /*int*/ width, long /*int*/ height) {", "+\tlong /*int*/ g_class = OS.g_type_class_peek_parent (OS.G_OBJECT_GET_CLASS (cell));", "-\t\tint /*long*/ iter = OS.g_object_get_qdata (cell, Display.SWT_OBJECT_INDEX2);", "+\t\tlong /*int*/ iter = OS.g_object_get_qdata (cell, Display.SWT_OBJECT_INDEX2);", "-\t\t\tint /*long*/ path = OS.gtk_tree_model_get_path (modelHandle, iter);", "+\t\t\tlong /*int*/ path = OS.gtk_tree_model_get_path (modelHandle, iter);", "-\t\t\tint /*long*/ selection = OS.gtk_tree_view_get_selection (handle);", "+\t\t\tlong /*int*/ selection = OS.gtk_tree_view_get_selection (handle);", "-\t\t\t\tint /*long*/ columnHandle = OS.g_object_get_qdata (cell, Display.SWT_OBJECT_INDEX1);", "+\t\t\t\tlong /*int*/ columnHandle = OS.g_object_get_qdata (cell, Display.SWT_OBJECT_INDEX1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "181af1c182b1ea77861eba463d18b322", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/PromptService2.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "  int Prompt (int aParent, int aDialogTitle, int aText, int aValue, int aCheckMsg, int aCheckState, int _retval)", "signatureAfterChange": "  int Prompt (long aParent, long aDialogTitle, long aText, long aValue, long aCheckMsg, long aCheckState, long _retval)", "diff": ["-int Prompt (int /*long*/ aParent, int /*long*/ aDialogTitle, int /*long*/ aText, int /*long*/ aValue, int /*long*/ aCheckMsg, int /*long*/ aCheckState, int /*long*/ _retval) {", "+int Prompt (long /*int*/ aParent, long /*int*/ aDialogTitle, long /*int*/ aText, long /*int*/ aValue, long /*int*/ aCheckMsg, long /*int*/ aCheckState, long /*int*/ _retval) {", "-\tint /*long*/[] valueAddr = new int /*long*/[1];", "+\tlong /*int*/[] valueAddr = new long /*int*/[1];", "-\t\t\tint /*long*/[] result2 = new int /*long*/[1];", "+\t\t\tlong /*int*/[] result2 = new long /*int*/[1];", "-\t\t\tint /*long*/ ptr = memory.Alloc (size);", "+\t\t\tlong /*int*/ ptr = memory.Alloc (size);", "-\t\t\tXPCOM.memmove (aValue, new int /*long*/[] {ptr}, C.PTR_SIZEOF);", "+\t\t\tXPCOM.memmove (aValue, new long /*int*/[] {ptr}, C.PTR_SIZEOF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bcdcd1e3b572b1ff8f385f5135d1920", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Prompter.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  int Prompt (int aDialogTitle, int aText, int aValue, int aCheckMsg, int aCheckState, int _retval)", "signatureAfterChange": "  int Prompt (long aDialogTitle, long aText, long aValue, long aCheckMsg, long aCheckState, long _retval)", "diff": ["-int Prompt (int /*long*/ aDialogTitle, int /*long*/ aText, int /*long*/ aValue, int /*long*/ aCheckMsg, int /*long*/ aCheckState, int /*long*/ _retval) {", "+int Prompt (long /*int*/ aDialogTitle, long /*int*/ aText, long /*int*/ aValue, long /*int*/ aCheckMsg, long /*int*/ aCheckState, long /*int*/ _retval) {", "-\tint /*long*/[] valueAddr = new int /*long*/[1];", "+\tlong /*int*/[] valueAddr = new long /*int*/[1];", "-\t\t\tint /*long*/[] result2 = new int /*long*/[1];", "+\t\t\tlong /*int*/[] result2 = new long /*int*/[1];", "-\t\t\tint /*long*/ ptr = memory.Alloc (size);", "+\t\t\tlong /*int*/ ptr = memory.Alloc (size);", "-\t\t\tXPCOM.memmove (aValue, new int /*long*/[] {ptr}, C.PTR_SIZEOF);", "+\t\t\tXPCOM.memmove (aValue, new long /*int*/[] {ptr}, C.PTR_SIZEOF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80b2bf7a820f747341456f6bbeb65947", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Download.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " int Init (int aSource, int aTarget, int aDisplayName, int aMIMEInfo, int startTime1, int startTime2, int aPersist)", "signatureAfterChange": " int Init (long aSource, long aTarget, long aDisplayName, long aMIMEInfo, long startTime1, long startTime2, long aPersist)", "diff": ["-int Init (int /*long*/ aSource, int /*long*/ aTarget, int /*long*/ aDisplayName, int /*long*/ aMIMEInfo, int /*long*/ startTime1, int /*long*/ startTime2, int /*long*/ aPersist) {", "+int Init (long /*int*/ aSource, long /*int*/ aTarget, long /*int*/ aDisplayName, long /*int*/ aMIMEInfo, long /*int*/ startTime1, long /*int*/ startTime2, long /*int*/ aPersist) {", "-\tint /*long*/ aSpec = XPCOM.nsEmbedCString_new ();", "+\tlong /*int*/ aSpec = XPCOM.nsEmbedCString_new ();", "-\tint /*long*/ buffer = XPCOM.nsEmbedCString_get (aSpec);", "+\tlong /*int*/ buffer = XPCOM.nsEmbedCString_get (aSpec);", "-\tint /*long*/[] result = new int /*long*/[1];", "+\tlong /*int*/[] result = new long /*int*/[1];", "-\t\tint /*long*/ aPath = XPCOM.nsEmbedCString_new ();", "+\t\tlong /*int*/ aPath = XPCOM.nsEmbedCString_new ();", "-\t\tint /*long*/ aNativeTarget = XPCOM.nsEmbedString_new ();", "+\t\tlong /*int*/ aNativeTarget = XPCOM.nsEmbedString_new ();"]}], "num": 33661}