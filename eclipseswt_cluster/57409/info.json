{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "52ef65e89a71eadaef2dd218540bcf18", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11be5a171553831903c6db0ae1ab1299", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "cc81619f9bb3266b4ad015825272dce98bc98771", "commitAfterChange": "03fdc4ce598a854ad5aca71d689e6a6135d4397b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " void presetChooserDialog ()", "signatureAfterChange": " void presetChooserDialog ()", "diff": ["-\tif (filterPath.length () > 0) {", "-\t\tStringBuffer stringBuffer = new StringBuffer ();", "-\t\t/* filename must be a full path */", "-\t\tif (filterPath.charAt (0) != SEPARATOR) {", "-\t\t\tstringBuffer.append (SEPARATOR);", "-\t\t}", "-\t\tstringBuffer.append (filterPath);", "-", "-\t\tif (fileName.length () > 0 && (style & SWT.SAVE) == 0) {", "-\t\t\tif (filterPath.charAt (filterPath.length () - 1) != SEPARATOR) {", "-\t\t\t\tstringBuffer.append (SEPARATOR);", "-\t\t\t}", "-\t\t\tstringBuffer.append (fileName);", "-\t\t\tbyte [] buffer = Converter.wcsToMbcs (null, stringBuffer.toString (), true);", "-\t\t\t/*", "-\t\t\t* Bug in GTK. GtkFileChooser may crash on GTK versions 2.4.10 to 2.6", "-\t\t\t* when setting a file name that is not a true canonical path. ", "-\t\t\t* The fix is to use the canonical path.", "-\t\t\t*/", "-\t\t\tint /*long*/ ptr = OS.realpath (buffer, null);", "-\t\t\tif (ptr != 0) {", "-\t\t\t\tOS.gtk_file_chooser_set_filename (handle, ptr);", "-\t\t\t\tOS.g_free (ptr);", "-\t\t\t}", "-\t\t} else {", "-\t\t\tbyte [] buffer = Converter.wcsToMbcs (null, stringBuffer.toString (), true);", "-\t\t\t/*", "-\t\t\t* Bug in GTK. GtkFileChooser may crash on GTK versions 2.4.10 to 2.6", "-\t\t\t* when setting a file name that is not a true canonical path. ", "-\t\t\t* The fix is to use the canonical path.", "-\t\t\t*/", "-\t\t\tint /*long*/ ptr = OS.realpath (buffer, null);", "-\t\t\tif (ptr != 0) {", "-\t\t\t\tOS.gtk_file_chooser_set_current_folder (handle, ptr);", "-\t\t\t\tOS.g_free (ptr);", "-\t\t\t}", "-\t\t}", "-\t} else {", "-\t\tif (fileName.length () > 0) {", "-\t\t\tif (fileName.charAt (0) == SEPARATOR) {", "-\t\t\t\tbyte [] buffer = Converter.wcsToMbcs (null, fileName, true);", "+\tif ((style & SWT.SAVE) != 0) {", "+\t\tif (filterPath.length () > 0) {", "+\t\t\tif (uriMode) {", "+\t\t\t\tbyte [] buffer = Converter.wcsToMbcs (null, filterPath, true);", "+\t\t\t\tOS.gtk_file_chooser_set_current_folder_uri (handle, buffer);", "+\t\t\t} else {", "+\t\t\t\t/* filename must be a full path */", "+\t\t\t\tbyte [] buffer = Converter.wcsToMbcs (null, SEPARATOR + filterPath, true);", "+\t\t\t\t", "-\t\t\t\tif (ptr != 0) {", "-\t\t\t\t\tOS.gtk_file_chooser_set_filename (handle, ptr);", "-\t\t\t\t\tOS.g_free (ptr);", "-\t\t\t\t}", "+\t\t\t\tOS.gtk_file_chooser_set_current_folder (handle, ptr);", "+\t\t\t\tOS.g_free (ptr);", "+\t\tif (fileName.length () > 0) {", "+\t\t\tbyte [] buffer = Converter.wcsToMbcs (null, fileName, true);", "+\t\t\tOS.gtk_file_chooser_set_current_name (handle, buffer);", "+\t\t}", "+\t} else {", "+\t\tStringBuffer stringBuffer = new StringBuffer();", "+\t\tif (filterPath.length () > 0) {", "+\t\t\tif (!uriMode) {", "+\t\t\t\t/* filename must be a full path */", "+\t\t\t\tstringBuffer.append(SEPARATOR);", "+\t\t\t}", "+\t\t\tstringBuffer.append(filterPath);", "+\t\t\tstringBuffer.append(SEPARATOR);", "+\t\t}", "+\t\tif (fileName.length () > 0) {", "+\t\t\tstringBuffer.append(fileName);", "+\t\t}", "+\t\tbyte [] buffer = Converter.wcsToMbcs (null, stringBuffer.toString(), true);", "+\t\tif (uriMode) {", "+\t\t\tOS.gtk_file_chooser_set_uri (handle, buffer);", "+\t\t} else {", "+\t\t\t/*", "+\t\t\t* Bug in GTK. GtkFileChooser may crash on GTK versions 2.4.10 to 2.6", "+\t\t\t* when setting a file name that is not a true canonical path. ", "+\t\t\t* The fix is to use the canonical path.", "+\t\t\t*/", "+\t\t\tint /*long*/ ptr = OS.realpath (buffer, null);", "+\t\t\tOS.gtk_file_chooser_set_filename (handle, ptr);", "+\t\t\tOS.g_free (ptr);", "+\t\t}", "-\tif ((style & SWT.SAVE) != 0 && fileName.length () > 0) {", "-\t\tbyte [] buffer = Converter.wcsToMbcs (null, fileName, true);", "-\t\tOS.gtk_file_chooser_set_current_name (handle, buffer);", "-\t}", "+\t", "+\t/* Set overwrite mode */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5491b7bbf044715978e06afb34bdc5c5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "70ad0effe5f094be7c9f0fc126e3f2ba49252b61", "commitAfterChange": "d04fb3f614d054ed3cf2600f4c59c394b9406469", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 90, "signatureBeforeChange": "  \tprivate boolean handleContextClick(int cHandle, MacPoint globalPos, MacEvent me)", "signatureAfterChange": "  \tprivate void handleContextClick(Menu cm, MacPoint globalPos, MacEvent me)", "diff": ["-\tprivate boolean handleContextClick(int cHandle, MacPoint globalPos, MacEvent me) {", "-\t\tif (OS.IsShowContextualMenuClick(me.getData())) {", "-\t\t\tWidget wc= WidgetTable.get(cHandle);", "-\t\t\tif (wc instanceof Control) {", "-\t\t\t\tMenu cm= ((Control)wc).getMenu();", "-\t\t\t\tif (cm != null) {", "-\t\t\t\t\tshort[] menuId= new short[1];", "-\t\t\t\t\tshort[] index= new short[1];", "-\t\t\t\t\t", "-\t\t\t\t\tfInContextMenu= true;", "-\t\t\t\t\t", "-\t\t\t\t\tint status= OS.kNoErr;", "-\t\t\t\t\tif (true) {", "-\t\t\t\t\t\tint result= OS.PopUpMenuSelect(cm.handle, (short)globalPos.getY(), (short)globalPos.getX(), (short)1);", "-\t\t\t\t\t\tmenuId[0]= OS.HiWord(result);", "-\t\t\t\t\t\tindex[0]= OS.LoWord(result);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\t// AW: not ready for primetime", "-\t\t\t\t\t\tstatus= OS.ContextualMenuSelect(cm.handle, globalPos.getData(), menuId, index);", "-\t\t\t\t\t}", "+\tprivate void handleContextClick(Menu cm, MacPoint globalPos, MacEvent me) {", "+\t\t", "+\t\tshort menuId;", "+\t\tshort index;", "+\t\t", "+\t\ttry {", "+\t\t\tfInContextMenu= true;", "+\t\t\tif (true) {", "+\t\t\t\tint result= OS.PopUpMenuSelect(cm.handle, (short)globalPos.getY(), (short)globalPos.getX(), (short)1);", "+\t\t\t\tif (result == OS.kNoErr)", "+\t\t\t\t\treturn;", "+\t\t\t\tmenuId= OS.HiWord(result);", "+\t\t\t\tindex= OS.LoWord(result);", "+\t\t\t} else {", "+\t\t\t\t// AW: not ready for primetime", "+\t\t\t\tshort[] id= new short[1];", "+\t\t\t\tshort[] ix= new short[1];", "+\t\t\t\tif (OS.ContextualMenuSelect(cm.handle, globalPos.getData(), id, ix) != OS.kNoErr)", "+\t\t\t\t\treturn;", "+\t\t\t\tmenuId= id[0];", "+\t\t\t\tindex= ix[0];", "+\t\t\t}", "+\t\t} finally {", "+\t\t\tfInContextMenu= false;", "+\t\t}", "-\t\t\t\t\tfInContextMenu= false;", "-", "-\t\t\t\t\tif (status == OS.kNoErr) {", "-\t\t\t\t\t\tif (menuId[0] != 0) {", "-\t\t\t\t\t\t\tMenu menu2= cm.getShell().findMenu(menuId[0]);", "-\t\t\t\t\t\t\tif (menu2 != null) {", "-\t\t\t\t\t\t\t\t//System.out.println(\"handleMenu: \" + index[0]);", "-\t\t\t\t\t\t\t\tmenu2.handleMenu(index[0]);", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\treturn true;", "-\t\t\t\t\t}", "-\t\t\t\t}", "+\t\tif (menuId != 0) {", "+\t\t\tMenu menu= cm.getShell().findMenu(menuId);", "+\t\t\tif (menu != null) {", "+\t\t\t\t//System.out.println(\"handleMenu: \" + index);", "+\t\t\t\tmenu.handleMenu(index);", "-\t\treturn false;"]}], "num": 57409}