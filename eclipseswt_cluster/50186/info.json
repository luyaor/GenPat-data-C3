{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5ddef80479221a319c3c8a371cfa2932", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24182052fce4c502d8fae2d713583196", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "9cc72cd00c181250b1f51b95a0528a6b993c1ed9", "commitAfterChange": "1c6100db3e7e2869dd9939a388c01ffe02266ae6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["-\tif ((style & SWT.SEPARATOR) == 0) {", "-\t\tboxHandle = (parent.style & SWT.RIGHT) != 0 ? OS.gtk_hbox_new (false, 0) : OS.gtk_vbox_new (false, 0);", "-\t\tif (boxHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\tlabelHandle = OS.gtk_label_new_with_mnemonic (null);", "-\t\tif (labelHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\timageHandle = OS.gtk_image_new ();", "-\t\tif (imageHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\tOS.gtk_container_add (boxHandle, imageHandle);", "-\t\tOS.gtk_container_add (boxHandle, labelHandle);", "-\t\tif ((parent.style & SWT.VERTICAL) != 0) {", "-\t\t\t// Align text and images to the left", "-\t\t\tOS.gtk_box_set_child_packing (boxHandle, imageHandle, false, false, 0, OS.GTK_PACK_START);", "-\t\t\tOS.gtk_box_set_child_packing (boxHandle, labelHandle, false, false, 2, OS.GTK_PACK_START);", "-\t\t}", "-\t}", "-\t\t\thandle = OS.gtk_hbox_new (false, 0);", "+\t\t\thandle = OS.gtk_separator_tool_item_new ();", "-\t\t\tboolean isVertical = (parent.style & SWT.VERTICAL) != 0;", "-\t\t\tseparatorHandle = isVertical ? OS.gtk_hseparator_new() : OS.gtk_vseparator_new();", "-\t\t\tif (separatorHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\t\tOS.gtk_widget_set_size_request (separatorHandle, isVertical ? 15 : 6, isVertical ? 6 : 15);", "-\t\t\tOS.gtk_widget_set_size_request (handle, isVertical ? 15 : 6, isVertical ? 6 : 15);", "-\t\t\tOS.gtk_container_add (handle, separatorHandle);", "+\t\t\tOS.gtk_separator_tool_item_set_draw (handle, true);", "-\t\t\thandle = OS.gtk_button_new ();", "-\t\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\t\tarrowBoxHandle = OS.gtk_hbox_new (false, 0);", "-\t\t\tif (arrowBoxHandle == 0) error(SWT.ERROR_NO_HANDLES);", "-\t\t\tarrowHandle = OS.gtk_arrow_new (OS.GTK_ARROW_DOWN, OS.GTK_SHADOW_NONE);", "-\t\t\tif (arrowHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\t\tOS.gtk_widget_set_size_request (arrowHandle, 8, 6);", "-\t\t\tOS.gtk_container_add (handle, arrowBoxHandle);", "-\t\t\tOS.gtk_container_add (arrowBoxHandle, boxHandle);\t", "-\t\t\tOS.gtk_container_add (arrowBoxHandle, arrowHandle);\t", "+\t\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 6, 0)) {", "+\t\t\t\thandle = OS.gtk_menu_tool_button_new (0, null);", "+\t\t\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\t\t\t/*", "+\t\t\t\t * Feature in GTK. The arrow button of DropDown tool-item is ", "+\t\t\t\t * disabled when it does not contain menu. The fix is to", "+\t\t\t\t * find the arrow button handle and enable it.", "+\t\t\t\t */", "+\t\t\t\tint /*long*/ child = OS.gtk_bin_get_child (handle);", "+\t\t\t\tint /*long*/ list = OS.gtk_container_get_children (child);", "+\t\t\t\tarrowHandle = OS.g_list_nth_data (list, 1);", "+\t\t\t\tOS.gtk_widget_set_sensitive (arrowHandle, true);", "+\t\t\t} else {", "+\t\t\t\t/*", "+\t\t\t\t * GTK does not support GtkMenuToolButton until 2.6.", "+\t\t\t\t * So, we try to emulate it on the un-supported version.", "+\t\t\t\t */", "+\t\t\t\thandle = OS.gtk_tool_button_new (0, null);", "+\t\t\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\t\t\tlabelHandle = OS.gtk_label_new_with_mnemonic (null);", "+\t\t\t\tif (labelHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\t\t\tarrowBoxHandle = OS.gtk_hbox_new (false, 0);", "+\t\t\t\tif (arrowBoxHandle == 0) error(SWT.ERROR_NO_HANDLES);", "+\t\t\t\tarrowHandle = OS.gtk_arrow_new (OS.GTK_ARROW_DOWN, OS.GTK_SHADOW_NONE);", "+\t\t\t\tif (arrowHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\t\t\tOS.gtk_widget_set_size_request (arrowHandle, 8, 6);", "+\t\t\t\tOS.gtk_tool_button_set_label_widget (handle, arrowBoxHandle);", "+\t\t\t\tOS.gtk_container_add (arrowBoxHandle, labelHandle);\t", "+\t\t\t\tOS.gtk_container_add (arrowBoxHandle, arrowHandle);", "+\t\t\t\t/*", "+\t\t\t\t * As we are try to emulate GtkMenuToolButton and in order", "+\t\t\t\t * to display both the label and image, it is required", "+\t\t\t\t * the set the toolitem as important. This will entitle", "+\t\t\t\t * to display the label all the times.    ", "+\t\t\t\t */", "+\t\t\t\tOS.gtk_tool_item_set_is_important (handle, true);", "+\t\t\t}", "-\t\t\t* This code is intentionally commented.  Because GTK", "-\t\t\t* enforces radio behavior in a button group a radio group", "-\t\t\t* is not created for each set of contiguous buttons, each", "-\t\t\t* radio button will not draw unpressed.  The fix is to use", "-\t\t\t* toggle buttons instead.", "+\t\t\t* Because GTK enforces radio behavior in a button group ", "+\t\t\t* a radio group is not created for each set of contiguous", "+\t\t\t* buttons, each radio button will not draw unpressed.", "+\t\t\t* The fix is to use toggle buttons instead.", "-//\t\t\thandle = OS.gtk_radio_button_new (0);", "-//\t\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "-//\t\t\tOS.gtk_toggle_button_set_mode (handle, false);", "-//\t\t\tOS.gtk_container_add (handle, boxHandle);\t", "-//\t\t\tbreak;", "-\t\t\thandle = OS.gtk_toggle_button_new ();", "+\t\t\thandle = OS.gtk_toggle_tool_button_new ();", "-\t\t\tOS.gtk_toggle_button_set_mode (handle, false);", "-\t\t\tOS.gtk_container_add (handle, boxHandle);\t", "-\t\t\thandle = OS.gtk_button_new ();", "+\t\t\thandle = OS.gtk_tool_button_new (0, null);", "-\t\t\tOS.gtk_container_add (handle, boxHandle);", "+\t\t\tOS.gtk_tool_button_set_label (handle, null);", "-\tif ((style & SWT.SEPARATOR) == 0) {", "-\t\tint [] relief = new int [1];", "-\t\tOS.gtk_widget_style_get (parent.handle, OS.button_relief, relief, 0);", "-\t\tOS.gtk_button_set_relief (handle, relief [0]);", "-\t}", "-\tOS.GTK_WIDGET_UNSET_FLAGS (handle, OS.GTK_CAN_FOCUS);", "-//\tThis code is intentionally commented.", "-//\tint /*long*/ fontHandle = parent.fontHandle ();", "-//\tGdkColor color = new GdkColor ();", "-//\tint /*long*/ style = OS.gtk_widget_get_style (fontHandle);", "-//\tOS.gtk_style_get_fg (style, OS.GTK_STATE_NORMAL, color);", "-//\tint /*long*/ font = OS.gtk_style_get_font_desc (style);", "-//\tsetForegroundColor (color);", "-//\tsetFontDescription (font);", "+\t/*", "+\t * Feature in GTK. GtkToolButton class uses this property to ", "+\t * determine whether to show or hide its label when the toolbar ", "+\t * style is GTK_TOOLBAR_BOTH_HORIZ (or SWT.RIGHT).", "+\t */", "+\tif ((parent.style & SWT.RIGHT) != 0) OS.gtk_tool_item_set_is_important (handle, true);", "+\tif ((style & SWT.SEPARATOR) == 0) OS.gtk_tool_button_set_use_underline (handle, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77648843833227434414220e9a2a9744", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "26107c4df698e35753dc6a3dcb5e875af68d4199", "commitAfterChange": "98bbb377c8fa0a6157f81dc426a5fddf7133e096", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["-\tswitch (style & (SWT.SEPARATOR | SWT.RADIO | SWT.CHECK | SWT.PUSH | SWT.DROP_DOWN)) {", "-\t\tcase SWT.PUSH:", "-\t\tcase 0:", "-\t\t\thandle = OS.gtk_toolbar_insert_element (parent.handle,", "-\t\t\tOS.GTK_TOOLBAR_CHILD_BUTTON,", "-\t\t\t0, new byte[1], null, null,", "-\t\t\t0, 0, 0,", "-\t\t\tindex);", "-\t\t\treturn;", "-\t\tcase SWT.RADIO:", "-\t\t\thandle = OS.gtk_toolbar_insert_element (parent.handle,", "-\t\t\t\tOS.GTK_TOOLBAR_CHILD_RADIOBUTTON,", "-\t\t\t\t0, new byte[1], null, null,", "-\t\t\t\t0, 0, 0,", "-\t\t\t\tindex);", "-\t\t\treturn;", "-\t\tcase SWT.CHECK:", "-\t\t\thandle = OS.gtk_toolbar_insert_element (parent.handle,", "-\t\t\t\tOS.GTK_TOOLBAR_CHILD_TOGGLEBUTTON,", "-\t\t\t\t0, new byte[1], null, null,", "-\t\t\t\t0, 0, 0,", "-\t\t\t\tindex);", "-\t\t\treturn;", "+\tif ((style & SWT.SEPARATOR) == 0) {", "+\t\tboxHandle = (parent.style & SWT.RIGHT) != 0 ? OS.gtk_hbox_new (false, 0) : OS.gtk_vbox_new (false, 0);", "+\t\tif (boxHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\tlabelHandle = OS.gtk_label_new_with_mnemonic (null);", "+\t\tif (labelHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\tDisplay display = getDisplay ();", "+\t\tpixmapHandle = OS.gtk_pixmap_new (display.nullPixmap, 0);", "+\t\tif (pixmapHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\tOS.gtk_container_add (boxHandle, pixmapHandle);", "+\t\tOS.gtk_container_add (boxHandle, labelHandle);", "+\t\tOS.gtk_widget_show (boxHandle);", "+\t}\t", "+\tint bits = SWT.SEPARATOR | SWT.RADIO | SWT.CHECK | SWT.PUSH | SWT.DROP_DOWN;", "+\tswitch (style & bits) {", "-\t\t\tboxHandle = OS.gtk_event_box_new();", "-\t\t\tif (boxHandle==0) error(SWT.ERROR_NO_HANDLES);", "-\t\t\tboolean isVertical = (parent.getStyle()&SWT.VERTICAL) != 0;", "-\t\t\thandle = isVertical? OS.gtk_hseparator_new() : OS.gtk_vseparator_new();", "-\t\t\tif (handle==0) error(SWT.ERROR_NO_HANDLES);", "-\t\t\tOS.gtk_toolbar_insert_widget (", "-\t\t\t\tparent.handle,", "-\t\t\t\tboxHandle,", "-\t\t\t\tnew byte[1], new byte[1],", "-\t\t\t\tindex);", "-\t\t\tOS.gtk_container_add(boxHandle, handle);", "-\t\t\tOS.gtk_widget_show(boxHandle);", "-\t\t\tOS.gtk_widget_show(handle);", "-\t\t\treturn;", "+\t\t\thandle = OS.gtk_hbox_new (false, 0);", "+\t\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\t\tboolean isVertical = (parent.style & SWT.VERTICAL) != 0;", "+\t\t\tseparatorHandle = isVertical ? OS.gtk_hseparator_new() : OS.gtk_vseparator_new();", "+\t\t\tif (separatorHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\t\tOS.gtk_widget_set_size_request (separatorHandle, isVertical ? 15 : 2, isVertical ? 2 : 15);", "+\t\t\tOS.gtk_container_add (handle, separatorHandle);", "+\t\t\tOS.gtk_widget_show (separatorHandle);", "+\t\t\tbreak;", "-\t\t\t/* create the box */", "-\t\t\tisVertical = (parent.getStyle()&SWT.VERTICAL) != 0;", "-\t\t\tboxHandle = isVertical? OS.gtk_vbox_new(false, 0) : OS.gtk_hbox_new(false, 0);", "-\t\t\tif (boxHandle==0) error(SWT.ERROR_NO_HANDLES);", "-\t\t\t/* create the button */", "-\t\t\thandle = OS.gtk_button_new();", "-\t\t\tif (handle==0) error(SWT.ERROR_NO_HANDLES);", "-\t\t\tOS.gtk_button_set_relief(handle, OS.GTK_RELIEF_NONE);", "-\t\t\t/* create the arrow */", "+\t\t\thandle = OS.gtk_button_new ();", "+\t\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\t\tint arrowBoxHandle = OS.gtk_hbox_new (false, 0);", "+\t\t\tif (arrowBoxHandle == 0) error(SWT.ERROR_NO_HANDLES);", "-\t\t\tif (arrowHandle==0) error(SWT.ERROR_NO_HANDLES);", "-\t\t\tarrowButtonHandle = OS.gtk_button_new ();", "-\t\t\tif (arrowButtonHandle==0) error(SWT.ERROR_NO_HANDLES);", "-\t\t\tOS.gtk_button_set_relief(arrowButtonHandle, OS.GTK_RELIEF_NONE);", "-\t\t\tOS.gtk_container_set_border_width(arrowButtonHandle,0);", "-\t\t\t//?? LEAK", "-\t\t\tint style = OS.gtk_style_copy(OS.gtk_widget_get_style(arrowButtonHandle));", "-\t\t\tGtkStyle gtkStyle = new GtkStyle ();", "-\t\t\tOS.memmove(gtkStyle, style);", "-\t\t\tgtkStyle.xthickness = 0;", "-\t\t\tOS.memmove(style, gtkStyle);", "-\t\t\tOS.gtk_widget_set_style(arrowButtonHandle, style);", "-\t\t\t// when the arrow gets destroyed, it will dereference the clone", "-\t\t\t", "-\t\t\tOS.gtk_toolbar_insert_widget (", "-\t\t\t\tparent.handle,", "-\t\t\t\tboxHandle,", "-\t\t\t\tnew byte[1], new byte[1],", "-\t\t\t\tindex);", "-\t\t\tOS.gtk_box_pack_start(boxHandle, handle, true,true,0);", "-\t\t\tOS.gtk_box_pack_end(boxHandle, arrowButtonHandle, true,true,0);", "-\t\t\tOS.gtk_container_add (arrowButtonHandle, arrowHandle);", "-\t\t\tOS.gtk_widget_show(handle);", "+\t\t\tif (arrowHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\t\tOS.gtk_container_add (handle, arrowBoxHandle);", "+\t\t\tOS.gtk_container_add (arrowBoxHandle, boxHandle);\t", "+\t\t\tOS.gtk_container_add (arrowBoxHandle, arrowHandle);\t", "+\t\t\tOS.gtk_widget_show (arrowBoxHandle);", "-\t\t\tOS.gtk_widget_show (arrowButtonHandle);", "-\t\t\tOS.gtk_widget_show(boxHandle);", "-\t\t\treturn;", "+\t\t\tbreak;", "+\t\tcase SWT.RADIO:", "+\t\t\thandle = OS.gtk_radio_button_new (0);", "+\t\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\t\tOS.gtk_toggle_button_set_mode (handle, false);", "+\t\t\tOS.gtk_container_add (handle, boxHandle);\t", "+\t\t\tbreak;", "+\t\tcase SWT.CHECK:", "+\t\t\thandle = OS.gtk_toggle_button_new ();", "+\t\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\t\tOS.gtk_toggle_button_set_mode (handle, false);", "+\t\t\tOS.gtk_container_add (handle, boxHandle);\t", "+\t\t\tbreak;", "+\t\tcase SWT.PUSH:", "-\t\t\t/*", "-\t\t\t * Can not specify more than one style", "-\t\t\t */", "-\t\t\terror(SWT.ERROR_ITEM_NOT_ADDED);", "+\t\t\thandle = OS.gtk_button_new ();", "+\t\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\t\tOS.gtk_container_add (handle, boxHandle);", "+\t\t\tbreak;", "-}", "+\tif ((style & SWT.SEPARATOR) == 0) {", "+\t\tbyte [] button_relief = Converter.wcsToMbcs(null, \"button_relief\", true);", "+\t\tint [] relief = new int [1];", "+\t\tOS.gtk_widget_style_get (parent.handle, button_relief, relief, 0);", "+\t\tOS.gtk_button_set_relief (handle, relief [0]);", "+\t\tOS.GTK_WIDGET_UNSET_FLAGS (handle, OS.GTK_CAN_FOCUS);", "+\t}", "+\tOS.gtk_widget_show (handle);", "+\tOS.gtk_toolbar_insert_widget (parent.handle, handle, new byte[1], new byte[1], index);"]}], "num": 50186}