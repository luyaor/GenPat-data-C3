{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "966a168cb6449dcf5d9347150d02999b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58eb8077b4023f4560dc94f9685721cb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "db44f811fdd3778cffa3b94af6d227463daf97df", "commitAfterChange": "68bd206027eae3619cfb861b15c75e465cfd7219", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "  boolean sendKeyEvent (NSEvent nsEvent, int type)", "signatureAfterChange": "  boolean sendKeyEvent (NSEvent nsEvent, int type)", "diff": ["-\tString oldText = \"\";", "-\t\t\toldText = DELIMITER;", "-\t\t\toldText = new String (new char [] {character});", "-\t}", "-\tString newText = verifyText (oldText, start, end, nsEvent);", "-\tif (newText == null) return false;", "-\tif (charCount - (end - start) + newText.length () > textLimit) {", "-\t\treturn false;", "-\t}", "-\tresult = newText == oldText;", "-\tif (newText != oldText || hiddenText != null) {", "-\t\tif ((style & SWT.SINGLE) != 0) {", "-\t\t\tinsertEditText (newText);", "-\t\t} else {", "-\t\t\tNSString str = NSString.stringWith (newText);", "-\t\t\tNSTextView widget = (NSTextView) view;", "-\t\t\tNSRange range = widget.selectedRange ();", "-\t\t\twidget.textStorage ().replaceCharactersInRange (range, str);", "-\t\t}", "-\t\tif (newText.length () != 0) sendEvent (SWT.Modify);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10999c6e0716d2d8c62cf9b3cc90c9c0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/datetime/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "df052de83d7acd1cc399aa5a5220357d3ff18aa2", "commitAfterChange": "64387f2af5241a200363ccc1f0c65ecf0433d6b7", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  void onVerify(Event event)", "signatureAfterChange": "  void onVerify(Event event)", "diff": ["+\tif (fieldName == Calendar.AM_PM) {", "+\t\tif (newText.equalsIgnoreCase(\"A\") || newText.equalsIgnoreCase(\"AM\")) {", "+\t\t\tsetTextField(fieldName, Calendar.AM, true);", "+\t\t} else if (newText.equalsIgnoreCase(\"P\") || newText.equalsIgnoreCase(\"PM\")) {", "+\t\t\tsetTextField(fieldName, Calendar.PM, true);", "+\t\t}", "+\t\treturn;", "+\t}", "-\tif (newTextLength + characterCount < length) {", "-\t\tcharacterCount += newTextLength;", "-\t} else {", "-\t\tcharacterCount = 0;", "-\t}", "+\tcharacterCount = (newTextLength < length) ? newTextLength : 0;", "-\t\t\t\tnewValue = Integer.parseInt(newText.substring(newTextLength - length + 1));", "+\t\t\t\tnewText = newText.substring(newTextLength - length + 1);", "+\t\t\t\tnewValue = Integer.parseInt(newText);", "+\t\t\t\tcharacterCount = length - 1;"]}], "num": 33477}