{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "64361408ae95a04b70c1463d8420c732", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "889dd2510070a0438414fadd72e0ffbf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "f9b2da66a3aa86a16bf7c87de7bf57c3a591dc41", "commitAfterChange": "ab3a0e2212badb4230b4950583046c2765ca9b1b", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 62, "signatureBeforeChange": "\r private void ensureVisible()", "signatureAfterChange": "\r public void showSelection ()", "diff": ["-private void ensureVisible() {\r", "-\tif (selectedIndex == -1) return;\r", "-\t// make sure selected item is visible\r", "-\t\r", "-\tCTabItem tabItem = items[selectedIndex];\r", "-\tif (selectedIndex < topTabIndex) {\r", "-\t\ttopTabIndex = selectedIndex;\r", "-\t}\r", "-\tlayoutItems();\r", "-\t\r", "-\twhile (tabItem.x + tabItem.width > width && selectedIndex != topTabIndex) {\r", "-\t\tlayoutItems();\r", "+ */\r", "+public void showSelection () {\r", "+\tcheckWidget (); \r", "+\tif (selectedIndex != -1) {\r", "+\t\tshowItem(getSelection());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12cb3dc755e917897fb383f859054c96", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "8e5c97c9e89c4e78164a728ed489008ab911e93b", "commitAfterChange": "b2a57ac5aeda1a37b1c7d7c906ff837c3c7313d8", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 50, "signatureBeforeChange": "\r boolean setItemBounds()", "signatureAfterChange": "\r boolean setItemBounds()", "diff": ["-\tif (area.width == 0 || area.height == 0 || items.length == 0) return changed;\r", "+\tif (area.width <= 0 || area.height <= 0 || items.length == 0) return changed;\r", "-\tif (setItemLocation()) changed = true;\r", "-\t\r", "-\t\t// if all items can be displayed, show all items\r", "-\t\tif (topTabIndex != 0) {\r", "-\t\t\ttopTabIndex = 0;\r", "-\t\t\tsetItemLocation();\r", "-\t\t\tchanged = true;\r", "-\t\t}\r", "-\t} else {\r", "-\t\t// Is there a gap after last item showing\r", "-\t\tCTabItem lastItem = items[items.length -1];\r", "-\t\tif (lastItem.x + lastItem.width < areaWidth) {\r", "-\t\t\tint scrollWidth = arrowBar.getSize().x;\r", "-\t\t\tint maxWidth = areaWidth;\r", "-\t\t\tif (scroll_leftVisible() || scroll_rightVisible()) {\r", "-\t\t\t\tmaxWidth -=  scrollWidth;\r", "-\t\t\t}\r", "-\t\t\twhile (topTabIndex > 0 && maxWidth - lastItem.x - lastItem.width > items[topTabIndex - 1].width) {\r", "-\t\t\t\ttopTabIndex--;\r", "-\t\t\t\tsetItemLocation();\r", "-\t\t\t\tchanged = true;\r", "-\t\t\t\tmaxWidth = areaWidth;\r", "-\t\t\t\tif (scroll_leftVisible() || scroll_rightVisible()) {\r", "-\t\t\t\t\tmaxWidth -=  scrollWidth;\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t}\r", "-\t}\r", "+\t\ttopTabIndex = 0;\r", "+\t} \r", "+\tif (setItemLocation()) changed = true;\r", "+\t\r", "+\t// Is there a gap after last item showing\r", "+\tif (correctLastItem()) changed = true;\r"]}], "num": 7406}