{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ecb725da4ac454a6d747eb5317dd84bd", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78d4b33c2a49b6a7d12fbb9ce8100a43", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "13c7ba94b389ac7c444b6a0c4c21ecac48b2f8f4", "commitAfterChange": "27c0efa85174869eed1eeedefcfdd6ce7fa3b42e", "methodNumberBeforeChange": 361, "methodNumberAfterChange": 362, "signatureBeforeChange": " \tint get_attributes(int offset, int pStartOffset, int pEndOffset, int pbstrTextAttributes)", "signatureAfterChange": " \tint get_attributes(int offset, int pStartOffset, int pEndOffset, int pbstrTextAttributes)", "diff": ["+\t\tString textAttributes = \"\";", "+\t\tTextStyle style = event.textStyle;", "+\t\tif (style != null) {", "+\t\t\tif (style.rise != 0) {", "+\t\t\t\ttextAttributes += \"text-position:\";", "+\t\t\t\tif (style.rise > 0) textAttributes += \"super\";", "+\t\t\t\telse textAttributes += \"sub\";", "+\t\t\t}", "+\t\t\tif (style.underline) {", "+\t\t\t\ttextAttributes += \"text-underline-type:\";", "+\t\t\t\tswitch (style.underlineStyle) {", "+\t\t\t\t\tcase SWT.UNDERLINE_SINGLE: textAttributes += \"single;\"; break;", "+\t\t\t\t\tcase SWT.UNDERLINE_DOUBLE: textAttributes += \"double;\"; break;", "+\t\t\t\t\tcase SWT.UNDERLINE_SQUIGGLE: textAttributes += \"single;text-underline-style:wave;\"; break;", "+\t\t\t\t\tcase SWT.UNDERLINE_ERROR: textAttributes += \"single;text-underline-style:wave;invalid:true;\"; break;", "+\t\t\t\t\tdefault: textAttributes += \"none;\"; break;", "+\t\t\t\t}", "+\t\t\t\t// TODO: style.underlineColor is not currently part of the IA2 spec. If provided, it would be \"text-underline-color:rgb(n,n,n);\"", "+\t\t\t}", "+\t\t\tif (style.strikeout) {", "+\t\t\t\ttextAttributes += \"text-line-through-type:single\";", "+\t\t\t\t// TODO: style.strikeoutColor is not currently part of the IA2 spec. If provided, it would be \"text-line-through-color:rgb(n,n,n);\"", "+\t\t\t}", "+\t\t\tFont font = style.font;", "+\t\t\tif (font != null && !font.isDisposed()) {", "+\t\t\t\tFontData fontData = font.getFontData()[0];", "+\t\t\t\ttextAttributes += \"font-family:\" + fontData.getName() + \";\";", "+\t\t\t\ttextAttributes += \"font-size:\" + fontData.getHeight() + \"pt;\";", "+\t\t\t\ttextAttributes += \"font-style:\" + (fontData.data.lfItalic != 0 ? \"italic\" : \"normal\") + \";\";", "+\t\t\t\ttextAttributes += \"font-weight:\" + fontData.data.lfWeight + \";\";", "+\t\t\t}", "+\t\t\tColor color = style.foreground;", "+\t\t\tif (color != null && !color.isDisposed()) {", "+\t\t\t\ttextAttributes += \"color:rgb(\" + color.getRed() + \",\" + color.getGreen() + \",\" + color.getBlue() + \");\";", "+\t\t\t}", "+\t\t\tcolor = style.background;", "+\t\t\tif (color != null && !color.isDisposed()) {", "+\t\t\t\ttextAttributes += \"background-color:rgb(\" + color.getRed() + \",\" + color.getGreen() + \",\" + color.getBlue() + \");\";", "+\t\t\t}", "+\t\t}", "+\t\tif (event.attributes != null) textAttributes += event.attributes;", "+\t\tif (DEBUG) print(\"IAccessibleText::get_attributes(\" + offset + \") returning start = \" + event.start + \", end = \" + event.end + \", attributes = \" + textAttributes);", "-\t\tString textAttributes = \"\";", "-\t\t// TODO: Construct text attributes string from event data", "-\t\tif (textAttributes.length() == 0) return COM.S_FALSE; // TODO: is S_FALSE ok here?", "+\t\tif (textAttributes.length() == 0) return COM.S_FALSE;", "-\t\t// TODO: @retval S_FALSE if there is nothing to return, [out] values are 0s and NULL respectively@retval E_INVALIDARG if bad [in] passed, [out] values are 0s and NULL respectively"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05bb35c7aa842a1236bd214159ed81f0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "17d5bcbf142c35cae2dbd838d742b3d14d3d4742", "commitAfterChange": "87acbd6a077adb5322492cfda574017291005ec0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  void computeRuns ()", "signatureAfterChange": "  void computeRuns ()", "diff": ["-\t\t\tint underlineStyle = OS.PANGO_UNDERLINE_SINGLE;", "+\t\t\tint underlineStyle = OS.PANGO_UNDERLINE_NONE;", "-\t\t\t\tint /*long*/ attr = OS.pango_attr_underline_new(underlineStyle);", "+\t\t\t\tif (style.underlineColor == null || OS.GTK_VERSION >= OS.VERSION(2, 6, 0)) {", "+\t\t\t\t\tint /*long*/ attr = OS.pango_attr_underline_new(underlineStyle);", "+\t\t\t\t\tOS.memmove(attribute, attr, PangoAttribute.sizeof);", "+\t\t\t\t\tattribute.start_index = byteStart;", "+\t\t\t\t\tattribute.end_index = byteEnd;", "+\t\t\t\t\tOS.memmove(attr, attribute, PangoAttribute.sizeof);", "+\t\t\t\t\tOS.pango_attr_list_insert(attrList, attr);", "+\t\t\t\t\tif (style.underlineColor != null) {", "+\t\t\t\t\t\tGdkColor color = style.underlineColor.handle;", "+\t\t\t\t\t\tattr = OS.pango_attr_underline_color_new(color.red, color.green, color.blue);", "+\t\t\t\t\t\tOS.memmove(attribute, attr, PangoAttribute.sizeof);", "+\t\t\t\t\t\tattribute.start_index = byteStart;", "+\t\t\t\t\t\tattribute.end_index = byteEnd;", "+\t\t\t\t\t\tOS.memmove(attr, attribute, PangoAttribute.sizeof);", "+\t\t\t\t\t\tOS.pango_attr_list_insert(attrList, attr);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\tif (style.strikeout) {", "+\t\t\tif (style.strikeoutColor == null || OS.GTK_VERSION >= OS.VERSION(2, 6, 0)) {", "+\t\t\t\tint /*long*/ attr = OS.pango_attr_strikethrough_new(true);", "-\t\t\t\tif (style.underlineColor != null && OS.GTK_VERSION >= OS.VERSION(2, 6, 0)) {", "-\t\t\t\t\tGdkColor color = style.underlineColor.handle;", "-\t\t\t\t\tattr = OS.pango_attr_underline_color_new(color.red, color.green, color.blue);", "+\t\t\t\tif (style.strikeoutColor != null) {", "+\t\t\t\t\tGdkColor color = style.strikeoutColor.handle;", "+\t\t\t\t\tattr = OS.pango_attr_strikethrough_color_new(color.red, color.green, color.blue);", "-\t\t\t}", "-\t\t}", "-\t\tif (style.strikeout) {", "-\t\t\tint /*long*/ attr = OS.pango_attr_strikethrough_new(true);", "-\t\t\tOS.memmove(attribute, attr, PangoAttribute.sizeof);", "-\t\t\tattribute.start_index = byteStart;", "-\t\t\tattribute.end_index = byteEnd;", "-\t\t\tOS.memmove(attr, attribute, PangoAttribute.sizeof);", "-\t\t\tOS.pango_attr_list_insert(attrList, attr);", "-\t\t\tif (style.strikeoutColor != null && OS.GTK_VERSION >= OS.VERSION(2, 6, 0)) {", "-\t\t\t\tGdkColor color = style.strikeoutColor.handle;", "-\t\t\t\tattr = OS.pango_attr_strikethrough_color_new(color.red, color.green, color.blue);", "-\t\t\t\tOS.memmove(attribute, attr, PangoAttribute.sizeof);", "-\t\t\t\tattribute.start_index = byteStart;", "-\t\t\t\tattribute.end_index = byteEnd;", "-\t\t\t\tOS.memmove(attr, attribute, PangoAttribute.sizeof);", "-\t\t\t\tOS.pango_attr_list_insert(attrList, attr);", "+}"]}], "num": 29993}