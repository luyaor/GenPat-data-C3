{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a3336ac7a79bfbcff28470731e964d2d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5c35686f921a5adc43f2ea5225a9a22", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_TreeItem.java", "commitBeforeChange": "80dfb437e1cf72ae8fdf50da1fe73b0a6cf99eed", "commitAfterChange": "5f54319c118c62a8385f5e04df3f5c1e943c1812", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 37, "signatureBeforeChange": "  public void test_setTextLjava_lang_String()", "signatureAfterChange": "  public void test_setText$Ljava_lang_String()", "diff": ["-", "-public void test_setTextLjava_lang_String() {", "-\t\ttreeItem.setText((String)null);\t\t", "-\t\tfail(\"No exception thrown for string == null\");", "+", "+public void test_setText$Ljava_lang_String() {", "+\tfinal String TestString = \"test\";", "+\tfinal String TestStrings[] = new String[] {TestString, TestString + \"1\", TestString + \"2\"};", "+\t", "+\ttry {", "+\t\ttreeItem.setText((String []) null);", "+\t\tfail(\"No exception thrown for strings == null\");", "+\t}", "+\tcatch (IllegalArgumentException e) {", "+\t}", "+\t", "+   /*", "+ \t* Test the getText/setText API with a Tree that has only ", "+ \t* the default column.", "+ \t*/", "+\t", "+\tassertEquals(0, treeItem.getText(1).length());", "+\t", "+\ttreeItem.setText(TestStrings);", "+\tassertEquals(TestStrings[0], treeItem.getText(0));", "+\tfor (int i = 1; i < TestStrings.length; i++) {", "+\t\tassertEquals(0, treeItem.getText(i).length());", "+\t}", "+\t", "+\t", "+   /*", "+ \t* Test the getText/setText API with a Tree that enough ", "+ \t* columns to fit all test item texts.", "+ \t*/", "+ \t\t", "+\tint columnCount = tree.getColumnCount();", "+\tif (columnCount < images.length) {", "+\t\tfor (int i = columnCount; i < images.length; i++){", "+\t\t\tTreeColumn column = new TreeColumn(tree, SWT.NONE);", "+\t\t}", "+\t}", "+\tTreeColumn[] columns = tree.getColumns();", "+\tfor (int i = 0; i < TestStrings.length; i++) {", "+\t\tcolumns[i].setText(TestStrings[i]);", "+\t}", "+\tassertEquals(0, treeItem.getText(1).length());", "+", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c431b0988c21c3261b71e2e65475aa2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 81, "signatureBeforeChange": " public void redraw (int x, int y, int width, int height, boolean all)", "signatureAfterChange": " void redrawItems (int startIndex, int endIndex, boolean focusBoundsOnly)", "diff": ["+ */", "+void redrawItems (int startIndex, int endIndex, boolean focusBoundsOnly) {", "+\tint startY = (startIndex - topIndex) * itemHeight + getHeaderHeight ();", "+\tint height = (endIndex - startIndex + 1) * itemHeight;", "+\tif (focusBoundsOnly) {", "+\t\tif (columns.length > 0) {", "+\t\t\tint rightX = 0;", "+\t\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "+\t\t\t\tTableColumn lastColumn = columns [columns.length - 1];", "+\t\t\t\trightX = lastColumn.getX () + lastColumn.width;", "+\t\t\t} else {", "+\t\t\t\trightX = columns [0].width - horizontalOffset;", "+\t\t\tif (rightX <= 0) return;\t/* first column not visible */", "+\t\tendIndex = Math.min (endIndex, items.length - 1);", "+\t\tfor (int i = startIndex; i <= endIndex; i++) {", "+\t\t\tRectangle bounds = items [i].getFocusBounds ();", "+\t\t\tredraw (bounds.x, startY, bounds.width, height, false);", "+\t\t}", "+\t} else {", "+\t\tRectangle bounds = getClientArea ();", "+\t\tredraw (0, startY, bounds.width, height, false);", "+\t}", "+}", "-}", "-public void redraw (int x, int y, int width, int height, boolean all) {", "-\tcheckWidget();", "-\tif (ignoreRedraw) return;", "-\tsuper.redraw(x, y, width, height, all);", "-}"]}], "num": 61595}