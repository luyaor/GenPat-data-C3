{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "df8c20d501a45185c6509570aa18e12a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6428a54ac450a3d82e065747cb6c2789", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/NativesGenerator.java", "commitBeforeChange": "298c8aba1d7af29e1fd0b940de7cdcb4e190bc43", "commitAfterChange": "1316b4869e24acc4a43339c0a07752fc216e2600", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  void generateFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "signatureAfterChange": "  void generateFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "diff": ["+\t\tif (methodData.getFlag(Flags.FLAG_CAST)) {", "+\t\t\toutput(\"((\");", "+\t\t\toutput(getTypeSignature2(returnType));", "+\t\t\toutput(\" (*)(\");", "+\t\t\tfor (int i = 0; i < paramTypes.length; i++) {", "+\t\t\t\tif (i != 0) output(\", \");", "+\t\t\t\tClass paramType = paramTypes[i];", "+\t\t\t\tParameterData paramData = getMetaData().getMetaData(method, i);", "+\t\t\t\tString cast = paramData.getCast();", "+\t\t\t\tif (cast != null && cast.length() != 0) {", "+\t\t\t\t\tif (cast.startsWith(\"(\")) cast = cast.substring(1);", "+\t\t\t\t\tif (cast.endsWith(\")\")) cast = cast.substring(0, cast.length() - 1);", "+\t\t\t\t\toutput(cast);", "+\t\t\t\t} else {", "+\t\t\t\t\toutput(getTypeSignature4(paramType, paramData.getFlag(FLAG_STRUCT)));", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\toutput(\"))\");", "+\t\t}", "+\t\tif (methodData.getFlag(Flags.FLAG_CAST)) {", "+\t\t\toutput(\")\");", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b02a2b925bbedb7d9e7c886d9668499b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "f3574213a34cbfed877427d4e13e484544aa252e", "commitAfterChange": "7ed1dcc5348017f60834b492c610b6f538174f29", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tstatic String[] getPaths(int dialog)", "signatureAfterChange": " private String interpretOsAnswer(int dialog)", "diff": ["+private String interpretOsAnswer(int dialog) {", "+\tString separator = System.getProperty (\"file.separator\");", "+\t", "+\tString firstResult= null;", "+\tint[] tmp= new int[1];", "+\tOS.NavDialogGetReply(dialog, tmp);", "+\tint reply= tmp[0];", "+\t", "+\tint selection= OS.NavReplyRecordGetSelection(reply);", "+\tOS.AECountItems(selection, tmp);", "+\tint count= tmp[0];", "+\t", "+\tString commonPath= null;", "+\tif (count > 0) {", "+\t\tString fileName= null;", "+\t\tfileNames= new String[count];", "+\t\tfor (int i= 0; i < count; i++) {", "+\t\t\tOS.AEGetNthPtr(selection, i+1, tmp);", "+\t\t\tString fullPath= MacUtil.getStringAndRelease(tmp[0]);", "+\t\t\tif (firstResult == null)", "+\t\t\t\tfirstResult= fullPath;", "+\t\t\tif (fullPath != null && fullPath.length() > 0) {", "+\t\t\t\tint separatorIndex= fullPath.lastIndexOf(separator);", "+\t\t\t\tif (separatorIndex >= 0) {", "+\t\t\t\t\tfileName= fullPath.substring(separatorIndex+separator.length());", "+\t\t\t\t\tString fp= fullPath.substring(0, separatorIndex);", "+\t\t\t\t\tif (commonPath == null)", "+\t\t\t\t\t\tcommonPath= fp;\t// remember common filterPath", "+\t\t\t\t\telse {", "+\t\t\t\t\t\tif (!commonPath.equals(fp))\t// verify that filterPath is in fact common", "+\t\t\t\t\t\t\tSystem.out.println(\"FileDialog.getPaths: mismatch in filterPaths\");", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\tfileName= fullPath;", "+\t\t\t\t}", "+\t\t\t\tfileNames[i]= fileName;", "+\t\t\t}", "+\t\t}", "+\t} else {", "+\t\tfileNames= null;", "+\t}", "+\t", "+\tif (commonPath != null)", "+\t\tfilterPath= commonPath;", "+\telse", "+\t\tfilterPath= \"\";", "+\t", "+\tOS.NavDialogDisposeReply(reply);", "+\t", "+\treturn firstResult;", "+}", "-", "-\tstatic String[] getPaths(int dialog) {", "-\t\tint[] tmp= new int[1];", "-\t\tOS.NavDialogGetReply(dialog, tmp);", "-\t\tint reply= tmp[0];", "-\t\t", "-\t\tint selection= OS.NavReplyRecordGetSelection(reply);", "-\t\tOS.AECountItems(selection, tmp);", "-\t\tint count= tmp[0];", "-\t\t", "-\t\tString[] result= new String[count];", "-\t\tfor (int i= 0; i < count; i++) {", "-\t\t\tOS.AEGetNthPtr(selection, i+1, tmp);", "-\t\t\tresult[i]= MacUtil.getStringAndRelease(tmp[0]);", "-\t\t}", "-\t\t", "-\t\tOS.NavDialogDisposeReply(reply);", "-\t\t", "-\t\treturn result;", "-\t}"]}], "num": 31272}