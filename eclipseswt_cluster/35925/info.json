{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5b90def535801ed4e3588df0a261d3c7", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e243ff9e7fdb6282a3ce0fe175fa927", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/gtk/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "7e2de3fb032496a80dceeae6d06edb14795a7315", "commitAfterChange": "06f06dd0c77f0d9a4c38817b6ad1d77e716043a0", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": "  public boolean create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["-public boolean create (Composite parent, int style) {", "-\tif (!LibraryLoaded) return false;", "-", "+public void create (Composite parent, int style) {", "-\t\t// TODO webkit_check_version() should do the following, but for some reason", "-\t\t// this symbol is missing from the latest build.  If it is present in Linux", "-\t\t// distro-provided builds then replace the following with this call.", "-\t\tint major = WebKitGTK.webkit_major_version ();", "-\t\tint minor = WebKitGTK.webkit_minor_version ();", "-\t\tint micro = WebKitGTK.webkit_micro_version ();", "-\t\tboolean success = major > MIN_VERSION[0] ||", "-\t\t\t(major == MIN_VERSION[0] && minor > MIN_VERSION[1]) ||", "-\t\t\t(major == MIN_VERSION[0] && minor == MIN_VERSION[1] && micro >= MIN_VERSION[2]);", "-\t\tif (!success) return false;", "-", "-", "-\treturn true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6aa2ec976f18c3d125d34a12f4dbdb1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextBidi.java", "commitBeforeChange": "1d0592b73510c814a303276fdd1b2a6e7bd707f2", "commitAfterChange": "de638b67c438fc18fd074ec6b85813a5219637ef", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r int drawBidiText(int logicalStart, int length, int xOffset, int yOffset)", "signatureAfterChange": "\r void drawBidiText(int logicalStart, int length, int xOffset, int yOffset)", "diff": ["-int drawBidiText(int logicalStart, int length, int xOffset, int yOffset) {\r", "+void drawBidiText(int logicalStart, int length, int xOffset, int yOffset) {\r", "-\tint stopX;\r", "-\t\treturn StyledText.XINSET;\r", "+\t\treturn;\r", "-\t// between R2L and L2R direction segment?\r", "-\tif (endOffset < order.length && isRightToLeft(endOffset) == false && isRightToLeft(endOffset - 1)) {\r", "-\t\t// continue drawing at start of L2R segment\r", "-\t\tstopX = renderPositions[endOffset];\r", "-\t}\r", "-\telse\r", "-\tif (isRightToLeft(endOffset - 1)) {\r", "-\t\t// we rendered a R2L segment\r", "-\t\tstopX = renderPositions[order[endOffset - 1]];\r", "-\t}\r", "-\telse {\r", "-\t\tint visualEnd = order[endOffset - 1];\r", "-\t\t// we rendered a L2R segment\r", "-\t\tstopX = renderPositions[visualEnd] + dx[visualEnd];\r", "-\t}\r", "-\treturn stopX;\r"]}], "num": 35925}