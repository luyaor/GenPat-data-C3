{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d9a83941f0b74e96a0c0e1a770a98127", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43bd728898a994148ac641f067b2c0b4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "3b350dd4c4b9460951698e03648662ba16994245", "commitAfterChange": "21e23b791a319e5180c60f1da8d0340d3dcffe74", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 20, "signatureBeforeChange": " void drawExpand(GC gc)", "signatureAfterChange": " void drawMaximize(GC gc)", "diff": ["+void drawMaximize(GC gc) {", "+\tif (maxRect.width == 0 || maxRect.height == 0) return;", "+\t\tgc.fillRectangle(maxRect);", "+\tint x = maxRect.x + indent - 1;", "+\tint y = maxRect.y + indent;", "+\tswitch (maxImageState) {", "-}", "-void drawExpand(GC gc) {", "-\tif (expandRect.width == 0 || expandRect.height == 0) return;", "-\tDisplay display = getDisplay();", "-\tif (!single) {", "-\t\tgc.setBackground(getParent().getBackground());", "-\t\tgc.fillRectangle(expandRect);", "-\t}", "-\t// draw triangle (7x4 or 4x7)", "-\tint indent = Math.max(1, (tabHeight-11)/2);", "-\tint x = expandRect.x + indent - 1;", "-\tint y = expandRect.y + indent;", "-\tswitch (expandImageState) {", "-\t\tcase NORMAL: {", "-\t\t\tif (expanded) {", "-\t\t\t\tgc.setBackground(getDisplay().getSystemColor(SWT.COLOR_WHITE));", "-\t\t\t\tgc.fillRectangle(x, y, 9, 3);", "-\t\t\t\tgc.setForeground(borderColor1);", "-\t\t\t\tgc.drawRectangle(x, y, 9, 3);", "-\t\t\t} else {", "+\t\t\tif (!maximized) {", "+\t\t\t} else {", "+\t\t\t\tgc.setBackground(getDisplay().getSystemColor(SWT.COLOR_WHITE));", "+\t\t\t\tgc.fillRectangle(x, y+3, 5, 4);", "+\t\t\t\tgc.fillRectangle(x+2, y, 5, 4);", "+\t\t\t\tgc.setForeground(borderColor1);", "+\t\t\t\tgc.drawRectangle(x, y+3, 5, 4);", "+\t\t\t\tgc.drawRectangle(x+2, y, 5, 4);", "+\t\t\t\tgc.drawLine(x+3, y+1, x+6, y+1);", "+\t\t\t\tgc.drawLine(x+1, y+4, x+4, y+4);", "-\t\t\tColor border = new Color(display, EXPAND_BORDER);", "-\t\t\tif (expanded) {", "-\t\t\t\tgc.setBackground(getDisplay().getSystemColor(SWT.COLOR_WHITE));", "-\t\t\t\tgc.fillRectangle(x, y, 9, 3);", "-\t\t\t\tgc.setForeground(border);", "-\t\t\t\tgc.drawRectangle(x, y, 9, 3);", "-\t\t\t} else {", "+\t\t\tColor border = new Color(display, MINMAX_BORDER);", "+\t\t\tif (!maximized) {", "+\t\t\t} else {", "+\t\t\t\tgc.setBackground(getDisplay().getSystemColor(SWT.COLOR_WHITE));", "+\t\t\t\tgc.fillRectangle(x, y+3, 5, 4);", "+\t\t\t\tgc.fillRectangle(x+2, y, 5, 4);", "+\t\t\t\tgc.setForeground(border);", "+\t\t\t\tgc.drawRectangle(x, y+3, 5, 4);", "+\t\t\t\tgc.drawRectangle(x+2, y, 5, 4);", "+\t\t\t\tgc.drawLine(x+3, y+1, x+6, y+1);", "+\t\t\t\tgc.drawLine(x+1, y+4, x+4, y+4);", "-\t\t\tColor fill = new Color(display, EXPAND_FILL);", "-\t\t\tColor border = new Color(display, EXPAND_BORDER);", "-\t\t\tif (expanded) {", "+\t\t\tColor fill = new Color(display, MINMAX_FILL);", "+\t\t\tColor border = new Color(display, MINMAX_BORDER);", "+\t\t\tif (!maximized) {", "+\t\t\t\tgc.setBackground(fill);", "+\t\t\t\tgc.fillRectangle(x+1, y+1, 7, 9);", "+\t\t\t\tgc.setForeground(border);", "+\t\t\t\tgc.drawRectangle(x+1, y+1, 7, 9);", "+\t\t\t\tgc.drawLine(x+2, y+3, x+7, y+3);", "+\t\t\t} else {", "+\t\t\t\tgc.setBackground(fill);", "+\t\t\t\tgc.fillRectangle(x+1, y+4, 5, 4);", "+\t\t\t\tgc.fillRectangle(x+3, y+1, 5, 4);", "+\t\t\t\tgc.setForeground(border);", "+\t\t\t\tgc.drawRectangle(x+1, y+4, 5, 4);", "+\t\t\t\tgc.drawRectangle(x+3, y+1, 5, 4);", "+\t\t\t\tgc.drawLine(x+4, y+2, x+7, y+2);", "+\t\t\t\tgc.drawLine(x+2, y+5, x+5, y+5);", "+\t\t\t}", "+\t\t\tfill.dispose();", "+\t\t\tborder.dispose();", "+\t\t\tbreak;", "+\t\t}", "+\t}", "+}", "-\t\t\t\tgc.fillRectangle(x+1, y+1, 7, 9);", "-\t\t\t\tgc.drawRectangle(x+1, y+1, 7, 9);", "-\t\t\t\tgc.drawLine(x+2, y+3, x+7, y+3);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f93c16498de4412266efc9696418322", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "4a41229267d8ec39ffddb937135f7f228c3d90ec", "commitAfterChange": "a3f5ef23bb9a2d806a5c1b1bcf9eba42e3d5e4ca", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 52, "signatureBeforeChange": "\r \r private void initCloseButtonImages()", "signatureAfterChange": "\r \r private void updateCloseBar()", "diff": ["-private void initCloseButtonImages() {\r", "-\tif (closeImage != null) return;\r", "-\r", "-\ttry {\r", "-\t\tDisplay display = getDisplay();\r", "-\t\tImage image = new Image(display, CTabFolder.class.getResourceAsStream(\"close.gif\"));\r", "-\t\tImageData source = image.getImageData();\r", "-\t\tImageData mask = source.getTransparencyMask();\r", "-\t\timage.dispose();\r", "-\t\tcloseImage = new Image(display, source, mask);\r", "-\t} catch (Error e) {\r", "-\t\tcloseImage = null;\r", "-\t\treturn;\r", "-\t}\r", "+private void updateCloseBar() {\r", "+\tint imageHeight = getTabHeight() - CTabItem.TOP_MARGIN - CTabItem.BOTTOM_MARGIN - 6;\r", "+\tif (imageHeight < 4) return;\r", "-\tcloseItem.setDisabledImage(closeImage);\r", "+\tif (closeImage != null && closeImage.getBounds().height == imageHeight) return;\r", "+\t\r", "+\tif (closeBar != null) closeBar.dispose();\r", "+\tcloseBar = null;\r", "+\tif (inactiveCloseBar != null) inactiveCloseBar.dispose();\r", "+\tinactiveCloseBar = null;\r", "+\tcreateCloseBar();\r", "+\t\r", "+\tToolItem closeItem = closeBar.getItems()[0];\r", "+\tToolItem inactiveCloseItem = inactiveCloseBar.getItems()[0];\r", "+\t\t\r", "+\tif (closeImage != null) closeImage.dispose();\r", "+\t\r", "+\tDisplay display = getDisplay();\r", "+\tColor foreground = getForeground();\r", "+\tColor black = display.getSystemColor(SWT.COLOR_BLACK);\r", "+\tColor background = getBackground();\r", "+\t\r", "+\tPaletteData palette = new PaletteData(new RGB[]{foreground.getRGB(), background.getRGB(), black.getRGB()});\r", "+\tImageData imageData = new ImageData(imageHeight, imageHeight, 4, palette);\r", "+\timageData.transparentPixel = 1;\r", "+\tcloseImage = new Image(display, imageData);\r", "+\tGC gc = new GC(closeImage);\r", "+\tgc.setBackground(background);\r", "+\tgc.fillRectangle(0, 0, imageHeight, imageHeight);\r", "+\tgc.setForeground(black);\r", "+\t\r", "+\tint h = (imageHeight /2 )* 2;\r", "+\tgc.drawLine( 0, 0,     h - 2, h - 2);\r", "+\tgc.drawLine( 1, 0,     h,     h - 1);\r", "+\tgc.drawLine( 0, h - 2, h - 2, 0);\r", "+\tgc.drawLine( 1, h - 2, h - 1, 0);\r", "+\t\r", "+\tgc.dispose();\r", "+\t\r", "-\tinactiveCloseItem.setDisabledImage(closeImage);\r", "-\t\r", "-\tPoint size = closeBar.computeSize(SWT.DEFAULT, SWT.DEFAULT);\r", "-\tcloseBar.setSize(size);\r", "-\tinactiveCloseBar.setSize(size);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46ace8745cfc9d299869a2fcb79b1c3f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java", "commitBeforeChange": "e26934ac680ad70439130b120695448c0a630d25", "commitAfterChange": "95842c4b8acd967ae07a3fa166a616e528ae2f66", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 35, "signatureBeforeChange": " void createStyledText()", "signatureAfterChange": " \t \tvoid addControl(Control control)", "diff": ["-}", "-void createStyledText() {", "-\tinitializeColors();", "-\ttext = new StyledText (shell, SWT.BORDER | SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL);", "-\tGridData spec = new GridData();", "-\tspec.horizontalAlignment = GridData.FILL;", "-\tspec.grabExcessHorizontalSpace = true;", "-\tspec.verticalAlignment = GridData.FILL;", "-\tspec.grabExcessVerticalSpace = true;", "-\ttext.setLayoutData(spec);", "-\ttext.addExtendedModifyListener(new ExtendedModifyListener() {", "-\t\tpublic void modifyText(ExtendedModifyEvent e) {", "-\t\t\thandleExtendedModify(e);", "-\t\t}", "-\t});", "-}", "+\t", "+\tvoid addControl(Control control) {", "+\t\tint offset = styledText.getCaretOffset();", "+\t\tstyledText.replaceTextRange(offset, 0, \"\\uFFFC\"); //$NON-NLS-1$", "+\t\tint index = 0;\t\t", "+\t\twhile (index < controlOffsets.length) {", "+\t\t\tif (controlOffsets[index] == -1 && controls[index] == null) break;", "+\t\t\tindex++;", "+\t\t}", "+\t\tif (index == controlOffsets.length) {", "+\t\t\tint[] tmpOffsets = new int[index + 1];", "+\t\t\tSystem.arraycopy(controlOffsets, 0, tmpOffsets, 0, controlOffsets.length);", "+\t\t\tcontrolOffsets = tmpOffsets;\t\t", "+\t\t\tControl[] tmpControls = new Control[index + 1];", "+\t\t\tSystem.arraycopy(controls, 0, tmpControls, 0, controls.length);", "+\t\t\tcontrols = tmpControls;", "+\t\t}", "+\t\tcontrolOffsets[index] = offset;", "+\t\tcontrols[index] = control;", "+\t\tStyleRange style = new StyleRange();", "+\t\tPoint size = control.computeSize(SWT.DEFAULT, SWT.DEFAULT);", "+\t\tint ascent = 2 * size.y / 3;", "+\t\tint descent = size.y - ascent;", "+\t\tstyle.metrics = new GlyphMetrics(ascent + MARGIN, descent + MARGIN, size.x + 2 * MARGIN);\t\t ", "+\t\tint[] ranges = {offset, 1};", "+\t\tStyleRange[] styles = {style};", "+\t\tstyledText.setStyleRanges(0,0, ranges, styles);", "+\t\tcontrol.setSize(size);", "+\t}"]}], "num": 44586}