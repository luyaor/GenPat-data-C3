{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "637522ccc3563d9d60f2db7023b86429", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78983c4e4f087d5278e7ff93e8e84320", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/cocoa/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "2c8a13d0df1694740c0af6220e23682b3ddd10de", "commitAfterChange": "056762a1d7c74e75bfac132d1e756819b6f3b39e", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  public boolean setUrl(String url)", "signatureAfterChange": "  public boolean setUrl(String url, String postData, String[] headers)", "diff": ["-public boolean setUrl(String url) {", "+public boolean setUrl(String url, String postData, String[] headers) {", "-\tNSURLRequest request = NSURLRequest.requestWithURL(inURL);", "+\tNSMutableURLRequest request = (NSMutableURLRequest)NSMutableURLRequest.requestWithURL(inURL);", "+\tif (postData != null) {", "+\t\trequest.setHTTPMethod(NSString.stringWith(POST));", "+\t\tbyte[] bytes = postData.getBytes();", "+\t\tNSData data = NSData.dataWithBytes(bytes, bytes.length);", "+\t\trequest.setHTTPBody(data);", "+\t}", "+\tif (headers != null) {", "+\t\tfor (int i = 0; i < headers.length; i++) {", "+\t\t\tString current = headers[i];", "+\t\t\tint index = current.indexOf(':');", "+\t\t\tif (index != -1) {", "+\t\t\t\tString key = current.substring(0, index).trim();", "+\t\t\t\tString value = current.substring(index + 1).trim();", "+\t\t\t\tif (key.length() > 0 && value.length() > 0) {", "+\t\t\t\t\tif (key.equals(USER_AGENT)) {", "+\t\t\t\t\t\t/*", "+\t\t\t\t\t\t* Feature of Safari.  The user-agent header value cannot be overridden", "+\t\t\t\t\t\t* here.  The workaround is to temporarily set the value on the WebView", "+\t\t\t\t\t\t* and then remove it after the loading of the request has begun.", "+\t\t\t\t\t\t*/", "+\t\t\t\t\t\twebView.setCustomUserAgent(NSString.stringWith(value));", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\trequest.setValue(NSString.stringWith(value), NSString.stringWith(key));\t\t\t\t\t\t", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}", "+\twebView.setCustomUserAgent(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6575998f53ee68635a06584568f39d56", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "2c8a13d0df1694740c0af6220e23682b3ddd10de", "commitAfterChange": "056762a1d7c74e75bfac132d1e756819b6f3b39e", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 22, "signatureBeforeChange": "  boolean navigate(String url, boolean silent)", "signatureAfterChange": "  boolean navigate(String url, String postData, String headers[], boolean silent)", "diff": ["+", "+boolean navigate(String url, String postData, String headers[], boolean silent) {", "+\tnavigate = true;", "+\tint count = 1;", "+\tif (postData != null) count++;", "+\tif (headers != null) count++;", "+\tVariant[] rgvarg = new Variant[count];", "+\tint[] rgdispidNamedArgs = new int[count];", "+\tint[] rgdispid = auto.getIDsOfNames(new String[] { \"Navigate\", \"URL\", \"PostData\", \"Headers\" }); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$", "+\tint index = 0;", "+\trgvarg[index] = new Variant(url);", "+\trgdispidNamedArgs[index++] = rgdispid[1];", "+\tif (postData != null) {", "+\t\trgvarg[index] = createSafeArray(postData);", "+\t\trgdispidNamedArgs[index++] = rgdispid[2];", "+\t}", "+\tif (headers != null) {", "+\t\tStringBuffer buffer = new StringBuffer();", "+\t\tfor (int i = 0; i < headers.length; i++) {", "+\t\t\tString current = headers[i];", "+\t\t\tint sep = current.indexOf(':');", "+\t\t\tif (sep != -1) {", "+\t\t\t\tString key = current.substring(0, sep).trim();", "+\t\t\t\tString value = current.substring(sep + 1).trim();", "+\t\t\t\tif (key.length() > 0 && value.length() > 0) {", "+\t\t\t\t\tbuffer.append(key);", "+\t\t\t\t\tbuffer.append(':');", "+\t\t\t\t\tbuffer.append(value);", "+\t\t\t\t\tbuffer.append(\"\\r\\n\");", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\trgvarg[index] = new Variant(buffer.toString());", "+\t\trgdispidNamedArgs[index++] = rgdispid[3];", "+\t}", "+\tboolean oldValue = false;", "+\tif (silent && !OS.IsWinCE && IsIE7) {", "+\t\tint hResult = OS.CoInternetIsFeatureEnabled(OS.FEATURE_DISABLE_NAVIGATION_SOUNDS, OS.GET_FEATURE_FROM_PROCESS);", "+\t\toldValue = hResult == COM.S_OK;", "+\t\tOS.CoInternetSetFeatureEnabled(OS.FEATURE_DISABLE_NAVIGATION_SOUNDS, OS.SET_FEATURE_ON_PROCESS, true);", "+\t}", "+\tVariant pVarResult = auto.invoke(rgdispid[0], rgvarg, rgdispidNamedArgs);", "+\tif (silent && !OS.IsWinCE && IsIE7) {", "+\t\tOS.CoInternetSetFeatureEnabled(OS.FEATURE_DISABLE_NAVIGATION_SOUNDS, OS.SET_FEATURE_ON_PROCESS, oldValue);", "+\t}", "+\tfor (int i = 0; i < count; i++) {", "+\t\trgvarg[i].dispose();", "+\t}", "+\tif (pVarResult == null) return false;", "+\tboolean result = pVarResult.getType() == OLE.VT_EMPTY;", "+\tpVarResult.dispose();", "+\treturn result;", "-boolean navigate(String url, boolean silent) {", "-\tnavigate = true;", "-\tint[] rgdispid = auto.getIDsOfNames(new String[] { \"Navigate\", \"URL\" }); //$NON-NLS-1$ //$NON-NLS-2$", "-\tVariant[] rgvarg = new Variant[1];", "-\trgvarg[0] = new Variant(url);", "-\tint[] rgdispidNamedArgs = new int[1];", "-\trgdispidNamedArgs[0] = rgdispid[1];", "-\tboolean oldValue = false;", "-\tif (silent && !OS.IsWinCE && IsIE7) {", "-\t\tint hResult = OS.CoInternetIsFeatureEnabled(OS.FEATURE_DISABLE_NAVIGATION_SOUNDS, OS.GET_FEATURE_FROM_PROCESS);", "-\t\toldValue = hResult == COM.S_OK;", "-\t\tOS.CoInternetSetFeatureEnabled(OS.FEATURE_DISABLE_NAVIGATION_SOUNDS, OS.SET_FEATURE_ON_PROCESS, true);", "-\t}", "-\tVariant pVarResult = auto.invoke(rgdispid[0], rgvarg, rgdispidNamedArgs);", "-\tif (silent && !OS.IsWinCE && IsIE7) {", "-\t\tOS.CoInternetSetFeatureEnabled(OS.FEATURE_DISABLE_NAVIGATION_SOUNDS, OS.SET_FEATURE_ON_PROCESS, oldValue);", "-\t}", "-\trgvarg[0].dispose();", "-\tif (pVarResult == null) return false;", "-\tboolean result = pVarResult.getType() == OLE.VT_EMPTY;", "-\tpVarResult.dispose();", "-\treturn result;", "-}"]}], "num": 36539}