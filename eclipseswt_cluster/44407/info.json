{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6de953e3317a413e95435fe076324a66", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "578e8d761b67aa7dc584217375a6cd4c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Slider.java", "commitBeforeChange": "9b2e75bad029158cb5a5c36103892d9c96132a6c", "commitAfterChange": "4347318ee55544599f9aa1e141bed166353844a3", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void setMinimum (int value)", "signatureAfterChange": " public void setMinimum (int value)", "diff": ["-\tOS.SetScrollInfo (handle, OS.SB_CTL, info, true);", "-", "-\t/*", "-\t* Feature in Windows.  Using SIF_DISABLENOSCROLL,", "-\t* SetScrollInfo () can change enabled and disabled", "-\t* state of the scroll bar causing a scroll bar that", "-\t* was disabled by the application to become enabled.", "-\t* The fix is to disable the scroll bar (again) when", "-\t* the application has disabled the scroll bar.", "-\t*/", "-\tif ((state & DISABLED) != 0) {", "-\t\tif (OS.IsWinCE) {", "-\t\t\tOS.EnableWindow (handle, false);", "-\t\t} else {", "-\t\t\tOS.EnableScrollBar (handle, OS.SB_CTL, OS.ESB_DISABLE_BOTH);", "-\t\t}", "-\t}", "-\t", "-\t/*", "-\t* Bug in Windows.  If the thumb is resized when it has focus,", "-\t* the flashing cursor that is used to show that the scroll bar has", "-\t* focus is not moved.  The fix is to post a fake WM_SETFOCUS to", "-\t* get the scroll bar to recompute the size of the flashing cursor.", "-\t*/", "-\tif (OS.GetFocus () == handle) {", "-\t\tOS.PostMessage (handle, OS.WM_SETFOCUS, 0, 0);", "-\t}", "+\tSetScrollInfo (handle, OS.SB_CTL, info, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9879818243cd1a0fb03b70a74e2caec6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Slider.java", "commitBeforeChange": "9b2e75bad029158cb5a5c36103892d9c96132a6c", "commitAfterChange": "4347318ee55544599f9aa1e141bed166353844a3", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void setValues (int selection, int minimum, int maximum, int thumb, int increment, int pageIncrement)", "signatureAfterChange": " public void setValues (int selection, int minimum, int maximum, int thumb, int increment, int pageIncrement)", "diff": ["-\tOS.SetScrollInfo (handle, OS.SB_CTL, info, true);", "-\t\t", "-\t/*", "-\t* Feature in Windows.  Using SIF_DISABLENOSCROLL,", "-\t* SetScrollInfo () can change enabled and disabled", "-\t* state of the scroll bar causing a scroll bar that", "-\t* was disabled by the application to become enabled.", "-\t* The fix is to disable the scroll bar (again) when", "-\t* the application has disabled the scroll bar.", "-\t*/", "-\tif ((state & DISABLED) != 0) {", "-\t\tif (OS.IsWinCE) {", "-\t\t\tOS.EnableWindow (handle, false);", "-\t\t} else {", "-\t\t\tOS.EnableScrollBar (handle, OS.SB_CTL, OS.ESB_DISABLE_BOTH);", "-\t\t}", "-\t}", "-\t", "-\t/*", "-\t* Bug in Windows.  If the thumb is resized when it has focus,", "-\t* the flashing cursor that is used to show that the scroll bar has", "-\t* focus is not moved.  The fix is to post a fake WM_SETFOCUS to", "-\t* get the scroll bar to recompute the size of the flashing cursor.", "-\t*/", "-\tif (OS.GetFocus () == handle) {", "-\t\tOS.PostMessage (handle, OS.WM_SETFOCUS, 0, 0);", "-\t}", "+\tSetScrollInfo (handle, OS.SB_CTL, info, true);"]}], "num": 44407}