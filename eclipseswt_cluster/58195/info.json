{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a3b7fb09b726dff186574640e357021", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84aab525714c342d8481f69983f9087a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CLabel.java", "commitBeforeChange": "01f6056efc98ccaec903ba4af0141f29bd9ef04d", "commitAfterChange": "c4f1f56c86ea0f324367d5bf40bcbb49d4323f3e", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " void onPaint(PaintEvent event)", "signatureAfterChange": "  void onPaint(PaintEvent event)", "diff": ["+", "-\t\t", "+\tString[] lines = text == null ? null : splitString(text); ", "+\t", "-\t\tt = shortenText(gc, text, availableWidth);", "-\t\textent = getTotalSize(img, t);", "+\t\textent.x = 0;", "+\t    for(int i = 0; i < lines.length; i++) {", "+\t       lines[i] = shortenText(gc, lines[i], availableWidth);", "+\t       extent.x = Math.max(extent.x, getTotalSize(null, lines[i]).x);", "+\t    }", "-\t\tx = (rect.width-extent.x)/2;", "+\t\tx = (rect.width - extent.x)/2;", "-\t\tx = rect.width-extent.x - hIndent;", "+\t\tx = rect.width - hIndent - extent.x;", "-\t// draw the image\t\t", "+", "+\t// draw the image", "-\t\tx += imageRect.width + GAP;", "+\t\tx +=  imageRect.width + GAP;", "+\t\textent.x -= imageRect.width + GAP;", "-\tif (t != null) {", "-\t\tint textHeight = gc.getFontMetrics().getHeight();", "+\tif (lines != null) {", "+\t\tint lineHeight = gc.getFontMetrics().getHeight();", "+\t\tint textHeight = lines.length * lineHeight;", "+\t\tint lineY = Math.max(vIndent, rect.y + (rect.height - textHeight) / 2);", "-\t\tgc.drawText(t, x, rect.y + (rect.height-textHeight)/2, DRAW_FLAGS);", "+\t\tfor (int i = 0; i < lines.length; i++) {", "+\t\t\tint lineX = x;", "+\t\t\tif (lines.length > 1) {", "+\t\t\t\tif (align == SWT.CENTER) {", "+\t\t\t\t\tint lineWidth = gc.textExtent(lines[i], DRAW_FLAGS).x;", "+\t\t\t\t\tlineX = x + Math.max(0, (extent.x - lineWidth) / 2);", "+\t\t\t\t}", "+\t\t\t\tif (align == SWT.RIGHT) {", "+\t\t\t\t\tint lineWidth = gc.textExtent(lines[i], DRAW_FLAGS).x;", "+\t\t\t\t\tlineX = Math.max(x, rect.x + rect.width - hIndent - lineWidth);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tgc.drawText(lines[i], lineX, lineY, DRAW_FLAGS);", "+\t\t\tlineY += lineHeight;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a7f980ccd96e37a0f66ab02f8c98090", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 99, "signatureBeforeChange": " public void setItemCount (int count)", "signatureAfterChange": " public void setItemCount (int count)", "diff": ["- */", "+}", "-\tint itemCount = getItemCount ();", "+\tint itemCount = items.length;", "-\tsetRedraw (false);", "-\tremove (count, itemCount - 1);", "-\tfor (int i = itemCount; i<count; i++) {", "-\t\tnew TableItem (this, SWT.NONE);", "-\t}", "-\tsetRedraw (true);", "-}", "+\t", "+\t/* if the new item count is less than the current count then remove all excess items from the end */", "+\tif (count < itemCount) {", "+\t\tfor (int i = count; i < itemCount; i++) {", "+\t\t\titems [i].dispose (false);", "+\t\t}", "+", "+\t\tint newSelectedCount = 0;", "+\t\tfor (int i = 0; i < selectedItems.length; i++) {", "+\t\t\tif (!selectedItems [i].isDisposed ()) newSelectedCount++;", "+\t\t}", "+\t\tTableItem[] newSelectedItems = new TableItem [newSelectedCount];", "+\t\tint pos = 0;", "+\t\tfor (int i = 0; i < selectedItems.length; i++) {", "+\t\t\tTableItem item = selectedItems [i];", "+\t\t\tif (!item.isDisposed ()) {", "+\t\t\t\tnewSelectedItems [pos++] = item;", "+\t\tselectedItems = newSelectedItems;", "+", "+\t\tint visibleItemCount = (getClientArea ().height - getHeaderHeight ()) / itemHeight;", "+\t\ttopIndex = Math.min (topIndex, Math.max (0, count - visibleItemCount));", "+\t\tif (anchorItem != null && anchorItem.isDisposed ()) anchorItem = null;", "+\t\tif (focusItem != null && focusItem.isDisposed ()) {", "+\t\t\tTableItem newFocusItem = count > 0 ? items [count - 1] : null; ", "+\t\t\tsetFocusItem (newFocusItem, false);", "+\t\t}", "+\t", "+\tTableItem[] newItems = new TableItem [count];", "+\tSystem.arraycopy (items, 0, newItems, 0, Math.min (count, itemCount));", "+\titems = newItems;", "+\tfor (int i = itemCount; i < count; i++) {", "+\t\titems [i] = new TableItem (this, SWT.NONE, i, false);", "+\t}", "+", "+\tupdateVerticalBar ();", "+\tupdateHorizontalBar ();", "+\tredraw ();"]}], "num": 58195}