{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "db0ed0c9d45a929501766131a07bc167", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a77e5103de6267d93e61ed8164aa1897", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "9eb571d651abf4dea50149a00c0379444835b8cc", "commitAfterChange": "121c6d4f013e178c3d281bc88a35adb6ffcd2d08", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " public void setData (String key, Object value)", "signatureAfterChange": " public void setData (String key, Object value)", "diff": ["-\t", "-\t/* Remove the key/value pair */", "-\tif (value == null) {", "-\t\tif (keys == null) return;", "-\t\tint index = 0;", "-\t\twhile (index < keys.length && !keys [index].equals (key)) index++;", "-\t\tif (index == keys.length) return;", "-\t\tif (keys.length == 1) {", "-\t\t\tkeys = null;", "-\t\t\tvalues = null;", "+\tint index = 1;", "+\tObject [] table = null;", "+\tif ((state & KEYED_DATA) != 0) {", "+\t\ttable = (Object []) data;", "+\t\twhile (index < table.length) {", "+\t\t\tif (key.equals (table [index])) break;", "+\t\t\tindex += 2;", "+\t\t}", "+\t}", "+\tif (value != null) {", "+\t\tif ((state & KEYED_DATA) != 0) {", "+\t\t\tif (index == table.length) {", "+\t\t\t\tObject [] newTable = new Object [table.length + 2];", "+\t\t\t\tSystem.arraycopy (table, 0, newTable, 0, table.length);", "+\t\t\t\tdata = table = newTable;", "+\t\t\t}", "-\t\t\tString [] newKeys = new String [keys.length - 1];", "-\t\t\tObject [] newValues = new Object [values.length - 1];", "-\t\t\tSystem.arraycopy (keys, 0, newKeys, 0, index);", "-\t\t\tSystem.arraycopy (keys, index + 1, newKeys, index, newKeys.length - index);", "-\t\t\tSystem.arraycopy (values, 0, newValues, 0, index);", "-\t\t\tSystem.arraycopy (values, index + 1, newValues, index, newValues.length - index);", "-\t\t\tkeys = newKeys;", "-\t\t\tvalues = newValues;", "+\t\t\ttable = new Object [3];", "+\t\t\ttable [0] = data;", "+\t\t\tdata = table;", "+\t\t\tstate |= KEYED_DATA;", "-\t\treturn;", "-\t}", "-\t", "-\t/* Add the key/value pair */", "-\tif (keys == null) {", "-\t\tkeys = new String [] {key};", "-\t\tvalues = new Object [] {value};", "-\t\treturn;", "-\t}", "-\tfor (int i=0; i<keys.length; i++) {", "-\t\tif (keys [i].equals (key)) {", "-\t\t\tvalues [i] = value;", "-\t\t\treturn;", "+\t\ttable [index] = key;", "+\t\ttable [index + 1] = value;", "+\t} else {", "+\t\tif ((state & KEYED_DATA) != 0) {", "+\t\t\tif (index != table.length) {", "+\t\t\t\tint length = table.length - 2;", "+\t\t\t\tif (length == 1) {", "+\t\t\t\t\tdata = table [0];", "+\t\t\t\t\tstate &= ~KEYED_DATA;", "+\t\t\t\t} else {", "+\t\t\t\t\tObject [] newTable = new Object [length];", "+\t\t\t\t\tSystem.arraycopy (table, 0, newTable, 0, index);", "+\t\t\t\t\tSystem.arraycopy (table, index + 2, newTable, index, length - index);", "+\t\t\t\t\tdata = newTable;", "+\t\t\t\t}", "+\t\t\t}", "-\tString [] newKeys = new String [keys.length + 1];", "-\tObject [] newValues = new Object [values.length + 1];", "-\tSystem.arraycopy (keys, 0, newKeys, 0, keys.length);", "-\tSystem.arraycopy (values, 0, newValues, 0, values.length);", "-\tnewKeys [keys.length] = key;", "-\tnewValues [values.length] = value;", "-\tkeys = newKeys;", "-\tvalues = newValues;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba87f2aee76e713e218e84375ab636e4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "121c6d4f013e178c3d281bc88a35adb6ffcd2d08", "commitAfterChange": "406db03bcafc2b495e59d46a0657712938a45c8c", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " public void setData (String key, Object value)", "signatureAfterChange": " public void setData (String key, Object value)", "diff": ["-\t", "-\t/* Remove the key/value pair */", "-\tif (value == null) {", "-\t\tif (keys == null) return;", "-\t\tint index = 0;", "-\t\twhile (index < keys.length && !keys [index].equals (key)) index++;", "-\t\tif (index == keys.length) return;", "-\t\tif (keys.length == 1) {", "-\t\t\tkeys = null;", "-\t\t\tvalues = null;", "+\tint index = 1;", "+\tObject [] table = null;", "+\tif ((state & KEYED_DATA) != 0) {", "+\t\ttable = (Object []) data;", "+\t\twhile (index < table.length) {", "+\t\t\tif (key.equals (table [index])) break;", "+\t\t\tindex += 2;", "+\t\t}", "+\t}", "+\tif (value != null) {", "+\t\tif ((state & KEYED_DATA) != 0) {", "+\t\t\tif (index == table.length) {", "+\t\t\t\tObject [] newTable = new Object [table.length + 2];", "+\t\t\t\tSystem.arraycopy (table, 0, newTable, 0, table.length);", "+\t\t\t\tdata = table = newTable;", "+\t\t\t}", "-\t\t\tString [] newKeys = new String [keys.length - 1];", "-\t\t\tObject [] newValues = new Object [values.length - 1];", "-\t\t\tSystem.arraycopy (keys, 0, newKeys, 0, index);", "-\t\t\tSystem.arraycopy (keys, index + 1, newKeys, index, newKeys.length - index);", "-\t\t\tSystem.arraycopy (values, 0, newValues, 0, index);", "-\t\t\tSystem.arraycopy (values, index + 1, newValues, index, newValues.length - index);", "-\t\t\tkeys = newKeys;", "-\t\t\tvalues = newValues;", "+\t\t\ttable = new Object [3];", "+\t\t\ttable [0] = data;", "+\t\t\tdata = table;", "+\t\t\tstate |= KEYED_DATA;", "-\t\treturn;", "-\t}", "-\t", "-\t/* Add the key/value pair */", "-\tif (keys == null) {", "-\t\tkeys = new String [] {key};", "-\t\tvalues = new Object [] {value};", "-\t\treturn;", "-\t}", "-\tfor (int i=0; i<keys.length; i++) {", "-\t\tif (keys [i].equals (key)) {", "-\t\t\tvalues [i] = value;", "-\t\t\treturn;", "+\t\ttable [index] = key;", "+\t\ttable [index + 1] = value;", "+\t} else {", "+\t\tif ((state & KEYED_DATA) != 0) {", "+\t\t\tif (index != table.length) {", "+\t\t\t\tint length = table.length - 2;", "+\t\t\t\tif (length == 1) {", "+\t\t\t\t\tdata = table [0];", "+\t\t\t\t\tstate &= ~KEYED_DATA;", "+\t\t\t\t} else {", "+\t\t\t\t\tObject [] newTable = new Object [length];", "+\t\t\t\t\tSystem.arraycopy (table, 0, newTable, 0, index);", "+\t\t\t\t\tSystem.arraycopy (table, index + 2, newTable, index, length - index);", "+\t\t\t\t\tdata = newTable;", "+\t\t\t\t}", "+\t\t\t}", "-\tString [] newKeys = new String [keys.length + 1];", "-\tObject [] newValues = new Object [values.length + 1];", "-\tSystem.arraycopy (keys, 0, newKeys, 0, keys.length);", "-\tSystem.arraycopy (values, 0, newValues, 0, values.length);", "-\tnewKeys [keys.length] = key;", "-\tnewValues [values.length] = value;", "-\tkeys = newKeys;", "-\tvalues = newValues;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e94edc8fbef6403bd4ad0ef9ea03fb4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "9eb571d651abf4dea50149a00c0379444835b8cc", "commitAfterChange": "121c6d4f013e178c3d281bc88a35adb6ffcd2d08", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": " public void setData (String key, Object value)", "signatureAfterChange": " public void setData (String key, Object value)", "diff": ["-\tcheckWidget ();", "+\tcheckWidget();", "-\t", "-\t/* Remove the key/value pair */", "-\tif (value == null) {", "-\t\tif (keys == null) return;", "-\t\tint index = 0;", "-\t\twhile (index < keys.length && !keys [index].equals (key)) index++;", "-\t\tif (index == keys.length) return;", "-\t\tif (keys.length == 1) {", "-\t\t\tkeys = null;", "-\t\t\tvalues = null;", "+\tint index = 1;", "+\tObject [] table = null;", "+\tif ((state & KEYED_DATA) != 0) {", "+\t\ttable = (Object []) data;", "+\t\twhile (index < table.length) {", "+\t\t\tif (key.equals (table [index])) break;", "+\t\t\tindex += 2;", "+\t\t}", "+\t}", "+\tif (value != null) {", "+\t\tif ((state & KEYED_DATA) != 0) {", "+\t\t\tif (index == table.length) {", "+\t\t\t\tObject [] newTable = new Object [table.length + 2];", "+\t\t\t\tSystem.arraycopy (table, 0, newTable, 0, table.length);", "+\t\t\t\tdata = table = newTable;", "+\t\t\t}", "-\t\t\tString [] newKeys = new String [keys.length - 1];", "-\t\t\tObject [] newValues = new Object [values.length - 1];", "-\t\t\tSystem.arraycopy (keys, 0, newKeys, 0, index);", "-\t\t\tSystem.arraycopy (keys, index + 1, newKeys, index, newKeys.length - index);", "-\t\t\tSystem.arraycopy (values, 0, newValues, 0, index);", "-\t\t\tSystem.arraycopy (values, index + 1, newValues, index, newValues.length - index);", "-\t\t\tkeys = newKeys;", "-\t\t\tvalues = newValues;", "+\t\t\ttable = new Object [3];", "+\t\t\ttable [0] = data;", "+\t\t\tdata = table;", "+\t\t\tstate |= KEYED_DATA;", "-\t\treturn;", "-\t}", "-\t", "-\t/* Add the key/value pair */", "-\tif (keys == null) {", "-\t\tkeys = new String [] {key};", "-\t\tvalues = new Object [] {value};", "-\t\treturn;", "-\t}", "-\tfor (int i=0; i<keys.length; i++) {", "-\t\tif (keys [i].equals (key)) {", "-\t\t\tvalues [i] = value;", "-\t\t\treturn;", "+\t\ttable [index] = key;", "+\t\ttable [index + 1] = value;", "+\t} else {", "+\t\tif ((state & KEYED_DATA) != 0) {", "+\t\t\tif (index != table.length) {", "+\t\t\t\tint length = table.length - 2;", "+\t\t\t\tif (length == 1) {", "+\t\t\t\t\tdata = table [0];", "+\t\t\t\t\tstate &= ~KEYED_DATA;", "+\t\t\t\t} else {", "+\t\t\t\t\tObject [] newTable = new Object [length];", "+\t\t\t\t\tSystem.arraycopy (table, 0, newTable, 0, index);", "+\t\t\t\t\tSystem.arraycopy (table, index + 2, newTable, index, length - index);", "+\t\t\t\t\tdata = newTable;", "+\t\t\t\t}", "+\t\t\t}", "-\tString [] newKeys = new String [keys.length + 1];", "-\tObject [] newValues = new Object [values.length + 1];", "-\tSystem.arraycopy (keys, 0, newKeys, 0, keys.length);", "-\tSystem.arraycopy (values, 0, newValues, 0, values.length);", "-\tnewKeys [keys.length] = key;", "-\tnewValues [values.length] = value;", "-\tkeys = newKeys;", "-\tvalues = newValues;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "325f871ef079d805c5dd1ec30ec0d829", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "c1fa670bb90c807acbab628f565e2e14bd885825", "commitAfterChange": "965aecf4cb4bb3fe4dee75052118eb5b4063e4f5", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": " public void setData (String key, Object value)", "signatureAfterChange": " public void setData (String key, Object value)", "diff": ["-", "-\t/* Remove the key/value pair */", "-\tif (value == null) {", "-\t\tif (keys == null) return;", "-\t\tint index = 0;", "-\t\twhile (index < keys.length && !keys [index].equals (key)) index++;", "-\t\tif (index == keys.length) return;", "-\t\tif (keys.length == 1) {", "-\t\t\tkeys = null;", "-\t\t\tvalues = null;", "+\tint index = 1;", "+\tObject [] table = null;", "+\tif ((state & KEYED_DATA) != 0) {", "+\t\ttable = (Object []) data;", "+\t\twhile (index < table.length) {", "+\t\t\tif (key.equals (table [index])) break;", "+\t\t\tindex += 2;", "+\t\t}", "+\t}", "+\tif (value != null) {", "+\t\tif ((state & KEYED_DATA) != 0) {", "+\t\t\tif (index == table.length) {", "+\t\t\t\tObject [] newTable = new Object [table.length + 2];", "+\t\t\t\tSystem.arraycopy (table, 0, newTable, 0, table.length);", "+\t\t\t\tdata = table = newTable;", "+\t\t\t}", "-\t\t\tString [] newKeys = new String [keys.length - 1];", "-\t\t\tObject [] newValues = new Object [values.length - 1];", "-\t\t\tSystem.arraycopy (keys, 0, newKeys, 0, index);", "-\t\t\tSystem.arraycopy (keys, index + 1, newKeys, index, newKeys.length - index);", "-\t\t\tSystem.arraycopy (values, 0, newValues, 0, index);", "-\t\t\tSystem.arraycopy (values, index + 1, newValues, index, newValues.length - index);", "-\t\t\tkeys = newKeys;", "-\t\t\tvalues = newValues;", "+\t\t\ttable = new Object [3];", "+\t\t\ttable [0] = data;", "+\t\t\tdata = table;", "+\t\t\tstate |= KEYED_DATA;", "-\t\treturn;", "-\t}", "-", "-\t/* Add the key/value pair */", "-\tif (keys == null) {", "-\t\tkeys = new String [] {key};", "-\t\tvalues = new Object [] {value};", "-\t\treturn;", "-\t}", "-\tfor (int i=0; i<keys.length; i++) {", "-\t\tif (keys [i].equals (key)) {", "-\t\t\tvalues [i] = value;", "-\t\t\treturn;", "+\t\ttable [index] = key;", "+\t\ttable [index + 1] = value;", "+\t} else {", "+\t\tif ((state & KEYED_DATA) != 0) {", "+\t\t\tif (index != table.length) {", "+\t\t\t\tint length = table.length - 2;", "+\t\t\t\tif (length == 1) {", "+\t\t\t\t\tdata = table [0];", "+\t\t\t\t\tstate &= ~KEYED_DATA;", "+\t\t\t\t} else {", "+\t\t\t\t\tObject [] newTable = new Object [length];", "+\t\t\t\t\tSystem.arraycopy (table, 0, newTable, 0, index);", "+\t\t\t\t\tSystem.arraycopy (table, index + 2, newTable, index, length - index);", "+\t\t\t\t\tdata = newTable;", "+\t\t\t\t}", "+\t\t\t}", "-\tString [] newKeys = new String [keys.length + 1];", "-\tObject [] newValues = new Object [values.length + 1];", "-\tSystem.arraycopy (keys, 0, newKeys, 0, keys.length);", "-\tSystem.arraycopy (values, 0, newValues, 0, values.length);", "-\tnewKeys [keys.length] = key;", "-\tnewValues [values.length] = value;", "-\tkeys = newKeys;", "-\tvalues = newValues;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98b3f42c77010d8931a2b358f3133742", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "43dd55b1a7c4044963965dfe086813173bfdef0d", "commitAfterChange": "fee553079ed0fcd604860c16662b6e2b898d1d0b", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " public void setData (String key, Object value)", "signatureAfterChange": " public void setData (String key, Object value)", "diff": ["-\t", "-\t/* Remove the key/value pair */", "-\tif (value == null) {", "-\t\tif (keys == null) return;", "-\t\tint index = 0;", "-\t\twhile (index < keys.length && !keys [index].equals (key)) index++;", "-\t\tif (index == keys.length) return;", "-\t\tif (keys.length == 1) {", "-\t\t\tkeys = null;", "-\t\t\tvalues = null;", "+\tint index = 1;", "+\tObject [] table = null;", "+\tif ((state & KEYED_DATA) != 0) {", "+\t\ttable = (Object []) data;", "+\t\twhile (index < table.length) {", "+\t\t\tif (key.equals (table [index])) break;", "+\t\t\tindex += 2;", "+\t\t}", "+\t}", "+\tif (value != null) {", "+\t\tif ((state & KEYED_DATA) != 0) {", "+\t\t\tif (index == table.length) {", "+\t\t\t\tObject [] newTable = new Object [table.length + 2];", "+\t\t\t\tSystem.arraycopy (table, 0, newTable, 0, table.length);", "+\t\t\t\tdata = table = newTable;", "+\t\t\t}", "-\t\t\tString [] newKeys = new String [keys.length - 1];", "-\t\t\tObject [] newValues = new Object [values.length - 1];", "-\t\t\tSystem.arraycopy (keys, 0, newKeys, 0, index);", "-\t\t\tSystem.arraycopy (keys, index + 1, newKeys, index, newKeys.length - index);", "-\t\t\tSystem.arraycopy (values, 0, newValues, 0, index);", "-\t\t\tSystem.arraycopy (values, index + 1, newValues, index, newValues.length - index);", "-\t\t\tkeys = newKeys;", "-\t\t\tvalues = newValues;", "+\t\t\ttable = new Object [3];", "+\t\t\ttable [0] = data;", "+\t\t\tdata = table;", "+\t\t\tstate |= KEYED_DATA;", "-\t\treturn;", "-\t}", "-\t", "-\t/* Add the key/value pair */", "-\tif (keys == null) {", "-\t\tkeys = new String [] {key};", "-\t\tvalues = new Object [] {value};", "-\t\treturn;", "-\t}", "-\tfor (int i=0; i<keys.length; i++) {", "-\t\tif (keys [i].equals (key)) {", "-\t\t\tvalues [i] = value;", "-\t\t\treturn;", "+\t\ttable [index] = key;", "+\t\ttable [index + 1] = value;", "+\t} else {", "+\t\tif ((state & KEYED_DATA) != 0) {", "+\t\t\tif (index != table.length) {", "+\t\t\t\tint length = table.length - 2;", "+\t\t\t\tif (length == 1) {", "+\t\t\t\t\tdata = table [0];", "+\t\t\t\t\tstate &= ~KEYED_DATA;", "+\t\t\t\t} else {", "+\t\t\t\t\tObject [] newTable = new Object [length];", "+\t\t\t\t\tSystem.arraycopy (table, 0, newTable, 0, index);", "+\t\t\t\t\tSystem.arraycopy (table, index + 2, newTable, index, length - index);", "+\t\t\t\t\tdata = newTable;", "+\t\t\t\t}", "+\t\t\t}", "-\tString [] newKeys = new String [keys.length + 1];", "-\tObject [] newValues = new Object [values.length + 1];", "-\tSystem.arraycopy (keys, 0, newKeys, 0, keys.length);", "-\tSystem.arraycopy (values, 0, newValues, 0, values.length);", "-\tnewKeys [keys.length] = key;", "-\tnewValues [values.length] = value;", "-\tkeys = newKeys;", "-\tvalues = newValues;"]}], "num": 30826}