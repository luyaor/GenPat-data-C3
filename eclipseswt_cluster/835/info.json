{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4b64f770a48637103614db34a83c7432", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ac1a0ba9d9cef2ee6251f51cb181d9c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "19051ffe4fd662e4376e9ef3523424e6764f8cc9", "commitAfterChange": "fec0d691465789ed5f8cc6a20256c17056f52d4b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  Shell (Display display, Shell parent, int style, int handle)", "signatureAfterChange": "  Shell (Display display, Shell parent, int style, int handle, boolean embedded)", "diff": ["-Shell (Display display, Shell parent, int style, int handle) {", "+Shell (Display display, Shell parent, int style, int handle, boolean embedded) {", "+\tif (handle != 0 && !embedded) {", "+\t\tstate |= FOREIGN_HANDLE;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34fe4c20e5f3cf87cdc518086e75419d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/ClipboardProxy.java", "commitBeforeChange": "ea2088161ff11ba4c1bcfcca3d37b7e836f9e64f", "commitAfterChange": "0e625ec767979d6e48049d14afe483143aa90d70", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  void clear (int clipboards)", "signatureAfterChange": "  void clear (Clipboard owner, int clipboards)", "diff": ["-void clear (int clipboards) {", "-\tif ((clipboards & DND.CLIPBOARD) != 0 && onClipboard) {", "+void clear (Clipboard owner, int clipboards) {", "+\tif ((clipboards & DND.CLIPBOARD) != 0 && activeClipboard == owner) {", "-\tif ((clipboards & DND.SELECTION_CLIPBOARD) != 0 && onPrimary) {", "+\tif ((clipboards & DND.SELECTION_CLIPBOARD) != 0 && activePrimaryClipboard == owner) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4063a1e120217b5b5209881555feddfe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/cocoa/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "a0a9d258e4ba6447d350edb2b6535418f42f6638", "commitAfterChange": "5d553beb026a9c36ce49081735e3a236e6013699", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \t void _setText(String html)", "signatureAfterChange": " \t void _setText(String html, boolean untrusted)", "diff": ["-void _setText(String html) {\t", "+void _setText(String html, boolean untrusted) {", "-\tNSString URLString = NSString.stringWith(URI_FROMMEMORY);", "+\tNSString URLString;", "+\tif (untrusted) {", "+\t\tURLString = NSString.stringWith(ABOUT_BLANK);", "+\t} else {", "+\t\tURLString = NSString.stringWith(URI_FILEROOT);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6554a7700fc067339c46dfc3993c0153", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/carbon/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "a0a9d258e4ba6447d350edb2b6535418f42f6638", "commitAfterChange": "5d553beb026a9c36ce49081735e3a236e6013699", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \t void _setText(String html)", "signatureAfterChange": " \t void _setText(String html, boolean untrusted)", "diff": ["-void _setText(String html) {", "+void _setText(String html, boolean untrusted) {", "-\tint URLString = createNSString(URI_FROMMEMORY);", "-\t", "+\tint URLString;", "+\tif (untrusted) {", "+\t\tURLString = createNSString(ABOUT_BLANK);", "+\t} else {", "+\t\tURLString = createNSString(URI_FILEROOT);", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaab7eab52ae3f66563099d890da0b9d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "ec7edbaede68f4fd7608786e759e23fd6dbe2200", "commitAfterChange": "b206c3d5f3a448a2b6dfbc2c13ed7e271cef1597", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 136, "signatureBeforeChange": "\r StyledTextEvent getLineEvent(int lineOffset, String line)", "signatureAfterChange": "\r StyledTextEvent sendLineEvent(int eventType, int lineOffset, String line)", "diff": ["-StyledTextEvent getLineEvent(int lineOffset, String line) {\r", "-\tStyledTextEvent event = new StyledTextEvent(logicalContent);\r", "+StyledTextEvent sendLineEvent(int eventType, int lineOffset, String line) {\r", "+\tStyledTextEvent event = null;\r", "-\tif (wordWrap) {\r", "-\t    // if word wrap is on, the line offset and text may be visual (wrapped)\r", "-\t    int lineIndex = logicalContent.getLineAtOffset(lineOffset);\r", "-\t    \r", "-\t    event.detail = logicalContent.getOffsetAtLine(lineIndex);\r", "-\t\tevent.text = logicalContent.getLine(lineIndex);\r", "+\tif (isListening(eventType)) {\r", "+\t\tevent = new StyledTextEvent(logicalContent);\t\t\r", "+\t\tif (wordWrap) {\r", "+\t\t    // if word wrap is on, the line offset and text may be visual (wrapped)\r", "+\t\t    int lineIndex = logicalContent.getLineAtOffset(lineOffset);\r", "+\t\t    \r", "+\t\t    event.detail = logicalContent.getOffsetAtLine(lineIndex);\r", "+\t\t\tevent.text = logicalContent.getLine(lineIndex);\r", "+\t\t}\r", "+\t\telse {\r", "+\t\t\tevent.detail = lineOffset;\r", "+\t\t\tevent.text = line;\r", "+\t\t}\r", "+\t\tnotifyListeners(eventType, event);\r", "-\telse {\r", "-\t\tevent.detail = lineOffset;\r", "-\t\tevent.text = line;\r", "-\t}\r", "-\treturn event;\r", "+\treturn event;\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96c8fc0ec588e51b0b5b2305d44b6318", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "f2d49c39e40c0219018180fe5593174d163c23e7", "commitAfterChange": "4c66d1187e0c2dc7610218cad1247c1aff3483eb", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  public boolean isLayoutDeferred ()", "signatureAfterChange": "  boolean isLayoutDeferred (boolean layoutChild)", "diff": ["-public boolean isLayoutDeferred () {", "-\tcheckWidget ();", "+boolean isLayoutDeferred (boolean layoutChild) {", "+\tif (layoutChild && layoutCount > 0) state |= LAYOUT_CHILD;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9142c5a9ed07cd6b9daf665af04a8222", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/NativesGenerator.java", "commitBeforeChange": "579505f5c399bb89f97d98e9912b18625d2312e2", "commitAfterChange": "6f962e3a053bd8c18a3e154a7ac0ad1ba2aeb3fe", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  void generateFunctionPrototype(Method method, String function, Class[] paramTypes, Class returnType)", "signatureAfterChange": "  void generateFunctionPrototype(Method method, String function, Class[] paramTypes, Class returnType, boolean singleLine)", "diff": ["-void generateFunctionPrototype(Method method, String function, Class[] paramTypes, Class returnType) {", "+void generateFunctionPrototype(Method method, String function, Class[] paramTypes, Class returnType, boolean singleLine) {", "-\toutputln(\")\");", "-\toutput(\"\\t(JNIEnv *env, \");", "+\tif (singleLine) {", "+\t\toutput(\")\");", "+\t\toutput(\"(JNIEnv *env, \");", "+\t} else {", "+\t\toutputln(\")\");", "+\t\toutput(\"\\t(JNIEnv *env, \");", "+\t}", "-\toutputln(\")\");", "+\toutput(\")\");", "+\tif (!singleLine) outputln();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "647202f1a6d50a474cf483f3098c8b13", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "5ff7ac2fddf79437e7380da2c61f177a9d2b7b57", "commitAfterChange": "a11f12229032da8f3583f9824ed7436735b4c74e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  void copyArea (Image image, int x, int y, int srcImage)", "signatureAfterChange": "  void copyArea (Image image, int x, int y, int srcImage, boolean screen)", "diff": ["-void copyArea (Image image, int x, int y, int srcImage) {", "+void copyArea (Image image, int x, int y, int srcImage, boolean screen) {", "-\tif (context != 0) { ", "+\tif (context != 0) {", "-\t\tOS.CGContextScaleCTM(context, 1, -1);", "-\t\tOS.CGContextTranslateCTM(context, 0, -height);", "+\t\tif (screen) {", "+\t\t\tOS.CGContextTranslateCTM(context, 0, -(rect.height - height));", "+\t\t} else {\t", "+\t\t\tOS.CGContextScaleCTM(context, 1, -1);", "+\t\t\tOS.CGContextTranslateCTM(context, 0, -height);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7987fb7c4a434d3019194cd1b76d7c66", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "19051ffe4fd662e4376e9ef3523424e6764f8cc9", "commitAfterChange": "fec0d691465789ed5f8cc6a20256c17056f52d4b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " Shell (Display display, Shell parent, int style, int handle)", "signatureAfterChange": " Shell (Display display, Shell parent, int style, int handle, boolean embedded)", "diff": ["-Shell (Display display, Shell parent, int style, int handle) {", "+Shell (Display display, Shell parent, int style, int handle, boolean embedded) {", "-\tthis.handle = handle;", "+\tif (handle != 0) {", "+\t\tif (embedded) {", "+\t\t\tthis.handle = handle;", "+\t\t} else {", "+\t\t\tthis.shellHandle = handle;", "+\t\t\tstate |= FOREIGN_HANDLE;", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dda81545a470772e70bc1ea161f2163c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "fa88b959cc1f3afb89a6408cd351458f0ea9b1c6", "commitAfterChange": "8c2f501e9842a7249efb9ce69da7ccc0647a03a7", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "  NSAttributedString createString (String string, Font font, Color foreground, int style, boolean mnemonics)", "signatureAfterChange": "  NSAttributedString createString (String string, Font font, Color foreground, int style, boolean enabled, boolean mnemonics)", "diff": ["-NSAttributedString createString (String string, Font font, Color foreground, int style, boolean mnemonics) {", "+NSAttributedString createString (String string, Font font, Color foreground, int style, boolean enabled, boolean mnemonics) {", "-\tif (foreground != null) {", "-\t\tNSColor color = NSColor.colorWithDeviceRed(foreground.handle[0], foreground.handle[1], foreground.handle[2], foreground.handle[3]);", "-\t\tdict.setObject (color, OS.NSForegroundColorAttributeName);", "+\tif (enabled) {", "+\t\tif (foreground != null) {", "+\t\t\tNSColor color = NSColor.colorWithDeviceRed(foreground.handle[0], foreground.handle[1], foreground.handle[2], foreground.handle[3]);", "+\t\t\tdict.setObject (color, OS.NSForegroundColorAttributeName);", "+\t\t}", "+\t} else {", "+\t\tdict.setObject (NSColor.disabledControlTextColor (), OS.NSForegroundColorAttributeName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ab7ecfffeb0c2120784a98741d01dd6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "ce2f35c3f6b1d0b5778f68f011b1d8668d3c5c72", "commitAfterChange": "00bee382096a1807d86474fed7c933116a37eeb8", "methodNumberBeforeChange": 217, "methodNumberAfterChange": 242, "signatureBeforeChange": "\r int textWidth(String text, int lineOffset, int startOffset, int length, StyleRange[] lineStyles, int startXOffset, GC gc)", "signatureAfterChange": "\r int textWidth(String text, int lineOffset, int startOffset, int length, StyleRange[] lineStyles, int startXOffset, GC gc, StyledTextBidi bidi)", "diff": ["-int textWidth(String text, int lineOffset, int startOffset, int length, StyleRange[] lineStyles, int startXOffset, GC gc) {\r", "+int textWidth(String text, int lineOffset, int startOffset, int length, StyleRange[] lineStyles, int startXOffset, GC gc, StyledTextBidi bidi) {\r", "-\tfor (int i = startOffset; i < endOffset; i++) {\r", "-\t\tint tabIndex = text.indexOf(TAB, i);\r", "-\t\t// is tab not present or past the rendering range?\r", "-\t\tif (tabIndex == -1 || tabIndex > endOffset) {\r", "-\t\t\ttabIndex = endOffset;\r", "-\t\t}\r", "-\t\tif (tabIndex != i) {\r", "-\t\t\tString tabSegment = text.substring(i, tabIndex);\r", "-\t\t\tif (lineStyles != null) {\r", "-\t\t\t\tpaintX = styledTextWidth(tabSegment, lineOffset + i, lineStyles, paintX, 0, gc, false);\r", "+\tif (bidi != null) {\r", "+\t\tpaintX = bidi.getCaretPosition(endOffset) - startXOffset;\r", "+\t}\r", "+\telse {\r", "+\t\tfor (int i = startOffset; i < endOffset; i++) {\r", "+\t\t\tint tabIndex = text.indexOf(TAB, i);\r", "+\t\t\t// is tab not present or past the rendering range?\r", "+\t\t\tif (tabIndex == -1 || tabIndex > endOffset) {\r", "+\t\t\t\ttabIndex = endOffset;\r", "-\t\t\telse {\r", "-\t\t\t\tfontData = setLineFont(gc, fontData, SWT.NORMAL);\r", "-\t\t\t\tpaintX += gc.stringExtent(tabSegment).x;\r", "+\t\t\tif (tabIndex != i) {\r", "+\t\t\t\tString tabSegment = text.substring(i, tabIndex);\r", "+\t\t\t\tif (lineStyles != null) {\r", "+\t\t\t\t\tpaintX = styledTextWidth(tabSegment, lineOffset + i, lineStyles, paintX, 0, gc, fontData);\r", "+\t\t\t\t}\r", "+\t\t\t\telse {\r", "+\t\t\t\t\tsetLineFont(gc, fontData, SWT.NORMAL);\r", "+\t\t\t\t\tpaintX += gc.stringExtent(tabSegment).x;\r", "+\t\t\t\t}\r", "+\t\t\t\tif (tabIndex != endOffset && tabWidth > 0) {\r", "+\t\t\t\t\tpaintX += tabWidth;\r", "+\t\t\t\t\tpaintX -= (startXOffset + paintX) % tabWidth;\r", "+\t\t\t\t}\r", "+\t\t\t\ti = tabIndex;\r", "-\t\t\tif (tabIndex != endOffset && tabWidth > 0) {\r", "+\t\t\telse \t\t\r", "+\t\t\tif (tabWidth > 0) {\r", "-\t\t\ti = tabIndex;\r", "-\t\t}\r", "-\t\telse \t\t\r", "-\t\tif (tabWidth > 0) {\r", "-\t\t\tpaintX += tabWidth;\r", "-\t\t\tpaintX -= (startXOffset + paintX) % tabWidth;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b99d1f1f5e80294b93a31822e44895f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "4622c8063e50066b4f21b5c73b333645d1791fcb", "commitAfterChange": "61543d447b16e5575c1e9c4cbc37aca5973d8e40", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  Shell (Display display, Shell parent, int style, int handle)", "signatureAfterChange": "  Shell (Display display, Shell parent, int style, int handle, boolean embedded)", "diff": ["-Shell (Display display, Shell parent, int style, int handle) {", "+Shell (Display display, Shell parent, int style, int handle, boolean embedded) {", "-\tthis.handle = handle;", "+\tif (handle != 0) {", "+\t\tif (embedded) {", "+\t\t\tthis.handle = handle;", "+\t\t} else {", "+\t\t\tshellHandle = handle;", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fed9b3cf13afb4fbb319a8bf49d10a3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "a7f6318524546d2c59ec1516946d4b957613a139", "commitAfterChange": "85b3730e88350fadfff9e5ea1ffa7e1ad34398b7", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "  void setScrollWidth ()", "signatureAfterChange": "  void setScrollWidth (boolean force)", "diff": ["-void setScrollWidth () {", "-\tif (drawCount != 0) return;", "+void setScrollWidth (boolean force) {", "+\tif (!force) {", "+\t\tif (drawCount != 0 || !OS.IsWindowVisible (handle)) {", "+\t\t\tfixScrollWidth = true;", "+\t\t\treturn;", "+\t\t}", "+\t}", "+\tfixScrollWidth = false;"]}], "num": 835}