{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9f2b45ad2a3dd916066f72a7b7634891", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60eb192c31a9877ab651335601b3ba1d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "5ce98d84a4c0affe3f610dd38f75dacaa39a48fc", "commitAfterChange": "ae4007f11a15afcb4fc57e9bd2429328396e9446", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  int gtk_create_menu_proxy (int widget)", "signatureAfterChange": "  int gtk_create_menu_proxy (int widget)", "diff": ["-\t/*", "-\t * Since the arrow button does not appear in the drop_down", "-\t * item, we request the menu-item and then, hook the ", "-\t * activate signal to send the Arrow selection signal. ", "-\t */", "-\tif ((style & SWT.DROP_DOWN) != 0) return 0;", "+\t", "-\t\t\t\tbyte[] label;", "+\t\t\t\tbyte[] label = null;", "+\t\t\t\tint [] showImages = new int []{1};", "+\t\t\t\tint /*long*/ settings = OS.gtk_settings_get_default();", "+\t\t\t\tif (settings != 0) {", "+\t\t\t\t\tOS.g_object_get (settings, OS.gtk_menu_images, showImages, 0);", "+\t\t\t\t}", "+\t\t\t\t/* ", "+\t\t\t\t * GTK tool items with only image appear as blank items ", "+\t\t\t\t * in overflow menu when the system property \"gtk-menu-images\"", "+\t\t\t\t * is set to false. To avoid that, display the tooltip text", "+\t\t\t\t * if available, in the overflow menu. ", "+\t\t\t\t * Feature in GTK. When the menuItem is initialised only ", "+\t\t\t\t * with the image, the overflow menu appears very sloppy.", "+\t\t\t\t * The fix is to initialise menu item with empty string.", "+\t\t\t\t */", "-\t\t\t\t\tlabel = new byte[]{0};", "+\t\t\t\t\tif ((showImages [0] == 0) && (toolTipText != null))", "+\t\t\t\t\t\tlabel = Converter.wcsToMbcs(null, toolTipText, true);", "+\t\t\t\t\telse", "+\t\t\t\t\t\tlabel = new byte[]{0};", "-\t\t\t\t/*", "-\t\t\t\t * Feature in GTK. If the menuItem is initialised only ", "-\t\t\t\t * with the image, then the menu appears very sloppy. ", "-\t\t\t\t * The fix is to initialise menu item with empty string.", "-\t\t\t\t */", "+\t\t\t\t/*", "+\t\t\t\t * Since the arrow button does not appear in the drop_down", "+\t\t\t\t * item, we request the menu-item and then, hook the ", "+\t\t\t\t * activate signal to send the Arrow selection signal. ", "+\t\t\t\t */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04164e5d9a5ecba2ec647d0769f59aa3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Scale.java", "commitBeforeChange": "8e456474322527ff8a1dfc293ab7526bc8016a61", "commitAfterChange": "fb5162d9cf395e7300fb32c509fcfaa11beb065c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  int callPaintEventHandler (int control, int damageRgn, int visibleRgn, int theEvent, int nextHandler)", "signatureAfterChange": "  int kEventMouseDown (int nextHandler, int theEvent, int userData)", "diff": ["-int callPaintEventHandler (int control, int damageRgn, int visibleRgn, int theEvent, int nextHandler) {", "-\tint result = super.callPaintEventHandler (control, damageRgn, visibleRgn, theEvent, nextHandler);", "+int kEventMouseDown (int nextHandler, int theEvent, int userData) {", "+\tint result = super.kEventMouseDown (nextHandler, theEvent, userData);", "+\tif (result == OS.noErr) return result;", "+\tif (!hasFocus ()) return result;", "-\t* is not ghosted, if the control is added to the window", "-\t* before the window is made visible, the user will not be", "-\t* able to drag the thumb to the end of the slider.  The", "-\t* fix to force the slider to be added after the window", "-\t* is visible by removing it and then adding it back.", "-\t* This is necessary every time the slider draws.", "+\t* is not ghosted, if the slider has keyboard focus, the", "+\t* user will not be able to drag the thumb to the maximum value", "+\t* of the slider.  The fix is to clear the focus temporarily", "+\t* and restore it after the thumb tracking is complety.", "-\tint topHandle = topHandle ();", "-\tint parentHandle = parent.handle;", "-\tOS.HIViewRemoveFromSuperview (topHandle);", "-\tOS.HIViewAddSubview (parentHandle, topHandle);", "+\tdisplay.ignoreFocus = true;", "+\tint window = OS.GetControlOwner (handle);", "+\tOS.ClearKeyboardFocus (window);", "+\tresult = OS.CallNextEventHandler (nextHandler, theEvent);", "+\tif (!isDisposed ()) {", "+\t\tOS.SetKeyboardFocus (window, handle, (short) OS.kControlFocusNextPart);", "+\t}", "+\tdisplay.ignoreFocus = false;"]}], "num": 35934}