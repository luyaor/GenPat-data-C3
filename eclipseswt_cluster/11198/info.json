{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b98205dd8546399a500a166a70047fb6", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9baff3ce580e3aad2a1b838fa34f4bb6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  RECT drawUnderlineGDIP (int graphics, int x, int baseline, int lineUnderlinePos, int lineBottom, StyleItem[] line, int index, int color, int selectionColor, RECT clipRect, RECT pRect, int selectionStart, int selectionEnd, int alpha, Rectangle drawClip)", "signatureAfterChange": "  RECT drawUnderlineGDIP (long graphics, int x, int baseline, int lineUnderlinePos, int lineBottom, StyleItem[] line, int index, long color, long selectionColor, RECT clipRect, RECT pRect, int selectionStart, int selectionEnd, int alpha, Rectangle drawClip)", "diff": ["-RECT drawUnderlineGDIP (int /*long*/ graphics, int x, int baseline, int lineUnderlinePos, int lineBottom, StyleItem[] line, int index, int /*long*/ color, int /*long*/ selectionColor, RECT clipRect, RECT pRect, int selectionStart, int selectionEnd, int alpha, Rectangle drawClip) {", "+RECT drawUnderlineGDIP (long /*int*/ graphics, int x, int baseline, int lineUnderlinePos, int lineBottom, StyleItem[] line, int index, long /*int*/ color, long /*int*/ selectionColor, RECT clipRect, RECT pRect, int selectionStart, int selectionEnd, int alpha, Rectangle drawClip) {", "-\t\tint /*long*/ brush = color;", "+\t\tlong /*int*/ brush = color;", "-\t\t\t\tint /*long*/ pen = Gdip.Pen_new(brush, squigglyThickness);", "+\t\t\t\tlong /*int*/ pen = Gdip.Pen_new(brush, squigglyThickness);", "-\t\t\t\t\tint /*long*/ selPen = Gdip.Pen_new(selectionColor, squigglyThickness);", "+\t\t\t\t\tlong /*int*/ selPen = Gdip.Pen_new(selectionColor, squigglyThickness);", "-\t\t\t\tint /*long*/ pen = Gdip.Pen_new(brush, 1);", "+\t\t\t\tlong /*int*/ pen = Gdip.Pen_new(brush, 1);", "-\t\t\t\t\tint /*long*/ selPen = Gdip.Pen_new(brush, 1);", "+\t\t\t\t\tlong /*int*/ selPen = Gdip.Pen_new(brush, 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69034b285b3a627abecaf838868f0cea", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  RECT drawBorderGDIP(int graphics, int x, int y, int lineHeight, StyleItem[] line, int index, int color, int selectionColor, RECT clipRect, RECT pRect,  int selectionStart, int selectionEnd, int alpha, Rectangle drawClip)", "signatureAfterChange": "  RECT drawBorderGDIP(long graphics, int x, int y, int lineHeight, StyleItem[] line, int index, long color, long selectionColor, RECT clipRect, RECT pRect,  int selectionStart, int selectionEnd, int alpha, Rectangle drawClip)", "diff": ["-RECT drawBorderGDIP(int /*long*/ graphics, int x, int y, int lineHeight, StyleItem[] line, int index, int /*long*/ color, int /*long*/ selectionColor, RECT clipRect, RECT pRect,  int selectionStart, int selectionEnd, int alpha, Rectangle drawClip) {", "+RECT drawBorderGDIP(long /*int*/ graphics, int x, int y, int lineHeight, StyleItem[] line, int index, long /*int*/ color, long /*int*/ selectionColor, RECT clipRect, RECT pRect,  int selectionStart, int selectionEnd, int alpha, Rectangle drawClip) {", "-\t\tint /*long*/ brush = color;", "+\t\tlong /*int*/ brush = color;", "-\t\tint /*long*/ pen = Gdip.Pen_new(brush, lineWidth);", "+\t\tlong /*int*/ pen = Gdip.Pen_new(brush, lineWidth);", "-\t\t\tint /*long*/ selPen = Gdip.Pen_new(selectionColor, lineWidth);", "+\t\t\tlong /*int*/ selPen = Gdip.Pen_new(selectionColor, lineWidth);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48b8707cf90e380cce982a27903608f7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  RECT drawBorder(int hdc, int x, int y, int lineHeight, StyleItem[] line, int index, int color, int selectionColor, RECT clipRect, RECT pRect, int selectionStart, int selectionEnd, Rectangle drawClip)", "signatureAfterChange": "  RECT drawBorder(long hdc, int x, int y, int lineHeight, StyleItem[] line, int index, int color, int selectionColor, RECT clipRect, RECT pRect, int selectionStart, int selectionEnd, Rectangle drawClip)", "diff": ["-RECT drawBorder(int /*long*/ hdc, int x, int y, int lineHeight, StyleItem[] line, int index, int color, int selectionColor, RECT clipRect, RECT pRect, int selectionStart, int selectionEnd, Rectangle drawClip) {", "+RECT drawBorder(long /*int*/ hdc, int x, int y, int lineHeight, StyleItem[] line, int index, int color, int selectionColor, RECT clipRect, RECT pRect, int selectionStart, int selectionEnd, Rectangle drawClip) {", "-\t\tint /*long*/ oldBrush = OS.SelectObject(hdc, OS.GetStockObject(OS.NULL_BRUSH));", "+\t\tlong /*int*/ oldBrush = OS.SelectObject(hdc, OS.GetStockObject(OS.NULL_BRUSH));", "-\t\tint /*long*/ newPen = OS.ExtCreatePen(lineStyle | OS.PS_GEOMETRIC, lineWidth, logBrush, 0, null);", "-\t\tint /*long*/ oldPen = OS.SelectObject(hdc, newPen);", "+\t\tlong /*int*/ newPen = OS.ExtCreatePen(lineStyle | OS.PS_GEOMETRIC, lineWidth, logBrush, 0, null);", "+\t\tlong /*int*/ oldPen = OS.SelectObject(hdc, newPen);", "-\t\t\tint /*long*/ selPen = OS.ExtCreatePen (lineStyle | OS.PS_GEOMETRIC, lineWidth, logBrush, 0, null);", "+\t\t\tlong /*int*/ selPen = OS.ExtCreatePen (lineStyle | OS.PS_GEOMETRIC, lineWidth, logBrush, 0, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87d7abacf2ff5505e86663e3b6e48df0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  RECT drawUnderline(int hdc, int x, int baseline, int lineUnderlinePos, int lineBottom, StyleItem[] line, int index, int color, int selectionColor, RECT clipRect, RECT pRect, int selectionStart, int selectionEnd, Rectangle drawClip)", "signatureAfterChange": "  RECT drawUnderline(long hdc, int x, int baseline, int lineUnderlinePos, int lineBottom, StyleItem[] line, int index, int color, int selectionColor, RECT clipRect, RECT pRect, int selectionStart, int selectionEnd, Rectangle drawClip)", "diff": ["-RECT drawUnderline(int /*long*/ hdc, int x, int baseline, int lineUnderlinePos, int lineBottom, StyleItem[] line, int index, int color, int selectionColor, RECT clipRect, RECT pRect, int selectionStart, int selectionEnd, Rectangle drawClip) {", "+RECT drawUnderline(long /*int*/ hdc, int x, int baseline, int lineUnderlinePos, int lineBottom, StyleItem[] line, int index, int color, int selectionColor, RECT clipRect, RECT pRect, int selectionStart, int selectionEnd, Rectangle drawClip) {", "-\t\t\t\tint /*long*/ pen = OS.CreatePen(OS.PS_SOLID, squigglyThickness, color);", "-\t\t\t\tint /*long*/ oldPen = OS.SelectObject(hdc, pen);", "+\t\t\t\tlong /*int*/ pen = OS.CreatePen(OS.PS_SOLID, squigglyThickness, color);", "+\t\t\t\tlong /*int*/ oldPen = OS.SelectObject(hdc, pen);", "-\t\t\t\tint /*long*/ brush = OS.CreateSolidBrush(color);", "+\t\t\t\tlong /*int*/ brush = OS.CreateSolidBrush(color);", "-\t\t\t\t\tint /*long*/ selBrush = OS.CreateSolidBrush(selectionColor);", "+\t\t\t\t\tlong /*int*/ selBrush = OS.CreateSolidBrush(selectionColor);", "-\t\t\t\tint /*long*/ pen = OS.CreatePen(penStyle, 1, color);", "-\t\t\t\tint /*long*/ oldPen = OS.SelectObject(hdc, pen);", "+\t\t\t\tlong /*int*/ pen = OS.CreatePen(penStyle, 1, color);", "+\t\t\t\tlong /*int*/ oldPen = OS.SelectObject(hdc, pen);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e39fc16151e9d9d9f6601382a4b42fc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  RECT drawRunTextGDIPRaster(int graphics, StyleItem run, RECT rect, int baseline, int color, int selectionColor, int selectionStart, int selectionEnd)", "signatureAfterChange": "  RECT drawRunTextGDIPRaster(long graphics, StyleItem run, RECT rect, int baseline, int color, int selectionColor, int selectionStart, int selectionEnd)", "diff": ["-RECT drawRunTextGDIPRaster(int /*long*/ graphics, StyleItem run, RECT rect, int baseline, int color, int selectionColor, int selectionStart, int selectionEnd) {", "-\tint /*long*/ clipRgn = 0;", "+RECT drawRunTextGDIPRaster(long /*int*/ graphics, StyleItem run, RECT rect, int baseline, int color, int selectionColor, int selectionStart, int selectionEnd) {", "+\tlong /*int*/ clipRgn = 0;", "-\tint /*long*/ rgn = Gdip.Region_new();", "+\tlong /*int*/ rgn = Gdip.Region_new();", "-\tint /*long*/ matrix = Gdip.Matrix_new(1, 0, 0, 1, 0, 0);", "+\tlong /*int*/ matrix = Gdip.Matrix_new(1, 0, 0, 1, 0, 0);", "-\tint /*long*/ hdc = Gdip.Graphics_GetHDC(graphics);", "+\tlong /*int*/ hdc = Gdip.Graphics_GetHDC(graphics);"]}], "num": 11198}