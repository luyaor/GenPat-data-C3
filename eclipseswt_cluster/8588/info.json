{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "48ef44d75d147017adc4640e2def50eb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cd243cc962b54f61444684f4aaee18b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "eb0dd46e7194a9f7d813095a5dca290fae54babc", "commitAfterChange": "8174cf2444655210718c9dde4ae430f251492a85", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 66, "signatureBeforeChange": "\r \r void setKeyState(Event event, PhKeyEvent_t ke)", "signatureAfterChange": "\r \r void setKeyState(Event event, PhKeyEvent_t ke)", "diff": ["-void setKeyState(Event event, PhKeyEvent_t ke) {\r", "-\tint key_mods = ke.key_mods;\r", "-\tint button_state = ke.button_state;\r", "+\r", "+void setKeyState(Event event, PhKeyEvent_t ke) {\r", "+\t/*\r", "+\t* Fetuare in Photon.  The key_sym value is not valid when Ctrl\r", "+\t* or Alt is pressed. The fix is to detect this case and try to\r", "+\t* use the key_cap value.\r", "+\t*/\r", "+\tint key = 0;\r", "+\tif ((ke.key_flags & OS.Pk_KF_Sym_Valid) != 0) {\r", "+\t\t key = ke.key_sym;\r", "+\t} else if ((ke.key_flags & OS.Pk_KF_Cap_Valid) != 0) {\r", "+\t\tif ((ke.key_flags & (OS.Pk_KF_Key_Down | OS.Pk_KF_Key_Repeat)) != 0) {\r", "+\t\t\tkey = ke.key_cap;\r", "+\t\t\tif ((ke.key_mods & OS.Pk_KM_Ctrl) != 0) {\r", "+\t\t\t\tif ('a'  <= key && key <= 'z') key -= 'a' - 'A';\r", "+\t\t\t\tif (64 <= key && key <= 95) key -= 64;\r", "+\t\t\t}\r", "+\t\t}\r", "+\t}\r", "+\tevent.keyCode = Display.translateKey (key);\r", "+\tif (event.keyCode == 0) {\r", "+\t\tswitch (key) {\r", "+\t\t\tcase OS.Pk_BackSpace:\tevent.character = '\\b'; break;\r", "+\t\t\tcase OS.Pk_KP_Tab:\r", "+\t\t\tcase OS.Pk_Tab: \t\t\t\tevent.character = '\\t'; break;\r", "+\t\t\tcase OS.Pk_Linefeed:\t\tevent.character = '\\n'; break;\r", "+\t\t\tcase OS.Pk_Clear: \t\t\tevent.character = 0xB; break;\r", "+\t\t\tcase OS.Pk_Return: \t\t\tevent.character = '\\r'; break;\r", "+\t\t\tcase OS.Pk_Pause:\t\t\tevent.character = 0x13; break;\r", "+\t\t\tcase OS.Pk_Scroll_Lock:\tevent.character = 0x14; break;\r", "+\t\t\tcase OS.Pk_Escape:\t\tevent.character = 0x1B; break;\r", "+\t\t\tcase OS.Pk_Delete:\t\t\tevent.character = 0x7F; break;\r", "+\t\t\tdefault:\r", "+\t\t\t\tevent.character = (char) key;\r", "+\t\t}\r", "+\t}\r", "+\tsetInputState(event, ke.key_mods, ke.button_state);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b09fc2c6016a9950b7758bea6897c4b6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "22672b0c4775e24a072cc50f1680e9b73afd4005", "commitAfterChange": "cffff79d915fb2c4476fba4c1c1103774a10b35e", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "\r \r int processKey (int info)", "signatureAfterChange": "\r \r int processKey (int info)", "diff": ["+\tint key = 0;\r", "-\t\tevent.keyCode = Display.translateKey (ke.key_sym);\r", "-\t\tif (event.keyCode == 0) {\r", "-\t\t\tswitch (ke.key_sym) {\r", "-\t\t\t\tcase OS.Pk_BackSpace:\tevent.character = '\\b'; break;\r", "-\t\t\t\tcase OS.Pk_KP_Tab:\r", "-\t\t\t\tcase OS.Pk_Tab: \t\t\t\tevent.character = '\\t'; break;\r", "-\t\t\t\tcase OS.Pk_Linefeed:\t\tevent.character = '\\n'; break;\r", "-\t\t\t\tcase OS.Pk_Clear: \t\t\tevent.character = 0xB; break;\r", "-\t\t\t\tcase OS.Pk_Return: \t\t\tevent.character = '\\r'; break;\r", "-\t\t\t\tcase OS.Pk_Pause:\t\t\tevent.character = 0x13; break;\r", "-\t\t\t\tcase OS.Pk_Scroll_Lock:\tevent.character = 0x14; break;\r", "-\t\t\t\tcase OS.Pk_Escape:\t\tevent.character = 0x1B; break;\r", "-\t\t\t\tcase OS.Pk_Delete:\t\t\tevent.character = 0x7F; break;\r", "-\t\t\t\tdefault:\r", "-\t\t\t\t\tevent.character = (char) ke.key_sym;\r", "+\t\t key = ke.key_sym;\r", "+\t} else {\r", "+\t\tif ((ke.key_flags & OS.Pk_KF_Cap_Valid) != 0 && type == SWT.KeyDown) {\r", "+\t\t\tkey = ke.key_cap;\r", "+\t\t\tif ((ke.key_mods & OS.Pk_KM_Ctrl) != 0) {\r", "+\t\t\t\tif ('a'  <= key && key <= 'z') key -= 'a' - 'A';\r", "+\t\t\t\tif (64 <= key && key <= 95) key -= 64;\r", "+\t}\r", "+\tevent.keyCode = Display.translateKey (key);\r", "+\tif (event.keyCode == 0) {\r", "+\t\tswitch (key) {\r", "+\t\t\tcase OS.Pk_BackSpace:\tevent.character = '\\b'; break;\r", "+\t\t\tcase OS.Pk_KP_Tab:\r", "+\t\t\tcase OS.Pk_Tab: \t\t\t\tevent.character = '\\t'; break;\r", "+\t\t\tcase OS.Pk_Linefeed:\t\tevent.character = '\\n'; break;\r", "+\t\t\tcase OS.Pk_Clear: \t\t\tevent.character = 0xB; break;\r", "+\t\t\tcase OS.Pk_Return: \t\t\tevent.character = '\\r'; break;\r", "+\t\t\tcase OS.Pk_Pause:\t\t\tevent.character = 0x13; break;\r", "+\t\t\tcase OS.Pk_Scroll_Lock:\tevent.character = 0x14; break;\r", "+\t\t\tcase OS.Pk_Escape:\t\tevent.character = 0x1B; break;\r", "+\t\t\tcase OS.Pk_Delete:\t\t\tevent.character = 0x7F; break;\r", "+\t\t\tdefault:\r", "+\t\t\t\tevent.character = (char) key;\r", "+\t\t}\r", "+\t}\r", "+\tif (type == SWT.KeyDown) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf45d2692fc0b0a8152c990f3abe93bd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "eb0dd46e7194a9f7d813095a5dca290fae54babc", "commitAfterChange": "8174cf2444655210718c9dde4ae430f251492a85", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "\r \r int processKey (int info)", "signatureAfterChange": "\r \r int processKey (int info)", "diff": ["+\r", "+\t/* Ignore repeating modifier keys */\r", "-\t/* Determine if this is a traverse event */\r", "+\t/* Determine event type */\r", "+\tint type = SWT.KeyUp;\r", "-\t\t\r", "+\t\ttype = SWT.KeyDown;\r", "+\t}\r", "+\r", "+\t/* Determine if this is a traverse event */\r", "+\tif (type == SWT.KeyDown) {\r", "+\r", "-\tDisplay display = getDisplay ();\r", "+\r", "-\tint type = SWT.KeyUp;\r", "-\tif ((ke.key_flags & (OS.Pk_KF_Key_Down | OS.Pk_KF_Key_Repeat)) != 0) {\r", "-\t\ttype = SWT.KeyDown;\r", "-\t}\r", "-\tint key = 0;\r", "-\tif ((ke.key_flags & OS.Pk_KF_Sym_Valid) != 0) {\r", "-\t\t key = ke.key_sym;\r", "-\t} else {\r", "-\t\tif ((ke.key_flags & OS.Pk_KF_Cap_Valid) != 0 && type == SWT.KeyDown) {\r", "-\t\t\tkey = ke.key_cap;\r", "-\t\t\tif ((ke.key_mods & OS.Pk_KM_Ctrl) != 0) {\r", "-\t\t\t\tif ('a'  <= key && key <= 'z') key -= 'a' - 'A';\r", "-\t\t\t\tif (64 <= key && key <= 95) key -= 64;\r", "-\t\t\t}\r", "-\t\t}\r", "-\t}\r", "-\tevent.keyCode = Display.translateKey (key);\r", "-\tif (event.keyCode == 0) {\r", "-\t\tswitch (key) {\r", "-\t\t\tcase OS.Pk_BackSpace:\tevent.character = '\\b'; break;\r", "-\t\t\tcase OS.Pk_KP_Tab:\r", "-\t\t\tcase OS.Pk_Tab: \t\t\t\tevent.character = '\\t'; break;\r", "-\t\t\tcase OS.Pk_Linefeed:\t\tevent.character = '\\n'; break;\r", "-\t\t\tcase OS.Pk_Clear: \t\t\tevent.character = 0xB; break;\r", "-\t\t\tcase OS.Pk_Return: \t\t\tevent.character = '\\r'; break;\r", "-\t\t\tcase OS.Pk_Pause:\t\t\tevent.character = 0x13; break;\r", "-\t\t\tcase OS.Pk_Scroll_Lock:\tevent.character = 0x14; break;\r", "-\t\t\tcase OS.Pk_Escape:\t\tevent.character = 0x1B; break;\r", "-\t\t\tcase OS.Pk_Delete:\t\t\tevent.character = 0x7F; break;\r", "-\t\t\tdefault:\r", "-\t\t\t\tevent.character = (char) key;\r", "-\t\t}\r", "-\t}\r", "+\tsetKeyState (event, ke);\r", "+\tDisplay display = getDisplay ();\r", "-\t}\r", "-\tsetKeyState(event, ke);\r", "-\tif (type == SWT.KeyUp) {\t\r", "+\t} else {\r"]}], "num": 8588}