{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ac744ab065540fe7b3ed0d7ddc1f3dd9", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db2a8159f21992b7ebc5451ff9211e6e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "82390db1d08867108458933a7d79273ba2a3504d", "commitAfterChange": "20f9768787079ed7061973e56b2bb2f6394b90d6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  int createGdipPen()", "signatureAfterChange": "  int createGdipPen()", "diff": ["+\t\t/*", "+\t\t* Feature in Windows.  The default end caps is PS_ENDCAP_ROUND", "+\t\t* and the default line join is PS_JOIN_ROUND which are different", "+\t\t* from other platforms.  The fix is to change these values when", "+\t\t* line width is widened.", "+\t\t*/", "+\t\tif (width <= 1) {", "+\t\t\tstyle |= OS.PS_ENDCAP_FLAT | OS.PS_JOIN_MITER;", "+\t\t}", "-\tint pen = Gdip.Pen_new(color, width);", "+\tint pen = Gdip.Pen_new(color, Math.max (1, width));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e53ce5d0c2ca584a4fbd88ecd02c736c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "f38c6e259682997e3ae8e6c34beda9c0c421c9d4", "commitAfterChange": "978a5068b13063ede30b740ed3c44a97b7570e39", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  void init(Device device, int width, int height)", "signatureAfterChange": "  void init(Device device, int width, int height)", "diff": ["+\t/*", "+\t* Feature in Windows.  CreateCompatibleBitmap() may fail", "+\t* for large images.  The fix is to create a DIB section", "+\t* in that case.", "+\t*/", "+\tif (handle == 0) {", "+\t\tint bits = OS.GetDeviceCaps(hDC, OS.BITSPIXEL);", "+\t\tint planes = OS.GetDeviceCaps(hDC, OS.PLANES);", "+\t\tint depth = bits * planes;", "+\t\tif (depth < 16) depth = 16;", "+\t\thandle = createDIB(width, height, depth);", "+\t}"]}], "num": 39207}