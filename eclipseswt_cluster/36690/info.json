{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "32c5bdf5ed20214b028009657878c548", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4125eed05699795722987fb260ec3e5a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "5544ce1d748561f71c4f1d1997c431f82e5c4c86", "commitAfterChange": "24e0049851c0d0a09cb9f25e5892d112e2936fed", "methodNumberBeforeChange": 251, "methodNumberAfterChange": 244, "signatureBeforeChange": " void redrawLines(int firstLine, int offsetInFirstLine, int lastLine, int endOffset, boolean clearBackground)", "signatureAfterChange": " void redrawLines(int firstLine, int offsetInFirstLine, int lastLine, int endOffset, boolean clearBackground)", "diff": ["-\tint redrawX = getXAtOffset(line, firstLine, offsetInFirstLine) - leftMargin;", "-\tint redrawStopX;", "-\tint redrawY = firstLine * lineHeight - verticalScrollOffset;", "+\tint redrawY, redrawWidth;", "-\tboolean fullLineRedraw = ((getStyle() & SWT.FULL_SELECTION) != 0 && lastLine > firstLine);", "-", "+\tboolean fullLineRedraw;", "+\tStyledTextEvent event;", "+\tRectangle clientArea = getClientArea();", "+\t", "+\tfullLineRedraw = ((getStyle() & SWT.FULL_SELECTION) != 0 && lastLine > firstLine);", "-\t}", "-\t// calculate redraw stop location", "-\tif (fullLineRedraw) {", "-\t\tredrawStopX = getClientArea().width - leftMargin;", "-\t}", "-\telse {", "-\t\tredrawStopX = getXAtOffset(line, firstLine, endOffset - firstLineOffset) - leftMargin;", "-\t}", "-\tdraw(redrawX, redrawY, redrawStopX - redrawX, lineHeight, clearBackground);", "+\t}\t", "+\tevent = renderer.getLineStyleData(firstLineOffset, line);", "+\tTextLayout layout = renderer.getTextLayout(line, firstLineOffset, event);", "+\tRectangle rect = layout.getBounds(offsetInFirstLine, Math.min(endOffset, line.length()) - 1);", "+\trenderer.disposeTextLayout(layout, event);", "+\trect.x -= horizontalScrollOffset;", "+\trect.intersect(clientArea);", "+\tredrawY = firstLine * lineHeight - verticalScrollOffset;", "+\tredrawWidth = fullLineRedraw ? clientArea.width - leftMargin - rightMargin : rect.width;", "+\tdraw(rect.x, redrawY, redrawWidth, lineHeight, clearBackground);", "+\t", "-\t\t\tif (fullLineRedraw) {", "-\t\t\t\tredrawStopX = getClientArea().width - leftMargin;", "-\t\t\t}", "-\t\t\telse {", "-\t\t\t\tredrawStopX = getXAtOffset(line, lastLine, offsetInLastLine) - leftMargin;", "-\t\t\t}", "+\t\t\tline = content.getLine(lastLine);", "+\t\t\tevent = renderer.getLineStyleData(offsetInLastLine, line);", "+\t\t\tlayout = renderer.getTextLayout(line, endOffset, event);", "+\t\t\trect = layout.getBounds(0, offsetInLastLine - 1);", "+\t\t\trenderer.disposeTextLayout(layout, event);", "+\t\t\trect.x -= horizontalScrollOffset;", "+\t\t\trect.intersect(clientArea);", "-\t\t\tdraw(0, redrawY, redrawStopX, lineHeight, clearBackground);", "+\t\t\tredrawWidth = fullLineRedraw ? clientArea.width - leftMargin - rightMargin : rect.width;", "+\t\t\tdraw(rect.x, redrawY, redrawWidth, lineHeight, clearBackground);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c2c993b35ea04e86a0eb722952c734c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "df0f80ff8a78c112a82532d9d0b7052a1a5c953a", "commitAfterChange": "23e8e8964dd4f5d4f3dad5c0108120b1e7e71698", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 28, "signatureBeforeChange": " void onPaint(Event event)", "signatureAfterChange": " void onPaint(Event event)", "diff": ["-", "+\tboolean vertical = (style & SWT.VERTICAL) != 0;", "-\tint stopX = getBounds().width;", "+\tint stopX = getWidth();", "+\tRectangle rect;", "-\t\t\tbounds = items[row][i].getBounds();", "-\t\t\tif (!clipping.intersects(bounds)) continue;", "+\t\t\tbounds = items[row][i].internalGetBounds();", "+\t\t\trect = fixRectangle(bounds.x, bounds.y, bounds.width, bounds.height);", "+\t\t\tif (!clipping.intersects(rect)) continue;", "-\t\t\t\tif (!flat) nativeGripper = drawGripper(bounds.x, bounds.y, CoolItem.MINIMUM_WIDTH, bounds.height);", "+\t\t\t\trect = fixRectangle(bounds.x, bounds.y, CoolItem.MINIMUM_WIDTH, bounds.height);", "+\t\t\t\tif (!flat) \tnativeGripper = drawGripper(rect.x, rect.y, rect.width, rect.height, vertical);", "-\t\t\t\t\tgc.drawRectangle(", "-\t\t\t\t\t\tbounds.x + CoolItem.MARGIN_WIDTH, ", "-\t\t\t\t\t\tbounds.y + grabberTrim, ", "-\t\t\t\t\t\t2, ", "-\t\t\t\t\t\tgrabberHeight);", "+\t\t\t\t\trect = fixRectangle(", "+\t\t\t\t\t\t\tbounds.x + CoolItem.MARGIN_WIDTH, ", "+\t\t\t\t\t\t\tbounds.y + grabberTrim, ", "+\t\t\t\t\t\t\t2, ", "+\t\t\t\t\t\t\tgrabberHeight);", "+\t\t\t\t\tgc.drawRectangle(rect);", "-\t\t\t\t\tgc.drawLine(", "-\t\t\t\t\t\tbounds.x + CoolItem.MARGIN_WIDTH, ", "-\t\t\t\t\t\tbounds.y + grabberTrim + 1, ", "-\t\t\t\t\t\tbounds.x + CoolItem.MARGIN_WIDTH, ", "-\t\t\t\t\t\tbounds.y + grabberTrim + grabberHeight - 1);", "-\t\t\t\t\tgc.drawLine(", "-\t\t\t\t\t\tbounds.x + CoolItem.MARGIN_WIDTH, ", "-\t\t\t\t\t\tbounds.y + grabberTrim, ", "-\t\t\t\t\t\tbounds.x + CoolItem.MARGIN_WIDTH + 1, ", "-\t\t\t\t\t\tbounds.y + grabberTrim);", "+\t\t\t\t\trect = fixRectangle(", "+\t\t\t\t\t\t\tbounds.x + CoolItem.MARGIN_WIDTH, ", "+\t\t\t\t\t\t\tbounds.y + grabberTrim + 1, ", "+\t\t\t\t\t\t\tbounds.x + CoolItem.MARGIN_WIDTH, ", "+\t\t\t\t\t\t\tbounds.y + grabberTrim + grabberHeight - 1);", "+\t\t\t\t\tgc.drawLine(rect.x, rect.y, rect.width, rect.height);", "+\t\t\t\t\trect = fixRectangle(", "+\t\t\t\t\t\t\tbounds.x + CoolItem.MARGIN_WIDTH, ", "+\t\t\t\t\t\t\tbounds.y + grabberTrim, ", "+\t\t\t\t\t\t\tbounds.x + CoolItem.MARGIN_WIDTH + 1, ", "+\t\t\t\t\t\t\tbounds.y + grabberTrim);", "+\t\t\t\t\tgc.drawLine(rect.x, rect.y, rect.width, rect.height);", "-\t\t\t\tgc.drawLine(bounds.x, bounds.y, bounds.x, bounds.y + bounds.height - 1);", "+\t\t\t\trect = fixRectangle(bounds.x, bounds.y, bounds.x, bounds.y + bounds.height - 1);", "+\t\t\t\tgc.drawLine(rect.x, rect.y, rect.width, rect.height);", "-\t\t\t\tgc.drawLine(bounds.x + 1, bounds.y, bounds.x + 1, bounds.y + bounds.height - 1);", "+\t\t\t\trect = fixRectangle(bounds.x + 1, bounds.y, bounds.x + 1, bounds.y + bounds.height - 1);", "+\t\t\t\tgc.drawLine(rect.x, rect.y, rect.width, rect.height);", "-\t\t\tgc.drawLine(0, separatorY, stopX, separatorY);\t", "+\t\t\trect = fixRectangle(0, separatorY, stopX, separatorY);", "+\t\t\tgc.drawLine(rect.x, rect.y, rect.width, rect.height);\t", "-\t\t\tgc.drawLine(0, separatorY + 1, stopX, separatorY + 1);\t\t\t", "+\t\t\trect = fixRectangle(0, separatorY + 1, stopX, separatorY + 1);", "+\t\t\tgc.drawLine(rect.x, rect.y, rect.width, rect.height);"]}], "num": 36690}