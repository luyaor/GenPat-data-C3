{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7f1753a635f697953878fd5e2375114e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d84ef4bc08ca5c8313b5446b06997a8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/common/org/eclipse/swt/browser/WebBrowser.java", "commitBeforeChange": "d6d065ae0f40b44bdee462fcdf2077b4fae1a0c6", "commitAfterChange": "16f3a6f149cc8819744a511392e8b80c72229a1b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  public static boolean SetCookie (String value, String url)", "signatureAfterChange": "  public static boolean SetCookie (String value, String url, boolean addToPending)", "diff": ["-public static boolean SetCookie (String value, String url) {", "+public static boolean SetCookie (String value, String url, boolean addToPending) {", "-\tif (NativeSetCookie != null) NativeSetCookie.run ();", "-\tif (MozillaSetCookie != null) MozillaSetCookie.run ();", "+\tif (NativeSetCookie != null) {", "+\t\tNativeSetCookie.run ();", "+\t} else {", "+\t\tif (addToPending && NativePendingCookies != null) {", "+\t\t\tNativePendingCookies.add (new String[] {value, url});", "+\t\t}", "+\t}", "+\tif (MozillaSetCookie != null) {", "+\t\tMozillaSetCookie.run ();", "+\t} else {", "+\t\tif (addToPending && MozillaPendingCookies != null) {", "+\t\t\tMozillaPendingCookies.add (new String[] {value, url});", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c89faba1569aab2d47135c7173fcb50", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "9f800048edf52ed70457895b32ddfeee108ffda8", "commitAfterChange": "90ba9cb2ff16ee7ec96ab5262879eb4d4ffb3bc7", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 80, "signatureBeforeChange": " public void setHeaderVisible (boolean show)", "signatureAfterChange": " public void setHeaderVisible (boolean show)", "diff": ["-\tint topIndex = getTopIndex ();", "+\tint oldIndex = getTopIndex ();", "-\tsetTopIndex (topIndex);", "+\t", "+\t/*", "+\t* Bug in Windows.  Making any change to an item that", "+\t* changes the item height of a table while the table", "+\t* is scrolled can cause the lines to draw incorrectly.", "+\t* This happens even when the lines are not currently", "+\t* visible and are shown afterwards.  The fix is to", "+\t* save the top index, scroll to the top of the table", "+\t* and then restore the original top index.", "+\t*/", "+\tint newIndex = getTopIndex ();", "+\tif (newIndex != 0) {", "+\t\tsetRedraw (false);", "+\t\tsetTopIndex (0);", "+\t}", "-\t\tif ((bits & OS.LVS_EX_GRIDLINES) != 0) setItemHeight ();", "+\t\tif ((bits & OS.LVS_EX_GRIDLINES) != 0) fixItemHeight (false);", "+\t}", "+\tsetTopIndex (oldIndex);", "+\tif (newIndex != 0) {", "+\t\tsetRedraw (true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3eec1403c1d6841a84d06302d406a26", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "9f800048edf52ed70457895b32ddfeee108ffda8", "commitAfterChange": "90ba9cb2ff16ee7ec96ab5262879eb4d4ffb3bc7", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 76, "signatureBeforeChange": "  void setCheckboxImageList (int width, int height)", "signatureAfterChange": "  void setCheckboxImageList (int width, int height, boolean fixScroll)", "diff": ["-", "-void setCheckboxImageList (int width, int height) {", "+void setCheckboxImageList (int width, int height, boolean fixScroll) {", "+\t/*", "+\t* Bug in Windows.  Making any change to an item that", "+\t* changes the item height of a table while the table", "+\t* is scrolled can cause the lines to draw incorrectly.", "+\t* This happens even when the lines are not currently", "+\t* visible and are shown afterwards.  The fix is to", "+\t* save the top index, scroll to the top of the table", "+\t* and then restore the original top index.", "+\t*/", "+\tint topIndex = getTopIndex ();", "+\tif (fixScroll && topIndex != 0) {", "+\t\tsetRedraw (false);", "+\t\tsetTopIndex (0);", "+\t}", "+\tif (fixScroll && topIndex != 0) {", "+\t\tsetTopIndex (topIndex);", "+\t\tsetRedraw (true);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8097da5ca1f601d40a0d8fd2225f257d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java", "commitBeforeChange": "581e2be923c73fa26ac8208dc1b808c769e30134", "commitAfterChange": "f9f3156adc6e8f40d328c15f0f2aa9510ae00291", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\t\tif (OS.COMCTL32_MAJOR >= 6 && OS.IsAppThemed ()) {", "+\t\t\tif (isAppThemed ()) {", "+\t\t\tint oldHFont = 0;", "+\t\t\tif (hFont != 0) oldHFont = OS.SelectObject (hDC, hFont);", "+\t\t\tif (hFont != 0) OS.SelectObject (hDC, oldHFont);"]}], "num": 28925}