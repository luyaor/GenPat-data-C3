{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "118b9df9f49c4e480584fd6e9080456f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db745ccf66f2c59e42d96105de82119f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/wpf/org/eclipse/swt/program/Program.java", "commitBeforeChange": "5ca9f19c3ae67d7b05114fa944051be6178e9094", "commitAfterChange": "61789e08650fd465876c4e0ddba32e2bb8e1d42b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public boolean execute (String fileName)", "signatureAfterChange": " public boolean execute (String fileName)", "diff": ["-\ttry {", "-\t\tString commandLine = prefix + fileName + suffix;", "-\t\tCompatibility.exec (commandLine);", "-\t} catch (IOException e) {", "-\t\treturn false;", "-\t}", "-\treturn true;", "+\tString commandLine = prefix + fileName + suffix;", "+\tint length = commandLine.length ();", "+\tchar [] buffer = new char [length + 1];", "+\tcommandLine.getChars (0, length, buffer, 0);", "+\tSTARTUPINFOW lpStartupInfo = new STARTUPINFOW ();", "+\tlpStartupInfo.cb = STARTUPINFOW.sizeof;", "+\tPROCESS_INFORMATION lpProcessInformation = new PROCESS_INFORMATION ();", "+\tboolean success = OS.CreateProcessW (0, buffer, 0, 0, false, 0, 0, 0, lpStartupInfo, lpProcessInformation);", "+\tif (lpProcessInformation.hProcess != 0) OS.CloseHandle (lpProcessInformation.hProcess);", "+\tif (lpProcessInformation.hThread != 0) OS.CloseHandle (lpProcessInformation.hThread);", "+\treturn success;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5ae56cdf4c22c2b7a9ba8cd223b1edc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/wpf/org/eclipse/swt/program/Program.java", "commitBeforeChange": "5ca9f19c3ae67d7b05114fa944051be6178e9094", "commitAfterChange": "61789e08650fd465876c4e0ddba32e2bb8e1d42b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public static boolean launch (String fileName)", "signatureAfterChange": " public static boolean launch (String fileName)", "diff": ["-\tif (fileName == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);", "-\ttry {", "-\t\tCompatibility.exec (fileName);", "-\t} catch (IOException e) {", "-\t\treturn false;", "-\t}", "-\treturn true;", "+\tif (fileName == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);\t", "+\tint hHeap = OS.GetProcessHeap ();", "+\tint length = fileName.length ();", "+\tchar [] buffer = new char [length + 1];", "+\tfileName.getChars (0, length, buffer, 0);", "+\tint byteCount = buffer.length  * 2;", "+\tint lpFile = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount);", "+\tOS.MoveMemory (lpFile, buffer, byteCount);", "+\tSHELLEXECUTEINFOW info = new SHELLEXECUTEINFOW ();", "+\tinfo.cbSize = SHELLEXECUTEINFOW.sizeof;", "+\tinfo.lpFile = lpFile;", "+\tinfo.nShow = OS.SW_SHOW;", "+\tboolean result = OS.ShellExecuteExW (info);", "+\tif (lpFile != 0) OS.HeapFree (hHeap, 0, lpFile);", "+\treturn result;"]}], "num": 21705}