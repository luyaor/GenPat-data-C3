{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "33761f2e33d34f32df6b13bd3b7f05dc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dbde6a7631038b5c9c57cadeb72bd17", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/motif/org/eclipse/swt/internal/motif/OS.java", "commitBeforeChange": "50c09de4a56d0cb9a2785e0143f4e09696aa0da3", "commitAfterChange": "4faa718e848bca5a7335031d1c00baad23787159", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 31, "signatureBeforeChange": " public static final synchronized native int XChangeActivePointerGrab(int display, int eventMask, int cursor, int time);", "signatureAfterChange": " public static final int XChangeActivePointerGrab(int display, int eventMask, int cursor, int time)", "diff": ["-public static final synchronized native int XBlackPixel(int display, int screenNum);", "-public static final synchronized native int XChangeActivePointerGrab(int display, int eventMask, int cursor, int time);", "+public static final native int _XChangeActivePointerGrab(int display, int eventMask, int cursor, int time);", "+public static final int XChangeActivePointerGrab(int display, int eventMask, int cursor, int time) {", "+\tlock.lock();", "+\ttry {", "+\t\treturn _XChangeActivePointerGrab(display, eventMask, cursor, time);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3deb8c5f05af2a5e82c45c3953e26087", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/gtk/org/eclipse/swt/internal/gtk/OS.java", "commitBeforeChange": "50c09de4a56d0cb9a2785e0143f4e09696aa0da3", "commitAfterChange": "4faa718e848bca5a7335031d1c00baad23787159", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 74, "signatureBeforeChange": " public static final synchronized native boolean XCheckWindowEvent(int display, int window, int event_mask, int event_return);", "signatureAfterChange": " public static final boolean XCheckWindowEvent(int display, int window, int event_mask, int event_return)", "diff": ["-public static final synchronized native boolean XCheckMaskEvent(int /*long*/ display, int /*long*/ event_mask, int /*long*/ event_return);", "-public static final synchronized native boolean XCheckWindowEvent(int /*long*/ display, int /*long*/ window, int /*long*/ event_mask, int /*long*/ event_return);", "+public static final native boolean _XCheckWindowEvent(int /*long*/ display, int /*long*/ window, int /*long*/ event_mask, int /*long*/ event_return);", "+public static final boolean XCheckWindowEvent(int /*long*/ display, int /*long*/ window, int /*long*/ event_mask, int /*long*/ event_return) {", "+\tlock.lock();", "+\ttry {", "+\t\treturn _XCheckWindowEvent(display, window, event_mask, event_return);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}], "num": 58441}