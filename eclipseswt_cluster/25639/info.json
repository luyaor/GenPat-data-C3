{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2ca388c6fb31132a1e404fd2c8692caf", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc476f4a9ffac278f9e0f7d90cb8f00a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "ae834e4a6aabbe7b428dc047e3e613930ab049ad", "commitAfterChange": "05b983ea7f9494935862a426120e2ed48efa2321", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "\r \r LRESULT WM_NOTIFY (int wParam, int lParam)", "signatureAfterChange": "\r \r LRESULT WM_NOTIFY (int wParam, int lParam)", "diff": ["-\t\t\tcase OS.TTN_GETDISPINFOW:\r", "+\t\t\t/*\r", "+\t\t\t* Bug in Windows 98.  For some reason, the tool bar control\r", "+\t\t\t* sends both TTN_GETDISPINFOW and TTN_GETDISPINFOA to get\r", "+\t\t\t* the tool tip text and the tab folder control sends only \r", "+\t\t\t* TTN_GETDISPINFOW.  The fix is to handle only TTN_GETDISPINFOW,\r", "+\t\t\t* even though it should never be sent on Windows 98.\r", "+\t\t\t*\r", "+\t\t\t* NOTE:  Because the size of NMTTDISPINFO differs between\r", "+\t\t\t* Windows 98 and NT, guard against the case where the wrong\r", "+\t\t\t* kind of message occurs by copy inlining the memory moves\r", "+\t\t\t* and UNICODE conversion code.\r", "+\t\t\t*/\r", "-\t\t\t\tOS.MoveMemory (lpnmtdi, lParam, NMTTDISPINFO.sizeof);\r", "+\t\t\t\tOS.MoveMemoryA (lpnmtdi, lParam, NMTTDISPINFO.sizeofA);\r", "-\t\t\t\t\t/*\r", "-\t\t\t\t\t* Bug in Windows 98.  For some reason, the tool bar control\r", "-\t\t\t\t\t* sends both TTN_GETDISPINFOW and TTN_GETDISPINFOA to get\r", "-\t\t\t\t\t* the tool tip text and the tab folder control sends only \r", "-\t\t\t\t\t* TTN_GETDISPINFOW.  The fix is to handle only TTN_GETDISPINFOW,\r", "-\t\t\t\t\t* even though it should never be sent on Windows 98.\r", "-\t\t\t\t\t*/\r", "-\t\t\t\t\tif (hdr.code == OS.TTN_GETDISPINFOW) {\r", "-\t\t\t\t\t\tint length = string.length ();\r", "-\t\t\t\t\t\tchar [] buffer = new char [length + 1];\r", "-\t\t\t\t\t\tstring.getChars(0, length, buffer, 0);\r", "-\t\t\t\t\t\tshell.setToolTipText (lpnmtdi, buffer);\r", "-\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t/* Use the character encoding for the default locale */\r", "-\t\t\t\t\t\tTCHAR buffer = new TCHAR (0, string, true);\r", "-\t\t\t\t\t\tshell.setToolTipText (lpnmtdi, buffer);\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\tOS.MoveMemory (lParam, lpnmtdi, NMTTDISPINFO.sizeof);\r", "+\t\t\t\t\tint length = string.length ();\r", "+\t\t\t\t\tchar [] chars = new char [length];\r", "+\t\t\t\t\tstring.getChars (0, length, chars, 0);\r", "+\t\t\t\t\tbyte [] bytes = new byte [chars.length * 2 + 1];\r", "+\t\t\t\t\tOS.WideCharToMultiByte (OS.CP_ACP, 0, chars, chars.length, bytes, bytes.length, null, null);\r", "+\t\t\t\t\tshell.setToolTipText (lpnmtdi, bytes);\r", "+\t\t\t\t\tOS.MoveMemoryA (lParam, lpnmtdi, NMTTDISPINFO.sizeofA);\r", "+\t\t\t\t\treturn LRESULT.ZERO;\r", "+\t\t\t\t}\r", "+\t\t\t\tbreak;\r", "+\t\t\t}\r", "+\t\t\tcase OS.TTN_GETDISPINFOW: {\r", "+\t\t\t\tNMTTDISPINFO lpnmtdi = new NMTTDISPINFO ();\r", "+\t\t\t\tOS.MoveMemoryW (lpnmtdi, lParam, NMTTDISPINFO.sizeofW);\r", "+\t\t\t\tString string = toolTipText (lpnmtdi);\r", "+\t\t\t\tif (string != null && string.length () != 0) {\r", "+\t\t\t\t\tShell shell = getShell ();\r", "+\t\t\t\t\tstring = Display.withCrLf (string);\r", "+\t\t\t\t\tint length = string.length ();\r", "+\t\t\t\t\tchar [] buffer = new char [length + 1];\r", "+\t\t\t\t\tstring.getChars (0, length, buffer, 0);\r", "+\t\t\t\t\tshell.setToolTipText (lpnmtdi, buffer);\r", "+\t\t\t\t\tOS.MoveMemoryW (lParam, lpnmtdi, NMTTDISPINFO.sizeofW);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e21e62cfaa25d55eb485b2a4a0356e3d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "2afea353cc124a61703e6e922e965ceea1fb7c3a", "commitAfterChange": "e253003f379a5077ef9bad1970e6ecd3caffe942", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "\r \r LRESULT WM_NOTIFY (int wParam, int lParam)", "signatureAfterChange": "\r \r LRESULT WM_NOTIFY (int wParam, int lParam)", "diff": ["-\t\t\t\t/*\r", "-\t\t\t\t* Bug in Windows 98.  For some reason, the tool bar control\r", "-\t\t\t\t* sends both TTN_GETDISPINFOW and TTN_GETDISPINFOA to get the\r", "-\t\t\t\t* tool tip text.  The fix is to avoid TTN_GETDISPINFOW, which\r", "-\t\t\t\t* should never be sent on Windows 98.\r", "-\t\t\t\t*/\r", "-\t\t\t\tif (!OS.IsUnicode) break;\r", "-\t\t\t\t// FALL THROUGH\r", "-\t\t\tcase OS.TTN_GETDISPINFOA:\r", "+\t\t\tcase OS.TTN_GETDISPINFOA: {\r", "+\t\t\t\t\tShell shell = getShell ();\r", "-\t\t\t\t\t/* Use the character encoding for the default locale */\r", "-\t\t\t\t\tTCHAR buffer = new TCHAR (0, string, true);\r", "-\t\t\t\t\tgetShell ().setToolTipText (lpnmtdi, buffer);\r", "+\t\t\t\t\t/*\r", "+\t\t\t\t\t* Bug in Windows 98.  For some reason, the tool bar control\r", "+\t\t\t\t\t* sends both TTN_GETDISPINFOW and TTN_GETDISPINFOA to get\r", "+\t\t\t\t\t* the tool tip text and the tab folder control sends only \r", "+\t\t\t\t\t* TTN_GETDISPINFOW.  The fix is to handle only TTN_GETDISPINFOW,\r", "+\t\t\t\t\t* even though it should never be sent on Windows 98.\r", "+\t\t\t\t\t*/\r", "+\t\t\t\t\tif (hdr.code == OS.TTN_GETDISPINFOW) {\r", "+\t\t\t\t\t\tint length = string.length ();\r", "+\t\t\t\t\t\tchar [] buffer = new char [length + 1];\r", "+\t\t\t\t\t\tstring.getChars(0, length, buffer, 0);\r", "+\t\t\t\t\t\tshell.setToolTipText (lpnmtdi, buffer);\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t/* Use the character encoding for the default locale */\r", "+\t\t\t\t\t\tTCHAR buffer = new TCHAR (0, string, true);\r", "+\t\t\t\t\t\tshell.setToolTipText (lpnmtdi, buffer);\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\treturn LRESULT.ZERO;\r", "-\t\t\t\treturn LRESULT.ZERO;\r", "+\t\t\t\tbreak;\r", "+\t\t\t}\r"]}], "num": 25639}