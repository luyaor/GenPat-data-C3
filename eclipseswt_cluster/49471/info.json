{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cc5d8c37c4572e70e5d700427991f6c6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5455b299ed2a1c030c5b5134d44920b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "d9dfd82bfea57be5eb6a15f8c2e440de6084ec40", "commitAfterChange": "c5cbd8c4eebd8dd52ab69ee5068130875a54578b", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "\r static int putImage(ImageData image, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, int display, int visual, int screenDepth, XColor[] xcolors, int[] transparentPixel, int drawable, int gc)", "signatureAfterChange": "\r static int putImage(ImageData image, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, int display, int visual, int screenDepth, XColor[] xcolors, int[] transparentPixel, int drawable, int gc)", "diff": ["-\t\t((image.depth == 16 || image.depth == 24 || image.depth == 32) && palette.isDirect)))\r", "+\t\t((image.depth == 8) || (image.depth == 16 || image.depth == 24 || image.depth == 32) && palette.isDirect)))\r", "-\tif (image.depth <= 8) {\r", "+\tif (! palette.isDirect) {\r", "+\tfinal boolean screenDirect;\r", "+\t\tscreenDirect = false;\r", "+\t\tscreenDirect = true;\r", "-\t\tImageData.stretch1(image.data, image.bytesPerLine, ImageData.MSB_FIRST, srcX, srcY, srcWidth, srcHeight,\r", "-\t\t\tbuf, bplX, ImageData.MSB_FIRST, 0, 0, destWidth, destHeight, flipX, flipY);\r", "+\t\tImageData.blit(ImageData.BLIT_SRC,\r", "+\t\t\timage.data, 1, image.bytesPerLine, ImageData.MSB_FIRST, srcX, srcY, srcWidth, srcHeight, null, null, null,\r", "+\t\t\tImageData.ALPHA_OPAQUE, null, 0,\r", "+\t\t\tbuf, 1, bplX, ImageData.MSB_FIRST, 0, 0, destWidth, destHeight, null, null, null,\r", "+\t\t\tflipX, flipY);\r", "-\tif (image.depth > 8 && screenDepth > 8) {\r", "-\t\tImageData.blit(ImageData.BLIT_SRC,\r", "-\t\t\timage.data, image.depth, image.bytesPerLine, srcOrder, srcX, srcY, srcWidth, srcHeight, palette.redMask, palette.greenMask, palette.blueMask, -1, null, 0,\r", "-\t\t\tbuf, xImage.bits_per_pixel, xImage.bytes_per_line, destOrder, 0, 0, destWidth, destHeight, xImage.red_mask, xImage.green_mask, xImage.blue_mask,\r", "-\t\t\tflipX, flipY);\r", "-\t} else if (image.depth <= 8 && screenDepth > 8) {\r", "-\t\tImageData.blit(ImageData.BLIT_SRC,\r", "-\t\t\timage.data, image.depth, image.bytesPerLine, srcOrder, srcX, srcY, srcWidth, srcHeight, srcReds, srcGreens, srcBlues, -1, null, 0,\r", "-\t\t\tbuf, xImage.bits_per_pixel, xImage.bytes_per_line, destOrder, 0, 0, destWidth, destHeight, xImage.red_mask, xImage.green_mask, xImage.blue_mask,\r", "-\t\t\tflipX, flipY);\r", "-\t} else if (image.depth > 8 && screenDepth <= 8) {\r", "-\t\tImageData.blit(ImageData.BLIT_SRC,\r", "-\t\t\timage.data, image.depth, image.bytesPerLine, srcOrder, srcX, srcY, srcWidth, srcHeight, palette.redMask, palette.greenMask, palette.blueMask, -1, null, 0,\r", "-\t\t\tbuf, xImage.bits_per_pixel, xImage.bytes_per_line, destOrder, 0, 0, destWidth, destHeight, destReds, destGreens, destBlues,\r", "-\t\t\tflipX, flipY);\r", "-\t} else if (image.depth <= 8 && screenDepth <= 8) {\r", "-\t\tImageData.blit(ImageData.BLIT_SRC,\r", "-\t\t\timage.data, image.depth, image.bytesPerLine, srcOrder, srcX, srcY, srcWidth, srcHeight, srcReds, srcGreens, srcBlues, -1, null, 0,\r", "-\t\t\tbuf, xImage.bits_per_pixel, xImage.bytes_per_line, destOrder, 0, 0, destWidth, destHeight, destReds, destGreens, destBlues,\r", "-\t\t\tflipX, flipY);\r", "+\tif (palette.isDirect) {\r", "+\t\tif (screenDirect) {\r", "+\t\t\tImageData.blit(ImageData.BLIT_SRC,\r", "+\t\t\t\timage.data, image.depth, image.bytesPerLine, srcOrder, srcX, srcY, srcWidth, srcHeight, palette.redMask, palette.greenMask, palette.blueMask,\r", "+\t\t\t\tImageData.ALPHA_OPAQUE, null, 0,\r", "+\t\t\t\tbuf, xImage.bits_per_pixel, xImage.bytes_per_line, destOrder, 0, 0, destWidth, destHeight, xImage.red_mask, xImage.green_mask, xImage.blue_mask,\r", "+\t\t\t\tflipX, flipY);\r", "+\t\t} else {\r", "+\t\t\tImageData.blit(ImageData.BLIT_SRC,\r", "+\t\t\t\timage.data, image.depth, image.bytesPerLine, srcOrder, srcX, srcY, srcWidth, srcHeight, palette.redMask, palette.greenMask, palette.blueMask,\r", "+\t\t\t\tImageData.ALPHA_OPAQUE, null, 0,\r", "+\t\t\t\tbuf, xImage.bits_per_pixel, xImage.bytes_per_line, destOrder, 0, 0, destWidth, destHeight, destReds, destGreens, destBlues,\r", "+\t\t\t\tflipX, flipY);\r", "+\t\t}\r", "+\t} else {\r", "+\t\tif (screenDirect) {\r", "+\t\t\tImageData.blit(ImageData.BLIT_SRC,\r", "+\t\t\t\timage.data, image.depth, image.bytesPerLine, srcOrder, srcX, srcY, srcWidth, srcHeight, srcReds, srcGreens, srcBlues,\r", "+\t\t\t\tImageData.ALPHA_OPAQUE, null, 0,\r", "+\t\t\t\tbuf, xImage.bits_per_pixel, xImage.bytes_per_line, destOrder, 0, 0, destWidth, destHeight, xImage.red_mask, xImage.green_mask, xImage.blue_mask,\r", "+\t\t\t\tflipX, flipY);\r", "+\t\t} else {\r", "+\t\t\tImageData.blit(ImageData.BLIT_SRC,\r", "+\t\t\t\timage.data, image.depth, image.bytesPerLine, srcOrder, srcX, srcY, srcWidth, srcHeight, srcReds, srcGreens, srcBlues,\r", "+\t\t\t\tImageData.ALPHA_OPAQUE, null, 0,\r", "+\t\t\t\tbuf, xImage.bits_per_pixel, xImage.bytes_per_line, destOrder, 0, 0, destWidth, destHeight, destReds, destGreens, destBlues,\r", "+\t\t\t\tflipX, flipY);\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d14984fb562a63175d55bed4a9d99cda", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "bc0159e1f232b2994f90bfab06507bbdbd612bc8", "commitAfterChange": "4bf0b224a9caf7edd2d827277068ffb2c6e7bf23", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " static int putImage(ImageData image, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, int screenDepth, XColor[] xcolors, int[] transparentPixel, boolean isMask, int drawable)", "signatureAfterChange": " static int putImage(ImageData image, int srcX, int srcY, int srcWidth, int srcHeight, \t\tint destX, int destY, int destWidth, int destHeight, \t\tint screenDepth, int[] transparentPixel, int drawable)", "diff": ["-static int putImage(ImageData image, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, int screenDepth, XColor[] xcolors, int[] transparentPixel, boolean isMask, int drawable) {", "+static int putImage(ImageData image, int srcX, int srcY, int srcWidth, int srcHeight,", "+\t\tint destX, int destY, int destWidth, int destHeight,", "+\t\tint screenDepth, int[] transparentPixel, int drawable) {", "+\t\t\t", "-", "+\t\t\t", "+\t\t/*", "+\t\t*/", "-\t\t/* AW", "-\t\tVisual xVisual = new Visual();", "-\t\tOS.memmove(xVisual, visual, Visual.sizeof);", "-\t\tdestRedMask = xVisual.red_mask;", "-\t\tdestGreenMask = xVisual.green_mask;", "-\t\tdestBlueMask = xVisual.blue_mask;", "-\t\t*/", "-\t\t// AW", "-\t\tdestRedMask = 0xff0000;", "-\t\tdestGreenMask = 0x00ff00;", "-\t\tdestBlueMask = 0x0000ff;", "+\t\tdestRedMask = getRedMask(screenDepth);", "+\t\tdestGreenMask = getGreenMask(screenDepth);", "+\t\tdestBlueMask = getBlueMask(screenDepth);", "-", "-\t/* Depth 1 */", "-\tif (image.depth == 1 && isMask) {", "-\t\tint bplX = ((destWidth + 7) / 8 + 3) & 0xFFFC;", "-\t\tint bufSize = bplX * destHeight;", "-\t\tbyte[] buf = new byte[bufSize];", "-\t\t/* AW", "-\t\tint bufPtr = OS.XtMalloc(bufSize);", "-\t\tint xImagePtr = OS.XCreateImage(display, visual, 1, OS.XYBitmap, 0, bufPtr, destWidth, destHeight, 32, bplX);", "-\t\tif (xImagePtr == 0) {", "-\t\t\tOS.XtFree(bufPtr);", "-\t\t\treturn SWT.ERROR_NO_HANDLES;", "-\t\t}", "-\t\t*/", "-\t\t/* AW code never executed because isMask == true", "-\t\tint foreground = 1, background = 0;", "-\t\tif (!isMask) {", "-\t\t\tforeground = 0;", "-\t\t\tif (srcReds.length > 1) {", "-\t\t\t\tforeground = ImageData.closestMatch(screenDepth, srcReds[1], srcGreens[1], srcBlues[1],", "-\t\t\t\t\tdestRedMask, destGreenMask, destBlueMask, destReds, destGreens, destBlues);", "-\t\t\t}", "-\t\t\tif (srcReds.length > 0) {", "-\t\t\t\tbackground = ImageData.closestMatch(screenDepth, srcReds[0], srcGreens[0], srcBlues[0],", "-\t\t\t\t\tdestRedMask, destGreenMask, destBlueMask, destReds, destGreens, destBlues);", "-\t\t\t}", "-\t\t}", "-\t\t*/", "-\t\t/* AW", "-\t\tXImage xImage = new XImage();", "-\t\tOS.memmove(xImage, xImagePtr, XImage.sizeof);", "-\t\txImage.byte_order = OS.MSBFirst;", "-\t\txImage.bitmap_unit = 8;", "-\t\txImage.bitmap_bit_order = OS.MSBFirst;", "-\t\tOS.memmove(xImagePtr, xImage, XImage.sizeof);", "-\t\t*/", "-\t\tint destOrder = ImageData.MSB_FIRST;", "-\t\tImageData.blit(ImageData.BLIT_SRC,", "-\t\t\timage.data, 1, image.bytesPerLine, image.getByteOrder(), srcX, srcY, srcWidth, srcHeight, null, null, null,", "-\t\t\tImageData.ALPHA_OPAQUE, null, 0,", "-\t\t\tbuf, 1, bplX, destOrder, 0, 0, destWidth, destHeight, null, null, null,", "-\t\t\tflipX, flipY);", "-\t\t", "-\t\t/* AW", "-\t\tOS.memmove(xImage.data, buf, bufSize);", "-\t\tXGCValues values = new XGCValues();", "-\t\tOS.XGetGCValues(display, gc, OS.GCForeground | OS.GCBackground, values);", "-\t\tOS.XSetForeground(display, gc, foreground);", "-\t\tOS.XSetBackground(display, gc, background);", "-\t\tOS.XPutImage(display, drawable, gc, xImagePtr, 0, 0, destX, destY, destWidth, destHeight);", "-\t\tOS.XSetForeground(display, gc, values.foreground);", "-\t\tOS.XSetBackground(display, gc, values.background);", "-\t\tOS.XDestroyImage(xImagePtr);", "-\t\t*/", "-\t\tOS.setBitMapData(drawable, buf);", "-\t\treturn 0;", "-\t}", "-\t/* Depths other than 1 */", "-\t/* AW", "-\tint xImagePtr = OS.XCreateImage(display, visual, screenDepth, OS.ZPixmap, 0, 0, destWidth, destHeight, 32, 0);", "-\tif (xImagePtr == 0) return SWT.ERROR_NO_HANDLES;", "-\t*/", "-\tXImage xImage = new XImage(destWidth, destHeight, 32);", "-\t/* AW", "-\tOS.memmove(xImage, xImagePtr, XImage.sizeof);", "-\t*/", "-\tint bufSize = xImage.bytes_per_line * destHeight;\t", "+\tint destDepth= 32;", "+\tint destBitsPerPixel= destDepth;", "+\t", "+\tint dest_red_mask= getRedMask(destBitsPerPixel);", "+\tint dest_green_mask= getGreenMask(destBitsPerPixel);", "+\tint dest_blue_mask= getBlueMask(destBitsPerPixel);", "+\t", "+\tint destRowBytes= rowBytes(destWidth, 32);", "+\tint bufSize = destRowBytes * destHeight;\t", "-\t/*", "-\tint bufPtr = OS.XtMalloc(bufSize);", "-\txImage.data = bufPtr;", "-\tOS.memmove(xImagePtr, xImage, XImage.sizeof);", "-\t*/", "+", "-\tint destOrder = xImage.byte_order == OS.MSBFirst ? ImageData.MSB_FIRST : ImageData.LSB_FIRST;", "-\t\t\t\tbuf, xImage.bits_per_pixel, xImage.bytes_per_line, destOrder, 0, 0, destWidth, destHeight, xImage.red_mask, xImage.green_mask, xImage.blue_mask,", "+\t\t\t\tbuf, destBitsPerPixel, destRowBytes, ImageData.MSB_FIRST, 0, 0, destWidth, destHeight, dest_red_mask, dest_green_mask, dest_blue_mask,", "-\t\t\t\tbuf, xImage.bits_per_pixel, xImage.bytes_per_line, destOrder, 0, 0, destWidth, destHeight, destReds, destGreens, destBlues,", "+\t\t\t\tbuf, destBitsPerPixel, destRowBytes, ImageData.MSB_FIRST, 0, 0, destWidth, destHeight, destReds, destGreens, destBlues,", "-\t\t\t\tbuf, xImage.bits_per_pixel, xImage.bytes_per_line, destOrder, 0, 0, destWidth, destHeight, xImage.red_mask, xImage.green_mask, xImage.blue_mask,", "+\t\t\t\tbuf, destBitsPerPixel, destRowBytes, ImageData.MSB_FIRST, 0, 0, destWidth, destHeight, dest_red_mask, dest_green_mask, dest_blue_mask,", "-\t\t\t\tbuf, xImage.bits_per_pixel, xImage.bytes_per_line, destOrder, 0, 0, destWidth, destHeight, destReds, destGreens, destBlues,", "+\t\t\t\tbuf, destBitsPerPixel, destRowBytes, ImageData.MSB_FIRST, 0, 0, destWidth, destHeight, destReds, destGreens, destBlues,", "-\t/* AW", "-\tOS.memmove(xImage.data, buf, bufSize);", "-\tOS.XPutImage(display, drawable, gc, xImagePtr, 0, 0, destX, destY, destWidth, destHeight);", "-\tOS.XDestroyImage(xImagePtr);", "-\t*/"]}], "num": 49471}