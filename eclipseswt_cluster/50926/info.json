{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "83fdb09357a1169983513eac0930d87b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d8409098363c1c4be0b2bfbea229060", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 16, "signatureBeforeChange": " int processSetFocus (Object callData)", "signatureAfterChange": "  void destroyCIcon (int iconHandle)", "diff": ["+", "+void destroyCIcon (int iconHandle) {", "+\tOS.HLock(iconHandle);", "+\t", "+\t/* Dispose the ColorTable */", "+\tint[] iconPtr = new int[1];", "+\tOS.memcpy(iconPtr, iconHandle, 4);\t", "+\tPixMap iconPMap = new PixMap();", "+\tOS.memcpy(iconPMap, iconPtr[0], PixMap.sizeof);", "+\tif (iconPMap.pmTable != 0) OS.DisposeHandle(iconPMap.pmTable);", "+", "+\t/* Dispose the icon data */", "+\tint[] iconData = new int[1];", "+\tOS.memcpy(iconData, iconPtr[0] + PixMap.sizeof + 2 * BitMap.sizeof, 4);", "+\tif (iconData[0] != 0) OS.DisposeHandle(iconData[0]);", "+\t", "+\tOS.HUnlock(iconHandle);", "+\t", "+\t/* Dispose the icon */", "+\tOS.DisposeHandle(iconHandle);", "+}", "-}", "-int processSetFocus (Object callData) {", "-\treturn 0;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e76771f97278f1a83781957cd068b611", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "3dfc8f3ec633310286d6764dac83cfe55f22b7e9", "commitAfterChange": "690ff1b3ef838cb6fbfea1439ae28ab810f251de", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 50, "signatureBeforeChange": "  int itemNotificationProc (int browser, int id, int message)", "signatureAfterChange": "  int itemNotificationProc (int browser, int id, int message)", "diff": ["+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (!column.isDisposed ()) {", "+\t\t\t\tint [] position = new int[1];", "+\t\t\t\tOS.GetDataBrowserTableViewColumnPosition (handle, column.id, position);", "+\t\t\t\tif (position [0] != column.lastPosition) {", "+\t\t\t\t\tcolumn.lastPosition = position [0];", "+\t\t\t\t\tint order = (style & SWT.CHECK) != 0 ? position [0] - 1 : position [0];", "+\t\t\t\t\tif (order == 0) {", "+\t\t\t\t\t\tint [] disclosure = new int [1];", "+\t\t\t\t\t\tboolean [] expandableRows = new boolean [1];", "+\t\t\t\t\t\tOS.GetDataBrowserListViewDisclosureColumn (handle, disclosure, expandableRows);", "+\t\t\t\t\t\tif (disclosure [0] != column.id) {", "+\t\t\t\t\t\t\tOS.SetDataBrowserListViewDisclosureColumn (handle, column.id, expandableRows [0]);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tcolumn.sendEvent (SWT.Move);"]}], "num": 50926}