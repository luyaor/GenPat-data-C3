{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "59a509be4c92b47876f8efef3cbc4c78", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21d184f965d0f9a4e354a7ec8fe55dc2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/GridLayoutTab.java", "commitBeforeChange": "2cc7d30698448c6df09a70c69839e5a3830f9bc0", "commitAfterChange": "ca8346412189df48223ba59c33b21708729a1c0e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tvoid setLayoutData ()", "signatureAfterChange": " \tvoid setLayoutData()", "diff": ["-\tvoid setLayoutData () {", "-\t\tControl [] children = layoutComposite.getChildren ();", "-\t\tTableItem [] items = table.getItems ();", "+\tvoid setLayoutData() {", "+\t\tControl[] children = layoutComposite.getChildren();", "+\t\tTableItem[] items = table.getItems();", "-\t\tfor (int i = 0; i < children.length; i++) {", "-\t\t\tdata = new GridData ();", "+\t\tfor(int i = 0; i < children.length; i++) {", "+\t\t\tdata = new GridData();", "-\t\t\tdata.widthHint = new Integer (items [i].getText (WIDTH_COL)).intValue ();", "-\t\t\tdata.heightHint = new Integer (items [i].getText (HEIGHT_COL)).intValue ();", "+\t\t\tdata.widthHint = new Integer(items [i].getText(WIDTH_COL)).intValue();", "+\t\t\tdata.heightHint = new Integer(items [i].getText(HEIGHT_COL)).intValue();", "-\t\t\thAlign = items [i].getText (HALIGN_COL);", "-\t\t\tif (hAlign.equals (\"CENTER\")) {", "-\t\t\t\tdata.horizontalAlignment = GridData.CENTER;", "-\t\t\t} else if (hAlign.equals (\"END\")) {", "-\t\t\t\tdata.horizontalAlignment = GridData.END;", "-\t\t\t} else if (hAlign.equals (\"FILL\")) {", "-\t\t\t\tdata.horizontalAlignment = GridData.FILL;", "+\t\t\thAlign = items[i].getText(HALIGN_COL);", "+\t\t\tif (hAlign.equals(\"CENTER\")) {", "+\t\t\t\tdata.horizontalAlignment = SWT.CENTER;", "+\t\t\t} else if(hAlign.equals(\"END\")) {", "+\t\t\t\tdata.horizontalAlignment = SWT.END;", "+\t\t\t} else if(hAlign.equals(\"FILL\")) {", "+\t\t\t\tdata.horizontalAlignment = SWT.FILL;", "-\t\t\t\tdata.horizontalAlignment = GridData.BEGINNING;", "+\t\t\t\tdata.horizontalAlignment = SWT.BEGINNING;", "-\t\t\tvAlign = items [i].getText (VALIGN_COL);", "-\t\t\tif (vAlign.equals (\"BEGINNING\")) {", "-\t\t\t\tdata.verticalAlignment = GridData.BEGINNING;", "-\t\t\t} else if (vAlign.equals (\"END\")) {", "-\t\t\t\tdata.verticalAlignment = GridData.END;", "-\t\t\t} else if (vAlign.equals (\"FILL\")) {", "-\t\t\t\tdata.verticalAlignment = GridData.FILL;", "+\t\t\tvAlign = items [i].getText(VALIGN_COL);", "+\t\t\tif (vAlign.equals(\"BEGINNING\")) {", "+\t\t\t\tdata.verticalAlignment = SWT.BEGINNING;", "+\t\t\t} else if (vAlign.equals(\"END\")) {", "+\t\t\t\tdata.verticalAlignment = SWT.END;", "+\t\t\t} else if (vAlign.equals(\"FILL\")) {", "+\t\t\t\tdata.verticalAlignment = SWT.FILL;", "-\t\t\t\tdata.verticalAlignment = GridData.CENTER;", "+\t\t\t\tdata.verticalAlignment = SWT.CENTER;", "-\t\t\thIndent = new Integer (items [i].getText (HINDENT_COL)).intValue ();", "+\t\t\thIndent = new Integer(items[i].getText(HINDENT_COL)).intValue();", "-\t\t\thSpan = new Integer (items [i].getText (HSPAN_COL)).intValue ();", "+\t\t\thSpan = new Integer(items [i].getText(HSPAN_COL)).intValue();", "-\t\t\tvSpan = new Integer (items [i].getText (VSPAN_COL)).intValue ();", "+\t\t\tvSpan = new Integer(items[i].getText(VSPAN_COL)).intValue();", "-\t\t\thGrab = items [i].getText (HGRAB_COL);", "-\t\t\tif (hGrab.equals (\"true\")) {", "+\t\t\thGrab = items[i].getText(HGRAB_COL);", "+\t\t\tif(hGrab.equals(\"true\")) {", "-\t\t\tvGrab = items [i].getText (VGRAB_COL);", "-\t\t\tif (vGrab.equals (\"true\")) {", "+\t\t\tvGrab = items [i].getText(VGRAB_COL);", "+\t\t\tif (vGrab.equals(\"true\")) {", "-\t\t\tchildren [i].setLayoutData (data);", "+\t\t\tchildren[i].setLayoutData (data);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "418e7456441b3207e1c0f0c2a6c36b55", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/GridLayoutTab.java", "commitBeforeChange": "2cc7d30698448c6df09a70c69839e5a3830f9bc0", "commitAfterChange": "ca8346412189df48223ba59c33b21708729a1c0e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "\t \tStringBuffer generateLayoutCode ()", "signatureAfterChange": "\t \tStringBuffer generateLayoutCode()", "diff": ["-\tStringBuffer generateLayoutCode () {", "-\t\tStringBuffer code = new StringBuffer ();", "-\t\tcode.append (\"\\t\\tGridLayout gridLayout = new GridLayout ();\\n\");", "-\t\tif (gridLayout.numColumns != 1) {", "-\t\t\tcode.append (\"\\t\\tgridLayout.numColumns = \" + gridLayout.numColumns + \";\\n\");", "+\tStringBuffer generateLayoutCode() {", "+\t\tStringBuffer code = new StringBuffer();", "+\t\tcode.append(\"\\t\\tGridLayout gridLayout = new GridLayout ();\\n\");", "+\t\tif(gridLayout.numColumns != 1) {", "+\t\t\tcode.append(\"\\t\\tgridLayout.numColumns = \" + gridLayout.numColumns + \";\\n\");", "-\t\tif (gridLayout.makeColumnsEqualWidth) {", "-\t\t\tcode.append (\"\\t\\tgridLayout.makeColumnsEqualWidth = true;\\n\");", "+\t\tif(gridLayout.makeColumnsEqualWidth) {", "+\t\t\tcode.append(\"\\t\\tgridLayout.makeColumnsEqualWidth = true;\\n\");", "-\t\tif (gridLayout.marginHeight != 5) {", "-\t\t\tcode.append (\"\\t\\tgridLayout.marginHeight = \" + gridLayout.marginHeight + \";\\n\");", "+\t\tif(gridLayout.marginWidth != 5) {", "+\t\t\tcode.append(\"\\t\\tgridLayout.marginWidth = \" + gridLayout.marginWidth + \";\\n\");", "-\t\tif (gridLayout.marginWidth != 5) {", "-\t\t\tcode.append (\"\\t\\tgridLayout.marginWidth = \" + gridLayout.marginWidth + \";\\n\");", "+\t\tif(gridLayout.marginHeight != 5) {", "+\t\t\tcode.append(\"\\t\\tgridLayout.marginHeight = \" + gridLayout.marginHeight + \";\\n\");", "-\t\tif (gridLayout.horizontalSpacing != 5) {", "-\t\t\tcode.append (\"\\t\\tgridLayout.horizontalSpacing = \" + gridLayout.horizontalSpacing + \";\\n\");", "+\t\tif(gridLayout.horizontalSpacing != 5) {", "+\t\t\tcode.append(\"\\t\\tgridLayout.horizontalSpacing = \" + gridLayout.horizontalSpacing + \";\\n\");", "-\t\tif (gridLayout.verticalSpacing != 5) {", "-\t\t\tcode.append (\"\\t\\tgridLayout.verticalSpacing = \" + gridLayout.verticalSpacing + \";\\n\");", "+\t\tif(gridLayout.verticalSpacing != 5) {", "+\t\t\tcode.append(\"\\t\\tgridLayout.verticalSpacing = \" + gridLayout.verticalSpacing + \";\\n\");", "-\t\tcode.append (\"\\t\\tshell.setLayout (gridLayout);\\n\");", "+\t\tcode.append(\"\\t\\tshell.setLayout (gridLayout);\\n\");", "-\t\tfor (int i = 0; i < children.length; i++) {", "-\t\t\tControl control = children [i];", "-\t\t\tcode.append (getChildCode (control, i));", "-\t\t\tGridData data = (GridData) control.getLayoutData ();", "-\t\t\tif (data != null) {", "-\t\t\t\tcode.append (\"\\t\\t\");", "-\t\t\t\tif (first) {", "-\t\t\t\t\tcode.append (\"GridData \");", "+\t\tfor(int i = 0; i < children.length; i++) {", "+\t\t\tControl control = children[i];", "+\t\t\tcode.append(getChildCode(control, i));", "+\t\t\tGridData data = (GridData)control.getLayoutData();", "+\t\t\tif(data != null) {", "+\t\t\t\tcode.append(\"\\t\\t\");", "+\t\t\t\tif(first) {", "+\t\t\t\t\tcode.append(\"GridData \");", "-\t\t\t\t\tcode.append (\"\\t\\tdata.widthHint = \" + data.widthHint + \";\\n\");", "+\t\t\t\t\tcode.append(\"\\t\\tdata.widthHint = \" + data.widthHint + \";\\n\");", "-\t\t\t\t\tcode.append (\"\\t\\tdata.heightHint = \" + data.heightHint + \";\\n\");", "+\t\t\t\t\tcode.append(\"\\t\\tdata.heightHint = \" + data.heightHint + \";\\n\");", "-\t\t\t\tif (data.horizontalAlignment != GridData.BEGINNING) {", "+\t\t\t\tif(data.horizontalAlignment != SWT.BEGINNING) {", "-\t\t\t\t\tif (hAlignment == GridData.CENTER) alignment = \"GridData.CENTER\";", "-\t\t\t\t\telse if (hAlignment == GridData.END) alignment = \"GridData.END\";", "-\t\t\t\t\telse alignment = \"GridData.FILL\";", "-\t\t\t\t\tcode.append (\"\\t\\tdata.horizontalAlignment = \" + alignment + \";\\n\");", "+\t\t\t\t\tif(hAlignment == SWT.CENTER) alignment = \"SWT.CENTER\";", "+\t\t\t\t\telse if(hAlignment == SWT.END) alignment = \"SWT.END\";", "+\t\t\t\t\telse alignment = \"SWT.FILL\";", "+\t\t\t\t\tcode.append(\"\\t\\tdata.horizontalAlignment = \" + alignment + \";\\n\");", "-\t\t\t\tif (data.verticalAlignment != GridData.CENTER) {", "+\t\t\t\tif(data.verticalAlignment != SWT.CENTER) {", "-\t\t\t\t\tif (vAlignment == GridData.BEGINNING) alignment = \"GridData.BEGINNING\";", "-\t\t\t\t\telse if (vAlignment == GridData.END) alignment = \"GridData.END\";", "-\t\t\t\t\telse alignment = \"GridData.FILL\";", "-\t\t\t\t\tcode.append (\"\\t\\tdata.verticalAlignment = \" + alignment + \";\\n\");", "+\t\t\t\t\tif(vAlignment == SWT.BEGINNING) alignment = \"SWT.BEGINNING\";", "+\t\t\t\t\telse if(vAlignment == SWT.END) alignment = \"SWT.END\";", "+\t\t\t\t\telse alignment = \"SWT.FILL\";", "+\t\t\t\t\tcode.append(\"\\t\\tdata.verticalAlignment = \" + alignment + \";\\n\");", "-\t\t\t\tif (data.horizontalIndent != 0) {", "+\t\t\t\tif(data.horizontalIndent != 0) {", "-\t\t\t\tif (data.horizontalSpan != 1) {", "+\t\t\t\tif(data.horizontalSpan != 1) {", "-\t\t\t\tif (data.verticalSpan != 1) {", "+\t\t\t\tif(data.verticalSpan != 1) {", "-\t\t\t\tif (data.grabExcessHorizontalSpace) {", "+\t\t\t\tif(data.grabExcessHorizontalSpace) {", "-\t\t\t\tif (data.grabExcessVerticalSpace) {", "+\t\t\t\tif(data.grabExcessVerticalSpace) {", "-\t\t\t\tif (code.substring (code.length () - 33).equals (\"GridData data = new GridData ();\\n\")) {", "-\t\t\t\t\tcode.delete (code.length () - 33, code.length ());", "+\t\t\t\tif(code.substring(code.length() - 33).equals(\"GridData data = new GridData ();\\n\")) {", "+\t\t\t\t\tcode.delete(code.length() - 33, code.length());", "-\t\t\t\t} else if (code.substring (code.length () - 24).equals (\"data = new GridData ();\\n\")) { ", "-\t\t\t\t\tcode.delete (code.length () - 24, code.length ());", "-\t\t\t\t} else {\t", "-\t\t\t\t\tcode.append (\"\\t\\t\" + names [i] + \".setLayoutData (data);\\n\");", "+\t\t\t\t} else if(code.substring(code.length () - 24).equals(\"data = new GridData ();\\n\")) { ", "+\t\t\t\t\tcode.delete(code.length() - 24, code.length());", "+\t\t\t\t} else{\t", "+\t\t\t\t\tcode.append(\"\\t\\t\" + names[i] + \".setLayoutData (data);\\n\");"]}], "num": 35614}