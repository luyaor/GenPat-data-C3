{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0c9f8ca868acfd840f939ffd80ec0366", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "930a532394a44a0bfb30c52d42fed5da", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet296.java", "commitBeforeChange": "e60a3ad64bf035f641febfe15e4f9e47e3913f05", "commitAfterChange": "f18e9dda2b54542a6afc8eb341f631aa41a0ddf7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public static void main (String[] args)", "signatureAfterChange": " \t public static void main (String[] args)", "diff": ["+\t/*", "+\t * The following listener ensures that a newly-selected item", "+\t * in the Tree is always visible.", "+\t */", "+\ttree.addSelectionListener(new SelectionAdapter() {", "+\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\tTreeItem [] selectedItems = tree.getSelection();", "+\t\t\tif (selectedItems.length > 0) {", "+\t\t\t\tRectangle itemRect = selectedItems[0].getBounds();", "+\t\t\t\tRectangle area = sc.getClientArea();", "+\t\t\t\tPoint origin = sc.getOrigin();", "+\t\t\t\tif (itemRect.x < origin.x || itemRect.y < origin.y", "+\t\t\t\t\t\t|| itemRect.x + itemRect.width > origin.x + area.width", "+\t\t\t\t\t\t|| itemRect.y + itemRect.height > origin.y + area.height) {", "+\t\t\t\t\tsc.setOrigin(itemRect.x, itemRect.y);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bef7b52b763ab05fb49ddee0fa55053", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "e4ad7e21a6b9788859afef45f49fa13b6c86d5da", "commitAfterChange": "02d704e494a4190d9a1af8b5f6b3e585eced526c", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": " void showList ()", "signatureAfterChange": " void showList (Rectangle rect, int alignment)", "diff": ["-void showList () {", "+void showList (Rectangle rect, int alignment) {", "-\t\t", "+\tRectangle clientArea = getClientArea();", "-\tPoint p = getDisplay().map(this, null, chevronRect.x, chevronRect.y);", "-\tint x = p.x+chevronRect.width - size.x;", "-\tint y = p.y + chevronRect.height;", "-\tif (y + size.y > displayRect.y + displayRect.height) y = p.y - size.y;", "+\tPoint p1 = getDisplay().map(this, null, clientArea.x, clientArea.y);", "+\tPoint p2 = getDisplay().map(this, null, rect.x, rect.y);", "+\tint x = 0, y = 0;", "+\t//x = p.x+rect.width - size.x;", "+\tif (alignment == SWT.RIGHT) {", "+\t\tx = p2.x;", "+\t} else { // Left", "+\t\tx = p2.x + rect.width - size.x;", "+\t}", "+\tif (x < displayRect.x) x = displayRect.x;", "+\tif (x + size.x > displayRect.x + displayRect.width) x = displayRect.x + displayRect.width - size.x;", "+\tif (onBottom) {", "+\t\ty = p1.y + clientArea.height - size.y;", "+\t\tif (y < displayRect.y) y = p2.y + rect.height;", "+\t} else {", "+\t\ty = p1.y;", "+\t\tif (y + size.y > displayRect.y + displayRect.height) y = p2.y - size.y;", "+\t}"]}], "num": 8129}