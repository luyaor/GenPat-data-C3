{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "48987385e294ddd68854d422ca6e2cb0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b70a6c950a393409fd1d2ac1b44389fa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "00ed21c8f8c77f61853a45cda676574d76d69e41", "commitAfterChange": "8e00f3751d53017bb47fe8df7b2fb0596267f9cb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 11, "signatureBeforeChange": " public TransferData[] getAvailableTypes(int clipboards)", "signatureAfterChange": " public TransferData[] getAvailableTypes(int clipboards)", "diff": ["+ */", "+public TransferData[] getAvailableTypes(int clipboards) {", "+\tcheckWidget();", "+\tint xDisplay = OS.XtDisplay (shellHandle);", "+\tif (xDisplay == 0) return null;", "+\tint[] types = null;", "+\tif ((clipboards & DND.CLIPBOARD) != 0) {", "+\t\ttypes = getAvailableTypes(xDisplay, clipboardAtom);", "+\t}", "+\tif ((clipboards & DND.SELECTION_CLIPBOARD) != 0) {", "+\t\tint[] primaryTypes = getAvailableTypes(xDisplay, primaryAtom);", "+\t\tif (types == null) {", "+\t\t\ttypes = primaryTypes;", "+\t\t} else {", "+\t\t\tint[] newTypes = new int[types.length + primaryTypes.length];", "+\t\t\tSystem.arraycopy(types, 0, newTypes, 0, types.length);", "+\t\t\tSystem.arraycopy(primaryTypes, 0, newTypes, types.length, primaryTypes.length);", "+\t\t\ttypes = newTypes;", "+\t\t}", "+\t}", "+\tif (types == null) return new TransferData[0];", "+\tTransferData[] result = new TransferData[types.length];", "+\tfor (int i = 0; i < types.length; i++) {", "+\t\tresult[i] = new TransferData();", "+\t\tresult[i].type = types[i];", "+\t}", "+\treturn result;", "+}", "- */", "-public TransferData[] getAvailableTypes(int clipboards) {", "-\tcheckWidget();", "-\tif ((clipboards & DND.CLIPBOARD) == 0) return new TransferData[0];", "-\tint xDisplay = OS.XtDisplay(shellHandle);", "-\tif (xDisplay == 0) return new TransferData[0];", "-\tbyte[][] types = _getAvailableTypes();", "-\tTransferData[] result = new TransferData[types.length];", "-\tfor (int i = 0; i < types.length; i++) {", "-\t\tint atom = OS.XmInternAtom(xDisplay, types[i], true);", "-\t\tresult[i] = new TransferData();", "-\t\tresult[i].type = atom;", "-\t}", "-\treturn result;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b71c5843e7092273a02d509113a4e789", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "00ed21c8f8c77f61853a45cda676574d76d69e41", "commitAfterChange": "8e00f3751d53017bb47fe8df7b2fb0596267f9cb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": " public String[] getAvailableTypeNames()", "signatureAfterChange": " public String[] getAvailableTypeNames()", "diff": ["+ */", "+public String[] getAvailableTypeNames() {", "+\tcheckWidget();", "+\tint xDisplay = OS.XtDisplay (shellHandle);", "+\tif (xDisplay == 0) return new String[0];", "+\tint[] types = getAvailableTypes(xDisplay, clipboardAtom);", "+\tint[] primaryTypes = getAvailableTypes(xDisplay, primaryAtom);", "+\tString[] names = new String[types.length + primaryTypes.length];", "+\tint index = 0;", "+\tfor (int i = 0; i < types.length; i++) {", "+\t\tint ptr = OS.XmGetAtomName(xDisplay, types[i]);", "+\t\tint length = OS.strlen(ptr);", "+\t\tbyte[] nameBuf = new byte[length];", "+\t\tOS.memmove(nameBuf, ptr, length);", "+\t\tOS.XtFree(ptr);", "+\t\t/* Use the character encoding for the default locale */", "+\t\tString name = new String(Converter.mbcsToWcs(null, nameBuf));", "+\t\tnames[index++] = \"CLIPBOARD \"+name;", "+\t}", "+\tfor (int i = 0; i < primaryTypes.length; i++) {", "+\t\tint ptr = OS.XmGetAtomName(xDisplay, primaryTypes[i]);", "+\t\tint length = OS.strlen(ptr);", "+\t\tbyte[] nameBuf = new byte[length];", "+\t\tOS.memmove(nameBuf, ptr, length);", "+\t\tOS.XtFree(ptr);", "+\t\t/* Use the character encoding for the default locale */", "+\t\tString name = new String(Converter.mbcsToWcs(null, nameBuf));", "+\t\tnames[index++] = \"PRIMARY \"+name;", "+\t}", "+\treturn names;", "+}", "- */", "-public String[] getAvailableTypeNames() {", "-\tcheckWidget();", "-\tbyte[][] types = _getAvailableTypes();", "-\tString[] names = new String[types.length];", "-\tfor (int i = 0; i < names.length; i++) {", "-\t\t/* Use the character encoding for the default locale */", "-\t\tnames[i] = new String(Converter.mbcsToWcs(null, types[i]));", "-\t}", "-\treturn names;", "-}"]}], "num": 4696}