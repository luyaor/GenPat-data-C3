{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "251e4a4c4780744981cca42133afbc92", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "755680fedd40009e4ca4240b0be71ca3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "1f3302e72f7f6c10f0a01518cfff58f90ce78f5c", "commitAfterChange": "581ec33d70d5ed2c93e8eb3c8f75ca3e522ecaca", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " void paint (GC gc, TableColumn column, boolean paintCellContent)", "signatureAfterChange": " void paint (GC gc, TableColumn column, boolean paintCellContent)", "diff": ["+\tif (parent.linesVisible) {", "+\t\tcellBounds.y++;", "+\t\tcellBounds.height--;", "+\t}", "-\tgc.setClipping (x, cellBounds.y, cellRightX - x, cellBounds.height);", "+\tgc.setClipping (x, cellBounds.y, clientArea.width - x, cellBounds.height);", "-\tint padding = parent.getCellPadding ();", "-\t/* draw the background color if this item has a custom color set */", "+\t/* draw the background color of this cell */", "-\tif (!background.equals (parent.getBackground ())) {", "-\t\tColor oldBackground = gc.getBackground ();", "-\t\tgc.setBackground (background);", "-\t\tTableColumn[] orderedColumns = parent.orderedColumns;", "-\t\tif (columnIndex == 0 && (column == null || column.getOrderIndex () == 0)) {", "-\t\t\tRectangle focusBounds = getFocusBounds ();", "-\t\t\tint fillWidth = 0;", "-\t\t\tif (column == null) {", "-\t\t\t\tfillWidth = focusBounds.width;", "-\t\t\t} else {", "-\t\t\t\tfillWidth = column.width - focusBounds.x;", "-\t\t\t\tif (parent.linesVisible) fillWidth--;", "-\t\t\t}", "-\t\t\tgc.fillRectangle (focusBounds.x, focusBounds.y, fillWidth, focusBounds.height);", "-\t\t} else {", "-\t\t\tint fillWidth = cellBounds.width;", "-\t\t\tif (parent.linesVisible) fillWidth--;", "-\t\t\tgc.fillRectangle (cellBounds.x, cellBounds.y + 1, fillWidth, cellBounds.height - 1);", "+\tColor oldBackground = gc.getBackground ();", "+\tTableColumn[] orderedColumns = parent.orderedColumns;", "+\tif (columnIndex == 0 && (column == null || column.getOrderIndex () == 0)) {", "+\t\tRectangle focusBounds = getFocusBounds ();\t\t", "+\t\tgc.setBackground (parent.getBackground ());", "+\t\tif (focusBounds.x > 0) {", "+\t\t\t/* fill space to left of selection rect */", "+\t\t\tgc.fillRectangle (0, y, focusBounds.x, itemHeight);", "-\t\tgc.setBackground (oldBackground);", "+\t\tif (column == null) {", "+\t\t\t/* fill space to right of selection rect */", "+\t\t\tint rightX = focusBounds.x + focusBounds.width;", "+\t\t\tint width = clientArea.width - rightX;", "+\t\t\tif (width > 0) {", "+\t\t\t\tgc.fillRectangle (rightX, y, width, itemHeight);", "+\t\t\t}", "+\t\t}", "+\t\t", "+\t\tint fillWidth = 0;", "+\t\tif (column == null) {", "+\t\t\tfillWidth = focusBounds.width;", "+\t\t} else {", "+\t\t\tfillWidth = column.width - focusBounds.x;", "+\t\t\tif (parent.linesVisible) fillWidth--;", "+\t\t}", "+\t\tgc.setBackground (background);", "+\t\tgc.fillRectangle (focusBounds.x, focusBounds.y, fillWidth, focusBounds.height);", "+\t} else {", "+\t\tint fillWidth = cellBounds.width;", "+\t\tif (parent.linesVisible) fillWidth--;", "+\t\tgc.setBackground (background);", "+\t\tgc.fillRectangle (cellBounds.x, cellBounds.y, fillWidth, cellBounds.height);", "+\tgc.setBackground (oldBackground);", "-\t\t\tColor oldBackground = gc.getBackground ();", "+\t\t\toldBackground = gc.getBackground ();", "-\t\t\t\t\tgc.fillRectangle (startX, y + 2, fillWidth, itemHeight - 3);", "+\t\t\t\t\tgc.fillRectangle (", "+\t\t\t\t\t\tcolumn.getX (),", "+\t\t\t\t\t\tcellBounds.y + 1,", "+\t\t\t\t\t\tfillWidth,", "+\t\t\t\t\t\tcellBounds.height - 2);", "+\tint padding = parent.getCellPadding ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c866a5770e9151b95cbb60a18757eb73", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "1f3302e72f7f6c10f0a01518cfff58f90ce78f5c", "commitAfterChange": "581ec33d70d5ed2c93e8eb3c8f75ca3e522ecaca", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " void paint (GC gc, TreeColumn column, boolean paintCellContent)", "signatureAfterChange": " void paint (GC gc, TreeColumn column, boolean paintCellContent)", "diff": ["+\tif (parent.linesVisible) {", "+\t\tcellBounds.y++;", "+\t\tcellBounds.height--;", "+\t}", "-\tgc.setClipping (x, cellBounds.y, cellRightX - x, cellBounds.height);", "+\tgc.setClipping (x, cellBounds.y, clientArea.width - x, cellBounds.height);", "-\tint padding = parent.getCellPadding ();", "-\t/* draw the background color if this item has a custom color set */", "+\t/* draw the background color of this cell */", "-\tif (!background.equals (parent.getBackground ())) {", "-\t\tColor oldBackground = gc.getBackground ();", "-\t\tgc.setBackground (background);", "-\t\tif (columnIndex == 0) {", "-\t\t\tRectangle focusBounds = getFocusBounds ();", "-\t\t\tint fillWidth = 0;", "-\t\t\tif (column == null) {", "-\t\t\t\tfillWidth = focusBounds.width;", "-\t\t\t} else {", "-\t\t\t\tfillWidth = column.width - focusBounds.x;", "-\t\t\t\tif (parent.linesVisible) fillWidth--;", "-\t\t\t}", "-\t\t\tgc.fillRectangle (focusBounds.x, focusBounds.y, fillWidth, focusBounds.height);", "-\t\t} else {", "-\t\t\tint fillWidth = cellBounds.width;", "-\t\t\tif (parent.linesVisible) fillWidth--;", "-\t\t\tgc.fillRectangle (cellBounds.x, cellBounds.y + 1, fillWidth, cellBounds.height - 1);", "+\tColor oldBackground = gc.getBackground ();", "+\tif (columnIndex == 0) {", "+\t\tRectangle focusBounds = getFocusBounds ();", "+\t\tgc.setBackground (parent.getBackground ());", "+\t\tif (focusBounds.x > 0) {", "+\t\t\t/* fill space to left of selection rect */", "+\t\t\tgc.fillRectangle (0, y, focusBounds.x, itemHeight);", "-\t\tgc.setBackground (oldBackground);", "+\t\tif (column == null) {", "+\t\t\t/* fill space to right of selection rect */", "+\t\t\tint rightX = focusBounds.x + focusBounds.width;", "+\t\t\tint width = clientArea.width - rightX;", "+\t\t\tif (width > 0) {", "+\t\t\t\tgc.fillRectangle (rightX, y, width, itemHeight);", "+\t\t\t}", "+\t\t}", "+\t\tint fillWidth = 0;", "+\t\tif (column == null) {", "+\t\t\tfillWidth = focusBounds.width;", "+\t\t} else {", "+\t\t\tfillWidth = column.width - focusBounds.x;", "+\t\t\tif (parent.linesVisible) fillWidth--;", "+\t\t}", "+\t\tgc.setBackground (background);", "+\t\tgc.fillRectangle (focusBounds.x, cellBounds.y, fillWidth, cellBounds.height);", "+\t} else {", "+\t\tint fillWidth = cellBounds.width;", "+\t\tif (parent.linesVisible) fillWidth--;", "+\t\tgc.setBackground (background);", "+\t\tgc.fillRectangle (cellBounds.x, cellBounds.y, fillWidth, cellBounds.height);", "+\tgc.setBackground (oldBackground);", "-\t\tColor oldBackground = gc.getBackground ();", "+\t\toldBackground = gc.getBackground ();", "-\t\t\t\tgc.fillRectangle (column.getX (), y + 2, fillWidth, itemHeight - 3);", "+\t\t\t\tgc.fillRectangle (", "+\t\t\t\t\tcolumn.getX (),", "+\t\t\t\t\tcellBounds.y + 1,", "+\t\t\t\t\tfillWidth,", "+\t\t\t\t\tcellBounds.height - 2);", "+\tint padding = parent.getCellPadding ();"]}], "num": 1012}