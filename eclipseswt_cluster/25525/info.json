{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d0b1de0614a694ef39203975a6b5da7a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cff3200eb1d46ffca341d3403f368c80", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void drawArc(int x, int y, int width, int height, int startAngle, int arcAngle)", "signatureAfterChange": " public void drawArc(int x, int y, int width, int height, int startAngle, int arcAngle)", "diff": ["-\tcheckGC(DRAW);", "-\thandle.saveGraphicsState();", "-\tNSAffineTransform transform = NSAffineTransform.transform();", "-\tfloat /*double*/ xOffset = data.drawXOffset, yOffset = data.drawYOffset;", "-\ttransform.translateXBy(x + xOffset + width / 2f, y + yOffset + height / 2f);", "-\ttransform.scaleXBy(width / 2f, height / 2f);", "-\tNSBezierPath path = data.path;", "-\tNSPoint center = new NSPoint();", "-\tfloat sAngle = -startAngle;", "-\tfloat eAngle = -(startAngle + arcAngle);", "-\tpath.appendBezierPathWithArcWithCenter(center, 1, sAngle,  eAngle, arcAngle>0);", "-\tpath.transformUsingAffineTransform(transform);", "-\tpath.stroke();", "-\tpath.removeAllPoints();", "-\thandle.restoreGraphicsState();", "-\tuncheckGC();", "+\tNSAutoreleasePool pool = checkGC(DRAW);", "+\ttry {", "+\t\thandle.saveGraphicsState();", "+\t\tNSAffineTransform transform = NSAffineTransform.transform();", "+\t\tfloat /*double*/ xOffset = data.drawXOffset, yOffset = data.drawYOffset;", "+\t\ttransform.translateXBy(x + xOffset + width / 2f, y + yOffset + height / 2f);", "+\t\ttransform.scaleXBy(width / 2f, height / 2f);", "+\t\tNSBezierPath path = data.path;", "+\t\tNSPoint center = new NSPoint();", "+\t\tfloat sAngle = -startAngle;", "+\t\tfloat eAngle = -(startAngle + arcAngle);", "+\t\tpath.appendBezierPathWithArcWithCenter(center, 1, sAngle,  eAngle, arcAngle>0);", "+\t\tpath.transformUsingAffineTransform(transform);", "+\t\tpath.stroke();", "+\t\tpath.removeAllPoints();", "+\t\thandle.restoreGraphicsState();", "+\t} finally {", "+\t\tuncheckGC(pool);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5afe7f38d71a8a27b0a112ddff700d0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Path.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void addArc(float x, float y, float width, float height, float startAngle, float arcAngle)", "signatureAfterChange": " public void addArc(float x, float y, float width, float height, float startAngle, float arcAngle)", "diff": ["-\tNSAffineTransform transform = NSAffineTransform.transform();", "-\ttransform.translateXBy(x + width / 2f, y + height / 2f);", "-\ttransform.scaleXBy(width / 2f, height / 2f);", "-\tNSBezierPath path = NSBezierPath.bezierPath();", "-\tNSPoint center = new NSPoint();", "-\tfloat sAngle = -startAngle;", "-\tfloat eAngle = -(startAngle + arcAngle);", "-\tpath.appendBezierPathWithArcWithCenter(center, 1, sAngle,  eAngle, arcAngle>0);", "-\tpath.transformUsingAffineTransform(transform);", "-\thandle.appendBezierPath(path);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tNSAffineTransform transform = NSAffineTransform.transform();", "+\t\ttransform.translateXBy(x + width / 2f, y + height / 2f);", "+\t\ttransform.scaleXBy(width / 2f, height / 2f);", "+\t\tNSBezierPath path = NSBezierPath.bezierPath();", "+\t\tNSPoint center = new NSPoint();", "+\t\tfloat sAngle = -startAngle;", "+\t\tfloat eAngle = -(startAngle + arcAngle);", "+\t\tpath.appendBezierPathWithArcWithCenter(center, 1, sAngle,  eAngle, arcAngle>0);", "+\t\tpath.transformUsingAffineTransform(transform);", "+\t\thandle.appendBezierPath(path);", "+\t} finally { ", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39c9bde8aab778a4647f1530f5d044a3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 32, "signatureBeforeChange": " public void fillArc(int x, int y, int width, int height, int startAngle, int arcAngle)", "signatureAfterChange": " public void fillArc(int x, int y, int width, int height, int startAngle, int arcAngle)", "diff": ["-\tcheckGC(FILL);", "-\thandle.saveGraphicsState();", "-\tNSAffineTransform transform = NSAffineTransform.transform();", "-\tfloat /*double*/ xOffset = data.drawXOffset, yOffset = data.drawYOffset;", "-\ttransform.translateXBy(x + xOffset + width / 2f, y + yOffset + height / 2f);", "-\ttransform.scaleXBy(width / 2f, height / 2f);", "-\tNSBezierPath path = data.path;", "-\tNSPoint center = new NSPoint();", "-\tpath.moveToPoint(center);", "-\tfloat sAngle = -startAngle;", "-\tfloat eAngle = -(startAngle + arcAngle);", "-\tpath.appendBezierPathWithArcWithCenter(center, 1, sAngle,  eAngle, arcAngle>0);", "-\tpath.closePath();", "-\tpath.transformUsingAffineTransform(transform);", "-\tpath.fill();", "-\tpath.removeAllPoints();", "-\thandle.restoreGraphicsState();", "-\tuncheckGC();", "+\tNSAutoreleasePool pool = checkGC(FILL);", "+\ttry {", "+\t\thandle.saveGraphicsState();", "+\t\tNSAffineTransform transform = NSAffineTransform.transform();", "+\t\tfloat /*double*/ xOffset = data.drawXOffset, yOffset = data.drawYOffset;", "+\t\ttransform.translateXBy(x + xOffset + width / 2f, y + yOffset + height / 2f);", "+\t\ttransform.scaleXBy(width / 2f, height / 2f);", "+\t\tNSBezierPath path = data.path;", "+\t\tNSPoint center = new NSPoint();", "+\t\tpath.moveToPoint(center);", "+\t\tfloat sAngle = -startAngle;", "+\t\tfloat eAngle = -(startAngle + arcAngle);", "+\t\tpath.appendBezierPathWithArcWithCenter(center, 1, sAngle,  eAngle, arcAngle>0);", "+\t\tpath.closePath();", "+\t\tpath.transformUsingAffineTransform(transform);", "+\t\tpath.fill();", "+\t\tpath.removeAllPoints();", "+\t\thandle.restoreGraphicsState();", "+\t} finally {", "+\t\tuncheckGC(pool);", "+\t}"]}], "num": 25525}