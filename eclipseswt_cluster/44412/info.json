{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d94d60d31bac4b50494bf157eceff6b0", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d98974b5c7660454cf55623a7cf96915", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "31ecf4c7627f293bfe8af2461ca0976f71d430cb", "commitAfterChange": "3a837bfd2c5baa36d08031da0ce7ccda5b5dd6ee", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public boolean setText(String html)", "signatureAfterChange": " public boolean setText(String html)", "diff": ["+\t\t/*", "+\t\t* Stopping the loading of a page causes DocumentComplete events from previous", "+\t\t* requests to be received before the DocumentComplete for this page.  In such", "+\t\t* cases we must be sure to not set the html into the browser too soon, since", "+\t\t* doing so could result in its page being cleared out by a subsequent", "+\t\t* DocumentComplete.  The Browser's ReadyState can be used to determine whether", "+\t\t* these extra events will be received or not.", "+\t\t*/", "+\t\trgdispid = auto.getIDsOfNames(new String[] { \"ReadyState\" }); //$NON-NLS-1$", "+\t\tVariant pVarResult = auto.getProperty(rgdispid[0]);", "+\t\tif (pVarResult == null) return false;", "+\t\tdelaySetText = pVarResult.getInt() != READYSTATE_COMPLETE;", "+\t\tpVarResult.dispose();", "-\t/* Note.  Internet Explorer can still fire DocumentComplete events from the previous", "-\t * requests that were stopped.  The DocumentComplete related to the blank page", "-\t * will follow.  The workaround is to verify the DocumentComplete event relates to", "-\t * the blank page.  ", "-\t */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bbb58f17619b67efbd3022e835057c9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "cc78900f837ae57b63ebd7ad5fb7e94c20673c8f", "commitAfterChange": "0658d789bfb0cb2ccab2ad6b8af953cadf626c1e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void create(Composite parent, int style)", "signatureAfterChange": "  public void create(Composite parent, int style)", "diff": ["+\t\t\t\t\t\t\t* With the IBM 64-bit JVM an unexpected document complete event occurs before", "+\t\t\t\t\t\t\t* the native browser's DOM has been built. Filter this premature event based", "+\t\t\t\t\t\t\t* on the browser's ready state.", "+\t\t\t\t\t\t\t*/", "+\t\t\t\t\t\t\tint[] rgdispid = auto.getIDsOfNames(new String[] { \"ReadyState\" }); //$NON-NLS-1$", "+\t\t\t\t\t\t\tVariant pVarResult = auto.getProperty(rgdispid[0]);", "+\t\t\t\t\t\t\tif (pVarResult != null) {", "+\t\t\t\t\t\t\t\tint readyState = pVarResult.getInt();", "+\t\t\t\t\t\t\t\tpVarResult.dispose ();", "+\t\t\t\t\t\t\t\tif (readyState != READYSTATE_COMPLETE) {", "+\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+", "+\t\t\t\t\t\t\t/*"]}], "num": 44412}