{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "04fd36928596ea96ac68bcf8c60a6617", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27856b1d16ce360587b1724420eb1e02", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Caret.java", "commitBeforeChange": "ee35d27d8f4e73e2435cc1829ff0629ac5f7f27d", "commitAfterChange": "bfcd4ac053f4f3d49b0df64a71b09d81feee02a5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  boolean drawCaret ()", "signatureAfterChange": "  boolean drawCaret ()", "diff": ["-\tint /*long*/ gc = OS.gdk_gc_new (window);", "-\tGdkColor color = new GdkColor ();", "-\tcolor.red = (short) 0xffff;", "-\tcolor.green = (short) 0xffff;", "-\tcolor.blue = (short) 0xffff;", "-\tint /*long*/ colormap = OS.gdk_colormap_get_system ();", "-\tOS.gdk_colormap_alloc_color (colormap, color, true, true);", "-\tOS.gdk_gc_set_foreground (gc, color);", "-\tOS.gdk_gc_set_function (gc, OS.GDK_XOR);", "-\tif (image != null && !image.isDisposed() && image.mask == 0) {", "-\t\tint[] width = new int[1]; int[] height = new int[1];", "-\t \tOS.gdk_drawable_get_size(image.pixmap, width, height);", "-\t \tint nX = x;", "-\t\tif ((parent.style & SWT.MIRRORED) != 0) nX = parent.getClientWidth () - width[0] - nX;", "-\t \tOS.gdk_draw_drawable(window, gc, image.pixmap, 0, 0, nX, y, width[0], height[0]);", "+\tif (OS.USE_CAIRO) {", "+\t\tint /*long*/ cairo = OS.gdk_cairo_create(window);", "+\t\tif (cairo == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\tCairo.cairo_set_source_rgb(cairo, 1, 1, 1);", "+\t\tCairo.cairo_set_operator(cairo, Cairo.CAIRO_OPERATOR_DIFFERENCE);", "+\t\tif (image != null && !image.isDisposed() && image.mask == 0) {", "+\t\t\tint /*long*/ surface = Cairo.cairo_get_target(cairo);", "+\t\t\tint nWidth = 0;", "+\t\t\tswitch (Cairo.cairo_surface_get_type(surface)) {", "+\t\t\t\tcase Cairo.CAIRO_SURFACE_TYPE_IMAGE:", "+\t\t\t\t\tnWidth = Cairo.cairo_image_surface_get_width(surface);", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Cairo.CAIRO_SURFACE_TYPE_XLIB: ", "+\t\t\t\t\tnWidth = Cairo.cairo_xlib_surface_get_width(surface);", "+\t\t\t\t\tbreak;", "+\t\t\t}", "+\t\t\tint nX = x;", "+\t\t\tif ((parent.style & SWT.MIRRORED) != 0) nX = parent.getClientWidth () - nWidth - nX;", "+\t\t\tCairo.cairo_translate(cairo, nX, y); ", "+\t\t\tCairo.cairo_set_source_surface(cairo, image.surface, 0, 0);", "+\t\t\tCairo.cairo_paint(cairo);", "+\t\t} else {", "+\t\t\tint nWidth = width, nHeight = height;", "+\t\t\tif (nWidth <= 0) nWidth = DEFAULT_WIDTH;", "+\t\t\tint nX = x;", "+\t\t\tif ((parent.style & SWT.MIRRORED) != 0) nX = parent.getClientWidth () - nWidth - nX;", "+\t\t\tCairo.cairo_rectangle(cairo, nX, y, nWidth, nHeight);", "+\t\t}", "+\t\tCairo.cairo_fill(cairo);", "+\t\tCairo.cairo_destroy(cairo);", "-\t\tint nWidth = width, nHeight = height;", "-\t\tif (nWidth <= 0) nWidth = DEFAULT_WIDTH;", "-\t\tint nX = x;", "-\t\tif ((parent.style & SWT.MIRRORED) != 0) nX = parent.getClientWidth () - nWidth - nX;", "-\t\tOS.gdk_draw_rectangle (window, gc, 1, nX, y, nWidth, nHeight);", "+\t\tint /*long*/ gc = OS.gdk_gc_new (window);", "+\t\tGdkColor color = new GdkColor ();", "+\t\tcolor.red = (short) 0xffff;", "+\t\tcolor.green = (short) 0xffff;", "+\t\tcolor.blue = (short) 0xffff;", "+\t\tint /*long*/ colormap = OS.gdk_colormap_get_system ();", "+\t\tOS.gdk_colormap_alloc_color (colormap, color, true, true);", "+\t\tOS.gdk_gc_set_foreground (gc, color);", "+\t\tOS.gdk_gc_set_function (gc, OS.GDK_XOR);", "+\t\tif (image != null && !image.isDisposed() && image.mask == 0) {", "+\t\t\tint[] width = new int[1]; int[] height = new int[1];", "+\t\t\tOS.gdk_drawable_get_size(image.pixmap, width, height);", "+\t\t\tint nX = x;", "+\t\t\tif ((parent.style & SWT.MIRRORED) != 0) nX = parent.getClientWidth () - width[0] - nX;", "+\t\t\tOS.gdk_draw_drawable(window, gc, image.pixmap, 0, 0, nX, y, width[0], height[0]);", "+\t\t} else {", "+\t\t\tint nWidth = width, nHeight = height;", "+\t\t\tif (nWidth <= 0) nWidth = DEFAULT_WIDTH;", "+\t\t\tint nX = x;", "+\t\t\tif ((parent.style & SWT.MIRRORED) != 0) nX = parent.getClientWidth () - nWidth - nX;", "+\t\t\tOS.gdk_draw_rectangle (window, gc, 1, nX, y, nWidth, nHeight);", "+\t\t}", "+\t\tOS.g_object_unref (gc);", "+\t\tOS.gdk_colormap_free_colors (colormap, color, 1);", "-\tOS.g_object_unref (gc);", "-\tOS.gdk_colormap_free_colors (colormap, color, 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a73e2e8caaded9f03346284bd4ff2fe6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Caret.java", "commitBeforeChange": "81769f86af686a9108c70f5eccca90f204a41cef", "commitAfterChange": "2409e4895346facaeea6eeef6414188a3d1e2f65", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  boolean drawCaret ()", "signatureAfterChange": "  boolean drawCaret ()", "diff": ["-\t} else {", "-\t\tint /*long*/ gc = OS.gdk_gc_new (window);", "-\t\tGdkColor color = new GdkColor ();", "-\t\tcolor.red = (short) 0xffff;", "-\t\tcolor.green = (short) 0xffff;", "-\t\tcolor.blue = (short) 0xffff;", "-\t\tint /*long*/ colormap = OS.gdk_colormap_get_system ();", "-\t\tOS.gdk_colormap_alloc_color (colormap, color, true, true);", "-\t\tOS.gdk_gc_set_foreground (gc, color);", "-\t\tOS.gdk_gc_set_function (gc, OS.GDK_XOR);", "-\t\tif (image != null && !image.isDisposed() && image.mask == 0) {", "-\t\t\tint[] width = new int[1]; int[] height = new int[1];", "-\t\t\tOS.gdk_drawable_get_size(image.pixmap, width, height);", "-\t\t\tint nX = x;", "-\t\t\tif ((parent.style & SWT.MIRRORED) != 0) nX = parent.getClientWidth () - width[0] - nX;", "-\t\t\tOS.gdk_draw_drawable(window, gc, image.pixmap, 0, 0, nX, y, width[0], height[0]);", "-\t\t} else {", "-\t\t\tint nWidth = width, nHeight = height;", "-\t\t\tif (nWidth <= 0) nWidth = DEFAULT_WIDTH;", "-\t\t\tint nX = x;", "-\t\t\tif ((parent.style & SWT.MIRRORED) != 0) nX = parent.getClientWidth () - nWidth - nX;", "-\t\t\tOS.gdk_draw_rectangle (window, gc, 1, nX, y, nWidth, nHeight);", "-\t\t}", "-\t\tOS.g_object_unref (gc);", "-\t\tOS.gdk_colormap_free_colors (colormap, color, 1);", "+\t\treturn true;", "+\tint /*long*/ gc = OS.gdk_gc_new (window);", "+\tGdkColor color = new GdkColor ();", "+\tcolor.red = (short) 0xffff;", "+\tcolor.green = (short) 0xffff;", "+\tcolor.blue = (short) 0xffff;", "+\tint /*long*/ colormap = OS.gdk_colormap_get_system ();", "+\tOS.gdk_colormap_alloc_color (colormap, color, true, true);", "+\tOS.gdk_gc_set_foreground (gc, color);", "+\tOS.gdk_gc_set_function (gc, OS.GDK_XOR);", "+\tif (image != null && !image.isDisposed() && image.mask == 0) {", "+\t\tint[] width = new int[1]; int[] height = new int[1];", "+\t \tOS.gdk_drawable_get_size(image.pixmap, width, height);", "+\t \tint nX = x;", "+\t\tif ((parent.style & SWT.MIRRORED) != 0) nX = parent.getClientWidth () - width[0] - nX;", "+\t \tOS.gdk_draw_drawable(window, gc, image.pixmap, 0, 0, nX, y, width[0], height[0]);", "+\t} else {", "+\t\tint nWidth = width, nHeight = height;", "+\t\tif (nWidth <= 0) nWidth = DEFAULT_WIDTH;", "+\t\tint nX = x;", "+\t\tif ((parent.style & SWT.MIRRORED) != 0) nX = parent.getClientWidth () - nWidth - nX;", "+\t\tOS.gdk_draw_rectangle (window, gc, 1, nX, y, nWidth, nHeight);", "+\t}", "+\tOS.g_object_unref (gc);", "+\tOS.gdk_colormap_free_colors (colormap, color, 1);"]}], "num": 33482}