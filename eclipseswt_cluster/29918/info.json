{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0c5cd0b6344627bef77ea1cee83db106", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5dfc8b6c8393a812054873f0c4c53be", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "c56e9ac7b86cc3847283a3523f5a7d23cfe70b9d", "commitAfterChange": "cb8608474cdff09f829b2949b3e04358cf3efe38", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void pack ()", "signatureAfterChange": " public void pack ()", "diff": ["-\tparent.ignoreResize = true;", "-\tparent.unsubclass ();", "-\tif ((parent.style & SWT.VIRTUAL) != 0) {", "+\tboolean oldIgnoreRezize = parent.ignoreResize;", "+\tparent.ignoreResize = true;", "+\tOS.SendMessage (hwnd, OS.LVM_SETCOLUMNWIDTH, index, OS.LVSCW_AUTOSIZE);", "+\tint columnWidth = OS.SendMessage (hwnd, OS.LVM_GETCOLUMNWIDTH, index, 0);", "+\t/*", "+\t* Bug in Windows.  When LVM_SETCOLUMNWIDTH is used with LVSCW_AUTOSIZE", "+\t* where each item has I_IMAGECALLBACK but there are no images in the", "+\t* table, the size computed by LVM_SETCOLUMNWIDTH is too small for the", "+\t* first column, causing long items to be clipped with '...'.  The fix", "+\t* is to increase the value by a small amount. ", "+\t*/", "+\tif (index == 0 && parent.imageList == null) columnWidth += 2;", "+\tif (headerWidth > columnWidth) {", "-\t\t\t* insert and remove a temporary last column for the duration", "-\t\t\t* of LVM_SETCOLUMNWIDTH.", "+\t\t\t* resize the table to be small, set the column width and then", "+\t\t\t* restor the table to its original size.", "+\t\t\tRECT rect = null;", "-\t\t\t\tLVCOLUMN lvColumn = new LVCOLUMN ();", "-\t\t\t\tlvColumn.mask = OS.LVCF_WIDTH;", "-\t\t\t\tOS.SendMessage (hwnd, OS.LVM_INSERTCOLUMN, index + 1, lvColumn);", "+\t\t\t\trect = new RECT ();", "+\t\t\t\tOS.GetWindowRect (hwnd, rect);", "+\t\t\t\tOS.UpdateWindow (hwnd);", "+\t\t\t\tint flags = OS.SWP_NOACTIVATE | OS.SWP_NOMOVE | OS.SWP_NOREDRAW | OS.SWP_NOZORDER;", "+\t\t\t\tSetWindowPos (hwnd, 0, 0, 0, 0, rect.bottom - rect.top, flags);", "-\t\t\t\tOS.SendMessage (hwnd, OS.LVM_DELETECOLUMN, index + 1, 0);", "+\t\t\t\tint flags = OS.SWP_NOACTIVATE | OS.SWP_NOMOVE | OS.SWP_NOZORDER;", "+\t\t\t\tSetWindowPos (hwnd, 0, 0, 0, rect.right - rect.left, rect.bottom - rect.top, flags);", "-\t\t}\t\t", "+\t\t}", "-\t\tOS.SendMessage (hwnd, OS.LVM_SETCOLUMNWIDTH, index, OS.LVSCW_AUTOSIZE);", "-\t\tint columnWidth = OS.SendMessage (hwnd, OS.LVM_GETCOLUMNWIDTH, index, 0);", "-\t\t/*", "-\t\t* Bug in Windows.  When LVM_SETCOLUMNWIDTH is used with LVSCW_AUTOSIZE", "-\t\t* where each item has I_IMAGECALLBACK but there are no images in the", "-\t\t* table, the size computed by LVM_SETCOLUMNWIDTH is to small for the", "-\t\t* first column, causing long items to be clipped with '...'.  The fix", "-\t\t* is to increase the value by a small amount. ", "-\t\t*/", "-\t\tif (index == 0 && parent.imageList == null) columnWidth += 2;", "-\t\tif (headerWidth > columnWidth) {", "-\t\t\tif (image == null) {", "-\t\t\t\t/*", "-\t\t\t\t* Feature in Windows.  When LVSCW_AUTOSIZE_USEHEADER is used", "-\t\t\t\t* with LVM_SETCOLUMNWIDTH to resize the last column, the last", "-\t\t\t\t* column is expanded to fill the client area.  The fix is to", "-\t\t\t\t* insert and remove a temporary last column for the duration", "-\t\t\t\t* of LVM_SETCOLUMNWIDTH.", "-\t\t\t\t*/", "-\t\t\t\tboolean fixWidth = index == parent.getColumnCount () - 1;", "-\t\t\t\tif (fixWidth) {", "-\t\t\t\t\tLVCOLUMN lvColumn = new LVCOLUMN ();", "-\t\t\t\t\tlvColumn.mask = OS.LVCF_WIDTH;", "-\t\t\t\t\tOS.SendMessage (hwnd, OS.LVM_INSERTCOLUMN, index + 1, lvColumn);", "-\t\t\t\t}", "-\t\t\t\tOS.SendMessage (hwnd, OS.LVM_SETCOLUMNWIDTH, index, OS.LVSCW_AUTOSIZE_USEHEADER);", "-\t\t\t\tif (fixWidth) {", "-\t\t\t\t\tOS.SendMessage (hwnd, OS.LVM_DELETECOLUMN, index + 1, 0);", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tOS.SendMessage (hwnd, OS.LVM_SETCOLUMNWIDTH, index, headerWidth);", "-\t\t\t}", "-\t\t} else {", "-\t\t\tif (index == 0) {", "-\t\t\t\tOS.SendMessage (hwnd, OS.LVM_SETCOLUMNWIDTH, index, columnWidth);", "-\t\t\t}", "+\t\tif (index == 0) {", "+\t\t\tOS.SendMessage (hwnd, OS.LVM_SETCOLUMNWIDTH, index, columnWidth);", "-\tparent.subclass ();", "-\tparent.ignoreResize = false;", "+\tparent.ignoreResize = oldIgnoreRezize;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9029733af7453ab0c1f7bfa58ea86fa2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabItem.java", "commitBeforeChange": "1f6933a1b15056c0d45fcdf5019d55449793c82d", "commitAfterChange": "03b27348c501db581e6b7fd3b2d0cc945cd398ee", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " void drawSelected(GC gc )", "signatureAfterChange": " void drawSelected(GC gc )", "diff": ["-\tint rightEdge = Math.min (x+width, parent.getRightItemEdge());", "+\tint deadspace = parent.simple || parent.single ? 0 : parent.curveWidth - parent.curveIndent;", "+\tint rightEdge = Math.min (x + width - deadspace, parent.getRightItemEdge() - deadspace);", "-\t\t\t\tshape[index++] = parent.simple ? rightEdge + right[2*i] : rightEdge - CTabFolder.CURVE_WIDTH/2 - CTabFolder.CURVE_INDENT + right[2*i];", "+\t\t\t\tshape[index++] = parent.simple ? rightEdge + right[2*i] : rightEdge - parent.curveIndent + right[2*i];", "-\t\t\tshape[index++] = parent.simple ? rightEdge : rightEdge + CTabFolder.CURVE_INDENT;", "+\t\t\tshape[index++] = parent.simple ? rightEdge : rightEdge + parent.curveWidth - parent.curveIndent;", "-\t\t\tshape[index++] = parent.simple ? rightEdge : rightEdge + CTabFolder.CURVE_INDENT;", "+\t\t\tshape[index++] = parent.simple ? rightEdge : rightEdge + parent.curveWidth - parent.curveIndent;", "-\t\t\t\tshape[index++] = parent.simple ? rightEdge + right[2*i] : rightEdge - CTabFolder.CURVE_WIDTH/2 - CTabFolder.CURVE_INDENT + right[2*i];", "+\t\t\t\tshape[index++] = parent.simple ? rightEdge + right[2*i] : rightEdge - parent.curveIndent + right[2*i];", "-\t\t\tshape[index++] = parent.simple ? rightEdge : rightEdge + CTabFolder.CURVE_INDENT;", "+\t\t\tshape[index++] = parent.simple ? rightEdge : rightEdge + parent.curveWidth - parent.curveIndent;", "-\t\t\tshape[index++] = parent.simple ? rightEdge : rightEdge + CTabFolder.CURVE_INDENT;", "+\t\t\tshape[index++] = parent.simple ? rightEdge : rightEdge + parent.curveWidth - parent.curveIndent;", "-\t\tif (!parent.simple) maxImageWidth -= CTabFolder.CURVE_INDENT;", "-\tif (!parent.simple) textWidth -= CTabFolder.CURVE_INDENT;", "-\t\tif (parent.isFocusControl()) {", "-\t\t\tDisplay display = getDisplay();", "-\t\t\tgc.setBackground(display.getSystemColor(SWT.COLOR_BLACK));", "-\t\t\tgc.setForeground(display.getSystemColor(SWT.COLOR_WHITE));", "-\t\t\tgc.drawFocus(xDraw-1, textY-1, extent.x+2, extent.y+2);", "-\t\t}", "+//\t\tif (parent.isFocusControl()) {", "+//\t\t\tDisplay display = getDisplay();", "+//\t\t\tgc.setBackground(display.getSystemColor(SWT.COLOR_BLACK));", "+//\t\t\tgc.setForeground(display.getSystemColor(SWT.COLOR_WHITE));", "+//\t\t\tgc.drawFocus(xDraw-1, textY-1, extent.x+2, extent.y+2);", "+//\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1fd8f81fba2552055d56aeb2036fdc5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "c246b71d349f886d26b7816d651043ac9ab7964b", "commitAfterChange": "5d2821d3e4ff1b1b65ade954e90990590a81dd5b", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  int drawItemProc (int browser, int id, int property, int itemState, int theRect, int gdDepth, int colorDevice)", "signatureAfterChange": "  int drawItemProc (int browser, int id, int property, int itemState, int theRect, int gdDepth, int colorDevice)", "diff": ["+\trect.bottom++;", "-\tint [] position = new int [1];", "-\tOS.GetDataBrowserTableViewColumnPosition (handle, property, position);", "-\tif ((style & SWT.CHECK) != 0) --position [0];", "-\tif (columnCount != 0) {", "-\t\tif (selected && ((style & SWT.FULL_SELECTION) != 0 || position [0] == 0)) {", "-\t\t\tgc.setBackground (display.getSystemColor (SWT.COLOR_LIST_SELECTION));", "-\t\t} else {", "-\t\t\tgc.setBackground (item.getBackground (columnIndex));\t\t\t", "-\t\t}", "-\t\tif (position [0] == 0) {", "-\t\t\tgc.fillRectangle (x - 1, y, itemRect.right - x + 2, itemRect.bottom - y);", "-\t\t} else {", "-\t\t\tgc.fillRectangle (itemRect.left, itemRect.top, itemRect.right - itemRect.left, itemRect.bottom - itemRect.top);", "+\tif (selected && (style & SWT.FULL_SELECTION) != 0) {", "+\t\tgc.setBackground (display.getSystemColor (SWT.COLOR_LIST_SELECTION));", "+\t\tint gridWidth = getLinesVisible () ? GRID_WIDTH : 0;", "+\t\tgc.fillRectangle (itemRect.left + gridWidth, itemRect.top, itemRect.right - itemRect.left - gridWidth, itemRect.bottom - itemRect.top + 1);", "+\t} else {", "+\t\tif (background != null || item.background != null || (item.cellBackground != null && item.cellBackground [columnIndex] != null)) {", "+\t\t\tgc.setBackground (item.getBackground (columnIndex));", "+\t\t\tint gridWidth = getLinesVisible () ? GRID_WIDTH : 0;", "+\t\t\tgc.fillRectangle (itemRect.left + gridWidth, itemRect.top, itemRect.right - itemRect.left - gridWidth, itemRect.bottom - itemRect.top + 1);", "+\tint gap = getGap ();", "-\t\titemWidth += this.imageBounds.width + 2;", "+\t\titemWidth += this.imageBounds.width + gap;", "-\t\tx += this.imageBounds.width + 2;", "+\t\tx += this.imageBounds.width + gap;", "-\tif (selected && ((style & SWT.FULL_SELECTION) != 0 || position [0] == 0)) {", "+\tif (selected) {", "-\t\tif (columnCount == 0) {", "+\t\tif (columnIndex == 0 && (style & SWT.FULL_SELECTION) == 0) {", "-\t\t\tgc.fillRectangle (x - 1, y, extent.x + 2, height);", "+\t\t\tgc.fillRectangle (x - 1, y, extent.x + 2, itemRect.bottom - itemRect.top + 1);", "-\t\tif (columnCount == 0) {", "-\t\t\tgc.setBackground (item.getBackground ());", "-\t\t\tgc.fillRectangle (x - 1, y, extent.x + 2, height);", "-\t\t}", "+}"]}], "num": 29918}