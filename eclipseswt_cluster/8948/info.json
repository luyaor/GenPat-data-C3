{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b97d827df9a2ec263cbfa7e3ab0b6651", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c8596b25cdf6a53bc33af47f70e465b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolTip.java", "commitBeforeChange": "8768b4b57ea3e0d4a81ed87d1ceddaec1f0f3d74", "commitAfterChange": "7a336975c60c1d054f5553c0be260449fea9c75a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  void configure ()", "signatureAfterChange": "  void configure ()", "diff": ["-\tlong /*int*/ window = gtk_widget_get_window (handle);", "-\t/*", "-\t As methods required to replicate gdk_window_shape_combine_region ()", "-\t are available starting from GTK+ 3, Cairo implementation that replicates", "-\t gdk_region_polygon () should be also available to GTK+ 3.0 and higher.", "-\t */", "-\t if (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "-\t\t long /*int*/ cairo = OS.gdk_cairo_create(window);", "-\t\t int count = polyline.length / 2;", "-\t\t if (count == 0) return;", "-\t\t Cairo.cairo_move_to(cairo, polyline[0], polyline[1]);", "-\t\t for (int i=1,j=2; i<count; i++,j+=2) {", "-\t\t\t Cairo.cairo_move_to(cairo, polyline[j]+0.5, polyline[j+1]+0.5);", "-\t\t }", "-\t\t Cairo.cairo_close_path(cairo);", "-\t\t Cairo.cairo_set_fill_rule(cairo, Cairo.CAIRO_FILL_RULE_EVEN_ODD);", "-\t\t Cairo.cairo_fill(cairo);", "-\t\t long /*int*/ surface = Cairo.cairo_get_target(cairo);", "-\t\t long /*int*/ region = OS.gdk_cairo_region_create_from_surface(surface);", "-\t\t OS.gtk_widget_shape_combine_region (window, region);", "-\t\t Cairo.cairo_destroy(cairo);", "-\t } else {", "-\t\t long /*int*/ rgn = OS.gdk_region_polygon (polyline, polyline.length / 2, OS.GDK_EVEN_ODD_RULE);", "-\t\t OS.gdk_window_shape_combine_region (window, rgn, 0, 0);", "-\t\t OS.gdk_region_destroy (rgn);", "+\tif (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "+\t\tRegion region = new Region (display);", "+\t\tregion.add(polyline);", "+\t\tOS.gtk_widget_shape_combine_region (handle, region.handle);", "+\t\tregion.dispose ();", "+\t} else {", "+\t\tlong /*int*/ window = gtk_widget_get_window (handle);", "+\t\tlong /*int*/ rgn = OS.gdk_region_polygon (polyline, polyline.length / 2, OS.GDK_EVEN_ODD_RULE);", "+\t\tOS.gdk_window_shape_combine_region (window, rgn, 0, 0);", "+\t\tOS.gdk_region_destroy (rgn);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "903b245112f7ecfa321eb3d20d141f10", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolTip.java", "commitBeforeChange": "df55805e4a74ab0fc8f545a1792d755c95a4e419", "commitAfterChange": "b178ded274cefa13fff8fc6fb8115ee14a844dc8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  void configure ()", "signatureAfterChange": "  void configure ()", "diff": ["-\tlong /*int*/ rgn = OS.gdk_region_polygon (polyline, polyline.length / 2, OS.GDK_EVEN_ODD_RULE);", "-\tOS.gtk_widget_realize (handle);", "-\tlong /*int*/ window = gtk_widget_get_window (handle);", "-\tOS.gdk_window_shape_combine_region (window, rgn, 0, 0);", "-\tOS.gdk_region_destroy (rgn);", "+\tOS.gtk_widget_realize(handle);", "+\tlong /*ing*/ window = gtk_widget_get_window (handle);", "+\t/*", "+\t As methods required to replicate gdk_window_shape_combine_region ()", "+\t are available starting from GTK+ 3, Cairo implementation that replicates", "+\t gdk_region_polygon () should be also available to GTK+ 3.0 and higher.", "+\t */", "+\t if (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "+\t\t long /*ing*/ cairo = OS.gdk_cairo_create(window);", "+\t\t int count = polyline.length / 2;", "+\t\t if (count == 0) return;", "+\t\t Cairo.cairo_move_to(cairo, polyline[0], polyline[1]);", "+\t\t for (int i=1,j=2; i<count; i++,j+=2) {", "+\t\t\t Cairo.cairo_move_to(cairo, polyline[j]+0.5, polyline[j+1]+0.5);", "+\t\t }", "+\t\t Cairo.cairo_close_path(cairo);", "+\t\t Cairo.cairo_set_fill_rule(cairo, Cairo.CAIRO_FILL_RULE_EVEN_ODD);", "+\t\t Cairo.cairo_fill(cairo);", "+\t\t long /*ing*/ surface = Cairo.cairo_get_target(cairo);", "+\t\t long /*int*/ region = OS.gdk_cairo_region_create_from_surface(surface);", "+\t\t OS.gtk_widget_shape_combine_region (window, region);", "+\t\t Cairo.cairo_destroy(cairo);", "+\t } else {", "+\t\t long /*int*/ rgn = OS.gdk_region_polygon (polyline, polyline.length / 2, OS.GDK_EVEN_ODD_RULE);", "+\t\t OS.gdk_window_shape_combine_region (window, rgn, 0, 0);", "+\t\t OS.gdk_region_destroy (rgn);", "+\t }"]}], "num": 8948}