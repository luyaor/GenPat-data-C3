{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "06bbaa5e91d749abe819adc4fd5c2d02", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e48dfff9492f2e9b937fd00ed8d44f69", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "1d3e0443441e0ad28661394515ad8d35a2bcda6f", "commitAfterChange": "075c887253f0cefd890a9a61d9429ad9d6685f5e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  boolean canDragRowsWithIndexes_atPoint(int id, int sel, int arg0, int arg1)", "signatureAfterChange": "  boolean canDragRowsWithIndexes_atPoint(int id, int sel, int arg0, int arg1)", "diff": ["-\treturn (getSelectionCount() > 0 && (state & DRAG_DETECT) != 0 && hooks (SWT.DragDetect));", "+\tNSPoint clickPoint = new NSPoint();", "+\tOS.memmove(clickPoint, arg1, NSPoint.sizeof);", "+\tNSOutlineView tree = (NSOutlineView)view;", "+\t", "+\t// If the current row is not selected and the user is not attempting to modify the selection, select the row first.", "+\tint /*long*/ row = tree.rowAtPoint(clickPoint);", "+\tint /*long*/ modifiers = NSApplication.sharedApplication().currentEvent().modifierFlags();", "+\t", "+\tif (!tree.isRowSelected(row) && (modifiers & (OS.NSCommandKeyMask | OS.NSShiftKeyMask | OS.NSAlternateKeyMask | OS.NSControlKeyMask)) == 0) {", "+\t\tNSIndexSet set = (NSIndexSet)new NSIndexSet().alloc();", "+\t\tset = set.initWithIndex(row);", "+\t\ttree.selectRowIndexes (set, false);", "+\t\tset.release();", "+\t}", "+\t", "+\t// The clicked row must be selected to initiate a drag.", "+\treturn (tree.isRowSelected(row) && (state & DRAG_DETECT) != 0 && hooks (SWT.DragDetect));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "154ae87fdce3fa50ab9e96d5bbfc6cd2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "1d3e0443441e0ad28661394515ad8d35a2bcda6f", "commitAfterChange": "075c887253f0cefd890a9a61d9429ad9d6685f5e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  boolean canDragRowsWithIndexes_atPoint(int id, int sel, int arg0, int arg1)", "signatureAfterChange": "  boolean canDragRowsWithIndexes_atPoint(int id, int sel, int arg0, int arg1)", "diff": ["-\treturn (getSelectionCount() > 0 && (state & DRAG_DETECT) != 0 && hooks (SWT.DragDetect));", "+\tNSPoint clickPoint = new NSPoint();", "+\tOS.memmove(clickPoint, arg1, NSPoint.sizeof);", "+\tNSTableView table = (NSTableView)view;", "+\t", "+\t// If the current row is not selected and the user is not attempting to modify the selection, select the row first.", "+\tint /*long*/ row = table.rowAtPoint(clickPoint);", "+\tint /*long*/ modifiers = NSApplication.sharedApplication().currentEvent().modifierFlags();", "+\t", "+\tif (!table.isRowSelected(row) && (modifiers & (OS.NSCommandKeyMask | OS.NSShiftKeyMask | OS.NSAlternateKeyMask)) == 0) {", "+\t\tNSIndexSet set = (NSIndexSet)new NSIndexSet().alloc();", "+\t\tset = set.initWithIndex(row);", "+\t\ttable.selectRowIndexes (set, false);", "+\t\tset.release();", "+\t}", "+\t", "+\t// The clicked row must be selected to initiate a drag.", "+\treturn (table.isRowSelected(row) && (state & DRAG_DETECT) != 0 && hooks (SWT.DragDetect));"]}], "num": 6599}