{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6ce3e468593d06edc42588f8460f3283", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "593d38d949953da244fddb17e4f7da7d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "98c6f69fa8161c32de538e355728bb324ae2b917", "commitAfterChange": "2e45d5416828f3b0bb52adac29f41e56427dcb88", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " public void internal_dispose_GC (int context, GCData data)", "signatureAfterChange": " public void internal_dispose_GC (int context, GCData data)", "diff": ["-\tif (data != null && data.paintEvent == 0) {", "-\t\tif (data.visibleRgn != 0) {", "-\t\t\tOS.DisposeRgn (data.visibleRgn);", "-\t\t\tdata.visibleRgn = 0;", "+\tif (data != null) {", "+\t\tif (data.paintEvent == 0) {", "+\t\t\tif (data.visibleRgn != 0) {", "+\t\t\t\tOS.DisposeRgn (data.visibleRgn);", "+\t\t\t\tdata.visibleRgn = 0;", "+\t\t\t}", "+\t\t\t", "+\t\t\tint index = 0;", "+\t\t\twhile (index < gcs.length && gcs [index] != data) index++;", "+\t\t\tif (index < gcs.length) {", "+\t\t\t\tgcs [index] = null;", "+\t\t\t\tindex = 0;", "+\t\t\t\twhile (index < gcs.length && gcs [index] == null) index++;", "+\t\t\t\tif (index == gcs.length) gcs = null;", "+\t\t\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e49369e2800ee944f7fdee202c3927cf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "b5bb05ad266e20ce12a3e375629219edda2009e7", "commitAfterChange": "dcd9f7243ae1ad05751547f983b76748a1e6687b", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  void layoutItems ()", "signatureAfterChange": "  void layoutItems ()", "diff": ["-\t*  When the tool bar is vertical, make the width", "-\t*  of each button be the width of the widest.", "+\t*  When the tool bar is vertical, make the width of each button", "+\t*  be the width of the widest button in the tool bar.  Note that", "+\t*  when the tool bar contains a drop down item, it needs to take", "+\t*  into account extra padding.", "-\t\tint padding = OS.SendMessage (handle, OS.TB_GETPADDING, 0, 0);", "-\t\tinfo.cx = (short) ((size & 0xFFFF) + (padding & 0xFFFF) * 2);", "+\t\tinfo.cx = (short) (size & 0xFFFF);", "+\t\tint index = 0;", "+\t\twhile (index < items.length) {", "+\t\t\tToolItem item = items [index];", "+\t\t\tif (item != null && (item.style & SWT.DROP_DOWN) != 0) break;", "+\t\t\tindex++;", "+\t\t}", "+\t\tif (index < items.length) {", "+\t\t\tint padding = OS.SendMessage (handle, OS.TB_GETPADDING, 0, 0);", "+\t\t\tinfo.cx += (padding & 0xFFFF) * 2;", "+\t\t}"]}], "num": 23555}