{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a0bd37ec02e4c378b74e8bfd0afcb59e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80819c4153f9868348596bbeaacbc48c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Sash.java", "commitBeforeChange": "102752633212b3f8dcec1e2773e0b7fb6c95bed0", "commitAfterChange": "1978495334bc4ec57956c9292260f98ad58ec0d8", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  boolean sendKeyEvent(NSEvent nsEvent, int type)", "signatureAfterChange": "  boolean sendKeyEvent(NSEvent nsEvent, int type)", "diff": ["-\t//TODO consumed", "-\tint keyCode = nsEvent.keyCode();", "-\tswitch (keyCode) {", "-\t\tcase 126: /* Up arrow */", "-\t\tcase 123: /* Left arrow */", "-\t\tcase 125: /* Down arrow */", "-\t\tcase 124: /* Right arrow */ {", "-\t\t\tint xChange = 0, yChange = 0;", "-\t\t\tint stepSize = PAGE_INCREMENT;", "-\t\t\tint /*long*/ modifiers = nsEvent.modifierFlags();", "-\t\t\tif ((modifiers & OS.NSControlKeyMask) != 0) stepSize = INCREMENT;", "-\t\t\tif ((style & SWT.VERTICAL) != 0) {", "-\t\t\t\tif (keyCode == 126 || keyCode == 125) break;", "-\t\t\t\txChange = keyCode == 123 ? -stepSize : stepSize;", "-\t\t\t} else {", "-\t\t\t\tif (keyCode == 123 || keyCode  == 124) break;", "-\t\t\t\tyChange = keyCode == 126 ? -stepSize : stepSize;", "-\t\t\t}", "-\t\t\t", "-\t\t\tRectangle bounds = getBounds ();", "-\t\t\tint width = bounds.width, height = bounds.height;", "-\t\t\tRectangle parentBounds = parent.getBounds ();", "-\t\t\tint parentWidth = parentBounds.width;", "-\t\t\tint parentHeight = parentBounds.height;", "-\t\t\tint newX = lastX, newY = lastY;", "-\t\t\tif ((style & SWT.VERTICAL) != 0) {", "-\t\t\t\tnewX = Math.min (Math.max (0, lastX + xChange), parentWidth - width);", "-\t\t\t} else {", "-\t\t\t\tnewY = Math.min (Math.max (0, lastY + yChange), parentHeight - height);", "-\t\t\t}", "-\t\t\tif (newX == lastX && newY == lastY) return true;", "-\t\t\tEvent event = new Event ();", "-\t\t\tevent.x = newX;", "-\t\t\tevent.y = newY;", "-\t\t\tevent.width = width;", "-\t\t\tevent.height = height;", "-\t\t\tsendEvent (SWT.Selection, event);", "-\t\t\tif (isDisposed ()) break;", "-\t\t\tif (event.doit) {", "-\t\t\t\tsetBounds (event.x, event.y, width, height);", "-\t\t\t\tif (isDisposed ()) break;", "-\t\t\t\tlastX = event.x;", "-\t\t\t\tlastY = event.y;", "-\t\t\t\tif (isDisposed ()) return false;", "-\t\t\t\tint cursorX = event.x, cursorY = event.y;", "+\tsuper.sendKeyEvent (nsEvent, type);", "+\tif (type == SWT.KeyDown) {", "+\t\tint keyCode = nsEvent.keyCode();", "+\t\tswitch (keyCode) {", "+\t\t\tcase 126: /* Up arrow */", "+\t\t\tcase 123: /* Left arrow */", "+\t\t\tcase 125: /* Down arrow */", "+\t\t\tcase 124: /* Right arrow */ {", "+\t\t\t\tint xChange = 0, yChange = 0;", "+\t\t\t\tint stepSize = PAGE_INCREMENT;", "+\t\t\t\tint /*long*/ modifiers = nsEvent.modifierFlags();", "+\t\t\t\tif ((modifiers & OS.NSControlKeyMask) != 0) stepSize = INCREMENT;", "-\t\t\t\t\tcursorY += height / 2;", "+\t\t\t\t\tif (keyCode == 126 || keyCode == 125) break;", "+\t\t\t\t\txChange = keyCode == 123 ? -stepSize : stepSize;", "-\t\t\t\t\tcursorX += width / 2;", "+\t\t\t\t\tif (keyCode == 123 || keyCode  == 124) break;", "+\t\t\t\t\tyChange = keyCode == 126 ? -stepSize : stepSize;", "-\t\t\t\tdisplay.setCursorLocation (parent.toDisplay (cursorX, cursorY));", "+\t\t\t\t", "+\t\t\t\tRectangle bounds = getBounds ();", "+\t\t\t\tint width = bounds.width, height = bounds.height;", "+\t\t\t\tRectangle parentBounds = parent.getBounds ();", "+\t\t\t\tint parentWidth = parentBounds.width;", "+\t\t\t\tint parentHeight = parentBounds.height;", "+\t\t\t\tint newX = lastX, newY = lastY;", "+\t\t\t\tif ((style & SWT.VERTICAL) != 0) {", "+\t\t\t\t\tnewX = Math.min (Math.max (0, lastX + xChange), parentWidth - width);", "+\t\t\t\t} else {", "+\t\t\t\t\tnewY = Math.min (Math.max (0, lastY + yChange), parentHeight - height);", "+\t\t\t\t}", "+\t\t\t\tif (newX == lastX && newY == lastY) return true;", "+\t\t\t\tEvent event = new Event ();", "+\t\t\t\tevent.x = newX;", "+\t\t\t\tevent.y = newY;", "+\t\t\t\tevent.width = width;", "+\t\t\t\tevent.height = height;", "+\t\t\t\tsendEvent (SWT.Selection, event);", "+\t\t\t\tif (isDisposed ()) break;", "+\t\t\t\tif (event.doit) {", "+\t\t\t\t\tsetBounds (event.x, event.y, width, height);", "+\t\t\t\t\tif (isDisposed ()) break;", "+\t\t\t\t\tlastX = event.x;", "+\t\t\t\t\tlastY = event.y;", "+\t\t\t\t\tif (isDisposed ()) return false;", "+\t\t\t\t\tint cursorX = event.x, cursorY = event.y;", "+\t\t\t\t\tif ((style & SWT.VERTICAL) != 0) {", "+\t\t\t\t\t\tcursorY += height / 2;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tcursorX += width / 2;", "+\t\t\t\t\t}", "+\t\t\t\t\tdisplay.setCursorLocation (parent.toDisplay (cursorX, cursorY));", "+\t\t\t\t}", "+\t\t\t\tbreak;", "-\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c40d6124174d5d2d345c30dcc680117c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Sash.java", "commitBeforeChange": "aa18f3accd80eff265f1d8e33eb5ad4979b7674e", "commitAfterChange": "49c0b804a79ac30f301e8fb0f31e7a8dd1b6578e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "  void HandlePreviewKeyDown (int sender, int e)", "signatureAfterChange": "  void HandlePreviewKeyDown (int sender, int e)", "diff": ["-void HandlePreviewKeyDown (int sender, int e) {", "-\tsuper.HandlePreviewKeyDown (sender, e);", "-\t//TODO", "+void HandlePreviewKeyDown (int sender, int e) {", "+\tsuper.HandlePreviewKeyDown (sender, e);", "+\tif (!checkEvent (e)) return;", "+\tint key = OS.KeyEventArgs_Key (e);", "+\tswitch (key) {", "+\t\tcase OS.Key_Left:", "+\t\tcase OS.Key_Right:", "+\t\tcase OS.Key_Up:", "+\t\tcase OS.Key_Down:", "+\t\t\tint xChange = 0, yChange = 0;", "+\t\t\tint stepSize = PAGE_INCREMENT;", "+\t\t\tint keyboardDevice = OS.KeyboardEventArgs_KeyboardDevice(e);", "+\t\t\tint modifiers = OS.KeyboardDevice_Modifiers(keyboardDevice);", "+\t\t\tOS.GCHandle_Free(keyboardDevice);", "+\t\t\tif ((modifiers & OS.ModifierKeys_Control) != 0) stepSize = INCREMENT;", "+\t\t\tif ((style & SWT.VERTICAL) != 0) {", "+\t\t\t\tif (key == OS.Key_Up || key == OS.Key_Down) break;", "+\t\t\t\txChange = key == OS.Key_Left ? -stepSize : stepSize;", "+\t\t\t} else {", "+\t\t\t\tif (key == OS.Key_Left || key == OS.Key_Right) break;", "+\t\t\t\tyChange = key == OS.Key_Up ? -stepSize : stepSize;", "+\t\t\t}", "+\t\t\t", "+\t\t\tRectangle bounds = getBounds ();", "+\t\t\tint width = bounds.width, height = bounds.height;", "+\t\t\tRectangle parentBounds = parent.getBounds ();", "+\t\t\tint parentWidth = parentBounds.width;", "+\t\t\tint parentHeight = parentBounds.height;", "+\t\t\tint newX = lastX, newY = lastY;", "+\t\t\tif ((style & SWT.VERTICAL) != 0) {", "+\t\t\t\tnewX = Math.min (Math.max (0, lastX + xChange), parentWidth - width);", "+\t\t\t} else {", "+\t\t\t\tnewY = Math.min (Math.max (0, lastY + yChange), parentHeight - height);", "+\t\t\t}", "+\t\t\tif (newX == lastX && newY == lastY) return;", "+\t\t\tEvent event = new Event ();", "+\t\t\tevent.x = newX;", "+\t\t\tevent.y = newY;", "+\t\t\tevent.width = width;", "+\t\t\tevent.height = height;", "+\t\t\tsendEvent (SWT.Selection, event);", "+\t\t\tif (isDisposed ()) break;", "+\t\t\tif (event.doit) {", "+\t\t\t\tsetBounds (event.x, event.y, width, height);", "+\t\t\t\tif (isDisposed ()) break;", "+\t\t\t\tlastX = event.x;", "+\t\t\t\tlastY = event.y;", "+\t\t\t\tif (isDisposed ()) return;", "+\t\t\t\tint cursorX = event.x, cursorY = event.y;", "+\t\t\t\tif ((style & SWT.VERTICAL) != 0) {", "+\t\t\t\t\tcursorY += height / 2;", "+\t\t\t\t} else {", "+\t\t\t\t\tcursorX += width / 2;", "+\t\t\t\t}", "+\t\t\t\tdisplay.setCursorLocation (parent.toDisplay (cursorX, cursorY));", "+\t\t\t}", "+\t\t\tOS.RoutedEventArgs_Handled(e, true);", "+\t\t\tbreak;", "+\t}\t"]}], "num": 46684}