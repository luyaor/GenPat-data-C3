{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a8b79eddf4f04cfc7b6f5ce1b33eb8fe", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10bf3f65ae8764f9be3b0fbadd0fbb42", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "9285279090fb385a9ec8cdbaa9f65aa367c5f200", "commitAfterChange": "daf3513150a77c76ffc67e1220dd09d1898e94ce", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " public void setAdvanced(boolean advanced)", "signatureAfterChange": " public void setAdvanced(boolean advanced)", "diff": ["+\t\tint foreground = OS.GetTextColor(handle);", "+\t\tint background = OS.GetBkColor(handle);", "+\t\tOS.SetTextColor(handle, foreground);", "+\t\tOS.SetBkColor(handle, background);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59d2d5b309e379ab50f7d1cdccb7445c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "d7c1fc5764f6967174b7e672c5757dca7558afa1", "commitAfterChange": "f6e0d0d1edf37b12b050c1459d864b748a7d7855", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public int getLineHeight ()", "signatureAfterChange": " public int getLineHeight ()", "diff": ["-\t//FIXME", "-\treturn 10;", "+\tint family = OS.Control_FontFamily (handle);", "+\tdouble lineSpacing = OS.FontFamily_LineSpacing (family);", "+\tOS.GCHandle_Free (family);", "+\tdouble size = OS.Control_FontSize (handle);", "+\treturn (int) (lineSpacing * size);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02b46a1c77919110ab433c420a43936b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/ProgressBar.java", "commitBeforeChange": "1443cc0e9833ef6d8b4ab52237536d9a56d91892", "commitAfterChange": "ed959be22260cc43a0ef1344f0d9087cacdf5054", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void setSelection (int value)", "signatureAfterChange": " public void setSelection (int value)", "diff": ["-   ((NSProgressIndicator)view).setDoubleValue(value);", "+\tint minimum = (int)((NSProgressIndicator)view).minValue();", "+\tint maximum = (int)((NSProgressIndicator)view).maxValue();", "+\tvalue = Math.max (minimum, Math.min (maximum, value));", "+\t((NSProgressIndicator)view).setDoubleValue(value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5b7f9ba157016df5e52154e162882ef", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "d4eb14ad4f7b1074d4935c2b9211f94b2750616d", "commitAfterChange": "7d562ae8941ad5655a314eac8dd19e3b2aaef50c", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "\r public boolean getXORMode()", "signatureAfterChange": "\r public boolean getXORMode()", "diff": ["-\treturn OS.GetROP2(handle) == OS.R2_XORPEN;\r", "+\tint rop2 = 0;\r", "+\tif (OS.IsWinCE) {\r", "+\t\trop2 = OS.SetROP2 (handle, OS.R2_COPYPEN);\r", "+\t\tOS.SetROP2 (handle, rop2);\r", "+\t} else {\r", "+\t\trop2 = OS.GetROP2(handle);\r", "+\t}\r", "+\treturn rop2 == OS.R2_XORPEN;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce25c1f67faee3120314fa2c3f750aa5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "f980f92ddaa06400d01ca6217ebe85dd24cefb9a", "commitAfterChange": "3b2084ccd7c41c3bd66bd7a2f6a555b1cfa73eff", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  int actionProc (int theControl, int partCode)", "signatureAfterChange": "  int actionProc (int theControl, int partCode)", "diff": ["-\tint value = OS.GetControl32BitValue (buttonHandle);", "+\tint value = getSelectionText ();", "-\tupdate (value, true, false);", "+\tint max = OS.GetControl32BitMaximum (buttonHandle);", "+\tint min = OS.GetControl32BitMinimum (buttonHandle);", "+\tif (value > max) value = min;", "+\tif (value < min) value = max;", "+\tsetSelection (value, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16d3eca71013bc192485aee2563b54e5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "fcc2c15cc10d54f6a982edb736f79da488fd31af", "commitAfterChange": "69f1d6e1118f73bdbcd99f68ccdacdb8645e32ea", "methodNumberBeforeChange": 208, "methodNumberAfterChange": 208, "signatureBeforeChange": " int insertBlockSelectionText(String text, boolean fillWithSpaces)", "signatureAfterChange": " int insertBlockSelectionText(String text, boolean fillWithSpaces)", "diff": ["+\tint caretLine = getCaretLine();", "-\t\tstart = sendTextEvent(left, right, lineIndex, string, fillWithSpaces);", "+\t\tint lineStart = sendTextEvent(left, right, lineIndex, string, fillWithSpaces);", "+\t\tif (lineIndex == caretLine) start = lineStart;", "-\t\tstart = sendTextEvent(left, left, lineIndex, lines[index++], fillWithSpaces);", "+\t\tint lineStart = sendTextEvent(left, left, lineIndex, lines[index++], fillWithSpaces);", "+\t\tif (lineIndex == caretLine) start = lineStart;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91da1fadece57f06a106b32169493689", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "f980f92ddaa06400d01ca6217ebe85dd24cefb9a", "commitAfterChange": "3b2084ccd7c41c3bd66bd7a2f6a555b1cfa73eff", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 43, "signatureBeforeChange": " public void setSelection (int value)", "signatureAfterChange": " public void setSelection (int value)", "diff": ["-\tupdate (value, false, false);", "+\tint min = OS.GetControl32BitMinimum (buttonHandle);", "+\tint max = OS.GetControl32BitMaximum (buttonHandle);", "+\tvalue = Math.min (Math.max (min, value), max);", "+\tsetSelection (value, false);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b14a441b71ede492c719f59d2a2651a4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/ProgressBar.java", "commitBeforeChange": "ed959be22260cc43a0ef1344f0d9087cacdf5054", "commitAfterChange": "16ce6c5a9c4b6fd9e26b92d0accb2cde1abd5b4a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void setSelection (int value)", "signatureAfterChange": " public void setSelection (int value)", "diff": ["-\tint minimum = (int)((NSProgressIndicator)view).minValue();", "-\tint maximum = (int)((NSProgressIndicator)view).maxValue();", "-\tvalue = Math.max (minimum, Math.min (maximum, value));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e07bb65b5478f48a80f1824e35b1f7d6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "d51b2cdc1bf023f32eb8c5120814334d3961dee5", "commitAfterChange": "54c4a90a90d2e5a40c0838e4afc47d891146163d", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " public int internal_new_GC (GCData data)", "signatureAfterChange": " public int internal_new_GC (GCData data)", "diff": ["-\t\tdata.foreground = getForegroundPixel ();", "+\t\tint foreground = getForegroundPixel ();", "+\t\tif (foreground != OS.GetTextColor (hDC)) data.foreground = foreground;", "-\t\tdata.background = control.getBackgroundPixel ();", "+\t\tint background = control.getBackgroundPixel ();", "+\t\tif (background != OS.GetBkColor (hDC)) data.background = background;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "496612b6f587ff706b040290d4b5ca3e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "c287288b6b27ae417e7c5f8816c2ca06c8020d9d", "commitAfterChange": "c5766384af4c943a3c6c72f5dcf3deb91dd74897", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "  int kEventControlDraw (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventControlDraw (int nextHandler, int theEvent, int userData)", "diff": ["+\t\tint window = OS.GetControlOwner (theControl [0]);", "+\t\tint port = OS.GetWindowPort (window);", "+\t\tOS.LockPortBits (port);", "+//\t\tOS.QDSetDirtyRegion (port, visibleRgn);", "+\t\tOS.UnlockPortBits (port);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91196562357e9c2a6766ce1382c62286", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "4356774732669efb538fbe79a04cc9732f4a3bcc", "commitAfterChange": "e291ba558cbbdd0051d4de729d547bbe9c2d503f", "methodNumberBeforeChange": 147, "methodNumberAfterChange": 147, "signatureBeforeChange": "  boolean translateTraversal (int e)", "signatureAfterChange": "  boolean translateTraversal (int e)", "diff": ["-\t\t\tint keyboardDevice = OS.KeyboardEventArgs_KeyboardDevice(e);", "-\t\t\tint modifiers = OS.KeyboardDevice_Modifiers(keyboardDevice);", "-\t\t\tOS.GCHandle_Free(keyboardDevice);", "+\t\t\tint keyboardDevice = OS.KeyboardEventArgs_KeyboardDevice (e);", "+\t\t\tint modifiers = OS.KeyboardDevice_Modifiers (keyboardDevice);", "+\t\t\tOS.GCHandle_Free (keyboardDevice);", "-\t\t\t//if ((keyEvent.state & OS.GDK_CONTROL_MASK) == 0) return false;", "+\t\t\tint keyboardDevice = OS.KeyboardEventArgs_KeyboardDevice (e);", "+\t\t\tint modifiers = OS.KeyboardDevice_Modifiers (keyboardDevice);", "+\t\t\tOS.GCHandle_Free (keyboardDevice);", "+\t\t\tif ((modifiers & OS.ModifierKeys_Control) == 0) return false;"]}], "num": 8836}