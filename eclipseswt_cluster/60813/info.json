{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c8ba7b26766084fdf728ae0c2f117194", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31febeb2afbec7dcefcffc72914f28f1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "ca3a04fdfae246c22177761bf6daff1ede311b67", "commitAfterChange": "787e5637344a9138e1fc4621acdbfe3b801d61a1", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["-\tstate |= CANVAS;// | GRAB | HIDDEN;", "+\tstate |= CANVAS | HIDDEN;// | GRAB;", "-\t\treturn;", "-\t\tNSRect rect = new NSRect();", "-\t\tMonitor monitor = getMonitor ();", "-\t\tRectangle clientArea = monitor.getClientArea ();", "-\t\trect.width = clientArea.width * 5 / 8;", "-\t\trect.height = clientArea.height * 5 / 8;", "-\t\twindow = window.initWithContentRect_styleMask_backing_defer_(rect, styleMask, OS.NSBackingStoreBuffered, false);", "-\t\tdisplay.cascade = window.cascadeTopLeftFromPoint(display.cascade);", "+\t\tNSScreen screen = null;", "+\t\tNSScreen primaryScreen = new NSScreen(NSScreen.screens().objectAtIndex(0));", "+\t\tif (parent != null) screen = parent.getShell().window.screen();", "+\t\tif (screen == null) screen = primaryScreen;", "+\t\twindow = window.initWithContentRect_styleMask_backing_defer_screen_(new NSRect(), styleMask, OS.NSBackingStoreBuffered, false, screen);", "+\t\tdisplay.cascadeWindow(window, screen);", "+\t\tNSRect screenFrame = screen.frame();", "+\t\tfloat width = screenFrame.width * 5 / 8, height = screenFrame.height * 5 / 8;;", "+\t\tNSRect frame = window.frame();", "+\t\tNSRect primaryFrame = primaryScreen.frame();", "+\t\tframe.y = primaryFrame.height - ((primaryFrame.height - (frame.y + frame.height)) + height);", "+\t\tframe.width = width;", "+\t\tframe.height = height;", "+\t\twindow.setFrame_display_(frame, false);", "-\t\twindow.setAcceptsMouseMovedEvents(true);", "+\t\tsuper.createHandle ();", "-\t", "-\tsuper.createHandle ();", "-\t", "+\twindow.setAcceptsMouseMovedEvents(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b043fcf2859888bdbe9787b0535778d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "bef1bdbd7048feb0ad77f320e25be5e5f6cc6607", "commitAfterChange": "cc3a2df9831b152ea0ffe8c1a8b8c27cf1c591a7", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 54, "signatureBeforeChange": "  void setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "signatureAfterChange": "  void setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "diff": ["-\tif (move && resize) {", "-\t\tNSRect rect = new NSRect ();", "-\t\trect.x = x;", "-\t\t//TODO - get the screen for the point", "-\t\tint screenHeight = (int) window.screen().frame().height;", "-\t\trect.y = screenHeight - y;", "-\t\trect.width = width;", "-\t\trect.height = height;", "-\t\twindow.setFrame_display_(rect, false);", "-\t} else {", "-\t\tif (move) {", "-\t\t\tNSPoint point = new NSPoint();", "-\t\t\tpoint.x = x;", "-\t\t\t//TODO - get the screen for the point", "-\t\t\tint screenHeight = (int) window.screen().frame().height;", "-\t\t\tpoint.y = screenHeight - y;", "-\t\t\twindow.setFrameTopLeftPoint (point);", "-\t\t} else {", "-\t\t\tif (resize) {", "-\t\t\t\tNSRect rect = window.frame();", "-\t\t\t\trect.y += rect.height - height;", "-\t\t\t\trect.width = width;", "-\t\t\t\trect.height = height;", "-\t\t\t\twindow.setFrame_display_(rect, false);", "-\t\t\t}", "-\t\t}", "+\t//TODO - get the screen for the point", "+\tint screenHeight = (int) window.screen().frame().height;", "+\tNSRect frame = window.frame();", "+\tif (!move) {", "+\t\tx = (int)frame.x;", "+\t\ty = screenHeight - (int)(frame.y + frame.height);", "+\tif (!resize) {", "+\t\twidth = (int)frame.width;", "+\t\theight = (int)frame.height;", "+\t}", "+\tframe.x = x;", "+\tframe.y = screenHeight - (int)(y + height);", "+\tframe.width = width;", "+\tframe.height = height;", "+\twindow.setFrame_display_(frame, false);"]}], "num": 60813}