{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0241ff9efa4b597fe5e2185db4ee308e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9de87bf57cbd94d28354d87c0681cf07", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "7920606a66fc727c5f8782c8b84372270630f2d0", "commitAfterChange": "5342d5ac870a6cee810e35940226e39202691357", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  void destroyItem (TreeColumn column)", "signatureAfterChange": "  void destroyItem (TreeColumn column)", "diff": ["-\tint count = OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0);", "+\tint columnCount = OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0);", "-\twhile (index < count) {", "+\twhile (index < columnCount) {", "-\tSystem.arraycopy (columns, index + 1, columns, index, --count - index);", "-\tcolumns [count] = null;", "+\tSystem.arraycopy (columns, index + 1, columns, index, --columnCount - index);", "+\tcolumns [columnCount] = null;", "-\t\t\tif (count == 0) {", "+\t\t\tif (columnCount == 0) {", "+\t\t\t\titem.images = null;", "+\t\t\t\titem.cellBackground = null;", "+\t\t\t\titem.cellForeground = null;", "+\t\t\t\titem.cellFont = null;", "-\t\t\t\tString [] strings = item.strings;", "-\t\t\t\tif (strings != null) {", "+\t\t\t\tif (item.strings != null) {", "+\t\t\t\t\tString [] strings = item.strings;", "-\t\t\t\t\tString [] temp = new String [count];", "+\t\t\t\t\tString [] temp = new String [columnCount];", "-\t\t\t\t\tSystem.arraycopy (strings, index + 1, temp, index, count - index);", "+\t\t\t\t\tSystem.arraycopy (strings, index + 1, temp, index, columnCount - index);", "-\t\t\t}", "-\t\t\tif (count == 0) {", "-\t\t\t\titem.images = null;", "-\t\t\t} else {", "-\t\t\t\tImage [] images = item.images;", "-\t\t\t\tif (images != null) {", "+\t\t\t\tif (item.images != null) {", "+\t\t\t\t\tImage [] images = item.images;", "-\t\t\t\t\tImage [] temp = new Image [count];", "+\t\t\t\t\tImage [] temp = new Image [columnCount];", "-\t\t\t\t\tSystem.arraycopy (images, index + 1, temp, index, count - index);", "+\t\t\t\t\tSystem.arraycopy (images, index + 1, temp, index, columnCount - index);", "-\t\t\t}", "-\t\t\tif (item.cellBackground != null) {", "-\t\t\t\tif (count == 0) {", "-\t\t\t\t\titem.cellBackground = null;", "-\t\t\t\t} else {", "+\t\t\t\tif (item.cellBackground != null) {", "-\t\t\t\t\tint [] temp = new int [count];", "+\t\t\t\t\tint [] temp = new int [columnCount];", "-\t\t\t\t\tSystem.arraycopy (cellBackground, index + 1, temp, index, count - index);", "+\t\t\t\t\tSystem.arraycopy (cellBackground, index + 1, temp, index, columnCount - index);", "-\t\t\t}", "-\t\t\tif (item.cellForeground != null) {", "-\t\t\t\tif (count == 0) {", "-\t\t\t\t\titem.cellForeground = null;", "-\t\t\t\t} else {", "+\t\t\t\tif (item.cellForeground != null) {", "-\t\t\t\t\tint [] temp = new int [count];", "+\t\t\t\t\tint [] temp = new int [columnCount];", "-\t\t\t\t\tSystem.arraycopy (cellForeground, index + 1, temp, index, count - index);", "+\t\t\t\t\tSystem.arraycopy (cellForeground, index + 1, temp, index, columnCount - index);", "-\t\t\t}", "-\t\t\tif (item.cellFont != null) {", "-\t\t\t\tif (count == 0) {", "-\t\t\t\t\titem.cellFont = null;", "-\t\t\t\t} else {", "+\t\t\t\tif (item.cellFont != null) {", "-\t\t\t\t\tint [] temp = new int [count];", "+\t\t\t\t\tint [] temp = new int [columnCount];", "-\t\t\t\t\tSystem.arraycopy (cellFont, index + 1, temp, index, count - index);", "+\t\t\t\t\tSystem.arraycopy (cellFont, index + 1, temp, index, columnCount - index);", "-\tif (count == 0) {", "+\tif (columnCount == 0) {", "-\t\tsetScrollWidth ();", "+\t    OS.InvalidateRect (handle, null, true);", "-\t\tsetScrollWidth ();", "+\tsetScrollWidth ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8aad319ae7cf8ee39e89d739ee960de", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "71e082670a2e587e99ba9f0683312b9a404c65b8", "commitAfterChange": "2c2409b91eac452fa03efa9c9e69da66618d6519", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  void createItem (TreeColumn column, int index)", "signatureAfterChange": "  void createItem (TreeColumn column, int index)", "diff": ["-\tint count = OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0);", "-\tif (!(0 <= index && index <= count)) error (SWT.ERROR_INVALID_RANGE);", "-\tif (count == columns.length) {", "+\tint columnCount = OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0);", "+\tif (!(0 <= index && index <= columnCount)) error (SWT.ERROR_INVALID_RANGE);", "+\tif (columnCount == columns.length) {", "-\t\t\t\tString [] temp = new String [count + 1];", "+\t\t\t\tString [] temp = new String [columnCount + 1];", "-\t\t\t\tSystem.arraycopy (strings, index, temp, index + 1, count - index);", "+\t\t\t\tSystem.arraycopy (strings, index, temp, index + 1, columnCount - index);", "-\t\t\t\tImage [] temp = new Image [count + 1];", "+\t\t\t\tImage [] temp = new Image [columnCount + 1];", "-\t\t\t\tSystem.arraycopy (images, index, temp, index + 1, count - index);", "+\t\t\t\tSystem.arraycopy (images, index, temp, index + 1, columnCount - index);", "-\t\t\t\tif (count != 0) {", "+\t\t\t\tif (columnCount != 0) {", "-\t\t\t\t\t\titem.strings = new String [count + 1];", "+\t\t\t\t\t\titem.strings = new String [columnCount + 1];", "-\t\t\t\t\t\titem.images = new Image [count + 1];", "+\t\t\t\t\t\titem.images = new Image [columnCount + 1];", "-\t\t\t\tint [] temp = new int [count + 1];", "+\t\t\t\tint [] temp = new int [columnCount + 1];", "-\t\t\t\tSystem.arraycopy (cellBackground, index, temp, index + 1, count - index);", "+\t\t\t\tSystem.arraycopy (cellBackground, index, temp, index + 1, columnCount - index);", "-\t\t\t\tint [] temp = new int [count + 1];", "+\t\t\t\tint [] temp = new int [columnCount + 1];", "-\t\t\t\tSystem.arraycopy (cellForeground, index, temp, index + 1, count - index);", "+\t\t\t\tSystem.arraycopy (cellForeground, index, temp, index + 1, columnCount - index);", "-\t\t\t\tint [] temp = new int [count + 1];", "+\t\t\t\tint [] temp = new int [columnCount + 1];", "-\t\t\t\tSystem.arraycopy (cellFont, index, temp, index + 1, count- index);", "+\t\t\t\tSystem.arraycopy (cellFont, index, temp, index + 1, columnCount- index);", "-\tSystem.arraycopy (columns, index, columns, index + 1, count - index);", "+\tSystem.arraycopy (columns, index, columns, index + 1, columnCount - index);", "-\t/* Update the scroll bars */", "-\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "-\tif  ((bits & OS.TVS_NOHSCROLL) == 0) {", "+\t/*", "+\t* When the first column is created, get rid of the horizontal", "+\t* scroll bar from the tree and clear TVS_FULLROWSELECT.  Due", "+\t* to drawing problems, TVS_FULLROWSELECT is not used when a", "+\t* tree has columns.", "+\t*/", "+\tif (columnCount == 0) {", "+\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "+\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "+\t\t\tbits &= ~OS.TVS_FULLROWSELECT;", "+\t\t}", "-\tif (count == 0 && OS.SendMessage (handle, OS.TVM_GETCOUNT, 0, 0) != 0) {", "+\tif (columnCount == 0 && OS.SendMessage (handle, OS.TVM_GETCOUNT, 0, 0) != 0) {"]}], "num": 24916}