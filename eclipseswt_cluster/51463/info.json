{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ba8fe8dfd02a9825c85f542a6eb77119", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4033febb813c8fa1decce58827b4e5b2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/common/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "7b1d745a08a3e5e966924f3130abf5f742ba4fab", "commitAfterChange": "0cf2458bdedc1c8ab7562ec0d2fe9423d25c9e06", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  static int checkStyle(int style)", "signatureAfterChange": "  static int checkStyle(int style)", "diff": ["+\tif (DefaultType == SWT.DEFAULT) {", "+\t\tString value = System.getProperty (PROPERTY_DEFAULTTYPE);", "+\t\tif (value != null) {", "+\t\t\tif (value.equalsIgnoreCase (\"mozilla\")) { //$NON-NLS-1$", "+\t\t\t\tDefaultType = SWT.MOZILLA;", "+\t\t\t} else if (value.equalsIgnoreCase (\"webkit\")) { //$NON-NLS-1$", "+\t\t\t\tDefaultType = SWT.WEBKIT;", "+\t\t\t}", "+\t\t}", "+\t\tif (DefaultType == SWT.DEFAULT) {", "+\t\t\tDefaultType = SWT.NONE;", "+\t\t}", "+\t}", "+", "+\tif ((style & (SWT.MOZILLA | SWT.WEBKIT)) == 0) {", "+\t\tstyle |= DefaultType;", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5462791d0c6ca8970c5ce09a1cc36f0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/carbon/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "db31883b9f41fd00bb5b0a446bfa1b3f53fba5d7", "commitAfterChange": "95bcccfd921c2b52375a1f493e992d80dc6832b5", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \t \tint getValueAttribute (int nextHandler, int theEvent, int userData)", "signatureAfterChange": " \t \tint getValueAttribute (int nextHandler, int theEvent, int userData)", "diff": ["-\t\tint code = OS.CallNextEventHandler (nextHandler, theEvent);", "+\t\tint code = userData != OS.eventNotHandledErr ? userData : OS.CallNextEventHandler (nextHandler, theEvent);", "-\t\t\t\t\treturn OS.noErr;", "+\t\t\t\t\tcode = OS.noErr;", "-\t\t\t\t\t\treturn OS.noErr;", "-\t\t\t\t\t}", "-\t\t\t\t\tif (value.equalsIgnoreCase(\"false\")) {", "+\t\t\t\t\t\tcode = OS.noErr;", "+\t\t\t\t\t} else if (value.equalsIgnoreCase(\"false\")) {", "-\t\t\t\t\t\treturn OS.noErr;", "+\t\t\t\t\t\tcode = OS.noErr;", "-\t\t\t\treturn OS.noErr;", "+\t\t\t\tcode = OS.noErr;"]}], "num": 51463}