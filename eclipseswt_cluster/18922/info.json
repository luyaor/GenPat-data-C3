{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9ecac05aab543f6a4af847a6f401da19", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd08b8587f231658b59ba8230ccf5c36", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "f5cd9014d4ffe8335c6cb4ab361438e103573a42", "commitAfterChange": "61583f8f8b007c1f3c125fc81753e1e987524b45", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public int getCaretPosition ()", "signatureAfterChange": " public int getCaretPosition ()", "diff": ["-\tint startLine = OS.SendMessage (handle, OS.EM_LINEFROMCHAR, start [0], 0);", "-\tint caretPos = OS.SendMessage (handle, OS.EM_LINEINDEX, -1, 0);", "-\tint caretLine = OS.SendMessage (handle, OS.EM_LINEFROMCHAR, caretPos, 0);", "-\tint caret = end [0];", "-\tif (caretLine == startLine) caret = start [0];", "+\t/*", "+\t* In Windows, there is no API to get the position of the caret", "+\t* when the selection is an i-beam.  The best that can be done", "+\t* is to query the pixel position of the current caret and compare", "+\t* it to the pixel position of the start and end of the selection.", "+\t* ", "+\t* NOTE:  This does not work when the i-beam belongs to another", "+\t* control.  In this case, guess that the i-beam is at the start", "+\t* of the selection.", "+\t*/", "+\tint caret = start [0];", "+\tif (start [0] != end [0]) {", "+\t\tint startLine = OS.SendMessage (handle, OS.EM_LINEFROMCHAR, start [0], 0);", "+\t\tint endLine = OS.SendMessage (handle, OS.EM_LINEFROMCHAR, end [0], 0);", "+\t\tif (startLine == endLine) {", "+\t\t\tif (!OS.IsWinCE) {", "+\t\t\t\tint idThread = OS.GetWindowThreadProcessId (handle, null);", "+\t\t\t\tGUITHREADINFO  lpgui = new GUITHREADINFO();", "+\t\t\t\tlpgui.cbSize = GUITHREADINFO.sizeof;", "+\t\t\t\tif (OS.GetGUIThreadInfo (idThread, lpgui)) {", "+\t\t\t\t\tif (lpgui.hwndCaret == handle || lpgui.hwndCaret == 0) {", "+\t\t\t\t\t\tPOINT ptCurrentPos = new POINT ();", "+\t\t\t\t\t\tif (OS.GetCaretPos (ptCurrentPos)) {", "+\t\t\t\t\t\t\tint endPos = OS.SendMessage (handle, OS.EM_POSFROMCHAR, end [0], 0);", "+\t\t\t\t\t\t\tif (endPos == -1) {", "+\t\t\t\t\t\t\t\tint startPos = OS.SendMessage (handle, OS.EM_POSFROMCHAR, start [0], 0);", "+\t\t\t\t\t\t\t\tint startX = (short) (startPos & 0xFFFF);", "+\t\t\t\t\t\t\t\tif (ptCurrentPos.x > startX) caret = end [0];", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tint endX = (short) (endPos & 0xFFFF);", "+\t\t\t\t\t\t\t\tif (ptCurrentPos.x >= endX) caret = end [0];", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} else {", "+\t\t\tint caretPos = OS.SendMessage (handle, OS.EM_LINEINDEX, -1, 0);", "+\t\t\tint caretLine = OS.SendMessage (handle, OS.EM_LINEFROMCHAR, caretPos, 0);", "+\t\t\tif (caretLine == endLine) caret = end [0];", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6ce708221722588935dc3c9dcf1e000", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "ef390566d4164ae7a1f970e53f45de12a5265cf6", "commitAfterChange": "ee543bcb83fee603dbf808a397bfdb1dd9d1075a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  LRESULT CDDS_ITEMPOSTPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "signatureAfterChange": "  LRESULT CDDS_ITEMPOSTPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "diff": ["-LRESULT CDDS_ITEMPOSTPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam) {", "+LRESULT CDDS_ITEMPOSTPAINT (NMTVCUSTOMDRAW nmcd, int /*long*/ wParam, int /*long*/ lParam) {", "-\tint hDC = nmcd.hdc;", "+\tint /*long*/ hDC = nmcd.hdc;", "-\t\tcount = OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0);", "+\t\tcount = (int)/*64*/OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0);", "-\t\t\t\t\t\tint hTheme = OS.OpenThemeData (handle, Display.TREEVIEW);", "+\t\t\t\t\t\tint /*long*/ hTheme = OS.OpenThemeData (handle, Display.TREEVIEW);", "-\t\t\t\t\t\tint hTheme = OS.OpenThemeData (handle, Display.TREEVIEW);", "+\t\t\t\t\t\tint /*long*/ hTheme = OS.OpenThemeData (handle, Display.TREEVIEW);", "-\t\t\tint hFont = item.cellFont != null ? item.cellFont [index] : -1;", "+\t\t\tint /*long*/ hFont = item.cellFont != null ? item.cellFont [index] : -1;", "-\t\t\t\t\t\tdata.uiState = OS.SendMessage (handle, OS.WM_QUERYUISTATE, 0, 0);", "+\t\t\t\t\t\tdata.uiState = (int)/*64*/OS.SendMessage (handle, OS.WM_QUERYUISTATE, 0, 0);", "-\t\t\t\t\t\t\t\t\t\tint uiState = OS.SendMessage (handle, OS.WM_QUERYUISTATE, 0, 0);", "+\t\t\t\t\t\t\t\t\t\tint uiState = (int)/*64*/OS.SendMessage (handle, OS.WM_QUERYUISTATE, 0, 0);", "-\t\t\t\t\t\t\t\t\t\tint hTheme = OS.OpenThemeData (handle, Display.TREEVIEW);", "+\t\t\t\t\t\t\t\t\t\tint /*long*/ hTheme = OS.OpenThemeData (handle, Display.TREEVIEW);", "-\t\t\t\tdata.uiState = OS.SendMessage (handle, OS.WM_QUERYUISTATE, 0, 0);", "+\t\t\t\tdata.uiState = (int)/*64*/OS.SendMessage (handle, OS.WM_QUERYUISTATE, 0, 0);", "-\t\t\t\t\t\t\t\tint uiState = OS.SendMessage (handle, OS.WM_QUERYUISTATE, 0, 0);", "+\t\t\t\t\t\t\t\tint uiState = (int)/*64*/OS.SendMessage (handle, OS.WM_QUERYUISTATE, 0, 0);", "-\t\t\tint uiState = OS.SendMessage (handle, OS.WM_QUERYUISTATE, 0, 0);", "+\t\t\tint uiState = (int)/*64*/OS.SendMessage (handle, OS.WM_QUERYUISTATE, 0, 0);", "-\t\t\t\tint hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "+\t\t\t\tint /*long*/ hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "-\t\t\t\t\t\t\tint index = OS.SendMessage (hwndHeader, OS.HDM_ORDERTOINDEX, 0, 0);", "+\t\t\t\t\t\t\tint index = (int)/*64*/OS.SendMessage (hwndHeader, OS.HDM_ORDERTOINDEX, 0, 0);"]}], "num": 18922}