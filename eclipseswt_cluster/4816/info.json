{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "79717b8ec01fe234e20559b4daba07ff", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a25b55300e35ebe6995cc902c1f25919", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "6dabb7df38fcce7f0167d09887c6889b5423dfe1", "commitAfterChange": "a52e40bb1f3c721f3e06c9fe9cb3304852c5d9fb", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 120, "signatureBeforeChange": "\r \r boolean translateTraversal (MSG msg)", "signatureAfterChange": "\r \r boolean translateTraversal (MSG msg)", "diff": ["+\t\t\tint code = OS.SendMessage (hwnd, OS.WM_GETDLGCODE, 0, 0);\r", "+\t\t\tif ((code & OS.DLGC_WANTALLKEYS) != 0) doit = false;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf1b3b396a5ddc749deb9797599767ac", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "3c4151b11989a0372cdffe5256380cc6a2d62c19", "commitAfterChange": "87beb4d7ac2b26755afcf5347aef0ad7b5ad2e96", "methodNumberBeforeChange": 138, "methodNumberAfterChange": 138, "signatureBeforeChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "diff": ["-\t\t\tredraw = focused && drawCount == 0 && OS.IsWindowVisible (handle);", "+\t\t\tint uiState = OS.SendMessage (handle, OS.WM_QUERYUISTATE, 0, 0);", "+\t\t\tif ((uiState & OS.UISF_HIDEFOCUS) == 0) {", "+\t\t\t\tredraw = focused && drawCount == 0 && OS.IsWindowVisible (handle);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "681d899f1a391b460f2993f826cf8c9f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "28341f36b2b474d250bcbc993c3af8734c20f08e", "commitAfterChange": "c1a797a57543b30a9f6230fdbf16251b30301bfa", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  void setSortDirection (int direction)", "signatureAfterChange": "  void setSortDirection (int direction)", "diff": ["-\t\t\tint oldColumn = OS.SendMessage (hwnd, OS.LVM_GETSELECTEDCOLUMN, 0, 0);", "-\t\t\tint newColumn = direction == SWT.NONE ? -1 : index;", "-\t\t\tOS.SendMessage (hwnd, OS.LVM_SETSELECTEDCOLUMN, newColumn, 0);", "-\t\t\t/* ", "-\t\t\t* Bug in Windows.  When LVM_SETSELECTEDCOLUMN is used to", "-\t\t\t* specify a selected column, Windows does not redraw either", "-\t\t\t* the new or the previous selected column.  The fix is to", "-\t\t\t* force a redraw of both.", "-\t\t\t*/", "-\t\t\tparent.forceResize ();", "-\t\t\tRECT rect = new RECT (), headerRect = new RECT ();", "-\t\t\tOS.GetClientRect (hwnd, rect);", "-\t\t\tif (oldColumn != -1) {", "-\t\t\t\tif (OS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, oldColumn, headerRect) != 0) {", "-\t\t\t\t\tOS.MapWindowPoints (hwndHeader, hwnd, headerRect, 2);", "-\t\t\t\t\trect.left = headerRect.left;", "-\t\t\t\t\trect.right = headerRect.right;", "-\t\t\t\t\tOS.InvalidateRect (hwnd, rect, true);", "+\t\t\tint bits = OS.SendMessage (hwnd, OS.LVM_GETEXTENDEDLISTVIEWSTYLE, 0, 0);", "+\t\t\tif ((bits & OS.LVS_EX_TRANSPARENTBKGND) == 0) {", "+\t\t\t\tint oldColumn = OS.SendMessage (hwnd, OS.LVM_GETSELECTEDCOLUMN, 0, 0);", "+\t\t\t\tint newColumn = direction == SWT.NONE ? -1 : index;", "+\t\t\t\tOS.SendMessage (hwnd, OS.LVM_SETSELECTEDCOLUMN, newColumn, 0);", "+\t\t\t\t/* ", "+\t\t\t\t* Bug in Windows.  When LVM_SETSELECTEDCOLUMN is used to", "+\t\t\t\t* specify a selected column, Windows does not redraw either", "+\t\t\t\t* the new or the previous selected column.  The fix is to", "+\t\t\t\t* force a redraw of both.", "+\t\t\t\t*/", "+\t\t\t\tparent.forceResize ();", "+\t\t\t\tRECT rect = new RECT (), headerRect = new RECT ();", "+\t\t\t\tOS.GetClientRect (hwnd, rect);", "+\t\t\t\tif (oldColumn != -1) {", "+\t\t\t\t\tif (OS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, oldColumn, headerRect) != 0) {", "+\t\t\t\t\t\tOS.MapWindowPoints (hwndHeader, hwnd, headerRect, 2);", "+\t\t\t\t\t\trect.left = headerRect.left;", "+\t\t\t\t\t\trect.right = headerRect.right;", "+\t\t\t\t\t\tOS.InvalidateRect (hwnd, rect, true);", "+\t\t\t\t\t}", "-\t\t\t}", "-\t\t\tif (newColumn != -1) {", "-\t\t\t\tif (OS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, newColumn, headerRect) != 0) {", "-\t\t\t\t\tOS.MapWindowPoints (hwndHeader, hwnd, headerRect, 2);", "-\t\t\t\t\trect.left = headerRect.left;", "-\t\t\t\t\trect.right = headerRect.right;", "-\t\t\t\t\tOS.InvalidateRect (hwnd, rect, true);", "+\t\t\t\tif (newColumn != -1) {", "+\t\t\t\t\tif (OS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, newColumn, headerRect) != 0) {", "+\t\t\t\t\t\tOS.MapWindowPoints (hwndHeader, hwnd, headerRect, 2);", "+\t\t\t\t\t\trect.left = headerRect.left;", "+\t\t\t\t\t\trect.right = headerRect.right;", "+\t\t\t\t\t\tOS.InvalidateRect (hwnd, rect, true);", "+\t\t\t\t\t}"]}], "num": 4816}