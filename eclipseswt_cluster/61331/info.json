{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "31440ae55f1b18bc40cd2208876a9938", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f220c439166a2a7c79c3aa9195d3b30", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet188.java", "commitBeforeChange": "a2edcdf0aa84117adb452b80e73ce3bac2db370a", "commitAfterChange": "6a16525bdab6bf22e73fb43c92df223ddd8a5ef8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public static void main (String [] args)", "signatureAfterChange": " \t public static void main (String [] args)", "diff": ["-", "-\tListener listener = new Listener() {", "-\t\tpublic void handleEvent(Event e) {", "-\t\t\tControl child = (Control)e.widget;", "-\t\t\tRectangle bounds = child.getBounds();", "-\t\t\tRectangle area = sc.getClientArea();", "-\t\t\tPoint origin = sc.getOrigin();", "-\t\t\tif (origin.x > bounds.x) origin.x = Math.max(0, bounds.x);", "-\t\t\tif (origin.y > bounds.y) origin.y = Math.max(0, bounds.y);", "-\t\t\tif (origin.x + area.width < bounds.x + bounds.width) origin.x = Math.max(0, bounds.x + bounds.width - area.width);", "-\t\t\tif (origin.y + area.height < bounds.y + bounds.height) origin.y = Math.max(0, bounds.y + bounds.height - area.height);", "-\t\t\tsc.setOrigin(origin);", "-\t\t}", "-\t};", "-\tControl[] controls = c.getChildren();", "-\tfor (int i = 0; i < controls.length; i++) {", "-\t\tcontrols[i].addListener(SWT.Activate, listener);", "-\t}", "-", "+\tsc.setAutoScroll(true);", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8a2ffbb0ae4bcf47db109dfa1764f5b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/TreeDragUnderEffect.java", "commitBeforeChange": "e72f7bd4d44706289b63f67ce457d62232713387", "commitAfterChange": "cd6d057fe97b58ab42a52702e1bea64749013640", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": " private TreeItem findItem(int x , int y)", "signatureAfterChange": " private TreeItem findItem(int x , int y)", "diff": ["-\tRectangle area = tree.getClientArea();", "-\tif (!area.contains(coordinates)) return null;", "-\t", "-\tTreeItem item = tree.getItem(coordinates);", "-\tif (item != null) return item;", "-", "-\t// Scan across the width of the tree.", "-\tfor (int x1 = area.x; x1 < area.x + area.width; x1++) {", "-\t\tcoordinates = new Point(x1, coordinates.y);", "-\t\titem = tree.getItem(coordinates);", "-\t\tif (item != null) return item;", "-\t}", "-\t// Check if we are just below the last item of the tree", "-\tcoordinates = new Point(x, y);", "-\tcoordinates = tree.toControl(coordinates);", "-\tif (coordinates.y > area.y + area.height - tree.getItemHeight()) {;", "-\t\tint y1 = area.y + area.height - tree.getItemHeight();", "-\t\tcoordinates = new Point(coordinates.x, y1);", "-\t\t", "-\t\titem = tree.getItem(coordinates);\t", "-\t\tif (item != null) return item;", "-\t\t", "-\t\t// Scan across the width of the tree just above the bottom..", "-\t\tfor (int x1 = area.x; x1 < area.x + area.width; x1++) {", "-\t\t\tcoordinates = new Point(x1, y1);", "-\t\t\titem = tree.getItem(coordinates);", "-\t\t\tif (item != null) return item;", "-\t\t}", "-\t}", "-\treturn null;", "+\treturn tree.getItem(coordinates);"]}], "num": 61331}