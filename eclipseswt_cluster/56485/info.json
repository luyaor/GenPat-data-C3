{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0d276a9bce62b7f17e245f66724089fa", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1ad6e829ed0510fed586160227c9bc6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ScrollBar.java", "commitBeforeChange": "165a14baa4f28638048d0b616f73e1b86413e4a2", "commitAfterChange": "195c35fb4aaf6777b97d64fa53ba79208d6d54ee", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public Rectangle getThumbBounds ()", "signatureAfterChange": " public Rectangle getThumbBounds ()", "diff": ["+\tGtkAllocation allocation = new GtkAllocation ();", "-\t\tx = OS.GTK_WIDGET_X (handle);", "+\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "+\t\t\tOS.gtk_widget_get_allocation(handle, allocation);", "+\t\t\tx = allocation.x;", "+\t\t\twidth = allocation.width;", "+\t\t} else {", "+\t\t\tx = OS.GTK_WIDGET_X (handle);", "+\t\t\twidth = OS.GTK_WIDGET_WIDTH (handle);", "+\t\t}", "-\t\twidth = OS.GTK_WIDGET_WIDTH (handle);", "-\t\ty = OS.GTK_WIDGET_Y (handle);", "+\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "+\t\t\tOS.gtk_widget_get_allocation(handle, allocation);", "+\t\t\ty = allocation.y;", "+\t\t\theight = allocation.height;", "+\t\t} else {", "+\t\t\ty = OS.GTK_WIDGET_Y (handle);", "+\t\t\theight = OS.GTK_WIDGET_HEIGHT (handle);", "+\t\t}", "-\t\theight = OS.GTK_WIDGET_HEIGHT (handle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ac9cfd0b050b367190a82119e3a98fe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "058843ec5debf78b5e1461b60991c47cc05c23d3", "commitAfterChange": "e91638284e681c28532a38f51bdfcbbeea2d1f41", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": " \t \tstatic void windowPoint (AccessibleObject object, int [] x, int [] y)", "signatureAfterChange": " \t \tstatic void windowPoint (AccessibleObject object, int [] x, int [] y)", "diff": ["-\t\tGtkAccessible gtkAccessible = new GtkAccessible ();", "-\t\tATK.memmove (gtkAccessible, object.handle);", "-\t\twhile (gtkAccessible.widget == 0 && object.parent != null) {", "-\t\t\tobject = object.parent;", "+\t\tlong /*int*/ widget;", "+\t\tif (OS.GTK_VERSION >= OS.VERSION(2, 22, 0)) {", "+\t\t\twidget = OS.gtk_accessible_get_widget(object.handle);", "+\t\t} else {", "+\t\t\tGtkAccessible gtkAccessible = new GtkAccessible ();", "+\t\t\twidget = gtkAccessible.widget;", "-\t\tif (gtkAccessible.widget == 0) return;", "-\t\tlong /*int*/ topLevel = ATK.gtk_widget_get_toplevel (gtkAccessible.widget);", "+\t\twhile (widget == 0 && object.parent != null) {", "+\t\t\tobject = object.parent;", "+\t\t\tif (OS.GTK_VERSION >= OS.VERSION(2, 22, 0)) {", "+\t\t\t\twidget = OS.gtk_accessible_get_widget(object.handle);", "+\t\t\t} else {", "+\t\t\t\tGtkAccessible gtkAccessible = new GtkAccessible ();", "+\t\t\t\tATK.memmove (gtkAccessible, object.handle);", "+\t\t\t\twidget = gtkAccessible.widget;", "+\t\t\t}", "+\t\t}", "+\t\tif (widget == 0) return;", "+\t\tlong /*int*/ topLevel = ATK.gtk_widget_get_toplevel (widget);"]}], "num": 56485}