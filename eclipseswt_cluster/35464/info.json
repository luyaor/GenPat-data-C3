{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4798c661ea06ff88b9a2160c54be4a3e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "819e3b86bbe774f2e8f8223888e00bf3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "2ef2e709c4c31aa7b46fb0d933d3fc8c2c2d5682", "commitAfterChange": "1558841b1896e9e706af6006087cd106ba6d2af3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void create(Composite parent, int style)", "signatureAfterChange": "  public void create(Composite parent, int style)", "diff": ["-\t\t\t\t\tlastNavigateURL = null;", "+\t\t\t\t\tlastNavigateURL = uncRedirect = null;", "+", "+\t\t\t\t\t\tif (uncRedirect != null) {", "+\t\t\t\t\t\t\t/*", "+\t\t\t\t\t\t\t* Silently allow the navigate to proceed if the url is the first segment of a", "+\t\t\t\t\t\t\t* UNC path being navigated to (initiated by the NavigateError listener to show", "+\t\t\t\t\t\t\t* a name/password prompter), or if the url is the full UNC path (initiated by", "+\t\t\t\t\t\t\t* the NavigateComplete listener to redirect from the UNC's first segment to its", "+ \t\t\t\t\t\t\t* full path).", "+\t\t\t\t\t\t\t*/", "+\t\t\t\t\t\t\tif (uncRedirect.equals(url) || (uncRedirect.startsWith(url) && uncRedirect.indexOf('\\\\', 2) == url.length())) {", "+\t\t\t\t\t\t\t\tVariant cancel = event.arguments[6];", "+\t\t\t\t\t\t\t\tif (cancel != null) {", "+\t\t\t\t\t\t\t\t\tint /*long*/ pCancel = cancel.getByRef();", "+\t\t\t\t\t\t\t\t\tCOM.MoveMemory(pCancel, new short[] {COM.VARIANT_FALSE}, 2);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t/*", "+\t\t\t\t\t\t\t\t* This navigate does not correspond to the previously-initiated", "+\t\t\t\t\t\t\t\t* UNC navigation so clear this state since it's no longer valid.", "+\t\t\t\t\t\t\t\t*/", "+\t\t\t\t\t\t\t\tuncRedirect = null;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+", "-\t\t\t\t\t\tVariant varResult = event.arguments[0];", "+\t\t\t\t\t\tVariant varResult = event.arguments[1];", "+\t\t\t\t\t\tString url = varResult.getString();", "+\t\t\t\t\t\tif (uncRedirect != null) {", "+\t\t\t\t\t\t\tif (uncRedirect.equals(url)) {", "+\t\t\t\t\t\t\t\t/* full UNC path has been successfully navigated */", "+\t\t\t\t\t\t\t\tuncRedirect = null;", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (uncRedirect.startsWith(url)) {", "+\t\t\t\t\t\t\t\t/*", "+\t\t\t\t\t\t\t\t* UNC first segment has been successfully navigated,", "+\t\t\t\t\t\t\t\t* now redirect to the full UNC path.", "+\t\t\t\t\t\t\t\t*/ ", "+\t\t\t\t\t\t\t\tnavigate(uncRedirect, true);", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tuncRedirect = null;", "+\t\t\t\t\t\t}", "+", "+\t\t\t\t\t\tvarResult = event.arguments[0];", "-\t\t\t\t\t\tvarResult = event.arguments[1];", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}", "+\t\t\t\t\tcase NavigateError: {", "+\t\t\t\t\t\tif (uncRedirect != null) {", "+\t\t\t\t\t\t\t/*", "+\t\t\t\t\t\t\t* This is the second error attempting to reach this UNC path, so", "+\t\t\t\t\t\t\t* it does not exist.  Don't override the default error handling.", "+\t\t\t\t\t\t\t*/", "+\t\t\t\t\t\t\tuncRedirect = null;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tVariant varResult = event.arguments[1];", "+\t\t\t\t\t\tfinal String url = varResult.getString();", "+\t\t\t\t\t\tif (url.startsWith(\"\\\\\\\\\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\tvarResult = event.arguments[3];", "+\t\t\t\t\t\t\tint statusCode = varResult.getInt();", "+\t\t\t\t\t\t\tif (statusCode == INET_E_RESOURCE_NOT_FOUND) {", "+\t\t\t\t\t\t\t\tint index = url.indexOf('\\\\', 2);", "+\t\t\t\t\t\t\t\tif (index != -1) {", "+\t\t\t\t\t\t\t\t\tfinal String host = url.substring(0, index);", "+\t\t\t\t\t\t\t\t\tVariant cancel = event.arguments[4];", "+\t\t\t\t\t\t\t\t\tif (cancel != null) {", "+\t\t\t\t\t\t\t\t\t\tint /*long*/ pCancel = cancel.getByRef();", "+\t\t\t\t\t\t\t\t\t\tCOM.MoveMemory(pCancel, new short[] {COM.VARIANT_TRUE}, 2);", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tbrowser.getDisplay().asyncExec(new Runnable() {", "+\t\t\t\t\t\t\t\t\t\tpublic void run() {", "+\t\t\t\t\t\t\t\t\t\t\tif (browser.isDisposed()) return;", "+\t\t\t\t\t\t\t\t\t\t\t/*", "+\t\t\t\t\t\t\t\t\t\t\t* Feature of IE.  When a UNC path ends with a '\\' character IE", "+\t\t\t\t\t\t\t\t\t\t\t* drops this character when providing the path as an argument", "+\t\t\t\t\t\t\t\t\t\t\t* to some IE listeners.  Remove this character here too in", "+\t\t\t\t\t\t\t\t\t\t\t* order to match these other listener argument values.", "+\t\t\t\t\t\t\t\t\t\t\t*/", "+\t\t\t\t\t\t\t\t\t\t\tif (url.endsWith(\"\\\\\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\t\t\t\tuncRedirect = url.substring(0, url.length() - 1);", "+\t\t\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\t\t\tuncRedirect = url;", "+\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\t\tnavigate(host, true);", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t});", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\tsite.addEventListener(NavigateError, oleListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7033876fd50d5ceb61c7c88cdd94c0b3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/IME.java", "commitBeforeChange": "2454a989f8e4d7919c848ba31ce0e0d7a05542aa", "commitAfterChange": "31422b332d59bd3c8fd857e0684c077f7253c065", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  LRESULT WM_IME_COMPOSITION (long wParam, long lParam)", "signatureAfterChange": "  LRESULT WM_IME_COMPOSITION (long wParam, long lParam)", "diff": ["-\t\t\t\t\t\t\tattr = getDisplayAttribute (langID, attrs [clauses [i]]);", "-\t\t\t\t\t\t\tif (attr != null) {", "-\t\t\t\t\t\t\t\tswitch (attr.crText.type) {", "-\t\t\t\t\t\t\t\t\tcase OS.TF_CT_COLORREF:", "-\t\t\t\t\t\t\t\t\t\tstyle.foreground = Color.win32_new (display, attr.crText.cr);", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\tcase OS.TF_CT_SYSCOLOR:", "-\t\t\t\t\t\t\t\t\t\tint colorRef = OS.GetSysColor (attr.crText.cr);", "-\t\t\t\t\t\t\t\t\t\tstyle.foreground = Color.win32_new (display, colorRef);", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tswitch (attr.crBk.type) {", "-\t\t\t\t\t\t\t\t\tcase OS.TF_CT_COLORREF:", "-\t\t\t\t\t\t\t\t\t\tstyle.background = Color.win32_new (display, attr.crBk.cr);", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\tcase OS.TF_CT_SYSCOLOR:", "-\t\t\t\t\t\t\t\t\t\tint colorRef = OS.GetSysColor (attr.crBk.cr);", "-\t\t\t\t\t\t\t\t\t\tstyle.background = Color.win32_new (display, colorRef);", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tswitch (attr.crLine.type) {", "-\t\t\t\t\t\t\t\t\tcase OS.TF_CT_COLORREF:", "-\t\t\t\t\t\t\t\t\t\tstyle.underlineColor = Color.win32_new (display, attr.crLine.cr);", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\tcase OS.TF_CT_SYSCOLOR:", "-\t\t\t\t\t\t\t\t\t\tint colorRef = OS.GetSysColor (attr.crLine.cr);", "-\t\t\t\t\t\t\t\t\t\tstyle.underlineColor = Color.win32_new (display, colorRef);", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tstyle.underline = attr.lsStyle != OS.TF_LS_NONE;", "-\t\t\t\t\t\t\t\tswitch (attr.lsStyle) {", "-\t\t\t\t\t\t\t\t\tcase OS.TF_LS_SQUIGGLE:", "-\t\t\t\t\t\t\t\t\t\tstyle.underlineStyle = SWT.UNDERLINE_SQUIGGLE;", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\tcase OS.TF_LS_DASH:", "-\t\t\t\t\t\t\t\t\t\tstyle.underlineStyle = UNDERLINE_IME_DASH; ", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\tcase OS.TF_LS_DOT:", "-\t\t\t\t\t\t\t\t\t\tstyle.underlineStyle = UNDERLINE_IME_DOT;", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\tcase OS.TF_LS_SOLID:", "-\t\t\t\t\t\t\t\t\t\tstyle.underlineStyle = attr.fBoldLine ? UNDERLINE_IME_THICK : SWT.UNDERLINE_SINGLE;", "-\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t/* Added length check to avoid possibility of AIOOB, bug 444926 */", "+\t\t\t\t\t\t\tif (clauses [i] >= 0 && clauses [i] < attrs.length) {", "+\t\t\t\t\t\t\t\tattr = getDisplayAttribute (langID, attrs [clauses [i]]);", "+\t\t\t\t\t\t\t\tif (attr != null) {", "+\t\t\t\t\t\t\t\t\tswitch (attr.crText.type) {", "+\t\t\t\t\t\t\t\t\t\tcase OS.TF_CT_COLORREF:", "+\t\t\t\t\t\t\t\t\t\t\tstyle.foreground = Color.win32_new (display, attr.crText.cr);", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase OS.TF_CT_SYSCOLOR:", "+\t\t\t\t\t\t\t\t\t\t\tint colorRef = OS.GetSysColor (attr.crText.cr);", "+\t\t\t\t\t\t\t\t\t\t\tstyle.foreground = Color.win32_new (display, colorRef);", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tswitch (attr.crBk.type) {", "+\t\t\t\t\t\t\t\t\t\tcase OS.TF_CT_COLORREF:", "+\t\t\t\t\t\t\t\t\t\t\tstyle.background = Color.win32_new (display, attr.crBk.cr);", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase OS.TF_CT_SYSCOLOR:", "+\t\t\t\t\t\t\t\t\t\t\tint colorRef = OS.GetSysColor (attr.crBk.cr);", "+\t\t\t\t\t\t\t\t\t\t\tstyle.background = Color.win32_new (display, colorRef);", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tswitch (attr.crLine.type) {", "+\t\t\t\t\t\t\t\t\t\tcase OS.TF_CT_COLORREF:", "+\t\t\t\t\t\t\t\t\t\t\tstyle.underlineColor = Color.win32_new (display, attr.crLine.cr);", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase OS.TF_CT_SYSCOLOR:", "+\t\t\t\t\t\t\t\t\t\t\tint colorRef = OS.GetSysColor (attr.crLine.cr);", "+\t\t\t\t\t\t\t\t\t\t\tstyle.underlineColor = Color.win32_new (display, colorRef);", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tstyle.underline = attr.lsStyle != OS.TF_LS_NONE;", "+\t\t\t\t\t\t\t\t\tswitch (attr.lsStyle) {", "+\t\t\t\t\t\t\t\t\t\tcase OS.TF_LS_SQUIGGLE:", "+\t\t\t\t\t\t\t\t\t\t\tstyle.underlineStyle = SWT.UNDERLINE_SQUIGGLE;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase OS.TF_LS_DASH:", "+\t\t\t\t\t\t\t\t\t\t\tstyle.underlineStyle = UNDERLINE_IME_DASH; ", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase OS.TF_LS_DOT:", "+\t\t\t\t\t\t\t\t\t\t\tstyle.underlineStyle = UNDERLINE_IME_DOT;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tcase OS.TF_LS_SOLID:", "+\t\t\t\t\t\t\t\t\t\t\tstyle.underlineStyle = attr.fBoldLine ? UNDERLINE_IME_THICK : SWT.UNDERLINE_SINGLE;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t}"]}], "num": 35464}