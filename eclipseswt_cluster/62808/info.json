{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ac62bbd3ba79381e0e1f495dede97b8c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a24a2b76fc5aebaa5e3d0b3c1263336e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Icon Exe/org/eclipse/swt/tools/internal/IconExe.java", "commitBeforeChange": "42881bb0365086429aa26bec2128fc1d656b793d", "commitAfterChange": "d41583888d52520c4948538d87f43eed22fb75e3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\t \tstatic ImageData[] loadIcons(String program) throws FileNotFoundException, IOException", "signatureAfterChange": "\t \tstatic ImageData[] loadIcons(String program) throws FileNotFoundException, IOException", "diff": ["-\t\tRandomAccessFile raf = new RandomAccessFile(program, \"r\");", "-\t\tIconExe iconExe = new IconExe();", "-\t\tIconResInfo[] iconInfo = iconExe.getIcons(raf);", "-\t\tImageData[] data = new ImageData[iconInfo.length];", "-\t\tfor (int i = 0; i < data.length; i++) data[i] = iconInfo[i].data;", "-\t\traf.close();", "-\t\treturn data;", "+\t\ttry (RandomAccessFile raf = new RandomAccessFile(program, \"r\")) {", "+\t\t\tIconExe iconExe = new IconExe();", "+\t\t\tIconResInfo[] iconInfo = iconExe.getIcons(raf);", "+\t\t\tImageData[] data = new ImageData[iconInfo.length];", "+\t\t\tfor (int i = 0; i < data.length; i++) data[i] = iconInfo[i].data;", "+\t\t\treturn data;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99004fb80a91cf4d519e41985dc9ab79", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Icon Exe/org/eclipse/swt/tools/internal/IconExe.java", "commitBeforeChange": "42881bb0365086429aa26bec2128fc1d656b793d", "commitAfterChange": "d41583888d52520c4948538d87f43eed22fb75e3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\t \tstatic int unloadIcons(String program, ImageData[] icons) throws FileNotFoundException, IOException", "signatureAfterChange": "\t \tstatic int unloadIcons(String program, ImageData[] icons) throws FileNotFoundException, IOException", "diff": ["-\t\tRandomAccessFile raf = new RandomAccessFile(program, \"rw\");", "-\t\tIconExe iconExe = new IconExe();", "-\t\tIconResInfo[] iconInfo = iconExe.getIcons(raf);", "-\t\tint cnt = 0;", "-\t\tfor (int i = 0; i < iconInfo.length; i++) {", "-\t\t\tfor (int j = 0; j < icons.length; j++)", "-\t\t\tif (iconInfo[i].data.width == icons[j].width && ", "-\t\t\t\ticonInfo[i].data.height == icons[j].height && ", "-\t\t\t\ticonInfo[i].data.depth == icons[j].depth) {", "-\t\t\t\traf.seek(iconInfo[i].offset);", "-\t\t\t\tunloadIcon(raf, icons[j]);", "-\t\t\t\tcnt++;", "+\t\ttry (RandomAccessFile raf = new RandomAccessFile(program, \"rw\")) {", "+\t\t\tIconExe iconExe = new IconExe();", "+\t\t\tIconResInfo[] iconInfo = iconExe.getIcons(raf);", "+\t\t\tint cnt = 0;", "+\t\t\tfor (int i = 0; i < iconInfo.length; i++) {", "+\t\t\t\tfor (int j = 0; j < icons.length; j++)", "+\t\t\t\t\tif (iconInfo[i].data.width == icons[j].width && ", "+\t\t\t\t\ticonInfo[i].data.height == icons[j].height && ", "+\t\t\t\t\ticonInfo[i].data.depth == icons[j].depth) {", "+\t\t\t\t\t\traf.seek(iconInfo[i].offset);", "+\t\t\t\t\t\tunloadIcon(raf, icons[j]);", "+\t\t\t\t\t\tcnt++;", "+\t\t\t\t\t}", "+\t\t\treturn iconInfo.length - cnt;", "-\t\traf.close();", "-\t\treturn iconInfo.length - cnt;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fab86ea0220c26c6f28b8dcdaade7e7a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mozilla Generation/org/eclipse/swt/tools/internal/MozillaGenerator.java", "commitBeforeChange": "42881bb0365086429aa26bec2128fc1d656b793d", "commitAfterChange": "d41583888d52520c4948538d87f43eed22fb75e3", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic void parse(String src, String destPath)", "signatureAfterChange": " \tpublic void parse(String src, String destPath)", "diff": ["-\t\t\tBufferedReader br = new BufferedReader(r);", "-\t\t\twhile ((b[cntLines] = br.readLine()) != null) {", "-\t\t\t\tcntLines++;", "+\t\t\ttry (BufferedReader br = new BufferedReader(r)) {", "+\t\t\t\twhile ((b[cntLines] = br.readLine()) != null) {", "+\t\t\t\t\tcntLines++;", "+\t\t\t\t}", "-\t\t\tbr.close();"]}], "num": 62808}