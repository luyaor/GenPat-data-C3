{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "11ea12a6a8ece710cdd0384b6e842e22", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fd7c3e72d70d9e4a025cbcb996c448d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "bbe34f2e9f30dc6618286a73fece569ceb79a3e8", "commitAfterChange": "e352283006dccad1eb5102d4387c1f8e07732a91", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 83, "signatureBeforeChange": " public void setColumnOrder (int [] order)", "signatureAfterChange": " public void setColumnOrder (int [] order)", "diff": ["-\t//TODO", "+\tif (order.length != columnCount) error (SWT.ERROR_INVALID_ARGUMENT);", "+\tint [] oldOrder = getColumnOrder ();", "+\tboolean reorder = false;", "+\tboolean [] seen = new boolean [columnCount];", "+\tfor (int i=0; i<order.length; i++) {", "+\t\tint index = order [i];", "+\t\tif (index < 0 || index >= columnCount) error (SWT.ERROR_INVALID_ARGUMENT);", "+\t\tif (seen [index]) error (SWT.ERROR_INVALID_ARGUMENT);", "+\t\tseen [index] = true;", "+\t\tif (order [i] != oldOrder [i]) reorder = true;", "+\t}", "+\tif (!reorder) return;", "+\tfor (int i = 0; i < order.length; i++) {", "+\t\tTreeColumn column = columns [order [i]];", "+\t\tint index = OS.IList_IndexOf (gvColumns, column.handle);", "+\t\tif (index != i) OS.ObservableCollectionGridViewColumn_Move (gvColumns, index, i);\t", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed4c5a6e48b9246e257eeadffb9438af", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "15cd4b3b02a9366a3c91dffa7606a25c162b7d95", "commitAfterChange": "b6dab3dc248d9135e08e65943e15a6ae36c16846", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 79, "signatureBeforeChange": " public void setColumnOrder (int [] order)", "signatureAfterChange": " public void setColumnOrder (int [] order)", "diff": ["-\t//TODO", "+\tif (order.length != columnCount) error (SWT.ERROR_INVALID_ARGUMENT);", "+\tint [] oldOrder = getColumnOrder ();", "+\tboolean reorder = false;", "+\tboolean [] seen = new boolean [columnCount];", "+\tfor (int i=0; i<order.length; i++) {", "+\t\tint index = order [i];", "+\t\tif (index < 0 || index >= columnCount) error (SWT.ERROR_INVALID_ARGUMENT);", "+\t\tif (seen [index]) error (SWT.ERROR_INVALID_ARGUMENT);", "+\t\tseen [index] = true;", "+\t\tif (order [i] != oldOrder [i]) reorder = true;", "+\t}", "+\tif (!reorder) return;", "+\tint gvColumns = OS.GridView_Columns (gridViewHandle);", "+\tfor (int i = 0; i < order.length; i++) {", "+\t\tTableColumn column = columns [order [i]];", "+\t\tint index = OS.IList_IndexOf (gvColumns, column.handle);", "+\t\tif (index != i) OS.ObservableCollectionGridViewColumn_Move (gvColumns, index, i);\t", "+\t}", "+\tOS.GCHandle_Free (gvColumns);"]}], "num": 21703}