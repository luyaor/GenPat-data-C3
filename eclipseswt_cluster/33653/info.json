{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "21e2d37a029540a7a6e8e76de872668d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8b573ed4b23a7bc4d517a38822e7d33", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "a2f6c56c96d7e25e3d41f0e2f92b4603ac8fff5c", "commitAfterChange": "afb3a79505a19ae9fb8bffcff94849cca01815db", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "\r \r public void setRedraw (boolean redraw)", "signatureAfterChange": "\r \r public void setRedraw (boolean redraw)", "diff": ["+\r", "+\t\t\t/*\r", "+\t\t\t* Bug in Windows.  For some reason, when WM_SETREDRAW is used \r", "+\t\t\t* to turn redraw back on this may result in a WM_SIZE.  If the table column\r", "+\t\t\t* widths are adjusted in the WM_SIZE callback, blank lines may be\r", "+\t\t\t* inserted at the top of the widget.  A call to LVM_GETTOPINDEX will\r", "+\t\t\t* return a negative number (this is an impossible result).  The fix is to\r", "+\t\t\t* ignore any resize generated by WM_SETREDRAW and defer the work\r", "+\t\t\t* until the WM_SETREDRAW has returned.\r", "+\t\t\t*/\r", "+\t\t\tignoreResize = true;\r", "+\t\t\tif (!ignoreResize) {\r", "+\t\t\t\tint count = getChildrenCount ();\r", "+\t\t\t\tif (count > 1 && hdwp == 0) {\r", "+\t\t\t\t\thdwp = OS.BeginDeferWindowPos (count);\r", "+\t\t\t\t}\r", "+\t\t\t\tif (layout != null) layout.layout (this, false);\r", "+\t\t\t\tsendEvent (SWT.Resize);\r", "+\t\t\t\t// widget may be disposed at this point\r", "+\t\t\t\tif (isDisposed ()) return;\r", "+\t\t\t\tint oldHdwp = hdwp;\r", "+\t\t\t\thdwp = 0;\r", "+\t\t\t\tif (oldHdwp != 0) OS.EndDeferWindowPos (oldHdwp);\r", "+\t\t\t}\r", "+\t\t\tignoreResize = false;\r", "+\t\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ebc5ee043216e844e397156ed2b18a7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "f8f6911662cdf639af13524cf14867c235847d09", "commitAfterChange": "469a0f34eb8c282719498f4d15cb3ef0bd826b45", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "\r \r public void setRedraw (boolean redraw)", "signatureAfterChange": "\r \r public void setRedraw (boolean redraw)", "diff": ["-\t\t\t* to turn redraw back on this may result in a WM_SIZE.  If the table column\r", "-\t\t\t* widths are adjusted in the WM_SIZE callback, blank lines may be\r", "-\t\t\t* inserted at the top of the widget.  A call to LVM_GETTOPINDEX will\r", "-\t\t\t* return a negative number (this is an impossible result).  The fix is to\r", "-\t\t\t* ignore any resize generated by WM_SETREDRAW and defer the work\r", "-\t\t\t* until the WM_SETREDRAW has returned.\r", "+\t\t\t* to turn redraw back on this may result in a WM_SIZE.  If the\r", "+\t\t\t* table column widths are adjusted in WM_SIZE, blank lines may\r", "+\t\t\t* be inserted at the top of the widget.  A call to LVM_GETTOPINDEX\r", "+\t\t\t* will return a negative number (this is an impossible result).\r", "+\t\t\t* The fix is to ignore any resize generated by WM_SETREDRAW and\r", "+\t\t\t* defer the work until the WM_SETREDRAW has returned.\r", "+\t\t\t*\r", "+\t\t\t* NOTE: The window proc for the table does not redraw the\r", "+\t\t\t* non-client area (ie. the border and scroll bars).  This \r", "+\t\t\t* must be explicitly redrawn.  This code can be removed\r", "+\t\t\t* if we stop relying on the undocuemented behavior.\r", "+\t\t\tif (OS.IsWinCE) {\r", "+\t\t\t\tOS.InvalidateRect (handle, null, false);\r", "+\t\t\t} else {\r", "+\t\t\t\tOS.RedrawWindow (handle, null, 0, OS.RDW_FRAME | OS.RDW_INVALIDATE);\r", "+\t\t\t}\r"]}], "num": 33653}