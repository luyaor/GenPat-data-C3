{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a8c18b7ae62e8fb7db6a2330537fe72", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "924c454a1de813d95fc6f8850b3c0515", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "40b1ad7df0ca037b7141c4b8674859f29149ccbc", "commitAfterChange": "c560c35f788a0db77a3ab2647c1c0d92838db914", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 88, "signatureBeforeChange": " boolean setItemSize()", "signatureAfterChange": " boolean setItemSize()", "diff": ["-\tif (items.length > 1) {", "+\tif (items.length > 0) {", "+\t\ttabAreaWidth = Math.max(0, tabAreaWidth);", "-\t\t\tint minWidth = MIN_TAB_WIDTH * tabHeight;", "+\t\t\tint minWidth = Math.min(tabAreaWidth, MIN_TAB_WIDTH * tabHeight);", "-\t\t\t\tshowChevron = true;", "+\t\t\t\tshowChevron = items.length > 1;", "-\t\tif (!simple && i == selectedIndex) widths[i] += curveWidth - curveIndent;", "-\t\tif (tab.height != tabHeight || tab.width != widths[i]) {", "+\t\tint width = widths[i];", "+\t\tif (!simple && i == selectedIndex) width += curveWidth - curveIndent;", "+\t\tif (tab.height != tabHeight || tab.width != width) {", "-\t\t\ttab.width = widths[i];", "+\t\t\ttab.width = width;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea7b272c8aeea009a85faca41c64d3a1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "c63ca636edfbea4cd55ccc07da414186be375ce0", "commitAfterChange": "e38d4aec3f79c42ea6666a7a37c026187a8aa6ea", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tint width = 0, height = 0;", "-\tint border = getBorderWidth ();", "+\tint width = 0, height = 0, border = getBorderWidth ();", "-\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "-\tboolean isImage = (bits & OS.SS_OWNERDRAW) == OS.SS_OWNERDRAW;", "-\tif (isImage) {", "-\t\tif (image != null) {", "-\t\t\tRectangle rect = image.getBounds();", "-\t\t\twidth = rect.width;", "-\t\t\theight = rect.height;", "-\t\t}", "+\tif (image != null) {", "+\t\tRectangle rect = image.getBounds();", "+\t\twidth = rect.width;", "+\t\tif (text.length () != 0) width += MARGIN;", "+\t\theight = rect.height;", "+\t}", "+\tint hDC = OS.GetDC (handle);", "+\tint newFont = OS.SendMessage (handle, OS.WM_GETFONT, 0, 0);", "+\tint oldFont = OS.SelectObject (hDC, newFont);", "+\tint length = OS.GetWindowTextLength (handle);", "+\tif (length == 0) {", "+\t\tTEXTMETRIC tm = OS.IsUnicode ? (TEXTMETRIC) new TEXTMETRICW () : new TEXTMETRICA ();", "+\t\tOS.GetTextMetrics (hDC, tm);", "+\t\theight = Math.max (height, tm.tmHeight);", "-\t\tint hDC = OS.GetDC (handle);", "-\t\tint newFont = OS.SendMessage (handle, OS.WM_GETFONT, 0, 0);", "-\t\tint oldFont = OS.SelectObject (hDC, newFont);", "-\t\tint length = OS.GetWindowTextLength (handle);", "-\t\twidth = rect.right - rect.left;", "-\t\theight = rect.bottom - rect.top;", "-\t\tif (height == 0) {", "-\t\t\tTEXTMETRIC tm = OS.IsUnicode ? (TEXTMETRIC) new TEXTMETRICW () : new TEXTMETRICA ();", "-\t\t\tOS.GetTextMetrics (hDC, tm);", "-\t\t\theight = tm.tmHeight;", "-\t\t}", "-\t\tif (newFont != 0) OS.SelectObject (hDC, oldFont);", "-\t\tOS.ReleaseDC (handle, hDC);", "+\t\twidth += rect.right - rect.left;", "+\t\theight = Math.max (height, rect.bottom - rect.top);", "+\tif (newFont != 0) OS.SelectObject (hDC, oldFont);", "+\tOS.ReleaseDC (handle, hDC);", "-\twidth += border * 2; height += border * 2;", "+\twidth += border * 2;", "+\theight += border * 2;", "-\t* The fix is to increase the size.", "+\t* The fix is to increase the width to include", "+\t* this trim.", "-\t\t//TEST ME", "-\t\tif (!isImage) width += 2;", "+\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "+\t\tboolean isOwnerDraw = (bits & OS.SS_OWNERDRAW) == OS.SS_OWNERDRAW;", "+\t\tif (!isOwnerDraw) width += 2;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68a3a3724e129f06a09a5d598435687f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/CoolItem.java", "commitBeforeChange": "74f56d256b919506c5f8abd917e5516d9683a4a7", "commitAfterChange": "73d0383bde9f8b807b0515dcbc0d49aa7c7346c7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void setPreferredSize (int width, int height)", "signatureAfterChange": " public void setPreferredSize (int width, int height)", "diff": ["+\twidth = Math.max (0, width);", "+\theight = Math.max (0, height);", "-\trbBand.cxIdeal = width - rect.left - rect.right - 2;", "+\trbBand.cxIdeal = Math.max (0, width - rect.left - rect.right - CoolBar.INSET);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e6a46cfdb020bc763cde435a6084375", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/CoolItem.java", "commitBeforeChange": "74f56d256b919506c5f8abd917e5516d9683a4a7", "commitAfterChange": "73d0383bde9f8b807b0515dcbc0d49aa7c7346c7", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void setSize (int width, int height)", "signatureAfterChange": " public void setSize (int width, int height)", "diff": ["+\twidth = Math.max (0, width);", "+\theight = Math.max (0, height);", "-\t\trbBand.cxIdeal = width - rect.left - rect.right - 2;", "+\t\trbBand.cxIdeal = Math.max (0, width - rect.left - rect.right - CoolBar.INSET);"]}], "num": 62123}