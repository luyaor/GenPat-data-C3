{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a8553eca0026fe22c186b5e2d8228e59", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e42849e13f6f2ab6affaf48705e0dfa9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/JNIGeneratorAppUI.java", "commitBeforeChange": "dc99d9bb9843280e22befd705fd4e0f15ba22ec9", "commitAfterChange": "da66ed50e7f2fec0e5faf4b617a73367a0acde7d", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": "  void updateMembers()", "signatureAfterChange": "  void updateMembers()", "diff": ["-\tMetaData metaData = app.getMetaData();", "-\tClassData classData = (ClassData)classItem.getData();", "-\tClass clazz = classData.getClazz();", "+\tJNIClass clazz = (JNIClass)classItem.getData();", "-\tMethod[] methods = clazz.getDeclaredMethods();", "+\tJNIMethod[] methods = clazz.getDeclaredMethods();", "-\t\tMethod method = methods[i];", "+\t\tJNIMethod method = methods[i];", "-\t\t\tMethod method = methods[i];", "+\t\t\tJNIMethod method = methods[i];", "-\t\t\tMethodData methodData = metaData.getMetaData(method);", "-\t\t\titem.setData(methodData);", "+\t\t\titem.setData(method);", "-\t\t\titem.setChecked(methodData.getGenerate());", "-\t\t\titem.setText(METHOD_FLAGS_COLUMN, getFlagsString(methodData.getFlags()));", "-\t\t\titem.setText(METHOD_ACCESSOR_COLUMN, methodData.getAccessor());", "+\t\t\titem.setChecked(method.getGenerate());", "+\t\t\titem.setText(METHOD_FLAGS_COLUMN, getFlagsString(method.getFlags()));", "+\t\t\titem.setText(METHOD_ACCESSOR_COLUMN, method.getAccessor());", "-\t\tField[] fields = clazz.getDeclaredFields();\t", "+\t\tJNIField[] fields = clazz.getDeclaredFields();\t", "-\t\t\tField field = fields[i];", "+\t\t\tJNIField field = fields[i];", "-\t\t\tFieldData fieldData = metaData.getMetaData(field);", "-\t\t\titem.setData(fieldData);", "+\t\t\titem.setData(field);", "-\t\t\titem.setChecked(fieldData.getGenerate());", "-\t\t\titem.setText(FIELD_CAST_COLUMN, fieldData.getCast());", "-\t\t\titem.setText(FIELD_FLAGS_COLUMN, getFlagsString(fieldData.getFlags()));", "-\t\t\titem.setText(FIELD_ACCESSOR_COLUMN, fieldData.getAccessor());", "+\t\t\titem.setChecked(field.getGenerate());", "+\t\t\titem.setText(FIELD_CAST_COLUMN, field.getCast());", "+\t\t\titem.setText(FIELD_FLAGS_COLUMN, getFlagsString(field.getFlags()));", "+\t\t\titem.setText(FIELD_ACCESSOR_COLUMN, field.getAccessor());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4e2e2e7dbb855d36c375c388f4d723f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/JNIGeneratorAppUI.java", "commitBeforeChange": "dc99d9bb9843280e22befd705fd4e0f15ba22ec9", "commitAfterChange": "da66ed50e7f2fec0e5faf4b617a73367a0acde7d", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "  void updateGenerate(TableItem item)", "signatureAfterChange": "  void updateGenerate(TableItem item)", "diff": ["-\tMetaData metaData = app.getMetaData();", "-\tItemData itemData = (ItemData)item.getData();", "+\tJNIItem itemData = (JNIItem)item.getData();", "-\tif (itemData instanceof ClassData) {", "-\t\tClassData data = (ClassData)itemData;", "-\t\tmetaData.setMetaData(data.getClazz(), data);", "-\t} else if (itemData instanceof FieldData) {", "-\t\tFieldData data = (FieldData)itemData;", "-\t\titem.setText(FIELD_FLAGS_COLUMN, getFlagsString(data.getFlags()));", "-\t\tmetaData.setMetaData(data.getField(), data);", "-\t} else if (itemData instanceof MethodData) {", "-\t\tMethodData data = (MethodData)itemData;", "-\t\titem.setText(METHOD_FLAGS_COLUMN, getFlagsString(data.getFlags()));", "-\t\tmetaData.setMetaData(data.getMethod(), data);", "-\t} else if (itemData instanceof ParameterData) {", "-\t\tParameterData data = (ParameterData)itemData;", "-\t\titem.setText(PARAM_FLAGS_COLUMN, getFlagsString(data.getFlags()));", "-\t\tmetaData.setMetaData(data.getMethod(), data.getParameter(), data);", "-\t}", "+//\tMetaData metaData = app.getMetaData();", "+//\tif (itemData instanceof JNIClass) {", "+//\t\tClassData data = (ClassData)itemData;", "+//\t\tmetaData.setMetaData(data.getClazz(), data);", "+//\t} else if (itemData instanceof FieldData) {", "+//\t\tFieldData data = (FieldData)itemData;", "+//\t\titem.setText(FIELD_FLAGS_COLUMN, getFlagsString(data.getFlags()));", "+//\t\tmetaData.setMetaData(data.getField(), data);", "+//\t} else if (itemData instanceof MethodData) {", "+//\t\tMethodData data = (MethodData)itemData;", "+//\t\titem.setText(METHOD_FLAGS_COLUMN, getFlagsString(data.getFlags()));", "+//\t\tmetaData.setMetaData(data.getMethod(), data);", "+//\t} else if (itemData instanceof ParameterData) {", "+//\t\tParameterData data = (ParameterData)itemData;", "+//\t\titem.setText(PARAM_FLAGS_COLUMN, getFlagsString(data.getFlags()));", "+//\t\tmetaData.setMetaData(data.getMethod(), data.getParameter(), data);", "+//\t}"]}], "num": 41469}