{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "68f55a50204e6e0d889ea0add7831624", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cb00b6e262201590a4f81199394bbf8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "d6a36d8b7f3dd367aff8479d4445ce8e13db19a6", "commitAfterChange": "156b3671e8f8498d491d682297aab9ef33479ff6", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 71, "signatureBeforeChange": "  void setPen(int newColor, int newWidth, int lineStyle, int capStyle, int joinStyle)", "signatureAfterChange": "  void setPen(int newColor, int newWidth, int lineStyle, int capStyle, int joinStyle, int[] dashes)", "diff": ["-void setPen(int newColor, int newWidth, int lineStyle, int capStyle, int joinStyle) {", "+void setPen(int newColor, int newWidth, int lineStyle, int capStyle, int joinStyle, int[] dashes) {", "-\t\tif (width <= 1 && newWidth > 1) {", "+\t\tif (width <= 1 && (newWidth > 1 || lineStyle == OS.PS_USERSTYLE)) {", "-\t\tOS.GetObject(hPen, size, logPen);", "+\t\tif (size <= EXTLOGPEN.sizeof) {", "+\t\t\tOS.GetObject(hPen, size, logPen);", "+\t\t} else {", "+\t\t\tint hHeap = OS.GetProcessHeap();", "+\t\t\tint ptr = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, size);", "+\t\t\tOS.GetObject(hPen, size, ptr);", "+\t\t\tOS.MoveMemory(logPen, ptr, EXTLOGPEN.sizeof);", "+\t\t\tOS.HeapFree(hHeap, 0, ptr);", "+\t\t}", "-\t\tif ((style & OS.PS_STYLE_MASK) != lineStyle) {", "+\t\tif ((style & OS.PS_STYLE_MASK) != lineStyle || (style & OS.PS_STYLE_MASK) == OS.PS_USERSTYLE) {", "+\tif ((style & OS.PS_STYLE_MASK) != OS.PS_USERSTYLE) dashes = null;", "-\t* Feature in Windows.  Windows XP does not honour the line style", "-\t* for pens wider than 1 pixel created with CreatePen().  The fix", "+\t* Feature in Windows.  Windows does not honour line styles other then", "+\t* PS_SOLID for pens wider than 1 pixel created with CreatePen().  The fix", "-\tif (!OS.IsWinCE && (extPen || width > 1)) {", "+\tif (!OS.IsWinCE && (extPen || width > 1 || (style & OS.PS_STYLE_MASK) == OS.PS_USERSTYLE)) {", "-\t\tnewPen = OS.ExtCreatePen (style | OS.PS_GEOMETRIC, width, logBrush, 0, null);", "+\t\tnewPen = OS.ExtCreatePen (style | OS.PS_GEOMETRIC, width, logBrush, dashes != null ? dashes.length : 0, dashes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "158d860b17e4e0cc1b7e7f71029eb2ca", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "dfd4650fd75100a5a002cab81ff3277b16862845", "commitAfterChange": "d01fac9d213e0fa304edfed85d0f0844e9d59792", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " public int getLineStyle()", "signatureAfterChange": " public int getLineStyle()", "diff": ["-\tint style, size;", "-\tint hPen = OS.GetCurrentObject(handle, OS.OBJ_PEN);", "-\tif ((size = OS.GetObject(hPen, 0, (LOGPEN)null)) == LOGPEN.sizeof) {", "-\t\tLOGPEN logPen = new LOGPEN();", "-\t\tOS.GetObject(hPen, LOGPEN.sizeof, logPen);", "-\t\tstyle = logPen.lopnStyle;", "-\t} else {", "-\t\tEXTLOGPEN logPen = new EXTLOGPEN();", "-\t\tif (size <= EXTLOGPEN.sizeof) {", "-\t\t\tOS.GetObject(hPen, size, logPen);", "-\t\t} else {", "-\t\t\tint hHeap = OS.GetProcessHeap();", "-\t\t\tint ptr = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, size);", "-\t\t\tOS.GetObject(hPen, size, ptr);", "-\t\t\tOS.MoveMemory(logPen, ptr, EXTLOGPEN.sizeof);", "-\t\t\tOS.HeapFree(hHeap, 0, ptr);", "-\t\t}", "-\t\tstyle = logPen.elpPenStyle & OS.PS_STYLE_MASK;", "-\t}", "-\tswitch (style) {", "-\t\tcase OS.PS_SOLID:\t\treturn SWT.LINE_SOLID;", "-\t\tcase OS.PS_DASH:\t\treturn SWT.LINE_DASH;", "-\t\tcase OS.PS_DOT:\t\t\treturn SWT.LINE_DOT;", "-\t\tcase OS.PS_DASHDOT:\t\treturn SWT.LINE_DASHDOT;", "-\t\tcase OS.PS_DASHDOTDOT:\treturn SWT.LINE_DASHDOTDOT;", "-\t\tcase OS.PS_USERSTYLE:\treturn SWT.LINE_CUSTOM;", "-\t\tdefault:\t\t\t\treturn SWT.LINE_SOLID;", "-\t}", "+\treturn data.lineStyle;"]}], "num": 14608}