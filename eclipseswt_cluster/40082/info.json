{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2798f095e17476ec07074bd846f6ae24", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d552965bc09761df30df61dfb54ef17", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TrayItem.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["-\t\tint /*long*/ id = OS.gtk_plug_get_id (handle);", "+\t\tlong /*int*/ id = OS.gtk_plug_get_id (handle);", "-\t\tint /*long*/ screen = OS.gdk_screen_get_default ();", "+\t\tlong /*int*/ screen = OS.gdk_screen_get_default ();", "-\t\tint /*long*/ trayAtom = OS.gdk_atom_intern (trayBuffer, true);", "-\t\tint /*long*/ xTrayAtom = OS.gdk_x11_atom_to_xatom (trayAtom);", "-\t\tint /*long*/ xDisplay = OS.gdk_x11_display_get_xdisplay(OS.gdk_display_get_default());", "-\t\tint /*long*/ trayWindow = OS.XGetSelectionOwner (xDisplay, xTrayAtom);", "+\t\tlong /*int*/ trayAtom = OS.gdk_atom_intern (trayBuffer, true);", "+\t\tlong /*int*/ xTrayAtom = OS.gdk_x11_atom_to_xatom (trayAtom);", "+\t\tlong /*int*/ xDisplay = OS.gdk_x11_display_get_xdisplay(OS.gdk_display_get_default());", "+\t\tlong /*int*/ trayWindow = OS.XGetSelectionOwner (xDisplay, xTrayAtom);", "-\t\tint /*long*/ messageAtom = OS.gdk_atom_intern (messageBuffer, true);", "-\t\tint /*long*/ xMessageAtom = OS.gdk_x11_atom_to_xatom (messageAtom);", "+\t\tlong /*int*/ messageAtom = OS.gdk_atom_intern (messageBuffer, true);", "+\t\tlong /*int*/ xMessageAtom = OS.gdk_x11_atom_to_xatom (messageAtom);", "-\t\tint /*long*/ clientEvent = OS.g_malloc (XClientMessageEvent.sizeof);", "+\t\tlong /*int*/ clientEvent = OS.g_malloc (XClientMessageEvent.sizeof);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce1031db69627ffd499f85f49d9c6fb8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public String open ()", "signatureAfterChange": " public String open ()", "diff": ["-\tint /*long*/ hHeap = OS.GetProcessHeap ();", "+\tlong /*int*/ hHeap = OS.GetProcessHeap ();", "-\tint /*long*/ hwndOwner = parent.handle;", "-\tint /*long*/ hwndParent = parent.handle;", "+\tlong /*int*/ hwndOwner = parent.handle;", "+\tlong /*int*/ hwndParent = parent.handle;", "-\tint /*long*/ lpstrTitle = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount3);", "+\tlong /*int*/ lpstrTitle = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount3);", "-\tint /*long*/ lpstrFilter = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount4);", "+\tlong /*int*/ lpstrFilter = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount4);", "-\tint /*long*/ lpstrFile = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount);", "+\tlong /*int*/ lpstrFile = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount);", "-\tint /*long*/ lpstrInitialDir = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount5);", "+\tlong /*int*/ lpstrInitialDir = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount5);", "-\t\t\tint /*long*/ lpfnHook = callback.getAddress ();", "+\t\t\tlong /*int*/ lpfnHook = callback.getAddress ();", "-\tint /*long*/ lpstrDefExt = 0;", "+\tlong /*int*/ lpstrDefExt = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a7e6a696f3a5f1fee06cd65515dfd2b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " public void getClipping (Region region)", "signatureAfterChange": " public void getClipping (Region region)", "diff": ["-\tint /*long*/ gdipGraphics = data.gdipGraphics;", "+\tlong /*int*/ gdipGraphics = data.gdipGraphics;", "-\t\tint /*long*/ rgn = Gdip.Region_new();", "+\t\tlong /*int*/ rgn = Gdip.Region_new();", "-\t\t\tint /*long*/ matrix = Gdip.Matrix_new(1, 0, 0, 1, 0, 0);", "-\t\t\tint /*long*/ identity = Gdip.Matrix_new(1, 0, 0, 1, 0, 0);", "+\t\t\tlong /*int*/ matrix = Gdip.Matrix_new(1, 0, 0, 1, 0, 0);", "+\t\t\tlong /*int*/ identity = Gdip.Matrix_new(1, 0, 0, 1, 0, 0);", "-\t\t\tint /*long*/ hRgn = Gdip.Region_GetHRGN(rgn, data.gdipGraphics);", "+\t\t\tlong /*int*/ hRgn = Gdip.Region_GetHRGN(rgn, data.gdipGraphics);", "-\t\tint /*long*/ metaRgn = OS.CreateRectRgn (0, 0, 0, 0);", "+\t\tlong /*int*/ metaRgn = OS.CreateRectRgn (0, 0, 0, 0);", "-\t\tint /*long*/ hwnd = data.hwnd;", "+\t\tlong /*int*/ hwnd = data.hwnd;", "-\t\t\tint /*long*/ sysRgn = OS.CreateRectRgn (0, 0, 0, 0);", "+\t\t\tlong /*int*/ sysRgn = OS.CreateRectRgn (0, 0, 0, 0);", "-\t\t\t\t\t\tint /*long*/ newSysRgn = OS.ExtCreateRegion(new float [] {-1, 0, 0, 1, 0, 0}, nBytes, lpRgnData);", "+\t\t\t\t\t\tlong /*int*/ newSysRgn = OS.ExtCreateRegion(new float [] {-1, 0, 0, 1, 0, 0}, nBytes, lpRgnData);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73f4a28bd0e773e10205b5e3621bb72a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  void _setImage (Image image)", "signatureAfterChange": "  void _setImage (Image image)", "diff": ["-\t\tint /*long*/ hImage = 0;", "+\t\tlong /*int*/ hImage = 0;", "-\t\t\t\t\tint /*long*/ hDC = OS.GetDC (handle);", "-\t\t\t\t\tint /*long*/ dstHdc = OS.CreateCompatibleDC (hDC);", "-\t\t\t\t\tint /*long*/ hBitmap = OS.CreateCompatibleBitmap (hDC, rect.width, rect.height);", "-\t\t\t\t\tint /*long*/ oldBitmap = OS.SelectObject (dstHdc, hBitmap);", "+\t\t\t\t\tlong /*int*/ hDC = OS.GetDC (handle);", "+\t\t\t\t\tlong /*int*/ dstHdc = OS.CreateCompatibleDC (hDC);", "+\t\t\t\t\tlong /*int*/ hBitmap = OS.CreateCompatibleBitmap (hDC, rect.width, rect.height);", "+\t\t\t\t\tlong /*int*/ oldBitmap = OS.SelectObject (dstHdc, hBitmap);", "-\t\t\t\t\t\tint /*long*/ srcHdc = OS.CreateCompatibleDC (hDC);", "-\t\t\t\t\t\tint /*long*/ oldSrcBitmap = OS.SelectObject (srcHdc, hImage);", "+\t\t\t\t\t\tlong /*int*/ srcHdc = OS.CreateCompatibleDC (hDC);", "+\t\t\t\t\t\tlong /*int*/ oldSrcBitmap = OS.SelectObject (srcHdc, hImage);", "-\t\t\t\t\t\tint /*long*/ newBrush = OS.CreateSolidBrush (control.getBackgroundPixel ());", "-\t\t\t\t\t\tint /*long*/ oldBrush = OS.SelectObject (dstHdc, newBrush);", "+\t\t\t\t\t\tlong /*int*/ newBrush = OS.CreateSolidBrush (control.getBackgroundPixel ());", "+\t\t\t\t\t\tlong /*int*/ oldBrush = OS.SelectObject (dstHdc, newBrush);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2be699072b4b015772a9d341b2bb6e3f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Theme/gtk/org/eclipse/swt/internal/theme/ButtonDrawData.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   void draw(Theme theme, GC gc, Rectangle bounds)", "signatureAfterChange": "   void draw(Theme theme, GC gc, Rectangle bounds)", "diff": ["-\tint /*long*/ drawable = gc.getGCData().drawable;", "+\tlong /*int*/ drawable = gc.getGCData().drawable;", "-\t\tint /*long*/ radioButtonHandle = theme.radioButtonHandle;", "-\t\tint /*long*/ gtkStyle = OS.gtk_widget_get_style (radioButtonHandle);", "+\t\tlong /*int*/ radioButtonHandle = theme.radioButtonHandle;", "+\t\tlong /*int*/ gtkStyle = OS.gtk_widget_get_style (radioButtonHandle);", "-\t\tint /*long*/ checkButtonHandle = theme.checkButtonHandle;", "-\t\tint /*long*/ gtkStyle = OS.gtk_widget_get_style (checkButtonHandle);", "+\t\tlong /*int*/ checkButtonHandle = theme.checkButtonHandle;", "+\t\tlong /*int*/ gtkStyle = OS.gtk_widget_get_style (checkButtonHandle);", "-\t\tint /*long*/ buttonHandle = theme.buttonHandle;", "-\t\tint /*long*/ gtkStyle = OS.gtk_widget_get_style (buttonHandle);", "+\t\tlong /*int*/ buttonHandle = theme.buttonHandle;", "+\t\tlong /*int*/ gtkStyle = OS.gtk_widget_get_style (buttonHandle);", "-\t\tint /*long*/ default_border_ptr = theme.getBorderProperty(buttonHandle, \"default-border\");", "+\t\tlong /*int*/ default_border_ptr = theme.getBorderProperty(buttonHandle, \"default-border\");", "-\t\tint /*long*/ default_outside_border_ptr = theme.getBorderProperty(buttonHandle, \"default-outside-border\");", "+\t\tlong /*int*/ default_outside_border_ptr = theme.getBorderProperty(buttonHandle, \"default-outside-border\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d3faaa8dca7a1cac245db3daca23f19", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  void drawBitmapTransparent(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, BITMAP bm, int imgWidth, int imgHeight)", "signatureAfterChange": "  void drawBitmapTransparent(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, BITMAP bm, int imgWidth, int imgHeight)", "diff": ["-\tint /*long*/ hBitmap = srcImage.handle;", "-\tint /*long*/ srcHdc = OS.CreateCompatibleDC(handle);", "-\tint /*long*/ oldSrcBitmap = OS.SelectObject(srcHdc, hBitmap);", "+\tlong /*int*/ hBitmap = srcImage.handle;", "+\tlong /*int*/ srcHdc = OS.CreateCompatibleDC(handle);", "+\tlong /*int*/ oldSrcBitmap = OS.SelectObject(srcHdc, hBitmap);", "-\t\tint /*long*/ maskHdc = OS.CreateCompatibleDC(handle);", "-\t\tint /*long*/ maskBitmap = OS.CreateBitmap(imgWidth, imgHeight, 1, 1, null);", "-\t\tint /*long*/ oldMaskBitmap = OS.SelectObject(maskHdc, maskBitmap);", "+\t\tlong /*int*/ maskHdc = OS.CreateCompatibleDC(handle);", "+\t\tlong /*int*/ maskBitmap = OS.CreateBitmap(imgWidth, imgHeight, 1, 1, null);", "+\t\tlong /*int*/ oldMaskBitmap = OS.SelectObject(maskHdc, maskBitmap);", "-\t\t\tint /*long*/ tempHdc = OS.CreateCompatibleDC(handle);", "-\t\t\tint /*long*/ tempBitmap = OS.CreateCompatibleBitmap(handle, destWidth, destHeight);\t", "-\t\t\tint /*long*/ oldTempBitmap = OS.SelectObject(tempHdc, tempBitmap);", "+\t\t\tlong /*int*/ tempHdc = OS.CreateCompatibleDC(handle);", "+\t\t\tlong /*int*/ tempBitmap = OS.CreateCompatibleBitmap(handle, destWidth, destHeight);\t", "+\t\t\tlong /*int*/ oldTempBitmap = OS.SelectObject(tempHdc, tempBitmap);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "baca1b8448ff5c4efc1472220cfde990", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void draw (GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "signatureAfterChange": " public void draw (GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "diff": ["-\tint /*long*/ hdc = gc.handle;", "+\tlong /*int*/ hdc = gc.handle;", "-\tint /*long*/ gdipGraphics = data.gdipGraphics;", "+\tlong /*int*/ gdipGraphics = data.gdipGraphics;", "-\tint /*long*/ gdipForeground = 0;", "-\tint /*long*/ gdipLinkColor = 0;", "+\tlong /*int*/ gdipForeground = 0;", "+\tlong /*int*/ gdipLinkColor = 0;", "-\tint /*long*/ gdipSelBackground = 0, gdipSelForeground = 0, gdipFont = 0, lastHFont = 0;", "-\tint /*long*/ selBackground = 0;", "+\tlong /*int*/ gdipSelBackground = 0, gdipSelForeground = 0, gdipFont = 0, lastHFont = 0;", "+\tlong /*int*/ selBackground = 0;", "-\t\t\t\t\t\tint /*long*/ hFont = getItemFont(run);", "+\t\t\t\t\t\tlong /*int*/ hFont = getItemFont(run);", "-\t\t\t\t\t\t\tint /*long*/ oldFont = OS.SelectObject(hdc, hFont);", "+\t\t\t\t\t\t\tlong /*int*/ oldFont = OS.SelectObject(hdc, hFont);", "-\t\t\t\t\t\tint /*long*/ gdipFg = gdipForeground;", "+\t\t\t\t\t\tlong /*int*/ gdipFg = gdipForeground;"]}], "num": 40082}