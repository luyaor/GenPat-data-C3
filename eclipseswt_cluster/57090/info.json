{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1512fd19e5345dc71057d03d0abb7ea5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "376071caa35cc7a873ac35f2661612b8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "308b9116476a6cd2f5761fcec1052293346dc425", "commitAfterChange": "bb8fa564c0e3c2a17ef2cd49950775ff06b505ec", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void createLayout ()", "signatureAfterChange": "  void createLayout ()", "diff": ["-\tOS.memcpy(ptr2, buffer, 4);\t", "-\tint[] tags = new int[]{OS.kATSUCGContextTag, OS.kATSULineLayoutOptionsTag};", "-\tint[] sizes = new int[]{4, 4};", "-\tint[] values = new int[]{ptr1, ptr2};", "+\tOS.memcpy(ptr2, buffer, 4);", "+\tint lineDir = OS.kATSULeftToRightBaseDirection;", "+\tif ((data.style & SWT.RIGHT_TO_LEFT) != 0) lineDir = OS.kATSURightToLeftBaseDirection;", "+\tint ptr3 = OS.NewPtr(1);", "+\tOS.memcpy(ptr3, new byte[] {(byte)lineDir}, 1);", "+\tint[] tags = new int[]{OS.kATSUCGContextTag, OS.kATSULineLayoutOptionsTag, OS.kATSULineDirectionTag};", "+\tint[] sizes = new int[]{4, 4, 1};", "+\tint[] values = new int[]{ptr1, ptr2, ptr3};", "+\tOS.DisposePtr(ptr3);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0bf89c32de3ccf7cb8178708ba01757", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "441698ecc1c76f73e590da9afb5676ceb4571947", "commitAfterChange": "7e69644e833915ee961adff3b1882f037d334978", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " void createHandle (int index)", "signatureAfterChange": " void createHandle (int index)", "diff": ["-\t/*", "-\t* Feature in Motif.  When items are added or removed", "-\t* from a list, it may request and be granted, a new", "-\t* preferred size.  This behavior is unwanted.  The fix", "-\t* is to create a parent for the list that will disallow", "-\t* geometry requests.", "-\t*/", "-    /* AW", "-\tint [] argList1 = {OS.XmNancestorSensitive, 1};", "-\tformHandle = OS.XmCreateForm (parentHandle, null, argList1, argList1.length / 2);", "-\tif (formHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\tint selectionPolicy = OS.XmBROWSE_SELECT, listSizePolicy = OS.XmCONSTANT;", "-\tif ((style & SWT.MULTI) != 0) {", "-\t\tselectionPolicy = OS.XmEXTENDED_SELECT;", "-\t\tif ((style & SWT.SIMPLE) != 0) selectionPolicy = OS.XmMULTIPLE_SELECT;", "-\t}", "-\tif ((style & SWT.H_SCROLL) == 0) listSizePolicy = OS.XmVARIABLE;", "-\tint [] argList2 = {", "-\t\tOS.XmNlistSizePolicy, listSizePolicy,", "-\t\tOS.XmNselectionPolicy, selectionPolicy,", "-\t\tOS.XmNtopAttachment, OS.XmATTACH_FORM,", "-\t\tOS.XmNbottomAttachment, OS.XmATTACH_FORM,", "-\t\tOS.XmNleftAttachment, OS.XmATTACH_FORM,", "-\t\tOS.XmNrightAttachment, OS.XmATTACH_FORM,", "-\t\tOS.XmNresizable, 0,", "-//\t\tOS.XmNmatchBehavior, OS.XmNONE,", "-\t};", "-\tif ((style & (SWT.H_SCROLL | SWT.V_SCROLL)) == 0) {", "-\t\thandle = OS.XmCreateList (formHandle, null, argList2, argList2.length / 2);", "-\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t} else {", "-\t\thandle = OS.XmCreateScrolledList (formHandle, null, argList2, argList2.length / 2);", "-\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\tscrolledHandle = OS.XtParent (handle);", "-\t}", "-    */", "-\t//OS.SetDataBrowserSelectionFlags(handle, OS.kDataBrowserSelectOnlyOne + OS.kDataBrowserDragSelect);", "-\tOS.SetDataBrowserHasScrollBars(handle, (style & SWT.H_SCROLL) != 0, (style & SWT.V_SCROLL) != 0);", "+\t/* Single or Multiple Selection */", "+\tint mode= OS.kDataBrowserSelectOnlyOne;", "+\tif ((style & SWT.MULTI) != 0)", "+\t\tmode= OS.kDataBrowserDragSelect | OS.kDataBrowserCmdTogglesSelection;", "+\tOS.SetDataBrowserSelectionFlags(handle, mode);", "+\t", "+\t/* hide the neader */", "+\t", "+\t/* enable scrollbars */", "+\tOS.SetDataBrowserHasScrollBars(handle, (style & SWT.H_SCROLL) != 0, (style & SWT.V_SCROLL) != 0);", "+\tif ((style & SWT.H_SCROLL) == 0)", "+\t\tOS.AutoSizeDataBrowserListViewColumns(handle);", "-\tint columnDesc= OS.newColumnDesc(COL_ID, OS.kDataBrowserTextType, OS.kDataBrowserListViewSelectionColumn, (short)30, (short)200);", "+\tint columnDesc= OS.newColumnDesc(COL_ID, OS.kDataBrowserTextType,", "+\t\t\t\t\tOS.kDataBrowserListViewSelectionColumn | OS.kDataBrowserDefaultPropertyFlags,", "+\t\t\t\t\t(short)0, (short)2000);", "-\t//OS.SetDataBrowserActiveItems(handle, true);"]}], "num": 57090}