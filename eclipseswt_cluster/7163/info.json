{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "217b61d4e404085b6a68ba25264498de", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d3211442b4e1213503300e96f04453f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "7ee9370fb1f257b0959b64e9c229131ca3b8dbfc", "commitAfterChange": "0311d68036ad50521d345e1a90470acd1e4bf9b4", "methodNumberBeforeChange": 138, "methodNumberAfterChange": 128, "signatureBeforeChange": "  boolean tableView_shouldTrackCell_forTableColumn_row(int id, int sel, \t\tint table, int cell, int tableColumn, int rowIndex)", "signatureAfterChange": "  void selectRowIndexes_byExtendingSelection (int id, int sel, int indexes, boolean extend)", "diff": ["+void selectRowIndexes_byExtendingSelection (int /*long*/ id, int /*long*/ sel, int /*long*/ indexes, boolean extend) {", "+\tif (preventSelect && !ignoreSelect) return;", "+\tif ((style & SWT.SINGLE) != 0 && !ignoreSelect) {", "+\t\tNSIndexSet set = new NSIndexSet(indexes);", "+\t\tif (set.count() == 0) return;", "+\t}", "+\tsuper.selectRowIndexes_byExtendingSelection (id, sel, indexes, extend);", "+}", "-", "-boolean tableView_shouldTrackCell_forTableColumn_row(int /*long*/ id, int /*long*/ sel,", "-\t\tint /*long*/ table, int /*long*/ cell, /*long*/ int /*long*/ tableColumn, int /*long*/ rowIndex) {", "-\tNSCell theCell = new NSCell(cell);", "-\tNSTableView tableView = (NSTableView)view;", "-\tif (theCell.isKindOfClass(OS.class_NSButtonCell)) {", "-\t\t// Allow tracking of the checkbox area of the button, not the text itself.", "-\t\tNSRect cellFrame = tableView.frameOfCellAtColumn(0, rowIndex);", "-\t\tNSRect imageFrame = theCell.imageRectForBounds(cellFrame);", "-\t\tNSPoint hitPoint = tableView.convertPoint_fromView_(NSApplication.sharedApplication().currentEvent().locationInWindow(), null);", "-\t\tboolean shouldTrack = OS.NSPointInRect(hitPoint, imageFrame) && (display.trackedButtonRow == -1 || display.trackedButtonRow == rowIndex) && !didSelect;", "-\t\tif (OS.NSPointInRect(hitPoint, imageFrame) && display.trackedButtonRow == -1 && !didSelect) display.trackedButtonRow = rowIndex;", "-\t\treturn shouldTrack;", "-\t} else {", "-\t\treturn tableView.isRowSelected(rowIndex);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0df8197956fee27ff97c722476bcfe0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "21db765cd71e211ed7a422832ea159585ff971e3", "commitAfterChange": "cfc1e42b8ee7293ce68f0fd9dcd0e1b2cb8bb08a", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " final void redrawHandle (int x, int y, int width, int height, int widgetHandle, boolean all)", "signatureAfterChange": " final void redrawHandle (int x, int y, int width, int height, int widgetHandle, boolean all)", "diff": ["-\t", "-\tif (false) {", "-\t\tint rgn= OS.NewRgn();", "-\t\tRect rect = new Rect();", "-\t\tOS.SetRect(rect, (short)x, (short)y, (short)(x + width), (short)(y + height));", "-\t\tOS.RectRgn(rgn, rect);", "-\t\tOS.HIViewSetNeedsDisplayInRegion(widgetHandle, rgn, true);", "-\t\tOS.DisposeRgn(rgn);", "-\t} else {", "-\t\tRect br= new Rect();", "-\t\tOS.GetControlBounds(widgetHandle, br);", "-\t    if (!OS.EmptyRect(br)) {", "-\t        x+= br.left;", "-\t        y+= br.top;", "-\t        if (width == 0)", "-\t        \twidth= br.right - br.left;", "-\t        else", "-\t\t\t\twidth+= 1; // AW strange workaround for Caret", "-\t        if (height == 0)", "-\t\t\t\theight= br.bottom - br.top;", "-\t                ", "-\t        int rgn= OS.NewRgn();", "-\t      \tRect rect = new Rect();", "-\t\t\tOS.SetRect(rect, (short)x, (short)y, (short)(x + width), (short)(y + height));", "-\t        OS.RectRgn(rgn, rect);", "-\t                ", "-\t        int region= OS.NewRgn();", "-\t        if (MacUtil.getVisibleRegion(widgetHandle, region, all) == OS.noErr) {", "-\t        ", "-\t            OS.SectRgn(region, rgn, region);", "-\t        ", "-\t            OS.InvalWindowRgn(OS.GetControlOwner(widgetHandle), region);", "-\t        }", "-\t        ", "-\t        OS.DisposeRgn(rgn);", "-\t        OS.DisposeRgn(region);", "-\t    }", "+\tRect r= new Rect();", "+\tOS.SetRect(r, (short)x, (short)y, (short)(x + width), (short)(y + height));", "+\tif (width <= 0 || height <= 0) {", "+\t\tOS.HIViewSetNeedsDisplay(widgetHandle, true);", "+\t\treturn;", "+\t\t//OS.GetControlBounds(widgetHandle, r.getData());", "+\tint rgn= OS.NewRgn();", "+\tOS.RectRgn(rgn, r);", "+\tOS.HIViewSetNeedsDisplayInRegion(widgetHandle, rgn, true);", "+\tOS.DisposeRgn(rgn);"]}], "num": 7163}