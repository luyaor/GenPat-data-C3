{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5825c3a766648a221f39008636fb7766", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e61d1b6002dd1e6765ed8135b9f7ff5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tpublic void updateWindow2(int whichWindow)", "signatureAfterChange": "  Rect computeInset (int control)", "diff": ["+", "+Rect computeInset (int control) {", "+\tint tempRgn = OS.NewRgn ();", "+\tRect rect = new Rect ();", "+\tOS.GetControlRegion (control, (short) OS.kControlStructureMetaPart, tempRgn);", "+\tOS.GetControlBounds (control, rect);", "+\tRect rgnRect = new Rect ();", "+\tOS.GetRegionBounds (tempRgn, rgnRect);", "+\tOS.DisposeRgn (tempRgn);", "+\trect.left -= rgnRect.left;", "+\trect.top -= rgnRect.top;", "+\trect.right = (short) (rgnRect.right - rect.right);", "+\trect.bottom = (short) (rgnRect.bottom - rect.bottom);", "+\treturn rect; ", "+}", "-", "-\tpublic void updateWindow2(int whichWindow) {", "-\t\tif (toolTipWindowHandle == whichWindow) {", "-\t\t\tprocessPaintToolTip(whichWindow);", "-\t\t} else {", "-\t\t\tfUpdateRegion= OS.NewRgn();", "-\t\t\tOS.GetPortVisibleRegion(OS.GetWindowPort(whichWindow), fUpdateRegion);", "-", "-\t\t\tOS.EraseRgn(fUpdateRegion);", "-\t\t\tOS.UpdateControls(whichWindow, fUpdateRegion);", "-\t\t\t\t\t\t\t", "-\t\t\tOS.DisposeRgn(fUpdateRegion);", "-\t\t\tfUpdateRegion= 0;", "-\t\t}", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d9e40d0a9446264ab6be1106f75d3c3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tracker.java", "commitBeforeChange": "f664172a0e735d142051b2da26600fbd256e07a6", "commitAfterChange": "894e6297387f95786ffea31acd399cd5951b0afc", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  void drawRectangles ()", "signatureAfterChange": "   void drawRectangles (int window, boolean erase)", "diff": ["-void drawRectangles () {", "+", "+void drawRectangles (int window, boolean erase) {", "+\tint[] context = new int [1];", "+\tint port = OS.GetWindowPort (window);", "+\tRect portRect = new Rect ();", "+\tOS.GetPortBounds (port, portRect);", "+\tOS.QDBeginCGContext (port, context);", "+\tOS.CGContextScaleCTM (context [0], 1, -1);", "+\tOS.CGContextTranslateCTM (context [0], 0, portRect.top - portRect.bottom);", "+\tCGRect cgRect = new CGRect ();", "+\tfor (int i=0; i<rectangles.length; i++) {", "+\t\tRectangle rect = rectangles [i];", "+\t\tcgRect.x = rect.x;", "+\t\tcgRect.y = rect.y;", "+\t\tcgRect.width = rect.width;", "+\t\tcgRect.height = rect.height;", "+\t\tif (erase) {", "+\t\t\tcgRect.width++;", "+\t\t\tcgRect.height++;", "+\t\t\tOS.CGContextClearRect (context [0], cgRect);", "+\t\t} else {", "+\t\t\tcgRect.x += 0.5f;", "+\t\t\tcgRect.y += 0.5f;", "+\t\t\tOS.CGContextStrokeRect (context [0], cgRect);", "+\t\t}", "+\t}", "+\tOS.CGContextSynchronize (context [0]);", "+\tOS.QDEndCGContext (port, context);"]}], "num": 53388}