{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e27e23f2c0fc4560a93104f3252a17e8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a752ad93a8e53f7f95055df78652a80d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 73, "signatureBeforeChange": " public void setSelection(TreeItem2[] items)", "signatureAfterChange": " public void setSelection(TreeItem2 items[])", "diff": ["-}", "-public void setSelection(TreeItem2[] items) {", "-\tcheckWidget();", "-\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);", "-\tif (items.length == 0 || ((style & SWT.SINGLE) != 0 && items.length > 1)) {", "-\t\tdeselectAll();", "-\tTreeItem2[] oldSelection = selectedItems;", "-\t", "-\t/* remove null and duplicate items */", "-\tint index = 0;", "-\tselectedItems = new TreeItem2[items.length];\t/* assume all valid items initially */", "-\tfor (int i = 0; i < items.length; i++) {", "-\t\tTreeItem2 item = items[i];", "-\t\tif (item != null && !item.isSelected()) {", "-\t\t\tselectedItems[index++] = item;", "-\t\t}", "-\t}", "-\tif (index != items.length) {", "-\t\t/* an invalid item was provided, so resize the array accordingly */", "-\t\tTreeItem2[] temp = new TreeItem2[index];", "-\t\tSystem.arraycopy(selectedItems, 0, temp, 0, index);", "-\t\tselectedItems = temp;", "-\t}", "-", "-\tfor (int i = 0; i < oldSelection.length; i++) {", "-\t\tif (!oldSelection[i].isSelected()) {", "-\t\t\tint availableIndex = oldSelection[i].availableIndex;", "-\t\t\tif (availableIndex != -1) {", "-\t\t\t\tredrawItem(availableIndex);", "-\t\t\t}", "-\t\t}", "-\t}", "-\tfor (int i = 0; i < selectedItems.length; i++) {", "-\t\tint availableIndex = selectedItems[i].availableIndex;", "-\t\tif (availableIndex != -1) {", "-\t\t\tredrawItem(availableIndex);", "-\t\t}", "+ */", "+public void setSelection(TreeItem2 items[]) {", "+\tcheckWidget ();", "+\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);", "+\tint length = items.length;", "+\tif (length == 0 || ((style & SWT.SINGLE) != 0 && length > 1)) {", "+\t\tdeselectAll ();", "+\t\treturn;", "+\t}", "+\tsetSelectableSelection(items);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a3204c3b1ac1be1d5d9183c80bf0478", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 1, "signatureBeforeChange": " void addItem (TreeItem2 item, int index)", "signatureAfterChange": " void addItem(TreeItem2 item, int index)", "diff": ["+ */", "+void addItem(TreeItem2 item, int index) {", "+\tif (index < 0 || index > getItemCount()) {", "+\t\terror(SWT.ERROR_INVALID_RANGE);", "+\t}", "+\tgetRoot().add(item, index);", "+}", "-}", "-void addItem (TreeItem2 item, int index) {", "-\t/* insert item into the root items collection */", "-\tTreeItem2[] newItems = new TreeItem2 [items.length + 1];", "-\tSystem.arraycopy (items, 0, newItems, 0, index);", "-\tnewItems[index] = item;", "-\tSystem.arraycopy (items, index, newItems, index + 1, items.length - index);", "-\titems = newItems;", "-", "-\t/* determine the item's availability index */", "-\tint startIndex;", "-\tif (index == items.length - 1) {", "-\t\tstartIndex = availableItems.length;\t\t/* last item */", "-\t} else {", "-\t\tstartIndex = items[index + 1].availableIndex;", "-\t", "-\t/* root items are always available so insert into available items collection */", "-\tTreeItem2[] newAvailableItems = new TreeItem2[availableItems.length + 1];", "-\tSystem.arraycopy (availableItems, 0, newAvailableItems, 0, startIndex);", "-\tnewAvailableItems[startIndex] = item;", "-\tSystem.arraycopy (availableItems, startIndex, newAvailableItems, startIndex + 1, newAvailableItems.length - startIndex - 1);", "-\tavailableItems = newAvailableItems;", "-\t", "-\t/* update the availableIndex for items bumped down by this new item */", "-\tfor (int i = startIndex; i < availableItems.length; i++) {", "-\t\tavailableItems[i].availableIndex = i;", "-\tupdateVerticalBar ();", "-\tupdateHorizontalBar ();", "-\tint redrawIndex = index;", "-\tif (redrawIndex > 0) redrawIndex--;", "-\tredrawFromItemDownwards (items[redrawIndex].availableIndex);", "-}"]}], "num": 4040}