{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "77f5d4462e83087589da673ab288e98e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92913a2c4fc9b31317f0c5553b40983e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/NativesGenerator.java", "commitBeforeChange": "798d905d31bfd777414fc291b597dc7a3f0e8625", "commitAfterChange": "d47a87e5c2fa59d11f5a84db475e651bf99b1cb3", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  void generateFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "signatureAfterChange": "  void generateFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "diff": ["+\tString name = method.getName();", "+\tboolean objc_struct = false;", "+\tif (name.equals(\"objc_msgSend_stret\")) {", "+\t\tobjc_struct = true;", "+\t\toutputln(\"\\tif (sizeof(_arg0) > STRUCT_SIZE_LIMIT) {\");", "+\t\toutput(\"\\t\");", "+\t}", "-\tString name = method.getName();", "+\tif (objc_struct) {", "+\t\toutputln(\"\\t} else {\");", "+\t\toutput(\"\\t\\t*lparg0 = (*(\");", "+\t\toutput(getTypeSignature4(paramTypes[0], true));", "+\t\toutput(\" (*)(\");", "+\t\tfor (int i = 1; i < paramTypes.length; i++) {", "+\t\t\tif (i != 1) output(\", \");", "+\t\t\tClass paramType = paramTypes[i];", "+\t\t\tParameterData paramData = getMetaData().getMetaData(method, i);", "+\t\t\tString cast = paramData.getCast();", "+\t\t\tif (cast != null && cast.length() != 0) {", "+\t\t\t\tif (cast.startsWith(\"(\")) cast = cast.substring(1);", "+\t\t\t\tif (cast.endsWith(\")\")) cast = cast.substring(0, cast.length() - 1);", "+\t\t\t\toutput(cast);", "+\t\t\t} else {", "+\t\t\t\toutput(getTypeSignature4(paramType, paramData.getFlag(FLAG_STRUCT)));", "+\t\t\t}", "+\t\t}", "+\t\toutput(\"))objc_msgSend)\");", "+\t\tgenerateFunctionCallRightSide(method, methodData, paramTypes, 1);", "+\t\toutputln(\";\");", "+\t\toutputln(\"\\t}\");", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6428a54ac450a3d82e065747cb6c2789", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/NativesGenerator.java", "commitBeforeChange": "298c8aba1d7af29e1fd0b940de7cdcb4e190bc43", "commitAfterChange": "1316b4869e24acc4a43339c0a07752fc216e2600", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  void generateFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "signatureAfterChange": "  void generateFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "diff": ["+\t\tif (methodData.getFlag(Flags.FLAG_CAST)) {", "+\t\t\toutput(\"((\");", "+\t\t\toutput(getTypeSignature2(returnType));", "+\t\t\toutput(\" (*)(\");", "+\t\t\tfor (int i = 0; i < paramTypes.length; i++) {", "+\t\t\t\tif (i != 0) output(\", \");", "+\t\t\t\tClass paramType = paramTypes[i];", "+\t\t\t\tParameterData paramData = getMetaData().getMetaData(method, i);", "+\t\t\t\tString cast = paramData.getCast();", "+\t\t\t\tif (cast != null && cast.length() != 0) {", "+\t\t\t\t\tif (cast.startsWith(\"(\")) cast = cast.substring(1);", "+\t\t\t\t\tif (cast.endsWith(\")\")) cast = cast.substring(0, cast.length() - 1);", "+\t\t\t\t\toutput(cast);", "+\t\t\t\t} else {", "+\t\t\t\t\toutput(getTypeSignature4(paramType, paramData.getFlag(FLAG_STRUCT)));", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\toutput(\"))\");", "+\t\t}", "+\t\tif (methodData.getFlag(Flags.FLAG_CAST)) {", "+\t\t\toutput(\")\");", "+\t\t}"]}], "num": 19149}