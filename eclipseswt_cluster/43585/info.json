{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "831335d183ca0b325b6ac031200847c7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e4583481b7f0ad1b4246c0e5e07569d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Path.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void cubicTo(float cx1, float cy1, float cx2, float cy2, float x, float y)", "signatureAfterChange": " public void cubicTo(float cx1, float cy1, float cx2, float cy2, float x, float y)", "diff": ["-\tNSPoint pt = new NSPoint();", "-\tpt.x = x;", "-\tpt.y = y;", "-\tNSPoint ct1 = new NSPoint();", "-\tct1.x = cx1;", "-\tct1.y = cy1;", "-\tNSPoint ct2 = new NSPoint();", "-\tct2.x = cx2;", "-\tct2.y = cy2;", "-\thandle.curveToPoint(pt, ct1, ct2);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tNSPoint pt = new NSPoint();", "+\t\tpt.x = x;", "+\t\tpt.y = y;", "+\t\tNSPoint ct1 = new NSPoint();", "+\t\tct1.x = cx1;", "+\t\tct1.y = cy1;", "+\t\tNSPoint ct2 = new NSPoint();", "+\t\tct2.x = cx2;", "+\t\tct2.y = cy2;", "+\t\thandle.curveToPoint(pt, ct1, ct2);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5afe7f38d71a8a27b0a112ddff700d0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Path.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void addArc(float x, float y, float width, float height, float startAngle, float arcAngle)", "signatureAfterChange": " public void addArc(float x, float y, float width, float height, float startAngle, float arcAngle)", "diff": ["-\tNSAffineTransform transform = NSAffineTransform.transform();", "-\ttransform.translateXBy(x + width / 2f, y + height / 2f);", "-\ttransform.scaleXBy(width / 2f, height / 2f);", "-\tNSBezierPath path = NSBezierPath.bezierPath();", "-\tNSPoint center = new NSPoint();", "-\tfloat sAngle = -startAngle;", "-\tfloat eAngle = -(startAngle + arcAngle);", "-\tpath.appendBezierPathWithArcWithCenter(center, 1, sAngle,  eAngle, arcAngle>0);", "-\tpath.transformUsingAffineTransform(transform);", "-\thandle.appendBezierPath(path);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tNSAffineTransform transform = NSAffineTransform.transform();", "+\t\ttransform.translateXBy(x + width / 2f, y + height / 2f);", "+\t\ttransform.scaleXBy(width / 2f, height / 2f);", "+\t\tNSBezierPath path = NSBezierPath.bezierPath();", "+\t\tNSPoint center = new NSPoint();", "+\t\tfloat sAngle = -startAngle;", "+\t\tfloat eAngle = -(startAngle + arcAngle);", "+\t\tpath.appendBezierPathWithArcWithCenter(center, 1, sAngle,  eAngle, arcAngle>0);", "+\t\tpath.transformUsingAffineTransform(transform);", "+\t\thandle.appendBezierPath(path);", "+\t} finally { ", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2385d34ec43a50fab626fcaf876b214f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Region.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public Rectangle getBounds()", "signatureAfterChange": " public Rectangle getBounds()", "diff": ["-\tshort[] bounds = new short[4];", "-\tOS.GetRegionBounds(handle, bounds);", "-\tint width = bounds[3] - bounds[1];", "-\tint height = bounds[2] - bounds[0];", "-\treturn new Rectangle(bounds[1], bounds[0], width, height);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tshort[] bounds = new short[4];", "+\t\tOS.GetRegionBounds(handle, bounds);", "+\t\tint width = bounds[3] - bounds[1];", "+\t\tint height = bounds[2] - bounds[0];", "+\t\treturn new Rectangle(bounds[1], bounds[0], width, height);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb5846d97c10c1c457b363915fcaadc0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public Rectangle getLineBounds(int lineIndex)", "signatureAfterChange": " public Rectangle getLineBounds(int lineIndex)", "diff": ["-\tcomputeRuns();", "-\tif (!(0 <= lineIndex && lineIndex < lineBounds.length)) SWT.error(SWT.ERROR_INVALID_RANGE);", "-\tNSRect rect = lineBounds[lineIndex];", "-\treturn new Rectangle((int)rect.x, (int)rect.y, (int)rect.width, (int)rect.height);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tcomputeRuns();", "+\t\tif (!(0 <= lineIndex && lineIndex < lineBounds.length)) SWT.error(SWT.ERROR_INVALID_RANGE);", "+\t\tNSRect rect = lineBounds[lineIndex];", "+\t\treturn new Rectangle((int)rect.x, (int)rect.y, (int)rect.width, (int)rect.height);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a60f742dab2be54fbcd3c5961027956b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Region.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public void translate (int x, int y)", "signatureAfterChange": " public void translate (int x, int y)", "diff": ["-\tOS.OffsetRgn (handle, (short)x, (short)y);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tOS.OffsetRgn (handle, (short)x, (short)y);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b566e8ec02775351730eac981251dc0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "ef782aa1d47f4cc453e1ff5e98420459bde2afbb", "commitAfterChange": "5a273c2ef1049cff7bd4d5ace6d67f7530a2ce69", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public GC(Drawable drawable, int style)", "signatureAfterChange": " public GC(Drawable drawable, int style)", "diff": ["-\tGCData data = new GCData();", "-\tdata.style = checkStyle(style);", "-\tint /*long*/ contextId = drawable.internal_new_GC(data);", "-\tDevice device = data.device;", "-\tif (device == null) device = Device.getDevice();", "-\tif (device == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "-\tthis.device = data.device = device;", "-\tinit(drawable, data, contextId);", "-\tinit();", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tGCData data = new GCData();", "+\t\tdata.style = checkStyle(style);", "+\t\tint /*long*/ contextId = drawable.internal_new_GC(data);", "+\t\tDevice device = data.device;", "+\t\tif (device == null) device = Device.getDevice();", "+\t\tif (device == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "+\t\tthis.device = data.device = device;", "+\t\tinit(drawable, data, contextId);", "+\t\tinit();", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "604c5db3ab9a55d09c3dabfb7776bba7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Region.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public boolean isEmpty()", "signatureAfterChange": " public boolean isEmpty()", "diff": ["-\treturn OS.EmptyRgn(handle);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\treturn OS.EmptyRgn(handle);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "647cbd337b0b472dd03a57368f1b57b4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public int getLevel(int offset)", "signatureAfterChange": " public int getLevel(int offset)", "diff": ["-\tcomputeRuns();", "-\tint length = text.length();", "-\tif (!(0 <= offset && offset <= length)) SWT.error(SWT.ERROR_INVALID_RANGE);", "-\toffset = translateOffset(offset);\t", "-\tint level = 0;", "-\t//TODO", "-\treturn level;", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tcomputeRuns();", "+\t\tint length = text.length();", "+\t\tif (!(0 <= offset && offset <= length)) SWT.error(SWT.ERROR_INVALID_RANGE);", "+\t\toffset = translateOffset(offset);\t", "+\t\tint level = 0;", "+\t\t//TODO", "+\t\treturn level;", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a96f427921be94e1f10add595397eae8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Path.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public Path (Device device, Path path, float flatness)", "signatureAfterChange": " public Path (Device device, Path path, float flatness)", "diff": ["-\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "-\tif (path.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "-\tflatness = Math.max(0, flatness);", "-\tif (flatness == 0) {", "-\t\thandle = new NSBezierPath(path.handle.copy().id);", "-\t} else {", "-\t\tfloat /*double*/ defaultFlatness = NSBezierPath.defaultFlatness();", "-\t\tNSBezierPath.setDefaultFlatness(flatness);", "-\t\thandle = path.handle.bezierPathByFlatteningPath();", "-\t\tNSBezierPath.setDefaultFlatness(defaultFlatness);\t\t", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "+\t\tif (path.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\t\tflatness = Math.max(0, flatness);", "+\t\tif (flatness == 0) {", "+\t\t\thandle = new NSBezierPath(path.handle.copy().id);", "+\t\t} else {", "+\t\t\tfloat /*double*/ defaultFlatness = NSBezierPath.defaultFlatness();", "+\t\t\tNSBezierPath.setDefaultFlatness(flatness);", "+\t\t\thandle = path.handle.bezierPathByFlatteningPath();", "+\t\t\tNSBezierPath.setDefaultFlatness(defaultFlatness);\t\t", "+\t\t}", "+\t\tif (handle == null) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\tinit();", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "-\tif (handle == null) SWT.error(SWT.ERROR_NO_HANDLES);", "-\tinit();"]}], "num": 43585}