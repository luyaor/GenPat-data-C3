{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "23026324e268936689d748211c288a8e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85b826f53b8a4e9fe7f5de69a6e8f5f2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \r public String getText ()", "signatureAfterChange": "\r \r public String getText ()", "diff": ["-\tint [] args = {\r", "-\t\tOS.Pt_ARG_TEXT_STRING, 0, 0,\r", "-\t\tOS.Pt_ARG_ACCEL_KEY, 0, 0,\r", "-\t};\r", "-\tOS.PtGetResources (handle, args.length / 3, args);\r", "-\tif (args [1] == 0) return \"\";\r", "-\tint length = OS.strlen (args [1]);\r", "-\tbyte [] buffer = new byte [length];\r", "-\tOS.memmove (buffer, args [1], length);\r", "-\tchar [] result = Converter.mbcsToWcs (null, buffer);\r", "-\tint count = 0;\r", "-\tint mnemonic = 0;\r", "-\tif (args [4] != 0) {\r", "-\t\tint length2 = OS.strlen (args [4]);\r", "-\t\tif (length2 > 0) {\r", "-\t\t\tbyte [] buffer2 = new byte [length2];\r", "-\t\t\tOS.memmove (buffer2, args [4], length2);\r", "-\t\t\tchar [] result2 = Converter.mbcsToWcs (null, buffer2);\r", "-\t\t\tif (result2.length > 0) mnemonic = result2 [0];\r", "-\t\t}\r", "-\t}\r", "-\tif (mnemonic != 0) count++;\r", "-\tfor (int i=0; i<result.length-1; i++)\r", "-\t\tif (result [i] == Mnemonic) count++;\r", "-\tchar [] newResult = result;\r", "-\tif ((count != 0) || (mnemonic != 0)) {\r", "-\t\tnewResult = new char [result.length + count];\r", "-\t\tint i = 0, j = 0;\r", "-\t\twhile (i < result.length) {\r", "-\t\t\tif ((mnemonic != 0) && (result [i] == mnemonic)) {\r", "-\t\t\t\tif (j < newResult.length) newResult [j++] = Mnemonic;\r", "-\t\t\t\tmnemonic = 0;\r", "-\t\t\t}\r", "-\t\t\tif ((newResult [j++] = result [i++]) == Mnemonic)\r", "-\t\t\t\tif (j < newResult.length) newResult [j++] = Mnemonic;\r", "-\t\t}\r", "-\t}\r", "-\treturn new String (newResult);\r", "+\treturn text;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96bee3ca8dab7d8fe2f5863d1c67b4cb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "fe9cf8b69b05605c0699efe7aea722d3e2396198", "commitAfterChange": "a76fbcdb2bea80d2aa22d622558bd4081d9e971a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public String getText ()", "signatureAfterChange": " public String getText ()", "diff": ["-\tint [] args = {", "-\t\tOS.Pt_ARG_TEXT_STRING, 0, 0,", "-\t\tOS.Pt_ARG_ACCEL_KEY, 0, 0,", "-\t};", "-\tOS.PtGetResources (handle, args.length / 3, args);", "-\tif (args [1] == 0) return \"\";", "-\tint length = OS.strlen (args [1]);", "-\tbyte [] buffer = new byte [length];", "-\tOS.memmove (buffer, args [1], length);", "-\tchar [] result = Converter.mbcsToWcs (null, buffer);", "-\tint count = 0;", "-\tint mnemonic = 0;", "-\tif (args [4] != 0) {", "-\t\tint length2 = OS.strlen (args [4]);", "-\t\tif (length2 > 0) {", "-\t\t\tbyte [] buffer2 = new byte [length2];", "-\t\t\tOS.memmove (buffer2, args [4], length2);", "-\t\t\tchar [] result2 = Converter.mbcsToWcs (null, buffer2);", "-\t\t\tif (result2.length > 0) mnemonic = result2 [0];", "-\t\t}", "-\t}", "-\tif (mnemonic != 0) count++;", "-\tfor (int i=0; i<result.length-1; i++)", "-\t\tif (result [i] == Mnemonic) count++;", "-\tchar [] newResult = result;", "-\tif ((count != 0) || (mnemonic != 0)) {", "-\t\tnewResult = new char [result.length + count];", "-\t\tint i = 0, j = 0;", "-\t\twhile (i < result.length) {", "-\t\t\tif ((mnemonic != 0) && (result [i] == mnemonic)) {", "-\t\t\t\tif (j < newResult.length) newResult [j++] = Mnemonic;", "-\t\t\t\tmnemonic = 0;", "-\t\t\t}", "-\t\t\tif ((newResult [j++] = result [i++]) == Mnemonic)", "-\t\t\t\tif (j < newResult.length) newResult [j++] = Mnemonic;", "-\t\t}", "-\t}", "-\treturn new String (newResult);", "+\treturn text;"]}], "num": 49649}