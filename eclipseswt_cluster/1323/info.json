{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "168e8ebe15bc57eddd9e036aeb224cdc", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c9768fe00c71f16704a0a534b4e3eb6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/mozilla/org/eclipse/swt/browser/PromptService.java", "commitBeforeChange": "a6131ac9e2d912fd79a498410994704f80907b17", "commitAfterChange": "e758c60c4fb72428ae282ccc25e3e75b0adf65c4", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  Browser getBrowser(int aDOMWindow)", "signatureAfterChange": "  Browser getBrowser (int aDOMWindow)", "diff": ["-Browser getBrowser(int /*long*/ aDOMWindow) {", "+Browser getBrowser (int /*long*/ aDOMWindow) {", "-\tint rc = XPCOM.NS_GetServiceManager(result);", "-\tif (rc != XPCOM.NS_OK) Mozilla.error(rc);", "-\tif (result[0] == 0) Mozilla.error(XPCOM.NS_NOINTERFACE);", "+\tint rc = XPCOM.NS_GetServiceManager (result);", "+\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "+\tif (result[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);", "-\tnsIServiceManager serviceManager = new nsIServiceManager(result[0]);", "+\tnsIServiceManager serviceManager = new nsIServiceManager (result[0]);", "-\tbyte[] aContractID = Converter.wcsToMbcs(null, XPCOM.NS_WINDOWWATCHER_CONTRACTID, true);", "-\trc = serviceManager.GetServiceByContractID(aContractID, nsIWindowWatcher.NS_IWINDOWWATCHER_IID, result);", "+\tbyte[] aContractID = MozillaDelegate.wcsToMbcs (null, XPCOM.NS_WINDOWWATCHER_CONTRACTID, true);", "+\trc = serviceManager.GetServiceByContractID (aContractID, nsIWindowWatcher.NS_IWINDOWWATCHER_IID, result);", "-\tif (result[0] == 0) Mozilla.error(XPCOM.NS_NOINTERFACE);\t\t", "-\tserviceManager.Release();", "+\tif (result[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);\t\t", "+\tserviceManager.Release ();", "-\tnsIWindowWatcher windowWatcher = new nsIWindowWatcher(result[0]);", "+\tnsIWindowWatcher windowWatcher = new nsIWindowWatcher (result[0]);", "-\trc = windowWatcher.GetChromeForWindow(aDOMWindow, result);", "-\tif (rc != XPCOM.NS_OK) Mozilla.error(rc);", "-\tif (result[0] == 0) Mozilla.error(XPCOM.NS_NOINTERFACE);\t\t", "-\twindowWatcher.Release();\t", "+\trc = windowWatcher.GetChromeForWindow (aDOMWindow, result);", "+\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "+\tif (result[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);\t\t", "+\twindowWatcher.Release ();\t", "-\tnsIWebBrowserChrome webBrowserChrome = new nsIWebBrowserChrome(result[0]);", "+\tnsIWebBrowserChrome webBrowserChrome = new nsIWebBrowserChrome (result[0]);", "-\trc = webBrowserChrome.QueryInterface(nsIEmbeddingSiteWindow.NS_IEMBEDDINGSITEWINDOW_IID, result);", "-\tif (rc != XPCOM.NS_OK) Mozilla.error(rc);", "-\tif (result[0] == 0) Mozilla.error(XPCOM.NS_NOINTERFACE);\t\t", "-\twebBrowserChrome.Release();", "+\trc = webBrowserChrome.QueryInterface (nsIEmbeddingSiteWindow.NS_IEMBEDDINGSITEWINDOW_IID, result);", "+\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "+\tif (result[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);\t\t", "+\twebBrowserChrome.Release ();", "-\tnsIEmbeddingSiteWindow embeddingSiteWindow = new nsIEmbeddingSiteWindow(result[0]);", "+\tnsIEmbeddingSiteWindow embeddingSiteWindow = new nsIEmbeddingSiteWindow (result[0]);", "-\trc = embeddingSiteWindow.GetSiteWindow(result);", "-\tif (rc != XPCOM.NS_OK) Mozilla.error(rc);", "-\tif (result[0] == 0) Mozilla.error(XPCOM.NS_NOINTERFACE);\t\t", "-\tembeddingSiteWindow.Release();", "+\trc = embeddingSiteWindow.GetSiteWindow (result);", "+\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "+\tif (result[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);\t\t", "+\tembeddingSiteWindow.Release ();", "-\treturn Mozilla.findBrowser(result[0]); ", "+\treturn Mozilla.findBrowser (result[0]); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0db4c8cef9d1d01862c3e433f963d3b4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/PromptService2.java", "commitBeforeChange": "0076669af24fd6f5044c2622cda9b590486dcdde", "commitAfterChange": "50b2cd054f21b925ff814cc8eff2f043b76757ba", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "  Browser getBrowser (int aDOMWindow)", "signatureAfterChange": "  Browser getBrowser (int aDOMWindow)", "diff": ["-", "-\tint /*long*/[] result = new int /*long*/[1];", "-\tint rc = XPCOM.NS_GetServiceManager (result);", "-\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "-\tif (result[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);", "-\t", "-\tnsIServiceManager serviceManager = new nsIServiceManager (result[0]);", "-\tresult[0] = 0;", "-\tbyte[] aContractID = MozillaDelegate.wcsToMbcs (null, XPCOM.NS_WINDOWWATCHER_CONTRACTID, true);", "-\trc = serviceManager.GetServiceByContractID (aContractID, nsIWindowWatcher.NS_IWINDOWWATCHER_IID, result);", "-\tif (rc != XPCOM.NS_OK) Mozilla.error(rc);", "-\tif (result[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);\t\t", "-\tserviceManager.Release ();", "-\t", "-\tnsIWindowWatcher windowWatcher = new nsIWindowWatcher (result[0]);", "-\tresult[0] = 0;", "-\t/* the chrome will only be answered for the top-level nsIDOMWindow */", "-\trc = window.GetTop (result);", "-\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "-\tif (result[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);", "-\taDOMWindow = result[0];", "-\tresult[0] = 0;", "-\trc = windowWatcher.GetChromeForWindow (aDOMWindow, result);", "-\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "-\tif (result[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);\t\t", "-\twindowWatcher.Release ();\t", "-\t", "-\tnsIWebBrowserChrome webBrowserChrome = new nsIWebBrowserChrome (result[0]);", "-\tresult[0] = 0;", "-\trc = webBrowserChrome.QueryInterface (nsIEmbeddingSiteWindow.NS_IEMBEDDINGSITEWINDOW_IID, result);", "-\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "-\tif (result[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);\t\t", "-\twebBrowserChrome.Release ();", "-\t", "-\tnsIEmbeddingSiteWindow embeddingSiteWindow = new nsIEmbeddingSiteWindow (result[0]);", "-\tresult[0] = 0;", "-\trc = embeddingSiteWindow.GetSiteWindow (result);", "-\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "-\tif (result[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);\t\t", "-\tembeddingSiteWindow.Release ();", "-\t", "-\treturn Mozilla.findBrowser (result[0]); ", "+\treturn Mozilla.findBrowser (window);"]}], "num": 1323}