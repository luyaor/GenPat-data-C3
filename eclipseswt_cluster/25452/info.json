{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dcad3f80a94dc75651e769f34f908a3b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd4cc0d7e9a2334a4f92f8310319011c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "8e9705d93325d1390b1c14aa0ba55b9649457ef3", "commitAfterChange": "6bc2e4ca5332d0ed9c2e86c21bb2d52348bc9673", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \r public void setContents(Object[] data, Transfer[] dataTypes)", "signatureAfterChange": "\r \r public void setContents(Object[] data, Transfer[] dataTypes)", "diff": ["-\tif (this.data != null) {\r", "+\tif (onClipboard) {\r", "+\t}\r", "+\tif (onPrimary) {\r", "+\t\tOS.gtk_clipboard_clear(pGtkPrimary);\r", "-\tboolean result = OS.gtk_clipboard_set_with_data(pGtkClipboard, pTargetsList, entries.length, getFunc.getAddress(), clearFunc.getAddress(), 0);\r", "-\r", "+\tonPrimary = OS.gtk_clipboard_set_with_data(pGtkPrimary, pTargetsList, entries.length, getFunc.getAddress(), clearFunc.getAddress(), 0);\r", "+\tonClipboard = OS.gtk_clipboard_set_with_data(pGtkClipboard, pTargetsList, entries.length, getFunc.getAddress(), clearFunc.getAddress(), 0);\r", "+\t\r", "-\tif (!result) DND.error(DND.ERROR_CANNOT_SET_CLIPBOARD);\r", "+\tif (!onClipboard && !onPrimary) DND.error(DND.ERROR_CANNOT_SET_CLIPBOARD);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d40f45fdb6042b230946dac0e4607289", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 23, "signatureBeforeChange": " void propagateWidget (boolean enabled)", "signatureAfterChange": "  void setFontStyle (Font font)", "diff": ["-*/", "-void propagateWidget (boolean enabled) {", "-\tsuper.propagateWidget (enabled);", "-\tfor (int i=0; i<itemCount; i++) {", "-\t\titems [i].propagateWidget (enabled);", "-\t}", "-}", "+", "+void setFontStyle (Font font) {", "+\tsuper.setFontStyle (font);", "+\tfor (int i=0; i<itemCount; i++) {", "+\t\tToolItem item = items [i];", "+\t\titem.setFontStyle (font);", "+\t\tPoint size = item.computeSize ();", "+\t\titem.setSize (size.x, size.y, false);", "+\t}", "+\trelayout ();", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f673ae62c8cc171a0f480838c8162627", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "2e7509be8287977239a5a242476f860e6d010643", "commitAfterChange": "3b350dd4c4b9460951698e03648662ba16994245", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "  \tvoid updateChildren ()", "signatureAfterChange": "  \tvoid updateChildren ()", "diff": ["-\t\t\tHashtable childrenCopy = (Hashtable)children.clone ();", "+\t\t\tVector idsToKeep = new Vector (children.size ());", "-\t\t\t\t\tchildrenCopy.remove (new Integer (object.handle));", "+\t\t\t\t\tidsToKeep.addElement (new Integer (object.handle));", "-\t\t\t\t\t\tchildrenCopy.remove (new Integer (object.handle));", "+\t\t\t\t\t\tidsToKeep.addElement (new Integer (object.handle));", "-\t\t\t// remove previous children of self which were not answered", "-\t\t\tEnumeration childrenToRemove = childrenCopy.elements ();", "-\t\t\twhile (childrenToRemove.hasMoreElements ()) {", "-\t\t\t\tAccessibleObject object = (AccessibleObject) childrenToRemove.nextElement (); ", "-\t\t\t\tremoveChild (object, true);", "+\t\t\t// remove old children that were not provided as children anymore", "+\t\t\tEnumeration ids = children.keys ();", "+\t\t\twhile (ids.hasMoreElements ()) {", "+\t\t\t\tInteger id = (Integer)ids.nextElement ();", "+\t\t\t\tif (!idsToKeep.contains (id)) {", "+\t\t\t\t\tAccessibleObject object = (AccessibleObject) children.get (id);", "+\t\t\t\t\tremoveChild (object, true);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f6938f11aed9946503b092b9e209c3f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "72353ac7f94b26380383764a3b22b9ce8d44a91e", "commitAfterChange": "5b05aa6f4689e570a02934dff54fc1aa76a4eafb", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 35, "signatureBeforeChange": "  int processSelection (int int0, int int1, int int2)", "signatureAfterChange": "  int processSelection (int int0, int int1, int int2)", "diff": ["-\tif ((style & SWT.SINGLE) != 0) {", "-\t\tselected = true;", "-\t\tif (mouseDown) return 0;", "-\t}", "+\tint ptr = OS.gtk_get_current_event ();", "+\tif (ptr != 0) {", "+\t\tGdkEvent gdkEvent = new GdkEvent ();", "+\t\tOS.memmove (gdkEvent, ptr, GdkEvent.sizeof);", "+\t\tOS.gdk_event_free (ptr);", "+\t\t/*", "+\t\t* Feature in GTK.  When a leaf node is double clicked, the", "+\t\t* GtkCTree issues two tree_row_select signals.  Non-leaf", "+\t\t* nodes only get one tree_row_select.  Avoid issueing", "+\t\t* a selection event for the double clicked leaf node.", "+\t\t*/ ", "+\t\tif (gdkEvent.type == OS.GDK_2BUTTON_PRESS) return 0;", "+\t}"]}], "num": 25452}