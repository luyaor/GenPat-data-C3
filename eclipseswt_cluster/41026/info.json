{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "06962e9b9cf86b47023702543980b6bc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9cac2c8ecf1b9441588501693ba1260", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "975e98f6ef680ed917c7d22fde80e918d5bef60e", "commitAfterChange": "c170cf9e0cfbc4689e636beb198d74771fd59201", "methodNumberBeforeChange": 228, "methodNumberAfterChange": 228, "signatureBeforeChange": " void handleCompositionSelection (Event event)", "signatureAfterChange": " void handleCompositionSelection (Event event)", "diff": ["-\tevent.start = selection.x;", "-\tevent.end = selection.y;", "-\tevent.text = getSelectionText();", "+\tif (event.start != event.end) {", "+\t\tint charCount = getCharCount();", "+\t\tevent.start = Math.max(0, Math.min(event.start, charCount));", "+\t\tevent.end = Math.max(0, Math.min(event.end, charCount));", "+\t\tif (event.text != null) {", "+\t\t\tsetSelection(event.start, event.end);", "+\t\t} else {", "+\t\t\tevent.text = getTextRange(event.start, event.end - event.start);", "+\t\t}", "+\t} else {", "+\t\tevent.start = selection.x;", "+\t\tevent.end = selection.y;", "+\t\tevent.text = getSelectionText();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a539b49a8f1b057f4297c1f61798339c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "a3431aaf2405797fee5bfb91dacfc87407beb695", "commitAfterChange": "5b0972e29a28ad340824760f5912631d164e44e6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  int createGdipPen()", "signatureAfterChange": "  int createGdipPen()", "diff": ["-\tint dashStyle = 0; ", "+\tfloat[] dashes = null;", "+\tint dashStyle = Gdip.DashStyleSolid; ", "-\t\tcase OS.PS_SOLID: dashStyle = Gdip.DashStyleSolid; break;", "-\t\tcase OS.PS_DOT: dashStyle = Gdip.DashStyleDot; break;", "-\t\tcase OS.PS_DASH: dashStyle = Gdip.DashStyleDash; break;", "-\t\tcase OS.PS_DASHDOT: dashStyle = Gdip.DashStyleDashDot; break;", "-\t\tcase OS.PS_DASHDOTDOT: dashStyle = Gdip.DashStyleDashDotDot; break;", "+\t\tcase OS.PS_SOLID: break;", "+\t\tcase OS.PS_DOT: dashStyle = Gdip.DashStyleDot; if (width == 0) dashes = LINE_DOT_ZERO; break;", "+\t\tcase OS.PS_DASH: dashStyle = Gdip.DashStyleDash; if (width == 0) dashes = LINE_DASH_ZERO; break;", "+\t\tcase OS.PS_DASHDOT: dashStyle = Gdip.DashStyleDashDot; if (width == 0) dashes = LINE_DASHDOT_ZERO; break;", "+\t\tcase OS.PS_DASHDOTDOT: dashStyle = Gdip.DashStyleDashDotDot; if (width == 0) dashes = LINE_DASHDOTDOT_ZERO; break;", "-\t\t\t\tfloat[] pattern = new float[data.dashes.length];", "-\t\t\t\tfor (int i = 0; i < pattern.length; i++) {", "-\t\t\t\t\tpattern[i] = (float)data.dashes[i] / width;", "+\t\t\t\tdashes = new float[data.dashes.length * 2];", "+\t\t\t\tfor (int i = 0; i < data.dashes.length; i++) {", "+\t\t\t\t\tfloat dash = (float)data.dashes[i] / Math.max (1, width);", "+\t\t\t\t\tdashes[i] = dash;", "+\t\t\t\t\tdashes[i + data.dashes.length] = dash;", "-\t\t\t\tGdip.Pen_SetDashPattern(pen, pattern, pattern.length);", "-\t\t\t\tdashStyle = Gdip.DashStyleCustom;", "-\t\t\t} else {", "-\t\t\t\tdashStyle = Gdip.DashStyleSolid;", "-\tif (dashStyle != Gdip.DashStyleCustom) Gdip.Pen_SetDashStyle(pen, dashStyle);", "+\tif (dashes != null) {", "+\t\tGdip.Pen_SetDashPattern(pen, dashes, dashes.length);", "+\t\tGdip.Pen_SetDashStyle(pen, Gdip.DashStyleCustom);", "+\t} else {", "+\t\tGdip.Pen_SetDashStyle(pen, dashStyle);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd5451274f9beda4ca01ea3063d33e4a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "0f9350cf2fb1787c4b758b9256624909715628fb", "commitAfterChange": "026c801e24c1d1c8ba116bd9a291debdff004298", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": "\r \r boolean sendMouseEvent (int type, int button, int msg, int wParam, int lParam)", "signatureAfterChange": "\r \r boolean sendMouseEvent (int type, int button, int msg, int wParam, int lParam)", "diff": ["-\tif (button != 1 || (type != SWT.MouseDown && type != SWT.MouseDoubleClick)) {\r", "-\t\tif (type == SWT.MouseUp || (wParam & OS.MK_LBUTTON) != 0) {\r", "-\t\t\tevent.stateMask |= SWT.BUTTON1;\r", "-\t\t}\r", "-\t}\r", "-\tif (button != 2 || (type != SWT.MouseDown && type != SWT.MouseDoubleClick)) {\r", "-\t\tif (type == SWT.MouseUp || (wParam & OS.MK_MBUTTON) != 0) {\r", "-\t\t\tevent.stateMask |= SWT.BUTTON2;\r", "-\t\t}\r", "-\t}\r", "-\tif (button != 3 || (type != SWT.MouseDown && type != SWT.MouseDoubleClick)) {\r", "-\t\tif (type == SWT.MouseUp || (wParam & OS.MK_RBUTTON) != 0) {\r", "-\t\t\tevent.stateMask |= SWT.BUTTON3;\r", "-\t\t}\r", "+\tif ((wParam & OS.MK_LBUTTON) != 0) event.stateMask |= SWT.BUTTON1;\r", "+\tif ((wParam & OS.MK_MBUTTON) != 0) event.stateMask |= SWT.BUTTON2;\r", "+\tif ((wParam & OS.MK_RBUTTON) != 0) event.stateMask |= SWT.BUTTON3;\r", "+\tif (type == SWT.MouseDown || type == SWT.MouseDoubleClick) {\r", "+\t\tif (button == 1) event.stateMask &= ~SWT.BUTTON1;\r", "+\t\tif (button == 2) event.stateMask &= ~SWT.BUTTON2;\r", "+\t\tif (button == 3) event.stateMask &= ~SWT.BUTTON3;\r", "+\t} else if (type == SWT.MouseUp) {\r", "+\t\tif (button == 1) event.stateMask |= SWT.BUTTON1;\r", "+\t\tif (button == 2) event.stateMask |= SWT.BUTTON2;\r", "+\t\tif (button == 3) event.stateMask |= SWT.BUTTON3;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "997ca592615d8aaa4d03b537da14a6a0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/ViewForm.java", "commitBeforeChange": "dfc9c2c27083a19c0dc0cbc4bc9dda0223b753d5", "commitAfterChange": "2b27afb0bcf4e50e1711377ad024c076547fac90", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public Point computeSize(int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize(int wHint, int hHint, boolean changed)", "diff": ["-\t\tleftSize.x += 1; // +1 for highlight line", "+\t\tif (leftSize.x > 0 && rightSize.x > 0) size.x += horizontalSpacing;", "-\t\tsize.y = Math.max(leftSize.y, rightSize.y) + 1; // +1 for highlight line", "+\t\tsize.y = Math.max(leftSize.y, rightSize.y);", "-\t\t}", "+\t\t\tif (topLeft != null ||topRight != null)size.y += verticalSpacing;", "+\t\t}\t", "-\t\tsize.y = Math.max(leftSize.y, Math.max(centerSize.y, rightSize.y)) + 1; // +1 for highlight line", "+\t\tint count = -1;", "+\t\tif (leftSize.x > 0) count++;", "+\t\tif (centerSize.x > 0) count++;", "+\t\tif (rightSize.x > 0) count++;", "+\t\tif (count > 0) size.x += count * horizontalSpacing;", "+\t\tsize.y = Math.max(leftSize.y, Math.max(centerSize.y, rightSize.y));", "-\t\tsize.y += contentSize.y + 1; // +1 for line bewteen content and header", "+\t\tsize.y += contentSize.y;", "+\t\tif (size.y > contentSize.y) size.y += verticalSpacing;"]}], "num": 41026}