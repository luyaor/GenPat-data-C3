{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "16ba96549d8007d40ccbe17c33c599b9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e410d53c423e8d2aaf626c26d3dcbe77", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Scale.java", "commitBeforeChange": "729580de4ec6f69f59f86299f4eba403d0aa4f49", "commitAfterChange": "6d655f823e24bd1260c536c6f34267c12bbf2a71", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "  LRESULT wmScrollChild (int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmScrollChild (int wParam, int lParam)", "diff": ["-\tEvent event = new Event ();", "-\t/*", "-\t* This code is intentionally commented.  The event", "-\t* detail field is not currently supported on all", "-\t* platforms.", "-\t*/", "-//\tswitch (code) {", "-//\t\tcase OS.TB_TOP: \t\tevent.detail = SWT.HOME;  break;", "-//\t\tcase OS.TB_BOTTOM:\t\tevent.detail = SWT.END;  break;", "-//\t\tcase OS.TB_LINEDOWN:\tevent.detail = SWT.ARROW_DOWN;  break;", "-//\t\tcase OS.TB_LINEUP: \t\tevent.detail = SWT.ARROW_UP;  break;", "-//\t\tcase OS.TB_PAGEDOWN: \tevent.detail = SWT.PAGE_DOWN;  break;", "-//\t\tcase OS.TB_PAGEUP: \t\tevent.detail = SWT.PAGE_UP;  break;", "-//\t}", "-\t", "-\t/*", "-\t* Send the event because WM_HSCROLL and WM_VSCROLL", "-\t* are sent from a modal message loop in windows that", "-\t* is active when the user is scrolling.", "-\t*/", "-\tsendEvent (SWT.Selection, event);", "-\t// widget could be disposed at this point", "+\tif (!ignoreSelection) {", "+\t\tEvent event = new Event ();", "+\t\t/*", "+\t\t* This code is intentionally commented.  The event", "+\t\t* detail field is not currently supported on all", "+\t\t* platforms.", "+\t\t*/", "+//\t\tswitch (code) {", "+//\t\t\tcase OS.TB_TOP: \t\tevent.detail = SWT.HOME;  break;", "+//\t\t\tcase OS.TB_BOTTOM:\t\tevent.detail = SWT.END;  break;", "+//\t\t\tcase OS.TB_LINEDOWN:\tevent.detail = SWT.ARROW_DOWN;  break;", "+//\t\t\tcase OS.TB_LINEUP: \t\tevent.detail = SWT.ARROW_UP;  break;", "+//\t\t\tcase OS.TB_PAGEDOWN: \tevent.detail = SWT.PAGE_DOWN;  break;", "+//\t\t\tcase OS.TB_PAGEUP: \t\tevent.detail = SWT.PAGE_UP;  break;", "+//\t\t}", "+\t\t/*", "+\t\t* Send the event because WM_HSCROLL and WM_VSCROLL", "+\t\t* are sent from a modal message loop in windows that", "+\t\t* is active when the user is scrolling.", "+\t\t*/", "+\t\tsendEvent (SWT.Selection, event);", "+\t\t// widget could be disposed at this point", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e741743394346584a95a2408e1ac7b51", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/browser/Browser1.java", "commitBeforeChange": "88322f0d565181e28d20864183d354110b03f0a7", "commitAfterChange": "510a9055a880b0149407b8b6f474eee88b6c1452", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tpublic static boolean test()", "signatureAfterChange": " \t \tpublic static boolean test()", "diff": ["-\t\tfor (int i = 0; i < urls.length; i++) {", "-\t\t\tboolean result = test1(urls[i]); ", "-\t\t\tif (verbose) System.out.print(result ? \".\" : \"E\");", "-\t\t\tif (!result) fail++; ", "-\t\t}", "-\t\tfor (int i = 0; i < urls.length; i++) {", "-\t\t\tboolean result = test2(urls[i]); ", "-\t\t\tif (verbose) System.out.print(result ? \".\" : \"E\");", "-\t\t\tif (!result) fail++; ", "+\t\t// TEMPORARILY NOT RUN FOR MOZILLA", "+\t\tif (!isMozilla) {", "+\t\t\tfor (int i = 0; i < urls.length; i++) {", "+\t\t\t\tboolean result = test1(urls[i]); ", "+\t\t\t\tif (verbose) System.out.print(result ? \".\" : \"E\");", "+\t\t\t\tif (!result) fail++; ", "+\t\t\t}", "+\t\t\tfor (int i = 0; i < urls.length; i++) {", "+\t\t\t\tboolean result = test2(urls[i]); ", "+\t\t\t\tif (verbose) System.out.print(result ? \".\" : \"E\");", "+\t\t\t\tif (!result) fail++; ", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d35796b71114fbee11b034d5ae4d57c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/gtk/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "491cca8b8caa2e2b7fa91ae4fcd690464010c0bc", "commitAfterChange": "3be8a9ab2093c28258e90131291f305bc84e88cf", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "  boolean handleMouseEvent (String type, int screenX, int screenY, int detail, int button, boolean altKey, boolean ctrlKey, boolean shiftKey, boolean metaKey, boolean hasRelatedTarget)", "signatureAfterChange": "  boolean handleMouseEvent (String type, int screenX, int screenY, int detail, int button, boolean altKey, boolean ctrlKey, boolean shiftKey, boolean metaKey, boolean hasRelatedTarget)", "diff": ["-\t\tbrowser.notifyListeners (mouseEvent.type, mouseEvent);", "-\t\t* Bug in WebKitGTK.  Dragging an image quickly and repeatedly can cause", "-\t\t* WebKitGTK to take the mouse grab indefinitely and lock up the display,", "-\t\t* see https://bugs.webkit.org/show_bug.cgi?id=32840.  The workaround is", "-\t\t* to veto all drag attempts.", "+\t\t* Bug in WebKitGTK 1.2.x.  Dragging an image quickly and repeatedly can", "+\t\t* cause WebKitGTK to take the mouse grab indefinitely and lock up the", "+\t\t* display, see https://bugs.webkit.org/show_bug.cgi?id=32840.  The", "+\t\t* workaround is to veto all drag attempts if using WebKitGTK 1.2.x.", "-\t\treturn false;", "+\t\tif (!IsWebKitGTK14orNewer) {", "+\t\t\tbrowser.notifyListeners (mouseEvent.type, mouseEvent);", "+\t\t\treturn false;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff7216379aad043f7bb8b3b7ab171e66", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "e73d120d5e37884ab50e6301a907bc6b240738dc", "commitAfterChange": "308fb225ca7c50dd338d7be0181861ac767a6584", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " protected void init ()", "signatureAfterChange": " protected void init ()", "diff": ["-\tinitApplicationDelegate();\t", "-\tapplication.finishLaunching();", "+\t", "+\tif (!isEmbedded) {", "+\t\tinitApplicationDelegate();\t", "+\t\tapplication.finishLaunching();", "+\t}", "+\t\t"]}], "num": 45268}