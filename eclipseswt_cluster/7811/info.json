{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "489235f453791ff3261917675ee9f059", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b85bf4e0f38f45cfa48968516b5c4af9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "bf96c511171a3f65f9ce4a22c5a5b08d1dd5d976", "commitAfterChange": "7a1d67f746b314a594406116148490b4cb66e7bd", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 62, "signatureBeforeChange": "  LRESULT WM_SIZE (int wParam, int lParam)", "signatureAfterChange": "  void setBounds (int x, int y, int width, int height, int flags)", "diff": ["+void setBounds (int x, int y, int width, int height, int flags) {", "+\t/*", "+\t* Bug in Windows.  If the table column widths are adjusted", "+\t* in WM_SIZE or WM_POSITIONCHANGED using LVM_SETCOLUMNWIDTH", "+\t* blank lines may be inserted at the top of the table.  A", "+\t* call to LVM_GETTOPINDEX will return a negative number (this", "+\t* is an impossible result).  Once the blank lines appear,", "+\t* there seems to be no way to get rid of them, other than", "+\t* destroying and recreating the table.  By observation, the", "+\t* problem happens when the height of the table is less than", "+\t* the two times the height of a line (this was tested using", "+\t* different fonts and images).  It also seems that the bug", "+\t* does not occur when the redraw is turned off for the table.", "+\t* The fix is to turn off drawing when resizing a table that", "+\t* is small enough to show the problem. ", "+\t*/", "+\tboolean fixResize = false;", "+\tif ((flags & OS.SWP_NOSIZE) == 0) {", "+\t\tRectangle rect = getBounds ();", "+\t\tfixResize = rect.height < getItemHeight () * 2;", "+\t}", "+\tif (fixResize) setRedraw (false);", "+\tsuper.setBounds (x, y, width, height, flags);", "+\tif (fixResize) setRedraw (true);", "+}", "-LRESULT WM_SIZE (int wParam, int lParam) {", "-\t/*", "-\t* Bug in Windows.  If the table column widths are adjusted", "-\t* in WM_SIZE, blank lines may be inserted at the top of the", "-\t* widget.  A call to LVM_GETTOPINDEX will return a negative", "-\t* number (this is an impossible result).  The fix is to do", "-\t* the WM_SIZE processing in WM_WINDOWPOSCHANGED after the", "-\t* table has been updated.", "-\t*/", "-\tresized = true;", "-\treturn null;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e77b66353e701cdfee4940a47b596e0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "869a05d22560f8787f83870ca00ce93f2d9288c4", "commitAfterChange": "625f15cccaec72a6e7aefaa65580720fa6d4113a", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "  void setBounds (int x, int y, int width, int height, int flags, boolean defer)", "signatureAfterChange": "  void setBounds (int x, int y, int width, int height, int flags, boolean defer)", "diff": ["-\t* destroying and recreating the table.  By observation, the", "-\t* problem happens when the height of the table is less than", "-\t* the two times the height of a line (this was tested using", "-\t* different fonts and images).  It also seems that the bug", "-\t* does not occur when the redraw is turned off for the table.", "-\t* The fix is to turn off drawing when resizing a table that", "-\t* is small enough to show the problem. ", "+\t* destroying and recreating the table.  The fix is to send", "+\t* the resize notification after the size has been changed in", "+\t* the operating system.", "+\t* ", "+\t* NOTE:  This does not fix the case when the user is resizing", "+\t* columns dynamically.  There is no fix for this case at this", "+\t* time.", "-\tboolean fixResize = false;", "-\tif ((flags & OS.SWP_NOSIZE) == 0) {", "-\t\tRectangle rect = getBounds ();", "-\t\tfixResize = rect.height < getItemHeight () * 2;", "+\tif ((flags & OS.SWP_NOSIZE) != 0) {", "+\t\tsuper.setBounds (x, y, width, height, flags, defer);", "+\t\treturn;", "-\tif (fixResize) setRedraw (false);", "-\tsuper.setBounds (x, y, width, height, flags, fixResize ? false : defer);", "-\tif (fixResize) setRedraw (true);", "+\tRectangle oldRect = getClientArea ();", "+\tignoreResize = true;", "+\tsuper.setBounds (x, y, width, height, flags, false);", "+\tignoreResize = false;", "+\tRectangle newRect = getClientArea ();", "+\tif (oldRect.width != newRect.width || oldRect.height != newRect.height) {", "+\t\tsetResizeChildren (false);", "+\t\tsendEvent (SWT.Resize);", "+\t\tif (isDisposed ()) return;", "+\t\tif (layout != null) {", "+\t\t\tmarkLayout (false, false);", "+\t\t\tupdateLayout (false, false);", "+\t\t}", "+\t\tsetResizeChildren (true);", "+\t}"]}], "num": 7811}