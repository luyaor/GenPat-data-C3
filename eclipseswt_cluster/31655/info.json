{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b1090781ef22f6030d6fa96cd84861f2", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "227bf04f3f3f7b3b08bf37d65f6dc014", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/motif/org/eclipse/swt/program/Program.java", "commitBeforeChange": "6215640175ccfe897f3840a8201a886b754fe47e", "commitAfterChange": "45ceafadc60325534082e286f4aafee627d1de0d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 8, "signatureBeforeChange": "   static String gnome_getDataDirectory(String dirName)", "signatureAfterChange": "   private static boolean isGnomeDesktop(Display display)", "diff": ["+", "+private static boolean isGnomeDesktop(Display display) {", "+\tint xDisplay = display.xDisplay;", "+\tbyte[] name = Converter.wcsToMbcs(null, \"_WIN_SUPPORTING_WM_CHECK\", true);", "+\tint atom_set = OS.XInternAtom(xDisplay, name, true);", "+\treturn atom_set != OS.None;", "+}", "-", "-static String gnome_getDataDirectory(String dirName) {", "-\t/* Use the character encoding for the default locale */", "-\tbyte [] nameBuffer = Converter.wcsToMbcs (null, dirName, true);", "-\tint ptr = GNOME.gnome_datadir_file(nameBuffer);", "-\tif (ptr == 0) return null;", "-\tint length = OS.strlen(ptr);", "-\tbyte[] dirBuffer = new byte[length];", "-\tOS.memmove(dirBuffer, ptr, length);", "-\t/* Use the character encoding for the default locale */", "-\treturn new String(Converter.mbcsToWcs(null, dirBuffer));", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06f8572899df24cad8f87968c617c63a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/motif/org/eclipse/swt/program/Program.java", "commitBeforeChange": "6215640175ccfe897f3840a8201a886b754fe47e", "commitAfterChange": "45ceafadc60325534082e286f4aafee627d1de0d", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 10, "signatureBeforeChange": "  static String gnome_getMimeType(String name)", "signatureAfterChange": "  private static String gnome_getMimeTypeCommand(String mimeType, boolean gnomeExpectUri[])", "diff": ["+private static String gnome_getMimeTypeCommand(String mimeType, boolean gnomeExpectUri[]) {", "+\tString command = null;", "+\tGnomeVFSMimeApplication application = new GnomeVFSMimeApplication();", "+\tbyte[] mimeTypeBuffer = Converter.wcsToMbcs(null, mimeType+'\\0');", "+\tint ptr = GNOME.gnome_vfs_mime_get_default_application(mimeTypeBuffer);", "+\tif (ptr != 0) {", "+\t\tGNOME.memmove(application, ptr, GnomeVFSMimeApplication.sizeof);", "+\t\tint\tlength = OS.strlen(application.command);", "+\t\tbyte[] buffer = new byte[length];", "+\t\tOS.memmove(buffer, application.command, length);", "+\t\tcommand = new String(Converter.mbcsToWcs(null, buffer));", "+\t\tgnomeExpectUri[0] = application.expects_uris == GNOME.GNOME_VFS_MIME_APPLICATION_ARGUMENT_TYPE_URIS;", "+\t\tGNOME.gnome_vfs_mime_application_free(ptr);", "+\treturn command;", "-", "-static String gnome_getMimeType(String name) {", "-\t/* Use the character encoding for the default locale */", "-\tbyte [] nameBuffer = Converter.wcsToMbcs (null, name, true);", "-\tint ptr = GNOME.gnome_mime_type(nameBuffer);", "-\tif (ptr == 0) return null;", "-\tint length = OS.strlen(ptr);", "-\tbyte[] mimeBuffer = new byte[length];", "-\tOS.memmove(mimeBuffer, ptr, length);", "-\t/* Use the character encoding for the default locale */", "-\treturn new String(Converter.mbcsToWcs(null, mimeBuffer));", "-}"]}], "num": 31655}