{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c8ba969d47c1bb9c3cab6680e9f856d6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15d160e94fe3f61357a6123576808f9a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/internal/BidiUtil.java", "commitBeforeChange": "9bbf56108afb38e7247b78ff301c43989c6d0e68", "commitAfterChange": "8f49d4a8201f325fab6add743b89ff69adf390c8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public static byte[] getRenderInfo(GC gc, String text, int[] order, byte[] classBuffer, int[] dx, int flags, int [] offsets)", "signatureAfterChange": "\r public static char[] getRenderInfo(GC gc, String text, int[] order, byte[] classBuffer, int[] dx, int flags, int [] offsets)", "diff": ["-public static byte[] getRenderInfo(GC gc, String text, int[] order, byte[] classBuffer, int[] dx, int flags, int [] offsets) {\r", "+public static char[] getRenderInfo(GC gc, String text, int[] order, byte[] classBuffer, int[] dx, int flags, int [] offsets) {\r", "-\tbyte[] glyphBuffer = new byte[result.nGlyphs * 2];\r", "+\tchar[] glyphBuffer = new char[result.nGlyphs];\r", "-\t\t\tSystem.arraycopy (dx2, 0, dx, glyphCount / 2, dx2.length);\r", "+\t\t\tSystem.arraycopy (dx2, 0, dx, glyphCount, dx2.length);\r", "-\t\t\t\torder2 [j] += glyphCount / 2;\r", "+\t\t\t\torder2 [j] += glyphCount;\r", "-\t\tbyte[] glyphBuffer2 = new byte[result.nGlyphs * 2];\r", "-\t\tOS.MoveMemory(glyphBuffer2, result.lpGlyphs, glyphBuffer2.length);\r", "+\t\tchar[] glyphBuffer2 = new char[result.nGlyphs];\r", "+\t\tOS.MoveMemory(glyphBuffer2, result.lpGlyphs, glyphBuffer2.length * 2);\r", "-\t\tresult.lpGlyphs += glyphBuffer2.length;\r", "+\t\tresult.lpGlyphs += glyphBuffer2.length * 2;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c4e544fe86480c94a3a19d3d61af1e7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/internal/BidiUtil.java", "commitBeforeChange": "9bbf56108afb38e7247b78ff301c43989c6d0e68", "commitAfterChange": "8f49d4a8201f325fab6add743b89ff69adf390c8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r public static void drawGlyphs(GC gc, byte[] renderBuffer, int[] renderDx, int x, int y)", "signatureAfterChange": "\r public static void drawGlyphs(GC gc, char[] renderBuffer, int[] renderDx, int x, int y)", "diff": ["-public static void drawGlyphs(GC gc, byte[] renderBuffer, int[] renderDx, int x, int y) {\r", "+public static void drawGlyphs(GC gc, char[] renderBuffer, int[] renderDx, int x, int y) {\r", "-\t// why do we have to specify the WORD count, not the byte count?\r", "-\t// when using the ANSI version of ExtTextOut cbCount is supposed to specify the byte count.\r", "-\tOS.ExtTextOutA(gc.handle, x, y, ETO_GLYPH_INDEX, rect, renderBuffer, renderBuffer.length / 2, renderDx);\r", "+\tOS.ExtTextOutW(gc.handle, x, y, ETO_GLYPH_INDEX, rect, renderBuffer, renderBuffer.length, renderDx);\r"]}], "num": 24921}