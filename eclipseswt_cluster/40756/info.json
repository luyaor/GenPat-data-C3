{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "14d14636d6dc68987b9f25a70c801753", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4eed1563a5c295362366c858da0c76a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "cc7a79cec8920b1b6175a6c2124e7f63a3823262", "commitAfterChange": "d8f34c9ec09bc11f5d7b71293f9d378725f3146c", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 43, "signatureBeforeChange": "  int gtk_button_press_event (int widget, int event)", "signatureAfterChange": "  int gtk_button_press_event (int widget, int event)", "diff": ["+", "+int /*long*/ gtk_button_press_event (int /*long*/ widget, int /*long*/ event) {", "+\tGdkEventButton gdkEvent = new GdkEventButton ();", "+\tOS.memmove (gdkEvent, event, GdkEventButton.sizeof);", "+\tif (gdkEvent.window != OS.gtk_tree_view_get_bin_window (handle)) return 0;", "+\tint border = getBorderWidth ();", "+\tint headerHeight = getHeaderHeight ();", "+\tgdkEvent.x += border;", "+\tgdkEvent.y += headerHeight;", "+\tOS.memmove (event, gdkEvent, GdkEventButton.sizeof);", "+\tint /*long*/ result = super.gtk_button_press_event (widget, event);", "+\tgdkEvent.x -= border;", "+\tgdkEvent.y -= headerHeight;", "+\tOS.memmove (event, gdkEvent, GdkEventButton.sizeof);", "+\tif (result != 0) return result;", "+\t/*", "+\t* Feature in GTK.  In a multi-select tree view, when multiple items are already", "+\t* selected, the selection state of the item is toggled and the previous selection ", "+\t* is cleared. This is not the desired behaviour when bringing up a popup menu.", "+\t* Also, when an item is reselected with the right button, the tree view issues", "+\t* an unwanted selection event. The workaround is to detect that case and not", "+\t* run the default handler when the item is already part of the current selection.", "+\t*/", "+\tint button = gdkEvent.button;", "+\tif (button == 3 && gdkEvent.type == OS.GDK_BUTTON_PRESS) {", "+\t\tint /*long*/ [] path = new int /*long*/ [1];", "+\t\tif (OS.gtk_tree_view_get_path_at_pos (handle, (int)gdkEvent.x, (int)gdkEvent.y, path, null, null, null)) {", "+\t\t\tif (path [0] != 0) {", "+\t\t\t\tint /*long*/ selection = OS.gtk_tree_view_get_selection (handle);", "+\t\t\t\tif (OS.gtk_tree_selection_path_is_selected (selection, path [0])) result = 1;", "+\t\t\t\tOS.gtk_tree_path_free (path [0]);", "+\t\t\t}", "+\t\t}", "+\t}", "+\t", "+\t/*", "+\t* Feature in GTK.  When the user clicks in a single selection GtkTreeView", "+\t* and there are no selected items, the first item is selected automatically", "+\t* before the click is processed, causing two selection events.  The is fix", "+\t* is the set the cursor item to be same as the clicked item to stop the", "+\t* widget from automatically selecting the first item.", "+\t*/", "+\tif ((style & SWT.SINGLE) != 0 && getSelectionCount () == 0) {", "+\t\tint /*long*/ [] path = new int /*long*/ [1];", "+\t\tif (OS.gtk_tree_view_get_path_at_pos (handle, (int)gdkEvent.x, (int)gdkEvent.y, path, null, null, null)) {", "+\t\t\tif (path [0] != 0) {", "+\t\t\t\tint /*long*/ selection = OS.gtk_tree_view_get_selection (handle);", "+\t\t\t\tOS.g_signal_handlers_block_matched (selection, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);", "+\t\t\t\tOS.gtk_tree_view_set_cursor (handle, path [0], 0, false);", "+\t\t\t\tOS.g_signal_handlers_unblock_matched (selection, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);", "+\t\t\t\tOS.gtk_tree_path_free (path [0]);", "+\t\t\t}", "+\t\t}", "+\t}", "+\t/*", "+\t* Bug in GTK. GTK segments fault, if the GtkTreeView widget is", "+\t* not in focus and all items in the widget are disposed before", "+\t* it finishes processing a button press.  The fix is to give", "+\t* focus to the widget before it starts processing the event.", "+\t*/", "+\tif (!OS.GTK_WIDGET_HAS_FOCUS (handle)) {", "+\t\tOS.gtk_widget_grab_focus (handle);", "+\t}", "+\treturn result;", "+}", "-", "-int /*long*/ gtk_button_press_event (int /*long*/ widget, int /*long*/ event) {", "-\tint /*long*/ result = super.gtk_button_press_event (widget, event);", "-\tif (result != 0) return result;", "-\t/*", "-\t* Feature in GTK.  In a multi-select tree view, when multiple items are already", "-\t* selected, the selection state of the item is toggled and the previous selection ", "-\t* is cleared. This is not the desired behaviour when bringing up a popup menu.", "-\t* Also, when an item is reselected with the right button, the tree view issues", "-\t* an unwanted selection event. The workaround is to detect that case and not", "-\t* run the default handler when the item is already part of the current selection.", "-\t*/", "-\tGdkEventButton gdkEvent = new GdkEventButton ();", "-\tOS.memmove (gdkEvent, event, GdkEventButton.sizeof);", "-\tint button = gdkEvent.button;", "-\tif (button == 3 && gdkEvent.type == OS.GDK_BUTTON_PRESS) {", "-\t\tint /*long*/ [] path = new int /*long*/ [1];", "-\t\tif (OS.gtk_tree_view_get_path_at_pos (handle, (int)gdkEvent.x, (int)gdkEvent.y, path, null, null, null)) {", "-\t\t\tif (path [0] != 0) {", "-\t\t\t\tint /*long*/ selection = OS.gtk_tree_view_get_selection (handle);", "-\t\t\t\tif (OS.gtk_tree_selection_path_is_selected (selection, path [0])) result = 1;", "-\t\t\t\tOS.gtk_tree_path_free (path [0]);", "-\t\t\t}", "-\t\t}", "-\t}", "-\t", "-\t/*", "-\t* Feature in GTK.  When the user clicks in a single selection GtkTreeView", "-\t* and there are no selected items, the first item is selected automatically", "-\t* before the click is processed, causing two selection events.  The is fix", "-\t* is the set the cursor item to be same as the clicked item to stop the", "-\t* widget from automatically selecting the first item.", "-\t*/", "-\tif ((style & SWT.SINGLE) != 0 && getSelectionCount () == 0) {", "-\t\tint /*long*/ [] path = new int /*long*/ [1];", "-\t\tif (OS.gtk_tree_view_get_path_at_pos (handle, (int)gdkEvent.x, (int)gdkEvent.y, path, null, null, null)) {", "-\t\t\tif (path [0] != 0) {", "-\t\t\t\tint /*long*/ selection = OS.gtk_tree_view_get_selection (handle);", "-\t\t\t\tOS.g_signal_handlers_block_matched (selection, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);", "-\t\t\t\tOS.gtk_tree_view_set_cursor (handle, path [0], 0, false);", "-\t\t\t\tOS.g_signal_handlers_unblock_matched (selection, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);", "-\t\t\t\tOS.gtk_tree_path_free (path [0]);", "-\t\t\t}", "-\t\t}", "-\t}", "-\t/*", "-\t* Bug in GTK. GTK segments fault, if the GtkTreeView widget is", "-\t* not in focus and all items in the widget are disposed before", "-\t* it finishes processing a button press.  The fix is to give", "-\t* focus to the widget before it starts processing the event.", "-\t*/", "-\tif (!OS.GTK_WIDGET_HAS_FOCUS (handle)) {", "-\t\tOS.gtk_widget_grab_focus (handle);", "-\t}", "-\treturn result;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1447f42d359f2de815a8721105d9209e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "6dc9967069dd28c50603bd1249587ea05c6cccac", "commitAfterChange": "73689a8a220b036d97224b0ca3c5b0b6a7948c55", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["+\tCGPoint inMinLimits = new CGPoint (), inMaxLimits = new CGPoint ();", "+\tOS.GetWindowResizeLimits (shellHandle, inMinLimits, inMaxLimits);", "+\tif (DEFAULT_SHELL_WIDTH == -1) DEFAULT_SHELL_WIDTH = (int) inMinLimits.x;", "+\tinMinLimits.y = (int) 0;", "+\tint trim = SWT.TITLE | SWT.CLOSE | SWT.MIN | SWT.MAX;", "+\tif ((style & SWT.NO_TRIM) != 0 || (style & trim) == 0) {", "+\t\tinMinLimits.x = (int) 0;\t", "+\t}", "+\tOS.SetWindowResizeLimits (shellHandle, inMinLimits, inMaxLimits);"]}], "num": 40756}