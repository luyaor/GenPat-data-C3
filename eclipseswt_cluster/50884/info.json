{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "26bc6e011c1751c3b0ed29324eed5f2e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "194efbe29c958a0591e2029dc69fcf18", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "661422432394351e3f7c8246c62533b4985dd33e", "commitAfterChange": "a60dcbe23c6c9a34e8c5f7c1961c3b95bba5018f", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": "  LRESULT WM_NOTIFY (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_NOTIFY (int wParam, int lParam)", "diff": ["+\t\t\t\t/*", "+\t\t\t\t* Bug in Windows.  When a table has the LVS_EX_GRIDLINES extended", "+\t\t\t\t* style and the user drags any column over the first column in the", "+\t\t\t\t* table, making the size become zero, when the user drags a column", "+\t\t\t\t* such that the size of the first column becomes non-zero, the grid", "+\t\t\t\t* lines are not redrawn.  The fix is to detect the case and force", "+\t\t\t\t* a redraw of the first column.", "+\t\t\t\t*/", "+\t\t\t\tint width = OS.SendMessage (handle, OS.LVM_GETCOLUMNWIDTH, 0, 0);", "+\t\t\t\tif (lastWidth == 0 && width > 0) {", "+\t\t\t\t\tint bits = OS.SendMessage (handle, OS.LVM_GETEXTENDEDLISTVIEWSTYLE, 0, 0);", "+\t\t\t\t\tif ((bits & OS.LVS_EX_GRIDLINES) != 0) {", "+\t\t\t\t\t\tRECT rect = new RECT ();", "+\t\t\t\t\t\tOS.GetClientRect (handle, rect);", "+\t\t\t\t\t\trect.right = rect.left + width;", "+\t\t\t\t\t\tOS.InvalidateRect (handle, rect, true);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tlastWidth = width;", "-\t\t\t\tEvent event = new Event ();", "-\t\t\t\t\t\t\tcolumn.sendEvent (SWT.Resize, event);", "+\t\t\t\t\t\t\tcolumn.sendEvent (SWT.Resize);", "-\t\t\t\t\t\t\t\t\tnewColumns [i].sendEvent (SWT.Move, event);", "+\t\t\t\t\t\t\t\t\tnewColumns [i].sendEvent (SWT.Move);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97e62dad191f58b9e70f8cf584385be2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "7a0e684edfa37ede804fa2d0b89ffc7fc19a0fcd", "commitAfterChange": "58e02b4f0ace0c11884926ba3d0ab2bb16b2cdb0", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " public TableItem getItem (Point point)", "signatureAfterChange": " public TableItem getItem (Point point)", "diff": ["-\tif (pinfo.iItem != -1) return _getItem (pinfo.iItem);", "+\tif (pinfo.iItem != -1) {", "+\t\t/*", "+\t\t* Bug in Windows.  When the point that is used by", "+\t\t* LVM_HITTEST is inside the header, Windows returns", "+\t\t* the first item in the table.  The fix is to check", "+\t\t* when LVM_HITTEST returns the first item and make", "+\t\t* sure that when the point is within the header,", "+\t\t* the first item is not returned.", "+\t\t*/", "+\t\tif (pinfo.iItem == 0) {", "+\t\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "+\t\t\tif ((bits & OS.LVS_NOCOLUMNHEADER) == 0) {", "+\t\t\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "+\t\t\t\tif (hwndHeader != 0) {", "+\t\t\t\t\tRECT rect = new RECT ();\t\t\t\t\t", "+\t\t\t\t\tOS.GetWindowRect (hwndHeader, rect);", "+\t\t\t\t\tPOINT pt = new POINT ();", "+\t\t\t\t\tpt.x = pinfo.x;", "+\t\t\t\t\tpt.y = pinfo.y;", "+\t\t\t\t\tOS.MapWindowPoints (handle, 0, pt, 1);", "+\t\t\t\t\tif (OS.PtInRect (rect, pt)) return null;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\treturn _getItem (pinfo.iItem);", "+\t}"]}], "num": 50884}