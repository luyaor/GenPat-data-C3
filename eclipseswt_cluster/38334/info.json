{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a78ac42a8e29e79187498f3c293a39a6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46d2e35580ef8b0810f4b18c7ff3c48a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Table.java", "commitBeforeChange": "34b48a1450d691429218250a2c0b9f1d585dff6c", "commitAfterChange": "6c48129efab113803ef6d6a35457b5eb7eea82a5", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "  public void test_setSelection$Lorg_eclipse_swt_widgets_TableItem()", "signatureAfterChange": "  public void test_setSelection$Lorg_eclipse_swt_widgets_TableItem()", "diff": ["-\tassertEquals(new TableItem[]{items[4]}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[]{items[4]}, table.getSelection());\t", "-\tassertEquals(new TableItem[]{items[4]}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[]{items[4]}, table.getSelection());\t", "-\tassertEquals(new TableItem[] {items[0]}, table.getSelection());", "+\tassertArrayEquals(new TableItem[] {items[0]}, table.getSelection());", "-\tassertEquals(new TableItem[] {items[3]}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[] {items[3]}, table.getSelection());\t", "-\tassertEquals(new TableItem[] {items[4]}, table.getSelection());", "+\tassertArrayEquals(new TableItem[] {items[4]}, table.getSelection());", "-\tassertEquals(new TableItem[] {items[2]}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[] {items[2]}, table.getSelection());\t", "-\tassertEquals(new TableItem[] {items[1]}, table.getSelection());", "+\tassertArrayEquals(new TableItem[] {items[1]}, table.getSelection());", "-\tassertEquals(new TableItem[]{}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[]{}, table.getSelection());\t", "-\tassertEquals(new TableItem[]{}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[]{}, table.getSelection());\t", "-\tassertEquals(new TableItem[]{}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[]{}, table.getSelection());\t", "-\tassertEquals(new TableItem[]{}, table.getSelection());", "+\tassertArrayEquals(new TableItem[]{}, table.getSelection());", "-\tassertEquals(new TableItem[]{}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[]{}, table.getSelection());\t", "-\tassertEquals(new TableItem[]{items[4]}, table.getSelection());", "+\tassertArrayEquals(new TableItem[]{items[4]}, table.getSelection());", "-\tassertEquals(new TableItem[] {items[0]}, table.getSelection());", "+\tassertArrayEquals(new TableItem[] {items[0]}, table.getSelection());", "-\tassertEquals(new TableItem[] {items[3]}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[] {items[3]}, table.getSelection());\t", "-\tassertEquals(new TableItem[] {items[4]}, table.getSelection());", "+\tassertArrayEquals(new TableItem[] {items[4]}, table.getSelection());", "-\tassertEquals(new TableItem[] {items[2]}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[] {items[2]}, table.getSelection());\t", "-\tassertEquals(new TableItem[] {items[1]}, table.getSelection());\t\t\t", "+\tassertArrayEquals(new TableItem[] {items[1]}, table.getSelection());\t\t\t", "-\tassertEquals(new TableItem[]{}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[]{}, table.getSelection());\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95411521783870a569509bb780a1d01d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_List.java", "commitBeforeChange": "34b48a1450d691429218250a2c0b9f1d585dff6c", "commitAfterChange": "6c48129efab113803ef6d6a35457b5eb7eea82a5", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "  public void test_selectII()", "signatureAfterChange": "  public void test_selectII()", "diff": ["-\tassertEquals(\"empty list\", list.getSelectionIndices(), new int[] {});", "+\tassertArrayEquals(\"empty list\", list.getSelectionIndices(), new int[] {});", "-\tassertEquals(\"empty list\", list.getSelectionIndices(), new int[] {});", "+\tassertArrayEquals(\"empty list\", list.getSelectionIndices(), new int[] {});", "-\tassertEquals(\"empty list\", list.getSelectionIndices(), new int[] {});", "+\tassertArrayEquals(\"empty list\", list.getSelectionIndices(), new int[] {});", "-\tassertEquals(list.getSelectionIndices(), new int[] { 0 });", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] { 0 });", "-\tassertEquals(list.getSelectionIndices(), new int[] { 0 });", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] { 0 });", "-\tassertEquals(\"empty list\", list.getSelectionIndices(), new int[] {});", "+\tassertArrayEquals(\"empty list\", list.getSelectionIndices(), new int[] {});", "-\tassertEquals(\"empty list\", list.getSelectionIndices(), new int[] {});", "+\tassertArrayEquals(\"empty list\", list.getSelectionIndices(), new int[] {});", "-\tassertEquals(\"empty list\", list.getSelectionIndices(), new int[] {});", "+\tassertArrayEquals(\"empty list\", list.getSelectionIndices(), new int[] {});", "-\tassertEquals(list.getSelectionIndices(), new int[] { 0 });", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] { 0 });", "-\tassertEquals(list.getSelectionIndices(), new int[] { 0 });", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] { 0 });", "-\tassertEquals(list.getSelectionIndices(), new int[] { 0 });", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] { 0 });", "-\tassertEquals(list.getSelectionIndices(), new int[] { 1 });", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] { 1 });", "-\tassertEquals(list.getSelectionIndices(), new int[] { 2 });", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] { 2 });", "-\tassertEquals(list.getSelectionIndices(), new int[] { 3 });", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] { 3 });", "-\tassertEquals(list.getSelectionIndices(), new int[] { 4 });", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] { 4 });", "-\tassertEquals(list.getSelectionIndices(), new int[] { 4 });", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] { 4 });", "-\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {});", "-\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {});", "-\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {});", "-\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {});"]}], "num": 38334}