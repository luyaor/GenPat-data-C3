{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2bb339eaafcec6c2cc44e803eba79c61", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98b2a91da9f3d9a3c9f4d536536ca625", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "72353ac7f94b26380383764a3b22b9ce8d44a91e", "commitAfterChange": "5b05aa6f4689e570a02934dff54fc1aa76a4eafb", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 38, "signatureBeforeChange": "  int processMouseDown (int callData, int arg1, int int2)", "signatureAfterChange": "  int processMouseDown (int int0, int int1, int int2)", "diff": ["+int processMouseDown (int int0, int int1, int int2) {", "+\tint result = super.processMouseDown (int0, int1, int2);", "+\tif ((style & SWT.MULTI) != 0) selected = true;", "+\tif ((style & SWT.CHECK) != 0) {", "+\t\tdouble [] px = new double [1], py = new double [1];", "+\t\tOS.gdk_event_get_coords (int0, px, py);", "+\t\tint x = (int) (px [0]);", "+\t\tint y = (int) (py [0]);", "+\t\tif (y > 0) {", "+\t\t\tint [] row = new int [1], column = new int [1];", "+\t\t\tif (OS.gtk_clist_get_selection_info (handle, x, y, row, column) != 0) {\t", "+\t\t\t\tint nX = OS.GTK_CLIST_HOFFSET (handle) + 4;", "+\t\t\t\tint nY = OS.GTK_CLIST_VOFFSET (handle) + (OS.GTK_CLIST_ROW_HEIGHT (handle) + 1) * row [0] + 2;", "+\t\t\t\tint [] check_width = new int [1], check_height = new int [1];", "+\t\t\t\tOS.gdk_drawable_get_size (check, check_width, check_height);", "+\t\t\t\tif (nX <= x && x <= nX + check_width [0]) {", "+\t\t\t\t\tif (nY <= y && y <= nY + check_height [0]) {", "+\t\t\t\t\t\tTableItem item = items [row [0]];", "+\t\t\t\t\t\tbyte [] spacing = new byte [1];", "+\t\t\t\t\t\tint [] pixmap = new int [1], mask = new int [1];", "+\t\t\t\t\t\tOS.gtk_clist_get_pixtext (handle, row [0], 0, null, spacing, pixmap, mask);", "+\t\t\t\t\t\tbyte [] text = Converter.wcsToMbcs (null, item.getText (), true);", "+\t\t\t\t\t\tpixmap [0] = pixmap [0] == check ? uncheck : check;", "+\t\t\t\t\t\tOS.gtk_clist_set_pixtext (handle, row [0], 0, text, spacing [0], pixmap [0], mask [0]);", "+\t\t\t\t\t\tEvent event = new Event ();", "+\t\t\t\t\t\tevent.detail = SWT.CHECK;", "+\t\t\t\t\t\tevent.item = item;", "+\t\t\t\t\t\tpostEvent (SWT.Selection, event);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "-", "-int processMouseDown (int callData, int arg1, int int2) {", "-\treturn 0;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff82b7ea9427ab5c83aa2bb272b12613", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "72353ac7f94b26380383764a3b22b9ce8d44a91e", "commitAfterChange": "5b05aa6f4689e570a02934dff54fc1aa76a4eafb", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 34, "signatureBeforeChange": "  int processMouseDown (int callData, int arg1, int int2)", "signatureAfterChange": "  int processMouseDown (int int0, int int1, int int2)", "diff": ["-int processMouseDown (int callData, int arg1, int int2) {", "-\tmouseDown = true;", "-\treturn 0;", "-}", "+int processMouseDown (int int0, int int1, int int2) {", "+\tint result = super.processMouseDown (int0, int1, int2);", "+\tif ((style & SWT.MULTI) != 0) selected = true;", "+\tdouble [] px = new double [1], py = new double [1];", "+\tOS.gdk_event_get_coords (int0, px, py);", "+\tint x = (int)(px[0]), y = (int)(py[0]);\t", "+\tif ((style & SWT.CHECK) != 0) {", "+\t\tif (!OS.gtk_ctree_is_hot_spot (handle, x, y)) {", "+\t\t\tint [] row = new int [1], column = new int [1];", "+\t\t\tif (OS.gtk_clist_get_selection_info (handle, x, y, row, column) != 0) {", "+\t\t\t\tint node = OS.gtk_ctree_node_nth (handle, row [0]);", "+\t\t\t\tint crow = OS.g_list_nth_data (node, 0);", "+\t\t\t\tGtkCTreeRow row_data = new GtkCTreeRow ();", "+\t\t\t\tOS.memmove (row_data, crow, GtkCTreeRow.sizeof);", "+\t\t\t\tint nX = OS.GTK_CLIST_HOFFSET (handle) + OS.GTK_CTREE_TREE_INDENT (handle) * row_data.level - 2;", "+\t\t\t\tint nY = OS.GTK_CLIST_VOFFSET (handle) + (OS.GTK_CLIST_ROW_HEIGHT (handle) + 1) * row [0] + 2;", "+\t\t\t\tint [] check_width = new int [1], check_height = new int [1];", "+\t\t\t\tOS.gdk_drawable_get_size (check, check_width, check_height);", "+\t\t\t\tif (nX <= x && x <= nX + check_width [0]) {", "+\t\t\t\t\tif (nY <= y && y <= nY + check_height [0]) {", "+\t\t\t\t\t\tbyte [] spacing = new byte [1];", "+\t\t\t\t\t\tboolean [] is_leaf = new boolean [1], expanded = new boolean [1];", "+\t\t\t\t\t\tint [] pixmap = new int [1], mask = new int [1];", "+\t\t\t\t\t\tint index = OS.gtk_ctree_node_get_row_data (handle, node) - 1;", "+\t\t\t\t\t\tbyte [] text = Converter.wcsToMbcs (null, items [index].getText (), true);", "+\t\t\t\t\t\tOS.gtk_ctree_get_node_info (handle, node, null, spacing, pixmap, mask, pixmap, mask, is_leaf, expanded);", "+\t\t\t\t\t\tpixmap [0] = pixmap [0] == check ? uncheck : check;", "+\t\t\t\t\t\tOS.gtk_ctree_set_node_info (handle, node, text, spacing [0], pixmap [0], mask [0], pixmap [0], mask [0], is_leaf [0], expanded [0]);", "+\t\t\t\t\t\tEvent event = new Event ();", "+\t\t\t\t\t\tevent.detail = SWT.CHECK;", "+\t\t\t\t\t\tevent.item = items [index];", "+\t\t\t\t\t\tpostEvent (SWT.Selection, event);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}", "+\treturn result;"]}], "num": 4712}