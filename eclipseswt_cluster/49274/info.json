{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aa6b96cfeb58110c77018dee15933167", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b61586ce48d015699197f491c5fe91ff", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/datetime/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "a3eb8313e949f9cb4d7d769018cd74a5e335546c", "commitAfterChange": "9557ec5f83857c038e16871230af1bc8baa0d33e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public DateTime(Composite parent, int style)", "signatureAfterChange": "  public DateTime(Composite parent, int style)", "diff": ["-\tsuper(parent, checkStyle (style) | SWT.NO_REDRAW_RESIZE | (((style & SWT.CALENDAR) != 0)? 0 : SWT.BORDER));", "+\tsuper(parent, checkStyle(style) | SWT.NO_REDRAW_RESIZE | (((style & SWT.CALENDAR) != 0)? 0 : SWT.BORDER));", "-\tListener listener = new Listener() {", "-\t\tpublic void handleEvent(Event e) {", "-\t\t\tDateTime.this.handleEvent(e);", "-\t\t}", "-\t};", "+\t\tListener listener = new Listener() {", "+\t\t\tpublic void handleEvent(Event event) {", "+\t\t\t\tswitch(event.type) {", "+\t\t\t\t\tcase SWT.Paint:\t\thandlePaint(event); break;", "+\t\t\t\t\tcase SWT.Resize:\thandleResize(event); break;", "+\t\t\t\t\tcase SWT.MouseDown:\thandleMouseDown(event); break;", "+\t\t\t\t\tcase SWT.KeyDown:\thandleKeyDown(event); break;", "+\t\t\t\t\tcase SWT.Traverse:\thandleTraverse(event); break;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t};", "+\t\taddListener(SWT.MouseDown, listener);", "-\t\taddListener(SWT.MouseDown, listener);", "-\t\tmonthDown = new Button(this, SWT.ARROW | SWT.LEFT);", "-\t\tmonthUp = new Button(this, SWT.ARROW | SWT.RIGHT);", "+\t\t// TODO: move tooltip strings to .properties", "+\t\tyearDown.setToolTipText(\"Last Year\");", "+\t\tmonthDown = new Button(this, SWT.ARROW | SWT.LEFT);", "+\t\tmonthDown.setToolTipText(\"Last Month\");", "+\t\tmonthUp = new Button(this, SWT.ARROW | SWT.RIGHT);", "+\t\tmonthUp.setToolTipText(\"Next Month\");", "+\t\tyearUp.setToolTipText(\"Next Year\");", "+\t\tlistener = new Listener() {", "+\t\t\tpublic void handleEvent(Event event) {", "+\t\t\t\tswitch(event.type) {", "+\t\t\t\t\tcase SWT.Selection: handleSelection(event); break;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t};", "+\t\tyearDown.addListener(SWT.Selection, listener);", "-\t\tyearDown.addListener(SWT.Selection, listener);", "+\t\t// TODO: add accessibility - hmmm... win32 calendar is not accessible... but text guys are...", "-\t\tif ((this.style & SWT.TIME) != 0) {", "-\t\t\tint h = calendar.get(Calendar.HOUR);", "-\t\t\tint m = calendar.get(Calendar.MINUTE);", "-\t\t\tint s = calendar.get(Calendar.SECOND);", "-\t\t\tint a = calendar.get(Calendar.AM_PM);", "-\t\t\ttext.setText(\"\" + (h < 10 ? \"0\" : \"\") + h + \":\" + (m < 10 ? \"0\" : \"\") + m + \":\" + (s < 10 ? \"0\" : \"\") + s + \" \" + (a == Calendar.AM ? \"AM\" : \"PM\"));", "-\t\t} else { /* SWT.DATE */", "-\t\t\tint y = calendar.get(Calendar.YEAR);", "-\t\t\tint m = calendar.get(Calendar.MONTH);", "-\t\t\tint d = calendar.get(Calendar.DATE);", "-\t\t\ttext.setText(\"\" + (m < 10 ? \"0\" : \"\") + m + \"/\" + (d < 10 ? \"0\" : \"\") + d + \"/\" + y);", "-\t\t}", "+\t\tsetFormat((this.style == SWT.DATE ? defaultDateFormat : defaultTimeFormat));", "+\t\ttext.setText(getComputeSizeString(this.style));", "+\t\tListener listener = new Listener() {", "+\t\t\tpublic void handleEvent(Event event) {", "+\t\t\t\tswitch(event.type) {", "+\t\t\t\t\tcase SWT.KeyDown: onKeyDown(event); break;", "+\t\t\t\t\tcase SWT.FocusIn: onFocusIn(event); break;", "+\t\t\t\t\tcase SWT.FocusOut: onFocusOut(event); break;", "+\t\t\t\t\tcase SWT.MouseDown: onMouseClick(event); break;", "+\t\t\t\t\tcase SWT.MouseUp: onMouseClick(event); break;", "+\t\t\t\t\tcase SWT.Verify: onVerify(event); break;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t};", "+\t\ttext.addListener(SWT.KeyDown, listener);", "+\t\ttext.addListener(SWT.FocusIn, listener);", "+\t\ttext.addListener(SWT.FocusOut, listener);", "+\t\ttext.addListener(SWT.MouseDown, listener);", "+\t\ttext.addListener(SWT.MouseUp, listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "795aeb5a52f73a0a2dad597b81f12c6c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "4a41229267d8ec39ffddb937135f7f228c3d90ec", "commitAfterChange": "a3f5ef23bb9a2d806a5c1b1bcf9eba42e3d5e4ca", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public CTabFolder(Composite parent, int style)", "signatureAfterChange": "\r public CTabFolder(Composite parent, int style)", "diff": ["-\t\r", "-\t// create scrolling arrow buttons\r", "-\tscrollBar = new ToolBar(this, SWT.FLAT);\r", "-\tscrollBar.setVisible(false);\r", "-\tscrollBar.setBackground(background);\r", "-\tscrollLeft = new ToolItem(scrollBar, SWT.PUSH);\r", "-\tscrollLeft.setEnabled(false);\r", "-\tscrollRight = new ToolItem(scrollBar, SWT.PUSH);\r", "-\tscrollRight.setEnabled(false);\r", "-\t\r", "-\t// create close buttons\r", "-\tcloseBar = new ToolBar(this, SWT.FLAT);\r", "-\tcloseBar.setVisible(false);\r", "-\tcloseBar.setBackground(background);\r", "-\tcloseItem = new ToolItem(closeBar, SWT.PUSH);\r", "-\t\r", "-\tinactiveCloseBar = new ToolBar(this, SWT.FLAT);\r", "-\tinactiveCloseBar.setVisible(false);\r", "-\tinactiveCloseBar.setBackground(background);\r", "-\tinactiveCloseItem = new ToolItem(inactiveCloseBar, SWT.PUSH);\r", "-\t\r", "-\t\t\t\tcase SWT.Dispose:\t\t\tonDispose(); break;\r", "-\t\t\t\tcase SWT.Paint:\t\t\tonPaint(event);\tbreak;\r", "-\t\t\t\tcase SWT.Resize:\t\t\tonResize();\tbreak;\r", "-\t\t\t\tcase SWT.MouseDoubleClick:\tonMouseDoubleClick(event);\tbreak;\r", "-\t\t\t\tcase SWT.MouseDown:\t\tonMouseDown(event);\tbreak;\r", "-\t\t\t\tcase SWT.MouseExit:\t\tonMouseExit(event);\tbreak;\r", "+\t\t\t\tcase SWT.Dispose:           onDispose(); break;\r", "+\t\t\t\tcase SWT.Paint:             onPaint(event);\tbreak;\r", "+\t\t\t\tcase SWT.Resize:            onResize();\tbreak;\r", "+\t\t\t\tcase SWT.MouseDoubleClick:  onMouseDoubleClick(event);\tbreak;\r", "+\t\t\t\tcase SWT.MouseDown:         onMouseDown(event);\tbreak;\r", "+\t\t\t\tcase SWT.MouseExit:         onMouseExit(event);\tbreak;\r", "-\t\t\t\tcase SWT.MouseMove:\t\tonMouseMove(event);\tbreak;\r", "-\t\t\t\tcase SWT.Selection:\t\tonSelection(event);\tbreak;\r", "-\t\t\t\tcase SWT.FocusIn:\t\t\tonFocus(event);\tbreak;\r", "-\t\t\t\tcase SWT.FocusOut:\t\t\tonFocus(event);\tbreak;\r", "-\t\t\t\tcase SWT.KeyDown:\t\t\tonKeyDown(event); break;\r", "-\t\t\t\tcase SWT.Traverse:\t\t\tonTraverse(event); break;\r", "+\t\t\t\tcase SWT.MouseMove:         onMouseMove(event);\tbreak;\r", "+\t\t\t\tcase SWT.FocusIn:           onFocus(event);\tbreak;\r", "+\t\t\t\tcase SWT.FocusOut:          onFocus(event);\tbreak;\r", "+\t\t\t\tcase SWT.KeyDown:           onKeyDown(event); break;\r", "+\t\t\t\tcase SWT.Traverse:          onTraverse(event); break;\r", "-\tscrollLeft.addListener(SWT.Selection, listener);\r", "-\tscrollRight.addListener(SWT.Selection, listener);\r", "-\tcloseItem.addListener(SWT.Selection, listener);\r", "-\tinactiveCloseItem.addListener(SWT.Selection, listener);\r", "-\tinactiveCloseBar.addListener (SWT.MouseExit, listener);\r", "+\t\r", "+\tcreateArrowBar();\r", "+\tcreateCloseBar();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dd1889814f279db40ee982c7889641f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "ea0345c3a53f5f855ec326cfec4508279407a40a", "commitAfterChange": "0215664973954ec1e7f14d34d79815e704ff9294", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public CTabFolder(Composite parent, int style)", "signatureAfterChange": "\r public CTabFolder(Composite parent, int style)", "diff": ["-\tListener listener = new Listener() {\r", "-\t\tpublic void handleEvent(Event event) {\r", "-\t\t\thandleEvents(event);\r", "-\t\t}\r", "-\t};\r", "-\taddListener(SWT.Dispose, listener);\r", "-\taddListener(SWT.MouseUp, listener);\r", "-\taddListener(SWT.MouseDoubleClick, listener);\r", "-\taddListener(SWT.MouseMove, listener);\r", "-\taddListener(SWT.MouseExit, listener);\r", "-\taddListener(SWT.Paint, listener);\r", "-\taddListener(SWT.Resize, listener);\r", "-\tscrollLeft.addListener(SWT.Selection, listener);\r", "-\tscrollRight.addListener(SWT.Selection, listener);\r", "-\tcloseItem.addListener(SWT.Selection, listener);\r", "-\tinactiveCloseItem.addListener(SWT.Selection, listener);\r", "-\tinactiveCloseBar.addListener (SWT.MouseExit, listener);\r", "-\t\r", "-\tsetBorderVisible((style & SWT.BORDER) != 0);\r", "-\t\r", "-\taddMouseTrackListener (new MouseTrackAdapter () {\r", "-\t\tpublic void mouseExit(MouseEvent e) {\r", "-\t\t\tif (tip.isDisposed()) return;\r", "-\t\t\tif (tip.isVisible()) tip.setVisible(false);\r", "-\t\t}\r", "-\t\tpublic void mouseHover(MouseEvent e) {\r", "-\t\t\tif (tip.isDisposed()) return;\r", "-\t\t\tPoint pt = new Point (e.x, e.y);\r", "-\t\t\tCTabItem item = getItem(pt);\r", "-\t\t\tif (item != null) {\r", "-\t\t\t\tString tooltip = item.getToolTipText();\r", "-\t\t\t\tif (tooltip != null) {\r", "-\t\t\t\t\t\r", "-\t\t\t\t\tLabel label = (Label) (tip.getChildren() [0]);\r", "-\t\t\t\t\tlabel.setText(tooltip);\r", "-\t\t\t\t\ttip.pack();\r", "-\r", "-\t\t\t\t\tpt.y += 16;\r", "-\t\t\t\t\tpt = toDisplay(pt);\r", "-\t\t\t\t\t/*\r", "-\t\t\t\t\t* Ensure that the tooltip is on the screen.\r", "-\t\t\t\t\t*/\r", "-\t\t\t\t\tDisplay display = tip.getDisplay();\r", "-\t\t\t\t\tRectangle rect = display.getBounds();\r", "-\t\t\t\t\tPoint size = tip.getSize();\r", "-\t\t\t\t\tpt.x = Math.max (0, Math.min (pt.x, rect.width - size.x));\r", "-\t\t\t\t\tpt.y = Math.max (0, Math.min (pt.y, rect.height - size.y));\r", "-\t\t\t\t\ttip.setLocation(pt);\r", "-\t\t\t\t\t\r", "-\t\t\t\t\ttip.setVisible(true);\r", "-\t\t\t\t\treturn;\r", "-\t\t\t\t}\r", "+\t// Add all listeners\r", "+\tListener listener = new Listener() {\r", "+\t\tpublic void handleEvent(Event event) {\r", "+\t\t\tswitch (event.type) {\r", "+\t\t\t\tcase SWT.Dispose:\t\tonDispose(); break;\r", "+\t\t\t\tcase SWT.Paint:\t\t\tonPaint(event);\tbreak;\r", "+\t\t\t\tcase SWT.Resize:\t\tonResize();\tbreak;\r", "+\t\t\t\tcase SWT.MouseDoubleClick:\tonMouseDoubleClick(event);\tbreak;\r", "+\t\t\t\tcase SWT.MouseDown:\t\tonMouseDown(event);\tbreak;\r", "+\t\t\t\tcase SWT.MouseExit:\t\tonMouseExit(event);\tbreak;\r", "+\t\t\t\tcase SWT.MouseHover:\tonMouseHover(event);\tbreak;\r", "+\t\t\t\tcase SWT.MouseMove:\t\tonMouseMove(event);\tbreak;\r", "+\t\t\t\tcase SWT.Selection:\t\tonSelection(event);\tbreak;\r", "-\r", "-\t\t\ttip.setVisible(false);\r", "-\t});\r", "+\t};\r", "+\tint[] folderEvents = new int[]{SWT.Dispose, SWT.MouseDown, SWT.MouseDoubleClick, SWT.MouseMove, SWT.MouseExit, SWT.MouseHover, SWT.Paint, SWT.Resize};\r", "+\tfor (int i = 0; i < folderEvents.length; i++) {\r", "+\t\taddListener(folderEvents[i], listener);\r", "+\t}\r", "+\tscrollLeft.addListener(SWT.Selection, listener);\r", "+\tscrollRight.addListener(SWT.Selection, listener);\r", "+\tcloseItem.addListener(SWT.Selection, listener);\r", "+\tinactiveCloseItem.addListener(SWT.Selection, listener);\r", "+\tinactiveCloseBar.addListener (SWT.MouseExit, listener);\r", "+\t\r", "+\tsetBorderVisible((style & SWT.BORDER) != 0);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd1c92b1474104fc9519510501b628bb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "03f23aa773469b8a3f3e0a770076508526525b40", "commitAfterChange": "1051f4ce684a4239d50c42e8ac0e4ce13591cb56", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public CTabFolder2(Composite parent, int style)", "signatureAfterChange": " public CTabFolder2(Composite parent, int style)", "diff": ["-\tif (onBottom) {", "-\t\tborderRight = borderTop = (style & SWT.BORDER) != 0 ? ((style & SWT.FLAT) != 0 ? 1 : 3) : 0;", "-\t\tborderLeft = (style & SWT.BORDER) != 0 ? 1 : 0;", "-\t\tborderBottom = 0;", "-\t} else {", "-\t\tborderRight = borderBottom = (style & SWT.BORDER) != 0 ? ((style & SWT.FLAT) != 0 ? 1 : 3) : 0;", "-\t\tborderLeft = (style & SWT.BORDER) != 0 ? 1 : 0;", "-\t\tborderTop = 0;", "-\t}", "+\tborderLeft = (style & SWT.BORDER) != 0 ? ((style & SWT.FLAT) != 0 ? 1 : 1 + HIGHLIGHT_MARGIN) : 0;", "+\tborderRight = (style & SWT.BORDER) != 0 ? ((style & SWT.FLAT) != 0 ? 1 : 3 + HIGHLIGHT_MARGIN) : 0;", "+\tborderTop = onBottom ? borderLeft : 0;", "+\tborderBottom = onBottom ? 0 : borderRight;", "-\t\t\t\tcase SWT.Dispose:                onDispose(); break;", "-\t\t\t\tcase SWT.Paint:                     onPaint(event);\tbreak;", "-\t\t\t\tcase SWT.Resize:                   onResize();\tbreak;", "+\t\t\t\tcase SWT.Dispose:          onDispose(); break;", "+\t\t\t\tcase SWT.Paint:            onPaint(event);\tbreak;", "+\t\t\t\tcase SWT.Resize:           onResize();\tbreak;", "-\t\t\t\tcase SWT.MouseDown:          onMouseDown(event);\tbreak;", "-\t\t\t\tcase SWT.MouseHover:\t       onMouseHover(event); break;", "-\t\t\t\tcase SWT.MouseUp:               onMouseUp(event); break;", "-\t\t\t\tcase SWT.FocusIn:                 onFocus(event);\tbreak;", "-\t\t\t\tcase SWT.FocusOut:              onFocus(event);\tbreak;", "-\t\t\t\tcase SWT.Traverse:                onTraverse(event); break;", "+\t\t\t\tcase SWT.MouseDown:        onMouseDown(event);\tbreak;", "+\t\t\t\tcase SWT.MouseHover:       onMouseHover(event); break;", "+\t\t\t\tcase SWT.MouseMove:        onMouseMove(event); break;", "+\t\t\t\tcase SWT.MouseUp:          onMouseUp(event); break;", "+\t\t\t\tcase SWT.FocusIn:          onFocus(event);\tbreak;", "+\t\t\t\tcase SWT.FocusOut:         onFocus(event);\tbreak;", "+\t\t\t\tcase SWT.Traverse:         onTraverse(event); break;", "+\t\tSWT.MouseMove,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c2fd6e252f1891bb649dc2ada351310", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "2cef3fa78da7f2885ce55fa509348982e00b2225", "commitAfterChange": "bbeab947327689cb203638e742e58f555e6c1b64", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public CTabFolder(Composite parent, int style)", "signatureAfterChange": " public CTabFolder(Composite parent, int style)", "diff": ["+\tint style2 = super.getStyle();", "+\tonBottom = (style2 & SWT.BOTTOM) != 0;", "+\tshowClose = (style2 & SWT.CLOSE) != 0;", "+//\tshowMin = (style2 & SWT.MIN) != 0; - conflicts with SWT.TOP", "+//\tshowMax = (style2 & SWT.MAX) != 0; - conflicts with SWT.BOTTOM", "+\tsingle = (style2 & SWT.SINGLE) != 0;", "+\tborderLeft = borderRight = (style & SWT.BORDER) != 0 ? 1 : 0;", "+\tborderTop = onBottom ? borderLeft : 0;", "+\tborderBottom = onBottom ? 0 : borderLeft;", "-\tonBottom = (getStyle() & SWT.BOTTOM) != 0;", "+\t//set up default colors", "+\tDisplay display = getDisplay();", "+\tselectionForeground = display.getSystemColor(SELECTION_FOREGROUND);", "+\tselectionBackground = display.getSystemColor(SELECTION_BACKGROUND);", "+\tborderColor = display.getSystemColor(BORDER1_COLOR);", "+\tsetForeground(display.getSystemColor(FOREGROUND));", "+\tsetBackground(display.getSystemColor(BACKGROUND));", "-\tborderColor1 = new Color(getDisplay(), borderInsideRGB);", "-\tborderColor2 = new Color(getDisplay(), borderMiddleRGB);", "-\tborderColor3 = new Color(getDisplay(), borderOutsideRGB);", "-", "-\t// tool tip support", "-\ttip = new Shell (getShell(), SWT.ON_TOP);", "-\tlabel = new Label (tip, SWT.CENTER);", "+\tinitAccessible();", "-\t\t\t\tcase SWT.Dispose:           onDispose(); break;", "-\t\t\t\tcase SWT.Paint:             onPaint(event);\tbreak;", "-\t\t\t\tcase SWT.Resize:            onResize();\tbreak;", "-\t\t\t\tcase SWT.MouseDoubleClick:  onMouseDoubleClick(event);\tbreak;", "-\t\t\t\tcase SWT.MouseDown:         onMouseDown(event);\tbreak;", "-\t\t\t\tcase SWT.MouseExit:         onMouseExit(event);\tbreak;", "-\t\t\t\tcase SWT.MouseHover:\t\tonMouseHover(event);\tbreak;", "-\t\t\t\tcase SWT.MouseMove:         onMouseMove(event);\tbreak;", "-\t\t\t\tcase SWT.FocusIn:           onFocus(event);\tbreak;", "-\t\t\t\tcase SWT.FocusOut:          onFocus(event);\tbreak;", "-\t\t\t\tcase SWT.KeyDown:           onKeyDown(event); break;", "-\t\t\t\tcase SWT.Traverse:          onTraverse(event); break;", "+\t\t\t\tcase SWT.Dispose:          onDispose(); break;", "+\t\t\t\tcase SWT.FocusIn:          onFocus(event);\tbreak;", "+\t\t\t\tcase SWT.FocusOut:         onFocus(event);\tbreak;", "+\t\t\t\tcase SWT.MenuDetect:       onMenu(event); break;", "+\t\t\t\tcase SWT.MouseDoubleClick: onMouseDoubleClick(event); break;", "+\t\t\t\tcase SWT.MouseDown:        onMouse(event);\tbreak;", "+\t\t\t\tcase SWT.MouseExit:        onMouse(event);\tbreak;", "+\t\t\t\tcase SWT.MouseHover:       onMouseHover(event); break;", "+\t\t\t\tcase SWT.MouseMove:        onMouse(event); break;", "+\t\t\t\tcase SWT.MouseUp:          onMouse(event); break;", "+\t\t\t\tcase SWT.Paint:            onPaint(event);\tbreak;", "+\t\t\t\tcase SWT.Resize:           onResize();\tbreak;", "+\t\t\t\tcase SWT.Traverse:         onTraverse(event); break;", "-\t\tSWT.Paint,", "-\t\tSWT.Resize,  ", "-\t\tSWT.MouseDoubleClick, ", "-\t\tSWT.MouseDown, ", "-\t\tSWT.MouseExit,", "-\t\tSWT.MouseHover, ", "-\t\tSWT.MouseMove,", "+\t\tSWT.MenuDetect,", "+\t\tSWT.MouseDoubleClick, ", "+\t\tSWT.MouseDown,", "+\t\tSWT.MouseExit,", "+\t\tSWT.MouseHover, ", "+\t\tSWT.MouseMove,", "+\t\tSWT.MouseUp,", "+\t\tSWT.Paint,", "+\t\tSWT.Resize,  ", "-\t", "-\tcreateArrowBar();", "-\tcreateCloseBar();", "-\t", "-\tsetBorderVisible((style & SWT.BORDER) != 0);", "-\t", "-\tinitAccessible();\t", "-"]}], "num": 49274}