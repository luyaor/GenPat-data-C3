{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f56ae1e14fabb07da064dac13497e764", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5523cad4f79fb990d93eba25d7e1870e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "3539392530d589ce910e4278acc811f43b907fc4", "commitAfterChange": "b4b61aff0cb1c1ac045f8af3c9d9b60914e3dc14", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": " public String getItem (int index)", "signatureAfterChange": " public String getItem (int index)", "diff": ["-    /* AW", "-\tint [] argList = {OS.XmNitemCount, 0, OS.XmNitems, 0};", "-\tOS.XtGetValues (handle, argList, argList.length / 2);", "-\t*/", "-\tif (!(0 <= index && index < size)) {", "+\tif (!(0 <= index && index < size))", "-\t}", "-\t/* AW", "-\tif (argList [3] == 0) error (SWT.ERROR_CANNOT_GET_ITEM);", "-\tint ptr = argList [3] + (index * 4);", "-\tint [] buffer1 = new int [1];", "-\tOS.memmove (buffer1, ptr, 4);", "-\tptr = buffer1 [0];", "-\tint address = OS.XmStringUnparse (", "-\t\tptr,", "-\t\tnull,", "-\t\tOS.XmCHARSET_TEXT,", "-\t\tOS.XmCHARSET_TEXT,", "-\t\tnull,", "-\t\t0,", "-\t\tOS.XmOUTPUT_ALL);", "-\tif (address == 0) error (SWT.ERROR_CANNOT_GET_ITEM);", "-\tint length = OS.strlen (address);", "-\tbyte [] buffer = new byte [length];", "-\tOS.memmove (buffer, address, length);", "-\tOS.XtFree (address);", "-\treturn new String (Converter.mbcsToWcs (getCodePage (), buffer));", "-    */", "-\treturn (String) fData.get(index);", "+\tPair p= (Pair) fData.get(index);", "+\treturn p.fValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ec7b99ea594b796cd7587ad841cb117", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "441698ecc1c76f73e590da9afb5676ceb4571947", "commitAfterChange": "7e69644e833915ee961adff3b1882f037d334978", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public String [] getItems ()", "signatureAfterChange": " public String [] getItems ()", "diff": ["-    /* AW", "-\tint [] argList = {OS.XmNitems, 0, OS.XmNitemCount, 0};", "-\tOS.XtGetValues (handle, argList, argList.length / 2);", "-\tint items = argList [1], itemCount = argList [3];", "-\tint [] buffer1 = new int [1];", "-\tString [] result = new String [itemCount];", "-\tString codePage = getCodePage ();", "-\tfor (int i=0; i<itemCount; i++) {", "-\t\tOS.memmove (buffer1, items, 4);", "-\t\tint ptr = buffer1 [0];", "-\t\tint address = OS.XmStringUnparse (", "-\t\t\tptr,", "-\t\t\tnull,", "-\t\t\tOS.XmCHARSET_TEXT,", "-\t\t\tOS.XmCHARSET_TEXT,", "-\t\t\tnull,", "-\t\t\t0,", "-\t\t\tOS.XmOUTPUT_ALL);", "-\t\tif (address == 0) error (SWT.ERROR_CANNOT_GET_ITEM);", "-\t\tint length = OS.strlen (address);", "-\t\tbyte [] buffer = new byte [length];", "-\t\tOS.memmove (buffer, address, length);", "-\t\tOS.XtFree (address);", "-\t\tresult[i] = new String (Converter.mbcsToWcs (codePage, buffer));", "-\t\titems += 4;", "-\t}", "-\treturn result;", "-    */", "-    int n= fData.size();", "-    String[] result= new String[n];", "-    for (int i= 0; i < n; i++) {", "-    \tPair p= (Pair) fData.get(i);", "+    String[] result= new String[fData.size()];", "+    Iterator iter= fData.iterator();", "+    for (int i= 0; iter.hasNext(); i++) {", "+    \tPair p= (Pair) iter.next();"]}], "num": 20693}