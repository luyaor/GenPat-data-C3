{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "86552fb917659582ebec3f774ee13135", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3e648d02d6fa735efacbbd0a3fec5fb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/FontData.java", "commitBeforeChange": "c738133a2fdbe3d60fd9dfabbfd9e737153e1aa5", "commitAfterChange": "c9992cb98fd2a837c866ff6f32642b9e42588c7e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public FontData(String string)", "signatureAfterChange": " public FontData(String string)", "diff": ["-\tif (string == null) error(SWT.ERROR_NULL_ARGUMENT);\r", "+\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\r", "-\tif (end == -1) error(SWT.ERROR_NULL_ARGUMENT);\r", "+\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\r", "-\tif (end == -1) error(SWT.ERROR_NULL_ARGUMENT);\r", "+\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\r", "-\tif (end == -1) error(SWT.ERROR_NULL_ARGUMENT);\r", "+\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\r", "-\t\terror(SWT.ERROR_NULL_ARGUMENT);\r", "+\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\r", "-\tif (end == -1) error(SWT.ERROR_NULL_ARGUMENT);\r", "+\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\r", "-\t\terror(SWT.ERROR_NULL_ARGUMENT);\r", "+\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\r", "-\tif (end == -1) {\r", "-\t\tsetName(name);\r", "-\t\tsetHeight(height);\r", "-\t\tsetStyle(style);\r", "-\t\treturn;\r", "-\t}\r", "+\tsetName(name);\r", "+\tsetHeight(height);\r", "+\tsetStyle(style);\r", "+\tif (end == -1) return;\r", "-\tif (end == -1) {\r", "-\t\tsetName(name);\r", "-\t\tsetHeight(height);\r", "-\t\tsetStyle(style);\r", "-\t\treturn;\r", "-\t}\r", "+\tif (end == -1) return;\r", "-\tif (platform.equals(\"MOTIF\") && version2.equals(\"1\")) {\r", "-\t\tstart = end + 1;\r", "-\t\tend = string.length();\r", "-\t\tif (end == -1) {\r", "-\t\t\tsetName(name);\r", "-\t\t\tsetHeight(height);\r", "-\t\t\tsetStyle(style);\r", "-\t\t\treturn;\r", "-\t\t}\r", "-\t\tString xlfd = string.substring(start, end);\r", "-\t\tsetXlfd(xlfd);\r", "+\tif (platform.equals(\"GTK\") && version2.equals(\"1\")) {\r", "-\tsetName(name);\r", "-\tsetHeight(height);\r", "-\tsetStyle(style);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "090616b4b666f77710b505a8aa02c7b2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/PromptService2.java", "commitBeforeChange": "0fc40a1b42db186715b9e463f0d06c86543ea114", "commitAfterChange": "96316cf49d0e892bc89eb57b2ec8956e4f218465", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "  int PromptAuth(int aParent, int aChannel, int level, int authInfo, int checkboxLabel, int checkboxValue, int _retval)", "signatureAfterChange": "  int PromptAuth(int aParent, int aChannel, int level, int authInfo, int checkboxLabel, int checkboxValue, int _retval)", "diff": ["-\tnsIChannel channel = new nsIChannel (aChannel);", "-\tint /*long*/[] uri = new int /*long*/[1];", "-\tint rc = channel.GetURI (uri);", "-\tif (rc != XPCOM.NS_OK) SWT.error (rc);", "-\tif (uri[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);", "-", "-\tnsIURI nsURI = new nsIURI (uri[0]);", "-\tint /*long*/ host = XPCOM.nsEmbedCString_new ();", "-\trc = nsURI.GetHost (host);", "-\tif (rc != XPCOM.NS_OK) SWT.error (rc);", "-\tint length = XPCOM.nsEmbedCString_Length (host);", "-\tint /*long*/ buffer = XPCOM.nsEmbedCString_get (host);", "-\tbyte[] bytes = new byte[length];", "-\tXPCOM.memmove (bytes, buffer, length);", "-\tString hostString = new String (bytes);", "-\tXPCOM.nsEmbedCString_delete (host);", "-", "-\tint /*long*/ spec = XPCOM.nsEmbedCString_new ();", "-\trc = nsURI.GetSpec (spec);", "-\tif (rc != XPCOM.NS_OK) SWT.error (rc);", "-\tlength = XPCOM.nsEmbedCString_Length (spec);", "-\tbuffer = XPCOM.nsEmbedCString_get (spec);", "-\tbytes = new byte[length];", "-\tXPCOM.memmove (bytes, buffer, length);", "-\tString urlString = new String (bytes);", "-\tXPCOM.nsEmbedCString_delete (spec);", "-\tnsURI.Release ();", "-", "-\t\t\t\tevent.location = urlString;", "+\t\t\t\tevent.location = mozilla.lastNavigateURL;", "-\t\t\t\t\trc = auth.SetUsername (string.getAddress ());", "+\t\t\t\t\tint rc = auth.SetUsername (string.getAddress ());", "-\t\tlength = XPCOM.strlen_PRUnichar (checkboxLabel);", "+\t\tint length = XPCOM.strlen_PRUnichar (checkboxLabel);", "-\trc = auth.GetUsername (ptr);", "+\tint rc = auth.GetUsername (ptr);", "-\tlength = XPCOM.nsEmbedString_Length (ptr);", "-\tbuffer = XPCOM.nsEmbedString_get (ptr);", "+\tint length = XPCOM.nsEmbedString_Length (ptr);", "+\tint /*long*/ buffer = XPCOM.nsEmbedString_get (ptr);", "+\tnsIChannel channel = new nsIChannel (aChannel);", "+\tint /*long*/[] uri = new int /*long*/[1];", "+\trc = channel.GetURI (uri);", "+\tif (rc != XPCOM.NS_OK) SWT.error (rc);", "+\tif (uri[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);", "+", "+\tnsIURI nsURI = new nsIURI (uri[0]);", "+\tint /*long*/ host = XPCOM.nsEmbedCString_new ();", "+\trc = nsURI.GetHost (host);", "+\tif (rc != XPCOM.NS_OK) SWT.error (rc);", "+\tlength = XPCOM.nsEmbedCString_Length (host);", "+\tbuffer = XPCOM.nsEmbedCString_get (host);", "+\tbyte[] bytes = new byte[length];", "+\tXPCOM.memmove (bytes, buffer, length);", "+\tString hostString = new String (bytes);", "+\tXPCOM.nsEmbedCString_delete (host);", "+\tnsURI.Release ();", "+"]}], "num": 36426}