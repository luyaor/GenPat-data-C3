{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef518b1394f8d7bf9d41274675247a53", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14733053c8fabecce8e35f5cf98f3a87", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/datetime/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "3ad00be6ef9afe7e6df47f83d131078944dc4ce5", "commitAfterChange": "12e57250d90eb2f3108d26c9c27544dd5c3b66df", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  void handleVerify(Event event)", "signatureAfterChange": "  void handleVerify(Event event)", "diff": ["+\tboolean notify = false;", "+\tint back = 0;", "-\t\tif (event.character == '\\b') {", "-\t\t\tfor (int i = start; i < event.end; i++) {", "-\t\t\t\tswitch (i) {", "-\t\t\t\t\tcase MONTH:", "-\t\t\t\t\tcase MONTH+1:", "-\t\t\t\t\tcase DAY:", "-\t\t\t\t\tcase DAY+1:", "-\t\t\t\t\tcase YEAR:", "-\t\t\t\t\tcase YEAR+1:", "-\t\t\t\t\tcase YEAR+2:", "-\t\t\t\t\tcase YEAR+3: {", "-\t\t\t\t\t\tbuffer.append(' '); break;", "-\t\t\t\t\t}", "-\t\t\t\t\tcase SL1:", "-\t\t\t\t\tcase SL2: {", "-\t\t\t\t\t\tbuffer.append('/'); break;", "-\t\t\t\t\t}", "-\t\t\t\t\tdefault:", "-\t\t\t\t\t\treturn;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\ttext.setSelection(start, start + buffer.length());", "-\t\t\tignore = true;", "-\t\t\ttext.insert(buffer.toString());", "-\t\t\tignore = false;", "-\t\t\ttext.setSelection(start, start);", "-\t\t\treturn;", "-\t\t}", "-\t", "-\t\t\t\tif (chars[i] == '/') {", "-\t\t\t\t\tindex++;", "-\t\t\t\t\tcontinue;", "+\t\t\t\tif (chars[i] != '/') {", "+\t\t\t\t\tbuffer.insert(index, '/');", "-\t\t\t\tbuffer.insert(index++, '/');", "+\t\t\t\tindex++;", "+\t\t\t\tcontinue;", "-\t\t\tif (chars[i] < '0' || '9' < chars[i]) return;", "-\t\t\tif (start + index == MONTH &&  '1' < chars[i]) return;", "-\t\t\tif (start + index == DAY &&  '3' < chars[i]) return;", "+\t\t\tif (chars[i] < '0' || chars[i] > '9') return;", "+\t\t\tif (start + index == MONTH && chars[i] > '1') return;", "+\t\t\tif (start + index == DAY && chars[i] > '3') return;", "+", "-\t\tif (yyyy.indexOf(' ') == -1) {", "-\t\t\tint year = Integer.parseInt(yyyy);", "+\t\tint year = Integer.parseInt(yyyy);", "+\t\tif (calendar.get(Calendar.YEAR) != year) {", "+\t\t\tnotify = true;", "-\t\tif (mm.indexOf(' ') == -1) {", "-\t\t\tint month = Integer.parseInt(mm) - 1;", "-\t\t\tint maxMonth = calendar.getActualMaximum(Calendar.MONTH);", "-\t\t\tif (0 > month || month > maxMonth) return;", "+\t\tint month = Integer.parseInt(mm) - 1;", "+\t\tint maxMonth = calendar.getActualMaximum(Calendar.MONTH);", "+\t\tif (month < 0) return;", "+\t\tif (month > maxMonth) {", "+\t\t\tif (start + length - 1 == MONTH) {", "+\t\t\t\tnewText += \"0\";", "+\t\t\t\tlength = newText.length();", "+\t\t\t\tback = 1;", "+\t\t\t} else return;", "+\t\t}", "+\t\tif (calendar.get(Calendar.MONTH) != month) {", "+\t\t\tnotify = true;", "-\t\tif (dd.indexOf(' ') == -1) {", "-\t\t\tint day = Integer.parseInt(dd);", "-\t\t\tint maxDay = calendar.getActualMaximum(Calendar.DATE);", "-\t\t\tif (1 > day || day > maxDay) return;", "+\t\tint day = Integer.parseInt(dd);", "+\t\tint maxDay = calendar.getActualMaximum(Calendar.DATE);", "+\t\tif (day < 1) return;", "+\t\tif (day > maxDay)  {", "+\t\t\tif (start + length - 1 == DAY) {", "+\t\t\t\tnewText += \"0\";", "+\t\t\t\tlength = newText.length();", "+\t\t\t\tback = 1;", "+\t\t\t} else return;", "+\t\t}", "+\t\tif (calendar.get(Calendar.DATE) != day) {", "-\t\t} else {", "-\t\t\tif (calendar.get(Calendar.MONTH) == Calendar.FEBRUARY) {", "-\t\t\t\tchar firstChar = date.charAt(DAY);", "-\t\t\t\tif (firstChar != ' ' && '2' < firstChar) return;", "-\t\t\t}", "+\t\t\tnotify = true;", "-\t\tif (event.character == '\\b') {", "-\t\t\tfor (int i = start; i < event.end; i++) {", "-\t\t\t\tswitch (i) {", "-\t\t\t\t\tcase HOURS:", "-\t\t\t\t\tcase HOURS+1:", "-\t\t\t\t\tcase MINUTES:", "-\t\t\t\t\tcase MINUTES+1:", "-\t\t\t\t\tcase SECONDS:", "-\t\t\t\t\tcase SECONDS+1: {", "-\t\t\t\t\t\tbuffer.append(' '); break;", "-\t\t\t\t\t}", "-\t\t\t\t\tcase COLON1:", "-\t\t\t\t\tcase COLON2: {", "-\t\t\t\t\t\tbuffer.append(':'); break;", "-\t\t\t\t\t}", "-\t\t\t\t\tdefault:", "-\t\t\t\t\t\treturn;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\ttext.setSelection(start, start + buffer.length());", "-\t\t\tignore = true;", "-\t\t\ttext.insert(buffer.toString());", "-\t\t\tignore = false;", "-\t\t\ttext.setSelection(start, start);", "-\t\t\treturn;", "-\t\t}", "-\t", "-\t\t\tif (chars[i] < '0' || '9' < chars[i]) return;", "-\t\t\tif (start + index == HOURS &&  '1' < chars[i]) return;", "-\t\t\tif (start + index == MINUTES &&  '5' < chars[i]) return;", "-\t\t\tif (start + index == SECONDS &&  '5' < chars[i]) return;", "+\t\t\tif (chars[i] < '0' || chars[i] > '9') return;", "+\t\t\tif (start + index == HOURS && chars[i] > '1') return;", "+\t\t\tif (start + index == MINUTES && chars[i] > '5') return;", "+\t\t\tif (start + index == SECONDS && chars[i] > '5') return;", "+", "-\t\tif (hh.indexOf(' ') == -1) {", "-\t\t\tint hour = Integer.parseInt(hh);", "-\t\t\tint maxHour = calendar.getActualMaximum(Calendar.HOUR);", "-\t\t\tif (0 > hour || hour > maxHour) return;", "+\t\tint hour = Integer.parseInt(hh);", "+\t\tint maxHour = calendar.getActualMaximum(Calendar.HOUR);", "+\t\tif (0 > hour || hour > maxHour) return;", "+\t\tif (calendar.get(Calendar.HOUR) != hour) {", "+\t\t\tnotify = true;", "-\t\tif (mm.indexOf(' ') == -1) {", "-\t\t\tint minute = Integer.parseInt(mm);", "-\t\t\tint maxMinute = calendar.getActualMaximum(Calendar.MINUTE);", "-\t\t\tif (0 > minute || minute > maxMinute) return;", "+\t\tint minute = Integer.parseInt(mm);", "+\t\tint maxMinute = calendar.getActualMaximum(Calendar.MINUTE);", "+\t\tif (0 > minute || minute > maxMinute) return;", "+\t\tif (calendar.get(Calendar.MINUTE) != minute) {", "+\t\t\tnotify = true;", "-\t\tif (ss.indexOf(' ') == -1) {", "-\t\t\tint second = Integer.parseInt(ss);", "-\t\t\tint maxSec = calendar.getActualMaximum(Calendar.SECOND);", "-\t\t\tif (0 > second || second > maxSec) return;", "+\t\tint second = Integer.parseInt(ss);", "+\t\tint maxSec = calendar.getActualMaximum(Calendar.SECOND);", "+\t\tif (0 > second || second > maxSec) return;", "+\t\tif (calendar.get(Calendar.SECOND) != second) {", "+\t\t\tnotify = true;", "-\t\tif (ap.equalsIgnoreCase(\"AM\")) {", "-\t\t\tcalendar.set(Calendar.AM_PM, Calendar.AM);", "-\t\t} else if (ap.equalsIgnoreCase(\"PM\")) {", "-\t\t\tcalendar.set(Calendar.AM_PM, Calendar.PM);", "+\t\tif (ap.equals(\"AM\")) {", "+\t\t\tif (calendar.get(Calendar.AM_PM) != Calendar.AM) {", "+\t\t\t\tcalendar.set(Calendar.AM_PM, Calendar.AM);", "+\t\t\t\tnotify = true;", "+\t\t\t}", "+\t\t} else if (ap.equals(\"PM\")) {", "+\t\t\tif (calendar.get(Calendar.AM_PM) != Calendar.PM) {", "+\t\t\t\tcalendar.set(Calendar.AM_PM, Calendar.PM);", "+\t\t\t\tnotify = true;", "+\t\t\t}", "+\tif (back > 0) text.setSelection(start + length - back);", "+\tif (notify) notifyListeners(SWT.Selection, new Event());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f4f2135f05419a5dfd05f39437ae699", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/datetime/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "a3eb8313e949f9cb4d7d769018cd74a5e335546c", "commitAfterChange": "9557ec5f83857c038e16871230af1bc8baa0d33e", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 40, "signatureBeforeChange": "  void handleVerify(Event event)", "signatureAfterChange": "  void setField(int fieldName, int value)", "diff": ["-void handleVerify(Event event) {", "-\tif (ignore) return;", "-\tevent.doit = false;", "-\tint start = event.start;", "-\tString newText = \"\";", "-\tint length = 0;", "-\tboolean notify = false;", "-\tint back = 0;", "-\tif ((style & SWT.DATE) != 0) {", "-\t\tfinal int MAX = 9;", "-\t\tif (start > MAX) return;", "-\t\tStringBuffer buffer = new StringBuffer(event.text);", "-\t\tchar[] chars = new char[buffer.length()];", "-\t\tbuffer.getChars(0, chars.length, chars, 0);", "-\t\tint index = 0;", "-\t\tfor (int i = 0; i < chars.length; i++) {", "-\t\t\tif (start + index == SL1 || start + index == SL2) {", "-\t\t\t\tif (chars[i] != '/') {", "-\t\t\t\t\tbuffer.insert(index, '/');", "-\t\t\t\t}", "-\t\t\t\tindex++;", "-\t\t\t\tcontinue;", "-\t\t\tif (chars[i] < '0' || chars[i] > '9') return;", "-\t\t\tif (start + index == MONTH && chars[i] > '1') return;", "-\t\t\tif (start + index == DAY && chars[i] > '3') return;", "-\t\t\tindex++;", "-\t\t}", "-\t\tnewText = buffer.toString();", "-\t\tlength = newText.length();", "-\t\tStringBuffer date = new StringBuffer(text.getText());", "-\t\tdate.replace(start, start + length, newText);", "-", "-\t\tString yyyy = date.substring(YEAR, YEAR+4);", "-\t\tint year = Integer.parseInt(yyyy);", "-\t\tif (calendar.get(Calendar.YEAR) != year) {", "-\t\t\tcalendar.set(Calendar.YEAR, year);", "-\t\t\tnotify = true;", "-\t\t}", "-\t\tString mm = date.substring(MONTH, MONTH+2);", "-\t\tint month = Integer.parseInt(mm) - 1;", "-\t\tint maxMonth = calendar.getActualMaximum(Calendar.MONTH);", "-\t\tif (month < 0) return;", "-\t\tif (month > maxMonth) {", "-\t\t\tif (start + length - 1 == MONTH) {", "-\t\t\t\tnewText += \"0\";", "-\t\t\t\tlength = newText.length();", "-\t\t\t\tback = 1;", "-\t\t\t} else return;", "-\t\t}", "-\t\tif (calendar.get(Calendar.MONTH) != month) {", "-\t\t\tcalendar.set(Calendar.MONTH, month);", "-\t\t\tnotify = true;", "-\t\t}", "-\t\tString dd = date.substring(DAY, DAY+2);", "-\t\tint day = Integer.parseInt(dd);", "-\t\tint maxDay = calendar.getActualMaximum(Calendar.DATE);", "-\t\tif (day < 1) return;", "-\t\tif (day > maxDay)  {", "-\t\t\tif (start + length - 1 == DAY) {", "-\t\t\t\tnewText += \"0\";", "-\t\t\t\tlength = newText.length();", "-\t\t\t\tback = 1;", "-\t\t\t} else return;", "-\t\t}", "-\t\tif (calendar.get(Calendar.DATE) != day) {", "-\t\t\tcalendar.set(Calendar.DATE, day);", "-\t\t\tnotify = true;", "-\t\t}", "-\t} else { /* SWT.TIME */", "-\t\tfinal int MAX = 10;", "-\t\tif (start > MAX) return;", "-\t\tStringBuffer buffer = new StringBuffer(event.text);", "-\t\tchar[] chars = new char[buffer.length()];", "-\t\tbuffer.getChars(0, chars.length, chars, 0);", "-\t\tint index = 0;", "-\t\tfor (int i = 0; i < chars.length; i++) {", "-\t\t\tif (start + index == COLON1 || start + index == COLON2) {", "-\t\t\t\tif (chars[i] == ':') {", "-\t\t\t\t\tindex++;", "-\t\t\t\t\tcontinue;", "-\t\t\t\t}", "-\t\t\t\tbuffer.insert(index++, ':');", "-\t\t\t}", "-\t\t\tif (start + index == SP) {", "-\t\t\t\tif (chars[i] == ' ') {", "-\t\t\t\t\tindex++;", "-\t\t\t\t\tcontinue;", "-\t\t\t\t}", "-\t\t\t\tbuffer.insert(index++, ' ');", "-\t\t\t}", "-\t\t\tchar c = Character.toUpperCase(chars[i]);", "-\t\t\tif (start + index == AM_PM) {", "-\t\t\t\tif (c == 'A' || c == 'P') {", "-\t\t\t\t\tbuffer.setCharAt(index++, c);", "-\t\t\t\t\tcontinue;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tif (start + index == AM_PM+1) {", "-\t\t\t\tif (c == 'M') {", "-\t\t\t\t\tbuffer.setCharAt(index++, c);", "-\t\t\t\t\tcontinue;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tif (chars[i] < '0' || chars[i] > '9') return;", "-\t\t\tif (start + index == HOURS && chars[i] > '1') return;", "-\t\t\tif (start + index == MINUTES && chars[i] > '5') return;", "-\t\t\tif (start + index == SECONDS && chars[i] > '5') return;", "-\t\t\tindex++;", "-\t\t}", "-\t\tnewText = buffer.toString();", "-\t\tlength = newText.length();", "-\t\tStringBuffer time = new StringBuffer(text.getText());", "-\t\ttime.replace(start, start + length, newText);", "-", "-\t\tString hh = time.substring(HOURS, HOURS+2);", "-\t\tint hour = Integer.parseInt(hh);", "-\t\tint maxHour = calendar.getActualMaximum(Calendar.HOUR);", "-\t\tif (0 > hour || hour > maxHour) return;", "-\t\tif (calendar.get(Calendar.HOUR) != hour) {", "-\t\t\tcalendar.set(Calendar.HOUR, hour);", "-\t\t\tnotify = true;", "-\t\t}", "-\t\tString mm = time.substring(MINUTES, MINUTES+2);", "-\t\tint minute = Integer.parseInt(mm);", "-\t\tint maxMinute = calendar.getActualMaximum(Calendar.MINUTE);", "-\t\tif (0 > minute || minute > maxMinute) return;", "-\t\tif (calendar.get(Calendar.MINUTE) != minute) {", "-\t\t\tcalendar.set(Calendar.MINUTE, minute);", "-\t\t\tnotify = true;", "-\t\t}", "-\t\tString ss = time.substring(SECONDS, SECONDS+2);", "-\t\tint second = Integer.parseInt(ss);", "-\t\tint maxSec = calendar.getActualMaximum(Calendar.SECOND);", "-\t\tif (0 > second || second > maxSec) return;", "-\t\tif (calendar.get(Calendar.SECOND) != second) {", "-\t\t\tcalendar.set(Calendar.SECOND, second);", "-\t\t\tnotify = true;", "-\t\t}", "-\t\tString ap = time.substring(AM_PM, AM_PM+2);", "-\t\tif (ap.equals(\"AM\")) {", "-\t\t\tif (calendar.get(Calendar.AM_PM) != Calendar.AM) {", "-\t\t\t\tcalendar.set(Calendar.AM_PM, Calendar.AM);", "-\t\t\t\tnotify = true;", "-\t\t\t}", "-\t\t} else if (ap.equals(\"PM\")) {", "-\t\t\tif (calendar.get(Calendar.AM_PM) != Calendar.PM) {", "-\t\t\t\tcalendar.set(Calendar.AM_PM, Calendar.PM);", "-\t\t\t\tnotify = true;", "-\t\t\t}", "-\t\t} else return;", "-\ttext.setSelection(start, start + length);", "-\tignore = true;", "-\ttext.insert(newText);", "-\tignore = false;", "-\tif (back > 0) text.setSelection(start + length - back);", "-\tif (notify) notifyListeners(SWT.Selection, new Event());", "+", "+void setField(int fieldName, int value) {", "+\t// TODO: make sure this is called on focus lost, field change, and field 'full' (plus home, end, increment)", "+\t// assumes that the value is already valid for this field", "+\tif (calendar.get(fieldName) == value) return;", "+\t// TODO: other fields can change value also, so when current field changes,", "+\t// check whether other fields changes and set edit fields accordingly", "+\tcalendar.set(fieldName, value);", "+\tnotifyListeners(SWT.Selection, new Event());", "+}"]}], "num": 5514}