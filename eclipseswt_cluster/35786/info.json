{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c3658624f49e32e115fdadcf72743af7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aeabd72a57ce7562014871d4b8c543d0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "404d54366486dc87e085a0a1c5187273fbd5d883", "commitAfterChange": "d57ce4c847d12740eaea9c78b892a134f6a3cb64", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " void setStyleRanges (int[] newRanges, StyleRange[] newStyles)", "signatureAfterChange": " void setStyleRanges (int[] newRanges, StyleRange[] newStyles)", "diff": ["-\t\t}\t\t", "+\t\t}", "-\t\t\tint newStart = newStyles[i].start;", "-\t\t\tint newEnd = newStart + newStyles[i].length;", "+\t\t\tStyleRange newStyle = newStyles[i], style; ", "+\t\t\tint newStart = newStyle.start;", "+\t\t\tint newEnd = newStart + newStyle.length;", "-\t\t\tif (styles[modifyStart].start < newStart && newStart < styles[modifyStart].start + styles[modifyStart].length) {", "-\t\t\t\tStyleRange style = mergeStyles[mergeCount++] = (StyleRange)styles[modifyStart].clone();", "+\t\t\tstyle = styles[modifyStart];", "+\t\t\tif (style.start < newStart && newStart < style.start + style.length) {", "+\t\t\t\tstyle = mergeStyles[mergeCount++] = (StyleRange)style.clone();", "-\t\t\tmergeStyles[mergeCount++] = newStyles[i];", "-\t\t\tif (modifyEnd < styleCount && styles[modifyEnd].start < newEnd && newEnd < styles[modifyEnd].start + styles[modifyEnd].length) {", "-\t\t\t\tStyleRange style = mergeStyles[mergeCount++] = (StyleRange)styles[modifyEnd].clone();", "-\t\t\t\tstyle.start = newEnd;", "-\t\t\t\tstyle.length = styles[modifyEnd].start + styles[modifyEnd].length - newEnd;", "-\t\t\t\tmodifyLast = 1;", "+\t\t\tmergeStyles[mergeCount++] = newStyle;", "+\t\t\tif (modifyEnd < styleCount) {", "+\t\t\t\tstyle = styles[modifyEnd];", "+\t\t\t\tif (style.start < newEnd && newEnd < style.start + style.length) {", "+\t\t\t\t\tstyle = mergeStyles[mergeCount++] = (StyleRange)style.clone();", "+\t\t\t\t\tstyle.length += style.start - newEnd;", "+\t\t\t\t\tstyle.start = newEnd;", "+\t\t\t\t\tmodifyLast = 1;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b725f5d46145bc5c44d6a26c7035d4b4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "635a9e5d0a5f495ec272194dbb750eddc745876f", "commitAfterChange": "e83d77b7ddccf5500d06ea30a64ce0d090ac4b10", "methodNumberBeforeChange": 299, "methodNumberAfterChange": 160, "signatureBeforeChange": " public StyleRange [] getStyleRanges(int start, int length)", "signatureAfterChange": " public StyleRange[] getStyleRanges(int start, int length, boolean includeRanges)", "diff": ["-public StyleRange [] getStyleRanges(int start, int length) {", "+ */", "+public StyleRange[] getStyleRanges(int start, int length, boolean includeRanges) {", "-\t}\t", "-\tStyleRange styles[];", "-\t", "-\tif (!userLineStyle) {", "-\t\tstyles = defaultLineStyler.getStyleRangesFor(start, length);", "-\t\tif (styles == null) return new StyleRange[0];", "-\t\t// adjust the first and last style to reflect the specified ", "-\t\t// range, clone these styles since the returned styles are the", "-\t\t// styles cached by the widget", "-\t\tif (styles.length == 1) {", "-\t\t\tStyleRange style = styles[0];", "-\t\t\tif (style.start < start) {", "-\t\t\t\tStyleRange newStyle = (StyleRange)styles[0].clone();", "-\t\t\t\tnewStyle.length = newStyle.length - (start - newStyle.start);", "-\t\t\t\tnewStyle.start = start;", "-\t\t\t\tstyles[0] = newStyle;", "-\t\t\t}", "-\t\t\tif (style.start + style.length > (start + length)) {", "-\t\t\t\tStyleRange newStyle = (StyleRange)styles[0].clone();", "-\t\t\t\tnewStyle.length = start + length - newStyle.start;", "-\t\t\t\tstyles[0] = newStyle;", "-\t\t\t}", "-\t\t} else if (styles.length > 1) {", "-\t\t\tStyleRange style = styles[0];", "-\t\t\tif (style.start < start) {", "-\t\t\t\tStyleRange newStyle = (StyleRange)styles[0].clone();", "-\t\t\t\tnewStyle.length = newStyle.length - (start - newStyle.start);", "-\t\t\t\tnewStyle.start = start;", "-\t\t\t\tstyles[0] = newStyle;", "-\t\t\t}", "-\t\t\tstyle = styles[styles.length - 1];", "-\t\t\tif (style.start + style.length > (start + length)) {", "-\t\t\t\tStyleRange newStyle = (StyleRange)styles[styles.length - 1].clone();", "-\t\t\t\tnewStyle.length = start + length - newStyle.start;", "-\t\t\t\tstyles[styles.length - 1] = newStyle;", "-\t\t\t}", "-\t\t}", "-\telse {", "-\t\tstyles = new StyleRange[0];", "+\tif (!isListening(LineGetStyle)) {", "+\t\tStyleRange[] ranges = renderer.getStyleRanges(start, length, includeRanges);", "+\t\tif (ranges != null) return ranges;", "-\treturn styles;", "+\treturn new StyleRange[0];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "004792255bb48a66fa374e001a5c0d38", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "7a850966fcebc2510dcdae26a2185eb84e5caa97", "commitAfterChange": "ea4d187e18c5cb79cd146d623e9cb83cded32237", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " void setStyleRanges (int[] newRanges, StyleRange[] newStyles)", "signatureAfterChange": " void setStyleRanges (int[] newRanges, StyleRange[] newStyles)", "diff": ["-\tif (newRanges == null && NEW_DB) {", "+\tif (newRanges == null && COMPACT_STYLES) {", "-\t\tint start = newRanges[0];", "+\t\tint start = newRanges[0];", "+\t\tint end = newRanges[newRanges.length - 2] + newRanges[newRanges.length - 1];", "-\t\tint modifyEnd = modifyStart;", "-\t\tif (modifyStart == rangeCount) {", "+\t\tint modifyEnd = getRangeIndex(end, modifyStart - 1, rangeCount);", "+\t\tif (modifyStart == modifyEnd) {", "+\t\tmodifyEnd = modifyStart;", "+\t\tint end = newStyles[newStyles.length - 1].start + newStyles[newStyles.length - 1].length;", "-\t\tint modifyEnd = modifyStart;", "-\t\tif (modifyStart == styleCount) {", "-\t\t\taddMerge(newStyles, newStyles.length, modifyStart, modifyEnd);", "+\t\tint modifyEnd = getRangeIndex(end, modifyStart - 1, styleCount);", "+\t\tif (modifyStart == modifyEnd) {", "+\t\t\taddMerge(newStyles, newStyles.length, modifyStart, modifyStart);", "+\t\tmodifyEnd = modifyStart;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24c4b595f1056b0626e0111b2693d547", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "afd478deaa7778cf295d4bea972aeb3e541e8185", "commitAfterChange": "6c8b5dc7173523fb08f82253cc9e4e6076e2d218", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " void setStyleRanges (int[] newRanges, StyleRange[] newStyles)", "signatureAfterChange": " void setStyleRanges (int[] newRanges, StyleRange[] newStyles)", "diff": ["-\t\tint end = newRanges[newRanges.length - 2] + newRanges[newRanges.length - 1];", "-\t\tint modifyStart = getRangeIndex(start, -1, rangeCount);", "-\t\tint modifyEnd = getRangeIndex(end, modifyStart - 1, rangeCount);", "-\t\tif (modifyStart == modifyEnd) {", "-\t\t\taddMerge(newRanges, newStyles, newRanges.length, modifyStart, modifyEnd);", "+\t\tint modifyStart = getRangeIndex(start, -1, rangeCount), modifyEnd;", "+\t\tboolean fastInsert = modifyStart == rangeCount;", "+\t\tif (!fastInsert) {", "+\t\t\tint end = newRanges[newRanges.length - 2] + newRanges[newRanges.length - 1];", "+\t\t\tmodifyEnd = getRangeIndex(end, modifyStart - 1, rangeCount);", "+\t\t\tfastInsert = modifyStart == modifyEnd && ranges[modifyStart] >= end;", "+\t\t}", "+\t\tif (fastInsert) {", "+\t\t\taddMerge(newRanges, newStyles, newRanges.length, modifyStart, modifyStart);", "-\t\tint end = newStyles[newStyles.length - 1].start + newStyles[newStyles.length - 1].length;", "-\t\tint modifyStart = getRangeIndex(start, -1, styleCount);", "-\t\tint modifyEnd = getRangeIndex(end, modifyStart - 1, styleCount);", "-\t\tif (modifyStart == modifyEnd) {", "+\t\tint modifyStart = getRangeIndex(start, -1, styleCount), modifyEnd;", "+\t\tboolean fastInsert = modifyStart == styleCount;", "+\t\tif (!fastInsert) {", "+\t\t\tint end = newStyles[newStyles.length - 1].start + newStyles[newStyles.length - 1].length;", "+\t\t\tmodifyEnd = getRangeIndex(end, modifyStart - 1, styleCount);", "+\t\t\tfastInsert = modifyStart == modifyEnd && styles[modifyStart].start >= end;", "+\t\t}", "+\t\tif (fastInsert) {"]}], "num": 35786}