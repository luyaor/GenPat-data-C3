{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "98941ebfdce87eed06d0c767c9662f6e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "582c3fad1c8d2c1b947d2003f1171ba5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "040fd9d514ac61b48864fec8900fd39b5b1a66ab", "commitAfterChange": "9227d728eba1d0a4ac6bdb3c2c1622885187e116", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 119, "signatureBeforeChange": "  @Override void setBackgroundColor (GdkColor color)", "signatureAfterChange": "  @Override void setBackgroundColor (long context, long handle, GdkRGBA rgba)", "diff": ["-\t} else {", "-\t\t// Setting the background color overrides the selected background color", "-\t\t// so we have to reset it the default.", "-\t\tGdkColor defaultColor = getDisplay().COLOR_LIST_SELECTION;", "-\t\tGdkRGBA selectedBackground = new GdkRGBA ();", "-\t\tselectedBackground.alpha = 1;", "-\t\tselectedBackground.red = (defaultColor.red & 0xFFFF) / (float)0xFFFF;", "-\t\tselectedBackground.green = (defaultColor.green & 0xFFFF) / (float)0xFFFF;", "-\t\tselectedBackground.blue = (defaultColor.blue & 0xFFFF) / (float)0xFFFF;", "-\t\tOS.gtk_widget_override_background_color (handle, OS.GTK_STATE_FLAG_SELECTED, selectedBackground);", "+@Override", "+void setBackgroundColor (long /*int*/ context, long /*int*/ handle, GdkRGBA rgba) {", "+\t/* Setting the background color overrides the selected background color.", "+\t * To prevent this, we need to re-set the default. This can be done with CSS", "+\t * on GTK3.16+, or by using GtkStateFlags as an argument to", "+\t * gtk_widget_override_background_color() on versions of GTK3 less than 3.16.", "+\t */", "+\tbackground = rgba;", "+\tGdkColor defaultColor = getDisplay().COLOR_LIST_SELECTION;", "+\tGdkRGBA selectedBackground = new GdkRGBA ();", "+\tselectedBackground.alpha = 1;", "+\tselectedBackground.red = (defaultColor.red & 0xFFFF) / (float)0xFFFF;", "+\tselectedBackground.green = (defaultColor.green & 0xFFFF) / (float)0xFFFF;", "+\tselectedBackground.blue = (defaultColor.blue & 0xFFFF) / (float)0xFFFF;", "+\tif (OS.GTK_VERSION >= OS.VERSION(3, 16, 0)) {", "+\t\tString css = \"GtkTreeView {background-color: \" + gtk_rgba_to_css_string(rgba) + \";}\\n\"", "+\t\t\t\t+ \"GtkTreeView:selected {background-color: \" + gtk_rgba_to_css_string(selectedBackground) + \";}\";", "+\t\tgtk_css_provider_load_from_css(context, css);", "+\t} else {", "+\t\tsuper.setBackgroundColor(context, handle, rgba);", "+\t\tOS.gtk_widget_override_background_color(handle, OS.GTK_STATE_FLAG_SELECTED, selectedBackground);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdddf862c4c9f70bffa4f0465dc0ff48", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "040fd9d514ac61b48864fec8900fd39b5b1a66ab", "commitAfterChange": "9227d728eba1d0a4ac6bdb3c2c1622885187e116", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 114, "signatureBeforeChange": "  @Override void setBackgroundColor (GdkColor color)", "signatureAfterChange": "  @Override void setBackgroundColor (long context, long handle, GdkRGBA rgba)", "diff": ["-\t} else {", "-\t\t// Setting the background color overrides the selected background color", "-\t\t// so we have to reset it the default.", "-\t\tGdkColor defaultColor = getDisplay().COLOR_LIST_SELECTION;", "-\t\tGdkRGBA selectedBackground = new GdkRGBA ();", "-\t\tselectedBackground.alpha = 1;", "-\t\tselectedBackground.red = (defaultColor.red & 0xFFFF) / (float)0xFFFF;", "-\t\tselectedBackground.green = (defaultColor.green & 0xFFFF) / (float)0xFFFF;", "-\t\tselectedBackground.blue = (defaultColor.blue & 0xFFFF) / (float)0xFFFF;", "-\t\tOS.gtk_widget_override_background_color (handle, OS.GTK_STATE_FLAG_SELECTED, selectedBackground);", "+@Override", "+void setBackgroundColor (long /*int*/ context, long /*int*/ handle, GdkRGBA rgba) {", "+\t/* Setting the background color overrides the selected background color.", "+\t * To prevent this, we need to re-set the default. This can be done with CSS", "+\t * on GTK3.16+, or by using GtkStateFlags as an argument to", "+\t * gtk_widget_override_background_color() on versions of GTK3 less than 3.16.", "+\t */", "+\tbackground = rgba;", "+\tGdkColor defaultColor = getDisplay().COLOR_LIST_SELECTION;", "+\tGdkRGBA selectedBackground = new GdkRGBA ();", "+\tselectedBackground.alpha = 1;", "+\tselectedBackground.red = (defaultColor.red & 0xFFFF) / (float)0xFFFF;", "+\tselectedBackground.green = (defaultColor.green & 0xFFFF) / (float)0xFFFF;", "+\tselectedBackground.blue = (defaultColor.blue & 0xFFFF) / (float)0xFFFF;", "+\tif (OS.GTK_VERSION >= OS.VERSION(3, 16, 0)) {", "+\t\tString css = \"GtkTreeView {background-color: \" + gtk_rgba_to_css_string(rgba) + \";}\\n\"", "+\t\t\t\t+ \"GtkTreeView:selected {background-color: \" + gtk_rgba_to_css_string(selectedBackground) + \";}\";", "+\t\tgtk_css_provider_load_from_css(context, css);", "+\t} else {", "+\t\tsuper.setBackgroundColor(context, handle, rgba);", "+\t\tOS.gtk_widget_override_background_color(handle, OS.GTK_STATE_FLAG_SELECTED, selectedBackground);"]}], "num": 13536}