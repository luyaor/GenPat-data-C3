{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "de79c4017e7cc5bfa1708275094a3311", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a447f8d1e5b9e0a31490bfd7c5352d5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "508642077db3542a9e20724abe45c7179c542fbc", "commitAfterChange": "e9bf063655253a7ef03465b685f75ab36d635694", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void pack ()", "signatureAfterChange": " public void pack ()", "diff": ["-\t/*", "-\t* Bug in Windows.  When the first column of a table does not", "-\t* have an image and the user double clicks on the divider,", "-\t* Windows packs the column but does not take into account", "-\t* the empty space left for the image.  The fix is to measure", "-\t* each items ourselves rather than letting Windows do it.", "-\t*/", "-\tif ((index == 0 && !parent.firstColumnImage) || parent.hooks (SWT.MeasureItem)) {", "+\tif (parent.hooks (SWT.MeasureItem)) {", "+\t\t\t* Bug in Windows.  When the first column of a table does not", "+\t\t\t* have an image and the user double clicks on the divider,", "+\t\t\t* Windows packs the column but does not take into account", "+\t\t\t* the empty space left for the image.  The fix is to increase", "+\t\t\t* the column width by the width of the image list.", "+\t\t\t* ", "+\t\t\t*/", "+\t\t\tif (!parent.firstColumnImage) {", "+\t\t\t\tint /*long*/ hImageList = OS.SendMessage (hwnd, OS.LVM_GETIMAGELIST, OS.LVSIL_SMALL, 0);", "+\t\t\t\tif (hImageList != 0) {", "+\t\t\t\t\tint [] cx = new int [1], cy = new int [1];", "+\t\t\t\t\tOS.ImageList_GetIconSize (hImageList, cx, cy);", "+\t\t\t\t\tcolumnWidth += cx [0];", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\t/*"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "392b0332a47320907f32803489527230", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "8549b1db39ac8fd4bb7564c61e5b9a04b5efde6f", "commitAfterChange": "2b3120470b46968368044df3f94129d586bc41d5", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void pack ()", "signatureAfterChange": " public void pack ()", "diff": ["-\tOS.SendMessage (hwnd, OS.LVM_SETCOLUMNWIDTH, index, OS.LVSCW_AUTOSIZE);", "-\tint columnWidth = OS.SendMessage (hwnd, OS.LVM_GETCOLUMNWIDTH, index, 0);", "-\tif (headerWidth > columnWidth) {", "+\tif ((parent.style & SWT.VIRTUAL) != 0) {", "+\t\t}\t\t", "+\t} else {", "+\t\tOS.SendMessage (hwnd, OS.LVM_SETCOLUMNWIDTH, index, OS.LVSCW_AUTOSIZE);", "+\t\tint columnWidth = OS.SendMessage (hwnd, OS.LVM_GETCOLUMNWIDTH, index, 0);", "+\t\t/*", "+\t\t* Bug in Windows.  When LVM_SETCOLUMNWIDTH is used with LVSCW_AUTOSIZE", "+\t\t* where each item has I_IMAGECALLBACK but there are no images in the", "+\t\t* table, the size computed by LVM_SETCOLUMNWIDTH is to small for the", "+\t\t* first column, causing long items to be clipped with '...'.  The fix", "+\t\t* is to increase the value by a small amount. ", "+\t\t*/", "+\t\tif (index == 0 && parent.imageList == null) columnWidth += 2;", "+\t\tif (headerWidth > columnWidth) {", "+\t\t\tif (image == null) {", "+\t\t\t\tOS.SendMessage (hwnd, OS.LVM_SETCOLUMNWIDTH, index, OS.LVSCW_AUTOSIZE_USEHEADER);", "+\t\t\t} else {", "+\t\t\t\tOS.SendMessage (hwnd, OS.LVM_SETCOLUMNWIDTH, index, headerWidth);", "+\t\t\t}", "+\t\t} else {", "+\t\t\tif (index == 0) {", "+\t\t\t\tOS.SendMessage (hwnd, OS.LVM_SETCOLUMNWIDTH, index, columnWidth);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5963deac65b7ae1c5a47d363003ff0b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "d2ebcc3b59cf696fa67efa94efe4675d8b9e723e", "commitAfterChange": "718bc9a9b46e882335770e11dbe5b23a10fe1c0d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void pack ()", "signatureAfterChange": " public void pack ()", "diff": ["-\t/*", "-\t* Bug in Windows.  When LVM_SETCOLUMNWIDTH is used with LVSCW_AUTOSIZE", "-\t* where each item has I_IMAGECALLBACK but there are no images in the", "-\t* table, the size computed by LVM_SETCOLUMNWIDTH is too small for the", "-\t* first column, causing long items to be clipped with '...'.  The fix", "-\t* is to increase the value by a small amount. ", "-\t*/", "-\tif (index == 0 && parent.imageList == null) columnWidth += 2;", "+\tif (index == 0) {", "+\t\t/*", "+\t\t* Bug in Windows.  When LVM_SETCOLUMNWIDTH is used with LVSCW_AUTOSIZE", "+\t\t* where each item has I_IMAGECALLBACK but there are no images in the", "+\t\t* table, the size computed by LVM_SETCOLUMNWIDTH is too small for the", "+\t\t* first column, causing long items to be clipped with '...'.  The fix", "+\t\t* is to increase the column width by a small amount.", "+\t\t*/", "+\t\tif (parent.imageList == null) columnWidth += 2;", "+\t\t/*", "+\t\t* Bug in Windows.  When LVM_SETCOLUMNWIDTH is used with LVSCW_AUTOSIZE", "+\t\t* for a table with a state image list, the column is width does not", "+\t\t* include space for the state icon.  The fix is to increase the column", "+\t\t* width by the width of the image list.", "+\t\t*/", "+\t\tif ((parent.style & SWT.CHECK) != 0) {", "+\t\t\tint hStateList = OS.SendMessage (hwnd, OS.LVM_GETIMAGELIST, OS.LVSIL_STATE, 0);", "+\t\t\tif (hStateList != 0) {", "+\t\t\t\tint [] cx = new int [1], cy = new int [1];", "+\t\t\t\tOS.ImageList_GetIconSize (hStateList, cx, cy);", "+\t\t\t\tcolumnWidth += cx [0];", "+\t\t\t}", "+\t\t}", "+\t}"]}], "num": 14254}