{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "581c0186ad464ff582475038ba3b9fd0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2378f535a24b343f22141f8d7c48935c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "20b0eb441aada9604976583a80e3bdef4aa3362d", "commitAfterChange": "7a19591ebf7fe6141ff36a49f3e5c931d7f1c3df", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " public void setWrapIndices (int[] data)", "signatureAfterChange": " public void setWrapIndices (int[] indices)", "diff": ["-public void setWrapIndices (int[] data) {", "+public void setWrapIndices (int[] indices) {", "-\tif (data == null) data = new int[0];", "-\tfor (int i=0; i<data.length; i++) {", "-\t\tif (data[i] < 0 || data[i] >= originalItems.length) error (SWT.ERROR_INVALID_ARGUMENT);\t", "-\t}\t", "-\tif (items.length == 0) return;", "-", "-\tCoolItem[] allItems = getItems();", "-\titems = new CoolItem[0][];", "-\tCoolItem[][] newItems;", "-\tCoolItem[] row;", "-\tint itemIndex = 0;", "-\tfor (int i = 0; i <= data.length; i++) {", "-\t\tint nextWrap = (i < data.length) ? data[i] : allItems.length;", "-\t\tif (nextWrap != 0) {", "-\t\t\trow = new CoolItem[nextWrap - itemIndex];", "-\t\t\tSystem.arraycopy(allItems, itemIndex, row, 0, row.length); ", "-\t\t\titemIndex += row.length;", "-\t\t\tnewItems = new CoolItem[items.length + 1][];", "-\t\t\tSystem.arraycopy(items, 0, newItems, 0, items.length);", "-\t\t\tnewItems[items.length] = row;", "-\t\t\titems = newItems;", "+\tif (indices == null) indices = new int[0];", "+\tint count = originalItems.length;", "+\tfor (int i=0; i<indices.length; i++) {", "+\t\tif (indices[i] < 0 || indices[i] >= count) {", "+\t\t\terror (SWT.ERROR_INVALID_ARGUMENT);", "+\t\t}", "+\t}", "+\tfor (int i=0; i<originalItems.length; i++) {", "+\t\toriginalItems[i].wrap = false;", "+\t}", "+\tfor (int i=0; i<indices.length; i++) {", "+\t\tint index = indices[i];", "+\t\tfor (int row = 0; row < items.length; row++) {", "+\t\t\tif (items[row].length > index) {", "+\t\t\t\titems[row][index].wrap = true;", "+\t\t\t\tbreak;", "+\t\t\t} else {", "+\t\t\t\tindex -= items[row].length;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cf3a662ed702680c649d8b9fef4b6ea", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "2e409818fcb398bee5b6a3eb7afe949309df30fb", "commitAfterChange": "2353899a24ebfcb319f8565185c51f1eb7d4d7d0", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": " public void remove(int indices[])", "signatureAfterChange": " public void remove(int indices[])", "diff": ["-\tSelectableItem item;", "-\tint [] sortedIndices;", "-\tint last = -1;", "-\tint sortedIndex;", "-\t", "-\tif (indices == null) {", "-\t\terror(SWT.ERROR_NULL_ARGUMENT);", "+\tif (indices == null) error (SWT.ERROR_NULL_ARGUMENT);", "+\tif (indices.length == 0) return;", "+\tint [] newIndices = new int [indices.length];", "+\tSystem.arraycopy (indices, 0, newIndices, 0, indices.length);", "+\tsort (newIndices);", "+\tint start = newIndices [newIndices.length - 1], end = newIndices [0];", "+\tint count = getItemCount();", "+\tif (!(0 <= start && start <= end && end < count)) {", "+\t\terror (SWT.ERROR_INVALID_RANGE);", "-\tsortedIndices = new int[indices.length];\t", "-\tSystem.arraycopy (indices, 0, sortedIndices, 0, indices.length);", "-\tsort(sortedIndices);\t\t\t\t\t\t\t\t// sort indices in descending order", "-\tfor (int i = 0; i < sortedIndices.length; i++) {", "-\t\tsortedIndex = sortedIndices[i];", "-\t\tif (sortedIndex != last) {", "-\t\t\titem = getVisibleItem(sortedIndex);", "+\tint last = -1;", "+\tfor (int i = 0; i < newIndices.length; i++) {", "+\t\tint index = newIndices[i];", "+\t\tif (index != last) {", "+\t\t\tSelectableItem item = getVisibleItem(index);", "+\t\t\t} else {", "+\t\t\t\terror(SWT.ERROR_ITEM_NOT_REMOVED);\t\t\t\t          ", "-\t\t\telse {", "-\t\t\t\tif (0 <= sortedIndex && sortedIndex < getItemVector().size()) {", "-\t\t\t\t\terror(SWT.ERROR_ITEM_NOT_REMOVED);", "-\t\t\t\t} ", "-\t\t\t\telse {", "-\t\t\t\t\terror(SWT.ERROR_INVALID_RANGE);", "-\t\t\t\t}          ", "-\t\t\t}", "-\t\t\tlast = sortedIndex;", "+\t\t\tlast = index;"]}], "num": 37518}