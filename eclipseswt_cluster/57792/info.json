{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ce8b027c8940a4cd7c26716d708c1833", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "955dc5b7586d3f5738b5a8ea717f6523", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "03edd7b43308fb2bd6bab979851adfca23e11b74", "commitAfterChange": "44be5983a5fff33f337bb260817cc50987bb398a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Object getContents(Transfer transfer)", "signatureAfterChange": " public Object getContents(Transfer transfer)", "diff": ["-\tif (display.isDisposed() || !(transfer instanceof TextTransfer)) return null;", "-\treturn display.getData(\"TextTransfer\");", "+\t", "+\tif (display.isDisposed())", "+\t\treturn null;", "+\t", "+\tint[] scrapHandle= new int[1];", "+\tOS.GetCurrentScrap(scrapHandle);", "+\tint scrap= scrapHandle[0];", "+\t", "+\tint[] flavorCount= new int[1];", "+\tOS.GetScrapFlavorCount(scrap, flavorCount);", "+\t", "+\t//System.out.println(\"Clipboard.getContents:\");", "+\tif (flavorCount[0] > 0) {", "+\t\tint[] info= new int[flavorCount[0] * 2];", "+\t\tOS.GetScrapFlavorInfoList(scrap, flavorCount, info);", "+\t\tfor (int i= 0; i < flavorCount[0]; i++) {", "+\t\t\tint flavorType= info[i*2];", "+\t\t\tString type= MacUtil.toString(flavorType);", "+\t\t\t//System.out.println(\"  \" + i + \": Clipboard.getContents: \" + type);", "+\t\t\tif (\"TEXT\".equals(type) && transfer instanceof TextTransfer) {", "+\t\t\t\tint[] size= new int[1];", "+\t\t\t\tOS.GetScrapFlavorSize(scrap, flavorType, size);", "+\t\t\t\tif (size[0] > 0) {", "+\t\t\t\t\tbyte[] data= new byte[size[0]];", "+\t\t\t\t\tOS.GetScrapFlavorData(scrap, flavorType, size, data);", "+\t\t\t\t\treturn new String(data, 0, size[0]);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}", "+\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b9954c339113a498eb43d6ed1cbb878", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "8727d22e38059537dcc917ca55f0d6ddcedac706", "commitAfterChange": "0e7716ec8b85ed8b2a10afa69a4dfa63fe12298f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public String[] getAvailableTypeNames()", "signatureAfterChange": " public String[] getAvailableTypeNames()", "diff": ["+", "+\tif (display.isDisposed())", "+\t\treturn null;", "+\t", "+\tint[] scrapHandle= new int[1];", "+\tOS.GetCurrentScrap(scrapHandle);", "+\tint scrap= scrapHandle[0];", "+\t", "+\tint[] flavorCount= new int[1];", "+\tOS.GetScrapFlavorCount(scrap, flavorCount);", "+\t", "+\tSystem.out.println(\"Clipboard.getAvailableTypeNames:\");", "+\tif (flavorCount[0] > 0) {", "+\t\tint[] info= new int[flavorCount[0] * 2];", "+\t\tOS.GetScrapFlavorInfoList(scrap, flavorCount, info);", "+\t\tint n= flavorCount[0];", "+\t\tString[] result= new String[n];", "+\t\tfor (int i= 0; i < n; i++) {", "+\t\t\tint flavorType= info[i*2];", "+\t\t\tString type= MacUtil.toString(flavorType);", "+\t\t\tSystem.out.println(\"  \" + i + \": \" + type);", "+\t\t\tresult[i]= type;", "+\t\t}", "+\t\treturn result;", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "751acc7e3e608a4c4aa0ad471023dbbd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/carbon/org/eclipse/swt/internal/carbon/MacUtil.java", "commitBeforeChange": "6183eee6c60bae371c51eda279fad38931034a62", "commitAfterChange": "905b3909331e9158540f896976d5079deb353ba1", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static int createDrawingArea(int parentControlHandle, int width, int height, int border)", "signatureAfterChange": " \t \tstatic int createHIView()", "diff": ["+\t", "+\tstatic int createHIView() {", "+\t\tint rc;", "+\t\t", "+\t\tif (fViewClassID == 0) {", "+\t\t\t\t", "+\t\t\tfViewClassID= OS.CFStringCreateWithCharacters(\"org.eclipse.swt.hiview\");", "+\t\t\tint baseClassID= OS.CFStringCreateWithCharacters(\"com.apple.hiview\");", "+\t\t", "+\t\t\tint[] events= new int[] {", "+\t\t\t\tOS.kEventClassHIObject, OS.kEventHIObjectConstruct,", "+\t\t\t\t//OS.kEventClassHIObject, OS.kEventHIObjectInitialize,", "+\t\t\t\tOS.kEventClassHIObject, OS.kEventHIObjectDestruct,", "+\t\t\t\t", "+\t\t\t\tOS.kEventClassControl,\tOS.kEventControlDraw,", "+\t\t\t\tOS.kEventClassControl,\tOS.kEventControlAddedSubControl,", "+\t\t\t\tOS.kEventClassControl,\tOS.kEventControlRemovingSubControl,", "+\t\t\t};", "+\t\t", "+\t\t\tint hiobProc= createCallback(\"hiobProc\", 3);", "+\t\t", "+\t\t\tint[] tmp= new int[1];", "+\t\t\trc= OS.HIObjectRegisterSubclass(fViewClassID, baseClassID, 0, hiobProc, events, 0, tmp);", "+\t\t\tSystem.out.println(\"HIObjectRegisterSubclass: \" + rc);", "+\t\t", "+\t\t\tOS.CFRelease(baseClassID);", "+\t\t}", "+\t\t", "+\t\tint[] oref= new int[1];", "+\t\t//rc= OS.HIObjectCreate(fViewClassID, 0, oref);", "+\t\trc= OS.HIObjectCreate(OS.CFStringCreateWithCharacters(\"com.apple.hiview\"), 0, oref);", "+\t\tSystem.out.println(\"HIObjectCreate: \" + rc + \" \" + oref[0]);", "+\t\treturn oref[0];", "+\t}"]}], "num": 57792}