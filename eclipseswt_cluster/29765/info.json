{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f2522a10cfe3d9d4e0485ca9bb31a434", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2aff408094fbfc5b736841fff57e7f11", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "8d6f036a83cd5cc84341092bbd88ae262c33e48e", "commitAfterChange": "fcbb9a83ad12a942385ad64c110d623b39d7af7a", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": " \t\t \tprivate String getTXNText(int start, int end)", "signatureAfterChange": " \t\t \tprivate String getTXNText(int start, int end)", "diff": ["+\t\tint[] ptr= new int[1];", "+\t\tOS.HLock(dataHandle[0]);", "+\t\tOS.memcpy(ptr, dataHandle[0], 4);", "-\t\tOS.getHandleData(dataHandle[0], chars);", "+\t\tOS.memcpy(chars, ptr[0], length);", "+\t\tOS.HUnlock(dataHandle[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99e54fef2e3634d55c7f3a01df429a25", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "7295654de663b127667b1f08deccafc682bb62a1", "commitAfterChange": "cc401b3aae2fa7c5248b2befaf4c524376cff313", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": "  public void update ()", "signatureAfterChange": "  public void update ()", "diff": ["-\t\tOS.SendEventToEventTarget (outEvent [0], OS.GetEventDispatcherTarget ());", "+\t\t/*", "+\t\t* Bug in the Macintosh.  For some reason, when a hierarchy of", "+\t\t* windows is disposed from kEventWindowClose, despite the fact", "+\t\t* that DisposeWindow() has been called, the window is not", "+\t\t* disposed and there are outstandings kEventWindowUpdate events", "+\t\t* in the event queue.  Dispatching these events will cause a", "+\t\t* segment fault.  The fix is to dispatch events to visible", "+\t\t* window only.", "+\t\t*/", "+\t\tint [] theWindow = new int [1];", "+\t\tOS.GetEventParameter (outEvent [0], OS.kEventParamDirectObject, OS.typeWindowRef, null, 4, null, theWindow);", "+\t\tif (OS.IsWindowVisible (theWindow [0])) OS.SendEventToEventTarget (outEvent [0], OS.GetEventDispatcherTarget ());"]}], "num": 29765}