{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff41ab20e868de5213c83079ee9c1e31", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4df591f2c4cdbb3a0b5baaeaf986c35c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "79b22d4c9299867b5e6bfd292d5eba2d4bba29ca", "commitAfterChange": "6e253d4ff28b7025cf133ad01c32b03815ca7642", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " int processMouseDown (MacMouseEvent mmEvent)", "signatureAfterChange": " int processMouseDown (MacMouseEvent mmEvent)", "diff": ["-\t\tEventRecord eventRecord = mmEvent.toOldMacEvent();", "-\t\tif (eventRecord != null) ", "+\t\tEventRecord eventRecord = new EventRecord();", "+\t\tif (OS.ConvertEventRefToEventRecord(mmEvent.getEventRef(), eventRecord)) {", "+\t\t}", "-\treturn 0;", "+\treturn OS.noErr;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91904a457e7dc46c32e7aa51bedf42c7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "653b1bb7bd49f57477be0c4ae69f99560ca77716", "commitAfterChange": "6858e0619ec4553d451a7613e230f39ae4587066", "methodNumberBeforeChange": 143, "methodNumberAfterChange": 143, "signatureBeforeChange": "  int textInputProc (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int textInputProc (int nextHandler, int theEvent, int userData)", "diff": ["-\t\t\t/* Stop the default event handler from activating the default button */", "-\t\t\tOS.GetWindowDefaultButton (theWindow, theControl);", "-\t\t\tOS.SetWindowDefaultButton (theWindow, 0);", "-\t\t\tint result = widget.textInputProc (nextHandler, theEvent, userData);", "-\t\t\tif (result == OS.eventNotHandledErr) {", "-\t\t\t\tresult = OS.CallNextEventHandler (nextHandler, theEvent);", "+\t\t\tMenuTrackingData outData = new MenuTrackingData ();", "+\t\t\tif (OS.GetMenuTrackingData (0, outData) != OS.noErr) {", "+\t\t\t\t/* Stop the default event handler from activating the default button */", "+\t\t\t\tOS.GetWindowDefaultButton (theWindow, theControl);", "+\t\t\t\tOS.SetWindowDefaultButton (theWindow, 0);", "+\t\t\t\tint result = widget.textInputProc (nextHandler, theEvent, userData);", "+\t\t\t\tif (result == OS.eventNotHandledErr) {", "+\t\t\t\t\tresult = OS.CallNextEventHandler (nextHandler, theEvent);", "+\t\t\t\t}", "+\t\t\t\tOS.SetWindowDefaultButton (theWindow, theControl [0]);", "+\t\t\t\treturn result;", "-\t\t\tOS.SetWindowDefaultButton (theWindow, theControl [0]);", "-\t\t\treturn result;"]}], "num": 60874}