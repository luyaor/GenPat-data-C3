{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "565632c51f9884105746c801215bdb0e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91b56ad2ab079b52e6cc761b234ca7c7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Cursor.java", "commitBeforeChange": "965aecf4cb4bb3fe4dee75052118eb5b4063e4f5", "commitAfterChange": "3eef16495f54d2582a2f00d444f7f01291b26d62", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Cursor(Device device, ImageData source, int hotspotX, int hotspotY)", "signatureAfterChange": " public Cursor(Device device, ImageData source, int hotspotX, int hotspotY)", "diff": ["-\t/* Modify the source image to contain black wherever the mask is 0 */", "-\tint[] sourcePixels = new int[source.width];", "-\tint[] maskPixels = new int[mask.width];", "-\tfor (int y = 0; y < source.height; y++) {", "-\t\tsource.getPixels(0, y, source.width, sourcePixels, 0);", "-\t\tmask.getPixels(0, y, mask.width, maskPixels, 0);", "-\t\tfor (int i = 0; i < sourcePixels.length; i++) {", "-\t\t\tif (maskPixels[i] == 0) sourcePixels[i] = 0;", "-\t\t}", "-\t\tsource.setPixels(0, y, source.width, sourcePixels, 0);", "-\t}", "-\tboolean hasTransparencyPixel = source.getTransparencyType() == SWT.TRANSPARENCY_PIXEL;", "-\tif (hasTransparencyPixel) {", "-\t\tsource.maskData = mask.data;", "-\t\tsource.maskPad = mask.scanlinePad;", "-\t}", "-\tint[] result = Image.init(device, null, source);", "+\tint[] result = Image.init(device, null, source, mask);", "-\tif (hasTransparencyPixel) {", "-\t\tsource.maskData = null;", "-\t\tsource.maskPad = -1;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf0ae36ebdf280c2674e545039dc8203", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Cursor.java", "commitBeforeChange": "406db03bcafc2b495e59d46a0657712938a45c8c", "commitAfterChange": "c1fa670bb90c807acbab628f565e2e14bd885825", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Cursor(Device device, ImageData source, int hotspotX, int hotspotY)", "signatureAfterChange": " public Cursor(Device device, ImageData source, int hotspotX, int hotspotY)", "diff": ["+\t/* Modify the source image to contain black wherever the mask is 0 */", "+\tImageData mask = source.getTransparencyMask();", "+\tint[] sourcePixels = new int[source.width];", "+\tint[] maskPixels = new int[mask.width];", "+\tfor (int y = 0; y < source.height; y++) {", "+\t\tsource.getPixels(0, y, source.width, sourcePixels, 0);", "+\t\tmask.getPixels(0, y, mask.width, maskPixels, 0);", "+\t\tfor (int i = 0; i < sourcePixels.length; i++) {", "+\t\t\tif (maskPixels[i] == 0) sourcePixels[i] = 0;", "+\t\t}", "+\t\tsource.setPixels(0, y, source.width, sourcePixels, 0);", "+\t}", "-\t\tImageData mask = source.getTransparencyMask();", "-\t}\t", "+\t}"]}], "num": 4112}