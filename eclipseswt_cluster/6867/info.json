{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4e0a5afaca0241c85bd01e953ed8b870", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8994be83ebd16d6c101aa30062293bc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "ca61b834d1fe41e9ab22bc5da0c47a0e76e3922e", "commitAfterChange": "cd36ba0081113965df6d101260814c54e1600a54", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": "  int gtk_mnemonic_activate (int widget, int arg1)", "signatureAfterChange": "  int gtk_mnemonic_activate (int widget, int arg1)", "diff": ["-\t\t\tEvent event = new Event ();", "-\t\t\tevent.detail = SWT.TRAVERSE_MNEMONIC;", "-\t\t\tsetKeyState (event, keyEvent);", "-\t\t\tsendEvent(SWT.Traverse, event);", "-\t\t\tif (!event.doit) {", "-\t\t\t\tShell shell = _getShell ();", "-\t\t\t\tint focusWidget = OS.gtk_window_get_focus (shell.shellHandle);", "-\t\t\t\tOS.gtk_widget_event (focusWidget, eventPtr);", "+\t\t\tControl focusControl = display.getFocusControl ();", "+\t\t\tint focusHandle = focusControl != null ? focusControl.eventHandle () : 0;", "+\t\t\tif (focusHandle != 0) {", "+\t\t\t\tdisplay.mnemonicControl = this;", "+\t\t\t\tOS.gtk_widget_event (focusHandle, eventPtr);", "+\t\t\t\tdisplay.mnemonicControl = null;", "-\t\t\tresult = event.doit ? 0 : 1;", "+\t\t\tresult = 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ad40037b957b0289ce9a9408deec515", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "5544ce1d748561f71c4f1d1997c431f82e5c4c86", "commitAfterChange": "24e0049851c0d0a09cb9f25e5892d112e2936fed", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tvoid printDecorationSegment(String segment, int alignment, int page, boolean header)", "signatureAfterChange": " \tvoid printDecorationSegment(String segment, int alignment, int page, boolean header)", "diff": ["-\t\t\tint drawY;", "-\t\t\tStyledTextBidi bidi = null;", "-\t\t\t", "-\t\t\tif (isBidi()) {", "-\t\t\t\tbidi = new StyledTextBidi(gc, tabLength, segment, null, null, new int[] {0, segment.length()});", "-\t\t\t\tsegmentWidth = bidi.getTextWidth();", "-\t\t\t}\t\t\t", "-\t\t\telse {", "-\t\t\t\tsegmentWidth = gc.textExtent(segment).x;", "-\t\t\t}", "+\t\t\tint drawY = 0;", "+\t\t\tTextLayout layout = renderer.getTextLayout(segment, 0, null);", "+\t\t\tsegmentWidth = layout.getLineBounds(0).width;", "-\t\t\t}\t\t\t", "+\t\t\t}", "-\t\t\tif (bidi != null) {", "-\t\t\t\tbidi.drawBidiText(0, segment.length(), drawX, drawY);", "-\t\t\t}", "-\t\t\telse {", "-\t\t\t\tgc.drawString(segment, drawX, drawY, true);", "-\t\t\t}", "+\t\t\tlayout.draw(gc, drawX, drawY);", "+\t\t\trenderer.disposeTextLayout(layout, null);"]}], "num": 6867}