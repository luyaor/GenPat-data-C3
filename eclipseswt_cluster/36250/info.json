{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f8caceba8bace00dd870cbbe4e59e11f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9806c84be3328b4404a3a13dc937fad8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 78, "signatureBeforeChange": " final void redrawHandle (int x, int y, int width, int height, int widgetHandle, boolean all)", "signatureAfterChange": "  void redrawWidget (int control)", "diff": ["+", "+void redrawWidget (int control) {", "+\tif (!OS.IsControlVisible (control)) return;", "+\tRect rect = new Rect ();", "+\tOS.GetControlBounds (control, rect);", "+\tint window = OS.GetControlOwner (control);", "+\tOS.InvalWindowRect (window, rect);", "-}", "-final void redrawHandle (int x, int y, int width, int height, int widgetHandle, boolean all) {", "-    /* AW", "-\tint display = OS.XtDisplay (widgetHandle);", "-\tif (display == 0) return;", "-\tint window = OS.XtWindow (widgetHandle);", "-\tif (window == 0) return;", "-\tint [] argList = {OS.XmNborderWidth, 0, OS.XmNborderColor, 0};", "-\tOS.XtGetValues (widgetHandle, argList, argList.length / 2);", "-\tif (argList [1] != 0) {", "-        */", "-\t\t/* Force the border to repaint by setting the color */", "-\t\t/*", "-\t\tOS.XtSetValues (widgetHandle, argList, argList.length / 2);", "-\t}", "-\tOS.XClearArea (display, window, x, y, width, height, true);", "-\t*/", "-\t", "-\tif (false) {", "-\t\tint rgn= OS.NewRgn();", "-\t\tOS.RectRgn(rgn, new MacRect(x, y, width, height).getData());", "-\t\tOS.HIViewSetNeedsDisplayInRegion(widgetHandle, rgn, true);", "-\t\tOS.DisposeRgn(rgn);", "-\t} else {", "-\t\tMacRect br= new MacRect();", "-\t\tOS.GetControlBounds(widgetHandle, br.getData());", "-\t    if (!br.isEmpty()) {", "-\t        x+= br.getX();", "-\t        y+= br.getY();", "-\t        if (width == 0)", "-\t        \twidth= br.getWidth();", "-\t        else", "-\t\t\t\twidth+= 1; // AW strange workaround for Caret", "-\t        if (height == 0)", "-\t\t\t\theight= br.getHeight();", "-\t                ", "-\t        int rgn= OS.NewRgn();", "-\t        OS.RectRgn(rgn, new MacRect(x, y, width, height).getData());", "-\t                ", "-\t        int region= OS.NewRgn();", "-\t        if (MacUtil.getVisibleRegion(widgetHandle, region, all) == OS.kNoErr) {", "-\t        ", "-\t            OS.SectRgn(region, rgn, region);", "-\t        ", "-\t            OS.InvalWindowRgn(OS.GetControlOwner(widgetHandle), region);", "-\t        }", "-\t        ", "-\t        OS.DisposeRgn(rgn);", "-\t        OS.DisposeRgn(region);", "-\t    }", "-\t}", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0df8197956fee27ff97c722476bcfe0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "21db765cd71e211ed7a422832ea159585ff971e3", "commitAfterChange": "cfc1e42b8ee7293ce68f0fd9dcd0e1b2cb8bb08a", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " final void redrawHandle (int x, int y, int width, int height, int widgetHandle, boolean all)", "signatureAfterChange": " final void redrawHandle (int x, int y, int width, int height, int widgetHandle, boolean all)", "diff": ["-\t", "-\tif (false) {", "-\t\tint rgn= OS.NewRgn();", "-\t\tRect rect = new Rect();", "-\t\tOS.SetRect(rect, (short)x, (short)y, (short)(x + width), (short)(y + height));", "-\t\tOS.RectRgn(rgn, rect);", "-\t\tOS.HIViewSetNeedsDisplayInRegion(widgetHandle, rgn, true);", "-\t\tOS.DisposeRgn(rgn);", "-\t} else {", "-\t\tRect br= new Rect();", "-\t\tOS.GetControlBounds(widgetHandle, br);", "-\t    if (!OS.EmptyRect(br)) {", "-\t        x+= br.left;", "-\t        y+= br.top;", "-\t        if (width == 0)", "-\t        \twidth= br.right - br.left;", "-\t        else", "-\t\t\t\twidth+= 1; // AW strange workaround for Caret", "-\t        if (height == 0)", "-\t\t\t\theight= br.bottom - br.top;", "-\t                ", "-\t        int rgn= OS.NewRgn();", "-\t      \tRect rect = new Rect();", "-\t\t\tOS.SetRect(rect, (short)x, (short)y, (short)(x + width), (short)(y + height));", "-\t        OS.RectRgn(rgn, rect);", "-\t                ", "-\t        int region= OS.NewRgn();", "-\t        if (MacUtil.getVisibleRegion(widgetHandle, region, all) == OS.noErr) {", "-\t        ", "-\t            OS.SectRgn(region, rgn, region);", "-\t        ", "-\t            OS.InvalWindowRgn(OS.GetControlOwner(widgetHandle), region);", "-\t        }", "-\t        ", "-\t        OS.DisposeRgn(rgn);", "-\t        OS.DisposeRgn(region);", "-\t    }", "+\tRect r= new Rect();", "+\tOS.SetRect(r, (short)x, (short)y, (short)(x + width), (short)(y + height));", "+\tif (width <= 0 || height <= 0) {", "+\t\tOS.HIViewSetNeedsDisplay(widgetHandle, true);", "+\t\treturn;", "+\t\t//OS.GetControlBounds(widgetHandle, r.getData());", "+\tint rgn= OS.NewRgn();", "+\tOS.RectRgn(rgn, r);", "+\tOS.HIViewSetNeedsDisplayInRegion(widgetHandle, rgn, true);", "+\tOS.DisposeRgn(rgn);"]}], "num": 36250}