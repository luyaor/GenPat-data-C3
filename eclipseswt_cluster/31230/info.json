{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3394276cf5fe8eaf70eb236f7225a03d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e273f4123fd42084496e47406b102f5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Group.java", "commitBeforeChange": "48cc0a268f324be7f04de1bf4769b6763dd5172e", "commitAfterChange": "6afd0f7c847ebf7da61adbbd98eda015eb44fe3f", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": "  LRESULT WM_SIZE (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_WINDOWPOSCHANGING (int wParam, int lParam)", "diff": ["-LRESULT WM_SIZE (int wParam, int lParam) {", "-\tLRESULT result = super.WM_SIZE (wParam, lParam);", "-\tif (OS.IsWinCE) return result;", "-\tOS.InvalidateRect (handle, null, true);", "-\treturn result;", "-}", "+", "+LRESULT WM_WINDOWPOSCHANGING (int wParam, int lParam) {", "+\tLRESULT result = super.WM_WINDOWPOSCHANGING (wParam, lParam);", "+\tif (result != null) return result;", "+\t/*", "+\t* Invalidate the portion of the group widget that needs to", "+\t* be redrawn.  Note that for some reason, invalidating the", "+\t* group from inside WM_SIZE causes pixel corruption for", "+\t* radio button children.", "+\t*/", "+\tif (OS.IsWinCE) return result;", "+\tif (!OS.IsWindowVisible (handle)) return result;", "+\tWINDOWPOS lpwp = new WINDOWPOS ();", "+\tOS.MoveMemory (lpwp, lParam, WINDOWPOS.sizeof);", "+\tif ((lpwp.flags & (OS.SWP_NOSIZE | OS.SWP_NOREDRAW)) != 0) {", "+\t\treturn result;", "+\t}", "+\tRECT rect = new RECT ();", "+\tOS.SetRect (rect, 0, 0, lpwp.cx, lpwp.cy);", "+\tOS.SendMessage (handle, OS.WM_NCCALCSIZE, 0, rect);", "+\tint newWidth = rect.right - rect.left;", "+\tint newHeight = rect.bottom - rect.top;", "+\tOS.GetClientRect (handle, rect);", "+\tint oldWidth = rect.right - rect.left;", "+\tint oldHeight = rect.bottom - rect.top;", "+\tif (newWidth == oldWidth && newHeight == oldHeight) {", "+\t\treturn result;", "+\t}", "+\tif (newWidth != oldWidth) {", "+\t\tint left = oldWidth;", "+\t\tif (newWidth < oldWidth) left = newWidth;", "+\t\tOS.SetRect (rect, left - CLIENT_INSET, 0, newWidth, newHeight);", "+\t\tOS.InvalidateRect (handle, rect, true);", "+\t}", "+\tif (newHeight != oldHeight) {", "+\t\tint bottom = oldHeight;", "+\t\tif (newHeight < oldHeight) bottom = newHeight;", "+\t\tif (newWidth < oldWidth) oldWidth -= CLIENT_INSET;", "+\t\tOS.SetRect (rect, 0, bottom - CLIENT_INSET, oldWidth, newHeight);", "+\t\tOS.InvalidateRect (handle, rect, true);", "+\t}", "+\treturn result;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9fb41a6adb759062d3e9952ebe2a238", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "0690cabb735f29fbc35f75fe533577794b17677c", "commitAfterChange": "ae9e98c8e8526c82af1f71a5f0555f17cf846db6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \r public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "\r \r public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tint width = 0, rowWidth = 0, height = 0, rowHeight = 0;\r", "-\tRECT rect = new RECT ();\r", "-\tREBARBANDINFO rbBand = new REBARBANDINFO ();\r", "-\trbBand.cbSize = REBARBANDINFO.sizeof;\r", "-\trbBand.fMask = OS.RBBIM_IDEALSIZE | OS.RBBIM_CHILDSIZE | OS.RBBIM_STYLE;\r", "+\tint width = 0, height = 0;\r", "+\tint border = getBorderWidth ();\r", "+\tint newWidth = wHint == SWT.DEFAULT ? 0x3FFF : wHint + (border * 2);\r", "+\tint newHeight = hHint == SWT.DEFAULT ? 0x3FFF : hHint + (border * 2);\r", "-\tfor (int i=0; i<count; i++) {\r", "-\t\tOS.SendMessage (handle, OS.RB_GETBANDINFO, i, rbBand);\r", "-\t\tOS.SendMessage (handle, OS.RB_GETBANDBORDERS, i, rect);\r", "-\t\tif ((rbBand.fStyle & OS.RBBS_BREAK) != 0) {\r", "-\t\t\twidth = Math.max (width, rowWidth);\r", "-\t\t\theight += rowHeight;\r", "-\t\t\trowWidth = rowHeight = 0;\r", "+\tif (count != 0) {\r", "+\t\tignoreResize = true;\r", "+\t\tboolean redraw = drawCount == 0 && OS.IsWindowVisible (handle);\r", "+\t\tif (redraw) {\r", "+\t\t\tOS.UpdateWindow (handle);\t\r", "+\t\t\tOS.SendMessage (handle, OS.WM_SETREDRAW, 0, 0);\r", "-\t\trowWidth += rbBand.cxIdeal + rect.left + rect.right + 2;\r", "-\t\trowHeight = Math.max (rowHeight, rbBand.cyMinChild + rect.top + rect.bottom);\r", "+\t\tRECT oldRect = new RECT ();\r", "+\t\tOS.GetWindowRect (handle, oldRect);\r", "+\t\tint oldWidth = oldRect.right - oldRect.left;\r", "+\t\tint oldHeight = oldRect.bottom - oldRect.top;\r", "+\t\tint flags = OS.SWP_NOACTIVATE | OS.SWP_NOMOVE | OS.SWP_NOREDRAW | OS.SWP_NOZORDER;\t\r", "+\t\tOS.SetWindowPos (handle, 0, 0, 0, newWidth, newHeight, flags);\r", "+\t\tRECT rect = new RECT ();\r", "+\t\tOS.SendMessage (handle, OS.RB_GETRECT, count - 1, rect);\r", "+\t\theight = Math.max (height, rect.bottom - rect.top);\r", "+\t\tOS.SetWindowPos (handle, 0, 0, 0, oldWidth, oldHeight, flags);\r", "+\t\tREBARBANDINFO rbBand = new REBARBANDINFO ();\r", "+\t\trbBand.cbSize = REBARBANDINFO.sizeof;\r", "+\t\trbBand.fMask = OS.RBBIM_IDEALSIZE | OS.RBBIM_STYLE;\r", "+\t\tint rowWidth = 0;\r", "+\t\tfor (int i = 0; i < count; i++) {\r", "+\t\t\tOS.SendMessage(handle, OS.RB_GETBANDINFO, i, rbBand);\r", "+\t\t\tOS.SendMessage(handle, OS.RB_GETBANDBORDERS, i, rect);\r", "+\t\t\tif ((rbBand.fStyle & OS.RBBS_BREAK) != 0) {\r", "+\t\t\t\twidth = Math.max(width, rowWidth);\r", "+\t\t\t\trowWidth = 0;\r", "+\t\t\t}\r", "+\t\t\trowWidth += rbBand.cxIdeal + rect.left + rect.right + 2;\r", "+\t\t}\r", "+\t\twidth = Math.max(width, rowWidth);\r", "+\t\t\r", "+\t\tif (redraw) {\r", "+\t\t\tOS.SendMessage (handle, OS.WM_SETREDRAW, 1, 0);\r", "+\t\t\tOS.ValidateRect (handle, null);\r", "+\t\t}\t\t\r", "+\t\tignoreResize = false;\r", "-\twidth = Math.max (width, rowWidth);\r", "-\theight += rowHeight - rect.top - rect.bottom;\r", "-\tint border = getBorderWidth ();\r", "-\twidth += border * 2;\r", "+\twidth += border * 2;\t\r"]}], "num": 31230}