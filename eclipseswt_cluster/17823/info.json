{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5a0aef641ff84a23a4230fbfd03d7679", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d764824fe1bb3b07443b8d5894323245", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void fillArc(int x, int y, int width, int height, int startAngle, int endAngle)", "signatureAfterChange": " public void fillArc(int x, int y, int width, int height, int startAngle, int endAngle)", "diff": ["-\t/* AW", "-\tXGCValues values = new XGCValues ();", "-\tOS.XGetGCValues (xDisplay, handle, OS.GCForeground | OS.GCBackground, values);", "-\tOS.XSetForeground (xDisplay, handle, values.background);", "-\tOS.XFillArc(xDisplay,data.drawable,handle,x,y,width,height,startAngle * 64 ,endAngle * 64);", "-\tOS.XSetForeground (xDisplay, handle, values.foreground);", "-\t*/", "-\tSystem.out.println(\"GC.fillArc\");", "+\tOS.CGContextBeginPath(handle);", "+    OS.CGContextSaveGState(handle);", "+    OS.CGContextTranslateCTM(handle, x + width / 2f, y + height / 2f);", "+    OS.CGContextScaleCTM(handle, width / 2f, height / 2f);", "+    OS.CGContextMoveToPoint(handle, 0, 0);", "+    OS.CGContextAddArc(handle, 0, 0, 1, -startAngle * (float)Math.PI / 180,  -endAngle * (float)Math.PI / 180, true);", "+    OS.CGContextClosePath(handle);", "+    OS.CGContextRestoreGState(handle);", "+\tOS.CGContextFillPath(handle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b73e1be05e8ed76469c6641373f0f572", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public void fillOval (int x, int y, int width, int height)", "signatureAfterChange": " public void fillOval(int x, int y, int width, int height)", "diff": ["-public void fillOval (int x, int y, int width, int height) {", "+public void fillOval(int x, int y, int width, int height) {", "-\ttry {", "-\t\tif (focus(true, null)) {", "-\t\t\tif ((data.background & 0xff000000) == 0) {", "-\t\t\t\tMacUtil.RGBForeColor(data.background);", "-\t\t\t\tfRect.set(x, y, width, height);", "-\t\t\t\tOS.PaintOval(fRect.getData());", "-\t\t\t} else {", "-\t\t\t\t//\tSystem.out.println(\"GC.fillOval: \" + Integer.toHexString(data.background));", "-\t\t\t}", "-\t\t}", "-\t} finally {", "-\t\tunfocus(true);", "-\t}", "+\tOS.CGContextBeginPath(handle);", "+    OS.CGContextSaveGState(handle);", "+    OS.CGContextTranslateCTM(handle, x + width / 2f, y + height / 2f);", "+    OS.CGContextScaleCTM(handle, width / 2f, height / 2f);", "+    OS.CGContextMoveToPoint(handle, 1, 0);", "+    OS.CGContextAddArc(handle, 0, 0, 1, 0,  (float)(Math.PI * 2), false);", "+    OS.CGContextClosePath(handle);", "+    OS.CGContextRestoreGState(handle);", "+\tOS.CGContextFillPath(handle);"]}], "num": 17823}