{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2d0a5d5b30ad7b3b8cf67c5eaffacb97", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4ff69ebdd131e60313ad5fb7ddc4d97", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "5ea8a8ca4643557ac6abd837d14400318b8125a6", "commitAfterChange": "5a29085071ce35026e7617b6fc1fdd2bf7e3205a", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " public void setColumnOrder (int [] order)", "signatureAfterChange": " public void setColumnOrder (int [] order)", "diff": ["+\t\tint x = 0;", "+\t\tshort [] width = new short [1];", "+\t\tint [] oldX = new int [oldOrder.length];", "+\t\tfor (int i=0; i<oldOrder.length; i++) {", "+\t\t\tint index = oldOrder [i];", "+\t\t\tTableColumn column = columns [index];", "+\t\t\toldX [index] =  x;", "+\t\t\tOS.GetDataBrowserTableViewNamedColumnWidth(handle, column.id, width);", "+\t\t\tx += width [0];", "+\t\t}", "+\t\tx = 0;", "+\t\tint [] newX = new int [order.length];", "-\t\t\tif (position != column.lastPosition) {", "-\t\t\t\tcolumn.lastPosition = position;", "-\t\t\t}", "+\t\t\tcolumn.lastPosition = position;", "+\t\t\tnewX [index] =  x;", "+\t\t\tOS.GetDataBrowserTableViewNamedColumnWidth(handle, column.id, width);", "+\t\t\tx += width [0];", "-\t\t\tTableColumn column = newColumns [oldOrder [i]];", "+\t\t\tTableColumn column = newColumns [i];", "-\t\t\t\tif (order [i] != oldOrder [i]) {", "+\t\t\t\tif (newX [i] != oldX [i]) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ed7f6a49b582b6ca3b9c26ab656e7aa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "46cf5898afdea9b2e488e584b15e963c4cc0e4cc", "commitAfterChange": "f190959de8e244b145503bd57ae26411fa5487bd", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   void destroyItem (TreeColumn column)", "signatureAfterChange": "   void destroyItem (TreeColumn column)", "diff": ["-//\tif (columnCount == 1) {", "-//\t\tcolumn_id = column.id; idCount = 0;", "-//\t\tDataBrowserListViewHeaderDesc desc = new DataBrowserListViewHeaderDesc ();", "-//\t\tdesc.version = OS.kDataBrowserListViewLatestHeaderDesc;", "-//\t\tshort [] width = new short [1];", "-//\t\tOS.GetDataBrowserTableViewNamedColumnWidth (handle, column_id, width);", "-//\t\tdesc.minimumWidth = desc.maximumWidth = width [0];", "-//\t\tint str = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, null, 0);", "-//\t\tdesc.titleString = str;", "-//\t\tOS.SetDataBrowserListViewHeaderDesc (handle, column_id, desc);", "-//\t\tOS.CFRelease (str);", "-//\t} else {", "-//\t\tint [] disclosure = new int [1];", "-//\t\tboolean [] expandableRows = new boolean [1];", "-//\t\tOS.GetDataBrowserListViewDisclosureColumn (handle, disclosure, expandableRows);", "-//\t\tif (disclosure [0] == column.id) {", "-//\t\t\tTreeColumn firstColumn = columns [1];", "-//\t\t\tfirstColumn.style &= ~(SWT.LEFT | SWT.RIGHT | SWT.CENTER);", "-//\t\t\tfirstColumn.style |= SWT.LEFT;", "-//\t\t\tfirstColumn.updateHeader();", "-//\t\t\tOS.SetDataBrowserListViewDisclosureColumn (handle, firstColumn.id, expandableRows [0]);", "-//\t\t}", "-//\t\tif (OS.RemoveDataBrowserTableViewColumn (handle, column.id) != OS.noErr) {", "-//\t\t\terror (SWT.ERROR_ITEM_NOT_REMOVED);", "-//\t\t}", "-//\t}", "+\tif (columnCount == 1) {", "+\t\t//TODO - reset attributes", "+\t\tfirstColumn = column.nsColumn;", "+\t\tfirstColumn.setWidth (0);", "+\t} else {", "+\t\t((NSTableView)view).removeTableColumn(column.nsColumn);", "+\t}"]}], "num": 51893}