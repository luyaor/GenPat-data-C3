{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "16c28fef00806d13cc994038aae55370", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26a3b45de311d5e4a8c6a38ee45a607b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/carbon/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "b19b011f1480b00b01a1452aaed21c81365affd7", "commitAfterChange": "dc9648d73c2a3edce78e8fbdca8b1e184382def4", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "  void decidePolicyForMIMEType(int type, int request, int frame, int listener)", "signatureAfterChange": "  void decidePolicyForMIMEType(int type, int request, int frame, int listener)", "diff": ["-\tif (canShow) {", "-\t\tWebKit.objc_msgSend(listener, WebKit.S_use);", "-\t\treturn;", "-\t}", "-", "-\t/* Safari cannot display the content, so offer to download it instead */ ", "-\tWebKit.objc_msgSend(listener, WebKit.S_ignore);", "-\tint download = WebKit.objc_msgSend(WebKit.C_WebDownload, WebKit.S_alloc);", "-\tWebKit.objc_msgSend(download, WebKit.S_initWithRequestDelegate, request, delegate);", "+\tWebKit.objc_msgSend(listener, canShow ? WebKit.S_use : WebKit.S_download);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b09d48ba95952ff5c0d94f86b821186", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "1c443a30987f7f81d39bfdc3e6e4198bffa3e9a6", "commitAfterChange": "68e870a1fdb34b7aa2a5759c3a4da0add06e739d", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void getClipping (Region region)", "signatureAfterChange": " public void getClipping (Region region)", "diff": ["-\tOS.GetWindowRgn (handle, hRegion);", "-\tRECT rect = new RECT ();", "-\tif (OS.GetRgnBox  (hRegion, rect) == OS.NULLREGION) {", "+\tif (OS.GetWindowRgn (handle, hRegion) == OS.RGN_ERROR) {", "+\t\tRECT rect = new RECT ();", "-\t\tint rectRgn = OS.CreateRectRgn (0, 0, rect.right - rect.left, rect.bottom - rect.top);", "-\t\tOS.CombineRgn (hRegion, hRegion, hRegion, OS.RGN_DIFF);", "-\t\tOS.CombineRgn (hRegion, hRegion, rectRgn, OS.RGN_OR);", "-\t\tOS.DeleteObject (rectRgn);", "+\t\tOS.SetRectRgn (hRegion, 0, 0, rect.right - rect.left, rect.bottom - rect.top);"]}], "num": 5160}