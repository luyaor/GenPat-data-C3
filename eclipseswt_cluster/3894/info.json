{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7fd293b7bccda107c1fb6d4806f2bb51", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af1376abdf6fea6bb81fb140c0b3ce40", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "273d98554709fed9ba42677331bca585ac9e5afc", "commitAfterChange": "5966357a7d6231890c5efa807ca9a771f246bd24", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void draw (GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "signatureAfterChange": " public void draw (GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "diff": ["-\t\tint lineHeight = lineY[line+1] - lineY[line];", "+\t\tint lineHeight = lineY[line+1] - lineY[line] - lineSpacing;", "-\t\t\t\t\twidth = (lineHeight - lineSpacing) / 3;", "+\t\t\t\t\twidth = lineHeight / 3;", "-\t\t\t\t\tGdip.Graphics_FillRectangle(gdipGraphics, selBrush, drawX + lineWidth[line], drawY, width, lineHeight - lineSpacing);", "+\t\t\t\t\tGdip.Graphics_FillRectangle(gdipGraphics, selBrush, drawX + lineWidth[line], drawY, width, lineHeight);", "-\t\t\t\t\tOS.PatBlt(hdc, drawX + lineWidth[line], drawY, width, lineHeight - lineSpacing, OS.PATCOPY);", "+\t\t\t\t\tOS.PatBlt(hdc, drawX + lineWidth[line], drawY, width, lineHeight, OS.PATCOPY);", "-\t\t\t\t\t\t\tGdip.Graphics_FillRectangle(gdipGraphics, selBrush, drawX, drawY, run.width, lineHeight - lineSpacing);", "+\t\t\t\t\t\t\tGdip.Graphics_FillRectangle(gdipGraphics, selBrush, drawX, drawY, run.width, lineHeight);", "-\t\t\t\t\t\t\tOS.PatBlt(hdc, drawX, drawY, run.width, lineHeight - lineSpacing, OS.PATCOPY);", "+\t\t\t\t\t\t\tOS.PatBlt(hdc, drawX, drawY, run.width, lineHeight, OS.PATCOPY);", "-\t\t\t\t\t\t\t\tGdip.Graphics_FillRectangle(gdipGraphics, brush, drawX, drawY, run.width, lineHeight - lineSpacing);", "+\t\t\t\t\t\t\t\tGdip.Graphics_FillRectangle(gdipGraphics, brush, drawX, drawY, run.width, lineHeight);", "-\t\t\t\t\t\t\t\tOS.PatBlt(hdc, drawX, drawY, run.width, lineHeight - lineSpacing, OS.PATCOPY);", "+\t\t\t\t\t\t\t\tOS.PatBlt(hdc, drawX, drawY, run.width, lineHeight, OS.PATCOPY);", "-\t\t\t\t\t\t\trect.bottom = drawY + lineHeight - lineSpacing;", "+\t\t\t\t\t\t\trect.bottom = drawY + lineHeight;", "-\t\t\t\t\t\tborderClip = drawBorder(gdip, gdipGraphics, x, drawY, lineHeight - lineSpacing, foregroundBrush, selBrushFg, fullSelection, borderClip, partialSelection ? rect : null, alpha, lineRuns, i, selectionStart, selectionEnd);", "+\t\t\t\t\t\tborderClip = drawBorder(gdip, gdipGraphics, x, drawY, lineHeight, foregroundBrush, selBrushFg, fullSelection, borderClip, partialSelection ? rect : null, alpha, lineRuns, i, selectionStart, selectionEnd);", "-\t\t\t\t\t\tborderClip = drawBorder(gdip, hdc, x, drawY, lineHeight - lineSpacing, foreground, selForeground, fullSelection, borderClip, partialSelection ? rect : null, alpha, lineRuns, i, selectionStart, selectionEnd);", "+\t\t\t\t\t\tborderClip = drawBorder(gdip, hdc, x, drawY, lineHeight, foreground, selForeground, fullSelection, borderClip, partialSelection ? rect : null, alpha, lineRuns, i, selectionStart, selectionEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06778943e1ae9892f4951684d9c42acb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "364ae706089766a8dc4b724eef63613a541bd3cb", "commitAfterChange": "5aebd96e6e03d77d1ec1be3bdce35459d0a39900", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void draw (GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "signatureAfterChange": " public void draw (GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "diff": ["-\tint /*long*/ foregroundBrush = 0;", "+\tint /*long*/ gdipForeground = 0;", "-\t\tforegroundBrush = gc.getFgBrush();", "+\t\tgdipForeground = gc.getFgBrush();", "-\tint /*long*/ selBrush = 0, selPen = 0, selBrushFg = 0, gdipFont = 0, lastHFont = 0;", "+\tint /*long*/ gdipSelBackground = 0, gdipSelForeground = 0, gdipFont = 0, lastHFont = 0;", "+\tint /*long*/ selBackground = 0;", "+\tint selForeground = 0;", "-\t\t\tselBrush = createGdipBrush(selectionBackground, alpha);", "-\t\t\tselBrushFg = createGdipBrush(selectionForeground, alpha);", "-\t\t\tselPen = Gdip.Pen_new(selBrushFg, 1);", "+\t\t\tgdipSelBackground = createGdipBrush(selectionBackground, alpha);", "+\t\t\tgdipSelForeground = createGdipBrush(selectionForeground, alpha);", "-\t\t\tselBrush = OS.CreateSolidBrush(selectionBackground.handle);", "-\t\t\tselPen = OS.CreatePen(OS.PS_SOLID, 1, selectionForeground.handle);", "+\t\t\tselBackground = OS.CreateSolidBrush(selectionBackground.handle);", "+\t\t\tselForeground = selectionForeground.handle;", "-\t\t\t\t\tGdip.Graphics_FillRectangle(gdipGraphics, selBrush, drawX + lineWidth[line], drawY, width, lineHeight);", "+\t\t\t\t\tGdip.Graphics_FillRectangle(gdipGraphics, gdipSelBackground, drawX + lineWidth[line], drawY, width, lineHeight);", "-\t\t\t\t\tOS.SelectObject(hdc, selBrush);", "+\t\t\t\t\tOS.SelectObject(hdc, selBackground);", "-\t\t\t\t\t\tdrawRunBackgroundGDIP(run, gdipGraphics, rect, selectionStart, selectionEnd, alpha, selBrush, hasSelection);", "+\t\t\t\t\t\tdrawRunBackgroundGDIP(run, gdipGraphics, rect, selectionStart, selectionEnd, alpha, gdipSelBackground, hasSelection);", "-\t\t\t\t\t\tdrawRunBackground(run, hdc, rect, selectionStart, selectionEnd, selBrush, hasSelection);", "+\t\t\t\t\t\tdrawRunBackground(run, hdc, rect, selectionStart, selectionEnd, selBackground, hasSelection);", "-\t\t\t\t\t\tpRect = drawRunTextGDIP(gdipGraphics, run, rect, gdipFont, baseline, foregroundBrush, selBrushFg, selectionStart, selectionEnd, alpha);", "-\t\t\t\t\t\tunderlineClip = drawUnderlineGDIP(gdipGraphics, x, drawY + baseline, lineUnderlinePos, drawY + lineHeight, lineRuns, i, foregroundBrush, selBrushFg, underlineClip, pRect, selectionStart, selectionEnd, alpha);", "-\t\t\t\t\t\tstrikeoutClip = drawStrikeoutGDIP(gdipGraphics, x, drawY + baseline, lineRuns, i, foregroundBrush, selBrushFg, strikeoutClip, pRect, selectionStart, selectionEnd, alpha);", "-\t\t\t\t\t\tborderClip = drawBorderGDIP(gdipGraphics, x, drawY, lineHeight, lineRuns, i, foregroundBrush, selBrushFg, borderClip, pRect, selectionStart, selectionEnd, alpha);", "+\t\t\t\t\t\tpRect = drawRunTextGDIP(gdipGraphics, run, rect, gdipFont, baseline, gdipForeground, gdipSelForeground, selectionStart, selectionEnd, alpha);", "+\t\t\t\t\t\tunderlineClip = drawUnderlineGDIP(gdipGraphics, x, drawY + baseline, lineUnderlinePos, drawY + lineHeight, lineRuns, i, gdipForeground, gdipSelForeground, underlineClip, pRect, selectionStart, selectionEnd, alpha);", "+\t\t\t\t\t\tstrikeoutClip = drawStrikeoutGDIP(gdipGraphics, x, drawY + baseline, lineRuns, i, gdipForeground, gdipSelForeground, strikeoutClip, pRect, selectionStart, selectionEnd, alpha);", "+\t\t\t\t\t\tborderClip = drawBorderGDIP(gdipGraphics, x, drawY, lineHeight, lineRuns, i, gdipForeground, gdipSelForeground, borderClip, pRect, selectionStart, selectionEnd, alpha);", "-\t\t\t\t\t\tint /*long*/ selForeground = selectionForeground != null ? selectionForeground.handle : 0;", "-\t\t\t\t\t\tborderClip = drawBorder(hdc, x, drawY, lineHeight, lineRuns, i,foreground, selForeground, borderClip, pRect,  selectionStart, selectionEnd);", "+\t\t\t\t\t\tborderClip = drawBorder(hdc, x, drawY, lineHeight, lineRuns, i, foreground, selForeground, borderClip, pRect,  selectionStart, selectionEnd);", "-\tif (gdip) {", "-\t\tif (selBrush != 0) Gdip.SolidBrush_delete(selBrush);", "-\t\tif (selBrushFg != 0) Gdip.SolidBrush_delete(selBrushFg);", "-\t\tif (selPen != 0) Gdip.Pen_delete(selPen);", "-\t\tif (gdipFont != 0) Gdip.Font_delete(gdipFont);", "-\t} else {", "-\t\tOS.RestoreDC(hdc, state);", "-\t\tif (gdipGraphics != 0) Gdip.Graphics_ReleaseHDC(gdipGraphics, hdc);", "-\t\tif (selBrush != 0) OS.DeleteObject (selBrush);", "-\t\tif (selPen != 0) OS.DeleteObject (selPen);", "-\t}", "+\tif (gdipSelBackground != 0) Gdip.SolidBrush_delete(gdipSelBackground);", "+\tif (gdipSelForeground != 0) Gdip.SolidBrush_delete(gdipSelForeground);", "+\tif (gdipFont != 0) Gdip.Font_delete(gdipFont);", "+\tif (state != 0)\tOS.RestoreDC(hdc, state);", "+\tif (selBackground != 0) OS.DeleteObject (selBackground);"]}], "num": 3894}