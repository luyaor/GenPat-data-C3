{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "31e31af74087e9b54472e8a6eaa6cade", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef88155c9c6efed5f676e223d65e0f23", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/gtk/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "8fa7f7faacb842324a4b31775936f9e83dd5a81b", "commitAfterChange": "9ab14bbc386609b0008cce66eda40fcd56285bea", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  boolean handleEvent (Object[] arguments)", "signatureAfterChange": "  boolean handleEvent (Object[] arguments)", "diff": ["-\tif (type.equals (DOMEVENT_MOUSEOVER) || type.equals (DOMEVENT_MOUSEOUT)) {", "-\t\tif (((Boolean)arguments[9]).booleanValue ()) return true;", "-\t}", "+", "+\t/*", "+\t* The following is intentionally commented because MouseOver and MouseOut events", "+\t* are not being hooked until https://bugs.webkit.org/show_bug.cgi?id=35246 is fixed.", "+\t*/ ", "+\t//if (type.equals (DOMEVENT_MOUSEOVER) || type.equals (DOMEVENT_MOUSEOUT)) {", "+\t//\tif (((Boolean)arguments[9]).booleanValue ()) return true;", "+\t//}", "-\t} else if (type.equals (DOMEVENT_MOUSEOVER)) {", "-\t\tmouseEvent.type = SWT.MouseEnter;", "-\t} else if (type.equals (DOMEVENT_MOUSEOUT)) {", "-\t\tmouseEvent.type = SWT.MouseExit;", "+", "+\t/*", "+\t* The following is intentionally commented because MouseOver and MouseOut events", "+\t* are not being hooked until https://bugs.webkit.org/show_bug.cgi?id=35246 is fixed.", "+\t*/ ", "+\t//} else if (type.equals (DOMEVENT_MOUSEOVER)) {", "+\t//\tmouseEvent.type = SWT.MouseEnter;", "+\t//} else if (type.equals (DOMEVENT_MOUSEOUT)) {", "+\t//\tmouseEvent.type = SWT.MouseExit;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40959d22de962a93cd9c49a27209f230", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "f8603d27e9213c51bf69c5971c31dc339ce2fd21", "commitAfterChange": "d9624591d490e17b2e8ec4717bcc021a083b5260", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "  \tid getAttributedStringForRangeParameterizedAttribute(id parameter, int childID)", "signatureAfterChange": "  \tid getAttributedStringForRangeParameterizedAttribute(id parameter, int childID)", "diff": ["-\t\tNSRange attributeRange = new NSRange();", "-\t\t", "-\t\t\tif (event.start == -1 && event.end == -1) return stringFragment;", "-\t\t\t", "+\t\t\tif (event.start == -1 && event.end == -1) {", "+\t\t\t\treturn stringFragment;", "+\t\t\t} else {", "+\t\t\t\tevent.offset = event.end;", "+\t\t\t}\t\t\t", "+", "+\t\t\tNSRange attributeRange = new NSRange();", "-", "-\t\t\tif (attributeRange.location < 0) {", "-\t\t\t\tattributeRange.length -= -attributeRange.location;", "-\t\t\t\tattributeRange.location = 0;", "-\t\t\t}", "-", "-\t\t\tif (attributeRange.location + attributeRange.length > range.length) {", "-\t\t\t\tattributeRange.length = range.length - attributeRange.location;", "-\t\t\t}", "-\t\t\t", "-\t\t\tevent.offset = event.end;", "-", "-\t\t\trange.location = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f72fc6783f9d11509c599c823e6a1aa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "1cafb9b13b36075eb1d31bd71ad3febbf37de5b5", "commitAfterChange": "4b7ac62e4c7abc2bdb8c97e1ee5fae6064a184d8", "methodNumberBeforeChange": 195, "methodNumberAfterChange": 196, "signatureBeforeChange": " void handleCompositionHittest (Event event)", "signatureAfterChange": " void handleCompositionHittest (Event event)", "diff": ["-\tint offset = getOffsetAtPoint(event.x, event.y, trailing, true);", "-\tif (offset != -1) {", "-\t\tif (compositionStart <= offset && offset < compositionStart + compositionLength) {", "-\t\t\tevent.hitTest = SWT.HITTEST_INSIDE_COMPOSITION;", "-\t\t\tevent.index = offset - compositionStart;", "-\t\t} else {", "-\t\t\tevent.hitTest = SWT.HITTEST_INSIDE_TEXT;", "-\t\t\tevent.index = offset;", "-\t\t}", "-\t\tevent.trailing = trailing[0];", "-\t} else {", "-\t\tevent.hitTest = SWT.HITTEST_OUTSIDE_TEXT;", "-\t}", "+\tevent.index = getOffsetAtPoint(event.x, event.y, trailing, true);", "+\tevent.count = trailing[0];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17b24e4fe38610ae43ec69c41f69e27f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "22de0ea22c2d2d4f45ea2d42713f45532f3dae10", "commitAfterChange": "c2238720db4daf5a12590fa4578a04a7b36dabc4", "methodNumberBeforeChange": 156, "methodNumberAfterChange": 156, "signatureBeforeChange": "  LRESULT WM_CHAR (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_CHAR (int wParam, int lParam)", "diff": ["-\t", "-\t/*", "-\t* Feature in Windows.  When the user presses Ctrl+Backspace", "-\t* or Ctrl+Enter, Windows sends a WM_CHAR with Delete (0x7F)", "-\t* and '\\n' instead of '\\b' and '\\r'.  This is the correct", "-\t* platform behavior but is not portable.  The fix is detect", "-\t* these cases and convert the character.", "-\t*/", "-\tswitch (display.lastAscii) {", "-\t\tcase SWT.DEL:", "-\t\t\tif (display.lastKey == SWT.BS) display.lastAscii = SWT.BS;", "-\t\t\tbreak;", "-\t\tcase SWT.LF:", "-\t\t\tif (display.lastKey == SWT.CR) display.lastAscii = SWT.CR;", "-\t\t\tbreak;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e39f4c17439bf793b1243d1a5e33b1b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "a94769ee769497e517d855e4ad5b37a753660b04", "commitAfterChange": "f3f9b39ec3ea3e006b3974132956c8ab4b93a80c", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": " TextLayout getTextLayout(String line, int lineOffset)", "signatureAfterChange": " TextLayout getTextLayout(String line, int lineOffset)", "diff": ["-\t\t\t\tlayout.setStyle(null, lastOffset, start - 1);\t\t\t\t", "+\t\t\t\tlayout.setStyle(null, lastOffset, start - 1);\t", "-\t\t\tFont font = regularFont;", "-\t\t\tif (style.fontStyle == SWT.BOLD) {", "-\t\t\t\tfont = boldFont;", "-\t\t\t} else if (style.fontStyle == SWT.ITALIC) {", "-\t\t\t\tfont = italicFont;", "-\t\t\t} else if (style.fontStyle == (SWT.BOLD | SWT.ITALIC)) {", "-\t\t\t\tfont = boldItalicFont;", "-\t\t\t} ", "-\t\t\tTextStyle textStyle = new TextStyle(font, style.foreground, style.background);", "+\t\t\tTextStyle textStyle = new TextStyle(getFont(style.fontStyle), style.foreground, style.background);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2c044be27559cd5e7aab66151399bd1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "70ad0effe5f094be7c9f0fc126e3f2ba49252b61", "commitAfterChange": "d04fb3f614d054ed3cf2600f4c59c394b9406469", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " void setInputState (Event event, MacEvent mEvent)", "signatureAfterChange": " void setInputState (Event event, MacEvent mEvent)", "diff": ["-\tint modifiers= mEvent.getModifiers();", "-\tif ((modifiers & OS.optionKey) != 0) event.stateMask |= SWT.ALT;", "-\tif ((modifiers & OS.shiftKey) != 0) event.stateMask |= SWT.SHIFT;", "-\tswitch (mEvent.getWhat()) {", "-\tcase OS.mouseDown:", "-\tcase OS.mouseUp:", "-\tcase 12345:", "-\t\tif ((modifiers & OS.controlKey) != 0) {", "-\t\t\tevent.stateMask |= SWT.CONTROL;", "-\t\t\tif ((modifiers & OS.btnState) == 0) event.stateMask |= SWT.BUTTON3;", "-\t\t} else {", "-\t\t\tif ((modifiers & OS.btnState) == 0) event.stateMask |= SWT.BUTTON1;", "-\t\t}", "-\t\tbreak;", "+\tevent.stateMask= getDisplay().fMouseButtonState;", "+\t", "+\tint modifiers= mEvent.getModifiers();", "+\t", "+\tif ((modifiers & OS.shiftKey) != 0)", "+\t\tevent.stateMask |= SWT.SHIFT;", "+\t", "+\tif (false) {", "+\t\t// map option modifier to ALT modifier", "+\t\tif ((modifiers & OS.optionKey) != 0)", "+\t\t\tevent.stateMask |= SWT.ALT;", "+\t} else {", "+\t\t// map control modifier to ALT modifier", "+\t\tif ((modifiers & OS.controlKey) != 0)", "+\t\t\tevent.stateMask |= SWT.ALT;", "-\t/*", "-\tif ((modifiers & 2) != 0) event.stateMask |= SWT.BUTTON2;", "-\t*/"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d87344d8fd9bc17a5a82d5bd83a55bd9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "e0cf9fe05c83a86db27f2eec94f88f5d41111fc8", "commitAfterChange": "23bc9e9c4c425739897a90e79b0d31b9717b2651", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public int getOffset (int x, int y, int[] trailing)", "signatureAfterChange": " public int getOffset (int x, int y, int[] trailing)", "diff": ["-\t\t\tif (trailing != null) trailing[0] = SWT.TRAIL;", "+\t\t\tif (trailing != null) trailing[0] = 1;", "-\t\t\tif (trailing != null) trailing[0] = SWT.LEAD; ", "+\t\t\tif (trailing != null) trailing[0] = 0; ", "-\t\t\tif (trailing != null) trailing[0] = SWT.LEAD; ", "+\t\t\tif (trailing != null) trailing[0] = 0; ", "-\t\t\tif (trailing != null) trailing[0] = SWT.TRAIL;", "+\t\t\tif (trailing != null) trailing[0] = 1;", "-\t\t\t\tif (trailing != null) {", "-\t\t\t\t\ttrailing[0] = x < (width + run.width / 2) ? SWT.LEAD : SWT.TRAIL;", "-\t\t\t\t}", "+\t\t\t\tif (trailing != null) trailing[0] = x < (width + run.width / 2) ? 0 : 1;", "-\t\t\tif (trailing != null) {", "-\t\t\t\ttrailing[0] = piTrailing[0] == 0 ? SWT.LEAD : SWT.TRAIL;", "-\t\t\t}", "+\t\t\tif (trailing != null) trailing[0] = piTrailing[0];", "-\tif (trailing != null) trailing[0] = SWT.LEAD; ", "+\tif (trailing != null) trailing[0] = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3065cfdcf9ba754976e03b81264deb68", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "a468c687dcba880c146bec5dd5e891061d1d4404", "commitAfterChange": "f0a158d3a988994d1a2e2fe59dae1b7f4644e4a3", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " void setInputState (Event event, MacEvent mEvent)", "signatureAfterChange": " void setInputState (Event event, MacEvent mEvent)", "diff": ["-\t", "-\tevent.stateMask= getDisplay().fMouseButtonState;", "-\t", "-\tint modifiers= mEvent.getModifiers();", "-\t", "-\tif ((modifiers & OS.shiftKey) != 0)", "-\t\tevent.stateMask |= SWT.SHIFT;", "-\t\t", "-\tif ((modifiers & OS.controlKey) != 0)", "-\t\tevent.stateMask |= SWT.CONTROL;", "-\t\t", "-\tif ((modifiers & OS.cmdKey) != 0) {", "-\t\t// if the Command modifier is pressed we report the Option modifier as 'ALT'", "-\t\tif ((modifiers & OS.optionKey) != 0)", "-\t\t\tevent.stateMask |= SWT.ALT;", "-\t} else {", "-\t\t// we don't report the option modifier as 'ALT'", "-\t}", "-\t", "-\t/*", "-\tif (false) {", "-\t\t// map option modifier to ALT modifier", "-\t\tif ((modifiers & OS.optionKey) != 0)", "-\t\t\tevent.stateMask |= SWT.ALT;", "-\t} else {", "-\t\t// map control modifier to ALT modifier", "-\t\tif ((modifiers & OS.controlKey) != 0)", "-\t\t\tevent.stateMask |= SWT.ALT;", "-\t}", "-\t*/", "+\tevent.stateMask= mEvent.getStateMask();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc52e1dd447340b7959cf7e62799d6a8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "dac30c018d5cf7c70486c933b24c16540aaa8795", "commitAfterChange": "cbb5286fe0456df7469256efe91355db70428b9a", "methodNumberBeforeChange": 278, "methodNumberAfterChange": 278, "signatureBeforeChange": "\r public void setSelection(int start, int end)", "signatureAfterChange": "\r public void setSelection(int start, int end)", "diff": ["-\tcheckWidget();\r", "-\tint contentLength = getCharCount();\r", "-\t\r", "-\tif (start > end || start < 0 || end > contentLength) {\r", "-\t\tSWT.error(SWT.ERROR_INVALID_RANGE);\r", "-\t}\r", "-\tif (isLineDelimiter(start) || isLineDelimiter(end)) {\r", "-\t\t// the start offset or end offset of the selection range is inside a \r", "-\t\t// multi byte line delimiter. This is an illegal operation and an exception \r", "-\t\t// is thrown. Fixes 1GDKK3R\r", "-\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\r", "-\t}\t\t\t\t\r", "-\tinternalSetSelection(start, end - start, false);\r", "-\t// always update the caret location. fixes 1G8FODP\r", "-\tsetCaretLocation();\r", "-\tif (isBidi()) {\r", "-\t\tsetBidiKeyboardLanguage();\t\r", "-\t}\r", "+\t// checkWidget test done in setSelectionRange\r", "+\tsetSelectionRange(start, end - start);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "913710a11a610c394302eeaef30a77b5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "d7112b9940690c795ad0ec1538ee939c8f3d27ac", "commitAfterChange": "28f2c95555bb2ed2b6c2a58fbef9c726a4ca8116", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public Tree (Composite parent, int style)", "signatureAfterChange": "  public Tree (Composite parent, int style)", "diff": ["-\tgridLineColor = display.getSystemColor (SWT.COLOR_BLACK);", "-\thighlightShadowColor = display.getSystemColor (SWT.COLOR_WIDGET_HIGHLIGHT_SHADOW);", "-\tnormalShadowColor = display.getSystemColor (SWT.COLOR_WIDGET_NORMAL_SHADOW);", "-\tselectionBackgroundColor = display.getSystemColor (SWT.COLOR_LIST_SELECTION);", "-\tselectionForegroundColor = display.getSystemColor (SWT.COLOR_LIST_SELECTION_TEXT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44b31e0be1386a40b9788405509ae9d0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/TableCursor.java", "commitBeforeChange": "f7ce2891bc750ef8a8b230f2750693fffcec1602", "commitAfterChange": "2c60b01b6185749ed8cd129be9d1606ac504e467", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  void dispose(Event event)", "signatureAfterChange": "  void dispose(Event event)", "diff": ["-\tif (column != null) {", "-\t\tcolumn.removeListener(SWT.Dispose, disposeColumnListener);", "-\t\tcolumn.removeListener(SWT.Move, resizeListener);", "-\t\tcolumn.removeListener(SWT.Resize, resizeListener);", "-\t\tcolumn = null;", "-\t}", "-\tif (row != null) {", "-\t\trow.removeListener(SWT.Dispose, disposeItemListener);", "-\t\trow = null;", "-\t}", "+\tunhookRowColumnListeners();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35a13dc90108b22271e3ddeda838bf51", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "8ac319315f02f056087670898446ba12d963ef7a", "commitAfterChange": "dd8e6eb383035f4c5c38f5aa487af509f9b62f10", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "\r \r boolean setInputState (Event event, int type)", "signatureAfterChange": "\r \r boolean setInputState (Event event, int type)", "diff": ["-\tif (OS.GetKeyState (OS.VK_CONTROL) < 0) event.stateMask |= SWT.COMMAND;\r", "-\t\t\tif (event.keyCode == SWT.COMMAND) event.stateMask &= ~SWT.COMMAND;\r", "-\t\t\tif (event.keyCode == SWT.COMMAND) event.stateMask |= SWT.COMMAND;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b428635e407740cd0d83469e1468f665", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "a4973a3115c15364761906ff1d392981af1f6dae", "commitAfterChange": "d24cc875dbac5a052da7e8dae172e4ff7a028bf3", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "  LRESULT WM_CHAR (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_KILLFOCUS (int wParam, int lParam)", "diff": ["-LRESULT WM_CHAR (int wParam, int lParam) {", "-\tLRESULT result = super.WM_CHAR (wParam, lParam);", "-\tif (result != null) return result;", "-\t/*", "-\t* Feature in Windows.  For some reason, when the", "-\t* widget is a single line text widget, when the", "-\t* user presses tab, return or escape, Windows beeps.", "-\t* The fix is to look for these keys and not call", "-\t* the window proc.", "-\t*/", "-\tswitch (wParam) {", "-\t\tcase SWT.CR:", "-\t\t\tpostEvent (SWT.DefaultSelection);", "-\t\t\t// FALL THROUGH\t\t", "-\t\tcase SWT.TAB:", "-\t\tcase SWT.ESC: return LRESULT.ZERO;", "-\t}", "-\treturn result;", "+LRESULT WM_KILLFOCUS (int wParam, int lParam) {", "+\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3f04a1e7803b3fe6238712118f979b9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/ViewForm.java", "commitBeforeChange": "ca153a6662892d20f6509d20fb02c74517090cba", "commitAfterChange": "996ac4b9a124a64638a57eca0ea22df1bd8417fb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\t\t public ViewForm(Composite parent, int style)", "signatureAfterChange": "\t\t public ViewForm(Composite parent, int style)", "diff": ["-\t\t\t\tcase SWT.MouseDown: onMouseDown(e); break;", "-\t\t\t\tcase SWT.MouseExit: onMouseExit(e); break;", "-\t\t\t\tcase SWT.MouseMove: onMouseMove(e); break;", "-\t\t\t\tcase SWT.MouseUp: onMouseUp(e); break;", "-\tint[] events = new int[] {SWT.Dispose, SWT.MouseDown, SWT.MouseExit, SWT.MouseMove, SWT.MouseUp, SWT.Paint, SWT.Resize};", "+\tint[] events = new int[] {SWT.Dispose, SWT.Paint, SWT.Resize};"]}], "num": 30773}