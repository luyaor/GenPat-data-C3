{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a8cbdf9a4cad66e47e87116560bc9223", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f8605d380f97608fb1408479c7d1e89", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "60022be7b1ebbc39d77c564a2e88f5c46884dd5d", "commitAfterChange": "684f0264cf4baba690310ee918714e9d5c93e6cc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public TransferData[] getAvailableTypes()", "signatureAfterChange": " public TransferData[] getAvailableTypes()", "diff": ["+ */", "+public TransferData[] getAvailableTypes() {", "+\tcheckWidget();", "+\tint[] types = _getAvailableTypes();", "+\tTransferData[] result = new TransferData[types.length];", "+\tfor (int i = 0; i < types.length; i++) {", "+\t\tresult[i] = new TransferData();", "+\t\tresult[i].type = types[i];", "+\t}", "+\treturn result;", "+}", "- */", "-public TransferData[] getAvailableTypes() {", "-\tif (display == null) DND.error(SWT.ERROR_WIDGET_DISPOSED);", "-\tif (display.isDisposed()) DND.error(SWT.ERROR_DEVICE_DISPOSED);", "-\tint[] types = _getAvailableTypes();", "-\tTransferData[] result = new TransferData[types.length];", "-\tfor (int i = 0; i < types.length; i++) {", "-\t\tresult[i] = new TransferData();", "-\t\tresult[i].type = types[i];", "-\t}", "-\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7e8f8790b3b43b982874daf168d0e65", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "147d1615f621339f30d0227193f0b040907c9480", "commitAfterChange": "4f94a8e41c5f58fd8cc31f50891f992413c14d7f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": " public String[] getAvailableTypeNames()", "signatureAfterChange": " public String[] getAvailableTypeNames()", "diff": ["+\tbyte[][] types = _getAvailableTypes();", "+\tString[] names = new String[types.length];", "+\tfor (int i = 0; i < names.length; i++) {", "+\t\t/* Use the character encoding for the default locale */", "+\t\tnames[i] = new String(Converter.mbcsToWcs(null, types[i]));", "+\t}", "+\treturn names;", "+}", "-\tif (xDisplay == 0)", "-\t\tDND.error(SWT.ERROR_UNSPECIFIED);", "-\tif (xWindow == 0)", "-\t\tDND.error(SWT.ERROR_UNSPECIFIED);", "-\tif (OS.XmClipboardInquireCount(xDisplay, xWindow, count, max_length) != OS.XmClipboardSuccess)", "-\t\tDND.error(SWT.ERROR_UNSPECIFIED);", "-\tString[] types = new String[count[0]];", "-\t\tif (rc == OS.XmClipboardNoData){", "-\t\t\ttypes[i] = \"\";", "-\t\t\tcontinue;", "-\t\t}", "-\t\tif (rc != OS.XmClipboardSuccess)", "-\t\t\tDND.error(SWT.ERROR_UNSPECIFIED);", "-\t\tchar [] unicode = Converter.mbcsToWcs (null, buffer2);", "-\t\ttypes[i] = new String (unicode);"]}], "num": 812}