{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aa10bec48112de8139053a0b8978603f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ee2b201d6262a42871d93c0f5ce17e6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "6824278b35cb6d52d341f9cd0fcf2c132c77449b", "commitAfterChange": "bea6ad5ba26c7753b0da238d2aa3d59686d9248f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["+", "+\t\t\t/*", "+\t\t\t * A XULRunner was not found that supports wrapping of XPCOM handles as JavaXPCOM objects.", "+\t\t\t * Drop the lower version bound and try to detect an earlier XULRunner installation.", "+\t\t\t */", "+\t\t\tif (rc != XPCOM.NS_OK) {", "+\t\t\t\tC.free (lower);", "+\t\t\t\tbytes = MozillaDelegate.wcsToMbcs (null, GRERANGE_LOWER_FALLBACK, true);", "+\t\t\t\tlower = C.malloc (bytes.length);", "+\t\t\t\tC.memmove (lower, bytes, bytes.length);", "+\t\t\t\trange.lower = lower;", "+\t\t\t\trc = XPCOMInit.GRE_GetGREPathWithProperties (range, 1, propertiesPtr, 0, greBuffer, length);", "+\t\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5da54c5580817524d111c6931805525e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "5374675b839b0fae59e3a51b725633f5248c79a9", "commitAfterChange": "6c627a8139ef18188f49f84c11acd2dfd56235c5", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 111, "signatureBeforeChange": "  void initXPCOM (String mozillaPath, boolean isXULRunner)", "signatureAfterChange": "  void initXPCOM (String mozillaPath, boolean isXULRunner)", "diff": ["-\t\tint version = Integer.getInteger(XULRUNNER_VERSION, 0).intValue();", "-\t\tif (version < 4) {", "-\t\t\tIsPre_4 = true;", "-\t\t} else {", "-\t\t\tnsISupports.IsXULRunner10 = true;", "-\t\t}", "-\t\tString initFunctionName = IsPre_4 ? \"XRE_InitEmbedding\" : \"XRE_InitEmbedding2\";", "-\t\tbyte[] bytes = MozillaDelegate.wcsToMbcs (null, initFunctionName, true); //$NON-NLS-1$", "+", "+\t\t/* ", "+\t\t * Attempt to load the XRE_InitEmbedding2 function first, which is present in", "+\t\t * mozilla versions > 3.x.", "+\t\t */", "+\t\tbyte[] bytes = MozillaDelegate.wcsToMbcs (null, \"XRE_InitEmbedding2\", true); //$NON-NLS-1$", "-\t\tXPCOM.XPCOMGlueLoadXULFunctions (ptr);", "+\t\trc = XPCOM.XPCOMGlueLoadXULFunctions (ptr);", "+\t\tif (rc == XPCOM.NS_OK) {", "+\t\t\tIsPre_4 = false;", "+\t\t\tnsISupports.IsXULRunner10 = true;", "+\t\t} else {", "+\t\t\t/*", "+\t\t\t * XRE_InitEmbedding2 was not found, so fall back to XRE_InitEmbedding, which is", "+\t\t\t * present in older mozilla versions.", "+\t\t\t */", "+\t\t\tC.free (functionLoad.functionName);", "+\t\t\tbytes = MozillaDelegate.wcsToMbcs (null, \"XRE_InitEmbedding\", true); //$NON-NLS-1$", "+\t\t\tfunctionLoad.functionName = C.malloc (bytes.length);", "+\t\t\tC.memmove (functionLoad.functionName, bytes, bytes.length);", "+\t\t\trc = XPCOM.XPCOMGlueLoadXULFunctions (ptr);", "+\t\t\tif (rc == XPCOM.NS_OK) {", "+\t\t\t\tIsPre_4 = true;", "+\t\t\t\tnsISupports.IsXULRunner10 = false;", "+\t\t\t}", "+\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2f2a7c4b7487491fe018f6d69524c25", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_TextLayout.java", "commitBeforeChange": "5766980e830d9f9f315e32ee099e17f8d7d70ab0", "commitAfterChange": "6df9392abc945b864e29234fc0603982ed613649", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void test_getNextOffset()", "signatureAfterChange": " public void test_getNextOffset()", "diff": ["-\tString text = \"AB \\u05E9\\u05E0 CD\\nHello\";", "+\tString text;", "+\tint offset;", "+\t", "+\ttext = \"word word word\";", "-\tint offset = 0;", "+\toffset = 0;", "+\toffset = layout.getNextOffset(offset, SWT.MOVEMENT_WORD_END);", "+\tassertEquals(3, offset);", "+\toffset = layout.getNextOffset(offset, SWT.MOVEMENT_WORD_END);", "+\tassertEquals(8, offset);", "+\toffset = layout.getNextOffset(offset, SWT.MOVEMENT_WORD_END);", "+\tassertEquals(13, offset);", "+\t", "+\ttext = \"AB \\u05E9\\u05E0 CD\\nHello\";", "+\tlayout.setText(text);", "+\toffset = 0;"]}], "num": 1264}