{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b5321cf72d88703b4409ed838678298e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2969d843db9175ee6afdfaaa60191e8d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "db59299666876a285c310d2c5c38e974ac131199", "commitAfterChange": "86dc7ce90ce29024dddb162fd8f6c1e3dc4f573a", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  void bringToTop (boolean force)", "signatureAfterChange": "  void bringToTop (boolean force)", "diff": ["-\tif ((xFocus || (style & SWT.ON_TOP) != 0) && OS.GDK_WINDOWING_X11 () && !OS.GDK_WINDOWING_WAYLAND()) {", "-\t\tlong /*int*/ xDisplay;", "-\t\tif (OS.GTK_VERSION >= OS.VERSION(2, 24, 0)) {", "-\t\t\txDisplay = OS.gdk_x11_display_get_xdisplay(OS.gdk_window_get_display(window));", "+\tif ((xFocus || (style & SWT.ON_TOP) != 0)) {", "+\t\tif (OS.IS_X11) {", "+\t\t\tlong /*int*/ xDisplay;", "+\t\t\tif (OS.GTK_VERSION >= OS.VERSION(2, 24, 0)) {", "+\t\t\t\txDisplay = OS.gdk_x11_display_get_xdisplay(OS.gdk_window_get_display(window));", "+\t\t\t} else {", "+\t\t\t\txDisplay = OS.gdk_x11_drawable_get_xdisplay (window);", "+\t\t\t}", "+\t\t\tlong /*int*/ xWindow;", "+\t\t\tif (OS.GTK3) {", "+\t\t\t\txWindow = OS.gdk_x11_window_get_xid (window);", "+\t\t\t} else {", "+\t\t\t\txWindow = OS.gdk_x11_drawable_get_xid (window);", "+\t\t\t}", "+\t\t\tOS.gdk_error_trap_push ();", "+\t\t\t/* Use CurrentTime instead of the last event time to ensure that the shell becomes active */", "+\t\t\tOS.XSetInputFocus (xDisplay, xWindow, OS.RevertToParent, OS.CurrentTime);", "+\t\t\tOS.gdk_error_trap_pop ();", "-\t\t\txDisplay = OS.gdk_x11_drawable_get_xdisplay (window);", "+//\tTODO find the proper fix as this doesn't seem to have effect", "+//\t\t\tOS.gtk_window_present(window);", "-\t\tlong /*int*/ xWindow;", "-\t\tif (OS.GTK3) {", "-\t\t\txWindow = OS.gdk_x11_window_get_xid (window);", "-\t\t} else {", "-\t\t\txWindow = OS.gdk_x11_drawable_get_xid (window);", "-\t\t}", "-\t\tOS.gdk_error_trap_push ();", "-\t\t/* Use CurrentTime instead of the last event time to ensure that the shell becomes active */", "-\t\tOS.XSetInputFocus (xDisplay, xWindow, OS.RevertToParent, OS.CurrentTime);", "-\t\tOS.gdk_error_trap_pop ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0c3aaf2a9b5ae4dbacd644832f84bb0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "df05705cece22dedb6e424f051b860165c9cbccf", "commitAfterChange": "31e51df754214feb509dc6351cbc9ede391c3886", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  void createDisplay (DeviceData data)", "signatureAfterChange": "  void createDisplay (DeviceData data)", "diff": ["-\tif (!OS.GDK_WINDOWING_WAYLAND () && OS.GDK_WINDOWING_X11()) xDisplay = OS.gdk_x11_get_default_xdisplay();", "+\tif (OS.IS_X11) xDisplay = OS.gdk_x11_get_default_xdisplay();", "-\tif (!OS.GDK_WINDOWING_WAYLAND () && OS.GDK_WINDOWING_X11 ()) {", "+\tif (OS.IS_X11) {"]}], "num": 62647}