{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ce99ed5617bb02a714159dbaf3665281", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf0fdcec179630599b48f70120fa1b9f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "1f6933a1b15056c0d45fcdf5019d55449793c82d", "commitAfterChange": "03b27348c501db581e6b7fd3b2d0cc945cd398ee", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 81, "signatureBeforeChange": " boolean setButtonBounds()", "signatureAfterChange": " boolean setButtonBounds()", "diff": ["-\t\tPoint topRightSize = topRight.computeSize(SWT.DEFAULT, tabHeight);", "-\t\tif (single && selectedIndex > -1) {", "-\t\t\tCTabItem item = items[selectedIndex];", "-\t\t\ttopRightRect.x = Math.min(item.x +item.width + BUTTON_SIZE, size.x - borderRight - minRect.width - maxRect.width - topRightSize.x - 3);", "-\t\t} else {", "-\t\t\ttopRightRect.x = size.x - borderRight - minRect.width - maxRect.width - topRightSize.x - 3;", "-\t\t}", "-\t\ttopRightRect.y = onBottom ? size.y - borderBottom - tabHeight: borderTop + 1;", "-\t\ttopRightRect.width = topRightSize.x;", "-\t\ttopRightRect.height = tabHeight - 1;", "-\t\ttopRight.setBounds(topRightRect);", "+\t\tswitch (topRightAlignment) {", "+\t\t\tcase SWT.FILL:", "+\t\t\t\tint rightEdge = size.x - borderRight - minRect.width - maxRect.width - 1;", "+\t\t\t\tint lastIndex = getLastIndex();", "+\t\t\t\tif (lastIndex == -1) {", "+\t\t\t\t\ttopRightRect.x = borderLeft + 3;", "+\t\t\t\t\ttopRightRect.width = rightEdge - topRightRect.x;", "+\t\t\t\t} else {", "+\t\t\t\t\tCTabItem lastItem = items[lastIndex];", "+\t\t\t\t\tif (single) {", "+\t\t\t\t\t\t// fill size is 0 if item compressed", "+\t\t\t\t\t\tif (lastItem.x + lastItem.width >= rightEdge) {", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\t// fill size is 0 if chevron showing", "+\t\t\t\t\t\tif (firstIndex > 0 || lastIndex < items.length - 1) {", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\ttopRightRect.x = lastItem.x + lastItem.width;", "+\t\t\t\t\ttopRightRect.width = rightEdge - topRightRect.x;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase SWT.RIGHT:", "+\t\t\t\tPoint topRightSize = topRight.computeSize(SWT.DEFAULT, tabHeight);", "+\t\t\t\tif (single && selectedIndex > -1) {", "+\t\t\t\t\tCTabItem item = items[selectedIndex];", "+\t\t\t\t\ttopRightRect.x = Math.min(item.x +item.width + BUTTON_SIZE, size.x - borderRight - minRect.width - maxRect.width - topRightSize.x - 3);", "+\t\t\t\t} else {", "+\t\t\t\t\ttopRightRect.x = size.x - borderRight - minRect.width - maxRect.width - topRightSize.x - 3;", "+\t\t\t\t}", "+\t\t\t\ttopRightRect.width = topRightSize.x;", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t\ttopRightRect.y = onBottom ? size.y - borderBottom - tabHeight: borderTop + 1;", "+\t\t\ttopRightRect.height = tabHeight - 1;", "+\t\t\ttopRight.setBounds(topRightRect);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11db327221ef8ad9d445512d2330c860", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "e5f41a05f7e47d4efb399397a97a6160f1d952e1", "commitAfterChange": "f383b0c2a90e2358bdf171b766e7e5d9d21cf2f6", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": " boolean setButtonBounds()", "signatureAfterChange": " boolean setButtonBounds()", "diff": ["-\t\t\tcase SWT.FILL:", "-\t\t\t\tint rightEdge = getRightItemEdge();", "-\t\t\t\tint lastIndex = getLastIndex();", "-\t\t\t\tif (lastIndex == -1) {", "-\t\t\t\t\ttopRightRect.x = borderLeft + 3;", "-\t\t\t\t\ttopRightRect.width = rightEdge - topRightRect.x;", "-\t\t\t\t} else {", "-\t\t\t\t\tCTabItem lastItem = items[lastIndex];", "-\t\t\t\t\tif (single) {", "-\t\t\t\t\t\t// fill size is 0 if item compressed", "-\t\t\t\t\t\tif (lastItem.x + lastItem.width >= rightEdge) {", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t}", "+\t\t\tcase SWT.FILL: {", "+\t\t\t\tint rightEdge = size.x - borderRight - 3 - maxRect.width - minRect.width;", "+\t\t\t\tif (single) {", "+\t\t\t\t\tif (items.length == 0 || selectedIndex == -1) {", "+\t\t\t\t\t\ttopRightRect.x = borderLeft + 3;", "+\t\t\t\t\t\ttopRightRect.width = rightEdge - topRightRect.x;", "-\t\t\t\t\t\t// fill size is 0 if chevron showing", "-\t\t\t\t\t\tif (showChevron) {", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t}", "+\t\t\t\t\t\t// fill size is 0 if item compressed", "+\t\t\t\t\t\tCTabItem item = items[selectedIndex];", "+\t\t\t\t\t\tif (item.x + item.width + 7 + 3*BUTTON_SIZE/2 >= rightEdge) break;", "+\t\t\t\t\t\ttopRightRect.x = item.x + item.width + 7 + 3*BUTTON_SIZE/2;", "+\t\t\t\t\t\ttopRightRect.width = rightEdge - topRightRect.x;", "-\t\t\t\t\ttopRightRect.x = lastItem.x + lastItem.width;", "+\t\t\t\t} else {", "+\t\t\t\t\t// fill size is 0 if chevron showing", "+\t\t\t\t\tif (showChevron) break;", "+\t\t\t\t\tCTabItem item = items[items.length - 1];", "+\t\t\t\t\ttopRightRect.x = item.x + item.width;", "-\t\t\t\tbreak;", "-\t\t\tcase SWT.RIGHT:", "-\t\t\t\tPoint topRightSize = topRight.computeSize(SWT.DEFAULT, tabHeight);", "-\t\t\t\tif (single && selectedIndex > -1) {", "-\t\t\t\t\tCTabItem item = items[selectedIndex];", "-\t\t\t\t\ttopRightRect.x = Math.min(item.x +item.width + BUTTON_SIZE, size.x - borderRight - minRect.width - maxRect.width - topRightSize.x - 3);", "-\t\t\t\t} else {", "-\t\t\t\t\ttopRightRect.x = size.x - borderRight - minRect.width - maxRect.width - topRightSize.x - 3;", "-\t\t\t\t}", "-\t\t\t\ttopRightRect.width = topRightSize.x;", "+\t\t\t\ttopRightRect.y = onBottom ? size.y - borderBottom - tabHeight: borderTop + 1;", "+\t\t\t\ttopRightRect.height = tabHeight - 1;", "-\t\t\ttopRightRect.y = onBottom ? size.y - borderBottom - tabHeight: borderTop + 1;", "-\t\t\ttopRightRect.height = tabHeight - 1;", "-\t\t\ttopRight.setBounds(topRightRect);", "+\t\t\tcase SWT.RIGHT: {", "+\t\t\t\tPoint topRightSize = topRight.computeSize(SWT.DEFAULT, tabHeight);", "+\t\t\t\tint rightEdge = size.x - borderRight - 3 - maxRect.width - minRect.width;", "+\t\t\t\ttopRightRect.x = rightEdge - topRightSize.x;", "+\t\t\t\ttopRightRect.width = topRightSize.x;", "+\t\t\t\ttopRightRect.y = onBottom ? size.y - borderBottom - tabHeight: borderTop + 1;", "+\t\t\t\ttopRightRect.height = tabHeight - 1;", "+\t\t\t}", "+\t\t}", "+\t\ttopRight.setBounds(topRightRect);", "-\t\tif (selectedIndex == -1 || items.length > 1){", "+\t\tif (selectedIndex == -1 || items.length > 1) {", "-\t\t\tchevronRect.x = getRightItemEdge();", "+\t\t\tif (selectedIndex == -1) {", "+\t\t\t\tchevronRect.x = size.x - borderRight - 3 - minRect.width - maxRect.width - topRightRect.width - chevronRect.width;", "+\t\t\t} else {", "+\t\t\t\tCTabItem item = items[selectedIndex];", "+\t\t\t\tint w = size.x - borderRight - 3 - minRect.width - maxRect.width - chevronRect.width;", "+\t\t\t\tif (topRightRect.width > 0) w -= topRightRect.width + 3;", "+\t\t\t\tchevronRect.x = Math.min(item.x + item.width + 3, w);", "+\t\t\t}"]}], "num": 25841}