{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b6d0962e2b72b93abcba7874d0968aed", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9578d8571248f713a858e8d3fe481aaa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "2ea4b2ad4a6f2d1b2ba3fc42466b9d898c5a3d81", "commitAfterChange": "bd61e9373da7273cd410271556ae244e7083bc6f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  LRESULT CDDS_ITEMPREPAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT CDDS_ITEMPREPAINT (int wParam, int lParam)", "diff": ["+\tif (ignoreCustomDraw) {", "+\t\tint hDC = nmcd.hdc;", "+\t\tint index = hwndHeader != 0 ? OS.SendMessage (hwndHeader, OS.HDM_ORDERTOINDEX, 0, 0) : 0;", "+\t\tint hFont = item.cellFont != null ? item.cellFont [index] : -1;", "+\t\tif (hFont == -1) hFont = item.font;", "+\t\tif (hFont != -1) OS.SelectObject (hDC, hFont);", "+\t\treturn new LRESULT (hFont == -1 ? OS.CDRF_DODEFAULT : OS.CDRF_NEWFONT);", "+\t}", "-\t\t\tRECT cellRect = null;", "-\t\t\tif ((style & SWT.FULL_SELECTION) != 0 && count == 0) {", "-\t\t\t\tcellRect = item.getBounds (index, true, true, true, true, true, hDC);", "-\t\t\t} else {", "-\t\t\t\tcellRect = item.getBounds (index, true, true, false, false, true, hDC);", "-\t\t\t}", "+\t\t\tRECT cellRect = item.getBounds (index, true, true, true, true, true, hDC);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad952b616f5fc66c92d8c4c384ff42d2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/layout/FillLayout.java", "commitBeforeChange": "2f78cb1cdfd78921908da71ee40e718bf63dd05d", "commitAfterChange": "0e7696f510ceb6cc1a154ce2436355e8a224e13e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  protected Point computeSize (Composite composite, int wHint, int hHint, boolean flushCache)", "signatureAfterChange": "  protected Point computeSize (Composite composite, int wHint, int hHint, boolean flushCache)", "diff": ["-\t}\t", "-\treturn type == SWT.HORIZONTAL ? new Point (count * maxWidth, maxHeight) : new Point (maxWidth, count * maxHeight);", "+\t}", "+\tint width = 0, height = 0;", "+\tif (type == SWT.HORIZONTAL) {", "+\t\twidth = count * maxWidth;", "+\t\tif (count != 0) width += (count - 1) * spacing;", "+\t\theight = maxHeight;", "+\t} else {", "+\t\twidth = maxWidth;", "+\t\theight = count * maxHeight;", "+\t\tif (count != 0) height += (count - 1) * spacing;", "+\t}", "+\twidth += marginWidth * 2;", "+\theight += marginHeight * 2;", "+\treturn new Point (width, height);"]}], "num": 59698}