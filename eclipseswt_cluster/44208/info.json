{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff5f14df73b6752cb9eb4497b481e252", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1603437a6558542b10fe1ee6b166eace", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tracker.java", "commitBeforeChange": "0f85f99b4bee202dd082d78748bd3cce3c607b7b", "commitAfterChange": "74ffbbffb502d81c966d3f237bb00e237a2278cd", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": " public boolean open ()", "signatureAfterChange": " public boolean open ()", "diff": ["-\t\t\t\t\t\t\tOS.SetCursor(clientCursor);", "+\t\t\t\t\t\t\tOS.SetCursor (clientCursor);", "-\t\t\t\t\t\t\tOS.SetCursor(resizeCursor);", "+\t\t\t\t\t\t\tOS.SetCursor (resizeCursor);", "-\t\t\t\t\tdrawRectangles (rectangles);", "+\t\t\t\t\tRectangle [] oldRectangles = rectangles;", "-\t\t\t\t\t\tif (isMirrored) {", "-\t\t\t\t\t\t   resizeRectangles (oldX - newX, newY - oldY);", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t   resizeRectangles (newX - oldX, newY - oldY);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tcursorPos = adjustResizeCursor ();", "-\t\t\t\t\t\tnewX = cursorPos.x; newY = cursorPos.y;", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tif (isMirrored) {", "-\t\t\t\t\t\t\tmoveRectangles (oldX - newX, newY - oldY); ", "-\t\t\t\t\t\t} else { ", "-\t\t\t\t\t\t\tmoveRectangles (newX - oldX, newY - oldY);", "+\t\t\t\t\t\tinEvent = false;", "+\t\t\t\t\t\t/*", "+\t\t\t\t\t\t* It is possible (but unlikely), that application", "+\t\t\t\t\t\t* code could have disposed the widget in the resize", "+\t\t\t\t\t\t* event.  If this happens, return false to indicate", "+\t\t\t\t\t\t* that the tracking has failed.", "+\t\t\t\t\t\t*/", "+\t\t\t\t\t\tif (isDisposed ()) {", "+\t\t\t\t\t\t\tcancelled = true;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t/*", "+\t\t\t\t\t\t * It is possible that application code could have", "+\t\t\t\t\t\t * changed the rectangles in the resize event.  If this", "+\t\t\t\t\t\t * happens then use these new rectangles instead of", "+\t\t\t\t\t\t * recomputing them based on the last mouse move, and", "+\t\t\t\t\t\t * only erase the tracker if the rectangles have changed.", "+\t\t\t\t\t\t */", "+\t\t\t\t\t\tif (rectangles != oldRectangles) {", "+\t\t\t\t\t\t\tint length = rectangles.length;", "+\t\t\t\t\t\t\tboolean changed = false;", "+\t\t\t\t\t\t\tif (length != oldRectangles.length) {", "+\t\t\t\t\t\t\t\tchanged = true;", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\t\t\t\tif (!rectangles [i].equals (oldRectangles [i])) {", "+\t\t\t\t\t\t\t\t\t\tchanged = true;", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (changed) {", "+\t\t\t\t\t\t\t\tdrawRectangles (oldRectangles);", "+\t\t\t\t\t\t\t\tdrawRectangles (rectangles);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (isMirrored) {", "+\t\t\t\t\t\t\t\tadjustResizeOrientation (oldX - newX, newY - oldY);", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tadjustResizeOrientation (newX - oldX, newY - oldY);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tdrawRectangles (oldRectangles);", "+\t\t\t\t\t\t\tif (isMirrored) {", "+\t\t\t\t\t\t\t   resizeRectangles (oldX - newX, newY - oldY);", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t   resizeRectangles (newX - oldX, newY - oldY);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tdrawRectangles (rectangles);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tcursorPos = adjustResizeCursor ();", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tinEvent = false;", "+\t\t\t\t\t\t/*", "+\t\t\t\t\t\t* It is possible (but unlikely), that application", "+\t\t\t\t\t\t* code could have disposed the widget in the move", "+\t\t\t\t\t\t* event.  If this happens, return false to indicate", "+\t\t\t\t\t\t* that the tracking has failed.", "+\t\t\t\t\t\t*/", "+\t\t\t\t\t\tif (isDisposed ()) {", "+\t\t\t\t\t\t\tcancelled = true;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\t/*", "+\t\t\t\t\t\t * It is possible that application code could have", "+\t\t\t\t\t\t * changed the rectangles in the move event.  If this", "+\t\t\t\t\t\t * happens then use these new rectangles instead of", "+\t\t\t\t\t\t * recomputing them based on the last mouse move, and", "+\t\t\t\t\t\t * only erase the tracker if the rectangles have changed.", "+\t\t\t\t\t\t */", "+\t\t\t\t\t\tif (rectangles != oldRectangles) {", "+\t\t\t\t\t\t\tint length = rectangles.length;", "+\t\t\t\t\t\t\tboolean changed = false;", "+\t\t\t\t\t\t\tif (length != oldRectangles.length) {", "+\t\t\t\t\t\t\t\tchanged = true;", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\t\t\t\tif (!rectangles [i].equals (oldRectangles [i])) {", "+\t\t\t\t\t\t\t\t\t\tchanged = true;", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (changed) {", "+\t\t\t\t\t\t\t\tdrawRectangles (oldRectangles);", "+\t\t\t\t\t\t\t\tdrawRectangles (rectangles);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tdrawRectangles (oldRectangles);", "+\t\t\t\t\t\t\tif (isMirrored) {", "+\t\t\t\t\t\t\t\tmoveRectangles (oldX - newX, newY - oldY); ", "+\t\t\t\t\t\t\t} else { ", "+\t\t\t\t\t\t\t\tmoveRectangles (newX - oldX, newY - oldY);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tdrawRectangles (rectangles);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tcursorPos = adjustMoveCursor ();", "-\t\t\t\t\tinEvent = false;", "-\t\t\t\t\t/*", "-\t\t\t\t\t* It is possible (but unlikely), that application", "-\t\t\t\t\t* code could have disposed the widget in the move", "-\t\t\t\t\t* event.  If this happens, return false to indicate", "-\t\t\t\t\t* that the tracking has failed.", "-\t\t\t\t\t*/", "-\t\t\t\t\tif (isDisposed ()) {", "-\t\t\t\t\t\tcancelled = true;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\t}", "-\t\t\t\t\tdrawRectangles (rectangles);", "-\t\t\t\t\toldX = newX;  oldY = newY;", "+\t\t\t\t\toldX = cursorPos.x;  oldY = cursorPos.y;", "-\t\t\t\t\tdrawRectangles (rectangles);", "-\t\t\t\t\tnewX = oldX + xChange;", "-\t\t\t\t\tnewY = oldY + yChange;", "-\t\t\t\t\tevent.x = newX;", "-\t\t\t\t\tevent.y = newY;", "+\t\t\t\t\tRectangle [] oldRectangles = rectangles;", "+\t\t\t\t\tevent.x = oldX + xChange;", "+\t\t\t\t\tevent.y = oldY + yChange;", "-\t\t\t\t\t\tresizeRectangles (xChange, yChange);", "-\t\t\t\t\t\tcursorPos = adjustResizeCursor ();", "+\t\t\t\t\t\tinEvent = false;", "+\t\t\t\t\t\t/*", "+\t\t\t\t\t\t* It is possible (but unlikely) that application", "+\t\t\t\t\t\t* code could have disposed the widget in the resize", "+\t\t\t\t\t\t* event.  If this happens return false to indicate", "+\t\t\t\t\t\t* that the tracking has failed.", "+\t\t\t\t\t\t*/", "+\t\t\t\t\t\tif (isDisposed ()) {", "+\t\t\t\t\t\t\tcancelled = true;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\t/*", "+\t\t\t\t\t\t * It is possible that application code could have", "+\t\t\t\t\t\t * changed the rectangles in the resize event.  If this", "+\t\t\t\t\t\t * happens then use these new rectangles instead of", "+\t\t\t\t\t\t * recomputing them based on the last mouse move, and", "+\t\t\t\t\t\t * only erase the tracker if the rectangles have changed.", "+\t\t\t\t\t\t */", "+\t\t\t\t\t\tif (rectangles != oldRectangles) {", "+\t\t\t\t\t\t\tint length = rectangles.length;", "+\t\t\t\t\t\t\tboolean changed = false;", "+\t\t\t\t\t\t\tif (length != oldRectangles.length) {", "+\t\t\t\t\t\t\t\tchanged = true;", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\t\t\t\tif (!rectangles [i].equals (oldRectangles [i])) {", "+\t\t\t\t\t\t\t\t\t\tchanged = true;", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (changed) {", "+\t\t\t\t\t\t\t\tdrawRectangles (oldRectangles);", "+\t\t\t\t\t\t\t\tdrawRectangles (rectangles);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tadjustResizeOrientation (xChange, yChange);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tdrawRectangles (oldRectangles);", "+\t\t\t\t\t\t\tresizeRectangles (xChange, yChange);", "+\t\t\t\t\t\t\tdrawRectangles (rectangles);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tcursorPos = adjustResizeCursor ();", "-\t\t\t\t\t\tmoveRectangles (xChange, yChange);", "-\t\t\t\t\t\tcursorPos = adjustMoveCursor ();", "+\t\t\t\t\t\tinEvent = false;", "+\t\t\t\t\t\t/*", "+\t\t\t\t\t\t* It is possible (but unlikely) that application", "+\t\t\t\t\t\t* code could have disposed the widget in the move", "+\t\t\t\t\t\t* event.  If this happens return false to indicate", "+\t\t\t\t\t\t* that the tracking has failed.", "+\t\t\t\t\t\t*/", "+\t\t\t\t\t\tif (isDisposed ()) {", "+\t\t\t\t\t\t\tcancelled = true;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\t/*", "+\t\t\t\t\t\t * It is possible that application code could have", "+\t\t\t\t\t\t * changed the rectangles in the move event.  If this", "+\t\t\t\t\t\t * happens then use these new rectangles instead of", "+\t\t\t\t\t\t * recomputing them based on the last mouse move, and", "+\t\t\t\t\t\t * only erase the tracker if the rectangles have changed.", "+\t\t\t\t\t\t */", "+\t\t\t\t\t\tif (rectangles != oldRectangles) {", "+\t\t\t\t\t\t\tint length = rectangles.length;", "+\t\t\t\t\t\t\tboolean changed = false;", "+\t\t\t\t\t\t\tif (length != oldRectangles.length) {", "+\t\t\t\t\t\t\t\tchanged = true;", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\t\t\t\tif (!rectangles [i].equals (oldRectangles [i])) {", "+\t\t\t\t\t\t\t\t\t\tchanged = true;", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (changed) {", "+\t\t\t\t\t\t\t\tdrawRectangles (oldRectangles);", "+\t\t\t\t\t\t\t\tdrawRectangles (rectangles);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tdrawRectangles (oldRectangles);", "+\t\t\t\t\t\t\tmoveRectangles (xChange, yChange);", "+\t\t\t\t\t\t\tdrawRectangles (rectangles);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tcursorPos = adjustMoveCursor ();", "-\t\t\t\t\tinEvent = false;", "-\t\t\t\t\t/*", "-\t\t\t\t\t* It is possible (but unlikely) that application", "-\t\t\t\t\t* code could have disposed the widget in the move", "-\t\t\t\t\t* event.  If this happens return false to indicate", "-\t\t\t\t\t* that the tracking has failed.", "-\t\t\t\t\t*/", "-\t\t\t\t\tif (isDisposed ()) {", "-\t\t\t\t\t\tcancelled = true;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\t}", "-\t\t\t\t\tdrawRectangles (rectangles);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43b310565d4e4700a25e40a56a960c40", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Tracker.java", "commitBeforeChange": "0be0a892281b55006df29db23fd32e45e2f0594d", "commitAfterChange": "703a044b1a5b80a00941f0459d87876928e4ea09", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": " public boolean open ()", "signatureAfterChange": " public boolean open ()", "diff": ["-\tdrawRectangles ();", "+\tdrawRectangles (rectangles);", "-\t *  Tracker behaves like a Dialog with its own OS event loop.", "+\t * Tracker behaves like a Dialog with its own OS event loop.", "-\t\t\t\t\tdrawRectangles ();", "+\t\t\t\t\tRectangle [] oldRectangles = rectangles;", "-\t\t\t\t\t\tresizeRectangles (newX [0] - oldX [0], newY [0] - oldY [0]);", "+\t\t\t\t\t\t/*", "+\t\t\t\t\t\t * It is possible (but unlikely) that application code", "+\t\t\t\t\t\t * could have disposed the widget in the resize event.", "+\t\t\t\t\t\t * If this happens then return false to indicate that", "+\t\t\t\t\t\t * the move failed.", "+\t\t\t\t\t\t */", "+\t\t\t\t\t\tif (isDisposed ()) {", "+\t\t\t\t\t\t\tcancelled = true;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\t/*", "+\t\t\t\t\t\t * It is possible that application code could have", "+\t\t\t\t\t\t * changed the rectangles in the resize event.  If this", "+\t\t\t\t\t\t * happens then use these new rectangles instead of", "+\t\t\t\t\t\t * recomputing them based on the last mouse move, and", "+\t\t\t\t\t\t * only erase the tracker if the rectangles have changed.", "+\t\t\t\t\t\t */", "+\t\t\t\t\t\tif (rectangles != oldRectangles) {", "+\t\t\t\t\t\t\tint length = rectangles.length;", "+\t\t\t\t\t\t\tboolean changed = false;", "+\t\t\t\t\t\t\tif (length != oldRectangles.length) {", "+\t\t\t\t\t\t\t\tchanged = true;", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\t\t\t\tif (!rectangles [i].equals (oldRectangles [i])) {", "+\t\t\t\t\t\t\t\t\t\tchanged = true;", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (changed) {", "+\t\t\t\t\t\t\t\tdrawRectangles (oldRectangles);", "+\t\t\t\t\t\t\t\tdrawRectangles (rectangles);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tadjustResizeOrientation (newX [0] - oldX [0], newY [0] - oldY [0]);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tdrawRectangles (oldRectangles);", "+\t\t\t\t\t\t\tresizeRectangles (newX [0] - oldX [0], newY [0] - oldY [0]);", "+\t\t\t\t\t\t\tdrawRectangles (rectangles);", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\tnewX [0] = cursorPos.x; newY [0] = cursorPos.y;", "-\t\t\t\t\t\tmoveRectangles (newX [0] - oldX [0], newY [0] - oldY [0]);", "+\t\t\t\t\t\t/*", "+\t\t\t\t\t\t * It is possible (but unlikely) that application code", "+\t\t\t\t\t\t * could have disposed the widget in the move event.", "+\t\t\t\t\t\t * If this happens then return false to indicate that", "+\t\t\t\t\t\t * the move failed.", "+\t\t\t\t\t\t */", "+\t\t\t\t\t\tif (isDisposed ()) {", "+\t\t\t\t\t\t\tcancelled = true;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\t/*", "+\t\t\t\t\t\t * It is possible that application code could have", "+\t\t\t\t\t\t * changed the rectangles in the move event.  If this", "+\t\t\t\t\t\t * happens then use these new rectangles instead of", "+\t\t\t\t\t\t * recomputing them based on the last mouse move, and", "+\t\t\t\t\t\t * only erase the tracker if the rectangles have changed.", "+\t\t\t\t\t\t */", "+\t\t\t\t\t\tif (rectangles != oldRectangles) {", "+\t\t\t\t\t\t\tint length = rectangles.length;", "+\t\t\t\t\t\t\tboolean changed = false;", "+\t\t\t\t\t\t\tif (length != oldRectangles.length) {", "+\t\t\t\t\t\t\t\tchanged = true;", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\t\t\t\tif (!rectangles [i].equals (oldRectangles [i])) {", "+\t\t\t\t\t\t\t\t\t\tchanged = true;", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (changed) {", "+\t\t\t\t\t\t\t\tdrawRectangles (oldRectangles);", "+\t\t\t\t\t\t\t\tdrawRectangles (rectangles);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tdrawRectangles (oldRectangles);", "+\t\t\t\t\t\t\tmoveRectangles (newX [0] - oldX [0], newY [0] - oldY [0]);", "+\t\t\t\t\t\t\tdrawRectangles (rectangles);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tcursorPos = adjustMoveCursor (xDisplay, xWindow);", "-\t\t\t\t\t/*", "-\t\t\t\t\t * It is possible (but unlikely) that application code", "-\t\t\t\t\t * could have disposed the widget in the move event.", "-\t\t\t\t\t * If this happens then return false to indicate that", "-\t\t\t\t\t * the move failed.", "-\t\t\t\t\t */", "-\t\t\t\t\tif (isDisposed ()) {", "-\t\t\t\t\t\tcancelled = true;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\t}", "-\t\t\t\t\tdrawRectangles ();", "-\t\t\t\t\toldX [0] = newX [0];  oldY [0] = newY [0];", "+\t\t\t\t\toldX [0] = cursorPos.x;  oldY [0] = cursorPos.y;", "-\t\t\t\t\t\tdrawRectangles ();", "+\t\t\t\t\t\tRectangle [] oldRectangles = rectangles;", "-\t\t\t\t\t\tevent.x = oldX[0] + xChange;", "-\t\t\t\t\t\tevent.y = oldY[0] + yChange;", "+\t\t\t\t\t\tevent.x = oldX [0] + xChange;", "+\t\t\t\t\t\tevent.y = oldY [0] + yChange;", "-\t\t\t\t\t\t\tresizeRectangles (xChange, yChange);", "+\t\t\t\t\t\t\t/*", "+\t\t\t\t\t\t\t * It is possible (but unlikely) that application code", "+\t\t\t\t\t\t\t * could have disposed the widget in the resize event.", "+\t\t\t\t\t\t\t * If this happens then return false to indicate that", "+\t\t\t\t\t\t\t * the move failed.", "+\t\t\t\t\t\t\t */", "+\t\t\t\t\t\t\tif (isDisposed ()) {", "+\t\t\t\t\t\t\t\tcancelled = true;", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t/*", "+\t\t\t\t\t\t\t * It is possible that application code could have", "+\t\t\t\t\t\t\t * changed the rectangles in the resize event.  If this", "+\t\t\t\t\t\t\t * happens then use these new rectangles instead of", "+\t\t\t\t\t\t\t * recomputing them based on the last mouse move, and", "+\t\t\t\t\t\t\t * only erase the tracker if the rectangles have changed.", "+\t\t\t\t\t\t\t */", "+\t\t\t\t\t\t\tif (rectangles != oldRectangles) {", "+\t\t\t\t\t\t\t\tint length = rectangles.length;", "+\t\t\t\t\t\t\t\tboolean changed = false;", "+\t\t\t\t\t\t\t\tif (length != oldRectangles.length) {", "+\t\t\t\t\t\t\t\t\tchanged = true;", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\t\t\t\t\tif (!rectangles [i].equals (oldRectangles [i])) {", "+\t\t\t\t\t\t\t\t\t\t\tchanged = true;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tif (changed) {", "+\t\t\t\t\t\t\t\t\tdrawRectangles (oldRectangles);", "+\t\t\t\t\t\t\t\t\tdrawRectangles (rectangles);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tadjustResizeOrientation (xChange, yChange);", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tdrawRectangles (oldRectangles);", "+\t\t\t\t\t\t\t\tresizeRectangles (xChange, yChange);", "+\t\t\t\t\t\t\t\tdrawRectangles (rectangles);", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tmoveRectangles (xChange, yChange);", "+\t\t\t\t\t\t\t/*", "+\t\t\t\t\t\t\t * It is possible (but unlikely) that application code", "+\t\t\t\t\t\t\t * could have disposed the widget in the move event.", "+\t\t\t\t\t\t\t * If this happens then return false to indicate that", "+\t\t\t\t\t\t\t * the move failed.", "+\t\t\t\t\t\t\t */", "+\t\t\t\t\t\t\tif (isDisposed ()) {", "+\t\t\t\t\t\t\t\tcancelled = true;", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t/*", "+\t\t\t\t\t\t\t * It is possible that application code could have", "+\t\t\t\t\t\t\t * changed the rectangles in the move event.  If this", "+\t\t\t\t\t\t\t * happens then use these new rectangles instead of", "+\t\t\t\t\t\t\t * recomputing them based on the last mouse move, and", "+\t\t\t\t\t\t\t * only erase the tracker if the rectangles have changed.", "+\t\t\t\t\t\t\t */", "+\t\t\t\t\t\t\tif (rectangles != oldRectangles) {", "+\t\t\t\t\t\t\t\tint length = rectangles.length;", "+\t\t\t\t\t\t\t\tboolean changed = false;", "+\t\t\t\t\t\t\t\tif (length != oldRectangles.length) {", "+\t\t\t\t\t\t\t\t\tchanged = true;", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\t\t\t\t\tif (!rectangles [i].equals (oldRectangles [i])) {", "+\t\t\t\t\t\t\t\t\t\t\tchanged = true;", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tif (changed) {", "+\t\t\t\t\t\t\t\t\tdrawRectangles (oldRectangles);", "+\t\t\t\t\t\t\t\t\tdrawRectangles (rectangles);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tdrawRectangles (oldRectangles);", "+\t\t\t\t\t\t\t\tmoveRectangles (xChange, yChange);", "+\t\t\t\t\t\t\t\tdrawRectangles (rectangles);", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t/*", "-\t\t\t\t\t\t * It is possible (but unlikely) that application code", "-\t\t\t\t\t\t * could have disposed the widget in the move event.", "-\t\t\t\t\t\t * If this happens then return false to indicate that", "-\t\t\t\t\t\t * the move failed.", "-\t\t\t\t\t\t */", "-\t\t\t\t\t\tif (isDisposed ()) {", "-\t\t\t\t\t\t\tcancelled = true;", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tdrawRectangles ();", "-\t\t\t\t\t\toldX[0] = cursorPos.x;  oldY[0] = cursorPos.y;", "+\t\t\t\t\t\toldX [0] = cursorPos.x;  oldY [0] = cursorPos.y;", "-\tif (!isDisposed()) drawRectangles ();", "+\tif (!isDisposed()) drawRectangles (rectangles);"]}], "num": 44208}