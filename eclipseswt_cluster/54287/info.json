{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b2f61047efe48c894b28f6c2ac2777b8", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08a2d9ece8c858c09546e696c23298d9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleClientSite.java", "commitBeforeChange": "deab298e3f8d4709a521587df51ebc6851da7b92", "commitAfterChange": "21e538be1341032af9956d667ab9b6dd4385e4d9", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "\r public int doVerb(int verb)", "signatureAfterChange": "\r public int doVerb(int verb)", "diff": ["+\t// Not all OLE clients (for example PowerPoint) can be set into the running state in the constructor.\r", "+\t// The fix is to ensure that the client is in the running state before invoking any verb on it.\r", "+\tif (state == STATE_NONE) {\r", "+\t\tif (COM.OleRun(objIUnknown.getAddress()) == OLE.S_OK) state = STATE_RUNNING;\r", "+\t}\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28ffb927123167234a9224533c85f3ab", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGenerator.java", "commitBeforeChange": "dc99d9bb9843280e22befd705fd4e0f15ba22ec9", "commitAfterChange": "da66ed50e7f2fec0e5faf4b617a73367a0acde7d", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  public void setOutputDir(String dir)", "signatureAfterChange": "  public void setOutputDir(String dir)", "diff": ["+\tif (dir != null) {", "+\t\tif (!dir.endsWith(\"\\\\\") && !dir.endsWith(\"/\") ) {", "+\t\t\tdir += \"/\";", "+\t\t}", "+\t}", "+}"]}], "num": 54287}