{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b33678e890859eade5cf950a868a54b6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45939be7362e1cd4f4f005fd554fc745", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "9060990a4adbb740705acd1cea6ae47201f32a47", "commitAfterChange": "aa8fe2466704a86c2347468505ba6d37d1ddecb9", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  boolean canDragRowsWithIndexes_atPoint(int id, int sel, int arg0, int arg1)", "signatureAfterChange": "  boolean canDragRowsWithIndexes_atPoint(int id, int sel, int arg0, int arg1)", "diff": ["-\tif (!tree.isRowSelected(row) && (modifiers & (OS.NSCommandKeyMask | OS.NSShiftKeyMask | OS.NSAlternateKeyMask | OS.NSControlKeyMask)) == 0) {", "-\t\tNSIndexSet set = (NSIndexSet)new NSIndexSet().alloc();", "-\t\tset = set.initWithIndex(row);", "-\t\ttree.selectRowIndexes (set, false);", "-\t\tset.release();", "+\tboolean drag = (state & DRAG_DETECT) != 0 && hooks (SWT.DragDetect);", "+\tif (drag) {", "+\t\tif (!tree.isRowSelected(row) && (modifiers & (OS.NSCommandKeyMask | OS.NSShiftKeyMask | OS.NSAlternateKeyMask | OS.NSControlKeyMask)) == 0) {", "+\t\t\tNSIndexSet set = (NSIndexSet)new NSIndexSet().alloc();", "+\t\t\tset = set.initWithIndex(row);", "+\t\t\ttree.selectRowIndexes (set, false);", "+\t\t\tset.release();", "+\t\t}", "-\treturn (tree.isRowSelected(row) && (state & DRAG_DETECT) != 0 && hooks (SWT.DragDetect));", "+\treturn (tree.isRowSelected(row) && drag);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcbd85dac6599702cb6a97e7cf56244f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "9060990a4adbb740705acd1cea6ae47201f32a47", "commitAfterChange": "aa8fe2466704a86c2347468505ba6d37d1ddecb9", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  boolean canDragRowsWithIndexes_atPoint(int id, int sel, int arg0, int arg1)", "signatureAfterChange": "  boolean canDragRowsWithIndexes_atPoint(int id, int sel, int arg0, int arg1)", "diff": ["-\tif (!table.isRowSelected(row) && (modifiers & (OS.NSCommandKeyMask | OS.NSShiftKeyMask | OS.NSAlternateKeyMask)) == 0) {", "-\t\tNSIndexSet set = (NSIndexSet)new NSIndexSet().alloc();", "-\t\tset = set.initWithIndex(row);", "-\t\ttable.selectRowIndexes (set, false);", "-\t\tset.release();", "+\tboolean drag = (state & DRAG_DETECT) != 0 && hooks (SWT.DragDetect);", "+\tif (drag) {", "+\t\tif (!table.isRowSelected(row) && (modifiers & (OS.NSCommandKeyMask | OS.NSShiftKeyMask | OS.NSAlternateKeyMask)) == 0) {", "+\t\t\tNSIndexSet set = (NSIndexSet)new NSIndexSet().alloc();", "+\t\t\tset = set.initWithIndex(row);", "+\t\t\ttable.selectRowIndexes (set, false);", "+\t\t\tset.release();", "+\t\t}", "-\treturn (table.isRowSelected(row) && (state & DRAG_DETECT) != 0 && hooks (SWT.DragDetect));", "+\treturn (table.isRowSelected(row) && drag);"]}], "num": 53975}