{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c81357fc1ab37b2a99a008d067174fb1", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bcdeb93e5372397c0683a6287d6fe44", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 58, "signatureBeforeChange": " void installListeners()", "signatureAfterChange": " void onArrowLeft (int stateMask)", "diff": ["+}", "+void onArrowLeft (int stateMask) {", "+\tif (horizontalOffset == 0) return;", "+\tint newSelection = Math.max (0, horizontalOffset - SIZE_HORIZONTALSCROLL);", "+\tRectangle clientArea = getClientArea ();", "+\tupdate ();", "+\tGC gc = new GC (this);", "+\tgc.copyArea (", "+\t\t0, 0,", "+\t\tclientArea.width, clientArea.height,", "+\t\thorizontalOffset - newSelection, 0);", "+\tgc.dispose ();", "+\tif (getHeaderVisible ()) {", "+\t\theader.update ();", "+\t\tclientArea = header.getClientArea ();", "+\t\tgc = new GC (header);", "+\t\tgc.copyArea (", "+\t\t\t0, 0,", "+\t\t\tclientArea.width, clientArea.height,", "+\t\t\thorizontalOffset - newSelection, 0);", "+\t\tgc.dispose();", "+\t}", "+\thorizontalOffset = newSelection;", "+\tgetHorizontalBar ().setSelection (horizontalOffset);", "+}", "- */", "-void installListeners() {", "-\tHeader tableHeader = getHeader();", "-\tListener listener = getListener();", "-", "-\tsuper.installListeners();\t", "-\ttableHeader.addListener(SWT.MouseMove, listener);", "-\ttableHeader.addListener(SWT.MouseDown, listener);", "-\ttableHeader.addListener(SWT.MouseDoubleClick, listener);", "-\ttableHeader.addListener(SWT.MouseUp, listener);", "-\t", "-\taddListener(SWT.MouseMove, listener);", "-\taddListener(SWT.MouseDown, listener);", "-\taddListener(SWT.MouseDoubleClick, listener);", "-\taddListener(SWT.MouseUp, listener);", "-\taddListener(SWT.Paint, listener);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8378339ee2a5a287c5de355591558468", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "2bb08c7614487fdd329818c69f0e013ec0190b46", "commitAfterChange": "096e1fb757d4499d3e9dd63533efc08559c46bbd", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": " void onArrowRight (int stateMask)", "signatureAfterChange": " void onArrowRight (int stateMask)", "diff": ["-\t\tint maximum = hBar.getMaximum ();", "-\t\tint clientWidth = clientArea.width;", "-\t\tif ((horizontalOffset + clientWidth) == maximum) return;", "-\t\tif (maximum <= clientWidth) return;", "-\t\tint newSelection = Math.min (horizontalOffset + SIZE_HORIZONTALSCROLL, maximum - clientWidth);", "-\t\tupdate ();", "-\t\tGC gc = new GC (this);", "-\t\tgc.copyArea (", "-\t\t\t0, 0,", "-\t\t\tclientArea.width, clientArea.height,", "-\t\t\thorizontalOffset - newSelection, 0);", "-\t\tgc.dispose ();", "-\t\tif (header.getVisible ()) {", "-\t\t\tRectangle headerClientArea = header.getClientArea ();", "-\t\t\theader.update ();", "-\t\t\tgc = new GC (header);", "+\t\tif (hBar != null) {", "+\t\t\tint maximum = hBar.getMaximum ();", "+\t\t\tint clientWidth = clientArea.width;", "+\t\t\tif ((horizontalOffset + clientWidth) == maximum) return;", "+\t\t\tif (maximum <= clientWidth) return;", "+\t\t\tint newSelection = Math.min (horizontalOffset + SIZE_HORIZONTALSCROLL, maximum - clientWidth);", "+\t\t\tupdate ();", "+\t\t\tGC gc = new GC (this);", "-\t\t\t\theaderClientArea.width, headerClientArea.height,", "+\t\t\t\tclientArea.width, clientArea.height,", "-\t\t\tgc.dispose();", "+\t\t\tgc.dispose ();", "+\t\t\tif (header.getVisible ()) {", "+\t\t\t\tRectangle headerClientArea = header.getClientArea ();", "+\t\t\t\theader.update ();", "+\t\t\t\tgc = new GC (header);", "+\t\t\t\tgc.copyArea (", "+\t\t\t\t\t0, 0,", "+\t\t\t\t\theaderClientArea.width, headerClientArea.height,", "+\t\t\t\t\thorizontalOffset - newSelection, 0);", "+\t\t\t\tgc.dispose();", "+\t\t\t}", "+\t\t\thorizontalOffset = newSelection;", "+\t\t\thBar.setSelection (horizontalOffset);", "-\t\thorizontalOffset = newSelection;", "-\t\thBar.setSelection (horizontalOffset);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b685bf4382fad19a890ac790595e733", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 75, "signatureBeforeChange": " void resizeRedraw(TableColumn column, int oldColumnWidth, int newColumnWidth)", "signatureAfterChange": " void onScrollHorizontal (Event event)", "diff": ["+void onScrollHorizontal (Event event) {", "+\tint newSelection = getHorizontalBar ().getSelection ();", "+\tRectangle clientArea = getClientArea ();", "+\tupdate ();", "+\tGC gc = new GC (this);", "+\tgc.copyArea (", "+\t\t0, 0,", "+\t\tclientArea.width, clientArea.height,", "+\t\thorizontalOffset - newSelection, 0);", "+\tgc.dispose ();", "+\tif (header.isVisible ()) {", "+\t\theader.update ();", "+\t\tclientArea = header.getClientArea ();", "+\t\tgc = new GC (header);", "+\t\tgc.copyArea (", "+\t\t\t0, 0,", "+\t\t\tclientArea.width, clientArea.height,", "+\t\t\thorizontalOffset - newSelection, 0);", "+\t\tgc.dispose ();", "+\thorizontalOffset = newSelection;", "- */", "-void resizeRedraw(TableColumn column, int oldColumnWidth, int newColumnWidth) {", "-\tRectangle columnBounds = column.getBounds();", "-\tint columnIndex = column.getIndex();", "-\tint oldRedrawStartX[] = getResizeRedrawX(columnIndex, oldColumnWidth);", "-\tint newRedrawStartX[] = getResizeRedrawX(columnIndex, newColumnWidth);", "-\tint itemHeight = getItemHeight();", "-\tint widthChange = newColumnWidth - oldColumnWidth;", "-\tint topIndex = getTopIndex();", "-", "-\tfor (int i = 0; i < newRedrawStartX.length; i++) {", "-\t\tif (newRedrawStartX[i] != oldRedrawStartX[i]) {", "-\t\t\tif (widthChange > 0) {", "-\t\t\t\tnewRedrawStartX[i] = oldRedrawStartX[i];", "-\t\t\t}", "-\t\t\tredraw(", "-\t\t\t\tcolumnBounds.x + newRedrawStartX[i], columnBounds.y + itemHeight * (i + topIndex), ", "-\t\t\t\tcolumnBounds.width - newRedrawStartX[i], itemHeight, false);", "-\t\t}", "-\t}", "-}"]}], "num": 2430}