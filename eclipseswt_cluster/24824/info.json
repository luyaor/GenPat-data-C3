{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "25e5ecb0f7af7f01128535ad8c34a1ff", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81811a9478f920d34de0dc37b0f766f5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "a397adb9835229656215e95243704829dfcbbeb5", "commitAfterChange": "def775014633899bdd73c908cbbdd1bf2fa7d5be", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tint atkSelection_ref_selection (int index)", "signatureAfterChange": "  \tint atkSelection_ref_selection (int index)", "diff": ["-\t\tif (accessible.getControlListeners ().length != 0) {", "-\t\t\tAccessibleControlListener[] listeners = accessible.getControlListeners ();", "-\t\t\tAccessibleControlEvent event = new AccessibleControlEvent (this);", "-\t\t\tevent.childID = id;", "-\t\t\tfor (int i = 0; i < listeners.length; i++) {", "-\t\t\t\tlisteners [i].getSelection (event);", "-\t\t\t} ", "-\t\t\tAccessibleObject accObj = getChildByID (event.childID);", "-\t\t\tif (accObj != null) {", "-\t\t\t\tOS.g_object_ref (accObj.handle);\t", "-\t\t\t\treturn accObj.handle;", "-\t\t\t}", "-\t\t}", "+\t\tint parentResult = 0;", "-\t\t\tint superType = OS.g_type_class_peek (parentType);", "+\t\t\tint superType = OS.g_type_interface_peek_parent (ATK.ATK_SELECTION_GET_IFACE (handle));", "-\t\t\t\treturn OS.call (selectionIface.ref_selection, handle, index);", "+\t\t\t\tparentResult = OS.call (selectionIface.ref_selection, handle, index);", "-\t\treturn 0;", "+\t\tAccessibleControlListener[] listeners = accessible.getControlListeners ();", "+\t\tif (listeners.length == 0) return parentResult;", "+\t\t\t", "+\t\tAccessibleControlEvent event = new AccessibleControlEvent (this);", "+\t\tevent.childID = id;", "+\t\tfor (int i = 0; i < listeners.length; i++) {", "+\t\t\tlisteners [i].getSelection (event);", "+\t\t} ", "+\t\tAccessibleObject accObj = getChildByID (event.childID);", "+\t\tif (accObj != null) {", "+\t\t\tif (parentResult > 0) OS.g_object_unref (parentResult);", "+\t\t\tOS.g_object_ref (accObj.handle);\t", "+\t\t\treturn accObj.handle;", "+\t\t}", "+\t\treturn parentResult;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6bce24b4bd7656d050204ab088c0bc1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "a397adb9835229656215e95243704829dfcbbeb5", "commitAfterChange": "def775014633899bdd73c908cbbdd1bf2fa7d5be", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tint atkComponent_ref_accessible_at_point (int x, int y, int coord_type)", "signatureAfterChange": "  \tint atkComponent_ref_accessible_at_point (int x, int y, int coord_type)", "diff": ["-\t\tif (accessible.getControlListeners ().length != 0) {", "-\t\t\tAccessibleControlListener[] listeners = accessible.getControlListeners ();\t\t\t\t", "-\t\t\tAccessibleControlEvent event = new AccessibleControlEvent (this);", "-\t\t\tevent.childID = id;", "-\t\t\tevent.x = x; event.y = y;", "-\t\t\tif (coord_type == ATK.ATK_XY_WINDOW) {", "-\t\t\t\t// translate control -> display", "-\t\t\t\tint gtkAccessibleHandle = OS.GTK_ACCESSIBLE (handle);", "-\t\t\t\tGtkAccessible gtkAccessible = new GtkAccessible ();", "-\t\t\t\tOS.memmove (gtkAccessible, gtkAccessibleHandle);", "-\t\t\t\tint topLevel = OS.gtk_widget_get_toplevel (gtkAccessible.widget);", "-\t\t\t\tint window = OS.GTK_WIDGET_WINDOW (topLevel);\t\t\t\t", "-\t\t\t\tint[] topWindowX = new int [1], topWindowY = new int [1];", "-\t\t\t\tOS.gdk_window_get_origin (window, topWindowX, topWindowY);", "-\t\t\t\tevent.x += topWindowX [0];", "-\t\t\t\tevent.y += topWindowY [0]; ", "-\t\t\t\tRectangle rect = accessible.control.getBounds ();\t\t\t\t", "-\t\t\t\tevent.x -= rect.x;", "-\t\t\t\tevent.y -= rect.y;", "-\t\t\t}", "-\t\t\tfor (int i = 0; i < listeners.length; i++) {", "-\t\t\t\tlisteners [i].getChildAtPoint (event);\t\t\t\t", "-\t\t\t}", "-\t\t\tif (event.childID == id) event.childID = ACC.CHILDID_SELF;", "-\t\t\tAccessibleObject accObj = getChildByID (event.childID);", "-\t\t\tif (accObj != null) {", "-\t\t\t\tOS.g_object_ref (accObj.handle);\t", "-\t\t\t\treturn accObj.handle;", "-\t\t\t}", "-\t\t}", "+\t\tint parentResult = 0;", "-\t\t\tint superType = OS.g_type_class_peek (parentType);", "+\t\t\tint superType = OS.g_type_interface_peek_parent (ATK.ATK_COMPONENT_GET_IFACE (handle));", "-\t\t\t\treturn OS.call (componentIface.ref_accessible_at_point, handle, x, y, coord_type);", "+\t\t\t\tparentResult = OS.call (componentIface.ref_accessible_at_point, handle, x, y, coord_type);", "-\t\treturn 0;", "+\t\tAccessibleControlListener[] listeners = accessible.getControlListeners ();", "+\t\tif (listeners.length == 0) return parentResult;", "+\t\t", "+\t\tAccessibleControlEvent event = new AccessibleControlEvent (this);", "+\t\tevent.childID = id;", "+\t\tevent.x = x; event.y = y;", "+\t\tif (coord_type == ATK.ATK_XY_WINDOW) {", "+\t\t\t// translate control -> display, for filling in the event to be dispatched", "+\t\t\tint gtkAccessibleHandle = OS.GTK_ACCESSIBLE (handle);", "+\t\t\tGtkAccessible gtkAccessible = new GtkAccessible ();", "+\t\t\tOS.memmove (gtkAccessible, gtkAccessibleHandle);", "+\t\t\tint topLevel = OS.gtk_widget_get_toplevel (gtkAccessible.widget);", "+\t\t\tint window = OS.GTK_WIDGET_WINDOW (topLevel);\t\t\t\t", "+\t\t\tint[] topWindowX = new int [1], topWindowY = new int [1];", "+\t\t\tOS.gdk_window_get_origin (window, topWindowX, topWindowY);", "+\t\t\tevent.x += topWindowX [0];", "+\t\t\tevent.y += topWindowY [0]; ", "+\t\t}", "+\t\tfor (int i = 0; i < listeners.length; i++) {", "+\t\t\tlisteners [i].getChildAtPoint (event);\t\t\t\t", "+\t\t}", "+\t\tif (event.childID == id) event.childID = ACC.CHILDID_SELF;", "+\t\tAccessibleObject accObj = getChildByID (event.childID);", "+\t\tif (accObj != null) {", "+\t\t\tif (parentResult > 0) OS.g_object_unref (parentResult);", "+\t\t\tOS.g_object_ref (accObj.handle);\t", "+\t\t\treturn accObj.handle;", "+\t\t}", "+\t\treturn parentResult;"]}], "num": 24824}