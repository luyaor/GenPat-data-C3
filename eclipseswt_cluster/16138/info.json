{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "464d431d6606a49697e38e652a506f82", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f087e4f3c399ab3a3e11af38e065b33", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_MenuItem.java", "commitBeforeChange": "9e9b22e7fbddf56a56c3b41ab019977d0d81ffb2", "commitAfterChange": "98d19b62ddd24b9e1c302a3fa8659cc554d75e7d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public void test_addHelpListenerLorg_eclipse_swt_events_HelpListener()", "signatureAfterChange": "  public void test_addHelpListenerLorg_eclipse_swt_events_HelpListener()", "diff": ["-\twarnUnimpl(\"Test test_addHelpListenerLorg_eclipse_swt_events_HelpListener not written\");", "+\tlistenerCalled = false;", "+\tHelpListener listener = new HelpListener() {", "+\t\tpublic void helpRequested(HelpEvent e) {", "+\t\t\tlistenerCalled = true;", "+\t\t};", "+\t};", "+\t", "+\ttry {", "+\t\tmenuItem.addHelpListener(null);", "+\t\tfail(\"No exception thrown for addHelpListener with null argument\");", "+\t} catch (IllegalArgumentException e) {", "+\t}", "+\t", "+\tmenuItem.addHelpListener(listener);", "+\tmenuItem.notifyListeners(SWT.Help, new Event());", "+\tassertTrue(listenerCalled);", "+\t", "+\ttry {", "+\t\tmenuItem.removeHelpListener(null);", "+\t\tfail(\"No exception thrown for removeHelpListener with null argument\");", "+\t} catch (IllegalArgumentException e) {", "+\t}", "+\tlistenerCalled = false;", "+\tmenuItem.removeHelpListener(listener);", "+\tmenuItem.notifyListeners(SWT.Help, new Event());", "+\tassertFalse(listenerCalled);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cc4d1c099f4284d6a127d4095c31147", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_MenuItem.java", "commitBeforeChange": "9e9b22e7fbddf56a56c3b41ab019977d0d81ffb2", "commitAfterChange": "98d19b62ddd24b9e1c302a3fa8659cc554d75e7d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public void test_addArmListenerLorg_eclipse_swt_events_ArmListener()", "signatureAfterChange": "  public void test_addArmListenerLorg_eclipse_swt_events_ArmListener()", "diff": ["-\twarnUnimpl(\"Test test_addArmListenerLorg_eclipse_swt_events_ArmListener not written\");", "+\tlistenerCalled = false;", "+\tArmListener listener = new ArmListener() {", "+\t\tpublic void widgetArmed(ArmEvent e) {", "+\t\t\tlistenerCalled = true;", "+\t\t};", "+\t};", "+\t", "+\ttry {", "+\t\tmenuItem.addArmListener(null);", "+\t\tfail(\"No exception thrown for addArmListener with null argument\");", "+\t} catch (IllegalArgumentException e) {", "+\t}", "+\t", "+\tmenuItem.addArmListener(listener);", "+\tmenuItem.notifyListeners(SWT.Arm, new Event());", "+\tassertTrue(listenerCalled);", "+\t", "+\ttry {", "+\t\tmenuItem.removeArmListener(null);", "+\t\tfail(\"No exception thrown for removeArmListener with null argument\");", "+\t} catch (IllegalArgumentException e) {", "+\t}", "+\tlistenerCalled = false;", "+\tmenuItem.removeArmListener(listener);", "+\tmenuItem.notifyListeners(SWT.Arm, new Event());", "+\tassertFalse(listenerCalled);"]}], "num": 16138}