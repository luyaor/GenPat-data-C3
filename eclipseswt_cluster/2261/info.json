{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b7c5a09a518f8218780664406bffc2c5", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa4013b5badcd0f6ffe13c6752735af0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "fbc8ac60b9bd96dd8f3d40e9f3ff309170d6fa08", "commitAfterChange": "7a5eedceee18d4a267220586301c929b399bbcd8", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": " public boolean post(Event event)", "signatureAfterChange": " public boolean post(Event event)", "diff": ["+\t\t\ttry {", "+\t\t\t\tThread.sleep(1);", "+\t\t\t} catch (Exception e) {", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88669410c382544b7d0f699bf9eb7976", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/common/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "c0a24ef99e9fd113fcc4344addef7bfbbb08fbfd", "commitAfterChange": "ae3945e746000b28b90b6daa3bba44b6b63622f2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  static int checkStyle(int style)", "signatureAfterChange": "  static int checkStyle(int style)", "diff": ["+\t\t/*", "+\t\t* Some Browser clients that explicitly specify the native renderer to use", "+\t\t* (by creating a Browser with style SWT.MOZILLA or SWT.WEBKIT) may also", "+\t\t* need to specify that all \"default\" Browser instances (those created with", "+\t\t* style SWT.NONE) should use this renderer as well.  This may be needed in", "+\t\t* order to avoid incompatibilities that can arise from having multiple", "+\t\t* native renderers loaded within the same process.  A client can do this by", "+\t\t* setting the \"org.eclipse.swt.browser.DefaultType\" java system property to", "+\t\t* a value like \"mozilla\" or \"webkit\".  ", "+\t\t*/", "+", "+\t\t/*", "+\t\t* Plug-ins need an opportunity to set the org.eclipse.swt.browser.DefaultType", "+\t\t* system property before the first Browser is created.  To facilitate this,", "+\t\t* reflection is used to reference non-existent class", "+\t\t* org.eclipse.swt.browser.BrowserInitializer the first time a Browser is created.", "+\t\t* A client wishing to use this hook can do so by creating a fragment of", "+\t\t* org.eclipse.swt that implements this class and sets the system property in its", "+\t\t* static initializer.", "+\t\t*/", "+\t\ttry {", "+\t\t\tClass.forName (\"org.eclipse.swt.browser.BrowserInitializer\"); //$NON-NLS-1$", "+\t\t} catch (ClassNotFoundException e) {", "+\t\t\t/* no fragment is providing this class, which is the typical case */", "+\t\t}", "+"]}], "num": 2261}