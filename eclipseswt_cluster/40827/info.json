{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d1cde7c2d6cb2d7d46e821760d0ac56c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6063c224bcd612195eea92e90ec91186", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "696c862efd07827addcd71a84ef08e1b9f23b2f6", "commitAfterChange": "bd7e3d919d38467894a1c4937ed9fd1ca824e58a", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public FontMetrics getLineMetrics (int lineIndex)", "signatureAfterChange": " public FontMetrics getLineMetrics (int lineIndex)", "diff": ["+\t\tascent = Math.max(ascent, this.ascent);", "+\t\tdescent = Math.max(descent, this.descent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae5a85463b7b639128b1b39fd740556d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "56201926f64ad6ea7f48b4affd1bb7e12a2c8db2", "commitAfterChange": "55a22ab9240db91b3cefd3f1694927c9a71b6ad8", "methodNumberBeforeChange": 211, "methodNumberAfterChange": 211, "signatureBeforeChange": " Point getPointAtOffset(int offset)", "signatureAfterChange": " Point getPointAtOffset(int offset)", "diff": ["-\t\t\tpoint = layout.getLocation(offsetInLine - 1, true);", "+\t\t\toffsetInLine = layout.getPreviousOffset(offsetInLine, SWT.MOVEMENT_CLUSTER); ", "+\t\t\tpoint = layout.getLocation(offsetInLine, true);", "-\t\t\t\t\t\tpoint = layout.getLocation(offsetInLine - 1, true);", "+\t\t\t\t\t\toffsetInLine = layout.getPreviousOffset(offsetInLine, SWT.MOVEMENT_CLUSTER); ", "+\t\t\t\t\t\tpoint = layout.getLocation(offsetInLine, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a338c38e38ad8d2769307c6e725e291c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "62b114225776c09f8a6570dde053dd94358f28d9", "commitAfterChange": "88d0b371a82ed8f1081c2933382ac5c0ad56880e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 17, "signatureBeforeChange": "  public FontMetrics getLineMetrics (int lineIndex)", "signatureAfterChange": "  public FontMetrics getLineMetrics (int lineIndex)", "diff": ["+\t\tascent = Math.max(0, this.ascent * OS.PANGO_SCALE);", "+\t\tdescent = Math.max(0, this.descent * OS.PANGO_SCALE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f794c65849fc2347cc664b99b4ef51f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "4953e90353cf03b7e9778bd8ad03e777e563314d", "commitAfterChange": "870787fef214f5a7a4ed7ed77aab11c3ab3a4ecc", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": " protected void init ()", "signatureAfterChange": " protected void init ()", "diff": ["-\tid blink = NSUserDefaults.standardUserDefaults().objectForKey(NSString.stringWith(\"NSTextInsertionPointBlinkPeriod\"));", "+\tNSUserDefaults defaults = NSUserDefaults.standardUserDefaults();", "+\tdefaults.setInteger(0, NSString.stringWith(OS.VERSION >= 0x1080 ? \"NSScrollAnimationEnabled\" : \"AppleScrollAnimationEnabled\"));", "+\tid blink = defaults.objectForKey(NSString.stringWith(\"NSTextInsertionPointBlinkPeriod\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "713d62f6699e8853161f964955c6d953", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/WebSite.java", "commitBeforeChange": "754bd4819e737c20929c11a9fd611f586b21c5dc", "commitAfterChange": "73a84b5055a6e8b9d3988630057727bfa99b8f45", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "  int TranslateAccelerator(int lpMsg, int pguidCmdGroup, int nCmdID)", "signatureAfterChange": "  int TranslateAccelerator(int lpMsg, int pguidCmdGroup, int nCmdID)", "diff": ["-\t\t\tcase OS.VK_N:", "-\t\t\t\tif (OS.GetKeyState (OS.VK_CONTROL) < 0) result = COM.S_OK;", "-\t\t\t\tbreak;", "+\t\t\tcase OS.VK_N:", "+\t\t\t\t/* If the exact keypress is Ctrl+N, which opens a new external IE, then eat this key */", "+\t\t\t\tif (OS.GetKeyState (OS.VK_CONTROL) < 0 && OS.GetKeyState (OS.VK_MENU) >= 0 && OS.GetKeyState (OS.VK_SHIFT) >= 0) {", "+\t\t\t\t\tresult = COM.S_OK;", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t\t// FALL THROUGH"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c70e364909b7bf2581535538a5a8207", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "d81e473e483ae4fce965f43d47dd34220fc3e0cd", "commitAfterChange": "a38b0e1c16db17f32238a4af0323e106634ade69", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void createRenderers (int columnHandle, int modelIndex, boolean check, int columnStyle)", "signatureAfterChange": "  void createRenderers (int columnHandle, int modelIndex, boolean check, int columnStyle)", "diff": ["+\tOS.gtk_tree_view_column_add_attribute (columnHandle, textRenderer, \"font-desc\", FONT_COLUMN);", "-\t\tOS.gtk_tree_view_column_set_cell_data_func (columnHandle, textRenderer, display.cellDataProc, handle, 0);", "+\t\tOS.gtk_tree_view_column_set_cell_data_func (columnHandle, textRenderer, display.textCellDataProc, handle, 0);", "+\t\tOS.gtk_tree_view_column_set_cell_data_func (columnHandle, pixbufRenderer, display.pixbufCellDataProc, handle, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d95cc0476b9d21bc9f8c36764e35d80b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "5fe1dac38bbaf436586a9cb7186584e15e9a84a3", "commitAfterChange": "aa4a6dbde79dfa01a598a4091801c6351b8adce7", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": " void releaseWidget ()", "signatureAfterChange": " void releaseWidget ()", "diff": ["+\t\tOS.XmImSetValues (fontHandle, argList2, argList2.length / 2);", "+\t\tOS.XmImUnregister (handle);", "-\t\tOS.XmImUnregister (focusHandle);", "+\t\tif (handle != focusHandle) {", "+\t\t\tOS.XmImUnregister (focusHandle);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6699ee724b3d82340e9b1d5cebfd4cab", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tracker.java", "commitBeforeChange": "a61caa1cfed4d2ec7b9bccff2e9d74f32593118d", "commitAfterChange": "b84a972a97895b84f13dc7405df20866130f726b", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public boolean open ()", "signatureAfterChange": " public boolean open ()", "diff": ["+\tDisplay display = this.display;", "+\t\t\tdisplay.runSkin ();", "+\t\t\tdisplay.runDeferredLayouts ();", "+\t\t\t\tdisplay.runAsyncMessages (false);", "+\t\tdisplay.runAsyncMessages (false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5402e092ad9eb0c1b305c897b68ddd21", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "3539392530d589ce910e4278acc811f43b907fc4", "commitAfterChange": "b4b61aff0cb1c1ac045f8af3c9d9b60914e3dc14", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": " void hookEvents ()", "signatureAfterChange": " void hookEvents ()", "diff": ["+\tDisplay display= getDisplay();", "+\tOS.setDataBrowserItemDataCallback(handle, display.fDataBrowserDataProc);", "+\tOS.setDataBrowserItemNotificationCallback(handle, display.fDataBrowserItemNotificationProc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d22dc5d0db39ca9f1ba9390bc9bcd3b5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "599eb2b0f46840fdbb20c23e8e446e36f12bc0bb", "commitAfterChange": "d54f89ff989006d607d53b534afb484bf72112b0", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  void createRenderers (int columnHandle, int modelIndex, boolean check, int columnStyle)", "signatureAfterChange": "  void createRenderers (int columnHandle, int modelIndex, boolean check, int columnStyle)", "diff": ["+\t\tOS.g_object_set(textRenderer, OS.xalign, 1f, 0);", "+\t\tOS.g_object_set(textRenderer, OS.xalign, 0.5f, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a21ae36ae1959a6c683cbb3aca24d0a9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "9cc72cd00c181250b1f51b95a0528a6b993c1ed9", "commitAfterChange": "1c6100db3e7e2869dd9939a388c01ffe02266ae6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\treturn computeNativeSize (handle, wHint, hHint, changed);", "+\t/*", "+\t * Feature in GTK. Size of toolbar is calculated incorrectly", "+\t * and appears as just the overflow arrow, if the arrow is enabled", "+\t * to display. The fix is to disable it before the computation of", "+\t * size and enable it if WRAP style is set.", "+\t */", "+\tOS.gtk_toolbar_set_show_arrow (handle, false);", "+\tPoint size = computeNativeSize (handle, wHint, hHint, changed);", "+\tif ((style & SWT.WRAP) != 0) OS.gtk_toolbar_set_show_arrow (handle, true);", "+\treturn size;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43156d4b4e99f4a5112efd10d4c111a6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "9cc72cd00c181250b1f51b95a0528a6b993c1ed9", "commitAfterChange": "1c6100db3e7e2869dd9939a388c01ffe02266ae6", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 31, "signatureBeforeChange": "  int setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "signatureAfterChange": "  int setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "diff": ["+\tOS.gtk_toolbar_set_show_arrow (handle, false);", "+\tif ((style & SWT.WRAP) != 0) OS.gtk_toolbar_set_show_arrow (handle, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff265313475780104e3f2de727e2097b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/DropTarget.java", "commitBeforeChange": "afc0fa6e8d839b2b3830e8588568e0e0ce159e34", "commitAfterChange": "e1ed2e305b572c142219fc5140ca7b70afdb4469", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  void clearDropNotAllowed()", "signatureAfterChange": "  void clearDropNotAllowed()", "diff": ["+\t\tDisplay display = getDisplay();", "+\t\tdisplay.setData (LOCK_CURSOR, Boolean.FALSE);", "+\t\tNSCursor.pop();", "+\t\tdisplay.setData (LOCK_CURSOR, Boolean.TRUE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57c38be1e72111d6cc44973b66d8a4ab", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/SashForm.java", "commitBeforeChange": "b8915f8c97b0cf960a43802745499f1e70e0513e", "commitAfterChange": "f4e8e826e095b63d6bd5ae9b313b9e6873496b57", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "\r public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\twidth = wHint;\r", "-\t\theight = hHint;\r", "-\t\twidth += controls.length *SASH_WIDTH;\r", "+\t\twidth += (controls.length - 1) * SASH_WIDTH;\r", "+\t\t\twidth = Math.max(width, size.x);\r", "+\t\t\theight = Math.max(height, size.y);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e70a6f31cf616de2663b21f688b528c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "20bf6d51528a26e60efa82d957330a1a29c9c9e5", "commitAfterChange": "7ac1d3600daa9f5eec2dc25a6ac43b70f436f4b6", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": "\r public boolean sleep ()", "signatureAfterChange": "\r public boolean sleep ()", "diff": ["-\treturn OS.XtAppPeekEvent (xtContext, xEvent);\r", "+\t/*\r", "+\t* Bug in Xt.  Under certain circumstances Xt waits\r", "+\t* forever looking for X events, ignoring alternate\r", "+\t* inputs.  The fix is to never sleep forever.\r", "+\t*/\r", "+\tsleepID = OS.XtAppAddTimeOut (xtContext, 100, sleepProc, 0);\r", "+\tboolean result = OS.XtAppPeekEvent (xtContext, xEvent);\r", "+\tif (sleepID != 0) OS.XtRemoveTimeOut (sleepID);\r", "+\treturn result;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "354a28529f7339cef7e49e6304439e85", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/carbon/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "05d141b181e80472f5b1358deacfda122e0bb35f", "commitAfterChange": "650ccec495d5890698851b01ddee09d8411670ad", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  int handleCallback(int nextHandler, int theEvent)", "signatureAfterChange": "  int handleCallback(int nextHandler, int theEvent)", "diff": ["-\t\t\t\t\t* 0.  The workaround is to temporarily add an extra ref to the view while the", "-\t\t\t\t\t* DOM listener is handling the event, in case the Browser gets disposed in a", "-\t\t\t\t\t* callback.", "+\t\t\t\t\t* 0.  The workaround is to temporarily add an extra ref to the view and its", "+\t\t\t\t\t* ancestor while the DOM listener is handling the event, in case the", "+\t\t\t\t\t* Browser gets disposed in a callback.", "-\t\t\t\t\tint webViewHandle = this.webViewHandle;", "-\t\t\t\t\tOS.CFRetain (webViewHandle);", "+\t\t\t\t\tint handle = webViewHandle, root = OS.HIViewGetSuperview (webViewHandle);", "+\t\t\t\t\tOS.CFRetain (handle);", "+\t\t\t\t\tOS.CFRetain (root);", "-\t\t\t\t\tOS.CFRelease (webViewHandle);", "+\t\t\t\t\tOS.CFRelease (root);", "+\t\t\t\t\tOS.CFRelease (handle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c781cfdd432e6cc142f6bab1dcf79f2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "546263402943f988ce82854771902dc882c7230a", "commitAfterChange": "795a796036629c896fd69bdc55d17effba35914b", "methodNumberBeforeChange": 127, "methodNumberAfterChange": 127, "signatureBeforeChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "diff": ["+\t\t\tOS.SetFocus (handle);", "-\tboolean hittestSelected = false;", "+\tboolean hittestSelected = false, focused = false;", "+\t\tfocused = OS.GetFocus () == handle;", "-\t\t\tif (drawCount == 0) {", "+\t\t\tif (drawCount == 0 && focused) {", "-\t\t\tif (drawCount == 0) {", "+\t\t\tif (drawCount == 0 && focused) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f51bfa62b3a03a31424013e1222ea516", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleFrame.java", "commitBeforeChange": "68f600e3a4625bcc2d266b66d1a2ccdbec0cd172", "commitAfterChange": "43a07f9f96d2a7cbc2bb2eeed9994fad6a3bf26e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " static int getMsgProc(int code, int wParam, int lParam)", "signatureAfterChange": " static int getMsgProc(int code, int wParam, int lParam)", "diff": ["-\t\t\t\t\t\tOS.MoveMemory(lParam + 4, new int[] {OS.WM_NULL, 0, 0}, 12);", "+\t\t\t\t\t\tmsg.message = OS.WM_NULL;", "+\t\t\t\t\t\tmsg.wParam = 0;", "+\t\t\t\t\t\tmsg.lParam = 0;", "+\t\t\t\t\t\tOS.MoveMemory(lParam, msg, MSG.sizeof);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ffb9c4b02fd92027e96b71f89e18bdd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleFrame.java", "commitBeforeChange": "03e9e6eb9d4ad36ec8f95263229d6fbf1b98311a", "commitAfterChange": "52911904339b8301dfbfd66cbe5eb5d710bce246", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " static int getMsgProc(int code, int wParam, int lParam)", "signatureAfterChange": " static int getMsgProc(int code, int wParam, int lParam)", "diff": ["+\t\t\t\t\t\tframe.setData(CONSUME_KEY, null);", "+\t\t\t\t\t\tif (frame.getData(CONSUME_KEY) != null) consumed = false;", "+\t\t\t\t\t\tframe.setData(CONSUME_KEY, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb98cbda361a549a5e86da3a3b724e94", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TrayItem.java", "commitBeforeChange": "0aefae2205ecbebdf2518c8c6d05ab0032e5adad", "commitAfterChange": "43f69591d2861e44e31ebc47702400b2a09fcdc6", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  int gtk_status_icon_popup_menu (int widget, int button, int activate_time)", "signatureAfterChange": "  int gtk_status_icon_popup_menu (int widget, int button, int activate_time)", "diff": ["+\t/*", "+\t* GTK provides a MenuPositionFunc for GtkStatusIcon in order", "+\t* to set the popup-menu aligned to the tray.", "+\t*/", "+\tDisplay display = this.display;", "+\tdisplay.currentTrayItem = this;", "+\tif (!isDisposed ()) display.runPopups();", "+\tdisplay.currentTrayItem = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7db391f7c390d01d07fc3a0ee4c6b90", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/DragSource.java", "commitBeforeChange": "3ce358e1b9f688d0f92464d74a73597dda5fa631", "commitAfterChange": "ccb1621e86ec1e366f7345535e8b1aeebd65f08f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public DragSource(Control control, int style)", "signatureAfterChange": "\r public DragSource(Control control, int style)", "diff": ["-\t\r", "-\t\r", "+\tif (control.getData(DRAGSOURCEID) != null)\r", "+\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\r", "+\tcontrol.setData(DRAGSOURCEID, this);\r", "-\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8eaa90ab8541b7fbdabdf6ee8286873a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Sash.java", "commitBeforeChange": "6028801c9d16797d6dfc268c586496d1fc00987a", "commitAfterChange": "496ab79a8f803f9a98ae79d4cd7e2c65d16c76b5", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r public boolean setFocus ()", "signatureAfterChange": "\r public boolean setFocus ()", "diff": ["+\tDisplay display = getDisplay ();\r", "+\tOS.XtOverrideTranslations (handle, display.tabTranslations);\r", "+\tOS.XtOverrideTranslations (handle, display.arrowTranslations);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b572a806492e9ef5209120ab69ba4166", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "9deaa31de87a100016ebc81b039788786a22d0e6", "commitAfterChange": "0f4116d918f117a9f7bd2eb11944d61e20c3ad93", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " public boolean readAndDispatch ()", "signatureAfterChange": " public boolean readAndDispatch ()", "diff": ["-\t", "+", "-\t", "+", "-\t", "+", "-\t\tint event= evt[0];\t\t", "-\t\t//System.out.println(\"event: \" + MacUtil.toString(OS.GetEventClass(event)));", "+\t\tint event= evt[0];", "+\t\tif (OS.GetEventClass(event) == SWT_USER_EVENT && OS.GetEventKind(event) == 54322) {", "+\t\t\tOS.ReleaseEvent(event);", "+\t\t\tbreak;", "+\t\t}", "-\t\t", "+", "-\t\tbreak;\t// no event: run async", "-\t\t", "+\t\tbreak;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "548b2218fd6c5885f2f559a0d808bef3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "5fe1dac38bbaf436586a9cb7186584e15e9a84a3", "commitAfterChange": "aa4a6dbde79dfa01a598a4091801c6351b8adce7", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " void overrideTranslations ()", "signatureAfterChange": " void overrideTranslations ()", "diff": ["+\tOS.XtOverrideTranslations (handle, display.tabTranslations);", "+\tOS.XtOverrideTranslations (handle, display.arrowTranslations);", "-\tOS.XtOverrideTranslations (focusHandle, display.tabTranslations);", "-\tOS.XtOverrideTranslations (focusHandle, display.arrowTranslations);", "+\tif (handle != focusHandle) {", "+\t\tOS.XtOverrideTranslations (focusHandle, display.tabTranslations);", "+\t\tOS.XtOverrideTranslations (focusHandle, display.arrowTranslations);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae70dda9358ebbf34da0f8b7617aed38", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/SwtTestCase.java", "commitBeforeChange": "cb86533065e155575ec075cb5ddb6e1134454a7c", "commitAfterChange": "15dc1c6d05b651e018bdfc09968b13318012ece9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " static public void assertSame(String message, Object expected[], Object actual[])", "signatureAfterChange": " static public void assertSame(String message, Object expected[], Object actual[])", "diff": ["-\t\t\t\tif (!matched[j] && actual[i] == expected[j]) {", "-\t\t\t\t\tmatch = true;", "-\t\t\t\t\tmatched[j] = true;", "-\t\t\t\t\tbreak;", "+\t\t\t\tif (!matched[j]) {", "+\t\t\t\t\tif ((actual[i] == null && expected [j] == null) ||", "+\t\t\t\t\t    (actual[i] != null && actual[i].equals(expected[j]))) {", "+\t\t\t\t\t\tmatch = true;", "+\t\t\t\t\t\tmatched[j] = true;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2ccf6134613925e1b90fc4412ccd655", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/DropTarget.java", "commitBeforeChange": "afc0fa6e8d839b2b3830e8588568e0e0ce159e34", "commitAfterChange": "e1ed2e305b572c142219fc5140ca7b70afdb4469", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  void setDropNotAllowed()", "signatureAfterChange": "  void setDropNotAllowed()", "diff": ["-\t\tif (OS.PTR_SIZEOF == 4) OS.SetThemeCursor(OS.kThemeNotAllowedCursor);\t", "+\t\tDisplay display = getDisplay();", "+\t\tdisplay.setData (LOCK_CURSOR, Boolean.FALSE);", "+\t\tNSCursor.operationNotAllowedCursor().push();", "+\t\tdisplay.setData (LOCK_CURSOR, Boolean.TRUE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "085bbc403ad5f320688cb260e5059735", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "696c862efd07827addcd71a84ef08e1b9f23b2f6", "commitAfterChange": "bd7e3d919d38467894a1c4937ed9fd1ca824e58a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public Rectangle getBounds()", "signatureAfterChange": " public Rectangle getBounds()", "diff": ["+\t\tascent = Math.max(ascent, this.ascent);", "+\t\tdescent = Math.max(descent, this.descent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d98d117221820098223ea325594df9db", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "599eb2b0f46840fdbb20c23e8e446e36f12bc0bb", "commitAfterChange": "d54f89ff989006d607d53b534afb484bf72112b0", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  void createRenderers (int columnHandle, int modelIndex, boolean check, int columnStyle)", "signatureAfterChange": "  void createRenderers (int columnHandle, int modelIndex, boolean check, int columnStyle)", "diff": ["+\t\tOS.g_object_set(textRenderer, OS.xalign, 1f, 0);", "+\t\tOS.g_object_set(textRenderer, OS.xalign, 0.5f, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "173df84aaf1682805499332d83af8578", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "c53e2b63fa7a9c733204725abd2e8529aad3827d", "commitAfterChange": "91bf69e39d5953c1dbfa01dee3b55c5c62a41e78", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " public boolean readAndDispatch ()", "signatureAfterChange": " public boolean readAndDispatch ()", "diff": ["-\t\tint event= evt[0];\t\t", "+\t\tint event= evt[0];", "+\t\tif (OS.GetEventClass(event) == SWT_USER_EVENT && OS.GetEventKind(event) == 54322) {", "+\t\t\t//System.out.println(\"aha\");", "+\t\t\tOS.ReleaseEvent(event);", "+\t\t\tbreak;", "+\t\t}", "+\t\t// System.out.println(\"readAndDispatch: eventLoopTimedOutErr\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79ded131fcd98d85005130048b4d0c71", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "565a7d6b6a4d3aa36ae006f1fbdc6fe2d5ac5488", "commitAfterChange": "1ac2a0e6276c5bdfd749a6ad494484da39bfdaba", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": "  public boolean readAndDispatch ()", "signatureAfterChange": "  public boolean readAndDispatch ()", "diff": ["-\t\tOS.SendEventToEventTarget (outEvent [0], OS.GetEventDispatcherTarget ());", "-\t\tOS.ReleaseEvent (outEvent [0]);", "-\t\trunPopups ();", "-\t\trunDeferredEvents ();", "-\t\trunGrabs ();", "-\t\treturn true;", "+\t\tif (!(OS.GetEventKind (outEvent [0]) == 0 && OS.GetEventClass (outEvent [0]) == 0)) {", "+\t\t\tOS.SendEventToEventTarget (outEvent [0], OS.GetEventDispatcherTarget ());", "+\t\t\tOS.ReleaseEvent (outEvent [0]);", "+\t\t\trunPopups ();", "+\t\t\trunDeferredEvents ();", "+\t\t\trunGrabs ();", "+\t\t\treturn true;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4694fa28b5faea2ee0683f31957d645d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "a70d2e9009f5c248af33f97a37a3226fb19f6ab1", "commitAfterChange": "5257bad12760128975372b1dabb9dba0772958fa", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void createScrolledHandle (int parentHandle)", "signatureAfterChange": "  void createScrolledHandle (int parentHandle)", "diff": ["-\t//DOESN'T WORK RIGHT NOW", "+\tOS.GTK_WIDGET_UNSET_FLAGS (handle, OS.GTK_WIDGET_DOUBLE_BUFFERED);", "+\tif ((style & SWT.NO_BACKGROUND) != 0) {", "+\t\tsetBackgroundPixmap ();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17540e3db4d06aaa2f1445091c2a42f1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Scrollable.java", "commitBeforeChange": "ffbb56b81daec317f99a17ebb7b8340d88c292df", "commitAfterChange": "b9b827479b0f9aa549fa286336f1d6b89c014342", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  ScrollBar createScrollBar (int style)", "signatureAfterChange": "  ScrollBar createScrollBar (int style)", "diff": ["-\t\tbar.handle = OS.gtk_scrolled_window_get_hadjustment (scrolledHandle);", "+\t\tbar.handle = OS.GTK_SCROLLED_WINDOW_HSCROLLBAR (scrolledHandle);", "+\t\tbar.adjustmentHandle = OS.gtk_scrolled_window_get_hadjustment (scrolledHandle);", "-\t\tbar.handle = OS.gtk_scrolled_window_get_vadjustment (scrolledHandle);", "+\t\tbar.handle = OS.GTK_SCROLLED_WINDOW_VSCROLLBAR (scrolledHandle);", "+\t\tbar.adjustmentHandle = OS.gtk_scrolled_window_get_vadjustment (scrolledHandle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b4282ecfe3ce734284a7e8534745f2e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tracker.java", "commitBeforeChange": "c8dd5b3da6b7a6916253d606e26594090c7a78b4", "commitAfterChange": "a521fb70cf0f8b26019c8a033cb117435dbcf6ed", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public boolean open ()", "signatureAfterChange": " public boolean open ()", "diff": ["+\tDisplay display = this.display;", "+\t\t\tdisplay.runSkin ();", "+\t\t\tdisplay.runDeferredLayouts ();", "+\t\tdisplay.runAsyncMessages (false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3f85bfb31118f5be00a99fada8c3c0c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/ExpandBar.java", "commitBeforeChange": "b650ebdb03d117557d4cf3729e6a7941b244f318", "commitAfterChange": "3fc63c59d547ae3cc2deae1e2e3aff5112b57365", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["+\tscrolledHandle = OS.gcnew_ScrollViewer ();", "+\tif (scrolledHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\tOS.UIElementCollection_Add (children, handle);", "+\tOS.UIElementCollection_Add (children, scrolledHandle);", "+\tOS.ContentControl_Content (scrolledHandle, handle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20d4a075a37d2acb6c39de8e4454b9eb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "650deb026c998b07523a6424f11db72ac0bd1b3a", "commitAfterChange": "0e8780fecdad08e13acf40e49af437762eff1854", "methodNumberBeforeChange": 113, "methodNumberAfterChange": 113, "signatureBeforeChange": "  void initXPCOM (String mozillaPath, boolean isXULRunner)", "signatureAfterChange": "  void initXPCOM (String mozillaPath, boolean isXULRunner)", "diff": ["-//\t\t\trc = XPCOM.Call (functionPtr, localFile.getAddress (), localFile.getAddress (), LocationProvider.getAddress (), 0, 0);", "+\t\t\trc = XPCOM.Call (functionPtr, localFile.getAddress (), localFile.getAddress (), LocationProvider.getAddress (), 0, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f07d8d7bd1630bebbc2607b50cb7922", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "b92851e31eb0fea03e63af0d0ee4546afad615fc", "commitAfterChange": "759a42ab7da1979e2e421dce435898a7f9f9b198", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  void destroyWidget ()", "signatureAfterChange": "  void destroyWidget ()", "diff": ["+\tDisplay display = this.display;", "+\t}", "+\t//If another shell is not going to become active, clear the menu bar.", "+\tif (!display.isDisposed () && display.getShells ().length == 0) {", "+\t\tdisplay.setMenuBar (null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b094054d0062b59b028e7dab42406aa2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/photon/org/eclipse/swt/dnd/DropTarget.java", "commitBeforeChange": "12d74ca48253ad0c791ce8fe90a2bd730b88c8d8", "commitAfterChange": "464b48b79bb98793588d5a3579cfc5c8822ad33f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public DropTarget(Control control, int style)", "signatureAfterChange": " public DropTarget(Control control, int style)", "diff": ["-", "-\t", "-\t", "+\tif (control.getData(DROPTARGETID) != null)", "+\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);", "+\tcontrol.setData(DROPTARGETID, this);", "+", "-\tthis.addListener (SWT.Dispose, new Listener () {", "+\tthis.addListener(SWT.Dispose, new Listener() {", "-\t\t\t//onDispose();", "+\t\t\tonDispose();", "-\t", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50e30246b4499ed9af7b887fb54153e2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Group.java", "commitBeforeChange": "3809c47c9d0afcec54dac39b9a412752006f1294", "commitAfterChange": "a894d700e83e93f113fb38785f8167190e7aa937", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 5, "signatureBeforeChange": "  void createHandle(int index)", "signatureAfterChange": "  void createHandle(int index)", "diff": ["-", "-void createHandle(int index) {", "-\tstate |= HANDLE;", "-\tfixedHandle = OS.gtk_fixed_new ();", "-\tif (fixedHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\tOS.gtk_fixed_set_has_window (fixedHandle, true);", "-\thandle = OS.gtk_frame_new(null);", "-\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "-\tclientHandle = OS.gtk_fixed_new();", "-\tif (clientHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\tint parentHandle = parent.parentingHandle ();", "-\tOS.gtk_container_add (parentHandle, fixedHandle);", "-\tOS.gtk_container_add (fixedHandle, handle);", "-\tOS.gtk_container_add (handle, clientHandle);", "-\tOS.gtk_widget_show (handle);", "-\tOS.gtk_widget_show (clientHandle);", "-\tOS.gtk_widget_show (fixedHandle);", "-\t", "-\tif ((style & SWT.SHADOW_IN) != 0) {", "-\t\tOS.gtk_frame_set_shadow_type (handle, OS.GTK_SHADOW_IN);", "-\t}", "-\tif ((style & SWT.SHADOW_OUT) != 0) {", "-\t\tOS.gtk_frame_set_shadow_type (handle, OS.GTK_SHADOW_OUT);", "-\t}", "-\tif ((style & SWT.SHADOW_ETCHED_IN) != 0) {", "-\t\tOS.gtk_frame_set_shadow_type (handle, OS.GTK_SHADOW_ETCHED_IN);", "-\t}", "-\tif ((style & SWT.SHADOW_ETCHED_OUT) != 0) {", "-\t\tOS.gtk_frame_set_shadow_type (handle, OS.GTK_SHADOW_ETCHED_OUT);", "-\t}", "-}", "+void createHandle(int index) {", "+\tstate |= HANDLE;", "+\tfixedHandle = OS.gtk_fixed_new ();", "+\tif (fixedHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\tOS.gtk_fixed_set_has_window (fixedHandle, true);", "+\thandle = OS.gtk_frame_new (null);", "+\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "+\tlabelHandle = OS.gtk_label_new (null);", "+\tif (labelHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\tclientHandle = OS.gtk_fixed_new();", "+\tif (clientHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\tint parentHandle = parent.parentingHandle ();", "+\tOS.gtk_container_add (parentHandle, fixedHandle);", "+\tOS.gtk_container_add (fixedHandle, handle);", "+\tOS.gtk_container_add (handle, clientHandle);", "+\tOS.gtk_widget_show (handle);", "+\tOS.gtk_widget_show (clientHandle);", "+\tOS.gtk_widget_show (fixedHandle);", "+\t", "+\tOS.gtk_frame_set_label_widget (handle, labelHandle);", "+\t", "+\tif ((style & SWT.SHADOW_IN) != 0) {", "+\t\tOS.gtk_frame_set_shadow_type (handle, OS.GTK_SHADOW_IN);", "+\t}", "+\tif ((style & SWT.SHADOW_OUT) != 0) {", "+\t\tOS.gtk_frame_set_shadow_type (handle, OS.GTK_SHADOW_OUT);", "+\t}", "+\tif ((style & SWT.SHADOW_ETCHED_IN) != 0) {", "+\t\tOS.gtk_frame_set_shadow_type (handle, OS.GTK_SHADOW_ETCHED_IN);", "+\t}", "+\tif ((style & SWT.SHADOW_ETCHED_OUT) != 0) {", "+\t\tOS.gtk_frame_set_shadow_type (handle, OS.GTK_SHADOW_ETCHED_OUT);", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fc7c3daabe8a3af61a671e29ed2ec08", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "d394748baa45afbd580331c831b85672b97b114e", "commitAfterChange": "5f321000d94eb71bd024c1f4d113ca6eeea25bd0", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": "  void setBackgroundTransparent (boolean transparent)", "signatureAfterChange": "  void setBackgroundTransparent (boolean transparent)", "diff": ["-\t\t\t* Feature in Windows.  When the background color is changed,", "-\t\t\t* the table does not redraw until the next WM_PAINT.  The fix", "-\t\t\t* is to force a redraw.", "+\t\t\t* Bug in Windows.  When the background color is changed,", "+\t\t\t* the table does not redraw until the next WM_PAINT.  The", "+\t\t\t* fix is to force a redraw.", "+\t\t\t\t\t/* ", "+\t\t\t\t\t* Bug in Windows.  When LVM_SETSELECTEDCOLUMN is set, Windows", "+\t\t\t\t\t* does not redraw either the new or the previous selected column.", "+\t\t\t\t\t* The fix is to force a redraw.", "+\t\t\t\t\t*/", "+\t\t\t\t\tOS.InvalidateRect (handle, null, true);", "-\t\t\t\t\tOS.SendMessage (handle, OS.LVM_SETSELECTEDCOLUMN, indexOf (sortColumn), 0);", "+\t\t\t\t\tint column = indexOf (sortColumn);", "+\t\t\t\t\tif (column != -1) {", "+\t\t\t\t\t\tOS.SendMessage (handle, OS.LVM_SETSELECTEDCOLUMN, column, 0);", "+\t\t\t\t\t\t/* ", "+\t\t\t\t\t\t* Bug in Windows.  When LVM_SETSELECTEDCOLUMN is set, Windows", "+\t\t\t\t\t\t* does not redraw either the new or the previous selected column.", "+\t\t\t\t\t\t* The fix is to force a redraw.", "+\t\t\t\t\t\t*/", "+\t\t\t\t\t\tOS.InvalidateRect (handle, null, true);", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23e7f4eca910da14028bdb1e71a20a6d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet133.java", "commitBeforeChange": "e70da519d7193c47a8b78dacf87fcefe43215951", "commitAfterChange": "11f3358c48d99e68259f99293e7e69f00d4e1bea", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tvoid menuPrint()", "signatureAfterChange": "  \tvoid menuPrint()", "diff": ["+\t\t/* Get the font & foreground & background data. */", "+\t\tprinterFontData = text.getFont().getFontData();", "+\t\tprinterForeground = text.getForeground().getRGB();", "+\t\tprinterBackground = text.getBackground().getRGB();", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2b34b1bb94a1d1a4702c71a873c0681", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/TableTree.java", "commitBeforeChange": "81ca82d45f9f24ea5ec38d7c3947d4e58ac9156f", "commitAfterChange": "1bdda2f66952666a5d534bd8c32c3f0cacf2f0b1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r void expandItem (TableTreeItem item)", "signatureAfterChange": "\r void expandItem (TableTreeItem item)", "diff": ["-\tif (item == null || item.getExpanded()) return;\r", "+\tif (item == null) return;\r", "-\titem.setExpanded(true);\r", "-\tEvent event = new Event();\r", "-\tevent.item = item;\r", "-\tnotifyListeners(SWT.Expand, event);\r", "+\tif (!item.getVisible()) item.setVisible(true);\r", "+\tif ( !item.expanded && item.items.length > 0) {\r", "+\t\titem.setExpanded(true);\r", "+\t\tEvent event = new Event();\r", "+\t\tevent.item = item;\r", "+\t\tnotifyListeners(SWT.Expand, event);\r", "+\t}\r"]}], "num": 40827}