{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "091f4221cf0b419caeec6c886f7df625", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8cba132c04c8438467ec5bb62203dfa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "bae8b23adf7bc3b1466643065f2bbf62746953bd", "commitAfterChange": "807928601cf0d0a466c6ebcb5402d42a14e504c3", "methodNumberBeforeChange": 159, "methodNumberAfterChange": 159, "signatureBeforeChange": " public void update ()", "signatureAfterChange": " public void update ()", "diff": ["+\tint gc = OS.gdk_gc_new (window);", "+\tOS.gdk_gc_set_exposures (gc, true);", "+\tOS.gdk_draw_drawable (window, gc, window, 0, 0, 0, 0, 0, 0);", "+\tOS.g_object_unref (gc);", "+\tint event = 0;", "+\twhile ((event = OS.gdk_event_get_graphics_expose (window)) != 0) {", "+\t\tOS.gtk_main_do_event (event);", "+\t\tOS.gdk_event_free (event);\t", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c78f4bf52a39a62c343183f2601dd7c4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/gtk/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "3b7e04304effe884e33175739d7c3054dcac5e13", "commitAfterChange": "8d895e4bdf05b8234ec4199b4f2b83cc1cbe3aaa", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "  int webkit_download_requested (int web_view, int download)", "signatureAfterChange": "  int webkit_download_requested (int web_view, int download)", "diff": ["-\tString nameString = new String (Converter.mbcsToWcs (null, bytes));", "-\tFileDialog dialog = new FileDialog (browser.getShell (), SWT.OPEN);", "-\tdialog.setFileName (nameString);", "-\tString title = Compatibility.getMessage (\"SWT_FileDownload\"); //$NON-NLS-1$", "-\tdialog.setText (title);", "-\tString path = dialog.open ();", "+\tfinal String nameString = new String (Converter.mbcsToWcs (null, bytes));", "-\tif (path != null) {", "-\t\tpath = URI_FILEROOT + path;", "-\t\tbyte[] uriBytes = Converter.wcsToMbcs (null, path, true);", "-\t\tWebKitGTK.webkit_download_set_destination_uri (download, uriBytes);", "-\t\topenDownloadWindow (download);", "-\t} else {", "-\t\tWebKitGTK.webkit_download_cancel (download);", "-\t}", "+\tfinal int /*long*/ request = WebKitGTK.webkit_download_get_network_request (download);", "+\tOS.g_object_ref (request);", "+", "+\t/*", "+\t* As of WebKitGTK 1.8.x attempting to show a FileDialog in this callback causes", "+\t* a hang.  The workaround is to open it asynchronously with a new download.", "+\t*/", "+\tbrowser.getDisplay ().asyncExec (new Runnable () {", "+\t\tpublic void run () {", "+\t\t\tif (!browser.isDisposed ()) {", "+\t\t\t\tFileDialog dialog = new FileDialog (browser.getShell (), SWT.OPEN);", "+\t\t\t\tdialog.setFileName (nameString);", "+\t\t\t\tString title = Compatibility.getMessage (\"SWT_FileDownload\"); //$NON-NLS-1$", "+\t\t\t\tdialog.setText (title);", "+\t\t\t\tString path = dialog.open ();", "+\t\t\t\tif (path != null) {", "+\t\t\t\t\tpath = URI_FILEROOT + path;", "+\t\t\t\t\tint /*long*/ newDownload = WebKitGTK.webkit_download_new (request);", "+\t\t\t\t\tbyte[] uriBytes = Converter.wcsToMbcs (null, path, true);", "+\t\t\t\t\tWebKitGTK.webkit_download_set_destination_uri (newDownload, uriBytes);", "+\t\t\t\t\topenDownloadWindow (newDownload);", "+\t\t\t\t\tWebKitGTK.webkit_download_start (newDownload);", "+\t\t\t\t\tOS.g_object_unref (newDownload);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tOS.g_object_unref (request);", "+\t\t}", "+\t});", "+"]}], "num": 6982}