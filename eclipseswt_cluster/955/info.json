{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "af45303c934c0b57dd9d3ec377aaf48b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b15c15245783dc5db4d03d4df1773e9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "fbd9be2798f33aa26441c609a4a256a0af78a86f", "commitAfterChange": "db72f1c3d4111f7ce57691d74f90de5362265d56", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["+\t/*", "+\t* Bug in GTK.  When the parent is realized before the GtkTextView", "+\t* widget is created, the GTK_TEXT_WINDOW_TEXT window does not have", "+\t* its event mask properly set to match gtk_widget_add_events().", "+\t* The fix is to detect this and set the window event mask if", "+\t* necessary.    ", "+\t*/", "+\tif ((style & SWT.MULTI) != 0) {", "+\t\tint window = OS.gtk_text_view_get_window (handle, OS.GTK_TEXT_WINDOW_TEXT);", "+\t\tif (window != 0) {", "+\t\t\tint mask = OS.GDK_ENTER_NOTIFY_MASK | OS.GDK_LEAVE_NOTIFY_MASK;", "+\t\t\tOS.gdk_window_set_events (window, OS.gdk_window_get_events (window) | mask);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22db28448599bf97a4ca9962b0ea8331", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "5f03e7ea5c9fc385b4cee35c0ee6b3f49463ff24", "commitAfterChange": "dc1b8d5ff8d7ee8b7e3bfa00250ffc23a279557f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \r void createHandle ()", "signatureAfterChange": "\r \r void createHandle ()", "diff": ["+\t\r", "+\t/*\r", "+\t* Feature in Windows.  Windows does not explicitly set the orientation of\r", "+\t* the header.  Instead, the orientation is inherited when WS_EX_LAYOUTRTL\r", "+\t* is specified for the table.  This means that when both WS_EX_LAYOUTRTL\r", "+\t* and WS_EX_NOINHERITLAYOUT are specified for the table, the header will\r", "+\t* not be oriented correctly.  The fix is to explicitly set the orientation\r", "+\t* for the header.\r", "+\t*/\r", "+\tif ((style & SWT.RIGHT_TO_LEFT) != 0) {\r", "+\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);\r", "+\t\tint extStyle = OS.GetWindowLong (hwndHeader, OS.GWL_EXSTYLE);\r", "+\t\tOS.SetWindowLong (hwndHeader, OS.GWL_EXSTYLE, extStyle | OS.WS_EX_LAYOUTRTL);\r", "+\t}\r"]}], "num": 955}