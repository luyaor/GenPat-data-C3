{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bd5c490f302c8bce174b2db0ee21596e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fec41fc8be083740877b23490f6d3ec0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "be7a6b56ec36f2937282f99ce8f6d3a09d752bb5", "commitAfterChange": "388089e4bec9dc7b9e91ccd2ec44faabbba9290c", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "  void fillBackground (int control, int context, Rectangle bounds)", "signatureAfterChange": "  void fillBackground (int control, int context, Rectangle bounds)", "diff": ["-\tif (OS.HIVIEW) {", "-\t\tOS.CGContextSaveGState (context);", "-\t\tCGRect rect = new CGRect ();", "-\t\tif (bounds != null) {", "-\t\t\trect.x = bounds.x;", "-\t\t\trect.y = bounds.y;", "-\t\t\trect.width = bounds.width;", "-\t\t\trect.height = bounds.height;", "-\t\t} else {", "-\t\t\tOS.HIViewGetBounds (control, rect);", "-\t\t}", "-\t\tControl widget = findBackgroundControl ();", "-\t\tif (widget != null && widget.backgroundImage != null) {", "-\t\t\tCGPoint pt = new CGPoint();", "-\t\t\tOS.HIViewConvertPoint (pt, control, widget.handle);", "-\t\t\tOS.CGContextTranslateCTM (context, -pt.x, -pt.y);", "-\t\t\tPattern pattern = new Pattern (display, widget.backgroundImage);", "-\t\t\tGCData data = new GCData ();", "-\t\t\tdata.device = display;", "-\t\t\tdata.background = widget.getBackgroundColor ().handle;", "-\t\t\tGC gc = GC.carbon_new (context, data);", "-\t\t\tgc.setBackgroundPattern (pattern);", "-\t\t\tgc.fillRectangle ((int) (rect.x + pt.x), (int) (rect.y + pt.y), (int) rect.width, (int) rect.height);", "-\t\t\tgc.dispose ();", "-\t\t\tpattern.dispose();", "-\t\t} else if (widget != null && widget.background != null) {", "-\t\t\tint colorspace = OS.CGColorSpaceCreateDeviceRGB ();", "-\t\t\tOS.CGContextSetFillColorSpace (context, colorspace);", "-\t\t\tOS.CGContextSetFillColor (context, widget.background);", "-\t\t\tOS.CGColorSpaceRelease (colorspace);", "+\tOS.CGContextSaveGState (context);", "+\tCGRect rect = new CGRect ();", "+\tif (bounds != null) {", "+\t\trect.x = bounds.x;", "+\t\trect.y = bounds.y;", "+\t\trect.width = bounds.width;", "+\t\trect.height = bounds.height;", "+\t} else {", "+\t\tOS.HIViewGetBounds (control, rect);", "+\t}", "+\tControl widget = findBackgroundControl ();", "+\tif (widget != null && widget.backgroundImage != null) {", "+\t\tCGPoint pt = new CGPoint();", "+\t\tOS.HIViewConvertPoint (pt, control, widget.handle);", "+\t\tOS.CGContextTranslateCTM (context, -pt.x, -pt.y);", "+\t\tPattern pattern = new Pattern (display, widget.backgroundImage);", "+\t\tGCData data = new GCData ();", "+\t\tdata.device = display;", "+\t\tdata.background = widget.getBackgroundColor ().handle;", "+\t\tGC gc = GC.carbon_new (context, data);", "+\t\tgc.setBackgroundPattern (pattern);", "+\t\tgc.fillRectangle ((int) (rect.x + pt.x), (int) (rect.y + pt.y), (int) rect.width, (int) rect.height);", "+\t\tgc.dispose ();", "+\t\tpattern.dispose();", "+\t} else if (widget != null && widget.background != null) {", "+\t\tint colorspace = OS.CGColorSpaceCreateDeviceRGB ();", "+\t\tOS.CGContextSetFillColorSpace (context, colorspace);", "+\t\tOS.CGContextSetFillColor (context, widget.background);", "+\t\tOS.CGColorSpaceRelease (colorspace);", "+\t\tOS.CGContextSetAlpha (context, getThemeAlpha ());", "+\t\tOS.CGContextFillRect (context, rect);", "+\t} else {", "+\t\tif (OS.VERSION >= 0x1040) {", "+\t\t\tOS.HIThemeSetFill (OS.kThemeBrushDialogBackgroundActive, 0, context, OS.kHIThemeOrientationNormal);", "-\t\t\tif (OS.VERSION >= 0x1040) {", "-\t\t\t\tOS.HIThemeSetFill (OS.kThemeBrushDialogBackgroundActive, 0, context, OS.kHIThemeOrientationNormal);", "-\t\t\t\tOS.CGContextSetAlpha (context, getThemeAlpha ());", "-\t\t\t\tOS.CGContextFillRect (context, rect);", "-\t\t\t} else {", "-\t\t\t\tRect rect1 = new Rect ();", "-\t\t\t\trect1.left = (short) rect.x;", "-\t\t\t\trect1.top = (short) rect.y;", "-\t\t\t\trect1.right = (short) (rect.x + rect.width);", "-\t\t\t\trect1.bottom = (short) (rect.y + rect.height);", "-\t\t\t\tOS.SetThemeBackground ((short) OS.kThemeBrushDialogBackgroundActive, (short) 0, true);", "-\t\t\t\tOS.EraseRect (rect1);", "-\t\t\t}", "-\t\t}", "-\t\tOS.CGContextRestoreGState (context);", "-\t} else {", "-\t\tRect rect = new Rect ();", "-\t\tOS.GetControlBounds (control, rect);", "-\t\tif (OS.HIVIEW) {", "-\t\t\trect.right += rect.left;", "-\t\t\trect.bottom += rect.top;", "-\t\t\trect.left = rect.top = 0;", "-\t\t}", "-\t\tif (background != null) {", "-\t\t\tOS.RGBForeColor (toRGBColor (background));", "-\t\t\tOS.PaintRect (rect);", "-\t\t} else {", "-\t\t\tOS.SetThemeBackground((short) OS.kThemeBrushDialogBackgroundActive, (short) 0, true);", "-\t\t\tOS.EraseRect (rect);", "+\t\t\tRect rect1 = new Rect ();", "+\t\t\trect1.left = (short) rect.x;", "+\t\t\trect1.top = (short) rect.y;", "+\t\t\trect1.right = (short) (rect.x + rect.width);", "+\t\t\trect1.bottom = (short) (rect.y + rect.height);", "+\t\t\tOS.SetThemeBackground ((short) OS.kThemeBrushDialogBackgroundActive, (short) 0, true);", "+\t\t\tOS.EraseRect (rect1);", "+\tOS.CGContextRestoreGState (context);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "818ec61d392f4770d27bfa28445a7e63", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/cocoa/org/eclipse/swt/printing/Printer.java", "commitBeforeChange": "0a50d92817a0ec852579e15a962a04552ba58310", "commitAfterChange": "5f8c70f9663ba812b07371317d526ce083d22a28", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 21, "signatureBeforeChange": " void setupNewPage()", "signatureAfterChange": " void setupNewPage()", "diff": ["-\tif (!inPage) {", "-\t\tinPage= true;", "-\t\tOS.PMSessionBeginPageNoDialog(printSession, pageFormat, null);", "-\t\tint[] buffer = new int[1];", "-\t\tOS.PMSessionGetGraphicsContext(printSession, 0, buffer);", "-\t\tif (context == 0) {", "-\t\t\tcontext = buffer[0];", "-\t\t} else {", "-\t\t\tif (context != buffer[0]) SWT.error(SWT.ERROR_UNSPECIFIED);", "-\t\t}", "-\t\tPMRect paperRect= new PMRect();", "-\t\tOS.PMGetAdjustedPaperRect(pageFormat, paperRect);", "-\t\tOS.CGContextScaleCTM(context, 1, -1);", "-\t\tOS.CGContextTranslateCTM(context, 0, -(float)(paperRect.bottom-paperRect.top));", "-\t\tOS.CGContextSetStrokeColorSpace(context, colorspace);", "-\t\tOS.CGContextSetFillColorSpace(context, colorspace);", "-\t}", "+//\tif (!inPage) {", "+//\t\tinPage= true;", "+//\t\tOS.PMSessionBeginPageNoDialog(printSession, pageFormat, null);", "+//\t\tint[] buffer = new int[1];", "+//\t\tOS.PMSessionGetGraphicsContext(printSession, 0, buffer);", "+//\t\tif (context == 0) {", "+//\t\t\tcontext = buffer[0];", "+//\t\t} else {", "+//\t\t\tif (context != buffer[0]) SWT.error(SWT.ERROR_UNSPECIFIED);", "+//\t\t}", "+//\t\tPMRect paperRect= new PMRect();", "+//\t\tOS.PMGetAdjustedPaperRect(pageFormat, paperRect);", "+//\t\tOS.CGContextScaleCTM(context, 1, -1);", "+//\t\tOS.CGContextTranslateCTM(context, 0, -(float)(paperRect.bottom-paperRect.top));", "+//\t\tOS.CGContextSetStrokeColorSpace(context, colorspace);", "+//\t\tOS.CGContextSetFillColorSpace(context, colorspace);", "+//\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad26139e91f93b45260afe80c3beeaa5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "be7a6b56ec36f2937282f99ce8f6d3a09d752bb5", "commitAfterChange": "388089e4bec9dc7b9e91ccd2ec44faabbba9290c", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 48, "signatureBeforeChange": "  Rect inset ()", "signatureAfterChange": "  Rect inset ()", "diff": ["-\tif (OS.HIVIEW) {", "-\t\tif ((style & SWT.SINGLE) != 0 && (style & SWT.BORDER) == 0) {", "-\t\t\tRect rect = new Rect ();", "-\t\t\trect.left = rect.top = rect.right = rect.bottom = 1;", "-\t\t\treturn rect; ", "-\t\t}", "-\t\treturn new Rect ();", "+\tif ((style & SWT.SINGLE) != 0 && (style & SWT.BORDER) == 0) {", "+\t\tRect rect = new Rect ();", "+\t\trect.left = rect.top = rect.right = rect.bottom = 1;", "+\t\treturn rect; ", "-\tRect rect = new Rect ();", "-\tint [] outMetric = new int [1];", "-\tif (drawFocusRing ()) {", "-\t\tOS.GetThemeMetric (OS.kThemeMetricFocusRectOutset, outMetric);", "-\t\trect.left += outMetric [0];", "-\t\trect.top += outMetric [0];", "-\t\trect.right += outMetric [0];", "-\t\trect.bottom += outMetric [0];", "-\t}", "-\tif (hasBorder ()) {", "-\t\tOS.GetThemeMetric (OS.kThemeMetricEditTextFrameOutset, outMetric);", "-\t\trect.left += outMetric [0];", "-\t\trect.top += outMetric [0];", "-\t\trect.right += outMetric [0];", "-\t\trect.bottom += outMetric [0];", "-\t}", "-\treturn rect;\t", "+\treturn new Rect ();"]}], "num": 45260}