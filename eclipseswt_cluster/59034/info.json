{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "423a1e03b1b1cdbba5f50254f8861645", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5c2b958af2237c9e3da86d93b6b8454", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/fileviewer/FileViewer.java", "commitBeforeChange": "fb8d980b4cd59472caba9675ffd0e65eaafdf1d2", "commitAfterChange": "136099e2fa4d4fbe2ef98dc28593ab1cbb6126ff", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "\r \tboolean copyFileStructure(File oldFile, File newFile)", "signatureAfterChange": "\r \tboolean copyFileStructure(File oldFile, File newFile)", "diff": ["-\t\tif (oldFile == null || newFile == null) return false;\t\t\r", "-\t\tif (! oldFile.exists());\r", "-\t\tif (newFile.exists());\r", "+\t\tif (oldFile == null || newFile == null) return false;\r", "+\t\t\r", "+\t\t// ensure that newFile is not a child of oldFile\r", "+\t\tFile searchFile = newFile;\r", "+\t\tdo {\r", "+\t\t\tif (oldFile.equals(searchFile)) return false;\r", "+\t\t\tsearchFile = searchFile.getParentFile();\r", "+\t\t} while (searchFile != null);\r", "-\t\t\t\tSystem.out.println(getResourceString(\"simulate.IgnoringUnknownResource.text\",\r", "+\t\t\t\tSystem.out.println(getResourceString(\"simulate.UnknownResource.text\",\r", "-\t\t\treturn true; // ignore it\r", "+\t\t\treturn false; // error we don't know how to copy this\r", "+\t\t}\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6f23df8bcac7172cb6e37d524a77aca", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/fileviewer/FileViewer.java", "commitBeforeChange": "fb8d980b4cd59472caba9675ffd0e65eaafdf1d2", "commitAfterChange": "136099e2fa4d4fbe2ef98dc28593ab1cbb6126ff", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "\r \tboolean copyFileStructure(File oldFile, File newFile)", "signatureAfterChange": "\r \tboolean copyFileStructure(File oldFile, File newFile)", "diff": ["-\t\tif (oldFile == null || newFile == null) return false;\t\t\r", "-\t\tif (! oldFile.exists());\r", "-\t\tif (newFile.exists());\r", "+\t\tif (oldFile == null || newFile == null) return false;\r", "+\t\t\r", "+\t\t// ensure that newFile is not a child of oldFile\r", "+\t\tFile searchFile = newFile;\r", "+\t\tdo {\r", "+\t\t\tif (oldFile.equals(searchFile)) return false;\r", "+\t\t\tsearchFile = searchFile.getParentFile();\r", "+\t\t} while (searchFile != null);\r", "-\t\t\t\tSystem.out.println(getResourceString(\"simulate.IgnoringUnknownResource.text\",\r", "+\t\t\t\tSystem.out.println(getResourceString(\"simulate.UnknownResource.text\",\r", "-\t\t\treturn true; // ignore it\r", "+\t\t\treturn false; // error we don't know how to copy this\r", "+\t\t}\r", "+\t}\r"]}], "num": 59034}