{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b6ed2a6be814a4d030cf9f34d61b207a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cfc2503f306197ab26a074ad1cd2733", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT AWT/win32/org/eclipse/swt/internal/awt/win32/SWT_AWT.java", "commitBeforeChange": "e462b70d263f76c9b6ba40360e7d028d7e01c03a", "commitAfterChange": "d96d204ccd22f037a3eaba4d3d526abdfed15d53", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \r public static Panel new_Panel (final Composite parent)", "signatureAfterChange": "\r \r public static Panel new_Panel (final Composite parent)", "diff": ["-\tfinal WEmbeddedFrame frame = new WEmbeddedFrame (handle);\r", "+\t/*\r", "+\t * Some JREs have implemented the WEmbeddedFrame constructor to take an integer\r", "+\t * value for the HWND parameter and other JREs take a long for the HWND parameter.\r", "+\t * To handle this binary incompatability, we use reflection to perform the equivalent of\r", "+\t * the following line of code:\r", "+\t * \r", "+\t * final WEmbeddedFrame frame = new WEmbeddedFrame(handle);\r", "+\t */\r", "+\tConstructor constructor = null;\r", "+\ttry {\r", "+\t\tconstructor = WEmbeddedFrame.class.getConstructor (new Class [] {int.class});\r", "+\t} catch (Exception e1) {\r", "+\t\ttry {\r", "+\t\t\tconstructor = WEmbeddedFrame.class.getConstructor (new Class [] {long.class});\r", "+\t\t} catch (Exception e2) {\r", "+\t\t\tSWT.error (SWT.ERROR_NOT_IMPLEMENTED, e2);\r", "+\t\t}\r", "+\t}\r", "+\t WEmbeddedFrame value = null;\r", "+\ttry {\r", "+\t\tvalue = (WEmbeddedFrame) constructor.newInstance (new Object [] {new Integer (handle)});\r", "+\t} catch (Exception e) {\r", "+\t\tSWT.error (SWT.ERROR_NOT_IMPLEMENTED, e);\r", "+\t}\r", "+\tfinal WEmbeddedFrame frame = value;\r", "+\t\r", "+\tparent.getShell ().addListener (SWT.Move, new Listener () {\r", "+\t\tpublic void handleEvent (Event e) {\r", "+\t\t\tfinal Rectangle rect = parent.getClientArea ();\r", "+\t\t\tframe.getToolkit ().getSystemEventQueue ().invokeLater(new Runnable () {\r", "+\t\t\t\tpublic void run () {\r", "+\t\t\t\t\tframe.dispatchEvent (new ComponentEvent (frame, ComponentEvent.COMPONENT_MOVED));\r", "+\t\t\t\t}\r", "+\t\t\t});\r", "+\t\t}\r", "+\t});\r", "-\t\tpublic void handleEvent (Event e) {\r", "+\t\tpublic void handleEvent (Event event) {\r", "+\t\t\tparent.setVisible(false);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd7a4776ebf406961ee021d5f6d6ca40", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT AWT/motif/org/eclipse/swt/internal/awt/SWT_AWT.java", "commitBeforeChange": "d97d0d107ca082c524d75941f35387a2d09cd378", "commitAfterChange": "269136c6e1817baa3820883adccd7cdf58ac909f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public static Frame new_Frame (final Composite parent)", "signatureAfterChange": "  public static Frame new_Frame (final Composite parent)", "diff": ["+", "-\tSWT.error (SWT.ERROR_NOT_IMPLEMENTED);", "-\treturn null;", "+\tint handle = parent.embeddedHandle;", "+\t/*", "+\t * Some JREs have implemented the embedded frame constructor to take an integer", "+\t * and other JREs take a long.  To handle this binary incompatability, use", "+\t * reflection to create the embedded frame.", "+\t */", "+\tClass clazz = null;", "+\ttry {", "+\t\tclazz = Class.forName(\"sun.awt.X11.XEmbeddedFrame\");", "+\t} catch (Throwable e) {", "+\t\tSWT.error (SWT.ERROR_NOT_IMPLEMENTED, e);\t\t", "+\t}", "+\tConstructor constructor = null;", "+\ttry {", "+\t\tconstructor = clazz.getConstructor (new Class [] {int.class});", "+\t} catch (Throwable e1) {", "+\t\ttry {", "+\t\t\tconstructor = clazz.getConstructor (new Class [] {long.class});", "+\t\t} catch (Throwable e2) {", "+\t\t\tSWT.error (SWT.ERROR_NOT_IMPLEMENTED, e2);", "+\t\t}", "+\t}", "+\tObject value = null;", "+\ttry {", "+\t\tvalue = constructor.newInstance (new Object [] {new Integer (handle)});", "+\t} catch (Throwable e) {", "+\t\tSWT.error (SWT.ERROR_NOT_IMPLEMENTED, e);", "+\t}", "+\tfinal Frame frame = (Frame) value;\t", "+\tparent.getShell ().addListener (SWT.Move, new Listener () {", "+\t\tpublic void handleEvent (Event e) {", "+\t\t\tEventQueue.invokeLater(new Runnable () {", "+\t\t\t\tpublic void run () {", "+\t\t\t\t\tframe.dispatchEvent (new ComponentEvent (frame, ComponentEvent.COMPONENT_MOVED));", "+\t\t\t\t}", "+\t\t\t});", "+\t\t}", "+\t});", "+\tparent.addListener (SWT.Dispose, new Listener () {", "+\t\tpublic void handleEvent (Event event) {", "+\t\t\tparent.setVisible(false);", "+\t\t\tframe.dispose ();", "+\t\t}", "+\t});", "+\treturn frame;"]}], "num": 31892}