{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1acd30f09dac5803e398d3451712af8d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4fc0dba83e57134adc35d1ebb6c8551", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "d4eb14ad4f7b1074d4935c2b9211f94b2750616d", "commitAfterChange": "7d562ae8941ad5655a314eac8dd19e3b2aaef50c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \r void createItem (MenuItem item, int index)", "signatureAfterChange": "\r \r void createItem (MenuItem item, int index)", "diff": ["-\tint count = OS.GetMenuItemCount (handle);\r", "+\tint count = GetMenuItemCount (handle);\r", "-\t/*\r", "-\t* Bug in Windows.  For some reason, when InsertMenuItem ()\r", "-\t* is used to insert an item without text, it is not possible\r", "-\t* to use SetMenuItemInfo () to set the text at a later time.\r", "-\t* The fix is to insert the item with an empty string.\r", "-\t*/\r", "-\tint hHeap = OS.GetProcessHeap ();\r", "-\tint pszText = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, 1);\r", "-\tMENUITEMINFO info = new MENUITEMINFO ();\r", "-\tinfo.cbSize = MENUITEMINFO.sizeof;\r", "-\tinfo.fMask = OS.MIIM_ID | OS.MIIM_TYPE;\r", "-\tinfo.wID = item.id;\r", "-\tinfo.fType = item.widgetStyle ();\r", "-\tinfo.dwTypeData = pszText;\r", "-\tboolean success = OS.InsertMenuItem (handle, index, true, info);\r", "-\tif (pszText != 0) OS.HeapFree (hHeap, 0, pszText);\r", "+\tboolean success = false;\r", "+\tif (OS.IsWinCE) {\r", "+\t\tint flags = OS.MF_BYPOSITION;\r", "+\t\tif ((style & SWT.SEPARATOR) != 0) flags |= OS.MF_SEPARATOR;\r", "+\t\tsuccess = OS.InsertMenu (handle, index, flags, item.id, null); \r", "+\t} else {\r", "+\t\t/*\r", "+\t\t* Bug in Windows.  For some reason, when InsertMenuItem ()\r", "+\t\t* is used to insert an item without text, it is not possible\r", "+\t\t* to use SetMenuItemInfo () to set the text at a later time.\r", "+\t\t* The fix is to insert the item with an empty string.\r", "+\t\t*/\r", "+\t\tint hHeap = OS.GetProcessHeap ();\r", "+\t\tint pszText = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, TCHAR.sizeof);\r", "+\t\tMENUITEMINFO info = new MENUITEMINFO ();\r", "+\t\tinfo.cbSize = MENUITEMINFO.sizeof;\r", "+\t\tinfo.fMask = OS.MIIM_ID | OS.MIIM_TYPE;\r", "+\t\tinfo.wID = item.id;\r", "+\t\tinfo.fType = item.widgetStyle ();\r", "+\t\tinfo.dwTypeData = pszText;\r", "+\t\tsuccess = OS.InsertMenuItem (handle, index, true, info);\r", "+\t\tif (pszText != 0) OS.HeapFree (hHeap, 0, pszText);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f46384ad02a1b578e9f2a1e17dbd60b3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "1f910fb2129bc04b508cae95ff4a02f4aa339c24", "commitAfterChange": "b73210b3ae347e174d94d1d65890dbcff0242ce4", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "  @Override long gtk_realize (long widget)", "signatureAfterChange": "  @Override long gtk_realize (long widget)", "diff": ["+\t\tint functions = 0;", "-\t\t\tif ((style & SWT.MIN) != 0) decorations |= OS.GDK_DECOR_MINIMIZE;", "-\t\t\tif ((style & SWT.MAX) != 0) decorations |= OS.GDK_DECOR_MAXIMIZE;", "-\t\t\tif ((style & SWT.RESIZE) != 0) decorations |= OS.GDK_DECOR_RESIZEH;", "+\t\t\t\tif ((style & SWT.MIN) != 0) {", "+\t\t\t\t\tdecorations |= OS.GDK_DECOR_MINIMIZE;", "+\t\t\t\t\tfunctions |= OS.GDK_FUNC_MINIMIZE;", "+\t\t\t\t}", "+\t\t\t\tif ((style & SWT.MAX) != 0) {", "+\t\t\t\t\tdecorations |= OS.GDK_DECOR_MAXIMIZE;", "+\t\t\t\t\tfunctions |= OS.GDK_FUNC_MAXIMIZE;", "+\t\t\t\t}", "+\t\t\t\tif ((style & SWT.RESIZE) != 0) {", "+\t\t\t\t\tdecorations |= OS.GDK_DECOR_RESIZEH;", "+\t\t\t\t\tfunctions |= OS.GDK_FUNC_RESIZE;", "+\t\t\t\t}", "+\t\t\tif ((style & SWT.CLOSE) != 0) functions |= OS.GDK_FUNC_CLOSE;", "+\t\t\tfunctions |=  OS.GDK_FUNC_MOVE;", "+", "+\t\t/*", "+\t\t* For systems running Metacity, this call forces the style hints to", "+\t\t* be displayed in a window's titlebar. Otherwise, the decorations", "+\t\t* set by the function gdk_window_set_decorations (window,", "+\t\t* decorations) are ignored by the window manager.", "+\t\t*/", "+\t\tOS.gdk_window_set_functions(window, functions);"]}], "num": 23980}