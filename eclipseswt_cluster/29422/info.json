{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "61eece89a9c08afe999c7fe11b44f4b7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cd618f35b1cb0c2006ef36d94fd53fe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "3a479c7b5f334c338a13bd42ca4f316ae25b9760", "commitAfterChange": "b806e8c957af4be79d14a92cc11f6f57a82047b0", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "  int imageIndex (Image image)", "signatureAfterChange": "  int imageIndex (Image image)", "diff": ["-\t\tint hOldList = OS.SendMessage (handle, OS.TVM_GETIMAGELIST, OS.TVSIL_NORMAL, 0);", "-\t\tif (hOldList != 0) OS.ImageList_Destroy (hOldList);", "-\t\tif (hwndHeader != 0) {", "-\t\t\tOS.SendMessage (hwndHeader, OS.HDM_SETIMAGELIST, 0, hImageList);", "-\t\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "018e1891c355d84c2f05be5dad611ff6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "2c17c2eb0fd706a78278bd4e42a02b892eef6dde", "commitAfterChange": "afaa39bdb2aab9490e8e3fdeb1deb754caa3e91b", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": " public void setText (String string)", "signatureAfterChange": " public void setText (String string)", "diff": ["-\t\tOS.g_signal_handlers_block_matched (handle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);", "-\t\tOS.gtk_combo_box_set_active (handle, index);", "-\t\tOS.g_signal_handlers_unblock_matched (handle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);", "-\t\t/*", "-\t\t* Feature in GTK. Read Only combo boxes do not get a chance to send out a ", "-\t\t* Modify event in the gtk_changed callback. The fix is to send a Modify event ", "-\t\t* here.", "-\t\t*/", "-\t\tsendEvent (SWT.Modify);", "+\t\tselect (index);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83c73e783add8c64fc9104b510ad6866", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "e5af7ee723dbfcb73d7dd092315b7611cf318447", "commitAfterChange": "2c6e6ca4cab8548f4b0d5f585341f75171aa5206", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  int gtk_row_expanded (int tree, int iter, int path)", "signatureAfterChange": "  int gtk_test_expand_row (int tree, int iter, int path)", "diff": ["-int gtk_row_expanded (int tree, int iter, int path) {", "+int gtk_test_expand_row (int tree, int iter, int path) {", "-\tint selection = OS.gtk_tree_view_get_selection (handle);", "-\tOS.g_signal_handlers_block_matched (selection, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);", "-\tOS.gtk_tree_view_expand_row (handle, path, false);", "-\tOS.g_signal_handlers_unblock_matched (selection, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df7642839266c21d43089dbb9761daa7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tracker.java", "commitBeforeChange": "c8f3513de0a245c71e4ca9b646c59cbef9df6a7d", "commitAfterChange": "2e9af340012249c99acbb80e5cc2336d1eed2653", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r public boolean open ()", "signatureAfterChange": "\r public boolean open ()", "diff": ["-\tint hwndTransparent = OS.CreateWindowEx (\r", "-\t\tOS.WS_EX_TRANSPARENT,\r", "-\t\tdisplay.windowClass,\r", "-\t\tnull,\r", "-\t\tOS.WS_POPUP | OS.WS_VISIBLE,\r", "-\t\t0,0,\r", "-\t\tdisplayWidth, displayHeight,\r", "-\t\t0,\r", "-\t\t0,\r", "-\t\tOS.GetModuleHandle (null),\r", "-\t\tnull);\r", "+//\tint hwndTransparent = OS.CreateWindowEx (\r", "+//\t\tOS.WS_EX_TRANSPARENT,\r", "+//\t\tdisplay.windowClass,\r", "+//\t\tnull,\r", "+//\t\tOS.WS_POPUP | OS.WS_VISIBLE,\r", "+//\t\t0,0,\r", "+//\t\tdisplayWidth, displayHeight,\r", "+//\t\t0,\r", "+//\t\t0,\r", "+//\t\tOS.GetModuleHandle (null),\r", "+//\t\tnull);\r", "-\tOS.DestroyWindow (hwndTransparent);\r", "+//\tOS.DestroyWindow (hwndTransparent);\r"]}], "num": 29422}