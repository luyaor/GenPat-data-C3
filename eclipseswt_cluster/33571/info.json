{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f8904a99ba4bba4ae4f6ee7dbaac57e3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a6305e463e58823049ed08c02290ee5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 293, "methodNumberAfterChange": 293, "signatureBeforeChange": " \tint get_relations(int maxRelations, int ppRelations, int pNRelations)", "signatureAfterChange": " \tint get_relations(int maxRelations, long ppRelations, long pNRelations)", "diff": ["-\tint get_relations(int maxRelations, int /*long*/ ppRelations, int /*long*/ pNRelations) {", "+\tint get_relations(int maxRelations, long /*int*/ ppRelations, long /*int*/ pNRelations) {", "-\t\t\t\tCOM.MoveMemory(ppRelations + count * OS.PTR_SIZEOF, new int /*long*/[] { relation.getAddress() }, OS.PTR_SIZEOF);", "+\t\t\t\tCOM.MoveMemory(ppRelations + count * OS.PTR_SIZEOF, new long /*int*/[] { relation.getAddress() }, OS.PTR_SIZEOF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b68cc2d64535ee8feaba2c6194ffa416", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Relation.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tint get_targets(int maxTargets, int ppTargets, int pNTargets)", "signatureAfterChange": " \tint get_targets(int maxTargets, long ppTargets, long pNTargets)", "diff": ["-\tint get_targets(int maxTargets, int /*long*/ ppTargets, int /*long*/ pNTargets) {", "+\tint get_targets(int maxTargets, long /*int*/ ppTargets, long /*int*/ pNTargets) {", "-\t\t\tCOM.MoveMemory(ppTargets + i * OS.PTR_SIZEOF, new int /*long*/[] { target.getAddress() }, OS.PTR_SIZEOF);", "+\t\t\tCOM.MoveMemory(ppTargets + i * OS.PTR_SIZEOF, new long /*int*/[] { target.getAddress() }, OS.PTR_SIZEOF);"]}], "num": 33571}