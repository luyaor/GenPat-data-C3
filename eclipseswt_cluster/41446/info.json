{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "28314e48b8cceebcc627b4384e948e52", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5677073aa383e73a9b66877d654a746", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "a754695634bbf4177c903eb76191590677bc9067", "commitAfterChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": "  void mouseDownSuper(int id, int sel, int theEvent)", "signatureAfterChange": "  void mouseDownSuper(int id, int sel, int theEvent)", "diff": ["-\t\t\t\t\tEvent event = new Event ();", "-\t\t\t\t\tevent.item = item;", "-\t\t\t\t\tsendSelectionEvent (SWT.Selection, event, false);", "-", "-\t\t\t\t\t// Feature in Cocoa: This code path handles the case of an unmodified click on an already-selected row.", "-\t\t\t\t\t// If other rows are selected they will de-select and fire a outlineViewSelectionDidChange message.", "-\t\t\t\t\t// To keep the order of events correct, send the selection event here and ignore the next", "-\t\t\t\t\t// outlineViewSelectionDidChange message.  We'll reset the flag when the message is received.", "-\t\t\t\t\tif (widget.selectedRowIndexes().count() > 1) {", "-\t\t\t\t\t\tignoreSelect = true;", "-\t\t\t\t\t}", "+\t\t\t\t\tselectedRowIndex = this.indexOf ((TreeItem)item);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cbaf07829898b685a4437b8f3798697", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java", "commitBeforeChange": "44ba0b87607c6aa858f7bbf63151abd0fc82a7a9", "commitAfterChange": "1ab8b52d204c71b8f9a4cdb98b6708980e3406e9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tvoid adjustFontSize (int increment)", "signatureAfterChange": " \t \tvoid adjustFontSize (int increment)", "diff": ["-\t\tString name = fontNameControl.getText();", "-\t\tint index = fontSizeControl.getSelectionIndex();", "-\t\tString newSize = \"0\";", "-\t\tif (index + increment < fontSizeControl.getItemCount()) {", "-\t\t\tint newIndex = index + increment;", "-\t\t\tfontSizeControl.select (newIndex);", "-\t\t\tnewSize = fontSizeControl.getItem(newIndex);", "-\t\t} else {", "-\t\t\tnewSize = fontSizeControl.getText();", "+\t\tint newIndex = fontSizeControl.getSelectionIndex() + increment;", "+\t\tif (0 <= newIndex && newIndex < fontSizeControl.getItemCount()) {", "+\t\t\tdisposeResource(textFont);", "+\t\t\tString name = fontNameControl.getText();", "+\t\t\tint size = Integer.parseInt(fontSizeControl.getItem(newIndex));", "+\t\t\ttextFont = new Font(display, name, size, SWT.NORMAL);", "+\t\t\tsetStyle(FONT);", "+\t\t\tupdateToolBar();", "-\t\tint size = Integer.parseInt (newSize);", "-\t\tdisposeResource(textFont);", "-\t\ttextFont = new Font(display, name, size, SWT.NORMAL);", "-\t\tsetStyle(FONT);"]}], "num": 41446}