{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d04a0ee0742de3f76be17769aa0c050c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "deaf0c77f6ff1e18151dfbc9e65e4820", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "48512dc20e32e369917d3e1ccfb92109c9724e7e", "commitAfterChange": "1942f64e0b774317e0a8e6ec44902bb736bb7790", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 91, "signatureBeforeChange": " void sendKeyEvent (int type, GdkEventKey gdkEvent)", "signatureAfterChange": "  void sendKeyEvent (int type, int pEventKey)", "diff": ["-void sendKeyEvent (int type, GdkEventKey gdkEvent) {", "-\t/* Look up the keysym and character(s) */", "-\tint size = gdkEvent.length;", "-\tif (gdkEvent.keyval == 0 && size == 0) return;", "-\t/* If there is no composed string input by keypress, only send the keyvalue */ ", "-\tif (size == 0 ) {", "-\t\tEvent event = new Event ();", "-\t\tevent.time = gdkEvent.time;", "-//\t\tevent.character = (char) 0;  //no character sent", "-\t\tevent.keyCode = Display.translateKey (gdkEvent.keyval);", "+void sendKeyEvent (int type, int pEventKey) {", "+\tEvent event = new Event();", "+\tevent.time = OS.gdk_event_get_time(pEventKey);", "+\t", "+\tint size = OS.gdk_event_key_get_length(pEventKey);", "+\tif (size==0) {  /* No composed string - send the keyvalue */", "+\t\tint keyval = OS.gdk_event_key_get_keyval(pEventKey)\t;", "+\t\tif (keyval==0) return;", "+\t\tevent.keyCode = Display.translateKey (keyval);", "-\t\tif ((gdkEvent.state & OS.GDK_MOD1_MASK) != 0) event.stateMask |= SWT.ALT;", "-\t\tif ((gdkEvent.state & OS.GDK_SHIFT_MASK) != 0) event.stateMask |= SWT.SHIFT;", "-\t\tif ((gdkEvent.state & OS.GDK_CONTROL_MASK) != 0) event.stateMask |= SWT.CONTROL;", "-\t\tif ((gdkEvent.state & OS.GDK_BUTTON1_MASK) != 0) event.stateMask |= SWT.BUTTON1;", "-\t\tif ((gdkEvent.state & OS.GDK_BUTTON2_MASK) != 0) event.stateMask |= SWT.BUTTON2;", "-\t\tif ((gdkEvent.state & OS.GDK_BUTTON3_MASK) != 0) event.stateMask |= SWT.BUTTON3;", "+\t\tint[] pModifier = new int[1];", "+\t\tOS.gdk_event_get_state(pEventKey, pModifier);", "+\t\tint state = pModifier[0];", "+\t\tif ((state & OS.GDK_MOD1_MASK)    != 0) event.stateMask |= SWT.ALT;", "+\t\tif ((state & OS.GDK_SHIFT_MASK)   != 0) event.stateMask |= SWT.SHIFT;", "+\t\tif ((state & OS.GDK_CONTROL_MASK) != 0) event.stateMask |= SWT.CONTROL;", "+\t\tif ((state & OS.GDK_BUTTON1_MASK) != 0) event.stateMask |= SWT.BUTTON1;", "+\t\tif ((state & OS.GDK_BUTTON2_MASK) != 0) event.stateMask |= SWT.BUTTON2;", "+\t\tif ((state & OS.GDK_BUTTON3_MASK) != 0) event.stateMask |= SWT.BUTTON3;", "+\t\treturn;", "-\telse {\t", "-\t\tbyte [] buffer = new byte [size];", "-\t\tOS.memmove (buffer, gdkEvent.string, size);", "-\t\t/* Convert from MBCS to UNICODE and send the event */", "-\t\tchar [] result = Converter.mbcsToWcs (null, buffer);", "-\t\tfor (int i=0; i<result.length; i++) {", "-\t\t\tEvent event = new Event ();", "-\t\t\tevent.time = gdkEvent.time;", "-\t\t\tevent.character = result [i];", "-\t\t\tevent.keyCode = result [i]; //0; //no keyCode sent", "-\t\t\tif ((gdkEvent.state & OS.GDK_MOD1_MASK) != 0) event.stateMask |= SWT.ALT;", "-\t\t\tif ((gdkEvent.state & OS.GDK_SHIFT_MASK) != 0) event.stateMask |= SWT.SHIFT;", "-\t\t\tif ((gdkEvent.state & OS.GDK_CONTROL_MASK) != 0) event.stateMask |= SWT.CONTROL;", "-\t\t\tif ((gdkEvent.state & OS.GDK_BUTTON1_MASK) != 0) event.stateMask |= SWT.BUTTON1;", "-\t\t\tif ((gdkEvent.state & OS.GDK_BUTTON2_MASK) != 0) event.stateMask |= SWT.BUTTON2;", "-\t\t\tif ((gdkEvent.state & OS.GDK_BUTTON3_MASK) != 0) event.stateMask |= SWT.BUTTON3;", "-\t\t\tpostEvent (type, event);", "-\t\t}", "-\t}\t", "+", "+\tif (size==1) {", "+\t\tint keyval = OS.gdk_event_key_get_keyval(pEventKey)\t;", "+\t\tif (keyval==0) return;", "+\t\tevent.keyCode = keyval;", "+\t\tevent.character = (char) event.keyCode;  //no character sent", "+\t\tint[] pModifier = new int[1];", "+\t\tOS.gdk_event_get_state(pEventKey, pModifier);", "+\t\tint state = pModifier[0];", "+\t\tif ((state & OS.GDK_MOD1_MASK)    != 0) event.stateMask |= SWT.ALT;", "+\t\tif ((state & OS.GDK_SHIFT_MASK)   != 0) event.stateMask |= SWT.SHIFT;", "+\t\tif ((state & OS.GDK_CONTROL_MASK) != 0) event.stateMask |= SWT.CONTROL;", "+\t\tif ((state & OS.GDK_BUTTON1_MASK) != 0) event.stateMask |= SWT.BUTTON1;", "+\t\tif ((state & OS.GDK_BUTTON2_MASK) != 0) event.stateMask |= SWT.BUTTON2;", "+\t\tif ((state & OS.GDK_BUTTON3_MASK) != 0) event.stateMask |= SWT.BUTTON3;", "+\t\tpostEvent (type, event);", "+\t\treturn;", "+\t}", "+", "+\t/* Multi-byte key */", "+\t/* The implementation in the GTK1.2 stream, is not correct here. */", "+\terror(SWT.ERROR_NOT_IMPLEMENTED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c96e9ce0b011e42de299e570c82d2d1e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "a67f394c0511f57f04a642ab7b6dd787073dba38", "commitAfterChange": "cb9a62d44927f93bbcd21b193be43f00e8a6ea02", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": "  void sendKeyEvent (int type, int pEventKey)", "signatureAfterChange": "  void sendKeyEvent (int type, int gdkEvent)", "diff": ["-void sendKeyEvent (int type, int pEventKey) {", "-\tEvent event = new Event();", "-\tevent.time = OS.gdk_event_get_time(pEventKey);", "-\t", "-\tint size = OS.gdk_event_key_get_length(pEventKey);", "-\tif (size==0) {  /* No composed string - send the keyvalue */", "-\t\tint keyval = OS.gdk_event_key_get_keyval(pEventKey)\t;", "-\t\tif (keyval==0) return;", "+void sendKeyEvent (int type, int gdkEvent) {", "+\tint time = OS.gdk_event_get_time (gdkEvent);", "+\tint length = OS.gdk_event_key_get_length (gdkEvent);", "+\tif (length == 0) {", "+\t\tEvent event = new Event ();", "+\t\tevent.time = time;", "+\t\tsetInputState (event, gdkEvent);", "+\t\tint keyval = OS.gdk_event_key_get_keyval (gdkEvent);", "-\t\tevent.character = (char) event.keyCode;  //no character sent", "-\t\tint[] pModifier = new int[1];", "-\t\tOS.gdk_event_get_state(pEventKey, pModifier);", "-\t\tint state = pModifier[0];", "-\t\tif ((state & OS.GDK_MOD1_MASK)    != 0) event.stateMask |= SWT.ALT;", "-\t\tif ((state & OS.GDK_SHIFT_MASK)   != 0) event.stateMask |= SWT.SHIFT;", "-\t\tif ((state & OS.GDK_CONTROL_MASK) != 0) event.stateMask |= SWT.CONTROL;", "-\t\tif ((state & OS.GDK_BUTTON1_MASK) != 0) event.stateMask |= SWT.BUTTON1;", "-\t\tif ((state & OS.GDK_BUTTON2_MASK) != 0) event.stateMask |= SWT.BUTTON2;", "-\t\tif ((state & OS.GDK_BUTTON3_MASK) != 0) event.stateMask |= SWT.BUTTON3;", "-\t\treturn;", "+\t} else {", "+\t\tint string = OS.gdk_event_key_get_string (gdkEvent);", "+\t\tbyte [] buffer = new byte [length];", "+\t\tOS.memmove (buffer, string, length);", "+\t\tchar [] result = Converter.mbcsToWcs (null, buffer);", "+\t\tint index = 0;", "+\t\twhile (index < result.length) {", "+\t\t\tif (result [index] == 0) break;", "+\t\t\tEvent event = new Event ();", "+\t\t\tevent.time = time;", "+\t\t\tevent.character = result [index];", "+\t\t\tsetInputState (event, gdkEvent);", "+\t\t\tpostEvent (type, event);", "+\t\t\tindex++;", "+\t\t}", "-", "-\tif (size==1) {", "-\t\tint keyval = OS.gdk_event_key_get_keyval(pEventKey)\t;", "-\t\tif (keyval==0) return;", "-\t\tevent.keyCode = keyval;", "-\t\tevent.character = (char) event.keyCode;  //no character sent", "-\t\tint[] pModifier = new int[1];", "-\t\tOS.gdk_event_get_state(pEventKey, pModifier);", "-\t\tint state = pModifier[0];", "-\t\tif ((state & OS.GDK_MOD1_MASK)    != 0) event.stateMask |= SWT.ALT;", "-\t\tif ((state & OS.GDK_SHIFT_MASK)   != 0) event.stateMask |= SWT.SHIFT;", "-\t\tif ((state & OS.GDK_CONTROL_MASK) != 0) event.stateMask |= SWT.CONTROL;", "-\t\tif ((state & OS.GDK_BUTTON1_MASK) != 0) event.stateMask |= SWT.BUTTON1;", "-\t\tif ((state & OS.GDK_BUTTON2_MASK) != 0) event.stateMask |= SWT.BUTTON2;", "-\t\tif ((state & OS.GDK_BUTTON3_MASK) != 0) event.stateMask |= SWT.BUTTON3;", "-\t\tpostEvent (type, event);", "-\t\treturn;", "-\t}", "-", "-\t/* Multi-byte key */", "-\t/* The implementation in the GTK1.2 stream, is not correct here. */", "-\terror(SWT.ERROR_NOT_IMPLEMENTED);"]}], "num": 15349}