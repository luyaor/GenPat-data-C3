{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b4b027aedbb16ba9ac31c8a53c4ee789", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1c698a3bf3a0d6a2ab8aa3920da7960", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/carbon/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "7dc5f136bdd4386450dc869780f76a186ca5954c", "commitAfterChange": "56a6b7bac171503219cd95fd5425fbf79eb755db", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "  void didCommitLoadForFrame(int frame)", "signatureAfterChange": "  void didCommitLoadForFrame(int frame)", "diff": ["-\tif (frame == WebKit.objc_msgSend(webView, WebKit.S_mainFrame)) {", "+\t//id url= [[[[frame provisionalDataSource] request] URL] absoluteString];", "+\tint dataSource = WebKit.objc_msgSend(frame, WebKit.S_dataSource);", "+\tint request = WebKit.objc_msgSend(dataSource, WebKit.S_request);", "+\tint url = WebKit.objc_msgSend(request, WebKit.S_URL);", "+\tint s = WebKit.objc_msgSend(url, WebKit.S_absoluteString);\t", "+\tint length = OS.CFStringGetLength(s);", "+\tchar[] buffer = new char[length];", "+\tCFRange range = new CFRange();", "+\trange.length = length;", "+\tOS.CFStringGetCharacters(s, range, buffer);", "+\tString url2 = new String(buffer);", "+\tfinal Display display = getDisplay();", "+", "+\tboolean top = frame == WebKit.objc_msgSend(webView, WebKit.S_mainFrame);", "+\tif (top) {", "-\t\tresourceCount = 0;", "-\t\t", "-\t\t//id url= [[[[frame provisionalDataSource] request] URL] absoluteString];", "-\t\tint dataSource = WebKit.objc_msgSend(frame, WebKit.S_dataSource);", "-\t\tint request = WebKit.objc_msgSend(dataSource, WebKit.S_request);", "-\t\tint url = WebKit.objc_msgSend(request, WebKit.S_URL);", "-\t\tint s = WebKit.objc_msgSend(url, WebKit.S_absoluteString);\t", "-\t\tint length = OS.CFStringGetLength(s);", "-\t\tchar[] buffer = new char[length];", "-\t\tCFRange range = new CFRange();", "-\t\trange.length = length;", "-\t\tOS.CFStringGetCharacters(s, range, buffer);", "-\t\tString url2 = new String(buffer);\t\t", "+\t\tresourceCount = 0;\t\t", "-\t\tfinal Display display = getDisplay();", "-", "-\t\tLocationEvent location = new LocationEvent(Browser.this);", "-\t\tlocation.display = display;", "-\t\tlocation.widget = this;", "-\t\tlocation.location = url2;", "-\t\tlocation.top = true;", "-\t\tfor (int i = 0; i < locationListeners.length; i++)", "-\t\t\tlocationListeners[i].changed(location);", "+\tLocationEvent location = new LocationEvent(Browser.this);", "+\tlocation.display = display;", "+\tlocation.widget = this;", "+\tlocation.location = url2;", "+\tlocation.top = top;", "+\tfor (int i = 0; i < locationListeners.length; i++)", "+\t\tlocationListeners[i].changed(location);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd3ee8a929fe569b782933b7e4a2d056", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/carbon/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "7dc5f136bdd4386450dc869780f76a186ca5954c", "commitAfterChange": "56a6b7bac171503219cd95fd5425fbf79eb755db", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "  int willSendRequest(int identifier, int request, int redirectResponse, int dataSource)", "signatureAfterChange": "  int willSendRequest(int identifier, int request, int redirectResponse, int dataSource)", "diff": ["-\tboolean doit = true;", "-\t/*", "-\t* Note.  Safari can send multiple willSendRequest for the top frame corresponding to internal resources to be loaded.", "-\t* The identifier is used to check the willSendRequest message corresponding to the initial resource - the one whose URL", "-\t* should be set in the location toolbar of a browser.", "-\t*/", "-\tif (this.identifier == identifier) {", "-\t\tint url = WebKit.objc_msgSend(request, WebKit.S_URL);", "-\t\tint s = WebKit.objc_msgSend(url, WebKit.S_absoluteString);", "-\t\tint length = OS.CFStringGetLength(s);", "-\t\tchar[] buffer = new char[length];", "-\t\tCFRange range = new CFRange();", "-\t\trange.length = length;", "-\t\tOS.CFStringGetCharacters(s, range, buffer);", "-\t\tString url2 = new String(buffer);", "+\tint url = WebKit.objc_msgSend(request, WebKit.S_URL);", "+\tint s = WebKit.objc_msgSend(url, WebKit.S_absoluteString);", "+\tint length = OS.CFStringGetLength(s);", "+\tchar[] buffer = new char[length];", "+\tCFRange range = new CFRange();", "+\trange.length = length;", "+\tOS.CFStringGetCharacters(s, range, buffer);", "+\tString url2 = new String(buffer);", "-\t\tLocationEvent newEvent = new LocationEvent(this);", "-\t\tnewEvent.display = getDisplay();", "-\t\tnewEvent.widget = this;", "-\t\tnewEvent.location = url2;", "-\t\tnewEvent.doit = true;", "-\t\tif (locationListeners != null) {", "-\t\t\tfor (int i = 0; i < locationListeners.length; i++)", "-\t\t\t\tlocationListeners[i].changing(newEvent);", "-\t\t}", "-\t\tdoit = newEvent.doit;", "+\tLocationEvent newEvent = new LocationEvent(this);", "+\tnewEvent.display = getDisplay();", "+\tnewEvent.widget = this;", "+\tnewEvent.location = url2;", "+\tnewEvent.doit = true;", "+\tif (locationListeners != null) {", "+\t\tfor (int i = 0; i < locationListeners.length; i++)", "+\t\t\tlocationListeners[i].changing(newEvent);", "-\treturn doit ? request : 0;", "+\treturn newEvent.doit ? request : 0;"]}], "num": 15701}