{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "98868ce2f1424cab2d4a97d80daf3d65", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65d87dc0a1d3febd9442b242badfd6f7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/carbon/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "2c8a13d0df1694740c0af6220e23682b3ddd10de", "commitAfterChange": "056762a1d7c74e75bfac132d1e756819b6f3b39e", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 31, "signatureBeforeChange": "  void hookDOMMouseListeners(int frame)", "signatureAfterChange": "  void hookDOMMouseListeners(int frame)", "diff": ["-\tString string = DOMEVENT_MOUSEDOWN;", "-\tint length = string.length();", "-\tchar[] chars = new char[length];", "-\tstring.getChars(0, length, chars, 0);", "-\tint ptr = OS.CFStringCreateWithCharacters(0, chars, length);", "+\tint ptr = createNSString(DOMEVENT_MOUSEDOWN);", "-\tstring = DOMEVENT_MOUSEUP;", "-\tlength = string.length();", "-\tchars = new char[length];", "-\tstring.getChars(0, length, chars, 0);", "-\tptr = OS.CFStringCreateWithCharacters(0, chars, length);", "+\tptr = createNSString(DOMEVENT_MOUSEUP);", "-\tstring = DOMEVENT_MOUSEMOVE;", "-\tlength = string.length();", "-\tchars = new char[length];", "-\tstring.getChars(0, length, chars, 0);", "-\tptr = OS.CFStringCreateWithCharacters(0, chars, length);", "+\tptr = createNSString(DOMEVENT_MOUSEMOVE);", "-\tstring = DOMEVENT_MOUSEWHEEL;", "-\tlength = string.length();", "-\tchars = new char[length];", "-\tstring.getChars(0, length, chars, 0);", "-\tptr = OS.CFStringCreateWithCharacters(0, chars, length);", "+\tptr = createNSString(DOMEVENT_MOUSEWHEEL);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4b85f4cb3cd21eda96559e3cca8a72a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "2982bc39340de13b30271bea27a026386e5a773b", "commitAfterChange": "952e49f3e3f7d09515610ff5a655e3ee04d6b569", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " public Image getSystemImage (int id)", "signatureAfterChange": " public Image getSystemImage (int id)", "diff": ["-\tint /*long*/ imagePixmap = 0, imageMask = 0;", "-\t\t\tif (errorPixmap == 0) {", "-\t\t\t\tint /*long*/[] image = createImage (\"gtk-dialog-error\");", "-\t\t\t\tif (image != null) {", "-\t\t\t\t\terrorPixmap = image [0];", "-\t\t\t\t\terrorMask = image [1];", "-\t\t\t\t}", "+\t\t\tif (errorImage == null) {", "+\t\t\t\terrorImage = createImage (\"gtk-dialog-error\");", "-\t\t\timagePixmap = errorPixmap;", "-\t\t\timageMask = errorMask;", "-\t\t\tbreak;", "+\t\t\treturn errorImage;", "-\t\t\tif (infoPixmap == 0) {", "-\t\t\t\tint /*long*/[] image = createImage (\"gtk-dialog-info\");", "-\t\t\t\tif (image != null) {", "-\t\t\t\t\tinfoPixmap = image [0];", "-\t\t\t\t\tinfoMask = image [1];", "-\t\t\t\t}", "+\t\t\tif (infoImage == null) {", "+\t\t\t\tinfoImage = createImage (\"gtk-dialog-info\");", "-\t\t\timagePixmap = infoPixmap;", "-\t\t\timageMask = infoMask;", "-\t\t\tbreak;", "+\t\t\treturn infoImage;", "-\t\t\tif (questionPixmap == 0) {", "-\t\t\t\tint /*long*/[] image = createImage (\"gtk-dialog-question\");", "-\t\t\t\tif (image != null) {", "-\t\t\t\t\tquestionPixmap = image [0];", "-\t\t\t\t\tquestionMask = image [1];", "-\t\t\t\t}", "+\t\t\tif (questionImage == null) {", "+\t\t\t\tquestionImage = createImage (\"gtk-dialog-question\");", "-\t\t\timagePixmap = questionPixmap;", "-\t\t\timageMask = questionMask;", "-\t\t\tbreak;", "+\t\t\treturn questionImage;", "-\t\t\tif (warningPixmap == 0) {", "-\t\t\t\tint /*long*/[] image = createImage (\"gtk-dialog-warning\");", "-\t\t\t\tif (image != null) {", "-\t\t\t\t\twarningPixmap = image [0];", "-\t\t\t\t\twarningMask = image [1];", "-\t\t\t\t}", "+\t\t\tif (warningImage == null) {", "+\t\t\t\twarningImage = createImage (\"gtk-dialog-warning\");", "-\t\t\timagePixmap = warningPixmap;", "-\t\t\timageMask = warningMask;", "-\t\t\tbreak;", "+\t\t\treturn warningImage;", "-\tif (imagePixmap == 0) return null;", "-\treturn Image.gtk_new (this, SWT.ICON, imagePixmap, imageMask);", "+\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2cc65905ed27341e07f4d3595f03661", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/carbon/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "2c8a13d0df1694740c0af6220e23682b3ddd10de", "commitAfterChange": "056762a1d7c74e75bfac132d1e756819b6f3b39e", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 38, "signatureBeforeChange": "  void didReceiveAuthenticationChallengefromDataSource (int identifier, int challenge, int dataSource)", "signatureAfterChange": "  void didReceiveAuthenticationChallengefromDataSource (int identifier, int challenge, int dataSource)", "diff": ["-\t\t\t\tint length = event.user.length ();", "-\t\t\t\tchar[] buffer = new char[length];", "-\t\t\t\tevent.user.getChars (0, length, buffer, 0);", "-\t\t\t\tint user = OS.CFStringCreateWithCharacters (0, buffer, length);", "-\t\t\t\tlength = event.password.length ();", "-\t\t\t\tbuffer = new char[length];", "-\t\t\t\tevent.password.getChars (0, length, buffer, 0);", "-\t\t\t\tint password = OS.CFStringCreateWithCharacters (0, buffer, length);", "+\t\t\t\tint user = createNSString(event.user);", "+\t\t\t\tint password = createNSString(event.password);", "-\tint length = userReturn[0].length ();", "-\tchar[] buffer = new char[length];", "-\tuserReturn[0].getChars (0, length, buffer, 0);", "-\tint user = OS.CFStringCreateWithCharacters (0, buffer, length);", "-\tlength = passwordReturn[0].length ();", "-\tbuffer = new char[length];", "-\tpasswordReturn[0].getChars (0, length, buffer, 0);", "-\tint password = OS.CFStringCreateWithCharacters (0, buffer, length);", "+\tint user = createNSString(userReturn[0]);", "+\tint password = createNSString(passwordReturn[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "203a56a9411a3443a8d6c9f5810b7b26", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "81d15e3de64198e8365dcac773a7af3598424660", "commitAfterChange": "1e8ec5162da128616f5ac9793d199b9f944ca01d", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  int _getOffset (int offset, int movement, boolean forward)", "signatureAfterChange": "  int _getOffset (int offset, int movement, boolean forward)", "diff": ["-\tint[] newOffset = new int[1];", "+\tint newOffset;", "-\t\tOS.ATSUNextCursorPosition(layout, offset, type, newOffset);", "-\t\toffset = newOffset[0];", "-\t\tnewOffset[0] = untranslateOffset(newOffset[0]);", "+\t\toffset = _getNativeOffset(offset, type, forward);", "+\t\tnewOffset = untranslateOffset(offset);", "-\t\t\twhile (newOffset[0] < length && ", "-\t\t\t\t\t(!(!Compatibility.isLetterOrDigit(text.charAt(newOffset[0])) &&", "-\t\t\t\t\tCompatibility.isLetterOrDigit(text.charAt(newOffset[0] - 1))))) {", "-\t\t\t\tOS.ATSUNextCursorPosition(layout, offset, type, newOffset);", "-\t\t\t\toffset = newOffset[0];", "-\t\t\t\tnewOffset[0] = untranslateOffset(newOffset[0]);", "+\t\t\twhile (newOffset < length && ", "+\t\t\t\t\t(!(!Compatibility.isLetterOrDigit(text.charAt(newOffset)) &&", "+\t\t\t\t\tCompatibility.isLetterOrDigit(text.charAt(newOffset - 1))))) {", "+\t\t\t\toffset = _getNativeOffset(offset, type, forward);", "+\t\t\t\tnewOffset = untranslateOffset(offset);", "-\t\t\twhile (newOffset[0] < length && ", "-\t\t\t\t\t(!(Compatibility.isLetterOrDigit(text.charAt(newOffset[0])) &&", "-\t\t\t\t\t!Compatibility.isLetterOrDigit(text.charAt(newOffset[0] - 1))))) {", "-\t\t\t\tOS.ATSUNextCursorPosition(layout, offset, type, newOffset);", "-\t\t\t\toffset = newOffset[0];", "-\t\t\t\tnewOffset[0] = untranslateOffset(newOffset[0]);", "+\t\t\twhile (newOffset < length && ", "+\t\t\t\t\t(!(Compatibility.isLetterOrDigit(text.charAt(newOffset)) &&", "+\t\t\t\t\t!Compatibility.isLetterOrDigit(text.charAt(newOffset - 1))))) {", "+\t\t\t\toffset = _getNativeOffset(offset, type, forward);", "+\t\t\t\tnewOffset = untranslateOffset(offset);", "-\t\tOS.ATSUPreviousCursorPosition(layout, offset, type, newOffset);", "-\t\toffset = newOffset[0];", "-\t\tnewOffset[0] = untranslateOffset(newOffset[0]);", "+\t\toffset = _getNativeOffset(offset, type, forward);", "+\t\tnewOffset = untranslateOffset(offset);", "-\t\t\twhile (newOffset[0] > 0 && ", "-\t\t\t\t\t(!(Compatibility.isLetterOrDigit(text.charAt(newOffset[0])) && ", "-\t\t\t\t\t!Compatibility.isLetterOrDigit(text.charAt(newOffset[0] - 1))))) {", "-\t\t\t\tOS.ATSUPreviousCursorPosition(layout, offset, type, newOffset);", "-\t\t\t\toffset = newOffset[0];", "-\t\t\t\tnewOffset[0] = untranslateOffset(newOffset[0]);", "+\t\t\twhile (newOffset > 0 && ", "+\t\t\t\t\t(!(Compatibility.isLetterOrDigit(text.charAt(newOffset)) && ", "+\t\t\t\t\t!Compatibility.isLetterOrDigit(text.charAt(newOffset - 1))))) {", "+\t\t\t\toffset = _getNativeOffset(offset, type, forward);", "+\t\t\t\tnewOffset = untranslateOffset(offset);", "-\t\t\twhile (newOffset[0] > 0 && ", "-\t\t\t\t\t(!(!Compatibility.isLetterOrDigit(text.charAt(newOffset[0])) && ", "-\t\t\t\t\tCompatibility.isLetterOrDigit(text.charAt(newOffset[0] - 1))))) {", "-\t\t\t\tOS.ATSUPreviousCursorPosition(layout, offset, type, newOffset);", "-\t\t\t\toffset = newOffset[0];", "-\t\t\t\tnewOffset[0] = untranslateOffset(newOffset[0]);", "+\t\t\twhile (newOffset > 0 && ", "+\t\t\t\t\t(!(!Compatibility.isLetterOrDigit(text.charAt(newOffset)) && ", "+\t\t\t\t\tCompatibility.isLetterOrDigit(text.charAt(newOffset - 1))))) {", "+\t\t\t\toffset = _getNativeOffset(offset, type, forward);", "+\t\t\t\tnewOffset = untranslateOffset(offset);", "-\treturn newOffset[0];", "+\treturn newOffset;", "+}"]}], "num": 57869}