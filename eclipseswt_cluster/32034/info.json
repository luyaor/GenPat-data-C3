{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "22aa0b50e053bc919b3b1f7c494fd538", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9d1862eb827e5cee99e1d5b2f79a3fb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "0279ac89ad933bec67322b956321e83b2a1ac93a", "commitAfterChange": "dbc3f579c8454ac59e01ac2d56752eda0d58b6cd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "  static int checkStyle (int style)", "signatureAfterChange": "  static int checkStyle (Composite parent, int style, boolean internal)", "diff": ["-static int checkStyle (int style) {", "+static int checkStyle (Composite parent, int style, boolean internal) {", "-\treturn style & ~(SWT.H_SCROLL | SWT.V_SCROLL);", "+\tint newStyle = style & ~(SWT.H_SCROLL | SWT.V_SCROLL);", "+\t", "+\t/*", "+\t * Only internal clients can create an NSToolbar-based ToolBar.", "+\t */", "+\tif (!internal && (newStyle & SWT.SMOOTH) != 0) {", "+\t\tnewStyle &= ~SWT.SMOOTH;", "+\t}", "+\t", "+\t/*", "+\t * A unified toolbar can only be parented to a Shell, and", "+\t * there can only be one unified toolbar per shell. If neither of these", "+\t * conditions hold, turn off the SMOOTH flag.", "+\t */", "+\tif ((style & SWT.SMOOTH) != 0) {", "+\t\tif (parent instanceof Shell) {", "+\t\t\tShell s = (Shell)parent;", "+\t\t\tif (s.window.toolbar() != null) newStyle &= ~SWT.SMOOTH;", "+\t\t} else {", "+\t\t\tnewStyle &= ~SWT.SMOOTH;", "+\t\t}", "+\t}", "+\t", "+\t/*", "+\t * Unified toolbar only supports a horizontal layout, and doesn't wrap.", "+\t */", "+\tif ((newStyle & SWT.SMOOTH) != 0) {", "+\t\tnewStyle &= ~(SWT.VERTICAL | SWT.WRAP); ", "+\t\tnewStyle |= SWT.HORIZONTAL;", "+\t}", "+\t", "+\treturn newStyle;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d5d06cb8bbe60875f37e0c0b5784a23", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/TextTab.java", "commitBeforeChange": "fd5b33a123b7451f346a342e8e774d2710c57b58", "commitAfterChange": "9c6b70b75cf55673ee6af70b0f303300af862091", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tvoid setExampleWidgetState ()", "signatureAfterChange": " \tvoid setExampleWidgetState ()", "diff": ["-\t\twrapButton.setEnabled ((text.getStyle () & SWT.MULTI) != 0);", "-\t\thorizontalButton.setEnabled ((text.getStyle () & SWT.MULTI) != 0);", "-\t\tverticalButton.setEnabled ((text.getStyle () & SWT.MULTI) != 0);", "+\t\tpasswordButton.setSelection ((text.getStyle () & SWT.PASSWORD) != 0);", "+\t\tsearchButton.setSelection ((text.getStyle () & SWT.SEARCH) != 0);", "+\t\t", "+\t\t/* Special case: CANCEL and H_SCROLL have the same value,", "+\t\t * so to avoid confusion, only set CANCEL if SEARCH is set. */", "+\t\tif ((text.getStyle () & SWT.SEARCH) != 0) {", "+\t\t\tcancelButton.setSelection ((text.getStyle () & SWT.CANCEL) != 0);", "+\t\t} else {", "+\t\t\tcancelButton.setSelection (false);", "+\t\t}", "+", "+\t\tpasswordButton.setEnabled ((text.getStyle () & SWT.SINGLE) != 0);", "+\t\tsearchButton.setEnabled ((text.getStyle () & SWT.SINGLE) != 0);", "+\t\tcancelButton.setEnabled ((text.getStyle () & SWT.SEARCH) != 0);", "+\t\twrapButton.setEnabled ((text.getStyle () & SWT.MULTI) != 0);", "+\t\thorizontalButton.setEnabled ((text.getStyle () & SWT.MULTI) != 0);", "+\t\tverticalButton.setEnabled ((text.getStyle () & SWT.MULTI) != 0);"]}], "num": 32034}