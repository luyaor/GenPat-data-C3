{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e849da907b590d02155c9e84c42dc140", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea32c0903ce0090ace4448219b7400e0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_ImageLoader.java", "commitBeforeChange": "c8c3b0d56ac96eed1deeae3cbebb069fecdd4ef9", "commitAfterChange": "db54bb9c515ce97cb7d05101b9fa91b631d7bee5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public void test_loadLjava_io_InputStream()", "signatureAfterChange": "  public void test_loadLjava_io_InputStream()", "diff": ["-\twarnUnimpl(\"Test test_loadLjava_io_InputStream not written\");", "+\tImageLoader loader = new ImageLoader();", "+\tInputStream stream = null;", "+\ttry {", "+\t\ttry {", "+\t\t\tloader.load(stream);", "+\t\t\tfail(\"No exception thrown for load inputStream == null\");", "+\t\t} catch (IllegalArgumentException e) {", "+\t\t}", "+\t\t", "+\t\tstream = SwtTestCase.class.getResourceAsStream(\"empty.txt\");", "+\t\ttry {", "+\t\t\tloader.load(stream);", "+\t\t\ttry {", "+\t\t\t\tstream.close();", "+\t\t\t} catch (IOException e) {}", "+\t\t\tfail(\"No exception thrown for load from invalid inputStream\");", "+\t\t} catch (SWTException e) {", "+\t\t}", "+\t", "+\t\tint numFormats = SwtTestCase.imageFormats.length;", "+\t\tString fileName = SwtTestCase.imageFilenames[0];", "+\t\tfor (int i=0; i<numFormats; i++) {", "+\t\t\tString format = SwtTestCase.imageFormats[i];", "+\t\t\tstream = SwtTestCase.class.getResourceAsStream(fileName + \".\" + format);", "+\t\t\tloader.load(stream);", "+\t\t\ttry {", "+\t\t\t\tstream.close();", "+\t\t\t} catch (IOException e) {}", "+\t\t}", "+\t} finally {", "+\t\ttry {", "+\t\t\tstream.close();", "+\t\t} catch (Exception e) {", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7ca5fa62e5dc3fbdfdb4ea80c100989", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_ImageData.java", "commitBeforeChange": "c8c3b0d56ac96eed1deeae3cbebb069fecdd4ef9", "commitAfterChange": "db54bb9c515ce97cb7d05101b9fa91b631d7bee5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public void test_ConstructorLjava_io_InputStream()", "signatureAfterChange": "  public void test_ConstructorLjava_io_InputStream()", "diff": ["-\twarnUnimpl(\"Test test_ConstructorLjava_io_InputStream not written\");", "+\tInputStream stream = null;", "+\ttry {", "+\t\ttry {", "+\t\t\tnew ImageData(stream);", "+\t\t\tfail(\"No exception thrown for InputStream == null\");", "+\t\t} catch (IllegalArgumentException e) {", "+\t\t}", "+\t\t", "+\t\tstream = SwtTestCase.class.getResourceAsStream(\"empty.txt\");", "+\t\ttry {", "+\t\t\tnew ImageData(stream);", "+\t\t\tfail(\"No exception thrown for invalid InputStream\");", "+\t\t} catch (SWTException e) {", "+\t\t}", "+\t", "+\t\tint numFormats = SwtTestCase.imageFormats.length;", "+\t\tString fileName = SwtTestCase.imageFilenames[0];", "+\t\tfor (int i=0; i<numFormats; i++) {", "+\t\t\tString format = SwtTestCase.imageFormats[i];", "+\t\t\tstream = SwtTestCase.class.getResourceAsStream(fileName + \".\" + format);", "+\t\t\tnew ImageData(stream);", "+\t\t}", "+\t} finally {", "+\t\ttry {", "+\t\t\tstream.close();", "+\t\t} catch (Exception e) {", "+\t\t}", "+\t}"]}], "num": 12688}