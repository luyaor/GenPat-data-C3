{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7c3a0f8e890cd649baf6f869d2cc68e7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f873d7a8d7846539fb3876e65c17aa0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "3d6f81255c8f11df917af7635c8613241396699f", "commitAfterChange": "34ce88e68a5b654293fc728c9816bae8c0305515", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " int drawLine(int lineIndex, int paintX, int paintY, GC gc, Color widgetBackground, Color widgetForeground)", "signatureAfterChange": " int drawLine(int lineIndex, int paintX, int paintY, GC gc, Color widgetBackground, Color widgetForeground)", "diff": ["-\tColor lineBackground = getLineBackground(lineIndex, widgetBackground);", "+\tColor lineBackground = getLineBackground(lineIndex, null);", "-\t", "-\tgc.setBackground(lineBackground);", "-\tstyledText.drawBackground(gc, client.x, paintY, client.width, height);", "-\t", "+\tif (lineBackground != null) {", "+\t\tgc.setBackground(lineBackground);", "+\t\tgc.fillRectangle(client.x, paintY, client.width, height);", "+\t} else {", "+\t\tgc.setBackground(widgetBackground);", "+\t\tstyledText.drawBackground(gc, client.x, paintY, client.width, height);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf109b8b79249557e67933e25b418420", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "7a850966fcebc2510dcdae26a2185eb84e5caa97", "commitAfterChange": "ea4d187e18c5cb79cd146d623e9cb83cded32237", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " int addMerge(int[] mergeRanges, StyleRange[] mergeStyles, int mergeCount, int modifyStart, int modifyEnd)", "signatureAfterChange": " int addMerge(int[] mergeRanges, StyleRange[] mergeStyles, int mergeCount, int modifyStart, int modifyEnd)", "diff": ["-\t", "-\tint j = modifyStart;\t", "-\tfor (int i = 0; i < mergeCount; i += 2) {", "-\t\tif (j > 0 && ranges[j - 2] + ranges[j - 1] == mergeRanges[i] && mergeStyles[i >> 1].similarTo(styles[(j - 2) >> 1])) {", "-\t\t\tranges[j - 1] += mergeRanges[i + 1];", "-\t\t} else {", "-\t\t\tstyles[j >> 1] = mergeStyles[i >> 1];", "-\t\t\tranges[j++] = mergeRanges[i];", "-\t\t\tranges[j++] = mergeRanges[i + 1];", "+\tif (MERGE_STYLES) {", "+\t\tint j = modifyStart;\t", "+\t\tfor (int i = 0; i < mergeCount; i += 2) {", "+\t\t\tif (j > 0 && ranges[j - 2] + ranges[j - 1] == mergeRanges[i] && mergeStyles[i >> 1].similarTo(styles[(j - 2) >> 1])) {", "+\t\t\t\tranges[j - 1] += mergeRanges[i + 1];", "+\t\t\t} else {", "+\t\t\t\tstyles[j >> 1] = mergeStyles[i >> 1];", "+\t\t\t\tranges[j++] = mergeRanges[i];", "+\t\t\t\tranges[j++] = mergeRanges[i + 1];", "+\t\t\t}", "+\t\tif (endStyle != null && ranges[j - 2] + ranges[j - 1] == endStart && endStyle.similarTo(styles[(j - 2) >> 1])) {", "+\t\t\tranges[j - 1] += endLength;", "+\t\t\tmodifyEnd += 2;", "+\t\t\tmergeCount += 2;", "+\t\t}", "+\t\tif (rangeCount > modifyEnd) {", "+\t\t\tSystem.arraycopy(ranges, modifyStart + mergeCount, ranges, j, rangeCount - modifyEnd);", "+\t\t\tSystem.arraycopy(styles, (modifyStart + mergeCount) >> 1, styles, j >> 1, styleCount - (modifyEnd >> 1));", "+\t\t}", "+\t\tgrow = (j - modifyStart) - (modifyEnd - modifyStart);", "+\t} else {", "+\t\tSystem.arraycopy(mergeRanges, 0, ranges, modifyStart, mergeCount);", "+\t\tSystem.arraycopy(mergeStyles, 0, styles, modifyStart >> 1, mergeCount >> 1);", "-\tif (endStyle != null && ranges[j - 2] + ranges[j - 1] == endStart && endStyle.similarTo(styles[(j - 2) >> 1])) {", "-\t\tranges[j - 1] += endLength;", "-\t\tmodifyEnd += 2;", "-\t\tmergeCount += 2;", "-\t}", "-\tif (rangeCount > modifyEnd) {", "-\t\tSystem.arraycopy(ranges, modifyStart + mergeCount, ranges, j, rangeCount - modifyEnd);", "-\t\tSystem.arraycopy(styles, (modifyStart + mergeCount) >> 1, styles, j >> 1, styleCount - (modifyEnd >> 1));", "-\t}", "-\tgrow = (j - modifyStart) - (modifyEnd - modifyStart);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "054c7bf634c603e40cf5df24192c2a50", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/ViewForm.java", "commitBeforeChange": "a190846340d87bd29425466ef5ed921f7a97af93", "commitAfterChange": "abc732f1e158b6ff5e228a1c7fdd89ad3764842c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " void onPaint(GC gc)", "signatureAfterChange": " void onPaint(GC gc)", "diff": ["+\tif (separator > -1) {", "+\t\tgc.setForeground(borderColor1);", "+\t\tgc.drawLine(borderLeft, separator, size.x - borderLeft - borderRight, separator);", "+\t}"]}], "num": 45021}