{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c66fe7ea55c9e918e20fbc95ea7a8162", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e65487aa1e77d1330cdad9ec128fc75f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "9423e8624301f31221faf0cc38dbe489fbd38f90", "commitAfterChange": "a0154691b486453b5cbdf98d235d22966936f5b6", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "\r \r int widgetStyle ()", "signatureAfterChange": "\r \r int widgetStyle ()", "diff": ["-\tif (OS.IsWinCE) bits &= ~OS.WS_TABSTOP;\r", "-\t* Feature on WinCE:  calling createWindowEx with the style OVERLAPPED\r", "-\t* and the field hwndParent causes the window to become a child of hwndParent\r", "-\t* (not owned by).  The workaround is to set the style WS_POPUP for shells\r", "-\t* with a parent.\r", "-\t* Feature on WinCE PPC 2000:  extended style WS_EX_CAPTIONOKBTN cannot be\r", "-\t* set with style WS_CAPTION.  The workaround is to set the style WS_POPUP\r", "-\t* even for shells with no parent.\r", "-\t* The WS_POPUP style in combination with CW_USEDEFAULT causes the window \r", "-\t* to be of size 0 and will need to be resized.\r", "+\t* Feature in WinCE.  Calling CreateWindowEx () with WS_OVERLAPPED\r", "+\t* and a parent window causes the new window to become a WS_CHILD of\r", "+\t* the parent instead of a dialog child.  The fix is to use WS_POPUP\r", "+\t* instead.  \r", "+\t* \r", "+\t* NOTE: WS_POPUP causes CreateWindowEx () to ignore CW_USEDEFAULT\r", "+\t* and causes the default window location and size to be zero.\r", "-\treturn bits | (OS.IsWinCE ? OS.WS_POPUP : OS.WS_OVERLAPPED | OS.WS_CAPTION);\r", "+\tif (OS.IsWinCE) return bits | OS.WS_POPUP;\r", "+\t\r", "+\t/*\r", "+\t* Use WS_OVERLAPPED for all windows, either dialog or top level\r", "+\t* so that CreateWindowEx () will respect CW_USEDEFAULT and set\r", "+\t* the default window location and size.\r", "+\t* \r", "+\t* NOTE:  When a WS_OVERLAPPED window is created, Windows gives\r", "+\t* the new window WS_CAPTION style bits.  These two constants are\r", "+\t* as follows:\r", "+\t* \r", "+\t* \tWS_OVERLAPPED = 0\r", "+\t* \tWS_CAPTION = WS_BORDER | WS_DLGFRAME\r", "+\t* \r", "+\t*/\r", "+\treturn bits | OS.WS_OVERLAPPED | OS.WS_CAPTION;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4473fd77a8448e81b9835dadc75ccd87", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "2d6a57f6ecbc6b63ed5329bf0b00d776b893cc6f", "commitAfterChange": "c68f62c9983c4bd3a099b9805f372a1acbf5843f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " void createItem (CTabItem item, int index)", "signatureAfterChange": " void createItem (CTabItem item, int index)", "diff": ["-\t\tif (!updateTabHeight(false)) updateItems();", "-\t\tredraw();", "+\t\tupdateFolder(UPDATE_TAB_HEIGHT | REDRAW);", "-\t\tupdateItems();", "-\t\tredrawTabs();", "+\t\tupdateFolder(REDRAW_TABS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d854661adf45109b7a9a514ea34bd06f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "8356fcbf8203f23e1d8d54127dba0822d05f0844", "commitAfterChange": "588bdb7b8b0bb5debe3f281e5caa9e36113de025", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": "  int helpProc (int inControl, int inGlobalMouse, int inRequest, int outContentProvided, int ioHelpContent)", "signatureAfterChange": "  int helpProc (int inControl, int inGlobalMouse, int inRequest, int outContentProvided, int ioHelpContent)", "diff": ["+\t\t\torg.eclipse.swt.internal.carbon.Point pt = new org.eclipse.swt.internal.carbon.Point ();", "+\t\t\tOS.memmove(pt, new int[] {inGlobalMouse}, 4);", "+\t\t\t/*", "+\t\t\t* If a control doesn't have a tooltip text, then helpProc gets", "+\t\t\t* called on the controls in its parent hierarchy and their", "+\t\t\t* tooltip text is used. Note that returning OS.eventNotHandledErr", "+\t\t\t* prevents the window help content callback from being called. The fix", "+\t\t\t* is to only handle the message when the cursor is directly over this", "+\t\t\t* control.", "+\t\t\t*/", "+\t\t\tif (display.getCursorControl (pt) != this) break;", "-\t\t\t\torg.eclipse.swt.internal.carbon.Point pt = new org.eclipse.swt.internal.carbon.Point ();", "-\t\t\t\tOS.memmove(pt, new int[] {inGlobalMouse}, 4);", "-\t\t\t\tOS.memmove (outContentProvided, contentProvided, 2);", "-\t\t\t\tbreak;", "-\t\t\t\tOS.memmove (outContentProvided, contentProvided, 2);", "-\t\t\t\t/*", "-\t\t\t\t * If a control doesn't have a tooltiptext, then helpProc gets", "-\t\t\t\t * called on the controls in its parent hierarchy and their", "-\t\t\t\t * tooltiptext is used. Return OS.eventNotHandledErr to prevent", "-\t\t\t\t * the calls on the parent control.", "-\t\t\t\t */", "-\t\t\t\treturn OS.eventNotHandledErr;", "+\t\t\tOS.memmove (outContentProvided, contentProvided, 2);", "+\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d76c4a64cb170eef01747e1bfe6931db", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "541e0a794a690bb0f91c5863e2ba46b5f6472282", "commitAfterChange": "d47987608ba8fb62ca7ccc9d73b4cf6b75934d3f", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "\r \r LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "signatureAfterChange": "\r \r LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "diff": ["-\ttvItem.mask = OS.TVIF_STATE | OS.TVIF_PARAM;\r", "+\ttvItem.mask = OS.TVIF_PARAM;\r", "-\tif ((tvItem.state & OS.TVIS_SELECTED) != 0) {\r", "-\t\tevent.item = items [tvItem.lParam];\r", "-\t}\r", "+\tevent.item = items [tvItem.lParam];\r"]}], "num": 32372}