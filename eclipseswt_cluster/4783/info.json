{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b7c38be0c37bc400534ecfefa9b3ee49", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "874b7c0511332055d8fc0bbfc2916791", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "b609e78649d0a24ab2d37dea4f5d376e9b5ef164", "commitAfterChange": "4af2139bd60e8934fe7b368dd056a1828221ecd7", "methodNumberBeforeChange": 369, "methodNumberAfterChange": 372, "signatureBeforeChange": " void setScrollBars(boolean vertical)", "signatureAfterChange": " void setScrollBars(boolean vertical)", "diff": ["-\tint inactive = 1;", "-\tif (vertical || !isFixedLineHeight()) {", "-\t\tScrollBar verticalBar = getVerticalBar();", "-\t\tif (verticalBar != null) {", "-\t\t\tint maximum = renderer.getHeight();", "-\t\t\t// only set the real values if the scroll bar can be used ", "-\t\t\t// (ie. because the thumb size is less than the scroll maximum)", "-\t\t\t// avoids flashing on Motif, fixes 1G7RE1J and 1G5SE92", "-\t\t\tif (clientAreaHeight < maximum) {", "-\t\t\t\tverticalBar.setMaximum(maximum - topMargin - bottomMargin);", "-\t\t\t\tverticalBar.setThumb(clientAreaHeight - topMargin - bottomMargin);", "-\t\t\t\tverticalBar.setPageIncrement(clientAreaHeight - topMargin - bottomMargin);", "-\t\t\t} else if (verticalBar.getThumb() != inactive || verticalBar.getMaximum() != inactive) {", "-\t\t\t\tverticalBar.setValues(", "-\t\t\t\t\tverticalBar.getSelection(),", "-\t\t\t\t\tverticalBar.getMinimum(),", "-\t\t\t\t\tinactive,", "-\t\t\t\t\tinactive,", "-\t\t\t\t\tverticalBar.getIncrement(),", "-\t\t\t\t\tinactive);", "-\t\t\t}", "-\t\t}", "-\t}", "+\tignoreResize++;", "+\tif (!isFixedLineHeight() || !alwaysShowScroll) vertical = true;", "+\tScrollBar verticalBar = vertical ? getVerticalBar() : null;", "-\tif (horizontalBar != null && horizontalBar.getVisible()) {", "-\t\tint maximum = renderer.getWidth();", "-\t\t// only set the real values if the scroll bar can be used ", "-\t\t// (ie. because the thumb size is less than the scroll maximum)", "-\t\t// avoids flashing on Motif, fixes 1G7RE1J and 1G5SE92", "-\t\tif (clientAreaWidth < maximum) {", "-\t\t\thorizontalBar.setMaximum(maximum - leftMargin - rightMargin);", "-\t\t\thorizontalBar.setThumb(clientAreaWidth - leftMargin - rightMargin);", "-\t\t\thorizontalBar.setPageIncrement(clientAreaWidth - leftMargin - rightMargin);", "-\t\t} else if (horizontalBar.getThumb() != inactive || horizontalBar.getMaximum() != inactive) {", "-\t\t\thorizontalBar.setValues(", "-\t\t\t\thorizontalBar.getSelection(),", "-\t\t\t\thorizontalBar.getMinimum(),", "-\t\t\t\tinactive,", "-\t\t\t\tinactive,", "-\t\t\t\thorizontalBar.getIncrement(),", "-\t\t\t\tinactive);", "+\tif (!alwaysShowScroll) {", "+\t\tif (verticalBar != null) verticalBar.setVisible(false);", "+\t\tif (horizontalBar != null) horizontalBar.setVisible(false);", "+\t}", "+\tif (verticalBar != null) {", "+\t\tsetScrollBar(verticalBar, clientAreaHeight, renderer.getHeight(), topMargin + bottomMargin);", "+\t}", "+\tif (horizontalBar != null) {", "+\t\tsetScrollBar(horizontalBar, clientAreaWidth, renderer.getWidth(), leftMargin + rightMargin);", "+\t\tif (!alwaysShowScroll && horizontalBar.getVisible() && verticalBar != null && !verticalBar.getVisible()) {", "+\t\t\tsetScrollBar(verticalBar, clientAreaHeight, renderer.getHeight(), topMargin + bottomMargin);", "+\tignoreResize--;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f658819f6742cead3d11e223f212a365", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "a45e2f0f4688ba8750d124e41802861dc3176c91", "commitAfterChange": "26e521309364bb658cf1c93d5815f7e3f172acfd", "methodNumberBeforeChange": 268, "methodNumberAfterChange": 271, "signatureBeforeChange": " void setHorizontalScrollBar()", "signatureAfterChange": " void setScrollBars(boolean vertical)", "diff": ["- */", "-void setHorizontalScrollBar() {", "-\tScrollBar horizontalBar = getHorizontalBar();", "-\tif (horizontalBar != null && horizontalBar.getVisible()) {", "-\t\tint inactive = 1;", "-\t\tRectangle clientArea = getClientArea();", "-\t\t// only set the real values if the scroll bar can be used ", "-\t\t// (ie. because the thumb size is less than the scroll maximum)", "-\t\t// avoids flashing on Motif, fixes 1G7RE1J and 1G5SE92", "-\t\tif (clientArea.width < lineCache.getWidth()) {", "-\t\t\thorizontalBar.setValues(", "-\t\t\t\thorizontalBar.getSelection(),", "-\t\t\t\thorizontalBar.getMinimum(),", "-\t\t\t\tlineCache.getWidth(),\t\t\t\t\t\t\t// maximum", "-\t\t\t\tclientArea.width - leftMargin - rightMargin,\t// thumb size", "-\t\t\t\thorizontalBar.getIncrement(),", "-\t\t\t\tclientArea.width - leftMargin - rightMargin);\t// page size", "-\t\t} else if (horizontalBar.getThumb() != inactive || horizontalBar.getMaximum() != inactive) {", "-\t\t\thorizontalBar.setValues(", "-\t\t\t\thorizontalBar.getSelection(),", "-\t\t\t\thorizontalBar.getMinimum(),", "-\t\t\t\tinactive,", "-\t\t\t\tinactive,", "-\t\t\t\thorizontalBar.getIncrement(),", "-\t\t\t\tinactive);", "-\t\t}", "-\t}", "-}", "+void setScrollBars(boolean vertical) {", "+\tint inactive = 1;", "+\tRectangle clientArea = getClientArea();", "+\tif (vertical || !isFixedLineHeight()) {", "+\t\tScrollBar verticalBar = getVerticalBar();", "+\t\tif (verticalBar != null) {", "+\t\t\tint maximum = lineCache.getTotalHeight();", "+\t\t\t// only set the real values if the scroll bar can be used ", "+\t\t\t// (ie. because the thumb size is less than the scroll maximum)", "+\t\t\t// avoids flashing on Motif, fixes 1G7RE1J and 1G5SE92", "+\t\t\tif (clientArea.height < maximum) {", "+\t\t\t\tverticalBar.setValues(", "+\t\t\t\t\tverticalBar.getSelection(),", "+\t\t\t\t\tverticalBar.getMinimum(),", "+\t\t\t\t\tmaximum,", "+\t\t\t\t\tclientArea.height,\t\t\t\t// thumb size", "+\t\t\t\t\tverticalBar.getIncrement(),", "+\t\t\t\t\tclientArea.height);\t\t\t\t// page size", "+\t\t\t} else if (verticalBar.getThumb() != inactive || verticalBar.getMaximum() != inactive) {", "+\t\t\t\tverticalBar.setValues(", "+\t\t\t\t\tverticalBar.getSelection(),", "+\t\t\t\t\tverticalBar.getMinimum(),", "+\t\t\t\t\tinactive,", "+\t\t\t\t\tinactive,", "+\t\t\t\t\tverticalBar.getIncrement(),", "+\t\t\t\t\tinactive);", "+\t\t\t}", "+\t\t}", "+\t}", "+\tScrollBar horizontalBar = getHorizontalBar();", "+\tif (horizontalBar != null && horizontalBar.getVisible()) {", "+\t\tint maximum = lineCache.getWidth();", "+\t\tif (clientArea.width < maximum) {", "+\t\t\thorizontalBar.setValues(", "+\t\t\t\thorizontalBar.getSelection(),", "+\t\t\t\thorizontalBar.getMinimum(),", "+\t\t\t\tclientArea.width - leftMargin - rightMargin,\t// thumb size", "+\t\t\t\thorizontalBar.getIncrement(),", "+\t\t\t\tclientArea.width - leftMargin - rightMargin);\t// page size", "+\t\t} else if (horizontalBar.getThumb() != inactive || horizontalBar.getMaximum() != inactive) {", "+\t\t\thorizontalBar.setValues(", "+\t\t\t\thorizontalBar.getSelection(),", "+\t\t\t\thorizontalBar.getMinimum(),", "+\t\t\t\thorizontalBar.getIncrement(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "885d1dcb04f391a08466d56b0e73da38", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "635a9e5d0a5f495ec272194dbb750eddc745876f", "commitAfterChange": "e83d77b7ddccf5500d06ea30a64ce0d090ac4b10", "methodNumberBeforeChange": 418, "methodNumberAfterChange": 286, "signatureBeforeChange": " void setScrollBars()", "signatureAfterChange": " void setScrollBars(boolean vertical)", "diff": ["-void setScrollBars() {", "-\tScrollBar verticalBar = getVerticalBar();", "-\t", "-\tif (verticalBar != null) {", "-\t\tRectangle clientArea = getClientArea();", "-\t\tfinal int INACTIVE = 1;", "-\t\tint maximum = content.getLineCount() * getVerticalIncrement();", "-\t\t", "+void setScrollBars(boolean vertical) {", "+\tint inactive = 1;", "+\tRectangle clientArea = getClientArea();", "+\tif (vertical || !isFixedLineHeight()) {", "+\t\tScrollBar verticalBar = getVerticalBar();", "+\t\tif (verticalBar != null) {", "+\t\t\tint maximum = renderer.getHeight();", "+\t\t\t// only set the real values if the scroll bar can be used ", "+\t\t\t// (ie. because the thumb size is less than the scroll maximum)", "+\t\t\t// avoids flashing on Motif, fixes 1G7RE1J and 1G5SE92", "+\t\t\tif (clientArea.height < maximum) {", "+\t\t\t\tverticalBar.setValues(", "+\t\t\t\t\tverticalBar.getSelection(),", "+\t\t\t\t\tverticalBar.getMinimum(),", "+\t\t\t\t\tmaximum,", "+\t\t\t\t\tclientArea.height,\t\t\t\t// thumb size", "+\t\t\t\t\tverticalBar.getIncrement(),", "+\t\t\t\t\tclientArea.height);\t\t\t\t// page size", "+\t\t\t} else if (verticalBar.getThumb() != inactive || verticalBar.getMaximum() != inactive) {", "+\t\t\t\tverticalBar.setValues(", "+\t\t\t\t\tverticalBar.getSelection(),", "+\t\t\t\t\tverticalBar.getMinimum(),", "+\t\t\t\t\tinactive,", "+\t\t\t\t\tinactive,", "+\t\t\t\t\tverticalBar.getIncrement(),", "+\t\t\t\t\tinactive);", "+\t\t\t}", "+\t\t}", "+\t}", "+\tScrollBar horizontalBar = getHorizontalBar();", "+\tif (horizontalBar != null && horizontalBar.getVisible()) {", "+\t\tint maximum = renderer.getWidth();", "-\t\tif (clientArea.height < maximum) {", "-\t\t\tverticalBar.setValues(", "-\t\t\t\tverticalBar.getSelection(),", "-\t\t\t\tverticalBar.getMinimum(),", "+\t\tif (clientArea.width < maximum) {", "+\t\t\thorizontalBar.setValues(", "+\t\t\t\thorizontalBar.getSelection(),", "+\t\t\t\thorizontalBar.getMinimum(),", "-\t\t\t\tclientArea.height,\t\t\t\t// thumb size", "-\t\t\t\tverticalBar.getIncrement(),", "-\t\t\t\tclientArea.height);\t\t\t\t// page size", "+\t\t\t\tclientArea.width - leftMargin - rightMargin,\t// thumb size", "+\t\t\t\thorizontalBar.getIncrement(),", "+\t\t\t\tclientArea.width - leftMargin - rightMargin);\t// page size", "+\t\t} else if (horizontalBar.getThumb() != inactive || horizontalBar.getMaximum() != inactive) {", "+\t\t\thorizontalBar.setValues(", "+\t\t\t\thorizontalBar.getSelection(),", "+\t\t\t\thorizontalBar.getMinimum(),", "+\t\t\t\tinactive,", "+\t\t\t\tinactive,", "+\t\t\t\thorizontalBar.getIncrement(),", "+\t\t\t\tinactive);", "-\t\telse", "-\t\tif (verticalBar.getThumb() != INACTIVE || verticalBar.getMaximum() != INACTIVE) {", "-\t\t\tverticalBar.setValues(", "-\t\t\t\tverticalBar.getSelection(),", "-\t\t\t\tverticalBar.getMinimum(),", "-\t\t\t\tINACTIVE,", "-\t\t\t\tINACTIVE,", "-\t\t\t\tverticalBar.getIncrement(),", "-\t\t\t\tINACTIVE);", "-\t\t}\t\t", "-\tsetHorizontalScrollBar();"]}], "num": 4783}