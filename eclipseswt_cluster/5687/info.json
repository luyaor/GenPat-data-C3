{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c8c44327cbe9bd2f98fbad5dc54b73a7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f77bab97440225b621ef84b9afed9890", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void deselectAll()", "signatureAfterChange": " public void deselectAll ()", "diff": ["+}", "+public void deselectAll () {", "+\tcheckWidget ();", "+\tTreeItem[] oldSelection = selectedItems;", "+\tselectedItems = new TreeItem[0];", "+\tfor (int i = 0; i < oldSelection.length; i++) {", "+\t\tredrawItem (oldSelection[i].availableIndex);", "+\t}", "+}", "- */", "-public void deselectAll() {", "-\tcheckWidget();", "-\tgetRoot().deselectAll();", "-\tgetSelectionVector().removeAllElements();", "-\tredraw();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52944a8e46b67a85494bf4d59ff3a03c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void deselectAll()", "signatureAfterChange": " public void deselectAll ()", "diff": ["+}", "+public void deselectAll () {", "+\tcheckWidget ();", "+\tTableItem[] oldSelection = selectedItems;", "+\tselectedItems = new TableItem [0];", "+\tif (hasFocus () || (style & SWT.HIDE_SELECTION) == 0) {", "+\t\tfor (int i = 0; i < oldSelection.length; i++) {", "+\t\t\tredrawItem (oldSelection [i].index, true);", "-public void deselectAll() {", "-\tcheckWidget();", "-\tdeselectAllExcept((SelectableItem) null);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13467b05b916f3b81ec7324935dc6b51", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/PromptService2.java", "commitBeforeChange": "dbe4ba24f0b783e6635d821a2ef5e235bb415b46", "commitAfterChange": "20e0dff180bb263cd11d218fdc2b29a26dc02836", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "  int Alert (int aParent, int aDialogTitle, int aText)", "signatureAfterChange": "  int Alert (int aParent, int aDialogTitle, int aText)", "diff": ["-\tif (textLabel.indexOf (\"ssl_error_bad_cert_domain\") != -1 ||", "-\t\ttextLabel.indexOf (\"sec_error_ca_cert_invalid\") != -1 ||", "-\t\ttextLabel.indexOf (\"sec_error_unknown_issuer\") != -1 ||", "-\t\ttextLabel.indexOf (\"sec_error_untrusted_issuer\") != -1 ||", "-\t\ttextLabel.indexOf (\"sec_error_expired_certificate\") != -1) { //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$", "-\t\t\tif (browser != null) {", "+\tif (browser != null) {", "+\t\tfor (int i = 0; i < certErrorCodes.length; i++) {", "+\t\t\tif (textLabel.indexOf (certErrorCodes[i]) != -1) {", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e71e37deb35fb81816646b30db831733", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGenerator.java", "commitBeforeChange": "34830c5ea1d64c3a02443211fb13e925cac126f1", "commitAfterChange": "4e64580ba3040d30ac205fe496a0b9154e6fedb9", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 16, "signatureBeforeChange": "  public Node getNameAttribute(Node node)", "signatureAfterChange": "  public Node getIDAttribute(Node node)", "diff": ["-public Node getNameAttribute(Node node) {", "+public Node getIDAttribute(Node node) {", "-\tNode nameAttrib = attributes.getNamedItem(\"name\");", "-\tif (nameAttrib == null) nameAttrib = attributes.getNamedItem(\"selector\");", "-\tif (nameAttrib == null) nameAttrib = attributes.getNamedItem(\"path\");", "-\treturn nameAttrib;", "+\tString[] names = getIDAttributeNames();", "+\tfor (int i = 0; i < names.length; i++) {", "+\t\tNode nameAttrib = attributes.getNamedItem(\"name\");", "+\t\tif (nameAttrib != null) return nameAttrib;", "+\t}", "+\treturn null;"]}], "num": 5687}