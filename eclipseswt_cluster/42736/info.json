{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5d31ba2f63ccf19d49eb2804ebbbb230", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9a9cdc2d951d19cfdd87b5d410ea75e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "f4bb8ef7d86d4b06d34d232ac624ae216be4183a", "commitAfterChange": "358e077459326bfde3a675b949aa20349d21bc3d", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 92, "signatureBeforeChange": "  void setField(int fieldName, int value)", "signatureAfterChange": "  void setFieldOfInternalDataStructure (int fieldName, int value)", "diff": ["-void setField(int fieldName, int value) {", "-\tif (calendar.get(fieldName) == value) return;", "+void setFieldOfInternalDataStructure (int fieldName, int value) {", "+\tif (calendar.get (fieldName) == value) return;", "-\t\tcalendar.roll(Calendar.HOUR_OF_DAY, 12); // TODO: needs more work for setFormat and locale", "+\t\tcalendar.roll (Calendar.HOUR_OF_DAY, 12); // TODO: needs more work for setFormat and locale", "-\tcalendar.set(fieldName, value);", "-\tsendSelectionEvent (SWT.Selection);", "-}", "+\tcalendar.set (fieldName, value);", "+\t//When dealing with months with 31 days and have days set to 31, then if you change the month", "+\t//to one that has 30 (or less) days, then in calendar only the day is changed but the month stays.", "+\t//e.g 10.31.2014  -> decrement month, becomes:", "+\t//    10.01.2014.", "+\t//To get around this behaviour, we set the field again.", "+\tif (calendar.get (fieldName) != value) {", "+\t\tcalendar.set (fieldName, value);", "+\tsendSelectionEvent (SWT.Selection);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4eb61ea47dbe14fb4ce996acc39391c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/datetime/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "106e75d0005b8da98a4f16e00227f3cd79357c2e", "commitAfterChange": "dff636e5b88fb3260b1e860ad0eb2c57a3c776e3", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 46, "signatureBeforeChange": "  void setTextField(int fieldName, int value, boolean commit)", "signatureAfterChange": "  void setTextField(int fieldName, int value, boolean commit, boolean adjustMonth)", "diff": ["-void setTextField(int fieldName, int value, boolean commit) {", "-\tint max = calendar.getActualMaximum(fieldName);", "-\tint min = calendar.getActualMinimum(fieldName);", "-\tif (fieldName == Calendar.YEAR) {", "-\t\tmax = 9999;", "-\t\tmin = 1000;", "-\t}", "-\tif (value > max) value = min; // wrap", "+void setTextField(int fieldName, int value, boolean commit, boolean adjustMonth) {", "+\t\tint max = calendar.getActualMaximum(fieldName);", "+\t\tint min = calendar.getActualMinimum(fieldName);", "-\t\t\t/* Special case: convert 2-digit years into reasonable 4-digit years. */", "+\t\t\t/* Special case: don't allow more than 4-digit years. */", "+\t\t\tmax = 9999;", "+\t\t\t/* Special case: convert 1 or 2-digit years into reasonable 4-digit years. */", "+\t\tif (value > max) value = min; // wrap", "-\t\tStringBuffer buffer = new StringBuffer(String.valueOf(value));", "+\t\tStringBuffer buffer = new StringBuffer(String.valueOf(fieldName == Calendar.MONTH && adjustMonth ? value + 1 : value));"]}], "num": 42736}