{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c39c5a30866085eba25d1b1f3c88134f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66eee0f01f04ebf99cc835037b7687a1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "dea4757e69a568e0c0a44a67815756ef9e01618f", "commitAfterChange": "212ff4fbf0b1b449d7f0438bdb39966b0b2ad333", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public Object getContents(Transfer transfer, int clipboards)", "signatureAfterChange": " public Object getContents(Transfer transfer, int clipboards)", "diff": ["-\tint[] typeIds = transfer.getTypeIds();", "-\t// get data from system clipboard", "-\tfor (int i=0; i<typeIds.length; i++) {", "+\tString[] typeNames = transfer.getTypeNames();", "+\tNSMutableArray types = NSMutableArray.arrayWithCapacity(typeNames.length);", "+\tfor (int i = 0; i < typeNames.length; i++) {", "+\t\ttypes.addObject(NSString.stringWith(typeNames[i]));", "+\t}", "+\tNSString type = pasteboard.availableTypeFromArray(types);", "+\tif (type != null) {", "-\t\tString type = Transfer.types[typeIds[i]];", "-\t\tNSString dataType = NSString.stringWith(type);", "-\t\tif (dataType.isEqual(OS.NSStringPboardType) ||", "-\t\t\t\tdataType.isEqual(OS.NSRTFPboardType)) {", "-\t\t\ttdata.data = pasteboard.stringForType(dataType);", "-\t\t} else if (dataType.isEqual(OS.NSFilenamesPboardType)) {", "-\t\t\ttdata.data = new NSArray(pasteboard.propertyListForType(dataType).id);", "+\t\tif (type.isEqual(OS.NSStringPboardType) || type.isEqual(OS.NSRTFPboardType)) {", "+\t\t\ttdata.data = pasteboard.stringForType(type);", "+\t\t} else if (type.isEqual(OS.NSFilenamesPboardType)) {", "+\t\t\ttdata.data = new NSArray(pasteboard.propertyListForType(type).id);", "-\t\t\ttdata.data = pasteboard.dataForType(dataType);", "+\t\t\ttdata.data = pasteboard.dataForType(type);", "-\t\t\ttdata.type = type;\t\t", "+\t\t\ttdata.type = Transfer.getString(type);\t\t", "-\treturn null;\t// No data available for this transfer", "+\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7defea8ce6106f34f87d82e96acc1da7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "9897614cc57b96bb97451125093fad1bcc2e945a", "commitAfterChange": "856f6a008a0ed77a41d39123c5600a8b16c79156", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " public void getClipping(Region region)", "signatureAfterChange": " public void getClipping(Region region)", "diff": ["+\tif (region.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "-\tint width = 0, height = 0;", "-\tif (data.control != 0) {", "-\t\tbounds = new Rect();", "-\t\tOS.GetControlBounds(data.control, bounds);", "-\t\twidth = bounds.right - bounds.left;", "-\t\theight = bounds.bottom - bounds.top;", "-\t} else {", "-\t\tif (data.image != null) {", "-\t\t\tint image = data.image.handle;", "-\t\t\twidth = OS.CGImageGetWidth(image);", "-\t\t\theight = OS.CGImageGetHeight(image);", "-\t\t}", "-\t}", "-\tOS.SetRectRgn(clipping, (short)0, (short)0, (short)width, (short)height);", "-\tif (data.clipRgn != 0) OS.SectRgn(data.clipRgn, clipping, clipping);", "-\tif (data.visibleRgn != 0) {", "-\t\t// Note that bounds has the control bounds", "+\tif (data.clipRgn == 0) {", "+\t\tint width = 0, height = 0;", "+\t\tif (data.control != 0) {", "+\t\t\tif (bounds == null) bounds = new Rect();", "+\t\t\tOS.GetControlBounds(data.control, bounds);", "+\t\t\twidth = bounds.right - bounds.left;", "+\t\t\theight = bounds.bottom - bounds.top;", "+\t\t} else {", "+\t\t\tif (data.image != null) {", "+\t\t\t\tint image = data.image.handle;", "+\t\t\t\twidth = OS.CGImageGetWidth(image);", "+\t\t\t\theight = OS.CGImageGetHeight(image);", "+\t\t\t}", "+\t\t}", "+\t\tOS.SetRectRgn(clipping, (short)0, (short)0, (short)width, (short)height);", "+\t} else {", "+\t\tOS.CopyRgn(data.clipRgn, clipping);", "+\t}", "+\tif (data.paintEvent != 0 && data.visibleRgn != 0) {", "+\t\tif (bounds == null) bounds = new Rect();", "+\t\tOS.GetControlBounds(data.control, bounds);"]}], "num": 16230}