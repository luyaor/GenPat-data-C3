{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc93992e9e8266aebdfa37a12d32ee1e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdbd69e104d76a35ec4f78a31837797e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "48512dc20e32e369917d3e1ccfb92109c9724e7e", "commitAfterChange": "1942f64e0b774317e0a8e6ec44902bb736bb7790", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 46, "signatureBeforeChange": " public void setItems (String [] items)", "signatureAfterChange": " public void setItems (String [] items)", "diff": ["-\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);", "-\tGtkCombo combo = new GtkCombo ();", "-\tOS.memmove (combo, handle, GtkCombo.sizeof);", "+\t/*if (items == null) error (SWT.ERROR_NULL_ARGUMENT);", "-\t\tOS.gtk_list_clear_items (combo.list, 0, -1);", "+\t\tOS.gtk_list_clear_items (listHandle, 0, -1);", "-\t\tOS.gtk_signal_handler_block_by_data (combo.entry, SWT.Modify);", "-\t\tOS.gtk_signal_handler_block_by_data (combo.list, SWT.Selection);", "+\t\tOS.gtk_signal_handler_block_by_data (entryHandle, SWT.Modify);", "+\t\tOS.gtk_signal_handler_block_by_data (listHandle, SWT.Selection);", "-\t\tOS.gtk_signal_handler_unblock_by_data (combo.entry, SWT.Modify);", "-\t\tOS.gtk_signal_handler_unblock_by_data (combo.list, SWT.Selection);", "+\t\tOS.gtk_signal_handler_unblock_by_data (entryHandle, SWT.Modify);", "+\t\tOS.gtk_signal_handler_unblock_by_data (listHandle, SWT.Selection);", "-\tOS.gtk_signal_handler_block_by_data (combo.entry, SWT.Modify);", "-\tOS.gtk_editable_delete_text (combo.entry, 0, -1);", "-\tOS.gtk_signal_handler_unblock_by_data (combo.entry, SWT.Modify);", "+\tOS.gtk_signal_handler_block_by_data (entryHandle, SWT.Modify);", "+\tOS.gtk_editable_delete_text (entryHandle, 0, -1);", "+\tOS.gtk_signal_handler_unblock_by_data (entryHandle, SWT.Modify);*/"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f0526f8edc2db14cc8a022b6720ac53", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet81.java", "commitBeforeChange": "375593ba6653fa81268e5bfbc6bd7fb0a56adba8", "commitAfterChange": "e6eb766a2038772f65838e7318fd88d276ff6dc3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public static void main(String[] args)", "signatureAfterChange": " \t public static void main(String[] args)", "diff": ["+\tprintTypeInfo(auto);", "+\t", "+\tauto.dispose();", "+\tshell.dispose();", "+", "+}", "-\t\tif (typeattr.cFuncs > 0) System.out.println(\"Functions for \"+progID+\" :\\n\");", "-\t\tif (typeattr.cVars > 0) System.out.println(\"\\n\\nVariables for \"+progID+\" :\\n\");", "-\t", "-\tauto.dispose();", "-\tshell.dispose();", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d063e80e04f7ac0f86058eb3fffed6f9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/ScrolledComposite.java", "commitBeforeChange": "e43eb9c5e299ed9ea8560b4ae686437d38c1b11d", "commitAfterChange": "60cb3abaa6f78b5ef97c927d21b0f5d578d08710", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r \r private void resize()", "signatureAfterChange": "\r \r private void resize()", "diff": ["-private void resize() {\r", "-\tif (content == null || inResize) return;\r", "-\tinResize = true;\r", "-\tRectangle contentRect = content.getBounds();\r", "-\tcontentRect.x = contentRect.y = 0;\r", "-\t\r", "-\t\t\tif (hPage <= 0) hSelection = 0;\r", "-\t\t\tif (vPage <= 0) vSelection = 0;\r", "+\r", "+private void resize() {\r", "+\tif (inResize) return;\r", "+\tinResize = true;\r", "+\tlayout();\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d896dc487e4c1defc14b7272aef56cc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/FontData.java", "commitBeforeChange": "ff7a7565646414b3418637259a20a7e8cc0d7d33", "commitAfterChange": "625d7442af2e067cc40f25eb22b19ef7acd83ba7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \t\r FontData(byte[] stem)", "signatureAfterChange": "\r \t\r FontData(byte[] stem)", "diff": ["-\t\treturn;\r", "-\t}\r", "-\t/*\r", "-\t* For some reason, PfDecomposeStemToID sometimes fails to decompose\r", "-\t* a valid stem (e.g. TextFont09bi).\r", "-\t*/\r", "-\tFontQueryInfo info = new FontQueryInfo();\r", "-\tif (OS.PfQueryFontInfo(stem, info) == 0) {\r", "-\t\tthis.stem = info.font;\r", "-\t\tchar[] chars = Converter.mbcsToWcs(null, info.desc);\r", "-\t\tint index = 0;\r", "-\t\twhile (index < chars.length) {\r", "-\t\t\tif (chars[index] == 0) break;\r", "-\t\t\tindex++;\r", "-\t\t}\r", "-\t\tname = new String(chars, 0, index);\r", "-\t\tif ((info.style & OS.PHFONT_INFO_PLAIN) != 0) style = SWT.NORMAL;\r", "-\t\telse if ((info.style & OS.PHFONT_INFO_BOLD) != 0) style = SWT.BOLD;\r", "-\t\telse if ((info.style & OS.PHFONT_INFO_ITALIC) != 0) style = SWT.ITALIC;\r", "-\t\telse if ((info.style & OS.PHFONT_INFO_BLDITC) != 0) style = SWT.BOLD | SWT.ITALIC;\r", "-\t\telse style = SWT.NORMAL;\r", "-\t\t/*\r", "-\t\t* For some reason, PfQueryFontInfo sometimes does not\r", "-\t\t* set the size of the font.  In that case, the size is\r", "-\t\t* parsed from the stem.\r", "-\t\t*/\r", "-\t\tif (info.size != 0) {\r", "-\t\t\theight = info.size;\r", "-\t\t} else {\r", "-\t\t\tchars = Converter.mbcsToWcs(null, this.stem);\r", "-\t\t\tindex = 0;\r", "-\t\t\twhile (index < chars.length) {\r", "-\t\t\t\tif (chars[index] == 0) break;\r", "-\t\t\t\tindex++;\r", "-\t\t\t}\r", "-\t\t\tString fontName = new String(chars, 0, index);\r", "-\t\t\tint end = fontName.length();\r", "-\t\t\tfor (int i = end - 1; i >= 0; i--) {\r", "-\t\t\t\tif (Character.isDigit(fontName.charAt(i))) break;\r", "-\t\t\t\tend--;\r", "-\t\t\t}\r", "-\t\t\tint start = end;\r", "-\t\t\tfor (int i = end - 1; i >= 0; i--) {\r", "-\t\t\t\tif (!Character.isDigit(fontName.charAt(i))) break;\r", "-\t\t\t\tstart--;\r", "-\t\t\t}\r", "-\t\t\ttry {\r", "-\t\t\t\theight = Integer.parseInt(fontName.substring(start, end));\r", "-\t\t\t} catch (NumberFormatException e) {}\r", "-\t\t}\r"]}], "num": 42143}