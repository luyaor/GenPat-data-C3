{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9048f187dc1c80a493aa4070569aa546", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "461d0214ffd393664c684425ddf900cc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 46, "signatureBeforeChange": " public Control getFocusControl ()", "signatureAfterChange": "  Control getFocusControl (int window)", "diff": ["- */", "-\t/* AW", "-\tint [] buffer1 = new int [1], buffer2 = new int [1];", "-\tOS.XGetInputFocus (xDisplay, buffer1, buffer2);", "-\tint xWindow = buffer1 [0];", "-\tif (xWindow == 0) return null;", "-\tint handle = OS.XtWindowToWidget (xDisplay, xWindow);", "-\tif (handle == 0) return null;", "-\thandle = OS.XmGetFocusWidget (handle);", "-\t*/", "-\tint handle= fFocusControl;", "-\tif (handle == 0) return null;", "+", "+Control getFocusControl (int window) {", "+\tint [] theControl = new int [1];", "+\tOS.GetKeyboardFocus (window, theControl);", "+\tif (theControl [0] == 0) return null;", "-\t\tWidget widget = WidgetTable.get (handle);", "-\t\tif (widget instanceof Control) {", "-\t\t\tControl window = (Control) widget;", "-\t\t\tif (window.getEnabled ()) return window;", "+\t\tWidget widget = WidgetTable.get (theControl [0]);", "+\t\tif (widget != null && widget instanceof Control) {", "+\t\t\tControl control = (Control) widget;", "+\t\t\tif (control.getEnabled ()) return control;", "-\t} while ((handle = MacUtil.getSuperControl (handle)) != 0);", "+\t\tOS.GetSuperControl (theControl [0], theControl);", "+\t} while (theControl [0] != 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b240ca1fb01cc52ba8eb3e73b9235b66", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "4db2cb1cd98fec28195d6b595ce774a5c68287ed", "commitAfterChange": "91b1baf5f70f48a18f69862d6a469a1edf869722", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  long checkIfEventProc (long display, long xEvent, long userData)", "signatureAfterChange": "  long checkIfEventProc (long display, long xEvent, long userData)", "diff": ["-\t\tcase OS.VisibilityNotify:", "-\t\t\t/*", "-\t\t\t* As of GTK 2.17.11, obscured controls no longer send expose", "-\t\t\t* events. It is no longer necessary to track visiblity notify", "-\t\t\t* events.", "-\t\t\t*/", "-\t\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 17, 11)) return 0;", "-\t\t\tbreak;", "-\t\t}", "-\t\tcase OS.VisibilityNotify: {", "-\t\t\tOS.memmove (visibilityEvent, xEvent, XVisibilityEvent.sizeof);", "-\t\t\tOS.gdk_window_get_user_data (window, flushData);", "-\t\t\tlong /*int*/ handle = flushData [0];", "-\t\t\tWidget widget = handle != 0 ? getWidget (handle) : null;", "-\t\t\tif (widget != null && widget instanceof Control) {", "-\t\t\t\tControl control = (Control) widget;", "-\t\t\t\tif (window == control.paintWindow ()) {", "-\t\t\t\t\tif (visibilityEvent.state == OS.VisibilityFullyObscured) {", "-\t\t\t\t\t\tcontrol.state |= Widget.OBSCURED;", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tcontrol.state &= ~Widget.OBSCURED;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}"]}], "num": 55931}