{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "77d7caecef872fd906983d63c535daa5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cc2830bd46376de378e0587cba73769", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextBidi.java", "commitBeforeChange": "fa823c434008ea53c7f2ea796b1cfcbe3b183518", "commitAfterChange": "13552ff33b940b98db338e6cce2fcef14a9bfd3a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public StyledTextBidi(GC gc, int tabWidth, String text, int[] boldRanges, Font boldFont, int[] offsets)", "signatureAfterChange": "\r public StyledTextBidi(GC gc, int tabWidth, String text, StyleRange[] ranges, Font boldFont, Font italicFont, int[] offsets)", "diff": ["-public StyledTextBidi(GC gc, int tabWidth, String text, int[] boldRanges, Font boldFont, int[] offsets) {\r", "+public StyledTextBidi(GC gc, int tabWidth, String text, StyleRange[] ranges, Font boldFont, Font italicFont, int[] offsets) {\r", "-\t\tif (boldRanges != null) {\r", "-\t\t\tFont normalFont = gc.getFont();\r", "-\t\t\tgc.setFont(boldFont);\r", "-\t\t\t// If the font supports characters shaping, break up the bold ranges based on \r", "+\t\tif (ranges != null) {\r", "+\t\t\t// If the font supports characters shaping, break up the bold/italic ranges based on \r", "-\t\t\t// for bold purposes.\r", "-\t\t\tint[] segmentedBoldRanges;\r", "-\t\t\tif (isCharacterShaped(gc)) segmentedBoldRanges = segmentedRangesFor(boldRanges);\r", "-\t\t\telse segmentedBoldRanges = boldRanges;\r", "-\t\t\tfor (int i = 0; i < segmentedBoldRanges.length; i += 2) {\r", "-\t\t\t\tint rangeStart = segmentedBoldRanges[i];\r", "-\t\t\t\tint rangeLength = segmentedBoldRanges[i + 1];\r", "-\t\t\t\t// Bold text needs to be processed so that the dx array reflects the bold\r", "+\t\t\t// for bold/italic purposes.\r", "+\t\t\tStyleRange[] segmentedRanges;\r", "+\t\t\tif (isCharacterShaped(gc)) segmentedRanges = segmentedRangesFor(ranges);\r", "+\t\t\telse segmentedRanges = ranges;\r", "+\t\t\tFont normalFont = gc.getFont();\r", "+\t\t\tint previousStyle = -1;\r", "+\t\t\tfor (int i = 0; i < segmentedRanges.length; i++) {\r", "+\t\t\t\tStyleRange segmentedRange = segmentedRanges[i];\r", "+\t\t\t\tif (segmentedRange.fontStyle != previousStyle) {\r", "+\t\t\t\t\tif (segmentedRange.fontStyle == SWT.ITALIC) gc.setFont(italicFont);\r", "+\t\t\t\t\telse gc.setFont(boldFont);\r", "+\t\t\t\t}\r", "+\t\t\t\tint rangeStart = segmentedRange.start;\r", "+\t\t\t\tint rangeLength = segmentedRange.length;\r", "+\t\t\t\t// Bold/italic text needs to be processed so that the dx array reflects the bold\r", "-\t\t\t\tprepareBoldText(text, rangeStart, rangeLength);\r", "+\t\t\t\tprepareFontStyledText(text, rangeStart, rangeLength);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a211be992f3ba20da9c523d0eff62094", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextBidi.java", "commitBeforeChange": "1e89ac7d2c26bf84f80c2bfc257d4cec8fca4913", "commitAfterChange": "33c33a3bdd089f30da56054b30ca1637d9ac777a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public StyledTextBidi(GC gc, int tabWidth, String text, StyleRange[] ranges, Font boldFont, Font italicFont, int[] offsets)", "signatureAfterChange": "\r public StyledTextBidi(GC gc, int tabWidth, String text, StyleRange[] ranges, Font boldFont, int[] offsets)", "diff": ["-public StyledTextBidi(GC gc, int tabWidth, String text, StyleRange[] ranges, Font boldFont, Font italicFont, int[] offsets) {\r", "+public StyledTextBidi(GC gc, int tabWidth, String text, StyleRange[] ranges, Font boldFont, int[] offsets) {\r", "-\t\t\t// If the font supports characters shaping, break up the bold/italic ranges based on \r", "+\t\t\t// If the font supports characters shaping, break up the font style ranges based on \r", "-\t\t\t// for bold/italic purposes.\r", "+\t\t\t// for font style purposes.\r", "-\t\t\tint previousStyle = -1;\r", "+\t\t\tgc.setFont(boldFont);\r", "-\t\t\t\tif (segmentedRange.fontStyle != previousStyle) {\r", "-\t\t\t\t\tif (segmentedRange.fontStyle == SWT.ITALIC) gc.setFont(italicFont);\r", "-\t\t\t\t\telse gc.setFont(boldFont);\r", "-\t\t\t\t}\r", "-\t\t\t\t// Bold/italic text needs to be processed so that the dx array reflects the bold\r", "+\t\t\t\t// Font styled text needs to be processed so that the dx array reflects the styled\r"]}], "num": 43703}