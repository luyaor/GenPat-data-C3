{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a3fdb964792d439790c19df6c41a903", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5520cdb1491a99ddcb92c1b53593fd52", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 358, "methodNumberAfterChange": 358, "signatureBeforeChange": " \tint get_rowHeaderCells(int ppCellAccessibles, int pNRowHeaderCells)", "signatureAfterChange": " \tint get_rowHeaderCells(long ppCellAccessibles, long pNRowHeaderCells)", "diff": ["-\tint get_rowHeaderCells(int /*long*/ ppCellAccessibles, int /*long*/ pNRowHeaderCells) {", "+\tint get_rowHeaderCells(long /*int*/ ppCellAccessibles, long /*int*/ pNRowHeaderCells) {", "-\t\t\tCOM.MoveMemory(ppCellAccessibles, new int /*long*/[] { 0 }, OS.PTR_SIZEOF);", "+\t\t\tCOM.MoveMemory(ppCellAccessibles, new long /*int*/[] { 0 }, OS.PTR_SIZEOF);", "-\t\tint /*long*/ pv = COM.CoTaskMemAlloc(length * OS.PTR_SIZEOF);", "+\t\tlong /*int*/ pv = COM.CoTaskMemAlloc(length * OS.PTR_SIZEOF);", "-\t\t\t\tCOM.MoveMemory(pv + i * OS.PTR_SIZEOF, new int /*long*/[] { accessible.getAddress() }, OS.PTR_SIZEOF);", "+\t\t\t\tCOM.MoveMemory(pv + i * OS.PTR_SIZEOF, new long /*int*/[] { accessible.getAddress() }, OS.PTR_SIZEOF);", "-\t\tCOM.MoveMemory(ppCellAccessibles, new int /*long*/ [] { pv }, OS.PTR_SIZEOF);", "+\t\tCOM.MoveMemory(ppCellAccessibles, new long /*int*/ [] { pv }, OS.PTR_SIZEOF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61ab488c4589d5957d9a8b069cf72fa9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 355, "methodNumberAfterChange": 355, "signatureBeforeChange": " \tint get_columnHeaderCells(int ppCellAccessibles, int pNColumnHeaderCells)", "signatureAfterChange": " \tint get_columnHeaderCells(long ppCellAccessibles, long pNColumnHeaderCells)", "diff": ["-\tint get_columnHeaderCells(int /*long*/ ppCellAccessibles, int /*long*/ pNColumnHeaderCells) {", "+\tint get_columnHeaderCells(long /*int*/ ppCellAccessibles, long /*int*/ pNColumnHeaderCells) {", "-\t\t\tCOM.MoveMemory(ppCellAccessibles, new int /*long*/[] { 0 }, OS.PTR_SIZEOF);", "+\t\t\tCOM.MoveMemory(ppCellAccessibles, new long /*int*/[] { 0 }, OS.PTR_SIZEOF);", "-\t\tint /*long*/ pv = COM.CoTaskMemAlloc(length * OS.PTR_SIZEOF);", "+\t\tlong /*int*/ pv = COM.CoTaskMemAlloc(length * OS.PTR_SIZEOF);", "-\t\t\t\tCOM.MoveMemory(pv + i * OS.PTR_SIZEOF, new int /*long*/[] { accessible.getAddress() }, OS.PTR_SIZEOF);", "+\t\t\t\tCOM.MoveMemory(pv + i * OS.PTR_SIZEOF, new long /*int*/[] { accessible.getAddress() }, OS.PTR_SIZEOF);", "-\t\tCOM.MoveMemory(ppCellAccessibles, new int /*long*/ [] { pv }, OS.PTR_SIZEOF);", "+\t\tCOM.MoveMemory(ppCellAccessibles, new long /*int*/ [] { pv }, OS.PTR_SIZEOF);"]}], "num": 42671}