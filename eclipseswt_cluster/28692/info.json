{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cf0e4d856df7c271f6afbb4508fff6d5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a525a231d3571472ffb92a413dd2fd9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/TableCursor.java", "commitBeforeChange": "8a9de9788694ec6068094dd7dbbf6980933f8157", "commitAfterChange": "e1489e9b81215ca1244a389d6ad6216d07a6b9c1", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 13, "signatureBeforeChange": "  void setRowColumn(int row, int column, boolean notify)", "signatureAfterChange": " void setRowColumn(int row, int column, boolean notify)", "diff": ["-", "+\tTableItem item = row == -1 ? null : table.getItem(row);", "+\tTableColumn col = column == -1 || table.getColumnCount() == 0 ? null : table.getColumn(column);", "+\tsetRowColumn(item, col, notify);", "+}", "-\tif (this.row != row && this.row != -1) {", "-\t\ttable.getItem(this.row).removeListener(SWT.Dispose, disposeItemListener);", "-\t\tthis.row = -1;", "-\tif (this.column != column && this.column != -1) {", "-\t\tTableColumn col = table.getColumn(this.column);", "-\t\tcol.removeListener(SWT.Dispose, disposeColumnListener);", "-\t\tcol.removeListener(SWT.Move, resizeListener);", "-\t\tcol.removeListener(SWT.Resize, resizeListener);", "-\t\tthis.column = -1;", "-\tint itemCount = table.getItemCount();", "-\tint columnCount = table.getColumnCount();", "-\tif (0 <= row && row < itemCount) {", "-\t\tif ((columnCount == 0 && column == 0) || (column < columnCount && column >= 0)) {", "-\t\t\tTableItem item = table.getItem(row);", "-\t\t\tif (this.row != row) {", "-\t\t\t\titem.addListener(SWT.Dispose, disposeItemListener);", "-\t\t\t\tthis.row = row;", "-\t\t\t\ttable.showItem(item);", "-\t\t\t}", "-\t\t\tif (this.column  != column) {", "-\t\t\t\tthis.column = column;", "-\t\t\t\tif (columnCount > 0) {", "-\t\t\t\t\tTableColumn col = table.getColumn(column);", "-\t\t\t\t\tcol.addListener(SWT.Dispose, disposeColumnListener);", "-\t\t\t\t\tcol.addListener(SWT.Move, resizeListener);", "-\t\t\t\t\tcol.addListener(SWT.Resize, resizeListener);", "-\t\t\t\t\ttable.showColumn(col);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tsetBounds(item.getBounds(column));", "-\t\t\tredraw();", "-\t\t\tif (notify) {", "-\t\t\t\tnotifyListeners(SWT.Selection, new Event());", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e73d71675900b6a5e6902dff49bf791", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 129, "methodNumberAfterChange": 128, "signatureBeforeChange": " boolean translateTraversal (MacEvent mEvent)", "signatureAfterChange": "  boolean traverseMnemonic (Event event)", "diff": ["-*/", "-boolean translateTraversal (MacEvent mEvent) {", "-\t", "-\tint kind= mEvent.getKind();", "-\tif (kind != OS.kEventRawKeyDown && kind != OS.kEventRawKeyRepeat)", "-\t\treturn false;", "-\tint detail = SWT.TRAVERSE_NONE;", "-\t/* AW", "-\tGdkEventKey keyEvent = new GdkEventKey ();", "-\tOS.memmove (keyEvent, gdkEvent, GdkEventKey.sizeof);", "-\tint key = keyEvent.keyval;", "-\tint code = traversalCode (key, gdkEvent);", "-\tint [] state = new int [1];", "-\tOS.gdk_event_get_state (gdkEvent, state);", "-\t*/", "-\tint code= traversalCode ();", "-\tint key= mEvent.getKeyCode();", "-\tint state= mEvent.getStateMask();", "-\tboolean all = false;", "-\tswitch (key) {", "-\t\tcase 53 /* OS.GDK_Escape:", "-\t\tcase OS.GDK_Cancel */: {", "-\t\t\tall = true;", "-\t\t\tdetail = SWT.TRAVERSE_ESCAPE;", "-\t\t\tbreak;", "-\t\t}", "-\t\tcase 36 /* OS.GDK_Return */ : {", "-\t\t\tall = true;", "-\t\t\tdetail = SWT.TRAVERSE_RETURN;", "-\t\t\tbreak;", "-\t\t}", "-\t\t//case OS.GDK_ISO_Left_Tab: ", "-\t\tcase 48 /* OS.GDK_Tab */ : {", "-\t\t\tboolean next = (state & SWT.SHIFT) == 0;", "-\t\t\t/*", "-\t\t\t* NOTE: This code causes Shift+Tab and Ctrl+Tab to", "-\t\t\t* always attempt traversal which is not correct.", "-\t\t\t* The default should be the same as a plain Tab key.", "-\t\t\t* This behavior is currently relied on by StyledText.", "-\t\t\t* ", "-\t\t\t* The correct behavior is to give every key to any", "-\t\t\t* control that wants to see every key.  The default", "-\t\t\t* behavior for a Canvas should be to see every key.", "-\t\t\t*/", "-\t\t\t/* AW", "-\t\t\tswitch (state [0]) {", "-\t\t\t\tcase OS.GDK_SHIFT_MASK:", "-\t\t\t\tcase OS.GDK_CONTROL_MASK:", "-\t\t\t\t\tcode |= SWT.TRAVERSE_TAB_PREVIOUS | SWT.TRAVERSE_TAB_NEXT;", "-\t\t\t}", "-\t\t\t*/", "-\t\t\tdetail = next ? SWT.TRAVERSE_TAB_NEXT : SWT.TRAVERSE_TAB_PREVIOUS;", "-\t\t\tbreak;", "-\t\t}", "-\t\tcase 126: // OS.GDK_Up:", "-\t\tcase 123: // OS.GDK_Left:", "-\t\t\tdetail = SWT.TRAVERSE_ARROW_PREVIOUS;", "-\t\t\tbreak;", "-\t\t\t", "-\t\tcase 125: // OS.GDK_Down:", "-\t\tcase 124: /* OS.GDK_Right: */", "-\t\t\tdetail = SWT.TRAVERSE_ARROW_NEXT;", "-\t\t\tbreak;", "-\t\t\t", "-\t\tcase 116: // OS.GDK_Page_Up:", "-\t\tcase 121: /* OS.GDK_Page_Down: */ {", "-\t\t\tall = true;", "-\t\t\t/* AW", "-\t\t\tif ((state [0] & OS.GDK_CONTROL_MASK) == 0) return false;", "-\t\t\t*/", "-\t\t\t/*", "-\t\t\t* NOTE: This code causes Ctrl+PgUp and Ctrl+PgDn to always", "-\t\t\t* attempt traversal which is not correct.  This behavior is", "-\t\t\t* currently relied on by StyledText.", "-\t\t\t* ", "-\t\t\t* The correct behavior is to give every key to any", "-\t\t\t* control that wants to see every key.  The default", "-\t\t\t* behavior for a Canvas should be to see every key.", "-\t\t\t*/", "-\t\t\tcode |= SWT.TRAVERSE_PAGE_NEXT | SWT.TRAVERSE_PAGE_PREVIOUS;", "-\t\t\tdetail = key == 121 ? SWT.TRAVERSE_PAGE_NEXT : SWT.TRAVERSE_PAGE_PREVIOUS;", "-\t\t\tbreak;", "-\t\t}", "-\t\tdefault:", "-\t\t\treturn false;", "-\t}", "-\t", "-\tEvent event = new Event ();", "-\tevent.doit = (code & detail) != 0;", "-\tevent.detail = detail;", "-\t/* AW", "-\tevent.time = keyEvent.time;", "-\tsetInputState (event, gdkEvent);", "-\t*/", "-\tShell shell = getShell ();", "-\tControl control = this;", "-\tdo {", "-\t\tif (control.traverse (event)) return true;", "-\t\tif (!event.doit && control.hooks (SWT.Traverse)) {", "-\t\t\treturn false;", "-\t\t}", "-\t\tif (control == shell) return false;", "-\t\tcontrol = control.parent;", "-\t} while (all && control != null);", "+\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b56b53dc325c1d18f93463ea164bcef5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "5a4fa4a8c4e10816a9b61efcdce7e5cba702df63", "commitAfterChange": "810a097e8f8448627c3a5454d747ec2c1e1bca6b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam)", "signatureAfterChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam)", "diff": ["+\treturn callWindowProc (hwnd, msg, wParam, lParam, false);", "+}", "-\t\tif (wasSelected) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65cbca0a7f053299f0eb4bd343c1cca4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "cc0fad88555aedea732afabf4f640a307f9e13a1", "commitAfterChange": "6cafe1a53c0f4db15b7c20ac96efa6457f877696", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "  void fillBackground (NSView view, NSGraphicsContext context, NSRect rect, int imgHeight)", "signatureAfterChange": "  void fillBackground (NSView view, NSGraphicsContext context, NSRect rect, int imgHeight)", "diff": ["+\tfillBackground(view, context, rect, imgHeight, 0, 0);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c396af90122b71f67cefc176026f99d6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/GraphicsExample.java", "commitBeforeChange": "b6e03a2efa6ef9d0f4dfe067b326ab3c3a841d89", "commitAfterChange": "39018017158b28a3b9007750ab838f968fc19054", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public GraphicsExample(final Composite parent)", "signatureAfterChange": "  public GraphicsExample(final Composite parent)", "diff": ["-\tGridData data;", "-\tGridLayout layout = new GridLayout(3, false);", "-\tlayout.horizontalSpacing = 1;", "-\tparent.setLayout(layout);", "-\ttabs = createTabs();", "-\tcreateToolBar(parent);", "-\tcreateLeftPanel(parent);\t", "-\tvSash = new Sash(parent, SWT.VERTICAL);", "-\tcreateTabPanel(parent);", "-\t", "-\t// set toolBar layout data", "-\tdata = new GridData(SWT.FILL, SWT.CENTER, true, false);", "-\tdata.horizontalSpan = 3;", "-\ttoolBar.setLayoutData(data);", "-\t", "-\tdata = new GridData(SWT.CENTER, SWT.FILL, false, true);", "-\tleftPanel.setLayoutData(data);", "-\t", "-\t// set sash layout data", "-\tdata = new GridData(SWT.CENTER, SWT.FILL, false, true);", "-\tvSash.setLayoutData(data);", "-\t", "-\t// set rightPanel layout data", "-\tdata = new GridData(SWT.FILL, SWT.FILL, true, true);", "-\trightPanel.setLayoutData(data);", "-\t", "-\tvSash.addListener(SWT.Selection, new Listener() {", "-\t\tpublic void handleEvent(Event event) {", "-\t\t\tif (event.detail != SWT.DRAG) {", "-\t\t\t\tGridData data = (GridData)tabList.getLayoutData();", "-\t\t\t\tint widthHint = event.x - tabList.computeTrim(0, 0, 0, 0).width - 14;", "-\t\t\t\tdata.widthHint = widthHint;", "-\t\t\t\tdata = (GridData)tabDesc.getLayoutData();", "-\t\t\t\tdata.widthHint = widthHint;", "-\t\t\t\tparent.layout(true);", "-\t\t\t\tanimate = true;", "-\t\t\t} else {", "-\t\t\t\tanimate = false;", "-\t\t\t}", "-\t\t}", "-\t});", "+\tcreateControls(parent);"]}], "num": 28692}