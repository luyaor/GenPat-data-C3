{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5bb4046c62ed2ce03a281351d1695df5", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69548332731815ea28602e2133d13629", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/motif/org/eclipse/swt/browser/WindowCreator.java", "commitBeforeChange": "52d421691c8934819ff002e87fe87a962da98da1", "commitAfterChange": "c90c21a634fe9a89a57eed369d3d157891aa1a42", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  int CreateChromeWindow(int parent, int chromeFlags, int _retval)", "signatureAfterChange": "  int CreateChromeWindow(int parent, int chromeFlags, int _retval)", "diff": ["-\tif (parent == 0) return XPCOM.NS_ERROR_NOT_IMPLEMENTED;", "-\tnsIWebBrowserChrome browserChromeParent = new nsIWebBrowserChrome(parent);", "-\tint[] aWebBrowser = new int[1];", "-\tint rc = browserChromeParent.GetWebBrowser(aWebBrowser);", "-\tif (rc != XPCOM.NS_OK) Browser.error(rc);", "-\tif (aWebBrowser[0] == 0) Browser.error(XPCOM.NS_ERROR_NO_INTERFACE);", "-\t", "-\tnsIWebBrowser webBrowser = new nsIWebBrowser(aWebBrowser[0]);", "-\tint[] result = new int[1];", "-\trc = webBrowser.QueryInterface(nsIBaseWindow.NS_IBASEWINDOW_IID, result);", "-\tif (rc != XPCOM.NS_OK) Browser.error(rc);", "-\tif (result[0] == 0) Browser.error(XPCOM.NS_ERROR_NO_INTERFACE);", "-\twebBrowser.Release();", "-\t", "-\tnsIBaseWindow baseWindow = new nsIBaseWindow(result[0]);", "-\tresult[0] = 0;", "-\tint[] aParentNativeWindow = new int[1];", "-\trc = baseWindow.GetParentNativeWindow(aParentNativeWindow);", "-\tif (rc != XPCOM.NS_OK) Browser.error(rc);", "-\tif (aParentNativeWindow[0] == 0) Browser.error(XPCOM.NS_ERROR_NO_INTERFACE);", "-\tbaseWindow.Release();", "+\tif (parent == 0 && (chromeFlags & nsIWebBrowserChrome.CHROME_MODAL) == 0) {", "+\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;", "+\t}", "-\tDisplay display = Display.getCurrent();", "-\tBrowser src = Browser.findBrowser(aParentNativeWindow[0]);", "+\tBrowser src = null;", "+\tif (parent != 0) {", "+\t\tnsIWebBrowserChrome browserChromeParent = new nsIWebBrowserChrome(parent);", "+\t\tint[] aWebBrowser = new int[1];", "+\t\tint rc = browserChromeParent.GetWebBrowser(aWebBrowser);", "+\t\tif (rc != XPCOM.NS_OK) Browser.error(rc);", "+\t\tif (aWebBrowser[0] == 0) Browser.error(XPCOM.NS_ERROR_NO_INTERFACE);", "+", "+\t\tnsIWebBrowser webBrowser = new nsIWebBrowser(aWebBrowser[0]);", "+\t\tint[] result = new int[1];", "+\t\trc = webBrowser.QueryInterface(nsIBaseWindow.NS_IBASEWINDOW_IID, result);", "+\t\tif (rc != XPCOM.NS_OK) Browser.error(rc);", "+\t\tif (result[0] == 0) Browser.error(XPCOM.NS_ERROR_NO_INTERFACE);", "+\t\twebBrowser.Release();", "+", "+\t\tnsIBaseWindow baseWindow = new nsIBaseWindow(result[0]);", "+\t\tresult[0] = 0;", "+\t\tint[] aParentNativeWindow = new int[1];", "+\t\trc = baseWindow.GetParentNativeWindow(aParentNativeWindow);", "+\t\tif (rc != XPCOM.NS_OK) Browser.error(rc);", "+\t\tif (aParentNativeWindow[0] == 0) Browser.error(XPCOM.NS_ERROR_NO_INTERFACE);", "+\t\tbaseWindow.Release();", "+", "+\t\tsrc = Browser.findBrowser(aParentNativeWindow[0]);", "+\t}", "-\t\tfinal Shell shell = new Shell(src.getShell(), SWT.DIALOG_TRIM | SWT.APPLICATION_MODAL);", "+\t\tfinal Shell shell = src == null ?", "+\t\t\tnew Shell(SWT.DIALOG_TRIM | SWT.APPLICATION_MODAL) :", "+\t\t\tnew Shell(src.getShell(), SWT.DIALOG_TRIM | SWT.APPLICATION_MODAL);", "-\t\tevent.display = display;", "+\t\tevent.display = src.getDisplay();", "-\t\tfor (int i = 0; i < src.openWindowListeners.length; i++)", "+\t\tfor (int i = 0; i < src.openWindowListeners.length; i++) {", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e9a648ddf5ecb6d5e85d43d53370c2b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/mozilla/org/eclipse/swt/browser/WindowCreator.java", "commitBeforeChange": "af04b4714afaa5b0b6e71d9f7e9d42f7b7fe113a", "commitAfterChange": "52d421691c8934819ff002e87fe87a962da98da1", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  int CreateChromeWindow(int parent, int chromeFlags, int _retval)", "signatureAfterChange": "  int CreateChromeWindow(int parent, int chromeFlags, int _retval)", "diff": ["-\tif (parent == 0) return XPCOM.NS_ERROR_NOT_IMPLEMENTED;", "-\tnsIWebBrowserChrome browserChromeParent = new nsIWebBrowserChrome(parent);", "-\tint /*long*/[] aWebBrowser = new int /*long*/[1];", "-\tint rc = browserChromeParent.GetWebBrowser(aWebBrowser);", "-\tif (rc != XPCOM.NS_OK) Browser.error(rc);", "-\tif (aWebBrowser[0] == 0) Browser.error(XPCOM.NS_ERROR_NO_INTERFACE);", "-\t", "-\tnsIWebBrowser webBrowser = new nsIWebBrowser(aWebBrowser[0]);", "-\tint /*long*/[] result = new int /*long*/[1];", "-\trc = webBrowser.QueryInterface(nsIBaseWindow.NS_IBASEWINDOW_IID, result);", "-\tif (rc != XPCOM.NS_OK) Browser.error(rc);", "-\tif (result[0] == 0) Browser.error(XPCOM.NS_ERROR_NO_INTERFACE);", "-\twebBrowser.Release();", "-\t", "-\tnsIBaseWindow baseWindow = new nsIBaseWindow(result[0]);", "-\tresult[0] = 0;", "-\tint /*long*/[] aParentNativeWindow = new int /*long*/[1];", "-\trc = baseWindow.GetParentNativeWindow(aParentNativeWindow);", "-\tif (rc != XPCOM.NS_OK) Browser.error(rc);", "-\tif (aParentNativeWindow[0] == 0) Browser.error(XPCOM.NS_ERROR_NO_INTERFACE);", "-\tbaseWindow.Release();", "+\tif (parent == 0 && (chromeFlags & nsIWebBrowserChrome.CHROME_MODAL) == 0) {", "+\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;", "+\t}", "+\tBrowser src = null; ", "+\tif (parent != 0) {", "+\t\tnsIWebBrowserChrome browserChromeParent = new nsIWebBrowserChrome(parent);", "+\t\tint /*long*/[] aWebBrowser = new int /*long*/[1];", "+\t\tint rc = browserChromeParent.GetWebBrowser(aWebBrowser);", "+\t\tif (rc != XPCOM.NS_OK) Browser.error(rc);", "+\t\tif (aWebBrowser[0] == 0) Browser.error(XPCOM.NS_ERROR_NO_INTERFACE);", "-\tDisplay display = Display.getCurrent();", "-\tBrowser src = Browser.findBrowser(aParentNativeWindow[0]);", "+\t\tnsIWebBrowser webBrowser = new nsIWebBrowser(aWebBrowser[0]);", "+\t\tint /*long*/[] result = new int /*long*/[1];", "+\t\trc = webBrowser.QueryInterface(nsIBaseWindow.NS_IBASEWINDOW_IID, result);", "+\t\tif (rc != XPCOM.NS_OK) Browser.error(rc);", "+\t\tif (result[0] == 0) Browser.error(XPCOM.NS_ERROR_NO_INTERFACE);", "+\t\twebBrowser.Release();", "+", "+\t\tnsIBaseWindow baseWindow = new nsIBaseWindow(result[0]);", "+\t\tresult[0] = 0;", "+\t\tint /*long*/[] aParentNativeWindow = new int /*long*/[1];", "+\t\trc = baseWindow.GetParentNativeWindow(aParentNativeWindow);", "+\t\tif (rc != XPCOM.NS_OK) Browser.error(rc);", "+\t\tif (aParentNativeWindow[0] == 0) Browser.error(XPCOM.NS_ERROR_NO_INTERFACE);", "+\t\tbaseWindow.Release();", "+\t", "+\t\tsrc = Browser.findBrowser(aParentNativeWindow[0]);", "+\t}", "-\t\tfinal Shell shell = new Shell(src.getShell(), SWT.DIALOG_TRIM | SWT.APPLICATION_MODAL);", "+\t\tfinal Shell shell = src == null ?", "+\t\t\tnew Shell(SWT.DIALOG_TRIM | SWT.APPLICATION_MODAL) :", "+\t\t\tnew Shell(src.getShell(), SWT.DIALOG_TRIM | SWT.APPLICATION_MODAL);", "-\t\tevent.display = display;", "+\t\tevent.display = src.getDisplay();"]}], "num": 7154}