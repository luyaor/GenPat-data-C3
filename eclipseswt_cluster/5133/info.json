{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ce998b3e2a560481c1c03de0ffbb159c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dacdd127258d13189810c6489f0fdd6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Group.java", "commitBeforeChange": "be7a6b56ec36f2937282f99ce8f6d3a09d752bb5", "commitAfterChange": "388089e4bec9dc7b9e91ccd2ec44faabbba9290c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public Rectangle computeTrim (int x, int y, int width, int height)", "signatureAfterChange": "  public Rectangle computeTrim (int x, int y, int width, int height)", "diff": ["-\tif (OS.HIVIEW) {", "-\t\tCGRect oldBounds = new CGRect (), bounds = oldBounds;", "-\t\tOS.HIViewGetFrame (handle, oldBounds);", "-\t\tint MIN_SIZE = 100;", "-\t\tif (oldBounds.width < MIN_SIZE || oldBounds.height < MIN_SIZE) {", "-\t\t\tOS.HIViewSetDrawingEnabled (handle, false);", "-\t\t\tbounds = new CGRect ();", "-\t\t\tbounds.width = bounds.height = 100;", "-\t\t\tOS.HIViewSetFrame (handle, bounds);", "-\t\t}", "-\t\tint rgnHandle = OS.NewRgn ();", "-\t\tOS.GetControlRegion (handle, (short)OS.kControlContentMetaPart, rgnHandle);", "-\t\tRect client = new Rect ();", "-\t\tOS.GetRegionBounds (rgnHandle, client);", "-\t\tOS.DisposeRgn (rgnHandle);", "-\t\twidth += (int) bounds.width - (client.right - client.left);", "-\t\theight += (int) bounds.height - (client.bottom - client.top);", "-\t\tif (oldBounds.width < MIN_SIZE || oldBounds.height < MIN_SIZE) {", "-\t\t\tOS.HIViewSetFrame (handle, oldBounds);", "-\t\t\tOS.HIViewSetDrawingEnabled (handle, drawCount == 0);", "-\t\t}", "-\t\treturn new Rectangle (-client.left, -client.top, width, height);", "-\t}", "-\tRect bounds, oldBounds = new Rect ();", "-\tOS.GetControlBounds (handle, oldBounds);", "-\tboolean fixBounds = (oldBounds.right - oldBounds.left) < 100 || (oldBounds.bottom - oldBounds.top) < 100;", "-\tif (fixBounds) {", "-\t\tbounds = new Rect ();", "-\t\tbounds.right = bounds.bottom = 100;", "-\t\tOS.SetControlBounds (handle, bounds);", "-\t} else {", "-\t\tbounds = oldBounds;", "+\tCGRect oldBounds = new CGRect (), bounds = oldBounds;", "+\tOS.HIViewGetFrame (handle, oldBounds);", "+\tint MIN_SIZE = 100;", "+\tif (oldBounds.width < MIN_SIZE || oldBounds.height < MIN_SIZE) {", "+\t\tOS.HIViewSetDrawingEnabled (handle, false);", "+\t\tbounds = new CGRect ();", "+\t\tbounds.width = bounds.height = 100;", "+\t\tOS.HIViewSetFrame (handle, bounds);", "-\tif (fixBounds) OS.SetControlBounds (handle, oldBounds);", "-\tx -= client.left - bounds.left;", "-\ty -= client.top - bounds.top;", "-\twidth += Math.max (8, (bounds.right - bounds.left) - (client.right - client.left));", "-\theight += Math.max (text.length () == 0 ? 8 : 22, (bounds.bottom - bounds.top) - (client.bottom - client.top));", "-\treturn new Rectangle (x, y, width, height);", "+\twidth += (int) bounds.width - (client.right - client.left);", "+\theight += (int) bounds.height - (client.bottom - client.top);", "+\tif (oldBounds.width < MIN_SIZE || oldBounds.height < MIN_SIZE) {", "+\t\tOS.HIViewSetFrame (handle, oldBounds);", "+\t\tOS.HIViewSetDrawingEnabled (handle, drawCount == 0);", "+\t}", "+\treturn new Rectangle (-client.left, -client.top, width, height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03fd5e51e087a42f40fdac0f540b8105", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "be7a6b56ec36f2937282f99ce8f6d3a09d752bb5", "commitAfterChange": "388089e4bec9dc7b9e91ccd2ec44faabbba9290c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public Rectangle computeTrim (int x, int y, int width, int height)", "signatureAfterChange": "  public Rectangle computeTrim (int x, int y, int width, int height)", "diff": ["-\tif (OS.HIVIEW) {", "-\t\tCGRect oldBounds = new CGRect (), bounds = oldBounds;", "-\t\tOS.HIViewGetFrame (handle, oldBounds);", "-\t\tint MIN_SIZE = 100;", "-\t\tif (oldBounds.width < MIN_SIZE || oldBounds.height < MIN_SIZE) {", "-\t\t\tOS.HIViewSetDrawingEnabled (handle, false);", "-\t\t\tbounds = new CGRect ();", "-\t\t\tbounds.width = bounds.height = 100;", "-\t\t\tOS.HIViewSetFrame (handle, bounds);", "-\t\t}", "-\t\tRect client = new Rect ();", "-\t\tOS.GetTabContentRect (handle, client);", "-\t\tif (oldBounds.width < MIN_SIZE || oldBounds.height < MIN_SIZE) {", "-\t\t\tOS.HIViewSetFrame (handle, oldBounds);", "-\t\t\tOS.HIViewSetDrawingEnabled (handle, drawCount == 0);", "-\t\t}", "-\t\tx -= client.left;", "-\t\ty -= client.top;", "-\t\twidth += (int) bounds.width - (client.right - client.left);", "-\t\theight += (int) bounds.height - (client.bottom - client.top);", "-\t\tRect inset = getInset ();", "-\t\tx -= inset.left;", "-\t\ty -= inset.top;", "-\t\twidth += inset.left + inset.right;", "-\t\theight += inset.top + inset.bottom;", "-\t\treturn new Rectangle (-client.left, -client.top, width, height);", "-\t}", "-\tRect bounds, oldBounds = new Rect ();", "-\tOS.GetControlBounds (handle, oldBounds);", "-\tboolean fixBounds = (oldBounds.right - oldBounds.left) < 100 || (oldBounds.bottom - oldBounds.top) < 100;", "-\tif (fixBounds) {", "-\t\tbounds = new Rect ();", "-\t\tbounds.right = bounds.bottom = 100;", "-\t\tOS.SetControlBounds (handle, bounds);", "-\t} else {", "-\t\tbounds = oldBounds;", "+\tCGRect oldBounds = new CGRect (), bounds = oldBounds;", "+\tOS.HIViewGetFrame (handle, oldBounds);", "+\tint MIN_SIZE = 100;", "+\tif (oldBounds.width < MIN_SIZE || oldBounds.height < MIN_SIZE) {", "+\t\tOS.HIViewSetDrawingEnabled (handle, false);", "+\t\tbounds = new CGRect ();", "+\t\tbounds.width = bounds.height = 100;", "+\t\tOS.HIViewSetFrame (handle, bounds);", "-\tif (fixBounds) OS.SetControlBounds (handle, oldBounds);", "-\tx -= client.left - bounds.left;", "-\ty -= client.top - bounds.top;", "-\twidth += (bounds.right - bounds.left) - (client.right - client.left);", "-\theight += (bounds.bottom - bounds.top) - (client.bottom - client.top);", "+\tif (oldBounds.width < MIN_SIZE || oldBounds.height < MIN_SIZE) {", "+\t\tOS.HIViewSetFrame (handle, oldBounds);", "+\t\tOS.HIViewSetDrawingEnabled (handle, drawCount == 0);", "+\t}", "+\tx -= client.left;", "+\ty -= client.top;", "+\twidth += (int) bounds.width - (client.right - client.left);", "+\theight += (int) bounds.height - (client.bottom - client.top);", "-\treturn new Rectangle (x, y, width, height);", "+\treturn new Rectangle (-client.left, -client.top, width, height);"]}], "num": 5133}