{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f5ac94f8491582052c6cc7a56a9a8dd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c6a528f50f990ea80ae1c66f143fd74", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "75d3bca9b12da0e734f166ed9776e3c463fe710a", "commitAfterChange": "192960609106955d48292e46d3afc3671c59810e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " void clearAll (boolean recursive)", "signatureAfterChange": " void clearAll (boolean recursive)", "diff": ["-\t\t\tRectangle bounds = items [i].getBounds ();", "+\t\t\tRectangle bounds = items [i].getBounds (false);", "-\t\tif (recursive) {", "-\t\t\titems [i].clearAll (true, false);", "-\t\t} else {", "-\t\t\titems [i].clear ();", "-\t\t}", "+\t\titems [i].clear ();", "+\t\tif (recursive) items [i].clearAll (true, false);", "-\t\t\tRectangle bounds = items [0].getBounds ();", "-\t\t\tint newWidth = bounds.x + bounds.width;", "-\t\t\tupdateHorizontalBar (newWidth, newWidth - oldRightX);", "+\t\t\tRectangle bounds = items [0].getBounds (false);", "+\t\t\tint newRightX = bounds.x + bounds.width;", "+\t\t\tupdateHorizontalBar (newRightX, newRightX - oldRightX);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff7de430e4349aeb22cc32a376f81ae5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "548533ad759a88444affd19fae3ef362d7331f8b", "commitAfterChange": "ad2f7a3dbde5efa498f9080cce5bfb2b90785d8d", "methodNumberBeforeChange": 149, "methodNumberAfterChange": 149, "signatureBeforeChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "diff": ["-\t\t\tpostEvent (SWT.Selection, event);", "+\t\t\tsendSelectionEvent (SWT.Selection, event, false);", "-\t\t\tpostEvent (SWT.Selection, event);", "+\t\t\tsendSelectionEvent (SWT.Selection, event, false);", "-\t\tpostEvent (SWT.Selection, event);", "+\t\tsendSelectionEvent (SWT.Selection, event, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc4f3d60cfc9e729d1d193c1ba7ab69f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "5a45eee3fd3579f44b8bf252399596c0117ebf2e", "commitAfterChange": "a5200ba6a1f6d8adff75848627559a90fec3761e", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": "  int itemNotificationProc (int browser, int id, int message)", "signatureAfterChange": "  int itemNotificationProc (int browser, int id, int message)", "diff": ["-\t\t\t\t\t\tcolumn.postEvent (display.clickCount == 2 ? SWT.DefaultSelection : SWT.Selection);", "+\t\t\t\t\t\tcolumn.sendSelectionEvent (display.clickCount == 2 ? SWT.DefaultSelection : SWT.Selection);", "-\t\t\t\tpostEvent (SWT.Selection, event);", "+\t\t\t\tsendSelectionEvent (SWT.Selection, event, false);", "-\t\t\t\tpostEvent (SWT.DefaultSelection, event);", "+\t\t\t\tsendSelectionEvent (SWT.DefaultSelection, event, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb737c0ea913acf1a8c55104a11f4723", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "d34c95efdcf10af2458e871da91456b39b9b2bcc", "commitAfterChange": "3bb1d0d5b18ad64f312195905956ceba8e91d9dc", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "\r public void open ()", "signatureAfterChange": "\r public void open ()", "diff": ["-\tif (savedFocus == null) {\r", "-\t\tsetTabGroupFocus ();\r", "-\t} else {\r", "-\t\trestoreFocus ();\r", "+\tif (!restoreFocus ()) {\r", "+\t\ttraverseGroup (true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b41786cd4b87ba5962d3c2a4be8b634c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/IME.java", "commitBeforeChange": "87409dd82190b37fa754f5e929cac3f245e2f344", "commitAfterChange": "94be4e401a3fb2f42f015e966ff3c20eef54b12e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "diff": ["-\tif (isInlineIMEEnabled ()) {", "-\t\tint /*long*/ hwnd = parent.handle;", "-\t\tint /*long*/ hIMC = OS.ImmGetContext (hwnd);", "-\t\tif (hIMC != 0) {", "-\t\t\tif (OS.ImmGetOpenStatus (hIMC)) {", "-\t\t\t\tif (OS.ImmGetCompositionString (hIMC, OS.GCS_COMPSTR, null, 0) > 0) {", "-\t\t\t\t\tEvent event = new Event ();", "-\t\t\t\t\tevent.detail = SWT.COMPOSITION_OFFSET;", "-\t\t\t\t\tevent.x = OS.GET_X_LPARAM (lParam); ", "-\t\t\t\t\tevent.y = OS.GET_Y_LPARAM (lParam);", "-\t\t\t\t\tsendEvent (SWT.ImeComposition, event);", "-\t\t\t\t\tint offset = event.index;", "-\t\t\t\t\tint length = text.length();", "-\t\t\t\t\tif (offset != -1 && startOffset != -1 && startOffset <= offset && offset < startOffset + length) {", "-\t\t\t\t\t\tint /*long*/ imeWnd = OS.ImmGetDefaultIMEWnd (hwnd);", "-\t\t\t\t\t\toffset = event.index + event.count - startOffset;", "-\t\t\t\t\t\tint trailing = event.count > 0 ? 1 : 2;", "-\t\t\t\t\t\tint /*long*/ param = OS.MAKEWPARAM (OS.MAKEWORD (OS.IMEMOUSE_LDOWN, trailing), offset);", "-\t\t\t\t\t\tOS.SendMessage (imeWnd, WM_MSIME_MOUSE, param, hIMC);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tOS.ImmNotifyIME (hIMC, OS.NI_COMPOSITIONSTR, OS.CPS_COMPLETE, 0);", "-\t\t\t\t\t}", "+\tif (!isInlineEnabled ()) return null;", "+\tint /*long*/ hwnd = parent.handle;", "+\tint /*long*/ hIMC = OS.ImmGetContext (hwnd);", "+\tif (hIMC != 0) {", "+\t\tif (OS.ImmGetOpenStatus (hIMC)) {", "+\t\t\tif (OS.ImmGetCompositionString (hIMC, OS.GCS_COMPSTR, null, 0) > 0) {", "+\t\t\t\tEvent event = new Event ();", "+\t\t\t\tevent.detail = SWT.COMPOSITION_OFFSET;", "+\t\t\t\tevent.x = OS.GET_X_LPARAM (lParam); ", "+\t\t\t\tevent.y = OS.GET_Y_LPARAM (lParam);", "+\t\t\t\tsendEvent (SWT.ImeComposition, event);", "+\t\t\t\tint offset = event.index;", "+\t\t\t\tint length = text.length();", "+\t\t\t\tif (offset != -1 && startOffset != -1 && startOffset <= offset && offset < startOffset + length) {", "+\t\t\t\t\tint /*long*/ imeWnd = OS.ImmGetDefaultIMEWnd (hwnd);", "+\t\t\t\t\toffset = event.index + event.count - startOffset;", "+\t\t\t\t\tint trailing = event.count > 0 ? 1 : 2;", "+\t\t\t\t\tint /*long*/ param = OS.MAKEWPARAM (OS.MAKEWORD (OS.IMEMOUSE_LDOWN, trailing), offset);", "+\t\t\t\t\tOS.SendMessage (imeWnd, WM_MSIME_MOUSE, param, hIMC);", "+\t\t\t\t} else {", "+\t\t\t\t\tOS.ImmNotifyIME (hIMC, OS.NI_COMPOSITIONSTR, OS.CPS_COMPLETE, 0);", "-\t\t\tOS.ImmReleaseContext (hwnd, hIMC);", "+\t\tOS.ImmReleaseContext (hwnd, hIMC);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ccdeab696d67897519d156b5620a210", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Sash.java", "commitBeforeChange": "5a45eee3fd3579f44b8bf252399596c0117ebf2e", "commitAfterChange": "a5200ba6a1f6d8adff75848627559a90fec3761e", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  boolean sendMouseEvent (int type, short button, int count, int detail, boolean send, int chord, short x, short y, int modifiers)", "signatureAfterChange": "  boolean sendMouseEvent (int type, short button, int count, int detail, boolean send, int chord, short x, short y, int modifiers)", "diff": ["-\t\t\tsendEvent (SWT.Selection, event);", "+\t\t\tsendSelectionEvent (SWT.Selection, event, true);", "-\t\t\tsendEvent (SWT.Selection, event);", "+\t\t\tsendSelectionEvent (SWT.Selection, event, true);", "-\t\t\tsendEvent (SWT.Selection, event);", "+\t\t\tsendSelectionEvent (SWT.Selection, event, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a346daa544feca98e854b82b1d75295b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/IME.java", "commitBeforeChange": "a8146be362e6520d2729e8bd8bff1b3aff69e786", "commitAfterChange": "634c4cd939fa6c419dfaf87ead839906e781d79f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  int gtk_commit (int imcontext, int textPtr)", "signatureAfterChange": "  int gtk_commit (int imcontext, int textPtr)", "diff": ["+\tif (!isInlineEnabled ()) return 0;", "-\tif (isInlineIMEEnabled ()) {", "-\t\tranges = null;", "-\t\tstyles = null;", "-\t\tcaretOffset = commitCount = 0;", "-\t\tif (textPtr != 0 && inComposition) {", "-\t\t\tint length = OS.strlen (textPtr);", "-\t\t\tif (length != 0) {", "-\t\t\t\tbyte [] buffer = new byte [length];", "-\t\t\t\tOS.memmove (buffer, textPtr, length);", "-\t\t\t\tchar [] chars = Converter.mbcsToWcs (null, buffer);", "-\t\t\t\tEvent event = new Event();", "-\t\t\t\tevent.detail = SWT.COMPOSITION_CHANGED;", "-\t\t\t\tevent.start = startOffset;", "-\t\t\t\tevent.end = startOffset + text.length ();", "-\t\t\t\tevent.text = text = chars != null ? new String (chars) : \"\";", "-\t\t\t\tcommitCount = text.length();", "-\t\t\t\tsendEvent(SWT.ImeComposition, event);", "-\t\t\t\tdoit = event.doit;", "-\t\t\t\ttext = \"\";", "-\t\t\t\tstartOffset = -1;", "-\t\t\t\tcommitCount = 0;", "-\t\t\t}", "+\tranges = null;", "+\tstyles = null;", "+\tcaretOffset = commitCount = 0;", "+\tif (textPtr != 0 && inComposition) {", "+\t\tint length = OS.strlen (textPtr);", "+\t\tif (length != 0) {", "+\t\t\tbyte [] buffer = new byte [length];", "+\t\t\tOS.memmove (buffer, textPtr, length);", "+\t\t\tchar [] chars = Converter.mbcsToWcs (null, buffer);", "+\t\t\tEvent event = new Event();", "+\t\t\tevent.detail = SWT.COMPOSITION_CHANGED;", "+\t\t\tevent.start = startOffset;", "+\t\t\tevent.end = startOffset + text.length ();", "+\t\t\tevent.text = text = chars != null ? new String (chars) : \"\";", "+\t\t\tcommitCount = text.length();", "+\t\t\tsendEvent (SWT.ImeComposition, event);", "+\t\t\tdoit = event.doit;", "+\t\t\ttext = \"\";", "+\t\t\tstartOffset = -1;", "+\t\t\tcommitCount = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f30aeb69e09f3108302fca437febc8b8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "5a45eee3fd3579f44b8bf252399596c0117ebf2e", "commitAfterChange": "a5200ba6a1f6d8adff75848627559a90fec3761e", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": "  int itemNotificationProc (int browser, int id, int message)", "signatureAfterChange": "  int itemNotificationProc (int browser, int id, int message)", "diff": ["-\t\t\t\t\t\tcolumn.postEvent (display.clickCount == 2 ? SWT.DefaultSelection : SWT.Selection);", "+\t\t\t\t\t\tcolumn.sendSelectionEvent (display.clickCount == 2 ? SWT.DefaultSelection : SWT.Selection);", "-\t\t\t\tpostEvent (SWT.Selection, event);", "+\t\t\t\tsendSelectionEvent (SWT.Selection, event, false);", "-\t\t\t\tpostEvent (SWT.DefaultSelection, event);", "+\t\t\t\tsendSelectionEvent (SWT.DefaultSelection, event, false);", "-\t\t\t\t\t\tsendEvent (SWT.Selection, event);", "+\t\t\t\t\t\tsendSelectionEvent (SWT.Selection, event, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "773b316744c486f4195e8b489b1ca352", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/IME.java", "commitBeforeChange": "a8146be362e6520d2729e8bd8bff1b3aff69e786", "commitAfterChange": "634c4cd939fa6c419dfaf87ead839906e781d79f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  int gtk_button_press_event (int widget, int event)", "signatureAfterChange": "  int gtk_button_press_event (int widget, int event)", "diff": ["-\tif (isInlineIMEEnabled ()) {", "-\t\tint /*long*/ imHandle = imHandle ();", "-\t\tif (imHandle != 0) {", "-\t\t\tOS.gtk_im_context_reset (imHandle);", "-\t\t}", "-\t}", "+\tif (!isInlineEnabled ()) return 0;", "+\tint /*long*/ imHandle = imHandle ();", "+\tif (imHandle != 0) OS.gtk_im_context_reset (imHandle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75c0d5c8331eeb5f0b10c492a944daa0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "548533ad759a88444affd19fae3ef362d7331f8b", "commitAfterChange": "ad2f7a3dbde5efa498f9080cce5bfb2b90785d8d", "methodNumberBeforeChange": 142, "methodNumberAfterChange": 142, "signatureBeforeChange": "  LRESULT WM_CHAR (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_CHAR (int wParam, int lParam)", "diff": ["-\t\t\t\tpostEvent (SWT.Selection, event);", "+\t\t\t\tsendSelectionEvent (SWT.Selection, event, false);", "-\t\t\t\t\tpostEvent (SWT.Selection, event);", "+\t\t\t\t\tsendSelectionEvent (SWT.Selection, event, false);", "-\t\t\tpostEvent (SWT.DefaultSelection, event);", "+\t\t\tsendSelectionEvent (SWT.DefaultSelection, event, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbe86fca7156c2c8946fb55de35bb0fc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/IME.java", "commitBeforeChange": "87409dd82190b37fa754f5e929cac3f245e2f344", "commitAfterChange": "94be4e401a3fb2f42f015e966ff3c20eef54b12e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  LRESULT WM_KILLFOCUS (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_KILLFOCUS (int wParam, int lParam)", "diff": ["-", "-LRESULT WM_KILLFOCUS (int /*long*/ wParam, int /*long*/ lParam) {", "-\tif (isInlineIMEEnabled ()) {", "-\t\tint /*long*/ hwnd = parent.handle;", "-\t\tint /*long*/ hIMC = OS.ImmGetContext (hwnd);", "-\t\tif (hIMC != 0) {", "-\t\t\tif (OS.ImmGetOpenStatus (hIMC)) {", "-\t\t\t\tOS.ImmNotifyIME (hIMC, OS.NI_COMPOSITIONSTR, OS.CPS_COMPLETE, 0);", "+", "+LRESULT WM_KILLFOCUS (int /*long*/ wParam, int /*long*/ lParam) {", "+\tif (!isInlineEnabled ()) return null;", "+\tint /*long*/ hwnd = parent.handle;", "+\tint /*long*/ hIMC = OS.ImmGetContext (hwnd);", "+\tif (hIMC != 0) {", "+\t\tif (OS.ImmGetOpenStatus (hIMC)) {", "+\t\t\tOS.ImmNotifyIME (hIMC, OS.NI_COMPOSITIONSTR, OS.CPS_COMPLETE, 0);", "+\t\t}", "+\t\tOS.ImmReleaseContext (hwnd, hIMC);"]}], "num": 23327}