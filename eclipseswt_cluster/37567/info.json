{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4a50446b1271273c334e3d6196d6ef9c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0106b20807bad64756ad3c2ef594fd52", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 61, "signatureBeforeChange": " int trimWidth ()", "signatureAfterChange": "  void setZOrder (Control control, boolean above)", "diff": ["+", "+void setZOrder (Control control, boolean above) {", "+\tif (above) {", "+\t\t//NOT DONE - move one window above another", "+\t \tOS.BringToFront (shellHandle);", "+\t } else {", "+\t\tint window = control == null ? 0 : OS.GetControlOwner (control.handle);", "+\t\tOS.SendBehind (shellHandle, window);", "-int trimWidth () {", "-\tif ((style & SWT.NO_TRIM) != 0) return 0;", "-    /* AW", "-\tboolean hasTitle = false, hasResize = false, hasBorder = false;", "-\thasTitle = (style & (SWT.MIN | SWT.MAX | SWT.TITLE | SWT.MENU)) != 0;", "-\thasResize = (style & SWT.RESIZE) != 0;", "-\thasBorder = (style & SWT.BORDER) != 0;", "-\tif (hasTitle) {", "-\t\tif (hasResize) return display.titleResizeTrimWidth;", "-\t\tif (hasBorder) return display.titleBorderTrimWidth;", "-\t\treturn display.titleTrimWidth;", "-\t}", "-\tif (hasResize) return display.resizeTrimWidth;", "-\tif (hasBorder) return display.borderTrimWidth;", "-    */", "-\treturn 0;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4248bf80efdb3644c930ad0d1b7ce562", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "5544ce1d748561f71c4f1d1997c431f82e5c4c86", "commitAfterChange": "24e0049851c0d0a09cb9f25e5892d112e2936fed", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 27, "signatureBeforeChange": " StyleRange[] filterLineStyles(StyleRange[] styles)", "signatureAfterChange": " void disposeTextLayout (TextLayout layout, StyledTextEvent event)", "diff": ["- */", "-StyleRange[] filterLineStyles(StyleRange[] styles) {", "-\tif (styles != null) {", "-\t\tint styleIndex = 0;", "-\t\twhile (styleIndex < styles.length && styles[styleIndex].fontStyle == SWT.NORMAL) {", "-\t\t\tstyleIndex++;", "-\t\t}", "-\t\tif (styleIndex == styles.length) {", "-\t\t\tstyles = null;", "-\t\t}", "-\t}", "-\treturn styles;", "-}", "+}", "+void disposeTextLayout (TextLayout layout, StyledTextEvent event) {", "+\tStyleRange[] styles = event != null ? event.styles : null;", "+\tif (styles != null) {", "+\t\tfor (int styleIndex = 0; styleIndex < styles.length; styleIndex++) {", "+\t\t\tStyleRange style = styles[styleIndex];", "+\t\t\tif (style.textStyle != null) {", "+\t\t\t\tstyle.textStyle.dispose();", "+\t\t\t\tstyle.textStyle = null;", "+\t\t\t}", "+\t\t}", "+\t}", "+\tlayout.dispose();", "+}"]}], "num": 37567}