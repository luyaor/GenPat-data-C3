{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "513f3fc5f6dca9e7dfc0a47306fcb6a4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5fb0af5e382225f48b4f2e5623752a9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "55d623f2ac933a4cd04e65407a40c5f289768ba6", "commitAfterChange": "9265e1a70a1ad5cad898980e135939e2f7a769f6", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " void onPaint(Event event)", "signatureAfterChange": " void onPaint(Event event)", "diff": ["+\tRectangle clipping = gc.getClipping();", "-\t\t\tif (!gc.getClipping().intersects(bounds)) continue;", "-", "+\t\t\tif (!clipping.intersects(bounds)) continue;", "+\t\t\tboolean nativeGripper = false;", "+\t\t\t", "+\t\t\t/* Draw gripper. */", "+\t\t\tif (!isLocked) {", "+\t\t\t\tnativeGripper = drawGripper(bounds.x, bounds.y, CoolItem.MINIMUM_WIDTH, bounds.height);", "+\t\t\t\tif (!nativeGripper) {", "+\t\t\t\t\tint grabberTrim = 2; ", "+\t\t\t\t\tint grabberHeight = bounds.height - (2 * CoolItem.MARGIN_HEIGHT) - (2 * grabberTrim) - 1;\t\t\t\t", "+\t\t\t\t\tgc.setForeground(shadowColor);", "+\t\t\t\t\tgc.drawRectangle(", "+\t\t\t\t\t\tbounds.x + CoolItem.MARGIN_WIDTH, ", "+\t\t\t\t\t\tbounds.y + CoolItem.MARGIN_HEIGHT + grabberTrim, ", "+\t\t\t\t\t\t2, ", "+\t\t\t\t\t\tgrabberHeight);", "+\t\t\t\t\tgc.setForeground(highlightColor);", "+\t\t\t\t\tgc.drawLine(", "+\t\t\t\t\t\tbounds.x + CoolItem.MARGIN_WIDTH, ", "+\t\t\t\t\t\tbounds.y + CoolItem.MARGIN_HEIGHT + grabberTrim + 1, ", "+\t\t\t\t\t\tbounds.x + CoolItem.MARGIN_WIDTH, ", "+\t\t\t\t\t\tbounds.y + CoolItem.MARGIN_HEIGHT + grabberTrim + grabberHeight - 1);", "+\t\t\t\t\tgc.drawLine(", "+\t\t\t\t\t\tbounds.x + CoolItem.MARGIN_WIDTH, ", "+\t\t\t\t\t\tbounds.y + CoolItem.MARGIN_HEIGHT + grabberTrim, ", "+\t\t\t\t\t\tbounds.x + CoolItem.MARGIN_WIDTH + 1, ", "+\t\t\t\t\t\tbounds.y + CoolItem.MARGIN_HEIGHT + grabberTrim);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\t", "-\t\t\tif (!flat && i != 0) {", "+\t\t\tif (!flat && !nativeGripper && i != 0) {", "-", "-\t\t\t/* Draw grabber. */", "-\t\t\tif (!isLocked) {", "-\t\t\t\tint grabberTrim = 2; ", "-\t\t\t\tint grabberHeight = bounds.height - (2 * CoolItem.MARGIN_HEIGHT) - (2 * grabberTrim) - 1;\t\t\t\t", "-\t\t\t\tgc.setForeground(shadowColor);", "-\t\t\t\tgc.drawRectangle(", "-\t\t\t\t\tbounds.x + CoolItem.MARGIN_WIDTH, ", "-\t\t\t\t\tbounds.y + CoolItem.MARGIN_HEIGHT + grabberTrim, ", "-\t\t\t\t\t2, ", "-\t\t\t\t\tgrabberHeight);", "-\t\t\t\tgc.setForeground(highlightColor);", "-\t\t\t\tgc.drawLine(", "-\t\t\t\t\tbounds.x + CoolItem.MARGIN_WIDTH, ", "-\t\t\t\t\tbounds.y + CoolItem.MARGIN_HEIGHT + grabberTrim + 1, ", "-\t\t\t\t\tbounds.x + CoolItem.MARGIN_WIDTH, ", "-\t\t\t\t\tbounds.y + CoolItem.MARGIN_HEIGHT + grabberTrim + grabberHeight - 1);", "-\t\t\t\tgc.drawLine(", "-\t\t\t\t\tbounds.x + CoolItem.MARGIN_WIDTH, ", "-\t\t\t\t\tbounds.y + CoolItem.MARGIN_HEIGHT + grabberTrim, ", "-\t\t\t\t\tbounds.x + CoolItem.MARGIN_WIDTH + 1, ", "-\t\t\t\t\tbounds.y + CoolItem.MARGIN_HEIGHT + grabberTrim);", "-\t\t\t}\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c2c993b35ea04e86a0eb722952c734c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "df0f80ff8a78c112a82532d9d0b7052a1a5c953a", "commitAfterChange": "23e8e8964dd4f5d4f3dad5c0108120b1e7e71698", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 28, "signatureBeforeChange": " void onPaint(Event event)", "signatureAfterChange": " void onPaint(Event event)", "diff": ["-", "+\tboolean vertical = (style & SWT.VERTICAL) != 0;", "-\tint stopX = getBounds().width;", "+\tint stopX = getWidth();", "+\tRectangle rect;", "-\t\t\tbounds = items[row][i].getBounds();", "-\t\t\tif (!clipping.intersects(bounds)) continue;", "+\t\t\tbounds = items[row][i].internalGetBounds();", "+\t\t\trect = fixRectangle(bounds.x, bounds.y, bounds.width, bounds.height);", "+\t\t\tif (!clipping.intersects(rect)) continue;", "-\t\t\t\tif (!flat) nativeGripper = drawGripper(bounds.x, bounds.y, CoolItem.MINIMUM_WIDTH, bounds.height);", "+\t\t\t\trect = fixRectangle(bounds.x, bounds.y, CoolItem.MINIMUM_WIDTH, bounds.height);", "+\t\t\t\tif (!flat) \tnativeGripper = drawGripper(rect.x, rect.y, rect.width, rect.height, vertical);", "-\t\t\t\t\tgc.drawRectangle(", "-\t\t\t\t\t\tbounds.x + CoolItem.MARGIN_WIDTH, ", "-\t\t\t\t\t\tbounds.y + grabberTrim, ", "-\t\t\t\t\t\t2, ", "-\t\t\t\t\t\tgrabberHeight);", "+\t\t\t\t\trect = fixRectangle(", "+\t\t\t\t\t\t\tbounds.x + CoolItem.MARGIN_WIDTH, ", "+\t\t\t\t\t\t\tbounds.y + grabberTrim, ", "+\t\t\t\t\t\t\t2, ", "+\t\t\t\t\t\t\tgrabberHeight);", "+\t\t\t\t\tgc.drawRectangle(rect);", "-\t\t\t\t\tgc.drawLine(", "-\t\t\t\t\t\tbounds.x + CoolItem.MARGIN_WIDTH, ", "-\t\t\t\t\t\tbounds.y + grabberTrim + 1, ", "-\t\t\t\t\t\tbounds.x + CoolItem.MARGIN_WIDTH, ", "-\t\t\t\t\t\tbounds.y + grabberTrim + grabberHeight - 1);", "-\t\t\t\t\tgc.drawLine(", "-\t\t\t\t\t\tbounds.x + CoolItem.MARGIN_WIDTH, ", "-\t\t\t\t\t\tbounds.y + grabberTrim, ", "-\t\t\t\t\t\tbounds.x + CoolItem.MARGIN_WIDTH + 1, ", "-\t\t\t\t\t\tbounds.y + grabberTrim);", "+\t\t\t\t\trect = fixRectangle(", "+\t\t\t\t\t\t\tbounds.x + CoolItem.MARGIN_WIDTH, ", "+\t\t\t\t\t\t\tbounds.y + grabberTrim + 1, ", "+\t\t\t\t\t\t\tbounds.x + CoolItem.MARGIN_WIDTH, ", "+\t\t\t\t\t\t\tbounds.y + grabberTrim + grabberHeight - 1);", "+\t\t\t\t\tgc.drawLine(rect.x, rect.y, rect.width, rect.height);", "+\t\t\t\t\trect = fixRectangle(", "+\t\t\t\t\t\t\tbounds.x + CoolItem.MARGIN_WIDTH, ", "+\t\t\t\t\t\t\tbounds.y + grabberTrim, ", "+\t\t\t\t\t\t\tbounds.x + CoolItem.MARGIN_WIDTH + 1, ", "+\t\t\t\t\t\t\tbounds.y + grabberTrim);", "+\t\t\t\t\tgc.drawLine(rect.x, rect.y, rect.width, rect.height);", "-\t\t\t\tgc.drawLine(bounds.x, bounds.y, bounds.x, bounds.y + bounds.height - 1);", "+\t\t\t\trect = fixRectangle(bounds.x, bounds.y, bounds.x, bounds.y + bounds.height - 1);", "+\t\t\t\tgc.drawLine(rect.x, rect.y, rect.width, rect.height);", "-\t\t\t\tgc.drawLine(bounds.x + 1, bounds.y, bounds.x + 1, bounds.y + bounds.height - 1);", "+\t\t\t\trect = fixRectangle(bounds.x + 1, bounds.y, bounds.x + 1, bounds.y + bounds.height - 1);", "+\t\t\t\tgc.drawLine(rect.x, rect.y, rect.width, rect.height);", "-\t\t\tgc.drawLine(0, separatorY, stopX, separatorY);\t", "+\t\t\trect = fixRectangle(0, separatorY, stopX, separatorY);", "+\t\t\tgc.drawLine(rect.x, rect.y, rect.width, rect.height);\t", "-\t\t\tgc.drawLine(0, separatorY + 1, stopX, separatorY + 1);\t\t\t", "+\t\t\trect = fixRectangle(0, separatorY + 1, stopX, separatorY + 1);", "+\t\t\tgc.drawLine(rect.x, rect.y, rect.width, rect.height);"]}], "num": 19502}