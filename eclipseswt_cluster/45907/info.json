{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3715fbb1c899a9a72d9c96828e48c944", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9aa144c28779c87fdc39b25b8af758a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon2/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "bfd50002026e5d7324bc6c277ea2aeee9db0c53a", "commitAfterChange": "a05d6150968960777ed88ef97b95000f18c037b4", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["-\t* the widget has a minimum size.  The fix is to force the scroll", "-\t* bars to be created by temporarily giving the widget a size and", "-\t* then restoring it to zero.", "-\t* ", "-\t* NOTE: The widget must be visible and SizeControl() must be used", "-\t* to resize the widget to a minimim size or the widget will not", "-\t* create the scroll bars.  This work around currently flashes.", "+\t* the data browser needs to draw them.  The fix is to force the scroll", "+\t* bars to be created by temporarily giving the widget a size, drawing", "+\t* it on a offscreen buffer to avoid flashes and then restoring it to", "+\t* size zero.", "-\tOS.SizeControl (handle, (short) 0xFF, (short) 0xFF);", "-\tOS.SizeControl (handle, (short) 0, (short) 0);", "+\tint size = 50;", "+\tRect rect = new Rect ();", "+\trect.right = rect.bottom = (short) size;", "+\tOS.SetControlBounds (handle, rect);", "+\tint bpl = size * 4;", "+\tint [] gWorld = new int [1];", "+\tint data = OS.NewPtr (bpl * size);", "+\tOS.NewGWorldFromPtr (gWorld, OS.k3ARGBPixelFormat, rect, 0, 0, 0, data, bpl);", "+\tint [] curPort = new int [1];", "+\tint [] curGWorld = new int [1];", "+\tOS.GetGWorld (curPort, curGWorld);\t", "+\tOS.SetGWorld (gWorld [0], curGWorld [0]);", "+\tOS.DrawControlInCurrentPort (handle);", "+\tOS.SetGWorld (curPort [0], curGWorld [0]);", "+\tOS.DisposeGWorld (gWorld [0]);", "+\tOS.DisposePtr (data);", "+\trect.right = rect.bottom = (short) 0;", "+\tOS.SetControlBounds (handle, rect);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de5feaf678967d84084d107968499b64", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon2/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "bfd50002026e5d7324bc6c277ea2aeee9db0c53a", "commitAfterChange": "a05d6150968960777ed88ef97b95000f18c037b4", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["-\t* the widget has a minimum size.  The fix is to force the scroll", "-\t* bars to be created by temporarily giving the widget a size and", "-\t* then restoring it to zero.", "-\t* ", "-\t* NOTE: The widget must be visible and SizeControl() must be used", "-\t* to resize the widget to a minimim size or the widget will not", "-\t* create the scroll bars.  This work around currently flashes.", "+\t* the data browser needs to draw them.  The fix is to force the scroll", "+\t* bars to be created by temporarily giving the widget a size, drawing", "+\t* it on a offscreen buffer to avoid flashes and then restoring it to", "+\t* size zero.", "-\tOS.SizeControl (handle, (short) 0xFF, (short) 0xFF);", "-\tOS.SizeControl (handle, (short) 0, (short) 0);", "+\tint size = 50;", "+\tRect rect = new Rect ();", "+\trect.right = rect.bottom = (short) size;", "+\tOS.SetControlBounds (handle, rect);", "+\tint bpl = size * 4;", "+\tint [] gWorld = new int [1];", "+\tint data = OS.NewPtr (bpl * size);", "+\tOS.NewGWorldFromPtr (gWorld, OS.k3ARGBPixelFormat, rect, 0, 0, 0, data, bpl);", "+\tint [] curPort = new int [1];", "+\tint [] curGWorld = new int [1];", "+\tOS.GetGWorld (curPort, curGWorld);\t", "+\tOS.SetGWorld (gWorld [0], curGWorld [0]);", "+\tOS.DrawControlInCurrentPort (handle);", "+\tOS.SetGWorld (curPort [0], curGWorld [0]);", "+\tOS.DisposeGWorld (gWorld [0]);", "+\tOS.DisposePtr (data);", "+\trect.right = rect.bottom = (short) 0;", "+\tOS.SetControlBounds (handle, rect);"]}], "num": 45907}