{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "da4149b010df810d0f4f040896a028db", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f4fe5bf3c6f52726c6cc2b0495caf95", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "91a816963a264c77a7c97633ebfc263d6333dacd", "commitAfterChange": "7f3458395d557cef983a6a97a5ed7f0feb515a78", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " void redrawHandle (int x, int y, int width, int height, int widgetHandle)", "signatureAfterChange": " void redrawHandle (int x, int y, int width, int height, int widgetHandle)", "diff": ["-\tint [] argList = {OS.XmNborderWidth, 0, OS.XmNborderColor, 0};", "+\tint [] argList = {", "+\t\tOS.XmNwidth, 0, \t\t/* 1 */", "+\t\tOS.XmNheight, 0, \t\t/* 3 */", "+\t\tOS.XmNborderWidth, 0, \t/* 5 */", "+\t\tOS.XmNborderColor, 0,\t/* 7 */", "+\t};", "-\tif (argList [1] != 0) {", "-\t\t/* Force the border to repaint by setting the color */", "-\t\tOS.XtSetValues (widgetHandle, argList, argList.length / 2);", "+\t/*", "+\t* Uncomment this code to force the window trimmings to redraw.", "+\t*/", "+//\tif (argList [5] != 0) {", "+//\t\t/* Force the border to repaint by setting the color */", "+//\t\tOS.XtSetValues (widgetHandle, argList, argList.length / 2);", "+//\t}", "+\tif ((x < argList [1]) && (y < argList [3]) && (x + width > 0) && (y + height > 0)) {", "+\t\tOS.XClearArea (display, window, x, y, width, height, true);", "-\tOS.XClearArea (display, window, x, y, width, height, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f3527a211c97acb7af393a0e1431c74", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet219.java", "commitBeforeChange": "9cf5aeadb5a89893a32b1a67c49fa9d65dc5c460", "commitAfterChange": "46c04ae6df51d7dbd76231ca767f5b0e6cf15d3a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static void main(String[] args)", "signatureAfterChange": " \tpublic static void main(String[] args)", "diff": ["+\t\t\t/** The x/y of the MouseDown, relative to top-left of the shell. */", "-\t\t\t\t\tstartX = e.x;", "-\t\t\t\t\tstartY = e.y; ", "+\t\t\t\t\tPoint p = shell.toDisplay(e.x, e.y);", "+\t\t\t\t\tPoint loc = shell.getLocation();", "+\t\t\t\t\tstartX = p.x - loc.x;", "+\t\t\t\t\tstartY = p.y - loc.y;", "-\t\tshell.setSize(imageData.x + imageData.width, imageData.y + imageData.height);"]}], "num": 62450}