{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec25fa329f8de5794239ae4ea4302f02", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0786f37b02e9aca2f4eaf3d169543140", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "9d77c026b4e032eb48f713757812335134252e95", "commitAfterChange": "bb4ebb46654a43df401fb6d92cbc46a6ebd03ed8", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 120, "signatureBeforeChange": "  LRESULT wmNotifyChild (int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmNotifyChild (int wParam, int lParam)", "diff": ["-\t\t\t\t\tint hFont = item.cellFont != null ? item.cellFont [0] : item.font;", "+\t\t\t\t\tint hFont = item.cellFont != null ? item.cellFont [0] : -1;", "+\t\t\t\t\tif (hFont == -1) hFont = item.font;", "+\t\t\t\t\t\tboolean useColor = true;", "-\t\t\t\t\t\tif ((tvItem.state & (OS.TVIS_SELECTED | OS.TVIS_DROPHILITED)) == 0) {", "-\t\t\t\t\t\t\tint clrText = item.cellForeground != null ? item.cellForeground [0] : item.foreground;", "+\t\t\t\t\t\tif ((tvItem.state & (OS.TVIS_SELECTED | OS.TVIS_DROPHILITED)) != 0) {", "+\t\t\t\t\t\t\tuseColor = false;", "+\t\t\t\t\t\t\t/*", "+\t\t\t\t\t\t\t* Feature in Windows.  When the mouse is pressed and the", "+\t\t\t\t\t\t\t* selection is first drawn for a tree, the previously", "+\t\t\t\t\t\t\t* selected item is redrawn but the the TVIS_SELECTED bits", "+\t\t\t\t\t\t\t* are not cleared.  When the user moves the mouse slightly", "+\t\t\t\t\t\t\t* and a drag and drop operation is not started, the item is", "+\t\t\t\t\t\t\t* drawn again and this time with TVIS_SELECTED is cleared.", "+\t\t\t\t\t\t\t* This means that an item that contains colored cells will", "+\t\t\t\t\t\t\t* not draw with the correct background until the mouse is", "+\t\t\t\t\t\t\t* moved.  The fix is to test for the selection colors and", "+\t\t\t\t\t\t\t* guess that the item is not selected.", "+\t\t\t\t\t\t\t* ", "+\t\t\t\t\t\t\t* NOTE: This code does not work when the foreground and", "+\t\t\t\t\t\t\t* background of the tree are set to the selection colors", "+\t\t\t\t\t\t\t* but this does not happen in a regular application.", "+\t\t\t\t\t\t\t*/", "+\t\t\t\t\t\t\tif (handle == OS.GetFocus ()) {", "+\t\t\t\t\t\t\t\tif (OS.GetTextColor (hDC) != OS.GetSysColor (OS.COLOR_HIGHLIGHTTEXT)) {", "+\t\t\t\t\t\t\t\t\tuseColor = true;", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tif (OS.GetBkColor (hDC) != OS.GetSysColor (OS.COLOR_HIGHLIGHT)) {", "+\t\t\t\t\t\t\t\t\t\tuseColor = true;", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (useColor) {", "+\t\t\t\t\t\t\tint clrText = item.cellForeground != null ? item.cellForeground [0] : -1;", "+\t\t\t\t\t\t\tif (clrText == -1) clrText = item.foreground;", "-\t\t\t\t\t\t\tint clrTextBk = item.cellBackground != null ? item.cellBackground [0] : item.background;", "+\t\t\t\t\t\t\tint clrTextBk = item.cellBackground != null ? item.cellBackground [0] : -1;", "+\t\t\t\t\t\t\tif (clrTextBk == -1) clrTextBk = item.background;", "+\t\t\t\t\t\t\t\t/*", "+\t\t\t\t\t\t\t\t* Feature in Windows.  When the mouse is pressed and the", "+\t\t\t\t\t\t\t\t* selection is first drawn for a tree, the previously", "+\t\t\t\t\t\t\t\t* selected item is redrawn but the the TVIS_SELECTED bits", "+\t\t\t\t\t\t\t\t* are not cleared.  When the user moves the mouse slightly", "+\t\t\t\t\t\t\t\t* and a drag and drop operation is not started, the item is", "+\t\t\t\t\t\t\t\t* drawn again and this time with TVIS_SELECTED is cleared.", "+\t\t\t\t\t\t\t\t* This means that an item that contains colored cells will", "+\t\t\t\t\t\t\t\t* not draw with the correct background until the mouse is", "+\t\t\t\t\t\t\t\t* moved.  The fix is to test for the selection colors and", "+\t\t\t\t\t\t\t\t* guess that the item is not selected.", "+\t\t\t\t\t\t\t\t* ", "+\t\t\t\t\t\t\t\t* NOTE: This code does not work when the foreground and", "+\t\t\t\t\t\t\t\t* background of the tree are set to the selection colors", "+\t\t\t\t\t\t\t\t* but this does not happen in a regular application.", "+\t\t\t\t\t\t\t\t*/", "+\t\t\t\t\t\t\t\tif (handle == OS.GetFocus ()) {", "+\t\t\t\t\t\t\t\t\tif (OS.GetTextColor (hDC) != OS.GetSysColor (OS.COLOR_HIGHLIGHTTEXT)) {", "+\t\t\t\t\t\t\t\t\t\tuseColor = true;", "+\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\tif (OS.GetBkColor (hDC) != OS.GetSysColor (OS.COLOR_HIGHLIGHT)) {", "+\t\t\t\t\t\t\t\t\t\t\tuseColor = true;", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t* NOTE: This code doesn't work when the foreground and", "+\t\t\t\t\t\t\t\t* NOTE: This code does not work when the foreground and", "-\t\t\t\t\t\t\t\tint clrForeground = OS.GetTextColor (hDC);", "-\t\t\t\t\t\t\t\tif (clrForeground == OS.GetSysColor (OS.COLOR_HIGHLIGHTTEXT)) {", "-\t\t\t\t\t\t\t\t\tint clrBackground = OS.GetBkColor (hDC);", "-\t\t\t\t\t\t\t\t\tif (clrBackground == OS.GetSysColor (OS.COLOR_HIGHLIGHT)) {", "+\t\t\t\t\t\t\t\tif (OS.GetTextColor (hDC) == OS.GetSysColor (OS.COLOR_HIGHLIGHTTEXT)) {", "+\t\t\t\t\t\t\t\t\tif (OS.GetBkColor (hDC) == OS.GetSysColor (OS.COLOR_HIGHLIGHT)) {", "-\t\t\t\t\t\t\t\tif (printClient || (style & SWT.FULL_SELECTION) != 0) {", "-\t\t\t\t\t\t\t\t\tclrTextBk = OS.GetBkColor (hDC);", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\tif (useColor) {", "-\t\t\t\t\t\t\t\t\t\tclrTextBk = item.cellBackground != null ? item.cellBackground [index] : item.background;", "+\t\t\t\t\t\t\t\tif (useColor) {", "+\t\t\t\t\t\t\t\t\tclrTextBk = item.cellBackground != null ? item.cellBackground [index] : -1;", "+\t\t\t\t\t\t\t\t\tif (clrTextBk == -1) clrTextBk = item.background;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tif (clrTextBk == -1) {", "+\t\t\t\t\t\t\t\t\tif (printClient || (style & SWT.FULL_SELECTION) != 0) {", "+\t\t\t\t\t\t\t\t\t\tclrTextBk = OS.GetBkColor (hDC);", "-\t\t\t\t\t\t\t\t\t\tint hFont = item.cellFont != null ? item.cellFont [index] : item.font;", "+\t\t\t\t\t\t\t\t\t\tint hFont = item.cellFont != null ? item.cellFont [index] : -1;", "+\t\t\t\t\t\t\t\t\t\tif (hFont == -1) hFont = item.font;", "-\t\t\t\t\t\t\t\t\t\t\tclrText = item.cellForeground != null ? item.cellForeground [index] : item.foreground;", "+\t\t\t\t\t\t\t\t\t\t\tclrText = item.cellForeground != null ? item.cellForeground [index] : -1;", "+\t\t\t\t\t\t\t\t\t\t\tif (clrText == -1) clrText = item.foreground;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "409ad8f9bb4f83ad170af7e59b580ea1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "5cab2569643885009d09edef4954f0f1cc3554bb", "commitAfterChange": "eca05854d1b4619b606045e7674111329bc5e274", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": "  LRESULT wmNotifyChild (int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmNotifyChild (int wParam, int lParam)", "diff": ["-\t\t\t\t\tif (!printClient) {", "+\t\t\t\t\tif (!printClient && (style & SWT.FULL_SELECTION) == 0) {", "-\t\t\t\t\tif (OS.IsWindowEnabled (handle)) {", "-\t\t\t\t\t\tOS.SetTextColor (hDC, getForegroundPixel ());", "+\t\t\t\t\tboolean useColor = OS.IsWindowEnabled (handle);", "+\t\t\t\t\tif (useColor) {", "+\t\t\t\t\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "+\t\t\t\t\t\t\tTVITEM tvItem = new TVITEM ();", "+\t\t\t\t\t\t\ttvItem.mask = OS.TVIF_STATE;", "+\t\t\t\t\t\t\ttvItem.hItem = item.handle;", "+\t\t\t\t\t\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "+\t\t\t\t\t\t\tif ((tvItem.state & OS.TVIS_SELECTED) != 0) {", "+\t\t\t\t\t\t\t\tuseColor = false;", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t/*", "+\t\t\t\t\t\t\t\t* Feature in Windows.  When the mouse is pressed and the", "+\t\t\t\t\t\t\t\t* selection is first drawn for a tree, the item is drawn", "+\t\t\t\t\t\t\t\t* selected, but the TVIS_SELECTED bits for the item are", "+\t\t\t\t\t\t\t\t* not set.  When the user moves the mouse slightly and", "+\t\t\t\t\t\t\t\t* a drag and drop operation is not started, the item is", "+\t\t\t\t\t\t\t\t* drawn again and this time TVIS_SELECTED is set.  This", "+\t\t\t\t\t\t\t\t* means that an item that is in a tree that has the style", "+\t\t\t\t\t\t\t\t* TVS_FULLROWSELECT and that also contains colored cells", "+\t\t\t\t\t\t\t\t* will not draw the entire row selected until the user", "+\t\t\t\t\t\t\t\t* moves the mouse.  The fix is to test for the selection", "+\t\t\t\t\t\t\t\t* colors and guess that the item is selected.", "+\t\t\t\t\t\t\t\t* ", "+\t\t\t\t\t\t\t\t* NOTE: This code doesn't work when the foreground and", "+\t\t\t\t\t\t\t\t* background of the tree are set to the selection colors", "+\t\t\t\t\t\t\t\t* but this does not happen in a regular application.", "+\t\t\t\t\t\t\t\t*/", "+\t\t\t\t\t\t\t\tint clrForeground = OS.GetTextColor (hDC);", "+\t\t\t\t\t\t\t\tif (clrForeground == OS.GetSysColor (OS.COLOR_HIGHLIGHTTEXT)) {", "+\t\t\t\t\t\t\t\t\tint clrBackground = OS.GetBkColor (hDC);", "+\t\t\t\t\t\t\t\t\tif (clrBackground == OS.GetSysColor (OS.COLOR_HIGHLIGHT)) {", "+\t\t\t\t\t\t\t\t\t\tuseColor = false;", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tOS.SetTextColor (hDC, getForegroundPixel ());", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tif (printClient) {", "-\t\t\t\t\t\t\t\t\t/* Assume that the disabled color is COLOR_BTN_FACE */", "-\t\t\t\t\t\t\t\t\tint clrBackground = OS.IsWindowEnabled (handle) ? getBackgroundPixel () : OS.GetSysColor (OS.COLOR_BTNFACE);", "-\t\t\t\t\t\t\t\t\tdrawBackground (hDC, clrBackground, rect);", "+\t\t\t\t\t\t\t\tif (printClient || (style & SWT.FULL_SELECTION) != 0) {", "+\t\t\t\t\t\t\t\t\tdrawBackground (hDC, OS.GetBkColor (hDC), rect);", "-\t\t\t\t\t\t\t\tif (OS.IsWindowEnabled (handle)) {", "+\t\t\t\t\t\t\t\tif (useColor) {", "-\t\t\t\t\t\t\t\t\t\tif (OS.IsWindowEnabled (handle)) {", "+\t\t\t\t\t\t\t\t\t\tif (useColor) {", "-\t\t\t\t\t\tRECT rect = new RECT ();", "-\t\t\t\t\t\tif (printClient) {", "+\t\t\t\t\t\tif (printClient && (style & SWT.FULL_SELECTION) == 0) {", "+\t\t\t\t\t\t\t\t\tRECT rect = new RECT ();", "-\t\t\t\t\t\tif (OS.COMCTL32_MAJOR < 6) {", "+\t\t\t\t\t\tRECT rect = new RECT ();", "+\t\t\t\t\t\tif (OS.COMCTL32_MAJOR < 6 || (style & SWT.FULL_SELECTION) != 0) {", "-\t\t\t\t\t\t\t\tif (hItem == item.handle || OS.COMCTL32_MAJOR < 6) {", "+\t\t\t\t\t\t\t\tif (hItem == item.handle) {"]}], "num": 30866}