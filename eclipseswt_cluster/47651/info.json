{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2b7fd9c467ebfc492cf748547569e2b5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eeb62cec60d66d0b95a0f41b875f302d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/gtk/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "af8fb61be19047d47b0499fc7bdc385c923f5514", "commitAfterChange": "83ae7ec2e6d2305056c75d3509268f2018b8a96a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public Browser(Composite parent, int style)", "signatureAfterChange": " public Browser(Composite parent, int style)", "diff": ["-\t\t * As a result of not using profiles, the user's locale defaults", "-\t\t * to en_us, which is not the correct value for users in other", "-\t\t * locales.  The fix for this is to set mozilla's locale preference", "-\t\t * value according to the user's current locale.", "+\t\t * As a result of not using profiles, the user's locale and charset default", "+\t\t * to en_us and iso-8859-1, which are not the correct values for users in", "+\t\t * other locales.  The fix for this is to set mozilla's locale and charset", "+\t\t * preference values according to the user's current locale and charset.", "+", "+\t\t/* get Mozilla's current locale preference value */", "-\t\t/* get Mozilla's current locale preference value */", "-\t\tLocale locale = java.util.Locale.getDefault();", "+\t\tLocale locale = Locale.getDefault();", "-\t\t\t/* write the new value */", "+\t\t\t/* write the new locale value */", "+", "+\t\t/* get Mozilla's current charset preference value */", "+\t\tbuffer = Converter.wcsToMbcs(null, PREFERENCE_CHARSET, true);", "+\t\trc = prefBranch.GetComplexValue(buffer, nsIPrefLocalizedString.NS_IPREFLOCALIZEDSTRING_IID, result);", "+\t\tif (rc != XPCOM.NS_OK) error(rc);", "+\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "+", "+\t\tlocalizedString = new nsIPrefLocalizedString(result[0]);", "+\t\tresult[0] = 0;", "+\t\trc = localizedString.ToString(result);", "+\t\tif (rc != XPCOM.NS_OK) error(rc);", "+\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "+\t\tlength = XPCOM.strlen_PRUnichar(result[0]);", "+\t\tdest = new char[length];", "+\t\tXPCOM.memmove(dest, result[0], length * 2);", "+\t\tString prefCharsets = new String(dest);", "+", "+\t\tString newCharset = System.getProperty(\"file.encoding\");\t// $NON-NLS-1$", "+\t\tif (!newCharset.equals(prefCharsets)) {", "+\t\t\t/* write the new value */", "+\t\t\tlength = newCharset.length();", "+\t\t\tchar[] charBuffer = new char[length + 1];", "+\t\t\tnewCharset.getChars(0, length, charBuffer, 0);", "+\t\t\tlocalizedString.SetDataWithLength(length, charBuffer);", "+\t\t\trc = prefBranch.SetComplexValue(buffer, nsIPrefLocalizedString.NS_IPREFLOCALIZEDSTRING_IID, localizedString.getAddress());", "+\t\t\tif (rc != XPCOM.NS_OK) error(rc);", "+\t\t}", "+\t\tlocalizedString.Release();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a6da6239333349450b900102509957c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/motif/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "83ae7ec2e6d2305056c75d3509268f2018b8a96a", "commitAfterChange": "69ca5330829dc12b4ee79a2f425dddecd4d5dca3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public Browser(Composite parent, int style)", "signatureAfterChange": " public Browser(Composite parent, int style)", "diff": ["-\t\t * As a result of not using profiles, the user's locale defaults", "-\t\t * to en_us, which is not the correct value for users in other", "-\t\t * locales.  The fix for this is to set mozilla's locale preference", "-\t\t * value according to the user's current locale.", "+\t\t * As a result of not using profiles, the user's locale and charset default", "+\t\t * to en_us and iso-8859-1, which are not the correct values for users in", "+\t\t * other locales.  The fix for this is to set mozilla's locale and charset", "+\t\t * preference values according to the user's current locale and charset.", "+", "+\t\t/* get Mozilla's current locale preference value */", "-\t\t/* get Mozilla's current locale preference value */", "-\t\tLocale locale = java.util.Locale.getDefault();", "+\t\tLocale locale = Locale.getDefault();", "-\t\t\t/* write the new value */", "+\t\t\t/* write the new locale value */", "+", "+\t\t/* get Mozilla's current charset preference value */", "+\t\tbuffer = Converter.wcsToMbcs(null, PREFERENCE_CHARSET, true);", "+\t\trc = prefBranch.GetComplexValue(buffer, nsIPrefLocalizedString.NS_IPREFLOCALIZEDSTRING_IID, result);", "+\t\tif (rc != XPCOM.NS_OK) error(rc);", "+\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "+", "+\t\tlocalizedString = new nsIPrefLocalizedString(result[0]);", "+\t\tresult[0] = 0;", "+\t\trc = localizedString.ToString(result);", "+\t\tif (rc != XPCOM.NS_OK) error(rc);", "+\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "+\t\tlength = XPCOM.strlen_PRUnichar(result[0]);", "+\t\tdest = new char[length];", "+\t\tXPCOM.memmove(dest, result[0], length * 2);", "+\t\tString prefCharsets = new String(dest);", "+", "+\t\tString newCharset = System.getProperty(\"file.encoding\");\t// $NON-NLS-1$", "+\t\tif (!newCharset.equals(prefCharsets)) {", "+\t\t\t/* write the new charset value */", "+\t\t\tlength = newCharset.length();", "+\t\t\tchar[] charBuffer = new char[length + 1];", "+\t\t\tnewCharset.getChars(0, length, charBuffer, 0);", "+\t\t\tlocalizedString.SetDataWithLength(length, charBuffer);", "+\t\t\trc = prefBranch.SetComplexValue(buffer, nsIPrefLocalizedString.NS_IPREFLOCALIZEDSTRING_IID, localizedString.getAddress());", "+\t\t\tif (rc != XPCOM.NS_OK) error(rc);", "+\t\t}", "+\t\tlocalizedString.Release();"]}], "num": 47651}