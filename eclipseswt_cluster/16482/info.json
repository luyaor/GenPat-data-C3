{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9f50d396026cf2432185c674b26bbd84", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "112966c303183441d3492c36c2a40975", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "457941bdd228ddf6bd32b032e603ffcc82442327", "commitAfterChange": "a131390e1c17e182394b0bba02869a1c2bffd489", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\tif (OS.COMCTL32_MAJOR >= 6) {", "-\t\t\tif ((style & SWT.SINGLE) != 0 && (style & SWT.SEARCH) != 0) {", "-\t\t\t\tlength = message.length ();", "-\t\t\t\tif (length != 0) {", "-\t\t\t\t\tchar [] buffer = new char [length + 1];", "-\t\t\t\t\tmessage.getChars (0, length, buffer, 0);", "-\t\t\t\t\tSIZE size = new SIZE ();", "-\t\t\t\t\tOS.GetTextExtentPoint32W (hDC, buffer, length, size);", "-\t\t\t\t\twidth = Math.max (width, size.cx);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "+//\t\tif (OS.COMCTL32_MAJOR >= 6) {", "+//\t\t\tif ((style & SWT.SINGLE) != 0 && (style & SWT.SEARCH) != 0) {", "+//\t\t\t\tlength = message.length ();", "+//\t\t\t\tif (length != 0) {", "+//\t\t\t\t\tchar [] buffer = new char [length + 1];", "+//\t\t\t\t\tmessage.getChars (0, length, buffer, 0);", "+//\t\t\t\t\tSIZE size = new SIZE ();", "+//\t\t\t\t\tOS.GetTextExtentPoint32W (hDC, buffer, length, size);", "+//\t\t\t\t\twidth = Math.max (width, size.cx);", "+//\t\t\t\t}", "+//\t\t\t}", "+//\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5073e2f3beca0986aa211f1384d10612", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "22ebc0bfda7d51c576a69d9ad65b1367c74fe002", "commitAfterChange": "b024555b7be59ed9c69f2568310cc99cd0b6720a", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": "  LRESULT WM_KEYDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_KEYDOWN (int wParam, int lParam)", "diff": ["-\tif ((style & SWT.CHECK) != 0 && wParam == OS.VK_SPACE) {", "-\t\tint index = OS.SendMessage (handle, OS.LVM_GETNEXTITEM, -1, OS.LVNI_FOCUSED);", "-\t\tif (index != -1) {", "-\t\t\tTableItem item = _getItem (index);", "-\t\t\titem.setChecked (!item.getChecked (), true);", "-\t\t\tif (!OS.IsWinCE) {", "-\t\t\t\tOS.NotifyWinEvent (OS.EVENT_OBJECT_FOCUS, handle, OS.OBJID_CLIENT, index + 1);", "-\t\t\t}", "-\t\t}", "+\tswitch (wParam) {", "+\t\tcase OS.VK_SPACE:", "+\t\t\t/*", "+\t\t\t* Ensure that the window proc does not process VK_SPACE", "+\t\t\t* so that it can be handled in WM_CHAR.  This allows the", "+\t\t\t* application to cancel an operation that is normally", "+\t\t\t* performed in WM_KEYDOWN from WM_CHAR.", "+\t\t\t*/", "+\t\t\treturn LRESULT.ZERO;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a83f4ddaf1ead8335684ef34f7689d5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "b055badbc52eef874ac04ced06c796aebe178c51", "commitAfterChange": "efd2b19e6f0f74c27009a05b4ddce186552ea417", "methodNumberBeforeChange": 121, "methodNumberAfterChange": 122, "signatureBeforeChange": "  int gtk_motion_notify_event (int widget, int event)", "signatureAfterChange": "  int gtk_motion_notify_event (int widget, int event)", "diff": ["-\tif (!display.dragging) {", "-\t\tif ((gdkEvent.state & OS.GDK_BUTTON1_MASK) != 0) {", "-\t\t\tif (dragDetect (display.dragStartX, display.dragStartY)) {", "-\t\t\t\tif (OS.gtk_drag_check_threshold (handle, display.dragStartX, display.dragStartY, (int) gdkEvent.x, (int) gdkEvent.y)) {", "-\t\t\t\t\tdisplay.dragging = true;", "-\t\t\t\t\tsendDragEvent (display.dragStartX, display.dragStartY);", "-\t\t\t\t\tif (isDisposed ()) return 1;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t}", "-\tif (display.dragOverride) result = 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c3019fcd4725cca02abd9ee9824d619", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "6c60a1c454119ad6b472aeb4263a0a445c965587", "commitAfterChange": "1d50514fe095156d3ff099c9fc9895bec81d60ae", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 135, "signatureBeforeChange": "  LRESULT WM_LBUTTONDBLCLK (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_LBUTTONDBLCLK (int wParam, int lParam)", "diff": ["-\t\t/*", "-\t\t* Bug in Windows.  When a tree item that has an image", "-\t\t* with alpha is expanded or collapsed, the area where", "-\t\t* the image is drawn is not erased before it is drawn.", "-\t\t* This means that the image gets darker each time.", "-\t\t* The fix is to redraw the item.", "-\t\t*/", "-\t\tif (!OS.IsWinCE && OS.COMCTL32_MAJOR >= 6) {", "-\t\t\tif ((lpht.flags & OS.TVHT_ONITEMBUTTON) != 0) {", "-\t\t\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "-\t\t\t\tif ((bits & OS.TVS_FULLROWSELECT) == 0) {", "-\t\t\t\t\tRECT rect = new RECT ();", "-\t\t\t\t\trect.left = lpht.hItem;", "-\t\t\t\t\tOS.SendMessage (handle, OS.TVM_GETITEMRECT, 0, rect);", "-\t\t\t\t\tOS.InvalidateRect (handle, rect, true);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}"]}], "num": 16482}