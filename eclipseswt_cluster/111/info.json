{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a469e43c7a7086bf174cb351c8ed5b30", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58ac39a460bd2e981c785b7de9dd75e8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "beda5b839167b1b13e3a65b090e298b270572014", "commitAfterChange": "e83e2a14510bd4b2fede7ad0592f39a83b67fb7d", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 128, "signatureBeforeChange": "  LRESULT wmNotifyChild (int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmNotifyChild (int wParam, int lParam)", "diff": ["+\t\t\t\t\t/*", "+\t\t\t\t\t* Bug in Windows.  When the table has the extended style", "+\t\t\t\t\t* LVS_EX_FULLROWSELECT and LVM_SETBKCOLOR is used with", "+\t\t\t\t\t* CLR_NONE to make the table transparent, Windows fills", "+\t\t\t\t\t* a black rectangle around any column that contains an", "+\t\t\t\t\t* image.  The fix is clear LVS_EX_FULLROWSELECT during", "+\t\t\t\t\t* custom draw.", "+\t\t\t\t\t*/", "+\t\t\t\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "+\t\t\t\t\t\tif (OS.SendMessage (handle, OS.LVM_GETBKCOLOR, 0, 0) == OS.CLR_NONE) {", "+\t\t\t\t\t\t\tOS.UpdateWindow (handle);", "+\t\t\t\t\t\t\tint bits = OS.LVS_EX_FULLROWSELECT;", "+\t\t\t\t\t\t\tOS.SendMessage (handle, OS.LVM_SETEXTENDEDLISTVIEWSTYLE, bits, 0);", "+\t\t\t\t\t\t\tOS.ValidateRect (handle, null);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "-\t\t\t\t\treturn new LRESULT (OS.CDRF_NOTIFYITEMDRAW);", "+\t\t\t\t\treturn new LRESULT (OS.CDRF_NOTIFYITEMDRAW | OS.CDRF_NOTIFYPOSTPAINT);", "+\t\t\t\t}", "+\t\t\t\tcase OS.CDDS_POSTPAINT: {", "+\t\t\t\t\t/*", "+\t\t\t\t\t* Bug in Windows.  When the table has the extended style", "+\t\t\t\t\t* LVS_EX_FULLROWSELECT and LVM_SETBKCOLOR is used with", "+\t\t\t\t\t* CLR_NONE to make the table transparent, Windows fills", "+\t\t\t\t\t* a black rectangle around any column that contains an", "+\t\t\t\t\t* image.  The fix is clear LVS_EX_FULLROWSELECT during", "+\t\t\t\t\t* custom draw.", "+\t\t\t\t\t*/", "+\t\t\t\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "+\t\t\t\t\t\tif (OS.SendMessage (handle, OS.LVM_GETBKCOLOR, 0, 0) == OS.CLR_NONE) {", "+\t\t\t\t\t\t\tint bits = OS.LVS_EX_FULLROWSELECT;", "+\t\t\t\t\t\t\tif (OS.IsWinCE) {", "+\t\t\t\t\t\t\t\tRECT rect = new RECT ();", "+\t\t\t\t\t\t\t\tboolean damaged = OS.GetUpdateRect (handle, rect, true);", "+\t\t\t\t\t\t\t\tOS.SendMessage (handle, OS.LVM_SETEXTENDEDLISTVIEWSTYLE, bits, bits);", "+\t\t\t\t\t\t\t\tOS.ValidateRect (handle, null);", "+\t\t\t\t\t\t\t\tif (damaged) OS.InvalidateRect (handle, rect, true);", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tint rgn = OS.CreateRectRgn (0, 0, 0, 0);", "+\t\t\t\t\t\t\t\tint result = OS.GetUpdateRgn (handle, rgn, true);", "+\t\t\t\t\t\t\t\tOS.SendMessage (handle, OS.LVM_SETEXTENDEDLISTVIEWSTYLE, bits, bits);", "+\t\t\t\t\t\t\t\tOS.ValidateRect (handle, null);", "+\t\t\t\t\t\t\t\tif (result != OS.NULLREGION) OS.InvalidateRgn (handle, rgn, true);", "+\t\t\t\t\t\t\t\tOS.DeleteObject (rgn);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tboolean ignoreDrawSelected = false;", "+\t\t\t\t\t\t\t\tignoreDrawSelected = true;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\t/*", "+\t\t\t\t\t* Bug in Windows.  When the table has the extended style", "+\t\t\t\t\t* LVS_EX_FULLROWSELECT and LVM_SETBKCOLOR is used with", "+\t\t\t\t\t* CLR_NONE to make the table transparent, Windows draws", "+\t\t\t\t\t* a black rectangle around any column that contains an", "+\t\t\t\t\t* image.  The fix is emulate LVS_EX_FULLROWSELECT by", "+\t\t\t\t\t* drawing the selection.", "+\t\t\t\t\t*/", "+\t\t\t\t\tif (!ignoreDrawSelected && (style & SWT.FULL_SELECTION) != 0) {", "+\t\t\t\t\t\tint bits = OS.SendMessage (handle, OS.LVM_GETEXTENDEDLISTVIEWSTYLE, 0, 0);", "+\t\t\t\t\t\tif ((bits & OS.LVS_EX_FULLROWSELECT) == 0) {", "+\t\t\t\t\t\t\t/*", "+\t\t\t\t\t\t\t* Bug in Windows.  For some reason, CDIS_SELECTED always set,", "+\t\t\t\t\t\t\t* even for items that are not selected.  The fix is to get", "+\t\t\t\t\t\t\t* the selection state from the item.", "+\t\t\t\t\t\t\t*/", "+\t\t\t\t\t\t\tLVITEM lvItem = new LVITEM ();", "+\t\t\t\t\t\t\tlvItem.mask = OS.LVIF_STATE;", "+\t\t\t\t\t\t\tlvItem.stateMask = OS.LVIS_SELECTED;", "+\t\t\t\t\t\t\tlvItem.iItem = nmcd.dwItemSpec;", "+\t\t\t\t\t\t\tint result = OS.SendMessage (handle, OS.LVM_GETITEM, 0, lvItem);", "+\t\t\t\t\t\t\tif ((result != 0 && (lvItem.state & OS.LVIS_SELECTED) != 0)) {", "+\t\t\t\t\t\t\t\tif (OS.GetFocus () == handle) {", "+\t\t\t\t\t\t\t\t\tclrText = OS.GetSysColor (OS.COLOR_HIGHLIGHTTEXT);", "+\t\t\t\t\t\t\t\t\tclrTextBk = OS.GetSysColor (OS.COLOR_HIGHLIGHT);", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tif ((style & SWT.HIDE_SELECTION) == 0) {", "+\t\t\t\t\t\t\t\t\t\tclrTextBk = OS.GetSysColor (OS.COLOR_3DFACE);", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tif (clrTextBk != -1 && nmcd.iSubItem == 0) {", "+\t\t\t\t\t\t\t\t\tRECT itemRect = new RECT ();", "+\t\t\t\t\t\t\t\t\titemRect.left = OS.LVIR_SELECTBOUNDS;", "+\t\t\t\t\t\t\t\t\tif (OS.SendMessage (handle, OS. LVM_GETITEMRECT, nmcd.dwItemSpec, itemRect) != 0) {", "+\t\t\t\t\t\t\t\t\t\tRECT headerRect = new RECT ();", "+\t\t\t\t\t\t\t\t\t\tif (OS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, 0, headerRect) != 0) {", "+\t\t\t\t\t\t\t\t\t\t\titemRect.left = itemRect.right;", "+\t\t\t\t\t\t\t\t\t\t\titemRect.right = headerRect.right;", "+\t\t\t\t\t\t\t\t\t\t\tfillBackground (hDC, clrTextBk, itemRect);", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t\trect.left = OS.LVIR_BOUNDS;", "+\t\t\t\t\t\titemRect.left = OS.LVIR_BOUNDS;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6898c2fec84d3b9a998cd7614ff83e0f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "13797ef0d0261612a066adff160fe7551656ea55", "commitAfterChange": "6110f991e7634879dd4777a1720b5cbd3424f44a", "methodNumberBeforeChange": 129, "methodNumberAfterChange": 129, "signatureBeforeChange": "  LRESULT wmNotifyChild (int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmNotifyChild (int wParam, int lParam)", "diff": ["-\t\t\t\t\tif (drawCount != 0 || !OS.IsWindowVisible (handle)) break;", "-\t\t\t\t\t/*", "-\t\t\t\t\t* Bug in Windows.  When the table has the extended style", "-\t\t\t\t\t* LVS_EX_FULLROWSELECT and LVM_SETBKCOLOR is used with", "-\t\t\t\t\t* CLR_NONE to make the table transparent, Windows fills", "-\t\t\t\t\t* a black rectangle around any column that contains an", "-\t\t\t\t\t* image.  The fix is clear LVS_EX_FULLROWSELECT during", "-\t\t\t\t\t* custom draw.", "-\t\t\t\t\t*/", "-\t\t\t\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "-\t\t\t\t\t\tif (OS.SendMessage (handle, OS.LVM_GETBKCOLOR, 0, 0) == OS.CLR_NONE) {", "-\t\t\t\t\t\t\tOS.UpdateWindow (handle);", "-\t\t\t\t\t\t\tint bits = OS.LVS_EX_FULLROWSELECT;", "-\t\t\t\t\t\t\tOS.SendMessage (handle, OS.LVM_SETEXTENDEDLISTVIEWSTYLE, bits, 0);", "-\t\t\t\t\t\t\tOS.ValidateRect (handle, null);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tif (OS.IsWindowEnabled (handle)) {", "-\t\t\t\t\t\tControl control = findBackgroundControl ();", "-\t\t\t\t\t\tif (control != null && control.backgroundImage != null) {", "-\t\t\t\t\t\t\tRECT rect = new RECT ();", "-\t\t\t\t\t\t\tOS.SetRect (rect, nmcd.left, nmcd.top, nmcd.right, nmcd.bottom);", "-\t\t\t\t\t\t\tfillImageBackground (nmcd.hdc, control, rect);", "-\t\t\t\t\t\t} else {", "+\t\t\t\t\tif (OS.IsWindowVisible (handle)) {", "+\t\t\t\t\t\t/*", "+\t\t\t\t\t\t* Bug in Windows.  When the table has the extended style", "+\t\t\t\t\t\t* LVS_EX_FULLROWSELECT and LVM_SETBKCOLOR is used with", "+\t\t\t\t\t\t* CLR_NONE to make the table transparent, Windows fills", "+\t\t\t\t\t\t* a black rectangle around any column that contains an", "+\t\t\t\t\t\t* image.  The fix is clear LVS_EX_FULLROWSELECT during", "+\t\t\t\t\t\t* custom draw.", "+\t\t\t\t\t\t*/", "+\t\t\t\t\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "+\t\t\t\t\t\t\t\tOS.UpdateWindow (handle);", "+\t\t\t\t\t\t\t\tint bits = OS.LVS_EX_FULLROWSELECT;", "+\t\t\t\t\t\t\t\tOS.SendMessage (handle, OS.LVM_SETEXTENDEDLISTVIEWSTYLE, bits, 0);", "+\t\t\t\t\t\t\t\tOS.ValidateRect (handle, null);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (OS.IsWindowEnabled (handle)) {", "+\t\t\t\t\t\t\tControl control = findBackgroundControl ();", "+\t\t\t\t\t\t\tif (control != null && control.backgroundImage != null) {", "-\t\t\t\t\t\t\t\tif (control == null) control = this;", "-\t\t\t\t\t\t\t\tfillBackground (nmcd.hdc, control.getBackgroundPixel (), rect);", "+\t\t\t\t\t\t\t\tfillImageBackground (nmcd.hdc, control, rect);", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tif (OS.SendMessage (handle, OS.LVM_GETBKCOLOR, 0, 0) == OS.CLR_NONE) {", "+\t\t\t\t\t\t\t\t\tRECT rect = new RECT ();", "+\t\t\t\t\t\t\t\t\tOS.SetRect (rect, nmcd.left, nmcd.top, nmcd.right, nmcd.bottom);", "+\t\t\t\t\t\t\t\t\tif (control == null) control = this;", "+\t\t\t\t\t\t\t\t\tfillBackground (nmcd.hdc, control.getBackgroundPixel (), rect);", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "+\t\t\t\t\tif (OS.IsWindowVisible (handle) && (style & SWT.FULL_SELECTION) != 0) {", "-\t\t\t\tcase OS.CDDS_ITEMPREPAINT | OS.CDDS_SUBITEM: {", "+\t\t\t\tcase OS.CDDS_SUBITEMPREPAINT: {", "-\t\t\t\t\tif (hooks (SWT.MeasureItem)) {", "+\t\t\t\t\tif (OS.IsWindowVisible (handle) && hooks (SWT.MeasureItem)) {", "-\t\t\t\t\tif (hooks (SWT.EraseItem)) {", "+\t\t\t\t\tif (OS.IsWindowVisible (handle) && hooks (SWT.EraseItem)) {", "-\t\t\t\t\tif (!ignoreDrawSelected && (style & SWT.FULL_SELECTION) != 0) {", "+\t\t\t\t\tif (OS.IsWindowVisible (handle) && (style & SWT.FULL_SELECTION) != 0 && !ignoreDrawSelected) {", "-\t\t\t\tcase OS.CDDS_ITEMPOSTPAINT | OS.CDDS_SUBITEM: {", "+\t\t\t\tcase OS.CDDS_SUBITEMPOSTPAINT: {", "-\t\t\t\t\tif (hooks (SWT.PaintItem)) {", "+\t\t\t\t\tif (OS.IsWindowVisible (handle) && hooks (SWT.PaintItem)) {"]}], "num": 111}