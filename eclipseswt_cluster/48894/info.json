{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c7594efe7047b0556f4b901d19ee98ce", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71b3548319b0dcaf12e0bc5528af7947", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "aa5a69fe81e993c5bb9fcff4c9a425715ad470cd", "commitAfterChange": "bf9b442200602eaa6f44a276dfab033f09afe62d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public Rectangle getBounds (int index)", "signatureAfterChange": " public Rectangle getBounds (int index)", "diff": ["-\tGdkRectangle rect = new GdkRectangle ();", "+\tGdkRectangle rect = new GdkRectangle ();", "+\t", "+\tif (index == 0 && (parent.style & SWT.CHECK) != 0) {", "+\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 1, 3)) {", "+\t\t\tint [] x = new int [1], w = new int [1];", "+\t\t\tOS.gtk_tree_view_column_cell_get_position (column, parent.checkRenderer, x, w);", "+\t\t\trect.x += x [0] + w [0];", "+\t\t\trect.width -= x [0] + w [0];", "+\t\t} else {", "+\t\t\tint [] w = new int [1];", "+\t\t\tOS.gtk_cell_renderer_get_size (parent.checkRenderer, parentHandle, null, null, null, w, null);", "+\t\t\tint [] buffer = new int [1];", "+\t\t\tOS.gtk_widget_style_get (parentHandle, OS.horizontal_separator, buffer, 0);", "+\t\t\trect.x += w [0]  + buffer [0];", "+\t\t\trect.width -= w [0]  + buffer [0];", "+\t\t}", "+\t}", "+\t", "-\tif (index == 0 && (parent.style & SWT.CHECK) != 0) {", "-\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 1, 3)) {", "-\t\t\tint [] x = new int [1], w = new int [1];", "-\t\t\tOS.gtk_tree_view_column_cell_get_position (column, parent.checkRenderer, x, w);", "-\t\t\trect.x += x [0] + w [0];", "-\t\t\trect.width -= x [0] + w [0];", "-\t\t}", "-\t}", "+", "-\treturn new Rectangle (rect.x + border, rect.y + headerHeight, rect.width + 1, rect.height + 1);", "+\treturn new Rectangle (rect.x + border, rect.y + (headerHeight == 0 ?  border : headerHeight), rect.width + 1, rect.height + 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd22c70dda804a1d56708cfedf808152", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "bd469e488bef6f88459d9c0535159f8167416d1f", "commitAfterChange": "0f22a30a5b82bfeb0c093bba732059285a8fbaba", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 97, "signatureBeforeChange": "  int kEventMouseDown (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventMouseDown (int nextHandler, int theEvent, int userData)", "diff": ["+\tshort [] button = new short [1];", "+\tOS.GetEventParameter (theEvent, OS.kEventParamMouseButton, OS.typeMouseButton, null, 2, null, button);", "+\t\t\tdisplay.dragButton = button [0];", "+\t\t\tint [] chord = new int [1];", "+\t\t\tOS.GetEventParameter (theEvent, OS.kEventParamMouseChord, OS.typeUInt32, null, 4, null, chord);", "+\t\t\tdisplay.dragState = chord [0];", "+\t\t\tint [] modifiers = new int [1];", "+\t\t\tOS.GetEventParameter (theEvent, OS.kEventParamKeyModifiers, OS.typeUInt32, null, 4, null, modifiers);", "+\t\t\tdisplay.dragModifiers = modifiers [0];", "-\tshort [] button = new short [1];", "-\tOS.GetEventParameter (theEvent, OS.kEventParamMouseButton, OS.typeMouseButton, null, 2, null, button);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69df93be9adad4cfbbfe6169b5708bbe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 44, "signatureBeforeChange": "\r void initializeDisplay ()", "signatureAfterChange": "\r void initializeDisplay ()", "diff": ["-\tsleepCallback = new Callback (this, \"sleepProc\", 2);\r", "-\tsleepProc = sleepCallback.getAddress ();\r", "-\tif (sleepProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);\r", "-\r", "+\twakeCallback = new Callback (this, \"wakeProc\", 3);", "+\twakeProc = wakeCallback.getAddress ();", "+\tif (wakeProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\t", "+\t/* Create and install the pipe used to wake up from sleep */", "+\tint [] filedes = new int [2];", "+\tif (OS.pipe (filedes) != 0) error (SWT.ERROR_NO_HANDLES);", "+\tread_fd = filedes [0];  write_fd = filedes [1];", "+\tint xtAppContext = OS.XtDisplayToApplicationContext (xDisplay);", "+\tinputID = OS.XtAppAddInput (xtAppContext, read_fd, OS.XtInputReadMask, wakeProc, 0);", "+\t\r", "+\t\tOS.XmNenableThinThickness, 1,\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcd93a3c56bb95c187f42d50283c5a25", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "c3e877f8f7f86d0622d844511bee89e75388f2a5", "commitAfterChange": "57bc9da816b78e8225c369df2233b6334cde29f9", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": "  void setItemCount (TreeItem parentItem, int count)", "signatureAfterChange": "  void setItemCount (TreeItem parentItem, int count)", "diff": ["-\tint[] ids = parentItem == null ? childIds : parentItem.childIds;", "+\tint [] ids = parentItem == null ? childIds : parentItem.childIds;", "+\t\tint [] removeIds = new int [itemCount - count];", "+\t\tint removeCount = 0;", "-\t\t\t\t\t\tif (OS.RemoveDataBrowserItems (handle, OS.kDataBrowserNoItem, 1, new int [] {id}, 0) != OS.noErr) {", "-\t\t\t\t\t\t\terror (SWT.ERROR_ITEM_NOT_REMOVED);", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t}", "+\t\t\t\t\t\tremoveIds [removeIds.length - removeCount] = id;", "+\t\t\t\t\t\tremoveCount++;", "+\t\tif (removeCount != 0 && removeCount != removeIds.length) {", "+\t\t\tint [] tmp = new int [removeCount];", "+\t\t\tSystem.arraycopy(removeIds, removeIds.length - removeCount, tmp, 0, removeCount);", "+\t\t\tremoveIds = tmp;", "+\t\t}", "+\t\tif (removeCount != 0 && OS.RemoveDataBrowserItems (handle, OS.kDataBrowserNoItem, removeCount, removeIds, 0) != OS.noErr) {", "+\t\t\terror (SWT.ERROR_ITEM_NOT_REMOVED);", "+\t\t}"]}], "num": 48894}