{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a8786017095a1120079c9c2b1d1a1c8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15601c36169e23d630a790c8317a89a5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "a5b13a5f6221281903a2942bff27bcb7431c6c4d", "commitAfterChange": "b288c729374bc0b8cc409f341c10cddaf3735c66", "methodNumberBeforeChange": 157, "methodNumberAfterChange": 157, "signatureBeforeChange": "  LRESULT WM_VSCROLL (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_VSCROLL (int wParam, int lParam)", "diff": ["-\tif (hwndParent == 0) {", "-\t\tif ((style & SWT.VIRTUAL) != 0 || hooks (SWT.EraseItem) || hooks (SWT.PaintItem)) {", "-\t\t\tfixScroll = true;", "+\tif ((style & SWT.DOUBLE_BUFFERED) != 0) {", "+\t\tint code = OS.LOWORD (wParam);", "+\t\tswitch (code) {", "+\t\t\tcase OS.SB_TOP:", "+\t\t\tcase OS.SB_BOTTOM:", "+\t\t\tcase OS.SB_LINEDOWN:", "+\t\t\tcase OS.SB_LINEUP:", "+\t\t\tcase OS.SB_PAGEDOWN:", "+\t\t\tcase OS.SB_PAGEUP:", "+\t\t\t\tfixScroll = true;", "+\t\t\t\tbreak;", "-\tif (fixScroll) style &= ~SWT.DOUBLE_BUFFERED;", "+\tif (fixScroll) {", "+\t\tstyle &= ~SWT.DOUBLE_BUFFERED;", "+\t\tif (explorerTheme) {", "+\t\t\tOS.SendMessage (handle, OS.TVM_SETEXTENDEDSTYLE, OS.TVS_EX_DOUBLEBUFFER, 0);", "+\t\t}", "+\t}", "-\tif (fixScroll) style |= SWT.DOUBLE_BUFFERED;", "+\tif (fixScroll) {", "+\t\tstyle |= SWT.DOUBLE_BUFFERED;", "+\t\tif (explorerTheme) {", "+\t\t\tOS.SendMessage (handle, OS.TVM_SETEXTENDEDSTYLE, OS.TVS_EX_DOUBLEBUFFER, OS.TVS_EX_DOUBLEBUFFER);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4044cd0d68792f494e45e4343c7b467f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "83784a0bd43bf551a0a4fb21e5409eeadecd384d", "commitAfterChange": "9a54c1aa04b815cd59a20141bb2dcedb14acb097", "methodNumberBeforeChange": 139, "methodNumberAfterChange": 145, "signatureBeforeChange": "  int OnStateChange (int aWebProgress, int aRequest, int aStateFlags, int aStatus)", "signatureAfterChange": "  int OnStateChange (int aWebProgress, int aRequest, int aStateFlags, int aStatus)", "diff": ["-\t\t\tisRetrievingBadCert = false;", "+\t\tif (isRetrievingBadCert) {", "+\t\t\tisRetrievingBadCert = false;", "+\t\t\treturn XPCOM.NS_OK;", "+\t\t}", "+", "+\t\t/*", "+\t\t* If a site with a bad certificate is being encountered for the first time", "+\t\t* then store the request for future reference, set the isRetrievingBadCert", "+\t\t* flag and re-navigate to the site so that notification callbacks can be", "+\t\t* hooked on it to get its certificate info.", "+\t\t*/", "+\t\tswitch (aStatus) {", "+\t\t\tcase XPCOM.SSL_ERROR_BAD_CERT_DOMAIN:", "+\t\t\tcase XPCOM.SEC_ERROR_CA_CERT_INVALID:", "+\t\t\tcase XPCOM.SEC_ERROR_EXPIRED_CERTIFICATE:", "+\t\t\tcase XPCOM.SEC_ERROR_EXPIRED_ISSUER_CERTIFICATE:", "+\t\t\tcase XPCOM.SEC_ERROR_INADEQUATE_KEY_USAGE:", "+\t\t\tcase XPCOM.SEC_ERROR_UNKNOWN_ISSUER:", "+\t\t\tcase XPCOM.SEC_ERROR_UNTRUSTED_CERT:", "+\t\t\tcase XPCOM.SEC_ERROR_UNTRUSTED_ISSUER: {", "+\t\t\t\tnew nsISupports (aRequest).AddRef ();", "+\t\t\t\tif (badCertRequest != 0) {", "+\t\t\t\t\tnew nsISupports (badCertRequest).Release ();", "+\t\t\t\t}", "+\t\t\t\tbadCertRequest = aRequest;", "+\t\t\t\tisRetrievingBadCert = true;", "+\t\t\t\tnavigate (aRequest);", "+\t\t\t\treturn XPCOM.NS_OK;", "+\t\t\t}", "+\t\t}", "+"]}], "num": 58740}