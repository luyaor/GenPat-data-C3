{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b5525d409a6afbf8c053428559ea4008", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a752ad93a8e53f7f95055df78652a80d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 73, "signatureBeforeChange": " public void setSelection(TreeItem2[] items)", "signatureAfterChange": " public void setSelection(TreeItem2 items[])", "diff": ["-}", "-public void setSelection(TreeItem2[] items) {", "-\tcheckWidget();", "-\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);", "-\tif (items.length == 0 || ((style & SWT.SINGLE) != 0 && items.length > 1)) {", "-\t\tdeselectAll();", "-\tTreeItem2[] oldSelection = selectedItems;", "-\t", "-\t/* remove null and duplicate items */", "-\tint index = 0;", "-\tselectedItems = new TreeItem2[items.length];\t/* assume all valid items initially */", "-\tfor (int i = 0; i < items.length; i++) {", "-\t\tTreeItem2 item = items[i];", "-\t\tif (item != null && !item.isSelected()) {", "-\t\t\tselectedItems[index++] = item;", "-\t\t}", "-\t}", "-\tif (index != items.length) {", "-\t\t/* an invalid item was provided, so resize the array accordingly */", "-\t\tTreeItem2[] temp = new TreeItem2[index];", "-\t\tSystem.arraycopy(selectedItems, 0, temp, 0, index);", "-\t\tselectedItems = temp;", "-\t}", "-", "-\tfor (int i = 0; i < oldSelection.length; i++) {", "-\t\tif (!oldSelection[i].isSelected()) {", "-\t\t\tint availableIndex = oldSelection[i].availableIndex;", "-\t\t\tif (availableIndex != -1) {", "-\t\t\t\tredrawItem(availableIndex);", "-\t\t\t}", "-\t\t}", "-\t}", "-\tfor (int i = 0; i < selectedItems.length; i++) {", "-\t\tint availableIndex = selectedItems[i].availableIndex;", "-\t\tif (availableIndex != -1) {", "-\t\t\tredrawItem(availableIndex);", "-\t\t}", "+ */", "+public void setSelection(TreeItem2 items[]) {", "+\tcheckWidget ();", "+\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);", "+\tint length = items.length;", "+\tif (length == 0 || ((style & SWT.SINGLE) != 0 && length > 1)) {", "+\t\tdeselectAll ();", "+\t\treturn;", "+\t}", "+\tsetSelectableSelection(items);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ecad857eb2f237ef9d9b2cd3fd71890", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 82, "signatureBeforeChange": " public void setSelection(TreeItem items[])", "signatureAfterChange": " public void setSelection(TreeItem[] items)", "diff": ["- */", "-public void setSelection(TreeItem items[]) {", "-\tcheckWidget ();", "+}", "+public void setSelection(TreeItem[] items) {", "+\tcheckWidget();", "-\tint length = items.length;", "-\tif (length == 0 || ((style & SWT.SINGLE) != 0 && length > 1)) {", "-\t\tdeselectAll ();", "+\tif (items.length == 0 || ((style & SWT.SINGLE) != 0 && items.length > 1)) {", "+\t\tdeselectAll();", "-\tsetSelectableSelection(items);", "-}", "+\tTreeItem[] oldSelection = selectedItems;", "+\t", "+\t/* remove null and duplicate items */", "+\tint index = 0;", "+\tselectedItems = new TreeItem[items.length];\t/* assume all valid items initially */", "+\tfor (int i = 0; i < items.length; i++) {", "+\t\tTreeItem item = items[i];", "+\t\tif (item != null && !item.isSelected()) {", "+\t\t\tselectedItems[index++] = item;", "+\t\t}", "+\t}", "+\tif (index != items.length) {", "+\t\t/* an invalid item was provided, so resize the array accordingly */", "+\t\tTreeItem[] temp = new TreeItem[index];", "+\t\tSystem.arraycopy(selectedItems, 0, temp, 0, index);", "+\t\tselectedItems = temp;", "+\t}", "+\tfor (int i = 0; i < oldSelection.length; i++) {", "+\t\tif (!oldSelection[i].isSelected()) {", "+\t\t\tint availableIndex = oldSelection[i].availableIndex;", "+\t\t\tif (availableIndex != -1) {", "+\t\t\t\tredrawItem(availableIndex);", "+\t\t\t}", "+\t\t}", "+\t}", "+\tfor (int i = 0; i < selectedItems.length; i++) {", "+\t\tint availableIndex = selectedItems[i].availableIndex;", "+\t\tif (availableIndex != -1) {", "+\t\t\tredrawItem(availableIndex);", "+\t\t}", "+\t}"]}], "num": 35883}