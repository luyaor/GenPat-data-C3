{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "91ff0b06ba4606ef0e7293565ea16854", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a18add3c48249fe66b1239dcfcaa0cdb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "5df79af4244cc3f0b7dd2ecfd8284b34c42bf49c", "commitAfterChange": "9461a400b3fd4507d4b848736cdb37e604393c75", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "  void setTXNBounds ()", "signatureAfterChange": "  void setTXNBounds ()", "diff": ["+", "+\t/*", "+\t* Bug in the Macintosh.  When the caret is moved,", "+\t* the text widget scrolls to show the new location.", "+\t* This means that the text widget may be scrolled", "+\t* to the left in order to show the caret when the", "+\t* widget is not large enough to show both the caret", "+\t* location and all the text.  Unfortunately, when", "+\t* the widget is resized such that all the text and", "+\t* the caret could be visible, the Macintosh does not", "+\t* scroll the widget back.  The fix is to save the ", "+\t* current selection, set the selection to the start", "+\t* of the text and then restore the selection.  This", "+\t* will cause the widget text widget to recompute the", "+\t* left scroll position.", "+\t* ", "+\t* NOTE: Currently, this work around is only applied", "+\t* to text widgets that are not visible.  If the widget", "+\t* is resized when it is visible, this is fine because", "+\t* the user has already seen that the text is scrolled.", "+\t*/", "+\tif (OS.IsControlVisible (handle)) return;", "+\tint [] oStartOffset = new int [1], oEndOffset = new int [1];", "+\tOS.TXNGetSelection (txnObject, oStartOffset, oEndOffset);", "+\tOS.TXNSetSelection (txnObject, OS.kTXNStartOffset, OS.kTXNStartOffset);", "+\tOS.TXNShowSelection (txnObject, false);", "+\tOS.TXNSetSelection (txnObject, oStartOffset [0], oEndOffset [0]);", "+\tOS.TXNShowSelection (txnObject, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dbef30ffd98cbe967d3f3f10e411cca", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "a8e794b569e48ed111ee75c7ef4a168f438eab83", "commitAfterChange": "34d711362c95fd7705b944f4b09ae2ab72c01b84", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "  int setBounds (int x, int y, int width, int height, boolean move, boolean resize, boolean events)", "signatureAfterChange": "  int setBounds (int x, int y, int width, int height, boolean move, boolean resize, boolean events)", "diff": ["-\t\tif (bounds.width == 0) showSelection ();", "+\t\t/*", "+\t\t* Feature in the Macintosh.  When the caret is moved,", "+\t\t* the text widget scrolls to show the new location.", "+\t\t* This means that the text widget may be scrolled", "+\t\t* to the right in order to show the caret when the", "+\t\t* widget is not large enough to show both the caret", "+\t\t* location and all the text.  Unfortunately, when", "+\t\t* the text widget is resized such that all the text", "+\t\t* and the caret could be visible, Macintosh does not", "+\t\t* scroll the widget back.  The fix is to reset the", "+\t\t* selection or the text depend on if the widget", "+\t\t* is on focus or not.", "+\t\t*/", "+\t\tRect inset = getInset ();", "+\t\tint minWidth = inset.left + inset.right;", "+\t\tif (bounds.width <= minWidth && width > minWidth) {", "+\t\t\tif (hasFocus ()) {", "+\t\t\t\tControlEditTextSelectionRec selection = new ControlEditTextSelectionRec ();", "+\t\t\t\tif (OS.GetControlData (handle, (short) OS.kControlEntireControl, OS.kControlEditTextSelectionTag, 4, selection, null) == OS.noErr) {", "+\t\t\t\t\tOS.SetControlData (handle, OS.kControlEntireControl, OS.kControlEditTextSelectionTag, 4, selection);", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tint [] ptr = new int [1];", "+\t\t\t\tif (OS.GetControlData (handle, (short)OS.kControlEntireControl, OS.kControlEditTextCFStringTag, 4, ptr, null) == OS.noErr) {", "+\t\t\t\t\tOS.SetControlData (handle, OS.kControlEntireControl, OS.kControlEditTextCFStringTag, 4, ptr);", "+\t\t\t\t}", "+\t\t\t\tif (ptr [0] != 0) OS.CFRelease (ptr [0]);\t\t\t\t", "+\t\t\t}", "+\t\t}"]}], "num": 48384}