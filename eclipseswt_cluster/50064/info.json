{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b56c741ad1800d9d944bd2f060ad3f03", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47d542e52fc27d2b37c78f43c11a5457", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "a08da956b3919d96fc26850b26171899e6aa4ea9", "commitAfterChange": "fa823c434008ea53c7f2ea796b1cfcbe3b183518", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "\r void setItemOrder (int [] itemOrder)", "signatureAfterChange": "\r void setItemOrder (int [] itemOrder)", "diff": ["-\tif (itemOrder.length != itemCount) error (SWT.ERROR_INVALID_ARGUMENT);\t\r", "+\tif (itemOrder.length != itemCount) error (SWT.ERROR_INVALID_ARGUMENT);\r", "+\t\r", "+\t/* Ensure that itemOrder does not contain any duplicates. */\t\r", "+\tboolean [] set = new boolean [itemCount];\r", "+\tfor (int i = 0; i < set.length; i++) set [i] = false;\r", "+\tfor (int i = 0; i < itemOrder.length; i++) {\r", "+\t\tif (itemOrder [i] < 0 || itemOrder [i] >= itemCount) error (SWT.ERROR_INVALID_ARGUMENT);\r", "+\t\tif (set [itemOrder [i]]) error (SWT.ERROR_INVALID_ARGUMENT);\r", "+\t\tset [itemOrder [i]] = true;\r", "+\t}\r", "+\t\r", "-\t\tOS.SendMessage (handle, OS.RB_MOVEBAND, currentIndex, i);\t\t\t\t\r", "+\t\tOS.SendMessage (handle, OS.RB_MOVEBAND, currentIndex, i);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ca45d0c3113eb6c0e4f45ae755e8bfc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "a08da956b3919d96fc26850b26171899e6aa4ea9", "commitAfterChange": "fa823c434008ea53c7f2ea796b1cfcbe3b183518", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 30, "signatureBeforeChange": "\r void setItemOrder (int[] itemOrder)", "signatureAfterChange": "\r void setItemOrder (int[] itemOrder)", "diff": ["-\tint count = getItemCount();\r", "+\tint count = originalItems.length;\r", "+\r", "+\t/* Ensure that itemOrder does not contain any duplicates. */\t\r", "+\tboolean [] set = new boolean [count];\r", "+\tfor (int i = 0; i < set.length; i++) set [i] = false;\r", "+\tfor (int i = 0; i < itemOrder.length; i++) {\r", "+\t\tif (itemOrder [i] < 0 || itemOrder [i] >= count) error (SWT.ERROR_INVALID_ARGUMENT);\r", "+\t\tif (set [itemOrder [i]]) error (SWT.ERROR_INVALID_ARGUMENT);\r", "+\t\tset [itemOrder [i]] = true;\r", "+\t}\r", "+\t\r", "-\t\tCoolItem child = getChild(itemOrder[i]);\r", "-\t\tif (child == null) error(SWT.ERROR_INVALID_ARGUMENT);\r", "-\t\trow[i] = child;\r", "+\t\trow[i] = originalItems[itemOrder[i]];\r"]}], "num": 50064}