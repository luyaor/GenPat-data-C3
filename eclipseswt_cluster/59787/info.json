{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e4dfc6634d150ba45dce2df2c603713e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6e9004b90d2ca372b4f56e51b8737ed", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CBanner.java", "commitBeforeChange": "9393957a6958218e1367fa6758d85f1b44c24915", "commitAfterChange": "c0922b04510c980c4fdbfc07d5f670a2e0c2b69e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  void onPaint(GC gc)", "signatureAfterChange": "  void onPaint(GC gc)", "diff": ["-\tint[] line2 = new int[curve.length+6];", "-\tline1[index] = x + 1;", "-\tline2[index++] = x + 1;", "-\tline1[index] = size.y - BORDER_STRIPE;", "-\tline2[index++] = size.y - BORDER_STRIPE + 1;", "+\tline1[index++] = x +1;", "+\tline1[index++] = size.y - BORDER_STRIPE;", "-\t\tline1[index]=x+curve[2*i];", "-\t\tline2[index++]=x+curve[2*i];", "-\t\tline1[index]=y+curve[2*i+1];", "-\t\tline2[index++]=y+curve[2*i+1]+1;", "+\t\tline1[index++]=x+curve[2*i];", "+\t\tline1[index++]=y+curve[2*i+1];", "-\tline1[index] = x + CURVE_WIDTH;", "-\tline2[index++] = x + CURVE_WIDTH;", "-\tline1[index] = 0;", "-\tline2[index++] = 1;", "-\tline1[index] = size.x;", "-\tline2[index++] = size.x;", "-\tline1[index] = 0;", "-\tline2[index++] = 1;", "+\tline1[index++] = x + CURVE_WIDTH;", "+\tline1[index++] = 0;", "+\tline1[index++] = size.x;", "+\tline1[index++] = 0;", "+\t\t", "+\t// Anti- aliasing", "+\tint[] line2 = new int[line1.length];", "+\tindex = 0;", "+\tfor (int i = 0; i < line1.length/2; i++) { ", "+\t\tline2[index] = line1[index++]  - 1;", "+\t\tline2[index] = line1[index++];", "+\t}", "+\tint[] line3 = new int[line1.length];", "+\tindex = 0;", "+\tfor (int i = 0; i < line1.length/2; i++) {", "+\t\tline3[index] = line1[index++] + 1;", "+\t\tline3[index] = line1[index++];", "+\t}", "+\tRGB from = BORDER1;", "+\tRGB to = background.getRGB();", "+\tint red = from.red + 3*(to.red - from.red)/4;", "+\tint green = from.green + 3*(to.green - from.green)/4;", "+\tint blue = from.blue + 3*(to.blue - from.blue)/4;", "+\tColor color = new Color(getDisplay(), red, green, blue);", "+\tgc.setForeground(color);", "+\tgc.drawPolyline(line2);", "+\tgc.drawPolyline(line3);", "+\tcolor.dispose();", "-\tColor border2 = new Color(getDisplay(), BORDER2);", "-\tgc.setForeground(background);", "-\tgc.setBackground(border2);", "-\tgc.fillGradientRectangle(x1, size.y - BORDER_STRIPE + 1, curveStart-x1+1, 1, false);", "-\tgc.setForeground(border2);", "-\tgc.drawPolyline(line2);", "-\tborder2.dispose();", "-\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b118d4131218b1ea91cec2de6ff42d4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "5d484c6476bc4892c9825b0c805179fe47e751d4", "commitAfterChange": "2efd019c0428e46dfacf8317bc1b4ae9f271e166", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " void antialias (int[] shape, RGB lineRGB, RGB innerRGB, RGB outerRGB, GC gc)", "signatureAfterChange": " void antialias (int[] shape, RGB lineRGB, RGB innerRGB, RGB outerRGB, GC gc)", "diff": ["-\tint[] outer = new int[shape.length];", "-\tint index = 0;", "-\tboolean left = true;", "-\tint oldY = onBottom ? 0 : getSize().y;", "-\tfor (int i = 0; i < shape.length/2; i++) {", "-\t\tif (left && (index + 3 < shape.length)) {", "-\t\t\tleft = onBottom ? oldY <= shape[index+3] : oldY >= shape[index+3];", "-\t\t\toldY = shape[index+1];", "+\tif (outerRGB != null) {", "+\t\tint index = 0;", "+\t\tboolean left = true;", "+\t\tint oldY = onBottom ? 0 : getSize().y;", "+\t\tint[] outer = new int[shape.length];", "+\t\tfor (int i = 0; i < shape.length/2; i++) {", "+\t\t\tif (left && (index + 3 < shape.length)) {", "+\t\t\t\tleft = onBottom ? oldY <= shape[index+3] : oldY >= shape[index+3];", "+\t\t\t\toldY = shape[index+1];", "+\t\t\t}", "+\t\t\touter[index] = shape[index++] + (left ? -1 : +1);", "+\t\t\touter[index] = shape[index++];", "-\t\touter[index] = shape[index++] + (left ? -1 : +1);", "-\t\touter[index] = shape[index++];", "+\t\tRGB from = lineRGB;", "+\t\tRGB to = outerRGB;", "+\t\tint red = from.red + 4*(to.red - from.red)/5;", "+\t\tint green = from.green + 4*(to.green - from.green)/5;", "+\t\tint blue = from.blue + 4*(to.blue - from.blue)/5;", "+\t\tColor color = new Color(getDisplay(), red, green, blue);", "+\t\tgc.setForeground(color);", "+\t\tgc.drawPolyline(outer);", "+\t\tcolor.dispose();", "-\tRGB from = lineRGB;", "-\tRGB to = outerRGB;", "-\tint red = from.red + 4*(to.red - from.red)/5;", "-\tint green = from.green + 4*(to.green - from.green)/5;", "-\tint blue = from.blue + 4*(to.blue - from.blue)/5;", "-\tColor color = new Color(getDisplay(), red, green, blue);", "-\tgc.setForeground(color);", "-\tgc.drawPolyline(outer);", "-\tcolor.dispose();", "-\tint[] inner = new int[shape.length];", "-\tindex = 0;", "-\tleft = true;", "-\toldY = onBottom ? 0 : getSize().y;", "-\tfor (int i = 0; i < shape.length/2; i++) {", "-\t\tif (left && (index + 3 < shape.length)) {", "-\t\t\tleft = onBottom ? oldY <= shape[index+3] : oldY >= shape[index+3];", "-\t\t\toldY = shape[index+1];", "+\tif (innerRGB != null) {", "+\t\tint[] inner = new int[shape.length];", "+\t\tint index = 0;", "+\t\tboolean left = true;", "+\t\tint oldY = onBottom ? 0 : getSize().y;", "+\t\tfor (int i = 0; i < shape.length/2; i++) {", "+\t\t\tif (left && (index + 3 < shape.length)) {", "+\t\t\t\tleft = onBottom ? oldY <= shape[index+3] : oldY >= shape[index+3];", "+\t\t\t\toldY = shape[index+1];", "+\t\t\t}", "+\t\t\tinner[index] = shape[index++] + (left ? +1 : -1);", "+\t\t\tinner[index] = shape[index++];", "-\t\tinner[index] = shape[index++] + (left ? +1 : -1);", "-\t\tinner[index] = shape[index++];", "+\t\tRGB from = lineRGB;", "+\t\tRGB to = innerRGB;", "+\t\tint red = from.red + 4*(to.red - from.red)/5;", "+\t\tint green = from.green + 4*(to.green - from.green)/5;", "+\t\tint blue = from.blue + 4*(to.blue - from.blue)/5;", "+\t\tColor color = new Color(getDisplay(), red, green, blue);", "+\t\tgc.setForeground(color);", "+\t\tgc.drawPolyline(inner);", "+\t\tcolor.dispose();", "-\tfrom = lineRGB;", "-\tto = innerRGB;", "-\tred = from.red + 4*(to.red - from.red)/5;", "-\tgreen = from.green + 4*(to.green - from.green)/5;", "-\tblue = from.blue + 4*(to.blue - from.blue)/5;", "-\tcolor = new Color(getDisplay(), red, green, blue);", "-\tgc.setForeground(color);", "-\tgc.drawPolyline(inner);", "-\tcolor.dispose();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9403790de5a62165ceceef94f359e4aa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CBanner.java", "commitBeforeChange": "8a65e1fd2455272593b4de7266f7da4898fabc38", "commitAfterChange": "67f8ea583a7420e07c21e339ec92e00d4716ec34", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " void onPaint(GC gc)", "signatureAfterChange": " void onPaint(GC gc)", "diff": ["+\tColor border1 = getDisplay().getSystemColor(BORDER1);", "-\t\tColor border1 = new Color(getDisplay(), BORDER1);", "-\t\tborder1.dispose();", "-\t// Anti- aliasing", "-\tint[] line2 = new int[line1.length];", "-\tindex = 0;", "-\tfor (int i = 0; i < line1.length/2; i++) { ", "-\t\tline2[index] = line1[index++]  - 1;", "-\t\tline2[index] = line1[index++];", "+\tif (getDisplay().getDepth() >= 15) {", "+\t\t// Anti- aliasing", "+\t\tint[] line2 = new int[line1.length];", "+\t\tindex = 0;", "+\t\tfor (int i = 0; i < line1.length/2; i++) { ", "+\t\t\tline2[index] = line1[index++]  - 1;", "+\t\t\tline2[index] = line1[index++];", "+\t\t}", "+\t\tint[] line3 = new int[line1.length];", "+\t\tindex = 0;", "+\t\tfor (int i = 0; i < line1.length/2; i++) {", "+\t\t\tline3[index] = line1[index++] + 1;", "+\t\t\tline3[index] = line1[index++];", "+\t\t}", "+\t\tRGB from = border1.getRGB();", "+\t\tRGB to = background.getRGB();", "+\t\tint red = from.red + 3*(to.red - from.red)/4;", "+\t\tint green = from.green + 3*(to.green - from.green)/4;", "+\t\tint blue = from.blue + 3*(to.blue - from.blue)/4;", "+\t\tColor color = new Color(getDisplay(), red, green, blue);", "+\t\tgc.setForeground(color);", "+\t\tgc.drawPolyline(line2);", "+\t\tgc.drawPolyline(line3);", "+\t\tcolor.dispose();", "+\t\t", "+\t\t// draw tail fading to background", "+\t\tint x1 = Math.max(0, curveStart - CURVE_TAIL);", "+\t\tgc.setForeground(background);", "+\t\tgc.setBackground(border1);", "+\t\tgc.fillGradientRectangle(x1, size.y - BORDER_STRIPE, curveStart-x1+1, 1, false);", "-\tint[] line3 = new int[line1.length];", "-\tindex = 0;", "-\tfor (int i = 0; i < line1.length/2; i++) {", "-\t\tline3[index] = line1[index++] + 1;", "-\t\tline3[index] = line1[index++];", "-\t}", "-\tRGB from = BORDER1;", "-\tRGB to = background.getRGB();", "-\tint red = from.red + 3*(to.red - from.red)/4;", "-\tint green = from.green + 3*(to.green - from.green)/4;", "-\tint blue = from.blue + 3*(to.blue - from.blue)/4;", "-\tColor color = new Color(getDisplay(), red, green, blue);", "-\tgc.setForeground(color);", "-\tgc.drawPolyline(line2);", "-\tgc.drawPolyline(line3);", "-\tcolor.dispose();", "-\tint x1 = Math.max(0, curveStart - CURVE_TAIL);", "-\tColor border1 = new Color(getDisplay(), BORDER1);", "-\tgc.setForeground(background);", "-\tgc.setBackground(border1);", "-\tgc.fillGradientRectangle(x1, size.y - BORDER_STRIPE, curveStart-x1+1, 1, false);", "+\t// draw border", "-\tborder1.dispose();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66bc2723c2db62afe7f32a19e8dd8fe2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "2cef3fa78da7f2885ce55fa509348982e00b2225", "commitAfterChange": "bbeab947327689cb203638e742e58f555e6c1b64", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 10, "signatureBeforeChange": " private void closeNotify(CTabItem item, int time)", "signatureAfterChange": " void antialias (int[] shape, RGB lineRGB, RGB innerRGB, RGB outerRGB, GC gc)", "diff": ["-}", "-private void closeNotify(CTabItem item, int time) {", "-\tif (item == null) return;", "-\t", "-\tCTabFolderEvent event = new CTabFolderEvent(this);", "-\tevent.widget = this;", "-\tevent.time = time;", "-\tevent.item = item;", "-\tevent.doit = true;", "-\tif (tabListeners != null) {", "-\t\tfor (int i = 0; i < tabListeners.length; i++) {", "-\t\t\ttabListeners[i].itemClosed(event);", "+void antialias (int[] shape, RGB lineRGB, RGB innerRGB, RGB outerRGB, GC gc){", "+\t//don't perform anti-aliasing on Mac because the platform", "+\t// already does it.", "+\tif (\"carbon\".equals(SWT.getPlatform())) return;", "+\tif (outerRGB != null) {", "+\t\tint index = 0;", "+\t\tboolean left = true;", "+\t\tint oldY = onBottom ? 0 : getSize().y;", "+\t\tint[] outer = new int[shape.length];", "+\t\tfor (int i = 0; i < shape.length/2; i++) {", "+\t\t\tif (left && (index + 3 < shape.length)) {", "+\t\t\t\tleft = onBottom ? oldY <= shape[index+3] : oldY >= shape[index+3];", "+\t\t\t\toldY = shape[index+1];", "+\t\t\t}", "+\t\t\touter[index] = shape[index++] + (left ? -1 : +1);", "+\t\t\touter[index] = shape[index++];", "+\t\tRGB from = lineRGB;", "+\t\tRGB to = outerRGB;", "+\t\tint red = from.red + 4*(to.red - from.red)/5;", "+\t\tint green = from.green + 4*(to.green - from.green)/5;", "+\t\tint blue = from.blue + 4*(to.blue - from.blue)/5;", "+\t\tColor color = new Color(getDisplay(), red, green, blue);", "+\t\tgc.setForeground(color);", "+\t\tgc.drawPolyline(outer);", "+\t\tcolor.dispose();", "-\tif (event.doit) {", "-\t\titem.dispose();", "+\tif (innerRGB != null) {", "+\t\tint[] inner = new int[shape.length];", "+\t\tint index = 0;", "+\t\tboolean left = true;", "+\t\tint oldY = onBottom ? 0 : getSize().y;", "+\t\tfor (int i = 0; i < shape.length/2; i++) {", "+\t\t\tif (left && (index + 3 < shape.length)) {", "+\t\t\t\tleft = onBottom ? oldY <= shape[index+3] : oldY >= shape[index+3];", "+\t\t\t\toldY = shape[index+1];", "+\t\t\t}", "+\t\t\tinner[index] = shape[index++] + (left ? +1 : -1);", "+\t\t\tinner[index] = shape[index++];", "+\t\t}", "+\t\tRGB from = lineRGB;", "+\t\tRGB to = innerRGB;", "+\t\tint red = from.red + 4*(to.red - from.red)/5;", "+\t\tint green = from.green + 4*(to.green - from.green)/5;", "+\t\tint blue = from.blue + 4*(to.blue - from.blue)/5;", "+\t\tColor color = new Color(getDisplay(), red, green, blue);", "+\t\tgc.setForeground(color);", "+\t\tgc.drawPolyline(inner);", "+\t\tcolor.dispose();"]}], "num": 59787}