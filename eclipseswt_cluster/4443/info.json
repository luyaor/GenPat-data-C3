{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3817a9af7e4f91414a129bc039241ee9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37930c67c3ff66cf0ed270603c59e2f7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "67417a80e57abef8b70452450655db6a41cb90da", "commitAfterChange": "38bd43e4935fbbed6e74ae5e6ca91441972c34c3", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "  int kEventWindowGetRegion (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventWindowGetRegion (int nextHandler, int theEvent, int userData)", "diff": ["-\t\t\t* window to be shifted.  The fix is to modify the origin.", "+\t\t\t* window to be shifted for a non zero origin.  Also,", "+\t\t\t* the size of the window is the size of the region", "+\t\t\t* which may be less then the size specified in", "+\t\t\t* setSize or setBounds.", "+\t\t\t* The fix is to include (0, 0) and the bottom ", "+\t\t\t* right corner of the size in the region and to", "+\t\t\t* make these points transparent.", "-\t\t\t// TODO - find a better fix", "-\t\t\tRect r = new Rect ();", "-\t\t\tOS.GetRegionBounds (hRegion, r);", "-\t\t\tif (r.left != 0 || r.top != 0) {", "+\t\t\tif (!region.contains (0, 0)) {", "+\t\t\t\tRect r = new Rect ();", "+\t\t\t\tint rectRgn = OS.NewRgn ();", "+\t\t\t\tOS.RectRgn (rectRgn, r);", "+\t\t\t\tOS.UnionRgn (rectRgn, hRegion, hRegion);", "+\t\t\t\tOS.DisposeRgn (rectRgn);", "+\t\t\t}", "+\t\t\tif (!region.contains (rgnRect.right - 1, rgnRect.bottom - 1)) {", "+\t\t\t\tRect r = new Rect ();", "+\t\t\t\tOS.SetRect (r, (short) (rgnRect.right - 1), (short) (rgnRect.bottom - 1), rgnRect.right, rgnRect.bottom);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e98dc91311c5485b00f60868904f96ee", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "cffff79d915fb2c4476fba4c1c1103774a10b35e", "commitAfterChange": "3875e3ba1aa64e10bf5a0c495760e14e055a1a52", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "\r \r void setBounds (int x, int y, int width, int height, int flags)", "signatureAfterChange": "\r \r void setBounds (int x, int y, int width, int height, int flags)", "diff": ["-\t* Feature in Windows. If the combo box has the CBS_DROPDOWN\r", "+\t* Feature in Windows.  If the combo box has the CBS_DROPDOWN\r", "-\t\tsuper.setBounds (x, y, width, textHeight + 6 + (itemHeight * 5) + 2, flags);\r", "+\t\theight = textHeight + 6 + (itemHeight * 5) + 2;\r", "+\t\t/*\r", "+\t\t* Feature in Windows.  When a drop down combo box is resized,\r", "+\t\t* the combo box resizes height of the text field and uses the\r", "+\t\t* height provided in SetWindowPos () to determine the height\r", "+\t\t* of the drop down list.  For some reason, the combo box redraws\r", "+\t\t* the whole area, not just the text field.  The fix is to clear\r", "+\t\t* the SWP_NOSIZE bits when the height of text field and the drop\r", "+\t\t* down list is the same as the requested height.\r", "+\t\t*/\r", "+\t\tRECT rect = new RECT ();\r", "+\t\tif (OS.SendMessage (handle, OS.CB_GETDROPPEDCONTROLRECT, 0, rect) != 0) {\r", "+\t\t\tint oldWidth = rect.right - rect.left, oldHeight = rect.bottom - rect.top;\r", "+\t\t\tif (oldWidth == width && oldHeight == height) flags |= OS.SWP_NOSIZE;\r", "+\t\t}\r", "+\t\tflags |= OS.SWP_NOZORDER | OS.SWP_DRAWFRAME | OS.SWP_NOACTIVATE;\r", "+\t\tOS.SetWindowPos (handle, 0, x, y, width, height, flags);\r", "-\tif ((rect.right - rect.left) != width || (rect.bottom - rect.top) != height) {\r", "+\tint oldWidth = rect.right - rect.left, oldHeight = rect.bottom - rect.top;\r", "+\tif (oldWidth != width || oldHeight != height) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a56b5c1ea34c3c6bb01b69b55202aa35", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "8f1164987597bdcfb3f7ffdca71e5b39dcf3a485", "commitAfterChange": "45b1561398a90cbad1f5547f03d92bd48ffc136c", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "  int kEventWindowGetRegion (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventWindowGetRegion (int nextHandler, int theEvent, int userData)", "diff": ["+\t\t\t/*", "+\t\t\t* Bug in the Macintosh. In kEventWindowGetRegion, ", "+\t\t\t* Carbon assumes the origin of the Region is (0, 0)", "+\t\t\t* and ignores the actual origin.  This causes the ", "+\t\t\t* window to be shifted.  The fix is to modify the origin.", "+\t\t\t*/", "+\t\t\t// TODO - find a better fix", "+\t\t\tRect r = new Rect ();", "+\t\t\tOS.GetRegionBounds (hRegion, r);", "+\t\t\tif (r.left != 0 || r.top != 0) {", "+\t\t\t\tOS.SetRect (r, (short)0, (short)0, (short)1, (short)1);", "+\t\t\t\tint rectRgn = OS.NewRgn ();", "+\t\t\t\tOS.RectRgn (rectRgn, r);", "+\t\t\t\tOS.UnionRgn (rectRgn, hRegion, hRegion);", "+\t\t\t\tOS.DisposeRgn (rectRgn);", "+\t\t\t}"]}], "num": 4443}