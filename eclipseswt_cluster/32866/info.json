{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cd45c24332baee907b7e16018526dfd0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb7cff2d9ad815b3566d6055b650b002", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Region.java", "commitBeforeChange": "4631a5a5553c2a27a1c80b2611f4f0cea8081a20", "commitAfterChange": "21eb151f1a668a710645fe690cf473d0b86ddaf0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 4, "signatureBeforeChange": "  static void cairo_region_get_rectangles (long region, long[] rectangles, int[] n_rectangles)", "signatureAfterChange": "  static void gdk_region_get_rectangles(long region, long[] rectangles, int[] n_rectangles)", "diff": ["-", "-static void cairo_region_get_rectangles (long /*int*/ region, long /*int*/[] rectangles, int[] n_rectangles) {", "-\tif (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "-\t\tint num = Cairo.cairo_region_num_rectangles (region);", "-\t\trectangles[0] = OS.g_malloc(GdkRectangle.sizeof * num);", "-\t\tfor (int n = 0; n < num; n++) {", "-\t\t\tCairo.cairo_region_get_rectangle (region, n, rectangles[0] + (n * GdkRectangle.sizeof));", "-\t\t}", "-\t} else {", "+static void gdk_region_get_rectangles(long /*int*/ region, long /*int*/[] rectangles, int[] n_rectangles) {", "+\tif (OS.GTK_VERSION < OS.VERSION(3, 0, 0)) {", "-}", "+\tint num = Cairo.cairo_region_num_rectangles (region);", "+\trectangles[0] = OS.g_malloc(GdkRectangle.sizeof * num);", "+\tfor (int n = 0; n < num; n++) {", "+\t\tCairo.cairo_region_get_rectangle (region, n, rectangles[0] + (n * GdkRectangle.sizeof));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ef369a5399d494f169a1454fb294965", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Theme/gtk/org/eclipse/swt/internal/theme/ToolItemDrawData.java", "commitBeforeChange": "41b28fb69b28913e45dadfb38d783336ab3b6dcc", "commitAfterChange": "ed18df252bb05902f6e134f9ab9e155c5cd00356", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  void draw(Theme theme, GC gc, Rectangle bounds)", "signatureAfterChange": "  void draw(Theme theme, GC gc, Rectangle bounds)", "diff": ["-\t\t\tOS.gtk_paint_hline(gtkStyle, drawable, state_type, null, separatorHandle, detail, bounds.x, bounds.x + bounds.width, bounds.y + bounds.height / 2);", "+\t\t\tif (OS.GTK_VERSION >= OS.VERSION (3, 0, 0)) {", "+\t\t\t\tlong /*int*/ cairo = OS.gdk_cairo_create (drawable);", "+\t\t\t\tlong /*int*/ context = OS.gtk_widget_get_style_context (separatorHandle);", "+\t\t\t\tOS.gtk_render_line (context, cairo, bounds.x, bounds.y + bounds.height / 2, bounds.x + bounds.width, bounds.y + bounds.height / 2);", "+\t\t\t\tCairo.cairo_destroy(cairo);", "+\t\t\t} else {", "+\t\t\t\tOS.gtk_paint_hline(gtkStyle, drawable, state_type, null, separatorHandle, detail, bounds.x, bounds.x + bounds.width, bounds.y + bounds.height / 2);", "+\t\t\t}\t", "-\t\t\tOS.gtk_paint_vline(gtkStyle, drawable, state_type, null, separatorHandle, detail, bounds.y, bounds.y + bounds.height, bounds.x + bounds.width / 2);", "+\t\t\tif (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "+\t\t\t\tlong /*int*/ cairo = OS.gdk_cairo_create (drawable);", "+\t\t\t\tlong /*int*/ context = OS.gtk_widget_get_style_context (separatorHandle);", "+\t\t\t\tOS.gtk_render_line (context, cairo, bounds.x + bounds.width / 2, bounds.y, bounds.x + bounds.width / 2, bounds.y + bounds.height);", "+\t\t\t\tCairo.cairo_destroy (cairo);", "+\t\t\t} else {", "+\t\t\t\tOS.gtk_paint_vline(gtkStyle, drawable, state_type, null, separatorHandle, detail, bounds.y, bounds.y + bounds.height, bounds.x + bounds.width / 2);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee01e3bda5767fb49eb6b26690a459ea", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "61ac0970c1c501525ee9c1ee8c104c394020c61a", "commitAfterChange": "5b40b97f8495883f290419ddc3e69d47e697fa6c", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  @Override void setBackgroundColor (long context, long handle, GdkRGBA rgba)", "signatureAfterChange": "  @Override void setBackgroundColor (long context, long handle, GdkRGBA rgba)", "diff": ["-void setBackgroundColor (long /*int*/ context, long /*int*/ handle, GdkRGBA rgba) { //Gtk3.", "-\tsetBackgroundColorGradient (OS.gtk_widget_get_style_context (handle), handle, rgba);", "+void setBackgroundColor (long /*int*/ context, long /*int*/ handle, GdkRGBA rgba) {", "+\t/* Note: this function is called on Gtk3 only */", "+", "+\t//Pre Gtk 3.10 doesn't handle CSS background color very well for Gtk Check/Radio button.", "+\t// 3.10.3 as it was the latest to affect themeing in button.", "+\tif (OS.GTK_VERSION < OS.VERSION(3, 10, 3) && (style & (SWT.CHECK | SWT.RADIO)) != 0) {", "+\t\tsuper.setBackgroundColor (context, handle, rgba);", "+\t\treturn;", "+\t}", "+", "+\tString css =\"* {\\n\";", "+\tif (rgba != null) {", "+\t\tString color = gtk_rgba_to_css_string (rgba);", "+\t\tcss += \"background: \" + color + \";\\n\";", "+\t}", "+\tcss += \"}\\n\";", "+\tgtk_css_provider_load_from_css (context, css);"]}], "num": 32866}