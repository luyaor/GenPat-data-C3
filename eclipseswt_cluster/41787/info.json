{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "080522719903f68eb2f36f910285a91a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd8a6268aeef92575519f8df4ac0d194", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/textlayout/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "9d94d6b83450f6d7c55e3c259dd2f8a36ead717d", "commitAfterChange": "62b114225776c09f8a6570dde053dd94358f28d9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  void computeRuns (GC gc)", "signatureAfterChange": "  void computeRuns (GC gc)", "diff": ["-\tint lineHeight = 0, lineRunCount = 0, line = 0;", "+\tint lineRunCount = 0, line = 0;", "+\tint ascent = Math.max(0, this.ascent);", "+\tint descent = Math.max(0, this.descent);", "-\t\tlineHeight = Math.max(run.height + lineSpacing, lineHeight);", "+\t\tascent = Math.max(ascent, run.ascent);", "+\t\tdescent = Math.max(descent, run.descent);", "+\t\t\t/* Update the run metrics if the last run is a hard break */", "-\t\t\t\trun.height = metrics.getHeight();", "-\t\t\t\tlineHeight = run.height + lineSpacing;", "+\t\t\t\trun.ascent = metrics.getAscent() + metrics.getLeading();", "+\t\t\t\trun.descent = metrics.getDescent();", "+\t\t\t\tascent = Math.max(ascent, run.ascent);", "+\t\t\t\tdescent = Math.max(descent, run.descent);\t", "-\t\t\tlineY[line] = lineY[line - 1] + lineHeight;", "+\t\t\tlineY[line] = lineY[line - 1] + ascent + descent + lineSpacing;", "-\t\t\tlineRunCount = lineWidth = lineHeight = 0;", "+\t\t\tlineRunCount = lineWidth = 0;", "+\t\t\tascent = Math.max(0, this.ascent);", "+\t\t\tdescent = Math.max(0, this.descent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "448234eb11f408ea30c00220d5a670ab", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "9d94d6b83450f6d7c55e3c259dd2f8a36ead717d", "commitAfterChange": "62b114225776c09f8a6570dde053dd94358f28d9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " void computeRuns (GC gc)", "signatureAfterChange": " void computeRuns (GC gc)", "diff": ["-\tint lineHeight = 0, lineRunCount = 0, line = 0;", "+\tint lineRunCount = 0, line = 0;", "+\tint ascent = Math.max(0, this.ascent);", "+\tint descent = Math.max(0, this.descent);", "-\t\tlineHeight = Math.max(run.height + lineSpacing, lineHeight);", "+\t\tascent = Math.max(ascent, run.ascent);", "+\t\tdescent = Math.max(descent, run.descent);", "+\t\t\t/* Update the run metrics if the last run is a hard break. */", "-\t\t\t\trun.height = lptm.tmHeight;", "-\t\t\t\tlineHeight = run.height + lineSpacing;", "+\t\t\t\trun.ascent = lptm.tmAscent;", "+\t\t\t\trun.descent = lptm.tmDescent;", "+\t\t\t\tascent = Math.max(ascent, run.ascent);", "+\t\t\t\tdescent = Math.max(descent, run.descent);", "-\t\t\tlineY[line] = lineY[line - 1] + lineHeight;", "+\t\t\tlineY[line] = lineY[line - 1] + ascent + descent + lineSpacing;", "-\t\t\tlineRunCount = lineWidth = lineHeight = 0;", "+\t\t\tlineRunCount = lineWidth = 0;", "+\t\t\tascent = Math.max(0, this.ascent);", "+\t\t\tdescent = Math.max(0, this.descent);"]}], "num": 41787}