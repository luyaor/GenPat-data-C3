{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5de7f687495d69d6ed62ef3adca75401", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5b36765f2da3e4b7a9c2e0dcb34bf13", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "2cef3fa78da7f2885ce55fa509348982e00b2225", "commitAfterChange": "bbeab947327689cb203638e742e58f555e6c1b64", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": " public CTabItem getItem (Point pt)", "signatureAfterChange": " public CTabItem getItem (Point pt)", "diff": ["+ */", "+public CTabItem getItem (Point pt) {", "+\t//checkWidget();", "+\tif (items.length == 0) return null;", "+\tPoint size = getSize();", "+\tif (size.x <= borderLeft + borderRight) return null;", "+\tfor (int index = topTabIndex; index < items.length; index++) {", "+\t\tCTabItem item = items[index];", "+\t\tRectangle rect = item.getBounds();", "+\t\tif (rect.contains(pt)) return item;", "+\t}", "+\treturn null;", "+}", "-*/", "-public CTabItem getItem (Point pt) {", "-\t//checkWidget();", "-\tif (items.length == 0) return null;", "-\tint lastItem = getLastItem();", "-\tlastItem = Math.min(items.length - 1, lastItem + 1);", "-\tfor (int i = topTabIndex; i <= lastItem; i++) {", "-\t\tRectangle bounds = items[i].getBounds();", "-\t\tif (bounds.contains(pt)) return items[i];", "-\t}", "-\treturn null;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaf5ee5b9c008e15d9842bc591e47272", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "1d28c230c8521595a193c506a7bcba33dc702ce0", "commitAfterChange": "924f2b3baababf87e9078e95ca545c0457405129", "methodNumberBeforeChange": 155, "methodNumberAfterChange": 156, "signatureBeforeChange": " int XButtonPress (int w, int client_data, int call_data, int continue_to_dispatch)", "signatureAfterChange": " int XButtonPress (int w, int client_data, int call_data, int continue_to_dispatch)", "diff": ["+\tDisplay display = this.display;", "+\tdisplay.hideToolTip ();", "-\tdisplay.hideToolTip ();", "-\tif (!sendMouseEvent (SWT.MouseDown, xEvent)) {", "-\t\tOS.memmove (continue_to_dispatch, new int [1], 4);", "-\t\treturn 1;", "-\t}", "+\tboolean dispatch = sendMouseEvent (SWT.MouseDown, xEvent);", "+\tif (isDisposed ()) return 1;", "-\t\tEvent event = new Event ();", "-\t\tevent.x = xEvent.x;", "-\t\tevent.y = xEvent.y;", "-\t\tpostEvent (SWT.DragDetect, event);", "+\t\tsendDragEvent (xEvent.x, xEvent.y);", "+\t\tif (isDisposed ()) return 1;", "+\t\tif (isDisposed ()) return 1;", "-\t\tsendMouseEvent (SWT.MouseDoubleClick, xEvent);", "+\t\tdispatch = sendMouseEvent (SWT.MouseDoubleClick, xEvent);", "+\t\t// widget could be disposed at this point", "-\t", "-\t/* ", "-\t* It is possible that the shell may be", "-\t* disposed at this point.  If this happens", "-\t* don't send the activate and deactivate", "-\t* events.", "-\t*/\t", "-\tif (!shell.isDisposed ()) {", "-\t\tshell.setActiveControl (this);", "+\tif (!shell.isDisposed ()) shell.setActiveControl (this);", "+\tif (!dispatch) {", "+\t\tOS.memmove (continue_to_dispatch, new int [1], 4);", "+\t\treturn 1;"]}], "num": 43905}