{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bd55271c592cc2094e2f1d87143aca7c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b269cd9dbb6b951a9120f3ff02c3ab9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_List.java", "commitBeforeChange": "9e93d007401972731d2812b598cdc4e478c9b17c", "commitAfterChange": "9a65f33f478599955ffa3d6f8f3da0aa10fd6118", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "  public void test_setSelection$I()", "signatureAfterChange": "  public void test_setSelection$I()", "diff": ["-\tif (fCheckSWTPolicy) {", "-\t\tlist.removeAll();", "-\t\t", "-\t\tlist.setSelection(new int [0]);", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), -1);", "+\tlist.removeAll();", "+\t", "+\tlist.setSelection(new int [0]);", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), -1);", "-\t\ttry {", "-\t\t\tlist.setSelection((int[]) null);", "-\t\t\tfail(\"No exception thrown\");", "-\t\t} catch (IllegalArgumentException e) {", "-\t\t}", "-\t\t", "-\t\tlist.setSelection(new int [] {0});", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), -1);", "-", "-\t\tlist.setSelection(new int [] {-1});", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), -1);", "-", "-\t\tlist.setSelection(new int [] {0, 0});", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), -1);", "-\t\t", "-\t\tlist.setSelection(new int [] {-1, 0});", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), -1);", "-\t\t", "-\t\tlist.setSelection(new int [] {0, -1});", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), -1);", "+\ttry {", "+\t\tlist.setSelection((int[]) null);", "+\t\tfail(\"No exception thrown\");", "+\t} catch (IllegalArgumentException e) {", "+\t", "+\tlist.setSelection(new int [] {0});", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), -1);", "+", "+\tlist.setSelection(new int [] {-1});", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), -1);", "+", "+\tlist.setSelection(new int [] {0, 0});", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), -1);", "+\t", "+\tlist.setSelection(new int [] {-1, 0});", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), -1);", "+\t", "+\tlist.setSelection(new int [] {0, -1});", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), -1);", "-\tif (fCheckSWTPolicy) {", "-\t\tlist.removeAll();", "-\t\t", "-\t\tlist.setSelection(new int [0]);", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), -1);", "+\tlist.removeAll();", "+\t", "+\tlist.setSelection(new int [0]);", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), -1);", "-\t\ttry {", "-\t\t\tlist.setSelection((int[]) null);", "-\t\t\tfail(\"No exception thrown\");", "-\t\t} catch (IllegalArgumentException e) {", "-\t\t}", "-\t\t", "-\t\tlist.setSelection(new int [] {0});", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), -1);", "-", "-\t\tlist.setSelection(new int [] {-1});", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), -1);", "-", "-\t\tlist.setSelection(new int [] {0, 0});", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), -1);", "-\t\t", "-\t\tlist.setSelection(new int [] {-1, 0});", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), -1);", "-\t\t", "-\t\tlist.setSelection(new int [] {0, -1});", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), -1);", "+\ttry {", "+\t\tlist.setSelection((int[]) null);", "+\t\tfail(\"No exception thrown\");", "+\t} catch (IllegalArgumentException e) {", "+\t", "+\tlist.setSelection(new int [] {0});", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), -1);", "+", "+\tlist.setSelection(new int [] {-1});", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), -1);", "+", "+\tlist.setSelection(new int [] {0, 0});", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), -1);", "+\t", "+\tlist.setSelection(new int [] {-1, 0});", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), -1);", "+\t", "+\tlist.setSelection(new int [] {0, -1});", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), -1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3cef1d5190a926cdf121e107f21df96", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_List.java", "commitBeforeChange": "77f06688bfac39a45b447aab335a7b06b05d1b28", "commitAfterChange": "1d07db3b5a2325ee7331dbc2a2920f9a13277045", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "  public void test_setSelection$I()", "signatureAfterChange": "  public void test_setSelection$I()", "diff": ["+\tlist.setSelection(new int [0]);", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tlist.setSelection(new int [0]);", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tlist.setSelection(new int [0]);", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tlist.setSelection(new int [0]);", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "513d700b84fac23a71b10de7d44e691b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "334dd3b1940a2d75dbdd2f6bffa755e1429f66d2", "commitAfterChange": "fa7eee3a1d10b376837126ea0a7c765da37c3240", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "  void initClasses ()", "signatureAfterChange": "  void initClasses ()", "diff": ["-//\tOS.class_addMethod(cls, OS.sel_keyDown_1, proc3, \"@:@\");", "+\tOS.class_addMethod(cls, OS.sel_keyDown_1, proc3, \"@:@\");", "+\tOS.class_addMethod(cls, OS.sel_keyUp_1, proc3, \"@:@\");", "-\tOS.class_addMethod(cls, OS.sel_outlineViewItemDidCollapse_1, proc3, \"@:@\");", "-\tOS.class_addMethod(cls, OS.sel_outlineViewItemDidExpand_1, proc3, \"@:@\");"]}], "num": 7480}