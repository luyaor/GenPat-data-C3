{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f5d5807e4a463974c988782d911f5296", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0211334bacec9e0f4c55450bef827e3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 53, "signatureBeforeChange": " void redrawHeader()", "signatureAfterChange": " boolean redrawParentItem(SelectableItem item)", "diff": ["+boolean redrawParentItem(SelectableItem item) {", "+\tTreeItem2 parentItem = ((TreeItem2) item).getParentItem();", "+\tTreeItem2 parentItem2; ", "+\tboolean redraw = false;", "+", "+\t// determine if only the hierarchy icon needs to be redrawn", "+\tif (parentItem != null) {", "+\t\tparentItem2 = parentItem.getParentItem();", "+\t\tif ((parentItem2 == null || parentItem2.getExpanded() == true) && parentItem.getChildren().size() < 2) {", "+\t\t\tredraw = true;", "+\t\t}", "+\t}", "+\t// redraw is only neccessary when the receiver is not currently\t", "+\t// expanding 'item' or a parent item or if the parent item is expanded ", "+\t// or if the hierarchy icon of the parent item needs to be redrawn", "+\tif (isExpandingItem(item) == false && parentItem == null || parentItem.getExpanded() == true || redraw == true) {", "+\t\tredraw = true;", "+\t}", "+\telse {", "+\t\tredraw = false;", "+\t}", "+\treturn redraw;", "-void redrawHeader() {", "-\theader.redraw();", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "806460e2352964c07897bfe4ab558d84", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 87, "signatureBeforeChange": " boolean redrawParentItem(SelectableItem item)", "signatureAfterChange": " void updateColumnWidth (TreeColumn column, int width)", "diff": ["-boolean redrawParentItem(SelectableItem item) {", "-\tTreeItem parentItem = ((TreeItem) item).getParentItem();", "-\tTreeItem parentItem2; ", "-\tboolean redraw = false;", "-", "-\t// determine if only the hierarchy icon needs to be redrawn", "-\tif (parentItem != null) {", "-\t\tparentItem2 = parentItem.getParentItem();", "-\t\tif ((parentItem2 == null || parentItem2.getExpanded() == true) && parentItem.getChildren().size() < 2) {", "-\t\t\tredraw = true;", "-\t// redraw is only neccessary when the receiver is not currently\t", "-\t// expanding 'item' or a parent item or if the parent item is expanded ", "-\t// or if the hierarchy icon of the parent item needs to be redrawn", "-\tif (isExpandingItem(item) == false && parentItem == null || parentItem.getExpanded() == true || redraw == true) {", "-\t\tredraw = true;", "-\telse {", "-\t\tredraw = false;", "-\treturn redraw;", "+void updateColumnWidth (TreeColumn column, int width) {", "+\tint oldWidth = column.getWidth();", "+\tcolumn.width = width;", "+\tRectangle bounds = getClientArea();", "+\tScrollBar hBar = getHorizontalBar();", "+\tTreeColumn lastColumn = columns[columns.length - 1]; ", "+\thBar.setMaximum(lastColumn.getX () + lastColumn.width);", "+\thBar.setThumb(bounds.width);", "+\tint x = column.getX();", "+\tredraw(x, 0, bounds.width - x, bounds.height, true);", "+}"]}], "num": 34572}