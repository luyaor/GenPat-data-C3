{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bd1ec9f24b257a01ad246c7f93d4fe31", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa3d6d1fbf47c6b07fb549a9ba221a45", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 138, "methodNumberAfterChange": 113, "signatureBeforeChange": " String trimItemText(String text, int maxWidth, GC gc)", "signatureAfterChange": " void updateVerticalBar ()", "diff": ["-String trimItemText(String text, int maxWidth, GC gc) {", "-\tint textWidth;", "-\tint dotsWidth;", "-", "-\tif (text != null && text.length() > 1) {", "-\t\ttextWidth = gc.stringExtent(text).x;", "-\t\tif (textWidth > maxWidth) {", "-\t\t\tdotsWidth = gc.stringExtent(Table.DOT_STRING).x;", "-\t\t\twhile (textWidth + dotsWidth > maxWidth && text.length() > 1) {", "-\t\t\t\ttext = text.substring(0, text.length() - 1);\t\t// chop off one character at the end", "-\t\t\t\ttextWidth = gc.stringExtent(text).x;", "-\t\t\t}", "-\t\t\ttext = text.concat(Table.DOT_STRING);", "-\treturn text;", "+}", "+void updateVerticalBar () {", "+\tint pageSize = (getClientArea ().height - getHeaderHeight ()) / itemHeight;", "+\tint maximum = Math.max (1, items.length);", "+\tScrollBar vBar = getVerticalBar ();", "+\tif (maximum != vBar.getMaximum ()) {", "+\t\tvBar.setMaximum (maximum);", "+\t}", "+\tint thumb = Math.min (pageSize, maximum);", "+\tif (thumb != vBar.getThumb ()) {", "+\t\tvBar.setThumb (thumb);", "+\t\tvBar.setPageIncrement (thumb);", "+\t}", "+\tvBar.setVisible (pageSize < maximum);", "+", "+\t/* reclaim any space now left on the bottom */", "+\tif (maximum < topIndex + thumb) {", "+\t\ttopIndex = maximum - thumb;", "+\t\tvBar.setSelection (topIndex);", "+\t\tredraw ();", "+\t} else {", "+\t\tint selection = vBar.getSelection ();", "+\t\tif (selection != topIndex) {", "+\t\t\ttopIndex = selection;", "+\t\t\tredraw ();", "+\t\t}", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e5eaeaf2e4092dd4bc242951e348952", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 111, "signatureBeforeChange": " void resize(Event event)", "signatureAfterChange": " void updateHorizontalBar ()", "diff": ["- */", "-void resize(Event event) {", "-\tTableColumn fillColumn = getFillColumn();", "-\tRectangle fillColumnBounds;", "-", "-\tsuper.resize(event);", "-\t// the x position may change in super.resize.", "-\t// get the column bounds after calling super.resize. Fixes 1G7ALGG", "-\tfillColumnBounds = fillColumn.getBounds();", "-\tfillColumnBounds.width = Math.max(0, getClientArea().width - getContentWidth());", "-\tfillColumn.setBounds(fillColumnBounds);", "-\tresizeHeader();", "-}", "+void updateHorizontalBar () {", "+\tScrollBar hBar = getHorizontalBar ();", "+\tint maxX = 0;", "+\tif (columns.length > 0) {", "+\t\tfor (int i = 0; i < columns.length; i++) {", "+\t\t\tmaxX += columns [i].width;", "+\t\t}", "+\t} else {", "+\t\tfor (int i = 0; i < items.length; i++) {", "+\t\t\tRectangle itemBounds = items [i].getBounds ();", "+\t\t\tmaxX = Math.max (maxX, itemBounds.x + itemBounds.width + horizontalOffset);", "+\t", "+\tint clientWidth = getClientArea ().width;", "+\tif (maxX != hBar.getMaximum ()) {", "+\t\thBar.setMaximum (maxX);", "+\t}", "+\tint thumb = Math.min (clientWidth, maxX);", "+\tif (thumb != hBar.getThumb ()) {", "+\t\thBar.setThumb (thumb);", "+\t\thBar.setPageIncrement (thumb);", "+\t}", "+\thBar.setVisible (clientWidth < maxX);", "+\t", "+\t/* reclaim any space now left on the right */", "+\tif (maxX < horizontalOffset + thumb) {", "+\t\thorizontalOffset = maxX - thumb;", "+\t\thBar.setSelection (horizontalOffset);", "+\t\tredraw ();", "+\t} else {", "+\t\tint selection = hBar.getSelection ();", "+\t\tif (selection != horizontalOffset) {", "+\t\t\thorizontalOffset = selection;", "+\t\t\tredraw ();", "+\t\t}", "+\t}"]}], "num": 6249}