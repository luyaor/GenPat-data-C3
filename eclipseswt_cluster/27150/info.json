{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "72e5a58b22a834923fb7305be0727391", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56962a36e861e908d4833d69346b1667", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem2.java", "commitBeforeChange": "acc0030d5a78af91c994cf7e186a8e8f3868c704", "commitAfterChange": "5955df716087c7c49a4980fa592ba6d6fd1a35b4", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": " int getContentX (int columnIndex)", "signatureAfterChange": " int getContentX (int columnIndex)", "diff": ["-\t\treturn parent.getColumn(columnIndex).getX() + Tree2.MARGIN_IMAGE;", "+\t\tTreeColumn column = parent.getColumn(columnIndex);", "+\t\tint contentX = column.getX() + MARGIN_TEXT;", "+\t\tif ((column.style & SWT.LEFT) != 0) return contentX;", "+\t\t", "+\t\tint contentWidth = internalGetTextWidth(columnIndex);", "+\t\tImage image = internalGetImage(columnIndex);", "+\t\tif (image != null) {", "+\t\t\tcontentWidth += Tree2.MARGIN_IMAGE + image.getBounds().width;", "+\t\t}", "+\t\tif ((column.style & SWT.RIGHT) != 0) {", "+\t\t\tint padding = parent.getCellPadding();", "+\t\t\tcontentX = Math.max(contentX, column.getX() + column.getWidth() - padding - contentWidth);\t", "+\t\t} else {\t/* SWT.CENTER */", "+\t\t\tcontentX = Math.max(contentX, column.getX() + (column.getWidth() - contentWidth) / 2);", "+\t\t}", "+\t\treturn contentX;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3dfd49b5791c8ff0888c035262bcd450", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "74633fa01aa8c5998245320589a13e924ab066bc", "commitAfterChange": "9aa111009eb55f78239030ddcabfd6bb90983b3a", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": " int getContentX (int columnIndex)", "signatureAfterChange": " int getContentX (int columnIndex)", "diff": ["-\t\tint contentWidth = textWidths [columnIndex];", "-\t\tImage image = images [columnIndex];", "-\t\tif (image != null) {", "-\t\t\tcontentWidth += Tree.MARGIN_IMAGE + image.getBounds ().width;", "-\t\t}", "+\t\t/* column is not left-aligned */", "+\t\tint contentWidth = getContentWidth (columnIndex);", "-\t/* column 0 */", "+\t/* column 0 (always left-aligned) */", "-\tint x = parent.getCellPadding () - parent.horizontalOffset;", "+\tint contentX = parent.getCellPadding () - parent.horizontalOffset;", "-\t\tx += expanderWidth * depth;", "+\t\tcontentX += expanderWidth * depth;", "-\tx += parent.expanderBounds.width;", "+\tcontentX += parent.expanderBounds.width;", "-\t\tx += Compatibility.floor (parent.expanderBounds.width, 2);", "+\t\tcontentX += Compatibility.floor (parent.expanderBounds.width, 2);", "-\treturn x + Tree.MARGIN_IMAGE + INDENT_HIERARCHY;", "+\treturn contentX + Tree.MARGIN_IMAGE + INDENT_HIERARCHY;"]}], "num": 27150}