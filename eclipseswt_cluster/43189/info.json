{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "987401ad8a5067eaa9a8e31d94684aa3", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "572a6ad18b7f521d545ab69233586334", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "96e1d2b5c8eb3869974d9ef684c7bf7cb9fbfe20", "commitAfterChange": "adaa848a4b5ee480783d9b3c1adc8c6a70c7bcb0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  void createItem (TreeItem item, int iter, int index)", "signatureAfterChange": "  void createItem (TreeItem item, int iter, int index)", "diff": ["+\tint column = OS.gtk_tree_view_get_column (handle, 0);", "+\tif (column == 0) OS.gtk_tree_view_insert_column (handle, columnHandle, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c30a45078723dbb5d871eaf5dc559db7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "574ed7b32d53c5a45e5ee1174a71c7c508bd18b6", "commitAfterChange": "d6a90c284cb192f294fd46d0e1ac845bc7bcab7e", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 43, "signatureBeforeChange": "  void hookEvents ()", "signatureAfterChange": "  void hookEvents ()", "diff": ["+", "+\tint windowProc3 = display.windowProc3;", "+\tint imContext = imContext ();", "+\tif (imContext != 0) OS.g_signal_connect (imContext, OS.commit, windowProc3, COMMIT);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e83f4934b3cf049113601872afc72194", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/StatsGenerator.java", "commitBeforeChange": "579505f5c399bb89f97d98e9912b18625d2312e2", "commitAfterChange": "6f962e3a053bd8c18a3e154a7ac0ad1ba2aeb3fe", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  void generateNATIVEMacros(Class clazz)", "signatureAfterChange": "  void generateNATIVEMacros(Class clazz)", "diff": ["+\toutput(\"#ifndef \");", "+\toutput(className);", "+\toutputln(\"_NATIVE_ENTER\");", "+\toutputln(\"#endif\");", "+\toutput(\"#ifndef \");", "+\toutput(className);", "+\toutputln(\"_NATIVE_EXIT\");", "+\toutputln(\"#endif\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03c3ae617ac48068ff9fe3762ca9e879", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "3a733710fba6bbcc58ab25c7f508d8802be3c9af", "commitAfterChange": "07b456597109483e0a174d96576008e1e9f5eda6", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": " public void setItemCount (int count)", "signatureAfterChange": " public void setItemCount (int count)", "diff": ["+\tint redrawStart, redrawEnd;", "+\t\tredrawStart = count;", "+\t\tredrawEnd = itemsCount - 1;", "+\t\tredrawStart = itemsCount;", "+\t\tredrawEnd = count - 1;", "-\tredraw ();", "+\tredrawItems (redrawStart, redrawEnd, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3855f38749e6fa9a2f54832867ea7df3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "179b6c1c35a61561f0efaa150e39f96f64379132", "commitAfterChange": "ae62c1ce541a57d97e257d01c34361701faf3d84", "methodNumberBeforeChange": 121, "methodNumberAfterChange": 120, "signatureBeforeChange": "  void releaseWidget ()", "signatureAfterChange": "  void releaseWidget ()", "diff": ["+\tint imHandle = imHandle ();", "+\tif (imHandle != 0) {", "+\t\tOS.gtk_im_context_reset (imHandle);", "+\t\tOS.gtk_im_context_set_client_window (imHandle, 0);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a40287befde525f1de73ff6d15e92ce5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/IME.java", "commitBeforeChange": "d1cfc073966d2df4835f012cb9c5cb74fbf2bbe2", "commitAfterChange": "0dc135624b0d449e23f5a2d4af365c76f498dbdd", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  LRESULT WM_KEYDOWN (long wParam, long lParam)", "signatureAfterChange": "  LRESULT WM_KEYDOWN (long wParam, long lParam)", "diff": ["+\t\t\t\tint length = event.text.length();", "+\t            if (length > 1) {", "+\t            \tevent.end = event.start + 1;", "+\t            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5bea7a4216435db884b0bdb78f18e4e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "0d71afce2a0eb0fb54fdaaad4248273e806482c5", "commitAfterChange": "6f1328f9571f55f1e4b8672dcde929e3ba698fe0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void pack ()", "signatureAfterChange": " public void pack ()", "diff": ["+\t//TEMPORARY CODE", "+\tif (!parent.isVisible()) {", "+\t\tOS.gtk_tree_view_column_set_sizing (handle, OS.GTK_TREE_VIEW_COLUMN_AUTOSIZE);", "+\t\treturn;", "+\t} else {", "+\t\tOS.gtk_tree_view_column_set_sizing (handle, OS.GTK_TREE_VIEW_COLUMN_FIXED);", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aea2734f2803e9d414c13a6fde702ec5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "49414e687e8dd970398fad4ea36d97ab635cb3a8", "commitAfterChange": "0fc9a694d7469800fdb4849776d3de00cc1d2797", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 110, "signatureBeforeChange": "  void windowSendEvent (int id, int sel, int event)", "signatureAfterChange": "  void windowSendEvent (int id, int sel, int event)", "diff": ["+\t\t\t/*", "+\t\t\t* Feature in Cocoa.  For some reason, Cocoa does not perform accelerators", "+\t\t\t* with ESC key code.  The fix is to perform the accelerators ourselves. ", "+\t\t\t*/", "+\t\t\tif (nsEvent.keyCode() == 53 /* ESC */ && menuBar != null && !menuBar.isDisposed()) {", "+\t\t\t\tif (menuBar.nsMenu.performKeyEquivalent(nsEvent)) {", "+\t\t\t\t\treturn;", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b15e188cc74fc4b51559f35159215237", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "ffcd121fb7431ca67e0c96c3686d0eb26efd2568", "commitAfterChange": "e72ce1f64576688f6d1d4338e39b46952a088e7c", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void setMenu (Menu menu)", "signatureAfterChange": " public void setMenu (Menu menu)", "diff": ["+\tif (menu != null) {", "+\t\tnsItem.setTarget(null);", "+\t\tnsItem.setAction(0);", "+\t} else {", "+\t\tnsItem.setTarget(nsItem);", "+\t\tnsItem.setAction(OS.sel_sendSelection);", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cf0f6dd3635db6cc30e00b22cd8c285", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "0456c81b5decf95fd2322ad01e3348c1f260fbb7", "commitAfterChange": "afc5f9bfaba706343e595bf206fc20be7c8fb8c0", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": "  void releaseChildren (boolean destroy)", "signatureAfterChange": "  void releaseChildren (boolean destroy)", "diff": ["+\tint count = itemCount;", "+\titemCount = 0;", "+\tignoreSelect = true;", "+\t((NSOutlineView) view).reloadData ();", "+\tignoreSelect = false;", "+\titemCount = count;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3d43cfe2758b25dbd6ad3c14280e215", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "0ecb4302b1f027bad17a4cf52d929651d8433c1e", "commitAfterChange": "b35f1ecb3953784cc631c1fbc11e0aed04d68303", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  void computeRuns()", "signatureAfterChange": "  void computeRuns()", "diff": ["-\tint ptr = OS.NewPtr(4);", "-\tbuffer[0] = OS.Long2Fix(indent);", "-\tOS.memcpy(ptr, buffer, 4);", "-\tint[] tags = new int[]{OS.kATSUImposeWidthTag};", "-\tint[] sizes = new int[]{4};", "-\tint[] values = new int[]{ptr};", "+\tint ptr = OS.NewPtr(12);", "+\tbuffer = new int[]{OS.Long2Fix(indent), 0, 0};", "+\tOS.memcpy(ptr, buffer, 12);", "+\tint[] tags = new int[]{OS.kATSUImposeWidthTag, OS.kATSUAscentTag, OS.kATSUDescentTag};", "+\tint[] sizes = new int[]{4, 4, 4};", "+\tint[] values = new int[]{ptr, ptr + 4, ptr + 8};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e044b38c41472752ef12fa94f1bca041", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "fa405fd1fda974bc21f6737451c9906f36c5ae2a", "commitAfterChange": "a3475902f992476f3d47823b959e2bf9bb614247", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  Control findControl (int handle)", "signatureAfterChange": "  Control findControl (int handle)", "diff": ["+\tint hwndOwner = 0;", "-\t} while ((handle = OS.GetParent (handle)) != 0);", "+\t\thwndOwner = OS.GetWindow (handle, OS.GW_OWNER);", "+\t\thandle = OS.GetParent (handle);", "+\t} while (handle != 0 && handle != hwndOwner);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccd8482f27ef5bec775adec42b859a4f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "9d2452cf08dad914b637c1b1e5dd72e4544a4953", "commitAfterChange": "3939d3e79e29c353725d2baae7156b6f1a24ef7c", "methodNumberBeforeChange": 240, "methodNumberAfterChange": 240, "signatureBeforeChange": " public void invokeAction(int action)", "signatureAfterChange": " public void invokeAction(int action)", "diff": ["-\tint oldColumnX;", "+\tint oldColumnX, oldHScrollOffset, hScrollChange;", "+\t\t\toldHScrollOffset = horizontalScrollOffset;", "-\t\t\t// save the original horizontal caret position", "-\t\t\tcolumnX = oldColumnX;", "+\t\t\t// restore the original horizontal caret position", "+\t\t\thScrollChange = oldHScrollOffset - horizontalScrollOffset;", "+\t\t\tcolumnX = oldColumnX + hScrollChange;", "+\t\t\toldHScrollOffset = horizontalScrollOffset;", "-\t\t\t// save the original horizontal caret position", "-\t\t\tcolumnX = oldColumnX;", "+\t\t\t// restore the original horizontal caret position", "+\t\t\thScrollChange = oldHScrollOffset - horizontalScrollOffset;", "+\t\t\tcolumnX = oldColumnX + hScrollChange;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c937ba8b8cbda4eb8cebf703625f14fb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "bba14a1c7c31d94a78eef963aedcb5dcb8769078", "commitAfterChange": "41d2a85cedfb7a33c8433a35acbdec63c6bf426c", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public boolean getVisible ()", "signatureAfterChange": " public boolean getVisible ()", "diff": ["-\treturn this == getShell ().activeMenu;", "+\tShell shell = getShell ();", "+\tMenu menu = shell.activeMenu;", "+\twhile (menu != null && menu != this) {", "+\t\tmenu = menu.getParentMenu ();", "+\t}", "+\treturn this == menu;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "676dfd6d86d3e3c7a03c3af37c7fca83", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "e4496f774aefe96ea3b0a264fd8b918ee1e8cd04", "commitAfterChange": "eaedcdb93667a66f95a717a3ccd65c2ce03024c9", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": "  boolean shouldChangeTextInRange_replacementString(int id, int sel, int affectedCharRange, int replacementString)", "signatureAfterChange": "  boolean shouldChangeTextInRange_replacementString(int id, int sel, int affectedCharRange, int replacementString)", "diff": ["+\tPoint selection = getSelection();", "+\tint start = selection.x, end = selection.y;", "+\tif (getCharCount() - (end - start) + newText.length() > textLimit) {", "+\t\treturn false;", "+\t}", "-\t\t\tPoint selection = getSelection();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2c286cddb9ce0f42c4cbcc90a50b10a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/Tab.java", "commitBeforeChange": "4aed9416d7bca83857121bbabe7d4528abea9299", "commitAfterChange": "647cdb13b55dd032686733d7df6783a4c0f68f79", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tvoid createControlGroup ()", "signatureAfterChange": " \tvoid createControlGroup ()", "diff": ["+\t\tif (RTL_SUPPORT_ENABLE) {", "+\t\t\tcreateOrientationGroup ();", "+\t\t}", "+\t\t}", "+\t\tif (RTL_SUPPORT_ENABLE) {", "+\t\t\trtlButton.addSelectionListener (selectionListener); ", "+\t\t\tltrButton.addSelectionListener (selectionListener);\t\t", "+\t\t\tdefaultOrietationButton.addSelectionListener (selectionListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00ae330cc3bfa662e239c94f939c1dd5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CCombo.java", "commitBeforeChange": "11c2e30ca1a299f6ffb69daaed9de9feb2653341", "commitAfterChange": "670729bfb4582fa29fa221faed226712a0baf256", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  void createPopup(String[] items, int selectionIndex)", "signatureAfterChange": " void createPopup(String[] items, int selectionIndex)", "diff": ["+void createPopup(String[] items, int selectionIndex) {\t\t", "+\t// create shell and list", "+\tpopup = new Shell (getShell (), SWT.NO_TRIM | SWT.ON_TOP);", "+\tint style = getStyle ();", "+\tint listStyle = SWT.SINGLE | SWT.V_SCROLL;", "+\tif ((style & SWT.FLAT) != 0) listStyle |= SWT.FLAT;", "+\tif ((style & SWT.RIGHT_TO_LEFT) != 0) listStyle |= SWT.RIGHT_TO_LEFT;", "+\tif ((style & SWT.LEFT_TO_RIGHT) != 0) listStyle |= SWT.LEFT_TO_RIGHT;", "+\tlist = new List (popup, listStyle);", "+\tif (font != null) list.setFont (font);", "+\tif (foreground != null) list.setForeground (foreground);", "+\tif (background != null) list.setBackground (background);", "-void createPopup(String[] items, int selectionIndex) {", "-\tShell popup = getPopup();", "-\tif (popup == null) {", "-\t\t// create shell and list", "-\t\tpopup = new Shell (getShell (), SWT.NO_TRIM | SWT.ON_TOP);", "-\t\tgetShell().setData(\"ccombolist\", popup);", "-\t}", "-\tif (list == null) {", "-\t\tint style = getStyle ();", "-\t\tint listStyle = SWT.SINGLE | SWT.V_SCROLL;", "-\t\tif ((style & SWT.FLAT) != 0) listStyle |= SWT.FLAT;", "-\t\tif ((style & SWT.RIGHT_TO_LEFT) != 0) listStyle |= SWT.RIGHT_TO_LEFT;", "-\t\tif ((style & SWT.LEFT_TO_RIGHT) != 0) listStyle |= SWT.LEFT_TO_RIGHT;", "-\t\tlist = new List (popup, listStyle);", "-\t\tif (font != null) list.setFont (font);", "-\t\tif (foreground != null) list.setForeground (foreground);", "-\t\tif (background != null) list.setBackground (background);", "-\t", "-\t\tint [] popupEvents = {SWT.Close, SWT.Paint, SWT.Deactivate};", "-\t\tfor (int i=0; i<popupEvents.length; i++) popup.addListener (popupEvents [i], listener);", "-\t\tint [] listEvents = {SWT.MouseUp, SWT.Selection, SWT.Traverse, SWT.KeyDown, SWT.KeyUp, SWT.FocusIn, SWT.Dispose};", "-\t\tfor (int i=0; i<listEvents.length; i++) list.addListener (listEvents [i], listener);", "-\t}", "+\tint [] popupEvents = {SWT.Close, SWT.Paint, SWT.Deactivate};", "+\tfor (int i=0; i<popupEvents.length; i++) popup.addListener (popupEvents [i], listener);", "+\tint [] listEvents = {SWT.MouseUp, SWT.Selection, SWT.Traverse, SWT.KeyDown, SWT.KeyUp, SWT.FocusIn, SWT.Dispose};", "+\tfor (int i=0; i<listEvents.length; i++) list.addListener (listEvents [i], listener);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e552d9b809df85355963ee773d3c37c1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "5f7fc100f82598ce1ed575675abf56bc3c557d75", "commitAfterChange": "1c367491fe3c07b43ec99c54628c7b133b5c058f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": " void presetChooserDialog ()", "signatureAfterChange": " void presetChooserDialog ()", "diff": ["+\tint /*long*/ initialFilter = 0;", "+\t\t\tif (i == filterIndex) {", "+\t\t\t\tinitialFilter = filter;", "+\t\t\t}", "+\t}", "+\tif (initialFilter != 0) {", "+\t\tOS.gtk_file_chooser_set_filter(handle, initialFilter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91acb4b97036959efa2b6f57a16bd5f8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Link.java", "commitBeforeChange": "bd84842070ddbb1c7d4c356159fbb84d263877b7", "commitAfterChange": "17ee310c8a6cf19b889e32ff7bcbe8b32154f6e5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam)", "signatureAfterChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam)", "diff": ["-\tif (LinkProc != 0) return OS.CallWindowProc (LinkProc, hwnd, msg, wParam, lParam);", "+\tif (LinkProc != 0) {", "+\t\t/*", "+\t\t* Feature in Windows.  By convention, native Windows controls", "+\t\t* check for a non-NULL wParam, assume that it is an HDC and", "+\t\t* paint using that device.  The SysLink control does not.", "+\t\t* The fix is to check for an HDC and use WM_PRINTCLIENT.", "+\t\t*/", "+\t\tswitch (msg) {", "+\t\t\tcase OS.WM_PAINT:", "+\t\t\t\tif (wParam != 0) {", "+\t\t\t\t\tOS.SendMessage (hwnd, OS.WM_PRINTCLIENT, wParam, 0);", "+\t\t\t\t\treturn 0;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t}", "+\t\treturn OS.CallWindowProc (LinkProc, hwnd, msg, wParam, lParam);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de0dd07351aa5d92b0d6f1be5b36e3e5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "874f49f65c480d909cd9a37c9e58ee52795e1ad9", "commitAfterChange": "f5f1be362ef2a7cb6943a5f1320016e3fb51da86", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  int eventProc (int event, int data)", "signatureAfterChange": "  int eventProc (int event, int data)", "diff": ["-", "-\tControl control = null;", "-\tint /*long*/ window = 0;", "-\tswitch (eventType) {", "-\t\tcase OS.GDK_KEY_PRESS:", "-\t\tcase OS.GDK_KEY_RELEASE:", "-\t\tcase OS.GDK_ENTER_NOTIFY:", "-\t\tcase OS.GDK_LEAVE_NOTIFY:", "-\t\tcase OS.GDK_BUTTON_PRESS:", "-\t\tcase OS.GDK_2BUTTON_PRESS: ", "-\t\tcase OS.GDK_3BUTTON_PRESS:", "-\t\tcase OS.GDK_BUTTON_RELEASE: ", "-\t\tcase OS.GDK_MOTION_NOTIFY:  {", "-\t\t\twindow = OS.GDK_EVENT_WINDOW (event);", "-\t\t\tint /*long*/ [] user_data = new int /*long*/ [1];", "-\t\t\tdo {", "-\t\t\t\tOS.gdk_window_get_user_data (window, user_data);", "-\t\t\t\tint /*long*/ handle = user_data [0];", "-\t\t\t\tif (handle != 0) {", "-\t\t\t\t\tWidget widget = getWidget (handle);", "-\t\t\t\t\tif (widget != null && widget instanceof Control) {", "-\t\t\t\t\t\tcontrol = (Control) widget;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t} while ((window = OS.gdk_window_get_parent (window)) != 0);", "-\t\t}", "-\t}", "+\t/*", "+\t* Feature in GTK.  GTK implements modality by adding a grab", "+\t* to the GTK top level window.  Normally, all mouse and ", "+\t* keyboard events are delivered to child widgets and shells", "+\t* when the grab is active.  When a dialog child is an ", "+\t* override redirect window, GTK does not forward the events.  ", "+\t* The fix is to add a temporary grab to the override redirect", "+\t* window.  ", "+\t*/", "-\tif (control != null ) {", "-\t\tshell = control.getShell ();", "-\t\tif ((shell.style & SWT.ON_TOP) != 0) {", "-\t\t\tOS.gtk_grab_add (shell.shellHandle);", "+\tControl control = null;", "+\tint /*long*/ grabHandle = OS.gtk_grab_get_current ();", "+\tif (grabHandle != 0 && OS.GTK_IS_WINDOW (grabHandle) && OS.gtk_window_get_modal (grabHandle)) {", "+\t\tswitch (eventType) {", "+\t\t\tcase OS.GDK_KEY_PRESS:", "+\t\t\tcase OS.GDK_KEY_RELEASE:", "+\t\t\tcase OS.GDK_ENTER_NOTIFY:", "+\t\t\tcase OS.GDK_LEAVE_NOTIFY:", "+\t\t\tcase OS.GDK_BUTTON_PRESS:", "+\t\t\tcase OS.GDK_2BUTTON_PRESS: ", "+\t\t\tcase OS.GDK_3BUTTON_PRESS:", "+\t\t\tcase OS.GDK_BUTTON_RELEASE: ", "+\t\t\tcase OS.GDK_MOTION_NOTIFY:  {", "+\t\t\t\tint /*long*/ window = OS.GDK_EVENT_WINDOW (event);", "+\t\t\t\tint /*long*/ [] user_data = new int /*long*/ [1];", "+\t\t\t\tdo {", "+\t\t\t\t\tOS.gdk_window_get_user_data (window, user_data);", "+\t\t\t\t\tint /*long*/ handle = user_data [0];", "+\t\t\t\t\tif (handle != 0) {", "+\t\t\t\t\t\tWidget widget = getWidget (handle);", "+\t\t\t\t\t\tif (widget != null && widget instanceof Control) {", "+\t\t\t\t\t\t\tcontrol = (Control) widget;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t} while ((window = OS.gdk_window_get_parent (window)) != 0);", "+\t\t\t}", "+\t\t}", "+\t\tif (control != null) {\t\t", "+\t\t\tshell = control.getShell ();", "+\t\t\tif ((shell.style & SWT.ON_TOP) != 0) {", "+\t\t\t\tOS.gtk_grab_add (shell.shellHandle);", "+\t\t\t}", "-\tif (control != null ) {", "+\tif (control != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f704895d5b248905561b123f12dcd9e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "3b1662982081ff5c011263c21107a9ba88a49137", "commitAfterChange": "fa0684f848e1d16bf9f5e376572341decc3cc7f4", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " void handleResize(int hndl, Rect bounds)", "signatureAfterChange": " void handleResize(int hndl, Rect bounds)", "diff": ["-", "-\tbounds.left+= MARGIN;", "-\tbounds.right-= MARGIN;", "-\tbounds.top+= TOP_MARGIN;", "-\tbounds.bottom-= MARGIN;", "-\tsuper.handleResize(hndl, bounds);", "+\tbounds.left += MARGIN;", "+\tbounds.top += TOP_MARGIN;", "+\tbounds.right -= MARGIN;", "+\tbounds.bottom -= MARGIN;", "+\tOS.SetControlBounds(handle, bounds);", "+", "-\t\tredraw();", "+\t\t// redraw(); \t// only required if the workaround from below is not in place", "+\t", "+\t/*", "+\t * There seems to be a layout/clipping bug with Tab control in compositing", "+\t * mode (HIViews): on resize if the old size is more than a few pixel", "+\t * different from the new size, a rectangular area to the right or left of", "+\t * the tabs isn't repaired. The fix is to make the tab control temporarily", "+\t * one pixel larger.", "+\t */", "+\tbounds.right--;", "+\tOS.SetControlBounds(handle, bounds);", "+\tbounds.right++;", "+\tOS.SetControlBounds(handle, bounds);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7b01b38f701946e296fe7d8084e74f7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "d589019807dc8edefe4eebafacf497892e57bece", "commitAfterChange": "7ec2e420459073a76767eaf4412d2bd5b970dc99", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 112, "signatureBeforeChange": "  LRESULT WM_CHAR (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_CHAR (int wParam, int lParam)", "diff": ["+\t\t\t\tTreeItem item = _getItem (hItem, tvItem.lParam);", "-\t\t\t\tevent.item = items [tvItem.lParam];", "+\t\t\t\tevent.item = item;", "-\t\t\t\t\tevent.item = items [tvItem.lParam];", "+\t\t\t\t\tevent.item = item;", "-\t\t\t\tevent.item = items [tvItem.lParam];", "+\t\t\t\tevent.item = _getItem (hItem, tvItem.lParam);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a756d260656c5a0c60254c4d6d7494da", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/MacUtil.java", "commitBeforeChange": "1a57429b46b8b61736cb47d19af352b51ab43a14", "commitAfterChange": "a6f8889277cd443686e67206e267bcf957f018b2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tstatic void insertControl(int controlHandle, int parentHandle, int pos)", "signatureAfterChange": " \tstatic void insertControl(int controlHandle, int parent, int pos)", "diff": ["-\tstatic void insertControl(int controlHandle, int parentHandle, int pos) {", "+\tstatic void insertControl(int controlHandle, int parent, int pos) {", "+\t\t", "+\t\tint parentHandle= parent;", "-\t\tif (OS.IsValidControlHandle(parentHandle)) {", "+\t\tif (OS.IsValidControlHandle(parent)) {", "+\t\t\tparentHandle= parent;", "-\t\t\tparentHandle= getContentView(parentHandle);", "+\t\t\tparentHandle= getContentView(parent);", "+\t\t\tif (parentHandle == 0)", "+\t\t\t\tparentHandle= getContentView(parent);", "-\t\t", "+\t\t// todo"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1885f859f44ed36b22e6e5933c4d626a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CCombo.java", "commitBeforeChange": "0c27428c4ddae0480744169b5d145053d94ee18c", "commitAfterChange": "11c2e30ca1a299f6ffb69daaed9de9feb2653341", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " void createPopup(String[] items, int selectionIndex)", "signatureAfterChange": "  void createPopup(String[] items, int selectionIndex)", "diff": ["-void createPopup(String[] items, int selectionIndex) {\t\t", "-\t// create shell and list", "-\tpopup = new Shell (getShell (), SWT.NO_TRIM | SWT.ON_TOP);", "-\tint style = getStyle ();", "-\tint listStyle = SWT.SINGLE | SWT.V_SCROLL;", "-\tif ((style & SWT.FLAT) != 0) listStyle |= SWT.FLAT;", "-\tif ((style & SWT.RIGHT_TO_LEFT) != 0) listStyle |= SWT.RIGHT_TO_LEFT;", "-\tif ((style & SWT.LEFT_TO_RIGHT) != 0) listStyle |= SWT.LEFT_TO_RIGHT;", "-\tlist = new List (popup, listStyle);", "-\tif (font != null) list.setFont (font);", "-\tif (foreground != null) list.setForeground (foreground);", "-\tif (background != null) list.setBackground (background);", "-\tint [] popupEvents = {SWT.Close, SWT.Paint, SWT.Deactivate};", "-\tfor (int i=0; i<popupEvents.length; i++) popup.addListener (popupEvents [i], listener);", "-\tint [] listEvents = {SWT.MouseUp, SWT.Selection, SWT.Traverse, SWT.KeyDown, SWT.KeyUp, SWT.FocusIn, SWT.Dispose};", "-\tfor (int i=0; i<listEvents.length; i++) list.addListener (listEvents [i], listener);", "-", "+void createPopup(String[] items, int selectionIndex) {", "+\tShell popup = getPopup();", "+\tif (popup == null) {", "+\t\t// create shell and list", "+\t\tpopup = new Shell (getShell (), SWT.NO_TRIM | SWT.ON_TOP);", "+\t\tgetShell().setData(\"ccombolist\", popup);", "+\t}", "+\tif (list == null) {", "+\t\tint style = getStyle ();", "+\t\tint listStyle = SWT.SINGLE | SWT.V_SCROLL;", "+\t\tif ((style & SWT.FLAT) != 0) listStyle |= SWT.FLAT;", "+\t\tif ((style & SWT.RIGHT_TO_LEFT) != 0) listStyle |= SWT.RIGHT_TO_LEFT;", "+\t\tif ((style & SWT.LEFT_TO_RIGHT) != 0) listStyle |= SWT.LEFT_TO_RIGHT;", "+\t\tlist = new List (popup, listStyle);", "+\t\tif (font != null) list.setFont (font);", "+\t\tif (foreground != null) list.setForeground (foreground);", "+\t\tif (background != null) list.setBackground (background);", "+\t", "+\t\tint [] popupEvents = {SWT.Close, SWT.Paint, SWT.Deactivate};", "+\t\tfor (int i=0; i<popupEvents.length; i++) popup.addListener (popupEvents [i], listener);", "+\t\tint [] listEvents = {SWT.MouseUp, SWT.Selection, SWT.Traverse, SWT.KeyDown, SWT.KeyUp, SWT.FocusIn, SWT.Dispose};", "+\t\tfor (int i=0; i<listEvents.length; i++) list.addListener (listEvents [i], listener);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f873d7a8d7846539fb3876e65c17aa0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "3d6f81255c8f11df917af7635c8613241396699f", "commitAfterChange": "34ce88e68a5b654293fc728c9816bae8c0305515", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " int drawLine(int lineIndex, int paintX, int paintY, GC gc, Color widgetBackground, Color widgetForeground)", "signatureAfterChange": " int drawLine(int lineIndex, int paintX, int paintY, GC gc, Color widgetBackground, Color widgetForeground)", "diff": ["-\tColor lineBackground = getLineBackground(lineIndex, widgetBackground);", "+\tColor lineBackground = getLineBackground(lineIndex, null);", "-\t", "-\tgc.setBackground(lineBackground);", "-\tstyledText.drawBackground(gc, client.x, paintY, client.width, height);", "-\t", "+\tif (lineBackground != null) {", "+\t\tgc.setBackground(lineBackground);", "+\t\tgc.fillRectangle(client.x, paintY, client.width, height);", "+\t} else {", "+\t\tgc.setBackground(widgetBackground);", "+\t\tstyledText.drawBackground(gc, client.x, paintY, client.width, height);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bb329b058b6dbaf945dcb1576d11c25", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "d6b79b6473afebbe9981c63f24cfb35b1cabdb63", "commitAfterChange": "e30f4695dcdef3aead385fb3beceec028923c85f", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 96, "signatureBeforeChange": "  void releaseWidget ()", "signatureAfterChange": "  void releaseWidget ()", "diff": ["+\tdisplay.clearModal (this);", "+\tif (group != 0) OS.g_object_unref (group);", "+\tgroup = modalGroup = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "764d673688f67c1c824c14faba3546d2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "f47df390655fcdcbd1e32801c61da0c040b026e9", "commitAfterChange": "a1d26348e5d8fb6b93c913fdc3d81be5a799f2fe", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void dispose ()", "signatureAfterChange": " public void dispose ()", "diff": ["+", "+\tclipRgn = data.saveClip;", "+\tif (clipRgn != 0) OS.DisposeRgn(clipRgn);", "+\tdata.saveClip = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "076bdbb61fb692d2b5ddbf428632a321", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "6a2365b2806f9c0763d5620ebbbf10e14a2d2a48", "commitAfterChange": "558cd893adba0e315fee1e83fc7c3241b347a2fd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["+\t\t\tint style = OS.gtk_style_copy(OS.gtk_widget_get_style(arrowButtonHandle));", "+\t\t\tOS.gtk_style_set_xthickness(style, 0);", "+\t\t\tOS.gtk_widget_set_style(arrowButtonHandle, style);", "+\t\t\t// when the arrow gets destroyed, it will dereference the clone"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c8edfbf1d9a3129c7b6366538985559", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "4510458698a44cfe0ebb614544242955fbc20f7a", "commitAfterChange": "d07e719160ad9b5428874b3929f88d189e7c89ac", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r void createHandle (int index)", "signatureAfterChange": "\r void createHandle (int index)", "diff": ["+\t\r", "+\t/*\r", "+\t* Feature in Motif. There is no Motif API to negociate for the\r", "+\t* status line. The fix is to force the status line to appear\r", "+\t* by creating a hidden text widget.  This is much safer than\r", "+\t* using X API because this may conflict with Motif.\r", "+\t*/\r", "+\tint textHandle = OS.XmCreateTextField (handle, null, null, 0);\r", "+\tif (textHandle == 0) error (SWT.ERROR_NO_HANDLES);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ac50ffc2e886e681d4fd7fb1ab18a6d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "ce2f35c3f6b1d0b5778f68f011b1d8668d3c5c72", "commitAfterChange": "00bee382096a1807d86474fed7c933116a37eeb8", "methodNumberBeforeChange": 148, "methodNumberAfterChange": 164, "signatureBeforeChange": "\r void handleDispose()", "signatureAfterChange": "\r void handleDispose()", "diff": ["+\tif (leftCaretBitmap != null) {\r", "+\t\tleftCaretBitmap.dispose();\r", "+\t}\r", "+\tif (rightCaretBitmap != null) {\r", "+\t\trightCaretBitmap.dispose();\r", "+\t}\r", "+\tif (isBidi()) {\r", "+\t\tStyledTextBidi.removeLanguageListener(this.handle);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "603c90cc6e2fac43f002b3401db6cfdd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "23a4f52b77fd72260cf05c050712887e49b623f4", "commitAfterChange": "9deaa31de87a100016ebc81b039788786a22d0e6", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "\r private void onPaint(Event event)", "signatureAfterChange": "\r private void onPaint(Event event)", "diff": ["+\tFont font = getFont();\r", "+\tif (oldFont == null || !oldFont.equals(font)) {\r", "+\t\toldFont = font;\r", "+\t\tresetTabSize(true);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0c3426f8fb26341d672797c32b7759f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "fe01df1082b5613213a59b03292c02660626087d", "commitAfterChange": "e771e3576d1e1ba57ba12fa501dc8174c6ca74e8", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["+\t", "+\tid id = window.fieldEditor (true, null);", "+\tif (id != null) {", "+\t\tOS.object_setClass (id.id, OS.objc_getClass (\"SWTEditorView\"));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "726edb9335cd54e1a5db1b3eb0ce242e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Group.java", "commitBeforeChange": "99b05defd250c74e90d74fb8746b70aa1dfb97ff", "commitAfterChange": "81188d1e281a554e4ffb97647256fcda0675eee3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public Rectangle computeTrim (int x, int y, int width, int height)", "signatureAfterChange": "  public Rectangle computeTrim (int x, int y, int width, int height)", "diff": ["+\tint border = (int)Math.ceil (widget.borderWidth ());", "-\twidth += margins.width * 2;", "-\theight += margins.height * 2 + frame.y;", "+\twidth += (margins.width + border) * 2;", "+\theight += (margins.height + border) * 2 + frame.y;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ede3e724425ead72a11bcc3c8d65e0b6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TrayIcon.java", "commitBeforeChange": "f02aad0603af7ee5dcabf4340e614df70adf48aa", "commitAfterChange": "93d06ca0f53b16e69ce1737c79cf945250fa1603", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \r public void setImage (Image image)", "signatureAfterChange": "\r \r public void setImage (Image image)", "diff": ["-\tRectangle rect = image.getBounds ();\r", "-\tOS.gtk_widget_set_size_request (handle, rect.width, rect.height);\r", "-\tOS.gtk_image_set_from_pixmap (imageHandle, image.pixmap, image.mask);\r", "-\tOS.gtk_widget_show (imageHandle);\r", "+\tif (image != null) {\r", "+\t\tRectangle rect = image.getBounds ();\r", "+\t\tOS.gtk_widget_set_size_request (handle, rect.width, rect.height);\r", "+\t\tOS.gtk_image_set_from_pixmap (imageHandle, image.pixmap, image.mask);\r", "+\t\tOS.gtk_widget_show (imageHandle);\r", "+\t} else {\r", "+\t\tOS.gtk_widget_set_size_request (handle, 1, 1);\r", "+\t\tOS.gtk_image_set_from_pixmap (imageHandle, 0, 0);\r", "+\t\tOS.gtk_widget_hide (imageHandle);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1f8972a2824476725ff654b10e80f17", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/Tab.java", "commitBeforeChange": "7ed6b57a485b6eff4cc160b085fd30c28d6eee9f", "commitAfterChange": "14b992a1a642b03e89b0dfdaf4c83bb413066ac8", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " \t \tvoid setValue()", "signatureAfterChange": " \t \tvoid setValue()", "diff": ["-\t\t\t\t\tparameter = new Object[] {new Point(new Integer(xy[0]).intValue(),new Integer(xy[1]).intValue())};", "+\t\t\t\t\tparameter = new Object[] {new Point(Integer.parseInt(xy[0]),Integer.parseInt(xy[1]))};", "+\t\t\t\t} else if (typeName.equals(\"org.eclipse.swt.graphics.Rectangle\")) {", "+\t\t\t\t\tString xywh[] = split(value, ',');", "+\t\t\t\t\tparameter = new Object[] {new Rectangle(Integer.parseInt(xywh[0]),Integer.parseInt(xywh[1]),Integer.parseInt(xywh[2]),Integer.parseInt(xywh[3]))};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33cea6740965d2a0ed2af6e1c930cae4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "0c693ec68aa92990fed67d5ac8294b0904382aa6", "commitAfterChange": "b84a7e4a7773950a4b778c3e64458fe00c6276c1", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  void becomeKeyWindow (int id, int sel)", "signatureAfterChange": "  void becomeKeyWindow (int id, int sel)", "diff": ["+\tShell modal = getModalShell();", "+\tif (modal != null && modal.window != null) {", "+\t\tmodal.window.becomeKeyWindow();", "+\t\treturn;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9967a8c750d1c808725172b5e3232d8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/DirectoryDialog.java", "commitBeforeChange": "e44aa31d6d4d8839f08cb523fdcb3ead3ed216fd", "commitAfterChange": "eb8e8e74c5daad22517cbbcc4a53bd8a8af6fafe", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " String openChooserDialog ()", "signatureAfterChange": " String openChooserDialog ()", "diff": ["-\t\tOS.gtk_file_chooser_set_current_folder (handle, buffer);", "+\t\t/*", "+\t\t* Bug in GTK. GtkFileChooser may crash on GTK versions 2.4.10 to 2.6", "+\t\t* when setting a file name that is not a true canonical path. ", "+\t\t* The fix is to use the canonical path.", "+\t\t*/", "+\t\tint /*long*/ ptr = OS.realpath (buffer, null);", "+\t\tif (ptr != 0) {", "+\t\t\tOS.gtk_file_chooser_set_current_folder (handle, ptr);", "+\t\t\tOS.g_free (ptr);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4e260301a71b2e1d8bff50c8539e967", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "9df10dae0e474265302efa030af73cf9510268ad", "commitAfterChange": "d8c7ac1c238569192a4106f29243a448a4e0192d", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": "  void updateModal ()", "signatureAfterChange": "  void updateModal ()", "diff": ["+\t\tComposite topModalShell = shell;", "+\t\t\ttopModalShell = shell;", "+\t\t/*", "+\t\t* If a modal shell doesn't have any parent (or modal shell as it's parent), ", "+\t\t* then we incorrectly add the modal shell to the default group, due to which ", "+\t\t* children of that modal shell are not interactive. The fix is to ensure ", "+\t\t* that whenever there is a modal shell in the hierarchy, then we always", "+\t\t* add the modal shell's group to that modal shell and it's modelless children", "+\t\t* in a different group.", "+\t\t*/", "+\t\tif (group == 0 && topModalShell != null) group = topModalShell.getShell ().group;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "caabab89514809a41df382679741835f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/ExpandBar.java", "commitBeforeChange": "ea9540b686e96f5d19aacde5425f9dc76c48dc05", "commitAfterChange": "1ab6b40d1967fe176e8d0b93bab625c980bc30d9", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public ExpandItem getItem (int index)", "signatureAfterChange": " public ExpandItem getItem (int index)", "diff": ["-\tif (!(0 <= index && index < itemCount)) error (SWT.ERROR_INVALID_RANGE);\t", "-\treturn items [index];", "+\tif (!(0 <= index && index < itemCount)) error (SWT.ERROR_INVALID_RANGE);", "+\tint items = OS.Panel_Children (handle);", "+\tExpandItem item = getItem (items, index);", "+\tOS.GCHandle_Free (items);", "+\treturn item;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e6e7139b4b283f56f2810da10469f56", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "eccb7e6fdaa0083f6f2d6cf61838578b27f8e6eb", "commitAfterChange": "fce4d10ca4757c14bdb3b6653dc272987bd3530f", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "  public void setVisible (boolean visible)", "signatureAfterChange": "  public void setVisible (boolean visible)", "diff": ["+\t\t/*", "+\t\t* Bug in GTK.  When an application opens a new modal top level", "+\t\t* shell from inside the \"select_row\" signal, the GtkCList does not get the", "+\t\t* mouse up and does not release grabs.  The fix is to release the grabs", "+\t\t* when any shell is opened.", "+\t\t*/", "+\t\tint grabHandle = OS.gtk_grab_get_current ();", "+\t\tif (grabHandle != 0) {", "+\t\t\tOS.gtk_grab_remove (grabHandle);", "+\t\t\tOS.gdk_pointer_ungrab (OS.GDK_CURRENT_TIME);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2aa2b63a0db23cf7585f4fe396a94289", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGenerator.java", "commitBeforeChange": "d2bbe0af593cdec5f8615e936375cdcda0ff106f", "commitAfterChange": "d6734efb26824878c6f9b89e50e87995fc540577", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 34, "signatureBeforeChange": "  public String[] getExtraAttributeNames(Node node)", "signatureAfterChange": "  public String[] getExtraAttributeNames(Node node)", "diff": ["+\t\tNamedNodeMap attribs = node.getAttributes();", "+\t\tif (attribs != null && attribs.getNamedItem(\"variadic\") != null) {", "+\t\t\treturn new String[]{\"swt_gen_super_msgSend\", \"swt_gen_custom_callback\", \"swt_variadic_count\",\"swt_variadic_java_types\"};", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16430e168ecfd8ee8d00e5917ee96fc0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "6fd5aa9d1be49611cff9b718e864fb6c8bf80663", "commitAfterChange": "6242701c8cb8d3abdee5517ccc0e3b78fafed05c", "methodNumberBeforeChange": 161, "methodNumberAfterChange": 161, "signatureBeforeChange": "  boolean translateTraversal (int key, int theEvent, boolean [] consume)", "signatureAfterChange": "  boolean translateTraversal (int key, NSEvent theEvent, boolean [] consume)", "diff": ["-boolean translateTraversal (int key, int theEvent, boolean [] consume) {", "+boolean translateTraversal (int key, NSEvent theEvent, boolean [] consume) {", "-//\t\t\tint [] modifiers = new int [1];", "-//\t\t\tOS.GetEventParameter (theEvent, OS.kEventParamKeyModifiers, OS.typeUInt32, null, 4, null, modifiers);", "-//\t\t\tboolean next = (modifiers [0] & OS.shiftKey) == 0;", "-//\t\t\tdetail = next ? SWT.TRAVERSE_TAB_NEXT : SWT.TRAVERSE_TAB_PREVIOUS;", "+\t\t\tint modifiers = display.lastModifiers;", "+\t\t\tboolean next = (modifiers & OS.NSShiftKeyMask) == 0;", "+\t\t\tdetail = next ? SWT.TRAVERSE_TAB_NEXT : SWT.TRAVERSE_TAB_PREVIOUS;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1fcf130f021ab3eb9235e67682aae85", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextBidi.java", "commitBeforeChange": "8f49d4a8201f325fab6add743b89ff69adf390c8", "commitAfterChange": "62bddab409cbde39108242395bbf3f0e791a1929", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public StyledTextBidi(GC gc, int tabWidth, String text, int[] boldRanges, Font boldFont, int[] offsets)", "signatureAfterChange": "\r public StyledTextBidi(GC gc, int tabWidth, String text, int[] boldRanges, Font boldFont, int[] offsets)", "diff": ["-\t\t\tfor (int i = 0; i < boldRanges.length; i += 2) {\r", "-\t\t\t\tint rangeStart = boldRanges[i];\r", "-\t\t\t\tint rangeLength = boldRanges[i + 1];\r", "+\t\t\t// If the font supports characters shaping, break up the bold ranges based on \r", "+\t\t\t// the specified bidi segments.  Each bidi segment will be treated separately \r", "+\t\t\t// for bold purposes.\r", "+\t\t\tint[] segmentedBoldRanges;\r", "+\t\t\tif (isCharacterShaped(gc)) segmentedBoldRanges = segmentedRangesFor(boldRanges);\r", "+\t\t\telse segmentedBoldRanges = boldRanges;\r", "+\t\t\tfor (int i = 0; i < segmentedBoldRanges.length; i += 2) {\r", "+\t\t\t\tint rangeStart = segmentedBoldRanges[i];\r", "+\t\t\t\tint rangeLength = segmentedBoldRanges[i + 1];\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5692b72f3ce95f82c9f0cf2740f23f6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "9175f4a016aa1ea73526329fe01d6b56e5fb6d32", "commitAfterChange": "f80151bd084cdffb01df9de3745fe2be76f82d9f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   void computeRuns()", "signatureAfterChange": "   void computeRuns()", "diff": ["-\tif (textStorage != null) return;", "+\tif (lineBounds != null) return;", "-\ttextStorage = (NSTextStorage)new NSTextStorage().alloc().init();", "-\tlayoutManager = (NSLayoutManager)new NSLayoutManager().alloc().init();", "-\tlayoutManager.setBackgroundLayoutEnabled(NSThread.isMainThread());", "-\ttextContainer = (NSTextContainer)new NSTextContainer().alloc();", "-\tNSSize size = new NSSize();", "-\tsize.width = wrapWidth != -1 ? wrapWidth : Float.MAX_VALUE;", "-\tsize.height = Float.MAX_VALUE;", "-\ttextContainer.initWithContainerSize(size);", "-\ttextStorage.addLayoutManager(layoutManager);", "-\tlayoutManager.addTextContainer(textContainer);", "-\t* a separate NSMutableAttributedString and add it to text storage when done.", "+\t* a separate NSMutableAttributedString and set it to text storage when done.", "+\tstr.release();", "-\trange.length = str.length();", "+\trange.length = attrStr.length();", "-\tint /*long*/ textLength = str.length();", "+\tint /*long*/ textLength = attrStr.length();", "+", "+\tNSSize size = new NSSize();", "+\tsize.width = wrapWidth != -1 ? wrapWidth : Float.MAX_VALUE;", "+\tsize.height = Float.MAX_VALUE;", "+\tif (textStorage == null) {", "+\t\ttextStorage = (NSTextStorage)new NSTextStorage().alloc().init();", "+\t\tlayoutManager = (NSLayoutManager)new NSLayoutManager().alloc().init();", "+\t\tlayoutManager.setBackgroundLayoutEnabled(NSThread.isMainThread());", "+\t\ttextContainer = (NSTextContainer)new NSTextContainer().alloc();", "+\t\ttextContainer = textContainer.initWithContainerSize(size);", "+\t\ttextContainer.setLineFragmentPadding(0);", "+\t\ttextStorage.addLayoutManager(layoutManager);", "+\t\tlayoutManager.addTextContainer(textContainer);", "+\t\tlayoutManager.release();", "+\t\ttextContainer.release();", "+\t} else {", "+\t\ttextContainer.setContainerSize(size);", "+\t}", "-\tstr.release();", "-", "-\ttextContainer.setLineFragmentPadding(0);", "-\tlayoutManager.glyphRangeForTextContainer(textContainer);", "+\tlayoutManager.glyphRangeForTextContainer(textContainer);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "104c2f865931dac53057d94d1bcd08c6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "df49cfdf126dfdb38eb5cd7648578202e13235a1", "commitAfterChange": "90a827f3180211b552d26c7e33216832cd4451a2", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  void saveFocus ()", "signatureAfterChange": "  void saveFocus ()", "diff": ["-//\tint window = OS.GetControlOwner (handle);", "-//\tControl control = display.getFocusControl (window, false);", "-//\tif (control != null && control != this && this == control.menuShell ()) {", "-//\t\tsetSavedFocus (control);", "-//\t}", "+\tControl control = display.getFocusControl ();", "+\tif (control != null && control != this && this == control.menuShell ()) {", "+\t\tsetSavedFocus (control);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d1c2f838951668a3c4ce818c985f575", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "a137c5853ab0ae7afcd3da9d3d83b4bdd3098087", "commitAfterChange": "a0843f74d4e12fd014b36423a42de3c3ddd5e16b", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "  void hookEvents ()", "signatureAfterChange": "  void hookEvents ()", "diff": ["+\tint colorProc = display.colorProc;", "+\t\tOS.SetControlColorProc (iconHandle, colorProc);", "+\t\tOS.SetControlColorProc (labelHandle, colorProc);", "+\tOS.SetControlColorProc (handle, colorProc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bbfcd828a39b81e0531e171b6a25236", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "332536a6db872df6c8a55983e5b9507181322bee", "commitAfterChange": "c54491881240cacf62bc496023e05818dd936c3f", "methodNumberBeforeChange": 164, "methodNumberAfterChange": 163, "signatureBeforeChange": "  boolean translateTraversal (int key, NSEvent theEvent, boolean [] consume)", "signatureAfterChange": "  boolean translateTraversal (int key, NSEvent theEvent, boolean [] consume)", "diff": ["-\t\t\tint modifiers = display.lastModifiers;", "+\t\t\tint modifiers = theEvent.modifierFlags ();", "-//\t\t\tint [] modifiers = new int [1];", "-//\t\t\tOS.GetEventParameter (theEvent, OS.kEventParamKeyModifiers, OS.typeUInt32, null, 4, null, modifiers);", "-//\t\t\tif ((modifiers [0] & OS.controlKey) == 0) return false;", "-//\t\t\tdetail = key == 121 /* Page down */ ? SWT.TRAVERSE_PAGE_NEXT : SWT.TRAVERSE_PAGE_PREVIOUS;", "+\t\t\tint modifiers = theEvent.modifierFlags ();", "+\t\t\tif ((modifiers & OS.NSControlKeyMask) == 0) return false;", "+\t\t\tdetail = key == 121 /* Page down */ ? SWT.TRAVERSE_PAGE_NEXT : SWT.TRAVERSE_PAGE_PREVIOUS;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f74d751670a664854f878ed5543b3fce", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "b57747abb0a6d500538c509fbd694a7f0fb31a30", "commitAfterChange": "9b1e6a553a714c81f1d1f1cccddf187918d20587", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["-\t\tif (parent != null) window.setCollectionBehavior(OS.NSWindowCollectionBehaviorMoveToActiveSpace);", "+\t\tint behavior = 0;", "+\t\tif (parent != null) behavior |= OS.NSWindowCollectionBehaviorMoveToActiveSpace;", "+\t\tif (OS.VERSION >= 0x1070) {", "+\t\t\tbehavior = OS.NSWindowCollectionBehaviorFullScreenPrimary;", "+\t\t}", "+\t\tif (behavior != 0) window.setCollectionBehavior(behavior);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22cc597243dfbd8e221bcd8599b460c6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "3a4151df7f890efbc61e9a01d33c3ead4c2645d9", "commitAfterChange": "c762252cf769015e8f116caa1f2d177bbf731286", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \r void createHandle ()", "signatureAfterChange": "\r \r void createHandle ()", "diff": ["+\t\r", "+\t/*\r", "+\t* Feature in Windows.  When TBSTYLE_FLAT is used to create\r", "+\t* a flat toolbar, for some reason TBSTYLE_TRANSPARENT is\r", "+\t* also set.  This causes the toolbar to flicker when it is\r", "+\t* moved or resized.  The fix is to clear TBSTYLE_TRANSPARENT.\r", "+\t*/\r", "+\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);\r", "+\tbits &= ~OS.TBSTYLE_TRANSPARENT;\r", "+\tOS.SetWindowLong (handle, OS.GWL_STYLE, bits);\r", "-\tint bits = OS.TBSTYLE_EX_DRAWDDARROWS;\r", "-\tOS.SendMessage (handle, OS.TB_SETEXTENDEDSTYLE, 0, bits);\r", "+\tOS.SendMessage (handle, OS.TB_SETEXTENDEDSTYLE, 0, OS.TBSTYLE_EX_DRAWDDARROWS);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c743152f566f65823cbb56518370f25", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "655553f843c3b05818fb9e7f567f216acb7aa6cb", "commitAfterChange": "a13356820ae2ed0967a42c9fc54b34db1c3b2a38", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "  void HandlePreviewKeyDown (int sender, int e)", "signatureAfterChange": "  void HandlePreviewKeyDown (int sender, int e)", "diff": ["+\tif (display.dragDetectFrame != 0) {", "+\t\tif (OS.KeyEventArgs_Key (e) == OS.Key_Escape) {", "+\t\t\tOS.DispatcherFrame_Continue (display.dragDetectFrame, false);", "+\t\t}", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "204c87dfd965efa3b2181c9ad9ffe1e5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "857431fb0346569b270d2d64d87a0d49ee554249", "commitAfterChange": "655553f843c3b05818fb9e7f567f216acb7aa6cb", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 74, "signatureBeforeChange": "  void HandlePreviewMouseMove (int sender, int e)", "signatureAfterChange": "  void HandlePreviewMouseMove (int sender, int e)", "diff": ["+\t\t\tif (display.dragMouseDown != 0) {", "+\t\t\t\tsendDragEvent (display.dragMouseDown);", "+\t\t\t\tOS.GCHandle_Free (display.dragMouseDown);", "+\t\t\t\tdisplay.dragMouseDown = 0;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9142c5a9ed07cd6b9daf665af04a8222", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/NativesGenerator.java", "commitBeforeChange": "579505f5c399bb89f97d98e9912b18625d2312e2", "commitAfterChange": "6f962e3a053bd8c18a3e154a7ac0ad1ba2aeb3fe", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  void generateFunctionPrototype(Method method, String function, Class[] paramTypes, Class returnType)", "signatureAfterChange": "  void generateFunctionPrototype(Method method, String function, Class[] paramTypes, Class returnType, boolean singleLine)", "diff": ["-void generateFunctionPrototype(Method method, String function, Class[] paramTypes, Class returnType) {", "+void generateFunctionPrototype(Method method, String function, Class[] paramTypes, Class returnType, boolean singleLine) {", "-\toutputln(\")\");", "-\toutput(\"\\t(JNIEnv *env, \");", "+\tif (singleLine) {", "+\t\toutput(\")\");", "+\t\toutput(\"(JNIEnv *env, \");", "+\t} else {", "+\t\toutputln(\")\");", "+\t\toutput(\"\\t(JNIEnv *env, \");", "+\t}", "-\toutputln(\")\");", "+\toutput(\")\");", "+\tif (!singleLine) outputln();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f62f1d8530b2a032d2ba784474881436", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "8fcde38f01fb3f93dea21de879edb0dc4545073c", "commitAfterChange": "d88b15da23c542f6929c156c044f7577d385ff48", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": "  boolean dragDetect (int x, int y, boolean filter, boolean [] consume)", "signatureAfterChange": "  boolean dragDetect (int x, int y, boolean filter, boolean [] consume)", "diff": ["-\t\twhile (true) {", "+\t\t/*", "+\t\t* There should be an event on the queue already, but", "+\t\t* in cases where there isn't one, stop trying after", "+\t\t* half a second. ", "+\t\t*/", "+\t\tlong timeout = System.currentTimeMillis() + 500;", "+\t\twhile (System.currentTimeMillis() < timeout) {", "+\t\tif (eventPtr == 0) return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2382f212da6e768b42de977c84a6719f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "f3d18796cc110357fecd790ace4ccf2990632a2a", "commitAfterChange": "52fbfe7c925d7accc15eca98c36b1b65fccd1a6c", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " public void setClipping (Rectangle rect)", "signatureAfterChange": " public void setClipping (Rectangle rect)", "diff": ["+\t\tint clipRgn = data.clipRgn;\r", "+\t\tif (clipRgn != 0) {\r", "+\t\t\tOS.XDestroyRegion (clipRgn);\r", "+\t\t\tdata.clipRgn = 0;\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "647202f1a6d50a474cf483f3098c8b13", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "5ff7ac2fddf79437e7380da2c61f177a9d2b7b57", "commitAfterChange": "a11f12229032da8f3583f9824ed7436735b4c74e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  void copyArea (Image image, int x, int y, int srcImage)", "signatureAfterChange": "  void copyArea (Image image, int x, int y, int srcImage, boolean screen)", "diff": ["-void copyArea (Image image, int x, int y, int srcImage) {", "+void copyArea (Image image, int x, int y, int srcImage, boolean screen) {", "-\tif (context != 0) { ", "+\tif (context != 0) {", "-\t\tOS.CGContextScaleCTM(context, 1, -1);", "-\t\tOS.CGContextTranslateCTM(context, 0, -height);", "+\t\tif (screen) {", "+\t\t\tOS.CGContextTranslateCTM(context, 0, -(rect.height - height));", "+\t\t} else {\t", "+\t\t\tOS.CGContextScaleCTM(context, 1, -1);", "+\t\t\tOS.CGContextTranslateCTM(context, 0, -height);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ff2b46580a774e8bfa8ca5bcfe4f137", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "9d1af132edd38e80784aaf9b210aecbe2fed1428", "commitAfterChange": "e1e3c4e07d8870cbe3e6fec16f6d053e0a2889fe", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public void select (int index)", "signatureAfterChange": " public void select (int index)", "diff": ["-\tif (menuHandle != 0)", "-\t\tOS.SetControl32BitValue(handle, index+1);", "-\telse {", "+\tif (menuHandle != 0) {", "+\t\tint selected= OS.GetControlValue(handle)-1;", "+\t\tif (index != selected)\t{", "+\t\t\tOS.SetControl32BitValue(handle, index+1);", "+\t\t\tsendEvent(SWT.Modify);", "+\t\t}", "+\t} else {", "-\t\t//sendEvent(SWT.Modify);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01e88ea1e5b9cc21d5e42d3711aa4fc5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "8e1dda1437864634766dd6a9b21a20d9a8381ab4", "commitAfterChange": "e759097646243da78c48cf98ecd98d71e336f93e", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 50, "signatureBeforeChange": "  int kEventWindowUpdate (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventWindowUpdate (int nextHandler, int theEvent, int userData)", "diff": ["+\tupdate = true;", "+\tupdate = false;", "+\tif (invalRgn != 0) {", "+\t\tOS.InvalWindowRgn (shellHandle, invalRgn);", "+\t\tOS.DisposeRgn (invalRgn);", "+\t\tinvalRgn = 0;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0eac6cd06f019f33cfb57a3f9e791e04", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "45241a274b1b6b5d05ce82d64b05685046285bb0", "commitAfterChange": "4d37e69c76f374c82ca18131ce52b31afe7f3b06", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 135, "signatureBeforeChange": "  void updateBkImages()", "signatureAfterChange": "  void updateBkImages()", "diff": ["-\t\t\t\t\tif (bounds.y > getTabHeight() || gradientColors == null) {", "+\t\t\t\t\tint tabHeight = getTabHeight();", "+\t\t\t\t\tboolean wrapped = onBottom ? bounds.y > this.getSize().y - tabHeight : bounds.y > tabHeight; ", "+\t\t\t\t\tif (wrapped || gradientColors == null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68c9247425b4f83eb79cbecaceb86a9c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "526607b9fb53fb9fcd536f216e6c8d00ae0ebcc5", "commitAfterChange": "551af07bcc7e435cadf577ab2e664cc30e8d96e0", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": " public void showSelection ()", "signatureAfterChange": " public void showSelection ()", "diff": ["-\t//TODO", "+\tint item = OS.TreeView_SelectedItem (handle);", "+\tif (item != 0) {", "+\t\tOS.FrameworkElement_BringIntoView (item);", "+\t\tOS.GCHandle_Free (item);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "301faef9aa13fa3961bf97c3ce88ea47", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "ee2f579d39aac1495e26936c185f2d3fdde43458", "commitAfterChange": "849737990e1e8297b762c3b6d5d7471e3b1737be", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": "  void setWindowVisible (boolean visible, boolean key)", "signatureAfterChange": "  void setWindowVisible (boolean visible, boolean key)", "diff": ["+\t\tif (display.loopCounter == 0) {", "+\t\t\tdisplay.pool.release();", "+\t\t\tdisplay.pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec6364cd3019b8f9167bc7f3a6610289", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGenerator.java", "commitBeforeChange": "350f976a03a5b2d274f09a2fee2918329c57e200", "commitAfterChange": "a5b154a3b2f2335f7bd2e2bd8cd0dfb1184f568a", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  public String[] getExtraAttributeNames(Node node)", "signatureAfterChange": "  public String[] getExtraAttributeNames(Node node)", "diff": ["+\t} else if (name.equals(\"function\")) {", "+\t\tNamedNodeMap attribs = node.getAttributes();", "+\t\tif (attribs != null && attribs.getNamedItem(\"variadic\") != null) {", "+\t\t\treturn new String[]{\"swt_variadic_count\",\"swt_variadic_java_types\"};", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21145cfd7327f4165b89ff825b4382a8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "9c4d510cdfe170636a0f339889c955614129d85d", "commitAfterChange": "1ecd9180e0c0cae33976661992b5e6fd4cfeb7d2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  void createItem (MenuItem item, int index)", "signatureAfterChange": "  void createItem (MenuItem item, int index)", "diff": ["+//\t\tnsItem.retain();", "-\t\tnsItem= (NSMenuItem)new NSMenuItem().alloc();", "+\t\tnsItem = (NSMenuItem)new SWTMenuItem().alloc();", "+\t\tnsItem.setTarget(nsItem);", "+\t\tnsItem.setAction(OS.sel_sendSelection);", "+\t\titem.createJNIRef();", "+\t\tnsItem.setTag(item.jniRef);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c3c0d5229cfacbd25b28b7894244a91", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextBidi.java", "commitBeforeChange": "7fcab90d00449f9bb91505b4d46857aaa2ac11c3", "commitAfterChange": "c32b1980ba12b278be8b3731e8726b3004cf92bb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r private void calculateTabStops(String text)", "signatureAfterChange": "\r private void calculateTabStops(String text)", "diff": ["+\tint spaceWidth = gc.stringExtent(\" \").x;\r", "-\t\t}\r", "+\t\t}\t\r", "+\t\t// make sure tab stop is at least one space width apart \r", "+\t\t// from the last character. fixes 4844.\r", "+\t\tif (tabWidth - tabStop % tabWidth < spaceWidth) {\r", "+\t\t\ttabStop += tabWidth;\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e973e7bfcb827b84d8610dac106afe0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "80d60945a1a396b36040a24848555b523f192d5e", "commitAfterChange": "2111ececac5e16563dcf9291794d1e640911aae6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  LRESULT CDDS_ITEMPREPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "signatureAfterChange": "  LRESULT CDDS_ITEMPREPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "diff": ["+\t\t\t\t\t\t\tif (measureEvent != null) {", "+\t\t\t\t\t\t\t\ttextRect.right = Math.min (cellRect.right, measureEvent.x + measureEvent.width);", "+\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0bb1fe14d20b754b94390470125246a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "536f955c2387b36f82f96dd59e83e27146c886e4", "commitAfterChange": "4e02bbdb33d2b1414d624d9aef6fa11969701767", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 122, "signatureBeforeChange": "  int gtk_button_press_event (int widget, int event)", "signatureAfterChange": "  int gtk_button_press_event (int widget, int event)", "diff": ["+\t", "+\tif (hooks(SWT.ImeComposition)) {", "+\t\tint /*long*/ imHandle = imHandle ();", "+\t\tif (imHandle != 0) {", "+\t\t\tOS.gtk_im_context_reset (imHandle);", "+\t\t}", "+\t}", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14e59af2547ce50e88f76111371adf6f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "e06c7cee06cde407869bbcac7ab1fc8f1e44f50c", "commitAfterChange": "bf8ff308bbd619429fdfe0609e1738dfe9acc5ea", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " public void setImage (int columnIndex, Image value)", "signatureAfterChange": " public void setImage (int columnIndex, Image value)", "diff": ["-\tif (value == images [columnIndex]) return;", "-\tif (value != null && value.equals (images [columnIndex])) return;", "-\timages [columnIndex] = value;", "+\tImage image = getImage (columnIndex);", "+\tif (value == image) return;", "+\tif (value != null && value.equals (image)) return;", "+\tif (columnIndex == 0) {", "+\t\tsuper.setImage (value);", "+\t} else {", "+\t\timages [columnIndex] = value;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c51de030c2999dd8c4dd901978360860", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java", "commitBeforeChange": "f38b553164de52bf2b570e8eea3adc0d8ddd18cd", "commitAfterChange": "d846e1a58ec2f14572c2b2c53a19826eb51d8088", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 35, "signatureBeforeChange": "  \tvoid createToolBar()", "signatureAfterChange": "  \tvoid createToolBar()", "diff": ["-\t\tbaselineUpItem.setToolTipText(getResourceString(\"IncreaseBaseline\")); //$NON-NLS-1$", "+\t\tbaselineUpItem.setToolTipText(getResourceString(USE_BASELINE ? \"IncreaseBaseline\" : \"IncreaseFont\")); //$NON-NLS-1$", "-\t\t\t\tsetStyle(BASELINE_UP);", "+\t\t\t\tif (USE_BASELINE) {", "+\t\t\t\t\tsetStyle(BASELINE_UP);", "+\t\t\t\t} else {", "+\t\t\t\t\tadjustFontSize(FONT_INCREMENT);", "+\t\t\t\t}", "-\t\tbaselineDownItem.setToolTipText(getResourceString(\"DecreaseBaseline\")); //$NON-NLS-1$", "+\t\tbaselineDownItem.setToolTipText(getResourceString(USE_BASELINE ? \"DecreaseBaseline\" : \"DecreaseFont\")); //$NON-NLS-1$", "-\t\t\t\tsetStyle(BASELINE_DOWN);", "+\t\t\t\tif (USE_BASELINE) {", "+\t\t\t\t\tsetStyle(BASELINE_DOWN);", "+\t\t\t\t} else {", "+\t\t\t\t\tadjustFontSize(-FONT_INCREMENT);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc2b123cc7d21ac79e3b357be140e045", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Group.java", "commitBeforeChange": "423f4c2f5c37f4b4ad62f33c7075a8ad6aca976f", "commitAfterChange": "cdbd0fa0fe7557b729ae08b3fb2e20c60cd714f9", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void setText (String string)", "signatureAfterChange": " public void setText (String string)", "diff": ["-\tOS.gtk_widget_show (labelHandle);", "+\tif (string.length () != 0) {", "+\t\tOS.gtk_frame_set_label_widget (handle, labelHandle);", "+\t\tOS.gtk_widget_show (labelHandle);", "+\t} else {\t", "+\t\tOS.gtk_frame_set_label_widget (handle, 0);", "+\t\tOS.gtk_widget_hide (labelHandle);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1da27d91318324d18689cc3c28cd6e50", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "19969099fb0b8b88c03bc7dc1b553ccf865db827", "commitAfterChange": "8a770faaa4942f4e1cde0428ab3348bcc4c88e3f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["-\tif (popupHandle != 0) findMenuHandle ();", "-\tfindButtonHandle ();", "+\tmenuHandle = findMenuHandle ();", "+\tif (menuHandle != 0) OS.g_object_ref (menuHandle);", "+\tbuttonHandle = findButtonHandle ();", "+\tif (buttonHandle != 0) OS.g_object_ref (buttonHandle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc535825fe5487b36c383c7720c4b729", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "bb99ea2534d2e9dfa392a31694361cb369d7f4a6", "commitAfterChange": "455e14c922cec17dd3b77d7a39f8da3fcb246440", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " public void setToolTipText (String string)", "signatureAfterChange": " public void setToolTipText (String string)", "diff": ["+\tint strPtr = createDotNetString (string, false);", "+\tOS.FrameworkElement_ToolTip (handle, strPtr);", "+\tif (strPtr != 0) OS.GCHandle_Free (strPtr);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8644c7aba46e1b71d0ba502ab33903b4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "51ea56527162ecf2b56dfc4835d6e9a401ef1495", "commitAfterChange": "c8aed8c7a6eb4441bb1b61dab1d16aea99cff05c", "methodNumberBeforeChange": 140, "methodNumberAfterChange": 140, "signatureBeforeChange": "  void applicationSendEvent (int id, int sel, int event)", "signatureAfterChange": "  void applicationSendEvent (int id, int sel, int event)", "diff": ["-\t\t\t\tif (shell != null && shell.getModalShell () != null) {", "-\t\t\t\t\tif (beep) beep ();\t", "-\t\t\t\t\treturn;", "+\t\t\t\tif (shell != null) {", "+\t\t\t\t\tShell modalShell = shell.getModalShell ();", "+\t\t\t\t\tif (modalShell != null) {", "+\t\t\t\t\t\tif (beep) {", "+\t\t\t\t\t\t\tif (!application.isActive()) {", "+\t\t\t\t\t\t\t\tapplication.activateIgnoringOtherApps(true);", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tbeep ();", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\treturn;", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dda81545a470772e70bc1ea161f2163c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "fa88b959cc1f3afb89a6408cd351458f0ea9b1c6", "commitAfterChange": "8c2f501e9842a7249efb9ce69da7ccc0647a03a7", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "  NSAttributedString createString (String string, Font font, Color foreground, int style, boolean mnemonics)", "signatureAfterChange": "  NSAttributedString createString (String string, Font font, Color foreground, int style, boolean enabled, boolean mnemonics)", "diff": ["-NSAttributedString createString (String string, Font font, Color foreground, int style, boolean mnemonics) {", "+NSAttributedString createString (String string, Font font, Color foreground, int style, boolean enabled, boolean mnemonics) {", "-\tif (foreground != null) {", "-\t\tNSColor color = NSColor.colorWithDeviceRed(foreground.handle[0], foreground.handle[1], foreground.handle[2], foreground.handle[3]);", "-\t\tdict.setObject (color, OS.NSForegroundColorAttributeName);", "+\tif (enabled) {", "+\t\tif (foreground != null) {", "+\t\t\tNSColor color = NSColor.colorWithDeviceRed(foreground.handle[0], foreground.handle[1], foreground.handle[2], foreground.handle[3]);", "+\t\t\tdict.setObject (color, OS.NSForegroundColorAttributeName);", "+\t\t}", "+\t} else {", "+\t\tdict.setObject (NSColor.disabledControlTextColor (), OS.NSForegroundColorAttributeName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79b24d74b49fbc54f79060cdfd57fbf0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "2439b276d171b4b95e287c65d9cb5b785eb4b08d", "commitAfterChange": "1f318468b40b77cd410d26c8f93cbdf50c3f696f", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 103, "signatureBeforeChange": "  LRESULT wmChar (long hwnd, long wParam, long lParam)", "signatureAfterChange": "  LRESULT wmChar (long hwnd, long wParam, long lParam)", "diff": ["-\t/*", "-\t* Feature in Windows.  For some reason, when the", "-\t* widget is a single line text widget, when the", "-\t* user presses tab, return or escape, Windows beeps.", "-\t* The fix is to look for these keys and not call", "-\t* the window proc.", "-\t* ", "-\t* NOTE: This only happens when the drop down list", "-\t* is not visible.", "-\t*/", "+\t\t/*", "+\t\t* Feature in Windows.  For some reason, when the", "+\t\t* widget is a single line text widget, when the", "+\t\t* user presses tab, return or escape, Windows beeps.", "+\t\t* The fix is to look for these keys and not call", "+\t\t* the window proc.", "+\t\t*", "+\t\t* NOTE: This only happens when the drop down list", "+\t\t* is not visible.", "+\t\t*/", "+\t\t/*", "+\t\t* Bug in Windows.  When the user types CTRL and BS", "+\t\t* in a combo control, a DEL character (0x08) is generated.", "+\t\t* Rather than deleting the text, the DEL character", "+\t\t* is inserted into the control. The fix is to detect", "+\t\t* this case and not call the window proc.", "+\t\t*/", "+\t\tcase SWT.DEL:", "+\t\t\tif (OS.GetKeyState (OS.VK_CONTROL) < 0) {", "+\t\t\t\treturn LRESULT.ZERO;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0e192788d24ff907f750a797d32b1db", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "e19b8929298db4194771a475b4b9ef56a8238374", "commitAfterChange": "ca0c5209be7fe694c5578ad160491b05c77a1894", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 69, "signatureBeforeChange": "  void HandlePreviewMouseUp (int sender, int e)", "signatureAfterChange": "  void HandlePreviewMouseUp (int sender, int e)", "diff": ["+\t}", "+\tif (display.dragDetectFrame != 0) {", "+\t\tOS.DispatcherFrame_Continue (display.dragDetectFrame, false);", "+\t\tdisplay.dragMouseUp = OS.GCHandle_Alloc (e);", "+\t\treturn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bed96e577079dc7d8c2072f50722b59", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "49102af5f56c6af2c3c4a70c897d6f31c67ada64", "commitAfterChange": "52351d1e7877d55e3c9e9571e150605e40a9b938", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  void layoutItems ()", "signatureAfterChange": "  void layoutItems ()", "diff": ["-\t\tTBBUTTONINFO info = new TBBUTTONINFO ();", "-\t\tinfo.cbSize = TBBUTTONINFO.sizeof;", "-\t\tinfo.dwMask = OS.TBIF_SIZE;", "-\t\tint /*long*/ size = OS.SendMessage (handle, OS.TB_GETBUTTONSIZE, 0, 0);", "-\t\tinfo.cx = (short) OS.LOWORD (size);", "-\t\tint index = 0;", "-\t\twhile (index < items.length) {", "-\t\t\tToolItem item = items [index];", "-\t\t\tif (item != null && (item.style & SWT.DROP_DOWN) != 0) break;", "-\t\t\tindex++;", "-\t\t}", "-\t\tif (index < items.length) {", "-\t\t\tint /*long*/ padding = OS.SendMessage (handle, OS.TB_GETPADDING, 0, 0);", "-\t\t\tinfo.cx += OS.LOWORD (padding) * 2;", "-\t\t}", "-\t\tfor (int i=0; i<items.length; i++) {", "-\t\t\tToolItem item = items [i];", "-\t\t\tif (item != null && (item.style & SWT.SEPARATOR) == 0) {", "-\t\t\t\tOS.SendMessage (handle, OS.TB_SETBUTTONINFO, item.id, info);", "+\t\tint itemCount = (int)/*64*/OS.SendMessage (handle, OS.TB_BUTTONCOUNT, 0, 0);", "+\t\tif (itemCount > 1) {", "+\t\t\tTBBUTTONINFO info = new TBBUTTONINFO ();", "+\t\t\tinfo.cbSize = TBBUTTONINFO.sizeof;", "+\t\t\tinfo.dwMask = OS.TBIF_SIZE;", "+\t\t\tint /*long*/ size = OS.SendMessage (handle, OS.TB_GETBUTTONSIZE, 0, 0);", "+\t\t\tinfo.cx = (short) OS.LOWORD (size);", "+\t\t\tint index = 0;", "+\t\t\twhile (index < items.length) {", "+\t\t\t\tToolItem item = items [index];", "+\t\t\t\tif (item != null && (item.style & SWT.DROP_DOWN) != 0) break;", "+\t\t\t\tindex++;", "+\t\t\t}", "+\t\t\tif (index < items.length) {", "+\t\t\t\tint /*long*/ padding = OS.SendMessage (handle, OS.TB_GETPADDING, 0, 0);", "+\t\t\t\tinfo.cx += OS.LOWORD (padding) * 2;", "+\t\t\t}", "+\t\t\tfor (int i=0; i<items.length; i++) {", "+\t\t\t\tToolItem item = items [i];", "+\t\t\t\tif (item != null && (item.style & SWT.SEPARATOR) == 0) {", "+\t\t\t\t\tOS.SendMessage (handle, OS.TB_SETBUTTONINFO, item.id, info);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40e864f3708ab0e2ae0867be1b4e4208", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabItem.java", "commitBeforeChange": "666899c116c3a7fadc64ad290f3ccaa7e63e3acb", "commitAfterChange": "3b62eb433496cf86ac0c221960e3863bba8fba1c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": " static String shortenText(GC gc, String text, int width)", "signatureAfterChange": "  String shortenText(GC gc, String text, int width, String ellipses)", "diff": ["-static String shortenText(GC gc, String text, int width) {", "+", "+String shortenText(GC gc, String text, int width, String ellipses) {", "+\tint ellipseWidth = gc.textExtent(ellipses, FLAGS).x;", "-\t\tif (l <= width) {", "-\t\t\treturn text;", "+\t\tif (l + ellipseWidth <= width) {", "+\t\t\treturn text + ellipses;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2aaa5d69033758c2411974b7f586f2a0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "293242e8da21f46cf098240145f8ff08fd5bd827", "commitAfterChange": "3911eac091ae8a59389a2f42ff94a2a60da98fae", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 58, "signatureBeforeChange": "  LRESULT WM_CHAR (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_CHAR (int wParam, int lParam)", "diff": ["-\t* user presses tab or return, Windows beeps.", "+\t* user presses tab, return or escape, Windows beeps.", "+\t* ", "+\t* NOTE: This only happens when the drop down list", "+\t* is not visible.", "+\t\tcase OS.VK_TAB: return LRESULT.ZERO;", "-\t\tcase OS.VK_TAB: return LRESULT.ZERO;", "+\t\tcase OS.VK_ESCAPE: ", "+\t\t\tif (OS.SendMessage (handle, OS.CB_GETDROPPEDSTATE, 0, 0) == 0) {", "+\t\t\t\treturn LRESULT.ZERO;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ff020beab7e6800d9c20223a548f23a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "feb4a52f3e48479ad5648c00e868e8e0907d49a9", "commitAfterChange": "e1807a207ac49f915507af373dc8b75ccfadc44c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  int childStyle ()", "signatureAfterChange": "  int childStyle ()", "diff": ["+\tint /*long*/ rcStyle = OS.gtk_widget_get_modifier_style (handle);", "+\tif ((OS.gtk_rc_style_get_color_flags (rcStyle, 0) & OS.GTK_RC_BG) != 0) return 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbed239eb7a317a4a94c26ffe7a3347f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Scrollable.java", "commitBeforeChange": "3afccba317ef5a48f0c5c3206970a888361c9a60", "commitAfterChange": "e673374008bc8492ce479b48d45e2e49230f3206", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " void setScrollbarVisible (int barHandle, boolean visible)", "signatureAfterChange": " void setScrollbarVisible (ScrollBar bar, boolean visible)", "diff": ["-void setScrollbarVisible (int barHandle, boolean visible) {", "+void setScrollbarVisible (ScrollBar bar, boolean visible) {", "+\tint barHandle = bar.handle;", "+\tboolean managed = OS.XtIsManaged (barHandle);", "+\tif (managed == visible) return;", "+", "+\tbar.sendEvent (visible ? SWT.Show : SWT.Hide);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf109b8b79249557e67933e25b418420", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "7a850966fcebc2510dcdae26a2185eb84e5caa97", "commitAfterChange": "ea4d187e18c5cb79cd146d623e9cb83cded32237", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " int addMerge(int[] mergeRanges, StyleRange[] mergeStyles, int mergeCount, int modifyStart, int modifyEnd)", "signatureAfterChange": " int addMerge(int[] mergeRanges, StyleRange[] mergeStyles, int mergeCount, int modifyStart, int modifyEnd)", "diff": ["-\t", "-\tint j = modifyStart;\t", "-\tfor (int i = 0; i < mergeCount; i += 2) {", "-\t\tif (j > 0 && ranges[j - 2] + ranges[j - 1] == mergeRanges[i] && mergeStyles[i >> 1].similarTo(styles[(j - 2) >> 1])) {", "-\t\t\tranges[j - 1] += mergeRanges[i + 1];", "-\t\t} else {", "-\t\t\tstyles[j >> 1] = mergeStyles[i >> 1];", "-\t\t\tranges[j++] = mergeRanges[i];", "-\t\t\tranges[j++] = mergeRanges[i + 1];", "+\tif (MERGE_STYLES) {", "+\t\tint j = modifyStart;\t", "+\t\tfor (int i = 0; i < mergeCount; i += 2) {", "+\t\t\tif (j > 0 && ranges[j - 2] + ranges[j - 1] == mergeRanges[i] && mergeStyles[i >> 1].similarTo(styles[(j - 2) >> 1])) {", "+\t\t\t\tranges[j - 1] += mergeRanges[i + 1];", "+\t\t\t} else {", "+\t\t\t\tstyles[j >> 1] = mergeStyles[i >> 1];", "+\t\t\t\tranges[j++] = mergeRanges[i];", "+\t\t\t\tranges[j++] = mergeRanges[i + 1];", "+\t\t\t}", "+\t\tif (endStyle != null && ranges[j - 2] + ranges[j - 1] == endStart && endStyle.similarTo(styles[(j - 2) >> 1])) {", "+\t\t\tranges[j - 1] += endLength;", "+\t\t\tmodifyEnd += 2;", "+\t\t\tmergeCount += 2;", "+\t\t}", "+\t\tif (rangeCount > modifyEnd) {", "+\t\t\tSystem.arraycopy(ranges, modifyStart + mergeCount, ranges, j, rangeCount - modifyEnd);", "+\t\t\tSystem.arraycopy(styles, (modifyStart + mergeCount) >> 1, styles, j >> 1, styleCount - (modifyEnd >> 1));", "+\t\t}", "+\t\tgrow = (j - modifyStart) - (modifyEnd - modifyStart);", "+\t} else {", "+\t\tSystem.arraycopy(mergeRanges, 0, ranges, modifyStart, mergeCount);", "+\t\tSystem.arraycopy(mergeStyles, 0, styles, modifyStart >> 1, mergeCount >> 1);", "-\tif (endStyle != null && ranges[j - 2] + ranges[j - 1] == endStart && endStyle.similarTo(styles[(j - 2) >> 1])) {", "-\t\tranges[j - 1] += endLength;", "-\t\tmodifyEnd += 2;", "-\t\tmergeCount += 2;", "-\t}", "-\tif (rangeCount > modifyEnd) {", "-\t\tSystem.arraycopy(ranges, modifyStart + mergeCount, ranges, j, rangeCount - modifyEnd);", "-\t\tSystem.arraycopy(styles, (modifyStart + mergeCount) >> 1, styles, j >> 1, styleCount - (modifyEnd >> 1));", "-\t}", "-\tgrow = (j - modifyStart) - (modifyEnd - modifyStart);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f80c6b33f17902c3a638ea69bf3062c8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "e6fd36b834853dbd7a2f4ea5d3f6a3490b642f43", "commitAfterChange": "68774e9fa7ffb588d4e87074e9abdf86ba978259", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  LRESULT CDDS_ITEMPREPAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT CDDS_ITEMPREPAINT (int wParam, int lParam)", "diff": ["+\t\ttextColor = -1;", "+\t\t\tint newTextClr = OS.GetTextColor (hDC);", "+\t\t\t\t\tif (!selected) {", "+\t\t\t\t\t\ttextColor = clrText = OS.GetSysColor (OS.COLOR_HIGHLIGHTTEXT);", "+\t\t\t\t\t}", "+\t\t\t\t\tif (selected) textColor = clrText = newTextClr;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47ac2c02b8916a89322db6f016eb34e6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "29c077e01041056dad942cbea613f5a80cdf7b71", "commitAfterChange": "b4900c85b68770c95704598e281f5c46fcfa7d2e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  void _setVisible (boolean visible)", "signatureAfterChange": "  void _setVisible (boolean visible)", "diff": ["+\t/*", "+\t* Bug in Windows.  After closing a popup menu, the accessibility focus", "+\t* is not returned to the focus control.  This causes confusion for AT users.", "+\t* The fix is to explicitly set the accessibility focus back to the focus control.", "+\t*/", "+\tint hFocus = OS.GetFocus();", "+\tif (hFocus != 0) {", "+\t\tOS.NotifyWinEvent (OS.EVENT_OBJECT_FOCUS, hFocus, OS.OBJID_CLIENT, 0);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "330b8a40352278f74da4f74dc11ea4ac", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/NativesGenerator.java", "commitBeforeChange": "02b6fcfc66e68bef5894b18185545118e86c317e", "commitAfterChange": "586b5feea31544dfc02a715e1d3e74d38c036ea9", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  void generateSetParameter(int i, Class paramType, ParameterData paramData, boolean critical)", "signatureAfterChange": "  void generateSetParameter(int i, Class paramType, ParameterData paramData, boolean critical)", "diff": ["+\t\toutput(iStr);", "+\t\toutput(\" && lparg\");", "+\t\toutput(\" && lparg\");", "+\t\toutput(iStr);", "+\t\t\toutput(iStr);", "+\t\t\toutput(\" && lparg\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "daad682f5bce4b548fadf2be00595d40", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleControlSite.java", "commitBeforeChange": "6a6df6cffde4492bff18a5288fe746a25d2b63eb", "commitAfterChange": "999226f6bfe889d48d5a85f5b6b8da5198f84a27", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " void onFocusIn(Event e)", "signatureAfterChange": " void onFocusIn(Event e)", "diff": ["+\tString progID = getProgramID();", "+\tif (progID == null) return;", "+\tif (!progID.startsWith(SHELL_PROG_ID)) {", "+\t\tsuper.onFocusIn(e);", "+\t\treturn;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "478651aacb1d9919f7bde7a0380d9d59", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/TableCursor.java", "commitBeforeChange": "0c8487c5a06c4c79a76002d2142712f82d3366f1", "commitAfterChange": "12588946f81ae7cf5b0461707a77688b961e9a21", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  void setRowColumn(int row, int column, boolean notify)", "signatureAfterChange": "  void setRowColumn(int row, int column, boolean notify)", "diff": ["-\tif (0 <= row && row < table.getItemCount()) {", "-\t\tif (0 <= column && column < table.getColumnCount()) {", "+\tint itemCount = table.getItemCount();", "+\tint columnCount = table.getColumnCount();", "+\tif (0 <= row && row < itemCount) {", "+\t\tif (0 <= column && column < columnCount) {", "+\t\t\tif (columnCount > 1) {", "+\t\t\t\ttable.showColumn(table.getColumn(column));", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36ec422bf475eb3f7bed21beb94eb430", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "d73f8f0bcf60169fe33b6dbd2d883c2f48f8638f", "commitAfterChange": "5ce9e32287c36f4649c3c726d93f7ff6e2af5bd1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " void destroyItem (TreeItem item)", "signatureAfterChange": " void destroyItem (TreeItem item)", "diff": ["-\t\tupdateVerticalBar ();", "+\t\tint oldTopIndex = topIndex;", "+\t\tupdateVerticalBar ();", "+\t\t/* ", "+\t\t * If destroyed item is above viewport then adjust topIndex and the vertical", "+\t\t * scrollbar so that the current viewport items will not change. ", "+\t\t */", "+\t\tif (availableIndex < topIndex) {", "+\t\t\ttopIndex = oldTopIndex - 1;", "+\t\t\tgetVerticalBar ().setSelection (topIndex);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c7f2070f93e0d85a3b66f1c7c9837fd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "1215228ca28cd877225ea2d6d4c5dd6eb8a8d47a", "commitAfterChange": "437b26428f10a35a326ef6b319e71308ad9cdb90", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " public int internal_new_GC (GCData data)", "signatureAfterChange": " public int internal_new_GC (GCData data)", "diff": ["+\tint disjoint = OS.PtFindDisjoint( handle );", "+\tif( disjoint != 0 )", "+\t\tOS.PgSetRegion( OS.PtWidgetRid( disjoint ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e83661ecd7929937bb0cb9e8dde913a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "fe01df1082b5613213a59b03292c02660626087d", "commitAfterChange": "e771e3576d1e1ba57ba12fa501dc8174c6ca74e8", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 124, "signatureBeforeChange": "  boolean sendMouseEvent (NSEvent nsEvent, int type, boolean send)", "signatureAfterChange": "  boolean sendMouseEvent (NSEvent nsEvent, int type, boolean send)", "diff": ["+\tNSInputManager manager = NSInputManager.currentInputManager ();", "+\tif (manager != null && manager.wantsToHandleMouseEvents ()) {", "+\t\tif (manager.handleMouseEvent (nsEvent)) {", "+\t\t\treturn true;", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "682c32efa99c37cfb44a1f30ba5d9bf3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "ea897abc3bbdebe63455758f5526d5ba34bed848", "commitAfterChange": "528213c92aecc4d5a81122fe05b4330346ed3e47", "methodNumberBeforeChange": 114, "methodNumberAfterChange": 114, "signatureBeforeChange": "  void windowSendEvent (long id, long sel, long event)", "signatureAfterChange": "  void windowSendEvent (long id, long sel, long event)", "diff": ["-\t\t\tif (nsEvent.keyCode() == 53 /* ESC */ && menuBar != null && !menuBar.isDisposed()) {", "-\t\t\t\tif (menuBar.nsMenu.performKeyEquivalent(nsEvent)) {", "-\t\t\t\t\treturn;", "+\t\t\tif (nsEvent.keyCode() == 53 /* ESC */) {", "+\t\t\t\tif (menuBar != null && !menuBar.isDisposed()) {", "+\t\t\t\t\tif (menuBar.nsMenu.performKeyEquivalent(nsEvent)) {", "+\t\t\t\t\t\treturn;", "+\t\t\t\t\t}", "+\t\t\t\t} else if (display.appMenuBar != null && !display.appMenuBar.isDisposed()) {", "+\t\t\t\t\tif (display.appMenuBar.nsMenu.performKeyEquivalent(nsEvent)) {", "+\t\t\t\t\t\treturn;", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "054c7bf634c603e40cf5df24192c2a50", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/ViewForm.java", "commitBeforeChange": "a190846340d87bd29425466ef5ed921f7a97af93", "commitAfterChange": "abc732f1e158b6ff5e228a1c7fdd89ad3764842c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " void onPaint(GC gc)", "signatureAfterChange": " void onPaint(GC gc)", "diff": ["+\tif (separator > -1) {", "+\t\tgc.setForeground(borderColor1);", "+\t\tgc.drawLine(borderLeft, separator, size.x - borderLeft - borderRight, separator);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32f33552ac5989f1d29c7206563f190f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/dnd/DNDExample.java", "commitBeforeChange": "b56f97ceba84bc920feb3699c39825309ab5991f", "commitAfterChange": "ac661944fc39630e8e1391fa4ecc189c1049cb89", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 19, "signatureBeforeChange": "  private void createDropOperations(Composite parent)", "signatureAfterChange": "  private void createDropOperations(Composite parent)", "diff": ["+\t\t\t\tif (dropEnabled) {", "+\t\t\t\t\tcreateDropTarget();", "+\t\t\t\t}", "+\t\t\t\tif (dropEnabled) {", "+\t\t\t\t\tcreateDropTarget();", "+\t\t\t\t}", "+\t\t\t\tif (dropEnabled) {", "+\t\t\t\t\tcreateDropTarget();", "+\t\t\t\t}", "+\t\t\t\tdropOperation &= ~DND.DROP_DEFAULT;", "+\t\t\t\tif (dropEnabled) {", "+\t\t\t\t\tcreateDropTarget();", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a33a00c93e10dc644d9952549e8519a7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "2b9cc0ad362e4e089036ad3e80669a07f39dbebb", "commitAfterChange": "9bb3eb7f63eafe86f6f275ce8f06fe82494af5c4", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public String open ()", "signatureAfterChange": " public String open ()", "diff": ["+\t\tif (filterIndex != -1) OS.FileDialog_FilterIndex (dialog, filterIndex + 1);", "+\tfilterIndex = OS.FileDialog_FilterIndex(dialog) - 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "799812aa5fe80e0963263ad07a5d8e86", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "0e44312d8bacf7415657253a36f4b5c4ce37fd23", "commitAfterChange": "a0b88a952d0c1906817bc2f6e1157b67e39ed2f9", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["-\t\tOS.g_object_set (textRenderer, OS.ypad, 0, 0);", "+\t\t/*", "+\t\t* Feature in GTK. In order to make a read only combo box the same", "+\t\t* height as an editable combo box the ypad must be set to 0. In ", "+\t\t* versions 2.4.x of GTK, a pad of 0 will clip some letters. The", "+\t\t* fix is to set the pad to 1.", "+\t\t*/", "+\t\tint pad = 0;", "+\t\tif (OS.GTK_VERSION < OS.VERSION(2, 6, 0)) pad = 1;", "+\t\tOS.g_object_set (textRenderer, OS.ypad, pad, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d32b5ad41b59ab14f1dc692e018e09be", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "3d49220c008438fa7a1e78924469122fc1ea3cbe", "commitAfterChange": "e7613587b2c5b474d68f0eb17e38585b8b989c06", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "  int gtk_focus_out_event (int widget, int event)", "signatureAfterChange": "  int gtk_focus_out_event (int widget, int event)", "diff": ["+\t/*", "+\t* Feature in GTK. The GTK combo box popup under some window managers is ", "+\t* implemented as a GTK_MENU. When it pops up, it causes the combo box shell to", "+\t* lose focus and no focus in is received for the menu. As a result, no active shell", "+\t* is set while the pop up is present. The fix is to check the current grab handle", "+\t* and see if it is a GTK_MENU. If it is, we set the ignoreActivate flag on Display", "+\t* and leave the current active shell in place. When the menu pops down, the focus in", "+\t* event received by the shell will be ignored.", "+\t*/", "+\tdisplay.ignoreActivate = false;", "+\tint grabHandle = OS.gtk_grab_get_current ();", "+\tif (grabHandle != 0) {", "+\t\tif (OS.G_OBJECT_TYPE(grabHandle) == OS.GTK_TYPE_MENU()) display.ignoreActivate = true;", "+\t\treturn 0;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d377fe87c00bb6061a5ca4a357be5972", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyleRange.java", "commitBeforeChange": "2c455bd66e912ec62eccdf8bd303cacb771c0610", "commitAfterChange": "62774f63d87d39b5f158f82c51ca18d06b16d091", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public int hashCode()", "signatureAfterChange": "\r public int hashCode()", "diff": ["-\treturn start + length + foreground.hashCode() + background.hashCode() + fontStyle;\r", "+\tint code = start + length;\r", "+\t\r", "+\tif (foreground != null)\r", "+\t\tcode += foreground.hashCode();\r", "+\tif (background != null)\r", "+\t\tcode += background.hashCode();\r", "+\treturn code + fontStyle;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07645d4c0c0850c31f136d507ffda249", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/gtk/org/eclipse/swt/browser/MozillaDelegate.java", "commitBeforeChange": "8a021d89105adb15defec05f4bb294256be0d2ff", "commitAfterChange": "41acd10ceebece3466a430c500d8003c98a28198", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  static int eventProc (int handle, int gdkEvent, int pointer)", "signatureAfterChange": "  static int eventProc (int handle, int gdkEvent, int pointer)", "diff": ["-\tWidget widget = Display.getCurrent ().findWidget (handle);", "+\tint /*long*/ parent = OS.gtk_widget_get_parent (handle);", "+\tparent = OS.gtk_widget_get_parent (parent);", "+\tif (parent == 0) return 0;", "+\tWidget widget = Display.getCurrent ().findWidget (parent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "256c59b314f0c1eb687408720555ce87", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "031c9a500dd129c7443ca157105d41e35d7388b1", "commitAfterChange": "cebbc867e1355722ea4813c69c835878fb8eee2f", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 56, "signatureBeforeChange": "\r \r LRESULT WM_SETCURSOR (int wParam, int lParam)", "signatureAfterChange": "\r \r LRESULT WM_SETCURSOR (int wParam, int lParam)", "diff": ["-\t\t\t\tOS.SetActiveWindow (modalShell.handle);\r", "+\t\t\t\tint hwndModal = modalShell.handle;\r", "+\t\t\t\tif (OS.IsWindowEnabled (hwndModal)) {\r", "+\t\t\t\t\tOS.SetActiveWindow (hwndModal);\r", "+\t\t\t\t}\r", "-\t\t\t\t\t\tOS.SetActiveWindow (hwndPopup);\r", "+\t\t\t\t\t\tif (OS.IsWindowEnabled (hwndPopup)) {\r", "+\t\t\t\t\t\t\tOS.SetActiveWindow (hwndPopup);\r", "+\t\t\t\t\t\t}\r"]}], "num": 43189}