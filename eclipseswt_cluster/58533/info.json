{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "31c46751053c83096ecc0d441693b3ad", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ecfeb3cb515879a67578b27f8da2ac5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "20b59fb33fb1a1d03e75299b801b82b0a493e702", "commitAfterChange": "856bec56110ce2de9051506cbc1855b2230b262f", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": "  int kEventControlSetFocusPart (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventControlSetFocusPart (int nextHandler, int theEvent, int userData)", "diff": ["-\t\tif (part [0] != OS.kControlFocusNoPart) display.focusControl = this;", "-\t\tsendFocusEvent (part [0] != OS.kControlFocusNoPart, false);", "-\t\tif (part [0] != OS.kControlFocusNoPart) display.focusControl = null;", "+\t\tdisplay.focusControl = this;", "+\t\tdisplay.focusEvent = part [0] != OS.kControlFocusNoPart ? SWT.FocusIn : SWT.FocusOut;", "+\t\tsendFocusEvent (display.focusEvent, false);", "+\t\tdisplay.focusEvent = SWT.None;", "+\t\tdisplay.focusControl = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2f0aa99f962c5726ab72241b47b2a88", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "6976333087f29aa0c313d19d0f83938006d01e3e", "commitAfterChange": "a141fe53a3370bdde207c536308d14a717b0cac0", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": "  boolean sendFocusEvent (int type, int hwnd)", "signatureAfterChange": "  boolean sendFocusEvent (int type, int hwnd)", "diff": ["-\t* It is possible (but unlikely), that application", "-\t* code could have disposed the widget in the focus", "-\t* out event.  If this happens keep going to send", "-\t* the deactivate events.", "+\t* Feature in Windows.  During the processing of WM_KILLFOCUS,", "+\t* when the focus window is queried using GetFocus(), it has", "+\t* already been assigned to the new window.  The fix is to", "+\t* remember the control that is losing or gaining focus and", "+\t* answer it during WM_KILLFOCUS.  If a WM_SETFOCUS occurs", "+\t* during WM_KILLFOCUS, the focus control needs to be updated", "+\t* to the current control.  At any other time, the focus", "+\t* control matches Windows.", "+\tDisplay display = this.display;", "+\tdisplay.focusEvent = type;", "+\tdisplay.focusControl = this;", "-\t", "-\tswitch (type) {", "-\t\tcase SWT.FocusIn:", "-\t\t\t/*", "-\t\t\t* It is possible that the shell may be", "-\t\t\t* disposed at this point.  If this happens", "-\t\t\t* don't send the activate and deactivate", "-\t\t\t* events.", "-\t\t\t*/\t", "-\t\t\tif (!shell.isDisposed ()) {", "+\tdisplay.focusEvent = SWT.None;", "+\tdisplay.focusControl = null;", "+", "+\t/*", "+\t* It is possible that the shell may be", "+\t* disposed at this point.  If this happens", "+\t* don't send the activate and deactivate", "+\t* events.", "+\t*/\t", "+\tif (!shell.isDisposed ()) {", "+\t\tswitch (type) {", "+\t\t\tcase SWT.FocusIn:", "-\t\t\t}", "-\t\t\tbreak;", "-\t\tcase SWT.FocusOut:", "-\t\t\t/*", "-\t\t\t* It is possible that the shell may be", "-\t\t\t* disposed at this point.  If this happens", "-\t\t\t* don't send the activate and deactivate", "-\t\t\t* events.", "-\t\t\t*/", "-\t\t\tif (!shell.isDisposed ()) {", "-\t\t\t\tDisplay display = shell.display;", "-\t\t\t\tControl control = hwnd != -1 ? display.findControl (hwnd) : display.getFocusControl ();", "+\t\t\t\tbreak;", "+\t\t\tcase SWT.FocusOut:", "+\t\t\t\tControl control = display.findControl (hwnd);", "-\t\t\t}", "-\t\t\tbreak;", "+\t\t\t\tbreak;", "+\t\t}"]}], "num": 58533}