{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e509477717f6823edec14299d7f549fc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e3c7083528a962941c5642c1d6b6638", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "98e192d43291fda4fd3ef0ea1b9ac46736826b70", "commitAfterChange": "2f4d1b2421c0beaef45f0224c0a7c70952862a33", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": "  void updateModal ()", "signatureAfterChange": "  void updateModal ()", "diff": ["+\tboolean isModalShell = false;", "-\t\t\tif ((style & mask) != 0) shell = this;", "+\t\t\tif ((style & mask) != 0) {", "+\t\t\t\tshell = this;", "+\t\t\t\t/*", "+\t\t\t\t* Feature in GTK. If a modal shell is reassigned to", "+\t\t\t\t* a different group, then it's modal state is not.", "+\t\t\t\t* persisted against the new group. ", "+\t\t\t\t* The fix is to reset the modality before it is changed", "+\t\t\t\t* into a different group and then, set back after it", "+\t\t\t\t* assigned into new group.", "+\t\t\t\t*/", "+\t\t\t\tisModalShell = OS.gtk_window_get_modal (shellHandle);", "+\t\t\t\tif (isModalShell) OS.gtk_window_set_modal (shellHandle, false);", "+\t\t\t}", "+\t\tif (isModalShell) OS.gtk_window_set_modal (shellHandle, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4e260301a71b2e1d8bff50c8539e967", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "9df10dae0e474265302efa030af73cf9510268ad", "commitAfterChange": "d8c7ac1c238569192a4106f29243a448a4e0192d", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": "  void updateModal ()", "signatureAfterChange": "  void updateModal ()", "diff": ["+\t\tComposite topModalShell = shell;", "+\t\t\ttopModalShell = shell;", "+\t\t/*", "+\t\t* If a modal shell doesn't have any parent (or modal shell as it's parent), ", "+\t\t* then we incorrectly add the modal shell to the default group, due to which ", "+\t\t* children of that modal shell are not interactive. The fix is to ensure ", "+\t\t* that whenever there is a modal shell in the hierarchy, then we always", "+\t\t* add the modal shell's group to that modal shell and it's modelless children", "+\t\t* in a different group.", "+\t\t*/", "+\t\tif (group == 0 && topModalShell != null) group = topModalShell.getShell ().group;"]}], "num": 61098}