{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e4e997dd9bbd3f2a2ee0c2cedfd938a3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adfbc6857ac6b11e7fe4b94ab5dba89d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_ScrollBar.java", "commitBeforeChange": "68057cbf552c2cb144586f06d2232a3297bd2d4f", "commitAfterChange": "483fa10c58617ef5c7747f0eb622f29ae07c8f30", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 33, "signatureBeforeChange": " private void check(int minExpected, int maxExpected, int selectionExpected, int thumbExpected)", "signatureAfterChange": " private void check(String call, int minExpected, int maxExpected, int selectionExpected, int thumbExpected)", "diff": ["-private void check(int minExpected, int maxExpected, int selectionExpected, int thumbExpected) {", "-\tassertEquals(scrollBar.getMaximum(), maxExpected);", "-\tassertEquals(scrollBar.getMinimum(), minExpected);", "-\tassertEquals(scrollBar.getSelection(), selectionExpected);", "-\tassertEquals(scrollBar.getThumb(), thumbExpected);", "+private void check(String call, int minExpected, int maxExpected, int selectionExpected, int thumbExpected) {", "+\tassertEquals(call+\" max \", maxExpected, scrollBar.getMaximum());", "+\tassertEquals(call+\" min \", minExpected, scrollBar.getMinimum());", "+\tassertEquals(call+\" sel \", selectionExpected, scrollBar.getSelection());", "+\tassertEquals(call+\" thmb \", thumbExpected, scrollBar.getThumb());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "889eb0bb4b7e3885d6ce6c9578160e8f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Slider.java", "commitBeforeChange": "ff065b5c44d02b1a88b447e021360b7bf40ab332", "commitAfterChange": "68057cbf552c2cb144586f06d2232a3297bd2d4f", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 31, "signatureBeforeChange": " private void check(String call, int set, int minExpected, int maxExpected, int selectionExpected, int thumbExpected)", "signatureAfterChange": " private void check(String call, int minExpected, int maxExpected, int selectionExpected, int thumbExpected)", "diff": ["-private void check(String call, int set, int minExpected, int maxExpected, int selectionExpected, int thumbExpected) {", "-\tassertTrue(call + \"(\" + set + \"): Maximum Expected: \" + maxExpected + \"  Actual: \" + slider.getMaximum(), slider.getMaximum() == maxExpected);", "-\tassertTrue(call + \"(\" + set + \"): Minimum Expected: \" + minExpected + \"  Actual: \" + slider.getMinimum(), slider.getMinimum() == minExpected);", "-\tassertTrue(call + \"(\" + set + \"): Selection Expected: \" + selectionExpected + \"  Actual: \" + slider.getSelection(), slider.getSelection() == selectionExpected);", "-\tassertTrue(call + \"(\" + set + \"): Thumb Expected: \" + thumbExpected + \"  Actual: \" + slider.getThumb(), slider.getThumb() == thumbExpected);", "+private void check(String call, int minExpected, int maxExpected, int selectionExpected, int thumbExpected) {", "+\tassertEquals(call+\" max \", maxExpected, slider.getMaximum());", "+\tassertEquals(call+\" min \", minExpected, slider.getMinimum());", "+\tassertEquals(call+\" sel \", selectionExpected, slider.getSelection());", "+\tassertEquals(call+\" thmb \", thumbExpected, slider.getThumb());"]}], "num": 15880}