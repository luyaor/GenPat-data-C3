{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "96b466f6e8875670894f6df8ab3e8fab", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "361ce3792caf44e4f480f74f4283bff4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cairo/org/eclipse/swt/graphics/Pattern.java", "commitBeforeChange": "a8f114be734cf55461b8999b4ca14407d0f10da3", "commitAfterChange": "b1dbb178b5008dcde16cb7cda2cdc928e2b7e39d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": " public Pattern(Device device, float x1, float y1, float x2, float y2, Color color1, Color color2)", "signatureAfterChange": " public Pattern(Device device, float x1, float y1, float x2, float y2, Color color1, int alpha1, Color color2, int alpha2)", "diff": ["+}", "+public Pattern(Device device, float x1, float y1, float x2, float y2, Color color1, int alpha1, Color color2, int alpha2) {", "-\t//TODO - how about alpha?", "-\tGC.setCairoPatternColor(handle, 0, color1);", "-\tGC.setCairoPatternColor(handle, 1, color2);", "+\tGC.setCairoPatternColor(handle, 0, color1, alpha1);", "+\tGC.setCairoPatternColor(handle, 1, color2, alpha2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ba8fe3770209ed4eeadfaf629852e4d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/internal/mozilla/nsIDOMEventTarget.java", "commitBeforeChange": "a87a0403ac3b9edf077183bd0f22ecbd0e7e4a59", "commitAfterChange": "ce5bc5ccb4b7e34346accfd668928ba52a6f7a27", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic int AddEventListener(int type, int listener, int useCapture)", "signatureAfterChange": "  \tpublic int AddEventListener(int type, int listener, int useCapture, int wantsUntrusted, int _argc)", "diff": ["-\tpublic int AddEventListener(int /*long*/ type, int /*long*/ listener, int useCapture) {", "-\t\treturn XPCOM.VtblCall(nsISupports.LAST_METHOD_ID + 1, getAddress(), type, listener, useCapture);", "+\tpublic int AddEventListener(int /*long*/ type, int /*long*/ listener, int useCapture, int wantsUntrusted, int _argc) {", "+\t\treturn XPCOM.VtblCall(nsISupports.LAST_METHOD_ID + 1, getAddress(), type, listener, useCapture, wantsUntrusted, _argc);"]}], "num": 11655}