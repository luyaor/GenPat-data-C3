{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "760ddd93006f008a66f560aac6330326", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fda56166d3e1dc4b3e314b84c5e7336c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/DropTarget.java", "commitBeforeChange": "b796db7a88d068fbce3590cf91dcc3e9c7f9c320", "commitAfterChange": "37c57c08e60a278244a46818f49a47ece9a0e524", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void setTransfer(Transfer[] transferAgents)", "signatureAfterChange": " public void setTransfer(Transfer[] transferAgents)", "diff": ["+\t", "+\t", "+\t// Register the types as valid drop types in Cocoa.", "+\t// Accumulate all of the transfer types into a list.", "+\tArrayList typeStrings = new ArrayList();", "+\t", "+\tfor (int i = 0; i < this.transferAgents.length; i++) {", "+\t\tString[] types = transferAgents[i].getTypeNames();", "+\t\t", "+\t\tfor (int j = 0; j < types.length; j++) {", "+\t\t\ttypeStrings.add(types[j]);", "+\t\t}", "+\t}", "+\t", "+\t// Convert to an NSArray of NSStrings so we can register with the Control.", "+\tint typeStringCount = typeStrings.size();", "+\tNSMutableArray nsTypeStrings = NSMutableArray.arrayWithCapacity(typeStringCount);", "+\t", "+\tfor (int i = 0; i < typeStringCount; i++) {", "+\t\tnsTypeStrings.addObject(NSString.stringWith((String)typeStrings.get(i)));", "+\t}", "+\t", "+\tcontrol.view.registerForDraggedTypes(nsTypeStrings);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18d6264920e04f603a872efb7361aa8e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/TreeTab.java", "commitBeforeChange": "ec5a7d2e67690a57d25ffa56f4e845a86fda4878", "commitAfterChange": "d9b9d0d2713c9aec7b44f9284b479d5ef42ff141", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tvoid createExampleWidgets ()", "signatureAfterChange": " \tvoid createExampleWidgets ()", "diff": ["-\t\tif (multipleColumns.getSelection()) {", "+\t\tboolean multi = multipleColumns.getSelection();", "+\t\tif (multi) {", "+\t\t\t\ttreeColumn.setImage(image);", "-\t\t\titem.setImage(image);", "+\t\t\tif (multi) {", "+\t\t\t\tfor (int j = 0; j < columnTitles.length; j++) {", "+\t\t\t\t\titem.setImage(j, image);", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\titem.setImage(image);", "+\t\t\t}", "-\t\t\t\tsubitem.setImage(image);", "+\t\t\t\tif (multi) {", "+\t\t\t\t\tfor (int j = 0; j < columnTitles.length; j++) {", "+\t\t\t\t\t\tsubitem.setImage(j, image);", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\tsubitem.setImage(image);", "+\t\t\t\t}", "-\t\titem.setImage(image);", "+\t\tif (multi) {", "+\t\t\tfor (int j = 0; j < columnTitles.length; j++) {", "+\t\t\t\titem.setImage(j, image);", "+\t\t\t}", "+\t\t} else {", "+\t\t\titem.setImage(image);", "+\t\t}", "-\t\titem.setImage(image);", "+\t\tif (multi) {", "+\t\t\tfor (int j = 0; j < columnTitles.length; j++) {", "+\t\t\t\titem.setImage(j, image);", "+\t\t\t}", "+\t\t} else {", "+\t\t\titem.setImage(image);", "+\t\t}"]}], "num": 15715}