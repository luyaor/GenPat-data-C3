{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f656589e2be3b7382af311a0091c2ae6", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58f270b88580f4e9299ee48f518acf40", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabItem2.java", "commitBeforeChange": "03f23aa773469b8a3f3e0a770076508526525b40", "commitAfterChange": "1051f4ce684a4239d50c42e8ac0e4ce13591cb56", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " void drawUnselected(GC gc)", "signatureAfterChange": " void drawUnselected(GC gc)", "diff": ["+\t// draw background", "-\t\tshape = new int[left.length+right.length+4];", "+\t\tshape = new int[left.length + right.length + 4];", "-\t\t\tshape[index++] = x+left[2*i]; ", "-\t\t\tshape[index++] = y+height-1+left[2*i+1]; // -1 = unselected tab 1 pixel shorter than selected tab", "+\t\t\tshape[index++] = x + left[2*i]; ", "+\t\t\tshape[index++] = y + height - 1 + left[2*i+1];", "-\t\t\tshape[index++] = x+width-3+right[2*i]; // -2 = 2 pixel gap between tabs, gap on right side", "-\t\t\tshape[index++] = y+height-1+right[2*i+1]; // -1 = unselected tab 1 pixel shorter than selected tab", "+\t\t\tshape[index++] = x + width - 3 + right[2*i]; // -2 = 2 pixel gap between tabs, gap on right side", "+\t\t\tshape[index++] = y + height - 1 + right[2*i+1];", "-\t\tshape = new int[left.length+right.length+4];", "+\t\tshape = new int[left.length + right.length + 4];", "-\t\t\tshape[index++] = x+left[2*i];", "-\t\t\tshape[index++] = y+1+left[2*i+1]; // +1 = unselected tab 1 pixel shorter than selected tab", "+\t\t\tshape[index++] = x + left[2*i];", "+\t\t\tshape[index++] = y + 1 + left[2*i+1]; // +1 = unselected tab 1 pixel shorter than selected tab", "-\t\t\tshape[index++] = x+width-2+right[2*i]; // -2 = 2 pixel gap between tabs, gap on right side", "-\t\t\tshape[index++] = y+1+right[2*i+1]; // +1 = unselected tab 1 pixel shorter than selected tab", "+\t\t\tshape[index++] = x + width - 2 + right[2*i]; // -2 = 2 pixel gap between tabs, gap on right side", "+\t\t\tshape[index++] = y + 1 + right[2*i+1]; // +1 = unselected tab 1 pixel shorter than selected tab", "-\t\tshape[index++]=x+width-2; // -2 = 2 pixel gap between tabs, gap on right side", "-\t\tshape[index++]=y+height;", "+\t\tshape[index++]=x + width - 2; // -2 = 2 pixel gap between tabs, gap on right side", "+\t\tshape[index++]=y + height;", "-\t\tshape = new int[left.length+right.length+4];", "+\t\tshape = new int[left.length + right.length + 4];", "-\t\tshape[index++]=x;", "-\t\tshape[index++]=y;", "+\t\tshape[index++] = x;", "+\t\tshape[index++] = y;", "-\t\t\tshape[index++] = x+left[2*i]; ", "-\t\t\tshape[index++] = y+height-2+left[2*i+1]; // -1 = unselected tab 1 pixel shorter than selected tab", "+\t\t\tshape[index++] = x + left[2*i]; ", "+\t\t\tshape[index++] = y + height - 2 + left[2*i+1]; // -1 = unselected tab 1 pixel shorter than selected tab", "-\t\t\tshape[index++] = x+width-3+right[2*i]; // -2 = 2 pixel gap between tabs, gap on right side", "-\t\t\tshape[index++] = y+height-2+right[2*i+1]; // -1 = unselected tab 1 pixel shorter than selected tab", "+\t\t\tshape[index++] = x + width - 3 + right[2*i]; // -3 = 2 pixel gap between tabs, gap on right side", "+\t\t\tshape[index++] = y + height - 2 + right[2*i+1]; // -2 = unselected tab 1 pixel shorter than selected tab", "-\t\tshape[index++]=x+width-3; // -2 = 2 pixel gap between tabs, gap on right side", "-\t\tshape[index++]=y;", "+\t\tshape[index++] = x + width - 3; // -3 = 2 pixel gap between tabs, gap on right side", "+\t\tshape[index++] = y - 1;", "-\t\tshape = new int[left.length+right.length+4];", "+\t\tshape = new int[left.length + right.length + 4];", "-\t\tshape[index++]=x;", "-\t\tshape[index++]=y+height;", "+\t\tshape[index++] = x;", "+\t\tshape[index++] = y + height - 1;", "-\t\t\tshape[index++] = x+width-3+right[2*i]; // -2 = 2 pixel gap between tabs, gap on right side", "+\t\t\tshape[index++] = x+width-3+right[2*i]; // -3 = 2 pixel gap between tabs, gap on right side", "-\t\tshape[index++]=x+width-3; // -2 = 2 pixel gap between tabs, gap on right side", "-\t\tshape[index++]=y+height;", "+\t\tshape[index++]=x + width - 3; // -3 = 2 pixel gap between tabs, gap on right side", "+\t\tshape[index++]=y + height;", "-\tint textY = y;", "-\tif (parent.onBottom) {", "-\t\ttextY+= BOTTOM_MARGIN + (height - TOP_MARGIN - BOTTOM_MARGIN - extent.y) / 2;", "-\t} else {", "-\t\ttextY+= TOP_MARGIN + (height - TOP_MARGIN - BOTTOM_MARGIN - extent.y) / 2;", "-\t}", "+\tint textY = y + (height - extent.y) / 2;", "+\ttextY += parent.onBottom ? -1 : 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50f02a83dbd4509de7e7625f8e9fb4cc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "74633fa01aa8c5998245320589a13e924ab066bc", "commitAfterChange": "9aa111009eb55f78239030ddcabfd6bb90983b3a", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public Rectangle getBounds (int columnIndex)", "signatureAfterChange": " public Rectangle getBounds (int columnIndex)", "diff": ["-", "-\t", "-\t * If there are no columns then this is the bounds of the receiver from the", "-\t * beginning of its expander to the end of its text.", "+\t * If there are no columns then this is the bounds of the receiver's content.", "-\t\tint x = getExpanderBounds ().x;", "-\t\tint width = getFocusX () + getTextPaintWidth (0) - x;", "-\t\treturn new Rectangle (x, parent.getItemY (this), width, parent.itemHeight);", "+\t\tint width = getContentWidth (0);", "+\t\treturn new Rectangle (", "+\t\t\tgetContentX (0),", "+\t\t\tparent.getItemY (this),", "+\t\t\twidth,", "+\t\t\tparent.itemHeight - 1);", "+\t", "-\t\tint columnX = column.getX ();", "-\t\tint xOffset = getExpanderBounds ().x - columnX;", "-\t\tint width = Math.max (0, column.width - xOffset);\t/* for columns with width < expander x */", "-\t\treturn new Rectangle (columnX + xOffset, parent.getItemY (this), width, parent.itemHeight);", "+\t\t/* ", "+\t\t * For column 0 this is bounds from the beginning of the content to the", "+\t\t * end of the column.", "+\t\t */", "+\t\tint x = getContentX (0);", "+\t\tint offset = x - column.getX ();", "+\t\tint width = Math.max (0, column.width - offset);\t\t/* max is for columns with small widths */", "+\t\treturn new Rectangle (x, parent.getItemY (this), width, parent.itemHeight - 1);", "-\treturn new Rectangle (column.getX (), parent.getItemY (this), column.width, parent.itemHeight);", "+\t/*", "+\t * For columns > 0 this is the bounds of the tree cell.", "+\t */", "+\treturn new Rectangle (column.getX (), parent.getItemY (this), column.width, parent.itemHeight - 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "061b2d580dd686998beed9fb68926e51", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "54e966b17dff82794616f6f88da465fe6ff8d1ab", "commitAfterChange": "e3a284077475cfed7262b71636e1ab3448ca2fd8", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 17, "signatureBeforeChange": "  int getBackgroundPixel ()", "signatureAfterChange": "  int getBackgroundPixel ()", "diff": ["+", "-\tif (OS.IsWinCE) return OS.GetSysColor (OS.COLOR_WINDOW);", "-\tint pixel = OS.SendMessage (handle, OS.TVM_GETBKCOLOR, 0, 0);", "-\tif (pixel == -1) return OS.GetSysColor (OS.COLOR_WINDOW);", "-\treturn pixel;", "+\tif (!OS.IsWinCE) return _getBackgroundPixel ();", "+\t/*", "+\t* Feature in Windows.  When a tree is given a background color", "+\t* using TVM_SETBKCOLOR and the tree is disabled, Windows draws", "+\t* the tree using the background color rather than the disabled", "+\t* colors.  This is different from the table which draws grayed.", "+\t* The fix is to set the default background color while the tree", "+\t* is disabled and restore it when enabled.", "+\t*/", "+\tif (!OS.IsWindowEnabled (handle) && background != -1) {", "+\t\treturn background;", "+\t}", "+\treturn _getBackgroundPixel ();"]}], "num": 17554}