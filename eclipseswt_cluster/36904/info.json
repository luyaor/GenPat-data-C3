{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "54c3540b7df0cc0d7d8badabeb10f0be", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "000e5ee0744b97ee7494e782090222e4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/PrintRenderer.java", "commitBeforeChange": "5544ce1d748561f71c4f1d1997c431f82e5c4c86", "commitAfterChange": "24e0049851c0d0a09cb9f25e5892d112e2936fed", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 11, "signatureBeforeChange": " protected int getStyledTextWidth(String text, int textStartOffset, StyleRange[] lineStyles, int paintX, GC gc)", "signatureAfterChange": " protected Color getSelectionBackground()", "diff": ["+}", "+protected Color getSelectionBackground() {", "+\treturn null;", "+}", "- */", "-protected int getStyledTextWidth(String text, int textStartOffset, StyleRange[] lineStyles, int paintX, GC gc) {", "-\tString textSegment;", "-\tint textLength = text.length();", "-\tint textIndex = 0;", "-", "-\tfor (int styleIndex = 0; styleIndex < lineStyles.length; styleIndex++) {", "-\t\tStyleRange style = lineStyles[styleIndex];", "-\t\tint textEnd;", "-\t\tint styleSegmentStart = style.start - textStartOffset;", "-\t\tif (styleSegmentStart + style.length < 0) {", "-\t\t\tcontinue;", "-\t\t}", "-\t\tif (styleSegmentStart >= textLength) {", "-\t\t\tbreak;", "-\t\t}", "-\t\t// is there a style for the current string position?", "-\t\tif (textIndex < styleSegmentStart) {", "-\t\t\ttextSegment = text.substring(textIndex, styleSegmentStart);", "-\t\t\tsetLineFont(gc, SWT.NORMAL);", "-\t\t\tpaintX += gc.stringExtent(textSegment).x;", "-\t\t\ttextIndex = styleSegmentStart;", "-\t\t}", "-\t\ttextEnd = Math.min(textLength, styleSegmentStart + style.length);", "-\t\ttextSegment = text.substring(textIndex, textEnd);", "-\t\tsetLineFont(gc, style.fontStyle);", "-\t\tpaintX += gc.stringExtent(textSegment).x;", "-\t\ttextIndex = textEnd;", "-\t}", "-\t// is there unmeasured and unstyled text?", "-\tif (textIndex < textLength) {", "-\t\ttextSegment = text.substring(textIndex, textLength);", "-\t\tsetLineFont(gc, SWT.NORMAL);", "-\t\tpaintX += gc.stringExtent(textSegment).x;", "-\t}", "-\treturn paintX;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "534e96649709b3c94ae2f309c330fc23", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "f9c3b5973aa314c2c0842a04a410e5cc909a74fe", "commitAfterChange": "4e22aa7cc6f558a2b3130ccb8327c63b7cc18d3f", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": " private int getStyledTextWidth(String text, int textStartOffset, StyleRange[] lineStyles, int paintX, GC gc, FontData fontData)", "signatureAfterChange": " protected abstract int getStyledTextWidth(String text, int textStartOffset, StyleRange[] lineStyles, int paintX, GC gc);", "diff": ["-private int getStyledTextWidth(String text, int textStartOffset, StyleRange[] lineStyles, int paintX, GC gc, FontData fontData) {", "-\tString textSegment;", "-\tint textLength = text.length();", "-\tint textIndex = 0;", "-", "-\tfor (int styleIndex = 0; styleIndex < lineStyles.length; styleIndex++) {", "-\t\tStyleRange style = lineStyles[styleIndex];", "-\t\tint textEnd;", "-\t\tint styleSegmentStart = style.start - textStartOffset;", "-\t\tif (styleSegmentStart + style.length < 0) {", "-\t\t\tcontinue;", "-\t\t}", "-\t\tif (styleSegmentStart >= textLength) {", "-\t\t\tbreak;", "-\t\t}", "-\t\t// is there a style for the current string position?", "-\t\tif (textIndex < styleSegmentStart) {", "-\t\t\tsetLineFont(gc, fontData, SWT.NORMAL);", "-\t\t\ttextSegment = text.substring(textIndex, styleSegmentStart);", "-\t\t\tpaintX += gc.stringExtent(textSegment).x;", "-\t\t\ttextIndex = styleSegmentStart;", "-\t\t}", "-\t\ttextEnd = Math.min(textLength, styleSegmentStart + style.length);", "-\t\tsetLineFont(gc, fontData, style.fontStyle);", "-\t\ttextSegment = text.substring(textIndex, textEnd);", "-\t\tpaintX += gc.stringExtent(textSegment).x;", "-\t\ttextIndex = textEnd;", "-\t}", "-\t// is there unmeasured and unstyled text?", "-\tif (textIndex < textLength) {", "-\t\tsetLineFont(gc, fontData, SWT.NORMAL);", "-\t\ttextSegment = text.substring(textIndex, textLength);", "-\t\tpaintX += gc.stringExtent(textSegment).x;", "-\t}", "-\treturn paintX;", "-}", "+protected abstract int getStyledTextWidth(String text, int textStartOffset, StyleRange[] lineStyles, int paintX, GC gc);"]}], "num": 36904}