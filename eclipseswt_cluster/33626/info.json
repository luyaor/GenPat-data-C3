{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "00c54a5b9bf8e9ebe8ccc51cd17da01f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d89f0a1208c1bea6c37845e5ca7a30ae", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/JNIGeneratorApp.java", "commitBeforeChange": "dc99d9bb9843280e22befd705fd4e0f15ba22ec9", "commitAfterChange": "da66ed50e7f2fec0e5faf4b617a73367a0acde7d", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  public void generate(ProgressMonitor progress)", "signatureAfterChange": "  public void generate(ProgressMonitor progress)", "diff": ["-\tif (mainClassName == null) return;", "+\tif (mainClass == null) return;", "-\tClass[] classes = getClasses();", "-\tClass[] natives = getNativesClasses();", "-\tClass[] structs = getStructureClasses();", "+\tJNIClass[] classes = getClasses();", "+\tJNIClass[] natives = getNativesClasses(classes);", "+\tJNIClass[] structs = getStructureClasses(classes);", "-\t\t\tClass clazz = natives[i];", "-\t\t\tMethod[] methods = clazz.getDeclaredMethods();", "+\t\t\tJNIClass clazz = natives[i];", "+\t\t\tJNIMethod[] methods = clazz.getDeclaredMethods();", "-\t\t\t\tMethod method = methods[j];", "+\t\t\t\tJNIMethod method = methods[j];", "-\t\ttotal += natives.length * 3;", "+\t\ttotal += natives.length * (3);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38385ee1555d6fe5d390fefa265369ad", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/JNIGeneratorApp.java", "commitBeforeChange": "dc99d9bb9843280e22befd705fd4e0f15ba22ec9", "commitAfterChange": "da66ed50e7f2fec0e5faf4b617a73367a0acde7d", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  public Class[] getClasses()", "signatureAfterChange": "  public JNIClass[] getClasses()", "diff": ["-public Class[] getClasses() {", "-\tif (mainClassName == null) return new Class[0];", "+public JNIClass[] getClasses() {", "+\tif (classes != null) return classes;", "+\tif (mainClassName == null) return new JNIClass[0];", "+\tif (USE_AST) return getASTClasses();", "-\tClass[] classes = new Class[classNames.length];", "+\tJNIClass[] classes = new JNIClass[classNames.length];", "-\t\t\tclasses[i] = Class.forName(packageName + \".\" + className, false, getClass().getClassLoader());", "+\t\t\tString qualifiedName = packageName + \".\" + className;", "+\t\t\tif (qualifiedName.equals(mainClassName)) {", "+\t\t\t\tclasses[i] = mainClass;", "+\t\t\t} else {", "+\t\t\t\tString sourcePath = new File(outputDir).getParent() + \"/\" + qualifiedName.replace('.', '/') + \".java\";", "+\t\t\t\tclasses[i] = new ReflectClass(Class.forName(qualifiedName, false, getClass().getClassLoader()), metaData, sourcePath);", "+\t\t\t}"]}], "num": 33626}