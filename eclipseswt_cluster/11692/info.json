{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "64cb7914f32b434c023f3343380841d4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2346826d83493089c9a7227824fcef8b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/FileTransfer.java", "commitBeforeChange": "8727d22e38059537dcc917ca55f0d6ddcedac706", "commitAfterChange": "0e7716ec8b85ed8b2a10afa69a4dfa63fe12298f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void javaToNative(Object object, TransferData transferData)", "signatureAfterChange": " public void javaToNative(Object object, TransferData transferData)", "diff": ["+\tif (object == null || !(object instanceof String[])) return;", "+\t// build a byte array from data", "+\tString[] files = (String[])object;", "+\t", "+\t// create a string separated by \"new lines\" to represent list of files", "+\tString nativeFormat = \"\";", "+\tfor (int i = 0, length = files.length; i < length; i++){", "+\t\tnativeFormat += \"file:\"+files[i]+\"\\r\";", "+\t}", "+\tbyte[] buffer = Converter.wcsToMbcs(null, nativeFormat, true);", "+\t// pass byte array on to super to convert to native", "+\tsuper.javaToNative(buffer, transferData);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "418af082c5bc15444a34593646408a2f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "0a0d68ccc965d964425467b0f4596a46bebec755", "commitAfterChange": "21892980b713722b00fd37f2cf57ebee1e87ffdb", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void setText (String string)", "signatureAfterChange": " public void setText (String string)", "diff": ["-\tOS.gtk_label_parse_uline (handle, string2bytesConvertMnemonic(string));\t", "+\tint length = string.length ();", "+\tchar [] text = new char [length + 1];", "+\tstring.getChars (0, length, text, 0);", "+\tfor (int i=0; i<length; i++) {", "+\t\tif (text [i] == '&') text [i] = '_';", "+\t}", "+\tbyte [] buffer = Converter.wcsToMbcs (null, text);", "+\tOS.gtk_label_set_text_with_mnemonic (handle, buffer);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4488ecdf5b3322dacca8908a1a6b1d91", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/TextTransfer.java", "commitBeforeChange": "b410e8153a654b114833e69eeef807b125e605e6", "commitAfterChange": "7203f644cd57836096a98ff5d2035a1b7d2e4966", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Object nativeToJava(TransferData transferData)", "signatureAfterChange": " public Object nativeToJava(TransferData transferData)", "diff": ["-\t\t\t\t/* Ensure byteCount is a multiple of 2 bytes on UNICODE platforms */", "-\t\t\t\tint size = COM.GlobalSize(hMem) / TCHAR.sizeof * TCHAR.sizeof;", "+\t\t\t\t/* Ensure byteCount is a multiple of 2 bytes */", "+\t\t\t\tint size = COM.GlobalSize(hMem) / 2 * 2;", "-\t\t\t\tTCHAR buffer = new TCHAR(0, size / TCHAR.sizeof);", "+\t\t\t\tchar[] chars = new char[size/2];", "-\t\t\t\t\tCOM.MoveMemory(buffer, ptr, size);", "-\t\t\t\t\treturn buffer.toString(0, buffer.strlen());", "+\t\t\t\t\tCOM.MoveMemory(chars, ptr, size);", "+\t\t\t\t\tint length = chars.length;", "+\t\t\t\t\tfor (int i=0; i<chars.length; i++) {", "+\t\t\t\t\t\tif (chars [i] == '\\0') {", "+\t\t\t\t\t\t\tlength = i;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\treturn new String (chars, 0, length);"]}], "num": 11692}