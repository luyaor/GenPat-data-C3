{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be451a2d9bff0ed07371e1f9a979be52", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cc3002a51963c269a776a68c92b95b1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "0824c6be1a1f5c02e5a0811758feb938d6ec8c29", "commitAfterChange": "d976ddbe207f4b84af7155d1db6c5e1e64234e41", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void copyArea (Image image, int x, int y, int srcImage)", "signatureAfterChange": " public void copyArea(int srcX, int srcY, int width, int height, int destX, int destY)", "diff": ["-", "-void copyArea (Image image, int x, int y, int srcImage) {", "-\tif (srcImage == 0) return;", "-//\tint imageHandle = image.handle;", "-//\tint bpc = OS.CGImageGetBitsPerComponent(imageHandle);", "-//\tint width = OS.CGImageGetWidth(imageHandle);", "-//\tint height = OS.CGImageGetHeight(imageHandle);", "-//\tint bpr = OS.CGImageGetBytesPerRow(imageHandle);", "-//\tint alphaInfo = OS.CGImageGetAlphaInfo(imageHandle);", "-//\tint context = OS.CGBitmapContextCreate(image.data, width, height, bpc, bpr, data.device.colorspace, alphaInfo);", "-//\tif (context != 0) {", "-//\t \tCGRect rect = new CGRect();", "-//\t \trect.x = -x;", "-//\t \trect.y = y;", "-//\t \trect.width = OS.CGImageGetWidth(srcImage);", "-//\t\trect.height = OS.CGImageGetHeight(srcImage);", "-//\t\tOS.CGContextTranslateCTM(context, 0, -(rect.height - height));", "-//\t\tOS.CGContextDrawImage(context, rect, srcImage);", "-//\t\tOS.CGContextRelease(context);", "-//\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10f53555f0472908257ad3e80b9477a4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "7d76cc622a15faf17862e315d91aaa4dbfe8f148", "commitAfterChange": "ba456bc3459bbfe3ebe7b7f98ce0c3032335e33c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void copyArea(int srcX, int srcY, int width, int height, int destX, int destY)", "signatureAfterChange": "  void copyArea (Image image, int x, int y, int srcImage)", "diff": ["+", "+void copyArea (Image image, int x, int y, int srcImage) {", "+\tif (srcImage == 0) return;", "+\tint imageHandle = image.handle;", "+\tint bpc = OS.CGImageGetBitsPerComponent(imageHandle);", "+\tint width = OS.CGImageGetWidth(imageHandle);", "+\tint height = OS.CGImageGetHeight(imageHandle);", "+\tint bpr = OS.CGImageGetBytesPerRow(imageHandle);", "+\tint alphaInfo = OS.CGImageGetAlphaInfo(imageHandle);", "+\tint context = OS.CGBitmapContextCreate(image.data, width, height, bpc, bpr, data.device.colorspace, alphaInfo);", "+\tif (context != 0) { ", "+\t \tCGRect rect = new CGRect();", "+\t \trect.x = -x;", "+\t \trect.y = -y;", "+\t \trect.width = OS.CGImageGetWidth(srcImage);", "+\t\trect.height = OS.CGImageGetHeight(srcImage);", "+\t\tOS.CGContextScaleCTM(context, 1, -1);", "+\t\tOS.CGContextTranslateCTM(context, 0, -height);", "+\t\tOS.CGContextDrawImage(context, rect, srcImage);", "+\t\tOS.CGContextRelease(context);", "+\t}"]}], "num": 8518}