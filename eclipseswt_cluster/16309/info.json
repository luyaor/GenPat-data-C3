{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aaa6cbeea1a6984d715f30ee9e688a44", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec74d6d3a821ea55df936a5d04c0536f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/internal/image/JPEGFileFormat.java", "commitBeforeChange": "1e1ccbf61bda268533d4d88e38bb0e1f77b71b26", "commitAfterChange": "54678335fd7dde7fcf31de28ef4e8a4cec037256", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 39, "signatureBeforeChange": " void inverseDCT(int[] dataUnit)", "signatureAfterChange": " void inverseDCT(int[] dataUnit)", "diff": ["-\t\t\tint dcVal = dataUnit[rIndex] * 4;", "-\t\t\tfor (int i = rIndex; i < rIndex + 8; i++) {", "+\t\t\tint dcVal = dataUnit[rIndex] << 2;", "+\t\t\tfor (int i = rIndex + 7; i >= rIndex; i--) {", "-\t\t\tint tmp0 = (dataUnit[rIndex] + dataUnit[rIndex + 4]) * 8192;", "-\t\t\tint tmp1 = (dataUnit[rIndex] - dataUnit[rIndex + 4]) * 8192;", "+\t\t\tint tmp0 = (dataUnit[rIndex] + dataUnit[rIndex + 4]) << 13;", "+\t\t\tint tmp1 = (dataUnit[rIndex] - dataUnit[rIndex + 4]) << 13;", "-\t\t\tint z5 = (z3 + z4)* FIX_1_175875602; /* sqrt(2) * c3 */", "+\t\t\tint z5 = (z3 + z4) * FIX_1_175875602; /* sqrt(2) * c3 */", "-\t\t\ttmp0 = tmp0 * FIX_0_298631336;\t\t/* sqrt(2) * (-c1+c3+c5-c7) */", "-\t\t\ttmp1 = tmp1 * FIX_2_053119869;\t\t/* sqrt(2) * ( c1+c3-c5+c7) */", "-\t\t\ttmp2 = tmp2 * FIX_3_072711026;\t\t/* sqrt(2) * ( c1+c3+c5-c7) */", "-\t\t\ttmp3 = tmp3 * FIX_1_501321110;\t\t/* sqrt(2) * ( c1+c3-c5-c7) */", "-\t\t\tz1 = z1 * (0 - FIX_0_899976223);\t/* sqrt(2) * (c7-c3) */", "-\t\t\tz2 = z2 * (0 - FIX_2_562915447);\t/* sqrt(2) * (-c1-c3) */", "-\t\t\tz3 = z3 * (0 - FIX_1_961570560);\t/* sqrt(2) * (-c3-c5) */", "-\t\t\tz4 = z4 * (0 - FIX_0_390180644);\t/* sqrt(2) * (c5-c3) */", "+\t\t\ttmp0 *= FIX_0_298631336;\t\t/* sqrt(2) * (-c1+c3+c5-c7) */", "+\t\t\ttmp1 *= FIX_2_053119869;\t\t/* sqrt(2) * ( c1+c3-c5+c7) */", "+\t\t\ttmp2 *= FIX_3_072711026;\t\t/* sqrt(2) * ( c1+c3+c5-c7) */", "+\t\t\ttmp3 *= FIX_1_501321110;\t\t/* sqrt(2) * ( c1+c3-c5-c7) */", "+\t\t\tz1 *= 0 - FIX_0_899976223;\t/* sqrt(2) * (c7-c3) */", "+\t\t\tz2 *= 0 - FIX_2_562915447;\t/* sqrt(2) * (-c1-c3) */", "+\t\t\tz3 *= 0 - FIX_1_961570560;\t/* sqrt(2) * (-c3-c5) */", "+\t\t\tz4 *= 0 - FIX_0_390180644;\t/* sqrt(2) * (c5-c3) */", "-\t\t\tz3 = z3 + z5;", "-\t\t\tz4 = z4 + z5;", "-\t\t\ttmp0 = tmp0 + z1 + z3;", "-\t\t\ttmp1 = tmp1 + z2 + z4;", "-\t\t\ttmp2 = tmp2 + z2 + z3;", "-\t\t\ttmp3 = tmp3 + z1 + z4;", "+\t\t\tz3 += z5;", "+\t\t\tz4 += z5;", "+\t\t\ttmp0 += z1 + z3;", "+\t\t\ttmp1 += z2 + z4;", "+\t\t\ttmp2 += z2 + z3;", "+\t\t\ttmp3 += z1 + z4;", "-\t\t\tint descaleFactor1 = ExtendTest[11];", "-\t\t\tint descaleFactor2 = ExtendTest[12];", "-\t\t\tdataUnit[rIndex] = (tmp10 + tmp3 + descaleFactor1) / descaleFactor2;", "-\t\t\tdataUnit[rIndex + 7] = (tmp10 - tmp3 + descaleFactor1) / descaleFactor2;", "-\t\t\tdataUnit[rIndex + 1] = (tmp11 + tmp2 + descaleFactor1) / descaleFactor2;", "-\t\t\tdataUnit[rIndex + 6] = (tmp11 - tmp2 + descaleFactor1) / descaleFactor2;", "-\t\t\tdataUnit[rIndex + 2] = (tmp12 + tmp1 + descaleFactor1) / descaleFactor2;", "-\t\t\tdataUnit[rIndex + 5] = (tmp12 - tmp1 + descaleFactor1) / descaleFactor2;", "-\t\t\tdataUnit[rIndex + 3] = (tmp13 + tmp0 + descaleFactor1) / descaleFactor2;", "-\t\t\tdataUnit[rIndex + 4] = (tmp13 - tmp0 + descaleFactor1) / descaleFactor2;", "+\t\t\tdataUnit[rIndex] = (tmp10 + tmp3 + 1024) >> 11;", "+\t\t\tdataUnit[rIndex + 7] = (tmp10 - tmp3 + 1024) >> 11;", "+\t\t\tdataUnit[rIndex + 1] = (tmp11 + tmp2 + 1024) >> 11;", "+\t\t\tdataUnit[rIndex + 6] = (tmp11 - tmp2 + 1024) >> 11;", "+\t\t\tdataUnit[rIndex + 2] = (tmp12 + tmp1 + 1024) >> 11;", "+\t\t\tdataUnit[rIndex + 5] = (tmp12 - tmp1 + 1024) >> 11;", "+\t\t\tdataUnit[rIndex + 3] = (tmp13 + tmp0 + 1024) >> 11;", "+\t\t\tdataUnit[rIndex + 4] = (tmp13 - tmp0 + 1024) >> 11;", "-\t\t\tint dcVal = (dataUnit[c0] + 16) / 32;", "+\t\t\tint dcVal = (dataUnit[c0] + 16) >> 5;", "+\t\t\tint z0 = dataUnit[c0];", "+\t\t\tint z4 = dataUnit[c4];", "-\t\t\tint tmp0 = (dataUnit[c0] + dataUnit[c4]) * 8192;", "-\t\t\tint tmp1 = (dataUnit[c0] - dataUnit[c4]) * 8192;", "+\t\t\tint tmp0 = (z0 + z4) << 13;", "+\t\t\tint tmp1 = (z0 - z4) << 13;", "-\t\t\tint z4 = tmp1 + tmp3;", "-\t\t\tint z5 = (z3 + z4) * FIX_1_175875602;\t/* sqrt(2) * c3 */", "+\t\t\tz4 = tmp1 + tmp3;", "+\t\t\tz0 = (z3 + z4) * FIX_1_175875602;\t/* sqrt(2) * c3 */", "-\t\t\ttmp0 = tmp0 * FIX_0_298631336;\t\t/* sqrt(2) * (-c1+c3+c5-c7) */", "-\t\t\ttmp1 = tmp1 * FIX_2_053119869;\t\t/* sqrt(2) * ( c1+c3-c5+c7) */", "-\t\t\ttmp2 = tmp2 * FIX_3_072711026;\t\t/* sqrt(2) * ( c1+c3+c5-c7) */", "-\t\t\ttmp3 = tmp3 * FIX_1_501321110;\t\t/* sqrt(2) * ( c1+c3-c5-c7) */", "-\t\t\tz1 = z1 * (0 - FIX_0_899976223);\t/* sqrt(2) * (c7-c3) */", "-\t\t\tz2 = z2 * (0 - FIX_2_562915447);\t/* sqrt(2) * (-c1-c3) */", "-\t\t\tz3 = z3 * (0 - FIX_1_961570560);\t/* sqrt(2) * (-c3-c5) */", "-\t\t\tz4 = z4 * (0 - FIX_0_390180644);\t/* sqrt(2) * (c5-c3) */", "+\t\t\ttmp0 *= FIX_0_298631336;\t\t/* sqrt(2) * (-c1+c3+c5-c7) */", "+\t\t\ttmp1 *= FIX_2_053119869;\t\t/* sqrt(2) * ( c1+c3-c5+c7) */", "+\t\t\ttmp2 *= FIX_3_072711026;\t\t/* sqrt(2) * ( c1+c3+c5-c7) */", "+\t\t\ttmp3 *= FIX_1_501321110;\t\t/* sqrt(2) * ( c1+c3-c5-c7) */", "+\t\t\tz1 *= 0 - FIX_0_899976223;\t/* sqrt(2) * (c7-c3) */", "+\t\t\tz2 *= 0 - FIX_2_562915447;\t/* sqrt(2) * (-c1-c3) */", "+\t\t\tz3 *= 0 - FIX_1_961570560;\t/* sqrt(2) * (-c3-c5) */", "+\t\t\tz4 *= 0 - FIX_0_390180644;\t/* sqrt(2) * (c5-c3) */", "-\t\t\tz3 = z3 + z5;", "-\t\t\tz4 = z4 + z5;", "+\t\t\tz3 += z0;", "+\t\t\tz4 += z0;", "-\t\t\ttmp0 = tmp0 + z1 + z3;", "-\t\t\ttmp1 = tmp1 + z2 + z4;", "-\t\t\ttmp2 = tmp2 + z2 + z3;", "-\t\t\ttmp3 = tmp3 + z1 + z4;", "+\t\t\ttmp0 += z1 + z3;", "+\t\t\ttmp1 += z2 + z4;", "+\t\t\ttmp2 += z2 + z3;", "+\t\t\ttmp3 += z1 + z4;", "-\t\t\tint descaleFactor1 = ExtendTest[18];", "-\t\t\tint descaleFactor2 = ExtendTest[19];", "-\t\t\tdataUnit[c0] = (tmp10 + tmp3 + descaleFactor1) / descaleFactor2;", "-\t\t\tdataUnit[c7] = (tmp10 - tmp3 + descaleFactor1) / descaleFactor2;", "-\t\t\tdataUnit[c1] = (tmp11 + tmp2 + descaleFactor1) / descaleFactor2;", "-\t\t\tdataUnit[c6] = (tmp11 - tmp2 + descaleFactor1) / descaleFactor2;", "-\t\t\tdataUnit[c2] = (tmp12 + tmp1 + descaleFactor1) / descaleFactor2;", "-\t\t\tdataUnit[c5] = (tmp12 - tmp1 + descaleFactor1) / descaleFactor2;", "-\t\t\tdataUnit[c3] = (tmp13 + tmp0 + descaleFactor1) / descaleFactor2;", "-\t\t\tdataUnit[c4] = (tmp13 - tmp0 + descaleFactor1) / descaleFactor2;", "+\t\t\tdataUnit[c0] = (tmp10 + tmp3 + 131072) >> 18;", "+\t\t\tdataUnit[c7] = (tmp10 - tmp3 + 131072) >> 18;", "+\t\t\tdataUnit[c1] = (tmp11 + tmp2 + 131072) >> 18;", "+\t\t\tdataUnit[c6] = (tmp11 - tmp2 + 131072) >> 18;", "+\t\t\tdataUnit[c2] = (tmp12 + tmp1 + 131072) >> 18;", "+\t\t\tdataUnit[c5] = (tmp12 - tmp1 + 131072) >> 18;", "+\t\t\tdataUnit[c3] = (tmp13 + tmp0 + 131072) >> 18;", "+\t\t\tdataUnit[c4] = (tmp13 - tmp0 + 131072) >> 18;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90b98cfffc8a142aea799a5cd750d4f7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_List.java", "commitBeforeChange": "69ca4def95e26b4f7985d8aa70882f0b37698d59", "commitAfterChange": "c7ffe68125d78bc1bb1c15b6e270edf7c3020f35", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "  public void test_setSelection$I()", "signatureAfterChange": "  public void test_setSelection$I()", "diff": ["-\tif (fCheckSWTPolicy) {", "-\t\tassertEquals(\"MULTI: setSelection(new int [0]) getFocusIndex()\", list.getFocusIndex(), -1);", "-\t}", "-\tassertEquals(\"MULTI: setSelection(new int [] {number}) getFocusIndex()\", list.getFocusIndex(), 2);", "-\tassertEquals(\"MULTI: setSelection(new int [] {1, 0}) getFocusIndex()\", list.getFocusIndex(), 1);", "-\tassertEquals(\"MULTI: setSelection(new int [] {-1, number}) getFocusIndex()\", list.getFocusIndex(), 1);", "-\tif (fCheckSWTPolicy) {", "-\t\tassertEquals(\"MULTI: setSelection(new int [] {-1, 0}) getFocusIndex()\", list.getFocusIndex(), number - 1);", "-\t}", "+// bug - wierd case - should probably fix:\tassertEquals(\"MULTI: setSelection(new int [] {-1, 0}) getFocusIndex()\", list.getFocusIndex(), 0);", "+\tlist.setSelection(new int [] {0, 1, 2, 3, 5});", "+\tassertEquals(\"MULTI: setSelection(new int [] {0, 1, 2, 3, 5})\", list.getSelectionIndices(), new int [] {0, 1, 2, 3, 5});", "+", "-\tassertEquals(\"MULTI: setSelection(indices) getFocusIndex()\", list.getFocusIndex(), indices[0]);", "-\tassertEquals(\"MULTI: setSelection(new int [] {number, number}) getFocusIndex()\", list.getFocusIndex(), 0);", "-\tassertEquals(\"MULTI: setSelection(new int [] {0, number, 1}) getFocusIndex()\", list.getFocusIndex(), 0);", "-\tassertEquals(\"MULTI: setSelection(new int [] {number - 1, 0, number - 2}) getFocusIndex()\", list.getFocusIndex(), number - 1);", "+\t", "-\tif (fCheckSWTPolicy) {", "-\t\tassertEquals(\"SINGLE: setSelection(new int [0]) getFocusIndex()\", list.getFocusIndex(), -1);", "-\t}", "-\tassertEquals(\"SINGLE: setSelection(new int [] {number}) getFocusIndex()\", list.getFocusIndex(), 2);", "-\tassertEquals(\"SINGLE: setSelection(new int [] {1, 0})\", list.getSelectionIndices(), new int[] {1});", "-\tassertEquals(\"SINGLE: setSelection(new int [] {1, 0}) getFocusIndex()\", list.getFocusIndex(), 1);", "+\tassertEquals(\"SINGLE: setSelection(new int [] {1, 0})\", list.getSelectionIndices(), new int[] {});", "+", "+\tlist.setSelection(new int [] {0, 1, 2, 3, 5});", "+\tassertEquals(\"SINGLE: setSelection(new int [] {0, 1, 2, 3, 5})\", list.getSelectionIndices(), new int [] {});", "-\tassertEquals(\"SINGLE: setSelection(new int [] {-1, number}) getFocusIndex()\", list.getFocusIndex(), 1);", "-\tassertEquals(\"SINGLE: setSelection(new int [] {number - 1, number})\", list.getSelectionIndices(), new int[] {number - 1});", "-\tassertEquals(\"SINGLE: setSelection(new int [] {number - 1, number}) getFocusIndex()\", list.getFocusIndex(), number - 1);", "+\tassertEquals(\"SINGLE: setSelection(new int [] {number - 1, number})\", list.getSelectionIndices(), new int[] {});", "-\tassertEquals(\"SINGLE: setSelection(new int [] {-1, 0})\", list.getSelectionIndices(), new int[] {0});", "-\tassertEquals(\"SINGLE: setSelection(new int [] {-1, 0}) getFocusIndex()\", list.getFocusIndex(), 0);", "+\tassertEquals(\"SINGLE: setSelection(new int [] {-1, 0})\", list.getSelectionIndices(), new int[] {});", "-\tassertEquals(\"SINGLE: setSelection(indices)\", list.getSelectionIndices(), new int[] {indices[0]});", "-\tassertEquals(\"SINGLE: setSelection(indices) getFocusIndex()\", list.getFocusIndex(), indices[0]);", "+\tassertEquals(\"SINGLE: setSelection(indices)\", list.getSelectionIndices(), new int[] {});", "-\tassertEquals(\"SINGLE: setSelection(new int [] {number, number}) getFocusIndex()\", list.getFocusIndex(), 0);", "-\tassertEquals(\"SINGLE: setSelection(new int [] {number - 1, number - 1})\", list.getSelectionIndices(), new int[] {number - 1});", "-\tassertEquals(\"SINGLE: setSelection(new int [] {number - 1, number - 1}) getFocusIndex()\", list.getFocusIndex(), number - 1);", "+\tassertEquals(\"SINGLE: setSelection(new int [] {number - 1, number - 1})\", list.getSelectionIndices(), new int[] {});", "-\tassertEquals(\"SINGLE: setSelection(new int [] {0, number, 1})\", list.getSelectionIndices(), new int[] {0});", "-\tassertEquals(\"SINGLE: setSelection(new int [] {0, number, 1}) getFocusIndex()\", list.getFocusIndex(), 0);", "+\tassertEquals(\"SINGLE: setSelection(new int [] {0, number, 1})\", list.getSelectionIndices(), new int[] {});", "-\tassertEquals(\"SINGLE: setSelection(new int [] {number - 1, 0, number - 2})\", list.getSelectionIndices(), new int[] {number - 1});", "-\tassertEquals(\"SINGLE: setSelection(new int [] {number - 1, 0, number - 2}) getFocusIndex()\", list.getFocusIndex(), number - 1);", "+\tassertEquals(\"SINGLE: setSelection(new int [] {number - 1, 0, number - 2})\", list.getSelectionIndices(), new int[] {});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac59bbf5de9a8807129266faa130fae5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/internal/image/JPEGFileFormat.java", "commitBeforeChange": "1e1ccbf61bda268533d4d88e38bb0e1f77b71b26", "commitAfterChange": "54678335fd7dde7fcf31de28ef4e8a4cec037256", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 27, "signatureBeforeChange": " void forwardDCT(int[] dataUnit)", "signatureAfterChange": " void forwardDCT(int[] dataUnit)", "diff": ["-\t\tint scaleFactor1 = ExtendTest[11];", "-\t\tint scaleFactor2 = ExtendTest[12];", "-\t\tint n = z1 + (tmp13 * FIX_0_765366865) + scaleFactor1;", "-\t\tdataUnit[rIndex + 2] = n / scaleFactor2;", "-\t\tif ((n < 0) && (n % scaleFactor2 != 0)) dataUnit[rIndex + 2]--;", "-\t\tn = z1 + (tmp12 * (0 - FIX_1_847759065)) + scaleFactor1;", "- \t\tdataUnit[rIndex + 6] = n / scaleFactor2;", "-\t\tif ((n < 0) && (n % scaleFactor2 != 0)) dataUnit[rIndex + 6]--;", "+\t\tint n = z1 + (tmp13 * FIX_0_765366865) + 1024;", "+\t\tdataUnit[rIndex + 2] = n >> 11;", "+\t\tif ((n < 0) && ((n & 0x07FF) != 0)) dataUnit[rIndex + 2]--;", "+\t\tn = z1 + (tmp12 * (0 - FIX_1_847759065)) + 1024;", "+ \t\tdataUnit[rIndex + 6] = n >> 11;", "+\t\tif ((n < 0) && ((n & 0x07FF) != 0)) dataUnit[rIndex + 6]--;", "-\t\ttmp4 = tmp4 * FIX_0_298631336;\t// sqrt(2) * (-c1+c3+c5-c7)", "-\t\ttmp5 = tmp5 * FIX_2_053119869;\t// sqrt(2) * ( c1+c3-c5+c7)", "-\t\ttmp6 = tmp6 * FIX_3_072711026;\t// sqrt(2) * ( c1+c3+c5-c7)", "-\t\ttmp7 = tmp7 * FIX_1_501321110;\t// sqrt(2) * ( c1+c3-c5-c7)", "-\t\tz1 = z1 * (0 - FIX_0_899976223);\t// sqrt(2) * (c7-c3)", "-\t\tz2 = z2 * (0 - FIX_2_562915447);\t// sqrt(2) * (-c1-c3)", "-\t\tz3 = z3 * (0 - FIX_1_961570560);\t// sqrt(2) * (-c3-c5)", "-\t\tz4 = z4 * (0 - FIX_0_390180644);\t// sqrt(2) * (c5-c3)", "+\t\ttmp4 *= FIX_0_298631336;\t// sqrt(2) * (-c1+c3+c5-c7)", "+\t\ttmp5 *= FIX_2_053119869;\t// sqrt(2) * ( c1+c3-c5+c7)", "+\t\ttmp6 *= FIX_3_072711026;\t// sqrt(2) * ( c1+c3+c5-c7)", "+\t\ttmp7 *= FIX_1_501321110;\t// sqrt(2) * ( c1+c3-c5-c7)", "+\t\tz1 *= 0 - FIX_0_899976223;\t// sqrt(2) * (c7-c3)", "+\t\tz2 *= 0 - FIX_2_562915447;\t// sqrt(2) * (-c1-c3)", "+\t\tz3 *= 0 - FIX_1_961570560;\t// sqrt(2) * (-c3-c5)", "+\t\tz4 *= 0 - FIX_0_390180644;\t// sqrt(2) * (c5-c3)", "-\t\tz3 = z3 + z5;", "-\t\tz4 = z4 + z5;", "+\t\tz3 += z5;", "+\t\tz4 += z5;", "-\t\tn = tmp4 + z1 + z3 + scaleFactor1;", "-\t\tdataUnit[rIndex + 7] = n / scaleFactor2;", "-\t\tif ((n < 0) && (n % scaleFactor2 != 0)) dataUnit[rIndex + 7]--;", "-\t\tn = tmp5 + z2 + z4 + scaleFactor1;", "-\t\tdataUnit[rIndex + 5] = n / scaleFactor2;", "-\t\tif ((n < 0) && (n % scaleFactor2 != 0)) dataUnit[rIndex + 5]--;", "-\t\tn = tmp6 + z2 + z3 + scaleFactor1;", "-\t\tdataUnit[rIndex + 3] = n / scaleFactor2;", "-\t\tif ((n < 0) && (n % scaleFactor2 != 0)) dataUnit[rIndex + 3]--;", "-\t\tn = tmp7 + z1 + z4 + scaleFactor1;", "-\t\tdataUnit[rIndex + 1] = n / scaleFactor2;", "-\t\tif ((n < 0) && (n % scaleFactor2 != 0)) dataUnit[rIndex + 1]--;", "+\t\tn = tmp4 + z1 + z3 + 1024;", "+\t\tdataUnit[rIndex + 7] = n >> 11;", "+\t\tif ((n < 0) && ((n & 0x07FF) != 0)) dataUnit[rIndex + 7]--;", "+\t\tn = tmp5 + z2 + z4 + 1024;", "+\t\tdataUnit[rIndex + 5] = n >> 11;", "+\t\tif ((n < 0) && ((n & 0x07FF) != 0)) dataUnit[rIndex + 5]--;", "+\t\tn = tmp6 + z2 + z3 + 1024;", "+\t\tdataUnit[rIndex + 3] = n >> 11;", "+\t\tif ((n < 0) && ((n & 0x07FF) != 0)) dataUnit[rIndex + 3]--;", "+\t\tn = tmp7 + z1 + z4 + 1024;", "+\t\tdataUnit[rIndex + 1] = n >> 11;", "+\t\tif ((n < 0) && ((n & 0x07FF) != 0)) dataUnit[rIndex + 1]--;", "-\t\tint scaleFactor1 = ExtendTest[5];", "-\t\tint scaleFactor2 = ExtendTest[6];", "-\t\tint n = tmp10 + tmp11 + scaleFactor1;", "-\t\tdataUnit[c0] = n / scaleFactor2;", "-\t\tif ((n < 0) && (n % scaleFactor2 != 0)) dataUnit[c0]--;", "-\t\tn = tmp10 - tmp11 + scaleFactor1;", "-\t\tdataUnit[c4] = n / scaleFactor2;", "-\t\tif ((n < 0) && (n % scaleFactor2 != 0)) dataUnit[c4]--;", "+\t\tint n = tmp10 + tmp11 + 16;", "+\t\tdataUnit[c0] = n >> 5;", "+\t\tif ((n < 0) && ((n & 0x1F) != 0)) dataUnit[c0]--;", "+\t\tn = tmp10 - tmp11 + 16;", "+\t\tdataUnit[c4] = n >> 5;", "+\t\tif ((n < 0) && ((n & 0x1F) != 0)) dataUnit[c4]--;", "-\t\tscaleFactor1 = ExtendTest[18];", "-\t\tscaleFactor2 = ExtendTest[19];", "-\t\tn = z1 + (tmp13 * FIX_0_765366865) + scaleFactor1;", "-\t\tdataUnit[c2] = n / scaleFactor2;", "-\t\tif ((n < 0) && (n % scaleFactor2 != 0)) dataUnit[c2]--;", "-\t\tn = z1 + (tmp12 * (0 - FIX_1_847759065)) + scaleFactor1;", "-\t\tdataUnit[c6] = n / scaleFactor2;", "-\t\tif ((n < 0) && (n % scaleFactor2 != 0)) dataUnit[c6]--;", "+\t\tn = z1 + (tmp13 * FIX_0_765366865) + 131072;", "+\t\tdataUnit[c2] = n >> 18;", "+\t\tif ((n < 0) && ((n & 0x3FFFF) != 0)) dataUnit[c2]--;", "+\t\tn = z1 + (tmp12 * (0 - FIX_1_847759065)) + 131072;", "+\t\tdataUnit[c6] = n >> 18;", "+\t\tif ((n < 0) && ((n & 0x3FFFF) != 0)) dataUnit[c6]--;", "-\t\ttmp4 = tmp4 * FIX_0_298631336;\t// sqrt(2) * (-c1+c3+c5-c7)", "-\t\ttmp5 = tmp5 * FIX_2_053119869;\t// sqrt(2) * ( c1+c3-c5+c7)", "-\t\ttmp6 = tmp6 * FIX_3_072711026;\t// sqrt(2) * ( c1+c3+c5-c7)", "-\t\ttmp7 = tmp7 * FIX_1_501321110;\t// sqrt(2) * ( c1+c3-c5-c7)", "-\t\tz1 = z1 * (0 - FIX_0_899976223);\t// sqrt(2) * (c7-c3)", "-\t\tz2 = z2 * (0 - FIX_2_562915447);\t// sqrt(2) * (-c1-c3)", "-\t\tz3 = z3 * (0 - FIX_1_961570560);\t// sqrt(2) * (-c3-c5)", "-\t\tz4 = z4 * (0 - FIX_0_390180644);\t// sqrt(2) * (c5-c3)", "+\t\ttmp4 *= FIX_0_298631336;\t// sqrt(2) * (-c1+c3+c5-c7)", "+\t\ttmp5 *= FIX_2_053119869;\t// sqrt(2) * ( c1+c3-c5+c7)", "+\t\ttmp6 *= FIX_3_072711026;\t// sqrt(2) * ( c1+c3+c5-c7)", "+\t\ttmp7 *= FIX_1_501321110;\t// sqrt(2) * ( c1+c3-c5-c7)", "+\t\tz1 *= 0 - FIX_0_899976223;\t// sqrt(2) * (c7-c3)", "+\t\tz2 *= 0 - FIX_2_562915447;\t// sqrt(2) * (-c1-c3)", "+\t\tz3 *= 0 - FIX_1_961570560;\t// sqrt(2) * (-c3-c5)", "+\t\tz4 *= 0 - FIX_0_390180644;\t// sqrt(2) * (c5-c3)", "-\t\tz3 = z3 + z5;", "-\t\tz4 = z4 + z5;", "+\t\tz3 += z5;", "+\t\tz4 += z5;", "-\t\tn = tmp4 + z1 + z3 + scaleFactor1;", "-\t\tdataUnit[c7] = n / scaleFactor2;", "-\t\tif ((n < 0) && (n % scaleFactor2 != 0)) dataUnit[c7]--;", "-\t\tn = tmp5 + z2 + z4 + scaleFactor1;", "-\t\tdataUnit[c5] = n / scaleFactor2;", "-\t\tif ((n < 0) && (n % scaleFactor2 != 0)) dataUnit[c5]--;", "-\t\tn = tmp6 + z2 + z3 + scaleFactor1;", "-\t\tdataUnit[c3] = n / scaleFactor2;", "-\t\tif ((n < 0) && (n % scaleFactor2 != 0)) dataUnit[c3]--;", "-\t\tn = tmp7 + z1 + z4 + scaleFactor1;", "-\t\tdataUnit[c1] = n / scaleFactor2;", "-\t\tif ((n < 0) && (n % scaleFactor2 != 0)) dataUnit[c1]--;", "+\t\tn = tmp4 + z1 + z3 + 131072;", "+\t\tdataUnit[c7] = n >> 18;", "+\t\tif ((n < 0) && ((n & 0x3FFFF) != 0)) dataUnit[c7]--;", "+\t\tn = tmp5 + z2 + z4 + 131072;", "+\t\tdataUnit[c5] = n >> 18;", "+\t\tif ((n < 0) && ((n & 0x3FFFF) != 0)) dataUnit[c5]--;", "+\t\tn = tmp6 + z2 + z3 + 131072;", "+\t\tdataUnit[c3] = n >> 18;", "+\t\tif ((n < 0) && ((n & 0x3FFFF) != 0)) dataUnit[c3]--;", "+\t\tn = tmp7 + z1 + z4 + 131072;", "+\t\tdataUnit[c1] = n >> 18;", "+\t\tif ((n < 0) && ((n & 0x3FFFF) != 0)) dataUnit[c1]--;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70bf4b2e3cb2700ac3565f4cf4fc1dbe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/CoolBarTab.java", "commitBeforeChange": "76b33e0e494479a9009365afe16385a154f070b7", "commitAfterChange": "1b68aede250962bc061fd677e97ff1e6ab22d704", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tvoid createExampleWidgets ()", "signatureAfterChange": " \tvoid createExampleWidgets ()", "diff": ["-\t\tPoint toolBarSize = toolBar.computeSize(SWT.DEFAULT, SWT.DEFAULT);", "-\t\tPoint pushSize = pushItem.computeSize(toolBarSize.x, toolBarSize.y);", "-\t\tint minWidth = vertical ? toolBarSize.x : item.getWidth();", "-\t\tint minHeight = vertical ? item.getBounds().height : toolBarSize.y;", "-\t\tpushItem.setMinimumSize(minWidth, minHeight);", "-\t\tpushItem.setPreferredSize(pushSize);", "-\t\tpushItem.setSize(pushSize);", "-\t\ttoolBarSize = toolBar.computeSize(SWT.DEFAULT, SWT.DEFAULT);", "-\t\tPoint dropSize = dropDownItem.computeSize(toolBarSize.x, toolBarSize.y);", "-\t\tminWidth = vertical ? toolBarSize.x : item.getWidth();", "-\t\tminHeight = vertical ? item.getBounds().height : toolBarSize.y;", "-\t\tdropDownItem.setMinimumSize(minWidth, minHeight);", "-\t\tdropDownItem.setPreferredSize(dropSize);", "-\t\tdropDownItem.setSize(dropSize);", "-\t\ttoolBarSize = toolBar.computeSize(SWT.DEFAULT, SWT.DEFAULT);", "-\t\tPoint radioSize = radioItem.computeSize(toolBarSize.x, toolBarSize.y);", "-\t\tminWidth = vertical ? toolBarSize.x : item.getWidth();", "-\t\tminHeight = vertical ? item.getBounds().height : toolBarSize.y;", "-\t\tradioItem.setMinimumSize(minWidth, minHeight);", "-\t\tradioItem.setPreferredSize(radioSize);", "-\t\tradioItem.setSize(radioSize);", "-\t\ttoolBarSize = toolBar.computeSize(SWT.DEFAULT, SWT.DEFAULT);", "-\t\tPoint checkSize = checkItem.computeSize(toolBarSize.x, toolBarSize.y);", "-\t\tminWidth = vertical ? toolBarSize.x : item.getWidth();", "-\t\tminHeight = vertical ? item.getBounds().height : toolBarSize.y;", "-\t\tcheckItem.setMinimumSize(minWidth, minHeight);", "-\t\tcheckItem.setPreferredSize(checkSize);", "-\t\tcheckItem.setSize(checkSize);", "-\t\tText text = new Text (coolBar, SWT.BORDER | SWT.SINGLE);", "-\t\ttextItem = new CoolItem (coolBar, itemStyle);", "-\t\ttextItem.setControl (text);", "-\t\ttextItem.addSelectionListener (new CoolItemSelectionListener());", "-\t\tPoint textSize = text.computeSize(SWT.DEFAULT, SWT.DEFAULT);", "-\t\ttextSize = textItem.computeSize(textSize.x, textSize.y);", "-\t\ttextItem.setMinimumSize(textSize);", "-\t\ttextItem.setPreferredSize(textSize);", "-\t\ttextItem.setSize(textSize);", "-\t\t\t\t", "-\t\t/* If we have saved state, restore it */", "-\t\tif (order != null) {", "-\t\t\tcoolBar.setItemLayout(order, wrapIndices, sizes);", "-\t\t\t/* ", "-\t\t\t * special case: because setItemLayout will restore the items", "-\t\t\t * to the sizes the user left them at, the preferred size may not", "-\t\t\t * be the same as the actual size. Thus we must explicitly set", "-\t\t\t * the preferred sizes.", "-\t\t\t */", "-\t\t\tpushItem.setPreferredSize(pushSize);", "-\t\t\tdropDownItem.setPreferredSize(dropSize);", "-\t\t\tradioItem.setPreferredSize(radioSize);", "-\t\t\tcheckItem.setPreferredSize(checkSize);", "+\t\tif (!vertical) {", "+\t\t\tText text = new Text (coolBar, SWT.BORDER | SWT.SINGLE);", "+\t\t\ttextItem = new CoolItem (coolBar, itemStyle);", "+\t\t\ttextItem.setControl (text);", "+\t\t\ttextItem.addSelectionListener (new CoolItemSelectionListener());", "+\t\t\tPoint textSize = text.computeSize(SWT.DEFAULT, SWT.DEFAULT);", "+\t\t\ttextSize = textItem.computeSize(textSize.x, textSize.y);", "+\t\t\ttextItem.setMinimumSize(textSize);", "+\t\t\ttextItem.setSize(textSize);", "-\t\telse {", "+", "+\t\t/* Set the sizes after adding all cool items */", "+\t\tCoolItem[] coolItems = coolBar.getItems();", "+\t\tfor (int i = 0; i < coolItems.length; i++) {", "+\t\t\tCoolItem coolItem = coolItems[i];", "+\t\t\tControl control = coolItem.getControl();", "+\t\t\tPoint size = control.computeSize(SWT.DEFAULT, SWT.DEFAULT);", "+\t\t\tPoint coolSize = coolItem.computeSize(size.x, size.y);", "+\t\t\tif (control instanceof ToolBar) {", "+\t\t\t\tToolBar bar = (ToolBar)control;", "+\t\t\t\tif (bar.getItemCount() > 0) {", "+\t\t\t\t\tif (vertical) {", "+\t\t\t\t\t\tsize.y = bar.getItem(0).getBounds().height;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tsize.x = bar.getItem(0).getWidth();", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tcoolItem.setMinimumSize(size);", "+\t\t\tcoolItem.setPreferredSize(coolSize);", "+\t\t\tcoolItem.setSize(coolSize);", "+\t\t}", "+\t\t", "+\t\t/* If we have saved state, restore it */", "+\t\tif (order != null && order.length == coolBar.getItemCount()) {", "+\t\t\tcoolBar.setItemLayout(order, wrapIndices, sizes);", "+\t\t} else {"]}], "num": 16309}