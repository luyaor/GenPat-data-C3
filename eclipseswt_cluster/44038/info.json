{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be2c5762bb475a6ac88e003ae9419790", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96d4ce1c13f8a4406382279294c86691", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/carbon/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "7406a6ef32d03054fd8215748217f7bbe21b8c6d", "commitAfterChange": "657a35a5cee6fbe37dbc793e3355871b42801dd3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public Browser(Composite parent, int style)", "signatureAfterChange": " public Browser(Composite parent, int style)", "diff": ["-\taddListener(SWT.Dispose, new Listener() {", "+\tListener listener = new Listener() {", "-\t\t\tMap.remove(new Integer(webView));", "-\t\t\tWebKit.objc_msgSend(notificationCenter, WebKit.S_removeObserver_name_object, Delegate, 0, webView);", "+\t\t\tswitch (e.type) {", "+\t\t\t\tcase SWT.Dispose: {", "+\t\t\t\t\tMap.remove(new Integer(webView));", "+\t\t\t\t\tWebKit.objc_msgSend(notificationCenter, WebKit.S_removeObserver_name_object, Delegate, 0, webView);", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t\tcase SWT.Hide: {", "+\t\t\t\t\t/*", "+\t\t\t\t\t* Bug on Safari. The web view cannot be obscured by other views above it.", "+\t\t\t\t\t* This problem is specified in the apple documentation for HiWebViewCreate.", "+\t\t\t\t\t* The workaround is to hook Hide and Show events on the browser's parents", "+\t\t\t\t\t* and set its size to 0 in Hide and to restore its size in Show.", "+\t\t\t\t\t*/", "+\t\t\t\t\tCGRect bounds = new CGRect();", "+\t\t\t\t\tOS.HIViewSetFrame(webViewHandle, bounds);", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t\tcase SWT.Show: {", "+\t\t\t\t\t/*", "+\t\t\t\t\t* Bug on Safari. The web view cannot be obscured by other views above it.", "+\t\t\t\t\t* This problem is specified in the apple documentation for HiWebViewCreate.", "+\t\t\t\t\t* The workaround is to hook Hide and Show events on the browser's parents", "+\t\t\t\t\t* and set its size to 0 in Hide and to restore its size in Show.", "+\t\t\t\t\t*/", "+\t\t\t\t\tCGRect bounds = new CGRect();", "+\t\t\t\t\tOS.HIViewGetFrame(handle, bounds);", "+\t\t\t\t\tOS.HIViewSetFrame(webViewHandle, bounds);", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t\tcase SWT.Resize: {", "+\t\t\t\t\t/*", "+\t\t\t\t\t* Bug on Safari. Resizing the height of a Shell containing a Browser at", "+\t\t\t\t\t* a fixed location causes the Browser to redraw at a wrong location.", "+\t\t\t\t\t* The web view is a HIView container that internally hosts", "+\t\t\t\t\t* a Cocoa NSView that uses a coordinates system with the origin at the", "+\t\t\t\t\t* bottom left corner of a window instead of the coordinates system used", "+\t\t\t\t\t* in Carbon that starts at the top left corner. The workaround is to", "+\t\t\t\t\t* reposition the web view every time the Shell of the Browser is resized.", "+\t\t\t\t\t* ", "+\t\t\t\t\t* Feature on Safari. The HIView ignores the call to update its position", "+\t\t\t\t\t* because it believes it has not changed. The workaround is to force", "+\t\t\t\t\t* it to reposition by changing its size and setting it back to the", "+\t\t\t\t\t* original value. ", "+\t\t\t\t\t*/", "+\t\t\t\t\t/* If the widget is hidden, leave its size to 0,0 as set in the SWT.Hide callback */", "+\t\t\t\t\tif (!isVisible()) break;", "+\t\t\t\t\tCGRect bounds = new CGRect();", "+\t\t\t\t\tOS.HIViewGetFrame(handle, bounds);", "+\t\t\t\t\tbounds.width++;", "+\t\t\t\t\tOS.HIViewSetFrame(webViewHandle, bounds);", "+\t\t\t\t\tbounds.width--;", "+\t\t\t\t\tOS.HIViewSetFrame(webViewHandle, bounds);", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "-\t});", "-", "-\taddListener(SWT.Resize, new Listener() {", "-\t\tpublic void handleEvent(Event e) {", "-\t\t\tCGRect bounds = new CGRect();", "-\t\t\tOS.HIViewGetFrame(handle, bounds);", "-\t\t\tOS.HIViewSetFrame(webViewHandle, bounds);", "-\t\t}", "-\t});", "+\t};", "+\taddListener(SWT.Dispose, listener);", "+\tShell shell = getShell();", "+\tshell.addListener(SWT.Resize, listener);", "+\tshell.addListener(SWT.Show, listener);", "+\tshell.addListener(SWT.Hide, listener);", "+\tControl c = this;", "+\tdo {", "+\t\tc.addListener(SWT.Show, listener);", "+\t\tc.addListener(SWT.Hide, listener);", "+\t\tc = c.getParent();", "+\t} while (c != shell);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "080a6c288a1db0e1abb0fa51275d8aa0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/carbon/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "35be8ad5696880189b8973d12da83e42dd6fc194", "commitAfterChange": "3d12b10107474c7c107aa5097ed6447519f113dc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public Browser(Composite parent, int style)", "signatureAfterChange": " public Browser(Composite parent, int style)", "diff": ["-\t\t\t\t\tshell.removeListener(SWT.Show, this);", "-\t\t\t\t\tshell.removeListener(SWT.Hide, this);", "-\t\t\t\t\tControl c = Browser.this;", "-\t\t\t\t\tdo {", "-\t\t\t\t\t\tc.removeListener(SWT.Show, this);", "-\t\t\t\t\t\tc.removeListener(SWT.Hide, this);", "-\t\t\t\t\t\tc = c.getParent();", "-\t\t\t\t\t} while (c != shell);", "-\t\t\t\tcase SWT.Hide: {", "-\t\t\t\t\t/*", "-\t\t\t\t\t* Bug on Safari. The web view cannot be obscured by other views above it.", "-\t\t\t\t\t* This problem is specified in the apple documentation for HiWebViewCreate.", "-\t\t\t\t\t* The workaround is to hook Hide and Show events on the browser's parents", "-\t\t\t\t\t* and set its size to 0 in Hide and to restore its size in Show.", "-\t\t\t\t\t*/", "-\t\t\t\t\tCGRect bounds = new CGRect();", "-\t\t\t\t\tOS.HIViewSetFrame(webViewHandle, bounds);", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t\tcase SWT.Show: {", "-\t\t\t\t\t/*", "-\t\t\t\t\t* Bug on Safari. The web view cannot be obscured by other views above it.", "-\t\t\t\t\t* This problem is specified in the apple documentation for HiWebViewCreate.", "-\t\t\t\t\t* The workaround is to hook Hide and Show events on the browser's parents", "-\t\t\t\t\t* and set its size to 0 in Hide and to restore its size in Show.", "-\t\t\t\t\t*/", "-\t\t\t\t\tCGRect bounds = new CGRect();", "-\t\t\t\t\tOS.HIViewGetFrame(handle, bounds);", "-\t\t\t\t\tOS.HIViewSetFrame(webViewHandle, bounds);", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t\t\t* ", "-\t\t\t\t\t* Feature on Safari. The HIView ignores the call to update its position", "-\t\t\t\t\t* because it believes it has not changed. The workaround is to force", "-\t\t\t\t\t* it to reposition by changing its size and setting it back to the", "-\t\t\t\t\t* original value.", "-\t\t\t\t\t* ", "-\t\t\t\t\t/* If the widget is hidden, leave its size to 0,0 as set in the SWT.Hide callback */", "-\t\t\t\t\tif (!isVisible()) break;", "-\t\t\t\t\t* Note.  Setting negative width or height causes Safari to always", "-\t\t\t\t\t* display incorrectly even if further resize events are correct.", "+\t\t\t\t\t* Bug in Safari.  For some reason, the web view will display incorrectly or", "+\t\t\t\t\t* blank depending on its contents, if its size is set to a value smaller than", "+\t\t\t\t\t* MIN_SIZE. It will not display properly even after the size is made larger.", "+\t\t\t\t\t* The fix is to avoid setting sizes smaller than MIN_SIZE. ", "-\t\t\t\t\tif (bounds.width < 0) bounds.width = 0;", "-\t\t\t\t\tif (bounds.height < 0) bounds.height = 0;", "+\t\t\t\t\tif (bounds.width <= MIN_SIZE) bounds.width = MIN_SIZE;", "+\t\t\t\t\tif (bounds.height <= MIN_SIZE) bounds.height = MIN_SIZE;", "-\tshell.addListener(SWT.Show, listener);", "-\tshell.addListener(SWT.Hide, listener);", "-\tControl c = this;", "-\tdo {", "-\t\tc.addListener(SWT.Show, listener);", "-\t\tc.addListener(SWT.Hide, listener);", "-\t\tc = c.getParent();", "-\t} while (c != shell);", "-\tint[] keyboardMask = new int[] {OS.kEventClassKeyboard, OS.kEventRawKeyDown};", "+\tint[] mask = new int[] {", "+\t\tOS.kEventClassKeyboard, OS.kEventRawKeyDown,", "+\t\tOS.kEventClassControl, OS.kEventControlDraw,", "+\t\tOS.kEventClassTextInput, OS.kEventTextInputUnicodeForKeyEvent,", "+\t};", "-\tOS.InstallEventHandler(controlTarget, callback3Address, keyboardMask.length / 2, keyboardMask, webViewHandle, null);", "-\t\t", "-\tint[] textInputMask = new int[] { OS.kEventClassTextInput, OS.kEventTextInputUnicodeForKeyEvent };", "-\tint windowTarget = OS.GetWindowEventTarget(OS.GetControlOwner(handle));", "-\tOS.InstallEventHandler (windowTarget, callback3Address, textInputMask.length / 2, textInputMask, webViewHandle, null);", "+\tOS.InstallEventHandler(controlTarget, callback3Address, mask.length / 2, mask, webViewHandle, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac97aa2619100506acd5430c2effea74", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/carbon/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "2bf3f6cfe7b7692ebc3a25b5da52dde7fa1df8ae", "commitAfterChange": "adbadb4438f3d96573b2e5b6ea70e01c4ef35386", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public Browser(Composite parent, int style)", "signatureAfterChange": " public Browser(Composite parent, int style)", "diff": ["+\t\t\t\t\tshell.removeListener(SWT.Show, this);", "+\t\t\t\t\tshell.removeListener(SWT.Hide, this);", "+\t\t\t\t\tControl c = Browser.this;", "+\t\t\t\t\tdo {", "+\t\t\t\t\t\tc.removeListener(SWT.Show, this);", "+\t\t\t\t\t\tc.removeListener(SWT.Hide, this);", "+\t\t\t\t\t\tc = c.getParent();", "+\t\t\t\t\t} while (c != shell);", "+\t\t\t\tcase SWT.Hide: {", "+\t\t\t\t\t/*", "+\t\t\t\t\t* Bug on Safari. The web view cannot be obscured by other views above it.", "+\t\t\t\t\t* This problem is specified in the apple documentation for HiWebViewCreate.", "+\t\t\t\t\t* The workaround is to hook Hide and Show events on the browser's parents", "+\t\t\t\t\t* and set its size to 0 in Hide and to restore its size in Show.", "+\t\t\t\t\t*/", "+\t\t\t\t\tCGRect bounds = new CGRect();", "+\t\t\t\t\tbounds.x = bounds.y = -MIN_SIZE;", "+\t\t\t\t\tbounds.width = bounds.height = MIN_SIZE;", "+\t\t\t\t\tOS.HIViewSetFrame(webViewHandle, bounds);", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t\tcase SWT.Show: {", "+\t\t\t\t\t/*", "+\t\t\t\t\t* Bug on Safari. The web view cannot be obscured by other views above it.", "+\t\t\t\t\t* This problem is specified in the apple documentation for HiWebViewCreate.", "+\t\t\t\t\t* The workaround is to hook Hide and Show events on the browser's parents", "+\t\t\t\t\t* and set its size to 0 in Hide and to restore its size in Show.", "+\t\t\t\t\t*/", "+\t\t\t\t\tCGRect bounds = new CGRect();", "+\t\t\t\t\tOS.HIViewGetFrame(handle, bounds);", "+\t\t\t\t\t/* ", "+\t\t\t\t\t* Bug in Safari.  For some reason, the web view will display incorrectly or", "+\t\t\t\t\t* blank depending on its contents, if its size is set to a value smaller than", "+\t\t\t\t\t* MIN_SIZE. It will not display properly even after the size is made larger.", "+\t\t\t\t\t* The fix is to avoid setting sizes smaller than MIN_SIZE. ", "+\t\t\t\t\t*/", "+\t\t\t\t\tif (bounds.width <= MIN_SIZE) bounds.width = MIN_SIZE;", "+\t\t\t\t\tif (bounds.height <= MIN_SIZE) bounds.height = MIN_SIZE;", "+\t\t\t\t\tOS.HIViewSetFrame(webViewHandle, bounds);", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t\t\t/* Do not update size when it is not visible */", "+\t\t\t\t\tif (!isVisible()) return;", "+\tshell.addListener(SWT.Show, listener);", "+\tshell.addListener(SWT.Hide, listener);", "+\tControl c = this;", "+\tdo {", "+\t\tc.addListener(SWT.Show, listener);", "+\t\tc.addListener(SWT.Hide, listener);", "+\t\tc = c.getParent();", "+\t} while (c != shell);"]}], "num": 44038}