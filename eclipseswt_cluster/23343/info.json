{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fb8b50cb59b6685d98410deb27043cf8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b32b5d3a5ded2ec27134e087e6a4dfbf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "e139d0ab76ea26e5296ceee7a81cdb4cd23f3694", "commitAfterChange": "bbce5172d2d0d10dab8588aa51fcb94c0df57391", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 74, "signatureBeforeChange": " public void showColumn (TreeColumn column)", "signatureAfterChange": " public void showColumn (TreeColumn column)", "diff": ["-\t\t\tint x = 0;", "-\t\t\tHDITEM hdItem = new HDITEM ();", "-\t\t\tfor (int i=0; i<index; i++) {", "-\t\t\t\thdItem.mask = OS.HDI_WIDTH;", "-\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEM, i, hdItem);", "-\t\t\t\tx += hdItem.cxy;", "-\t\t\t}", "+\t\t\tRECT itemRect = new RECT ();", "+\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, index, itemRect);", "-\t\t\tpt.x = x;", "+\t\t\tpt.x = itemRect.right;", "-\t\t\t\tinfo.nPos = Math.max (0, pt.x - Tree.INSET / 2);", "+\t\t\t\tinfo.nPos = Math.max (0, itemRect.left - Tree.INSET / 2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8bce167020ced1443e74e2b779af19b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "fca875eb72108e60782c178db548975d58286f47", "commitAfterChange": "df1e25507d722829f9fa73ba90d53bc5c9fda6d8", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  public void setText (String string)", "signatureAfterChange": "  public void setText (String string)", "diff": ["-\t* at the end of the text.  The fix is to replace all", "-\t* mnemonic characters with spaces.", "+\t* at the end of the text.  The fix is to remove", "+\t* mnemonic characters and replace doubled mnemonics", "+\t* with spaces.", "-\tchar [] chars = new char [string.length ()];", "-\tstring.getChars (0, string.length (), chars, 0);", "-\tint i = 0;", "-\twhile (i < chars.length) {", "-\t\tif (chars [i] == '&') chars [i] = ' ';", "-\t\ti++;", "-\t}", "-\tTCHAR buffer = new TCHAR (parent.getCodePage (), chars, true);", "+\tTCHAR buffer = new TCHAR (parent.getCodePage (), fixMnemonic (string), true);"]}], "num": 23343}