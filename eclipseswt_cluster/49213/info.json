{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e8c9db57ce6c999e9bf2be219f491f7c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5961f4fbccac42b060dad31293113cf2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "99e696b1437056772b1235cbd9b6dda7dc15b1cc", "commitAfterChange": "a62bb960d9385a3baf43672019058cd8cd8e6a97", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 64, "signatureBeforeChange": "  LRESULT WM_SIZE (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_SIZE (int wParam, int lParam)", "diff": ["-\tLRESULT result = null;", "-\tif ((state & RESIZE_DEFERRED) != 0) {", "-\t\tresult = super.WM_SIZE (wParam, lParam);", "-\t} else {", "-\t\t/* Begin deferred window positioning */", "-\t\tsetResizeChildren (false);", "-\t\t", "-\t\t/* Resize and Layout */", "-\t\tresult = super.WM_SIZE (wParam, lParam);", "-\t\t/*", "-\t\t* It is possible (but unlikely), that application", "-\t\t* code could have disposed the widget in the resize", "-\t\t* event.  If this happens, end the processing of the", "-\t\t* Windows message by returning the result of the", "-\t\t* WM_SIZE message.", "-\t\t*/", "-\t\tif (isDisposed ()) return result;", "-\t\tif (layout != null) {", "-\t\t\tmarkLayout (false, false);", "-\t\t\tupdateLayout (false, false);", "-\t\t}", "+", "+\t/* Begin deferred window positioning */", "+\tsetResizeChildren (false);", "-\t\t/* End deferred window positioning */", "-\t\tsetResizeChildren (true);", "+\t/* Resize and Layout */", "+\tLRESULT result = super.WM_SIZE (wParam, lParam);", "+\t/*", "+\t* It is possible (but unlikely), that application", "+\t* code could have disposed the widget in the resize", "+\t* event.  If this happens, end the processing of the", "+\t* Windows message by returning the result of the", "+\t* WM_SIZE message.", "+\t*/", "+\tif (isDisposed ()) return result;", "+\tif (layout != null) {", "+\t\tmarkLayout (false, false);", "+\t\tupdateLayout (false, false);", "+", "+\t/* End deferred window positioning */", "+\tsetResizeChildren (true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f28a55b4fd3477baa635bad56016d119", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/cocoa/org/eclipse/swt/program/Program.java", "commitBeforeChange": "cae07684ab17cd95ec19ff924e4a6578601dfc91", "commitAfterChange": "26bf6188ff5e14623a25ae4615f4bcd2f2d2fcc7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public boolean execute (String fileName)", "signatureAfterChange": " public boolean execute (String fileName)", "diff": ["-\t\tif (fileName.indexOf(':') == -1) {", "-\t\t\treturn workspace.openFile(fullPath, NSString.stringWith(name));", "-\t\t}", "-\t\tNSString unescapedStr = NSString.stringWith(\"%\"); //$NON-NLS-1$", "-\t\t\tunescapedStr = NSString.stringWith(\"%#\"); //$NON-NLS-1$", "+\t\t\tNSString unescapedStr = NSString.stringWith(\"%#\"); //$NON-NLS-1$", "+\t\t\tint /*long*/ ptr = OS.CFURLCreateStringByAddingPercentEscapes(0, fullPath.id, unescapedStr.id, 0, OS.kCFStringEncodingUTF8);", "+\t\t\tNSString escapedString = new NSString(ptr);", "+\t\t\tNSArray urls = NSArray.arrayWithObject(NSURL.URLWithString(escapedString));", "+\t\t\tOS.CFRelease(ptr);", "+\t\t\treturn workspace.openURLs(urls, NSString.stringWith(identifier), 0, null, 0);", "+\t\t} else {", "+\t\t\treturn workspace.openFile(fullPath, NSString.stringWith(name));", "-\t\tint /*long*/ ptr = OS.CFURLCreateStringByAddingPercentEscapes(0, fullPath.id, unescapedStr.id, 0, OS.kCFStringEncodingUTF8);", "-\t\tNSString escapedString = new NSString(ptr);", "-\t\tNSArray urls = NSArray.arrayWithObject(NSURL.URLWithString(escapedString));", "-\t\tOS.CFRelease(ptr);", "-\t\treturn workspace.openURLs(urls, NSString.stringWith(identifier), 0, null, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0571e37e9f32c42463ae826787e59ec2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "c2891aaeeeea8ff3ed3d8627dfe434a0c1ac6497", "commitAfterChange": "d8dc6af6f4961e720c9719717ae38f1a7ab18b39", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "  void setImages (Image image, Image [] images)", "signatureAfterChange": "  void setImages (Image image, Image [] images)", "diff": ["-\t\t}", "-\t} else {", "-\t\t/*", "-\t\t* Set the default icon for the shell to IDI_APPLICATION.", "-\t\t* This is not necessary for native applications but later", "-\t\t* versions of Java set the icon in javaw.exe instead of", "-\t\t* leaving the default.", "-\t\t* ", "-\t\t* NOTE:  The icon is not leaked.  It is shared within", "-\t\t* the process by all threads and is released when the", "-\t\t* process exits.", "-\t\t*/", "-\t\tif ((state & FOREIGN_HANDLE) == 0) {", "-\t\t\thSmallIcon = OS.LoadIcon (0, OS.IDI_APPLICATION);"]}], "num": 49213}