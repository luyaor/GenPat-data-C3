{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b279e8e1b9e9ecb7e104cf45e9a816dc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ad322555f65dac49abc260e508fdad1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "bf221f66369037ceea33728d5ed71d69549dd596", "commitAfterChange": "73be0ec89889e2c1322c1bfa09d83f81f689ab7f", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 77, "signatureBeforeChange": " void doLineUp(boolean select)", "signatureAfterChange": " void doLineUp(boolean select)", "diff": ["-\tint caretLine = getCaretLine();", "-\tint y = 0;", "-\tboolean firstLine;", "+\tint caretLine = getCaretLine(), y = 0;", "+\tboolean firstLine = false;", "-\t\tint lineIndex = layout.getLineIndex(offsetInLine);", "-\t\tint[] offsets = layout.getLineOffsets();", "-\t\tif (lineIndex != 0 && offsetInLine == offsets[lineIndex] && caretAlignment == PREVIOUS_OFFSET_TRAILING) {", "-\t\t\tlineIndex--;", "+\t\tint lineIndex = getVisualLineIndex(layout, offsetInLine);", "+\t\tif (lineIndex == 0) {", "+\t\t\tfirstLine = caretLine == 0;", "+\t\t\tif (!firstLine) {", "+\t\t\t\tcaretLine--;", "+\t\t\t\ty = renderer.getLineHeight(caretLine) - 1;", "+\t\t\t}", "+\t\t} else {", "+\t\t\ty = layout.getLineBounds(lineIndex - 1).y;", "-\t\tRectangle bounds = layout.getLineBounds(lineIndex);", "-\t\tfirstLine = caretLine == 0 && lineIndex == 0;", "-\t\ty += bounds.y;", "+\t\tcaretLine--;", "-\t\tcaretOffset = getOffsetAtPoint(columnX, y - 1 + getLinePixel(caretLine));", "+\t\tcaretOffset = getOffsetAtPoint(columnX, y, caretLine);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a3604d4850e8d818c7197ca4960b316", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ScrollBar.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 37, "signatureBeforeChange": " public void setVisible (boolean visible)", "signatureAfterChange": "  public void setVisible (boolean visible)", "diff": ["- */", "-public void setVisible (boolean visible) {", "-\tcheckWidget();", "-\t", "-//\tthis.visible= visible;", "-//\tif (OS.IsControlVisible(handle) != visible) {", "-//\t\tOS.HIViewSetVisible(handle, visible);\t\t", "-//\t\tparent.relayout123();", "-//\t\tsendEvent(visible ? SWT.Show : SWT.Hide);", "-//\t}", "-\t", "-    if (this.visible != visible) {", "-\t    this.visible= visible;", "-\t\tint topHandle = topHandle ();", "-\t\tif (OS.IsControlVisible(topHandle) != visible) {", "-\t\t\tOS.HIViewSetVisible(topHandle, visible);", "-\t\t\tparent.relayout123();", "-\t\t\tsendEvent (visible ? SWT.Show : SWT.Hide);", "-\t\t}", "-    }", "+public void setVisible (boolean visible) {", "+\tcheckWidget();", "+\tif (visible) {", "+\t\tif ((state & HIDDEN) == 0) return;", "+\t\tstate &= ~HIDDEN;", "+\t} else {", "+\t\tif ((state & HIDDEN) != 0) return;", "+\t\tstate |= HIDDEN;", "+\t}", "+\tOS.HIViewSetVisible (handle, visible);", "+\tsendEvent (visible ? SWT.Show : SWT.Hide);", "+\tparent.layoutControl();", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f91012949fcb48f4a066fc35b994692", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "bf221f66369037ceea33728d5ed71d69549dd596", "commitAfterChange": "73be0ec89889e2c1322c1bfa09d83f81f689ab7f", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 74, "signatureBeforeChange": " void doLineDown(boolean select)", "signatureAfterChange": " void doLineDown(boolean select)", "diff": ["-\t\tint lineIndex = layout.getLineIndex(offsetInLine);", "-\t\tint[] offsets = layout.getLineOffsets();", "+\t\tint lineIndex = getVisualLineIndex(layout, offsetInLine);", "-\t\tif (lineIndex != 0 && offsetInLine == offsets[lineIndex] && caretAlignment == PREVIOUS_OFFSET_TRAILING) {", "-\t\t\tlineIndex--;", "-\t\t}", "-\t\tRectangle bounds = layout.getLineBounds(lineIndex); ", "-\t\tlastLine = caretLine == lineCount - 1 && lineIndex == layoutLineCount - 1;", "-\t\ty += bounds.y + bounds.height;", "-\t\t\ty += layout.getSpacing();", "+\t\t\tlastLine = caretLine == lineCount - 1;", "+\t\t\tcaretLine++;", "+\t\t} else {", "+\t\t\ty = layout.getLineBounds(lineIndex + 1).y;", "-\t\tlastLine = caretLine == content.getLineCount() - 1;", "-\t\ty += renderer.getLineHeight(caretLine);", "+\t\tlastLine = caretLine == lineCount - 1;", "+\t\tcaretLine++;", "-\t\tif (select) {", "-\t\t\tcaretOffset = content.getCharCount();", "-\t\t}", "+\t\tif (select) caretOffset = content.getCharCount();", "-\t\tcaretOffset = getOffsetAtPoint(columnX, y + getLinePixel(caretLine));", "+\t\tcaretOffset = getOffsetAtPoint(columnX, y, caretLine);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdef6a8549fe0a1a93fb70ec93670d2b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 38, "signatureBeforeChange": " \t \tprivate int createCallback(String method, int argCount)", "signatureAfterChange": "  int getCaretBlinkTime ()", "diff": ["+", "+int getCaretBlinkTime () {", "+\treturn OS.GetCaretTime () * 1000 / 60;", "+}", "-\t", "-\tprivate int createCallback(String method, int argCount) {", "-\t\tCallback cb= new Callback(this, method, argCount);", "-\t\tif (fCallbacks == null)", "-\t\t\tfCallbacks= new ArrayList();", "-\t\tfCallbacks.add(cb);", "-\t\tint proc= cb.getAddress();", "-\t\tif (proc == 0)", "-\t\t\terror (SWT.ERROR_NO_MORE_CALLBACKS);", "-\t\treturn proc;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "777269d92142b28220270692d1349e2b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet210.java", "commitBeforeChange": "013e7e505e76a1b890120d3168f823bda20c0962", "commitAfterChange": "581e2be923c73fa26ac8208dc1b808c769e30134", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public static void main (String [] args)", "signatureAfterChange": " \t public static void main (String [] args)", "diff": ["+\t\tPoint selection;", "-\t\t\tPoint selection = text1.getSelection();", "-\t\t\ttry {", "-\t\t\t\tint offset = text1.getOffsetAtLocation(new Point(e.x, e.y));", "-\t\t\t\te.doit = offset > selection.x && offset < selection.y;", "-\t\t\t} catch (IllegalArgumentException ex) {", "-\t\t\t}", "+\t\t\tselection = text1.getSelection();", "+\t\t\te.doit = selection.x != selection.y;", "-\t\t\tPoint selection = text1.getSelection();", "-\t\t\tif (selection.x != selection.y) {", "-\t\t\t\te.data = text1.getText(selection.x, selection.y-1);", "-\t\t\t}", "+\t\t\te.data = text1.getText(selection.x, selection.y-1);", "-\t\t\t\ttext1.insert(\"\");", "+\t\t\t\ttext1.replaceTextRange(selection.x, selection.y - selection.x, \"\");", "+\t\t\tselection = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6550163cf180062217c0ad9de7c9832", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/internal/image/LEDataInputStream.java", "commitBeforeChange": "a707639d71c93489b2a7faf54777c7bb81f4c95a", "commitAfterChange": "59fc77a76138fe716e23f43f021eecd6f0e69faf", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic int read(byte b[], int off, int len) throws IOException", "signatureAfterChange": " \tpublic int read(byte b[], int off, int len) throws IOException", "diff": ["-\t\tint result;", "-\t\tint left = len;", "-\t\tresult = readData(b, off, len);", "-\t\twhile (true) {", "-\t\t\tif (result == -1) return -1;", "-\t\t\tposition += result;", "-\t\t\tif (result == left) return len;", "-\t\t\tleft -= result;", "-\t\t\toff += result;", "-\t\t\tresult = readData(b, off, left);", "+\t\tint read = 0, count;", "+\t\twhile (read != len && (count = readData(b, off, len - read)) != -1) {", "+\t\t\toff += count;", "+\t\t\tread += count;", "+\t\tposition += read;", "+\t\tif (read == 0 && read != len) return -1;", "+\t\treturn read;"]}], "num": 58175}