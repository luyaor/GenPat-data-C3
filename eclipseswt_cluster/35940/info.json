{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "86971becf75c6ac225f12f11acfca4f4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "339673ef7a3aa84493d8e0d2938b9897", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 9, "signatureBeforeChange": " Point drawHorizontalItemConnector(GC gc, Point position)", "signatureAfterChange": " TreeItem[] computeAvailableDescendents ()", "diff": ["-Point drawHorizontalItemConnector(GC gc, Point position) {", "-\tint itemConnectorEndPos = position.x + getItemConnectorWidth() - 1;\t// -1 because the position of the last pixel needs to be calculated", "-", "-\tgc.drawLine(position.x, position.y, itemConnectorEndPos, position.y);", "-\treturn new Point(itemConnectorEndPos + 1, position.y);\t\t// + 1 in order to resume drawing after line not on end of line", "+TreeItem[] computeAvailableDescendents () {", "+\tif (!expanded) return new TreeItem[] {this};", "+\tint childCount = items.length;", "+\tTreeItem[][] childResults = new TreeItem[childCount][];", "+\tint count = 1;\t/* self */", "+\tfor (int i = 0; i < childCount; i++) {", "+\t\tchildResults[i] = items[i].computeAvailableDescendents ();", "+\t\tcount += childResults[i].length;", "+\t}", "+\tTreeItem[] result = new TreeItem[count];", "+\tint index = 0;", "+\tresult[index++] = this;", "+\tfor (int i = 0; i < childCount; i++) {", "+\t\tSystem.arraycopy (childResults[i], 0, result, index, childResults[i].length);", "+\t\tindex += childResults[i].length;", "+\t}", "+\treturn result;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e64e47a5152448724bf8151c7a0e7445", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java", "commitBeforeChange": "564af48002efb7dde4608cffc2bddfed66929de1", "commitAfterChange": "25e834c280324b3e7770e2b3f82a7d7ca7a1f981", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 22, "signatureBeforeChange": "  void relayout ()", "signatureAfterChange": "  void layoutItems (int index, boolean setScrollbar)", "diff": ["+void layoutItems (int index, boolean setScrollbar) {", "+\tif (OS.GTK_VERSION >= OS.VERSION (2, 4, 0)) {", "+\t\tfor (int i = 0; i < itemCount; i++) {", "+\t\t\tExpandItem item = items [i];", "+\t\t\tif (item != null) item.resizeControl (yCurrentScroll);", "+\t\t}", "+\t} else {", "+\t\tif (index < itemCount) {", "+\t\t\tint y = spacing - yCurrentScroll;", "+\t\t\tfor (int i = 0; i < index; i++) {", "+\t\t\t\tExpandItem item = items [i];", "+\t\t\t\tif (item.expanded) y += item.height;", "+\t\t\t\ty += item.getHeaderHeight() + spacing;", "+\t\t\t}", "+\t\t\tfor (int i = index; i < itemCount; i++) {", "+\t\t\t\tExpandItem item = items [i];", "+\t\t\t\titem.setBounds (spacing, y, 0, 0, true, false);", "+\t\t\t\tif (item.expanded) y += item.height;", "+\t\t\t\ty += item.getHeaderHeight() + spacing;", "+\t\t\t}", "+\t\t}", "+\t\tif (setScrollbar) setScrollbar ();", "+\t}", "+}", "-void relayout () {", "-\tExpandItem [] items = getItems ();", "-\tint yScroll = 0;", "-\tif (scrolledHandle != 0) {", "-\t\tint /*long*/ adjustmentHandle = OS.gtk_scrolled_window_get_vadjustment (scrolledHandle);", "-\t\tGtkAdjustment adjustment = new GtkAdjustment ();", "-\t\tOS.memmove (adjustment, adjustmentHandle);", "-\t\tyScroll = (int)adjustment.value;", "-\t}", "-\tfor (int i=0; i<items.length; i++) {", "-\t\tExpandItem item = items [i];", "-\t\tif (item != null) item.resizeControl (yScroll);", "-\t}", "-}"]}], "num": 35940}