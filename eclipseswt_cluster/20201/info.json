{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d06a74b649fb359c10c7bf2960b0b092", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2be82025dc0893e35c8f663751938c1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "f03b4d1cc2cf148069815cbcd7a3bf4c290afd70", "commitAfterChange": "482d0feec714feb9c745e1ed6345e30b76110118", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "  String verifyText (String string, int start, int end, Event keyEvent, boolean empty)", "signatureAfterChange": "  String verifyText (String string, int start, int end, Event keyEvent)", "diff": ["-String verifyText (String string, int start, int end, Event keyEvent, boolean empty) {", "+String verifyText (String string, int start, int end, Event keyEvent) {", "+\tint index = 0;", "+\twhile (index < string.length ()) {", "+\t\tif (!Character.isDigit (string.charAt (index))) break;", "+\t\tindex++;", "+\t}", "+\tevent.doit = index == string.length ();", "-", "-\t/* Set the doit flag */", "-\tint length = OS.GetWindowTextLength (hwndText);", "-\tTCHAR buffer = new TCHAR (getCodePage (), length + 1);", "-\tOS.GetWindowText (hwndText, buffer, length + 1);", "-\tString oldText = buffer.toString (0, length);", "-\tString leftText = oldText.substring (0, start);", "-\tString rightText = oldText.substring (end, oldText.length ());", "-\tString newText = leftText + event.text + rightText;", "-\tif (!empty || newText.length () != 0) {", "-\t\ttry {", "-\t\t\tint value = Integer.parseInt (newText);", "-\t\t\tint [] max = new int [1], min = new int [1];", "-\t\t\tOS.SendMessage (hwndUpDown , OS.UDM_GETRANGE32, min, max);", "-\t\t\tevent.doit = min [0] <= value && value <= max [0];", "-\t\t} catch (NumberFormatException e) {", "-\t\t\tevent.doit = false;", "-\t\t}", "-\t}", "-\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "223361151968a5004855c6cab3fd1594", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Canvas.java", "commitBeforeChange": "4b7ac62e4c7abc2bdb8c97e1ee5fae6064a184d8", "commitAfterChange": "49a0d281d71c7b0b4f050c8585ea47184b029cc7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "  int kEventTextInputPosToOffset (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventTextInputPosToOffset (int nextHandler, int theEvent, int userData)", "diff": ["-\tif (!hooks (SWT.ImeComposition)) return OS.eventNotHandledErr;", "-\torg.eclipse.swt.internal.carbon.Point pt = new org.eclipse.swt.internal.carbon.Point ();", "-\tint sizeof = org.eclipse.swt.internal.carbon.Point.sizeof;", "-\tOS.GetEventParameter (theEvent, OS.kEventParamTextInputSendCurrentPoint, OS.typeQDPoint, null, sizeof, null, pt);", "-\torg.eclipse.swt.graphics.Point point = toControl (pt.h, pt.v);", "-\tEvent event = new Event ();", "-\tevent.detail = SWT.COMPOSITION_HITTEST;", "-\tevent.x = point.x;", "-\tevent.y = point.y;", "-\tsendEvent (SWT.ImeComposition, event);", "-\tOS.SetEventParameter (theEvent, OS.kEventParamTextInputReplyTextOffset, OS.typeLongInteger, 4, new int [] {event.index * 2});", "-\tOS.SetEventParameter (theEvent, OS.kEventParamTextInputReplyRegionClass, OS.typeLongInteger, 4, new int [] {event.hitTest});", "-\tOS.SetEventParameter (theEvent, OS.kEventParamTextInputReplyLeadingEdge, OS.typeBoolean, 4, new boolean [] {event.trailing == 0});", "-\treturn OS.noErr;", "+\tif (ime != null) {", "+\t\tint result = ime.kEventTextInputPosToOffset (nextHandler, theEvent, userData);", "+\t\tif (result != OS.eventNotHandledErr) return result;", "+\t}", "+\treturn super.kEventTextInputPosToOffset (nextHandler, theEvent, userData);"]}], "num": 20201}