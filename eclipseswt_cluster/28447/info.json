{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "569735aa1b873b200fbef04948f6ee4e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f60f9ae4cc0ed6177577723f36a732b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/TabItem.java", "commitBeforeChange": "270311675f6f4cbc05a4249ece03af1024375670", "commitAfterChange": "3321329afa864a6d5f9cfdadb85b6a9464a2fcf4", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void setControl (Control control)", "signatureAfterChange": " public void setControl (Control control)", "diff": ["-\t\treturn;", "+\t} else {", "+\t\tif (newControl != null) {", "+\t\t\tnewControl.setVisible (true);", "+\t\t}", "+\t\tif (oldControl != null) oldControl.setVisible (false);", "+\tNSView view;", "-//\t\tnsItem.setView(control.topView ());", "-\t\tnewControl.setBounds (parent.getClientArea ());", "-\t\tnewControl.setVisible (true);", "+\t\tview = newControl.topView();", "+\t} else {", "+\t\tview = (NSView)new NSView().alloc();", "+\t\tview.initWithFrame (new NSRect());", "+\t\tview.autorelease();", "-\tif (oldControl != null) oldControl.setVisible (false);", "+\tnsItem.setView (view);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83490764535b6324d987fe83a3290bf8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "8e70a2fd959c494ba8bd65fbe0be155b1733c20f", "commitAfterChange": "f735e96c5f274596870c6e7656dfa81cdc99b43a", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["-\tif (window == null) {", "+\tif (window == null && view == null) {", "-//\t\tint /*long*/ cls = OS.objc_lookUpClass (\"SWTWindow\");", "-//\t\tOS.object_setClass(window.id, cls);", "-\t\t//TODO - get the content of the foreign window instead of creating it", "-\t\tsuper.createHandle ();", "+\t\t", "+\t\t// 'view' is set to the NSView we should add the window's content view to as a subview.", "+\t\t// If that is null but 'window' is not we are in the foreign-handle case and shouldn't modify", "+\t\t// the window since we don't own it.", "+\t\tif (window != null) {", "+\t\t\tview = window.contentView();", "+\t\t\t", "+\t\t\tif (view == null) {", "+\t\t\t\tsuper.createHandle();", "+\t\t\t} else {", "+\t\t\t\tview.retain();", "+\t\t\t}", "+\t\t} else {", "+\t\t\tNSView parentView = view;\t\t\t", "+\t\t\tsuper.createHandle();", "+\t\t\tparentView.addSubview(view);", "+\t\t}", "+", "-\tif (parent != null) window.setCollectionBehavior(OS.NSWindowCollectionBehaviorMoveToActiveSpace);", "-\twindow.setAcceptsMouseMovedEvents(true);", "-\twindowDelegate = (SWTWindowDelegate)new SWTWindowDelegate().alloc().init();", "-\twindow.setDelegate(windowDelegate);", "-\tid id = window.fieldEditor (true, null);", "-\tif (id != null) {", "-\t\tOS.object_setClass (id.id, OS.objc_getClass (\"SWTEditorView\"));", "+\t", "+\tif (window != null) {", "+\t\tif (parent != null) window.setCollectionBehavior(OS.NSWindowCollectionBehaviorMoveToActiveSpace);", "+\t\twindow.setAcceptsMouseMovedEvents(true);", "+\t\twindowDelegate = (SWTWindowDelegate)new SWTWindowDelegate().alloc().init();", "+\t\twindow.setDelegate(windowDelegate);", "+\t\tid id = window.fieldEditor (true, null);", "+\t\tif (id != null) {", "+\t\t\tOS.object_setClass (id.id, OS.objc_getClass (\"SWTEditorView\"));", "+\t\t}"]}], "num": 28447}