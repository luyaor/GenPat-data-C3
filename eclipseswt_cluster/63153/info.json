{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "79f703d70fa0e8f54aa28acdc9b5e7e0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5edb0da903a383f42d96904cfdd90b56", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/cocoa/org/eclipse/swt/printing/Printer.java", "commitBeforeChange": "36e21f6aba5204fa5195a71658979a8b334d36bf", "commitAfterChange": "77b4feca7776d7a102f6b78d108d292827dbe92c", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public Rectangle getBounds()", "signatureAfterChange": " public Rectangle getBounds()", "diff": ["-\tNSSize size = printInfo.paperSize();", "-\tPoint dpi = getDPI (), screenDPI = getIndependentDPI();", "-\treturn new Rectangle (0, 0, (int)(size.width * dpi.x / screenDPI.x), (int)(size.height * dpi.y / screenDPI.y));", "+\tNSAutoreleasePool pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tNSSize size = printInfo.paperSize();", "+\t\tPoint dpi = getDPI (), screenDPI = getIndependentDPI();", "+\t\treturn new Rectangle (0, 0, (int)(size.width * dpi.x / screenDPI.x), (int)(size.height * dpi.y / screenDPI.y));", "+\t} finally {", "+\t\tpool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c67de61624f90b37b575ec2cfad91f5b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/cocoa/org/eclipse/swt/printing/Printer.java", "commitBeforeChange": "36e21f6aba5204fa5195a71658979a8b334d36bf", "commitAfterChange": "77b4feca7776d7a102f6b78d108d292827dbe92c", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void endJob()", "signatureAfterChange": " public void endJob()", "diff": ["-\tview.endDocument();", "-\toperation.deliverResult();", "-\toperation.destroyContext();", "-\toperation.cleanUpOperation();", "+\tNSAutoreleasePool pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tview.endDocument();", "+\t\toperation.deliverResult();", "+\t\toperation.destroyContext();", "+\t\toperation.cleanUpOperation();", "+\t} finally {", "+\t\tpool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "932493ed7bf8253e773778b62ad6ea33", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/cocoa/org/eclipse/swt/printing/Printer.java", "commitBeforeChange": "36e21f6aba5204fa5195a71658979a8b334d36bf", "commitAfterChange": "77b4feca7776d7a102f6b78d108d292827dbe92c", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public Rectangle getClientArea()", "signatureAfterChange": " public Rectangle getClientArea()", "diff": ["-\tNSRect rect = printInfo.imageablePageBounds();", "-\tPoint dpi = getDPI (), screenDPI = getIndependentDPI();", "-\treturn new Rectangle(0, 0, (int)(rect.width * dpi.x / screenDPI.x), (int)(rect.height * dpi.y / screenDPI.y));", "+\tNSAutoreleasePool pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tNSRect rect = printInfo.imageablePageBounds();", "+\t\tPoint dpi = getDPI (), screenDPI = getIndependentDPI();", "+\t\treturn new Rectangle(0, 0, (int)(rect.width * dpi.x / screenDPI.x), (int)(rect.height * dpi.y / screenDPI.y));", "+\t} finally {", "+\t\tpool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37ae29ad1396761b63ca1ed494de4469", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/cocoa/org/eclipse/swt/printing/Printer.java", "commitBeforeChange": "36e21f6aba5204fa5195a71658979a8b334d36bf", "commitAfterChange": "77b4feca7776d7a102f6b78d108d292827dbe92c", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void cancelJob()", "signatureAfterChange": " public void cancelJob()", "diff": ["-\toperation.destroyContext();", "-\toperation.cleanUpOperation();", "+\tNSAutoreleasePool pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\toperation.destroyContext();", "+\t\toperation.cleanUpOperation();", "+\t} finally {", "+\t\tpool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf22bc7614836940695728c59f9f60e3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/cocoa/org/eclipse/swt/printing/Printer.java", "commitBeforeChange": "36e21f6aba5204fa5195a71658979a8b334d36bf", "commitAfterChange": "77b4feca7776d7a102f6b78d108d292827dbe92c", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public Point getDPI()", "signatureAfterChange": " public Point getDPI()", "diff": ["-\t//TODO get output resolution", "-\treturn getIndependentDPI();", "+\tNSAutoreleasePool pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\t//TODO get output resolution", "+\t\treturn getIndependentDPI();", "+\t} finally {", "+\t\tpool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60ad7fb1b506308124f814dfe06cd82e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/cocoa/org/eclipse/swt/printing/Printer.java", "commitBeforeChange": "36e21f6aba5204fa5195a71658979a8b334d36bf", "commitAfterChange": "77b4feca7776d7a102f6b78d108d292827dbe92c", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public boolean startPage()", "signatureAfterChange": " public boolean startPage()", "diff": ["-\tNSSize paperSize = printInfo.paperSize();", "-\tNSRect rect = new NSRect();", "-\trect.width = paperSize.width;", "-\trect.height = paperSize.height;", "-\tview.beginPageInRect(rect, new NSPoint());", "-\tNSRect imageBounds = printInfo.imageablePageBounds();", "-\tNSBezierPath.bezierPathWithRect(imageBounds).setClip();", "-\tNSAffineTransform transform = NSAffineTransform.transform();", "-\ttransform.translateXBy(imageBounds.x, imageBounds.y);", "-\tPoint dpi = getDPI (), screenDPI = getIndependentDPI();", "-\ttransform.scaleXBy(screenDPI.x / (float)dpi.x, screenDPI.y / (float)dpi.y);", "-\ttransform.concat();", "-\treturn true;", "+\tNSAutoreleasePool pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tNSSize paperSize = printInfo.paperSize();", "+\t\tNSRect rect = new NSRect();", "+\t\trect.width = paperSize.width;", "+\t\trect.height = paperSize.height;", "+\t\tview.beginPageInRect(rect, new NSPoint());", "+\t\tNSRect imageBounds = printInfo.imageablePageBounds();", "+\t\tNSBezierPath.bezierPathWithRect(imageBounds).setClip();", "+\t\tNSAffineTransform transform = NSAffineTransform.transform();", "+\t\ttransform.translateXBy(imageBounds.x, imageBounds.y);", "+\t\tPoint dpi = getDPI (), screenDPI = getIndependentDPI();", "+\t\ttransform.scaleXBy(screenDPI.x / (float)dpi.x, screenDPI.y / (float)dpi.y);", "+\t\ttransform.concat();", "+\t\treturn true;", "+\t} finally {", "+\t\tpool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19507948644cee6e38f3ce0b24feebf8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/cocoa/org/eclipse/swt/printing/Printer.java", "commitBeforeChange": "36e21f6aba5204fa5195a71658979a8b334d36bf", "commitAfterChange": "77b4feca7776d7a102f6b78d108d292827dbe92c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public boolean startJob(String jobName)", "signatureAfterChange": " public boolean startJob(String jobName)", "diff": ["-\tif (jobName != null && jobName.length() != 0) {", "-\t\toperation.setJobTitle(NSString.stringWith(jobName));", "+\tNSAutoreleasePool pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tif (jobName != null && jobName.length() != 0) {", "+\t\t\toperation.setJobTitle(NSString.stringWith(jobName));", "+\t\t}", "+\t\tprintInfo.setUpPrintOperationDefaultValues();", "+\t\tNSPrintOperation.setCurrentOperation(operation);", "+\t\tNSGraphicsContext context = operation.createContext();", "+\t\tif (context != null) {", "+\t\t\tview.beginDocument();", "+\t\t\treturn true;", "+\t\t}", "+\t\treturn false;", "+\t} finally {", "+\t\tpool.release();", "-\tprintInfo.setUpPrintOperationDefaultValues();", "-\tNSPrintOperation.setCurrentOperation(operation);", "-\tNSGraphicsContext context = operation.createContext();", "-\tif (context != null) {", "-\t\tview.beginDocument();", "-\t\treturn true;", "-\t}", "-\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b09ce5856cf06ee09a3dbe8b1cc71cf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/cocoa/org/eclipse/swt/printing/Printer.java", "commitBeforeChange": "36e21f6aba5204fa5195a71658979a8b334d36bf", "commitAfterChange": "77b4feca7776d7a102f6b78d108d292827dbe92c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public Rectangle computeTrim(int x, int y, int width, int height)", "signatureAfterChange": " public Rectangle computeTrim(int x, int y, int width, int height)", "diff": ["-\tNSSize paperSize = printInfo.paperSize();", "-\tNSRect bounds = printInfo.imageablePageBounds();", "-\tPoint dpi = getDPI (), screenDPI = getIndependentDPI();", "-\tx -= (bounds.x * dpi.x / screenDPI.x);", "-\ty -= (bounds.y * dpi.y / screenDPI.y);", "-\twidth += (paperSize.width - bounds.width) * dpi.x / screenDPI.x;", "-\theight += (paperSize.height - bounds.height) * dpi.y / screenDPI.y;", "-\treturn new Rectangle(x, y, width, height);", "+\tNSAutoreleasePool pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tNSSize paperSize = printInfo.paperSize();", "+\t\tNSRect bounds = printInfo.imageablePageBounds();", "+\t\tPoint dpi = getDPI (), screenDPI = getIndependentDPI();", "+\t\tx -= (bounds.x * dpi.x / screenDPI.x);", "+\t\ty -= (bounds.y * dpi.y / screenDPI.y);", "+\t\twidth += (paperSize.width - bounds.width) * dpi.x / screenDPI.x;", "+\t\theight += (paperSize.height - bounds.height) * dpi.y / screenDPI.y;", "+\t\treturn new Rectangle(x, y, width, height);", "+\t} finally {", "+\t\tpool.release();", "+\t}"]}], "num": 63153}