{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "60ad0349c833c7ca421470aae0ef3d33", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3029e223c28e177486873ec3e412d9f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CBanner.java", "commitBeforeChange": "efd47a728b9f4340e4abd47d080add2d26dfab72", "commitAfterChange": "a1670f52d7c9641448babf7d1299c2e4f0a1bbfb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  private void onPaint(GC gc)", "signatureAfterChange": "  private void onPaint(GC gc)", "diff": ["-\tint[] shape = new int[curve.length+12];", "+\t// TODO Consider a way to not draw background", "+\t// under lines", "+\tgc.setBackground(getBackground());", "+\tgc.fillRectangle(0, 0, size.x, size.y);", "+\t", "+\tint[] line1 = new int[curve.length+8];", "+\tint[] line2 = new int[curve.length+8];", "-\tshape[index++] = 0;", "-\tshape[index++] = size.y - BORDER_STRIPE;", "-\tshape[index++] = x + 1;", "-\tshape[index++] = size.y - BORDER_STRIPE;", "+\tline1[index] = 0;", "+\tline2[index++] = 0;", "+\tline1[index] = size.y - BORDER_STRIPE;", "+\tline2[index++] = size.y - BORDER_STRIPE + 1;", "+\tline1[index] = x + 1;", "+\tline2[index++] = x + 1;", "+\tline1[index] = size.y - BORDER_STRIPE;", "+\tline2[index++] = size.y - BORDER_STRIPE + 1;", "-\t\tshape[index++]=x+curve[2*i];", "-\t\tshape[index++]=y+curve[2*i+1];", "+\t\tline1[index]=x+curve[2*i];", "+\t\tline2[index++]=x+curve[2*i];", "+\t\tline1[index]=y+curve[2*i+1];", "+\t\tline2[index++]=y+curve[2*i+1]+1;", "-\tshape[index++] = x + CURVE_WIDTH;", "-\tshape[index++] = 0;", "-\tshape[index++] = size.x;", "-\tshape[index++] = 0;", "-\tshape[index++] = size.x;", "-\tshape[index++] = size.y;", "-\tshape[index++] = 0;", "-\tshape[index++] = size.y;", "+\tline1[index] = x + CURVE_WIDTH;", "+\tline2[index++] = x + CURVE_WIDTH;", "+\tline1[index] = 0;", "+\tline2[index++] = 1;", "+\tline1[index] = size.x;", "+\tline2[index++] = size.x;", "+\tline1[index] = 0;", "+\tline2[index++] = 1;", "-\tgc.setBackground(getForeground());", "-\tgc.fillPolygon(shape);", "+\tColor border2 = new Color(getDisplay(), BORDER2);", "+\tgc.setForeground(border2);", "+\tgc.drawPolyline(line2);", "+\tborder2.dispose();", "-\tshape = new int[curve.length+8];", "-\tindex = 0;", "-\tshape[index++] = 0;", "-\tshape[index++] = size.y - BORDER_STRIPE;", "-\tshape[index++] = x + 1;", "-\tshape[index++] = size.y - BORDER_STRIPE;", "-\tfor (int i = 0; i < curve.length/2; i++) {", "-\t\tshape[index++]=x+curve[2*i];", "-\t\tshape[index++]=y+curve[2*i+1];", "-\t}", "-\tshape[index++] = x + CURVE_WIDTH;", "-\tshape[index++] = 0;", "-\tshape[index++] = 0;", "-\tshape[index++] = 0;", "-\t", "-\tgc.setBackground(getBackground());", "-\tgc.fillPolygon(shape);", "+\tColor border1 = new Color(getDisplay(), BORDER1);", "+\tgc.setForeground(border1);", "+\tgc.drawPolyline(line1);", "+\tborder1.dispose();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6e9004b90d2ca372b4f56e51b8737ed", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CBanner.java", "commitBeforeChange": "9393957a6958218e1367fa6758d85f1b44c24915", "commitAfterChange": "c0922b04510c980c4fdbfc07d5f670a2e0c2b69e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  void onPaint(GC gc)", "signatureAfterChange": "  void onPaint(GC gc)", "diff": ["-\tint[] line2 = new int[curve.length+6];", "-\tline1[index] = x + 1;", "-\tline2[index++] = x + 1;", "-\tline1[index] = size.y - BORDER_STRIPE;", "-\tline2[index++] = size.y - BORDER_STRIPE + 1;", "+\tline1[index++] = x +1;", "+\tline1[index++] = size.y - BORDER_STRIPE;", "-\t\tline1[index]=x+curve[2*i];", "-\t\tline2[index++]=x+curve[2*i];", "-\t\tline1[index]=y+curve[2*i+1];", "-\t\tline2[index++]=y+curve[2*i+1]+1;", "+\t\tline1[index++]=x+curve[2*i];", "+\t\tline1[index++]=y+curve[2*i+1];", "-\tline1[index] = x + CURVE_WIDTH;", "-\tline2[index++] = x + CURVE_WIDTH;", "-\tline1[index] = 0;", "-\tline2[index++] = 1;", "-\tline1[index] = size.x;", "-\tline2[index++] = size.x;", "-\tline1[index] = 0;", "-\tline2[index++] = 1;", "+\tline1[index++] = x + CURVE_WIDTH;", "+\tline1[index++] = 0;", "+\tline1[index++] = size.x;", "+\tline1[index++] = 0;", "+\t\t", "+\t// Anti- aliasing", "+\tint[] line2 = new int[line1.length];", "+\tindex = 0;", "+\tfor (int i = 0; i < line1.length/2; i++) { ", "+\t\tline2[index] = line1[index++]  - 1;", "+\t\tline2[index] = line1[index++];", "+\t}", "+\tint[] line3 = new int[line1.length];", "+\tindex = 0;", "+\tfor (int i = 0; i < line1.length/2; i++) {", "+\t\tline3[index] = line1[index++] + 1;", "+\t\tline3[index] = line1[index++];", "+\t}", "+\tRGB from = BORDER1;", "+\tRGB to = background.getRGB();", "+\tint red = from.red + 3*(to.red - from.red)/4;", "+\tint green = from.green + 3*(to.green - from.green)/4;", "+\tint blue = from.blue + 3*(to.blue - from.blue)/4;", "+\tColor color = new Color(getDisplay(), red, green, blue);", "+\tgc.setForeground(color);", "+\tgc.drawPolyline(line2);", "+\tgc.drawPolyline(line3);", "+\tcolor.dispose();", "-\tColor border2 = new Color(getDisplay(), BORDER2);", "-\tgc.setForeground(background);", "-\tgc.setBackground(border2);", "-\tgc.fillGradientRectangle(x1, size.y - BORDER_STRIPE + 1, curveStart-x1+1, 1, false);", "-\tgc.setForeground(border2);", "-\tgc.drawPolyline(line2);", "-\tborder2.dispose();", "-\t"]}], "num": 17000}