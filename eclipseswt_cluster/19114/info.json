{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aa87e8c4564141332b6dd58b0be2bee7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fcc899edd92525b1ba5ae1078faef31", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "5d484c6476bc4892c9825b0c805179fe47e751d4", "commitAfterChange": "2efd019c0428e46dfacf8317bc1b4ae9f271e166", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 62, "signatureBeforeChange": " void onPaint(Event event)", "signatureAfterChange": " void onPaint(Event event)", "diff": ["-\t\t\t\tif (borderLeft > 1 & showHighlight) x -= HIGHLIGHT_MARGIN;", "-\t\t\t\tif (borderRight > 1 & showHighlight) width += HIGHLIGHT_MARGIN;", "-\t\t\t\tif (borderLeft > 1 & showHighlight) x -= HIGHLIGHT_MARGIN;", "-\t\t\t\tif (borderRight > 1 & showHighlight) width += HIGHLIGHT_MARGIN;", "-\t\t\tif (borderLeft > 1 & showHighlight) x -= HIGHLIGHT_MARGIN;", "-\t\t\tif (borderRight > 1 & showHighlight) width += borderRight;", "-\t", "-\t// fill in client area", "-\tint width = size.x  - borderLeft - borderRight;", "-\tint height = size.y - borderTop - borderBottom - tabHeight - HIGHLIGHT_HEADER;", "-\tint x = xClient - marginWidth;", "-\tint y = yClient - marginHeight;", "-\tgc.setForeground(background);", "-\tgc.fillRectangle(x, y, width, height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33b9f1db8d78b6dc05dffa31a734c6a2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "9f800048edf52ed70457895b32ddfeee108ffda8", "commitAfterChange": "90ba9cb2ff16ee7ec96ab5262879eb4d4ffb3bc7", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 83, "signatureBeforeChange": "  void setItemHeight ()", "signatureAfterChange": " void setItemHeight (int itemHeight)", "diff": ["-void setItemHeight () {", "-\t* Bug in Windows.  When both a header and grid lines are", "-\t* displayed, the grid lines do not take into account the", "-\t* height of the header and draw in the wrong place.  The", "-\t* fix is to set the height of the table items to be the", "-\t* height of the header so that the lines draw in the right", "-\t* place.  The height of a table item is the maximum of the", "-\t* height of the font or the height of image list.", "-\t*", "-\t* NOTE: In version 5.80 of COMCTL32.DLL, the bug is fixed.", "-\tif (OS.COMCTL32_VERSION >= OS.VERSION (5, 80)) return;", "-\tint hOldList = OS.SendMessage (handle, OS.LVM_GETIMAGELIST, OS.LVSIL_SMALL, 0);", "-\tif (hOldList != 0) return;", "-\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "-\tRECT rect = new RECT ();", "-\tOS.GetWindowRect (hwndHeader, rect);", "-\tint height = rect.bottom - rect.top - 1;", "-\tint hImageList = OS.ImageList_Create (1, height, 0, 0, 0);", "-\tOS.SendMessage (handle, OS.LVM_SETIMAGELIST, OS.LVSIL_SMALL, hImageList);", "-\tfixCheckboxImageList ();", "-\tOS.SendMessage (handle, OS.LVM_SETIMAGELIST, OS.LVSIL_SMALL, 0);", "-\tif (headerImageList != null) {", "-\t\tint hHeaderImageList = headerImageList.getHandle ();", "-\t\tOS.SendMessage (hwndHeader, OS.HDM_SETIMAGELIST, 0, hHeaderImageList);", "-\tOS.ImageList_Destroy (hImageList);", "+ */", "+/*public*/ void setItemHeight (int itemHeight) {", "+\tcheckWidget ();", "+\tif (itemHeight < -1) error (SWT.ERROR_INVALID_ARGUMENT);", "+\tthis.itemHeight = itemHeight;", "+\tsetItemHeight (true);", "+\tsetScrollWidth (null, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9d7ad4e139c8d9353430447319e1c6b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "5d42583bedfb01f2af4aa781f40d3cc79804563c", "commitAfterChange": "f9711b34fd50570456baa5c59b174cc96df44367", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " int drawLine(int lineIndex, int paintX, int paintY, GC gc, Color widgetBackground, Color widgetForeground)", "signatureAfterChange": " int drawLine(int lineIndex, int paintX, int paintY, GC gc, Color widgetBackground, Color widgetForeground)", "diff": ["-\tint selectionStart = selection.x;", "-\tint selectionEnd = selection.y;", "+\tint selectionStart = selection.x - lineOffset;", "+\tint selectionEnd = selection.y - lineOffset;", "-\tboolean fullSelection = (styledText.getStyle() & SWT.FULL_SELECTION) != 0;", "-\tboolean isWPF = StyledText.IS_WPF;", "-\tgc.setBackground(lineBackground);", "+\tgc.setBackground(lineBackground);", "-\tif (!isWPF && selectionStart != selectionEnd) {", "-\t\tgc.setBackground(styledText.getSelectionBackground());", "-\t\tint selStart = selectionStart - lineOffset;", "-\t\tint selEnd = selectionEnd - lineOffset;", "-\t\tdrawLineSelection(paintX, paintY, gc, layout, lineLength, selStart, selEnd, client.width, fullSelection);", "-\t}", "-\tgc.setBackground(lineBackground);\t", "-\tif (selectionStart == selectionEnd || (selectionEnd <= lineOffset && selectionStart > lineOffset + lineLength - 1)) {", "+\tgc.setBackground(lineBackground);", "+\tif (selectionStart == selectionEnd || (selectionEnd <= 0 && selectionStart > lineLength - 1)) {", "-\t\tint start = Math.max(0, selectionStart - lineOffset);", "-\t\tint end = Math.min(lineLength, selectionEnd - lineOffset);", "+\t\tint start = Math.max(0, selectionStart);", "+\t\tint end = Math.min(lineLength, selectionEnd);", "-\t\tlayout.draw(gc, paintX, paintY, start, end - 1, selectionFg, selectionBg);", "+\t\tint flags;", "+\t\tif ((styledText.getStyle() & SWT.FULL_SELECTION) != 0) {", "+\t\t\tflags = SWT.FULL_SELECTION;", "+\t\t} else {", "+\t\t\tflags = SWT.DELIMITER_SELECTION;", "+\t\t}", "+\t\tif (selectionStart <= lineLength && lineLength < selectionEnd ) {", "+\t\t\tflags |= SWT.LAST_LINE_SELECTION;", "+\t\t}", "+\t\tlayout.draw(gc, paintX, paintY, start, end - 1, selectionFg, selectionBg, flags);", "-\tif (isWPF && selectionStart != selectionEnd) {", "-\t\tint alpha = gc.getAlpha();", "-\t\tgc.setAlpha(102);", "-\t\tgc.setBackground(styledText.getSelectionBackground());", "-\t\tint selStart = selectionStart - lineOffset;", "-\t\tint selEnd = selectionEnd - lineOffset;", "-\t\tdrawLineSelection(paintX, paintY, gc, layout, lineLength, selStart, selEnd, client.width, fullSelection);", "-\t\tgc.setAlpha(alpha);", "-\t}", "-", "-\t", "-}"]}], "num": 19114}