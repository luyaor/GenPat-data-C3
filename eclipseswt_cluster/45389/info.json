{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f4dc701b2a11d34716aa7d4bd24b9b93", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff01f52ade02f1357243f2a27bdcd4b3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "2b2d583e6998eaef3c63884d6291c60a303f512c", "commitAfterChange": "213e16cc0e52a67ba326603b8fd325a90d7411fd", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "  String toolTipText (NMTTDISPINFO hdr)", "signatureAfterChange": "  String toolTipText (NMTTDISPINFO hdr)", "diff": ["-\t\treturn null;", "+\t\tString string = null;", "+\t\tShell shell = getShell ();", "+\t\tToolTip toolTip = shell.findToolTip (hdr.idFrom);", "+\t\tif (toolTip != null) {", "+\t\t\tstring = toolTip.message;", "+\t\t\tif (string == null || string.length () == 0) string = \" \";", "+\t\t}", "+\t\treturn string;", "-\tif (control == null) return null;", "-\treturn control.toolTipText;", "+\tOS.SendMessage (hdr.hwndFrom, OS.TTM_SETTITLE, 0, 0);", "+\treturn control != null ? control.toolTipText : null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8aea82df24e6e41ccc10e1c2788976cf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/layout/FormLayout.java", "commitBeforeChange": "f84adb86ff2ce7b96080589609cee34a4414ec51", "commitAfterChange": "4cb4568068eb68c85f899a6e7e655252aaee71ed", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  Point layout (Composite composite, boolean move, int x, int y, int width, int height, boolean flushCache)", "signatureAfterChange": "  Point layout (Composite composite, boolean move, int x, int y, int width, int height, boolean flushCache)", "diff": ["+\t\t\tdata.needed = false;", "-\t\t\t\tif (data.cacheWidth == -1 && (child.getStyle () & SWT.WRAP) != 0) {", "-\t\t\t\t\t//width favoured over height (calling getLeftAttachment() does this)", "-\t\t\t\t\t//this means that when y1 and y2 are computed, the cached height values", "-\t\t\t\t\t//reflect the desired height wrt \"x2 - x1\" rather than \"width\".  This", "-\t\t\t\t\t//means that the cache is wrong wrt \"width\" and should be cleared", "-\t\t\t\t\t//bug (x2 - x1) needs to get rid of trim", "-\t\t\t\t\t//int border = child.getBorderWidth ();", "-\t\t\t\t\t//data.computeCache (child, x2 - x1 - border * 2, data.height, flushCache);", "+\t\t\t\tif (!data.needed && (child.getStyle () & SWT.WRAP) != 0) {", "+\t\t\t\t\tint trim = 0;", "+\t\t\t\t\tif (child instanceof Scrollable) {", "+\t\t\t\t\t\tRectangle rect = ((Scrollable) child).computeTrim (0, 0, 0, 0);", "+\t\t\t\t\t\ttrim = rect.width;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\ttrim = child.getBorderWidth () * 2;", "+\t\t\t\t\t}", "+\t\t\t\t\tdata.computeCache (child, x2 - x1 - trim, data.height, flushCache);"]}], "num": 45389}