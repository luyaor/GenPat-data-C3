{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7e711bafa70b3e2bd891f9e5b8067b52", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14971a653ca72134efb3f1466c810d2e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/clipboard/ClipboardExample.java", "commitBeforeChange": "a7026b1b456498a95fd3935ab7b613f4c353caa4", "commitAfterChange": "b066a890fd4acd9279278bb7b913786a38b3a723", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void open(Display display)", "signatureAfterChange": " public void open(Display display)", "diff": ["-\tdata = new GridData(GridData.FILL_BOTH);", "+\tdata = new GridData(GridData.FILL_HORIZONTAL);", "-\tdata = new GridData(GridData.FILL_BOTH);", "+\tdata = new GridData(GridData.FILL_HORIZONTAL);", "-\tstatus = new Label(parent, SWT.BORDER);", "+\tstatus = new Label(parent, SWT.NONE);", "-\tdata.heightHint = 60;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff26e50f60dcbe716ef1439417ec2223", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "a1d6e8a9f1641432384d0052540811bff2f7cabd", "commitAfterChange": "089765c48162c4c25a5c8d99d0ac366ef636fc6a", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 130, "signatureBeforeChange": "  void initFactories (nsIServiceManager serviceManager, nsIComponentManager componentManager, boolean isXULRunner)", "signatureAfterChange": "  void initFactories (nsIServiceManager serviceManager, nsIComponentManager componentManager, boolean isXULRunner)", "diff": ["-\tif (IsPre_17) {", "+\tif (IsPre_24) {", "-\trc = categoryManager.AddCategoryEntry (category, entry, aContractID, 0, 1, result);", "+//\trc = categoryManager.AddCategoryEntry (category, entry, aContractID, 0, 1, result);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88d7bf723e36d36dd0c83ed5a1df751f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "6fe853b29d6dcedf69f8209e4b19fa3cf0a85a8b", "commitAfterChange": "cc7a79cec8920b1b6175a6c2124e7f63a3823262", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 14, "signatureBeforeChange": "  void createItem (TreeItem item, int hParent, int hInsertAfter)", "signatureAfterChange": "  void createItem (TreeItem item, int hParent, int hInsertAfter)", "diff": ["+", "-\titem.foreground = item.background = item.font = -1;", "-\ttvInsert.iImage = OS.I_IMAGENONE;", "-\ttvInsert.iSelectedImage = tvInsert.iImage;", "-\ttvInsert.mask = OS.TVIF_HANDLE | OS.TVIF_PARAM | OS.TVIF_IMAGE | OS.TVIF_SELECTEDIMAGE;", "-\t", "-\t/* Set the initial unchecked state */", "+\ttvInsert.pszText = OS.LPSTR_TEXTCALLBACK;", "+\ttvInsert.iImage = tvInsert.iSelectedImage = OS.I_IMAGECALLBACK;", "+\ttvInsert.mask = OS.TVIF_TEXT | OS.TVIF_IMAGE | OS.TVIF_SELECTEDIMAGE | OS.TVIF_HANDLE | OS.TVIF_PARAM;", "-", "-\t/* Insert the item */", "-\t", "+", "+\tupdateScrollBar ();", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e0bc508b4aca3b7acebdaba65d91e0a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Table.java", "commitBeforeChange": "56f3c7daceb722a0c999feeb5d2239e564234dd9", "commitAfterChange": "9c093047f33285b868bf92dfd7c756793835062d", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  public void test_getItems()", "signatureAfterChange": "  public void test_getItems()", "diff": ["-\t\t\tTableItem ti = new TableItem(table, 0);", "+\t\t\tnew TableItem(table, 0);", "-\t\t\tTableItem ti = new TableItem(table, 0);", "+\t\t\tnew TableItem(table, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cba224edb9e6464d6b177e9c1c99554", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "0ec16a191637037ae868aa23c8c55cf2d8a64f40", "commitAfterChange": "d78a1f304fc5886faf978adcf843b66da4334afd", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "  void createItem (TableColumn column, int index)", "signatureAfterChange": "  void createItem (TableColumn column, int index)", "diff": ["+\tif (columnCount == 0) {", "+\t\tcolumn.handle = OS.gtk_tree_view_get_column (handle, 0);", "+\t\tcolumn.modelIndex = 3;", "+\t} else {", "+\t\tcreateColumn (column, index);", "+\t}", "-\t}", "-\tif (fakeColumn != 0) {", "-\t\tcolumn.handle = fakeColumn;", "-\t\tfakeColumn = 0;", "-\t} else {", "-\t\tcolumn.handle = _createColumnHandle(index, column);", "-\t\tOS.gtk_tree_view_insert_column(handle, column.handle, index);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c58563490115a203fcb804404d35527", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/common/org/eclipse/swt/browser/WebBrowser.java", "commitBeforeChange": "754da3e12d3ae9fd2c85bf06f23ede42c6f49859", "commitAfterChange": "828bb598ffea029296304120bac0896dc4445d73", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 12, "signatureBeforeChange": "  public void addFunction (BrowserFunction function)", "signatureAfterChange": "  public void createFunction (BrowserFunction function)", "diff": ["-", "-public void addFunction (BrowserFunction function) {", "-\t/* ", "-\t * If an existing function with the same name is found then", "-\t * remove it so that it is not recreated on subsequent pages", "-\t * (the new function overwrites the old one).", "-\t */", "-\tEnumeration keys = functions.keys ();", "-\twhile (keys.hasMoreElements ()) {", "-\t\tObject key = keys.nextElement ();", "-\t\tBrowserFunction current = (BrowserFunction)functions.get (key);", "-\t\tif (current.name.equals (function.name)) {", "-\t\t\tfunctions.remove (key);", "-\t\t\tbreak;", "-\t\t}", "-\t}", "-", "-\tfunction.index = getNextFunctionIndex ();", "-\tfunctions.put (new Integer (function.index), function);", "-", "-\tStringBuffer buffer = new StringBuffer (\"window.\"); //$NON-NLS-1$", "-\tbuffer.append (function.name);", "-\tbuffer.append (\" = function \"); //$NON-NLS-1$", "-\tbuffer.append (function.name);", "-\tbuffer.append (\"() {var result = window.external.callJava(\"); //$NON-NLS-1$", "-\tbuffer.append (function.index);", "-\tbuffer.append (\",Array.prototype.slice.call(arguments)); if (typeof result == 'string' && result.indexOf('\"); //$NON-NLS-1$", "-\tbuffer.append (ERROR_ID);", "-\tbuffer.append (\"') == 0) {var error = new Error(result.substring(\"); //$NON-NLS-1$", "-\tbuffer.append (ERROR_ID.length () + 1);", "-\tbuffer.append (\")); throw error;} return result;}\"); //$NON-NLS-1$", "-\tfunction.functionString = buffer.toString ();", "-\texecute (function.functionString);\t", "+public void createFunction (BrowserFunction function) {", "+\t/* ", "+\t * If an existing function with the same name is found then", "+\t * remove it so that it is not recreated on subsequent pages", "+\t * (the new function overwrites the old one).", "+\t */", "+\tEnumeration keys = functions.keys ();", "+\twhile (keys.hasMoreElements ()) {", "+\t\tObject key = keys.nextElement ();", "+\t\tBrowserFunction current = (BrowserFunction)functions.get (key);", "+\t\tif (current.name.equals (function.name)) {", "+\t\t\tfunctions.remove (key);", "+\t\t\tbreak;", "+\t\t}", "+\t}", "+", "+\tfunction.index = getNextFunctionIndex ();", "+\tregisterFunction (function);", "+", "+\tStringBuffer buffer = new StringBuffer (\"window.\"); //$NON-NLS-1$", "+\tbuffer.append (function.name);", "+\tbuffer.append (\" = function \"); //$NON-NLS-1$", "+\tbuffer.append (function.name);", "+\tbuffer.append (\"() {var result = window.external.callJava(\"); //$NON-NLS-1$", "+\tbuffer.append (function.index);", "+\tbuffer.append (\",Array.prototype.slice.call(arguments)); if (typeof result == 'string' && result.indexOf('\"); //$NON-NLS-1$", "+\tbuffer.append (ERROR_ID);", "+\tbuffer.append (\"') == 0) {var error = new Error(result.substring(\"); //$NON-NLS-1$", "+\tbuffer.append (ERROR_ID.length () + 1);", "+\tbuffer.append (\")); throw error;} return result;}\"); //$NON-NLS-1$", "+\tfunction.functionString = buffer.toString ();", "+\tif (!execute (function.functionString)) {", "+\t\tderegisterFunction (function);\t", "+\t}", "+}"]}], "num": 41501}