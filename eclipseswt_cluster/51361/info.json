{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "81ac86995acdb294d409863ab5fd4bc7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d162996069b2877e3fc9728e50333ca", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "4def951fc85e643080de398e85c25cb30ec79f91", "commitAfterChange": "ea10febb5ae3b0d1b19a13c89b6c7b27ab367f3a", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 43, "signatureBeforeChange": "  int processKeyDown (int callData, int arg1, int int2)", "signatureAfterChange": "  int gtk_key_press_event (int widget, int eventPtr)", "diff": ["+", "+int gtk_key_press_event (int widget, int eventPtr) {", "+\tint result = super.gtk_key_press_event (widget, eventPtr);", "+\tif (result != 0) return result;", "+", "+\t/*", "+\t* Feature in GTK.  When an item is default selected using", "+\t* the return key, GTK does not issue notification. The fix is", "+\t* to issue this notification when the return key is pressed.", "+\t*/", "+\tGdkEventKey keyEvent = new GdkEventKey ();", "+\tOS.memmove (keyEvent, eventPtr, GdkEventKey.sizeof);", "+\tint key = keyEvent.keyval;", "+\tswitch (key) {", "+\t\tcase OS.GDK_Return:", "+\t\tcase OS.GDK_KP_Enter: {", "+\t\t\tEvent event = new Event ();", "+\t\t\tevent.item = getFocusItem (); ", "+\t\t\tpostEvent (SWT.DefaultSelection, event);", "+\t\t\tbreak;", "+\t\t}", "+\t}", "+\treturn result;", "+}", "-", "-int processKeyDown (int callData, int arg1, int int2) {", "-\tint result = super.processKeyDown (callData, arg1, int2);", "-\tif (result != 0) return result;", "-", "-\t/*", "-\t* Feature in GTK.  When an item is default selected using", "-\t* the return key, GTK does not issue notification. The fix is", "-\t* to issue this notification when the return key is pressed.", "-\t*/", "-\tGdkEventKey keyEvent = new GdkEventKey ();", "-\tOS.memmove (keyEvent, callData, GdkEventKey.sizeof);", "-\tint key = keyEvent.keyval;", "-\tswitch (key) {", "-\t\tcase OS.GDK_Return:", "-\t\tcase OS.GDK_KP_Enter: {", "-\t\t\tEvent event = new Event ();", "-\t\t\tevent.item = getFocusItem (); ", "-\t\t\tpostEvent (SWT.DefaultSelection, event);", "-\t\t\tbreak;", "-\t\t}", "-\t}", "-\treturn result;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e03ce0994fa84bc9b554d78421bf26f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "4def951fc85e643080de398e85c25cb30ec79f91", "commitAfterChange": "ea10febb5ae3b0d1b19a13c89b6c7b27ab367f3a", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 26, "signatureBeforeChange": "  int processKeyDown (int callData, int arg1, int int2)", "signatureAfterChange": "  int gtk_key_press_event (int widget, int eventPtr)", "diff": ["-", "-int processKeyDown (int callData, int arg1, int int2) {", "-\tint result = super.processKeyDown (callData, arg1, int2);", "+int gtk_key_press_event (int widget, int eventPtr) {", "+\tint result = super.gtk_key_press_event (widget, eventPtr);", "-\tOS.memmove (keyEvent, callData, GdkEventKey.sizeof);", "+\tOS.memmove (keyEvent, eventPtr, GdkEventKey.sizeof);"]}], "num": 51361}