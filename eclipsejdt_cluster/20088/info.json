{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ad1f3ccac0fb5d233b189b4d96f2aef0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a2ffda77578951b7e712983a580cb0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "c458ad2d505b6f4a7e2ec3bba3954504b01472bd", "commitAfterChange": "f802d6fc991463cb62d45c1ee5e011116f9ae063", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic String toString()", "signatureAfterChange": " \tpublic String toString()", "diff": ["-\t\tIPath[] patterns = getExclusionPatterns();", "+\t\tIPath[] patterns = getInclusionPatterns();", "-\t\tif ((length = patterns.length) > 0) {", "+\t\tif ((length = patterns == null ? 0 : patterns.length) > 0) {", "+\t\t\tbuffer.append(\"[including:\"); //$NON-NLS-1$", "+\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\tbuffer.append(patterns[i]);", "+\t\t\t\tif (i != length-1) {", "+\t\t\t\t\tbuffer.append('|');", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tbuffer.append(']');", "+\t\t}", "+\t\tpatterns = getExclusionPatterns();", "+\t\tif ((length = patterns == null ? 0 : patterns.length) > 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "949db550818f015cbfe1f1569d5fa8de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "0adf7a4e0894d18d3979e493aafe00dfa5c14f8d", "commitAfterChange": "240e0c6a2e7086d1fe50f8b36056d83e0056d1f3", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public final char[] signature()", "signatureAfterChange": " public final char[] signature()", "diff": ["+\t", "+\tTypeBinding[] targetParameters = this.parameters;", "+\t\t", "-\t\tfor (int i = 0; i < count; i++)", "+\t\tfor (int i = 0; i < count; i++) {", "+\t\t}", "+\t\t", "+\t\tif (this instanceof SyntheticAccessMethodBinding) {", "+\t\t\ttargetParameters = ((SyntheticAccessMethodBinding)this).targetMethod.parameters;", "+\t\t}", "-\tif (parameters != NoParameters)", "-\t\tfor (int i = 0, length = parameters.length; i < length; i++)", "-\t\t\tbuffer.append(parameters[i].signature());", "+", "+\tif (targetParameters != NoParameters) {", "+\t\tfor (int i = 0; i < targetParameters.length; i++) {", "+\t\t\tbuffer.append(targetParameters[i].signature());", "+\t\t}", "+\t}", "-\t\tfor (int i = 0; i < count; i++)", "+\t\tfor (int i = 0; i < count; i++) {", "+\t\t}", "+\t\t// move the extra padding arguments of the synthetic constructor invocation to the end\t\t", "+\t\tfor (int i = targetParameters.length, extraLength = parameters.length; i < extraLength; i++) {", "+\t\t\tbuffer.append(parameters[i].signature());", "+\t\t}"]}], "num": 20088}