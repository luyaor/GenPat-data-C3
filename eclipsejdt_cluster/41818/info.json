{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c704563295ac8c8f8f9291251c89feb3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e474685c3400b3db9b197a0baf73cc2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "fb501286631b4d7c58deb961ca1bd6fd5d1303d4", "commitAfterChange": "ab867ad16c11ffaeeab6b25d79b9af55a3b631d1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " void checkConcreteInheritedMethod(MethodBinding concreteMethod, MethodBinding[] abstractMethods)", "signatureAfterChange": " void checkConcreteInheritedMethod(MethodBinding concreteMethod, MethodBinding[] abstractMethods)", "diff": ["-", "-\t\tif (concreteMethod.declaringClass.erasure().findSuperTypeWithSameErasure(originalInherited.declaringClass) == null)", "+\t\t// check whether bridge method is already defined above for interface methods", "+\t\tif (originalInherited.declaringClass.isInterface()", "+\t\t\t\t&& this.type.superclass.erasure().findSuperTypeWithSameErasure(originalInherited.declaringClass) == null) {", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfad47331ee4d6d557594af2ecb3e91a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " void checkConcreteInheritedMethod(MethodBinding concreteMethod, MethodBinding[] abstractMethods)", "signatureAfterChange": " void checkConcreteInheritedMethod(MethodBinding concreteMethod, MethodBinding[] abstractMethods)", "diff": ["-\t\t\t\t&& this.type.superclass.erasure().findSuperTypeWithSameErasure(originalInherited.declaringClass) == null) {", "+\t\t\t\t&& this.type.superclass.erasure().findSuperTypeOriginatingFrom(originalInherited.declaringClass) == null) {"]}], "num": 41818}