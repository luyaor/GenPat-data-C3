{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "97eb7eae10b62592db4ee93906d68c44", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe80fdc8968f54d4e553f7067071e6a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "\r \tprivate boolean createParser(JavaProject project) throws JavaModelException", "signatureAfterChange": "\r private boolean createParser(JavaProject project) throws JavaModelException", "diff": ["+ */\r", "+private boolean createParser(JavaProject project) throws JavaModelException {\r", "+\tINameEnvironment nameEnvironment = project.getSearchableNameEnvironment();\r", "+\tIProblemFactory problemFactory = new DefaultProblemFactory();\r", "-\t */\r", "-\tprivate boolean createParser(JavaProject project) throws JavaModelException {\r", "-\t\tINameEnvironment nameEnvironment = project.getSearchableNameEnvironment();\r", "-\t\tIProblemFactory problemFactory = new ProblemFactory();\r", "-\r", "-\t\tCompilerOptions options = new CompilerOptions(null);\r", "-\t\tProblemReporter problemReporter =\r", "-\t\t\tnew ProblemReporter(\r", "-\t\t\t\tDefaultErrorHandlingPolicies.proceedWithAllProblems(),\r", "-\t\t\t\toptions,\r", "-\t\t\t\tproblemFactory);\r", "-\t\tthis.lookupEnvironment =\r", "-\t\t\tnew LookupEnvironment(this, options, problemReporter, nameEnvironment);\r", "-\t\tthis.parser = new MatchLocatorParser(problemReporter);\r", "-\t\treturn true;\r", "-\t\t//this.pattern.initializeFromLookupEnvironment(this.lookupEnvironment);\r", "-\t}\r", "+\tCompilerOptions options = new CompilerOptions(null);\r", "+\tProblemReporter problemReporter =\r", "+\t\tnew ProblemReporter(\r", "+\t\t\tDefaultErrorHandlingPolicies.proceedWithAllProblems(),\r", "+\t\t\toptions,\r", "+\t\t\tproblemFactory);\r", "+\tthis.lookupEnvironment = new LookupEnvironment(this, options, problemReporter, nameEnvironment);\r", "+\tthis.parser = new MatchLocatorParser(problemReporter);\r", "+\treturn this.pattern.initializeFromLookupEnvironment(this.lookupEnvironment);\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff6827d67e7c8eee7cd87e4057a4a078", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LabeledStatement.java", "commitBeforeChange": "593b7c498e35f1adb3620eff493d0f4b5e771b68", "commitAfterChange": "3b34d278ba258a10a58d188a2047da908229b941", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \t@Override \tpublic boolean doesNotCompleteNormally()", "signatureAfterChange": "  \t@Override \tpublic boolean doesNotCompleteNormally()", "diff": ["+\t\tif (this.statement.breaksOut(this.label))", "+\t\t\treturn false;"]}], "num": 12838}