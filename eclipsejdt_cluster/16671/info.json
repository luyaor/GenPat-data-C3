{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "12debc54936250e5497b003b897e2c0e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8994582c03d58196a9a151b5f9680276", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "7f552f70f773d1772003d9ff7ee9a260c07cf525", "commitAfterChange": "b62176d1c992ae15e90ca52c5f30a9041f399244", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tprivate void enterAbstractMethod(MethodInfo methodInfo)", "signatureAfterChange": " \tprivate void enterAbstractMethod(MethodInfo methodInfo)", "diff": ["-\t\t\tif (parameterTypes != null && methodInfo.isConstructor && currentType.getDeclaringType() != null && !Flags.isStatic(currenTypeModifiers)) {", "+\t\t\tif (methodInfo.isConstructor && currentType.getDeclaringType() != null && !Flags.isStatic(currenTypeModifiers)) {", "-\t\t\t\t\tint length = parameterTypes.length;", "+\t\t\t\t\tint length = parameterTypes != null ? parameterTypes.length : 0;", "-\t\t\t\t\tSystem.arraycopy(parameterTypes, 0, newParameterTypes, 1, length);", "+\t\t\t\t\tif (length != 0) {", "+\t\t\t\t\t\tSystem.arraycopy(parameterTypes, 0, newParameterTypes, 1, length);", "+\t\t\t\t\t}", "-\t\t\t\t\tint length = parameterTypes.length;", "+\t\t\t\t\tint length = parameterTypes != null ? parameterTypes.length : 0;", "-\t\t\t\t\tSystem.arraycopy(parameterTypes, 0, newParameterTypes, 1, length);", "+\t\t\t\t\tif (length != 0) {", "+\t\t\t\t\t\tSystem.arraycopy(parameterTypes, 0, newParameterTypes, 1, length);", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a35987d585b73369426968c115488539", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "4cbca3a5c8650b81b5a31d226fc27b2c31db5b39", "commitAfterChange": "2d45e82533a4fdf2e19ac612c4a04c15da28bf1a", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tprivate void enterAbstractMethod(MethodInfo methodInfo)", "signatureAfterChange": " \tprivate void enterAbstractMethod(MethodInfo methodInfo)", "diff": ["-\t\t\tthis.methodParameterTypes[typeDepth] = methodInfo.parameterTypes;", "-\t\t\tthis.methodParameterNames[typeDepth] = methodInfo. parameterNames;", "-\t\t\t", "+\t\t\tchar[][] parameterTypes = methodInfo.parameterTypes;", "+\t\t\tif (parameterTypes != null && methodInfo.isConstructor && currentType.getDeclaringType() != null) {", "+\t\t\t\tint length = parameterTypes.length;", "+\t\t\t\tchar[][] newParameterTypes = new char[length+1][];", "+\t\t\t\tnewParameterTypes[0] = currentType.getDeclaringType().getElementName().toCharArray();", "+\t\t\t\tSystem.arraycopy(parameterTypes, 0, newParameterTypes, 1, length);", "+\t\t\t\tthis.methodParameterTypes[typeDepth] = newParameterTypes;", "+\t\t\t} else {", "+\t\t\t\tthis.methodParameterTypes[typeDepth] = parameterTypes;", "+\t\t\t}", "+\t\t\tthis.methodParameterNames[typeDepth] = methodInfo.parameterNames;", "+\t\t\t"]}], "num": 16671}