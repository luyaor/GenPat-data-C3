{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c044bb213a0789d08778633658ace651", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "053bd59d7a38392915bf243fa8b36098", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "f372eb4169324cad87b7cff6d25b5939cf1574c9", "commitAfterChange": "aac9fc656ae32e1d44c924b003ab11a649890335", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \tprivate void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": "\r \tprivate void configure(String[] argv) throws InvalidInputException", "diff": ["+\t\t// target cannot be 1.4 if compliance is 1.3\r", "+\t\tif (options.get(CompilerOptions.OPTION_TargetPlatform).equals(CompilerOptions.VERSION_1_4)\r", "+\t\t\t\t&& !options.get(CompilerOptions.OPTION_Compliance).equals(CompilerOptions.VERSION_1_4)){ \r", "+\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.incompatibleComplianceForTarget14\", (String)options.get(CompilerOptions.OPTION_Compliance))); //$NON-NLS-1$\r", "+\t\t}\r", "+\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfbbac24c092ff72b5c337ec0fed35d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "bed3ca2531a0bd15601237e5d1a0c8400e43f29e", "commitAfterChange": "cf4403abeadc8dee9dfef541af716a8f200a1ee1", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": " protected void validateOptions(boolean didSpecifyCompliance) throws InvalidInputException", "signatureAfterChange": " protected void validateOptions(boolean didSpecifyCompliance) throws InvalidInputException", "diff": ["+\t\t} else if (CompilerOptions.VERSION_CLDC1_1.equals(targetVersion)) {", "+\t\t\tif (this.didSpecifySource && CompilerOptions.versionToJdkLevel(sourceVersion) >= ClassFileConstants.JDK1_4) {", "+\t\t\t\tthrow new InvalidInputException(this.bind(\"configure.incompatibleSourceForCldcTarget\", (String) targetVersion, (String) sourceVersion)); //$NON-NLS-1$", "+\t\t\t}", "+\t\t\tif (CompilerOptions.versionToJdkLevel(compliance) >= ClassFileConstants.JDK1_5) {", "+\t\t\t\tthrow new InvalidInputException(this.bind(\"configure.incompatibleComplianceForCldcTarget\", (String) targetVersion, (String) sourceVersion)); //$NON-NLS-1$", "+\t\t\t}"]}], "num": 58179}