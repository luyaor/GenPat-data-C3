{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "93e06ca8753734b0f48aa196cee48442", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33bd1ce4668c2cb1a3bd74ffa72e098f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "8c93d4e99b8a943865cb7391e781eba5bb83dfc9", "commitAfterChange": "bd0edd7688142c1743cb6b10766dfc576040f113", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate void checkVariableComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse, VariableBinding var, int nullStatus, Expression reference)", "signatureAfterChange": " \tprivate void checkVariableComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse, VariableBinding var, int nullStatus, Expression reference)", "diff": ["-\t\t\t\t\tinitsWhenTrue.markAsComparedEqualToNull(var); // from thereon it is set", "-\t\t\t\t\tinitsWhenFalse.markAsComparedEqualToNonNull(var); // from thereon it is set", "+\t\t\t\t\tif ((var.tagBits & TagBits.AnnotationNonNull) == 0) { // never drop information from @NonNull annotation", "+\t\t\t\t\t\tinitsWhenTrue.markAsComparedEqualToNull(var); // from thereon it is set", "+\t\t\t\t\t\tinitsWhenFalse.markAsComparedEqualToNonNull(var); // from thereon it is set", "+\t\t\t\t\t}", "-\t\t\t\t\tinitsWhenTrue.markAsComparedEqualToNonNull(var); // from thereon it is set", "-\t\t\t\t\tinitsWhenFalse.markAsComparedEqualToNull(var); // from thereon it is set", "+\t\t\t\t\tif ((var.tagBits & TagBits.AnnotationNonNull) == 0) { // never drop information from @NonNull annotation", "+\t\t\t\t\t\tinitsWhenTrue.markAsComparedEqualToNonNull(var); // from thereon it is set", "+\t\t\t\t\t\tinitsWhenFalse.markAsComparedEqualToNull(var); // from thereon it is set", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62b9eb0db68b1f4a01b1679a5bbe1af9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate void checkVariableComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse, LocalVariableBinding local, int nullStatus, Expression reference)", "signatureAfterChange": " \tprivate void checkVariableComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse, LocalVariableBinding local, int nullStatus, Expression reference)", "diff": ["-\t\t\t\tflowContext.recordUsingNullReference(scope, local, reference, FlowInfo.NULL, flowInfo);", "+\t\t\t\tflowContext.recordUsingNullReference(scope, local, reference, ", "+\t\t\t\t\tFlowContext.CAN_ONLY_NULL_NON_NULL, flowInfo);", "-\t\t\t\t\tinitsWhenTrue.markAsDefinitelyNull(local); // from thereon it is set", "-\t\t\t\t\tinitsWhenFalse.markAsDefinitelyNonNull(local); // from thereon it is set", "+\t\t\t\t\tinitsWhenTrue.markAsComparedEqualToNull(local); // from thereon it is set", "+\t\t\t\t\tinitsWhenFalse.markAsComparedEqualToNonNull(local); // from thereon it is set", "-\t\t\t\t\tinitsWhenTrue.markAsDefinitelyNonNull(local); // from thereon it is set", "-\t\t\t\t\tinitsWhenFalse.markAsDefinitelyNull(local); // from thereon it is set", "+\t\t\t\t\tinitsWhenTrue.markAsComparedEqualToNonNull(local); // from thereon it is set", "+\t\t\t\t\tinitsWhenFalse.markAsComparedEqualToNull(local); // from thereon it is set", "-\t\t\t\tflowContext.recordUsingNullReference(scope, local, reference, FlowInfo.NON_NULL, flowInfo);", "+\t\t\t\tflowContext.recordUsingNullReference(scope, local, reference, ", "+\t\t\t\t\tFlowContext.CAN_ONLY_NULL, flowInfo);", "-\t\t\t\t\tinitsWhenTrue.markAsDefinitelyNonNull(local); // from thereon it is set", "+\t\t\t\t\tinitsWhenTrue.markAsComparedEqualToNonNull(local); // from thereon it is set"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9aa27d4ecf5f97a8f1ad31341b523a7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "874e2c41609c64af417834df9af2e898d8dcf37a", "commitAfterChange": "4977ef90a9cbab898d33f6e3ba736939d7ac7a85", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate void checkVariableComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse, VariableBinding var, int nullStatus, Expression reference)", "signatureAfterChange": " \tprivate void checkVariableComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse, VariableBinding var, int nullStatus, Expression reference)", "diff": ["-\t\t\t\t\tif ((var.tagBits & TagBits.AnnotationNonNull) == 0) { // never drop information from @NonNull annotation", "-\t\t\t\t\t\tinitsWhenTrue.markAsComparedEqualToNull(var); // from thereon it is set", "-\t\t\t\t\t\tinitsWhenFalse.markAsComparedEqualToNonNull(var); // from thereon it is set", "-\t\t\t\t\t}", "+\t\t\t\t\tinitsWhenTrue.markAsComparedEqualToNull(var); // from thereon it is set", "+\t\t\t\t\tinitsWhenFalse.markAsComparedEqualToNonNull(var); // from thereon it is set", "-\t\t\t\t\tif ((var.tagBits & TagBits.AnnotationNonNull) == 0) { // never drop information from @NonNull annotation", "-\t\t\t\t\t\tinitsWhenTrue.markAsComparedEqualToNonNull(var); // from thereon it is set", "-\t\t\t\t\t\tinitsWhenFalse.markAsComparedEqualToNull(var); // from thereon it is set", "-\t\t\t\t\t}", "+\t\t\t\t\tinitsWhenTrue.markAsComparedEqualToNonNull(var); // from thereon it is set", "+\t\t\t\t\tinitsWhenFalse.markAsComparedEqualToNull(var); // from thereon it is set"]}], "num": 53847}