{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5aef1eb36e4998a57da2c90ccafdd2af", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ffa09d26287bba35d84686d60b6e08f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "f2f45b09c61cdc4a3bb7702f92f8e4fdcb969052", "commitAfterChange": "f33fe27819e8270eb24d0e5a64c8fba3d823b0e8", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tprivate boolean updateProjectClasspath( IJavaProject jp, IFolder folder, IProgressMonitor progressMonitor ) \t\tthrows JavaModelException", "signatureAfterChange": " \tprivate boolean updateProjectClasspath( IJavaProject jp, IFolder folder, IProgressMonitor progressMonitor ) \t\tthrows JavaModelException", "diff": ["-\t\tboolean found = false;", "-\t\tfor (int i = 0; i < cp.length; i++) ", "-\t\t{", "-\t\t\tif (cp[i].getPath().equals( path )) ", "-\t\t\t{", "-\t\t\t\tfound = true;", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t}", "+\t\tboolean found = isProjectClassPathUpToDate(jp, path, progressMonitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "950e972cef77c4fb033ac7756d79ac25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Annotation.java", "commitBeforeChange": "100013bece0eb4f533563100e2e2c492eafe5eed", "commitAfterChange": "a836581cacf8d7a555ca92aa4df554df081b1e09", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "signatureAfterChange": " \t \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "diff": ["-\t\tfor (int i = 0; i < tokens.length; i++) {", "-\t\t\tif (i > 0) output.append('.');", "-\t\t\toutput.append(tokens[i]);", "-\t\t}", "+\t\tthis.type.printExpression(0, output);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4daa70f918620b0f1d4046cbb570cdc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "2ae41539e386d12d9e7c121e231730e370deda2f", "commitAfterChange": "05dd526dbb279df7b7e23a1d7ccb53d445943919", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r protected boolean encloses(IResource element)", "signatureAfterChange": "\r protected boolean encloses(IResource element)", "diff": ["-\tboolean encloses = false;\r", "-\tfor (int i = 0; i < this.pathsCount; i++) {\r", "-\t\tif (this.paths[i].isPrefixOf(elementPath)) {\r", "-\t\t\tencloses = true;\r", "-\t\t\tbreak;\r", "-\t\t}\r", "-\t}\r", "+\tboolean encloses = this.encloses(elementPath);\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "caa717ddc9de2757fe2f50aa120400c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "0f7389d382d65723d2623818d6e6cb4fb133556c", "commitAfterChange": "8ed896e298fa9789ff51d3aeca45b60a4a3c5b99", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " \t\t \tprivate int rewriteParagraphList(ASTNode parent, StructuralPropertyDescriptor property, int insertPos, int insertIndent, int separator, int lead)", "signatureAfterChange": " \t\t \tprivate int rewriteParagraphList(ASTNode parent, StructuralPropertyDescriptor property, int insertPos, int insertIndent, int separator, int lead)", "diff": ["-\t\tboolean hasExisting= false;", "-\t\tfor (int i= 0; i < events.length; i++) {", "-\t\t\tint changeKind= events[i].getChangeKind();", "-\t\t\thasExisting |= (changeKind != RewriteEvent.INSERTED);", "-\t\t}", "-\t\t", "-\t\tif (!hasExisting) {", "+\t\tif (isAllOfKind(events, RewriteEvent.INSERTED)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdf2fbe458b25a20851e7604c6322578", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/BaseMessagerImpl.java", "commitBeforeChange": "5ad2fccc6e97d11cd839d7b271d24d4e5e50f1bf", "commitAfterChange": "7c18a9763024ad321fbd37c2e6b52a79b1b2fb7c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static AptProblem createProblem(Kind kind, CharSequence msg, Element e,  \t\t\tAnnotationMirror a, AnnotationValue v)", "signatureAfterChange": " \tpublic static AptProblem createProblem(Kind kind, CharSequence msg, Element e,  \t\t\tAnnotationMirror a, AnnotationValue v)", "diff": ["-\t\t\tAnnotation annotation = null;", "-\t\t\tfor (int i = 0; annotation == null && i < elementAnnotations.length; i++) {", "-\t\t\t\tif (annotationBinding == elementAnnotations[i].getCompilerAnnotation()) {", "-\t\t\t\t\tannotation = elementAnnotations[i];", "-\t\t\t\t}", "-\t\t\t}", "+\t\t\tAnnotation annotation = findAnnotation(elementAnnotations, annotationBinding);"]}], "num": 70039}