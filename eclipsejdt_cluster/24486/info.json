{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b5165664b7b46e92ee3c035fac1f607", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a02430cbd909a4ab27890a28eecf29b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "f7ce86a79f082187bb9d131f12b4c9c140c05c32", "commitAfterChange": "908256095b93d8e1bbc7e5e244cc22e547564057", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " protected int resolveLevelAsSubtype(char[] simplePattern, char[] qualifiedPattern, ReferenceBinding type, TypeBinding[] argumentTypes)", "signatureAfterChange": " protected int resolveLevelAsSubtype(char[] simplePattern, char[] qualifiedPattern, ReferenceBinding type, char[] methodName, TypeBinding[] argumentTypes)", "diff": ["-protected int resolveLevelAsSubtype(char[] simplePattern, char[] qualifiedPattern, ReferenceBinding type, TypeBinding[] argumentTypes) {", "+protected int resolveLevelAsSubtype(char[] simplePattern, char[] qualifiedPattern, ReferenceBinding type, char[] methodName, TypeBinding[] argumentTypes) {", "-\t\tMethodBinding method = argumentTypes == null ? null : getMethodBinding(type, argumentTypes);", "+\t\tMethodBinding method = argumentTypes == null ? null : getMethodBinding(type, methodName, argumentTypes);", "-\t\tlevel = resolveLevelAsSubtype(simplePattern, qualifiedPattern, type.superclass(), argumentTypes);", "+\t\tlevel = resolveLevelAsSubtype(simplePattern, qualifiedPattern, type.superclass(), methodName, argumentTypes);", "-\t\t\t\tMethodBinding method = getMethodBinding(type, argumentTypes);", "+\t\t\t\tMethodBinding method = getMethodBinding(type, methodName, argumentTypes);", "-\t\tlevel = resolveLevelAsSubtype(simplePattern, qualifiedPattern, interfaces[i], null);", "+\t\tlevel = resolveLevelAsSubtype(simplePattern, qualifiedPattern, interfaces[i], methodName, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5f50bc5689b117e640bdd2a1c8178ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " private void createFields(IBinaryField[] iFields, long sourceLevel)", "signatureAfterChange": " private void createFields(IBinaryField[] iFields, long sourceLevel, char[][][] missingTypeNames)", "diff": ["-private void createFields(IBinaryField[] iFields, long sourceLevel) {", "+private void createFields(IBinaryField[] iFields, long sourceLevel, char[][][] missingTypeNames) {", "-\t\t\t\t\t? environment.getTypeFromSignature(binaryField.getTypeName(), 0, -1, false, this) ", "-\t\t\t\t\t: environment.getTypeFromTypeSignature(new SignatureWrapper(fieldSignature), Binding.NO_TYPE_VARIABLES, this);", "+\t\t\t\t\t? environment.getTypeFromSignature(binaryField.getTypeName(), 0, -1, false, this, missingTypeNames) ", "+\t\t\t\t\t: environment.getTypeFromTypeSignature(new SignatureWrapper(fieldSignature), Binding.NO_TYPE_VARIABLES, this, missingTypeNames);", "-\t\t\t\t\tthis.fields[i].setAnnotations(createAnnotations(iFields[i].getAnnotations(), this.environment));", "+\t\t\t\t\tIBinaryField binaryField = iFields[i];", "+\t\t\t\t\tthis.fields[i].setAnnotations(createAnnotations(binaryField.getAnnotations(), this.environment, missingTypeNames));"]}], "num": 24486}