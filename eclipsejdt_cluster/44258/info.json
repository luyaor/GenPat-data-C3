{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ce2069b5d06e24b6c27cef269f71c772", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "285bab0998b08d0eb45cf3fa16afc247", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchingOpenable.java", "commitBeforeChange": "be89ab2e0ec1e398e3b0603a492d22c9815a6eef", "commitAfterChange": "0460b2dc122bab8976f113fd5dfefdda9aaa1649", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r private void buildTypeBindings(final char[] source)", "signatureAfterChange": "\r private void buildTypeBindings(final char[] source)", "diff": ["-\t\t// source unit\r", "-\t\tICompilationUnit sourceUnit = new ICompilationUnit() {\r", "-\t\t\tpublic char[] getContents() {\r", "-\t\t\t\treturn source;\r", "-\t\t\t}\r", "-\t\t\tpublic char[] getFileName() {\r", "-\t\t\t\treturn EMPTY_FILE_NAME; // not used\r", "-\t\t\t}\r", "-\t\t\tpublic char[] getMainTypeName() {\r", "-\t\t\t\treturn null; // don't need to check if main type name == compilation unit name\r", "-\t\t\t}\r", "-\t\t};\r", "-\t\t\r", "-\t\tCompilationResult compilationResult = new CompilationResult(sourceUnit, 0, 0);  \r", "-\t\tthis.parsedUnit = this.locator.parser.dietParse(sourceUnit, compilationResult);\r", "-\r", "+\t\tthis.parsedUnit = this.locator.dietParse(source);\r", "+\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f8d11ca6de6c7292058a6f3dec0384a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "d0a6b322fe5ab50f982eb9903d93b4bae700d1e4", "commitAfterChange": "e7a500282eed24e85c3ed97d190d16fcff77b336", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic void searchAllTypeNames( \t\tfinal char[][] qualifications,  \t\tfinal char[][] typeNames, \t\tfinal int matchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": " \tpublic void searchAllTypeNames( \t\tfinal char[][] qualifications,  \t\tfinal char[][] typeNames, \t\tfinal int matchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\t\t\t\t\t\tfinal char[] contents = workingCopy.getBuffer().getCharacters();", "-\t\t\t\t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit unit = new org.eclipse.jdt.internal.compiler.env.ICompilationUnit() {", "-\t\t\t\t\t\t\tpublic char[] getContents() {", "-\t\t\t\t\t\t\t\treturn contents;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tpublic char[] getMainTypeName() {", "-\t\t\t\t\t\t\t\treturn null;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tpublic char[][] getPackageName() {", "-\t\t\t\t\t\t\t\treturn null;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tpublic char[] getFileName() {", "-\t\t\t\t\t\t\t\treturn null;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t};", "+\t\t\t\t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit unit = (org.eclipse.jdt.internal.compiler.env.ICompilationUnit) workingCopy;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "faff36cc948941e004025167bbfaff17", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "d0a6b322fe5ab50f982eb9903d93b4bae700d1e4", "commitAfterChange": "e7a500282eed24e85c3ed97d190d16fcff77b336", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName,  \t\tfinal char[] typeName, \t\tfinal int matchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName,  \t\tfinal char[] typeName, \t\tfinal int matchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\t\t\t\t\t\tfinal char[] contents = workingCopy.getBuffer().getCharacters();", "-\t\t\t\t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit unit = new org.eclipse.jdt.internal.compiler.env.ICompilationUnit() {", "-\t\t\t\t\t\t\tpublic char[] getContents() {", "-\t\t\t\t\t\t\t\treturn contents;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tpublic char[] getMainTypeName() {", "-\t\t\t\t\t\t\t\treturn null;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tpublic char[][] getPackageName() {", "-\t\t\t\t\t\t\t\treturn null;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tpublic char[] getFileName() {", "-\t\t\t\t\t\t\t\treturn null;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t};", "+\t\t\t\t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit unit = (org.eclipse.jdt.internal.compiler.env.ICompilationUnit) workingCopy;"]}], "num": 44258}