{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2b1875ee2f36125f488cf9bc35aaf2ed", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d56d5f112ff903fc50f7cc4788e1d77", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "64298556651d81e68f8405c1642b36744d7373dd", "commitAfterChange": "b92bafecd030777e0d6056677f8286cf640a489f", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tprivate void findFields( \t\tchar[] fieldName, \t\tFieldBinding[] fields, \t\tScope scope, \t\tObjectVector fieldsFound, \t\tObjectVector localsFound, \t\tboolean onlyStaticFields, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall)", "signatureAfterChange": " \tprivate void findFields( \t\tchar[] fieldName, \t\tFieldBinding[] fields, \t\tScope scope, \t\tObjectVector fieldsFound, \t\tObjectVector localsFound, \t\tboolean onlyStaticFields, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall)", "diff": ["-\t\t\tthis.requestor", "-\t\t\t\t.acceptField(", "-\t\t\t\t\tfield.declaringClass.qualifiedPackageName(),", "-\t\t\t\t\tfield.declaringClass.qualifiedSourceName(),", "-\t\t\t\t\tfield.name,", "-\t\t\t\t\tfield.type.qualifiedPackageName(),", "-\t\t\t\t\tfield.type.qualifiedSourceName(),", "-\t\t\t\t\tcompletion,", "-\t\t\t// may include some qualification to resolve ambiguities", "-\t\t\tfield.modifiers, this.startPosition - this.offset, this.endPosition - this.offset,", "-\t\t\trelevance);", "+\t\t\tif(!this.requestor.isIgnored(CompletionProposal.FIELD_REF)) {", "+\t\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.FIELD_REF, this.actualCompletionPosition);", "+\t\t\t\tproposal.setDeclarationSignature(getSignature(field.declaringClass));", "+\t\t\t\tproposal.setSignature(getSignature(field.type));", "+\t\t\t\tproposal.setDeclarationPackageName(field.declaringClass.qualifiedPackageName());", "+\t\t\t\tproposal.setDeclarationTypeName(field.declaringClass.qualifiedSourceName());", "+\t\t\t\tproposal.setPackageName(field.type.qualifiedPackageName());", "+\t\t\t\tproposal.setTypeName(field.type.qualifiedSourceName()); ", "+\t\t\t\tproposal.setName(field.name);", "+\t\t\t\tproposal.setCompletion(completion);", "+\t\t\t\tproposal.setFlags(field.modifiers);", "+\t\t\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "+\t\t\t\tproposal.setRelevance(relevance);", "+\t\t\t\tthis.requestor.accept(proposal);", "+\t\t\t\tif(DEBUG) {", "+\t\t\t\t\tthis.printDebug(proposal);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "203a4df8c4ad50e65fb9176a61693b5e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "64298556651d81e68f8405c1642b36744d7373dd", "commitAfterChange": "b92bafecd030777e0d6056677f8286cf640a489f", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "  \tprivate void findVariablesAndMethods( \t\tchar[] token, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope)", "signatureAfterChange": "  \tprivate void findVariablesAndMethods( \t\tchar[] token, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope)", "diff": ["-\t\t\t\t\t\tthis.requestor.acceptLocalVariable(", "-\t\t\t\t\t\t\tlocal.name,", "-\t\t\t\t\t\t\tlocal.type == null ", "-\t\t\t\t\t\t\t\t? CharOperation.NO_CHAR", "-\t\t\t\t\t\t\t\t: local.type.qualifiedPackageName(),", "-\t\t\t\t\t\t\tlocal.type == null", "-\t\t\t\t\t\t\t\t? local.declaration.type.toString().toCharArray()", "-\t\t\t\t\t\t\t\t: local.type.qualifiedSourceName(),", "-\t\t\t\t\t\t\tlocal.modifiers,", "-\t\t\t\t\t\t\tthis.startPosition - this.offset,", "-\t\t\t\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\t\t\t\trelevance);", "+\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.LOCAL_VARIABLE_REF)) {", "+\t\t\t\t\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.LOCAL_VARIABLE_REF, this.actualCompletionPosition);", "+\t\t\t\t\t\t\tproposal.setSignature(", "+\t\t\t\t\t\t\t\tlocal.type == null", "+\t\t\t\t\t\t\t\t? createTypeSignature(", "+\t\t\t\t\t\t\t\t\t\tCharOperation.NO_CHAR,", "+\t\t\t\t\t\t\t\t\t\tlocal.declaration.type.toString().toCharArray())", "+\t\t\t\t\t\t\t\t: getSignature(local.type));", "+\t\t\t\t\t\t\tif(local.type == null) {", "+\t\t\t\t\t\t\t\t//proposal.setPackageName(null);", "+\t\t\t\t\t\t\t\tproposal.setTypeName(local.declaration.type.toString().toCharArray());", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tproposal.setPackageName(local.type.qualifiedPackageName());", "+\t\t\t\t\t\t\t\tproposal.setTypeName(local.type.qualifiedSourceName());", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tproposal.setName(local.name);", "+\t\t\t\t\t\t\tproposal.setCompletion(local.name);", "+\t\t\t\t\t\t\tproposal.setFlags(local.modifiers);", "+\t\t\t\t\t\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "+\t\t\t\t\t\t\tproposal.setRelevance(relevance);", "+\t\t\t\t\t\t\tthis.requestor.accept(proposal);", "+\t\t\t\t\t\t\tif(DEBUG) {", "+\t\t\t\t\t\t\t\tthis.printDebug(proposal);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab113c71a83ab183be7b9f32014924bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "64298556651d81e68f8405c1642b36744d7373dd", "commitAfterChange": "b92bafecd030777e0d6056677f8286cf640a489f", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \tprivate void findClassField(char[] token, TypeBinding receiverType, Scope scope)", "signatureAfterChange": "  \tprivate void findClassField(char[] token, TypeBinding receiverType, Scope scope)", "diff": ["-\t\t\tthis.requestor.acceptField(", "-\t\t\t\tCharOperation.NO_CHAR,", "-\t\t\t\tCharOperation.NO_CHAR,", "-\t\t\t\tclassField,", "-\t\t\t\tCharOperation.NO_CHAR,", "-\t\t\t\tCharOperation.NO_CHAR,", "-\t\t\t\tclassField,", "-\t\t\t\tIConstants.AccStatic | IConstants.AccPublic,", "-\t\t\t\tthis.startPosition - this.offset,", "-\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\trelevance);", "+\t\t\tif(!this.requestor.isIgnored(CompletionProposal.FIELD_REF)) {", "+\t\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.FIELD_REF, this.actualCompletionPosition);", "+\t\t\t\t//proposal.setDeclarationSignature(null);", "+\t\t\t\tproposal.setSignature(", "+\t\t\t\t\t\tcreateNonGenericTypeSignature(", "+\t\t\t\t\t\t\t\tCharOperation.concatWith(JAVA_LANG, '.'),", "+\t\t\t\t\t\t\t\tCLASS));", "+\t\t\t\t//proposal.setDeclarationPackageName(null);", "+\t\t\t\t//proposal.setDeclarationTypeName(null);", "+\t\t\t\tproposal.setPackageName(CharOperation.concatWith(JAVA_LANG, '.'));", "+\t\t\t\tproposal.setTypeName(CLASS);", "+\t\t\t\tproposal.setName(classField);", "+\t\t\t\tproposal.setCompletion(classField);", "+\t\t\t\tproposal.setFlags(Flags.AccStatic | Flags.AccPublic);", "+\t\t\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "+\t\t\t\tproposal.setRelevance(relevance);", "+\t\t\t\tthis.requestor.accept(proposal);", "+\t\t\t\tif(DEBUG) {", "+\t\t\t\t\tthis.printDebug(proposal);", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 68898}