{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "12ae94266a2f0fca4b9d68184e8e23b6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "023ee822851421bc70fd6bbc9ba3a238", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "55a7556711dc91579fb591d318cd652e79ebf6a7", "commitAfterChange": "65b4e15798189e35310112aac16988bcdf7eef0b", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tprotected void assertClasspathEquals(IClasspathEntry[] classpath, String expected)", "signatureAfterChange": " \tprotected void assertClasspathEquals(IClasspathEntry[] classpath, String expected)", "diff": ["-\t\tStringBuffer buffer = new StringBuffer();", "-\t\tint length = classpath == null ? 0 : classpath.length;", "-\t\tfor (int i=0; i<length; i++) {", "-\t\t\tbuffer.append(classpath[i]);", "-\t\t\tif (i < length-1)", "-\t\t\t\tbuffer.append('\\n');", "+\t\tString actual;", "+\t\tif (classpath == null) {", "+\t\t\tactual = \"<null>\";", "+\t\t} else {", "+\t\t\tStringBuffer buffer = new StringBuffer();", "+\t\t\tint length = classpath.length;", "+\t\t\tfor (int i=0; i<length; i++) {", "+\t\t\t\tbuffer.append(classpath[i]);", "+\t\t\t\tif (i < length-1)", "+\t\t\t\t\tbuffer.append('\\n');", "+\t\t\t}", "+\t\t\tactual = buffer.toString();", "-\t\tString actual = buffer.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f74b5010143cd6f6591743569367b848", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "83aa074d1edc1431b30e3bdffeaa5b8dd0bf1353", "commitAfterChange": "10d9ee7d6cd7cd29aebe50986af8fcc7cd9d4e32", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  private void setupExternalAnnotationProvider(IProject project, final IPath externalAnnotationPath, \t\tZipFile annotationZip, ClassFileReader reader, final String typeName)", "signatureAfterChange": "  private void setupExternalAnnotationProvider(IProject project, final IPath externalAnnotationPath, \t\tZipFile annotationZip, ClassFileReader reader, final String typeName)", "diff": ["-\tIResource resource = externalAnnotationPath.segmentCount() == 1", "-\t\t\t? root.getProject(externalAnnotationPath.lastSegment())", "-\t\t\t: root.getFolder(externalAnnotationPath);", "-\tif (!resource.exists())", "-\t\tresource = root.getFile(externalAnnotationPath);", "+\tIResource resource;", "+\tif (externalAnnotationPath.segmentCount() == 1) {", "+\t\tresource = root.getProject(externalAnnotationPath.lastSegment());", "+\t} else {", "+\t\tresource = root.getFolder(externalAnnotationPath);", "+\t\tif (!resource.exists())", "+\t\t\tresource = root.getFile(externalAnnotationPath);", "+\t}"]}], "num": 67181}