{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4bb801de61f7ca54c928e7350acc455c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "095aace16807b53ef7fa226b4f17a12c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "b6fe6f5260b125d69b0514fb7ed6ac0364e3e649", "commitAfterChange": "2253f3dfcbdf32f3d1a5ff419b874f53e57d43c1", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r \tvoid createClasspathProblemMarker(\r \t\tString message,\r \t\tint severity,\r \t\tboolean isCycleProblem)", "signatureAfterChange": "\r \tvoid createClasspathProblemMarker(\r \t\tString message,\r \t\tint severity,\r \t\tboolean isCycleProblem,\t\t\r \t\tboolean isClasspathFileFormatProblem)", "diff": ["-\t\tboolean isCycleProblem) {\r", "+\t\tboolean isCycleProblem,\t\t\r", "+\t\tboolean isClasspathFileFormatProblem) {\r", "-\t\t\t\t\tIJavaModelMarker.CYCLE_DETECTED },\r", "+\t\t\t\t\tIJavaModelMarker.CYCLE_DETECTED,\r", "+\t\t\t\t\tIJavaModelMarker.CLASSPATH_FILE_FORMAT },\r", "-\t\t\t\t\tisCycleProblem ? \"true\" : \"false\"});//$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\t\t\t\tisCycleProblem ? \"true\" : \"false\",//$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\t\t\t\tisClasspathFileFormatProblem ? \"true\" : \"false\"});//$NON-NLS-1$ //$NON-NLS-2$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25efce6af1ab8dad2ce2540280ce51d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "5663a1e0521003a6152962cf3fce8cc9ca6a4647", "commitAfterChange": "c611850252ecccb24f660547467e0d555dd4fb70", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "  \tprivate org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding[] getTypeAnnotations(int dimensions, ArrayBinding arrayBinding)", "signatureAfterChange": "  \tprivate org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding[] getTypeAnnotations(int dimensions, ArrayBinding arrayBinding, boolean isVarargs)", "diff": ["-\tprivate org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding[] getTypeAnnotations(int dimensions, ArrayBinding arrayBinding) {", "+\tprivate org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding[] getTypeAnnotations(int dimensions, ArrayBinding arrayBinding, boolean isVarargs) {", "-\t\t// Skip past extended dimensions encoded ahead of base dimensions.", "-\t\tint extendedDimensions = arrayBinding.dimensions - dimensions;", "+\t\t// Skip past extended dimensions encoded ahead of base dimensions. Dimension for variable argument array comes after the base dimensions.", "+\t\tint extendedDimensions = arrayBinding.dimensions - dimensions - (isVarargs ? 1 : 0);", "-\t\t\treturn oldies;", "+\t\t\treturn oldies; // if isVarargs, we will return extra trailing annotations, but that should be harmless.", "-\t\treturn newbies;", "+\t\treturn newbies; // if isVarargs, we will return extra trailing annotations, but that should be harmless."]}], "num": 20822}