{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "635d274ff4ff45b58a48592e2ba941d4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13e196df4ee836660a28fb84abeb001b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/UnresolvedReferenceBinding.java", "commitBeforeChange": "b7403b29059200afb0a63e6027ea84fe3b4ecb92", "commitAfterChange": "1ee3b257e822fcbedfd61f468d0d681f07548107", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " ReferenceBinding resolve(LookupEnvironment environment, boolean convertGenericToRawType)", "signatureAfterChange": " ReferenceBinding resolve(LookupEnvironment environment, boolean convertGenericToRawType)", "diff": ["-\t\tboolean rawEnclosing = false;", "-\t\tReferenceBinding targetEnclosingType = targetType.enclosingType();", "-\t\tif (targetEnclosingType != null && targetEnclosingType.isGenericType()) { // convert to raw type since wasn't parameterized", "-\t\t\trawEnclosing = true;", "-\t\t\ttargetEnclosingType = environment.createRawType(targetEnclosingType, targetEnclosingType.enclosingType());", "-\t\t}", "-\t\tif (targetType.isGenericType()) { // raw reference to generic ?", "-\t\t    return environment.createRawType(targetType, targetEnclosingType);", "-\t\t} else if (rawEnclosing) {", "-\t\t\treturn environment.createParameterizedType(targetType, null, targetEnclosingType);", "-\t\t}", "+\t\ttargetType = (ReferenceBinding) environment.convertToRawType(targetType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "242b602631556500ef5bbe3d3f5ee95e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchingOpenable.java", "commitBeforeChange": "be89ab2e0ec1e398e3b0603a492d22c9815a6eef", "commitAfterChange": "0460b2dc122bab8976f113fd5dfefdda9aaa1649", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public void buildTypeBindings()", "signatureAfterChange": "\r public void buildTypeBindings()", "diff": ["-\t\ttry {\r", "-\t\t\tchar[] source = null; \r", "-\t\t\torg.eclipse.jdt.internal.core.ClassFile classFile = (org.eclipse.jdt.internal.core.ClassFile)openable;\r", "-\t\t\tSourceMapper sourceMapper = classFile.getSourceMapper();\r", "-\t\t\tif (sourceMapper != null) {\r", "-\t\t\t\tsource = sourceMapper.findSource(classFile.getType());\r", "+\t\tchar[] source = this.locator.findSource((org.eclipse.jdt.internal.core.ClassFile)openable); \r", "+\t\tif (source != null) {\r", "+\t\t\tthis.buildTypeBindings(source);\r", "+\t\t\t\r", "+\t\t\t// try to use the main type's class file as the openable\r", "+\t\t\tTypeDeclaration[] types = this.parsedUnit.types;\r", "+\t\t\tif (types != null && types.length > 0) {\r", "+\t\t\t\tString simpleTypeName = new String(types[0].name);\r", "+\t\t\t\tIPackageFragment parent = (IPackageFragment)openable.getParent();\r", "+\t\t\t\torg.eclipse.jdt.core.IClassFile mainTypeClassFile = \r", "+\t\t\t\t\tparent.getClassFile(simpleTypeName + \".class\"); //$NON-NLS-1$\r", "+\t\t\t\tif (mainTypeClassFile.exists()) {\r", "+\t\t\t\t\tthis.openable = (Openable)mainTypeClassFile;\r", "+\t\t\t\t} \r", "-\t\t\tif (source == null) {\r", "-\t\t\t\t// default to opening the class file\r", "-\t\t\t\tString sourceFromBuffer = classFile.getSource();\r", "-\t\t\t\tif (sourceFromBuffer != null) {\r", "-\t\t\t\t\tsource = sourceFromBuffer.toCharArray();\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t\tif (source != null) {\r", "-\t\t\t\tthis.buildTypeBindings(source);\r", "-\t\t\t\t\r", "-\t\t\t\t// try to use the main type's class file as the openable\r", "-\t\t\t\tTypeDeclaration[] types = this.parsedUnit.types;\r", "-\t\t\t\tif (types != null && types.length > 0) {\r", "-\t\t\t\t\tString simpleTypeName = new String(types[0].name);\r", "-\t\t\t\t\tIPackageFragment parent = (IPackageFragment)openable.getParent();\r", "-\t\t\t\t\torg.eclipse.jdt.core.IClassFile mainTypeClassFile = \r", "-\t\t\t\t\t\tparent.getClassFile(simpleTypeName + \".class\"); //$NON-NLS-1$\r", "-\t\t\t\t\tif (mainTypeClassFile.exists()) {\r", "-\t\t\t\t\t\tthis.openable = (Openable)mainTypeClassFile;\r", "-\t\t\t\t\t} \r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t} catch (JavaModelException e) {\r"]}], "num": 49738}