{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9d36d251ad65beb2e6f122429ab75dde", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5005bdcdf861e7c71af19ce45614a3eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 120, "signatureBeforeChange": " \tpublic void test0128_while_try()", "signatureAfterChange": " public void test0418_while_try()", "diff": ["-\t// origin AssignmentTest.testO22", "-\tpublic void test0128_while_try() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t boolean bool() { return true; }\\n\" + ", "-\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\"\t\t Object o = null;\\n\" + ", "-\t\t\t\t\"\t\t while (bool()) {\\n\" + ", "-\t\t\t\t\"\t\t\t try {\\n\" + ", "-\t\t\t\t\"\t\t\t\t if (o == null) {\\n\" + ", "-\t\t\t\t\"\t\t\t\t\t o = new Object();\\n\" + ", "-\t\t\t\t\"\t\t\t\t }\\n\" + ", "-\t\t\t\t\"\t\t\t } finally { /* */ }\\n\" + ", "-\t\t\t\t\"\t\t }\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\",", "-\t\t\t},", "-\t\t\"\");", "-\t}", "+// origin AssignmentTest.testO22", "+public void test0418_while_try() {", "+\tthis.runConformTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  boolean bool() { return true; }\\n\" + ", "+\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\"    Object o = null;\\n\" + ", "+\t\t\t\"    while (bool()) {\\n\" + ", "+\t\t\t\"      try {\\n\" + ", "+\t\t\t\"        if (o == null) {\\n\" + ", "+\t\t\t\"          o = new Object();\\n\" + ", "+\t\t\t\"        }\\n\" + ", "+\t\t\t\"      } finally { /* */ }\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\"},", "+\t\t\"\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56d7ece531b8d6f94ec6de94579bb3c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTestMixed.java", "commitBeforeChange": "9e86c25c450b0124f857c2c627328481b85f445c", "commitAfterChange": "2c3ad81991d5b873d094259b6960d57a22dd0f08", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic void testMethodCreateFromSource()", "signatureAfterChange": " \tpublic void testBug45592()", "diff": ["-\tpublic void testMethodCreateFromSource() {", "-\t\t\t\t\"/**\" + LINE_SEPARATOR +", "-\t\t\t\t\" * @return Returns the content.\" + LINE_SEPARATOR +", "-\t\t\t\t\" */\" + LINE_SEPARATOR +", "-\t\t\t\t\"public String getContent() {\" + LINE_SEPARATOR +", "-\t\t\t\t\"\treturn fContent;\" + LINE_SEPARATOR +", "-\t\t\t\t\"}\" + LINE_SEPARATOR);", "-\t\t\t\t\"/**\" + LINE_SEPARATOR +", "-\t\t\t\t\" * @return Returns the content.\" + LINE_SEPARATOR +", "-\t\t\t\t\" */\" + LINE_SEPARATOR +", "-\t\t\t\t\"public String getContent() {\" + LINE_SEPARATOR +", "-\t\t\t\t\"\treturn fContent;\" + LINE_SEPARATOR +", "-\t\t\t\t\"}\" + LINE_SEPARATOR));", "+\t */", "+\tpublic void testBug45592() {", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"test/X.java\",", "+\t\t\t\t\"package test;\\n\"", "+\t\t\t \t+ \"class X {\\n\"", "+\t\t\t\t\t+ \"\tvoid foo(int x, String str) {}\\n\"", "+\t\t\t  \t\t+ \"}\\n\",", "+\t\t\t\t\"test/Y.java\",", "+\t\t\t\t\"package test;\\n\"", "+\t\t\t   \t\t+ \"class Y {\\n\"", "+\t\t\t   \t\t+ \"  /** */\\n\"", "+\t\t\t   \t\t+ \"  protected X field = new X() {\\n\"", "+\t\t\t   \t\t+ \"    void foo(int x, String str) {}\\n\"", "+\t\t\t   \t\t+ \"  };\\n\"", "+\t\t\t   \t\t+ \"}\\n\"});", "+\t}"]}], "num": 8945}