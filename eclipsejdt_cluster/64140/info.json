{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "484d33c33c164610d22a32c82d3bde26", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29432084e3b44968af863060c289a0d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " protected void consumeClassInstanceCreationExpressionQualified()", "signatureAfterChange": " protected void consumeClassInstanceCreationExpressionQualified()", "diff": ["-\texpressionLengthPtr--;", "+\tthis.expressionLengthPtr--;", "-\t\t(QualifiedAllocationExpression) expressionStack[expressionPtr--]; ", "-\tqae.enclosingInstance = expressionStack[expressionPtr];", "-\texpressionStack[expressionPtr] = qae;", "+\t\t(QualifiedAllocationExpression) this.expressionStack[this.expressionPtr--]; ", "+\tqae.enclosingInstance = this.expressionStack[this.expressionPtr];", "+\tthis.expressionStack[this.expressionPtr] = qae;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a0fdabe6ad0ec7710eed5ef55b105d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": " protected void consumeEqualityExpression(int op)", "signatureAfterChange": " protected void consumeEqualityExpression(int op)", "diff": ["-\texpressionPtr--;", "-\texpressionLengthPtr--;", "-\texpressionStack[expressionPtr] =", "+\tthis.expressionPtr--;", "+\tthis.expressionLengthPtr--;", "+\tthis.expressionStack[this.expressionPtr] =", "-\t\t\texpressionStack[expressionPtr],", "-\t\t\texpressionStack[expressionPtr + 1],", "+\t\t\tthis.expressionStack[this.expressionPtr],", "+\t\t\tthis.expressionStack[this.expressionPtr + 1],"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98832c614f7afb265f5c8f6942e8518e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "e6e8c555a7d6f504d4ea246c591d5bb3f080d438", "commitAfterChange": "3316f207e855c46fb5e805791239fa37620ca8c4", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 16, "signatureBeforeChange": " private synchronized HashtableOfObject readCategoryTable(char[] categoryName, boolean readDocNumbers) throws IOException", "signatureAfterChange": " private synchronized HashtableOfObject readCategoryTable(char[] categoryName, boolean readDocNumbers) throws IOException", "diff": ["-\tDataInputStream stream = new DataInputStream(new BufferedInputStream(new FileInputStream(getIndexFile()), 2048));", "+\tDataInputStream stream = new DataInputStream(new BufferedInputStream(new FileInputStream(this.indexFile), 2048));", "-\t\t\t\tSystem.err.println(\"file = \"+getIndexFile()); //$NON-NLS-1$", "+\t\t\t\tSystem.err.println(\"file = \"+this.indexFile); //$NON-NLS-1$", "-\t\t\tSystem.err.println(\"file = \"+getIndexFile()); //$NON-NLS-1$", "+\t\t\tSystem.err.println(\"file = \"+this.indexFile); //$NON-NLS-1$", "-\t\tthis.categoryTables.put(categoryName, categoryTable);", "+\t\tthis.categoryTables.put(INTERNED_CATEGORY_NAMES.get(categoryName), categoryTable);", "-\t\tthis.cachedCategoryName = categoryTable.elementSize < 10000 ? categoryName : null;", "+\t\tthis.cachedCategoryName = categoryTable.elementSize < 20000 ? categoryName : null;", "-\t\tstream = new DataInputStream(new BufferedInputStream(new FileInputStream(getIndexFile()), 2048));", "+\t\tstream = new DataInputStream(new BufferedInputStream(new FileInputStream(this.indexFile), 2048));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aadd5cb616ef796524046195ec145e9c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodPattern.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public MethodPattern( \tboolean findDeclarations, \tboolean findReferences, \tchar[] selector,  \tchar[] declaringQualification, \tchar[] declaringSimpleName,\t \tchar[] returnQualification,  \tchar[] returnSimpleName, \tchar[][] parameterQualifications,  \tchar[][] parameterSimpleNames, \tIType declaringType, \tint matchRule)", "signatureAfterChange": " public MethodPattern( \tboolean findDeclarations, \tboolean findReferences, \tchar[] selector,  \tchar[] declaringQualification, \tchar[] declaringSimpleName,\t \tchar[] returnQualification,  \tchar[] returnSimpleName, \tchar[][] parameterQualifications,  \tchar[][] parameterSimpleNames, \tIType declaringType, \tint matchRule)", "diff": ["-\tthis.selector = (isCaseSensitive() || isCamelCase())  ? selector : CharOperation.toLowerCase(selector);", "-\tthis.declaringQualification = isCaseSensitive() ? declaringQualification : CharOperation.toLowerCase(declaringQualification);", "-\tthis.declaringSimpleName = isCaseSensitive() ? declaringSimpleName : CharOperation.toLowerCase(declaringSimpleName);", "-\tthis.returnQualification = isCaseSensitive() ? returnQualification : CharOperation.toLowerCase(returnQualification);", "-\tthis.returnSimpleName = isCaseSensitive() ? returnSimpleName : CharOperation.toLowerCase(returnSimpleName);", "+\tthis.selector = (this.isCaseSensitive || this.isCamelCase) ? selector : CharOperation.toLowerCase(selector);", "+\tthis.declaringQualification = this.isCaseSensitive ? declaringQualification : CharOperation.toLowerCase(declaringQualification);", "+\tthis.declaringSimpleName = this.isCaseSensitive ? declaringSimpleName : CharOperation.toLowerCase(declaringSimpleName);", "+\tthis.returnQualification = this.isCaseSensitive ? returnQualification : CharOperation.toLowerCase(returnQualification);", "+\tthis.returnSimpleName = this.isCaseSensitive ? returnSimpleName : CharOperation.toLowerCase(returnSimpleName);", "-\t\t\tthis.parameterQualifications[i] = isCaseSensitive() ? parameterQualifications[i] : CharOperation.toLowerCase(parameterQualifications[i]);", "-\t\t\tthis.parameterSimpleNames[i] = isCaseSensitive() ? parameterSimpleNames[i] : CharOperation.toLowerCase(parameterSimpleNames[i]);", "+\t\t\tthis.parameterQualifications[i] = this.isCaseSensitive ? parameterQualifications[i] : CharOperation.toLowerCase(parameterQualifications[i]);", "+\t\t\tthis.parameterSimpleNames[i] = this.isCaseSensitive ? parameterSimpleNames[i] : CharOperation.toLowerCase(parameterSimpleNames[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d99608c4bad0c7450b8b3cb4e83dcf60", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " protected void consumeCastExpressionLL1()", "signatureAfterChange": " protected void consumeCastExpressionLL1()", "diff": ["-\texpressionPtr--;", "-\texpressionStack[expressionPtr] = ", "+\tthis.expressionPtr--;", "+\tthis.expressionStack[this.expressionPtr] = ", "-\t\t\texp=expressionStack[expressionPtr+1] ,", "-\t\t\tgetTypeReference(expressionStack[expressionPtr]));", "-\texpressionLengthPtr -- ;", "+\t\t\texp=this.expressionStack[this.expressionPtr+1] ,", "+\t\t\tgetTypeReference(this.expressionStack[this.expressionPtr]));", "+\tthis.expressionLengthPtr -- ;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de2f5bbf7b2f73ffa2e0cb0877d49e8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": "  protected void consumeInstanceOfExpression(int op)", "signatureAfterChange": "  protected void consumeInstanceOfExpression(int op)", "diff": ["-\texpressionStack[expressionPtr] = exp =", "+\tthis.expressionStack[this.expressionPtr] = exp =", "-\t\t\texpressionStack[expressionPtr],", "-\t\t\tgetTypeReference(intStack[intPtr--]),", "+\t\t\tthis.expressionStack[this.expressionPtr],", "+\t\t\tgetTypeReference(this.intStack[this.intPtr--]),", "-\t\texp.sourceEnd = scanner.startPosition - 1;", "+\t\texp.sourceEnd = this.scanner.startPosition - 1;"]}], "num": 64140}