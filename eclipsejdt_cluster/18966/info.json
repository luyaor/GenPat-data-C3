{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "227cdd220ef914ebb5a909d3270fb70e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba1dafdd8433c89cf14c79c58c0c74a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ImportRewriteAnalyzer.java", "commitBeforeChange": "cb1229e517a2018e5263ed249b199ae2a321da49", "commitAfterChange": "4732df192beaa38106d940c4bfeefb54a9e4a1cf", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  \tprivate int getPackageStatementEndPos(CompilationUnit root)", "signatureAfterChange": "  \tprivate int getPackageStatementEndPos(CompilationUnit root)", "diff": ["-\t\t\t\tthis.flags|= F_NEEDS_TRAILING_DELIM;", "-\t\t\t\tif (firstTypePos == afterPackageStatementPos) {", "-\t\t\t\t\tthis.flags|= F_NEEDS_LEADING_DELIM;", "+\t\t\t\tif (firstTypePos <= afterPackageStatementPos) {", "+\t\t\t\t\tthis.flags|= F_NEEDS_TRAILING_DELIM;", "+\t\t\t\t\tif (firstTypePos == afterPackageStatementPos) {", "+\t\t\t\t\t\tthis.flags|= F_NEEDS_LEADING_DELIM;", "+\t\t\t\t\t}", "+\t\t\t\t\treturn firstTypePos;", "-\t\t\t\treturn firstTypePos;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7fee9003d6e397ec7320fc4cd67c432", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "20ba2adddd9acb8b30c82e8f2340c23092f7b231", "commitAfterChange": "71af1339250e9bbfcdc32b243ce0a3939731748f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\tTypeBinding unboxedIfTrueType = valueIfTrueType.isBaseType() ? valueIfTrueType : env.computeBoxingType(valueIfTrueType);", "-\t\t\tTypeBinding unboxedIfFalseType = valueIfFalseType.isBaseType() ? valueIfFalseType : env.computeBoxingType(valueIfFalseType);", "-\t\t\tif (unboxedIfTrueType.isNumericType() && unboxedIfFalseType.isNumericType()) {", "-\t\t\t\tvalueIfTrueType = unboxedIfTrueType;", "-\t\t\t\tvalueIfFalseType = unboxedIfFalseType;", "-\t\t\t} else if (valueIfTrueType.isBaseType()) {", "-\t\t\t\tif ((valueIfTrueType == NullBinding) == valueIfFalseType.isBaseType()) {  // bool ? null : 12 --> Integer", "-\t\t\t\t\tvalueIfFalseType = env.computeBoxingType(valueIfFalseType);", "-\t\t\t\t}", "-\t\t\t} else if (valueIfFalseType.isBaseType()) {", "-\t\t\t\tif ((valueIfFalseType == NullBinding) == valueIfTrueType.isBaseType()) {  // bool ? 12 : null --> Integer", "-\t\t\t\t\tvalueIfTrueType = env.computeBoxingType(valueIfTrueType);", "+\t\t\tif (valueIfTrueType != valueIfFalseType) {", "+\t\t\t\tTypeBinding unboxedIfTrueType = valueIfTrueType.isBaseType() ? valueIfTrueType : env.computeBoxingType(valueIfTrueType);", "+\t\t\t\tTypeBinding unboxedIfFalseType = valueIfFalseType.isBaseType() ? valueIfFalseType : env.computeBoxingType(valueIfFalseType);", "+\t\t\t\tif (unboxedIfTrueType.isNumericType() && unboxedIfFalseType.isNumericType()) {", "+\t\t\t\t\tvalueIfTrueType = unboxedIfTrueType;", "+\t\t\t\t\tvalueIfFalseType = unboxedIfFalseType;", "+\t\t\t\t} else if (valueIfTrueType.isBaseType()) {", "+\t\t\t\t\tif ((valueIfTrueType == NullBinding) == valueIfFalseType.isBaseType()) {  // bool ? null : 12 --> Integer", "+\t\t\t\t\t\tvalueIfFalseType = env.computeBoxingType(valueIfFalseType);", "+\t\t\t\t\t}", "+\t\t\t\t} else if (valueIfFalseType.isBaseType()) {", "+\t\t\t\t\tif ((valueIfFalseType == NullBinding) == valueIfTrueType.isBaseType()) {  // bool ? 12 : null --> Integer", "+\t\t\t\t\t\tvalueIfTrueType = env.computeBoxingType(valueIfTrueType);", "+\t\t\t\t\t}"]}], "num": 18966}