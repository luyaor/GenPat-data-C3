{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b18be0a0ca7a6075e9bd4e1188958293", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69d338f41be8711e97c5053783bebdff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "3ed504d6c06a625889aa0edc452a9c28987bfba5", "commitAfterChange": "832a3611a78cac4a94a3a05c5dd601ccfc7de769", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 24, "signatureBeforeChange": "\r private boolean isOnClasspath() throws JavaModelException", "signatureAfterChange": "\r protected boolean isOnClasspath()", "diff": ["- */\r", "-private boolean isOnClasspath() throws JavaModelException {\r", "-\tIPath path = this.getPath();\r", "-\tIJavaProject project = this.getJavaProject();\r", "-\r", "-\t// special permission granted to project binary output (when using old builder)\r", "-\tif (!JavaModelManager.USING_NEW_BUILDER && project.getOutputLocation().equals(path)) { \r", "-\t\treturn true;\r", "-\t}\r", "-\t\r", "-\t// check package fragment root on classpath of its project\r", "-\tIClasspathEntry[] classpath = project.getResolvedClasspath(true);\t\r", "-\tfor (int i = 0, length = classpath.length; i < length; i++) {\r", "-\t\tIClasspathEntry entry = classpath[i];\r", "-\t\tif (entry.getPath().equals(path)) {\r", "-\t\t\treturn true;\r", "-\t\t}\r", "-\t}\r", "-\treturn false;\r", "-\r", "-}\r", "+ */\r", "+protected boolean isOnClasspath() {\r", "+\r", "+\tIJavaProject project = this.getJavaProject();\r", "+\r", "+\tif (this.getElementType() == IJavaElement.JAVA_PROJECT){\r", "+\t\treturn true;\r", "+\t}\r", "+\t\r", "+\tIPath path = this.getPath();\r", "+\r", "+\ttry {\r", "+\t\t// special permission granted to project binary output (when using old builder)\r", "+\t\tif (!JavaModelManager.USING_NEW_BUILDER && project.getOutputLocation().isPrefixOf(path)) { \r", "+\t\t\treturn true;\r", "+\t\t}\r", "+\t\r", "+\t\t// check package fragment root on classpath of its project\r", "+\t\tIClasspathEntry[] classpath = project.getResolvedClasspath(true);\t\r", "+\t\tfor (int i = 0, length = classpath.length; i < length; i++) {\r", "+\t\t\tIClasspathEntry entry = classpath[i];\r", "+\t\t\tif (entry.getPath().isPrefixOf(path)) {\r", "+\t\t\t\treturn true;\r", "+\t\t\t}\r", "+\t\t}\r", "+\t} catch(JavaModelException e){\r", "+\t\t// could not read classpath, then assume it is outside\r", "+\t}\r", "+\treturn false;\r", "+\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd85415e34ae8444d06df1c74457f958", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "8726985690d5211d83787440cfdc69960f688cd3", "commitAfterChange": "b2bac1f114347c5119b74b76ba91158e0de76647", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tpublic void performPreBuildCheck(\r \t\tIResourceDelta delta,\r \t\tIJavaElement parent)", "signatureAfterChange": "\r \tpublic void performPreBuildCheck(\r \t\tIResourceDelta delta,\r \t\tIJavaElement parent)", "diff": ["-\t\t\t\t\t\t// update cycle markers\r", "-\t\t\t\t\t\tproject.updateCycleMarkers(resolvedClasspath);\r", "+\t\t\t\tif (!this.projectsToUpdate.isEmpty()){\r", "+\t\t\t\t\ttry {\r", "+\t\t\t\t\t\t// update all cycle markers\r", "+\t\t\t\t\t\tJavaProject.updateAllCycleMarkers();\r", "+\t\t\t\t\t} catch (JavaModelException e) {\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\t\t\t\t\r"]}], "num": 33047}