{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff367a27e0ddfe9025487932be88d4bc", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1682d34a4d3c10292566e496ed0be715", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void testBug71279() throws CoreException", "signatureAfterChange": " \tpublic void testBug71279() throws CoreException", "diff": ["-\t\tICompilationUnit workingCopy = null;", "-\t\ttry {", "-\t\t\tworkingCopy = getWorkingCopy(\"/JavaSearchBugs/src/b71279/AA.java\",", "-\t\t\t\t\"package b71279;\\n\" + ", "-\t\t\t\t\"public class AA {\\n\" + ", "-\t\t\t\t\"\tUnknown ref;\\n\" + ", "-\t\t\t\t\"}\\n\"", "-\t\t\t\t);", "-\t\t\tnew SearchEngine().searchDeclarationsOfReferencedTypes(workingCopy, result, null);", "-\t\t\tassertSearchResults(", "-\t\t\t\t\"Starting search...\\n\" + ", "-\t\t\t\t\"Done searching.\",", "-\t\t\t\tresult);", "-\t\t}", "-\t\tfinally {", "-\t\t\tif (workingCopy != null)", "-\t\t\t\tworkingCopy.discardWorkingCopy();", "-\t\t}", "+\t\tworkingCopies = new ICompilationUnit[1];", "+\t\tworkingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b71279/AA.java\",", "+\t\t\t\"package b71279;\\n\" + ", "+\t\t\t\"public class AA {\\n\" + ", "+\t\t\t\"\tUnknown ref;\\n\" + ", "+\t\t\t\"}\\n\"", "+\t\t\t);", "+\t\tnew SearchEngine(workingCopies).searchDeclarationsOfReferencedTypes(workingCopies[0], result, null);", "+\t\tassertSearchResults(", "+\t\t\t\"Starting search...\\n\" + ", "+\t\t\t\"Done searching.\",", "+\t\t\tresult);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44b4d87f6855d16a2e9d9f5cdcf5dbb7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic void testBug79803() throws CoreException", "signatureAfterChange": " \tpublic void testBug79803() throws CoreException", "diff": ["-\t\tICompilationUnit workingCopy = null;", "-\t\ttry {", "-\t\t\tworkingCopy = getWorkingCopy(\"/JavaSearchBugs/src/b79803/A.java\",", "-\t\t\t\t\"package b79803;\\n\" + ", "-\t\t\t\t\"class A<A> {\\n\" + ", "-\t\t\t\t\"    A a;\\n\" + ", "-\t\t\t\t\"    b79803.A pa= new b79803.A();\\n\" + ", "-\t\t\t\t\"}\\n\"\t);", "-\t\t\t// search for first and second method should both return 2 inaccurate matches", "-\t\t\tIType type = workingCopy.getType(\"A\");", "-\t\t\tsearch(type,", "-\t\t\t\tREFERENCES,", "-\t\t\t\tSearchPattern.R_CASE_SENSITIVE|SearchPattern.R_ERASURE_MATCH,", "-\t\t\t\tgetJavaSearchScopeBugs(\"b79803\", false),", "-\t\t\t\tthis.resultCollector);", "-\t\t\tassertSearchResults(", "-\t\t\t\t\"src/b79803/A.java b79803.A.pa [b79803.A] EXACT_MATCH\\n\" + ", "-\t\t\t\t\"src/b79803/A.java b79803.A.pa [b79803.A] EXACT_MATCH\"", "-\t\t\t);", "-\t\t}", "-\t\tfinally {", "-\t\t\tif (workingCopy != null)", "-\t\t\t\tworkingCopy.discardWorkingCopy();", "-\t\t}", "+\t\tworkingCopies = new ICompilationUnit[1];", "+\t\tworkingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b79803/A.java\",", "+\t\t\t\"package b79803;\\n\" + ", "+\t\t\t\"class A<A> {\\n\" + ", "+\t\t\t\"    A a;\\n\" + ", "+\t\t\t\"    b79803.A pa= new b79803.A();\\n\" + ", "+\t\t\t\"}\\n\"\t);", "+\t\tIType type = workingCopies[0].getType(\"A\");", "+\t\tsearch(type, REFERENCES, ERASURE_RULE);", "+\t\tassertSearchResults(", "+\t\t\t\"src/b79803/A.java b79803.A.pa [b79803.A] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/b79803/A.java b79803.A.pa [b79803.A] EXACT_MATCH\"", "+\t\t);", "+\t\t// keep working copies for next test", "+\t\tdiscard = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "617773638ff6d1cbe4cc49b7c3dec5a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void testBug41018() throws CoreException", "signatureAfterChange": " \tpublic void testBug41018() throws CoreException", "diff": ["-\t\tICompilationUnit workingCopy = null;", "+\t\tworkingCopies = new ICompilationUnit[1];", "-\t\t\tworkingCopy = getWorkingCopy(\"/JavaSearchBugs/src/b41018/A.java\",", "+\t\t\tworkingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b41018/A.java\",", "-\t\t\tIType type = workingCopy.getType(\"A\");", "+\t\t\tIType type = workingCopies[0].getType(\"A\");", "-\t\t\tif (workingCopy != null)", "-\t\t\t\tworkingCopy.discardWorkingCopy();", "+\t\t\tdiscardWorkingCopies(workingCopies);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "719a064781e308b9406a8afb6deed036", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tpublic void testBug82088method() throws CoreException", "signatureAfterChange": " \tpublic void testBug82088method() throws CoreException", "diff": ["-\t\tICompilationUnit workingCopy = null;", "-\t\ttry {", "-\t\t\tworkingCopy = getWorkingCopy(\"/JavaSearchBugs/src/b82088/m/Test.java\",", "-\t\t\t\t\"package b82088.m;\\n\" +", "-\t\t\t\t\"/**\\n\" + ", "-\t\t\t\t\" * @see #setA(A)\\n\" + ", "-\t\t\t\t\" */\\n\" + ", "-\t\t\t\t\"public class Test {\\n\" + ", "-\t\t\t\t\"\tA a;\\n\" + ", "-\t\t\t\t\"\tpublic void setA(A a) {\\n\" + ", "-\t\t\t\t\"\t\tthis.a = a;\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"class A {}\\n\"", "-\t\t\t\t);", "-\t\t\tIType type = workingCopy.getType(\"A\");", "-\t\t\tsearch(type, REFERENCES);", "-\t\t\tassertSearchResults(", "-\t\t\t\t\"src/b82088/m/Test.java b82088.m.Test [A] EXACT_MATCH\\n\" + ", "-\t\t\t\t\"src/b82088/m/Test.java b82088.m.Test.a [A] EXACT_MATCH\\n\" + ", "-\t\t\t\t\"src/b82088/m/Test.java void b82088.m.Test.setA(A) [A] EXACT_MATCH\"", "+\t\tworkingCopies = new ICompilationUnit[1];", "+\t\tworkingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b82088/m/Test.java\",", "+\t\t\t\"package b82088.m;\\n\" +", "+\t\t\t\"/**\\n\" + ", "+\t\t\t\" * @see #setA(A)\\n\" + ", "+\t\t\t\" */\\n\" + ", "+\t\t\t\"public class Test {\\n\" + ", "+\t\t\t\"\tA a;\\n\" + ", "+\t\t\t\"\tpublic void setA(A a) {\\n\" + ", "+\t\t\t\"\t\tthis.a = a;\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"class A {}\\n\"", "-\t\t}", "-\t\tfinally {", "-\t\t\tif (workingCopy != null)", "-\t\t\t\tworkingCopy.discardWorkingCopy();", "-\t\t}", "+\t\tIType type = workingCopies[0].getType(\"A\");", "+\t\tsearch(type, REFERENCES);", "+\t\tassertSearchResults(", "+\t\t\t\"src/b82088/m/Test.java b82088.m.Test [A] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/b82088/m/Test.java b82088.m.Test.a [A] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/b82088/m/Test.java void b82088.m.Test.setA(A) [A] EXACT_MATCH\"", "+\t\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4b7c41d7ff11485ea78f92303384f65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic void testBug79267() throws CoreException", "signatureAfterChange": " \tpublic void testBug79267() throws CoreException", "diff": ["-\t\tICompilationUnit workingCopy = null;", "-\t\ttry {", "-\t\t\tworkingCopy = getWorkingCopy(\"/JavaSearchBugs/src/b79267/Test.java\",", "-\t\t\t\t\"package b79267;\\n\" + ", "-\t\t\t\t\"public class Test {\\n\" + ", "-\t\t\t\t\"\tprivate static final X<String, String> BEFORE\t= new X<String, String>(4);\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"\tstatic {\\n\" + ", "-\t\t\t\t\"\t\tBEFORE.put(\\\"key1\\\",\\\"value1\\\");\\n\" + ", "-\t\t\t\t\"\t\tBEFORE.put(\\\"key2\\\",\\\"value2\\\");\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\t\\n\" + ", "-\t\t\t\t\"\tprivate static final X<Y, Object>\tobjectToPrimitiveMap\t= new X<Y, Object>(8);\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"\tstatic {\\n\" + ", "-\t\t\t\t\"\t\tobjectToPrimitiveMap.put(new Y<Object>(new Object()), new Object());\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"class X<T, U> {\\n\" + ", "-\t\t\t\t\"\tX(int x) {}\\n\" + ", "-\t\t\t\t\"\tvoid put(T t, U u) {}\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"class Y<T> {\\n\" + ", "-\t\t\t\t\"\tY(T t) {}\\n\" + ", "-\t\t\t\t\"}\\n\");", "-\t\t\t// search field references", "-\t\t\tIType type = workingCopy.getType(\"Test\");", "-\t\t\tIField field = type.getField(\"BEFORE\");", "-\t\t\tsearch(field, REFERENCES);", "-\t\t\tfield = type.getField(\"objectToPrimitiveMap\");", "-\t\t\tsearch(field, REFERENCES);", "-\t\t\tassertSearchResults(", "-\t\t\t\t\"src/b79267/Test.java b79267.Test.static {} [BEFORE] EXACT_MATCH\\n\" + ", "-\t\t\t\t\"src/b79267/Test.java b79267.Test.static {} [BEFORE] EXACT_MATCH\\n\" + ", "-\t\t\t\t\"src/b79267/Test.java b79267.Test.static {} [objectToPrimitiveMap] EXACT_MATCH\",", "-\t\t\t\tresultCollector);", "-\t\t}", "-\t\tfinally {", "-\t\t\tif (workingCopy != null)", "-\t\t\t\tworkingCopy.discardWorkingCopy();", "-\t\t}", "+\t\tworkingCopies = new ICompilationUnit[1];", "+\t\tworkingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b79267/Test.java\",", "+\t\t\t\"package b79267;\\n\" + ", "+\t\t\t\"public class Test {\\n\" + ", "+\t\t\t\"\tprivate static final X<String, String> BEFORE\t= new X<String, String>(4);\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tstatic {\\n\" + ", "+\t\t\t\"\t\tBEFORE.put(\\\"key1\\\",\\\"value1\\\");\\n\" + ", "+\t\t\t\"\t\tBEFORE.put(\\\"key2\\\",\\\"value2\\\");\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\t\\n\" + ", "+\t\t\t\"\tprivate static final X<Y, Object>\tobjectToPrimitiveMap\t= new X<Y, Object>(8);\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tstatic {\\n\" + ", "+\t\t\t\"\t\tobjectToPrimitiveMap.put(new Y<Object>(new Object()), new Object());\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"class X<T, U> {\\n\" + ", "+\t\t\t\"\tX(int x) {}\\n\" + ", "+\t\t\t\"\tvoid put(T t, U u) {}\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"class Y<T> {\\n\" + ", "+\t\t\t\"\tY(T t) {}\\n\" + ", "+\t\t\t\"}\\n\");", "+\t\t// search field references", "+\t\tIType type = workingCopies[0].getType(\"Test\");", "+\t\tIField field = type.getField(\"BEFORE\");", "+\t\tsearch(field, REFERENCES);", "+\t\tfield = type.getField(\"objectToPrimitiveMap\");", "+\t\tsearch(field, REFERENCES);", "+\t\tassertSearchResults(", "+\t\t\t\"src/b79267/Test.java b79267.Test.static {} [BEFORE] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/b79267/Test.java b79267.Test.static {} [BEFORE] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/b79267/Test.java b79267.Test.static {} [objectToPrimitiveMap] EXACT_MATCH\"", "+\t\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5962e802d32911f085794d06d6a3245", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tpublic void testBug81084b() throws CoreException, JavaModelException", "signatureAfterChange": " \tpublic void testBug81084b() throws CoreException, JavaModelException", "diff": ["-\t}", "-\tpublic void testBug81084b() throws CoreException, JavaModelException {", "-\t\tICompilationUnit workingCopy = null;", "-\t\ttry {", "-\t\t\tworkingCopy = getWorkingCopy(\"/JavaSearchBugs/src/b81084b/Test.java\",", "-\t\t\t\t\"package b81084b;\\n\" + ", "-\t\t\t\t\"class List<E> {}\\n\" + ", "-\t\t\t\t\"public class Test {\\n\" + ", "-\t\t\t\t\"\tclass Element{}\\n\" + ", "-\t\t\t\t\"\tstatic class Inner {\\n\" + ", "-\t\t\t\t\"\t\tprivate final List<? extends Element> fListb1;\\n\" + ", "-\t\t\t\t\"\t\tprivate final List<? extends Test.Element> fListb2;\\n\" + ", "-\t\t\t\t\"\t\tpublic Inner(List<Element> list) {\\n\" + ", "-\t\t\t\t\"\t\t\tfListb1 = list;\\n\" + ", "-\t\t\t\t\"\t\t\tfListb2 = list;\\n\" + ", "-\t\t\t\t\"\t\t}\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"}\\n\"", "-\t\t\t\t);", "-\t\t\tIType type = workingCopy.getType(\"Test\").getType(\"Inner\");", "-\t\t\tIField field1 = type.getField(\"fListb1\");", "-\t\t\tsearch(field1, REFERENCES);", "-\t\t\tIField field2 = type.getField(\"fListb2\");", "-\t\t\tsearch(field2, REFERENCES);", "-\t\t\tassertSearchResults(", "-\t\t\t\t\"src/b81084b/Test.java b81084b.Test$Inner(List<Element>) [fListb1] EXACT_MATCH\\n\" + ", "-\t\t\t\t\"src/b81084b/Test.java b81084b.Test$Inner(List<Element>) [fListb2] EXACT_MATCH\",", "-\t\t\t\tthis.resultCollector);", "-\t\t}", "-\t\tfinally {", "-\t\t\tif (workingCopy != null)", "-\t\t\t\tworkingCopy.discardWorkingCopy();", "-\t\t}", "-\t}", "+\t}", "+\tpublic void testBug81084b() throws CoreException, JavaModelException {", "+\t\tworkingCopies = new ICompilationUnit[1];", "+\t\tworkingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b81084b/Test.java\",", "+\t\t\t\"package b81084b;\\n\" + ", "+\t\t\t\"class List<E> {}\\n\" + ", "+\t\t\t\"public class Test {\\n\" + ", "+\t\t\t\"\tclass Element{}\\n\" + ", "+\t\t\t\"\tstatic class Inner {\\n\" + ", "+\t\t\t\"\t\tprivate final List<? extends Element> fListb1;\\n\" + ", "+\t\t\t\"\t\tprivate final List<? extends Test.Element> fListb2;\\n\" + ", "+\t\t\t\"\t\tpublic Inner(List<Element> list) {\\n\" + ", "+\t\t\t\"\t\t\tfListb1 = list;\\n\" + ", "+\t\t\t\"\t\t\tfListb2 = list;\\n\" + ", "+\t\t\t\"\t\t}\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\\n\"", "+\t\t\t);", "+\t\t// search element patterns", "+\t\tIType type = workingCopies[0].getType(\"Test\").getType(\"Inner\");", "+\t\tIField field1 = type.getField(\"fListb1\");", "+\t\tsearch(field1, REFERENCES);", "+\t\tIField field2 = type.getField(\"fListb2\");", "+\t\tsearch(field2, REFERENCES);", "+\t\tassertSearchResults(", "+\t\t\t\"src/b81084b/Test.java b81084b.Test$Inner(List<Element>) [fListb1] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/b81084b/Test.java b81084b.Test$Inner(List<Element>) [fListb2] EXACT_MATCH\"", "+\t\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f08355ee05c0883329051e6f9373332e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 49, "signatureBeforeChange": " \tpublic void testBug82088constructor() throws CoreException", "signatureAfterChange": " \tpublic void testBug82088constructor() throws CoreException", "diff": ["-\t\tICompilationUnit workingCopy = null;", "-\t\ttry {", "-\t\t\tworkingCopy = getWorkingCopy(\"/JavaSearchBugs/src/b82088/c/Test.java\",", "-\t\t\t\t\"package b82088.c;\\n\" +", "-\t\t\t\t\"/**\\n\" + ", "-\t\t\t\t\" * @see #Test(A)\\n\" + ", "-\t\t\t\t\" */\\n\" + ", "-\t\t\t\t\"public class Test {\\n\" + ", "-\t\t\t\t\"\tA a;\\n\" + ", "-\t\t\t\t\"\tTest(A a) {\\n\" + ", "-\t\t\t\t\"\t\tthis.a = a;\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"class A {}\\n\"", "-\t\t\t\t);", "-\t\t\tIType type = workingCopy.getType(\"A\");", "-\t\t\tsearch(type, REFERENCES);", "-\t\t\tassertSearchResults(", "-\t\t\t\t\"src/b82088/c/Test.java b82088.c.Test [A] EXACT_MATCH\\n\" + ", "-\t\t\t\t\"src/b82088/c/Test.java b82088.c.Test.a [A] EXACT_MATCH\\n\" + ", "-\t\t\t\t\"src/b82088/c/Test.java b82088.c.Test(A) [A] EXACT_MATCH\"", "+\t\tworkingCopies = new ICompilationUnit[1];", "+\t\tworkingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b82088/c/Test.java\",", "+\t\t\t\"package b82088.c;\\n\" +", "+\t\t\t\"/**\\n\" + ", "+\t\t\t\" * @see #Test(A)\\n\" + ", "+\t\t\t\" */\\n\" + ", "+\t\t\t\"public class Test {\\n\" + ", "+\t\t\t\"\tA a;\\n\" + ", "+\t\t\t\"\tTest(A a) {\\n\" + ", "+\t\t\t\"\t\tthis.a = a;\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"class A {}\\n\"", "-\t\t}", "-\t\tfinally {", "-\t\t\tif (workingCopy != null)", "-\t\t\t\tworkingCopy.discardWorkingCopy();", "-\t\t}", "+\t\tIType type = workingCopies[0].getType(\"A\");", "+\t\tsearch(type, REFERENCES);", "+\t\tassertSearchResults(", "+\t\t\t\"src/b82088/c/Test.java b82088.c.Test [A] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/b82088/c/Test.java b82088.c.Test.a [A] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/b82088/c/Test.java b82088.c.Test(A) [A] EXACT_MATCH\"", "+\t\t);"]}], "num": 44739}