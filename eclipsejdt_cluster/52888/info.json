{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5b2233359220e16a3311e3a91d77421f", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3153a5ec01f9e122200d110d721f129", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImplicitNullAnnotationVerifier.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void checkImplicitNullAnnotations(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod, boolean complain, Scope scope)", "signatureAfterChange": " \tpublic void checkImplicitNullAnnotations(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod, boolean complain, Scope scope)", "diff": ["-\t\t\t\t\t\t\tif (!currentMethod.returnType.isBaseType())", "-\t\t\t\t\t\t\t\tcurrentMethod.returnType = scope.environment()", "-\t\t\t\t\t\t\t\t\t\t.createAnnotatedType(currentMethod.returnType, tagBits);", "+\t\t\t\t\t\t\tif (!currentMethod.returnType.isBaseType()) {", "+\t\t\t\t\t\t\t\t// TODO(Stephan: Synthesize AnnotationBinding[] and call LE#createAnnotatedType(TB, AB[]);", "+\t\t\t\t\t\t\t\t// currentMethod.returnType = scope.environment()", "+\t\t\t\t\t\t\t\t//\t\t.createAnnotatedType(currentMethod.returnType, tagBits);", "+\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfa4cb81453ecf5ee7926d7b8089af71", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImplicitNullAnnotationVerifier.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tvoid applyReturnNullBits(MethodBinding method, long nullnessBits, LookupEnvironment environment)", "signatureAfterChange": "  \tvoid applyReturnNullBits(MethodBinding method, long nullnessBits, LookupEnvironment environment)", "diff": ["-\t\t\tif (!method.returnType.isBaseType())", "-\t\t\t\tmethod.returnType = environment.createAnnotatedType(method.returnType, nullnessBits);", "+\t\t\tif (!method.returnType.isBaseType()) {", "+\t\t\t\t// TODO(Stephan: Synthesize AnnotationBinding[] and call LE#createAnnotatedType(TB, AB[]);", "+\t\t\t\t//\tmethod.returnType = environment.createAnnotatedType(method.returnType, nullnessBits);", "+\t\t\t}"]}], "num": 52888}