{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "12b07331e01cd76116f384aaaafb3515", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "021aa604a1c5ec6b7e6bb4fc705f1ca4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "33e03339ed2881c9f793c3a49497633bbac5c8a8", "commitAfterChange": "09c3f545375b31028657f0b8044c5cbcb5324abc", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": " private boolean checkNameCompletion()", "signatureAfterChange": " private boolean checkNameCompletion()", "diff": ["+\tif (this.hasUnusedModifiers &&", "+\t\t\tthis.assistNode instanceof CompletionOnSingleNameReference) {", "+\t\t((CompletionOnSingleNameReference)this.assistNode).isPrecededByModifiers = true;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e50ca5e4cd2c90cddd66c746c3ba89f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LabeledStatement.java", "commitBeforeChange": "a5822e4abe91eaf0fe1933bbc495dc0385983f17", "commitAfterChange": "104e672748818fb3397c541d035cd02e71d1053c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": " \t \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["+\t\t\tif ((this.bits & ASTNode.LabelUsed) == 0) {", "+\t\t\t\tcurrentScope.problemReporter().unusedLabel(this);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47b1842d1484e7bd07b6cd6c686b6339", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/compiler/ReconcileContext.java", "commitBeforeChange": "5a0b16973c5f2b4b1beccfae3f83602332ac3f5d", "commitAfterChange": "4ee57f1aa920ef9dfc0c8991087575befcec8304", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public org.eclipse.jdt.core.dom.CompilationUnit getAST3() throws JavaModelException", "signatureAfterChange": " public org.eclipse.jdt.core.dom.CompilationUnit getAST3() throws JavaModelException", "diff": ["+\t\tif ((this.operation.reconcileFlags & ICompilationUnit.IGNORE_METHOD_BODIES) != 0)", "+\t\t\tparser.ignoreMethodBodies();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7089f6f044af8c9e22d15fb405072838", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/BranchLabel.java", "commitBeforeChange": "8e2ad97d2fb27be4592d31d111bb4c2382942be9", "commitAfterChange": "fb6f5f6d13908d24053dd7274dd328ba3f862bf1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void place()", "signatureAfterChange": " public void place()", "diff": ["-\t\t\t\t// also update the PCs in the related debug attributes", "-\t\t\t\t/* OLD CODE", "-\t\t\t\t\tint index = codeStream.pcToSourceMapSize - 1;", "-\t\t\t\t\t\twhile ((index >= 0) && (codeStream.pcToSourceMap[index][1] == oldPosition)) {", "-\t\t\t\t\t\t\tcodeStream.pcToSourceMap[index--][1] = position;", "-\t\t\t\t\t\t}", "-\t\t\t\t*/", "-\t\t\t\t// Beginning of new code", "+\t\t\t\tif ((this.codeStream.generateAttributes & ClassFileConstants.ATTR_LINES) != 0) {", "+\t\t\t\t\t// we need to remove all entries that is beyond this.position inside the pcToSourcerMap table", "+\t\t\t\t\tthis.codeStream.removeUnusedPcToSourceMapEntries();", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76f820fbc19abcc32cb3fd1f5b020bf3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": "   \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\t\tcodeStream.invokeDynamic(invokeDynamicNumber, argumentsSize, 1, LAMBDA, buffer.toString().toCharArray());", "+\t\tcodeStream.invokeDynamic(invokeDynamicNumber, argumentsSize, 1, LAMBDA, buffer.toString().toCharArray(), ", "+\t\t\t\tthis.isConstructorReference(), (this.lhs instanceof TypeReference? (TypeReference) this.lhs : null), this.typeArguments);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c576558fcd389a870645b0fe29450c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "4877f157b85539b521b1cb2f18fa94bd22a52ae0", "commitAfterChange": "c45031a708344453f01f911278a63ebae41b9cba", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "signatureAfterChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "diff": ["+\t\t\t\t\t} else if ((this.bits & ASTNode.IsCapturedOuterLocal) != 0) {", "+\t\t\t\t\t\tcurrentScope.problemReporter().cannotAssignToFinalOuterLocal(localBinding, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9747339ba23dbc4b2d11b74c5dc5d656", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 392, "methodNumberAfterChange": 392, "signatureBeforeChange": " protected void pushIdentifier()", "signatureAfterChange": " protected void pushIdentifier()", "diff": ["+\tif (this.scanner.gotNonNullTag && this.identifierPtr < 0) {", "+\t\tthis.scanner.gotNonNullTag = false;", "+\t}", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2a5e7f9556ffd5e0bce78f7d776d457", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "3e46de81fd9b6212e2fd963b5eb609700fda2ced", "commitAfterChange": "a96aa9c23005bae79eeab94b73fb31e145f5ba7a", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "\r \tprivate int elementType(IResource res, int kind, int flags, int parentType, boolean isPkgFragmentRoot)", "signatureAfterChange": "\r \tprivate int elementType(IResource res, int kind, int flags, int parentType, boolean isPkgFragmentRoot)", "diff": ["+\t\t\t\t\t} else if (this.roots.get(res.getFullPath()) != null) {\r", "+\t\t\t\t\t\t// case of proj=src=bin and resource is a jar file on the classpath\r", "+\t\t\t\t\t\treturn IJavaElement.PACKAGE_FRAGMENT_ROOT;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f892ff1db093f5a73aac52afa289362d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/BranchLabel.java", "commitBeforeChange": "f29b09dca66ab204c3bb2a1e977fe4ca8dd4ad74", "commitAfterChange": "1fb945e4a92fc82aaf73ef3f796610d47f6cfaab", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void place()", "signatureAfterChange": " public void place()", "diff": ["+\t\t\t\tif (this.codeStream.lastAbruptCompletion == this.position) {", "+\t\t\t\t\tthis.codeStream.lastAbruptCompletion = -1;", "+\t\t\t\t}"]}], "num": 59451}