{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f17245df790963befa3b5b5e14b927a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4aa345bf377ae62bc960e1bcee86d498", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "31c45831879fb9d166146101d8c06704e7b03918", "commitAfterChange": "4cbee9c4edfca3748d4063d8a7e10ad2054f1b8a", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "  protected void report(SearchMatch match) throws CoreException", "signatureAfterChange": "  protected void report(SearchMatch match) throws CoreException", "diff": ["-\t\t\t\tint length = others==null ? 0 : others.length;", "-\t\t\t\tif (length > 0) {", "-\t\t\t\t\tSystem.out.println(\"\\tOther elements:\"); //$NON-NLS-1$", "-\t\t\t\t\tfor (int i=0; i<length; i++) {", "-\t\t\t\t\t\tJavaElement other = (JavaElement) others[i];", "-\t\t\t\t\t\tSystem.out.println(\"\\t\\t- \"+ other.toStringWithAncestors()); //$NON-NLS-1$", "+\t\t\t\tif (others != null) {", "+\t\t\t\t\tint length = others.length;", "+\t\t\t\t\tif (length > 0) {", "+\t\t\t\t\t\tSystem.out.println(\"\\tOther elements:\"); //$NON-NLS-1$", "+\t\t\t\t\t\tfor (int i=0; i<length; i++) {", "+\t\t\t\t\t\t\tJavaElement other = (JavaElement) others[i];", "+\t\t\t\t\t\t\tSystem.out.println(\"\\t\\t- \"+ other.toStringWithAncestors()); //$NON-NLS-1$", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9240072749254c3d294447c718b373e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "605cc5dd745b7e1d6935bfc34c1be6fcea51b4ab", "commitAfterChange": "03be42bb9ac6b223bea20e29a7b3f31a76dae9e4", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "  protected void report(SearchMatch match) throws CoreException", "signatureAfterChange": "  protected void report(SearchMatch match) throws CoreException", "diff": ["-\t\tif (match instanceof TypeReferenceMatch) {", "+\t\tif (match instanceof ReferenceMatch) {", "-\t\t\t\tTypeReferenceMatch typeRefMatch = (TypeReferenceMatch) match;", "-\t\t\t\tJavaElement local = (JavaElement) typeRefMatch.getLocalElement();", "+\t\t\t\tReferenceMatch refMatch = (ReferenceMatch) match;", "+\t\t\t\tJavaElement local = (JavaElement) refMatch.getLocalElement();", "-\t\t\t\tIJavaElement[] others = typeRefMatch.getOtherElements();", "-\t\t\t\tif (others != null) {", "-\t\t\t\t\tint length = others.length;", "-\t\t\t\t\tif (length > 0) {", "-\t\t\t\t\t\tSystem.out.println(\"\\tOther elements:\"); //$NON-NLS-1$", "-\t\t\t\t\t\tfor (int i=0; i<length; i++) {", "-\t\t\t\t\t\t\tJavaElement other = (JavaElement) others[i];", "-\t\t\t\t\t\t\tSystem.out.println(\"\\t\\t- \"+ other.toStringWithAncestors()); //$NON-NLS-1$", "+\t\t\t\tif (match instanceof TypeReferenceMatch) {", "+\t\t\t\t\tIJavaElement[] others = ((TypeReferenceMatch) refMatch).getOtherElements();", "+\t\t\t\t\tif (others != null) {", "+\t\t\t\t\t\tint length = others.length;", "+\t\t\t\t\t\tif (length > 0) {", "+\t\t\t\t\t\t\tSystem.out.println(\"\\tOther elements:\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\tfor (int i=0; i<length; i++) {", "+\t\t\t\t\t\t\t\tJavaElement other = (JavaElement) others[i];", "+\t\t\t\t\t\t\t\tSystem.out.println(\"\\t\\t- \"+ other.toStringWithAncestors()); //$NON-NLS-1$", "+\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "daa9c7fd6a5c28f32af2d28c6e6a0c0f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "98ad487e103c268099d7117573693243c8d3b8fc", "commitAfterChange": "721a9dcda02493639666143934bddb089e848d18", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 62, "signatureBeforeChange": "  protected void report(SearchMatch match) throws CoreException", "signatureAfterChange": "  protected void report(SearchMatch match) throws CoreException", "diff": ["+\t\t}", "+\t\tif (match instanceof TypeReferenceMatch) {", "+\t\t\ttry {", "+\t\t\t\tTypeReferenceMatch typeRefMatch = (TypeReferenceMatch) match;", "+\t\t\t\tJavaElement local = (JavaElement) typeRefMatch.getLocalElement();", "+\t\t\t\tif (local != null) {", "+\t\t\t\t\tSystem.out.println(\"\\tLocal element: \"+ local.toStringWithAncestors()); //$NON-NLS-1$", "+\t\t\t\t}", "+\t\t\t\tIJavaElement[] others = typeRefMatch.getOtherElements();", "+\t\t\t\tint length = others==null ? 0 : others.length;", "+\t\t\t\tif (length > 0) {", "+\t\t\t\t\tSystem.out.println(\"\\tOther elements:\"); //$NON-NLS-1$", "+\t\t\t\t\tfor (int i=0; i<length; i++) {", "+\t\t\t\t\t\tJavaElement other = (JavaElement) others[i];", "+\t\t\t\t\t\tSystem.out.println(\"\\t\\t- \"+ other.toStringWithAncestors()); //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t} catch (Exception e) {", "+\t\t\t\t// it's just for debug purposes... ignore all exceptions in this area", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd58d5880fa070c1e77eb3209bb6dc2c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/JavaSearchPattern.java", "commitBeforeChange": "31c45831879fb9d166146101d8c06704e7b03918", "commitAfterChange": "4cbee9c4edfca3748d4063d8a7e10ad2054f1b8a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tvoid storeTypeSignaturesAndArguments(IType type)", "signatureAfterChange": " \tvoid storeTypeSignaturesAndArguments(IType type)", "diff": ["-\t\t\t\t\tint length = parameters==null ? 0 : parameters.length;", "-\t\t\t\t\tif (length > 0) {", "-\t\t\t\t\t\thasParameters = true;", "-\t\t\t\t\t\ttypeParameters[ptr] = new char[length][];", "-\t\t\t\t\t\tfor (int i=0; i<length; i++)", "-\t\t\t\t\t\t\ttypeParameters[ptr][i] = Signature.createTypeSignature(parameters[i].getElementName(), false).toCharArray();", "+\t\t\t\t\tif (parameters !=null) {", "+\t\t\t\t\t\tint length = parameters.length;", "+\t\t\t\t\t\tif (length > 0) {", "+\t\t\t\t\t\t\thasParameters = true;", "+\t\t\t\t\t\t\ttypeParameters[ptr] = new char[length][];", "+\t\t\t\t\t\t\tfor (int i=0; i<length; i++)", "+\t\t\t\t\t\t\t\ttypeParameters[ptr][i] = Signature.createTypeSignature(parameters[i].getElementName(), false).toCharArray();", "+\t\t\t\t\t\t}"]}], "num": 51233}