{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6a5853324a2ad40edcf77a6168891280", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64e3a04cd57f150ce67358d6f5452db7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitStructureRequestor.java", "commitBeforeChange": "f8eb13111e85058d6a3b96c5e3a0a3762548a3d5", "commitAfterChange": "3a282cd8b7c83e96465ddc9983742da9604c6a89", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void enterTypeParameter(int declarationStart, char[] name, int nameSourceStart, int nameSourceEnd, char[][] typeParameterBounds)", "signatureAfterChange": " public void enterTypeParameter(int declarationStart, char[] name, int nameSourceStart, int nameSourceEnd, char[][] typeParameterBounds)", "diff": ["-\tparentInfo.addChild(handle);", "+\tif (parentInfo instanceof SourceTypeElementInfo) {", "+\t\tSourceTypeElementInfo elementInfo = (SourceTypeElementInfo) parentInfo;", "+\t\tITypeParameter[] typeParameters = elementInfo.typeParameters;", "+\t\tint length = typeParameters.length;", "+\t\tSystem.arraycopy(typeParameters, 0, typeParameters = new ITypeParameter[length+1], 0, length);", "+\t\ttypeParameters[length] = handle;", "+\t\telementInfo.typeParameters = typeParameters;", "+\t} else {", "+\t\tSourceMethodElementInfo elementInfo = (SourceMethodElementInfo) parentInfo;", "+\t\tITypeParameter[] typeParameters = elementInfo.typeParameters;", "+\t\tint length = typeParameters.length;", "+\t\tSystem.arraycopy(typeParameters, 0, typeParameters = new ITypeParameter[length+1], 0, length);", "+\t\ttypeParameters[length] = handle;", "+\t\telementInfo.typeParameters = typeParameters;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fab3b863b9aa1a3c8733156dc879ed8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/InternalNamingConventions.java", "commitBeforeChange": "01cd32eca444bcd6948bb1f985568a530753506d", "commitAfterChange": "0b99e59f5b8c33dba4fea6bb15ed5a9967aeb172", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic static void suggestVariableNames( \t\t\tint variableKind, \t\t\tint baseNameKind, \t\t\tchar[] baseName, \t\t\tIJavaProject javaProject, \t\t\tint dim, \t\t\tchar[] internalPrefix, \t\t\tchar[][] excluded, \t\t\tboolean evaluateDefault, \t\t\tINamingRequestor requestor)", "signatureAfterChange": "  \tpublic static void suggestVariableNames( \t\t\tint variableKind, \t\t\tint baseNameKind, \t\t\tchar[] baseName, \t\t\tIJavaProject javaProject, \t\t\tint dim, \t\t\tchar[] internalPrefix, \t\t\tchar[][] excluded, \t\t\tboolean evaluateDefault, \t\t\tINamingRequestor requestor)", "diff": ["-\t\t\t\t\t\tSystem.arraycopy(tempName, 0, tempName = new char[length + 2], 0, length);", "-\t\t\t\t\t\ttempName[length-1] = 'I';", "-\t\t\t\t\t\ttempName[length] = 'E';", "-\t\t\t\t\t\ttempName[length+1] = 'S';", "+\t\t\t\t\t\tboolean precededByAVowel = false;", "+\t\t\t\t\t\tif(tempName.length > 1) {", "+\t\t\t\t\t\t\tswitch (tempName[length-2]) {", "+\t\t\t\t\t\t\t\tcase 'A':", "+\t\t\t\t\t\t\t\tcase 'E':", "+\t\t\t\t\t\t\t\tcase 'I':", "+\t\t\t\t\t\t\t\tcase 'O':", "+\t\t\t\t\t\t\t\tcase 'U':", "+\t\t\t\t\t\t\t\t\tprecededByAVowel = true;", "+\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (precededByAVowel) {", "+\t\t\t\t\t\t\tSystem.arraycopy(tempName, 0, tempName = new char[length + 1], 0, length);", "+\t\t\t\t\t\t\ttempName[length] = 'S';", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tSystem.arraycopy(tempName, 0, tempName = new char[length + 2], 0, length);", "+\t\t\t\t\t\t\ttempName[length-1] = 'I';", "+\t\t\t\t\t\t\ttempName[length] = 'E';", "+\t\t\t\t\t\t\ttempName[length+1] = 'S';", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\tSystem.arraycopy(tempName, 0, tempName = new char[length + 2], 0, length);", "-\t\t\t\t\t\ttempName[length-1] = 'i';", "-\t\t\t\t\t\ttempName[length] = 'e';", "-\t\t\t\t\t\ttempName[length+1] = 's';", "+\t\t\t\t\t\tboolean precededByAVowel = false;", "+\t\t\t\t\t\tif(tempName.length > 1) {", "+\t\t\t\t\t\t\tswitch (tempName[length-2]) {", "+\t\t\t\t\t\t\t\tcase 'a':", "+\t\t\t\t\t\t\t\tcase 'e':", "+\t\t\t\t\t\t\t\tcase 'i':", "+\t\t\t\t\t\t\t\tcase 'o':", "+\t\t\t\t\t\t\t\tcase 'u':", "+\t\t\t\t\t\t\t\t\tprecededByAVowel = true;", "+\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (precededByAVowel) {", "+\t\t\t\t\t\t\tSystem.arraycopy(tempName, 0, tempName = new char[length + 1], 0, length);", "+\t\t\t\t\t\t\ttempName[length] = 's';", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tSystem.arraycopy(tempName, 0, tempName = new char[length + 2], 0, length);", "+\t\t\t\t\t\t\ttempName[length-1] = 'i';", "+\t\t\t\t\t\t\ttempName[length] = 'e';", "+\t\t\t\t\t\t\ttempName[length+1] = 's';", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4a2fcada4eca68753323255f777eb6c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "27b04348f6378e421a1a2788716e3b7fc8643774", "commitAfterChange": "f91a77f7dbbae615b9ce90f64f6be8f6d8a36ad5", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "\r \t\r \tprivate char[][] computeNames(char[] sourceName, boolean forArray)", "signatureAfterChange": "\r \t\r \tprivate char[][] computeNames(char[] sourceName, boolean forArray)", "diff": ["-\t\t\t\t\t\tSystem.arraycopy(name, 0, name = new char[length + 1], 0, length);\r", "-\t\t\t\t\t\tname[length] = 's';\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\t\r", "+\t\t\t\t\t\tif (name[length-1] == 's'){\r", "+\t\t\t\t\t\t\tSystem.arraycopy(name, 0, name = new char[length + 2], 0, length);\r", "+\t\t\t\t\t\t\tname[length] = 'e';\r", "+\t\t\t\t\t\t\tname[length+1] = 's';\r", "+\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\tSystem.arraycopy(name, 0, name = new char[length + 1], 0, length);\r", "+\t\t\t\t\t\t\tname[length] = 's';\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t}\t\t\t\t\t\r", "-\t\t\tnames[nameCount++] = CharOperation.toLowerCase(sourceName);\r", "+\t\t\tchar[] name = CharOperation.toLowerCase(sourceName);\r", "+\t\t\tif(forArray) {\r", "+\t\t\t\tint length = name.length;\r", "+\t\t\t\tif (name[length-1] == 's'){\r", "+\t\t\t\t\tSystem.arraycopy(name, 0, name = new char[length + 2], 0, length);\r", "+\t\t\t\t\tname[length] = 'e';\r", "+\t\t\t\t\tname[length+1] = 's';\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\tSystem.arraycopy(name, 0, name = new char[length + 1], 0, length);\r", "+\t\t\t\t\tname[length] = 's';\r", "+\t\t\t\t}\r", "+\t\t\t}\t\t\t\t\t\r", "+\t\t\tnames[nameCount++] = name;\r", "+\t\t\t\r"]}], "num": 70555}