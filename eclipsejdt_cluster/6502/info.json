{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cb5528832fe8d6ed32d5c2f3daab1635", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "833a145b7aa14deb5ce4e2559e3e0aab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetMessageSend.java", "commitBeforeChange": "83b433cefe204b4efddb34a5fec23235369a79e2", "commitAfterChange": "f0ad677ecfc3fb2aae0264f20715771e958071e0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\tscope.problemReporter().invalidMethod(this, this.binding);", "+\t\t\t\t\tscope.problemReporter().invalidMethod(this, this.binding, scope);", "-\t\t\t\tscope.problemReporter().invalidMethod(this, this.binding);", "+\t\t\t\tscope.problemReporter().invalidMethod(this, this.binding, scope);", "-\t\t\t\tscope.problemReporter().invalidMethod(this, this.binding);", "+\t\t\t\tscope.problemReporter().invalidMethod(this, this.binding, scope);", "-\t\t\tscope.problemReporter().invalidMethod(this, this.binding);", "+\t\t\tscope.problemReporter().invalidMethod(this, this.binding, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e387dd9093e350205263a0d11c1001f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Argument.java", "commitBeforeChange": "1dc6df2cba1e3f21897002448cbe5ca7ad21d269", "commitAfterChange": "973af06dbc6df022ac42e8e0a0c238581d8558f6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\t  \tpublic TypeBinding resolveForCatch(BlockScope scope)", "signatureAfterChange": "\t  \tpublic TypeBinding resolveForCatch(BlockScope scope)", "diff": ["-\t\tTypeBinding throwable = scope.getJavaLangThrowable();", "-\t\tif (!exceptionType.isCompatibleWith(throwable)) {", "-\t\t\tscope.problemReporter().typeMismatchError(exceptionType, throwable, this);", "+\t\tif (exceptionType.findSuperTypeErasingTo(TypeIds.T_JavaLangThrowable, true) == null) {", "+\t\t\tscope.problemReporter().cannotThrowType(this.type, exceptionType);", "-\t\t}", "+\t\t}\t\t\t", "-\t\t\t\treturn null;", "+\t\t\t} else {", "+\t\t\t\tscope.problemReporter().localVariableHiding(this, existingVariable, false);", "-\t\t\tscope.problemReporter().localVariableHiding(this, existingVariable, false);"]}], "num": 6502}