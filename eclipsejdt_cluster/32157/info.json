{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6b1a616cf2b50ff66c04ba5baa713da0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01ef81a57941a9d7bc255b9329056071", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BooleanTest.java", "commitBeforeChange": "d785f90166aa4c50a893672b2f8b10875313fedd", "commitAfterChange": "b8b352fc846455808f45330cfd0c7d70c44859bf", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " public void test036()", "signatureAfterChange": " public void test036() throws Exception", "diff": ["-public void test036() {", "+public void test036() throws Exception {", "-\ttry {", "-\t\tFile f = new File(OUTPUT_DIR + File.separator + \"X.class\");", "-\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);", "-\t\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "-\t\tString result = disassembler.disassemble(classFileBytes, \"\\n\", ClassFileBytesDisassembler.DETAILED);", "-\t\tint index = result.indexOf(expectedOutput);", "-\t\tif (index == -1 || expectedOutput.length() == 0) {", "-\t\t\tSystem.out.println(Util.displayString(result, 3));", "-\t\t}", "-\t\tif (index == -1) {", "-\t\t\tassertEquals(\"Wrong contents\", expectedOutput, result);", "-\t\t}", "-\t} catch (org.eclipse.jdt.core.util.ClassFormatException e) {", "-\t\tassertTrue(false);", "-\t} catch (IOException e) {", "-\t\tassertTrue(false);", "-\t}\t\t", "+\tFile f = new File(OUTPUT_DIR + File.separator + \"X.class\");", "+\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);", "+\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "+\tString result = disassembler.disassemble(classFileBytes, \"\\n\", ClassFileBytesDisassembler.DETAILED);", "+\tint index = result.indexOf(expectedOutput);", "+\tif (index == -1 || expectedOutput.length() == 0) {", "+\t\tSystem.out.println(Util.displayString(result, 3));", "+\t}", "+\tif (index == -1) {", "+\t\tassertEquals(\"Wrong contents\", expectedOutput, result);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea5db4c5d5fb9d902692dbe6e8b573e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ForeachStatementTest.java", "commitBeforeChange": "d785f90166aa4c50a893672b2f8b10875313fedd", "commitAfterChange": "b8b352fc846455808f45330cfd0c7d70c44859bf", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " public void test034()", "signatureAfterChange": " public void test034() throws Exception", "diff": ["-public void test034() { ", "+public void test034() throws Exception { ", "-\ttry {", "-\t\tFile f = new File(OUTPUT_DIR + File.separator + \"X.class\");", "-\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);", "-\t\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "-\t\tString result = disassembler.disassemble(classFileBytes, \"\\n\", ClassFileBytesDisassembler.DETAILED);", "-\t\tint index = result.indexOf(expectedOutput);", "-\t\tif (index == -1 || expectedOutput.length() == 0) {", "-\t\t\tSystem.out.println(Util.displayString(result, 3));", "-\t\t}", "-\t\tif (index == -1) {", "-\t\t\tassertEquals(\"Wrong contents\", expectedOutput, result);", "-\t\t}", "-\t} catch (org.eclipse.jdt.core.util.ClassFormatException e) {", "-\t\tassertTrue(false);", "-\t} catch (IOException e) {", "-\t\tassertTrue(false);", "-\t}\t\t", "+\tFile f = new File(OUTPUT_DIR + File.separator + \"X.class\");", "+\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);", "+\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "+\tString result = disassembler.disassemble(classFileBytes, \"\\n\", ClassFileBytesDisassembler.DETAILED);", "+\tint index = result.indexOf(expectedOutput);", "+\tif (index == -1 || expectedOutput.length() == 0) {", "+\t\tSystem.out.println(Util.displayString(result, 3));", "+\t}", "+\tif (index == -1) {", "+\t\tassertEquals(\"Wrong contents\", expectedOutput, result);", "+\t}\t"]}], "num": 32157}