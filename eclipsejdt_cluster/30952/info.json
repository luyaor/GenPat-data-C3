{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "190d223260c3ad2b1167392f9a83144b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89c465f574b38fc41568603c5f2ab155", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "56cd7be7209c3b63ac72922c3a342e501721fcf5", "commitAfterChange": "b3e17a909a1b31bd9a62f4bc41b8e8da13b23038", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic BoundSet inferInvocationType(BoundSet b1, TypeBinding expectedType, InvocationSite invocationSite, MethodBinding method) \t\t\tthrows InferenceFailureException", "signatureAfterChange": " \tpublic BoundSet inferInvocationType(BoundSet b1, TypeBinding expectedType, InvocationSite invocationSite, MethodBinding method) \t\t\tthrows InferenceFailureException", "diff": ["+\t\t// not JLS: simply ensure that null hints from the return type have been seen even in standalone contexts:", "+\t\tif (expectedType == null && method.returnType != null)", "+\t\t\tsubstitute(method.returnType); // result is ignore, the only effect is on InferenceVariable.nullHints", "+\t\t//"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c49d3fe37944d6beed344ee5fb1ebac9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitStructureRequestor.java", "commitBeforeChange": "8c8cd78ee7d91af397b355193b993289ef7f4454", "commitAfterChange": "dab69163a24dbd341ec146b21a1806a7799bbbc6", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " private SourceMethodElementInfo createMethodInfo(MethodInfo methodInfo, SourceMethod handle)", "signatureAfterChange": " private SourceMethodElementInfo createMethodInfo(MethodInfo methodInfo, SourceMethod handle)", "diff": ["+\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=334783", "+\t// Process the parameter annotations from the arguments", "+\tif (methodInfo.node != null && methodInfo.node.arguments != null) {", "+\t\tinfo.arguments = acceptMethodParameters(methodInfo.node.arguments, handle, methodInfo);", "+\t}"]}], "num": 30952}