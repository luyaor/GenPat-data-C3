{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c207b95bb78dc2052e058fcffaf783f3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "280fbffad2e15cf697a9aa88c5fab03e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "873da75562da82ecc0139d0cf1669b990982ce9b", "commitAfterChange": "f40a702f47347181893c10c4b6f7ca67652d025d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tprivate void disassemble(ICodeAttribute codeAttribute, StringBuffer buffer, String lineSeparator, int tabNumber)", "signatureAfterChange": " \t \tprivate void disassemble(ICodeAttribute codeAttribute, StringBuffer buffer, String lineSeparator, int tabNumber)", "diff": ["-\t\t\tfor (int i = 0; i < lineAttributeLength; i++) {", "+\t\t\tfor (int i = 0; i < lineAttributeLength - 1; i++) {", "+\t\t\tbuffer", "+\t\t\t\t.append(Util.bind(\"classfileformat.linenumbertablefrom\")) //$NON-NLS-1$", "+\t\t\t\t.append(lineattributesEntries[lineAttributeLength - 1][0])", "+\t\t\t\t.append(Util.bind(\"classfileformat.linenumbertableto\")) //$NON-NLS-1$", "+\t\t\t\t.append(lineattributesEntries[lineAttributeLength - 1][1])", "+\t\t\t\t.append(Util.bind(\"classfileformat.linenumbertableclose\")); //$NON-NLS-1$", "-\t\t\tfor (int i = 0; i < localVariableAttributeLength; i++) {", "+\t\t\tfor (int i = 0; i < localVariableAttributeLength - 1; i++) {", "+\t\t\tILocalVariableTableEntry localVariableTableEntry = localVariableTableEntries[localVariableAttributeLength - 1];", "+\t\t\tint startPC = localVariableTableEntry.getStartPC();", "+\t\t\tint length  = localVariableTableEntry.getLength();", "+\t\t\tbuffer", "+\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablefrom\")) //$NON-NLS-1$", "+\t\t\t\t.append(startPC)", "+\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletableto\")) //$NON-NLS-1$", "+\t\t\t\t.append(startPC + length)", "+\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablelocalname\")) //$NON-NLS-1$", "+\t\t\t\t.append(localVariableTableEntry.getName())", "+\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablelocalindex\")) //$NON-NLS-1$", "+\t\t\t\t.append(localVariableTableEntry.getIndex())", "+\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablelocaltype\")) //$NON-NLS-1$", "+\t\t\t\t.append(Signature.toCharArray(localVariableTableEntry.getDescriptor()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db793e9248641e61eab3bd32b503b68e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "267a82506dfcd2b4938ade544a2160c1561cce40", "commitAfterChange": "e87e98cf60c0ad7673fccbc25120f5081987bb3d", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tprivate void disassemble(IClassFileReader classFileReader, char[] className, IMethodInfo methodInfo, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "signatureAfterChange": " \tprivate void disassemble(IClassFileReader classFileReader, char[] className, IMethodInfo methodInfo, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "diff": ["-\t\tbuffer.append(Messages.disassembler_endofmethodheader); ", "+\t\tif (checkMode(mode, WORKING_COPY)) {", "+\t\t\tif (((accessFlags & IModifierConstants.ACC_NATIVE) == 0)", "+\t\t\t\t\t&& ((accessFlags & IModifierConstants.ACC_ABSTRACT) == 0)) {", "+\t\t\t\tbuffer.append(\" {\"); //$NON-NLS-1$", "+\t\t\t\tfinal char[] returnType = Signature.getReturnType(methodDescriptor);", "+\t\t\t\tif (returnType.length == 1) {", "+\t\t\t\t\tswitch(returnType[0]) {", "+\t\t\t\t\t\tcase 'V' :", "+\t\t\t\t\t\t\twriteNewLine(buffer, lineSeparator, tabNumber);\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase 'I' :", "+\t\t\t\t\t\tcase 'B' :", "+\t\t\t\t\t\tcase 'J' :", "+\t\t\t\t\t\tcase 'D' :", "+\t\t\t\t\t\tcase 'F' :", "+\t\t\t\t\t\tcase 'S' :", "+\t\t\t\t\t\tcase 'C' :", "+\t\t\t\t\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 1);", "+\t\t\t\t\t\t\tbuffer.append(\"return 0;\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\twriteNewLine(buffer, lineSeparator, tabNumber);\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tdefault :", "+\t\t\t\t\t\t\t// boolean", "+\t\t\t\t\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 1);", "+\t\t\t\t\t\t\tbuffer.append(\"return false;\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\twriteNewLine(buffer, lineSeparator, tabNumber);\t\t\t\t\t\t\t", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\t// object", "+\t\t\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 1);", "+\t\t\t\t\tbuffer.append(\"return null;\"); //$NON-NLS-1$", "+\t\t\t\t\twriteNewLine(buffer, lineSeparator, tabNumber);\t\t\t\t\t\t\t", "+\t\t\t\t}", "+\t\t\t\tbuffer.append('}');", "+\t\t\t} else {", "+\t\t\t\tbuffer.append(';');", "+\t\t\t}\t", "+\t\t} else {", "+\t\t\tbuffer.append(Messages.disassembler_endofmethodheader);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e796f25e94597de527ebfade036cd12f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFileWorkingCopy.java", "commitBeforeChange": "24ecdaaa88a3d3df53c6657b56b1c35a02f254d7", "commitAfterChange": "b77d2ea3108de5650fdc8f1f0c9f51bf7203159f", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void codeComplete(int offset, CompletionRequestor requestor, WorkingCopyOwner wcowner) throws JavaModelException", "signatureAfterChange": " protected IBuffer openBuffer(IProgressMonitor pm, Object info) throws JavaModelException", "diff": ["+ */", "+protected IBuffer openBuffer(IProgressMonitor pm, Object info) throws JavaModelException {", "+\t// create buffer", "+\tIBuffer buffer = this.owner.createBuffer(this);", "+\tif (buffer == null) return null;", "+\t// set the buffer source", "+\tif (buffer.getCharacters() == null) {", "+\t\tIBuffer classFileBuffer = this.classFile.getBuffer();", "+\t\tif (classFileBuffer != null) {", "+\t\t\tbuffer.setContents(classFileBuffer.getCharacters());", "+\t\t} else {", "+\t\t\t// Disassemble", "+\t\t\tIClassFileReader reader = ToolFactory.createDefaultClassFileReader(this.classFile, IClassFileReader.ALL);", "+\t\t\tDisassembler disassembler = new Disassembler();", "+\t\t\tString contents = disassembler.disassemble(reader, Util.getLineSeparator(\"\", getJavaProject()), ClassFileBytesDisassembler.WORKING_COPY); //$NON-NLS-1$", "+\t\t\tbuffer.setContents(contents);", "+\t\t}", "+", "+\t// add buffer to buffer cache", "+\tBufferManager bufManager = getBufferManager();", "+\tbufManager.addBuffer(buffer);", "+\t\t\t", "+\t// listen to buffer changes", "+\tbuffer.addBufferChangedListener(this);", "+\treturn buffer;", "+}", "-\t */", "-\tpublic void codeComplete(int offset, CompletionRequestor requestor, WorkingCopyOwner wcowner) throws JavaModelException {", "-\t\tthrow new JavaModelException(new JavaModelStatus(IJavaModelStatusConstants.ELEMENT_DOES_NOT_EXIST, this));", "-\t}"]}], "num": 39858}