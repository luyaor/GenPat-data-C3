{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b7a20eba87d0fbef696d602929ac38d0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43f6c94e93bc0be16fe76700a40d0492", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetQualifiedNameReference.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": " public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\t\tgenerateReadSequence(currentScope, codeStream); ", "+\t\tFieldBinding lastFieldBinding = generateReadSequence(currentScope, codeStream); ", "-\t\t\tif (this.lastFieldBinding.declaringClass == null) { // array length", "+\t\t\tif (lastFieldBinding.declaringClass == null) { // array length", "-\t\t\t\tif (this.lastFieldBinding.constant != NotAConstant) {", "-\t\t\t\t\tif (!this.lastFieldBinding.isStatic()){", "+\t\t\t\tif (lastFieldBinding.constant != NotAConstant) {", "+\t\t\t\t\tif (!lastFieldBinding.isStatic()){", "-\t\t\t\t\tcodeStream.generateConstant(this.lastFieldBinding.constant, this.implicitConversion);", "+\t\t\t\t\tcodeStream.generateConstant(lastFieldBinding.constant, this.implicitConversion);", "-\t\t\t\t\tif (this.lastFieldBinding.canBeSeenBy(getReceiverType(currentScope), this, currentScope)) {", "-\t\t\t\t\t\tif (this.lastFieldBinding.isStatic()) {", "-\t\t\t\t\t\t\tcodeStream.getstatic(this.lastFieldBinding);", "+\t\t\t\t\tif (lastFieldBinding.canBeSeenBy(getReceiverType(currentScope), this, currentScope)) {", "+\t\t\t\t\t\tif (lastFieldBinding.isStatic()) {", "+\t\t\t\t\t\t\tcodeStream.getstatic(lastFieldBinding);", "-\t\t\t\t\t\t\tcodeStream.getfield(this.lastFieldBinding);", "+\t\t\t\t\t\t\tcodeStream.getfield(lastFieldBinding);", "-\t\t\t\t\t\t((CodeSnippetCodeStream) codeStream).generateEmulatedReadAccessForField(this.lastFieldBinding);", "+\t\t\t\t\t\t((CodeSnippetCodeStream) codeStream).generateEmulatedReadAccessForField(lastFieldBinding);", "-\t\t\tif (this.lastFieldBinding != null && !this.lastFieldBinding.isStatic()){", "+\t\t\tif (lastFieldBinding != null && !lastFieldBinding.isStatic()){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "564a193d2c3e409b69dc3032d0634b56", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "b217112507f53a311f9d32f09e4f736a9ed00294", "commitAfterChange": "7eb499e0531ac46b3d11960000ddd11e09bd5a0f", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tpublic boolean updateCurrentDeltaAndIndex(IResourceDelta delta, int elementType, RootInfo rootInfo)", "signatureAfterChange": " \tpublic boolean updateCurrentDeltaAndIndex(IResourceDelta delta, int elementType, RootInfo rootInfo)", "diff": ["-\t\t\t\telement = this.createElement(deltaRes, elementType, rootInfo);", "+\t\t\t\telement = createElement(deltaRes, elementType, rootInfo);", "-\t\t\t\tthis.updateIndex(element, delta);", "-\t\t\t\tthis.elementAdded(element, delta, rootInfo);", "+\t\t\t\tupdateIndex(element, delta);", "+\t\t\t\t", "+\t\t\t\t// filter out changes to primary compilation unit in working copy mode", "+\t\t\t\tif (!isPrimaryWorkingCopy(element, elementType)) {", "+\t\t\t\t\telementAdded(element, delta, rootInfo);", "+\t\t\t\t}", "-\t\t\t\telement = this.createElement(deltaRes, elementType, rootInfo);", "+\t\t\t\telement = createElement(deltaRes, elementType, rootInfo);", "-\t\t\t\tthis.updateIndex(element, delta);", "-\t\t\t\tthis.elementRemoved(element, delta, rootInfo);", "+\t\t\t\tupdateIndex(element, delta);", "+", "+\t\t\t\t// filter out changes to primary compilation unit in working copy mode", "+\t\t\t\tif (!isPrimaryWorkingCopy(element, elementType)) {", "+\t\t\t\t\telementRemoved(element, delta, rootInfo);", "+\t\t\t\t}", "-\t\t\t\t\telement = this.createElement(delta.getResource(), elementType, rootInfo);", "+\t\t\t\t\telement = createElement(delta.getResource(), elementType, rootInfo);", "-\t\t\t\t\tthis.updateIndex(element, delta);", "-\t\t\t\t\tthis.contentChanged(element);", "+\t\t\t\t\tupdateIndex(element, delta);", "+\t\t\t\t\t", "+\t\t\t\t\t// filter out changes to primary compilation unit in working copy mode", "+\t\t\t\t\tif (!isPrimaryWorkingCopy(element, elementType)) {", "+\t\t\t\t\t\tcontentChanged(element);", "+\t\t\t\t\t}", "-\t\t\t\t\t\telement = this.createElement(res, elementType, rootInfo);", "+\t\t\t\t\t\telement = createElement(res, elementType, rootInfo);", "-\t\t\t\t\t\t\t\tthis.elementAdded(element, delta, rootInfo);", "+\t\t\t\t\t\t\t\telementAdded(element, delta, rootInfo);", "-\t\t\t\t\t\t\t\tthis.elementRemoved(element, delta, rootInfo);", "+\t\t\t\t\t\t\t\telementRemoved(element, delta, rootInfo);", "-\t\t\t\t\t\t\t\tthis.elementAdded(element, delta, rootInfo);", "+\t\t\t\t\t\t\t\telementAdded(element, delta, rootInfo);", "-\t\t\t\t\t\t\t\tthis.elementRemoved(element, delta, rootInfo);", "+\t\t\t\t\t\t\t\telementRemoved(element, delta, rootInfo);"]}], "num": 45714}