{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a8ef1a50985ed43d4cf316f0f8d2d2f2", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43b6166fc0d1bd077aa60384ae140f4a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "83b433cefe204b4efddb34a5fec23235369a79e2", "commitAfterChange": "f0ad677ecfc3fb2aae0264f20715771e958071e0", "methodNumberBeforeChange": 1357, "methodNumberAfterChange": 1357, "signatureBeforeChange": " public void test1322()", "signatureAfterChange": " public void test1322()", "diff": ["-// FAIL ERRMSG", "-\tif (this.complianceLevel >= ClassFileConstants.JDK1_8)", "-\t\treturn;", "+\t\t\tthis.complianceLevel < ClassFileConstants.JDK1_8 ?", "-\t\t\t\"----------\\n\");", "+\t\t\t\"----------\\n\" :", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\tx.doStuff(Bob.class, new Thingy());\\n\" + ", "+\t\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Type safety: Unchecked invocation doStuff(Class<Bob>, Thingy) of the generic method doStuff(Class<T>, Thingy<T>) of type X\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\tx.doStuff(Bob.class, new Thingy());\\n\" + ", "+\t\t\t\t\"\t                     ^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Type safety: The expression of type Thingy needs unchecked conversion to conform to Thingy<Bob>\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\tx.doStuff(Bob.class, new Thingy());\\n\" + ", "+\t\t\t\t\"\t                         ^^^^^^\\n\" + ", "+\t\t\t\t\"Thingy is a raw type. References to generic type Thingy<T> should be parameterized\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"4. ERROR in X.java (at line 15)\\n\" + ", "+\t\t\t\t\"\tx.doStuff(Jim.class, new Thingy());\\n\" + ", "+\t\t\t\t\"\t  ^^^^^^^\\n\" + ", "+\t\t\t\t\"The method doStuff(Class<T>, Thingy<T>) in the type X is not applicable for the arguments (Class<Jim>, Thingy)\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"5. WARNING in X.java (at line 15)\\n\" + ", "+\t\t\t\t\"\tx.doStuff(Jim.class, new Thingy());\\n\" + ", "+\t\t\t\t\"\t                         ^^^^^^\\n\" + ", "+\t\t\t\t\"Thingy is a raw type. References to generic type Thingy<T> should be parameterized\\n\" + ", "+\t\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "659150a006041890b983c497a3a5e26e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9713cc0fc86fbe0881ff90c5290328149c35cbdc", "commitAfterChange": "236485921f70a82e4283431ca8763bf21e25e459", "methodNumberBeforeChange": 1354, "methodNumberAfterChange": 1354, "signatureBeforeChange": " public void _test1323()", "signatureAfterChange": " public void test1323()", "diff": ["-public void _test1323() {", "+public void test1323() {", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. ERROR in X.java (at line 4)\\n\" +", "-\t\t\t\"\tx.doStuff2(Jim.class, new Thingy());\\n\" +", "-\t\t\t\"\t  ^^^^^^^^\\n\" +", "-\t\t\t\"Bound mismatch: The generic method doStuff2(Class<T>, Thingy<U>) of type X is not applicable for the arguments (Class<Jim>, Thingy). The inferred type Jim is not a valid substitute for the bounded parameter <T extends Bob>\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"2. WARNING in X.java (at line 4)\\n\" +", "-\t\t\t\"\tx.doStuff2(Jim.class, new Thingy());\\n\" +", "-\t\t\t\"\t                          ^^^^^^\\n\" +", "-\t\t\t\"Thingy is a raw type. References to generic type Thingy<T> should be parameterized\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"3. WARNING in X.java (at line 5)\\n\" +", "-\t\t\t\"\tString s = x.doStuff2(Bob2.class, new Thingy());\\n\" +", "-\t\t\t\"\t           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Type safety: Unchecked invocation doStuff2(Class<Bob2>, Thingy<Bob>) of the generic method doStuff2(Class<T>, Thingy<U>) of type X\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"4. ERROR in X.java (at line 5)\\n\" +", "-\t\t\t\"\tString s = x.doStuff2(Bob2.class, new Thingy());\\n\" +", "-\t\t\t\"\t           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Type mismatch: cannot convert from Bob2 to String\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"5. WARNING in X.java (at line 5)\\n\" +", "-\t\t\t\"\tString s = x.doStuff2(Bob2.class, new Thingy());\\n\" +", "-\t\t\t\"\t                                  ^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Type safety: The expression of type Thingy needs unchecked conversion to conform to Thingy<U>\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"6. WARNING in X.java (at line 5)\\n\" +", "-\t\t\t\"\tString s = x.doStuff2(Bob2.class, new Thingy());\\n\" +", "-\t\t\t\"\t                                      ^^^^^^\\n\" +", "-\t\t\t\"Thingy is a raw type. References to generic type Thingy<T> should be parameterized\\n\" +", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tx.doStuff2(Jim.class, new Thingy());\\n\" + ", "+\t\t\t\"\t  ^^^^^^^^\\n\" + ", "+\t\t\t\"Bound mismatch: The generic method doStuff2(Class<T>, Thingy<U>) of type X is not applicable for the arguments (Class<Jim>, Thingy). The inferred type Jim is not a valid substitute for the bounded parameter <T extends Bob>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tx.doStuff2(Jim.class, new Thingy());\\n\" + ", "+\t\t\t\"\t                          ^^^^^^\\n\" + ", "+\t\t\t\"Thingy is a raw type. References to generic type Thingy<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tString s = x.doStuff2(Bob2.class, new Thingy());\\n\" + ", "+\t\t\t\"\t           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Unchecked invocation doStuff2(Class<Bob2>, Thingy) of the generic method doStuff2(Class<T>, Thingy<U>) of type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tString s = x.doStuff2(Bob2.class, new Thingy());\\n\" + ", "+\t\t\t\"\t           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from Bob to String\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tString s = x.doStuff2(Bob2.class, new Thingy());\\n\" + ", "+\t\t\t\"\t                                  ^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The expression of type Thingy needs unchecked conversion to conform to Thingy<Bob>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tString s = x.doStuff2(Bob2.class, new Thingy());\\n\" + ", "+\t\t\t\"\t                                      ^^^^^^\\n\" + ", "+\t\t\t\"Thingy is a raw type. References to generic type Thingy<T> should be parameterized\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "881ba22943edec0c6a15421f6c4855ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9713cc0fc86fbe0881ff90c5290328149c35cbdc", "commitAfterChange": "236485921f70a82e4283431ca8763bf21e25e459", "methodNumberBeforeChange": 1353, "methodNumberAfterChange": 1353, "signatureBeforeChange": " public void _test1322()", "signatureAfterChange": " public void test1322()", "diff": ["-public void _test1322() {", "+public void test1322() {", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. WARNING in X.java (at line 6)\\n\" +", "-\t\t\t\"\tx.doStuff(Bob.class, new Thingy());\\n\" +", "-\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Type safety: Unchecked invocation doStuff(Class, Thingy) of the generic method doStuff(Class<T>, Thingy<T>) of type X\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"2. WARNING in X.java (at line 6)\\n\" +", "-\t\t\t\"\tx.doStuff(Bob.class, new Thingy());\\n\" +", "-\t\t\t\"\t                     ^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Type safety: The expression of type Thingy needs unchecked conversion to conform to Thingy<T>\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"3. WARNING in X.java (at line 6)\\n\" +", "-\t\t\t\"\tx.doStuff(Bob.class, new Thingy());\\n\" +", "-\t\t\t\"\t                         ^^^^^^\\n\" +", "-\t\t\t\"Thingy is a raw type. References to generic type Thingy<T> should be parameterized\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"4. ERROR in X.java (at line 15)\\n\" +", "-\t\t\t\"\tx.doStuff(Jim.class, new Thingy());\\n\" +", "-\t\t\t\"\t  ^^^^^^^\\n\" +", "-\t\t\t\"Bound mismatch: The generic method doStuff(Class<T>, Thingy<T>) of type X is not applicable for the arguments (Class<Jim>, Thingy). The inferred type Jim is not a valid substitute for the bounded parameter <T extends Bob>\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"5. WARNING in X.java (at line 15)\\n\" +", "-\t\t\t\"\tx.doStuff(Jim.class, new Thingy());\\n\" +", "-\t\t\t\"\t                         ^^^^^^\\n\" +", "-\t\t\t\"Thingy is a raw type. References to generic type Thingy<T> should be parameterized\\n\" +", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tx.doStuff(Bob.class, new Thingy());\\n\" + ", "+\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Unchecked invocation doStuff(Class<Bob>, Thingy) of the generic method doStuff(Class<T>, Thingy<T>) of type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tx.doStuff(Bob.class, new Thingy());\\n\" + ", "+\t\t\t\"\t                     ^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The expression of type Thingy needs unchecked conversion to conform to Thingy<Bob>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tx.doStuff(Bob.class, new Thingy());\\n\" + ", "+\t\t\t\"\t                         ^^^^^^\\n\" + ", "+\t\t\t\"Thingy is a raw type. References to generic type Thingy<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 15)\\n\" + ", "+\t\t\t\"\tx.doStuff(Jim.class, new Thingy());\\n\" + ", "+\t\t\t\"\t  ^^^^^^^\\n\" + ", "+\t\t\t\"Bound mismatch: The generic method doStuff(Class<T>, Thingy<T>) of type X is not applicable for the arguments (Class<Jim>, Thingy). The inferred type Jim is not a valid substitute for the bounded parameter <T extends Bob>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 15)\\n\" + ", "+\t\t\t\"\tx.doStuff(Jim.class, new Thingy());\\n\" + ", "+\t\t\t\"\t                         ^^^^^^\\n\" + ", "+\t\t\t\"Thingy is a raw type. References to generic type Thingy<T> should be parameterized\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed1dde90f95e604575abf1f2f971e1b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9713cc0fc86fbe0881ff90c5290328149c35cbdc", "commitAfterChange": "236485921f70a82e4283431ca8763bf21e25e459", "methodNumberBeforeChange": 1355, "methodNumberAfterChange": 1355, "signatureBeforeChange": " public void _test1324()", "signatureAfterChange": " public void test1324()", "diff": ["-public void _test1324() {", "+public void test1324() {", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. WARNING in X.java (at line 6)\\n\" +", "-\t\t\t\"\tx.doStuff(Bob.class, new Thingy());\\n\" +", "-\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Type safety: Unchecked invocation doStuff(Class<Bob>, Thingy<Bob>) of the generic method doStuff(Class<T>, Thingy<T>) of type X\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"2. WARNING in X.java (at line 6)\\n\" +", "-\t\t\t\"\tx.doStuff(Bob.class, new Thingy());\\n\" +", "-\t\t\t\"\t                     ^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Type safety: The expression of type Thingy needs unchecked conversion to conform to Thingy<T>\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"3. WARNING in X.java (at line 6)\\n\" +", "-\t\t\t\"\tx.doStuff(Bob.class, new Thingy());\\n\" +", "-\t\t\t\"\t                         ^^^^^^\\n\" +", "-\t\t\t\"Thingy is a raw type. References to generic type Thingy<T> should be parameterized\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"4. ERROR in X.java (at line 8)\\n\" +", "-\t\t\t\"\tZork z;\\n\" +", "-\t\t\t\"\t^^^^\\n\" +", "-\t\t\t\"Zork cannot be resolved to a type\\n\" +", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tx.doStuff(Bob.class, new Thingy());\\n\" + ", "+\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Unchecked invocation doStuff(Class<Bob>, Thingy) of the generic method doStuff(Class<T>, Thingy<T>) of type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tx.doStuff(Bob.class, new Thingy());\\n\" + ", "+\t\t\t\"\t                     ^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The expression of type Thingy needs unchecked conversion to conform to Thingy<Bob>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tx.doStuff(Bob.class, new Thingy());\\n\" + ", "+\t\t\t\"\t                         ^^^^^^\\n\" + ", "+\t\t\t\"Thingy is a raw type. References to generic type Thingy<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tZork z;\\n\" + ", "+\t\t\t\"\t^^^^\\n\" + ", "+\t\t\t\"Zork cannot be resolved to a type\\n\" + "]}], "num": 4396}