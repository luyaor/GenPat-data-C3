{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "50f8fb1ee90d5487bc79e22df8e28872", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ef42ed6fb22f55c218e1ab0a518c1ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java", "commitBeforeChange": "8fb88598900ff0c1072aa7669424703dbc139194", "commitAfterChange": "4c091ce71f1c6a2472a4afd7104c5d8f3424456d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tint storeTrailingComments(ASTNode node, int nextStart, Scanner scanner)", "signatureAfterChange": " \tint storeTrailingComments(ASTNode node, int nextStart, Scanner scanner)", "diff": ["-\t\t\t// Verify that traling comment is not an already attached doc comment", "-\t\t\tidx = startIdx;", "-\t\t\tfor (; idx <= endIdx; idx++) {", "-\t\t\t\tif (this.comments[idx].isDocComment() && this.attachedDocComments.contains(this.comments[idx]))  {", "-\t\t\t\t\tif (idx == startIdx) return nodeEnd;", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tendIdx = idx - 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92a7d209d5fb0afa017f91ba93cbaa0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java", "commitBeforeChange": "64b96fa1ce2b515f4a874add8f64c38e4d9533fd", "commitAfterChange": "4dc818b4e43cdaa450b9bd9617f340ff5b901864", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tint storeTrailingComments(ASTNode node, int nextStart, Scanner scanner)", "signatureAfterChange": " \tint storeTrailingComments(ASTNode node, int nextStart, Scanner scanner, boolean lastChild)", "diff": ["-\tint storeTrailingComments(ASTNode node, int nextStart, Scanner scanner) {", "+\tint storeTrailingComments(ASTNode node, int nextStart, Scanner scanner, boolean lastChild) {", "-\t\twhile (idx<length && commentStart <= nextStart) {", "+\t\twhile (idx<length && commentStart < nextStart) {", "-\t\t\tif (commentStart > nextStart) {", "+\t\t\tif (commentStart >= nextStart) {", "-\t\t\tint nextLine = scanner.getLineNumber(nextStart);", "-\t\t\tint previousLine = scanner.getLineNumber(previousEnd);", "-\t\t\tif((nextLine - previousLine) <= 1) {", "-\t\t\t\tif (sameLineIdx == -1) return nodeEnd;", "-\t\t\t\tendIdx = sameLineIdx;", "-\t\t\t}", "-\t\t\t// Verify that traling comment is not an already attached doc comment", "-\t\t\tidx = startIdx;", "-\t\t\tfor (; idx <= endIdx; idx++) {", "-\t\t\t\tif (this.comments[idx].isDocComment() && this.attachedDocComments.contains(this.comments[idx]))  {", "-\t\t\t\t\tif (idx == startIdx) return nodeEnd;", "-\t\t\t\t\tbreak;", "+\t\t\tif (!lastChild) {", "+\t\t\t\tint nextLine = scanner.getLineNumber(nextStart);", "+\t\t\t\tint previousLine = scanner.getLineNumber(previousEnd);", "+\t\t\t\tif((nextLine - previousLine) <= 1) {", "+\t\t\t\t\tif (sameLineIdx == -1) return nodeEnd;", "+\t\t\t\t\tendIdx = sameLineIdx;", "-\t\t\tendIdx = idx - 1;"]}], "num": 9128}