{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f34fe9859526c63f5e5452adecea79c1", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6679fe3d87929b76ca69ebc30e52b046", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "1046ecba3bf1092ff6936f62a14ab5c9b25878ed", "commitAfterChange": "6136184df5d87b2fe6ebeec9fd9dcf39b1b92cb1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["+\t\tfinal int InsideMaxProblems = 256;", "+\t\t\tif (currentArg.equals(\"-maxProblems\")) { //$NON-NLS-1$", "+\t\t\t\tif (this.maxProblems > 0)", "+\t\t\t\t\tthrow new InvalidInputException(", "+\t\t\t\t\t\tMain.bind(\"configure.duplicateMaxProblems\", currentArg)); //$NON-NLS-1$", "+\t\t\t\tmode = InsideMaxProblems;", "+\t\t\t\tcontinue;", "+\t\t\t}", "+\t\t\t}", "+\t\t\tif (currentArg.equals(\"-noJSR\")) { //$NON-NLS-1$", "+\t\t\t    mode = Default;", "+\t\t\t    this.useJsrBytecode = false;", "+\t\t\t    continue;", "+\t\t\t\t}", "+\t\t\t\tmode = Default;", "+\t\t\t\tcontinue;", "+\t\t\t}", "+\t\t\tif (mode == InsideMaxProblems) {", "+\t\t\t\ttry {", "+\t\t\t\t\tthis.maxProblems = Integer.parseInt(currentArg);", "+\t\t\t\t\tif (this.maxProblems <= 0) {", "+\t\t\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.maxProblems\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_MaxProblemPerUnit, currentArg);", "+\t\t\t\t} catch (NumberFormatException e) {", "+\t\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.maxProblems\", currentArg)); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b78b1802c0ba291da3640a53065e4fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "bf39b08bac5fe04538b98cd37961d265ad6d7cd8", "commitAfterChange": "a502b956779c4dac7f761502999cc6d149ba7556", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 41, "signatureBeforeChange": " \t\t \t\tpublic void setLog(PrintWriter log)", "signatureAfterChange": "  \t\tpublic void setLog(String logFileName) throws InvalidInputException", "diff": ["-\t\t", "-\t\tpublic void setLog(PrintWriter log) {", "-\t\t\tthis.log = log;", "+", "+\t\tpublic void setLog(String logFileName) throws InvalidInputException {", "+\t\t\ttry {", "+\t\t\t\tthis.log = new PrintWriter(new FileOutputStream(logFileName, false));", "+\t\t\t\tint index = logFileName.lastIndexOf('.');", "+\t\t\t\tif (index != 0) {", "+\t\t\t\t\tif (logFileName.substring(index).toLowerCase().equals(\".xml\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tthis.isXml = true;", "+\t\t\t\t\t\tthis.log.println(XML_HEADER);", "+\t\t\t\t\t\tthis.log.println(XML_DTD_DECLARATION);", "+\t\t\t\t\t\tthis.tab = 0;", "+\t\t\t\t\t\tparameters.clear();", "+\t\t\t\t\t\tparameters.put(COMPILER_NAME, Main.bind(\"compiler.name\")); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t\t\t\tparameters.put(COMPILER_VERSION, Main.bind(\"compiler.version\")); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t\t\t\tparameters.put(COMPILER_COPYRIGHT, Main.bind(\"compiler.copyright\")); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t\t\t\tthis.printTag(COMPILER, parameters, true, false);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t} catch (FileNotFoundException e) {", "+\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.cannotOpenLog\")); //$NON-NLS-1$", "+\t\t\t}", "+\t\t}"]}], "num": 40311}