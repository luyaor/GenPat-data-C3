{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "97ad519f64c306f768a45421c3700359", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fb17603e261343791d812c811dd49c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "128a99659b73df0d65c1b7965233f291b8bbcedc", "commitAfterChange": "2d75a247df9701b0f81bd7f30330af100821c0c6", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \tLambdaExpression copy()", "signatureAfterChange": "  \tLambdaExpression copy()", "diff": ["-\t\tLambdaExpression copy =  (LambdaExpression) parser.parseExpression(source, this.sourceStart, this.sourceEnd - this.sourceStart + 1, ", "+\t\tLambdaExpression copy =  (LambdaExpression) parser.parseLambdaExpression(source, this.sourceStart, this.sourceEnd - this.sourceStart + 1, ", "-\t\tcopy.valueCompatible = this.valueCompatible;", "-\t\tcopy.voidCompatible = this.voidCompatible;", "-\t\tcopy.shapeAnalysisComplete = this.shapeAnalysisComplete;", "+", "+\t\tif (copy != null) { // ==> syntax errors", "+\t\t\tcopy.valueCompatible = this.valueCompatible;", "+\t\t\tcopy.voidCompatible = this.voidCompatible;", "+\t\t\tcopy.shapeAnalysisComplete = this.shapeAnalysisComplete;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "937f86bdb1df71237baa743fc2a0422a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "ba388ee53170dee91fb2402f317f8b352855c459", "commitAfterChange": "d043ef6776b1e3fad1bb618496ee2a48a9410e4b", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tLambdaExpression copy()", "signatureAfterChange": "  \tLambdaExpression copy()", "diff": ["-\t\tfinal Parser parser = new Parser(this.scope.problemReporter(), false);", "+\t\tfinal Parser parser = new Parser(this.enclosingScope.problemReporter(), false);", "-\t\t\t\t\t\t\t\t\t\tthis.scope.referenceCompilationUnit(), false /* record line separators */);", "+\t\t\t\t\t\t\t\t\t\tthis.enclosingScope.referenceCompilationUnit(), false /* record line separators */);", "-\t\tif (copy != null) { // ==> syntax errors", "-\t\t\tcopy.valueCompatible = this.valueCompatible;", "-\t\t\tcopy.voidCompatible = this.voidCompatible;", "-\t\t\tcopy.shapeAnalysisComplete = this.shapeAnalysisComplete;", "+\t\tif (copy != null) { // ==> syntax errors == null", "+\t\t\tcopy.original = this;"]}], "num": 4590}