{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "94e8487fda547040f69679ae5906c675", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "642446f4e5ccda332b998c44feee9397", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "978cf83b9262623a37692c149bd749d742df76dc", "commitAfterChange": "50b50563bfd23e61be52cd4f69626b18244137d1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " private Binding findOnDemandImport(char[][] compoundName)", "signatureAfterChange": " private Binding findOnDemandImport(char[][] compoundName)", "diff": ["+\t\tif (!type.canBeSeenBy(fPackage)) {", "+\t\t\treturn new ProblemReferenceBinding(CharOperation.subarray(compoundName, 0, i), type, NotVisible);\t\t", "+\t\t}", "-\t\tif ((type = type.getMemberType(compoundName[i])) == null)", "+\t\tif ((type = type.getMemberType(compoundName[i])) == null) {", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7a94b15d7e5be632d13da5bbad8dbd6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "8fdb14b64608b58e620c67bc0f2758fb559de717", "commitAfterChange": "447dafd45d9eea3d096b0cc1d1d11fe893f03ec0", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  private static SearchPattern createTypePattern(char[] simpleName, char[] packageName, char[][] enclosingTypeNames, String typeSignature, IType type, int limitTo, int matchRule)", "signatureAfterChange": "  private static SearchPattern createTypePattern(char[] simpleName, char[] packageName, char[][] enclosingTypeNames, String typeSignature, IType type, int limitTo, int matchRule)", "diff": ["+\t\tdefault:", "+\t\t\tif (type != null) {", "+\t\t\t\treturn new TypeReferencePattern(", "+\t\t\t\t\tCharOperation.concatWith(packageName, enclosingTypeNames, '.'), ", "+\t\t\t\t\tsimpleName,", "+\t\t\t\t\ttype,", "+\t\t\t\t\tlimitTo,", "+\t\t\t\t\tmatchRule);", "+\t\t\t}"]}], "num": 44334}