{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d290f14dcd4fd1320dbaa40578ede1d3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ce9e442ec8ba2087e2617b851e58f76", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "64298556651d81e68f8405c1642b36744d7373dd", "commitAfterChange": "b92bafecd030777e0d6056677f8286cf640a489f", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  \tprivate void findFieldsAndMethods( \t\tchar[] token, \t\tTypeBinding receiverType, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall)", "signatureAfterChange": "  \tprivate void findFieldsAndMethods( \t\tchar[] token, \t\tTypeBinding receiverType, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall)", "diff": ["-\t\t\t\tthis.requestor.acceptField(", "-\t\t\t\t\tCharOperation.NO_CHAR,", "-\t\t\t\t\tCharOperation.NO_CHAR,", "-\t\t\t\t\tlengthField,", "-\t\t\t\t\tCharOperation.NO_CHAR,", "-\t\t\t\t\tCharOperation.NO_CHAR,", "-\t\t\t\t\tlengthField,", "-\t\t\t\t\tIConstants.AccPublic,", "-\t\t\t\t\tthis.startPosition - this.offset,", "-\t\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\t\trelevance);", "+\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.FIELD_REF)) {", "+\t\t\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.FIELD_REF, this.actualCompletionPosition);", "+\t\t\t\t\t//proposal.setDeclarationSignature(null);", "+\t\t\t\t\tproposal.setSignature(INT_SIGNATURE);", "+\t\t\t\t\t//proposal.setDeclarationPackageName(null);", "+\t\t\t\t\t//proposal.setDeclarationTypeName(null);", "+\t\t\t\t\t//proposal.setPackageName(null);", "+\t\t\t\t\tproposal.setTypeName(INT);", "+\t\t\t\t\tproposal.setName(lengthField);", "+\t\t\t\t\tproposal.setCompletion(lengthField);", "+\t\t\t\t\tproposal.setFlags(Flags.AccPublic);", "+\t\t\t\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "+\t\t\t\t\tproposal.setRelevance(relevance);", "+\t\t\t\t\tthis.requestor.accept(proposal);", "+\t\t\t\t\tif(DEBUG) {", "+\t\t\t\t\t\tthis.printDebug(proposal);", "+\t\t\t\t\t}", "+\t\t\t\t}", "-\t\t\t\tthis.requestor.acceptMethod(", "-\t\t\t\t\tCharOperation.NO_CHAR,", "-\t\t\t\t\tCharOperation.NO_CHAR,", "-\t\t\t\t\tcloneMethod,", "-\t\t\t\t\tCharOperation.NO_CHAR_CHAR,", "-\t\t\t\t\tCharOperation.NO_CHAR_CHAR,", "-\t\t\t\t\tCharOperation.NO_CHAR_CHAR,", "-\t\t\t\t\tCharOperation.concat(JAVA, LANG, '.'),", "-\t\t\t\t\tOBJECT,", "-\t\t\t\t\tcompletion,", "-\t\t\t\t\tIConstants.AccPublic,", "-\t\t\t\t\tthis.startPosition - this.offset,", "-\t\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\t\trelevance);", "-\t\t\t\t\t", "+\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.METHOD_REF)) {", "+\t\t\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.METHOD_REF, this.actualCompletionPosition);", "+\t\t\t\t\t//proposal.setDeclarationSignature(null);", "+\t\t\t\t\tproposal.setSignature(", "+\t\t\t\t\t\t\tcreateMethodSignature(", "+\t\t\t\t\t\t\t\t\tCharOperation.NO_CHAR_CHAR,", "+\t\t\t\t\t\t\t\t\tCharOperation.NO_CHAR_CHAR,", "+\t\t\t\t\t\t\t\t\tCharOperation.concatWith(JAVA_LANG, '.'),", "+\t\t\t\t\t\t\t\t\tOBJECT));", "+\t\t\t\t\t//proposal.setDeclarationPackageName(null);", "+\t\t\t\t\t//proposal.setDeclarationTypeName(null);", "+\t\t\t\t\t//proposal.setParameterPackageNames(null);", "+\t\t\t\t\t//proposal.setParameterTypeNames(null);", "+\t\t\t\t\tproposal.setPackageName(CharOperation.concatWith(JAVA_LANG, '.'));", "+\t\t\t\t\tproposal.setTypeName(OBJECT);", "+\t\t\t\t\tproposal.setName(cloneMethod);", "+\t\t\t\t\tproposal.setCompletion(completion);", "+\t\t\t\t\tproposal.setFlags(Flags.AccPublic);", "+\t\t\t\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "+\t\t\t\t\tproposal.setRelevance(relevance);", "+\t\t\t\t\tthis.requestor.accept(proposal);", "+\t\t\t\t\tif(DEBUG) {", "+\t\t\t\t\t\tthis.printDebug(proposal);", "+\t\t\t\t\t}", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a81bfcfbe3b21684865b108fdcda2fbd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "602a7d55ff75dfdfa2cae12bead009c418215b66", "commitAfterChange": "183f54b68364b226246fe663acdbcbf6f6f1dd9e", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 78, "signatureBeforeChange": " \t \tprivate void proposeNewMethod(char[] token, ReferenceBinding reference)", "signatureAfterChange": " \t \tprivate void proposeNewMethod(char[] token, ReferenceBinding reference)", "diff": ["-\t\tint relevance = computeBaseRelevance();", "-\t\trelevance += computeRelevanceForInterestingProposal();", "-\t\trelevance += computeRelevanceForRestrictions(false); // no access restriction for new method", "-\t\t", "-\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.POTENTIAL_METHOD_DECLARATION, this.actualCompletionPosition);", "-\t\tproposal.setDeclarationSignature(getSignature(reference));", "-\t\tproposal.setSignature(", "-\t\t\t\tcreateMethodSignature(", "-\t\t\t\t\t\tCharOperation.NO_CHAR_CHAR,", "-\t\t\t\t\t\tCharOperation.NO_CHAR_CHAR,", "-\t\t\t\t\t\tCharOperation.NO_CHAR,", "-\t\t\t\t\t\tVOID));", "-\t\tproposal.setDeclarationPackageName(reference.qualifiedPackageName());", "-\t\tproposal.setDeclarationTypeName(reference.qualifiedSourceName());", "-\t\t", "-\t\t//proposal.setPackageName(null);", "-\t\tproposal.setTypeName(VOID);", "-\t\tproposal.setName(token);", "-\t\t//proposal.setParameterPackageNames(null);", "-\t\t//proposal.setParameterTypeNames(null);", "-\t\t//proposal.setPackageName(null);", "-\t\tproposal.setCompletion(token);", "-\t\tproposal.setFlags(Flags.AccPublic);", "-\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "-\t\tproposal.setRelevance(relevance);", "-\t\tthis.requestor.accept(proposal);", "-\t\tif(DEBUG) {", "-\t\t\tthis.printDebug(proposal);", "+\t\tif(!this.requestor.isIgnored(CompletionProposal.POTENTIAL_METHOD_DECLARATION)) {", "+\t\t\tint relevance = computeBaseRelevance();", "+\t\t\trelevance += computeRelevanceForInterestingProposal();", "+\t\t\trelevance += computeRelevanceForRestrictions(false); // no access restriction for new method", "+\t\t\t", "+\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.POTENTIAL_METHOD_DECLARATION, this.actualCompletionPosition);", "+\t\t\tproposal.setDeclarationSignature(getSignature(reference));", "+\t\t\tproposal.setSignature(", "+\t\t\t\t\tcreateMethodSignature(", "+\t\t\t\t\t\t\tCharOperation.NO_CHAR_CHAR,", "+\t\t\t\t\t\t\tCharOperation.NO_CHAR_CHAR,", "+\t\t\t\t\t\t\tCharOperation.NO_CHAR,", "+\t\t\t\t\t\t\tVOID));", "+\t\t\tproposal.setDeclarationPackageName(reference.qualifiedPackageName());", "+\t\t\tproposal.setDeclarationTypeName(reference.qualifiedSourceName());", "+\t\t\t", "+\t\t\t//proposal.setPackageName(null);", "+\t\t\tproposal.setTypeName(VOID);", "+\t\t\tproposal.setName(token);", "+\t\t\t//proposal.setParameterPackageNames(null);", "+\t\t\t//proposal.setParameterTypeNames(null);", "+\t\t\t//proposal.setPackageName(null);", "+\t\t\tproposal.setCompletion(token);", "+\t\t\tproposal.setFlags(Flags.AccPublic);", "+\t\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "+\t\t\tproposal.setRelevance(relevance);", "+\t\t\tthis.requestor.accept(proposal);", "+\t\t\tif(DEBUG) {", "+\t\t\t\tthis.printDebug(proposal);", "+\t\t\t}"]}], "num": 68925}