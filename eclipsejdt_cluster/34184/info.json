{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "76d0024ac159b920a9f98b6f838152fc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "397feb656a7c2589e5bd9d3f81ea4c1b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/NamingConventions.java", "commitBeforeChange": "302df05b099c1ea06faca0b00f806513c7db6904", "commitAfterChange": "c661afbb38268ca6f18a772df813f6c69bb9e17c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t\tpublic char[][] getResults()", "signatureAfterChange": " \t\tpublic char[][] getResults()", "diff": ["-\t\t\t\tfirstPrefixAndFirstSuffixResultsCount", "-\t\t\t\t+ firstPrefixAndSuffixResultsCount", "-\t\t\t\t+ prefixAndFirstSuffixResultsCount", "-\t\t\t\t+ prefixAndSuffixResultsCount", "-\t\t\t\t+ firstPrefixResultsCount", "-\t\t\t\t+ prefixResultsCount", "-\t\t\t\t+ firstSuffixResultsCount", "-\t\t\t\t+ suffixResultsCount", "-\t\t\t\t+ otherResultsCount;", "+\t\t\t\tthis.firstPrefixAndFirstSuffixResultsCount", "+\t\t\t\t+ this.firstPrefixAndSuffixResultsCount", "+\t\t\t\t+ this.prefixAndFirstSuffixResultsCount", "+\t\t\t\t+ this.prefixAndSuffixResultsCount", "+\t\t\t\t+ this.firstPrefixResultsCount", "+\t\t\t\t+ this.prefixResultsCount", "+\t\t\t\t+ this.firstSuffixResultsCount", "+\t\t\t\t+ this.suffixResultsCount", "+\t\t\t\t+ this.otherResultsCount;", "-\t\t\tSystem.arraycopy(firstPrefixAndFirstSuffixResults, 0, results, index, firstPrefixAndFirstSuffixResultsCount);", "-\t\t\tindex += firstPrefixAndFirstSuffixResultsCount;", "-\t\t\tSystem.arraycopy(firstPrefixAndSuffixResults, 0, results, index, firstPrefixAndSuffixResultsCount);", "-\t\t\tindex += firstPrefixAndSuffixResultsCount;", "-\t\t\tSystem.arraycopy(prefixAndFirstSuffixResults, 0, results, index, prefixAndFirstSuffixResultsCount);", "-\t\t\tindex += prefixAndFirstSuffixResultsCount;\t\t", "-\t\t\tSystem.arraycopy(prefixAndSuffixResults, 0, results, index, prefixAndSuffixResultsCount);", "-\t\t\tindex += prefixAndSuffixResultsCount;", "-\t\t\tSystem.arraycopy(firstPrefixResults, 0, results, index, firstPrefixResultsCount);", "-\t\t\tindex += firstPrefixResultsCount;", "-\t\t\tSystem.arraycopy(prefixResults, 0, results, index, prefixResultsCount);", "-\t\t\tindex += prefixResultsCount;", "-\t\t\tSystem.arraycopy(firstSuffixResults, 0, results, index, firstSuffixResultsCount);", "-\t\t\tindex += firstSuffixResultsCount;", "-\t\t\tSystem.arraycopy(suffixResults, 0, results, index, suffixResultsCount);", "-\t\t\tindex += suffixResultsCount;", "-\t\t\tSystem.arraycopy(otherResults, 0, results, index, otherResultsCount);", "+\t\t\tSystem.arraycopy(this.firstPrefixAndFirstSuffixResults, 0, results, index, this.firstPrefixAndFirstSuffixResultsCount);", "+\t\t\tindex += this.firstPrefixAndFirstSuffixResultsCount;", "+\t\t\tSystem.arraycopy(this.firstPrefixAndSuffixResults, 0, results, index, this.firstPrefixAndSuffixResultsCount);", "+\t\t\tindex += this.firstPrefixAndSuffixResultsCount;", "+\t\t\tSystem.arraycopy(this.prefixAndFirstSuffixResults, 0, results, index, this.prefixAndFirstSuffixResultsCount);", "+\t\t\tindex += this.prefixAndFirstSuffixResultsCount;\t\t", "+\t\t\tSystem.arraycopy(this.prefixAndSuffixResults, 0, results, index, this.prefixAndSuffixResultsCount);", "+\t\t\tindex += this.prefixAndSuffixResultsCount;", "+\t\t\tSystem.arraycopy(this.firstPrefixResults, 0, results, index, this.firstPrefixResultsCount);", "+\t\t\tindex += this.firstPrefixResultsCount;", "+\t\t\tSystem.arraycopy(this.prefixResults, 0, results, index, this.prefixResultsCount);", "+\t\t\tindex += this.prefixResultsCount;", "+\t\t\tSystem.arraycopy(this.firstSuffixResults, 0, results, index, this.firstSuffixResultsCount);", "+\t\t\tindex += this.firstSuffixResultsCount;", "+\t\t\tSystem.arraycopy(this.suffixResults, 0, results, index, this.suffixResultsCount);", "+\t\t\tindex += this.suffixResultsCount;", "+\t\t\tSystem.arraycopy(this.otherResults, 0, results, index, this.otherResultsCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "717b0f480e17b85d63e33bd180ed6139", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "471b30fcd9175fdd69611c88984722b9e0b5e4ee", "commitAfterChange": "1a356ccfb3b5b00256393a405276ebc654766b8b", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "  \tprivate void printBlockComment(int currentTokenStartPosition, int currentTokenEndPosition)", "signatureAfterChange": "  \tprivate void printBlockComment(int currentTokenStartPosition, int currentTokenEndPosition)", "diff": ["-\t\tint firstColumn = this.column;", "+\t\tint maxColumn = this.formatter.preferences.comment_line_length + 1;", "-\t\tthis.indentationLevel = getNextIndentationLevel(firstColumn);", "-\t\tthis.numberOfIndentations = this.indentationLevel % this.indentationSize;", "+\t\tthis.indentationLevel = (this.column / this.tabLength) * this.tabLength;", "+\t\tthis.column = this.indentationLevel + 1;", "+\t\tthis.numberOfIndentations = this.indentationLevel / this.indentationSize;", "-\t\tint maxColumn = this.formatter.preferences.comment_line_length + 1;", "-    \t\tboolean insertSpace = (previousToken == TerminalTokens.TokenNameWHITESPACE || newLine) && (!firstWord || !hasTokens);", "+    \t\tboolean insertSpace = (previousToken == TerminalTokens.TokenNameWHITESPACE || newLine || previousToken == -1) && (!firstWord || !hasTokens);", "+\t\t\t\tcase TerminalTokens.TokenNameMULTIPLY_EQUAL:", "+\t\t\t\t\tif (newLine) {", "+\t\t\t\t\t\tthis.scanner.resetTo(this.scanner.startPosition, currentTokenEndPosition-1);", "+\t\t\t\t\t\tthis.scanner.getNextChar(); // consume the multiply", "+\t\t\t\t\t\tpreviousToken = TerminalTokens.TokenNameMULTIPLY;", "+\t\t\t\t\t\tscannerLine = Util.getLineNumber(this.scanner.getCurrentTokenEndPosition(), this.lineEnds, scannerLine>1 ? scannerLine-2 : 0, this.maxLines);", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "-\t\t\t\tif ((firstColumn+tokensString.length()+tokenLength) > maxColumn) {", "+\t\t\t\tif ((this.indentationLevel+tokensString.length()+tokenLength) > maxColumn) {", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tif (buffer.charAt(0) != ' ') {", "-\t\t\t\t\treplacement.append(' ');", "-\t\t\t\t\tthis.column++;"]}], "num": 34184}