{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8670bc1db6deb1e9da3eee15062e968b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31196e58fa8af31ae5e5d7c32c8dd218", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "d12b44bacc78e993e03b687b009846c3ad2c83b6", "commitAfterChange": "4cc2f8f4e127cb2b5311bd70a3aa9e42278cea32", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\t\t\t\tSearchMatch match = locator.newTypeReferenceMatch(element, accuracy, ((int) ((positions[this.pattern.qualification == null ? lastIndex : 0]) >>> 32)), ((int) positions[lastIndex])+1, importRef);", "+\t\t\t\t\tint start = (int) ((positions[this.pattern.qualification == null ? lastIndex : 0]) >>> 32);", "+\t\t\t\t\tint end = (int) positions[lastIndex];", "+\t\t\t\t\tSearchMatch match = locator.newTypeReferenceMatch(element, accuracy, start, end-start+1, importRef);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "680c1164a967c568b8b18f8e8f36be67", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "d12b44bacc78e993e03b687b009846c3ad2c83b6", "commitAfterChange": "4cc2f8f4e127cb2b5311bd70a3aa9e42278cea32", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " protected void matchReportReference(QualifiedNameReference qNameRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(QualifiedNameReference qNameRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\t\t\t\tSearchMatch match = locator.newTypeReferenceMatch(element, accuracy, ((int) ((positions[this.pattern.qualification == null ? lastIndex : 0]) >>> 32)), ((int) positions[lastIndex])+1, qNameRef);", "+\t\t\t\t\tint start = (int) ((positions[this.pattern.qualification == null ? lastIndex : 0]) >>> 32);", "+\t\t\t\t\tint end = (int) positions[lastIndex];", "+\t\t\t\t\tSearchMatch match = locator.newTypeReferenceMatch(element, accuracy, start, end-start+1, qNameRef);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d82955f28509f35aae6362d86040bce1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "9cd8ac9158e8cf65a77f69d8bfcd62dc9418f984", "commitAfterChange": "c8ff3cbc92fbc03cd36a58b694b93e2376e6a266", "methodNumberBeforeChange": 472, "methodNumberAfterChange": 472, "signatureBeforeChange": " \tpublic void _test451()", "signatureAfterChange": " \tpublic void test451()", "diff": ["-\tpublic void _test451() {", "+\tpublic void test451() {", "-\t\tString s;", "-\t\t\ts = sourceUnit.getSource();", "-\t\t\trunTest(codeFormatter, s, \"test451\", \"Format.java\", CodeFormatter.K_COMPILATION_UNIT, 0, false, s.indexOf(\"private\"), s.indexOf(\";\") + 1, \"\\n\");//$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$", "+\t\t\tString s = sourceUnit.getSource();", "+\t\t\tint start = s.indexOf(\"private\");", "+\t\t\tint end = s.indexOf(\";\");", "+\t\t\trunTest(codeFormatter, s, \"test451\", \"Format.java\", CodeFormatter.K_COMPILATION_UNIT, 0, false, start, end - start + 1, null);//$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e72295dff9fff72056e9962de827f76e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "d12b44bacc78e993e03b687b009846c3ad2c83b6", "commitAfterChange": "4cc2f8f4e127cb2b5311bd70a3aa9e42278cea32", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " protected void matchReportReference(QualifiedTypeReference qTypeRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(QualifiedTypeReference qTypeRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\t\t\t\tSearchMatch match = locator.newTypeReferenceMatch(element, accuracy, ((int) ((positions[this.pattern.qualification == null ? lastIndex : 0]) >>> 32)), ((int) positions[lastIndex])+1, qTypeRef);", "+\t\t\t\t\tint start = (int) ((positions[this.pattern.qualification == null ? lastIndex : 0]) >>> 32);", "+\t\t\t\t\tint end = (int) positions[lastIndex];", "+\t\t\t\t\tSearchMatch match = locator.newTypeReferenceMatch(element, accuracy, start, end-start+1, qTypeRef);"]}], "num": 60835}