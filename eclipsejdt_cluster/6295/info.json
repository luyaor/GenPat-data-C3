{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3aa6352d80ce8721fab5c15c4a9a9a70", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1532bbe007a074ad7276bb456ec39018", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 134, "signatureBeforeChange": " \tpublic void test129()", "signatureAfterChange": " public void test129()", "diff": ["-\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=141155", "-\tpublic void test129() {", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public enum X {\\n\" + ", "-\t\t\t\t\"        A, B, C;\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t},", "-\t\t\t\"\");", "-\t\t", "-\t\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "-\t\tString actualOutput = null;", "-\t\ttry {", "-\t\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +\"X.class\"));", "-\t\t\tactualOutput =", "-\t\t\t\tdisassembler.disassemble(", "-\t\t\t\t\tclassFileBytes,", "-\t\t\t\t\t\"\\n\",", "-\t\t\t\t\tClassFileBytesDisassembler.DETAILED); ", "-\t\t} catch (org.eclipse.jdt.core.util.ClassFormatException e) {", "-\t\t\tassertTrue(\"ClassFormatException\", false);", "-\t\t} catch (IOException e) {", "-\t\t\tassertTrue(\"IOException\", false);", "-\t\t}", "-\t\t", "-\t\tString expectedOutput = ", "-\t\t\t\"// Signature: Ljava/lang/Enum<LX;>;\\n\" + ", "-\t\t\t\"public final enum X {\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"  // Field descriptor #6 LX;\\n\" + ", "-\t\t\t\"  public static final enum X A;\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"  // Field descriptor #6 LX;\\n\" + ", "-\t\t\t\"  public static final enum X B;\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"  // Field descriptor #6 LX;\\n\" + ", "-\t\t\t\"  public static final enum X C;\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"  // Field descriptor #10 [LX;\\n\" + ", "-\t\t\t\"  private static final synthetic X[] ENUM$VALUES;\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"  // Method descriptor #12 ()V\\n\" + ", "-\t\t\t\"  // Stack: 10, Locals: 0\\n\" + ", "-\t\t\t\"  static {};\\n\" + ", "-\t\t\t\"     0  new X [1]\\n\" + ", "-\t\t\t\"     3  dup\\n\" + ", "-\t\t\t\"     4  ldc <String \\\"A\\\"> [14]\\n\" + ", "-\t\t\t\"     6  iconst_0\\n\" + ", "-\t\t\t\"     7  invokespecial X(java.lang.String, int) [15]\\n\" + ", "-\t\t\t\"    10  putstatic X.A : X [19]\\n\" + ", "-\t\t\t\"    13  new X [1]\\n\" + ", "-\t\t\t\"    16  dup\\n\" + ", "-\t\t\t\"    17  ldc <String \\\"B\\\"> [21]\\n\" + ", "-\t\t\t\"    19  iconst_1\\n\" + ", "-\t\t\t\"    20  invokespecial X(java.lang.String, int) [15]\\n\" + ", "-\t\t\t\"    23  putstatic X.B : X [22]\\n\" + ", "-\t\t\t\"    26  new X [1]\\n\" + ", "-\t\t\t\"    29  dup\\n\" + ", "-\t\t\t\"    30  ldc <String \\\"C\\\"> [24]\\n\" + ", "-\t\t\t\"    32  iconst_2\\n\" + ", "-\t\t\t\"    33  invokespecial X(java.lang.String, int) [15]\\n\" + ", "-\t\t\t\"    36  putstatic X.C : X [25]\\n\" + ", "-\t\t\t\"    39  iconst_3\\n\" + ", "-\t\t\t\"    40  anewarray X [1]\\n\" + ", "-\t\t\t\"    43  dup\\n\" + ", "-\t\t\t\"    44  iconst_0\\n\" + ", "-\t\t\t\"    45  getstatic X.A : X [19]\\n\" + ", "-\t\t\t\"    48  aastore\\n\" + ", "-\t\t\t\"    49  dup\\n\" + ", "-\t\t\t\"    50  iconst_1\\n\" + ", "-\t\t\t\"    51  getstatic X.B : X [22]\\n\" + ", "-\t\t\t\"    54  aastore\\n\" + ", "-\t\t\t\"    55  dup\\n\" + ", "-\t\t\t\"    56  iconst_2\\n\" + ", "-\t\t\t\"    57  getstatic X.C : X [25]\\n\" + ", "-\t\t\t\"    60  aastore\\n\" + ", "-\t\t\t\"    61  putstatic X.ENUM$VALUES : X[] [27]\\n\" + ", "-\t\t\t\"    64  return\\n\" + ", "-\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\"        [pc: 0, line: 2]\\n\" + ", "-\t\t\t\"        [pc: 39, line: 1]\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"  // Method descriptor #18 (Ljava/lang/String;I)V\\n\" + ", "-\t\t\t\"  // Stack: 3, Locals: 3\\n\" + ", "-\t\t\t\"  private X(java.lang.String arg0, int arg1);\\n\" + ", "-\t\t\t\"    0  aload_0 [this]\\n\" + ", "-\t\t\t\"    1  aload_1\\n\" + ", "-\t\t\t\"    2  iload_2\\n\" + ", "-\t\t\t\"    3  invokespecial java.lang.Enum(java.lang.String, int) [31]\\n\" + ", "-\t\t\t\"    6  return\\n\" + ", "-\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\"        [pc: 0, line: 1]\\n\" + ", "-\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 7] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"  // Method descriptor #34 ()[LX;\\n\" + ", "-\t\t\t\"  // Stack: 5, Locals: 3\\n\" + ", "-\t\t\t\"  public static X[] values();\\n\" + ", "-\t\t\t\"     0  getstatic X.ENUM$VALUES : X[] [27]\\n\" + ", "-\t\t\t\"     3  dup\\n\" + ", "-\t\t\t\"     4  astore_0\\n\" + ", "-\t\t\t\"     5  iconst_0\\n\" + ", "-\t\t\t\"     6  aload_0\\n\" + ", "-\t\t\t\"     7  arraylength\\n\" + ", "-\t\t\t\"     8  dup\\n\" + ", "-\t\t\t\"     9  istore_1\\n\" + ", "-\t\t\t\"    10  anewarray X [1]\\n\" + ", "-\t\t\t\"    13  dup\\n\" + ", "-\t\t\t\"    14  astore_2\\n\" + ", "-\t\t\t\"    15  iconst_0\\n\" + ", "-\t\t\t\"    16  iload_1\\n\" + ", "-\t\t\t\"    17  invokestatic java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int) : void [35]\\n\" + ", "-\t\t\t\"    20  aload_2\\n\" + ", "-\t\t\t\"    21  areturn\\n\" + ", "-\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\"        [pc: 0, line: 1]\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"  // Method descriptor #42 (Ljava/lang/String;)LX;\\n\" + ", "-\t\t\t\"  // Stack: 3, Locals: 4\\n\" + ", "-\t\t\t\"  public static X valueOf(java.lang.String arg0);\\n\" + ", "-\t\t\t\"     0  getstatic X.ENUM$VALUES : X[] [27]\\n\" + ", "-\t\t\t\"     3  dup\\n\" + ", "-\t\t\t\"     4  astore_1\\n\" + ", "-\t\t\t\"     5  arraylength\\n\" + ", "-\t\t\t\"     6  istore_2\\n\" + ", "-\t\t\t\"     7  goto 27\\n\" + ", "-\t\t\t\"    10  aload_0\\n\" + ", "-\t\t\t\"    11  aload_1\\n\" + ", "-\t\t\t\"    12  iload_2\\n\" + ", "-\t\t\t\"    13  aaload\\n\" + ", "-\t\t\t\"    14  dup\\n\" + ", "-\t\t\t\"    15  astore_3\\n\" + ", "-\t\t\t\"    16  invokevirtual X.name() : java.lang.String [43]\\n\" + ", "-\t\t\t\"    19  invokevirtual java.lang.String.equals(java.lang.Object) : boolean [47]\\n\" + ", "-\t\t\t\"    22  ifeq 27\\n\" + ", "-\t\t\t\"    25  aload_3\\n\" + ", "-\t\t\t\"    26  areturn\\n\" + ", "-\t\t\t\"    27  iinc 2 -1\\n\" + ", "-\t\t\t\"    30  iload_2\\n\" + ", "-\t\t\t\"    31  ifge 10\\n\" + ", "-\t\t\t\"    34  new java.lang.IllegalArgumentException [53]\\n\" + ", "-\t\t\t\"    37  dup\\n\" + ", "-\t\t\t\"    38  aload_0\\n\" + ", "-\t\t\t\"    39  invokespecial java.lang.IllegalArgumentException(java.lang.String) [55]\\n\" + ", "-\t\t\t\"    42  athrow\\n\" + ", "-\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\"        [pc: 0, line: 1]\\n\"; ", "-\t\t\t", "-\t\tint index = actualOutput.indexOf(expectedOutput);", "-\t\tif (index == -1 || expectedOutput.length() == 0) {", "-\t\t\tSystem.out.println(Util.displayString(actualOutput, 3));", "-\t\t}", "-\t\tif (index == -1) {", "-\t\t\tassertEquals(\"unexpected bytecode sequence\", expectedOutput, actualOutput);", "-\t\t}", "-\t}\t", "+// https://bugs.eclipse.org/bugs/show_bug.cgi?id=141155", "+public void test129() {", "+\tthis.runConformTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public enum X {\\n\" + ", "+\t\t\t\"        A, B, C;\\n\" + ", "+\t\t\t\"}\\n\",", "+\t\t},", "+\t\t\"\");", "+\t", "+\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "+\tString actualOutput = null;", "+\ttry {", "+\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +\"X.class\"));", "+\t\tactualOutput =", "+\t\t\tdisassembler.disassemble(", "+\t\t\t\tclassFileBytes,", "+\t\t\t\t\"\\n\",", "+\t\t\t\tClassFileBytesDisassembler.DETAILED); ", "+\t} catch (org.eclipse.jdt.core.util.ClassFormatException e) {", "+\t\tassertTrue(\"ClassFormatException\", false);", "+\t} catch (IOException e) {", "+\t\tassertTrue(\"IOException\", false);", "+\t}", "+\t", "+\tString expectedOutput = ", "+\t\t\"// Signature: Ljava/lang/Enum<LX;>;\\n\" + ", "+\t\t\"public final enum X {\\n\" + ", "+\t\t\"  \\n\" + ", "+\t\t\"  // Field descriptor #6 LX;\\n\" + ", "+\t\t\"  public static final enum X A;\\n\" + ", "+\t\t\"  \\n\" + ", "+\t\t\"  // Field descriptor #6 LX;\\n\" + ", "+\t\t\"  public static final enum X B;\\n\" + ", "+\t\t\"  \\n\" + ", "+\t\t\"  // Field descriptor #6 LX;\\n\" + ", "+\t\t\"  public static final enum X C;\\n\" + ", "+\t\t\"  \\n\" + ", "+\t\t\"  // Field descriptor #10 [LX;\\n\" + ", "+\t\t\"  private static final synthetic X[] ENUM$VALUES;\\n\" + ", "+\t\t\"  \\n\" + ", "+\t\t\"  // Method descriptor #12 ()V\\n\" + ", "+\t\t\"  // Stack: 10, Locals: 0\\n\" + ", "+\t\t\"  static {};\\n\" + ", "+\t\t\"     0  new X [1]\\n\" + ", "+\t\t\"     3  dup\\n\" + ", "+\t\t\"     4  ldc <String \\\"A\\\"> [14]\\n\" + ", "+\t\t\"     6  iconst_0\\n\" + ", "+\t\t\"     7  invokespecial X(java.lang.String, int) [15]\\n\" + ", "+\t\t\"    10  putstatic X.A : X [19]\\n\" + ", "+\t\t\"    13  new X [1]\\n\" + ", "+\t\t\"    16  dup\\n\" + ", "+\t\t\"    17  ldc <String \\\"B\\\"> [21]\\n\" + ", "+\t\t\"    19  iconst_1\\n\" + ", "+\t\t\"    20  invokespecial X(java.lang.String, int) [15]\\n\" + ", "+\t\t\"    23  putstatic X.B : X [22]\\n\" + ", "+\t\t\"    26  new X [1]\\n\" + ", "+\t\t\"    29  dup\\n\" + ", "+\t\t\"    30  ldc <String \\\"C\\\"> [24]\\n\" + ", "+\t\t\"    32  iconst_2\\n\" + ", "+\t\t\"    33  invokespecial X(java.lang.String, int) [15]\\n\" + ", "+\t\t\"    36  putstatic X.C : X [25]\\n\" + ", "+\t\t\"    39  iconst_3\\n\" + ", "+\t\t\"    40  anewarray X [1]\\n\" + ", "+\t\t\"    43  dup\\n\" + ", "+\t\t\"    44  iconst_0\\n\" + ", "+\t\t\"    45  getstatic X.A : X [19]\\n\" + ", "+\t\t\"    48  aastore\\n\" + ", "+\t\t\"    49  dup\\n\" + ", "+\t\t\"    50  iconst_1\\n\" + ", "+\t\t\"    51  getstatic X.B : X [22]\\n\" + ", "+\t\t\"    54  aastore\\n\" + ", "+\t\t\"    55  dup\\n\" + ", "+\t\t\"    56  iconst_2\\n\" + ", "+\t\t\"    57  getstatic X.C : X [25]\\n\" + ", "+\t\t\"    60  aastore\\n\" + ", "+\t\t\"    61  putstatic X.ENUM$VALUES : X[] [27]\\n\" + ", "+\t\t\"    64  return\\n\" + ", "+\t\t\"      Line numbers:\\n\" + ", "+\t\t\"        [pc: 0, line: 2]\\n\" + ", "+\t\t\"        [pc: 39, line: 1]\\n\" + ", "+\t\t\"  \\n\" + ", "+\t\t\"  // Method descriptor #18 (Ljava/lang/String;I)V\\n\" + ", "+\t\t\"  // Stack: 3, Locals: 3\\n\" + ", "+\t\t\"  private X(java.lang.String arg0, int arg1);\\n\" + ", "+\t\t\"    0  aload_0 [this]\\n\" + ", "+\t\t\"    1  aload_1\\n\" + ", "+\t\t\"    2  iload_2\\n\" + ", "+\t\t\"    3  invokespecial java.lang.Enum(java.lang.String, int) [31]\\n\" + ", "+\t\t\"    6  return\\n\" + ", "+\t\t\"      Line numbers:\\n\" + ", "+\t\t\"        [pc: 0, line: 1]\\n\" + ", "+\t\t\"      Local variable table:\\n\" + ", "+\t\t\"        [pc: 0, pc: 7] local: this index: 0 type: X\\n\" + ", "+\t\t\"  \\n\" + ", "+\t\t\"  // Method descriptor #34 ()[LX;\\n\" + ", "+\t\t\"  // Stack: 5, Locals: 3\\n\" + ", "+\t\t\"  public static X[] values();\\n\" + ", "+\t\t\"     0  getstatic X.ENUM$VALUES : X[] [27]\\n\" + ", "+\t\t\"     3  dup\\n\" + ", "+\t\t\"     4  astore_0\\n\" + ", "+\t\t\"     5  iconst_0\\n\" + ", "+\t\t\"     6  aload_0\\n\" + ", "+\t\t\"     7  arraylength\\n\" + ", "+\t\t\"     8  dup\\n\" + ", "+\t\t\"     9  istore_1\\n\" + ", "+\t\t\"    10  anewarray X [1]\\n\" + ", "+\t\t\"    13  dup\\n\" + ", "+\t\t\"    14  astore_2\\n\" + ", "+\t\t\"    15  iconst_0\\n\" + ", "+\t\t\"    16  iload_1\\n\" + ", "+\t\t\"    17  invokestatic java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int) : void [35]\\n\" + ", "+\t\t\"    20  aload_2\\n\" + ", "+\t\t\"    21  areturn\\n\" + ", "+\t\t\"      Line numbers:\\n\" + ", "+\t\t\"        [pc: 0, line: 1]\\n\" + ", "+\t\t\"  \\n\" + ", "+\t\t\"  // Method descriptor #42 (Ljava/lang/String;)LX;\\n\" + ", "+\t\t\"  // Stack: 2, Locals: 1\\n\" + ", "+\t\t\"  public static X valueOf(java.lang.String arg0);\\n\" + ", "+\t\t\"     0  ldc <Class X> [1]\\n\" + ", "+\t\t\"     2  aload_0\\n\" + ", "+\t\t\"     3  invokestatic java.lang.Enum.valueOf(java.lang.Class, java.lang.String) : java.lang.Enum [43]\\n\" + ", "+\t\t\"     6  checkcast X [1]\\n\" + ", "+\t\t\"     9  areturn\\n\" + ", "+\t\t\"      Line numbers:\\n\" + ", "+\t\t\"        [pc: 0, line: 1]\\n\" + ", "+\t\t\"}\"; ", "+\t\t", "+\tint index = actualOutput.indexOf(expectedOutput);", "+\tif (index == -1 || expectedOutput.length() == 0) {", "+\t\tSystem.out.println(Util.displayString(actualOutput, 3));", "+\t}", "+\tif (index == -1) {", "+\t\tassertEquals(\"unexpected bytecode sequence\", expectedOutput, actualOutput);", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d837906fbd45f98f12eaf75a75297aee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/InnerEmulationTest.java", "commitBeforeChange": "baba91778491837a84be9560b81c83086d98c36e", "commitAfterChange": "57b083b793c3b8c2d5620895f00ff1c58e226e44", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 129, "signatureBeforeChange": " public void test132()", "signatureAfterChange": " public void test132()", "diff": ["-\t\t\"1. WARNING in X.java (at line 3)\\n\" +", "-\t\t\"\tclass Local {}\\n\" +", "-\t\t\"\t      ^^^^^\\n\" +", "-\t\t\"The type Local is never used locally\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. WARNING in X.java (at line 4)\\n\" +", "-\t\t\"\tclass Foo {\\n\" +", "-\t\t\"\t      ^^^\\n\" +", "-\t\t\"The type Foo is never used locally\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"3. WARNING in X.java (at line 5)\\n\" +", "-\t\t\"\tvoid foo() {\\n\" +", "-\t\t\"\t     ^^^^^\\n\" +", "-\t\t\"The method foo() from the type Foo is never used locally\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"4. WARNING in X.java (at line 6)\\n\" +", "+\t\t\"1. WARNING in X.java (at line 6)\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"5. WARNING in X.java (at line 6)\\n\" +", "-\t\t\"\tclass Local {}\\n\" +", "-\t\t\"\t      ^^^^^\\n\" +", "-\t\t\"The type Local is never used locally\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5883c1ca5028620cdce1fc7a328f614", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": " \tpublic void test094()", "signatureAfterChange": " public void test094()", "diff": ["+// check super bit is set", "+public void test094() {", "+\tthis.runConformTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public enum X {\\n\" + ", "+\t\t\t\"}\\n\",", "+\t\t},", "+\t\t\"\");", "+\t", "+\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "+\tString actualOutput = null;", "+\ttry {", "+\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +\"X.class\"));", "+\t\tactualOutput =", "+\t\t\tdisassembler.disassemble(", "+\t\t\t\tclassFileBytes,", "+\t\t\t\t\"\\n\",", "+\t\t\t\tClassFileBytesDisassembler.DETAILED); ", "+\t} catch (org.eclipse.jdt.core.util.ClassFormatException e) {", "+\t\tassertTrue(\"ClassFormatException\", false);", "+\t} catch (IOException e) {", "+\t\tassertTrue(\"IOException\", false);", "-\t// check super bit is set", "-\tpublic void test094() {", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public enum X {\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t},", "-\t\t\t\"\");", "+\t", "+\tString expectedOutput = ", "+\t\t\"// Signature: Ljava/lang/Enum<LX;>;\\n\" + ", "+\t\t\"public final enum X {\\n\" + ", "+\t\t\"  \\n\" + ", "+\t\t\"  // Field descriptor #6 [LX;\\n\" + ", "+\t\t\"  private static final synthetic X[] ENUM$VALUES;\\n\" + ", "+\t\t\"  \\n\" + ", "+\t\t\"  // Method descriptor #8 ()V\\n\" + ", "+\t\t\"  // Stack: 1, Locals: 0\\n\" + ", "+\t\t\"  static {};\\n\" + ", "+\t\t\"    0  iconst_0\\n\" + ", "+\t\t\"    1  anewarray X [1]\\n\" + ", "+\t\t\"    4  putstatic X.ENUM$VALUES : X[] [10]\\n\" + ", "+\t\t\"    7  return\\n\" + ", "+\t\t\"      Line numbers:\\n\" + ", "+\t\t\"        [pc: 0, line: 1]\\n\" + ", "+\t\t\"  \\n\" + ", "+\t\t\"  // Method descriptor #15 (Ljava/lang/String;I)V\\n\" + ", "+\t\t\"  // Stack: 3, Locals: 3\\n\" + ", "+\t\t\"  private X(java.lang.String arg0, int arg1);\\n\" + ", "+\t\t\"    0  aload_0 [this]\\n\" + ", "+\t\t\"    1  aload_1\\n\" + ", "+\t\t\"    2  iload_2\\n\" + ", "+\t\t\"    3  invokespecial java.lang.Enum(java.lang.String, int) [16]\\n\" + ", "+\t\t\"    6  return\\n\" + ", "+\t\t\"      Line numbers:\\n\" + ", "+\t\t\"        [pc: 0, line: 1]\\n\" + ", "+\t\t\"      Local variable table:\\n\" + ", "+\t\t\"        [pc: 0, pc: 7] local: this index: 0 type: X\\n\" + ", "+\t\t\"  \\n\" + ", "+\t\t\"  // Method descriptor #21 ()[LX;\\n\" + ", "+\t\t\"  // Stack: 5, Locals: 3\\n\" + ", "+\t\t\"  public static X[] values();\\n\" + ", "+\t\t\"     0  getstatic X.ENUM$VALUES : X[] [10]\\n\" + ", "+\t\t\"     3  dup\\n\" + ", "+\t\t\"     4  astore_0\\n\" + ", "+\t\t\"     5  iconst_0\\n\" + ", "+\t\t\"     6  aload_0\\n\" + ", "+\t\t\"     7  arraylength\\n\" + ", "+\t\t\"     8  dup\\n\" + ", "+\t\t\"     9  istore_1\\n\" + ", "+\t\t\"    10  anewarray X [1]\\n\" + ", "+\t\t\"    13  dup\\n\" + ", "+\t\t\"    14  astore_2\\n\" + ", "+\t\t\"    15  iconst_0\\n\" + ", "+\t\t\"    16  iload_1\\n\" + ", "+\t\t\"    17  invokestatic java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int) : void [22]\\n\" + ", "+\t\t\"    20  aload_2\\n\" + ", "+\t\t\"    21  areturn\\n\" + ", "+\t\t\"      Line numbers:\\n\" + ", "+\t\t\"        [pc: 0, line: 1]\\n\" + ", "+\t\t\"  \\n\" + ", "+\t\t\"  // Method descriptor #29 (Ljava/lang/String;)LX;\\n\" + ", "+\t\t\"  // Stack: 2, Locals: 1\\n\" + ", "+\t\t\"  public static X valueOf(java.lang.String arg0);\\n\" + ", "+\t\t\"     0  ldc <Class X> [1]\\n\" + ", "+\t\t\"     2  aload_0\\n\" + ", "+\t\t\"     3  invokestatic java.lang.Enum.valueOf(java.lang.Class, java.lang.String) : java.lang.Enum [30]\\n\" + ", "+\t\t\"     6  checkcast X [1]\\n\" + ", "+\t\t\"     9  areturn\\n\" + ", "+\t\t\"      Line numbers:\\n\" + ", "+\t\t\"        [pc: 0, line: 1]\\n\"; ", "-\t\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "-\t\tString actualOutput = null;", "-\t\ttry {", "-\t\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +\"X.class\"));", "-\t\t\tactualOutput =", "-\t\t\t\tdisassembler.disassemble(", "-\t\t\t\t\tclassFileBytes,", "-\t\t\t\t\t\"\\n\",", "-\t\t\t\t\tClassFileBytesDisassembler.DETAILED); ", "-\t\t} catch (org.eclipse.jdt.core.util.ClassFormatException e) {", "-\t\t\tassertTrue(\"ClassFormatException\", false);", "-\t\t} catch (IOException e) {", "-\t\t\tassertTrue(\"IOException\", false);", "-\t\t}", "-\t\t", "-\t\tString expectedOutput = ", "-\t\t\t\"// Signature: Ljava/lang/Enum<LX;>;\\n\" + ", "-\t\t\t\"public final enum X {\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"  // Field descriptor #6 [LX;\\n\" + ", "-\t\t\t\"  private static final synthetic X[] ENUM$VALUES;\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"  // Method descriptor #8 ()V\\n\" + ", "-\t\t\t\"  // Stack: 1, Locals: 0\\n\" + ", "-\t\t\t\"  static {};\\n\" + ", "-\t\t\t\"    0  iconst_0\\n\" + ", "-\t\t\t\"    1  anewarray X [1]\\n\" + ", "-\t\t\t\"    4  putstatic X.ENUM$VALUES : X[] [10]\\n\" + ", "-\t\t\t\"    7  return\\n\" + ", "-\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\"        [pc: 0, line: 1]\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"  // Method descriptor #15 (Ljava/lang/String;I)V\\n\" + ", "-\t\t\t\"  // Stack: 3, Locals: 3\\n\" + ", "-\t\t\t\"  private X(java.lang.String arg0, int arg1);\\n\" + ", "-\t\t\t\"    0  aload_0 [this]\\n\" + ", "-\t\t\t\"    1  aload_1\\n\" + ", "-\t\t\t\"    2  iload_2\\n\" + ", "-\t\t\t\"    3  invokespecial java.lang.Enum(java.lang.String, int) [16]\\n\" + ", "-\t\t\t\"    6  return\\n\" + ", "-\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\"        [pc: 0, line: 1]\\n\" + ", "-\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 7] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"  // Method descriptor #21 ()[LX;\\n\" + ", "-\t\t\t\"  // Stack: 5, Locals: 3\\n\" + ", "-\t\t\t\"  public static X[] values();\\n\" + ", "-\t\t\t\"     0  getstatic X.ENUM$VALUES : X[] [10]\\n\" + ", "-\t\t\t\"     3  dup\\n\" + ", "-\t\t\t\"     4  astore_0\\n\" + ", "-\t\t\t\"     5  iconst_0\\n\" + ", "-\t\t\t\"     6  aload_0\\n\" + ", "-\t\t\t\"     7  arraylength\\n\" + ", "-\t\t\t\"     8  dup\\n\" + ", "-\t\t\t\"     9  istore_1\\n\" + ", "-\t\t\t\"    10  anewarray X [1]\\n\" + ", "-\t\t\t\"    13  dup\\n\" + ", "-\t\t\t\"    14  astore_2\\n\" + ", "-\t\t\t\"    15  iconst_0\\n\" + ", "-\t\t\t\"    16  iload_1\\n\" + ", "-\t\t\t\"    17  invokestatic java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int) : void [22]\\n\" + ", "-\t\t\t\"    20  aload_2\\n\" + ", "-\t\t\t\"    21  areturn\\n\" + ", "-\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\"        [pc: 0, line: 1]\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"  // Method descriptor #29 (Ljava/lang/String;)LX;\\n\" + ", "-\t\t\t\"  // Stack: 3, Locals: 4\\n\" + ", "-\t\t\t\"  public static X valueOf(java.lang.String arg0);\\n\" + ", "-\t\t\t\"     0  getstatic X.ENUM$VALUES : X[] [10]\\n\" + ", "-\t\t\t\"     3  dup\\n\" + ", "-\t\t\t\"     4  astore_1\\n\" + ", "-\t\t\t\"     5  arraylength\\n\" + ", "-\t\t\t\"     6  istore_2\\n\" + ", "-\t\t\t\"     7  goto 27\\n\" + ", "-\t\t\t\"    10  aload_0\\n\" + ", "-\t\t\t\"    11  aload_1\\n\" + ", "-\t\t\t\"    12  iload_2\\n\" + ", "-\t\t\t\"    13  aaload\\n\" + ", "-\t\t\t\"    14  dup\\n\" + ", "-\t\t\t\"    15  astore_3\\n\" + ", "-\t\t\t\"    16  invokevirtual X.name() : java.lang.String [30]\\n\" + ", "-\t\t\t\"    19  invokevirtual java.lang.String.equals(java.lang.Object) : boolean [34]\\n\" + ", "-\t\t\t\"    22  ifeq 27\\n\" + ", "-\t\t\t\"    25  aload_3\\n\" + ", "-\t\t\t\"    26  areturn\\n\" + ", "-\t\t\t\"    27  iinc 2 -1\\n\" + ", "-\t\t\t\"    30  iload_2\\n\" + ", "-\t\t\t\"    31  ifge 10\\n\" + ", "-\t\t\t\"    34  new java.lang.IllegalArgumentException [40]\\n\" + ", "-\t\t\t\"    37  dup\\n\" + ", "-\t\t\t\"    38  aload_0\\n\" + ", "-\t\t\t\"    39  invokespecial java.lang.IllegalArgumentException(java.lang.String) [42]\\n\" + ", "-\t\t\t\"    42  athrow\\n\" + ", "-\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\"        [pc: 0, line: 1]\\n\"; ", "-\t\t\t", "-\t\tint index = actualOutput.indexOf(expectedOutput);", "-\t\tif (index == -1 || expectedOutput.length() == 0) {", "-\t\t\tSystem.out.println(Util.displayString(actualOutput, 3));", "-\t\t}", "-\t\tif (index == -1) {", "-\t\t\tassertEquals(\"unexpected bytecode sequence\", expectedOutput, actualOutput);", "-\t\t}", "+\tint index = actualOutput.indexOf(expectedOutput);", "+\tif (index == -1 || expectedOutput.length() == 0) {", "+\t\tSystem.out.println(Util.displayString(actualOutput, 3));", "+\tif (index == -1) {", "+\t\tassertEquals(\"unexpected bytecode sequence\", expectedOutput, actualOutput);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "faaedc14acac21bdea40a1e1c99b22d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericsRegressionTest.java", "commitBeforeChange": "1666c32b249d36aa9547f4f66f511c5bb00d3d63", "commitAfterChange": "4e6bb96b0e120539a45cc4860f508bf12e097d37", "methodNumberBeforeChange": 162, "methodNumberAfterChange": 162, "signatureBeforeChange": " public void testBug453253()", "signatureAfterChange": " public void testBug454644()", "diff": ["-public void testBug453253() {", "+public void testBug454644() {", "-\t\t(this.complianceLevel < ClassFileConstants.JDK1_8 ?", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in example\\\\CollectionFactory.java (at line 42)\\n\" + ", "-\t\t\t\"\t@SuppressWarnings({ \\\"unchecked\\\", \\\"cast\\\" })\\n\" + ", "-\t\t\t\"\t                                 ^^^^^^\\n\" + ", "-\t\t\t\"Unnecessary @SuppressWarnings(\\\"cast\\\")\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. WARNING in example\\\\CollectionFactory.java (at line 55)\\n\" + ", "-\t\t\t\"\treturn EnumSet.copyOf((EnumSet) collection);\\n\" + ", "-\t\t\t\"\t                       ^^^^^^^\\n\" + ", "-\t\t\t\"EnumSet is a raw type. References to generic type EnumSet<E> should be parameterized\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. WARNING in example\\\\CollectionFactory.java (at line 87)\\n\" + ", "-\t\t\t\"\treturn EnumSet.noneOf((Class) elementType);\\n\" + ", "-\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Type safety: Unchecked invocation noneOf(Class) of the generic method noneOf(Class<E>) of type EnumSet\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. WARNING in example\\\\CollectionFactory.java (at line 87)\\n\" + ", "-\t\t\t\"\treturn EnumSet.noneOf((Class) elementType);\\n\" + ", "-\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Type safety: The expression of type EnumSet needs unchecked conversion to conform to Collection<E>\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"5. WARNING in example\\\\CollectionFactory.java (at line 87)\\n\" + ", "-\t\t\t\"\treturn EnumSet.noneOf((Class) elementType);\\n\" + ", "-\t\t\t\"\t                      ^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Type safety: The expression of type Class needs unchecked conversion to conform to Class<E>\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"6. WARNING in example\\\\CollectionFactory.java (at line 87)\\n\" + ", "-\t\t\t\"\treturn EnumSet.noneOf((Class) elementType);\\n\" + ", "-\t\t\t\"\t                       ^^^^^\\n\" + ", "-\t\t\t\"Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"7. WARNING in example\\\\CollectionFactory.java (at line 94)\\n\" + ", "-\t\t\t\"\treturn (Collection<E>) collectionClass.newInstance();\\n\" + ", "-\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Type safety: Unchecked cast from capture#13-of ? to Collection<E>\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t:", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in example\\\\CollectionFactory.java (at line 55)\\n\" + ", "-\t\t\t\"\treturn EnumSet.copyOf((EnumSet) collection);\\n\" + ", "-\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Type mismatch: cannot convert from EnumSet<Enum<Enum<E>>> to Collection<E>\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. WARNING in example\\\\CollectionFactory.java (at line 55)\\n\" + ", "-\t\t\t\"\treturn EnumSet.copyOf((EnumSet) collection);\\n\" + ", "-\t\t\t\"\t                       ^^^^^^^\\n\" + ", "-\t\t\t\"EnumSet is a raw type. References to generic type EnumSet<E> should be parameterized\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. ERROR in example\\\\CollectionFactory.java (at line 87)\\n\" + ", "-\t\t\t\"\treturn EnumSet.noneOf((Class) elementType);\\n\" + ", "-\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Type mismatch: cannot convert from EnumSet<Enum<Enum<E>>> to Collection<E>\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. WARNING in example\\\\CollectionFactory.java (at line 87)\\n\" + ", "-\t\t\t\"\treturn EnumSet.noneOf((Class) elementType);\\n\" + ", "-\t\t\t\"\t                       ^^^^^\\n\" + ", "-\t\t\t\"Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"5. WARNING in example\\\\CollectionFactory.java (at line 94)\\n\" + ", "-\t\t\t\"\treturn (Collection<E>) collectionClass.newInstance();\\n\" + ", "-\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Type safety: Unchecked cast from capture#13-of ? to Collection<E>\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t\t));", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in example\\\\CollectionFactory.java (at line 42)\\n\" + ", "+\t\t\"\t@SuppressWarnings({ \\\"unchecked\\\", \\\"cast\\\" })\\n\" + ", "+\t\t\"\t                                 ^^^^^^\\n\" + ", "+\t\t\"Unnecessary @SuppressWarnings(\\\"cast\\\")\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. WARNING in example\\\\CollectionFactory.java (at line 55)\\n\" + ", "+\t\t\"\treturn EnumSet.copyOf((EnumSet) collection);\\n\" + ", "+\t\t\"\t                       ^^^^^^^\\n\" + ", "+\t\t\"EnumSet is a raw type. References to generic type EnumSet<E> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. WARNING in example\\\\CollectionFactory.java (at line 87)\\n\" + ", "+\t\t\"\treturn EnumSet.noneOf((Class) elementType);\\n\" + ", "+\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: Unchecked invocation noneOf(Class) of the generic method noneOf(Class<E>) of type EnumSet\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. WARNING in example\\\\CollectionFactory.java (at line 87)\\n\" + ", "+\t\t\"\treturn EnumSet.noneOf((Class) elementType);\\n\" + ", "+\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: The expression of type EnumSet needs unchecked conversion to conform to Collection<E>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. WARNING in example\\\\CollectionFactory.java (at line 87)\\n\" + ", "+\t\t\"\treturn EnumSet.noneOf((Class) elementType);\\n\" + ", "+\t\t\"\t                      ^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t(this.complianceLevel < ClassFileConstants.JDK1_8 ", "+\t\t? \"Type safety: The expression of type Class needs unchecked conversion to conform to Class<E>\\n\"", "+\t\t: \"Type safety: The expression of type Class needs unchecked conversion to conform to Class<Enum<Enum<E>>>\\n\") + ", "+\t\t\"----------\\n\" + ", "+\t\t\"6. WARNING in example\\\\CollectionFactory.java (at line 87)\\n\" + ", "+\t\t\"\treturn EnumSet.noneOf((Class) elementType);\\n\" + ", "+\t\t\"\t                       ^^^^^\\n\" + ", "+\t\t\"Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"7. WARNING in example\\\\CollectionFactory.java (at line 94)\\n\" + ", "+\t\t\"\treturn (Collection<E>) collectionClass.newInstance();\\n\" + ", "+\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: Unchecked cast from capture#13-of ? to Collection<E>\\n\" + ", "+\t\t\"----------\\n\"", "+\t\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff150503a7ae5766b69bd4c3f08ebcc9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "4b71ef3be11b1e52d22d795d03898285bb112516", "commitAfterChange": "9966baba46edc3df548fabd09b133cadc0093ca6", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " public void test048()", "signatureAfterChange": " public void test048()", "diff": ["+\t// This test checks that the simple cases are OK", "+\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\t\"X.java\",", "+\t\t\t\t\t\"interface I {\\n\" + ", "+\t\t\t\t\t\"\tvoid doit();\\n\" + ", "+\t\t\t\t\t\"}\\n\" + ", "+\t\t\t\t\t\"public class X {\\n\" + ", "+\t\t\t\t\t\"  public static void main(String[] args) {\\n\" + ", "+\t\t\t\t\t\"    int var = 2;\\n\" + ", "+\t\t\t\t\t\"    I x2 = () -> {\\n\" + ", "+\t\t\t\t\t\"      System.out.println(var); // Error: var is not effectively final\\n\" + ", "+\t\t\t\t\t\"    };\\n\" + ", "+\t\t\t\t\t\"    var=2;\\n\" + ", "+\t\t\t\t\t\"  }\\n\" + ", "+\t\t\t\t\t\"}\" ,", "+\t\t\t\t},", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\t\"\tSystem.out.println(var); // Error: var is not effectively final\\n\" + ", "+\t\t\t\t\"\t                   ^^^\\n\" + ", "+\t\t\t\t\"Variable var is required to be final or effectively final\\n\" + ", "+\t\t\t\t\"----------\\n\");", "+}", "-\t\t\t\t\t\"    };\\n\" + ", "-\t\t\t\t\t\"      \\n\" + ", "-\t\t\t\t\"1. ERROR in X.java (at line 22)\\n\" + ", "-\t\t\t\t\"\tSystem.out.println(s2); // Error: var is not effectively final\\n\" + ", "-\t\t\t\t\"\t                   ^^\\n\" + ", "-\t\t\t\t\"The variable s2 must be must be final or effectively final if used in an inner class\\n\" + ", "-\t\t\t\t\"----------\\n\"", "-\t\t\t\t);"]}], "num": 6295}