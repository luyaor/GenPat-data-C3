{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2e25b3d56f1d6e943ec18df31991ab39", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fecf56ffc94920ce106ee53cfd9dbe8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FakedTrackingVariable.java", "commitBeforeChange": "468885f284e85bd93211c3e5598f6cfedb939993", "commitAfterChange": "1b2e1f16a7b68739fef072ffcd776d1f0d560caa", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic static void handleResourceAssignment(BlockScope scope, FlowInfo upstreamInfo, FlowInfo flowInfo, ASTNode location, Expression rhs, LocalVariableBinding local)", "signatureAfterChange": " \tpublic static void handleResourceAssignment(BlockScope scope, FlowInfo upstreamInfo, FlowInfo flowInfo, FlowContext flowContext, ASTNode location, Expression rhs, LocalVariableBinding local)", "diff": ["-\tpublic static void handleResourceAssignment(BlockScope scope, FlowInfo upstreamInfo, FlowInfo flowInfo, ASTNode location, Expression rhs, LocalVariableBinding local)", "+\tpublic static void handleResourceAssignment(BlockScope scope, FlowInfo upstreamInfo, FlowInfo flowInfo, FlowContext flowContext, ASTNode location, Expression rhs, LocalVariableBinding local)", "-\t\t\tFakedTrackingVariable rhsTrackVar = getCloseTrackingVariable(rhs);", "+\t\t\tFakedTrackingVariable rhsTrackVar = getCloseTrackingVariable(rhs, flowContext);", "-\t\t\t\t\t\t\tlocal.closeTracker = new FakedTrackingVariable(local, location);", "+\t\t\t\t\t\t\tlocal.closeTracker = new FakedTrackingVariable(local, location, flowContext);", "-\t\t\t\t// re-assigning from a fresh value, mark as not-closed again:", "-\t\t\t\tif ((previousTracker.globalClosingState & (SHARED_WITH_OUTSIDE|OWNED_BY_OUTSIDE)) == 0)", "-\t\t\t\t\tflowInfo.markAsDefinitelyNull(previousTracker.binding);", "-\t\t\t\tlocal.closeTracker = analyseCloseableExpression(flowInfo, local, location, rhs, previousTracker);", "+\t\t\t\tFlowContext currentFlowContext = flowContext;", "+\t\t\t\tcheckReuseTracker : {", "+\t\t\t\t\tif (previousTracker.tryContext != null) {", "+\t\t\t\t\t\twhile (currentFlowContext != null) {", "+\t\t\t\t\t\t\tif (previousTracker.tryContext == currentFlowContext) {", "+\t\t\t\t\t\t\t\t// \"previous\" location was the finally block of the current try statement.", "+\t\t\t\t\t\t\t\t// -> This is not a re-assignment.", "+\t\t\t\t\t\t\t\t// see https://bugs.eclipse.org/388996", "+\t\t\t\t\t\t\t\tbreak checkReuseTracker;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tcurrentFlowContext = currentFlowContext.parent;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\t// re-assigning from a fresh value, mark as not-closed again:", "+\t\t\t\t\tif ((previousTracker.globalClosingState & (SHARED_WITH_OUTSIDE|OWNED_BY_OUTSIDE)) == 0)", "+\t\t\t\t\t\tflowInfo.markAsDefinitelyNull(previousTracker.binding);", "+\t\t\t\t\tlocal.closeTracker = analyseCloseableExpression(flowInfo, flowContext, local, location, rhs, previousTracker);", "+\t\t\t\t}", "-\t\t\t\trhsTrackVar = analyseCloseableExpression(flowInfo, local, location, rhs, null);", "+\t\t\t\trhsTrackVar = analyseCloseableExpression(flowInfo, flowContext, local, location, rhs, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7e318dec87d9404d6462b969fa3b55e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FakedTrackingVariable.java", "commitBeforeChange": "bfb7aec1d503f7f6d62839e0fbbc7dbce023c93b", "commitAfterChange": "fb2a7c4287d62c5ea38390868d83f476b5ce22e3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic static void handleResourceAssignment(BlockScope scope, FlowInfo upstreamInfo, FlowInfo flowInfo, ASTNode location, Expression rhs, LocalVariableBinding local)", "signatureAfterChange": " \tpublic static void handleResourceAssignment(BlockScope scope, FlowInfo upstreamInfo, FlowInfo flowInfo, FlowContext flowContext, ASTNode location, Expression rhs, LocalVariableBinding local)", "diff": ["-\tpublic static void handleResourceAssignment(BlockScope scope, FlowInfo upstreamInfo, FlowInfo flowInfo, ASTNode location, Expression rhs, LocalVariableBinding local)", "+\tpublic static void handleResourceAssignment(BlockScope scope, FlowInfo upstreamInfo, FlowInfo flowInfo, FlowContext flowContext, ASTNode location, Expression rhs, LocalVariableBinding local)", "-\t\t\tFakedTrackingVariable rhsTrackVar = getCloseTrackingVariable(rhs);", "+\t\t\tFakedTrackingVariable rhsTrackVar = getCloseTrackingVariable(rhs, flowContext);", "-\t\t\t\t\t\t\tlocal.closeTracker = new FakedTrackingVariable(local, location);", "+\t\t\t\t\t\t\tlocal.closeTracker = new FakedTrackingVariable(local, location, flowContext);", "-\t\t\t\t// re-assigning from a fresh value, mark as not-closed again:", "-\t\t\t\tif ((previousTracker.globalClosingState & (SHARED_WITH_OUTSIDE|OWNED_BY_OUTSIDE)) == 0)", "-\t\t\t\t\tflowInfo.markAsDefinitelyNull(previousTracker.binding);", "-\t\t\t\tlocal.closeTracker = analyseCloseableExpression(flowInfo, local, location, rhs, previousTracker);", "+\t\t\t\tFlowContext currentFlowContext = flowContext;", "+\t\t\t\tcheckReuseTracker : {", "+\t\t\t\t\tif (previousTracker.tryContext != null) {", "+\t\t\t\t\t\twhile (currentFlowContext != null) {", "+\t\t\t\t\t\t\tif (previousTracker.tryContext == currentFlowContext) {", "+\t\t\t\t\t\t\t\t// \"previous\" location was the finally block of the current try statement.", "+\t\t\t\t\t\t\t\t// -> This is not a re-assignment.", "+\t\t\t\t\t\t\t\t// see https://bugs.eclipse.org/388996", "+\t\t\t\t\t\t\t\tbreak checkReuseTracker;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tcurrentFlowContext = currentFlowContext.parent;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\t// re-assigning from a fresh value, mark as not-closed again:", "+\t\t\t\t\tif ((previousTracker.globalClosingState & (SHARED_WITH_OUTSIDE|OWNED_BY_OUTSIDE)) == 0)", "+\t\t\t\t\t\tflowInfo.markAsDefinitelyNull(previousTracker.binding);", "+\t\t\t\t\tlocal.closeTracker = analyseCloseableExpression(flowInfo, flowContext, local, location, rhs, previousTracker);", "+\t\t\t\t}", "-\t\t\t\trhsTrackVar = analyseCloseableExpression(flowInfo, local, location, rhs, null);", "+\t\t\t\trhsTrackVar = analyseCloseableExpression(flowInfo, flowContext, local, location, rhs, null);"]}], "num": 15174}