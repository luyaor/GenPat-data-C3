{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8096a083649d903d34247e26ed652a5f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "308d0b80d870cabbaca58e23e6188847", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "3256aef43e2296affdbf86e21f8cafdaa866161a", "commitAfterChange": "f357f309273e0bfe8345ff708d18fa83c6a34931", "methodNumberBeforeChange": 121, "methodNumberAfterChange": 118, "signatureBeforeChange": "\t \tpublic int parameterCompatibilityLevel(MethodBinding method, TypeBinding[] arguments, boolean tiebreakingVarargsMethods, boolean tolerateInferenceVariables)", "signatureAfterChange": "\t \tpublic int parameterCompatibilityLevel(MethodBinding method, TypeBinding[] arguments, boolean tiebreakingVarargsMethods)", "diff": ["-\tpublic int parameterCompatibilityLevel(MethodBinding method, TypeBinding[] arguments, boolean tiebreakingVarargsMethods, boolean tolerateInferenceVariables) {", "+\tpublic int parameterCompatibilityLevel(MethodBinding method, TypeBinding[] arguments, boolean tiebreakingVarargsMethods) {", "-\t\t\t\t\tlevel = parameterCompatibilityLevel(arg, param, env, tiebreakingVarargsMethods, tolerateInferenceVariables);", "+\t\t\t\t\tlevel = parameterCompatibilityLevel(arg, param, env, tiebreakingVarargsMethods);", "-\t\t\t\t\t\tif (parameterCompatibilityLevel(arg, param, env, tiebreakingVarargsMethods, tolerateInferenceVariables) == NOT_COMPATIBLE)", "+\t\t\t\t\t\tif (parameterCompatibilityLevel(arg, param, env, tiebreakingVarargsMethods) == NOT_COMPATIBLE)", "-\t\t\t\t\t\tif (TypeBinding.notEquals(param, arg) && parameterCompatibilityLevel(arg, param, env, tiebreakingVarargsMethods, tolerateInferenceVariables) == NOT_COMPATIBLE)", "+\t\t\t\t\t\tif (TypeBinding.notEquals(param, arg) && parameterCompatibilityLevel(arg, param, env, tiebreakingVarargsMethods) == NOT_COMPATIBLE)", "-\t\t\t\tint newLevel = parameterCompatibilityLevel(arg, param, env, tiebreakingVarargsMethods, tolerateInferenceVariables);", "+\t\t\t\tint newLevel = parameterCompatibilityLevel(arg, param, env, tiebreakingVarargsMethods);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45aa17c3fa6631e0fdc32fce4813dc9c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "0edd2a8da94febc0bef7418a02cfac9f1a30d36a", "commitAfterChange": "85f48e0f08275e1f81e9995073d5c4f69bfd0707", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 95, "signatureBeforeChange": "  \tpublic int parameterCompatibilityLevel(MethodBinding method, TypeBinding[] arguments)", "signatureAfterChange": "\t \tpublic int parameterCompatibilityLevel(MethodBinding method, TypeBinding[] arguments, boolean tiebreakingVarargsMethods)", "diff": ["+\t}\t", "+\tpublic int parameterCompatibilityLevel(MethodBinding method, TypeBinding[] arguments, boolean tiebreakingVarargsMethods) {", "-\t\t\t\t\tlevel = parameterCompatibilityLevel(arg, param, env);", "+\t\t\t\t\tlevel = parameterCompatibilityLevel(arg, param, env, tiebreakingVarargsMethods);", "-\t\t\t\t\t\tif (parameterCompatibilityLevel(arg, param, env) == NOT_COMPATIBLE)", "+\t\t\t\t\t\tif (tiebreakingVarargsMethods) {", "+\t\t\t\t\t\t\targ = ((ArrayBinding) arg).elementsType();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (parameterCompatibilityLevel(arg, param, env, tiebreakingVarargsMethods) == NOT_COMPATIBLE)", "-\t\t\t\t\t\tTypeBinding arg = arguments[i];", "-\t\t\t\t\t\tif (param != arg && parameterCompatibilityLevel(arg, param, env) == NOT_COMPATIBLE)", "+\t\t\t\t\t\tTypeBinding arg = (tiebreakingVarargsMethods && (i == (argLength - 1))) ? ((ArrayBinding)arguments[i]).elementsType() : arguments[i];", "+\t\t\t\t\t\tif (param != arg && parameterCompatibilityLevel(arg, param, env, tiebreakingVarargsMethods) == NOT_COMPATIBLE)", "-\t\t\tTypeBinding arg = arguments[i];", "+\t\t\tTypeBinding arg = (tiebreakingVarargsMethods && (i == (argLength - 1))) ? ((ArrayBinding)arguments[i]).elementsType() : arguments[i];", "-\t\t\t\tint newLevel = parameterCompatibilityLevel(arg, param, env);", "+\t\t\t\tint newLevel = parameterCompatibilityLevel(arg, param, env, tiebreakingVarargsMethods);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77928fed5c4952903e225ee2ee0de2e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "aa23b2a14c48eb2e68c0b76ca03ad3cd13f67188", "commitAfterChange": "97ecea4988b025b105080d33f2f05e43659a9d0a", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 120, "signatureBeforeChange": "\t \tpublic int parameterCompatibilityLevel(MethodBinding method, TypeBinding[] arguments, boolean tiebreakingVarargsMethods)", "signatureAfterChange": "\t \tpublic int parameterCompatibilityLevel(MethodBinding method, TypeBinding[] arguments, boolean tiebreakingVarargsMethods, boolean tolerateInferenceVariables)", "diff": ["-\tpublic int parameterCompatibilityLevel(MethodBinding method, TypeBinding[] arguments, boolean tiebreakingVarargsMethods) {", "+\tpublic int parameterCompatibilityLevel(MethodBinding method, TypeBinding[] arguments, boolean tiebreakingVarargsMethods, boolean tolerateInferenceVariables) {", "-\t\t\t\t\tlevel = parameterCompatibilityLevel(arg, param, env, tiebreakingVarargsMethods);", "+\t\t\t\t\tlevel = parameterCompatibilityLevel(arg, param, env, tiebreakingVarargsMethods, tolerateInferenceVariables);", "-\t\t\t\t\t\tif (parameterCompatibilityLevel(arg, param, env, tiebreakingVarargsMethods) == NOT_COMPATIBLE)", "+\t\t\t\t\t\tif (parameterCompatibilityLevel(arg, param, env, tiebreakingVarargsMethods, tolerateInferenceVariables) == NOT_COMPATIBLE)", "-\t\t\t\t\t\tif (TypeBinding.notEquals(param, arg) && parameterCompatibilityLevel(arg, param, env, tiebreakingVarargsMethods) == NOT_COMPATIBLE)", "+\t\t\t\t\t\tif (TypeBinding.notEquals(param, arg) && parameterCompatibilityLevel(arg, param, env, tiebreakingVarargsMethods, tolerateInferenceVariables) == NOT_COMPATIBLE)", "-\t\t\t\tint newLevel = parameterCompatibilityLevel(arg, param, env, tiebreakingVarargsMethods);", "+\t\t\t\tint newLevel = parameterCompatibilityLevel(arg, param, env, tiebreakingVarargsMethods, tolerateInferenceVariables);"]}], "num": 29519}