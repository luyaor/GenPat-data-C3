{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cfe76d9eabb2cc7f14d114ac81305615", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eef4e3269001af9fd628c06d91d8dd5b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/BatchASTCreationTests.java", "commitBeforeChange": "b7872d5f1e96b5357df6dd8bf0aac5fc8ccf3c6d", "commitAfterChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic void test005() throws CoreException", "signatureAfterChange": " \tpublic void _test005() throws CoreException", "diff": ["+\t */", "+\tpublic void _test005() throws CoreException {", "+\t\t\tTestASTRequestor requestor = new TestASTRequestor(workingCopies);", "+\t\t\tresolveASTs(requestor);", "-\t */", "-\tpublic void test005() throws CoreException {", "-\t\tICompilationUnit[] workingCopies = null;", "-\t\ttry {", "-\t\t\tMarkerInfo[] markerInfos = createMarkerInfos(new String[] {", "-\t\t\t\t\"/P/p1/X.java\",", "-\t\t\t\t\"package p1;\\n\" +", "-\t\t\t\t\"/*start*/public class X extends Y {\\n\" +", "-\t\t\t\t\"}/*end*/\",", "-\t\t\t\t\"/P/p1/Y.java\",", "-\t\t\t\t\"package p1;\\n\" +", "-\t\t\t\t\"public class Y {\\n\" +", "-\t\t\t\t\"}\",", "-\t\t\t});", "-\t\t\tassertBindingFound(markerInfos, \"p1/X\");", "-\t\t} finally {", "-\t\t\tdiscardWorkingCopies(workingCopies);", "-\t\t}", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f716be45e979257c5c94c55e3b0dccf2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "59cddc534051cc4e23e296eb517b3676eee08cc0", "commitAfterChange": "a739bc928d6e81f07965268d15ff502fa14ed12d", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic void testTypeReferenceBug79803() throws CoreException", "signatureAfterChange": " \tpublic void testBug79803() throws CoreException", "diff": ["+\t */", "+\tpublic void testBug79803() throws CoreException {", "+\t\tICompilationUnit workingCopy = null;", "+\t\ttry {", "+\t\t\tworkingCopy = getWorkingCopy(\"/JavaSearchBugs/src/b79803/A.java\",", "+\t\t\t\t\"package b79803;\\n\" + ", "+\t\t\t\t\"class A<A> {\\n\" + ", "+\t\t\t\t\"    A a;\\n\" + ", "+\t\t\t\t\"    b79803.A pa= new b79803.A();\\n\" + ", "+\t\t\t\t\"}\\n\"\t);", "+\t\t\t// search for first and second method should both return 2 inaccurate matches", "+\t\t\tIType type = workingCopy.getType(\"A\");", "+\t\t\tsearch(type,", "+\t\t\t\tREFERENCES,", "+\t\t\t\tSearchPattern.R_CASE_SENSITIVE|SearchPattern.R_ERASURE_MATCH,", "+\t\t\t\tgetJavaSearchScopeBugs(\"b79803\", false),", "+\t\t\t\tthis.resultCollector);", "+\t\t\tassertSearchResults(", "+\t\t\t\t\"src/b79803/A.java b79803.A.pa [b79803.A] EXACT_MATCH\\n\" + ", "+\t\t\t\t\"src/b79803/A.java b79803.A.pa [b79803.A] EXACT_MATCH\"", "+\t\t\t);", "+\t\t}", "+\t\tfinally {", "+\t\t\tif (workingCopy != null)", "+\t\t\t\tworkingCopy.discardWorkingCopy();", "+\t\t}", "+\t}", "-\t */", "-\tpublic void testTypeReferenceBug79803() throws CoreException {", "-\t\tIType type = getCompilationUnit(\"JavaSearchBugs\", \"src\", \"b79803\", \"A.java\").getType(\"A\");", "-\t\tsearch(type, REFERENCES, SearchPattern.R_CASE_SENSITIVE|SearchPattern.R_ERASURE_MATCH, getJavaSearchScopeBugs(\"b79803\", false), this.resultCollector);", "-\t\tassertSearchResults(", "-\t\t\t\"src/b79803/A.java b79803.A.pa [b79803.A] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/b79803/A.java b79803.A.pa [b79803.A] EXACT_MATCH\",", "-\t\t\tthis.resultCollector);", "-\t}"]}], "num": 36137}