{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "775c5ab02e2d9efdc775289daa2fb075", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b9773e93968df1bdba73826bf192f29", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SearchableEnvironment.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r \tpublic boolean isPackage(char[][] parentPackageName, char[] subPackageName)", "signatureAfterChange": "\r public boolean isPackage(char[][] parentPackageName, char[] subPackageName)", "diff": ["-\t */\r", "-\tpublic boolean isPackage(char[][] parentPackageName, char[] subPackageName) {\r", "-\t\tif (parentPackageName == null || parentPackageName.length == 0)\r", "-\t\t\treturn isTopLevelPackage(subPackageName);\r", "-\t\tif (subPackageName == null)\r", "+ */\r", "+public boolean isPackage(char[][] parentPackageName, char[] subPackageName) {\r", "+\tif (parentPackageName == null || parentPackageName.length == 0)\r", "+\t\treturn isTopLevelPackage(subPackageName);\r", "+\tif (subPackageName == null)\r", "+\t\treturn false;\r", "+\tint length = parentPackageName.length;\r", "+\tStringBuffer buffer = new StringBuffer((length + 1) * 6);\r", "+\tfor(int i = 0; i < length; i++) {\r", "+\t\tif (parentPackageName[i] == null || isQualified(parentPackageName[i]))\r", "-\t\tint length = parentPackageName.length;\r", "-\t\tStringBuffer buffer = new StringBuffer((length + 1) * 6);\r", "-\t\tfor (int i = 0; i < length; i++) {\r", "-\t\t\tif (parentPackageName[i] == null || isQualified(parentPackageName[i]))\r", "-\t\t\t\treturn false;\r", "-\t\t\tbuffer.append(parentPackageName[i]);\r", "-\t\t\tbuffer.append(\".\");\r", "-\t\t}\r", "-\t\tif (isQualified(subPackageName)) {\r", "-\t\t\treturn false;\r", "-\t\t}\r", "-\t\tbuffer.append(subPackageName);\r", "-\t\tboolean result =\r", "-\t\t\tthis.nameLookup.findPackageFragments(buffer.toString(), false) != null;\r", "-\t\treturn result;\r", "-\r", "+\t\tbuffer.append(parentPackageName[i]);\r", "+\t\tbuffer.append('.');\r", "+\tif (isQualified(subPackageName)) {\r", "+\tbuffer.append(subPackageName);\r", "+\tboolean result= this.nameLookup.findPackageFragments(buffer.toString(), false) != null;\r", "+\treturn result;\r", "+\t\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cc3229782fb471dc7d702f4ad33a595", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "20ebda4b91a2d1bbceacbc52f4461a1082458d8e", "commitAfterChange": "800101f8c8d6360d176bce00478df3375a46d057", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 31, "signatureBeforeChange": "\r public static String toString(String methodSignature, String methodName, String[] parameterNames, boolean fullyQualifyTypeNames, boolean includeReturnType)", "signatureAfterChange": "\r public static String toString(String methodSignature, String methodName, String[] parameterNames, boolean fullyQualifyTypeNames, boolean includeReturnType)", "diff": ["-\tStringBuffer sb = new StringBuffer();\r", "-\tString[] paramTypes = getParameterTypes(methodSignature);\r", "-\tif (includeReturnType) {\r", "-\t\tString returnType = getReturnType(methodSignature);\r", "-\t\tif (returnType.length() != 0) {\r", "-\t\t\treturnType = toString(returnType);\r", "-\t\t\tif (!fullyQualifyTypeNames) {\r", "-\t\t\t\tint lastDot = returnType.lastIndexOf(C_DOT);\r", "-\t\t\t\tif (lastDot != -1) {\r", "-\t\t\t\t\treturnType = returnType.substring(lastDot + 1);\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t\tsb.append(returnType);\r", "-\t\t\tsb.append(' ');\r", "+\tchar[][] params;\r", "+\tif (parameterNames == null) {\r", "+\t\tparams = null;\r", "+\t} else {\r", "+\t\tint paramLength = parameterNames.length;\r", "+\t\tparams = new char[paramLength][];\r", "+\t\tfor (int i = 0; i < paramLength; i++) {", "+\t\t\tparams[i] = parameterNames[i].toCharArray();", "-\tif (methodName != null)\r", "-\t\tsb.append(methodName);\r", "-\tsb.append(C_PARAM_START);\r", "-\tfor (int i = 0; i < paramTypes.length; ++i) {\r", "-\t\tif (i != 0)\r", "-\t\t\tsb.append(\", \"); //$NON-NLS-1$\r", "-\t\tString readableParamType = toString(paramTypes[i]);\r", "-\t\tif (!fullyQualifyTypeNames) {\r", "-\t\t\tint lastDot = readableParamType.lastIndexOf(C_DOT);\r", "-\t\t\tif (lastDot != -1) {\r", "-\t\t\t\treadableParamType = readableParamType.substring(lastDot + 1);\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\tsb.append(readableParamType);\r", "-\t\tif (parameterNames != null) {\r", "-\t\t\tsb.append(' ');\r", "-\t\t\tsb.append(parameterNames[i]);\r", "-\t\t}\r", "-\t}\r", "-\tsb.append(C_PARAM_END);\r", "-\treturn sb.toString();\r", "+\treturn new String(toCharArray(methodSignature.toCharArray(), methodName == null ? null : methodName.toCharArray(), params, fullyQualifyTypeNames, includeReturnType));\r"]}], "num": 55230}