{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a84154dbbd7ea2a59a34e931aeb8f23a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8f27cc1ab24b37fcb254b26ddc18f8e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "fadf1abae52c545aab219b8e3a9b23913222e6c2", "commitAfterChange": "302f1877ad74fd63c3cd5c56aacc5cc510a8d88b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic ParameterizedTypeBinding(ReferenceBinding type, TypeBinding[] arguments,  ReferenceBinding enclosingType, LookupEnvironment environment)", "signatureAfterChange": " \t \tpublic ParameterizedTypeBinding(ReferenceBinding type, TypeBinding[] arguments,  ReferenceBinding enclosingType, LookupEnvironment environment)", "diff": ["+\t\tif (type.isParameterizedType() && type.isMemberType()) { // fixup instance of parameterized member type, e.g. Map<K,V>.Entry + <A,B>", "+\t\t\tenclosingType = type.enclosingType(); // use enclosing from previously parameterized", "+\t\t\ttype = (ReferenceBinding)type.erasure(); // connect to erasure of member type", "+\t\t}", "-\t\tfor (int i = 0, l = arguments == null ? 0 : arguments.length; i < l; i++)", "-\t\t\tif (arguments[i] instanceof UnresolvedReferenceBinding)", "-\t\t\t\t((UnresolvedReferenceBinding) arguments[i]).addWrapper(this);", "+\t\tif (arguments != null) {", "+\t\t\tfor (int i = 0, l = arguments.length; i < l; i++)", "+\t\t\t\tif (arguments[i] instanceof UnresolvedReferenceBinding)", "+\t\t\t\t\t((UnresolvedReferenceBinding) arguments[i]).addWrapper(this);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9f79f55ce19838dec10e4c0810c02ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "d8f1f284f6441905e7bc6bf6eb6a9443c997d8fe", "commitAfterChange": "a20c7987b715f8a0fad829453c4bde4984a825aa", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "  \tpublic static ParameterizedTypeBinding parameterizedWithWildcard(TypeBinding returnType)", "signatureAfterChange": " \tpublic static ParameterizedTypeBinding parameterizedWithWildcard(TypeBinding type)", "diff": ["-\tpublic static ParameterizedTypeBinding parameterizedWithWildcard(TypeBinding returnType) {", "-\t\tif (returnType == null || returnType.kind() != Binding.PARAMETERIZED_TYPE)", "+\t */", "+\tpublic static ParameterizedTypeBinding parameterizedWithWildcard(TypeBinding type) {", "+\t\tif (type == null || type.kind() != Binding.PARAMETERIZED_TYPE)", "-\t\tParameterizedTypeBinding parameterizedType = (ParameterizedTypeBinding) returnType;", "+\t\tParameterizedTypeBinding parameterizedType = (ParameterizedTypeBinding) type;", "-\t\tfor (int i = 0; i < arguments.length; i++) {", "-\t\t\tif (arguments[i].isWildcard())", "-\t\t\t\treturn parameterizedType;", "+\t\tif (arguments != null) {", "+\t\t\tfor (int i = 0; i < arguments.length; i++)", "+\t\t\t\tif (arguments[i].isWildcard())", "+\t\t\t\t\treturn parameterizedType;"]}], "num": 6027}