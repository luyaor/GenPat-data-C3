{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "788e87e9d0d3549d75a18204e869b064", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99b2cc46f11d0a581f940952d724e49f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "3c02a6af2c4b681d96ee9d070d231fb04b85b5fd", "commitAfterChange": "78cdf23ec3b25cdd688a05f0ebd856906ff8208f", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic MethodBinding getExactMethod(char[] selector, TypeBinding[] argumentTypes, CompilationUnitScope refScope)", "signatureAfterChange": " \tpublic MethodBinding getExactMethod(char[] selector, TypeBinding[] argumentTypes, CompilationUnitScope refScope)", "diff": ["-\t\t\t// TODO (kent) tag method in verifier if it overrides a method which can cause an anonymous error", "-\t\t\tif (match.hasSubstitutedParameters()) return null; // cannot be picked up as an exact match", "+\t\t\t// cannot be picked up as an exact match if its a possible anonymous case", "+\t\t\tif (match.hasSubstitutedParameters() && this.arguments != null && this.arguments.length > 1) return null;", "-", "-\t\tif (foundNothing) {", "+\t", "+\t\tif (foundNothing && (this.arguments == null || this.arguments.length <= 1)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2e2a31420e4bcd6be3f938775bdd212", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "8fdb14b64608b58e620c67bc0f2758fb559de717", "commitAfterChange": "447dafd45d9eea3d096b0cc1d1d11fe893f03ec0", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": " protected void reportMatching(Annotation[] annotations, IJavaElement enclosingElement, Binding elementBinding, MatchingNodeSet nodeSet, boolean matchedContainer, boolean enclosesElement) throws CoreException", "signatureAfterChange": " protected void reportMatching(Annotation[] annotations, IJavaElement enclosingElement, Binding elementBinding, MatchingNodeSet nodeSet, boolean matchedContainer, boolean enclosesElement) throws CoreException", "diff": ["-\t\tif (level != null && matchedContainer) {", "+\t\tif (level != null && matchedContainer && (this.patternFineGrain == 0 || (this.patternFineGrain & IJavaSearchConstants.ANNOTATION_TYPE_REFERENCE) != 0)) {", "-\t\t\tif (level != null && enclosesElement) {", "+\t\t\tif (level != null && enclosesElement && this.patternFineGrain == 0) {", "-\t\t\t} else {", "+\t\t\t} else if (this.patternFineGrain == 0) {"]}], "num": 66212}