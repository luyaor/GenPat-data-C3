{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c02386ee95b445a489a5b6562552b1c4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2530e3df54a371f2b31879af87a78c6a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "ec36c5b556303647a122217dbc357a0c1ccafd42", "commitAfterChange": "a25cead90931bbc9548552bec95aa6f79a389aa3", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": " public static int getProblemCategory(int problemID)", "signatureAfterChange": " public static int getProblemCategory(int severity, int problemID)", "diff": ["-public static int getProblemCategory(int problemID) {", "-\tlong irritant = getIrritant(problemID);", "-\tint irritantInt = (int) irritant;", "+public static int getProblemCategory(int severity, int problemID) {", "+\t\t// fatal problems even if optional are all falling into same category (not irritant based)", "+\t\tif ((severity & ProblemSeverities.Fatal) != 0)", "+\t\t\tbreak categorizeOnIrritant;", "+\t\tlong irritant = getIrritant(problemID);", "+\t\tint irritantInt = (int) irritant;", "-\t// categorize non optional problems per ID", "+\t// categorize fatal problems per ID"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2d54a7150ba520a803b3d87151defe6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "5e23ed7edfe961d34bd26ee29fb9ade957409733", "commitAfterChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t\t \tprivate void buildContext()", "signatureAfterChange": " \t\t \tprivate void buildContext(int astNodeBits)", "diff": ["-\tprivate void buildContext() {", "+\tprivate void buildContext(int astNodeBits) {", "+\t\t// Set javadoc info", "+\t\tcontext.setInJavadoc((astNodeBits & ASTNode.InsideJavadoc) != 0);"]}], "num": 42649}