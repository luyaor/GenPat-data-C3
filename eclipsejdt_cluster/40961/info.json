{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "418b2f251c668d76981fee1a175210df", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "092b3c1e1760a61cbba3174970f73819", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  static Object convertMemberValue(Object binaryValue, LookupEnvironment env)", "signatureAfterChange": "  static Object convertMemberValue(Object binaryValue, LookupEnvironment env, char[][][] missingTypeNames)", "diff": ["-static Object convertMemberValue(Object binaryValue, LookupEnvironment env) {", "+static Object convertMemberValue(Object binaryValue, LookupEnvironment env, char[][][] missingTypeNames) {", "-\t\tTypeBinding typeFromSignature = env.getTypeFromSignature(((ClassSignature) binaryValue).getTypeName(), 0, -1, false, null);", "+\t\tTypeBinding typeFromSignature = env.getTypeFromSignature(((ClassSignature) binaryValue).getTypeName(), 0, -1, false, null, missingTypeNames);", "-\t\treturn createAnnotation((IBinaryAnnotation) binaryValue, env);", "+\t\treturn createAnnotation((IBinaryAnnotation) binaryValue, env, missingTypeNames);", "-\t\tReferenceBinding enumType = (ReferenceBinding) env.getTypeFromSignature(ref.getTypeName(), 0, -1, false, null);", "+\t\tReferenceBinding enumType = (ReferenceBinding) env.getTypeFromSignature(ref.getTypeName(), 0, -1, false, null, missingTypeNames);", "-\t\t\tvalues[i] = convertMemberValue(objects[i], env);", "+\t\t\tvalues[i] = convertMemberValue(objects[i], env, missingTypeNames);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a02430cbd909a4ab27890a28eecf29b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "f7ce86a79f082187bb9d131f12b4c9c140c05c32", "commitAfterChange": "908256095b93d8e1bbc7e5e244cc22e547564057", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " protected int resolveLevelAsSubtype(char[] simplePattern, char[] qualifiedPattern, ReferenceBinding type, TypeBinding[] argumentTypes)", "signatureAfterChange": " protected int resolveLevelAsSubtype(char[] simplePattern, char[] qualifiedPattern, ReferenceBinding type, char[] methodName, TypeBinding[] argumentTypes)", "diff": ["-protected int resolveLevelAsSubtype(char[] simplePattern, char[] qualifiedPattern, ReferenceBinding type, TypeBinding[] argumentTypes) {", "+protected int resolveLevelAsSubtype(char[] simplePattern, char[] qualifiedPattern, ReferenceBinding type, char[] methodName, TypeBinding[] argumentTypes) {", "-\t\tMethodBinding method = argumentTypes == null ? null : getMethodBinding(type, argumentTypes);", "+\t\tMethodBinding method = argumentTypes == null ? null : getMethodBinding(type, methodName, argumentTypes);", "-\t\tlevel = resolveLevelAsSubtype(simplePattern, qualifiedPattern, type.superclass(), argumentTypes);", "+\t\tlevel = resolveLevelAsSubtype(simplePattern, qualifiedPattern, type.superclass(), methodName, argumentTypes);", "-\t\t\t\tMethodBinding method = getMethodBinding(type, argumentTypes);", "+\t\t\t\tMethodBinding method = getMethodBinding(type, methodName, argumentTypes);", "-\t\tlevel = resolveLevelAsSubtype(simplePattern, qualifiedPattern, interfaces[i], null);", "+\t\tlevel = resolveLevelAsSubtype(simplePattern, qualifiedPattern, interfaces[i], methodName, null);"]}], "num": 40961}