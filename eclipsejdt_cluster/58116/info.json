{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ebb1b40528b5cdfa4275349d0f17703a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "269ccfb0908030f474389c1d912f1bf4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "198d94bedf8984594355707af3b11dd0e060bd78", "commitAfterChange": "ebf5deb17f462a2a1a50c9b4076f1d52394081e1", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 51, "signatureBeforeChange": " \tpublic boolean match(MethodDeclaration node, Object other)", "signatureAfterChange": " \tpublic boolean match(MethodDeclaration node, Object other)", "diff": ["-\t \t\t\t&& node.getExtraDimensions() == o.getExtraDimensions()", "-\t\t\t\t&& (node.getAST().apiLevel() < AST.JLS8 ? ", "-\t\t\t\t\t\tsafeSubtreeListMatch(node.thrownExceptions(), o.thrownExceptions()) :", "-\t\t\t\t\t\tsafeSubtreeListMatch(node.thrownExceptionTypes(), o.thrownExceptionTypes()))", "+\t\t\t\t&& ((node.getAST().apiLevel < AST.JLS8) ?", "+\t\t\t\t\t\t\t(node.getExtraDimensions() == o.getExtraDimensions()", "+\t\t\t\t\t\t\t\t&& safeSubtreeListMatch(node.thrownExceptions(), o.thrownExceptions())) :", "+\t\t\t\t\t\t\t(safeSubtreeListMatch(node.getExtraDimensionInfos(), o.getExtraDimensionInfos())", "+\t\t\t\t\t\t\t\t&& safeSubtreeListMatch(node.thrownExceptionTypes(), o.thrownExceptionTypes())))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fddfba9643462e3f1d8fff55e7b348aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "4005c370e6cbaf5fe897eaa7c9410e92ff25148d", "commitAfterChange": "f0d3823e693314be74db80c5730855ddd690aa1f", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": " \tpublic boolean match(VariableDeclarationFragment node, Object other)", "signatureAfterChange": " \tpublic boolean match(VariableDeclarationFragment node, Object other)", "diff": ["+\t\tint level = node.getAST().apiLevel;", "-\t\t\t&& ((node.getAST().apiLevel < AST.JLS8) ?", "-\t\t\t\t\tnode.getExtraDimensions() == o.getExtraDimensions() :", "-\t\t\t\t\t\tsafeSubtreeListMatch(node.extraDimensionInfos(), o.extraDimensionInfos()))", "-\t\t\t&& safeSubtreeMatch(node.getInitializer(), o.getInitializer());", "+\t\t\t\t&& (level >= AST.JLS8", "+\t\t\t\t\t\t? safeSubtreeListMatch(node.extraDimensions(), o.extraDimensions())", "+\t\t\t\t\t\t: node.getExtraDimensions() == o.getExtraDimensions())", "+\t\t\t\t&& safeSubtreeMatch(node.getInitializer(), o.getInitializer());"]}], "num": 58116}