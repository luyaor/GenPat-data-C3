{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "84f582b49267bca57e84ce372ce1eafc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d475026d81c2ccf01f3218f38fe057a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "db3b4c118415b666a25a55dbff2928b26ade300a", "commitAfterChange": "7b0bea69584248f2e93748bb180ed48f6c7ea0f8", "methodNumberBeforeChange": 234, "methodNumberAfterChange": 234, "signatureBeforeChange": " \tpublic void test222()", "signatureAfterChange": " \tpublic void test222()", "diff": ["-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\"\tInteger i = lx.slot;\\n\" + ", "-\t\t\"\t        ^\\n\" + ", "-\t\t\"Type mismatch: cannot convert from ? super Integer to Integer\\n\" + ", "-\t\t\"----------\\n\");", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tal.add(new Integer(1)); // (1)\\n\" + ", "+\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Bound mismatch: The method add(? extends Integer) of type ArrayList<? extends Integer> is not applicable for the arguments (Integer). The wildcard parameter ? extends Integer has no lower bound, and may actually be more restrictive than argument Integer\\n\" + ", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64af3e8860c9cac7749ec20d0f0ee515", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "e8318218be917238c7f3ce1175e32d65aa1ee06f", "commitAfterChange": "5f326c0ac22507f8c85192a8307f736a5ad543dd", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 112, "signatureBeforeChange": " \tpublic void test100()", "signatureAfterChange": " \tpublic void test100()", "diff": ["-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\"\tX<? extends AX> x = new X<? extends AX>(new AX<String>());\\n\" + ", "-\t\t\"\t                        ^\\n\" + ", "-\t\t\"Cannot instantiate the generic type X<T> using wildcard arguments (? extends AX)\\n\" + ", "-\t\t\"----------\\n\");\t\t", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tX<? extends AX> x = new X<? extends AX>(new AX<String>());\\n\" + ", "+\t\t\t\"\t                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Unsafe wildcard operation: The constructor X(? extends AX) of type X<? extends AX> is not applicable for the arguments (AX<String>). The wildcard parameter ? extends AX has no lower bound, and may actually be more restrictive than argument AX<String>\\n\" + ", "+\t\t\t\"----------\\n\");\t\t"]}], "num": 8646}