{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef83516579acfe123b64a2441c091ba8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41074264b7f6939204b3e392e70ed14d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SimpleName.java", "commitBeforeChange": "b8e01a5f88277b60beb56a34c689a6b2ce9e09e8", "commitAfterChange": "9151e30fba5ea02221400c736d4de2dda06ec7ac", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \tpublic static boolean isJavaIdentifier(String identifier)", "signatureAfterChange": "\r \tpublic static boolean isJavaIdentifier(String identifier)", "diff": ["-\t\tint len = identifier.length();\r", "-\t\tif (len == 0) {\r", "-\t\t\treturn false;\r", "+\t\t// FIXME\r", "+\t\t// assert won't be considered as a keyword\r", "+\t\tScanner scanner = new Scanner();\r", "+\t\tchar[] source = identifier.toCharArray();\r", "+\t\tscanner.setSourceBuffer(source);\r", "+\t\tscanner.resetTo(0, source.length);\r", "+\t\ttry {\r", "+\t\t\tint tokenType = scanner.getNextToken();\r", "+\t\t\tswitch(tokenType) {\r", "+\t\t\t\tcase Scanner.TokenNameIdentifier:\r", "+\t\t\t\t\treturn true;\r", "+\t\t\t\tdefault:\r", "+\t\t\t}\r", "+\t\t} catch(InvalidInputException e) {\r", "-\t\tchar c = identifier.charAt(0);\r", "-\t\tif (!Character.isJavaIdentifierStart(c)) {\r", "-\t\t\treturn false;\r", "-\t\t}\t\t\t\r", "-\t\tfor (int i= 1; i < len; i++) {\r", "-\t\t\tc = identifier.charAt(i);\r", "-\t\t\tif (!Character.isJavaIdentifierPart(c)) {\r", "-\t\t\t\treturn false;\r", "-\t\t\t}\t\r", "-\t\t}\r", "-\t\tif (KEYWORDS.contains(identifier)) {\r", "-\t\t\treturn false;\r", "-\t\t}\t\t\t\r", "-\t\treturn true;\r", "+\t\treturn false;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81a3f594e6c0f3386cd451b0726b1371", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SimpleName.java", "commitBeforeChange": "d91066eda5d1816db264c28ccbbb1c9912346d7a", "commitAfterChange": "a037b4cbec78f700a3314fa6ec8e48f16e3a5e58", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \tpublic static boolean isJavaIdentifier(String identifier)", "signatureAfterChange": "\r \tpublic static boolean isJavaIdentifier(String identifier)", "diff": ["-\t\t// FIXME\r", "-\t\t// assert won't be considered as a keyword\r", "-\t\tchar[] source = identifier.toCharArray();\r", "-\t\t// the scanner is already initialized\r", "-\t\tscanner.setSourceBuffer(source);\r", "-\t\tscanner.resetTo(0, source.length);\r", "-\t\ttry {\r", "-\t\t\tint tokenType = scanner.getNextToken();\r", "-\t\t\tswitch(tokenType) {\r", "-\t\t\t\tcase Scanner.TokenNameIdentifier:\r", "-\t\t\t\t\treturn true;\r", "-\t\t\t}\r", "-\t\t} catch(InvalidInputException e) {\r", "+\t\tint len = identifier.length();\r", "+\t\tif (len == 0) {\r", "+\t\t\treturn false;\r", "-\t\treturn false;\r", "+\t\tchar c = identifier.charAt(0);\r", "+\t\tif (!Character.isJavaIdentifierStart(c)) {\r", "+\t\t\treturn false;\r", "+\t\t}\t\t\t\r", "+\t\tfor (int i= 1; i < len; i++) {\r", "+\t\t\tc = identifier.charAt(i);\r", "+\t\t\tif (!Character.isJavaIdentifierPart(c)) {\r", "+\t\t\t\treturn false;\r", "+\t\t\t}\t\r", "+\t\t}\r", "+\t\tif (KEYWORDS.contains(identifier)) {\r", "+\t\t\treturn false;\r", "+\t\t}\t\t\t\r", "+\t\treturn true;\r"]}], "num": 14527}