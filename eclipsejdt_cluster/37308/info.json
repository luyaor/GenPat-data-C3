{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a2cdb39f6d138b4b0dc5af6f0a98cc74", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90e0e5c5b32e76cf92ee04721ede3bb6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "6acdb4510909317e02bb4ba566a6d0b5f09916da", "commitAfterChange": "9b7b19bdcdbcea831580c60277f290356f5e2da7", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \t\tpublic void logOptions(Map options)", "signatureAfterChange": " \t\tpublic void logOptions(Map<String, String> options)", "diff": ["-\t\tpublic void logOptions(Map options) {", "+\t\tpublic void logOptions(Map<String, String> options) {", "-\t\t\t\tfinal Set entriesSet = options.entrySet();", "-\t\t\t\tObject[] entries = entriesSet.toArray();", "-\t\t\t\tArrays.sort(entries, new Comparator() {", "-\t\t\t\t\tpublic int compare(Object o1, Object o2) {", "-\t\t\t\t\t\tMap.Entry entry1 = (Map.Entry) o1;", "-\t\t\t\t\t\tMap.Entry entry2 = (Map.Entry) o2;", "-\t\t\t\t\t\treturn ((String) entry1.getKey()).compareTo((String) entry2.getKey());", "+\t\t\t\tfinal Set<Map.Entry<String, String>> entriesSet = options.entrySet();", "+\t\t\t\tMap.Entry<String, String>[] entries = entriesSet.toArray(new Map.Entry[entriesSet.size()]);", "+\t\t\t\tArrays.sort(entries, new Comparator<Map.Entry<String, String>>() {", "+\t\t\t\t\tpublic int compare(Map.Entry<String, String> o1, Map.Entry<String, String> o2) {", "+\t\t\t\t\t\tMap.Entry<String, String> entry1 = o1;", "+\t\t\t\t\t\tMap.Entry<String, String> entry2 = o2;", "+\t\t\t\t\t\treturn entry1.getKey().compareTo(entry2.getKey());", "-\t\t\t\t\tMap.Entry entry = (Map.Entry) entries[i];", "-\t\t\t\t\tString key = (String) entry.getKey();", "+\t\t\t\t\tMap.Entry<String, String> entry = entries[i];", "+\t\t\t\t\tString key = entry.getKey();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9639ea0f25ff9e9fd2c77d6504fd2e73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "6acdb4510909317e02bb4ba566a6d0b5f09916da", "commitAfterChange": "9b7b19bdcdbcea831580c60277f290356f5e2da7", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": " protected void enableAll(int severity)", "signatureAfterChange": " protected void enableAll(int severity)", "diff": ["-\tObject[] entries = this.options.entrySet().toArray();", "+\tMap.Entry<String, String>[] entries = this.options.entrySet().toArray(new Map.Entry[this.options.size()]);", "-\t\tMap.Entry entry = (Map.Entry) entries[i];", "-\t\tif (!(entry.getKey() instanceof String))", "-\t\t\tcontinue;", "-\t\tif (!(entry.getValue() instanceof String))", "-\t\t\tcontinue;", "-\t\tif (((String) entry.getValue()).equals(CompilerOptions.IGNORE)) {", "+\t\tMap.Entry<String, String> entry = entries[i];", "+\t\tif (entry.getValue().equals(CompilerOptions.IGNORE)) {"]}], "num": 37308}