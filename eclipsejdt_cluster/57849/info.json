{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "66b3e0307c87fe113e0b830417d41c04", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b12c5b7ecfbf678f1781140790bd9b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "ab7733a54402b64bb328ef9a7aa36d933deb8ac7", "commitAfterChange": "7ed8fb3f335f5407b01a590a0c668733ebc19aa6", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tprivate void disassemble(ICodeAttribute codeAttribute, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "signatureAfterChange": " \t \tprivate void disassemble(ICodeAttribute codeAttribute, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "diff": ["-\t\t\tbuffer.append(Util.bind(\"classformat.classformatexception\"));//$NON-NLS-1$", "+\t\t\tbuffer.append(Messages.classformat_classformatexception);", "-\t\t\tbuffer.append(Util.bind(\"disassembler.exceptiontableheader\")); //$NON-NLS-1$", "+\t\t\tbuffer.append(Messages.disassembler_exceptiontableheader); ", "-\t\t\t\tbuffer.append(Util.bind(\"classfileformat.exceptiontableentry\", //$NON-NLS-1$", "+\t\t\t\tbuffer.append(Messages.bind(Messages.classfileformat_exceptiontableentry,", "-\t\t\tbuffer.append(Util.bind(\"classfileformat.exceptiontableentry\", //$NON-NLS-1$", "+\t\t\tbuffer.append(Messages.bind(Messages.classfileformat_exceptiontableentry,", "-\t\t\tbuffer.append(Util.bind(\"disassembler.linenumberattributeheader\")); //$NON-NLS-1$", "+\t\t\tbuffer.append(Messages.disassembler_linenumberattributeheader); ", "-\t\t\t\tbuffer.append(Util.bind(\"classfileformat.linenumbertableentry\", //$NON-NLS-1$", "+\t\t\t\tbuffer.append(Messages.bind(Messages.classfileformat_linenumbertableentry,", "-\t\t\tbuffer.append(Util.bind(\"classfileformat.linenumbertableentry\", //$NON-NLS-1$", "+\t\t\tbuffer.append(Messages.bind(Messages.classfileformat_linenumbertableentry,", "-\t\t\tbuffer.append(Util.bind(\"disassembler.localvariabletableattributeheader\")); //$NON-NLS-1$", "+\t\t\tbuffer.append(Messages.disassembler_localvariabletableattributeheader); ", "-\t\t\t\tbuffer.append(Util.bind(\"classfileformat.localvariabletableentry\", //$NON-NLS-1$", "+\t\t\t\tbuffer.append(Messages.bind(Messages.classfileformat_localvariabletableentry,", "-\t\t\tbuffer.append(Util.bind(\"classfileformat.localvariabletableentry\", //$NON-NLS-1$", "+\t\t\tbuffer.append(Messages.bind(Messages.classfileformat_localvariabletableentry,", "-\t\t\tbuffer.append(Util.bind(\"disassembler.localvariabletypetableattributeheader\")); //$NON-NLS-1$", "+\t\t\tbuffer.append(Messages.disassembler_localvariabletypetableattributeheader); ", "-\t\t\t\tbuffer.append(Util.bind(\"classfileformat.localvariabletableentry\", //$NON-NLS-1$", "+\t\t\t\tbuffer.append(Messages.bind(Messages.classfileformat_localvariabletableentry,", "-\t\t\tbuffer.append(Util.bind(\"classfileformat.localvariabletableentry\", //$NON-NLS-1$", "+\t\t\tbuffer.append(Messages.bind(Messages.classfileformat_localvariabletableentry,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4716fa7f48e7a5726c24bfa4b5b8f00d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "ab7733a54402b64bb328ef9a7aa36d933deb8ac7", "commitAfterChange": "7ed8fb3f335f5407b01a590a0c668733ebc19aa6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  protected IProject[] build(int kind, Map ignored, IProgressMonitor monitor) throws CoreException", "signatureAfterChange": "  protected IProject[] build(int kind, Map ignored, IProgressMonitor monitor) throws CoreException", "diff": ["-\t\tmarker.setAttribute(IMarker.MESSAGE, Util.bind(\"build.inconsistentProject\", e.getLocalizedMessage())); //$NON-NLS-1$", "+\t\tmarker.setAttribute(IMarker.MESSAGE, Messages.bind(Messages.build_inconsistentProject, e.getLocalizedMessage())); ", "-\t\tmarker.setAttribute(IMarker.MESSAGE, Util.bind(\"build.inconsistentProject\", e.getLocalizedMessage())); //$NON-NLS-1$", "+\t\tmarker.setAttribute(IMarker.MESSAGE, Messages.bind(Messages.build_inconsistentProject, e.getLocalizedMessage())); ", "-\t\t\tSystem.out.println(Util.bind(\"build.incompleteClassPath\", e.missingClassFile)); //$NON-NLS-1$", "+\t\t\tSystem.out.println(Messages.bind(Messages.build_incompleteClassPath, (new String[] {e.missingClassFile}))); ", "-\t\tmarker.setAttribute(IMarker.MESSAGE, Util.bind(\"build.incompleteClassPath\", e.missingClassFile)); //$NON-NLS-1$", "+\t\tmarker.setAttribute(IMarker.MESSAGE, Messages.bind(Messages.build_incompleteClassPath, e.missingClassFile)); ", "-\t\t\tSystem.out.println(Util.bind(\"build.missingSourceFile\", e.missingSourceFile)); //$NON-NLS-1$", "+\t\t\tSystem.out.println(Messages.bind(Messages.build_missingSourceFile, e.missingSourceFile)); ", "-\t\tmarker.setAttribute(IMarker.MESSAGE, Util.bind(\"build.missingSourceFile\", e.missingSourceFile)); //$NON-NLS-1$", "+\t\tmarker.setAttribute(IMarker.MESSAGE, Messages.bind(Messages.build_missingSourceFile, e.missingSourceFile)); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c94c83bf51bac22633ffc4e65f08e80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "ab7733a54402b64bb328ef9a7aa36d933deb8ac7", "commitAfterChange": "7ed8fb3f335f5407b01a590a0c668733ebc19aa6", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tpublic static IJavaModelStatus validateClasspath(IJavaProject javaProject, IClasspathEntry[] rawClasspath, IPath projectOutputLocation)", "signatureAfterChange": " \tpublic static IJavaModelStatus validateClasspath(IJavaProject javaProject, IClasspathEntry[] rawClasspath, IPath projectOutputLocation)", "diff": ["-\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.cannotNestOutputInOutput\", customOutput.makeRelative().toString(), outputLocations[index].makeRelative().toString())); //$NON-NLS-1$", "+\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_cannotNestOutputInOutput, new String[] {customOutput.makeRelative().toString(), outputLocations[index].makeRelative().toString()})); ", "-\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.cannotNestOutputInOutput\", potentialNestedOutput.makeRelative().toString(), outputLocations[0].makeRelative().toString())); //$NON-NLS-1$", "+\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_cannotNestOutputInOutput, new String[] {potentialNestedOutput.makeRelative().toString(), outputLocations[0].makeRelative().toString()})); ", "-\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.NAME_COLLISION, Util.bind(\"classpath.duplicateEntryPath\", entryPathMsg, projectName)); //$NON-NLS-1$", "+\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.NAME_COLLISION, Messages.bind(Messages.classpath_duplicateEntryPath, new String[] {entryPathMsg, projectName})); ", "-\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_PATH, Util.bind(\"classpath.cannotReferToItself\", entryPath.makeRelative().toString()));//$NON-NLS-1$", "+\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_PATH, Messages.bind(Messages.classpath_cannotReferToItself, new String[] {entryPath.makeRelative().toString()}));", "-\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.mustEndWithSlash\", exclusionPattern, entryPath.makeRelative().toString())); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_mustEndWithSlash, new String[] {exclusionPattern, entryPath.makeRelative().toString()})); ", "-\t\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.cannotNestEntryInEntry\", new String[] {entryPath.makeRelative().toString(), otherEntry.getPath().makeRelative().toString(), exclusionPattern})); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_cannotNestEntryInEntry, new String[] {entryPath.makeRelative().toString(), otherEntry.getPath().makeRelative().toString(), exclusionPattern})); ", "-\t\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.cannotNestEntryInLibrary\", entryPath.makeRelative().toString(), otherEntry.getPath().makeRelative().toString())); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_cannotNestEntryInLibrary, new String[] {entryPath.makeRelative().toString(), otherEntry.getPath().makeRelative().toString()})); ", "-\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.cannotNestOutputInEntry\", currentOutput.makeRelative().toString(), entryPath.makeRelative().toString())); //$NON-NLS-1$", "+\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_cannotNestOutputInEntry, new String[] {currentOutput.makeRelative().toString(), entryPath.makeRelative().toString()})); ", "-\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.cannotNestEntryInOutput\", entryPath.makeRelative().toString(), currentOutput.makeRelative().toString())); //$NON-NLS-1$", "+\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_cannotNestEntryInOutput, new String[] {entryPath.makeRelative().toString(), currentOutput.makeRelative().toString()})); ", "-\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.cannotUseDistinctSourceFolderAsOutput\", new String[] {entryPathMsg, otherPathMsg, projectName})); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_cannotUseDistinctSourceFolderAsOutput, new String[] {entryPathMsg, otherPathMsg, projectName})); ", "-\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.cannotUseLibraryAsOutput\", new String[] {entryPathMsg, otherPathMsg, projectName})); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_cannotUseLibraryAsOutput, new String[] {entryPathMsg, otherPathMsg, projectName})); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd2f4aae806178eb3d77a424f5c87627", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "ab7733a54402b64bb328ef9a7aa36d933deb8ac7", "commitAfterChange": "7ed8fb3f335f5407b01a590a0c668733ebc19aa6", "methodNumberBeforeChange": 190, "methodNumberAfterChange": 190, "signatureBeforeChange": " \tpublic void _newarray(int pc, int atype)", "signatureAfterChange": " \tpublic void _newarray(int pc, int atype)", "diff": ["-\t\t\t\tthis.buffer.append(Util.bind(\"classformat.newarray_boolean\", //$NON-NLS-1$", "-\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.NEWARRAY],", "-\t\t\t\t\t\tInteger.toString(atype)", "-\t\t\t\t\t}));", "+\t\t\t\tthis.buffer.append(Messages.bind(Messages.classformat_newarray_boolean, (new String[] {", "+\t\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.NEWARRAY],", "+\t\t\t\t\tInteger.toString(atype)", "+\t\t\t\t})));", "-\t\t\t\tthis.buffer.append(Util.bind(\"classformat.newarray_char\", //$NON-NLS-1$", "-\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.NEWARRAY],", "-\t\t\t\t\t\tInteger.toString(atype)", "-\t\t\t\t\t}", "-\t\t\t\t));", "+\t\t\t\tthis.buffer.append(Messages.bind(Messages.classformat_newarray_char, (new String[] {", "+\t\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.NEWARRAY],", "+\t\t\t\t\tInteger.toString(atype)", "+\t\t\t\t})));", "-\t\t\t\tthis.buffer.append(Util.bind(\"classformat.newarray_float\", //$NON-NLS-1$", "-\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.NEWARRAY],", "-\t\t\t\t\t\tInteger.toString(atype)", "-\t\t\t\t\t}", "-\t\t\t\t));", "+\t\t\t\tthis.buffer.append(Messages.bind(Messages.classformat_newarray_float, (new String[] {", "+\t\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.NEWARRAY],", "+\t\t\t\t\tInteger.toString(atype)", "+\t\t\t\t})));", "-\t\t\t\tthis.buffer.append(Util.bind(\"classformat.newarray_double\", //$NON-NLS-1$", "-\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.NEWARRAY],", "-\t\t\t\t\t\tInteger.toString(atype)", "-\t\t\t\t\t}", "-\t\t\t\t));", "+\t\t\t\tthis.buffer.append(Messages.bind(Messages.classformat_newarray_double, (new String[] {", "+\t\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.NEWARRAY],", "+\t\t\t\t\tInteger.toString(atype)", "+\t\t\t\t})));", "-\t\t\t\tthis.buffer.append(Util.bind(\"classformat.newarray_byte\", //$NON-NLS-1$", "-\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.NEWARRAY],", "-\t\t\t\t\t\tInteger.toString(atype)", "-\t\t\t\t\t}", "-\t\t\t\t));", "+\t\t\t\tthis.buffer.append(Messages.bind(Messages.classformat_newarray_byte, (new String[] {", "+\t\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.NEWARRAY],", "+\t\t\t\t\tInteger.toString(atype)", "+\t\t\t\t})));", "-\t\t\t\tthis.buffer.append(Util.bind(\"classformat.newarray_short\", //$NON-NLS-1$", "-\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.NEWARRAY],", "-\t\t\t\t\t\tInteger.toString(atype)", "-\t\t\t\t\t}", "-\t\t\t\t));", "+\t\t\t\tthis.buffer.append(Messages.bind(Messages.classformat_newarray_short, (new String[] {", "+\t\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.NEWARRAY],", "+\t\t\t\t\tInteger.toString(atype)", "+\t\t\t\t})));", "-\t\t\t\tthis.buffer.append(Util.bind(\"classformat.newarray_int\", //$NON-NLS-1$", "-\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.NEWARRAY],", "-\t\t\t\t\t\tInteger.toString(atype)", "-\t\t\t\t\t}", "-\t\t\t\t));", "+\t\t\t\tthis.buffer.append(Messages.bind(Messages.classformat_newarray_int, (new String[] {", "+\t\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.NEWARRAY],", "+\t\t\t\t\tInteger.toString(atype)", "+\t\t\t\t})));", "-\t\t\t\tthis.buffer.append(Util.bind(\"classformat.newarray_long\", //$NON-NLS-1$", "-\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.NEWARRAY],", "-\t\t\t\t\t\tInteger.toString(atype)", "-\t\t\t\t\t}", "-\t\t\t\t));", "+\t\t\t\tthis.buffer.append(Messages.bind(Messages.classformat_newarray_long, (new String[] {", "+\t\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.NEWARRAY],", "+\t\t\t\t\tInteger.toString(atype)", "+\t\t\t\t})));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6ae2825ae219af5a0cebeb3aabdcb6c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "ab7733a54402b64bb328ef9a7aa36d933deb8ac7", "commitAfterChange": "7ed8fb3f335f5407b01a590a0c668733ebc19aa6", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tprivate void disassemble(IConstantPool constantPool, StringBuffer buffer, String lineSeparator, int tabNumber)", "signatureAfterChange": "  \tprivate void disassemble(IConstantPool constantPool, StringBuffer buffer, String lineSeparator, int tabNumber)", "diff": ["-\t\tbuffer.append(Util.bind(\"disassembler.constantpoolheader\")); //$NON-NLS-1$", "+\t\tbuffer.append(Messages.disassembler_constantpoolheader); ", "-\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.class\", //$NON-NLS-1$", "-\t\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\t\tInteger.toString(i),", "-\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getClassInfoNameIndex()),", "-\t\t\t\t\t\t\tnew String(constantPoolEntry.getClassInfoName())})); //$NON-NLS-1$", "+\t\t\t\t\t\tMessages.bind(Messages.disassembler_constantpool_class,", "+\t\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\t\tInteger.toString(i),", "+\t\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getClassInfoNameIndex()),", "+\t\t\t\t\t\t\t\tnew String(constantPoolEntry.getClassInfoName())}));", "-\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.double\", //$NON-NLS-1$", "-\t\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\t\tInteger.toString(i),", "-\t\t\t\t\t\t\tDouble.toString(constantPoolEntry.getDoubleValue())})); //$NON-NLS-1$", "+\t\t\t\t\t\tMessages.bind(Messages.disassembler_constantpool_double,", "+\t\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\t\tInteger.toString(i),", "+\t\t\t\t\t\t\t\tDouble.toString(constantPoolEntry.getDoubleValue())}));", "-\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.fieldref\", //$NON-NLS-1$", "-\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\tMessages.bind(Messages.disassembler_constantpool_fieldref,", "+\t\t\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\t\tnew String(constantPoolEntry.getFieldDescriptor())})); //$NON-NLS-1$", "+\t\t\t\t\t\t\tnew String(constantPoolEntry.getFieldDescriptor())}));", "-\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.float\", //$NON-NLS-1$", "+\t\t\t\t\t\tMessages.bind(Messages.disassembler_constantpool_float,", "-\t\t\t\t\t\t\tFloat.toString(constantPoolEntry.getFloatValue())})); //$NON-NLS-1$", "+\t\t\t\t\t\t\tFloat.toString(constantPoolEntry.getFloatValue())}));", "-\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.integer\", //$NON-NLS-1$", "-\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\tMessages.bind(Messages.disassembler_constantpool_integer,", "+\t\t\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getIntegerValue())})); //$NON-NLS-1$", "+\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getIntegerValue())}));", "-\t\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.interfacemethodref\", //$NON-NLS-1$", "-\t\t\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\t\t\tInteger.toString(i),", "-\t\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getClassIndex()),", "-\t\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getNameAndTypeIndex()),", "-\t\t\t\t\t\t\t\tnew String(constantPoolEntry.getClassName()),", "-\t\t\t\t\t\t\t\tnew String(constantPoolEntry.getMethodName()),", "-\t\t\t\t\t\t\t\tnew String(constantPoolEntry.getMethodDescriptor())}));", "+\t\t\t\t\t\t\tMessages.bind(Messages.disassembler_constantpool_interfacemethodref,", "+\t\t\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\t\t\tInteger.toString(i),", "+\t\t\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getClassIndex()),", "+\t\t\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getNameAndTypeIndex()),", "+\t\t\t\t\t\t\t\t\tnew String(constantPoolEntry.getClassName()),", "+\t\t\t\t\t\t\t\t\tnew String(constantPoolEntry.getMethodName()),", "+\t\t\t\t\t\t\t\t\tnew String(constantPoolEntry.getMethodDescriptor())}));", "-\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.long\", //$NON-NLS-1$", "-\t\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\t\tInteger.toString(i),", "-\t\t\t\t\t\t\tLong.toString(constantPoolEntry.getLongValue())})); //$NON-NLS-1$", "+\t\t\t\t\t\tMessages.bind(Messages.disassembler_constantpool_long,", "+\t\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\t\tInteger.toString(i),", "+\t\t\t\t\t\t\t\tLong.toString(constantPoolEntry.getLongValue())}));", "-\t\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.methodref\", //$NON-NLS-1$", "-\t\t\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\t\t\tInteger.toString(i),", "-\t\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getClassIndex()),", "-\t\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getNameAndTypeIndex()),", "-\t\t\t\t\t\t\t\tnew String(constantPoolEntry.getClassName()),", "-\t\t\t\t\t\t\t\tnew String(constantPoolEntry.getMethodName()),", "-\t\t\t\t\t\t\t\tnew String(constantPoolEntry.getMethodDescriptor())}));", "+\t\t\t\t\t\t\tMessages.bind(Messages.disassembler_constantpool_methodref,", "+\t\t\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\t\t\tInteger.toString(i),", "+\t\t\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getClassIndex()),", "+\t\t\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getNameAndTypeIndex()),", "+\t\t\t\t\t\t\t\t\tnew String(constantPoolEntry.getClassName()),", "+\t\t\t\t\t\t\t\t\tnew String(constantPoolEntry.getMethodName()),", "+\t\t\t\t\t\t\t\t\tnew String(constantPoolEntry.getMethodDescriptor())}));", "-\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.name_and_type\", //$NON-NLS-1$", "-\t\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\t\tInteger.toString(i),", "-\t\t\t\t\t\t\tInteger.toString(nameIndex),", "-\t\t\t\t\t\t\tInteger.toString(typeIndex),", "-\t\t\t\t\t\t\tString.valueOf(nameValue),", "-\t\t\t\t\t\t\tString.valueOf(typeValue)})); //$NON-NLS-1$", "+\t\t\t\t\t\tMessages.bind(Messages.disassembler_constantpool_name_and_type,", "+\t\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\t\tInteger.toString(i),", "+\t\t\t\t\t\t\t\tInteger.toString(nameIndex),", "+\t\t\t\t\t\t\t\tInteger.toString(typeIndex),", "+\t\t\t\t\t\t\t\tString.valueOf(nameValue),", "+\t\t\t\t\t\t\t\tString.valueOf(typeValue)}));", "-\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.string\", //$NON-NLS-1$", "-\t\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\t\tInteger.toString(i),", "-\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getStringIndex()),", "-\t\t\t\t\t\t\tconstantPoolEntry.getStringValue()})); //$NON-NLS-1$", "+\t\t\t\t\t\tMessages.bind(Messages.disassembler_constantpool_string,", "+\t\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\t\tInteger.toString(i),", "+\t\t\t\t\t\t\t\tInteger.toString(constantPoolEntry.getStringIndex()),", "+\t\t\t\t\t\t\t\tconstantPoolEntry.getStringValue()}));", "-\t\t\t\t\t\tUtil.bind(\"disassembler.constantpool.utf8\", //$NON-NLS-1$", "-\t\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\t\tInteger.toString(i),", "-\t\t\t\t\t\t\tnew String(constantPoolEntry.getUtf8Value())})); //$NON-NLS-1$", "+\t\t\t\t\t\tMessages.bind(Messages.disassembler_constantpool_utf8,", "+\t\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\t\tInteger.toString(i),", "+\t\t\t\t\t\t\t\tnew String(constantPoolEntry.getUtf8Value())}));"]}], "num": 57849}