{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f4adf7f882c78261e379483bf80cb1ce", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fcce1eba6a62d70b9df834b75802f53", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/DefaultProblem.java", "commitBeforeChange": "f253b0c587ecac9d5c91cf7491378fa42651550b", "commitAfterChange": "c66df91fe4ef54ca3fc328225a1127f6072a0caf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r public String errorReportSource(ICompilationUnit compilationUnit)", "signatureAfterChange": "\r public String errorReportSource(ICompilationUnit compilationUnit)", "diff": ["-\t\treturn \"\\n!! no source information available !!\";\r", "+\t\treturn Util.bind(\"problem.noSourceInformation\"/*nonNLS*/);\r", "-\treturn \" (at line \" + String.valueOf(line) + \")\" + //NON NLS\r", "-\t\"\\n\\t\" + new String(extract) + \"\\n\\t\" + new String(underneath);\r", "+\treturn Util.bind(\"problem.atLine\"/*nonNLS*/,String.valueOf(line)) +\r", "+\t\"\\n\\t\"/*nonNLS*/ + new String(extract) + \"\\n\\t\"/*nonNLS*/ + new String(underneath);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a15b1358f9e4a89e59158b7f73b1a58f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "f391db9dfa982dbe09df7c4d362cd9e5a8546769", "commitAfterChange": "79d0c2f491160c45c925011f7ac69394bca87445", "methodNumberBeforeChange": 228, "methodNumberAfterChange": 228, "signatureBeforeChange": "\r protected static char[] readTable(String filename) throws java.io.IOException", "signatureAfterChange": "\r protected static char[] readTable(String filename) throws java.io.IOException", "diff": ["-\t\tthrow new java.io.IOException(\"missing file\" + filename);\r", "+\t\tthrow new java.io.IOException(Util.bind(\"parser.missingFile\"/*nonNLS*/,filename));\r", "-\t\tthrow new java.io.IOException(\"corrupted file \" + filename);\r", "+\t\tthrow new java.io.IOException(Util.bind(\"parser.corruptedFile\"/*nonNLS*/,filename));\r"]}], "num": 16283}