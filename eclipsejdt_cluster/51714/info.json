{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "24d82afb132254c9355e59b4ddbd8b7d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51e08282d6380ee25dd77d29a2e47c48", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "b12492ad0eb83de9816def47b0f6dea2ec7ff67f", "commitAfterChange": "0deabbafa4ad0926b565767fe8d2a589d68558ed", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " protected void runOperation(JavaModelOperation operation, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tprotected void runOperation(JavaModelOperation operation, IProgressMonitor monitor) throws JavaModelException", "diff": ["+\t */", "+\tprotected void runOperation(JavaModelOperation operation, IProgressMonitor monitor) throws JavaModelException {", "+\t\ttry {", "+\t\t\tif (operation.isReadOnly()) {", "+\t\t\t\toperation.run(monitor);", "+\t\t\t\t// use IWorkspace.run(...) to ensure that a build will be done in autobuild mode", "+\t\t\t\tthis.getJavaModel().getWorkspace().run(operation, monitor);", "+\t\t\t}", "+\t\t} catch (CoreException ce) {", "+\t\t\tif (ce instanceof JavaModelException) {", "+\t\t\t\tthrow (JavaModelException)ce;", "+\t\t\t} else {", "+\t\t\t\tif (ce.getStatus().getCode() == IResourceStatus.OPERATION_FAILED) {", "+\t\t\t\t\tThrowable e= ce.getStatus().getException();", "+\t\t\t\t\tif (e instanceof JavaModelException) {", "+\t\t\t\t\t\tthrow (JavaModelException) e;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tthrow new JavaModelException(ce);", "- */", "-protected void runOperation(JavaModelOperation operation, IProgressMonitor monitor) throws JavaModelException {", "-\tJavaModelManager.getJavaModelManager().runOperation(operation, monitor);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89a05b42e8601e75f421636c2249b63d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JarPackageFragmentRoot.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprotected boolean computeChildren(OpenableElementInfo info, IResource underlyingResource) throws JavaModelException", "signatureAfterChange": " \tprotected boolean computeChildren(OpenableElementInfo info, IResource underlyingResource) throws JavaModelException", "diff": ["-\t\t\t// always create the default package", "-\t\t\trawPackageInfo.put(CharOperation.NO_STRINGS, new ArrayList[] { EMPTY_LIST, EMPTY_LIST });", "-\t", "+", "+\t\t\t// always create the default package", "+\t\t\trawPackageInfo.put(CharOperation.NO_STRINGS, new ArrayList[] { EMPTY_LIST, EMPTY_LIST });", "+\t\t\t", "-\t\t\t//l oop through all of referenced packages, creating package fragments if necessary", "+\t\t\t// loop through all of referenced packages, creating package fragments if necessary", "-\t\t\tif (e instanceof JavaModelException) throw (JavaModelException)e;", "-\t\t\tthrow new JavaModelException(e);", "+\t\t\tif (e.getCause() instanceof ZipException) {", "+\t\t\t\t// not a ZIP archive, leave the children empty", "+\t\t\t\tUtil.log(e, \"Invalid ZIP archive: \" + toStringWithAncestors()); //$NON-NLS-1$", "+\t\t\t\tchildren = NO_ELEMENTS;", "+\t\t\t} else if (e instanceof JavaModelException) {", "+\t\t\t\tthrow (JavaModelException)e;", "+\t\t\t} else {", "+\t\t\t\tthrow new JavaModelException(e);", "+\t\t\t}"]}], "num": 51714}