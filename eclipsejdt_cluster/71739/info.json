{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8bc7612751381a3a2ed6d3073338608a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45cf7a0b4f97c0e2c7bd6d253cec3c4b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool.tests/src/org/eclipse/jdt/compiler/tool/tests/CompilerInvocationTests.java", "commitBeforeChange": "121da1ed9487cd06624131be60f7fed861a83829", "commitAfterChange": "65bcf10af454142ab48b1720e5cae843f9f8de26", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " public void test019_sourcepath_without_destination() throws IOException", "signatureAfterChange": " public void test019_sourcepath_without_destination() throws IOException", "diff": ["+\tString sourceDirectoryName = OUTPUT_DIR + \"/src2\";", "+\tFile sourceFolder = new File(sourceDirectoryName);", "+\tif (!sourceFolder.exists()) {", "+\t\tif (!sourceFolder.mkdirs()) {", "+\t\t\t// source folder could not be built", "+\t\t\treturn;", "+\t\t}", "+\t}", "-\t\tJAVAC_COMPILER.getStandardFileManager(null /* diagnosticListener */, null /* locale */, null /* charset */);", "+\t\tCOMPILER.getStandardFileManager(null /* diagnosticListener */, null /* locale */, null /* charset */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66f230203bf99341d57547e028226143", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool.tests/src/org/eclipse/jdt/compiler/tool/tests/CompilerInvocationTests.java", "commitBeforeChange": "121da1ed9487cd06624131be60f7fed861a83829", "commitAfterChange": "65bcf10af454142ab48b1720e5cae843f9f8de26", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " public void _test013_files_access_read() throws IOException", "signatureAfterChange": " public void _test013_files_access_read() throws IOException", "diff": ["+\tif (JAVAC_COMPILER == null) {", "+\t\tSystem.out.println(\"No system java compiler available\");", "+\t\treturn;", "+\t}", "-\t\t\t\tJAVAC_COMPILER.getStandardFileManager(null /* diagnosticListener */, null /* locale */, null /* charset */),", "+\t\t\t\tCOMPILER.getStandardFileManager(null /* diagnosticListener */, null /* locale */, null /* charset */),", "-\tif (RUN_JAVAC) {", "+\tif (RUN_JAVAC && JAVAC_COMPILER != null) {"]}], "num": 71739}