{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aa06f40f8fc3e0eb8542800d2a00a4cf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80b3deddd4ef60a11143359c4f903229", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedHierarchyBuilder.java", "commitBeforeChange": "f881f7f3af831f777efbcae1d912f604e776b198", "commitAfterChange": "af8ddf1224acdd73d35eff5f86a6b2b80c9a4304", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate ArrayList determineOpenablesInRegion(IProgressMonitor monitor)", "signatureAfterChange": " \tprivate HashMap determineOpenablesInRegion(IProgressMonitor monitor)", "diff": ["-\tprivate ArrayList determineOpenablesInRegion(IProgressMonitor monitor) {", "+\tprivate HashMap determineOpenablesInRegion(IProgressMonitor monitor) {", "-\t\t\tArrayList openables = new ArrayList();", "+\t\t\tHashMap allOpenables = new HashMap();", "+\t\t\t\tIJavaProject javaProject = root.getJavaProject();", "+\t\t\t\tArrayList openables = (ArrayList) allOpenables.get(javaProject);", "+\t\t\t\tif (openables == null) {", "+\t\t\t\t\topenables = new ArrayList();", "+\t\t\t\t\tallOpenables.put(javaProject, openables);", "+\t\t\t\t}", "-\t\t\treturn openables;", "+\t\t\treturn allOpenables;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c558774c84ea24810c3eba3baf37d732", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Member.java", "commitBeforeChange": "0e6e3363ae1376359a141e5a7728b6487db35f2e", "commitAfterChange": "ec6df7d4c471e5dbef077b14779058e1a50feb58", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r protected IMethod findCorrespondingMethod(IMethod method, IMethod[] methods)", "signatureAfterChange": "\r protected IMethod[] findMethods(IMethod method, IMethod[] methods)", "diff": ["-protected IMethod findCorrespondingMethod(IMethod method, IMethod[] methods) {\r", "+protected IMethod[] findMethods(IMethod method, IMethod[] methods) {\r", "+\tArrayList list = new ArrayList();\r", "-\t\t\t\treturn existingMethod;\r", "+\t\t\t\tlist.add(existingMethod);\r", "-\treturn null;\r", "+\tint size = list.size();\r", "+\tif (size == 0) {\r", "+\t\treturn null;\r", "+\t} else {\r", "+\t\tIMethod[] result = new IMethod[size];\r", "+\t\tlist.toArray(result);\r", "+\t\treturn result;\r", "+\t}\r"]}], "num": 46046}