{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4d4d690e2f133c8ca53981013f3df049", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "173c89cbb38b44a8341bbc199540e9ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "8c030d505f30b0cafedd9f4204a10256b97739b1", "commitAfterChange": "7ad108ea3de2b7d68d2737f4428379110b97b811", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\t\tthis.catchArguments,", "-\t\t\t\tflowInfo.unconditionalInits());", "-\t\thandlingContext.initsOnFinally =", "-\t\t\tnew NullInfoRegistry(flowInfo.unconditionalInits());", "+\t\t\t\tflowInfo);", "-\t\t\t\t\t\thandlingContext.initsOnFinally.mitigateNullInfoOf(", "-\t\t\t\t\t\t\tflowInfo.unconditionalCopy().", "-\t\t\t\t\t\t\t\taddPotentialInitializationsFrom(", "-\t\t\t\t\t\t\t\t\thandlingContext.initsOnException(i)).", "-\t\t\t\t\t\t\t\taddPotentialInitializationsFrom(tryInfo).", "-\t\t\t\t\t\t\t\taddPotentialInitializationsFrom(", "-\t\t\t\t\t\t\t\t\thandlingContext.initsOnReturn));", "+\t\t\t\t\t\tflowInfo.unconditionalCopy().", "+\t\t\t\t\t\t\taddPotentialInitializationsFrom(", "+\t\t\t\t\t\t\t\thandlingContext.initsOnException(i)).", "+\t\t\t\t\t\t\taddPotentialInitializationsFrom(tryInfo).", "+\t\t\t\t\t\t\taddPotentialInitializationsFrom(", "+\t\t\t\t\t\t\t\thandlingContext.initsOnReturn).", "+\t\t\t\t\t\taddNullInfoFrom(handlingContext.initsOnFinally);", "-\t\t\tflowContext.initsOnFinally.add(handlingContext.initsOnFinally);", "+\t\t\tflowContext.initsOnFinally.addNullInfoFrom(handlingContext.initsOnFinally);", "-\t\t\t\tthis.catchArguments,", "-\t\t\t\tflowInfo.unconditionalInits());", "-\t\thandlingContext.initsOnFinally =", "-\t\t\tnew NullInfoRegistry(flowInfo.unconditionalInits());", "+\t\t\t\tflowInfo);", "-\t\t\t\t\t\thandlingContext.initsOnFinally.mitigateNullInfoOf(", "-\t\t\t\t\t\t\tflowInfo.unconditionalCopy().", "-\t\t\t\t\t\t\t\taddPotentialInitializationsFrom(", "-\t\t\t\t\t\t\t\t\thandlingContext.initsOnException(i)).", "-\t\t\t\t\t\t\t\taddPotentialInitializationsFrom(tryInfo).", "-\t\t\t\t\t\t\t\taddPotentialInitializationsFrom(", "-\t\t\t\t\t\t\t\t\thandlingContext.initsOnReturn));", "+\t\t\t\t\t\tflowInfo.unconditionalCopy().", "+\t\t\t\t\t\t\taddPotentialInitializationsFrom(", "+\t\t\t\t\t\t\t\thandlingContext.initsOnException(i)).", "+\t\t\t\t\t\t\taddPotentialInitializationsFrom(tryInfo).", "+\t\t\t\t\t\t\taddPotentialInitializationsFrom(", "+\t\t\t\t\t\t\t\thandlingContext.initsOnReturn).", "+\t\t\t\t\t\t\taddNullInfoFrom(handlingContext.initsOnFinally);", "-\t\t\thandlingContext.initsOnFinally.mitigateNullInfoOf(", "-\t\t\t\t(tryInfo.tagBits & FlowInfo.UNREACHABLE) == 0 ?", "-\t\t\t\t\tflowInfo.unconditionalCopy().", "+\t\t\t((tryInfo.tagBits & FlowInfo.UNREACHABLE) == 0 ?", "+\t\t\t\tflowInfo.unconditionalCopy().", "-\t\t\t\t\t\t// lighten the influence of the try block, which may have", "-\t\t\t\t\t\t// exited at any point", "+\t\t\t\t\t// lighten the influence of the try block, which may have", "+\t\t\t\t\t// exited at any point", "-\t\t\t\t\tinsideSubContext.initsOnReturn),", "+\t\t\t\tinsideSubContext.initsOnReturn).", "+\t\t\taddNullInfoFrom(", "+\t\t\t\t\thandlingContext.initsOnFinally),", "-\t\t\tflowContext.initsOnFinally.add(handlingContext.initsOnFinally);", "+\t\t\tflowContext.initsOnFinally.addNullInfoFrom(handlingContext.initsOnFinally);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57f7063e2a7c88c314f9979d1ca64303", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "2eab698c606e3b17217602bbc99837242c743a5a", "commitAfterChange": "6d141275326cf4caf65ec5dca68b565e2e9b1360", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\t\tthis.catchArguments,", "-\t\t\t\tflowInfo.unconditionalInits());", "-\t\thandlingContext.initsOnFinally =", "-\t\t\tnew NullInfoRegistry(flowInfo.unconditionalInits());", "+\t\t\t\tflowInfo);", "-\t\t\t\t\t\thandlingContext.initsOnFinally.mitigateNullInfoOf(", "-\t\t\t\t\t\t\tflowInfo.unconditionalCopy().", "-\t\t\t\t\t\t\t\taddPotentialInitializationsFrom(", "-\t\t\t\t\t\t\t\t\thandlingContext.initsOnException(i)).", "-\t\t\t\t\t\t\t\taddPotentialInitializationsFrom(tryInfo).", "-\t\t\t\t\t\t\t\taddPotentialInitializationsFrom(", "-\t\t\t\t\t\t\t\t\thandlingContext.initsOnReturn));", "+\t\t\t\t\t\tflowInfo.unconditionalCopy().", "+\t\t\t\t\t\t\taddPotentialInitializationsFrom(", "+\t\t\t\t\t\t\t\thandlingContext.initsOnException(i)).", "+\t\t\t\t\t\t\taddPotentialInitializationsFrom(tryInfo).", "+\t\t\t\t\t\t\taddPotentialInitializationsFrom(", "+\t\t\t\t\t\t\t\thandlingContext.initsOnReturn).", "+\t\t\t\t\t\taddNullInfoFrom(handlingContext.initsOnFinally);", "-\t\t\tflowContext.initsOnFinally.add(handlingContext.initsOnFinally);", "+\t\t\tflowContext.initsOnFinally.addNullInfoFrom(handlingContext.initsOnFinally);", "-\t\t\t\tthis.catchArguments,", "-\t\t\t\tflowInfo.unconditionalInits());", "-\t\thandlingContext.initsOnFinally =", "-\t\t\tnew NullInfoRegistry(flowInfo.unconditionalInits());", "+\t\t\t\tflowInfo);", "-\t\t\t\t\t\thandlingContext.initsOnFinally.mitigateNullInfoOf(", "-\t\t\t\t\t\t\tflowInfo.unconditionalCopy().", "-\t\t\t\t\t\t\t\taddPotentialInitializationsFrom(", "-\t\t\t\t\t\t\t\t\thandlingContext.initsOnException(i)).", "-\t\t\t\t\t\t\t\taddPotentialInitializationsFrom(tryInfo).", "-\t\t\t\t\t\t\t\taddPotentialInitializationsFrom(", "-\t\t\t\t\t\t\t\t\thandlingContext.initsOnReturn));", "+\t\t\t\t\t\tflowInfo.unconditionalCopy().", "+\t\t\t\t\t\t\taddPotentialInitializationsFrom(", "+\t\t\t\t\t\t\t\thandlingContext.initsOnException(i)).", "+\t\t\t\t\t\t\taddPotentialInitializationsFrom(tryInfo).", "+\t\t\t\t\t\t\taddPotentialInitializationsFrom(", "+\t\t\t\t\t\t\t\thandlingContext.initsOnReturn).", "+\t\t\t\t\t\t\taddNullInfoFrom(handlingContext.initsOnFinally);", "-\t\t\thandlingContext.initsOnFinally.mitigateNullInfoOf(", "-\t\t\t\t(tryInfo.tagBits & FlowInfo.UNREACHABLE) == 0 ?", "-\t\t\t\t\tflowInfo.unconditionalCopy().", "+\t\t\t((tryInfo.tagBits & FlowInfo.UNREACHABLE) == 0 ?", "+\t\t\t\tflowInfo.unconditionalCopy().", "-\t\t\t\t\t\t// lighten the influence of the try block, which may have", "-\t\t\t\t\t\t// exited at any point", "+\t\t\t\t\t// lighten the influence of the try block, which may have", "+\t\t\t\t\t// exited at any point", "-\t\t\t\t\tinsideSubContext.initsOnReturn),", "+\t\t\t\tinsideSubContext.initsOnReturn).", "+\t\t\taddNullInfoFrom(", "+\t\t\t\t\thandlingContext.initsOnFinally),", "-\t\t\tflowContext.initsOnFinally.add(handlingContext.initsOnFinally);", "+\t\t\tflowContext.initsOnFinally.addNullInfoFrom(handlingContext.initsOnFinally);"]}], "num": 64030}