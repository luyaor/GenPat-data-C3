{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0dd64cf573a15e339982c186645bd8f3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "261b19871362555260c9160e120a57ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "1666c32b249d36aa9547f4f66f511c5bb00d3d63", "commitAfterChange": "4e6bb96b0e120539a45cc4860f508bf12e097d37", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  public ParameterizedGenericMethodBinding createParameterizedGenericMethod(MethodBinding genericMethod, TypeBinding[] typeArguments)", "signatureAfterChange": "  public ParameterizedGenericMethodBinding createParameterizedGenericMethod(MethodBinding genericMethod, TypeBinding[] typeArguments)", "diff": ["+\treturn createParameterizedGenericMethod(genericMethod, typeArguments, false, false);", "+}", "-\tParameterizedGenericMethodBinding parameterizedGenericMethod = new ParameterizedGenericMethodBinding(genericMethod, typeArguments, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "732dc22e01fcbea5b2a4623f7879b033", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "c45031a708344453f01f911278a63ebae41b9cba", "commitAfterChange": "c49a7bd34f8c2781dba76984d24d83335183205f", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " public TypeBinding createAnnotatedType(TypeBinding genericType, long annotationBits)", "signatureAfterChange": " public TypeBinding createAnnotatedType(TypeBinding genericType, long annotationBits)", "diff": ["-\t\tParameterizedTypeBinding parameterizedType = createParameterizedType((ReferenceBinding) genericType, typeArguments, ", "+\t\tParameterizedTypeBinding parameterizedType = createParameterizedType((ReferenceBinding) genericType.original(), typeArguments, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2b5204667ecacf8f29031689eda57fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExpressionFormula.java", "commitBeforeChange": "f8e06af2d64912de617f742baa744d8cff14ca39", "commitAfterChange": "799bcf90c7e5ed6ce45339b7f5c6f4ecccd1d29c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tstatic boolean inferPolyInvocationType(InferenceContext18 inferenceContext, InvocationSite invocationSite, TypeBinding targetType, MethodBinding method)  \t\t\t\tthrows InferenceFailureException", "signatureAfterChange": "  \tstatic boolean inferPolyInvocationType(InferenceContext18 inferenceContext, InvocationSite invocationSite, TypeBinding targetType, MethodBinding method)  \t\t\t\tthrows InferenceFailureException", "diff": ["-\t\t\tParameterizedTypeBinding parameterizedType = parameterizedWithWildcard(returnType);", "+\t\t\tParameterizedTypeBinding parameterizedType = InferenceContext18.parameterizedWithWildcard(returnType);"]}], "num": 32108}