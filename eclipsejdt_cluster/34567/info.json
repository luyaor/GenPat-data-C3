{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bc3b61811e879f33c81a69cfa4ee2e69", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c46025d9c9736dd047287057dc5df1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "f24df5ec655ae2d01a7ec7f32554b0fc075e3c92", "commitAfterChange": "10f63341df199e970df278da3a8020c6446bceae", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tsynchronized ITypeBinding resolveWellKnownType(String name)", "signatureAfterChange": " \tsynchronized ITypeBinding resolveWellKnownType(String name)", "diff": ["-\t\tif ((\"boolean\".equals(name))//$NON-NLS-1$", "-\t\t\t|| (\"char\".equals(name))//$NON-NLS-1$", "-\t\t\t|| (\"byte\".equals(name))//$NON-NLS-1$", "-\t\t\t|| (\"short\".equals(name))//$NON-NLS-1$", "-\t\t\t|| (\"int\".equals(name))//$NON-NLS-1$", "-\t\t\t|| (\"long\".equals(name))//$NON-NLS-1$", "-\t\t\t|| (\"float\".equals(name))//$NON-NLS-1$", "-\t\t\t|| (\"double\".equals(name))//$NON-NLS-1$", "-\t\t\t|| (\"void\".equals(name))) {//$NON-NLS-1$", "-\t\t\treturn this.getTypeBinding(Scope.getBaseType(name.toCharArray()));", "-\t\t} else if (\"java.lang.Object\".equals(name)) {//$NON-NLS-1$", "-\t\t\treturn this.getTypeBinding(this.scope.getJavaLangObject());", "-\t\t} else if (\"java.lang.String\".equals(name)) {//$NON-NLS-1$", "-\t\t\treturn this.getTypeBinding(this.scope.getJavaLangString());", "-\t\t} else if (\"java.lang.StringBuffer\".equals(name)) {//$NON-NLS-1$", "-\t\t\treturn this.getTypeBinding(this.scope.getType(JAVA_LANG_STRINGBUFFER, 3));", "-\t\t} else if (\"java.lang.Throwable\".equals(name)) {//$NON-NLS-1$", "-\t\t\treturn this.getTypeBinding(this.scope.getJavaLangThrowable());", "-\t\t} else if (\"java.lang.Exception\".equals(name)) {//$NON-NLS-1$", "-\t\t\treturn this.getTypeBinding(this.scope.getType(JAVA_LANG_EXCEPTION, 3));", "-\t\t} else if (\"java.lang.RuntimeException\".equals(name)) {//$NON-NLS-1$", "-\t\t\treturn this.getTypeBinding(this.scope.getJavaLangRuntimeException());", "-\t\t} else if (\"java.lang.Error\".equals(name)) {//$NON-NLS-1$", "-\t\t\treturn this.getTypeBinding(this.scope.getJavaLangError());", "-\t\t} else if (\"java.lang.Class\".equals(name)) {//$NON-NLS-1$ ", "-\t\t\treturn this.getTypeBinding(this.scope.getJavaLangClass());", "-\t    } else if (\"java.lang.Cloneable\".equals(name)) {//$NON-NLS-1$ ", "-\t\t\treturn this.getTypeBinding(this.scope.getJavaLangCloneable());", "-\t\t} else if (\"java.io.Serializable\".equals(name)) {//$NON-NLS-1$ ", "-\t\t\treturn this.getTypeBinding(this.scope.getJavaIoSerializable());", "-\t\t} else {", "-\t\t\treturn null;", "+\t\ttry {", "+\t\t\tif ((\"boolean\".equals(name))//$NON-NLS-1$", "+\t\t\t\t|| (\"char\".equals(name))//$NON-NLS-1$", "+\t\t\t\t|| (\"byte\".equals(name))//$NON-NLS-1$", "+\t\t\t\t|| (\"short\".equals(name))//$NON-NLS-1$", "+\t\t\t\t|| (\"int\".equals(name))//$NON-NLS-1$", "+\t\t\t\t|| (\"long\".equals(name))//$NON-NLS-1$", "+\t\t\t\t|| (\"float\".equals(name))//$NON-NLS-1$", "+\t\t\t\t|| (\"double\".equals(name))//$NON-NLS-1$", "+\t\t\t\t|| (\"void\".equals(name))) {//$NON-NLS-1$", "+\t\t\t\treturn this.getTypeBinding(Scope.getBaseType(name.toCharArray()));", "+\t\t\t} else if (\"java.lang.Object\".equals(name)) {//$NON-NLS-1$", "+\t\t\t\treturn this.getTypeBinding(this.scope.getJavaLangObject());", "+\t\t\t} else if (\"java.lang.String\".equals(name)) {//$NON-NLS-1$", "+\t\t\t\treturn this.getTypeBinding(this.scope.getJavaLangString());", "+\t\t\t} else if (\"java.lang.StringBuffer\".equals(name)) {//$NON-NLS-1$", "+\t\t\t\treturn this.getTypeBinding(this.scope.getType(TypeConstants.JAVA_LANG_STRINGBUFFER, 3));", "+\t\t\t} else if (\"java.lang.Throwable\".equals(name)) {//$NON-NLS-1$", "+\t\t\t\treturn this.getTypeBinding(this.scope.getJavaLangThrowable());", "+\t\t\t} else if (\"java.lang.Exception\".equals(name)) {//$NON-NLS-1$", "+\t\t\t\treturn this.getTypeBinding(this.scope.getType(TypeConstants.JAVA_LANG_EXCEPTION, 3));", "+\t\t\t} else if (\"java.lang.RuntimeException\".equals(name)) {//$NON-NLS-1$", "+\t\t\t\treturn this.getTypeBinding(this.scope.getJavaLangRuntimeException());", "+\t\t\t} else if (\"java.lang.Error\".equals(name)) {//$NON-NLS-1$", "+\t\t\t\treturn this.getTypeBinding(this.scope.getJavaLangError());", "+\t\t\t} else if (\"java.lang.Class\".equals(name)) {//$NON-NLS-1$ ", "+\t\t\t\treturn this.getTypeBinding(this.scope.getJavaLangClass());", "+\t\t\t} else if (\"java.lang.Cloneable\".equals(name)) {//$NON-NLS-1$ ", "+\t\t\t\treturn this.getTypeBinding(this.scope.getJavaLangCloneable());", "+\t\t\t} else if (\"java.io.Serializable\".equals(name)) {//$NON-NLS-1$ ", "+\t\t\t\treturn this.getTypeBinding(this.scope.getJavaIoSerializable());", "+\t\t\t} else if (\"java.lang.Boolean\".equals(name)) {//$NON-NLS-1$", "+\t\t\t\treturn this.getTypeBinding(this.scope.getType(TypeConstants.JAVA_LANG_BOOLEAN, 3));", "+\t\t\t} else if (\"java.lang.Byte\".equals(name)) {//$NON-NLS-1$", "+\t\t\t\treturn this.getTypeBinding(this.scope.getType(TypeConstants.JAVA_LANG_BYTE, 3));", "+\t\t\t} else if (\"java.lang.Character\".equals(name)) {//$NON-NLS-1$", "+\t\t\t\treturn this.getTypeBinding(this.scope.getType(TypeConstants.JAVA_LANG_CHARACTER, 3));", "+\t\t\t} else if (\"java.lang.Double\".equals(name)) {//$NON-NLS-1$", "+\t\t\t\treturn this.getTypeBinding(this.scope.getType(TypeConstants.JAVA_LANG_DOUBLE, 3));", "+\t\t\t} else if (\"java.lang.Float\".equals(name)) {//$NON-NLS-1$", "+\t\t\t\treturn this.getTypeBinding(this.scope.getType(TypeConstants.JAVA_LANG_FLOAT, 3));", "+\t\t\t} else if (\"java.lang.Integer\".equals(name)) {//$NON-NLS-1$", "+\t\t\t\treturn this.getTypeBinding(this.scope.getType(TypeConstants.JAVA_LANG_INTEGER, 3));", "+\t\t\t} else if (\"java.lang.Long\".equals(name)) {//$NON-NLS-1$", "+\t\t\t\treturn this.getTypeBinding(this.scope.getType(TypeConstants.JAVA_LANG_LONG, 3));", "+\t\t\t} else if (\"java.lang.Short\".equals(name)) {//$NON-NLS-1$", "+\t\t\t\treturn this.getTypeBinding(this.scope.getType(TypeConstants.JAVA_LANG_SHORT, 3));", "+\t\t\t} else if (\"java.lang.Void\".equals(name)) {//$NON-NLS-1$", "+\t\t\t\treturn this.getTypeBinding(this.scope.getType(TypeConstants.JAVA_LANG_VOID, 3));", "+\t\t\t}", "+\t\t} catch (AbortCompilation e) {", "+\t\t\t// ignore missing types", "+\t\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58bdbe31c6e7cd2c026f098298b6bf00", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "d5cfbf43310ee4287ca95e41bcf01793920b4037", "commitAfterChange": "19036ed763985597632dc62fba09c6522d0864ac", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 54, "signatureBeforeChange": "  \tprivate static IJavaModelStatus validateLibraryEntry(IPath path, IJavaProject project, IPath sourceAttachment, String entryPathMsg)", "signatureAfterChange": " \tprivate static IJavaModelStatus validateLibraryEntry(IPath path, IJavaProject project, String container, IPath sourceAttachment, String entryPathMsg)", "diff": ["-\tprivate static IJavaModelStatus validateLibraryEntry(IPath path, IJavaProject project, IPath sourceAttachment, String entryPathMsg) {", "+\t// more fully.", "+\tprivate static IJavaModelStatus validateLibraryEntry(IPath path, IJavaProject project, String container, IPath sourceAttachment, String entryPathMsg) {", "-\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INCOMPATIBLE_JDK_LEVEL, project, path, CompilerOptions.versionFromJdkLevel(libraryJDK));", "+\t\t\t\t\tif (container != null) {", "+\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INCOMPATIBLE_JDK_LEVEL,", "+\t\t\t\t\t\t\t\tproject, path,", "+\t\t\t\t\t\t\t\tMessages.bind(Messages.classpath_incompatibleLibraryJDKLevelInContainer,", "+\t\t\t\t\t\t\t\t\t\tnew String [] {", "+\t\t\t\t\t\t\t\t\t\t\tproject.getElementName(),", "+\t\t\t\t\t\t\t\t\t\t\tCompilerOptions.versionFromJdkLevel(projectTargetJDK),", "+\t\t\t\t\t\t\t\t\t\t\tpath.makeRelative().toString(),", "+\t\t\t\t\t\t\t\t\t\t\tcontainer,", "+\t\t\t\t\t\t\t\t\t\t\tCompilerOptions.versionFromJdkLevel(libraryJDK)}));", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INCOMPATIBLE_JDK_LEVEL,", "+\t\t\t\t\t\t\t\tproject, path, ", "+\t\t\t\t\t\t\t\tMessages.bind(Messages.classpath_incompatibleLibraryJDKLevel,", "+\t\t\t\t\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\t\t\t\t\tproject.getElementName(),", "+\t\t\t\t\t\t\t\t\t\t\tCompilerOptions.versionFromJdkLevel(projectTargetJDK), ", "+\t\t\t\t\t\t\t\t\t\t\tpath.makeRelative().toString(),", "+\t\t\t\t\t\t\t\t\t\t\tCompilerOptions.versionFromJdkLevel(libraryJDK)}));", "+\t\t\t\t\t}", "-\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundSourceAttachment, new String [] {sourceAttachment.toString(), path.toString(), project.getElementName()}));", "+\t\t\t\t\t\t\tif (container != null) {", "+\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundSourceAttachmentInContainedLibrary, new String [] {sourceAttachment.toString(), path.toString(), container}));", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundSourceAttachment, new String [] {sourceAttachment.toString(), path.toString(), project.getElementName()}));", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundSourceAttachment, new String [] {sourceAttachment.toString(), path.toString(), project.getElementName()}));", "+\t\t\t\t\t\t\tif (container != null) {", "+\t\t\t\t\t\t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundSourceAttachmentInContainedLibrary, new String [] {sourceAttachment.toString(), path.toString(), container}));", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundSourceAttachment, new String [] {sourceAttachment.toString(), path.toString(), project.getElementName()}));", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_illegalExternalFolder, new String[] {path.toOSString(), project.getElementName()}));", "+\t\t\t    \tif (container != null) {", "+\t\t\t    \t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_illegalExternalFolderInContainer, new String[] {path.toOSString(), container}));", "+\t\t\t    \t} else {", "+\t\t\t    \t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_illegalExternalFolder, new String[] {path.toOSString(), project.getElementName()}));", "+\t\t\t    \t}", "-\t\t\t\t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundSourceAttachment, new String [] {sourceAttachment.toString(), path.toOSString(), project.getElementName()}));", "-\t\t\t    }", "+\t\t\t    \t\tif (container != null) {", "+\t\t\t    \t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundSourceAttachmentInContainedLibrary, new String [] {sourceAttachment.toString(), path.toOSString(), container}));", "+\t\t\t    \t\t} else {", "+\t\t\t    \t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundSourceAttachment, new String [] {sourceAttachment.toString(), path.toOSString(), project.getElementName()}));", "+\t\t\t    \t\t}", "+\t\t\t    \t}", "-\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundLibrary, new String[] {path.toOSString(), project.getElementName()}));", "+\t\t\t\t\tif (container != null) {", "+\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundLibraryInContainer, new String[] {path.toOSString(), container}));", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundLibrary, new String[] {path.toOSString(), project.getElementName()}));\t", "+\t\t\t\t\t}", "-\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundLibrary, new String[] {entryPathMsg, project.getElementName()}));", "+\t\t\t\t\tif (container!= null) {\t", "+\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundLibraryInContainer, new String[] {entryPathMsg, container}));", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundLibrary, new String[] {entryPathMsg, project.getElementName()}));", "+\t\t\t\t\t}", "-\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_illegalLibraryPath, new String[] {entryPathMsg, project.getElementName()}));", "+\t\t\t\tif (container != null) {", "+\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_illegalLibraryPathInContainer, new String[] {entryPathMsg, container}));", "+\t\t\t\t} else {", "+\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_illegalLibraryPath, new String[] {entryPathMsg, project.getElementName()}));", "+\t\t\t\t}"]}], "num": 34567}