{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ccea728f243429a6922a7a64db7dfa39", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28d01db81598d9eb50578f571a2f6249", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "679aa0fd26f479e5f5eacae8934cf6323becfdda", "commitAfterChange": "f4c6f76ca25c7f1cc15835d3fa1f5998a02ab891", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprivate static SearchPattern createTypePattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "signatureAfterChange": " \tprivate static SearchPattern createTypePattern(String patternString, int limitTo, int matchRule)", "diff": ["-\tprivate static SearchPattern createTypePattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive) {", "+\tprivate static SearchPattern createTypePattern(String patternString, int limitTo, int matchRule) {", "-\t\tint matchRule = isCaseSensitive ? matchMode | R_CASE_SENSITIVE : matchMode;", "-\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51dc63df158632aa593e50b4c18b38ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "679aa0fd26f479e5f5eacae8934cf6323becfdda", "commitAfterChange": "f4c6f76ca25c7f1cc15835d3fa1f5998a02ab891", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate static SearchPattern createConstructorPattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "signatureAfterChange": " \tprivate static SearchPattern createConstructorPattern(String patternString, int limitTo, int matchRule)", "diff": ["-\tprivate static SearchPattern createConstructorPattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive) {", "+\tprivate static SearchPattern createConstructorPattern(String patternString, int limitTo, int matchRule) {", "-\t\tint matchRule = isCaseSensitive ? matchMode | R_CASE_SENSITIVE : matchMode;", "-\t\t"]}], "num": 28107}