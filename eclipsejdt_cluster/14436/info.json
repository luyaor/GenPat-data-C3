{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9d6d70393a14c39b4ba45b20e92ce781", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6976f0a41465e58ffd0b3551f575a5bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 975, "methodNumberAfterChange": 975, "signatureBeforeChange": " public void test0951()", "signatureAfterChange": " public void test0951()", "diff": ["+\t\tthis.complianceLevel < ClassFileConstants.JDK1_7 ?", "-\t\t\"----------\\n\");", "+\t\t\"----------\\n\" :", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tpublic <T> Iterable<T> m(T[]... ts) {\\n\" + ", "+\t\t\t\"\t                                ^^\\n\" + ", "+\t\t\t\"Type safety: Potential heap pollution via varargs parameter ts\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tpublic <T> void m3(Iterable<T>... ts) {\\n\" + ", "+\t\t\t\"\t                                  ^^\\n\" + ", "+\t\t\t\"Type safety: Potential heap pollution via varargs parameter ts\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 14)\\n\" + ", "+\t\t\t\"\tZork z;\\n\" + ", "+\t\t\t\"\t^^^^\\n\" + ", "+\t\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83fe54e6f91b1f24dd2dadf8a5363482", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "e62c45ebe5881b0e2838be4fcb8a4a48c85b9c0c", "commitAfterChange": "c36a6a2b662267e56067d121b7f34ae48cbcb692", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 112, "signatureBeforeChange": " \tpublic void test036e()", "signatureAfterChange": " \tpublic void test036e()", "diff": ["+\t\t\tthis.complianceLevel < ClassFileConstants.JDK1_7 ?", "-\t\t\t\"----------\\n\"", "+\t\t\t\"----------\\n\" :", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in Y.java (at line 1)\\n\" + ", "+\t\t\t\"\tabstract class Y implements Equivalent<String>, EqualityComparable<Integer> {\\n\" + ", "+\t\t\t\"\t               ^\\n\" + ", "+\t\t\t\"Name clash: The method equalTo(T) of type Equivalent<T> has the same erasure as equalTo(T) of type EqualityComparable<T> but does not override it\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in Y.java (at line 2)\\n\" + ", "+\t\t\t\"\tpublic abstract boolean equalTo(Object other);\\n\" + ", "+\t\t\t\"\t                        ^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Name clash: The method equalTo(Object) of type Y has the same erasure as equalTo(T) of type Equivalent<T> but does not override it\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in Y.java (at line 2)\\n\" + ", "+\t\t\t\"\tpublic abstract boolean equalTo(Object other);\\n\" + ", "+\t\t\t\"\t                        ^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Name clash: The method equalTo(Object) of type Y has the same erasure as equalTo(T) of type EqualityComparable<T> but does not override it\\n\" + ", "+\t\t\t\"----------\\n\""]}], "num": 14436}