{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5933f75439fe83f00ab4eb0e86d1bf3c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a6e5f8e9322338ac54adee05bcf5480", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryType.java", "commitBeforeChange": "e6db618a9b62756ea5188d8fdad9bb0c157f5516", "commitAfterChange": "265fce71e12d88a397c49e9793a330fd01dcb78a", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  public String getSourceFileName()", "signatureAfterChange": "  public String getSourceFileName(IBinaryType info)", "diff": ["-public String getSourceFileName() {", "-\t\tBinaryType typeParent = (BinaryType) getDeclaringType();", "-\t\tBinaryType declType = this;", "-\t\twhile (typeParent != null) {", "-\t\t\tdeclType = typeParent;", "-\t\t\ttypeParent = (BinaryType) declType.getDeclaringType();", "-\t\t}", "-\t\tIBinaryType info;", "+public String getSourceFileName(IBinaryType info) {", "+\tif (info == null) {", "-\t\t\tinfo = (IBinaryType) declType.getElementInfo();", "+\t\t\tinfo = (IBinaryType) getElementInfo();", "-\t\t\treturn null;", "+\t\t\t// default to using the outer most declaring type name", "+\t\t\tIType type = this;", "+\t\t\tIType enclosingType = getDeclaringType();", "+\t\t\twhile (enclosingType != null) {", "+\t\t\t\ttype = enclosingType;", "+\t\t\t\tenclosingType = type.getDeclaringType();", "+\t\t\t}", "+\t\t\treturn type.getElementName() + Util.defaultJavaExtension();", "-\t\treturn declType.sourceFileName(info);", "+\t}", "+\treturn sourceFileName(info);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "723b15bd94ad9e084385ef1c1154e90e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "e931aecd3dd39697fd0a057bffda11890337b018", "commitAfterChange": "305acfe01a2cb51532a94f25f8a4ff106e9d160c", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " protected BinaryTypeBinding cacheBinaryType(IType type) throws JavaModelException", "signatureAfterChange": " protected BinaryTypeBinding cacheBinaryType(IType type, IBinaryType binaryType) throws JavaModelException", "diff": ["-protected BinaryTypeBinding cacheBinaryType(IType type) throws JavaModelException {", "+protected BinaryTypeBinding cacheBinaryType(IType type, IBinaryType binaryType) throws JavaModelException {", "-\t\tcacheBinaryType(enclosingType); // cache enclosing types first, so that binary type can be found in lookup enviroment", "-\tIBinaryType binaryType = (IBinaryType) ((BinaryType) type).getElementInfo();", "+\t\tcacheBinaryType(enclosingType, null); // cache enclosing types first, so that binary type can be found in lookup enviroment", "+\tif (binaryType == null) {", "+\t\tClassFile classFile = (ClassFile) type.getClassFile();", "+\t\ttry {", "+\t\t\tbinaryType = getBinaryInfo(classFile, classFile.getResource());", "+\t\t} catch (CoreException e) {", "+\t\t\tif (e instanceof JavaModelException) {", "+\t\t\t\tthrow (JavaModelException) e;", "+\t\t\t} else {", "+\t\t\t\tthrow new JavaModelException(e);", "+\t\t\t}", "+\t\t}", "+\t}"]}], "num": 14555}