{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e0729a7eb8a71e9f913b31f501ee014e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01c09708796aa69d6c5e1217e9680883", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "4dcee3865dac6ea12db30db530190d4fbe700589", "commitAfterChange": "0d85a7668d7a1b0fd348b12b9181fb4bd1f9702b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\tif ((this.genericTypeArguments[i] = this.typeArguments[i].resolveType(scope, true /* check bounds*/)) == null) {", "+\t\t\tTypeReference typeReference = this.typeArguments[i];", "+\t\t\tif ((this.genericTypeArguments[i] = typeReference.resolveType(scope, true /* check bounds*/)) == null) {", "+\t\t\tif (argHasError && typeReference instanceof Wildcard) {", "+\t\t\t\tscope.problemReporter().illegalUsageOfWildcard(typeReference);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a473bddf305337c518d3281e3cf1d66e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ExplicitConstructorCall.java", "commitBeforeChange": "4dcee3865dac6ea12db30db530190d4fbe700589", "commitAfterChange": "0d85a7668d7a1b0fd348b12b9181fb4bd1f9702b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tpublic void resolve(BlockScope scope)", "signatureAfterChange": " \t \tpublic void resolve(BlockScope scope)", "diff": ["-\t\t\t\t\tif ((this.genericTypeArguments[i] = this.typeArguments[i].resolveType(scope, true /* check bounds*/)) == null) {", "+\t\t\t\t\tTypeReference typeReference = this.typeArguments[i];", "+\t\t\t\t\tif ((this.genericTypeArguments[i] = typeReference.resolveType(scope, true /* check bounds*/)) == null) {", "+\t\t\t\t\tif (argHasError && typeReference instanceof Wildcard) {", "+\t\t\t\t\t\tscope.problemReporter().illegalUsageOfWildcard(typeReference);", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6e28a6dbf2841ab80fbd03577ccab8a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "8a5a27e367a10f2cb74284a9af44dbd04a9f1e58", "commitAfterChange": "603407babd2c357586051d3456e4089d4193cd98", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\tif ((this.genericTypeArguments[i] = this.typeArguments[i].resolveType(scope, true /* check bounds*/)) == null) {", "+\t\t\tTypeReference typeReference = this.typeArguments[i];", "+\t\t\tif ((this.genericTypeArguments[i] = typeReference.resolveType(scope, true /* check bounds*/)) == null) {", "+\t\t\tif (argHasError && typeReference instanceof Wildcard) {", "+\t\t\t\tscope.problemReporter().illegalUsageOfWildcard(typeReference);", "+\t\t\t}"]}], "num": 61806}