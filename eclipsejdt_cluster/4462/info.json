{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4e10cbb2f3c2010f9e22126d08e58978", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "653fd4966d2b44c3cb74865d417a0a33", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedSingleTypeReference.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds)", "diff": ["-\t\t\t\tif (currentType.isStatic() && (enclosingType.isGenericType() || enclosingType.isParameterizedType())) {", "-\t\t\t\t\tenclosingType = scope.environment().createRawType((ReferenceBinding)enclosingType.erasure(), enclosingType.enclosingType());", "+\t\t\t\tif (currentType.isStatic() ", "+\t\t\t\t\t\t|| (enclosingType.isGenericType() ", "+\t\t\t\t\t\t\t\t&& enclosingType.outermostEnclosingType() != scope.outerMostClassScope().referenceContext.binding)) {", "+\t\t\t\t\tenclosingType = (ReferenceBinding) scope.convertToRawType(enclosingType);", "+\t\t} else if (!currentType.isStatic() && enclosingType != null && enclosingType.isRawType()){", "+\t\t\tscope.problemReporter().rawMemberTypeCannotBeParameterized(", "+\t\t\t\t\tthis, scope.environment().createRawType((ReferenceBinding)currentType.erasure(), enclosingType), argTypes);", "+\t\t\treturn null;", "-\t\t\t\t    if (!typeVariables[i].boundCheck(parameterizedType, argTypes[i]))", "+\t\t\t\t    if (typeVariables[i].boundCheck(parameterizedType, argTypes[i]) != TypeConstants.OK)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bab3e11a75afa13e63e0e31958710335", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedQualifiedTypeReference.java", "commitBeforeChange": "6c179d1611035fa643a61ef0b82b25ce29580a3a", "commitAfterChange": "42a8e7b7f9382c59bb1ff340f0838c566aaa3094", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["+\t\tboolean typeIsConsistent = true;", "-", "-\t\t\tif (currentType.isStatic() && enclosingType != null && (enclosingType.isParameterizedType() || enclosingType.isGenericType())) {", "+\t\t\tif (typeIsConsistent && currentType.isStatic() && enclosingType != null && (enclosingType.isParameterizedType() || enclosingType.isGenericType())) {", "-\t\t\t\treturn null;", "+\t\t\t\ttypeIsConsistent = false;", "-\t\t\t\tif (!currentType.isStatic() && enclosingType != null && enclosingType.isRawType()) {", "+\t\t\t\tif (typeIsConsistent && !currentType.isStatic() && enclosingType != null && enclosingType.isRawType()) {", "-\t\t\t\t\treturn null;\t\t\t\t\t", "+\t\t\t\t\ttypeIsConsistent = false;\t\t\t\t", "-\t   \t\t\t    if (enclosingType != null && enclosingType.isParameterizedType()) {", "+\t   \t\t\t    if (typeIsConsistent && enclosingType != null && enclosingType.isParameterizedType()) {", "-\t\t\t\t\t\treturn null;", "+\t\t\t\t\t\ttypeIsConsistent = false;"]}], "num": 4462}