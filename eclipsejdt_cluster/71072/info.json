{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dae7feb622bf129f0e226d388525b74d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f63a3eaab77ac63bd0176bf017724cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "0d0ece63676205621683728295e330e5d3ff8080", "commitAfterChange": "4548a7d90e8e4c11b66df276814b1cfc602d40e1", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void indexLibrary(IPath path, IProject requestingProject)", "signatureAfterChange": " public void indexLibrary(IPath path, IProject requestingProject)", "diff": ["-\t\trequest = new AddJarFileToIndex(path, this);", "+\t\tif (((java.io.File)target).isFile()) {", "+\t\t\trequest = new AddJarFileToIndex(path, this);", "+\t\t} else {", "+\t\t\treturn;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d462539dbc6e3813e2c6dea43d535546", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "f13b3f138b2707e2ed0706cfa2c6808559abaedc", "commitAfterChange": "3f8d782744788869617c5d4942a7906c3f97360f", "methodNumberBeforeChange": 258, "methodNumberAfterChange": 258, "signatureBeforeChange": " public void needToEmulateMethodAccess( \tMethodBinding method,  \tASTNode location)", "signatureAfterChange": " public void needToEmulateMethodAccess( \tMethodBinding method,  \tASTNode location)", "diff": ["-\tif (method.isConstructor())", "+\tif (method.isConstructor()) {", "+\t\tif (method.declaringClass.isEnum())", "+\t\t\treturn; // tolerate emulation for enum constructors, which can only be made private", "-\telse", "-\t\tthis.handle(", "-\t\t\tIProblem.NeedToEmulateMethodAccess, ", "-\t\t\tnew String[] {", "-\t\t\t\tnew String(method.declaringClass.readableName()), ", "-\t\t\t\tnew String(method.selector), ", "-\t\t\t\ttypesAsString(method.isVarargs(), method.parameters, false)", "-\t\t\t }, ", "-\t\t\tnew String[] {", "-\t\t\t\tnew String(method.declaringClass.shortReadableName()), ", "-\t\t\t\tnew String(method.selector), ", "-\t\t\t\ttypesAsString(method.isVarargs(), method.parameters, true)", "-\t\t\t }, ", "-\t\t\tlocation.sourceStart, ", "-\t\t\tlocation.sourceEnd); ", "+\t\treturn;", "+\t}", "+\tthis.handle(", "+\t\tIProblem.NeedToEmulateMethodAccess, ", "+\t\tnew String[] {", "+\t\t\tnew String(method.declaringClass.readableName()), ", "+\t\t\tnew String(method.selector), ", "+\t\t\ttypesAsString(method.isVarargs(), method.parameters, false)", "+\t\t }, ", "+\t\tnew String[] {", "+\t\t\tnew String(method.declaringClass.shortReadableName()), ", "+\t\t\tnew String(method.selector), ", "+\t\t\ttypesAsString(method.isVarargs(), method.parameters, true)", "+\t\t }, ", "+\t\tlocation.sourceStart, ", "+\t\tlocation.sourceEnd); "]}], "num": 71072}