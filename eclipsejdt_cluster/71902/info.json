{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "68ae23d35e1dd976ee118a7d5731767a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f05a6a10d8c13e6675ae7c234b1f531", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "ca349eb1728a54f5c4569863d8f64340b099c4ce", "commitAfterChange": "2575bc1675526f9cf1bae80cf41843bf7eedd3c4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static MethodBinding computeCompatibleMethod(MethodBinding originalMethod, TypeBinding[] arguments, Scope scope, \t\t\tInvocationSite invocationSite, int inferenceLevel)", "signatureAfterChange": " \tpublic static MethodBinding computeCompatibleMethod(MethodBinding originalMethod, TypeBinding[] arguments, Scope scope, \t\t\tInvocationSite invocationSite, int inferenceLevel)", "diff": ["-\t\t\t\t\t\t\t\t\tmethodSubstitute = NullAnnotationMatching.checkForContraditions(methodSubstitute, invocationSite, scope);", "+\t\t\t\t\t\t\t\t\tNullAnnotationMatching.checkForContraditions(methodSubstitute, invocationSite, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa93c6e9566a8559602712961c13d046", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "ca349eb1728a54f5c4569863d8f64340b099c4ce", "commitAfterChange": "2575bc1675526f9cf1bae80cf41843bf7eedd3c4", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " MethodBinding inferInvocationType(Invocation invocation, TypeBinding[] argumentTypes, ParameterizedGenericMethodBinding method)", "signatureAfterChange": " MethodBinding inferInvocationType(Invocation invocation, TypeBinding[] argumentTypes, ParameterizedGenericMethodBinding method)", "diff": ["-\t\t\t\t\t\tfinalMethod = NullAnnotationMatching.checkForContraditions(finalMethod, invocation, this.scope);", "+\t\t\t\t\t\tNullAnnotationMatching.checkForContraditions(finalMethod, invocation, this.scope);"]}], "num": 71902}