{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7acad3dba24f314ec21b2378c8ae015a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0775ddf7d49ceb725d4556ba3e7895bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "618f3771c49dbf9480ae16a58263680af2b36ad6", "commitAfterChange": "7cfc4523cdcfe787f1d0d2fd75b08c06e5b4b089", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate Expression parseMember(TypeReference receiver) throws InvalidInputException", "signatureAfterChange": " \tprotected Object createFieldReference(Object receiver) throws InvalidInputException", "diff": ["-\t */", "-\tprivate Expression parseMember(TypeReference receiver) throws InvalidInputException {", "-\t\t// Init", "-\t\tthis.identifierPtr = -1;", "-\t\tthis.identifierLengthPtr = -1;", "-\t\tint start = this.scanner.getCurrentTokenStartPosition();", "-\t\t", "-\t\t// Get type ref", "-\t\tTypeReference typeRef = receiver;", "-\t\tif (typeRef == null) {", "-\t\t\tchar[] name = this.sourceParser.compilationUnit.compilationResult.compilationUnit.getMainTypeName();", "-\t\t\tif (name == null) {", "-\t\t\t}", "-\t\t\ttypeRef = new JavadocSingleTypeReference(name, 0, 0, 0);", "-\t\t", "-\t\t// Get member identifier", "-\t\tif (readToken() == TerminalTokens.TokenNameIdentifier) {", "-\t\t\tconsumeToken();", "-\t\t\tpushIdentifier(true);", "-\t\t\tif (readToken() == TerminalTokens.TokenNameLPAREN) {", "-\t\t\t\tconsumeToken();", "-\t\t\t\tstart = this.scanner.getCurrentTokenStartPosition();", "-\t\t\t\ttry {", "-\t\t\t\t\treturn parseArguments(typeRef);", "-\t\t\t\t} catch (InvalidInputException e) {", "-\t\t\t\t\tint end = this.scanner.getCurrentTokenEndPosition() < this.lineEnd ?", "-\t\t\t\t\t\t\tthis.scanner.getCurrentTokenEndPosition() :", "-\t\t\t\t\t\t\tthis.scanner.getCurrentTokenStartPosition();", "-\t\t\t\t\tend = end < this.lineEnd ? end : this.lineEnd;", "-\t\t\t\t\tthis.sourceParser.problemReporter().javadocInvalidSeeReferenceArgs(start, end);", "+\t */", "+\tprotected Object createFieldReference(Object receiver) throws InvalidInputException {", "+\t\ttry {", "+\t\t\t// Get receiver type", "+\t\t\tTypeReference typeRef = (TypeReference) receiver;", "+\t\t\tif (typeRef == null) {", "+\t\t\t\tchar[] name = this.sourceParser.compilationUnit.compilationResult.compilationUnit.getMainTypeName();", "+\t\t\t\tif (name == null) {", "+\t\t\t\t\tthrow new InvalidInputException();", "-\t\t\t\treturn null;", "+\t\t\t\ttypeRef = new JavadocSingleTypeReference(name, 0, 0, 0);", "+\t\t\t// Create field", "-\t\tint end = getEndPosition() - 1;", "-\t\tend = start > end ? getEndPosition() : end;", "-\t\tthis.sourceParser.problemReporter().javadocInvalidSeeReference(start, end);", "-\t\treturn null;", "+\t\tcatch (ClassCastException ex) {", "+\t\t\t\tthrow new InvalidInputException();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c86f4218a23963a1bb6a46b7d3ed9a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AnnotationParser.java", "commitBeforeChange": "d5b9ab15bb3f769b7e2ac485fe6da55027818828", "commitAfterChange": "e98478cd38caef5e23457b8b0fdc364bf2846afc", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tprivate Expression parseMember(TypeReference receiver) throws InvalidInputException", "signatureAfterChange": "  \tprivate Expression parseMember(TypeReference receiver) throws InvalidInputException", "diff": ["+", "+\tprivate Expression parseMember(TypeReference receiver) throws InvalidInputException {", "+\t\tthis.identifierPtr = -1;", "+\t\tthis.identifierLengthPtr = -1;", "+\t\tint start = this.scanner.getCurrentTokenStartPosition();", "+\t\tif (readTokenAndConsume() == TerminalTokens.TokenNameIdentifier) {", "+\t\t\tpushIdentifier(true);", "+\t\t\tif (readTokenAndConsume() == TerminalTokens.TokenNameLPAREN) {", "+\t\t\t\tstart = this.scanner.currentPosition;", "+\t\t\t\tAnnotationMessageSend msg = null;", "+\t\t\t\ttry {", "+\t\t\t\t\tmsg = parseArguments(receiver);", "+\t\t\t\t\tmsg.tagSourceStart = this.tagSourceStart;", "+\t\t\t\t\tmsg.tagSourceEnd = this.tagSourceEnd;", "+\t\t\t\t} catch (InvalidInputException e) {", "+\t\t\t\t\tint end = this.scanner.getCurrentTokenEndPosition() < this.lineEnd ?", "+\t\t\t\t\t\t\tthis.scanner.getCurrentTokenEndPosition() :", "+\t\t\t\t\t\t\tthis.scanner.getCurrentTokenStartPosition();", "+\t\t\t\t\tend = end < this.lineEnd ? end : (this.lineEnd - 1);", "+\t\t\t\t\tthis.sourceParser.problemReporter()\t.annotationInvalidSeeReferenceArgs(start, end);", "+\t\t\t\t}", "+\t\t\t\treturn msg;", "+\t\t\t}", "+\t\t\tAnnotationFieldReference field = new AnnotationFieldReference(identifierStack[0], identifierPositionStack[0]);", "+\t\t\tfield.receiver = receiver;", "+\t\t\tfield.tagSourceStart = this.tagSourceStart;", "+\t\t\tfield.tagSourceEnd = this.tagSourceEnd;", "+\t\t\treturn field;", "+\t\t}", "+\t\tthis.sourceParser.problemReporter().annotationInvalidSeeReference(start, getEndPosition());", "+\t\treturn null;", "+\t}", "-\tprivate Expression parseMember(TypeReference receiver) throws InvalidInputException {", "-\t\tthis.identifierPtr = -1;", "-\t\tthis.identifierLengthPtr = -1;", "-\t\tint start = this.scanner.getCurrentTokenStartPosition();", "-\t\tif (readConsumeToken() == TerminalTokens.TokenNameIdentifier) {", "-\t\t\tpushIdentifier(true);", "-\t\t\tif (readConsumeToken() == TerminalTokens.TokenNameLPAREN) {", "-\t\t\t\tstart = this.scanner.currentPosition;", "-\t\t\t\tAnnotationMessageSend msg = null;", "-\t\t\t\ttry {", "-\t\t\t\t\tmsg = parseArguments(receiver);", "-\t\t\t\t\tmsg.tagSourceStart = this.tagSourceStart;", "-\t\t\t\t\tmsg.tagSourceEnd = this.tagSourceEnd;", "-\t\t\t\t}", "-\t\t\t\tcatch (InvalidInputException e) {", "-\t\t\t\t\tint end = this.scanner.getCurrentTokenEndPosition() < this.lineEnd ? this.scanner.getCurrentTokenEndPosition() : this.scanner.getCurrentTokenStartPosition();", "-\t\t\t\t\tthis.sourceParser.problemReporter().annotationInvalidSeeReferenceArgs(start, (end<this.lineEnd?end:(this.lineEnd-1)));", "-\t\t\t\t}", "-\t\t\t\treturn msg;", "-\t\t\t}", "-\t\t\tAnnotationFieldReference field = new AnnotationFieldReference(identifierStack[0], identifierPositionStack[0]);", "-\t\t\tfield.receiver = receiver;", "-\t\t\tfield.tagSourceStart = this.tagSourceStart;", "-\t\t\tfield.tagSourceEnd = this.tagSourceEnd;", "-\t\t\treturn field;", "-\t\tthis.sourceParser.problemReporter().annotationInvalidSeeReference(start, getEndPosition());", "-\t\treturn null;", "-\t}"]}], "num": 18427}