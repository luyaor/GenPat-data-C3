{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a91e3f1b34c2969184a66f70ce3a9782", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04a58fd097ece4a28356f2a9dc89fd90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Annotation.java", "commitBeforeChange": "c12d4a9031232b6c069d1f18e8e1215a08b9d778", "commitAfterChange": "de3c8c046c7e3f648e0031ed114ca639580d26d1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\t\t} else \tif ((metaTagBits & TagBits.AnnotationForType) != 0) ", "-\t\t\t\t\t\t\t\tbreak checkTargetCompatibility;", "+\t\t\t\t\t\t} ", "+\t\t\t\t\t\tif ((metaTagBits & TagBits.AnnotationForType) != 0) ", "+\t\t\t\t\t\t\tbreak checkTargetCompatibility;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "382fe507a8c93d397a3e1e8683d82c27", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/ParameterAnnotation.java", "commitBeforeChange": "cf143a6a7ccd7553042fd4fda437966abe78a9e6", "commitAfterChange": "31d3be0ab92dab378331be6840b8f198d91f8e2d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic ParameterAnnotation( \t\t\tbyte[] classFileBytes, \t\t\tIConstantPool constantPool, \t\t\tint offset) throws ClassFormatException", "signatureAfterChange": " \tpublic ParameterAnnotation( \t\t\tbyte[] classFileBytes, \t\t\tIConstantPool constantPool, \t\t\tint offset) throws ClassFormatException", "diff": ["+\t\tthis.readOffset = 2;", "-\t\t\tthis.readOffset = 2;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44698591aa0aeee054b0c1fffdb085b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayAllocationExpression.java", "commitBeforeChange": "6fb311673d1501ca166502c77ddfedc4e1f01c4f", "commitAfterChange": "51a358cb1826956218a0838475a109e014b95398", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\t\t// allow new List<?>[5] - only check for generic array when no initializer, since also checked inside initializer resolution", "+\t\t\tif (referenceType.isBoundParameterizedType() || referenceType.isGenericType() || referenceType.isTypeVariable()) {", "+\t\t\t    scope.problemReporter().illegalGenericArray(referenceType, this);", "+\t\t\t}", "-\t\t\t}", "-\t\t\t// allow new List<?>[5]", "-\t\t\tif (referenceType.isBoundParameterizedType() || referenceType.isGenericType() || referenceType.isTypeVariable()) {", "-\t\t\t    scope.problemReporter().illegalGenericArray(referenceType, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49c1dd70749992fea4c86830e84172b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "820e796a655cc430ae4ae3cd649830ad2aa11511", "commitAfterChange": "15e62f7752b5ba1cd51b3fafb5a3b0c9d1ba5891", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public char[] genericSignature()", "signatureAfterChange": " public char[] genericSignature()", "diff": ["-\t\tsig.append('^');", "+\t\t\tsig.append('^');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c204c5cfac0af6c55f008c7d2ea8eac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Annotation.java", "commitBeforeChange": "cf143a6a7ccd7553042fd4fda437966abe78a9e6", "commitAfterChange": "31d3be0ab92dab378331be6840b8f198d91f8e2d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic Annotation( \t\t\tbyte[] classFileBytes, \t\t\tIConstantPool constantPool, \t\t\tint offset) throws ClassFormatException", "signatureAfterChange": " \tpublic Annotation( \t\t\tbyte[] classFileBytes, \t\t\tIConstantPool constantPool, \t\t\tint offset) throws ClassFormatException", "diff": ["+\t\tthis.readOffset = 4;", "-\t\t\tthis.readOffset = 4;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc5e5d220464f05289739561f4cf8e25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "eedafe9176d5ca60193623550822839844fd4aae", "commitAfterChange": "16a0328cb89c7e4d508e8edfc85e1af4879c13c7", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic static IJavaModelStatus validateClasspath(IJavaProject javaProject, IClasspathEntry[] rawClasspath, IPath projectOutputLocation)", "signatureAfterChange": " \tpublic static IJavaModelStatus validateClasspath(IJavaProject javaProject, IClasspathEntry[] rawClasspath, IPath projectOutputLocation)", "diff": ["+\t\t\tif (disableExclusionPatterns &&", "+\t\t\t        ((resolvedEntry.getInclusionPatterns() != null && resolvedEntry.getInclusionPatterns().length > 0) ", "+\t\t\t        || (resolvedEntry.getExclusionPatterns() != null && resolvedEntry.getExclusionPatterns().length > 0))) {", "+\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.DISABLED_CP_EXCLUSION_PATTERNS, javaProject, resolvedEntry.getPath());", "+\t\t\t}", "-\t\t\t\t\tif (disableExclusionPatterns &&", "-\t\t\t\t\t        ((resolvedEntry.getInclusionPatterns() != null && resolvedEntry.getInclusionPatterns().length > 0) ", "-\t\t\t\t\t        || (resolvedEntry.getExclusionPatterns() != null && resolvedEntry.getExclusionPatterns().length > 0))) {", "-\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.DISABLED_CP_EXCLUSION_PATTERNS, javaProject, resolvedEntry.getPath());", "-\t\t\t\t\t}"]}], "num": 50060}