{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ceb9b5ef03b66bf0d9a193985bd80110", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67a9afacc200040273d4b5d41ffc7860", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "f447e8419317d96ca676850de75b170e4276d1fc", "commitAfterChange": "0b6cbc7336ec44b9257b7aa04e8ba2a7e4c8be56", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-        int paramOffset = 0;", "+        this.receiverPrecedesParameters = false;", "-        \tparamOffset = 1; // 0 is receiver, real parameters start at 1", "+        \tthis.receiverPrecedesParameters = true; // 0 is receiver, real parameters start at 1", "-    \t\t\tTypeBinding descriptorParameter = this.descriptor.parameters[i+paramOffset];", "+    \t\t\tTypeBinding descriptorParameter = this.descriptor.parameters[i + (this.receiverPrecedesParameters ? 1 : 0)];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f4715040f0669fac10329ed629733dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "4ff905e78bafd71173d7f0334a042481d0575303", "commitAfterChange": "e78b831ecdf23a867bd21d96aa870a039cfa4f4c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "diff": ["-\t\t\tfinal TypeBinding expectedParameterType = haveDescriptor ? this.singleAbstractMethod.parameters[i] : null;", "+\t\t\tfinal TypeBinding expectedParameterType = haveDescriptor && i < this.singleAbstractMethod.parameters.length ? this.singleAbstractMethod.parameters[i] : null;", "-\t\t\t\tif (haveDescriptor && parameterType != expectedParameterType) {", "+\t\t\t\tif (haveDescriptor && expectedParameterType != null && parameterType != expectedParameterType) {"]}], "num": 39488}