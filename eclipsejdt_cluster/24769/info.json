{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "735e7e03db4054411fc079fbc35f65f1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bd4b8cd2842475538716ba5eaeb3a35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/StackMapAttributeTest.java", "commitBeforeChange": "17d4fac2e2145f81ae8773e6bd604f552ec24c76", "commitAfterChange": "8f4037084194a0a8c6b51e4ac889744e5d6e68a8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void test002()", "signatureAfterChange": " \tpublic void test002()", "diff": ["-\t\t\t\t\"    46  goto 56\\n\" + ", "+\t\t\t\t\"    46  goto 61\\n\" + ", "-\t\t\t\t\"    58  dload_3 [i]\\n\" + ", "-\t\t\t\t\"    59  dconst_1\\n\" + ", "-\t\t\t\t\"    60  dadd\\n\" + ", "-\t\t\t\t\"    61  d2l\\n\" + ", "-\t\t\t\t\"    62  lstore 5 [j]\\n\" + ", "-\t\t\t\t\"    64  lload 5 [j]\\n\" + ", "-\t\t\t\t\"    66  l2i\\n\" + ", "-\t\t\t\t\"    67  istore 7 [k]\\n\" + ", "-\t\t\t\t\"    69  iload 7 [k]\\n\" + ", "-\t\t\t\t\"    71  i2l\\n\" + ", "-\t\t\t\t\"    72  lload 5 [j]\\n\" + ", "-\t\t\t\t\"    74  ladd\\n\" + ", "-\t\t\t\t\"    75  l2i\\n\" + ", "-\t\t\t\t\"    76  istore 7 [k]\\n\" + ", "-\t\t\t\t\"    78  return\\n\" + ", "+\t\t\t\t\"    58  goto 63\\n\" + ", "+\t\t\t\t\"    61  dconst_1\\n\" + ", "+\t\t\t\t\"    62  dstore_3 [i]\\n\" + ", "+\t\t\t\t\"    63  dload_3 [i]\\n\" + ", "+\t\t\t\t\"    64  dconst_1\\n\" + ", "+\t\t\t\t\"    65  dadd\\n\" + ", "+\t\t\t\t\"    66  d2l\\n\" + ", "+\t\t\t\t\"    67  lstore 5 [j]\\n\" + ", "+\t\t\t\t\"    69  lload 5 [j]\\n\" + ", "+\t\t\t\t\"    71  l2i\\n\" + ", "+\t\t\t\t\"    72  istore 7 [k]\\n\" + ", "+\t\t\t\t\"    74  iload 7 [k]\\n\" + ", "+\t\t\t\t\"    76  i2l\\n\" + ", "+\t\t\t\t\"    77  lload 5 [j]\\n\" + ", "+\t\t\t\t\"    79  ladd\\n\" + ", "+\t\t\t\t\"    80  l2i\\n\" + ", "+\t\t\t\t\"    81  istore 7 [k]\\n\" + ", "+\t\t\t\t\"    83  return\\n\" + ", "-\t\t\t\t\"        [pc: 0, pc: 40] -> 40 when : java.lang.NullPointerException\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 37] -> 40 when : java.lang.NullPointerException\\n\" + ", "-\t\t\t\t\"        [pc: 58, line: 21]\\n\" + ", "-\t\t\t\t\"        [pc: 64, line: 22]\\n\" + ", "-\t\t\t\t\"        [pc: 69, line: 23]\\n\" + ", "-\t\t\t\t\"        [pc: 78, line: 24]\\n\" + ", "+\t\t\t\t\"        [pc: 61, line: 18]\\n\" + ", "+\t\t\t\t\"        [pc: 63, line: 21]\\n\" + ", "+\t\t\t\t\"        [pc: 69, line: 22]\\n\" + ", "+\t\t\t\t\"        [pc: 74, line: 23]\\n\" + ", "+\t\t\t\t\"        [pc: 83, line: 24]\\n\" + ", "-\t\t\t\t\"        [pc: 0, pc: 79] local: d index: 0 type: double\\n\" + ", "-\t\t\t\t\"        [pc: 0, pc: 79] local: b index: 2 type: boolean\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 84] local: d index: 0 type: double\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 84] local: b index: 2 type: boolean\\n\" + ", "-\t\t\t\t\"        [pc: 53, pc: 56] local: i index: 3 type: double\\n\" + ", "-\t\t\t\t\"        [pc: 58, pc: 79] local: i index: 3 type: double\\n\" + ", "+\t\t\t\t\"        [pc: 53, pc: 61] local: i index: 3 type: double\\n\" + ", "+\t\t\t\t\"        [pc: 63, pc: 84] local: i index: 3 type: double\\n\" + ", "-\t\t\t\t\"        [pc: 64, pc: 79] local: j index: 5 type: long\\n\" + ", "-\t\t\t\t\"        [pc: 69, pc: 79] local: k index: 7 type: int\\n\" + ", "-\t\t\t\t\"      Stack map table: number of frames 5\\n\" + ", "+\t\t\t\t\"        [pc: 69, pc: 84] local: j index: 5 type: long\\n\" + ", "+\t\t\t\t\"        [pc: 74, pc: 84] local: k index: 7 type: int\\n\" + ", "+\t\t\t\t\"      Stack map table: number of frames 7\\n\" + ", "-\t\t\t\t\"        [pc: 56, append: {double}]\\n\";", "+\t\t\t\t\"        [pc: 56, append: {double}]\\n\" + ", "+\t\t\t\t\"        [pc: 61, chop 1 local(s)]\\n\" + ", "+\t\t\t\t\"        [pc: 63, append: {double}]\\n\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "972a32e4957795e615f068c9be6fb1da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 537, "methodNumberAfterChange": 537, "signatureBeforeChange": " \tpublic void test533()", "signatureAfterChange": " \tpublic void test533()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tClass c = Foo.class;\\n\" + ", "+\t\t\t\"\t^^^^^\\n\" + ", "+\t\t\t\"Type safety: Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tEnumSet<Enum> eSet = EnumSet.allOf(c);\\n\" + ", "+\t\t\t\"\t        ^^^^\\n\" + ", "+\t\t\t\"Type safety: Enum is a raw type. References to generic type Enum<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 10)\\n\" + ", "-\t\t\t\"2. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tEnumSet<Enum> eSet = EnumSet.allOf(c);\\n\" + ", "+\t\t\t\"\t                     ^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: EnumSet is a raw type. References to generic type EnumSet<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 10)\\n\" + ", "-\t\t\t\"3. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"6. WARNING in X.java (at line 10)\\n\" + ", "-\t\t\t\"4. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"7. WARNING in X.java (at line 10)\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t);", "+\t\t\t\"----------\\n\");"]}], "num": 24769}