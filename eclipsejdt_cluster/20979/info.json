{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a834393a9bcfcdcd66d52997c761d6b7", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "654f500e7518b53c1a74fb84a4edd9f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "ff67eddd91980875c818d1dd4c9e986c8fe296a7", "commitAfterChange": "fb24630d4effc492cc8061ff912e20ca28ad20e1", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean recurseInContainers)", "signatureAfterChange": " \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean recurseInContainers)", "diff": ["-\t\t\t\t\treturn validateClasspathEntry(project, entry, checkSourceAttachment, recurseInContainers);", "+", "+\t\t\t\t\t// get validation status", "+\t\t\t\t\tIJavaModelStatus status = validateClasspathEntry(project, entry, checkSourceAttachment, recurseInContainers);", "+\t\t\t\t\tif (!status.isOK()) return status;", "+", "+\t\t\t\t\t// return deprecation status if any", "+\t\t\t\t\tString variableName = path.segment(0);", "+\t\t\t\t\tString deprecatedMessage = JavaCore.getClasspathVariableDeprecationMessage(variableName);", "+\t\t\t\t\tif (deprecatedMessage != null) {", "+\t\t\t\t\t\treturn new JavaModelStatus(IStatus.WARNING, IJavaModelStatusConstants.DEPRECATED_VARIABLE, project, path, deprecatedMessage);", "+\t\t\t\t\t}", "+\t\t\t\t\treturn status;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d4a573eee107cc105ba3ab6c4eb5bdf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "07e87f4c2f12f879ec7ed457ed90a4c633cae710", "commitAfterChange": "9d2a938921495f9335aff59136f341338ddac647", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  private static void setOutputDir(File inputDir, String dir, int profiles)", "signatureAfterChange": "  private static void setOutputDir(File inputDir, String dir, int profiles)", "diff": ["-\tOUTPUT_DIR = new File(new File(OUTPUT_DIR, ECLIPSE_VERSION), inputDir.getName());", "+\tFile parent = new File(OUTPUT_DIR, ECLIPSE_VERSION);", "+\tif (!parent.exists()) {", "+\t\ttry {", "+\t\t\tint version = Integer.parseInt(ECLIPSE_VERSION.substring(1));", "+\t\t\tFile maintenance = new File(OUTPUT_DIR, \"v\"+(version-1));", "+\t\t\tif (maintenance.exists()) {", "+\t\t\t\tparent = maintenance;", "+\t\t\t}", "+\t\t}", "+\t\tcatch (NumberFormatException nfe) {", "+\t\t\t// skip", "+\t\t}", "+\t}", "+\tOUTPUT_DIR = new File(parent, inputDir.getName());"]}], "num": 20979}