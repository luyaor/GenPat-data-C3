{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4adfdd9297b82cfdbeed2c385e3473ca", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "322c9d981f48a37f948518ef911abb32", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " protected CompilationUnitDeclaration endParse(int act)", "signatureAfterChange": " protected CompilationUnitDeclaration endParse(int act)", "diff": ["-\t\tif (sourceType.isInterface()) {", "-\t\t\tconsumeInterfaceDeclaration();", "-\t\t} else {", "-\t\t\tconsumeClassDeclaration();", "+\t\tswitch (sourceType.getKind()) {", "+\t\t\tcase IGenericType.CLASS :", "+\t\t\t\tconsumeClassDeclaration();", "+\t\t\t\tbreak;", "+\t\t\tcase IGenericType.INTERFACE :", "+\t\t\t\tconsumeInterfaceDeclaration();", "+\t\t\t\tbreak;", "+\t\t\tcase IGenericType.ENUM :", "+\t\t\t\tconsumeEnumDeclaration();", "+\t\t\t\tbreak;", "+\t\t\tcase IGenericType.ANNOTATION_TYPE :", "+\t\t\t\tconsumeAnnotationTypeDeclaration();", "+\t\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38019d579b98e6831ec90338a0b74e77", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBuilder.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void connect( \t\tIGenericType suppliedType, \t\tIGenericType superclass, \t\tIGenericType[] superinterfaces)", "signatureAfterChange": " \tpublic void connect( \t\tIGenericType suppliedType, \t\tIGenericType superclass, \t\tIGenericType[] superinterfaces)", "diff": ["-\t\tif (suppliedType.isClass()) {", "-\t\t\tif (superHandle == null) {", "-\t\t\t\tthis.hierarchy.addRootClass(typeHandle);", "-\t\t\t} else {", "-\t\t\t\tthis.hierarchy.cacheSuperclass(typeHandle, superHandle);", "-\t\t\t}", "-\t\t} else {", "-\t\t\tthis.hierarchy.addInterface(typeHandle);", "-\t\t}", "+\t\tswitch (suppliedType.getKind()) {", "+\t\t\tcase IGenericType.CLASS :", "+\t\t\t\tif (superHandle == null) {", "+\t\t\t\t\tthis.hierarchy.addRootClass(typeHandle);", "+\t\t\t\t} else {", "+\t\t\t\t\tthis.hierarchy.cacheSuperclass(typeHandle, superHandle);", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase IGenericType.INTERFACE :", "+\t\t\t\tthis.hierarchy.addInterface(typeHandle);", "+\t\t\t\tbreak;", "+\t\t\tcase IGenericType.ENUM :", "+\t\t\t\t// TODO (jerome) add support - enum extends Enum implicitly", "+\t\t\t\tbreak;", "+\t\t\tcase IGenericType.ANNOTATION_TYPE :", "+\t\t\t\tbreak;", "+\t\t}\t\t"]}], "num": 8694}