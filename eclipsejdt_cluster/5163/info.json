{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f77325e58c7ad44558606852745102f3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dcff8ba75cc1f03990b98733b2b45c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "d9946aa08d332f21913babd60933e773f1cec911", "commitAfterChange": "0ea299ebf767a99b8c60a0e465d456db5539b922", "methodNumberBeforeChange": 163, "methodNumberAfterChange": 163, "signatureBeforeChange": "\r protected void consumeStatementWhile()", "signatureAfterChange": "\r protected void consumeStatementWhile()", "diff": ["-\t\t\t\tendStatementPosition); \r", "+\t\t\t\tendPosition); \r", "+\t\tStatement action = (Statement) astStack[astPtr];\r", "-\t\tastStack[astPtr] = \r", "-\t\t\tnew WhileStatement(\r", "-\t\t\t\texpressionStack[expressionPtr--], \r", "-\t\t\t\t(Statement) astStack[astPtr], \r", "-\t\t\t\tintStack[intPtr--], \r", "-\t\t\t\tendStatementPosition); \r", "+\t\tif (action instanceof Block) {\r", "+\t\t\tastStack[astPtr] = \r", "+\t\t\t\tnew WhileStatement(\r", "+\t\t\t\t\texpressionStack[expressionPtr--], \r", "+\t\t\t\t\taction, \r", "+\t\t\t\t\tintStack[intPtr--], \r", "+\t\t\t\t\tendStatementPosition); \r", "+\t\t} else {\r", "+\t\t\tastStack[astPtr] = \r", "+\t\t\t\tnew WhileStatement(\r", "+\t\t\t\t\texpressionStack[expressionPtr--], \r", "+\t\t\t\t\taction, \r", "+\t\t\t\t\tintStack[intPtr--], \r", "+\t\t\t\t\tendPosition); \r", "+\t\t\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8fbe5a6a337bf55f7d24540e2f96fc8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "d9946aa08d332f21913babd60933e773f1cec911", "commitAfterChange": "0ea299ebf767a99b8c60a0e465d456db5539b922", "methodNumberBeforeChange": 155, "methodNumberAfterChange": 155, "signatureBeforeChange": "\r protected void consumeStatementIfNoElse()", "signatureAfterChange": "\r protected void consumeStatementIfNoElse()", "diff": ["-\t\t\t\tendStatementPosition); \r", "+\t\t\t\tendPosition); \r", "-\t\tastStack[astPtr] = \r", "-\t\t\tnew IfStatement(\r", "-\t\t\t\texpressionStack[expressionPtr--], \r", "-\t\t\t\t(Statement) astStack[astPtr], \r", "-\t\t\t\tintStack[intPtr--], \r", "-\t\t\t\tendStatementPosition); \r", "+\t\tStatement thenStatement = (Statement) astStack[astPtr];\r", "+\t\tif (thenStatement instanceof Block) {\r", "+\t\t\tastStack[astPtr] = \r", "+\t\t\t\tnew IfStatement(\r", "+\t\t\t\t\texpressionStack[expressionPtr--], \r", "+\t\t\t\t\tthenStatement, \r", "+\t\t\t\t\tintStack[intPtr--], \r", "+\t\t\t\t\tendStatementPosition); \r", "+\t\t} else {\r", "+\t\t\tastStack[astPtr] = \r", "+\t\t\t\tnew IfStatement(\r", "+\t\t\t\t\texpressionStack[expressionPtr--], \r", "+\t\t\t\t\tthenStatement, \r", "+\t\t\t\t\tintStack[intPtr--], \r", "+\t\t\t\t\tendPosition); \r", "+\t\t}\r"]}], "num": 5163}