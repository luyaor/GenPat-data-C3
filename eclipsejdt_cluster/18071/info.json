{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec42f6454f25bb1296eb8779abbab59b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "357b75d9fca157d4f91172317171c511", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/BuildpathTests.java", "commitBeforeChange": "6ab6a87ca5d929b4ba822bcc3a8b7337ae50a5fb", "commitAfterChange": "0df57fb5e3c8ba23a5c9637624ca9064d6362105", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void _testMissingLibrary3() throws JavaModelException", "signatureAfterChange": " public void testMissingLibrary3() throws JavaModelException", "diff": ["-public void _testMissingLibrary3() throws JavaModelException {", "+public void testMissingLibrary3() throws JavaModelException {", "-\t// triggers a build", "+\tfullBuild();", "-\t\tnew Problem(\"Build path\", \"Project Project is missing required library: 'lib/dummy.jar'\", projectPath, -1, -1, CategorizedProblem.CAT_BUILDPATH,", "+\t\tnew Problem(\"Build path\", \"Project 'Project' is missing required library: 'lib/dummy.jar'\", projectPath, -1, -1, CategorizedProblem.CAT_BUILDPATH,", "-\tcleanBuild();", "+\t// force classpath change delta - should not have to do this", "+\tIClasspathEntry[] classpath = project.getRawClasspath();", "+\tIPath outputLocation;", "+\tproject.setRawClasspath(null, outputLocation = project.getOutputLocation(), false, null);", "+\tproject.setRawClasspath(classpath, outputLocation, false, null);", "+\tfullBuild();", "-\t\tnew Problem(\"Build path\", \"Project Project is missing required library: 'lib/dummy.jar'\", projectPath, -1, -1, CategorizedProblem.CAT_BUILDPATH, IMarker.SEVERITY_ERROR));", "-\tproject.setOption(JavaCore.CORE_INCOMPLETE_CLASSPATH, CompilerOptions.WARNING);", "+\t\tnew Problem(\"Build path\", \"Project 'Project' is missing required library: 'lib/dummy.jar'\", projectPath, -1, -1, CategorizedProblem.CAT_BUILDPATH, IMarker.SEVERITY_ERROR));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f59e4adc75eb46d58ca8dd6cf2d8af2e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "e3d875263ee12404bb21dc7fcef95c903c7f1b24", "commitAfterChange": "3e350d8ca4b864ea7ab31af7c0cd5be570888a19", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": " public void testClassFileBuffer() throws JavaModelException", "signatureAfterChange": " public void testClassFileBuffer() throws JavaModelException", "diff": ["-\tIClassFile classFile = this.innerClasses.getClassFile(\"X$V.class\");", "+\tIJavaProject project = this.getJavaProject(\"/AttachSourceTests\");", "+\tIPackageFragmentRoot root = project.getPackageFragmentRoot(getFile(\"/AttachSourceTests/innerClasses.jar\"));", "+\tattachSource(root, \"/AttachSourceTests/innerClassessrc.zip\", null);", "+\tIPackageFragment fragment = root.getPackageFragment(\"inner\");", "+", "+\tIClassFile classFile = fragment.getClassFile(\"X$V.class\");", "-\tclassFile = this.innerClasses.getClassFile(\"X.class\");", "+\tclassFile = fragment.getClassFile(\"X.class\");", "+\tattachSource(root, null, null); // detach source"]}], "num": 18071}