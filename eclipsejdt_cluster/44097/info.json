{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7269c5da8c9e35a6d83f2a15407aa860", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79df2b4eef432c0f0fe18e71509a8ca7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "72895982cdfd43c6e856c9e0af3d1d64cc3e0181", "commitAfterChange": "ad349ef0d651cc5782e20e3c181fbfffccf75c28", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void acceptMethod(char[] declaringTypePackageName, char[] declaringTypeName, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames, boolean isConstructor)", "signatureAfterChange": " public void acceptMethod(char[] declaringTypePackageName, char[] declaringTypeName, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames, boolean isConstructor)", "diff": ["-\t\t\tif(declaringDeclaringType != null && isConstructor) {", "+\t\t\t", "+\t\t\tboolean isStatic = false;", "+\t\t\ttry {", "+\t\t\t\tisStatic = Flags.isStatic(type.getFlags());", "+\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t// isStatic == false", "+\t\t\t}", "+\t\t\t", "+\t\t\tif(declaringDeclaringType != null && isConstructor\t&& !isStatic) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfc0666f161b6bbb28a182515b2ab117", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaSearchTests.java", "commitBeforeChange": "7792c069da7693e79a187c977ea9f7a78a8fff7b", "commitAfterChange": "415b98b155644be36e3e8596750b7ffdbf4a3542", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \t\tprivate void append(IType type) throws JavaModelException", "signatureAfterChange": " \t\tprivate void append(IType type) throws JavaModelException", "diff": ["-\t\t\tif (typeName.length() == 0) {", "+\t\t\tboolean anonymous = false;", "+\t\t\ttry {", "+\t\t\t\tanonymous = type.isAnonymous();", "+\t\t\t} catch(JavaModelException jme) {", "+\t\t\t}", "+\t\t\tif (anonymous) {", "+\t\t\t} else if (type.isLambda()) {", "+\t\t\t\t((LambdaExpression) type).toStringName(this.line);"]}], "num": 44097}