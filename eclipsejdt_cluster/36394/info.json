{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a1dc2a665cd0d64cf8b11e2a045751ba", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ed8e9bd61911d58fdb9fe53adecbc67", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EmptyStatement.java", "commitBeforeChange": "0bb8dba3efca9a5500b67c37770710de86a06c2e", "commitAfterChange": "6726a5eb1723cea7dfdb4d1905ca215391f75d8e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic int complainIfUnreachable(FlowInfo flowInfo, BlockScope scope, int complaintLevel)", "signatureAfterChange": " \tpublic int complainIfUnreachable(FlowInfo flowInfo, FlowContext flowContext, BlockScope scope, int complaintLevel, boolean endOfBlock)", "diff": ["-\tpublic int complainIfUnreachable(FlowInfo flowInfo, BlockScope scope, int complaintLevel) {", "+\tpublic int complainIfUnreachable(FlowInfo flowInfo, FlowContext flowContext, BlockScope scope, int complaintLevel, boolean endOfBlock) {", "-\t\treturn super.complainIfUnreachable(flowInfo, scope, complaintLevel);", "+\t\treturn super.complainIfUnreachable(flowInfo, flowContext, scope, complaintLevel, endOfBlock);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee5176507404ca82c8ee8ac0a216ab30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EmptyStatement.java", "commitBeforeChange": "054ef716f5c2a57e4e4c8e790ba134b6404d4f2a", "commitAfterChange": "1bf30b93f1c2f17c02d0cecfa43e877f00d01800", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic int complainIfUnreachable(FlowInfo flowInfo, BlockScope scope, int complaintLevel)", "signatureAfterChange": " \tpublic int complainIfUnreachable(FlowInfo flowInfo, FlowContext flowContext, BlockScope scope, int complaintLevel, boolean endOfBlock)", "diff": ["-\tpublic int complainIfUnreachable(FlowInfo flowInfo, BlockScope scope, int complaintLevel) {", "+\tpublic int complainIfUnreachable(FlowInfo flowInfo, FlowContext flowContext, BlockScope scope, int complaintLevel, boolean endOfBlock) {", "-\t\treturn super.complainIfUnreachable(flowInfo, scope, complaintLevel);", "+\t\treturn super.complainIfUnreachable(flowInfo, flowContext, scope, complaintLevel, endOfBlock);"]}], "num": 36394}