{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d8b0ccf483a000ab058eeca1ba6cc78b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08706cdd65b6288ed376d02e14a1453b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "305e4f0c27f7df148c6acf3c313dda144407f8c1", "commitAfterChange": "c72a639799e1f7a209f8477bea888d0d19067c25", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r private IImportDeclaration createImportHandle(ImportReference importRef)", "signatureAfterChange": "\r private IImportDeclaration createImportHandle(ImportReference importRef)", "diff": ["-\treturn ((CompilationUnit)this.currentOpenable).getImport(\r", "+\treturn ((CompilationUnit)this.getCurrentOpenable()).getImport(\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "397b301aeeeacfd6150d8d57e6da2b5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "40383c2427f4645edcb9e28f2e15a8a778f0a951", "commitAfterChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r private IImportDeclaration createImportHandle(ImportReference importRef)", "signatureAfterChange": "\r \tprivate IImportDeclaration createImportHandle(ImportReference importRef)", "diff": ["- */\r", "-private IImportDeclaration createImportHandle(ImportReference importRef) {\r", "-\tchar[] importName = CharOperation.concatWith(importRef.getImportName(), '.');\r", "-\tif (importRef.onDemand) {\r", "-\t\timportName = CharOperation.concat(importName, \".*\"/*nonNLS*/.toCharArray());\r", "-\t}\r", "-\treturn ((CompilationUnit)this.currentOpenable).getImport(\r", "-\t\t\tnew String(importName));\r", "-}\r", "+\t */\r", "+\tprivate IImportDeclaration createImportHandle(ImportReference importRef) {\r", "+\t\tchar[] importName = CharOperation.concatWith(importRef.getImportName(), '.');\r", "+\t\tif (importRef.onDemand) {\r", "+\t\t\timportName = CharOperation.concat(importName, \".*\" .toCharArray()); //$NON-NLS-1$\r", "+\t\t}\r", "+\t\treturn ((CompilationUnit) this.getCurrentOpenable()).getImport(\r", "+\t\t\tnew String(importName));\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f35af04da923a81223ee6e41c27d184", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "commitAfterChange": "7e5cc03e445550d3cbc10c611218c79332074276", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r private IImportDeclaration createImportHandle(ImportReference importRef)", "signatureAfterChange": "\r \tprivate IImportDeclaration createImportHandle(ImportReference importRef)", "diff": ["- */\r", "-private IImportDeclaration createImportHandle(ImportReference importRef) {\r", "-\tchar[] importName = CharOperation.concatWith(importRef.getImportName(), '.');\r", "-\tif (importRef.onDemand) {\r", "-\t\timportName = CharOperation.concat(importName, \".*\"/*nonNLS*/.toCharArray());\r", "-\t}\r", "-\treturn ((CompilationUnit)this.currentOpenable).getImport(\r", "-\t\t\tnew String(importName));\r", "-}\r", "+\t */\r", "+\tprivate IImportDeclaration createImportHandle(ImportReference importRef) {\r", "+\t\tchar[] importName = CharOperation.concatWith(importRef.getImportName(), '.');\r", "+\t\tif (importRef.onDemand) {\r", "+\t\t\timportName = CharOperation.concat(importName, \".*\" .toCharArray()); //$NON-NLS-1$\r", "+\t\t}\r", "+\t\treturn ((CompilationUnit) this.getCurrentOpenable()).getImport(\r", "+\t\t\tnew String(importName));\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e0047b1f18c0c214ef6dbea54c93600", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "135399ac7f48d47679e738d0a583e6c95ff87fd6", "commitAfterChange": "092d49846655da2c4e511a256ba551dc4e15c674", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r private IType createTypeHandle(char[][] simpleTypeNames)", "signatureAfterChange": "\r \tprivate IType createTypeHandle(char[][] simpleTypeNames)", "diff": ["- */\r", "-private IType createTypeHandle(char[][] simpleTypeNames) {\r", "-\t// creates compilation unit\r", "-\tCompilationUnit unit = (CompilationUnit) this.currentOpenable;\r", "-\t// create type\r", "-\tint length = simpleTypeNames.length;\r", "-\tIType type = unit.getType(new String(simpleTypeNames[0]));\r", "-\tfor (int i = 1; i < length; i++) {\r", "-\t\ttype = type.getType(new String(simpleTypeNames[i]));\r", "-\treturn type;\r", "-}\r", "+\t */\r", "+\tprivate IType createTypeHandle(char[][] simpleTypeNames) {\r", "+\t\t// creates compilation unit\r", "+\t\tCompilationUnit unit = (CompilationUnit) this.getCurrentOpenable();\r", "+\r", "+\t\t// create type\r", "+\t\tint length = simpleTypeNames.length;\r", "+\t\tIType type = unit.getType(new String(simpleTypeNames[0]));\r", "+\t\tfor (int i = 1; i < length; i++) {\r", "+\t\t\ttype = type.getType(new String(simpleTypeNames[i]));\r", "+\t\treturn type;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8193b7b51c93bbbd4ad41bd69349a3d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "305e4f0c27f7df148c6acf3c313dda144407f8c1", "commitAfterChange": "c72a639799e1f7a209f8477bea888d0d19067c25", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r private IType createTypeHandle(char[][] simpleTypeNames)", "signatureAfterChange": "\r private IType createTypeHandle(char[][] simpleTypeNames)", "diff": ["-\tCompilationUnit unit = (CompilationUnit) this.currentOpenable;\r", "+\tCompilationUnit unit = (CompilationUnit) this.getCurrentOpenable();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f1c27802eb4998eebcfa5b57f83f28c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "commitAfterChange": "44855522f87e615f1ca0bfcda268b074e4443dfe", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r private IType createTypeHandle(char[][] simpleTypeNames)", "signatureAfterChange": "\r \tprivate IType createTypeHandle(char[][] simpleTypeNames)", "diff": ["- */\r", "-private IType createTypeHandle(char[][] simpleTypeNames) {\r", "-\t// creates compilation unit\r", "-\tCompilationUnit unit = (CompilationUnit) this.currentOpenable;\r", "-\t// create type\r", "-\tint length = simpleTypeNames.length;\r", "-\tIType type = unit.getType(new String(simpleTypeNames[0]));\r", "-\tfor (int i = 1; i < length; i++) {\r", "-\t\ttype = type.getType(new String(simpleTypeNames[i]));\r", "-\treturn type;\r", "-}\r", "+\t */\r", "+\tprivate IType createTypeHandle(char[][] simpleTypeNames) {\r", "+\t\t// creates compilation unit\r", "+\t\tCompilationUnit unit = (CompilationUnit) this.getCurrentOpenable();\r", "+\r", "+\t\t// create type\r", "+\t\tint length = simpleTypeNames.length;\r", "+\t\tIType type = unit.getType(new String(simpleTypeNames[0]));\r", "+\t\tfor (int i = 1; i < length; i++) {\r", "+\t\t\ttype = type.getType(new String(simpleTypeNames[i]));\r", "+\t\treturn type;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "917192949957a84734c044e5f85219d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "commitAfterChange": "7e5cc03e445550d3cbc10c611218c79332074276", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r private IType createTypeHandle(char[][] simpleTypeNames)", "signatureAfterChange": "\r \tprivate IType createTypeHandle(char[][] simpleTypeNames)", "diff": ["- */\r", "-private IType createTypeHandle(char[][] simpleTypeNames) {\r", "-\t// creates compilation unit\r", "-\tCompilationUnit unit = (CompilationUnit) this.currentOpenable;\r", "-\t// create type\r", "-\tint length = simpleTypeNames.length;\r", "-\tIType type = unit.getType(new String(simpleTypeNames[0]));\r", "-\tfor (int i = 1; i < length; i++) {\r", "-\t\ttype = type.getType(new String(simpleTypeNames[i]));\r", "-\treturn type;\r", "-}\r", "+\t */\r", "+\tprivate IType createTypeHandle(char[][] simpleTypeNames) {\r", "+\t\t// creates compilation unit\r", "+\t\tCompilationUnit unit = (CompilationUnit) this.getCurrentOpenable();\r", "+\r", "+\t\t// create type\r", "+\t\tint length = simpleTypeNames.length;\r", "+\t\tIType type = unit.getType(new String(simpleTypeNames[0]));\r", "+\t\tfor (int i = 1; i < length; i++) {\r", "+\t\t\ttype = type.getType(new String(simpleTypeNames[i]));\r", "+\t\treturn type;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a25518a0554c4c0060f0183e2e403583", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "135399ac7f48d47679e738d0a583e6c95ff87fd6", "commitAfterChange": "092d49846655da2c4e511a256ba551dc4e15c674", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r private IImportDeclaration createImportHandle(ImportReference importRef)", "signatureAfterChange": "\r \tprivate IImportDeclaration createImportHandle(ImportReference importRef)", "diff": ["- */\r", "-private IImportDeclaration createImportHandle(ImportReference importRef) {\r", "-\tchar[] importName = CharOperation.concatWith(importRef.getImportName(), '.');\r", "-\tif (importRef.onDemand) {\r", "-\t\timportName = CharOperation.concat(importName, \".*\"/*nonNLS*/.toCharArray());\r", "-\t}\r", "-\treturn ((CompilationUnit)this.currentOpenable).getImport(\r", "-\t\t\tnew String(importName));\r", "-}\r", "+\t */\r", "+\tprivate IImportDeclaration createImportHandle(ImportReference importRef) {\r", "+\t\tchar[] importName = CharOperation.concatWith(importRef.getImportName(), '.');\r", "+\t\tif (importRef.onDemand) {\r", "+\t\t\timportName = CharOperation.concat(importName, \".*\" .toCharArray()); //$NON-NLS-1$\r", "+\t\t}\r", "+\t\treturn ((CompilationUnit) this.getCurrentOpenable()).getImport(\r", "+\t\t\tnew String(importName));\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acd83ae139f6a8eb3890f448532614d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "40383c2427f4645edcb9e28f2e15a8a778f0a951", "commitAfterChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r private IType createTypeHandle(char[][] simpleTypeNames)", "signatureAfterChange": "\r \tprivate IType createTypeHandle(char[][] simpleTypeNames)", "diff": ["- */\r", "-private IType createTypeHandle(char[][] simpleTypeNames) {\r", "-\t// creates compilation unit\r", "-\tCompilationUnit unit = (CompilationUnit) this.currentOpenable;\r", "-\t// create type\r", "-\tint length = simpleTypeNames.length;\r", "-\tIType type = unit.getType(new String(simpleTypeNames[0]));\r", "-\tfor (int i = 1; i < length; i++) {\r", "-\t\ttype = type.getType(new String(simpleTypeNames[i]));\r", "-\treturn type;\r", "-}\r", "+\t */\r", "+\tprivate IType createTypeHandle(char[][] simpleTypeNames) {\r", "+\t\t// creates compilation unit\r", "+\t\tCompilationUnit unit = (CompilationUnit) this.getCurrentOpenable();\r", "+\r", "+\t\t// create type\r", "+\t\tint length = simpleTypeNames.length;\r", "+\t\tIType type = unit.getType(new String(simpleTypeNames[0]));\r", "+\t\tfor (int i = 1; i < length; i++) {\r", "+\t\t\ttype = type.getType(new String(simpleTypeNames[i]));\r", "+\t\treturn type;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ded827a0340912599d5c133c276f137e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "commitAfterChange": "44855522f87e615f1ca0bfcda268b074e4443dfe", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r private IImportDeclaration createImportHandle(ImportReference importRef)", "signatureAfterChange": "\r \tprivate IImportDeclaration createImportHandle(ImportReference importRef)", "diff": ["- */\r", "-private IImportDeclaration createImportHandle(ImportReference importRef) {\r", "-\tchar[] importName = CharOperation.concatWith(importRef.getImportName(), '.');\r", "-\tif (importRef.onDemand) {\r", "-\t\timportName = CharOperation.concat(importName, \".*\"/*nonNLS*/.toCharArray());\r", "-\t}\r", "-\treturn ((CompilationUnit)this.currentOpenable).getImport(\r", "-\t\t\tnew String(importName));\r", "-}\r", "+\t */\r", "+\tprivate IImportDeclaration createImportHandle(ImportReference importRef) {\r", "+\t\tchar[] importName = CharOperation.concatWith(importRef.getImportName(), '.');\r", "+\t\tif (importRef.onDemand) {\r", "+\t\t\timportName = CharOperation.concat(importName, \".*\" .toCharArray()); //$NON-NLS-1$\r", "+\t\t}\r", "+\t\treturn ((CompilationUnit) this.getCurrentOpenable()).getImport(\r", "+\t\t\tnew String(importName));\r", "+\t}\r"]}], "num": 53012}