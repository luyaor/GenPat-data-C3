{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0ecb8823b65fde680ec00d325f25bff5", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0060768e2c4a164b3bc2c4b6cb5cc25a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "1a94a1e6652f1701b8c360d56d755e5438b79c26", "commitAfterChange": "3b002cab97d2ee77b59be67feaf705de255bc1fb", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " public void outputClassFiles(CompilationResult unitResult)", "signatureAfterChange": " public void outputClassFiles(CompilationResult unitResult)", "diff": ["-// Dump classfiles onto disk for all compilation units that where successfull.", "+// and do not carry a -d none spec, either directly or inherited from Main.", "-\t\tif (!this.generatePackagesStructure) {", "-\t\t\tthis.destinationPath = extractDestinationPathFromSourceFile(unitResult);", "-\t\t}", "-\t\tif (this.destinationPath != null) {", "+\t\tString currentDestinationPath = null;", "+\t\tboolean generateClasspathStructure = false;", "+\t\tCompilationUnit compilationUnit = ", "+\t\t\t(CompilationUnit) unitResult.compilationUnit;", "+\t\tif (compilationUnit.destinationPath == null) {", "+\t\t\tif (this.destinationPath == null) {", "+\t\t\t\tcurrentDestinationPath = ", "+\t\t\t\t\textractDestinationPathFromSourceFile(unitResult);", "+\t\t\t} else if (this.destinationPath != NONE) {", "+\t\t\t\tcurrentDestinationPath = this.destinationPath;", "+\t\t\t\tgenerateClasspathStructure = true;", "+\t\t\t} // else leave currentDestinationPath null", "+\t\t} else if (compilationUnit.destinationPath != NONE) {", "+\t\t\tcurrentDestinationPath = compilationUnit.destinationPath;", "+\t\t\tgenerateClasspathStructure = true;", "+\t\t} // else leave currentDestinationPath null", "+\t\tif (currentDestinationPath != null) {", "-\t\t\t\t\t\tthis.generatePackagesStructure,", "-\t\t\t\t\t\tthis.destinationPath,", "+\t\t\t\t\t\tgenerateClasspathStructure,", "+\t\t\t\t\t\tcurrentDestinationPath,", "-\t\t\t\t\t\tthis.generatePackagesStructure,", "-\t\t\t\t\t\tthis.destinationPath,", "+\t\t\t\t\t\tgenerateClasspathStructure,", "+\t\t\t\t\t\tcurrentDestinationPath,", "-\t\t\t\t\tthis.logger.logNoClassFileCreated(this.destinationPath, relativeStringName, e);", "+\t\t\t\t\tthis.logger.logNoClassFileCreated(currentDestinationPath, relativeStringName, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff59133fffafb6a7a1d25b9e72075f45", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "05396c2aadbdf694b3e24041198b7173f55ce8f9", "commitAfterChange": "dbfcb8d7fd5ffcddbe22e6b1ba82be9083ee4d44", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  protected int matchMethod(MethodBinding method, boolean skipImpossibleArg)", "signatureAfterChange": "  protected int matchMethod(MethodBinding method, boolean skipImpossibleArg)", "diff": ["+\t\tMethodBinding focusMethodBinding = null;", "+\t\tboolean checkedFocus = false;", "-\t\t\tif (argType.isMemberType()) {", "-\t\t\t\t// only compare source name for member type (bug 41018)", "-\t\t\t\tnewLevel = CharOperation.match(this.pattern.parameterSimpleNames[i], argType.sourceName(), this.isCaseSensitive)", "-\t\t\t\t\t? ACCURATE_MATCH", "-\t\t\t\t\t: IMPOSSIBLE_MATCH;", "+\t\t\tboolean foundLevel = false;", "+\t\t\tif (argType.isMemberType() || this.pattern.parameterQualifications[i] != null) {", "+\t\t\t\tif (!checkedFocus) {", "+\t\t\t\t\tfocusMethodBinding = this.matchLocator.getMethodBinding(this.pattern);", "+\t\t\t\t\tcheckedFocus = true;", "+\t\t\t\t}", "+\t\t\t\tif (focusMethodBinding != null) {// textual comparison insufficient", "+\t\t\t\t\tTypeBinding[] parameters = focusMethodBinding.parameters;", "+\t\t\t\t\tif (parameters.length >= parameterCount) {", "+\t\t\t\t\t\tnewLevel = argType.isEquivalentTo((parameters[i])) ? ACCURATE_MATCH : IMPOSSIBLE_MATCH;", "+\t\t\t\t\t\tfoundLevel = true;", "+\t\t\t\t\t}", "+\t\t\t\t}", "-\t\t\t\t\t\tnewLevel = level;", "+\t\t\t\t\t\tif (!foundLevel) {", "+\t\t\t\t\t\t\tnewLevel = level;", "+\t\t\t\t\t\t}", "-\t\t\t\tMethodBinding focusMethodBinding = this.matchLocator.getMethodBinding(this.pattern);", "+\t\t\t\tif (!checkedFocus)", "+\t\t\t\t\tfocusMethodBinding = this.matchLocator.getMethodBinding(this.pattern);"]}], "num": 29968}