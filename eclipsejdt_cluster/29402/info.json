{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "68f7b9a2ab354839b0e9f9b65caf90ee", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49af4666e919342ebc7b540de8d4f94b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "2b13678db0d621fe0ef5f31efa222accad7645d1", "commitAfterChange": "62acea3260f4f00bef914855d231d5ca0b875fd6", "methodNumberBeforeChange": 125, "methodNumberAfterChange": 126, "signatureBeforeChange": " \t \tprivate char[] getResolvedSignature(char[][] parameterTypes, char[] fullyQualifiedTypeName, int parameterCount, Scope scope)", "signatureAfterChange": " \t \tprivate char[] getResolvedSignature(char[][] parameterTypes, char[] fullyQualifiedTypeName, int parameterCount, Scope scope)", "diff": ["-\t\t} finally {", "-\t\t\tthis.lookupEnvironment.nameEnvironment = oldNameEnvironment;", "-\t\t}", "+\t\t", "-\t\tif (guessedType != null && guessedType.isValidBinding()) {", "-\t\t\tif (guessedType instanceof SourceTypeBinding) {", "-\t\t\t\tSourceTypeBinding refBinding = (SourceTypeBinding) guessedType;", "-\t\t\t\t", "-\t\t\t\trefBinding.methods(); // force resolution", "-\t\t\t\tif (refBinding.scope == null || refBinding.scope.referenceContext == null) return null;", "-\t\t\t\tTypeDeclaration typeDeclaration = refBinding.scope.referenceContext;", "-\t\t\t\tAbstractMethodDeclaration[] methods = typeDeclaration.methods;", "-\t\t\t\tnext : for (int i = 0; i < methods.length; i++) {", "-\t\t\t\t\tAbstractMethodDeclaration method = methods[i];", "+\t\t\tif (guessedType != null && guessedType.isValidBinding()) {", "+\t\t\t\tif (guessedType instanceof SourceTypeBinding) {", "+\t\t\t\t\tSourceTypeBinding refBinding = (SourceTypeBinding) guessedType;", "-\t\t\t\t\tif (method.binding == null || !method.isConstructor()) continue next;", "+\t\t\t\t\tif (refBinding.scope == null || refBinding.scope.referenceContext == null) return null;", "-\t\t\t\t\tArgument[] arguments = method.arguments;", "-\t\t\t\t\tint argumentsLength = arguments == null ? 0 : arguments.length;", "-\t\t\t\t\tif (parameterCount != argumentsLength) continue next;", "+\t\t\t\t\tTypeDeclaration typeDeclaration = refBinding.scope.referenceContext;", "+\t\t\t\t\tAbstractMethodDeclaration[] methods = typeDeclaration.methods;", "-\t\t\t\t\tfor (int j = 0; j < argumentsLength; j++) {", "-\t\t\t\t\t\tif (!CharOperation.equals(CharOperation.concatWith(arguments[j].type.getTypeName(), '.'), parameterTypes[j])) {", "-\t\t\t\t\t\t\tcontinue next;", "+\t\t\t\t\tnext : for (int i = 0; i < methods.length; i++) {", "+\t\t\t\t\t\tAbstractMethodDeclaration method = methods[i];", "+\t\t\t\t\t\t", "+\t\t\t\t\t\tif (!method.isConstructor()) continue next;", "+\t\t\t\t\t\t", "+\t\t\t\t\t\tArgument[] arguments = method.arguments;", "+\t\t\t\t\t\tint argumentsLength = arguments == null ? 0 : arguments.length;", "+\t\t\t\t\t\t", "+\t\t\t\t\t\tif (parameterCount != argumentsLength) continue next;", "+\t\t\t\t\t\t", "+\t\t\t\t\t\tfor (int j = 0; j < argumentsLength; j++) {", "+\t\t\t\t\t\t\tchar[] argumentTypeName = getTypeName(arguments[j].type);", "+\t", "+\t\t\t\t\t\t\tif (!CharOperation.equals(argumentTypeName, parameterTypes[j])) {", "+\t\t\t\t\t\t\t\tcontinue next;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t", "+\t\t\t\t\t\trefBinding.resolveTypesFor(method.binding); // force resolution", "+\t\t\t\t\t\tif (method.binding == null) continue next;", "+\t\t\t\t\t\treturn getSignature(method.binding);", "-\t\t\t\t\t", "-\t\t\t\t\treturn getSignature(method.binding);", "+\t\t} finally {", "+\t\t\tthis.lookupEnvironment.nameEnvironment = oldNameEnvironment;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa3167376c96091082f5b0a4c25b134b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/TypeConverter.java", "commitBeforeChange": "4c69b3374b1904df80a162a61253a5fac338ca0b", "commitAfterChange": "26b534917513d2fad601a1675afb9ab2d302e49e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tprivate char[][] extractIdentifiers(String typeSignature, int start, int endInclusive, int identCount)", "signatureAfterChange": " \t \tprivate char[][] extractIdentifiers(String typeSignature, int start, int endInclusive, int identCount)", "diff": ["-\t\t\tif (typeSignature.charAt(charIndex) == Signature.C_DOT || typeSignature.charAt(charIndex) == Signature.C_DOLLAR) {", "+\t\t\tchar currentChar;", "+\t\t\tif ((currentChar = typeSignature.charAt(charIndex)) == this.memberTypeSeparator || currentChar == Signature.C_DOT) {"]}], "num": 29402}