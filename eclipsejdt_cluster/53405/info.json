{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "62a9dfd0dbbda6e5190df58b3f364dd2", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1388c3f3d62011f46778bc75494f2f25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "e050ce187db6229b89aa41b0ef3c79b8a57e6df7", "commitAfterChange": "91b85d56bd85dc135ae6e51c56ff47dcb64753ef", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprivate void setDeprecatedOptions(Map settings)", "signatureAfterChange": " \tprivate void setDeprecatedOptions(Map settings)", "diff": ["+\t\t\t}", "+\t\t}", "+\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=122247", "+\t\tfinal Object insertNewLineAfterAnnotationOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_AFTER_ANNOTATION);", "+\t\tif (insertNewLineAfterAnnotationOption != null) { // check if deprecated option was used", "+\t\t\tthis.insert_new_line_after_annotation_on_member = JavaCore.INSERT.equals(insertNewLineAfterAnnotationOption);", "+\t\t\tthis.insert_new_line_after_annotation_on_parameter = JavaCore.INSERT.equals(insertNewLineAfterAnnotationOption);", "+\t\t\tthis.insert_new_line_after_annotation_on_local_variable = JavaCore.INSERT.equals(insertNewLineAfterAnnotationOption);", "+\t\t} else {", "+\t\t\tfinal Object insertNewLineAfterAnnotationOnMemberOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_AFTER_ANNOTATION_ON_MEMBER);", "+\t\t\tif (insertNewLineAfterAnnotationOnMemberOption != null) { // otherwhise, use the new options", "+\t\t\t\tthis.insert_new_line_after_annotation_on_member = JavaCore.INSERT.equals(insertNewLineAfterAnnotationOnMemberOption);", "+\t\t\t}", "+\t\t\tfinal Object insertNewLineAfterAnnotationOnParameterOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_AFTER_ANNOTATION_ON_PARAMETER);", "+\t\t\tif (insertNewLineAfterAnnotationOnParameterOption != null) {", "+\t\t\t\tthis.insert_new_line_after_annotation_on_parameter = JavaCore.INSERT.equals(insertNewLineAfterAnnotationOnParameterOption);", "+\t\t\t}", "+\t\t\tfinal Object insertNewLineAfterAnnotationOnLocalVariableOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_AFTER_ANNOTATION_ON_LOCAL_VARIABLE);", "+\t\t\tif (insertNewLineAfterAnnotationOnLocalVariableOption != null) {", "+\t\t\t\tthis.insert_new_line_after_annotation_on_local_variable = JavaCore.INSERT.equals(insertNewLineAfterAnnotationOnLocalVariableOption);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ad6a52cf7f57654b8e89e0e9b118d5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "24c681585ef2f4b155e3d0f5cb2c551e612e2484", "commitAfterChange": "1075c02575f13a345cda8e06bd18891df8b3e61e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprivate void setDeprecatedOptions(Map settings)", "signatureAfterChange": " \tprivate void setDeprecatedOptions(Map settings)", "diff": ["-\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=122247", "+\t\t// New line after annotations", "-\t\tif (insertNewLineAfterAnnotationOption != null) { // check if deprecated option was used", "-\t\t\tthis.insert_new_line_after_annotation_on_member = JavaCore.INSERT.equals(insertNewLineAfterAnnotationOption);", "-\t\t\tthis.insert_new_line_after_annotation_on_parameter = JavaCore.INSERT.equals(insertNewLineAfterAnnotationOption);", "-\t\t\tthis.insert_new_line_after_annotation_on_local_variable = JavaCore.INSERT.equals(insertNewLineAfterAnnotationOption);", "+\t\tif (insertNewLineAfterAnnotationOption != null) { // check if deprecated 3.1 option was used", "+\t\t\tboolean insert = JavaCore.INSERT.equals(insertNewLineAfterAnnotationOption);", "+\t\t\tthis.insert_new_line_after_annotation_on_type = insert;", "+\t\t\tthis.insert_new_line_after_annotation_on_field = insert;", "+\t\t\tthis.insert_new_line_after_annotation_on_method = insert;", "+\t\t\tthis.insert_new_line_after_annotation_on_package = insert;", "+\t\t\tthis.insert_new_line_after_annotation_on_parameter = insert;", "+\t\t\tthis.insert_new_line_after_annotation_on_local_variable = insert;", "-\t\t\tif (insertNewLineAfterAnnotationOnMemberOption != null) { // otherwhise, use the new options", "-\t\t\t\tthis.insert_new_line_after_annotation_on_member = JavaCore.INSERT.equals(insertNewLineAfterAnnotationOnMemberOption);", "+\t\t\tif (insertNewLineAfterAnnotationOnMemberOption != null) { // check if deprecated 3.4 option was used", "+\t\t\t\tboolean insert = JavaCore.INSERT.equals(insertNewLineAfterAnnotationOnMemberOption);", "+\t\t\t\tthis.insert_new_line_after_annotation_on_type = insert;", "+\t\t\t\tthis.insert_new_line_after_annotation_on_field = insert;", "+\t\t\t\tthis.insert_new_line_after_annotation_on_method = insert;", "+\t\t\t\tthis.insert_new_line_after_annotation_on_package = insert;", "+\t\t\t} else { // otherwise use new options", "+\t\t\t\tfinal Object insertNewLineAfterAnnotationOnTypeOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_AFTER_ANNOTATION_ON_TYPE);", "+\t\t\t\tif (insertNewLineAfterAnnotationOnTypeOption != null) {", "+\t\t\t\t\tthis.insert_new_line_after_annotation_on_type = JavaCore.INSERT.equals(insertNewLineAfterAnnotationOnTypeOption);", "+\t\t\t\t}", "+\t\t\t\tfinal Object insertNewLineAfterAnnotationOnFieldOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_AFTER_ANNOTATION_ON_FIELD);", "+\t\t\t\tif (insertNewLineAfterAnnotationOnFieldOption != null) {", "+\t\t\t\t\tthis.insert_new_line_after_annotation_on_field = JavaCore.INSERT.equals(insertNewLineAfterAnnotationOnFieldOption);", "+\t\t\t\t}", "+\t\t\t\tfinal Object insertNewLineAfterAnnotationOnMethodOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_AFTER_ANNOTATION_ON_METHOD);", "+\t\t\t\tif (insertNewLineAfterAnnotationOnMethodOption != null) {", "+\t\t\t\t\tthis.insert_new_line_after_annotation_on_method = JavaCore.INSERT.equals(insertNewLineAfterAnnotationOnMethodOption);", "+\t\t\t\t}", "+\t\t\t\tfinal Object insertNewLineAfterAnnotationOnPackageOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_AFTER_ANNOTATION_ON_PACKAGE);", "+\t\t\t\tif (insertNewLineAfterAnnotationOnPackageOption != null) {", "+\t\t\t\t\tthis.insert_new_line_after_annotation_on_package = JavaCore.INSERT.equals(insertNewLineAfterAnnotationOnPackageOption);", "+\t\t\t\t}"]}], "num": 53405}