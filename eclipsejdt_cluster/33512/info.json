{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c687b7317923b9ce6cab9849ef9bd02c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d6470ad8e2b3523cb1ae88942d21806", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingTypeDeclTest.java", "commitBeforeChange": "cf7d7b40d6b2bdb180c3b5405f67692d11fca251", "commitAfterChange": "52f990bdad4ba550492efcdd60a5a240aead4bfa", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t\t\t \tpublic void testImportDeclaration() throws Exception", "signatureAfterChange": " \t\t\t \tpublic void testImportDeclaration() throws Exception", "diff": ["-\t\tbuf.append(\"import java.text.*;\\n\");\t\t\t\t\t", "+\t\tbuf.append(\"import java.text.*;\\n\");", "+\t\tbuf.append(\"import static java.lang.Math.*;\\n\");", "+\t\tbuf.append(\"import java.lang.Math.*;\\n\");\t\t", "-\t\tCompilationUnit astRoot= createAST(cu);", "+\t\tCompilationUnit astRoot= createAST3(cu);", "-\t\tassertTrue(\"Number of imports not 4\", imports.size() == 4);", "+\t\tassertTrue(\"Number of imports not 6\", imports.size() == 6);", "-\t\t}\t\t", "-\t\t", "+\t\t}", "+\t\t{ // remove static ", "+\t\t\tImportDeclaration imp= (ImportDeclaration) imports.get(4);", "+\t\t\t", "+\t\t\trewrite.set(imp, ImportDeclaration.STATIC_PROPERTY, Boolean.FALSE, null);", "+\t\t}", "+\t\t{ // add static", "+\t\t\tImportDeclaration imp= (ImportDeclaration) imports.get(5);", "+\t\t\t", "+\t\t\trewrite.set(imp, ImportDeclaration.STATIC_PROPERTY, Boolean.TRUE, null);", "+\t\t}", "-\t\tbuf.append(\"import org.eclipse.*;\\n\");\t\t\t", "+\t\tbuf.append(\"import org.eclipse.*;\\n\");", "+\t\tbuf.append(\"import java.lang.Math.*;\\n\");", "+\t\tbuf.append(\"import static java.lang.Math.*;\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7eb89e475c4e29e521342687bdc68ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingStatementsTest.java", "commitBeforeChange": "b23efdb186bab86ee31b58ab278fa9a0bc22ac6e", "commitAfterChange": "d1672c4973b4d066327f254ca8486bc25c95661d", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tpublic void testThrowStatement() throws Exception", "signatureAfterChange": " \tpublic void testThrowStatement() throws Exception", "diff": ["-\t\tbuf.append(\"    }\\n\");\t\t", "+\t\tbuf.append(\"    }\\n\");", "+\t\tbuf.append(\"    public void hoo() {\\n\");", "+\t\tbuf.append(\"        throw(e);\\n\");", "+\t\tbuf.append(\"    }\\n\");\t\t\t\t", "-\t\t}\t\t\t\t", "+\t\t}", "+\t\t", "+\t\t{ // replace expression, introduce space", "+\t\t\tMethodDeclaration methodDecl= findMethodDeclaration(type, \"hoo\");", "+\t\t\tBlock block= methodDecl.getBody();", "+\t\t\tList statements= block.statements();", "+\t\t\tassertTrue(\"Number of statements not 1\", statements.size() == 1);\t\t\t", "+\t\t\t", "+\t\t\tThrowStatement statement= (ThrowStatement) statements.get(0);\t\t\t", "+\t\t\t", "+\t\t\tParenthesizedExpression expression= (ParenthesizedExpression) statement.getExpression();", "+\t\t\trewrite.replace(expression, rewrite.createMoveTarget(expression.getExpression()), null);\t", "+\t\t}\t\t", "-\t\tbuf.append(\"    }\\n\");\t\t", "+\t\tbuf.append(\"    }\\n\");", "+\t\tbuf.append(\"    public void hoo() {\\n\");", "+\t\tbuf.append(\"        throw e;\\n\");", "+\t\tbuf.append(\"    }\\n\");\t\t\t\t"]}], "num": 33512}