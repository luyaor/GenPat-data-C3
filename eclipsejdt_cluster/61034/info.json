{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b77a9ea4a924680fb6f882a5e4fdc8ed", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b03b230c211dd7557d5149c71986f7fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "8c8cd78ee7d91af397b355193b993289ef7f4454", "commitAfterChange": "dab69163a24dbd341ec146b21a1806a7799bbbc6", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tprotected void addLibrary(IJavaProject javaProject, String jarName, String sourceZipName, String[] pathAndContents, String[] nonJavaResources, String[] librariesInclusionPatterns, String[] librariesExclusionPatterns, String compliance) throws CoreException, IOException", "signatureAfterChange": " \tprotected void addLibrary( \t\t\tIJavaProject javaProject, \t\t\tString jarName, \t\t\tString sourceZipName, \t\t\tString[] pathAndContents, \t\t\tString[] nonJavaResources, \t\t\tString[] librariesInclusionPatterns, \t\t\tString[] librariesExclusionPatterns, \t\t\tString compliance, \t\t\tMap options) throws CoreException, IOException", "diff": ["-\tprotected void addLibrary(IJavaProject javaProject, String jarName, String sourceZipName, String[] pathAndContents, String[] nonJavaResources, String[] librariesInclusionPatterns, String[] librariesExclusionPatterns, String compliance) throws CoreException, IOException {", "-\t\tIProject project = createLibrary(javaProject, jarName, sourceZipName, pathAndContents, nonJavaResources, compliance);", "+\tprotected void addLibrary(", "+\t\t\tIJavaProject javaProject,", "+\t\t\tString jarName,", "+\t\t\tString sourceZipName,", "+\t\t\tString[] pathAndContents,", "+\t\t\tString[] nonJavaResources,", "+\t\t\tString[] librariesInclusionPatterns,", "+\t\t\tString[] librariesExclusionPatterns,", "+\t\t\tString compliance,", "+\t\t\tMap options) throws CoreException, IOException {", "+\t\tIProject project = createLibrary(javaProject, jarName, sourceZipName, pathAndContents, nonJavaResources, compliance, options);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da2d1f06deacc069ff1386059a8dede0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "795236662f4c72deb433448a946f4a36cebbebd0", "commitAfterChange": "b74a7b82d9221b86893a88ea5453e92534ffe51b", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 42, "signatureBeforeChange": " \tprotected void addLibrary(IJavaProject javaProject, String jarName, String sourceZipName, String[] pathAndContents, String[] librariesInclusionPatterns, String[] librariesExclusionPatterns, String compliance) throws CoreException, IOException", "signatureAfterChange": " \tprotected void addLibrary(IJavaProject javaProject, String jarName, String sourceZipName, String[] pathAndContents, String[] nonJavaResources, String[] librariesInclusionPatterns, String[] librariesExclusionPatterns, String compliance) throws CoreException, IOException", "diff": ["-\tprotected void addLibrary(IJavaProject javaProject, String jarName, String sourceZipName, String[] pathAndContents, String[] librariesInclusionPatterns, String[] librariesExclusionPatterns, String compliance) throws CoreException, IOException {", "-\t\tIProject project = javaProject.getProject();", "-\t\tString projectLocation = project.getLocation().toOSString();", "-\t\tString jarPath = projectLocation + File.separator + jarName;", "-\t\tString sourceZipPath = projectLocation + File.separator + sourceZipName;", "-\t\torg.eclipse.jdt.core.tests.util.Util.createJar(pathAndContents, jarPath, compliance);", "-\t\torg.eclipse.jdt.core.tests.util.Util.createSourceZip(pathAndContents, sourceZipPath);", "-\t\tproject.refreshLocal(IResource.DEPTH_INFINITE, null);", "+\t}", "+\tprotected void addLibrary(IJavaProject javaProject, String jarName, String sourceZipName, String[] pathAndContents, String[] nonJavaResources, String[] librariesInclusionPatterns, String[] librariesExclusionPatterns, String compliance) throws CoreException, IOException {", "+\t\tIProject project = createLibrary(javaProject, jarName, sourceZipName, pathAndContents, nonJavaResources, compliance);", "-\t\t\tnew Path(projectPath + sourceZipName),", "+\t\t\tsourceZipName == null ? null : new Path(projectPath + sourceZipName),", "+\t}"]}], "num": 61034}