{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b49202e3011581271351ed6b3c78f26a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7960b721af29273d16cf36b23b9a3d62", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/Javadoc.java", "commitBeforeChange": "fcf2eeb216724a8506bedc4aa94529952c20022c", "commitAfterChange": "ce6658d64eece3244a7db6ac65f43a837734c7f6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void setComment(String javadocComment)", "signatureAfterChange": " \tpublic void setComment(String javadocComment)", "diff": ["-\t\tif (javadocComment.length() < 5 || !javadocComment.startsWith(\"/**\") || !javadocComment.endsWith(\"*/\")) {//$NON-NLS-1$//$NON-NLS-2$", "+\t\tchar[] source = javadocComment.toCharArray();", "+\t\tIScanner scanner = ToolFactory.createScanner(true, true, false, false);", "+\t\tscanner.resetTo(0, source.length);", "+\t\tscanner.setSource(source);", "+\t\ttry {", "+\t\t\tint token;", "+\t\t\tboolean onlyOneComment = false;", "+\t\t\twhile ((token = scanner.getNextToken()) != ITerminalSymbols.TokenNameEOF) {", "+\t\t\t\tswitch(token) {", "+\t\t\t\t\tcase ITerminalSymbols.TokenNameCOMMENT_JAVADOC :", "+\t\t\t\t\t\tif (onlyOneComment) {", "+\t\t\t\t\t\t\tthrow new IllegalArgumentException();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tonlyOneComment = true;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tdefault:", "+\t\t\t\t\t\tonlyOneComment = false;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (!onlyOneComment) {", "+\t\t\t\tthrow new IllegalArgumentException();", "+\t\t\t}", "+\t\t} catch (InvalidInputException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc07ae266e49629aa7177c8a9981b5ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/Statement.java", "commitBeforeChange": "fcf2eeb216724a8506bedc4aa94529952c20022c", "commitAfterChange": "ce6658d64eece3244a7db6ac65f43a837734c7f6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void setLeadingComment(String comment)", "signatureAfterChange": " \tpublic void setLeadingComment(String comment)", "diff": ["-\t\t\tif (comment.startsWith(\"/*\") && comment.endsWith(\"*/\") && comment.length() >= 4) {//$NON-NLS-1$//$NON-NLS-2$", "-\t\t\t\t// this is ok", "-\t\t\t} else if (comment.startsWith(\"//\") && comment.indexOf('\\n') < 0) {//$NON-NLS-1$", "-\t\t\t\t// this is ok too", "-\t\t\t} else {", "-\t\t\t\t// but anything else if not good", "+\t\t\tchar[] source = comment.toCharArray();", "+\t\t\tIScanner scanner = ToolFactory.createScanner(true, true, false, false);", "+\t\t\tscanner.resetTo(0, source.length);", "+\t\t\tscanner.setSource(source);", "+\t\t\ttry {", "+\t\t\t\tint token;", "+\t\t\t\tboolean onlyOneComment = false;", "+\t\t\t\twhile ((token = scanner.getNextToken()) != ITerminalSymbols.TokenNameEOF) {", "+\t\t\t\t\tswitch(token) {", "+\t\t\t\t\t\tcase ITerminalSymbols.TokenNameCOMMENT_BLOCK :", "+\t\t\t\t\t\tcase ITerminalSymbols.TokenNameCOMMENT_JAVADOC :", "+\t\t\t\t\t\tcase ITerminalSymbols.TokenNameCOMMENT_LINE :", "+\t\t\t\t\t\t\tif (onlyOneComment) {", "+\t\t\t\t\t\t\t\tthrow new IllegalArgumentException();", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tonlyOneComment = true;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\tonlyOneComment = false;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tif (!onlyOneComment) {", "+\t\t\t\t\tthrow new IllegalArgumentException();", "+\t\t\t\t}", "+\t\t\t} catch (InvalidInputException e) {"]}], "num": 56703}