{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f9d745f419c774e0f5250f5a12e3a955", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f590e25989acf29cc554156b2c1ba9f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AnnotationFieldReference.java", "commitBeforeChange": "cdd9b0c6b901d3b13ee36586da77123daf72f40c", "commitAfterChange": "d3e8675390d8fef6ad51e51b125d5b1986025119", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic TypeBinding resolveType(ClassScope scope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(ClassScope scope)", "diff": ["-\t\t\tthis.receiverType = scope.enclosingSourceType();", "+\t\t\tSourceTypeBinding sourceTypeBinding = scope.enclosingSourceType();", "+\t\t\tthis.receiverType = sourceTypeBinding;", "+\t\t\tthis.receiver = new AnnotationQualifiedTypeReference(sourceTypeBinding.compoundName, new long[sourceTypeBinding.compoundName.length], 0, 0);", "-\t\t// TODO (philippe): investigate why scope.getBinding(...) returns null for instance variable", "-\t\t// TODO (frederic): call only scope.getBinding(...) when it will never return null", "-\t\tthis.binding = scope.findField(this.receiverType, token, this, true /*resolve*/);", "-\t\tif (this.binding == null) {", "-\t\t\tBinding fieldBinding = scope.getBinding(token, BindingIds.FIELD, this, true /*resolve*/);", "-\t\t\tif (fieldBinding != null && fieldBinding instanceof FieldBinding) {", "-\t\t\t\tthis.binding = (FieldBinding) fieldBinding;", "-\t\t\t} else {", "-\t\t\t\tthis.binding = new ProblemFieldBinding((ReferenceBinding) this.receiverType, token, fieldBinding.problemId());", "-\t\t\t}", "-\t\t}", "+\t\tthis.binding = scope.getField(this.receiverType, this.token, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8e1e8c1eef46a1bf10a584a5eaabba7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AssertStatement.java", "commitBeforeChange": "a553ab0efc253750fd6fd20126423a55431b0462", "commitAfterChange": "c37a92566081779e57ec58244a049f41ef8eac6b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\t \t \tpublic void manageSyntheticAccessIfNecessary(BlockScope currentScope)", "signatureAfterChange": "\t \t \tpublic void manageSyntheticAccessIfNecessary(BlockScope currentScope)", "diff": ["-\t\t// need assertion flag: $assertionsDisabled on outer most source type", "-\t\tClassScope outerMostClassScope = currentScope.outerMostClassScope();", "-\t\tSourceTypeBinding sourceTypeBinding = outerMostClassScope.enclosingSourceType();", "-\t\tthis.assertionSyntheticFieldBinding = sourceTypeBinding.addSyntheticField(this, currentScope);", "+\t\t// need assertion flag: $assertionsDisabled on outer most source clas", "+\t\t// (in case of static member of interface, will use the outermost static member - bug 22334)", "+\t\tSourceTypeBinding outerMostClass = currentScope.enclosingSourceType();", "+\t\twhile (outerMostClass.isNestedType()){", "+\t\t\tReferenceBinding enclosing = outerMostClass.enclosingType();", "+\t\t\tif (enclosing == null || enclosing.isInterface()) break;", "+\t\t\touterMostClass = (SourceTypeBinding) enclosing;", "+\t\t}", "+", "+\t\tthis.assertionSyntheticFieldBinding = outerMostClass.addSyntheticField(this, currentScope);", "-\t\tTypeDeclaration typeDeclaration = outerMostClassScope.referenceType();", "+\t\tTypeDeclaration typeDeclaration = outerMostClass.scope.referenceType();"]}], "num": 23716}