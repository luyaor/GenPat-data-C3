{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f81f612ef36f43ac89836b7e59e3d287", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e43ae00658860aa1f943cd552918b1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "c4438554e5222ea53a718250b1cf65390f93454b", "commitAfterChange": "27602d9d6166ad944ae172b66cd4974f839712f7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void close() throws JavaModelException", "signatureAfterChange": " \tpublic void close() throws JavaModelException", "diff": ["-\t\t\tif (JavaModelManager.VERBOSE && this instanceof JavaModel) {", "-\t\t\t\tSystem.out.println(\"CLOSING Java Model\");  //$NON-NLS-1$", "-\t\t\t\t// done only when exiting the workbench: disable verbose", "-\t\t\t\tJavaModelManager.VERBOSE = false;\t\t", "-\t\t\t}", "-\t\t\tif (this instanceof IParent) {", "-\t\t\t\tIJavaElement[] children = ((JavaElementInfo) info).getChildren();", "-\t\t\t\tfor (int i = 0, size = children.length; i < size; ++i) {", "-\t\t\t\t\tJavaElement child = (JavaElement) children[i];", "-\t\t\t\t\tchild.close();", "+\t\t\tboolean wasVerbose = false;", "+\t\t\ttry {", "+\t\t\t\tif (JavaModelManager.VERBOSE) {", "+\t\t\t\t\tSystem.out.println(\"CLOSING Element (\"+ Thread.currentThread()+\"): \" + this.toStringWithAncestors());  //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t\t\twasVerbose = true;", "+\t\t\t\t\tJavaModelManager.VERBOSE = false;", "-\t\t\t}", "-\t\t\tclosing(info);", "-\t\t\tJavaModelManager.getJavaModelManager().removeInfo(this);", "-\t\t\tif (JavaModelManager.VERBOSE){", "-\t\t\t\tSystem.out.println(\"-> Package cache size = \" + JavaModelManager.getJavaModelManager().cache.pkgSize()); //$NON-NLS-1$", "-\t\t\t\tSystem.out.println(\"-> Openable cache filling ratio = \" + JavaModelManager.getJavaModelManager().cache.openableFillingRatio() + \"%\"); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t\tif (this instanceof IParent) {", "+\t\t\t\t\tIJavaElement[] children = ((JavaElementInfo) info).getChildren();", "+\t\t\t\t\tfor (int i = 0, size = children.length; i < size; ++i) {", "+\t\t\t\t\t\tJavaElement child = (JavaElement) children[i];", "+\t\t\t\t\t\tchild.close();", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tclosing(info);", "+\t\t\t\tJavaModelManager.getJavaModelManager().removeInfo(this);", "+\t\t\t\tif (wasVerbose) {", "+\t\t\t\t\tSystem.out.println(\"-> Package cache size = \" + JavaModelManager.getJavaModelManager().cache.pkgSize()); //$NON-NLS-1$", "+\t\t\t\t\tSystem.out.println(\"-> Openable cache filling ratio = \" + JavaModelManager.getJavaModelManager().cache.openableFillingRatio() + \"%\"); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t\t}", "+\t\t\t} finally {", "+\t\t\t\tJavaModelManager.VERBOSE = wasVerbose;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90aa98f925ed264d7b495fec3c40d19d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryType.java", "commitBeforeChange": "c4438554e5222ea53a718250b1cf65390f93454b", "commitAfterChange": "27602d9d6166ad944ae172b66cd4974f839712f7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void close() throws JavaModelException", "signatureAfterChange": " public void close() throws JavaModelException", "diff": ["-\t\tClassFileInfo cfi = getClassFileInfo();", "-\t\tif (cfi.hasReadBinaryChildren()) {", "-\t\t\ttry {", "-\t\t\t\tIJavaElement[] children = getChildren();", "-\t\t\t\tfor (int i = 0, size = children.length; i < size; ++i) {", "-\t\t\t\t\tJavaElement child = (JavaElement) children[i];", "-\t\t\t\t\tif (child instanceof BinaryType) {", "-\t\t\t\t\t\t((IOpenable)child.getParent()).close();", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tchild.close();", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t} catch (JavaModelException e) {", "+\t\tboolean wasVerbose = false;", "+\t\ttry {", "+\t\t\tif (JavaModelManager.VERBOSE) {", "+\t\t\t\tSystem.out.println(\"CLOSING Element (\"+ Thread.currentThread()+\"): \" + this.toStringWithAncestors());  //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t\twasVerbose = true;", "+\t\t\t\tJavaModelManager.VERBOSE = false;", "-\t\t}", "-\t\tclosing(info);", "-\t\tJavaModelManager.getJavaModelManager().removeInfo(this);", "-\t\tif (JavaModelManager.VERBOSE){", "-\t\t\tSystem.out.println(\"-> Package cache size = \" + JavaModelManager.getJavaModelManager().cache.pkgSize()); //$NON-NLS-1$", "-\t\t\tSystem.out.println(\"-> Openable cache filling ratio = \" + JavaModelManager.getJavaModelManager().cache.openableFillingRatio() + \"%\"); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\tClassFileInfo cfi = getClassFileInfo();", "+\t\t\tif (cfi.hasReadBinaryChildren()) {", "+\t\t\t\ttry {", "+\t\t\t\t\tIJavaElement[] children = getChildren();", "+\t\t\t\t\tfor (int i = 0, size = children.length; i < size; ++i) {", "+\t\t\t\t\t\tJavaElement child = (JavaElement) children[i];", "+\t\t\t\t\t\tif (child instanceof BinaryType) {", "+\t\t\t\t\t\t\t((IOpenable)child.getParent()).close();", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tchild.close();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tclosing(info);", "+\t\t\tJavaModelManager.getJavaModelManager().removeInfo(this);", "+\t\t\tif (JavaModelManager.VERBOSE){", "+\t\t\t\tSystem.out.println(\"-> Package cache size = \" + JavaModelManager.getJavaModelManager().cache.pkgSize()); //$NON-NLS-1$", "+\t\t\t\tSystem.out.println(\"-> Openable cache filling ratio = \" + JavaModelManager.getJavaModelManager().cache.openableFillingRatio() + \"%\"); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t}", "+\t\t} finally {", "+\t\t\tJavaModelManager.VERBOSE = wasVerbose;"]}], "num": 46641}