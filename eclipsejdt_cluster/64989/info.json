{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c9a15b48c9b4c22809945da84732a087", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14e8c6430ca10e5a05683e385be086e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClassFileTests.java", "commitBeforeChange": "24ecdaaa88a3d3df53c6657b56b1c35a02f254d7", "commitAfterChange": "b77d2ea3108de5650fdc8f1f0c9f51bf7203159f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic void setUpSuite() throws Exception", "signatureAfterChange": "  public void setUpSuite() throws Exception", "diff": ["-\tpublic void setUpSuite() throws Exception {", "-\t\tsuper.setUpSuite();", "-\t\tIJavaProject javaProject = createJavaProject(\"P\");", "-\t\tString[] pathAndContents = new String[] {", "-\t\t\t\"nongeneric/A.java\", ", "-\t\t\t\"package nongeneric;\\n\" +", "-\t\t\t\"public class A {\\n\" + ", "-\t\t\t\"}\",\t\t\t", "-\t\t\t\"generic/X.java\", ", "-\t\t\t\"package generic;\\n\" +", "-\t\t\t\"public class X<T> {\\n\" + ", "-\t\t\t\"  <U extends Exception> X<T> foo(X<T> x) throws RuntimeException, U {\\n\" +", "-\t\t\t\"    return null;\\n\" +", "+", "+public void setUpSuite() throws Exception {", "+\tsuper.setUpSuite();", "+\tIJavaProject javaProject = createJavaProject(\"P\");", "+\tString[] pathAndContents = new String[] {", "+\t\t\"nongeneric/A.java\", ", "+\t\t\"package nongeneric;\\n\" +", "+\t\t\"public class A {\\n\" + ", "+\t\t\"}\",\t\t\t", "+\t\t\"generic/X.java\", ", "+\t\t\"package generic;\\n\" +", "+\t\t\"public class X<T> {\\n\" + ", "+\t\t\"  <U extends Exception> X<T> foo(X<T> x) throws RuntimeException, U {\\n\" +", "+\t\t\"    return null;\\n\" +", "+\t\t\"  }\\n\" +", "+\t\t\"  <K, V> V foo(K key, V value) throws Exception {\\n\" +", "+\t\t\"    return value;\\n\" +", "+\t\t\"  }\\n\" +", "+\t\t\"}\",", "+\t\t\"generic/Y.java\", ", "+\t\t\"package generic;\\n\" +", "+\t\t\"public class Y<K, L> {\\n\" + ", "+\t\t\"}\",", "+\t\t\"generic/Z.java\", ", "+\t\t\"package generic;\\n\" +", "+\t\t\"public class Z<T extends Object & I<? super T>> {\\n\" + ", "+\t\t\"}\",", "+\t\t\"generic/I.java\", ", "+\t\t\"package generic;\\n\" +", "+\t\t\"public interface I<T> {\\n\" + ", "+\t\t\"}\",", "+\t\t\"generic/W.java\", ", "+\t\t\"package generic;\\n\" +", "+\t\t\"public class W<T extends X<T> , U extends T> {\\n\" + ", "+\t\t\"}\",", "+\t\t\"generic/V.java\", ", "+\t\t\"package generic;\\n\" +", "+\t\t\"public class V extends X<Thread> implements I<String> {\\n\" + ", "+\t\t\"}\",", "+\t\t\"varargs/X.java\", ", "+\t\t\"package varargs;\\n\" +", "+\t\t\"public class X {\\n\" + ", "+\t\t\"  void foo(String s, Object ... others) {\\n\" +", "+\t\t\"  }\\n\" +", "+\t\t\"}\",", "+\t\t\"workingcopy/X.java\", ", "+\t\t\"package workingcopy;\\n\" +", "+\t\t\"public class X {\\n\" + ", "+\t\t\"  void foo() {\\n\" +", "+\t\t\"    System.out.println();\\n\" +", "+\t\t\"  }\\n\" +", "+\t\t\"}\",", "+\t\t\"workingcopy/Y.java\", ", "+\t\t\"package workingcopy;\\n\" +", "+\t\t\"public class Y<W> {\\n\" + ", "+\t\t\"  <T> T foo(T t, String... args) {\\n\" +", "+\t\t\"    return t;\\n\" +", "+\t\t\"  }\\n\" +", "+\t\t\"}\",", "+\t};", "+\taddLibrary(javaProject, \"lib.jar\", \"libsrc.zip\", pathAndContents, JavaCore.VERSION_1_5);", "+\tthis.jarRoot = javaProject.getPackageFragmentRoot(getFile(\"/P/lib.jar\"));", "+}", "-\t\t\t\"  <K, V> V foo(K key, V value) throws Exception {\\n\" +", "-\t\t\t\"    return value;\\n\" +", "-\t\t\t\"  }\\n\" +", "-\t\t\t\"}\",", "-\t\t\t\"generic/Y.java\", ", "-\t\t\t\"package generic;\\n\" +", "-\t\t\t\"public class Y<K, L> {\\n\" + ", "-\t\t\t\"}\",", "-\t\t\t\"generic/Z.java\", ", "-\t\t\t\"package generic;\\n\" +", "-\t\t\t\"public class Z<T extends Object & I<? super T>> {\\n\" + ", "-\t\t\t\"}\",", "-\t\t\t\"generic/I.java\", ", "-\t\t\t\"package generic;\\n\" +", "-\t\t\t\"public interface I<T> {\\n\" + ", "-\t\t\t\"}\",", "-\t\t\t\"generic/W.java\", ", "-\t\t\t\"package generic;\\n\" +", "-\t\t\t\"public class W<T extends X<T> , U extends T> {\\n\" + ", "-\t\t\t\"}\",", "-\t\t\t\"generic/V.java\", ", "-\t\t\t\"package generic;\\n\" +", "-\t\t\t\"public class V extends X<Thread> implements I<String> {\\n\" + ", "-\t\t\t\"}\",", "-\t\t\t\"varargs/X.java\", ", "-\t\t\t\"package varargs;\\n\" +", "-\t\t\t\"public class X {\\n\" + ", "-\t\t\t\"  void foo(String s, Object ... others) {\\n\" +", "-\t\t\t\"  }\\n\" +", "-\t\t\t\"}\",", "-\t\t};", "-\t\taddLibrary(javaProject, \"lib.jar\", \"libsrc.zip\", pathAndContents, JavaCore.VERSION_1_5);", "-\t\tthis.jarRoot = javaProject.getPackageFragmentRoot(getFile(\"/P/lib.jar\"));", "-\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37dae522648724bf364727f296168830", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClassFileTests.java", "commitBeforeChange": "cf8dccca7e26bf94e36e8f031d2a4ef316542d45", "commitAfterChange": "ce73e795e17fb13da77192ae5025c50ccc7665fe", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public void setUpSuite() throws Exception", "signatureAfterChange": "  public void setUpSuite() throws Exception", "diff": ["-\t\t\"public @interface MyAnnotation3 {}\"", "+\t\t\"public @interface MyAnnotation3 {}\",", "+\t\t\"test342757/X.java\",", "+\t\t\"package test342757;\\n\" +", "+\t\t\"public class X {\\n\" + ", "+\t\t\"\tclass B {\\n\" + ", "+\t\t\"\t\tpublic B(@Deprecated @Annot String s) {}\\n\" + ", "+\t\t\"\t\tpublic void foo(@Deprecated @Annot int j) {}\\n\" + ", "+\t\t\"\t}\\n\" + ", "+\t\t\"}\",", "+\t\t\"test342757/Annot.java\",", "+\t\t\"package test342757;\\n\" +", "+\t\t\"import java.lang.annotation.Retention;\\n\" + ", "+\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "+\t\t\"@Retention(CLASS)\\n\" + ", "+\t\t\"@interface Annot {}\","]}], "num": 64989}