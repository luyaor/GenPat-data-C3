{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8af241dd86fa04b1931a4a7ff943b460", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16706d56eaf70e6d1c45513bb9dd54ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "2b3eb34cc2c38b25e9c0c8b158b33e67243033db", "commitAfterChange": "9b34c0e74998e27bd55b042c72b1aa0f92181d75", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r \r \tprivate void selectFrom(Binding binding)", "signatureAfterChange": "\r \r \tprivate void selectFrom(Binding binding)", "diff": ["-\t\t\tif (typeBinding.isInterface())\r", "+\t\t\tif (typeBinding.isInterface()) {\r", "-\t\t\telse\r", "+\t\t\t} else if(typeBinding instanceof ProblemReferenceBinding){\r", "+\t\t\t\tProblemReferenceBinding problemBinding = (ProblemReferenceBinding)typeBinding;\r", "+\t\t\t\tif(problemBinding.original == null\r", "+\t\t\t\t\t|| !(problemBinding.original instanceof ReferenceBinding)) {\r", "+\t\t\t\t\treturn;\r", "+\t\t\t\t}\r", "+\t\t\t\tReferenceBinding original = (ReferenceBinding) problemBinding.original;\r", "+\r", "+\t\t\t\trequestor.acceptClass(\r", "+\t\t\t\t\toriginal.qualifiedPackageName(),\r", "+\t\t\t\t\toriginal.qualifiedSourceName(),\r", "+\t\t\t\t\tfalse);\r", "+\t\t\t} else {\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfa71c6dac3a867b83dab19e28f12471", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "490f0dedc6b033aac107ccccbdc9e8361a921466", "commitAfterChange": "83feb6a3bbe889feb388b89a4854a090c75eaf0e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public void checkComment()", "signatureAfterChange": "  public void checkComment()", "diff": ["+\t\t\t} else if (reference instanceof JavadocAllocationExpression) {", "+\t\t\t\tJavadocAllocationExpression constructor = (JavadocAllocationExpression) reference;", "+\t\t\t\tint argCount = constructor.arguments == null ? 0 : constructor.arguments.length;", "+\t\t\t\tchar[][] compoundName = constructor.type.getTypeName();", "+\t\t\t\trequestor.acceptConstructorReference(compoundName[compoundName.length-1], argCount, constructor.sourceStart);"]}], "num": 59056}