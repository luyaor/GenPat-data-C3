{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "011de7431f3b7af572767a4f74e7ac03", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "226b3f3d90cbe217e895f0881ebf7dd3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 192, "signatureBeforeChange": " \tpublic void test0223_for()", "signatureAfterChange": " public void test0703_for()", "diff": ["-\t// null analysis -- for", "-\tpublic void test0223_for() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\"\t\t Object o = null;\\n\" + ", "-\t\t\t\t\"\t\t for (;o == null;) {\\n\" + ", "-\t\t\t\t      // quiet: first iteration is sure to find it null, ", "-\t\t\t\t      // but other iterations may change it ", "-\t\t\t\t\"\t\t   o = new Object();\\n\" + ", "-\t\t\t\t\"\t\t }\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"\"  ", "-\t\t);", "-\t}", "+// null analysis -- for", "+public void test0703_for() {", "+\tthis.runConformTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\"    Object o = null;\\n\" + ", "+\t\t\t\"    for (;o == null;) {\\n\" + ", "+\t\t\t      // quiet: first iteration is sure to find it null, ", "+\t\t\t      // but other iterations may change it ", "+\t\t\t\"      o = new Object();\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57cfd7f5dbae43d09bb9632f1cef5a00", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic void test0010_field_of_another_object()", "signatureAfterChange": " public void test0016_field_of_another_object()", "diff": ["+// null analysis -- field", "+public void test0016_field_of_another_object() {", "+\tthis.runConformTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  Object o;\\n\" + ", "+\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\"    X other = new X();\\n\" + ", "+\t\t\t\"    other.o = null;\\n\" + ", "+\t\t\t\"    other.o.toString();\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"\");", "+}", "-\t// null analysis -- field", "-\tpublic void test0010_field_of_another_object() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t Object o;\\n\" + ", "-\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\"\t   X other = new X();\\n\" + ", "-\t\t\t\t\"\t\t other.o = null;\\n\" + ", "-\t\t\t\t\"\t\t other.o.toString();\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"\"", "-\t\t);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "635f424ab309b9ba92e2f251df4a1c38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic void test0011_field_of_another_object()", "signatureAfterChange": " public void test0017_field_of_another_object()", "diff": ["+// null analysis -- field", "+public void test0017_field_of_another_object() {", "+\tthis.runConformTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  Object o;\\n\" + ", "+\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\"    X other = this;\\n\" + ", "+\t\t\t\"    o = null;\\n\" + ", "+\t\t\t\"    other.o.toString();\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"\");", "+}", "-\t// null analysis -- field", "-\tpublic void test0011_field_of_another_object() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t Object o;\\n\" + ", "-\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\"\t   X other = this;\\n\" + ", "-\t\t\t\t\"\t\t o = null;\\n\" + ", "-\t\t\t\t\"\t\t other.o.toString();\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"\"", "-\t\t);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f04dd40fc831ad7259e82bab169c25f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 105, "signatureBeforeChange": " \tpublic void test0113_while()", "signatureAfterChange": " public void test0403_while()", "diff": ["-\t// null analysis -- while", "-\tpublic void test0113_while() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\"\t\t Object o = null;\\n\" + ", "-\t\t\t\t\"\t\t while (o == null) {\\n\" + ", "-\t\t\t\t      // quiet: first iteration is sure to find o null, ", "-\t\t\t\t      // but other iterations may change it ", "-\t\t\t\t\"\t\t   o = new Object();\\n\" + ", "-\t\t\t\t\"\t\t }\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"\"  ", "-\t\t);", "-\t}", "+// null analysis -- while", "+public void test0403_while() {", "+\tthis.runConformTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\"    Object o = null;\\n\" + ", "+\t\t\t\"    while (o == null) {\\n\" + ", "+\t\t\t      // quiet: first iteration is sure to find o null, ", "+\t\t\t      // but other iterations may change it ", "+\t\t\t\"      o = new Object();\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"\");", "+}"]}], "num": 51352}