{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a9cd96aec8216cd992daa6c5645ceb4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "138f1d69e6671c32e7fd6a667a85a5da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void test005()", "signatureAfterChange": "  \tpublic void test005()", "diff": ["+\t\t\t\"1. WARNING in L.java (at line 1)\\n\" + ", "+\t\t\t\"\tclass L<T> implements I { public T foo() {return null;} }\\n\" + ", "+\t\t\t\"\t                      ^\\n\" + ", "+\t\t\t\"Type safety: I is a raw type. References to generic type I<U> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in W.java (at line 1)\\n\" + ", "+\t\t\t\"1. WARNING in W.java (at line 1)\\n\" + ", "+\t\t\t\"\tclass W<T> extends X { @Override public T foo() { return super.foo(); } }\\n\" + ", "+\t\t\t\"\t                   ^\\n\" + ", "+\t\t\t\"Type safety: X is a raw type. References to generic type X<U> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in W.java (at line 1)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "303cbf0b4e5f07a37bb1d8d06dd979e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void test004()", "signatureAfterChange": "  \tpublic void test004()", "diff": ["-\t\t\t\"2. ERROR in ALL.java (at line 8)\\n\" + ", "+\t\t\t\"2. WARNING in ALL.java (at line 7)\\n\" + ", "+\t\t\t\"\tclass L<T> implements I { public T foo() {return null;} }\\n\" + ", "+\t\t\t\"\t                      ^\\n\" + ", "+\t\t\t\"Type safety: I is a raw type. References to generic type I<U> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in ALL.java (at line 8)\\n\" + ", "-\t\t\t\"3. ERROR in ALL.java (at line 8)\\n\" + ", "+\t\t\t\"4. ERROR in ALL.java (at line 8)\\n\" + ", "-\t\t\t\"4. ERROR in ALL.java (at line 10)\\n\" + ", "+\t\t\t\"5. WARNING in ALL.java (at line 10)\\n\" + ", "+\t\t\t\"\tclass W<T> extends X { @Override public T foo() { return super.foo(); } }\\n\" + ", "+\t\t\t\"\t                   ^\\n\" + ", "+\t\t\t\"Type safety: X is a raw type. References to generic type X<U> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. ERROR in ALL.java (at line 10)\\n\" + "]}], "num": 45246}