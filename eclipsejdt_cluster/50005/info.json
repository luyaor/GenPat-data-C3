{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "81221dabeda137cbb0cf7968b130a022", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2138d2f7c31d1c61365b2f5f3fbbd2f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "15be40cf5262e06998d74b41636698f1f284a564", "commitAfterChange": "a4862af7684f06076791ef9ff6f765210c06b259", "methodNumberBeforeChange": 180, "methodNumberAfterChange": 182, "signatureBeforeChange": " \tpublic void testBug100772_Complex01() throws CoreException", "signatureAfterChange": " \tpublic void testBug100772_HierarchyScope_Complex01() throws CoreException", "diff": ["-\tpublic void testBug100772_Complex01() throws CoreException {", "+\tpublic void testBug100772_HierarchyScope_Complex01() throws CoreException {", "-\t\t\t\"interface IXX<V extends Exception> extends IX<V> {\\n\" + ", "+\t\t\t\"interface IXX<V extends Exception> {\\n\" + ", "-\t\tIMethod method = workingCopies[0].getType(\"IX\").getMethods()[0];", "-\t\tsearch(method, DECLARATIONS);", "+\t\tIType type = workingCopies[0].getType(\"IX\");", "+\t\tIMethod method = type.getMethod(\"foo\", new String[] { \"QU;\" });", "+\t\tsearch(method, DECLARATIONS, SearchEngine.createHierarchyScope(type));", "-\t\t\t\"src/b100772/Test.java void b100772.IXX.foo(V) [foo] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/b100772/Test.java void b100772.Z.foo(String) [foo] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/b100772/Test.java void b100772.Z.foo(Exception) [foo] EXACT_MATCH\"", "+\t\t\t\"src/b100772/Test.java void b100772.Z.foo(String) [foo] EXACT_MATCH\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b98b2336a3fa642c6301e2870cb5c8c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 1375, "methodNumberAfterChange": 1375, "signatureBeforeChange": " public void test1341()", "signatureAfterChange": " public void test1341()", "diff": ["+\tMap options = getCompilerOptions();", "+\toptions.put(JavaCore.COMPILER_PB_UNCHECKED_TYPE_OPERATION, JavaCore.IGNORE);", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"2. WARNING in X.java (at line 6)\\n\" +", "-\t\t\t\"\tfoo((Collection<Number>) Arrays.asList(i, d));\\n\" +", "-\t\t\t\"\t                         ^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Type safety : A generic array of Number&Comparable<?> is created for a varargs parameter\\n\" +", "-\t\t\t\"----------\\n\");", "+\t\t\t\"----------\\n\",", "+\t\t\tnull,", "+\t\t\ttrue,", "+\t\t\toptions);"]}], "num": 50005}