{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0f3928da1ad3268215e06c019b8f84a1", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f7baf2afb9badff33ad5b9dd6091eff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests.java", "commitBeforeChange": "34106cbe5c11d866864bb97a52bcf55f920c9662", "commitAfterChange": "f08e2fcfb74b9a513988b6c92b3d0f1c94eb6ecf", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 31, "signatureBeforeChange": " public void testResolveInClassFileWithSource() throws JavaModelException", "signatureAfterChange": " public void testResolveInClassFileWithSource() throws JavaModelException", "diff": ["- */", "-public void testResolveInClassFileWithSource() throws JavaModelException {", "-\tIClassFile cu = getClassFile(\"Resolve\", \"p3.jar\", \"p3\", \"X.class\");", "-", "-\tString str = cu.getSource();", "-\tString selectAt = \"Object\";", "-\tString selection = \"Object\";", "-\tint start = str.indexOf(selectAt);", "-\tint length = selection.length();", "-\tIJavaElement[] elements = cu.codeSelect(start, length);", "-\t", "-\tassertTrue(elements != null && elements.length == 1 &&", "-\t\telements[0].getElementName().equals(\"Object\") &&", "-\t\telements[0].getElementType() == IJavaElement.TYPE);", "-}", "+ */", "+public void testResolveInClassFileWithSource() throws JavaModelException {", "+\tIClassFile cu = getClassFile(\"Resolve\", \"p3.jar\", \"p3\", \"X.class\");", "+", "+\tString str = cu.getSource();", "+\tString selectAt = \"Object\";", "+\tString selection = \"Object\";", "+\tint start = str.indexOf(selectAt);", "+\tint length = selection.length();", "+\tIJavaElement[] elements = cu.codeSelect(start, length);", "+\t", "+\tassertElementsEqual(", "+\t\t\"Unexpected elements\",", "+\t\t\"Object [in Object.class [in java.lang [in \" + getExternalJCLPath(). toString() + \" [in Resolve]]]]\",", "+\t\telements", "+\t);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b77ff51e216c80662d0c3b19c5c749ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "7064f5cf4e1b20562054db6ff22e27e2bfde4008", "commitAfterChange": "c020688b25edf08bbc7d8d68981663ad78d2a9d8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "          private ProcessorEnvImpl(     \t\tfinal CompilationUnit astCompilationUnit,     \t\tfinal ICompilationUnit compilationUnit,     \t\tfinal IFile file,     \t\tfinal IJavaProject javaProj,     \t\tfinal Phase phase)", "signatureAfterChange": "     private ProcessorEnvImpl(     \t\tfinal CompilationUnit astCompilationUnit,     \t\tfinal ICompilationUnit compilationUnit,     \t\tfinal IJavaProject javaProj )", "diff": ["+     */", "-    \t\tfinal IFile file,", "-    \t\tfinal IJavaProject javaProj,", "-    \t\tfinal Phase phase)", "+    \t\tfinal IJavaProject javaProj )", "-    \tsuper(  astCompilationUnit, file, javaProj, phase );", "-    \t", "-    \t// if we are in reconcile, compilationUnit will be valid", "-\t\t// if we are in build, file will not be null & compilationUnit will be", "-\t\t// null", "-    \tassert( (phase == Phase.RECONCILE && compilationUnit != null) || ", "-    \t\t\t(phase == Phase.BUILD && compilationUnit == null && file != null ) ) :", "-    \t\t\t\"Unexpected phase value \" + phase ; //$NON-NLS-1$", "-\t\t\t   ", "+    \tsuper(  astCompilationUnit, (IFile)compilationUnit.getResource(), javaProj, Phase.RECONCILE );", "+   "]}], "num": 23082}