{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9b74dcf108f152c5c6530c695a0eccf2", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a9762ec99011de84d1f1804050b1243", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static boolean checkInvocationArguments(BlockScope scope, Expression receiver, TypeBinding receiverType, MethodBinding method, Expression[] arguments, TypeBinding[] argumentTypes, boolean argsContainCast, InvocationSite invocationSite)", "signatureAfterChange": " \tpublic static boolean checkInvocationArguments(BlockScope scope, Expression receiver, TypeBinding receiverType, MethodBinding method, Expression[] arguments, TypeBinding[] argumentTypes, boolean argsContainCast, InvocationSite invocationSite)", "diff": ["+\t\tboolean is1_7 = scope.compilerOptions().sourceLevel >= ClassFileConstants.JDK1_7;", "+\t\tif (is1_7 && method.isPolymorphic()) {", "+\t\t\treturn false;", "+\t\t}", "-\t\t    \tif (!parameterType.isReifiable()) {", "-\t\t\t\t    scope.problemReporter().unsafeGenericArrayForVarargs(parameterType, (ASTNode)invocationSite);", "-\t\t    \t}", "+\t\t\t\tif (!parameterType.isReifiable()", "+\t\t\t\t\t\t&& (!is1_7 || ((method.tagBits & TagBits.AnnotationSafeVarargs) == 0))) {", "+\t\t\t\t\tscope.problemReporter().unsafeGenericArrayForVarargs(parameterType, (ASTNode)invocationSite);", "+\t\t\t\t}", "-\t\t\t   int argLength = arguments.length;", "-\t\t\t   if (lastIndex <= argLength) { // https://bugs.eclipse.org/bugs/show_bug.cgi?id=337093", "-\t\t\t\t   \tTypeBinding parameterType = params[lastIndex];", "+\t\t\t\tint argLength = arguments.length;", "+\t\t\t\tif (lastIndex <= argLength) { // https://bugs.eclipse.org/bugs/show_bug.cgi?id=337093", "+\t\t\t\t\tTypeBinding parameterType = params[lastIndex];", "-\t\t\t\t    if (paramLength != argLength || parameterType.dimensions() != argumentTypes[lastIndex].dimensions()) {", "-\t\t\t\t    \tparameterType = ((ArrayBinding) parameterType).elementsType(); // single element was provided for vararg parameter", "-\t\t\t\t    \tif (!parameterType.isReifiable()) {", "-\t\t\t\t\t\t    scope.problemReporter().unsafeGenericArrayForVarargs(parameterType, (ASTNode)invocationSite);", "-\t\t\t\t    \t}", "+\t\t\t\t\tif (paramLength != argLength || parameterType.dimensions() != argumentTypes[lastIndex].dimensions()) {", "+\t\t\t\t\t\tparameterType = ((ArrayBinding) parameterType).elementsType(); // single element was provided for vararg parameter", "+\t\t\t\t\t\tif (!parameterType.isReifiable()", "+\t\t\t\t\t\t\t\t&& (!is1_7 || ((method.tagBits & TagBits.AnnotationSafeVarargs) == 0))) {", "+\t\t\t\t\t\t\tscope.problemReporter().unsafeGenericArrayForVarargs(parameterType, (ASTNode)invocationSite);", "+\t\t\t\t\t\t}", "-\t\t\t\t    }", "+\t\t\t\t\t}", "-\t\t    scope.problemReporter().wildcardInvocation((ASTNode)invocationSite, receiverType, method, argumentTypes);", "+\t\t\tscope.problemReporter().wildcardInvocation((ASTNode)invocationSite, receiverType, method, argumentTypes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcd53a7c0d52cca8383ac297836b69ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReturnStatement.java", "commitBeforeChange": "c7e61e314902d7cf48e71c1a1c0437bb40107c2e", "commitAfterChange": "8a1621e802c664e59aba36b8a87f59ae57902e37", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " void checkAgainstNullAnnotation(BlockScope scope, FlowContext flowContext, int nullStatus)", "signatureAfterChange": " void checkAgainstNullAnnotation(BlockScope scope, FlowContext flowContext, int nullStatus)", "diff": ["-\t\tMethodBinding methodBinding;", "+\t\tMethodBinding methodBinding = null;", "+\t\tboolean useTypeAnnotations = scope.compilerOptions().sourceLevel >= ClassFileConstants.JDK1_8;", "-\t\t\ttagBits = methodBinding.tagBits;", "+\t\t\ttagBits = (useTypeAnnotations) ? methodBinding.returnType.tagBits : methodBinding.tagBits;", "-\t\t\tflowContext.recordNullityMismatch(scope, this.expression, this.expression.resolvedType, methodBinding.returnType, nullStatus);", "+\t\t\tif (useTypeAnnotations && (this.expression.resolvedType.tagBits & TagBits.AnnotationNullMASK) != 0) // TODO(stephan) more detailed checking", "+\t\t\t\tscope.problemReporter().nullityMismatchingTypeAnnotation(this.expression, this.expression.resolvedType, methodBinding.returnType, 3);", "+\t\t\telse", "+\t\t\t\tflowContext.recordNullityMismatch(scope, this.expression, this.expression.resolvedType, methodBinding.returnType, nullStatus);"]}], "num": 14587}