{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "89006efe7e165d7463e2d03dafc021eb", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e17066ea1f016e437b3af87fe3c74f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "eae9b6d133d1e0c7d2c9c5eea34b3530b0d87bc7", "commitAfterChange": "f3b2714ce76600cbff47416c089b334d95e8398e", "methodNumberBeforeChange": 240, "methodNumberAfterChange": 240, "signatureBeforeChange": " public void test0554_try_catch()", "signatureAfterChange": " public void test0554_try_catch()", "diff": ["-\tthis.runConformTest(", "+\tthis.runNegativeTest(", "-\t\t\"\"", "-\t\t// conservative flow analysis suppresses the warning", "-//\t\t\"----------\\n\" +", "-//\t\t\"1. ERROR in X.java (at line 10)\\n\" +", "-//\t\t\"\tif (o != null) {\\n\" +", "-//\t\t\"\t    ^\\n\" +", "-//\t\t\"Redundant null check: The variable o can only be null at this location\\n\" +", "-//\t\t\"----------\\n\"", "+\t\t\"----------\\n\" +", "+\t\t\"1. ERROR in X.java (at line 10)\\n\" +", "+\t\t\"\tif (o != null) {\\n\" +", "+\t\t\"\t    ^\\n\" +", "+\t\t\"Null comparison always yields false: The variable o can only be null at this location\\n\" +", "+\t\t\"----------\\n\" +", "+\t\t\"2. WARNING in X.java (at line 10)\\n\" +", "+\t\t\"\tif (o != null) {\\n\" +", "+\t\t\"    }\\n\" +", "+\t\t\"\t               ^^^^^^^\\n\" +", "+\t\t\"Dead code\\n\" +", "+\t\t\"----------\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66a66a7634b6263be64a640695d14b19", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "d5a32e245b27c645dcf70347396d7253765682d3", "commitAfterChange": "562bd70d52b78a80d9ea0f036f9a91cfb91468db", "methodNumberBeforeChange": 505, "methodNumberAfterChange": 505, "signatureBeforeChange": " public void testBug336428e()", "signatureAfterChange": " public void testBug336428e()", "diff": ["+\t\t\t\t\"           assert (o2 = o1) != null : \\\"bug\\\";\\n\" +", "+\t\t\t\t\"\t\t} while (true);\\n\" + ", "+\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"}\"\t", "+\t\t\t},", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in DoWhileBug.java (at line 7)\\n\" + ", "+\t\t\t\"\to1 = null;\\n\" + ", "+\t\t\t\"\t^^\\n\" + ", "+\t\t\t\"Redundant assignment: The variable o1 can only be null at this location\\n\" + ", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"2. ERROR in DoWhileBug.java (at line 8)\\n\" + ", "+\t\t\t\"\tassert (o2 = o1) != null : \\\"bug\\\";\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^^\\n\" + ", "+\t\t\t\"Null comparison always yields false: The variable o2 can only be null at this location\\n\" + ", "+\t\t\t\"----------\\n\");", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7775783688b1b6698ba7d8d4be08b941", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "d5a32e245b27c645dcf70347396d7253765682d3", "commitAfterChange": "562bd70d52b78a80d9ea0f036f9a91cfb91468db", "methodNumberBeforeChange": 347, "methodNumberAfterChange": 347, "signatureBeforeChange": " public void test0955_assert_combined()", "signatureAfterChange": " public void test0955_assert_combined()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 4)\\n\" +", "-\t\t\"\tif (o == null) { };\\n\" +", "-\t\t\"\t    ^\\n\" +", "-\t\t\"Null comparison always yields false: The variable o cannot be null at this location\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\"\tif (o == null) { };\\n\" + ", "+\t\t\"\t    ^\\n\" + ", "+\t\t\"Null comparison always yields false: The variable o cannot be null at this location\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\"\tif (o == null) { };\\n\" + ", "+\t\t\"\t               ^^^\\n\" + ", "+\t\t\"Dead code\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaf01ad2381f4c13219b1757820b9e50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/FlowAnalysisTest.java", "commitBeforeChange": "3307a3b21f8472cc998512e9e4cd5afdd4f17b52", "commitAfterChange": "b155f47580a90f694a899aae6d06a1ff29f450b8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public void test001()", "signatureAfterChange": "  public void test001()", "diff": ["-\t\"----------\\n\" +", "-\t\"1. ERROR in X.java (at line 2)\\n\" +", "-\t\"\tpublic String foo(int i) {\\n\" +", "-\t\"\t              ^^^^^^^^^^\\n\" +", "-\t\"This method must return a result of type String\\n\" +", "+\t\"----------\\n\" + ", "+\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\"\tpublic String foo(int i) {\\n\" + ", "+\t\"\t              ^^^^^^^^^^\\n\" + ", "+\t\"This method must return a result of type String\\n\" + ", "+\t\"----------\\n\" + ", "+\t\"2. WARNING in X.java (at line 6)\\n\" + ", "+\t\"\tif (i > 0) {\\n\" + ", "+\t\"\t\t\treturn null;\\n\" + ", "+\t\"\t\t}\\n\" + ", "+\t\"\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\"Dead code\\n\" + "]}], "num": 40099}