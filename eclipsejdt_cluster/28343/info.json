{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e8b8ca01cc3d4e2f70a38f6b7aac50e7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f07bb5176355c37d583d0b8c6ffad6f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/OptionTests.java", "commitBeforeChange": "a9418855905ec3893c6b4d120dab4313f397185e", "commitAfterChange": "57b4d27e30475beb9493c429d9900b65333bbe6c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void test07() throws CoreException", "signatureAfterChange": " public void test07() throws CoreException", "diff": ["-\t\tIJavaProject projectA = ", "+\t\tJavaProject projectA = (JavaProject)", "-\t\t\t\t", "+\t\tPreferences preferences = projectA.getPreferences();", "+\t\tpreferences.addPropertyChangeListener(new TestPropertyListener());", "+\t", "-\t\t", "+\t\tassertTrue(\"projA:preferences should not be reset\", preferences == projectA.getPreferences());", "+\t\tassertTrue(\"projA:preferences property listener has been lost\", eventCount == 2);", "+\t", "-", "+\t\tassertTrue(\"projA:preferences should not be reset\", preferences == projectA.getPreferences());", "+\t\tassertTrue(\"projA:preferences property listener has been lost\", eventCount == 3);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e21d5c20aa4b190aab3ffa8a80279799", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "a5d1ea823477d0b660513e02e4d5ea617e96f0f4", "commitAfterChange": "715584c5e472beed04e55724a3b79ce8eca6cd4d", "methodNumberBeforeChange": 143, "methodNumberAfterChange": 143, "signatureBeforeChange": "     public void test0132() throws CoreException", "signatureAfterChange": "     public void test0132() throws CoreException", "diff": ["-    \tassertEquals(\"wrong dimension\", 3, parameterType.getDimensions());\t\t", "-    }", "+       \tassertEquals(\"wrong dimension\", 3, parameterType.getDimensions());\t\t", "+       \tITypeBinding componentType = parameterType.getComponentType();", "+       \tassertEquals(\"wrong dimension\", 2, componentType.getDimensions());", "+       \tassertTrue(\"Not equal\", parameterType.getElementType() == componentType.getElementType());", "+       \tITypeBinding componentType2 = componentType.getComponentType();", "+       \tassertEquals(\"wrong dimension\", 1, componentType2.getDimensions());", "+       \tassertTrue(\"Not equal\", parameterType.getElementType() == componentType2.getElementType());", "+     }"]}], "num": 28343}