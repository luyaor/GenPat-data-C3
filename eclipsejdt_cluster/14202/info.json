{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a6611fc1c2161cc413bad05f57c8b838", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "141b6c5f5fd1f640f647d4e3684887a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleTypeReference.java", "commitBeforeChange": "e760e456d0e96ba9bce504014e582b9dbdf7e542", "commitAfterChange": "c67d112c20f07c2dcda11714ef23687a9781a753", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic TypeBinding resolveTypeEnclosing(BlockScope scope, ReferenceBinding enclosingType)", "signatureAfterChange": "  \tpublic TypeBinding resolveTypeEnclosing(BlockScope scope, ReferenceBinding enclosingType)", "diff": ["-\t\tTypeBinding memberType = this.resolvedType = scope.getMemberType(this.token, enclosingType);", "+\t\tthis.resolvedType = scope.getMemberType(this.token, enclosingType);", "+\t\tTypeBinding memberType = this.resolvedType; // load after possible update in resolveAnnotations()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "273c8ec458071aab0672a35a288ee6e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetAllocationExpression.java", "commitBeforeChange": "175caf4c91bc68c67c64b6e69e5b88fec75be023", "commitAfterChange": "2a90eeb9372f2a1a1f5e7c24d7c19363b361caf2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\tboolean argsContainCast = false;", "-\t\t\t\targsContainCast = true;", "+\t\t\t\tthis.argsContainCast = true;", "-\t\tTypeBinding [] inferredTypes = inferElidedTypes((ParameterizedTypeBinding) this.resolvedType, null, this.argumentTypes, scope);", "+\t\tTypeBinding [] inferredTypes = inferElidedTypes(scope);", "-\t\tif (argsContainCast) {", "+\t\tif (this.argsContainCast) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a85380ee230e24244b94eff9fd6f758", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetAllocationExpression.java", "commitBeforeChange": "b3906111a4433325958de7604465d8f0e49325d2", "commitAfterChange": "0b27309efdaba54bffa19e81e0f1e5ae6f176884", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tTypeBinding [] inferredTypes = inferElidedTypes(((ParameterizedTypeBinding) this.resolvedType).genericType(), null, argumentTypes, scope);", "+\t\tTypeBinding [] inferredTypes = inferElidedTypes((ParameterizedTypeBinding) this.resolvedType, null, argumentTypes, scope);"]}], "num": 14202}