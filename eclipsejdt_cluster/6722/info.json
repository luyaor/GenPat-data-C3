{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a1a7801f54600700f7e8df0befd3619d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85be57d5fd35e2e578e70a4297430dc7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "8d1c92d5ff789a78e5b2b21597d7c303cc8d5234", "commitAfterChange": "270bcfc5f9a8c2abee755a7d8ecdd2a24972b638", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " \tpublic final Binding getTypeOrPackage(char[][] compoundName)", "signatureAfterChange": " \tpublic final Binding getTypeOrPackage(char[][] compoundName)", "diff": ["-\t   ", "-\t\tReferenceBinding originalTypeBinding = (ReferenceBinding) binding;", "-\t\t// ReferenceBinding currentType = originalTypeBinding;", "-\t\tif (originalTypeBinding.isGenericType()) {", "-\t\t\tqualifiedType = this.environment().createRawType(originalTypeBinding, qualifiedType);", "+", "+\t\tReferenceBinding typeBinding = (ReferenceBinding) binding;", "+\t\tif (typeBinding.isGenericType()) {", "+\t\t\tqualifiedType = this.environment().createRawType(typeBinding, qualifiedType);", "-\t\t\t\t? this.createParameterizedType(originalTypeBinding, null, qualifiedType)", "-\t\t\t\t: originalTypeBinding;", "+\t\t\t\t? this.createParameterizedType(typeBinding, null, qualifiedType)", "+\t\t\t\t: typeBinding;", "-\t\t", "+", "-\t\t\tif (!originalTypeBinding.canBeSeenBy(this))", "+\t\t\tif (!typeBinding.canBeSeenBy(this))", "-\t\t\t\t\toriginalTypeBinding,", "+\t\t\t\t\ttypeBinding,", "-\t\t\toriginalTypeBinding = getMemberType(compoundName[currentIndex++], originalTypeBinding);", "-\t         ", "-\t\t\tif (originalTypeBinding.isGenericType()) {", "-\t\t\t\tqualifiedType = this.environment().createRawType(originalTypeBinding, qualifiedType);", "+\t\t\ttypeBinding = getMemberType(compoundName[currentIndex++], typeBinding);", "+", "+\t\t\tif (typeBinding.isGenericType()) {", "+\t\t\t\tqualifiedType = this.environment().createRawType(typeBinding, qualifiedType);", "-\t\t\t\t\t\t\t\t\t\t? this.createParameterizedType(originalTypeBinding, null, qualifiedType)", "-\t\t\t\t\t\t\t\t\t\t: originalTypeBinding;", "+\t\t\t\t\t? this.createParameterizedType(typeBinding, null, qualifiedType)", "+\t\t\t\t\t: typeBinding;", "-\t         ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5a84841057b3f22f44da88976a0ba48", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "8975a4993759f4f0cb2d8fff2da5bbb83e0cb45e", "commitAfterChange": "cf2efa3dda03cbfe4678da60ea7973c079a8dcf8", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " \tpublic final Binding getTypeOrPackage(char[][] compoundName)", "signatureAfterChange": " \tpublic final Binding getTypeOrPackage(char[][] compoundName)", "diff": ["-\t\t", "-\t\tReferenceBinding typeBinding = (ReferenceBinding) binding;", "-\t\tReferenceBinding currentType = typeBinding;", "-\t\tif (currentType.isGenericType()) {", "-\t\t\tqualifiedType = this.environment().createRawType(currentType, qualifiedType);", "+\t   ", "+\t\tReferenceBinding originalTypeBinding = (ReferenceBinding) binding;", "+\t\t// ReferenceBinding currentType = originalTypeBinding;", "+\t\tif (originalTypeBinding.isGenericType()) {", "+\t\t\tqualifiedType = this.environment().createRawType(originalTypeBinding, qualifiedType);", "-\t\t\t\t? this.createParameterizedType((ReferenceBinding)currentType.erasure(), null, qualifiedType)", "-\t\t\t\t: currentType;", "+\t\t\t\t? this.createParameterizedType(originalTypeBinding, null, qualifiedType)", "+\t\t\t\t: originalTypeBinding;", "-\t\ttypeBinding = qualifiedType;", "-\t\t", "-\t\t\tif (!typeBinding.canBeSeenBy(this))", "+\t\t\tif (!originalTypeBinding.canBeSeenBy(this))", "-\t\t\t\t\ttypeBinding,", "+\t\t\t\t\toriginalTypeBinding,", "-\t\t\ttypeBinding = getMemberType(compoundName[currentIndex++], typeBinding);", "-\t\t\t", "-\t\t\tcurrentType = typeBinding;", "-\t\t\tif (currentType.isGenericType()) {", "-\t\t\t\tqualifiedType = this.environment().createRawType(currentType, qualifiedType);", "+\t\t\toriginalTypeBinding = getMemberType(compoundName[currentIndex++], originalTypeBinding);", "+\t         ", "+\t\t\tif (originalTypeBinding.isGenericType()) {", "+\t\t\t\tqualifiedType = this.environment().createRawType(originalTypeBinding, qualifiedType);", "-\t\t\t\t\t? this.createParameterizedType((ReferenceBinding)currentType.erasure(), null, qualifiedType)", "-\t\t\t\t\t: currentType;", "+\t\t\t\t\t\t\t\t\t\t? this.createParameterizedType(originalTypeBinding, null, qualifiedType)", "+\t\t\t\t\t\t\t\t\t\t: originalTypeBinding;", "-\t\t\t", "-\t\t\ttypeBinding = qualifiedType;", "+\t         ", "-\t\t\tif (!typeBinding.isValidBinding())", "+\t\t\tif (!qualifiedType.isValidBinding())", "-\t\t\t\t\ttypeBinding.problemId());", "+\t\t\t\t\tqualifiedType.problemId());", "-\t\treturn typeBinding;", "+\t\treturn qualifiedType;"]}], "num": 6722}