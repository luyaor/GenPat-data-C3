{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "caf896c7ad4d82086fb05abcac340896", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b4c0835e0d05262de5305a8698e3b83", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic MethodBinding getImplicitMethod(char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding getImplicitMethod(char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t\t\t\t\t\t\tif (methodBinding.problemId() == Ambiguous) {", "-\t\t\t\t\t\t\t\tif (foundMethod == null || foundMethod.problemId() == NotVisible) {", "+\t\t\t\t\t\t\tif (methodBinding.problemId() == ProblemReasons.Ambiguous) {", "+\t\t\t\t\t\t\t\tif (foundMethod == null || foundMethod.problemId() == ProblemReasons.NotVisible) {", "-\t\t\t\t\t\t\t\t\tInheritedNameHidesEnclosingName);", "+\t\t\t\t\t\t\t\t\tProblemReasons.InheritedNameHidesEnclosingName);", "-\t\t\t\t\t\t\t\t\t\tif (foundMethod == null || foundMethod.problemId() == NotVisible)", "+\t\t\t\t\t\t\t\t\t\tif (foundMethod == null || foundMethod.problemId() == ProblemReasons.NotVisible)", "-\t\t\t\t\t\t\t\t\t\t\treturn new ProblemMethodBinding(methodBinding, selector, argumentTypes, NotFound);", "+\t\t\t\t\t\t\t\t\t\t\treturn new ProblemMethodBinding(methodBinding, selector, argumentTypes, ProblemReasons.NotFound);", "-\t\t\t\t\t\t\t\t\t\tfuzzyProblem = new ProblemMethodBinding(methodBinding, selector, methodBinding.parameters, InheritedNameHidesEnclosingName);", "+\t\t\t\t\t\t\t\t\t\tfuzzyProblem = new ProblemMethodBinding(methodBinding, selector, methodBinding.parameters, ProblemReasons.InheritedNameHidesEnclosingName);", "-\t\t\t\t\t\t\t\t\t\t\tfuzzyProblem = new ProblemMethodBinding(methodBinding, selector, methodBinding.parameters, NotVisible);", "+\t\t\t\t\t\t\t\t\t\t\tfuzzyProblem = new ProblemMethodBinding(methodBinding, selector, methodBinding.parameters, ProblemReasons.NotVisible);", "-\t\t\t\t\t\t\t\t\t\t\t\tNonStaticReferenceInConstructorInvocation);", "+\t\t\t\t\t\t\t\t\t\t\t\tProblemReasons.NonStaticReferenceInConstructorInvocation);", "-\t\t\t\t\t\t\t\t\t\t\t\tNonStaticReferenceInStaticContext);", "+\t\t\t\t\t\t\t\t\t\t\t\tProblemReasons.NonStaticReferenceInStaticContext);", "-\t\t\t\t\t\t\t\t\t|| ((fuzzyProblem == null || fuzzyProblem.problemId() != NotVisible) && compilerOptions().complianceLevel >= ClassFileConstants.JDK1_4)) {", "+\t\t\t\t\t\t\t\t\t|| ((fuzzyProblem == null || fuzzyProblem.problemId() != ProblemReasons.NotVisible) && compilerOptions().complianceLevel >= ClassFileConstants.JDK1_4)) {", "-\t\t\t\t\t\t\t\t\t\t\tInheritedNameHidesEnclosingName);", "+\t\t\t\t\t\t\t\t\t\t\tProblemReasons.InheritedNameHidesEnclosingName);", "-\t\t\t\t\t\t\tif (foundMethod == null || (foundMethod.problemId() == NotVisible && methodBinding.problemId() != NotVisible)) {", "+\t\t\t\t\t\t\tif (foundMethod == null || (foundMethod.problemId() == ProblemReasons.NotVisible && methodBinding.problemId() != ProblemReasons.NotVisible)) {", "-\t\t\t\t\t\t\t\t\t\t\tfoundMethod = new ProblemMethodBinding(compatibleMethod, selector, compatibleMethod.parameters, NotVisible);", "+\t\t\t\t\t\t\t\t\t\t\tfoundMethod = new ProblemMethodBinding(compatibleMethod, selector, compatibleMethod.parameters, ProblemReasons.NotVisible);", "-\t\t\t\t\t\t\t\t\tfoundMethod = new ProblemMethodBinding(possible, selector, argumentTypes, NotFound);", "+\t\t\t\t\t\t\t\t\tfoundMethod = new ProblemMethodBinding(possible, selector, argumentTypes, ProblemReasons.NotFound);", "-\t\treturn new ProblemMethodBinding(selector, argumentTypes, NotFound);", "+\t\treturn new ProblemMethodBinding(selector, argumentTypes, ProblemReasons.NotFound);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "855fd5c81b40e5744ea73bb6c634c6b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " \tfinal Binding getTypeOrPackage(char[] name, int mask)", "signatureAfterChange": " \tfinal Binding getTypeOrPackage(char[] name, int mask)", "diff": ["-\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, foundType, InheritedNameHidesEnclosingName);", "+\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, foundType, ProblemReasons.InheritedNameHidesEnclosingName);", "-\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, typeVariable, NonStaticReferenceInStaticContext);", "+\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, typeVariable, ProblemReasons.NonStaticReferenceInStaticContext);", "-\t\t\t\t\t\t\t\tif (memberType.problemId() == Ambiguous) {", "-\t\t\t\t\t\t\t\t\tif (foundType == null || foundType.problemId() == NotVisible)", "+\t\t\t\t\t\t\t\tif (memberType.problemId() == ProblemReasons.Ambiguous) {", "+\t\t\t\t\t\t\t\t\tif (foundType == null || foundType.problemId() == ProblemReasons.NotVisible)", "-\t\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, foundType, InheritedNameHidesEnclosingName);", "+\t\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, foundType, ProblemReasons.InheritedNameHidesEnclosingName);", "-\t\t\t\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, memberType, NonStaticReferenceInStaticContext);", "+\t\t\t\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, memberType, ProblemReasons.NonStaticReferenceInStaticContext);", "-\t\t\t\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, foundType, InheritedNameHidesEnclosingName);", "+\t\t\t\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, foundType, ProblemReasons.InheritedNameHidesEnclosingName);", "-\t\t\t\t\t\t\t\tif (foundType == null || (foundType.problemId() == NotVisible && memberType.problemId() != NotVisible))", "+\t\t\t\t\t\t\t\tif (foundType == null || (foundType.problemId() == ProblemReasons.NotVisible && memberType.problemId() != ProblemReasons.NotVisible))", "-\t\t\t\t\t\t\tif (foundType != null && foundType != sourceType && foundType.problemId() != NotVisible)", "-\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, foundType, InheritedNameHidesEnclosingName);", "+\t\t\t\t\t\t\tif (foundType != null && foundType != sourceType && foundType.problemId() != ProblemReasons.NotVisible)", "+\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, foundType, ProblemReasons.InheritedNameHidesEnclosingName);", "-\t\t\tif (foundType != null && foundType.problemId() != NotVisible)", "+\t\t\tif (foundType != null && foundType.problemId() != ProblemReasons.NotVisible)", "-\t\t\t\t\tif (foundType != null && foundType.problemId() != NotVisible && binding.problemId() != Ambiguous)", "+\t\t\t\t\tif (foundType != null && foundType.problemId() != ProblemReasons.NotVisible && binding.problemId() != ProblemReasons.Ambiguous)", "-\t\t\t\t\t\t\t\t\ttemp = new ProblemReferenceBinding(name, null, Ambiguous);", "+\t\t\t\t\t\t\t\t\ttemp = new ProblemReferenceBinding(name, null, ProblemReasons.Ambiguous);", "-\t\t\tfoundType = new ProblemReferenceBinding(name, null, NotFound);", "+\t\t\tfoundType = new ProblemReferenceBinding(name, null, ProblemReasons.NotFound);"]}], "num": 25175}