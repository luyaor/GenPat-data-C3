{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cdb4f203d6f0c0dcc85653ca20315a73", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6562d7a244afe1eeaf160abcafcb4d53", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9713cc0fc86fbe0881ff90c5290328149c35cbdc", "commitAfterChange": "236485921f70a82e4283431ca8763bf21e25e459", "methodNumberBeforeChange": 1022, "methodNumberAfterChange": 1022, "signatureBeforeChange": " public void test0999()", "signatureAfterChange": " public void test0999()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. WARNING in X.java (at line 9)\\n\" +", "-\t\t\"\tIterator<Number> it1 = X.chain(new Iterator[] { l1.iterator(), l2.iterator() });\\n\" +", "-\t\t\"\t                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: Unchecked invocation chain(Iterator...) of the generic method chain(Iterator<E>...) of type X\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. WARNING in X.java (at line 9)\\n\" +", "-\t\t\"\tIterator<Number> it1 = X.chain(new Iterator[] { l1.iterator(), l2.iterator() });\\n\" +", "-\t\t\"\t                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: The expression of type Iterator needs unchecked conversion to conform to Iterator<Number>\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"3. ERROR in X.java (at line 14)\\n\" +", "-\t\t\"\tIterator<Number> it2 = X.chain(l1.iterator(), l2.iterator());\\n\" +", "-\t\t\"\t                         ^^^^^\\n\" +", "-\t\t\"The method chain(Iterator<E>...) in the type X is not applicable for the arguments (Iterator<Integer>, Iterator<Float>)\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"4. WARNING in X.java (at line 18)\\n\" +", "-\t\t\"\tIterator<Number> it2 = X.chain(l1.iterator(), l1.iterator());\\n\" +", "-\t\t\"\t                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Type safety : A generic array of Iterator<Integer> is created for a varargs parameter\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\"\tIterator<Number> it1 = X.chain(new Iterator[] { l1.iterator(), l2.iterator() });\\n\" + ", "+\t\t\"\t                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: Unchecked invocation chain(Iterator[]) of the generic method chain(Iterator<E>...) of type X\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\"\tIterator<Number> it1 = X.chain(new Iterator[] { l1.iterator(), l2.iterator() });\\n\" + ", "+\t\t\"\t                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: The expression of type Iterator needs unchecked conversion to conform to Iterator<Number>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\"\tIterator<Number> it1 = X.chain(new Iterator[] { l1.iterator(), l2.iterator() });\\n\" + ", "+\t\t\"\t                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: The expression of type Iterator[] needs unchecked conversion to conform to Iterator<Number>[]\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. ERROR in X.java (at line 14)\\n\" + ", "+\t\t\"\tIterator<Number> it2 = X.chain(l1.iterator(), l2.iterator());\\n\" + ", "+\t\t\"\t                         ^^^^^\\n\" + ", "+\t\t\"The method chain(Iterator<E>...) in the type X is not applicable for the arguments (Iterator<Integer>, Iterator<Float>)\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. WARNING in X.java (at line 18)\\n\" + ", "+\t\t\"\tIterator<Number> it2 = X.chain(l1.iterator(), l1.iterator());\\n\" + ", "+\t\t\"\t                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety : A generic array of Iterator<Integer> is created for a varargs parameter\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aff653f9474c4f6b61abc494f3d678e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JSR308SpecSnippetTests.java", "commitBeforeChange": "0fdabed7d03d0f0d08fda0e7f845381fd7c643ef", "commitAfterChange": "b31cd8ccd51413655d3e805905e8dd7d1404f391", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic void test020() throws Exception", "signatureAfterChange": " \tpublic void test020() throws Exception", "diff": ["-\t\t\"5. ERROR in X.java (at line 21)\\n\" + ", "+\t\t\"5. WARNING in X.java (at line 20)\\n\" + ", "+\t\t\"\to = int @NonEmpty [].class; // illegal!\\n\" + ", "+\t\t\"\t        ^^^^^^^^^\\n\" + ", "+\t\t\"Syntax error, type annotations are illegal here\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"6. ERROR in X.java (at line 21)\\n\" + ", "-\t\t\"6. ERROR in X.java (at line 22)\\n\" + ", "+\t\t\"7. ERROR in X.java (at line 22)\\n\" + "]}], "num": 3830}