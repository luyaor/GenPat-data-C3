{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dfb79ce39ff37cb65e8e4901c620602f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c4fd2bdb9f726b7d6d96d6e23670795", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "43e1a872f6aa500346aa424b28bb0fdd0f4213de", "commitAfterChange": "252ad74c503b99b6172e14b9ea5fbadb70b4062c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void checkAnnotation()", "signatureAfterChange": " public void checkAnnotation()", "diff": ["-\t\tfor (int i = commentSourceStart + 3; i < commentSourceEnd - 10; i++) {", "-\t\t\tif ((comment[i] == '@') ", "-\t\t\t\t&& (comment[i + 1] == 'd')", "-\t\t\t\t&& (comment[i + 2] == 'e')", "-\t\t\t\t&& (comment[i + 3] == 'p')", "-\t\t\t\t&& (comment[i + 4] == 'r')", "-\t\t\t\t&& (comment[i + 5] == 'e')", "-\t\t\t\t&& (comment[i + 6] == 'c')", "-\t\t\t\t&& (comment[i + 7] == 'a')", "-\t\t\t\t&& (comment[i + 8] == 't')", "-\t\t\t\t&& (comment[i + 9] == 'e')", "-\t\t\t\t&& (comment[i + 10] == 'd')) {", "-\t\t\t\t// ensure the tag is properly ended: either followed by a space, a tab, line end or asterisk.", "-\t\t\t\tint nextPos = i+11;", "-\t\t\t\tchar nextCharacter = comment[nextPos];", "-\t\t\t\tif (nextCharacter == '\\\\') {", "-\t\t\t\t\tint c1, c2, c3, c4;", "-\t\t\t\t\tnextPos++;", "-\t\t\t\t\twhile (comment[nextPos] == 'u') nextPos++;", "-\t\t\t\t\tif (!(((c1 = Character.getNumericValue(comment[nextPos++])) > 15", "-\t\t\t\t\t\t|| c1 < 0)", "-\t\t\t\t\t\t|| ((c2 = Character.getNumericValue(comment[nextPos++])) > 15 || c2 < 0)", "-\t\t\t\t\t\t|| ((c3 = Character.getNumericValue(comment[nextPos++])) > 15 || c3 < 0)", "-\t\t\t\t\t\t|| ((c4 = Character.getNumericValue(comment[nextPos++])) > 15 || c4 < 0))) {", "-\t\t\t\t\t\t\tnextCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "-\t\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tdeprecated = Character.isWhitespace(nextCharacter) || nextCharacter == '*';", "-\t\t\t\tbreak nextComment;", "-\t\t\t}", "-\t\t}", "+\t\tdeprecated =", "+\t\t\tcheckDeprecation(", "+\t\t\t\tcommentSourceStart,", "+\t\t\t\tcommentSourceEnd,", "+\t\t\t\tcomment);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44998a35a499a236c1e16ac2191424aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/DocumentElementParser.java", "commitBeforeChange": "43e1a872f6aa500346aa424b28bb0fdd0f4213de", "commitAfterChange": "252ad74c503b99b6172e14b9ea5fbadb70b4062c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void checkAnnotation()", "signatureAfterChange": " public void checkAnnotation()", "diff": ["+\t\t\tif (scanner.commentStops[lastAnnotationIndex] < 0) {", "+\t\t\t\tbreak found;", "+\t\t\t}", "-", "-\t\t\tfor (int i = commentSourceStart + 3; i < commentSourceEnd - 10; i++) {", "-\t\t\t\tif ((comment[i] == '@')", "-\t\t\t\t\t&& (comment[i + 1] == 'd')", "-\t\t\t\t\t&& (comment[i + 2] == 'e')", "-\t\t\t\t\t&& (comment[i + 3] == 'p')", "-\t\t\t\t\t&& (comment[i + 4] == 'r')", "-\t\t\t\t\t&& (comment[i + 5] == 'e')", "-\t\t\t\t\t&& (comment[i + 6] == 'c')", "-\t\t\t\t\t&& (comment[i + 7] == 'a')", "-\t\t\t\t\t&& (comment[i + 8] == 't')", "-\t\t\t\t\t&& (comment[i + 9] == 'e')", "-\t\t\t\t\t&& (comment[i + 10] == 'd')) {", "-\t\t\t\t\t// ensure the tag is properly ended: either followed by a space, line end or asterisk.", "-\t\t\t\t\tint nextPos = i + 11;", "-\t\t\t\t\tdeprecated = ", "-\t\t\t\t\t\t(comment[nextPos] == ' ')", "-\t\t\t\t\t\t\t|| (comment[nextPos] == '\\n')", "-\t\t\t\t\t\t\t|| (comment[nextPos] == '\\r')", "-\t\t\t\t\t\t\t|| (comment[nextPos] == '*'); ", "-\t\t\t\t\tbreak found;", "-\t\t\t\t}", "-\t\t\t}", "+\t\t\tdeprecated =", "+\t\t\t\tcheckDeprecation(", "+\t\t\t\t\tcommentSourceStart,", "+\t\t\t\t\tcommentSourceEnd,", "+\t\t\t\t\tcomment);", "+\t\t\tbreak found;"]}], "num": 53122}