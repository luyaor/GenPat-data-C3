{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "04a11a9b102744bae1d6290f8e217265", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "725141256e0d14a478066dc5b9ef9835", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "079f1f525d3cbb0b2570dd4fe3bd959b7a33dc49", "commitAfterChange": "b21cadb5eae53d9f84dce9f073b5350a267b6ad6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void add(IJavaElement element) throws JavaModelException", "signatureAfterChange": " public void add(IJavaElement element, IJavaProject project) throws JavaModelException", "diff": ["+ */", "+public void add(IJavaElement element, IJavaProject project) throws JavaModelException {", "+\tint includeMask = SOURCES | APPLICATION_LIBRARIES | SYSTEM_LIBRARIES;", "-\t\t\tint includeMask = SOURCES | APPLICATION_LIBRARIES | SYSTEM_LIBRARIES;", "-\t\t\tthis.add((JavaProject)element, includeMask, new HashSet(2));", "+\t\t\tif (project == null)", "+\t\t\t\tadd((JavaProject)element, null, includeMask, new HashSet(2), null);", "+\t\t\telse", "+\t\t\t\tadd((JavaProject)project, element.getPath(), includeMask, new HashSet(2), null);", "-\t\t\tthis.add(root.getPath(), true);", "+\t\t\tif (project == null)", "+\t\t\t\tadd(root.getPath(), true, null);", "+\t\t\telse", "+\t\t\t\tadd((JavaProject)project, root.getPath(), includeMask, new HashSet(2), null);", "-\t\t\t\tthis.add(root.getPath().append(new Path(relativePath)), false);", "+\t\t\t\tIPath path = root.getPath().append(new Path(relativePath));", "+\t\t\t\tif (project == null)", "+\t\t\t\t\tadd(path, false, null);", "+\t\t\t\telse", "+\t\t\t\t\tadd((JavaProject)project, path, includeMask, new HashSet(2), null);", "-\t\t\t\t\tthis.add(resource.getFullPath(), false);", "+\t\t\t\t\tif (project == null)", "+\t\t\t\t\t\tadd(resource.getFullPath(), false, null);", "+\t\t\t\t\telse", "+\t\t\t\t\t\tadd((JavaProject)project, resource.getFullPath(), includeMask, new HashSet(2), null);", "-\t\t\tthis.add(this.fullPath(element), true);", "+\t\t\tthis.add(this.fullPath(element), true, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8405d8688d625b1e23636a2c02535ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaWorkspaceScope.java", "commitBeforeChange": "e4f6d0091f68bf4b6ecb46943ad5d4d6a5ce0095", "commitAfterChange": "3a73dbc8d9839c0eb87857ef97f640371d15a626", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void initialize(int size)", "signatureAfterChange": " public IPackageFragmentRoot packageFragmentRoot(String resourcePathString, int jarSeparatorIndex, String jarPath)", "diff": ["-public void initialize(int size) {", "-\tsuper.initialize(size);", "-\ttry {", "-\t\tIJavaProject[] projects = JavaModelManager.getJavaModelManager().getJavaModel().getJavaProjects();", "-\t\tfor (int i = 0, length = projects.length; i < length; i++) {", "-\t\t\tint includeMask = SOURCES | APPLICATION_LIBRARIES | SYSTEM_LIBRARIES;", "-\t\t\tadd((JavaProject) projects[i], null, includeMask, new HashSet(length*2, 1), null);", "+ */", "+public IPackageFragmentRoot packageFragmentRoot(String resourcePathString, int jarSeparatorIndex, String jarPath) {", "+\tHashMap rootInfos = JavaModelManager.getDeltaState().roots;", "+\tDeltaProcessor.RootInfo rootInfo = null;", "+\tif (jarPath != null) {", "+\t\tIPath path = new Path(jarPath);", "+\t\trootInfo = (DeltaProcessor.RootInfo) rootInfos.get(path);", "+\t\tif (rootInfo == null)", "+\t\t\treturn null;", "+\t\treturn rootInfo.project.getPackageFragmentRoot0(path);", "+\t} else {", "+\t\t// resource in workspace", "+\t\tIPath path = new Path(resourcePathString);", "+\t\trootInfo = (DeltaProcessor.RootInfo) rootInfos.get(path);", "+\t\twhile (rootInfo == null && path.segmentCount() > 0) {", "+\t\t\tpath = path.removeLastSegments(1);", "+\t\t\trootInfo = (DeltaProcessor.RootInfo) rootInfos.get(path);", "-\t} catch (JavaModelException ignored) {", "-\t\t// ignore", "+\t\tif (rootInfo == null)", "+\t\t\treturn null;", "+\t\treturn rootInfo.getPackageFragmentRoot(null/*no resource hint*/);", "-\tthis.needsInitialize = false;"]}], "num": 52259}