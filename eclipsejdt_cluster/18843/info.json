{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d7e4d15430061b9112b912e44631f5ab", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "667e3096e0964ef3f8e3d2c5e838c18a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/HierarchyResolver.java", "commitBeforeChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "commitAfterChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \r public void resolve(IGenericType[] suppliedTypes, ICompilationUnit[] sourceUnits)", "signatureAfterChange": "\r \r public void resolve(IGenericType[] suppliedTypes, ICompilationUnit[] sourceUnits)", "diff": ["-\t\t\r", "-\t\t// build type bindings\r", "+\t\tint count = -1;\r", "+\t\t\t\tsuppliedTypes[i] = null; // no longer needed pass this point\r", "+\t\t\t\tsuppliedTypes[i] = null; // no longer needed pass this point\t\t\t\t\r", "-\t\t\t\tunits[i] = SourceTypeConverter.buildCompilationUnit(new ISourceType[]{topLevelType}, false, true, lookupEnvironment.problemReporter, result);\r", "-\t\t\t\tif (units[i] != null) {\r", "+\t\t\t\tunits[++count] = SourceTypeConverter.buildCompilationUnit(topLevelType, false, true, lookupEnvironment.problemReporter, result);\r", "+\r", "+\t\t\t\tif (units[count] == null) {\r", "+\t\t\t\t\tcount--;\r", "+\t\t\t\t} else {\r", "-\t\t\t\t\t\tlookupEnvironment.buildTypeBindings(units[i]);\r", "+\t\t\t\t\t\tlookupEnvironment.buildTypeBindings(units[count]);\r", "+\t\t\t\t\t\trememberWithMemberTypes(topLevelType, units[count].types[0].binding);\r", "+\t\t\tsourceUnits[i] = null; // no longer needed pass this point\r", "-\t\t\tCompilerOptions options = new CompilerOptions(Compiler.getDefaultOptions(Locale.getDefault()));\r", "-\t\t\tParser parser = new Parser(lookupEnvironment.problemReporter, false, options.getAssertMode());\r", "+\t\t\tParser parser = new Parser(lookupEnvironment.problemReporter);\r", "-\t\t\t\tunits[suppliedLength+i] = parsedUnit;\r", "-\t\t\t\tlookupEnvironment.buildTypeBindings(parsedUnit);\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\t\r", "-\t\t// complete type bindings (ie. connect super types) and remember them\r", "-\t\tfor (int i = 0; i < suppliedLength; i++) {\r", "-\t\t\tif (!suppliedTypes[i].isBinaryType()) { // note that binary types have already been remembered above\r", "-\t\t\t\tCompilationUnitDeclaration parsedUnit = units[i];\r", "-\t\t\t\tif (parsedUnit != null) {\r", "-\t\t\t\t\t// must start with the top level type\r", "-\t\t\t\t\tISourceType topLevelType = (ISourceType) suppliedTypes[i];\r", "-\t\t\t\t\tsuppliedTypes[i] = null; // no longer needed pass this point\t\t\t\t\r", "-\t\t\t\t\twhile (topLevelType.getEnclosingType() != null)\r", "-\t\t\t\t\t\ttopLevelType = topLevelType.getEnclosingType();\r", "-\t\t\t\t\ttry {\r", "-\t\t\t\t\t\tlookupEnvironment.completeTypeBindings(parsedUnit, false);\r", "-\t\t\t\t\t\trememberWithMemberTypes(topLevelType, parsedUnit.types[0].binding);\r", "-\t\t\t\t\t} catch (AbortCompilation e) {\r", "-\t\t\t\t\t\t// classpath problem for this type: ignore\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\tfor (int i = 0; i < sourceLength; i++) {\r", "-\t\t\tCompilationUnitDeclaration parsedUnit = units[suppliedLength+i];\r", "-\t\t\tif (parsedUnit != null) {\r", "-\t\t\t\tlookupEnvironment.completeTypeBindings(parsedUnit, false);\r", "+\t\t\t\tunits[++count] = parsedUnit;\r", "+\t\t\t\tlookupEnvironment.buildTypeBindings(units[count]);\r", "-\t\t\t\tICompilationUnit sourceUnit = sourceUnits[i];\r", "-\t\t\t\tsourceUnits[i] = null; // no longer needed pass this point\r", "+\t\tfor (int i = 0; i <= count; i++)\r", "+\t\t\tlookupEnvironment.completeTypeBindings(units[i], false);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80586fe49cb6a48dbf025c256a42b4b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/HierarchyResolver.java", "commitBeforeChange": "7e5cc03e445550d3cbc10c611218c79332074276", "commitAfterChange": "c57706d05dc3654769cca2053ff9cb20fb0a6664", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \r public void resolve(IGenericType[] suppliedTypes, ICompilationUnit[] sourceUnits)", "signatureAfterChange": "\r \r public void resolve(IGenericType[] suppliedTypes, ICompilationUnit[] sourceUnits)", "diff": ["-\t\t\r", "-\t\t// build type bindings\r", "+\t\tint count = -1;\r", "+\t\t\t\tsuppliedTypes[i] = null; // no longer needed pass this point\r", "+\t\t\t\tsuppliedTypes[i] = null; // no longer needed pass this point\t\t\t\t\r", "-\t\t\t\tunits[i] = SourceTypeConverter.buildCompilationUnit(new ISourceType[]{topLevelType}, false, true, lookupEnvironment.problemReporter, result);\r", "-\t\t\t\tif (units[i] != null) {\r", "+\t\t\t\tunits[++count] = SourceTypeConverter.buildCompilationUnit(topLevelType, false, true, lookupEnvironment.problemReporter, result);\r", "+\r", "+\t\t\t\tif (units[count] == null) {\r", "+\t\t\t\t\tcount--;\r", "+\t\t\t\t} else {\r", "-\t\t\t\t\t\tlookupEnvironment.buildTypeBindings(units[i]);\r", "+\t\t\t\t\t\tlookupEnvironment.buildTypeBindings(units[count]);\r", "+\t\t\t\t\t\trememberWithMemberTypes(topLevelType, units[count].types[0].binding);\r", "+\t\t\tsourceUnits[i] = null; // no longer needed pass this point\r", "-\t\t\tCompilerOptions options = new CompilerOptions(Compiler.getDefaultOptions(Locale.getDefault()));\r", "-\t\t\tParser parser = new Parser(lookupEnvironment.problemReporter, false, options.getAssertMode());\r", "+\t\t\tParser parser = new Parser(lookupEnvironment.problemReporter);\r", "-\t\t\t\tunits[suppliedLength+i] = parsedUnit;\r", "-\t\t\t\tlookupEnvironment.buildTypeBindings(parsedUnit);\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\t\r", "-\t\t// complete type bindings (ie. connect super types) and remember them\r", "-\t\tfor (int i = 0; i < suppliedLength; i++) {\r", "-\t\t\tif (!suppliedTypes[i].isBinaryType()) { // note that binary types have already been remembered above\r", "-\t\t\t\tCompilationUnitDeclaration parsedUnit = units[i];\r", "-\t\t\t\tif (parsedUnit != null) {\r", "-\t\t\t\t\t// must start with the top level type\r", "-\t\t\t\t\tISourceType topLevelType = (ISourceType) suppliedTypes[i];\r", "-\t\t\t\t\tsuppliedTypes[i] = null; // no longer needed pass this point\t\t\t\t\r", "-\t\t\t\t\twhile (topLevelType.getEnclosingType() != null)\r", "-\t\t\t\t\t\ttopLevelType = topLevelType.getEnclosingType();\r", "-\t\t\t\t\ttry {\r", "-\t\t\t\t\t\tlookupEnvironment.completeTypeBindings(parsedUnit, false);\r", "-\t\t\t\t\t\trememberWithMemberTypes(topLevelType, parsedUnit.types[0].binding);\r", "-\t\t\t\t\t} catch (AbortCompilation e) {\r", "-\t\t\t\t\t\t// classpath problem for this type: ignore\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\tfor (int i = 0; i < sourceLength; i++) {\r", "-\t\t\tCompilationUnitDeclaration parsedUnit = units[suppliedLength+i];\r", "-\t\t\tif (parsedUnit != null) {\r", "-\t\t\t\tlookupEnvironment.completeTypeBindings(parsedUnit, false);\r", "+\t\t\t\tunits[++count] = parsedUnit;\r", "+\t\t\t\tlookupEnvironment.buildTypeBindings(units[count]);\r", "-\t\t\t\tICompilationUnit sourceUnit = sourceUnits[i];\r", "-\t\t\t\tsourceUnits[i] = null; // no longer needed pass this point\r", "+\t\tfor (int i = 0; i <= count; i++)\r", "+\t\t\tlookupEnvironment.completeTypeBindings(units[i], false);\r"]}], "num": 18843}