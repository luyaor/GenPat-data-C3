{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4fed18254ff1dfc85a67b1a78176188d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27d7ca1288996513a55fc336a5dd02f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "ee73272992444a9c8e6586ce5a37f5dc6d6e8bd9", "commitAfterChange": "f598d68e65d421b1e902e4d71831d57a9b4e73ab", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tprivate void verifyNameBindings(Name name)", "signatureAfterChange": " \tprivate void verifyNameBindings(Name name)", "diff": ["+\t\t\tint nameStart = name.getStartPosition();", "-\t\t\t\tassertNull(this.prefix+name+\" binding should be null!\", binding);", "+\t\t\t\tassumeNull(this.prefix+name+\" binding at <\"+nameStart+\"> should be null!\", binding);", "-\t\t\t\tassertNotNull(this.prefix+name+\" binding was not found!\", binding);", "+\t\t\t\tassumeNotNull(this.prefix+name+\" binding at <\"+nameStart+\"> was not found!\", binding);", "+\t\t\t\tint simpleNameStart = simpleName.getStartPosition();", "-\t\t\t\t\tassertNull(this.prefix+simpleName+\" binding should be null!\", binding);", "+\t\t\t\t\tassumeNull(this.prefix+simpleName+\" binding at <\"+simpleNameStart+\"> should be null!\", binding);", "-\t\t\t\t\tassertNotNull(this.prefix+simpleName+\" binding was not found!\", binding);", "+\t\t\t\t\tassumeNotNull(this.prefix+simpleName+\" binding at <\"+simpleNameStart+\"> was not found!\", binding);", "-\t\t\t\t\tassertEquals(this.prefix+\"Wrong binding type\", IBinding.PACKAGE, binding.getKind());", "+\t\t\t\t\tassumeEquals(this.prefix+\"Wrong binding type at <\"+simpleNameStart+\">\", IBinding.PACKAGE, binding.getKind());", "-\t\t\t\t\tassertNull(this.prefix+name+\" binding should be null!\", binding);", "+\t\t\t\t\tassumeNull(this.prefix+name+\" binding at <\"+nameStart+\"> should be null!\", binding);", "-\t\t\t\t\tassertNotNull(this.prefix+name+\" binding was not found!\", binding);", "+\t\t\t\t\tassumeNotNull(this.prefix+name+\" binding at <\"+nameStart+\"> was not found!\", binding);", "-\t\t\t\t\tassertEquals(this.prefix+\"Wrong binding type\", IBinding.PACKAGE, binding.getKind());", "+\t\t\t\t\tassumeEquals(this.prefix+\"Wrong binding type at <\"+nameStart+\">\", IBinding.PACKAGE, binding.getKind());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f2050e4e7085de8210bde71b1cb0d06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "ee73272992444a9c8e6586ce5a37f5dc6d6e8bd9", "commitAfterChange": "f598d68e65d421b1e902e4d71831d57a9b4e73ab", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tprivate void verifyBindings(TagElement tagElement)", "signatureAfterChange": " \tprivate void verifyBindings(TagElement tagElement)", "diff": ["+\t\tint tagElementStart = tagElement.getStartPosition();", "-//\t\tASTNode previousFragment = null;", "+\t\t\tint fragmentStart = fragment.getStartPosition();", "-\t\t\t\t\t\tassertTrue(this.prefix+\"Reference in '\"+tagElement+\"' should be bound!\", text.getText().trim().startsWith(\"Unknown\"));", "+\t\t\t\t\t\tassumeTrue(this.prefix+\"Reference at <\"+fragmentStart+\"> in '\"+fragment+\"' should be bound!\", text.getText().trim().startsWith(\"Unknown\"));", "-\t\t\t\t\t\tassertFalse(this.prefix+\"Unknown reference in '\"+tagElement+\"' should NOT be bound!\", text.getText().trim().startsWith(\"Unknown\"));", "+\t\t\t\t\t\tassumeTrue(this.prefix+\"Unknown reference at <\"+fragmentStart+\"> in '\"+fragment+\"' should NOT be bound!\", !text.getText().trim().startsWith(\"Unknown\"));", "-//\t\t\t\t\tverifyNameBindings(name.getQualifier());", "-//\t\t\t\t\tpreviousFragment = fragment;", "-\t\t\t\t\t\tassertNotNull(this.prefix+\"\"+memberRef.getName()+\" binding was not found!\", memberRef.getName().resolveBinding());", "+\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+memberRef.getName()+\" binding at <\"+fragmentStart+\"> was not found!\", memberRef.getName().resolveBinding());", "-\t\t\t\t\t\tassertNotNull(this.prefix+\"\"+methodRef.getName()+\" binding was not found!\", methodRef.getName().resolveBinding());", "+\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+methodRef.getName()+\" binding at <\"+fragmentStart+\"> was not found!\", methodRef.getName().resolveBinding());", "-\t\t\t\t\t\t\tassertNotNull(this.prefix+\"\"+param.getType()+\" binding was not found!\", param.getType().resolveBinding());", "+\t\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+param.getType()+\" binding at <\"+fragmentStart+\"> was not found!\", param.getType().resolveBinding());", "-//\t\t\t\tpreviousFragment = fragment;", "-\t\tassertTrue(this.prefix+\"Reference in '\"+tagElement+\"' should be bound!\", (!resolvedBinding || previousBinding != null));", "+\t\tassumeTrue(this.prefix+\"Reference at <\"+tagElementStart+\"> in '\"+tagElement+\"' should be bound!\", (!resolvedBinding || previousBinding != null));"]}], "num": 51814}