{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b053106ba0b43da9598fb6e41a85ac58", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aade2d83eedb8c0537e449d410514e06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "d5c3de1bf49901f78640f1692fd5e63eca3fdc62", "commitAfterChange": "59d1426d6ce986de5d867421d1fe44ed55b3b34c", "methodNumberBeforeChange": 310, "methodNumberAfterChange": 310, "signatureBeforeChange": " \tpublic void test0663() throws JavaModelException", "signatureAfterChange": " \tpublic void test0663() throws JavaModelException", "diff": ["-\t\t\tString key = variableBinding.getKey();", "+\t\t\t// String key = variableBinding.getKey();", "-\t\t\tString key2 = variableBinding.getKey();", "-\t\t\tassertFalse(\"Keys should not be equals\", key2.equals(key));", "+\t\t\t// String key2 = variableBinding.getKey();", "+\t\t\t//assertFalse(\"Keys should not be equals\", key2.equals(key));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0f20f5be7f25e4675f2d388ccb43dde", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter18Test.java", "commitBeforeChange": "6908ed269579bdf5bd73625206374e9ed19646b4", "commitAfterChange": "bea7b508525f70d680963772996546f2bcf8018f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void _test0004() throws JavaModelException", "signatureAfterChange": " \tpublic void test0004() throws JavaModelException", "diff": ["-\tpublic void _test0004() throws JavaModelException {", "+\tpublic void test0004() throws JavaModelException {", "-\t\tCompilationUnit cu = (CompilationUnit) buildAST(contents, this.workingCopy);", "-\t\tTypeDeclaration typedeclaration = (TypeDeclaration) getASTNode(cu, 0);", "-\t\tArrayType type = (ArrayType) ((ParameterizedType) typedeclaration.superInterfaceTypes().get(0)).typeArguments().get(0);", "+\t\tArrayType type = (ArrayType) buildAST(contents, this.workingCopy);"]}], "num": 29774}