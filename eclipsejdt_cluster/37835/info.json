{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d8fe13c0d9f8e3deecc84214b95d086a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c49de4a084a401c21599230ae6243fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Annotation.java", "commitBeforeChange": "4536803cd5b2a0c257b0b0ad983aa6ff48927661", "commitAfterChange": "cd2843c8a5aedbfeba5f759ec4b2577ec3055c26", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic static void checkAnnotationValue(TypeBinding requiredType, TypeBinding annotationType, char[] memberName, Expression memberValue, Scope scope)", "signatureAfterChange": " \t \tpublic static void checkAnnotationValue(TypeBinding requiredType, TypeBinding annotationType, char[] memberName, Expression memberValue, Scope scope)", "diff": ["-\t\t\t\tscope.problemReporter().typeMismatchError(memberValueType, requiredType, memberValue);", "-\t\t\t\treturn; // may allow to proceed to find more errors at once", "+\t\t\t\tif (!(requiredType.isArrayType() && requiredType.dimensions() == 1 && memberValueType.isCompatibleWith(requiredType.leafComponentType()))) {", "+\t\t\t\t\tscope.problemReporter().typeMismatchError(memberValueType, requiredType, memberValue);", "+\t\t\t\t\treturn; // may allow to proceed to find more errors at once", "+\t\t\t\t}", "-\t\t\t\tscope.compilationUnitScope().recordTypeConversion(requiredType, memberValueType);", "+\t\t\t\tscope.compilationUnitScope().recordTypeConversion(requiredType.leafComponentType(), memberValueType.leafComponentType());", "+\t\t\t\tmemberValue.computeConversion(scope, requiredType, memberValueType);\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fc04c5fcd5a3589c127d158133e0ffd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Annotation.java", "commitBeforeChange": "e90dfab1761bccc6555735320e283aaf05372db5", "commitAfterChange": "2360be30596f096b30c40d59f0ef4f349bd446d6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic static void checkAnnotationValue(TypeBinding requiredType, TypeBinding annotationType, char[] memberName, Expression memberValue, Scope scope)", "signatureAfterChange": " \t \tpublic static void checkAnnotationValue(TypeBinding requiredType, TypeBinding annotationType, char[] memberName, Expression memberValue, Scope scope)", "diff": ["+\t\tTypeBinding memberValueType = memberValue.resolvedType;", "+\t\tif (memberValueType != null) {", "+\t\t\tif (!memberValueType.isCompatibleWith(requiredType)) {", "+\t\t\t\tscope.problemReporter().typeMismatchError(memberValueType, requiredType, memberValue);", "+\t\t\t\treturn; // may allow to proceed to find more errors at once", "+\t\t\t} else {", "+\t\t\t\tscope.compilationUnitScope().recordTypeConversion(requiredType, memberValueType);", "+\t\t\t}", "+\t\t}", "+\t\t"]}], "num": 37835}