{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7d218b389af8a9d7da0bb8ccc66f54c6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "432fb04b56ff93efd9fe9f2b98cadf25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayInitializer.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic TypeBinding resolveTypeExpecting(BlockScope scope, TypeBinding expectedType)", "signatureAfterChange": "  \tpublic TypeBinding resolveTypeExpecting(BlockScope scope, TypeBinding expectedType)", "diff": ["-\t\t\t\tif (elementType != expressionType) // must call before computeConversion() and typeMismatchError()", "+\t\t\t\tif (TypeBinding.notEquals(elementType, expressionType)) // must call before computeConversion() and typeMismatchError()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b40f92d5cf0d93fe301ca1360de44a54", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tprivate TypeBinding resolveTypeForQualifiedAllocationExpression(BlockScope scope)", "signatureAfterChange": " \t \tprivate TypeBinding resolveTypeForQualifiedAllocationExpression(BlockScope scope)", "diff": ["-\t\t\tif (expectedType != enclosingInstanceType) // must call before computeConversion() and typeMismatchError()", "+\t\t\tif (TypeBinding.notEquals(expectedType, enclosingInstanceType)) // must call before computeConversion() and typeMismatchError()"]}], "num": 29279}