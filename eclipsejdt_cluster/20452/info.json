{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4ca37124ac92ea1176759b40117cf698", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2114b5b88482b92078a33814d1c3a8da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "397253fa7cf7d0509ffaa48aff6b8a5dde06129d", "commitAfterChange": "bf0328478aa051113a9962f47734688c8e2ec095", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " private void getAllSuperInterfaces0(IType type, ArrayList supers)", "signatureAfterChange": " private ArrayList getAllSuperInterfaces0(IType type, ArrayList supers)", "diff": ["-private void getAllSuperInterfaces0(IType type, ArrayList supers) {", "+private ArrayList getAllSuperInterfaces0(IType type, ArrayList supers) {", "-\tif (superinterfaces != null && superinterfaces.length != 0) {", "+\tif (superinterfaces == null) // type is not part of the hierarchy", "+\t\treturn supers;", "+\tif (superinterfaces.length != 0) {", "+\t\tif (supers == null)", "+\t\t\tsupers = new ArrayList();", "-\t\t\tgetAllSuperInterfaces0(superinterfaces[i], supers);", "+\t\t\tsupers = getAllSuperInterfaces0(superinterfaces[i], supers);", "-\t\tgetAllSuperInterfaces0(superclass, supers);", "+\t\tsupers = getAllSuperInterfaces0(superclass, supers);", "+\treturn supers;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c132dc68cf1d24477f38c1a15bc184b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "397253fa7cf7d0509ffaa48aff6b8a5dde06129d", "commitAfterChange": "bf0328478aa051113a9962f47734688c8e2ec095", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " private void getAllSupertypes0(IType type, ArrayList supers)", "signatureAfterChange": " private ArrayList getAllSupertypes0(IType type, ArrayList supers)", "diff": ["-private void getAllSupertypes0(IType type, ArrayList supers) {", "+private ArrayList getAllSupertypes0(IType type, ArrayList supers) {", "-\tif (superinterfaces != null && superinterfaces.length != 0) {", "+\tif (superinterfaces == null) // type is not part of the hierarchy", "+\t\treturn supers;", "+\tif (superinterfaces.length != 0) {", "+\t\tif (supers == null)", "+\t\t\tsupers = new ArrayList();", "-\t\t\tgetAllSuperInterfaces0(superinterfaces[i], supers);", "+\t\t\tsupers = getAllSuperInterfaces0(superinterfaces[i], supers);", "+\t\tif (supers == null)", "+\t\t\tsupers = new ArrayList();", "-\t\tgetAllSupertypes0(superclass, supers);", "+\t\tsupers = getAllSupertypes0(superclass, supers);", "+\treturn supers;"]}], "num": 20452}