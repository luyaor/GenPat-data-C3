{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "98d20123d12d9e4fee55fab36581f4b9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d5ceda9dd35d4b5b5f499dce43103c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "9ccc53063dda8b7e1afdde95ae36a8417c582abc", "commitAfterChange": "7143e72571bb2e6a2e74f6791210a97b375b5ab6", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic static SearchPattern createAndSearchPattern(final SearchPattern leftPattern, final SearchPattern rightPattern)", "signatureAfterChange": " \tpublic static SearchPattern createAndSearchPattern(final SearchPattern leftPattern, final SearchPattern rightPattern)", "diff": ["-\t\t\tpublic void decodeIndexKey(char[] key) {", "-\t\t\t\tcurrent.decodeIndexKey(key);", "-\t\t\t}", "-\t\t\tpublic char[] encodeIndexKey() {", "-\t\t\t\treturn current.encodeIndexKey();", "-\t\t\t}", "-\t\t\tpublic SearchPattern getBlankPattern() {", "-\t\t\t\treturn current.getBlankPattern();", "-\t\t\t}", "-\t\t\tpublic char[][] getMatchCategories() {", "-\t\t\t\treturn current.getMatchCategories();", "-\t\t\t}", "-\t\t\tpublic int getMatchRule() {", "-\t\t\t\treturn current.getMatchRule();", "+\t\t\tpublic SearchPattern currentPattern() {", "+\t\t\t\treturn current;", "-\t\t\t}", "-\t\t\tpublic boolean matchesDecodedPattern(SearchPattern decodedPattern) {", "-\t\t\t\treturn current.matchesDecodedPattern(decodedPattern);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9e7beefa0583d5da2c52c908bb70c22", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AddJarFileToIndex.java", "commitBeforeChange": "70b32514588b091b133b82607c10c8c78d5b8fe3", "commitAfterChange": "aaa63e79319475935e2167f567ed10fa3d10e895", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\t\t\t\t\t\tJarFileEntryDocument entryDocument = new JarFileEntryDocument(ze, null, zipFilePath);", "-\t\t\t\t\t\t\tindexedFileNames.put(entryDocument.getName(), EXISTS);", "+\t\t\t\t\t\t\tJavaSearchDocument entryDocument = new JavaSearchDocument(ze, zipFilePath, null, null);", "+\t\t\t\t\t\t\tindexedFileNames.put(entryDocument.getPath(), EXISTS);", "+\t\t\t\tSearchParticipant participant = SearchEngine.getDefaultSearchParticipant();", "-\t\t\t\t\t\tSearchParticipant participant = SearchEngine.getDefaultSearchParticipant();", "-\t\t\t\t\t\tJarFileEntryDocument entryDocument = new JarFileEntryDocument(ze, null, zipFilePath);", "-\t\t\t\t\t\tSearchDocument document = new JavaSearchDocument(entryDocument.getName(), participant) {", "-\t\t\t\t\t\t\tpublic byte[] getByteContents() {", "-\t\t\t\t\t\t\t\treturn classFileBytes;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tpublic String toString() {", "-\t\t\t\t\t\t\t\treturn \"JarEntryDocument for \" + getPath(); //$NON-NLS-1$", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t};", "-\t\t\t\t\t\tthis.manager.indexDocument(document, participant, index);", "+\t\t\t\t\t\tJavaSearchDocument entryDocument = new JavaSearchDocument(ze, zipFilePath, classFileBytes, participant);", "+\t\t\t\t\t\tthis.manager.indexDocument(entryDocument, participant, index);"]}], "num": 50476}