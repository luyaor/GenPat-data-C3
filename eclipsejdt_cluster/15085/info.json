{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d93dbeb516d8e5255beb473ff6c11b6e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5af928394fa522fd642f8d277b08a9d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "204668dea8f27b8498b13996f1332d4610d869bb", "commitAfterChange": "3d41ce4b49b9059b7e12f0754609f08de9a28a4f", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " public void test0082_shortcut_boolean_expression()", "signatureAfterChange": " public void test0082_shortcut_boolean_expression()", "diff": ["-\t\t\"The variable o cannot be null; it was either set to a non-null value or assumed to be non-null when last used\\n\" + ", "+\t\t\"Null comparison always yields false: The variable o cannot be null at this location\\n\" + ", "-\t\t\"The variable o cannot be null; it was either set to a non-null value or assumed to be non-null when last used\\n\" + ", "+\t\t\"Null comparison always yields false: The variable o cannot be null at this location\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ca55a9c54dc7cdb2efab0136795a42b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "204668dea8f27b8498b13996f1332d4610d869bb", "commitAfterChange": "3d41ce4b49b9059b7e12f0754609f08de9a28a4f", "methodNumberBeforeChange": 299, "methodNumberAfterChange": 300, "signatureBeforeChange": " public void test0956_assert_combined()", "signatureAfterChange": " public void test0956_assert_combined()", "diff": ["-\t\t\"The variable o can only be null; it was either set to null or checked for null when last used\\n\" + ", "+\t\t\"Null comparison always yields false: The variable o can only be null at this location\\n\" + ", "-\t\t\"The variable o cannot be null; it was either set to a non-null value or assumed to be non-null when last used\\n\" + ", "+\t\t\"Null comparison always yields false: The variable o cannot be null at this location\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebeb5f7143bb2fa7f7179737b65920fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "3fc8f68d913a6f6e40f71f3d7dea34c1f2893e07", "commitAfterChange": "2808c167f87e5191890bb92d5e4f0af641d2f6e4", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " protected void popElement(int kind)", "signatureAfterChange": " protected void popElement(int kind)", "diff": ["-// the name is a misnomer, we allow \"pop\"s not just at the TOS. Lambda wants to be sticky till fully reduced, however we do want other elements poppped at the right point, so ... ", "+// the name is a misnomer, we allow \"pop\"s not just at the TOS. Lambda wants to be sticky till fully reduced, however we do want other elements popped at the right point, so ... ", "-\t\t\tstackPointer --;", "+\t\t\tif (--stackPointer < 0) break;"]}], "num": 15085}