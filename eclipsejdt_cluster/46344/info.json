{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d78d173ca54e7cb5b25240e001a7da70", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "357a2624225415f41a7b53d4a31613fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "d4a90dd90535197bda12b521c603853c2f8eb60c", "commitAfterChange": "d473849794f95ce2b5cbae060ffe683ee81ff056", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  public MatchLocatorParser(ProblemReporter problemReporter)", "signatureAfterChange": "  public MatchLocatorParser(ProblemReporter problemReporter, MatchLocator locator)", "diff": ["-public MatchLocatorParser(ProblemReporter problemReporter) {", "+public MatchLocatorParser(ProblemReporter problemReporter, MatchLocator locator) {", "+", "+\tthis.patternLocator = locator.patternLocator; ", "+\tif ((locator.matchContainer & PatternLocator.CLASS_CONTAINER) != 0) {", "+\t\tthis.localDeclarationVisitor = (locator.matchContainer & PatternLocator.METHOD_CONTAINER) != 0", "+\t\t\t? new ClassAndMethodDeclarationVisitor()", "+\t\t\t: new ClassButNoMethodDeclarationVisitor();", "+\t} else {", "+\t\tthis.localDeclarationVisitor = (locator.matchContainer & PatternLocator.METHOD_CONTAINER) != 0", "+\t\t\t? new MethodButNoClassDeclarationVisitor()", "+\t\t\t: new NoClassNoMethodDeclarationVisitor();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "497362bb5b991785c23a935d8877e2f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "0271031e5844c32df2646c3a81a2c00b29e7d251", "commitAfterChange": "14c82497ad7236bee9eedf2d9ff4867e4a47ff21", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void parseBodies(CompilationUnitDeclaration unit)", "signatureAfterChange": " public void parseBodies(CompilationUnitDeclaration unit)", "diff": ["-\tif (types != null) {", "-\t\tfor (int i = 0; i < types.length; i++) {", "-\t\t\tTypeDeclaration type = types[i];", "-\t\t\tif ((this.matchSet.matchContainer & SearchPattern.COMPILATION_UNIT) != 0 // type declaration in compilation unit", "-\t\t\t\t|| (this.matchSet.matchContainer & SearchPattern.CLASS) != 0\t\t\t// or in another type", "-\t\t\t\t|| (this.matchSet.matchContainer & SearchPattern.METHOD) != 0) {\t\t// or in a local class", "-\t\t\t\t\t", "-\t\t\t\tthis.matchSet.checkMatching(type);", "-\t\t\t}", "-\t\t\tthis.parseBodies(type, unit);", "+\tif (types == null) return;", "+", "+\tif (this.matchContainer != this.matchSet.matchContainer || this.localDeclarationVisitor == null) {", "+\t\tthis.matchContainer = this.matchSet.matchContainer;", "+\t\tif ((this.matchContainer & SearchPattern.CLASS) != 0) {", "+\t\t\tthis.localDeclarationVisitor = (this.matchContainer & SearchPattern.METHOD) != 0", "+\t\t\t\t? new ClassAndMethodDeclarationVisitor()", "+\t\t\t\t: new ClassButNoMethodDeclarationVisitor();", "+\t\t} else {", "+\t\t\tthis.localDeclarationVisitor = (this.matchContainer & SearchPattern.METHOD) != 0", "+\t\t\t\t? new MethodButNoClassDeclarationVisitor()", "+\t\t\t\t: new NoClassNoMethodDeclarationVisitor();", "+\t}", "+", "+\tfor (int i = 0; i < types.length; i++) {", "+\t\tTypeDeclaration type = types[i];", "+\t\tthis.matchSet.checkMatching(type);", "+\t\tthis.parseBodies(type, unit);"]}], "num": 46344}