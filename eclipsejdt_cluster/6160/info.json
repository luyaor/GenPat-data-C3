{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3ab7dbd6ca5edcfca92edd70c982e193", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4026f945fd9206eb478e8899c6b04f5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/ReadAnnotationTests2.java", "commitBeforeChange": "d8339605195e4a27842529cbdd4cfc67b77ac59c", "commitAfterChange": "ce1a50c038f410b16a75eb29a8e1c64f33a61360", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tpublic void _testAnnotations()", "signatureAfterChange": " \t \tpublic void _testAnnotations()", "diff": ["-\t\tTestCase.assertNotNull(\"failed to locate 'question.AnnotationTest'\", typeBinding);", "-\t\tTestCase.assertEquals(\"Type name mismatch\", \"question.AnnotationTest\", typeBinding.getQualifiedName());", "+\t\tassertNotNull(\"failed to locate 'question.AnnotationTest'\", typeBinding);", "+\t\tassertEquals(\"Type name mismatch\", \"question.AnnotationTest\", typeBinding.getQualifiedName());", "-\t\tTestCase.assertEquals(5, fieldBindings.length);", "+\t\tassertEquals(5, fieldBindings.length);", "-\t\t\tTestCase.assertEquals(\"field name mismatch\", name, fieldDecl.getName());", "+\t\t\tassertEquals(\"field name mismatch\", name, fieldDecl.getName());", "-\t\tTestCase.assertEquals(7, methodBindings.length);", "+\t\tassertEquals(7, methodBindings.length);", "-\t\t\tTestCase.assertEquals(\"method name mismatch\", name, methodDecl.getName());", "+\t\t\tassertEquals(\"method name mismatch\", name, methodDecl.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "491487f90dea5871a19ec0541c346d4f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/annotations/readannotation/ReadAnnotationProcessor.java", "commitBeforeChange": "d8339605195e4a27842529cbdd4cfc67b77ac59c", "commitAfterChange": "ce1a50c038f410b16a75eb29a8e1c64f33a61360", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void process()", "signatureAfterChange": "  \tpublic void process()", "diff": ["-\t\t\tTestCase.assertNotNull(\"failed to locate type 'question.AnnotationTest'\", typeDecl);", "+\t\t\tAssert.assertNotNull(\"failed to locate type 'question.AnnotationTest'\", typeDecl);", "-\t\t\t\tTestCase.assertEquals(\"Type name mismatch\", \"question.AnnotationTest\", typeDecl.getQualifiedName());\t\t\t", "+\t\t\t\tAssert.assertEquals(\"Type name mismatch\", \"question.AnnotationTest\", typeDecl.getQualifiedName());\t\t\t", "-\t\t\t\tTestCase.assertEquals(5, fieldDecls.size());", "+\t\t\t\tAssert.assertEquals(5, fieldDecls.size());", "-\t\t\t\t\tTestCase.assertEquals(\"field name mismatch\", name, fieldDecl.getSimpleName());", "+\t\t\t\t\tAssert.assertEquals(\"field name mismatch\", name, fieldDecl.getSimpleName());", "-\t\t\t\tTestCase.assertEquals(7, methodDecls.size());", "+\t\t\t\tAssert.assertEquals(7, methodDecls.size());", "-\t\t\t\t\tTestCase.assertEquals(\"method name mismatch\", name, methodDecl.getSimpleName());", "+\t\t\t\t\tAssert.assertEquals(\"method name mismatch\", name, methodDecl.getSimpleName());"]}], "num": 6160}