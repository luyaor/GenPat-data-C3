{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3de21a2a3077a96ac74e3272e745a8a9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50064f68faf84a8627e793a323c74870", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedQualifiedTypeReference.java", "commitBeforeChange": "8e43318d18f951ae3a3314bdbfe107991355bc65", "commitAfterChange": "6a28357528f11445ee351675b8133965f3b96037", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope, boolean checkBounds)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope, boolean checkBounds)", "diff": ["-\t\t\t\tif (currentType.isGenericType()) {", "+\t\t\t\tReferenceBinding currentErasure = (ReferenceBinding)currentType.erasure();", "+\t\t\t\tif (currentErasure.isGenericType()) {", "-\t\t\t\t\t\tscope.problemReporter().parameterizedMemberTypeMissingArguments(this, scope.environment().createParameterizedType((ReferenceBinding)currentType.erasure(), null, qualifiedType));", "+\t\t\t\t\t\tscope.problemReporter().parameterizedMemberTypeMissingArguments(this, scope.environment().createParameterizedType(currentErasure, null, qualifiedType));", "-\t   \t\t\t    qualifiedType = scope.environment().createRawType(currentType, qualifiedType); // raw type", "+\t   \t\t\t    qualifiedType = scope.environment().createRawType(currentErasure, qualifiedType); // raw type", "-\t\t\t\t\t\t\t\t\t\t\t\t\t? scope.environment().createParameterizedType((ReferenceBinding)currentType.erasure(), null, qualifiedType)", "+\t\t\t\t\t\t\t\t\t\t\t\t\t? scope.environment().createParameterizedType(currentErasure, null, qualifiedType)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff45f348048f1474e803dedbff9511f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedQualifiedTypeReference.java", "commitBeforeChange": "0f27abdc440c19d22cca8de897116ef5e59c08c4", "commitAfterChange": "b1c884262e1cb2a37d9804b581d279b5a78777c8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\t\t\t\t", "-   \t\t\t    if (enclosingType != null && enclosingType.isParameterizedType()) {", "-\t\t\t\t\tscope.problemReporter().parameterizedMemberTypeMissingArguments(this, scope.createParameterizedType(currentType, null, enclosingType));", "-\t\t\t\t\treturn null;", "+\t\t\t\tif (currentType.erasure().isGenericType()) {", "+\t   \t\t\t    if (enclosingType != null && enclosingType.isParameterizedType()) {", "+\t\t\t\t\t\tscope.problemReporter().parameterizedMemberTypeMissingArguments(this, scope.createParameterizedType(currentType, null, enclosingType));", "+\t\t\t\t\t\treturn null;", "+\t\t\t\t\t}", "+\t   \t\t\t    this.resolvedType = scope.environment().createRawType(currentType, enclosingType); // raw type", "-   \t\t\t    this.resolvedType = scope.environment().createRawType(currentType, enclosingType); // raw type"]}], "num": 71645}