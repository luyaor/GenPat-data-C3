{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c5f76f2995a16d5d0612849361d06368", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f8d11ca6de6c7292058a6f3dec0384a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "d0a6b322fe5ab50f982eb9903d93b4bae700d1e4", "commitAfterChange": "e7a500282eed24e85c3ed97d190d16fcff77b336", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic void searchAllTypeNames( \t\tfinal char[][] qualifications,  \t\tfinal char[][] typeNames, \t\tfinal int matchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": " \tpublic void searchAllTypeNames( \t\tfinal char[][] qualifications,  \t\tfinal char[][] typeNames, \t\tfinal int matchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\t\t\t\t\t\tfinal char[] contents = workingCopy.getBuffer().getCharacters();", "-\t\t\t\t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit unit = new org.eclipse.jdt.internal.compiler.env.ICompilationUnit() {", "-\t\t\t\t\t\t\tpublic char[] getContents() {", "-\t\t\t\t\t\t\t\treturn contents;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tpublic char[] getMainTypeName() {", "-\t\t\t\t\t\t\t\treturn null;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tpublic char[][] getPackageName() {", "-\t\t\t\t\t\t\t\treturn null;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tpublic char[] getFileName() {", "-\t\t\t\t\t\t\t\treturn null;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t};", "+\t\t\t\t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit unit = (org.eclipse.jdt.internal.compiler.env.ICompilationUnit) workingCopy;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a2b40af71cb1b211fb6b83b9f4f3580", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeNamesCollector.java", "commitBeforeChange": "d0a6b322fe5ab50f982eb9903d93b4bae700d1e4", "commitAfterChange": "e7a500282eed24e85c3ed97d190d16fcff77b336", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " protected CompilationUnitDeclaration buildBindings(ICompilationUnit compilationUnit, boolean isTopLevelOrMember) throws JavaModelException", "signatureAfterChange": " protected CompilationUnitDeclaration buildBindings(ICompilationUnit compilationUnit, boolean isTopLevelOrMember) throws JavaModelException", "diff": ["-\tfinal IFile file = (IFile) compilationUnit.getResource();", "-\tfinal String fileName = file.getFullPath().lastSegment();", "-\tfinal char[] mainTypeName = Util.getNameWithoutJavaLikeExtension(fileName).toCharArray();", "-", "-\tIBuffer buffer = compilationUnit.getBuffer();", "-\tfinal char[] source = ", "-\t\tcompilationUnit.isWorkingCopy()", "-\t\t\t? (buffer == null ? null : buffer.getCharacters())", "-\t\t\t: Util.getResourceContentsAsCharArray(file);", "-\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit = ", "-\t\tnew org.eclipse.jdt.internal.compiler.env.ICompilationUnit() {", "-\t\t\tpublic char[] getContents() { return source; }", "-\t\t\tpublic char[] getFileName() { return fileName.toCharArray(); }", "-\t\t\tpublic char[] getMainTypeName() { return mainTypeName; }", "-\t\t\tpublic char[][] getPackageName() { return null; }", "-\t\t};", "+\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit = (org.eclipse.jdt.internal.compiler.env.ICompilationUnit) compilationUnit;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "faff36cc948941e004025167bbfaff17", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "d0a6b322fe5ab50f982eb9903d93b4bae700d1e4", "commitAfterChange": "e7a500282eed24e85c3ed97d190d16fcff77b336", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName,  \t\tfinal char[] typeName, \t\tfinal int matchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName,  \t\tfinal char[] typeName, \t\tfinal int matchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\t\t\t\t\t\tfinal char[] contents = workingCopy.getBuffer().getCharacters();", "-\t\t\t\t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit unit = new org.eclipse.jdt.internal.compiler.env.ICompilationUnit() {", "-\t\t\t\t\t\t\tpublic char[] getContents() {", "-\t\t\t\t\t\t\t\treturn contents;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tpublic char[] getMainTypeName() {", "-\t\t\t\t\t\t\t\treturn null;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tpublic char[][] getPackageName() {", "-\t\t\t\t\t\t\t\treturn null;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tpublic char[] getFileName() {", "-\t\t\t\t\t\t\t\treturn null;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t};", "+\t\t\t\t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit unit = (org.eclipse.jdt.internal.compiler.env.ICompilationUnit) workingCopy;"]}], "num": 47391}