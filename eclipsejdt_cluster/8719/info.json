{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2e6d03d2ec95091ffdd62f95c6f2391c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a08e80344e80b8666bec0c3157aa012", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "fe7b697ca16cd240df01b1ad29e35b2693b4b160", "commitAfterChange": "68fbbc2b696126776a21b18e5e10fb30f89536f0", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "signatureAfterChange": "  protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "diff": ["-\t\t\tunitInfo.fTimestamp = ((IFile) original.getUnderlyingResource()).getModificationStamp();", "-\t\t\tif(unitInfo.fTimestamp == IResource.NULL_STAMP){", "-\t\t\t\tthrow new JavaModelException(new JavaModelStatus(IJavaModelStatusConstants.INVALID_RESOURCE));", "+\t\t\ttry {", "+\t\t\t\tunitInfo.fTimestamp = ((IFile) original.getUnderlyingResource()).getModificationStamp();", "+\t\t\t\tif(unitInfo.fTimestamp == IResource.NULL_STAMP){", "+\t\t\t\t\tthrow new JavaModelException(new JavaModelStatus(IJavaModelStatusConstants.INVALID_RESOURCE));", "+\t\t\t\t}", "+\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t// if original element does not exit, ignore", "+\t\t\t\tif (!e.getJavaModelStatus().isDoesNotExist()) {", "+\t\t\t\t\tthrow e;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7082d3497c46b5380bf433cf227b782", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "commitAfterChange": "93b35a5a711d0edb75c141799c4443c91fb39f10", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "signatureAfterChange": "  protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "diff": ["-\t\t\ttry {", "-\t\t\t\tunitInfo.fTimestamp = ((IFile) original.getUnderlyingResource()).getModificationStamp();", "-\t\t\t\tif(unitInfo.fTimestamp == IResource.NULL_STAMP){", "-\t\t\t\t\tthrow new JavaModelException(new JavaModelStatus(IJavaModelStatusConstants.INVALID_RESOURCE));", "-\t\t\t\t}", "-\t\t\t} catch (JavaModelException e) {", "-\t\t\t\t// if original element does not exit, ignore", "-\t\t\t\tif (!e.getJavaModelStatus().isDoesNotExist()) {", "-\t\t\t\t\tthrow e;", "-\t\t\t\t}", "-\t\t\t}", "+\t\t\t// might be IResource.NULL_STAMP if original does not exist", "+\t\t\tunitInfo.fTimestamp = ((IFile) original.getResource()).getModificationStamp();"]}], "num": 8719}