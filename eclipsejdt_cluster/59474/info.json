{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2b756224e39caecdc87931104c5cfc31", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "661f61b117623ff00bf2fa95c69efab9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "5d2cd7f1076b45eee90e6733e80765abd1df3d6a", "commitAfterChange": "14e86a8141996732826e41cf3c8dd392bb1fd5ba", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": " \tpublic boolean hasClasspathCycle(IClasspathEntry[] preferredClasspath)", "signatureAfterChange": " \tpublic boolean hasClasspathCycle(IClasspathEntry[] preferredClasspath)", "diff": ["-\tpublic boolean hasClasspathCycle(IClasspathEntry[] preferredClasspath) {", "+\tpublic boolean hasClasspathCycle(IClasspathEntry[] preferredClasspath) {// TODO could reuse map and remove first arg", "-\t\tupdateCycleParticipants(preferredClasspath, new ArrayList(2), cycleParticipants, ResourcesPlugin.getWorkspace().getRoot(), new HashSet(2));", "+\t\tupdateCycleParticipants(preferredClasspath, new ArrayList(2), cycleParticipants, ResourcesPlugin.getWorkspace().getRoot(), new HashSet(2), null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75afa9cb0624c1782c629558efb2d9d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "529f18963921708d494a4beb205635d63f23af75", "commitAfterChange": "42e32af12f3c1d5373a125984ae516872123a10c", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": " \tpublic boolean hasClasspathCycle(IClasspathEntry[] preferredClasspath)", "signatureAfterChange": " \tpublic boolean hasClasspathCycle(IClasspathEntry[] preferredClasspath)", "diff": ["-\tpublic boolean hasClasspathCycle(IClasspathEntry[] preferredClasspath) {// TODO could reuse map and remove first arg", "+\tpublic boolean hasClasspathCycle(IClasspathEntry[] preferredClasspath) {", "-\t\tupdateCycleParticipants(preferredClasspath, new ArrayList(2), cycleParticipants, ResourcesPlugin.getWorkspace().getRoot(), new HashSet(2), null);", "+\t\tHashMap preferredClasspaths = new HashMap(1);", "+\t\tpreferredClasspaths.put(this, preferredClasspath);", "+\t\tupdateCycleParticipants(new ArrayList(2), cycleParticipants, ResourcesPlugin.getWorkspace().getRoot(), new HashSet(2), preferredClasspaths);"]}], "num": 59474}