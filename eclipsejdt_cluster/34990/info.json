{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8789509c5b2583c3874895139779a56d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3420d41eec44de38fca021cd9c9bf45b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "71df68ac6bbd7c5b4b673539241b9c1cc905574c", "commitAfterChange": "04c08732703d5f5e97b66e89468d2f87b7f84cff", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic IType findType(String typeName, String packageName, boolean partialMatch, int acceptFlags, boolean considerSecondaryTypes, boolean waitForIndexes, IProgressMonitor monitor)", "signatureAfterChange": " \tpublic IType findType(String typeName, String packageName, boolean partialMatch, int acceptFlags, boolean considerSecondaryTypes, boolean waitForIndexes, IProgressMonitor monitor)", "diff": ["-\t\tIJavaProject project = null;", "+\t\tHashSet projects = null;", "-\t\t\tif (considerSecondaryTypes && project == null) {", "-\t\t\t\tproject = packages[i].getJavaProject();", "+\t\t\tif (considerSecondaryTypes) {", "+\t\t\t\tif (projects == null) projects = new HashSet(3);", "+\t\t\t\tprojects.add(packages[i].getJavaProject());", "-\t\tif (considerSecondaryTypes && project != null) {", "-\t\t\ttype = findSecondaryType(packageName, typeName, project, waitForIndexes, monitor);", "+\t\tif (considerSecondaryTypes && projects != null) {", "+\t\t\tIterator allProjects = projects.iterator();", "+\t\t\twhile (type == null && allProjects.hasNext()) {", "+\t\t\t\ttype = findSecondaryType(packageName, typeName, (IJavaProject) allProjects.next(), waitForIndexes, monitor);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bbd15cab54c1fbb6b36ae70c7ab6a60", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBindingVisitor.java", "commitBeforeChange": "d09fa4802281032dbffe5d54191a48ffcdbfb895", "commitAfterChange": "807a76e3a3770379eee00c55de0aa0f44ab7094a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic static void visit(TypeBindingVisitor visitor, TypeBinding type)", "signatureAfterChange": "  \tpublic static void visit(TypeBindingVisitor visitor, TypeBinding type)", "diff": ["+\t\tSimpleLookupTable visitedCache = visitor.visitedCache;", "+\t\tif (visitedCache == null) {", "+\t\t\tvisitor.visitedCache = new SimpleLookupTable(3);", "+\t\t\tvisitedCache = visitor.visitedCache;", "+\t\t}", "+", "+\t\tObject result = visitedCache.get(type);", "+\t\tif (result == Boolean.TRUE)", "+\t\t\treturn;", "+\t\tvisitedCache.put(type, Boolean.TRUE);"]}], "num": 34990}