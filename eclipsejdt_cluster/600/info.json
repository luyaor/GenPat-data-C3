{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dcc3138117d982aae315d3a8c2e34c16", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "436862bc095bed995480eca2f4f88192", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "36ef129881167aaca524bd32a5aa2c4e26ffd187", "commitAfterChange": "19b7207c9f9b8245eee7ba353b5eb784e8fb1b81", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " \tprotected void toStringAncestors(StringBuffer buffer)", "signatureAfterChange": " \tprotected void toStringAncestors(StringBuffer buffer)", "diff": ["-\t\tJavaElement parent = (JavaElement)this.getParent();", "-\t\tif (parent != null && parent.getParent() != null) {", "+\t\tJavaElement parentElement = (JavaElement)this.getParent();", "+\t\tif (parentElement != null && parentElement.getParent() != null) {", "-\t\t\tparent.toStringInfo(0, buffer, NO_INFO);", "-\t\t\tparent.toStringAncestors(buffer);", "+\t\t\tparentElement.toStringInfo(0, buffer, NO_INFO);", "+\t\t\tparentElement.toStringAncestors(buffer);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d4a573eee107cc105ba3ab6c4eb5bdf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "07e87f4c2f12f879ec7ed457ed90a4c633cae710", "commitAfterChange": "9d2a938921495f9335aff59136f341338ddac647", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  private static void setOutputDir(File inputDir, String dir, int profiles)", "signatureAfterChange": "  private static void setOutputDir(File inputDir, String dir, int profiles)", "diff": ["-\tOUTPUT_DIR = new File(new File(OUTPUT_DIR, ECLIPSE_VERSION), inputDir.getName());", "+\tFile parent = new File(OUTPUT_DIR, ECLIPSE_VERSION);", "+\tif (!parent.exists()) {", "+\t\ttry {", "+\t\t\tint version = Integer.parseInt(ECLIPSE_VERSION.substring(1));", "+\t\t\tFile maintenance = new File(OUTPUT_DIR, \"v\"+(version-1));", "+\t\t\tif (maintenance.exists()) {", "+\t\t\t\tparent = maintenance;", "+\t\t\t}", "+\t\t}", "+\t\tcatch (NumberFormatException nfe) {", "+\t\t\t// skip", "+\t\t}", "+\t}", "+\tOUTPUT_DIR = new File(parent, inputDir.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e103ce06821b569462c4584a20c610f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "309be04a155363e9f398875d6734d13ff5334b6c", "commitAfterChange": "6b58c2063066f4462a27490669b336c2263fae86", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 41, "signatureBeforeChange": " protected void reportMatching(TypeDeclaration type, IJavaElement parent, int accuracy, MatchingNodeSet nodeSet) throws CoreException", "signatureAfterChange": " protected void reportMatching(TypeDeclaration type, IJavaElement parent, int accuracy, MatchingNodeSet nodeSet) throws CoreException", "diff": ["-\tIJavaElement enclosingElement;", "-\tif (parent == null) {", "-\t\tenclosingElement = createTypeHandle(type.name);", "-\t} else if (parent instanceof IType) {", "+\tIJavaElement enclosingElement = parent;", "+\tif (enclosingElement == null) {", "+\t\tenclosingElement = createTypeHandle(new String(type.name));", "+\t} else if (enclosingElement instanceof IType) {", "-\t\tif (enclosingElement == null) return;", "-\t} else {", "-\t\tenclosingElement = parent;", "+\tif (enclosingElement == null) return;"]}], "num": 600}