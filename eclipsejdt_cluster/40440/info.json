{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6ec210ed4376e5164ceee7822e3f1041", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09593dcef2f905bb25f68b06870608f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "13b501923d975b39fcf9769686302cfbbf5a49d6", "commitAfterChange": "006d0d2bcd46f9eeb26a0d3ca2d5e66e5408265f", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public final void jumpOverMethodBody()", "signatureAfterChange": " public final void jumpOverMethodBody()", "diff": ["-\t\t\tswitch (this.currentCharacter) {", "+\t\t\tNextToken: switch (this.currentCharacter) {", "-\t\t\t\t\tbreak;", "+\t\t\t\t\tbreak NextToken;", "-\t\t\t\t\tbreak;", "+\t\t\t\t\tbreak NextToken;", "-\t\t\t\t\t\t\t\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);", "+\t\t\t\t\t\t\t\t\t\tunicodeStore();", "-\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tbreak NextToken;", "-\t\t\t\t\t\t\t\t    unicodeStoreAt(++this.withoutUnicodePtr);", "+\t\t\t\t\t\t\t\t    unicodeStore();", "-\t\t\t\t\t\t\t\tbreak; // the string cannot go further that the line", "+\t\t\t\t\t\t\t\tbreak NextToken; // the string cannot go further that the line", "-\t\t\t\t\t\t\t\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);", "+\t\t\t\t\t\t\t\t\t\tunicodeStore();", "-\t\t\t\t\tbreak;", "+\t\t\t\t\tbreak NextToken;", "-\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tbreak NextToken;", "-    \t\t\t\t\t\t\t\t    unicodeStoreAt(++this.withoutUnicodePtr);", "+    \t\t\t\t\t\t\t\t    unicodeStore();", "-\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tbreak NextToken;", "-\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tbreak NextToken;", "-\t\t\t\t\t\tboolean isJavaIdStart = false;", "-\t\t\t\t\t\tif (this.currentCharacter >= HIGH_SURROGATE_MIN_VALUE && this.currentCharacter <= HIGH_SURROGATE_MAX_VALUE) {", "+\t\t\t\t\t\tchar c = this.currentCharacter;", "+\t\t\t\t\t\tif (c < MAX_OBVIOUS) {", "+\t\t\t\t\t\t\tswitch (ObviousIdentCharNatures[c]) {", "+\t\t\t\t\t\t\t\tcase C_LETTER :", "+\t\t\t\t\t\t\t\t\tscanIdentifierOrKeyword();", "+\t\t\t\t\t\t\t\t\tbreak NextToken;", "+\t\t\t\t\t\t\t\tcase C_DIGIT :", "+\t\t\t\t\t\t\t\t\tscanNumber(false);", "+\t\t\t\t\t\t\t\t\tbreak NextToken;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tboolean isJavaIdStart;", "+\t\t\t\t\t\tif (c >= HIGH_SURROGATE_MIN_VALUE && c <= HIGH_SURROGATE_MAX_VALUE) {", "-\t\t\t\t\t\t\tchar high = this.currentCharacter;", "-\t\t\t\t\t\t\tisJavaIdStart = ScannerHelper.isJavaIdentifierStart(high, low);", "+\t\t\t\t\t\t\tisJavaIdStart = ScannerHelper.isJavaIdentifierStart(c, low);", "-\t\t\t\t\t\telse if (this.currentCharacter >= LOW_SURROGATE_MIN_VALUE && this.currentCharacter <= LOW_SURROGATE_MAX_VALUE) {", "+\t\t\t\t\t\telse if (c >= LOW_SURROGATE_MIN_VALUE && c <= LOW_SURROGATE_MAX_VALUE) {", "-\t\t\t\t\t\t\tisJavaIdStart = Character.isJavaIdentifierStart(this.currentCharacter);", "+\t\t\t\t\t\t\tisJavaIdStart = Character.isJavaIdentifierStart(c);", "-\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tbreak NextToken;", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tbreak NextToken;", "+\t\t\t\t\t\t}\t\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "412065017d6e875a29dab62c77eef5ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "006d0d2bcd46f9eeb26a0d3ca2d5e66e5408265f", "commitAfterChange": "974c16da6f3c62d8f216865177d38ac0f89806ec", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public final void jumpOverMethodBody()", "signatureAfterChange": " public final void jumpOverMethodBody()", "diff": ["-\t\t\tswitch (this.currentCharacter) {", "+\t\t\tNextToken: switch (this.currentCharacter) {", "-\t\t\t\t\tbreak;", "+\t\t\t\t\tbreak NextToken;", "-\t\t\t\t\tbreak;", "+\t\t\t\t\tbreak NextToken;", "-\t\t\t\t\t\t\t\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);", "+\t\t\t\t\t\t\t\t\t\tunicodeStore();", "-\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tbreak NextToken;", "-\t\t\t\t\t\t\t\t    unicodeStoreAt(++this.withoutUnicodePtr);", "+\t\t\t\t\t\t\t\t    unicodeStore();", "-\t\t\t\t\t\t\t\tbreak; // the string cannot go further that the line", "+\t\t\t\t\t\t\t\tbreak NextToken; // the string cannot go further that the line", "-\t\t\t\t\t\t\t\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);", "+\t\t\t\t\t\t\t\t\t\tunicodeStore();", "-\t\t\t\t\tbreak;", "+\t\t\t\t\tbreak NextToken;", "-\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tbreak NextToken;", "-    \t\t\t\t\t\t\t\t    unicodeStoreAt(++this.withoutUnicodePtr);", "+    \t\t\t\t\t\t\t\t    unicodeStore();", "-\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tbreak NextToken;", "-\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tbreak NextToken;", "-\t\t\t\t\t\tboolean isJavaIdStart = false;", "-\t\t\t\t\t\tif (this.currentCharacter >= HIGH_SURROGATE_MIN_VALUE && this.currentCharacter <= HIGH_SURROGATE_MAX_VALUE) {", "+\t\t\t\t\t\tchar c = this.currentCharacter;", "+\t\t\t\t\t\tif (c < MAX_OBVIOUS) {", "+\t\t\t\t\t\t\tswitch (ObviousIdentCharNatures[c]) {", "+\t\t\t\t\t\t\t\tcase C_LETTER :", "+\t\t\t\t\t\t\t\t\tscanIdentifierOrKeyword();", "+\t\t\t\t\t\t\t\t\tbreak NextToken;", "+\t\t\t\t\t\t\t\tcase C_DIGIT :", "+\t\t\t\t\t\t\t\t\tscanNumber(false);", "+\t\t\t\t\t\t\t\t\tbreak NextToken;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tboolean isJavaIdStart;", "+\t\t\t\t\t\tif (c >= HIGH_SURROGATE_MIN_VALUE && c <= HIGH_SURROGATE_MAX_VALUE) {", "-\t\t\t\t\t\t\tchar high = this.currentCharacter;", "-\t\t\t\t\t\t\tisJavaIdStart = ScannerHelper.isJavaIdentifierStart(high, low);", "+\t\t\t\t\t\t\tisJavaIdStart = ScannerHelper.isJavaIdentifierStart(c, low);", "-\t\t\t\t\t\telse if (this.currentCharacter >= LOW_SURROGATE_MIN_VALUE && this.currentCharacter <= LOW_SURROGATE_MAX_VALUE) {", "+\t\t\t\t\t\telse if (c >= LOW_SURROGATE_MIN_VALUE && c <= LOW_SURROGATE_MAX_VALUE) {", "-\t\t\t\t\t\t\tisJavaIdStart = Character.isJavaIdentifierStart(this.currentCharacter);", "+\t\t\t\t\t\t\tisJavaIdStart = Character.isJavaIdentifierStart(c);", "-\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tbreak NextToken;", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tbreak NextToken;", "+\t\t\t\t\t\t}\t\t\t\t\t\t"]}], "num": 40440}