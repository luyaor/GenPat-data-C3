{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "58ff1d7e5c347f47aa498ba98a5e9ab3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c629ac16512b69075b10973348d916c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Assignment.java", "commitBeforeChange": "566dfe9d75afc609e513171bfa949df8ee32e8da", "commitAfterChange": "14bf482e9ce4e28aba53c29fe3155a9c59b88f63", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tif (this.resolvedType == null || rhsType == null)", "+\t\tif (this.resolvedType == null || rhsType == null) {", "-", "+\t\t}", "-\t\t\t|| (this.resolvedType.isBaseType() && BaseTypeBinding.isWidening(this.resolvedType.id, rhsType.id)))", "-\t\t\t|| (Scope.areTypesCompatible(rhsType, this.resolvedType))) {", "+\t\t\t\t|| (this.resolvedType.isBaseType() && BaseTypeBinding.isWidening(this.resolvedType.id, rhsType.id)))", "+\t\t\t\t|| rhsType.isCompatibleWith(this.resolvedType)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4295a72eec0d574513f1e3e40a3e9a65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "f34d0660fc08a428cce0fefe472952c23bd16c8b", "commitAfterChange": "26280894123d7ef2ecad980903e2002f03a13de2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic boolean isConstantValueOfTypeAssignableToType(TypeBinding constantType, TypeBinding targetType)", "signatureAfterChange": " \tpublic boolean isConstantValueOfTypeAssignableToType(TypeBinding constantType, TypeBinding targetType)", "diff": ["-\t\t\t\t|| BaseTypeBinding.isWidening(T_int, constantType.id))", "-\t\t\t\t&& (BaseTypeBinding.isNarrowing(targetType.id, T_int))) {", "+\t\t\t\t|| BaseTypeBinding.isWidening(TypeIds.T_int, constantType.id))", "+\t\t\t\t&& (BaseTypeBinding.isNarrowing(targetType.id, TypeIds.T_int))) {"]}], "num": 9992}