{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "60fcf7dce214b9ebde179b1733934774", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d416f412051b0bfa0007481298b89d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "commitAfterChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \tprivate IType createTypeHandle(char[][] simpleTypeNames)", "signatureAfterChange": "\r private IType createTypeHandle(char[][] simpleTypeNames)", "diff": ["+ */\r", "+private IType createTypeHandle(char[][] simpleTypeNames) {\r", "+\t// creates compilation unit\r", "+\tCompilationUnit unit = (CompilationUnit) this.currentOpenable;\r", "+\t// create type\r", "+\tint length = simpleTypeNames.length;\r", "+\tIType type = unit.getType(new String(simpleTypeNames[0]));\r", "+\tfor (int i = 1; i < length; i++) {\r", "+\t\ttype = type.getType(new String(simpleTypeNames[i]));\r", "+\treturn type;\r", "+}\r", "-\t */\r", "-\tprivate IType createTypeHandle(char[][] simpleTypeNames) {\r", "-\t\t// creates compilation unit\r", "-\t\tCompilationUnit unit = (CompilationUnit) this.getCurrentOpenable();\r", "-\r", "-\t\t// create type\r", "-\t\tint length = simpleTypeNames.length;\r", "-\t\tIType type = unit.getType(new String(simpleTypeNames[0]));\r", "-\t\tfor (int i = 1; i < length; i++) {\r", "-\t\t\ttype = type.getType(new String(simpleTypeNames[i]));\r", "-\t\t}\r", "-\t\treturn type;\r", "-\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5264df1cce19b4274249e979b8d55712", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "7e5cc03e445550d3cbc10c611218c79332074276", "commitAfterChange": "c57706d05dc3654769cca2053ff9cb20fb0a6664", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \tprivate IType createTypeHandle(char[][] simpleTypeNames)", "signatureAfterChange": "\r private IType createTypeHandle(char[][] simpleTypeNames)", "diff": ["+ */\r", "+private IType createTypeHandle(char[][] simpleTypeNames) {\r", "+\t// creates compilation unit\r", "+\tCompilationUnit unit = (CompilationUnit) this.currentOpenable;\r", "+\t// create type\r", "+\tint length = simpleTypeNames.length;\r", "+\tIType type = unit.getType(new String(simpleTypeNames[0]));\r", "+\tfor (int i = 1; i < length; i++) {\r", "+\t\ttype = type.getType(new String(simpleTypeNames[i]));\r", "+\treturn type;\r", "+}\r", "-\t */\r", "-\tprivate IType createTypeHandle(char[][] simpleTypeNames) {\r", "-\t\t// creates compilation unit\r", "-\t\tCompilationUnit unit = (CompilationUnit) this.getCurrentOpenable();\r", "-\r", "-\t\t// create type\r", "-\t\tint length = simpleTypeNames.length;\r", "-\t\tIType type = unit.getType(new String(simpleTypeNames[0]));\r", "-\t\tfor (int i = 1; i < length; i++) {\r", "-\t\t\ttype = type.getType(new String(simpleTypeNames[i]));\r", "-\t\t}\r", "-\t\treturn type;\r", "-\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9ee854d487bd4e6a2647952c9f15995", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "a1b8b888d8c8c040023fcd2856f96f5ad6c69b3e", "commitAfterChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \tprivate IType createTypeHandle(char[][] simpleTypeNames)", "signatureAfterChange": "\r private IType createTypeHandle(char[][] simpleTypeNames)", "diff": ["+ */\r", "+private IType createTypeHandle(char[][] simpleTypeNames) {\r", "+\t// creates compilation unit\r", "+\tCompilationUnit unit = (CompilationUnit) this.currentOpenable;\r", "+\t// create type\r", "+\tint length = simpleTypeNames.length;\r", "+\tIType type = unit.getType(new String(simpleTypeNames[0]));\r", "+\tfor (int i = 1; i < length; i++) {\r", "+\t\ttype = type.getType(new String(simpleTypeNames[i]));\r", "+\treturn type;\r", "+}\r", "-\t */\r", "-\tprivate IType createTypeHandle(char[][] simpleTypeNames) {\r", "-\t\t// creates compilation unit\r", "-\t\tCompilationUnit unit = (CompilationUnit) this.getCurrentOpenable();\r", "-\r", "-\t\t// create type\r", "-\t\tint length = simpleTypeNames.length;\r", "-\t\tIType type = unit.getType(new String(simpleTypeNames[0]));\r", "-\t\tfor (int i = 1; i < length; i++) {\r", "-\t\t\ttype = type.getType(new String(simpleTypeNames[i]));\r", "-\t\t}\r", "-\t\treturn type;\r", "-\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa84348017f8d315659ac37f72a9554c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "46418d248f89a29f49a77d154cdbfa57c408b256", "commitAfterChange": "c85433e27f0fa74bfe8e06c38c1c02c51b5599d7", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \tprivate IType createTypeHandle(char[][] simpleTypeNames)", "signatureAfterChange": "\r private IType createTypeHandle(char[][] simpleTypeNames)", "diff": ["+ */\r", "+private IType createTypeHandle(char[][] simpleTypeNames) {\r", "+\t// creates compilation unit\r", "+\tCompilationUnit unit = (CompilationUnit) this.currentOpenable;\r", "+\t// create type\r", "+\tint length = simpleTypeNames.length;\r", "+\tIType type = unit.getType(new String(simpleTypeNames[0]));\r", "+\tfor (int i = 1; i < length; i++) {\r", "+\t\ttype = type.getType(new String(simpleTypeNames[i]));\r", "+\treturn type;\r", "+}\r", "-\t */\r", "-\tprivate IType createTypeHandle(char[][] simpleTypeNames) {\r", "-\t\t// creates compilation unit\r", "-\t\tCompilationUnit unit = (CompilationUnit) this.getCurrentOpenable();\r", "-\r", "-\t\t// create type\r", "-\t\tint length = simpleTypeNames.length;\r", "-\t\tIType type = unit.getType(new String(simpleTypeNames[0]));\r", "-\t\tfor (int i = 1; i < length; i++) {\r", "-\t\t\ttype = type.getType(new String(simpleTypeNames[i]));\r", "-\t\t}\r", "-\t\treturn type;\r", "-\t}\r"]}], "num": 35355}