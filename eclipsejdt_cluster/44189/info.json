{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "66ac533cdaa8a70beb25aa277bd8cdd8", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00d9b17a415d7e7c4a4bf95945993231", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "ace2b01a750ae327ae916d483eb40818f9a677bc", "commitAfterChange": "9c4b0a6288e6d880b6e314a0c477538374a92e62", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public UnconditionalFlowInfo addPotentialNullInfoFrom( \t\tUnconditionalFlowInfo otherInits)", "signatureAfterChange": " public UnconditionalFlowInfo addPotentialNullInfoFrom( \t\tUnconditionalFlowInfo otherInits)", "diff": ["-\t\tif (coverageTestFlag && coverageTestId == 9) {", "-\t\t  this.nullBit4 = ~0;", "+\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\tif (CoverageTestId == 9) {", "+\t\t\t  this.nullBit4 = ~0;", "+\t\t\t}", "-\t\tif (coverageTestFlag && coverageTestId == 10) {", "-\t\t  this.nullBit4 = ~0;", "+\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\tif (CoverageTestId == 10) {", "+\t\t\t  this.nullBit4 = ~0;", "+\t\t\t}", "-\t\t\tif (coverageTestFlag && coverageTestId == 11) {", "-\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 11\"); //$NON-NLS-1$", "+\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\tif (CoverageTestId == 11) {", "+\t\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 11\"); //$NON-NLS-1$", "+\t\t\t\t}", "-        \t\t\tif (coverageTestFlag && coverageTestId == 12) {", "-\t\t\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 12\"); //$NON-NLS-1$", "+        \t\t\tif (COVERAGE_TEST_FLAG) {", "+        \t\t\t\tif (CoverageTestId == 12) {", "+\t\t\t\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 12\"); //$NON-NLS-1$", "+        \t\t\t\t}", "-\t\t\tif (coverageTestFlag && coverageTestId == 13) {", "-\t\t\t  this.nullBit4 = ~0;", "+\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\tif (CoverageTestId == 13) {", "+\t\t\t\t  this.nullBit4 = ~0;", "+\t\t\t\t}", "-\t\t\tif (coverageTestFlag && coverageTestId == 14) {", "-\t\t\t  this.extra[5][i] = ~0;", "+\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\tif (CoverageTestId == 14) {", "+\t\t\t\t  this.extra[5][i] = ~0;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21b56e12c9c22543e9fe1890de3cf386", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "ace2b01a750ae327ae916d483eb40818f9a677bc", "commitAfterChange": "9c4b0a6288e6d880b6e314a0c477538374a92e62", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  public void markAsComparedEqualToNonNull(LocalVariableBinding local)", "signatureAfterChange": "  public void markAsComparedEqualToNonNull(LocalVariableBinding local)", "diff": ["-\t\t\tif (coverageTestFlag && coverageTestId == 15) {", "-\t\t\t  \tthis.nullBit4 = ~0;", "+\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\tif (CoverageTestId == 15) {", "+\t\t\t\t  \tthis.nullBit4 = ~0;", "+\t\t\t\t}", "-\t\t\t\tif (coverageTestFlag && coverageTestId == 16) {", "-\t\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 16\"); //$NON-NLS-1$", "+\t\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\t\tif (CoverageTestId == 16) {", "+\t\t\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 16\"); //$NON-NLS-1$", "+\t\t\t\t\t}", "-\t\t\t\t\tif (coverageTestFlag && coverageTestId == 17) {", "-\t\t\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 17\"); //$NON-NLS-1$", "+\t\t\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\t\t\tif (CoverageTestId == 17) {", "+\t\t\t\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 17\"); //$NON-NLS-1$", "+\t\t\t\t\t\t}", "-\t\t\tif (coverageTestFlag && coverageTestId == 18) {", "-\t\t\t  \tthis.extra[5][vectorIndex] = ~0;", "+\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\tif (CoverageTestId == 18) {", "+\t\t\t\t  \tthis.extra[5][vectorIndex] = ~0;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "729bdd3ff6cdd464141a5b135ae0550b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "ace2b01a750ae327ae916d483eb40818f9a677bc", "commitAfterChange": "9c4b0a6288e6d880b6e314a0c477538374a92e62", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  public void markAsComparedEqualToNull(LocalVariableBinding local)", "signatureAfterChange": "  public void markAsComparedEqualToNull(LocalVariableBinding local)", "diff": ["-\t\t\tif (coverageTestFlag && coverageTestId == 19) {", "-\t\t\t  \tthis.nullBit4 = ~0;", "+\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\tif (CoverageTestId == 19) {", "+\t\t\t\t  \tthis.nullBit4 = ~0;", "+\t\t\t\t}", "-\t\t\t\tif (coverageTestFlag && coverageTestId == 20) {", "-\t\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 20\"); //$NON-NLS-1$", "+\t\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\t\tif(CoverageTestId == 20) {", "+\t\t\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 20\"); //$NON-NLS-1$", "+\t\t\t\t\t}", "-\t\t\t\t\tif (coverageTestFlag && coverageTestId == 21) {", "-\t\t\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 21\"); //$NON-NLS-1$", "+\t\t\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\t\t\tif(CoverageTestId == 21) {", "+\t\t\t\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 21\"); //$NON-NLS-1$", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e37157852f867213f22d42dd948e4c5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "ace2b01a750ae327ae916d483eb40818f9a677bc", "commitAfterChange": "9c4b0a6288e6d880b6e314a0c477538374a92e62", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo addInitializationsFrom(FlowInfo inits)", "signatureAfterChange": "  public FlowInfo addInitializationsFrom(FlowInfo inits)", "diff": ["-\t\t\tif (coverageTestFlag && coverageTestId == 1) {", "-\t\t\t  this.nullBit4 = ~0;", "+\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\tif (CoverageTestId == 1) {", "+\t\t\t\t  this.nullBit4 = ~0;", "+\t\t\t\t}", "-\t\t\tif (coverageTestFlag && coverageTestId == 2) {", "-\t\t\t  this.nullBit4 = ~0;", "+\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\tif (CoverageTestId == 2) {", "+\t\t\t\t  this.nullBit4 = ~0;", "+\t\t\t\t}", "-\t\t\t\t\tif (coverageTestFlag && coverageTestId == 3) {", "-\t\t\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 3\"); //$NON-NLS-1$", "+\t\t\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\t\t\tif (CoverageTestId == 3) {", "+\t\t\t\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 3\"); //$NON-NLS-1$", "+\t\t\t\t\t\t}", "-\t\t\t\t\tif (coverageTestFlag && coverageTestId == 4) {", "-\t\t\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 4\"); //$NON-NLS-1$", "+\t\t\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\t\t\tif (CoverageTestId == 4) {", "+\t\t\t\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 4\"); //$NON-NLS-1$", "+\t\t\t\t\t\t}", "-\t\t\t\tif (coverageTestFlag && coverageTestId == 5) {", "-\t\t\t\t\tthis.extra[5][otherLength - 1] = ~0;", "+\t\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\t\tif (CoverageTestId == 5) {", "+\t\t\t\t\t\tthis.extra[5][otherLength - 1] = ~0;", "+\t\t\t\t\t}", "-\t\t\t\tif (coverageTestFlag && coverageTestId == 6) {", "-\t\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 6\"); //$NON-NLS-1$", "+\t\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\t\tif (CoverageTestId == 6) {", "+\t\t\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 6\"); //$NON-NLS-1$", "+\t\t\t\t\t}", "-\t\t\tif (coverageTestFlag && coverageTestId == 7) {", "-\t\t\t  this.extra[5][i] = ~0;", "+\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\tif (CoverageTestId == 7) {", "+\t\t\t\t  this.extra[5][i] = ~0;", "+\t\t\t\t}", "-\t\t\tif (coverageTestFlag && coverageTestId == 8) {", "-\t\t\t  this.extra[5][i] = ~0;", "+\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\tif (CoverageTestId == 8) {", "+\t\t\t\t  this.extra[5][i] = ~0;", "+\t\t\t\t}"]}], "num": 44189}