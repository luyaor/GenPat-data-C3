{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f524304da11c2d742f538c7d3cce3ac", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76f3e34a11c160065adc2602c16158ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "3c339caa1e7b5ca6c56cf03ac002e58b4380b89e", "commitAfterChange": "51917a0c83743a82a23c6f16badda9326a65b40d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprotected int classpathContains( \t\tIClasspathEntry[] list, \t\tIClasspathEntry entry)", "signatureAfterChange": " \tprotected int classpathContains( \t\tIClasspathEntry[] list, \t\tIClasspathEntry entry)", "diff": ["-\t\t\t\t\t\t\tif (!exclusionPatterns[j].equals(otherExcludes[j]))", "+\t\t\t\t\t\t\t// compare toStrings instead of IPaths ", "+\t\t\t\t\t\t\t// since IPath.equals is specified to ignore trailing separators", "+\t\t\t\t\t\t\tif (!exclusionPatterns[j].toString().equals(otherExcludes[j].toString()))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aeedbfb9254c3e2322885c98279362c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "3c339caa1e7b5ca6c56cf03ac002e58b4380b89e", "commitAfterChange": "51917a0c83743a82a23c6f16badda9326a65b40d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic boolean equals(Object object)", "signatureAfterChange": " \tpublic boolean equals(Object object)", "diff": ["-\t\t\t\tfor (int i = 0; i < excludeLength; i++){", "-\t\t\t\t\tif (!this.exclusionPatterns[i].equals(otherExcludes[i]))", "+\t\t\t\tfor (int i = 0; i < excludeLength; i++) {", "+\t\t\t\t\t// compare toStrings instead of IPaths ", "+\t\t\t\t\t// since IPath.equals is specified to ignore trailing separators", "+\t\t\t\t\tif (!this.exclusionPatterns[i].toString().equals(otherExcludes[i].toString()))"]}], "num": 10994}