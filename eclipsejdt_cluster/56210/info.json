{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff6e61899d32719841546b20af06f07f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a4f86886715c3d0a1b3d4f7d4fbd7d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "6b1d6ebbb73ca48f2e7db37fe962a15ff5c69f39", "commitAfterChange": "db260d93667acab111e64138469df12a566a7b90", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprotected boolean pushParamName()", "signatureAfterChange": " \tprotected boolean pushParamName()", "diff": ["-\t\t\t\t\ttry {", "-\t\t\t\t\t\tthis.invParamsStack[++this.invParamsPtr] = nameRef;", "-\t\t\t\t\t} catch (IndexOutOfBoundsException e) {", "-\t\t\t\t\t\tint oldStackLength = this.invParamsStack.length;", "-\t\t\t\t\t\tJavadocSingleNameReference[] oldStack = this.invParamsStack;", "-\t\t\t\t\t\tthis.invParamsStack = new JavadocSingleNameReference[oldStackLength + AstStackIncrement];", "-\t\t\t\t\t\tSystem.arraycopy(oldStack, 0, this.invParamsStack, 0, oldStackLength);", "-\t\t\t\t\t\tthis.invParamsStack[this.invParamsPtr] = nameRef;", "+\t\t\t\t\tint stackLength = this.invParamsStack.length;", "+\t\t\t\t\tif (++this.invParamsPtr >= stackLength) {", "+\t\t\t\t\t\tSystem.arraycopy(", "+\t\t\t\t\t\t\tthis.invParamsStack, 0,", "+\t\t\t\t\t\t\tthis.invParamsStack = new JavadocSingleNameReference[stackLength + AstStackIncrement], 0,", "+\t\t\t\t\t\t\tstackLength);", "+\t\t\t\t\tthis.invParamsStack[this.invParamsPtr] = nameRef;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3990eef2605b29fbe66394e75ab571d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "db260d93667acab111e64138469df12a566a7b90", "commitAfterChange": "41616c6495c935b90356748e848cc3a6ffe7665e", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 135, "signatureBeforeChange": " protected void consumeOpenBlock()", "signatureAfterChange": " protected void consumeOpenBlock()", "diff": ["-\ttry {", "-\t\tthis.realBlockStack[++this.realBlockPtr] = 0;", "-\t} catch (IndexOutOfBoundsException e) {", "-\t\t//this.realBlockPtr is correct ", "-\t\tint oldStackLength = this.realBlockStack.length;", "-\t\tint oldStack[] = this.realBlockStack;", "-\t\tthis.realBlockStack = new int[oldStackLength + StackIncrement];", "-\t\tSystem.arraycopy(oldStack, 0, this.realBlockStack, 0, oldStackLength);", "-\t\tthis.realBlockStack[this.realBlockPtr] = 0;", "+\tint stackLength = this.realBlockStack.length;", "+\tif (++this.realBlockPtr >= stackLength) {", "+\t\tSystem.arraycopy(", "+\t\t\tthis.realBlockStack, 0,", "+\t\t\tthis.realBlockStack = new int[stackLength + StackIncrement], 0,", "+\t\t\tstackLength);", "+\tthis.realBlockStack[this.realBlockPtr] = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94492d4ad881905e0f04bf05e9afd11d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "db260d93667acab111e64138469df12a566a7b90", "commitAfterChange": "41616c6495c935b90356748e848cc3a6ffe7665e", "methodNumberBeforeChange": 255, "methodNumberAfterChange": 255, "signatureBeforeChange": " protected void pushOnRealBlockStack(int i)", "signatureAfterChange": " protected void pushOnRealBlockStack(int i)", "diff": ["-\ttry {", "-\t\tthis.realBlockStack[++this.realBlockPtr] = i;", "-\t} catch (IndexOutOfBoundsException e) {", "-\t\t//this.realBlockPtr is correct ", "-\t\tint oldStackLength = this.realBlockStack.length;", "-\t\tint oldStack[] = this.realBlockStack;", "-\t\tthis.realBlockStack = new int[oldStackLength + StackIncrement];", "-\t\tSystem.arraycopy(oldStack, 0, this.realBlockStack, 0, oldStackLength);", "-\t\tthis.realBlockStack[this.realBlockPtr] = i;", "+\tint stackLength = this.realBlockStack.length;", "+\tif (++this.realBlockPtr >= stackLength) {", "+\t\tSystem.arraycopy(", "+\t\t\tthis.realBlockStack, 0,", "+\t\t\tthis.realBlockStack = new int[stackLength + StackIncrement], 0,", "+\t\t\tstackLength);", "+\tthis.realBlockStack[this.realBlockPtr] = i;"]}], "num": 56210}