{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bf7544c15446d7eec81921778b669709", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "310a1bcf5879a420df4fd7ac565aa0db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "5326f4925981afee39790c88bc133bd18e542033", "commitAfterChange": "19abccd2dad61a489aefa2e5ed58f88ee81afb0e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic boolean visit(AnonymousLocalTypeDeclaration anonymousTypeDeclaration, BlockScope unused)", "signatureAfterChange": " \tpublic boolean visit(AnonymousLocalTypeDeclaration anonymousTypeDeclaration, BlockScope unused)", "diff": ["-\t\t\treportMatching(anonymousTypeDeclaration, enclosingElement, -1, nodeSet);", "+\t\t\tString simpleName = \"\"; //$NON-NLS-1$", "+\t\t\tInteger occurrenceCount = (Integer)occurrencesCounts.get(simpleName);", "+\t\t\tif (occurrenceCount == null)", "+\t\t\t\toccurrenceCount = new Integer(1);", "+\t\t\telse", "+\t\t\t\toccurrenceCount = new Integer(occurrenceCount.intValue()+1);", "+\t\t\toccurrencesCounts.put(simpleName, occurrenceCount);", "+\t\t\treportMatching(anonymousTypeDeclaration, enclosingElement, -1, nodeSet, occurrenceCount.intValue());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e507a2028ada7c63d21401318eb5da78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "5326f4925981afee39790c88bc133bd18e542033", "commitAfterChange": "19abccd2dad61a489aefa2e5ed58f88ee81afb0e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean visit(LocalTypeDeclaration typeDeclaration, BlockScope unused)", "signatureAfterChange": " \tpublic boolean visit(LocalTypeDeclaration typeDeclaration, BlockScope unused)", "diff": ["+\t\t\tString simpleName = new String(typeDeclaration.name);", "+\t\t\tInteger occurrenceCount = (Integer)occurrencesCounts.get(simpleName);", "+\t\t\tif (occurrenceCount == null)", "+\t\t\t\toccurrenceCount = new Integer(1);", "+\t\t\telse", "+\t\t\t\toccurrenceCount = new Integer(occurrenceCount.intValue()+1);", "+\t\t\toccurrencesCounts.put(simpleName, occurrenceCount);", "-\t\t\treportMatching(typeDeclaration, enclosingElement, level != null ? level.intValue() : -1, nodeSet);", "+\t\t\treportMatching(typeDeclaration, enclosingElement, level != null ? level.intValue() : -1, nodeSet, occurrenceCount.intValue());"]}], "num": 4995}