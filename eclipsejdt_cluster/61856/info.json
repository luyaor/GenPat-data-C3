{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1838fcbfcdab715db32afaf36d89bd95", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a33dbd982cb3d7ae664c1b398b3e02c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java", "commitBeforeChange": "43c947b648b5a1fa1fb7d4f5ce5b7cea1d4fa7a2", "commitAfterChange": "eee151556fa5628da58c297d3e841df408f33c62", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tint storeLeadingComments(ASTNode node, int previousEnd, Scanner scanner)", "signatureAfterChange": " \tint storeLeadingComments(ASTNode node, int previousEnd)", "diff": ["-\tint storeLeadingComments(ASTNode node, int previousEnd, Scanner scanner) {", "+\tint storeLeadingComments(ASTNode node, int previousEnd) {", "-\t\tint previousEndLine = scanner.getLineNumber(previousEnd);", "-\t\tint nodeStartLine = scanner.getLineNumber(nodeStart);", "+\t\tint previousEndLine = this.scanner.getLineNumber(previousEnd);", "+\t\tint nodeStartLine = this.scanner.getLineNumber(nodeStart);", "-\t\tint idx = getCommentIndex(this.commentIndex, nodeStart, -1);", "+\t\tint idx = getCommentIndex(0, nodeStart, -1);", "-\t\t\tint commentLine = scanner.getLineNumber(commentStart);", "+\t\t\tint commentLine = this.scanner.getLineNumber(commentStart);", "-\t\t\t\tscanner.resetTo(end+1, previousStart);", "+\t\t\t\tthis.scanner.resetTo(end+1, previousStart);", "-\t\t\t\t\tint token = scanner.getNextToken();", "-\t\t\t\t\tif (token != TerminalTokens.TokenNameWHITESPACE || scanner.currentPosition != previousStart) {", "+\t\t\t\t\tint token = this.scanner.getNextToken();", "+\t\t\t\t\tif (token != TerminalTokens.TokenNameWHITESPACE || this.scanner.currentPosition != previousStart) {", "-\t\t\t\tchar[] gap = scanner.getCurrentIdentifierSource();", "+\t\t\t\tchar[] gap = this.scanner.getCurrentIdentifierSource();", "-\t\t\t\tscanner.resetTo(previousEnd, commentStart);", "+\t\t\t\tthis.scanner.resetTo(previousEnd, commentStart);", "-\t\t\t\t\twhile (scanner.currentPosition != commentStart) {", "-\t\t\t\t\t\tif (scanner.getNextToken() != TerminalTokens.TokenNameWHITESPACE) {", "-\t\t\t\t\t\t\tlastTokenEnd =  scanner.getCurrentTokenEndPosition();", "+\t\t\t\t\twhile (this.scanner.currentPosition != commentStart) {", "+\t\t\t\t\t\tif (this.scanner.getNextToken() != TerminalTokens.TokenNameWHITESPACE) {", "+\t\t\t\t\t\t\tlastTokenEnd =  this.scanner.getCurrentTokenEndPosition();", "-\t\t\t\tint lastTokenLine = scanner.getLineNumber(lastTokenEnd);", "+\t\t\t\tint lastTokenLine = this.scanner.getLineNumber(lastTokenEnd);", "-\t\t\t\twhile (startIdx<length && lastTokenLine == scanner.getLineNumber(this.comments[startIdx].getStartPosition()) && nodeStartLine != lastTokenLine) {", "+\t\t\t\twhile (startIdx<length && lastTokenLine == this.scanner.getLineNumber(this.comments[startIdx].getStartPosition()) && nodeStartLine != lastTokenLine) {", "-\t\t\t\tthis.commentIndex = endIdx;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb6563f67400f20d52c4d140c3593e1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java", "commitBeforeChange": "43c947b648b5a1fa1fb7d4f5ce5b7cea1d4fa7a2", "commitAfterChange": "eee151556fa5628da58c297d3e841df408f33c62", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tint storeTrailingComments(ASTNode node, int nextStart, Scanner scanner, boolean lastChild)", "signatureAfterChange": " \tint storeTrailingComments(ASTNode node, int nextStart,  boolean lastChild)", "diff": ["-\tint storeTrailingComments(ASTNode node, int nextStart, Scanner scanner, boolean lastChild) {", "+\tint storeTrailingComments(ASTNode node, int nextStart,  boolean lastChild) {", "+", "+\t\tif (nodeEnd == nextStart) {", "+\t\t\t// special case for last child of its parent", "+\t\t\tthis.trailingComments.put(node, new int[] { -1, -1 });", "+\t\t\treturn nodeEnd;", "+\t\t}", "-\t\tint nodeEndLine = scanner.getLineNumber(nodeEnd);", "+\t\tint nodeEndLine = this.scanner.getLineNumber(nodeEnd);", "-\t\tint idx = getCommentIndex(this.commentIndex, nodeEnd, 1);", "+\t\tint idx = getCommentIndex(0, nodeEnd, 1);", "-\t\t\t\tscanner.resetTo(previousEnd, commentStart);", "+\t\t\t\tthis.scanner.resetTo(previousEnd, commentStart);", "-\t\t\t\t\tint token = scanner.getNextToken();", "-\t\t\t\t\tif (token != TerminalTokens.TokenNameWHITESPACE || scanner.currentPosition != commentStart) {", "+\t\t\t\t\tint token = this.scanner.getNextToken();", "+\t\t\t\t\tif (token != TerminalTokens.TokenNameWHITESPACE || this.scanner.currentPosition != commentStart) {", "-\t\t\t\tchar[] gap = scanner.getCurrentIdentifierSource();", "+\t\t\t\tchar[] gap = this.scanner.getCurrentIdentifierSource();", "-\t\t\tint commentLine = scanner.getLineNumber(commentStart);", "+\t\t\tint commentLine = this.scanner.getLineNumber(commentStart);", "-\t\t\t\tint nextLine = scanner.getLineNumber(nextStart);", "-\t\t\t\tint previousLine = scanner.getLineNumber(previousEnd);", "+\t\t\t\tint nextLine = this.scanner.getLineNumber(nextStart);", "+\t\t\t\tint previousLine = this.scanner.getLineNumber(previousEnd);", "-\t\t\tthis.commentIndex = endIdx;"]}], "num": 61856}