{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "31d5fa2207d9a5179ec9eb1df9fb5bd8", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24c7b580013f84939e33668b5a56ba02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "  public void test077() throws JavaModelException", "signatureAfterChange": "  public void test077() throws JavaModelException", "diff": ["-\t\t\"clone[METHOD_REF]{clone(), Ljava.lang.Object;, ()Ljava.lang.Object;, clone, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"equals[METHOD_REF]{equals(Object), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, (obj), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"finalize[METHOD_REF]{finalize(), Ljava.lang.Object;, ()V, finalize, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"getClass[METHOD_REF]{getClass(), Ljava.lang.Object;, ()Ljava.lang.Class;, getClass, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"hashCode[METHOD_REF]{hashCode(), Ljava.lang.Object;, ()I, hashCode, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"notify[METHOD_REF]{notify(), Ljava.lang.Object;, ()V, notify, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"notifyAll[METHOD_REF]{notifyAll(), Ljava.lang.Object;, ()V, notifyAll, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"toString[METHOD_REF]{toString(), Ljava.lang.Object;, ()Ljava.lang.String;, toString, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"wait[METHOD_REF]{wait(long, int), Ljava.lang.Object;, (JI)V, wait, (millis, nanos), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"wait[METHOD_REF]{wait(long), Ljava.lang.Object;, (J)V, wait, (millis), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"wait[METHOD_REF]{wait(), Ljava.lang.Object;, ()V, wait, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"BasicTestTextIns[METHOD_REF<CONSTRUCTOR>]{BasicTestTextIns(int, float, Class), Ljavadoc.text.BasicTestTextIns;, (IFLjava.lang.Class;)V, BasicTestTextIns, (xxx, real, clazz), \"+this.positions+JAVADOC_RELEVANCE+\"}\\n\" + ", "-\t\t\"BasicTestTextIns[METHOD_REF<CONSTRUCTOR>]{BasicTestTextIns(), Ljavadoc.text.BasicTestTextIns;, ()V, BasicTestTextIns, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\"", "+\t\t\"clone[METHOD_REF]{clone(), Ljava.lang.Object;, ()Ljava.lang.Object;, clone, null, \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"equals[METHOD_REF]{equals(Object), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, (obj), \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"finalize[METHOD_REF]{finalize(), Ljava.lang.Object;, ()V, finalize, null, \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"getClass[METHOD_REF]{getClass(), Ljava.lang.Object;, ()Ljava.lang.Class;, getClass, null, \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"hashCode[METHOD_REF]{hashCode(), Ljava.lang.Object;, ()I, hashCode, null, \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"notify[METHOD_REF]{notify(), Ljava.lang.Object;, ()V, notify, null, \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"notifyAll[METHOD_REF]{notifyAll(), Ljava.lang.Object;, ()V, notifyAll, null, \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"toString[METHOD_REF]{toString(), Ljava.lang.Object;, ()Ljava.lang.String;, toString, null, \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"wait[METHOD_REF]{wait(long, int), Ljava.lang.Object;, (JI)V, wait, (millis, nanos), \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"wait[METHOD_REF]{wait(long), Ljava.lang.Object;, (J)V, wait, (millis), \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"wait[METHOD_REF]{wait(), Ljava.lang.Object;, ()V, wait, null, \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"BasicTestTextIns[METHOD_REF<CONSTRUCTOR>]{BasicTestTextIns(int, float, Class), Ljavadoc.text.BasicTestTextIns;, (IFLjava.lang.Class;)V, BasicTestTextIns, (xxx, real, clazz), \"+this.positions+R_DRINR+\"}\\n\" + ", "+\t\t\"BasicTestTextIns[METHOD_REF<CONSTRUCTOR>]{BasicTestTextIns(), Ljavadoc.text.BasicTestTextIns;, ()V, BasicTestTextIns, null, \"+this.positions+R_DRINR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b0cde837ec64d521cd82ba280a22b02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "  public void test075() throws JavaModelException", "signatureAfterChange": "  public void test075() throws JavaModelException", "diff": ["-\t\t\"clone[JAVADOC_METHOD_REF]{{@link #clone()}, Ljava.lang.Object;, ()Ljava.lang.Object;, clone, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"equals[JAVADOC_METHOD_REF]{{@link #equals(Object)}, Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"finalize[JAVADOC_METHOD_REF]{{@link #finalize()}, Ljava.lang.Object;, ()V, finalize, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"getClass[JAVADOC_METHOD_REF]{{@link #getClass()}, Ljava.lang.Object;, ()Ljava.lang.Class;, getClass, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"hashCode[JAVADOC_METHOD_REF]{{@link #hashCode()}, Ljava.lang.Object;, ()I, hashCode, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"notify[JAVADOC_METHOD_REF]{{@link #notify()}, Ljava.lang.Object;, ()V, notify, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"notifyAll[JAVADOC_METHOD_REF]{{@link #notifyAll()}, Ljava.lang.Object;, ()V, notifyAll, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"toString[JAVADOC_METHOD_REF]{{@link #toString()}, Ljava.lang.Object;, ()Ljava.lang.String;, toString, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"wait[JAVADOC_METHOD_REF]{{@link #wait(long, int)}, Ljava.lang.Object;, (JI)V, wait, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"wait[JAVADOC_METHOD_REF]{{@link #wait(long)}, Ljava.lang.Object;, (J)V, wait, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"wait[JAVADOC_METHOD_REF]{{@link #wait()}, Ljava.lang.Object;, ()V, wait, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"BasicTestTextIns[JAVADOC_METHOD_REF]{{@link #BasicTestTextIns(int, float, Class)}, Ljavadoc.text.BasicTestTextIns;, (IFLjava.lang.Class;)V, BasicTestTextIns, (xxx, real, clazz), \"+this.positions+JAVADOC_RELEVANCE_IT+\"}\\n\" + ", "-\t\t\"BasicTestTextIns[JAVADOC_METHOD_REF]{{@link #BasicTestTextIns()}, Ljavadoc.text.BasicTestTextIns;, ()V, BasicTestTextIns, null, \"+this.positions+JAVADOC_RELEVANCE_IT+\"}\"", "+\t\t\"clone[JAVADOC_METHOD_REF]{{@link #clone()}, Ljava.lang.Object;, ()Ljava.lang.Object;, clone, null, \"+this.positions+R_DRICNRNSIT+\"}\\n\" + ", "+\t\t\"equals[JAVADOC_METHOD_REF]{{@link #equals(Object)}, Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, null, \"+this.positions+R_DRICNRNSIT+\"}\\n\" + ", "+\t\t\"finalize[JAVADOC_METHOD_REF]{{@link #finalize()}, Ljava.lang.Object;, ()V, finalize, null, \"+this.positions+R_DRICNRNSIT+\"}\\n\" + ", "+\t\t\"getClass[JAVADOC_METHOD_REF]{{@link #getClass()}, Ljava.lang.Object;, ()Ljava.lang.Class;, getClass, null, \"+this.positions+R_DRICNRNSIT+\"}\\n\" + ", "+\t\t\"hashCode[JAVADOC_METHOD_REF]{{@link #hashCode()}, Ljava.lang.Object;, ()I, hashCode, null, \"+this.positions+R_DRICNRNSIT+\"}\\n\" + ", "+\t\t\"notify[JAVADOC_METHOD_REF]{{@link #notify()}, Ljava.lang.Object;, ()V, notify, null, \"+this.positions+R_DRICNRNSIT+\"}\\n\" + ", "+\t\t\"notifyAll[JAVADOC_METHOD_REF]{{@link #notifyAll()}, Ljava.lang.Object;, ()V, notifyAll, null, \"+this.positions+R_DRICNRNSIT+\"}\\n\" + ", "+\t\t\"toString[JAVADOC_METHOD_REF]{{@link #toString()}, Ljava.lang.Object;, ()Ljava.lang.String;, toString, null, \"+this.positions+R_DRICNRNSIT+\"}\\n\" + ", "+\t\t\"wait[JAVADOC_METHOD_REF]{{@link #wait(long, int)}, Ljava.lang.Object;, (JI)V, wait, null, \"+this.positions+R_DRICNRNSIT+\"}\\n\" + ", "+\t\t\"wait[JAVADOC_METHOD_REF]{{@link #wait(long)}, Ljava.lang.Object;, (J)V, wait, null, \"+this.positions+R_DRICNRNSIT+\"}\\n\" + ", "+\t\t\"wait[JAVADOC_METHOD_REF]{{@link #wait()}, Ljava.lang.Object;, ()V, wait, null, \"+this.positions+R_DRICNRNSIT+\"}\\n\" + ", "+\t\t\"BasicTestTextIns[JAVADOC_METHOD_REF]{{@link #BasicTestTextIns(int, float, Class)}, Ljavadoc.text.BasicTestTextIns;, (IFLjava.lang.Class;)V, BasicTestTextIns, (xxx, real, clazz), \"+this.positions+R_DRINRIT+\"}\\n\" + ", "+\t\t\"BasicTestTextIns[JAVADOC_METHOD_REF]{{@link #BasicTestTextIns()}, Ljavadoc.text.BasicTestTextIns;, ()V, BasicTestTextIns, null, \"+this.positions+R_DRINRIT+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "857b942a6f8d7f7a272fe0cad1b3dca0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocBugsCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void testBug86112() throws JavaModelException", "signatureAfterChange": " public void testBug86112() throws JavaModelException", "diff": ["-\t\t\"clone[METHOD_REF]{clone(), Ljava.lang.Object;, ()Ljava.lang.Object;, clone, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"equals[METHOD_REF]{equals(Object), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, (obj), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"finalize[METHOD_REF]{finalize(), Ljava.lang.Object;, ()V, finalize, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"getClass[METHOD_REF]{getClass(), Ljava.lang.Object;, ()Ljava.lang.Class;, getClass, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"hashCode[METHOD_REF]{hashCode(), Ljava.lang.Object;, ()I, hashCode, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"notify[METHOD_REF]{notify(), Ljava.lang.Object;, ()V, notify, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"notifyAll[METHOD_REF]{notifyAll(), Ljava.lang.Object;, ()V, notifyAll, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"toString[METHOD_REF]{toString(), Ljava.lang.Object;, ()Ljava.lang.String;, toString, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"wait[METHOD_REF]{wait(long, int), Ljava.lang.Object;, (JI)V, wait, (millis, nanos), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"wait[METHOD_REF]{wait(long), Ljava.lang.Object;, (J)V, wait, (millis), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"wait[METHOD_REF]{wait(), Ljava.lang.Object;, ()V, wait, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"Terminator[METHOD_REF<CONSTRUCTOR>]{Terminator(), Ljavadoc.bugs.Terminator;, ()V, Terminator, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\"", "+\t\t\"clone[METHOD_REF]{clone(), Ljava.lang.Object;, ()Ljava.lang.Object;, clone, null, \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"equals[METHOD_REF]{equals(Object), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, (obj), \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"finalize[METHOD_REF]{finalize(), Ljava.lang.Object;, ()V, finalize, null, \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"getClass[METHOD_REF]{getClass(), Ljava.lang.Object;, ()Ljava.lang.Class;, getClass, null, \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"hashCode[METHOD_REF]{hashCode(), Ljava.lang.Object;, ()I, hashCode, null, \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"notify[METHOD_REF]{notify(), Ljava.lang.Object;, ()V, notify, null, \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"notifyAll[METHOD_REF]{notifyAll(), Ljava.lang.Object;, ()V, notifyAll, null, \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"toString[METHOD_REF]{toString(), Ljava.lang.Object;, ()Ljava.lang.String;, toString, null, \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"wait[METHOD_REF]{wait(long, int), Ljava.lang.Object;, (JI)V, wait, (millis, nanos), \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"wait[METHOD_REF]{wait(long), Ljava.lang.Object;, (J)V, wait, (millis), \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"wait[METHOD_REF]{wait(), Ljava.lang.Object;, ()V, wait, null, \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"Terminator[METHOD_REF<CONSTRUCTOR>]{Terminator(), Ljavadoc.bugs.Terminator;, ()V, Terminator, null, \"+this.positions+R_DRINR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e494dd0d28d5fa65f2bdbced4e982c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "  public void test076() throws JavaModelException", "signatureAfterChange": "  public void test076() throws JavaModelException", "diff": ["-\t\t\"clone[JAVADOC_METHOD_REF]{{@link #clone()}, Ljava.lang.Object;, ()Ljava.lang.Object;, clone, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"equals[JAVADOC_METHOD_REF]{{@link #equals(Object)}, Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"finalize[JAVADOC_METHOD_REF]{{@link #finalize()}, Ljava.lang.Object;, ()V, finalize, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"getClass[JAVADOC_METHOD_REF]{{@link #getClass()}, Ljava.lang.Object;, ()Ljava.lang.Class;, getClass, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"hashCode[JAVADOC_METHOD_REF]{{@link #hashCode()}, Ljava.lang.Object;, ()I, hashCode, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"notify[JAVADOC_METHOD_REF]{{@link #notify()}, Ljava.lang.Object;, ()V, notify, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"notifyAll[JAVADOC_METHOD_REF]{{@link #notifyAll()}, Ljava.lang.Object;, ()V, notifyAll, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"toString[JAVADOC_METHOD_REF]{{@link #toString()}, Ljava.lang.Object;, ()Ljava.lang.String;, toString, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"wait[JAVADOC_METHOD_REF]{{@link #wait(long, int)}, Ljava.lang.Object;, (JI)V, wait, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"wait[JAVADOC_METHOD_REF]{{@link #wait(long)}, Ljava.lang.Object;, (J)V, wait, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"wait[JAVADOC_METHOD_REF]{{@link #wait()}, Ljava.lang.Object;, ()V, wait, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"BasicTestTextIns[JAVADOC_METHOD_REF]{{@link #BasicTestTextIns(int, float, Class)}, Ljavadoc.text.BasicTestTextIns;, (IFLjava.lang.Class;)V, BasicTestTextIns, (xxx, real, clazz), \"+this.positions+JAVADOC_RELEVANCE_IT+\"}\\n\" + ", "-\t\t\"BasicTestTextIns[JAVADOC_METHOD_REF]{{@link #BasicTestTextIns()}, Ljavadoc.text.BasicTestTextIns;, ()V, BasicTestTextIns, null, \"+this.positions+JAVADOC_RELEVANCE_IT+\"}\"", "+\t\t\"clone[JAVADOC_METHOD_REF]{{@link #clone()}, Ljava.lang.Object;, ()Ljava.lang.Object;, clone, null, \"+this.positions+R_DRICNRNSIT+\"}\\n\" + ", "+\t\t\"equals[JAVADOC_METHOD_REF]{{@link #equals(Object)}, Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, null, \"+this.positions+R_DRICNRNSIT+\"}\\n\" + ", "+\t\t\"finalize[JAVADOC_METHOD_REF]{{@link #finalize()}, Ljava.lang.Object;, ()V, finalize, null, \"+this.positions+R_DRICNRNSIT+\"}\\n\" + ", "+\t\t\"getClass[JAVADOC_METHOD_REF]{{@link #getClass()}, Ljava.lang.Object;, ()Ljava.lang.Class;, getClass, null, \"+this.positions+R_DRICNRNSIT+\"}\\n\" + ", "+\t\t\"hashCode[JAVADOC_METHOD_REF]{{@link #hashCode()}, Ljava.lang.Object;, ()I, hashCode, null, \"+this.positions+R_DRICNRNSIT+\"}\\n\" + ", "+\t\t\"notify[JAVADOC_METHOD_REF]{{@link #notify()}, Ljava.lang.Object;, ()V, notify, null, \"+this.positions+R_DRICNRNSIT+\"}\\n\" + ", "+\t\t\"notifyAll[JAVADOC_METHOD_REF]{{@link #notifyAll()}, Ljava.lang.Object;, ()V, notifyAll, null, \"+this.positions+R_DRICNRNSIT+\"}\\n\" + ", "+\t\t\"toString[JAVADOC_METHOD_REF]{{@link #toString()}, Ljava.lang.Object;, ()Ljava.lang.String;, toString, null, \"+this.positions+R_DRICNRNSIT+\"}\\n\" + ", "+\t\t\"wait[JAVADOC_METHOD_REF]{{@link #wait(long, int)}, Ljava.lang.Object;, (JI)V, wait, null, \"+this.positions+R_DRICNRNSIT+\"}\\n\" + ", "+\t\t\"wait[JAVADOC_METHOD_REF]{{@link #wait(long)}, Ljava.lang.Object;, (J)V, wait, null, \"+this.positions+R_DRICNRNSIT+\"}\\n\" + ", "+\t\t\"wait[JAVADOC_METHOD_REF]{{@link #wait()}, Ljava.lang.Object;, ()V, wait, null, \"+this.positions+R_DRICNRNSIT+\"}\\n\" + ", "+\t\t\"BasicTestTextIns[JAVADOC_METHOD_REF]{{@link #BasicTestTextIns(int, float, Class)}, Ljavadoc.text.BasicTestTextIns;, (IFLjava.lang.Class;)V, BasicTestTextIns, (xxx, real, clazz), \"+this.positions+R_DRINRIT+\"}\\n\" + ", "+\t\t\"BasicTestTextIns[JAVADOC_METHOD_REF]{{@link #BasicTestTextIns()}, Ljavadoc.text.BasicTestTextIns;, ()V, BasicTestTextIns, null, \"+this.positions+R_DRINRIT+\"}\""]}], "num": 49151}