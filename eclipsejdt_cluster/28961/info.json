{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c8562469e996cc699c96130f03946168", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "407a228aa1b92e59c82190c74480f340", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "8d0a5299117e5fc84e729116ac52feef1385b968", "commitAfterChange": "527793c3501c0044ba7f65ec00ff957c7a149690", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic boolean equals(Object object)", "signatureAfterChange": " \tpublic boolean equals(Object object)", "diff": ["+\t\t\tif (this.exclusionPatterns == null){", "+\t\t\t\tif (otherEntry.getExclusionPatterns() != null)", "+\t\t\t\t\treturn false;", "+\t\t\t} else {", "+\t\t\t\tint excludeLength = this.exclusionPatterns.length;", "+\t\t\t\tString[] otherExcludes = otherEntry.getExclusionPatterns();", "+\t\t\t\tif (otherExcludes == null || otherExcludes.length != excludeLength)", "+\t\t\t\t\treturn false;", "+\t\t\t\tfor (int i = 0; i < excludeLength; i++){", "+\t\t\t\t\tif (!this.exclusionPatterns[i].equals(otherExcludes[i]))", "+\t\t\t\t\t\treturn false;", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3d1f7cbc3469d8a05b10e93d0dd1a5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "6ac14fb94b619629e9d1194f1e68de6d5f7b6969", "commitAfterChange": "54f21b938e43513d8b3615d9c7068527e047df4e", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " private boolean isAffectedByJavaProject(IJavaElementDelta delta, IJavaElement element)", "signatureAfterChange": " private boolean isAffectedByJavaProject(IJavaElementDelta delta, IJavaElement element)", "diff": ["+\t\t\t\tif (this.focusType != null) {", "+\t\t\t\t\t// if the hierarchy's project is on the added project classpath, then the hierarchy has changed", "+\t\t\t\t\tclasspath = ((JavaProject)element).getExpandedClasspath(true);", "+\t\t\t\t\tIPath hierarchyProject = javaProject().getPath();", "+\t\t\t\t\tfor (int i = 0; i < classpath.length; i++) {", "+\t\t\t\t\t\tif (classpath[i].getEntryKind() == IClasspathEntry.CPE_PROJECT ", "+\t\t\t\t\t\t\t\t&& classpath[i].getPath().equals(hierarchyProject)) {", "+\t\t\t\t\t\t\treturn true;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}"]}], "num": 28961}