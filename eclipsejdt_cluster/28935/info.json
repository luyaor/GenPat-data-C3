{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "96b3c6240d64161a0aa12801eccb7293", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88f4c185a9a48f1a21dac91c8a4f2872", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/LocalVariablePattern.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void findIndexMatches(IIndex index, IIndexSearchRequestor requestor, IProgressMonitor progressMonitor, IJavaSearchScope scope)", "signatureAfterChange": " public void findIndexMatches(IIndex index, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor progressMonitor) throws IOException", "diff": ["- */", "-public void findIndexMatches(IIndex index, IIndexSearchRequestor requestor, IProgressMonitor progressMonitor, IJavaSearchScope scope) {", "+}", "+public void findIndexMatches(IIndex index, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor progressMonitor) throws IOException {", "-\tif (scope.encloses(path))", "-\t\tacceptPath(requestor, path);", "+\tif (scope.encloses(path)) {", "+\t\tif (!requestor.acceptIndexMatch(path, this, participant)) ", "+\t\t\tthrow new OperationCanceledException();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eea3c4af27d433267f86b83f5203e494", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "f9a4225018848764cfc1723dc3aa2afabd642ddb", "commitAfterChange": "5b71fd258ccc5692becf5de077dfd1b633e668c5", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tprivate void loadFactories(  \t\t\tMap<FactoryContainer, FactoryPath.Attributes> containers, IJavaProject project )", "signatureAfterChange": " \tprivate void loadFactories(  \t\t\tMap<FactoryContainer, FactoryPath.Attributes> containers,  \t\t\tIJavaProject project, \t\t\tLoadFailureHandler failureHandler)", "diff": ["-\t\t\tMap<FactoryContainer, FactoryPath.Attributes> containers, IJavaProject project )", "+\t\t\tMap<FactoryContainer, FactoryPath.Attributes> containers, ", "+\t\t\tIJavaProject project,", "+\t\t\tLoadFailureHandler failureHandler)", "-\t\t\treportMissingFactoryContainers(badContainers, project);", "+\t\t\t\tfailureHandler.addFailedFactory(badFC.getId());", "-\t\t\t\tjava5FactoriesInContainer = loadJava5FactoryClasses(fc, cl, project);", "+\t\t\t\tjava5FactoriesInContainer = loadJava5FactoryClasses(fc, cl, project, failureHandler);", "-\t\t\t\t\tjava6FactoriesInContainer = loadJava6FactoryClasses(fc, cl, project);", "+\t\t\t\t\tjava6FactoriesInContainer = loadJava6FactoryClasses(fc, cl, project, failureHandler);"]}], "num": 28935}