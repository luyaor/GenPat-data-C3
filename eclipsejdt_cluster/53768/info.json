{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a2b868f234dede2d8c19308c681a63c0", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af0ebe400218df7ca91b35b3648f80f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/BatchASTCreationTests.java", "commitBeforeChange": "2292d96d982a21ac668b3edcff1d774c928dd59d", "commitAfterChange": "e19275b58ad64aff1e057c59c0e35ec0b545a662", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tprivate void assertBindingsCreated(String[] pathAndSources, final String[] expectedKeys) throws JavaModelException", "signatureAfterChange": " \tprivate void assertBindingsCreated(String[] pathAndSources, final String[] expectedKeys) throws JavaModelException", "diff": ["-\t\t\t\tassertStringsEqual(\"Inconsistent expected key \", expectedKeys, resolver.getBindingKeys());", "-\t\t\t\tSystem.out.println(Util.displayString(actualKey, 3));", "+\t\t\t\tString[] markedKeys = resolver.getBindingKeys();", "+\t\t\t\tif (markedKeys.length > 0) {", "+\t\t\t\t\tassertStringsEqual(\"Inconsistent expected key \", expectedKeys, markedKeys);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd6f5cf6fd9602ed8eb341c13ff8253e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/AptConfigurationBlock.java", "commitBeforeChange": "c4c0df5e4aeb7d3e8571312c597020a7d0812327", "commitAfterChange": "6fea7eafdd413dccff31028f8da1f1ac6859e6fe", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \t@Override \tprotected void saveSettings()", "signatureAfterChange": "  \t@Override \tprotected void saveSettings()", "diff": ["-\t\tfAptProject.handlePreferenceChange(", "-\t\t\t\tAptPreferenceConstants.APT_GENSRCDIR, fOriginalGenSrcDir, fGenSrcDirField.getText());", "-\t\tfAptProject.handlePreferenceChange(", "-\t\t\t\tAptPreferenceConstants.APT_ENABLED, ", "-\t\t\t\tBoolean.toString(fOriginalAptEnabled), ", "-\t\t\t\tBoolean.toString(fAptEnabledField.isSelected()));", "+\t\tif (!fOriginalGenSrcDir.equals(fGenSrcDirField.getText()))", "+\t\t\tfAptProject.preferenceChanged(AptPreferenceConstants.APT_GENSRCDIR);", "+\t\tif (fOriginalAptEnabled != fAptEnabledField.isSelected())", "+\t\t\tfAptProject.preferenceChanged(AptPreferenceConstants.APT_ENABLED);"]}], "num": 53768}