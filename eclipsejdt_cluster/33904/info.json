{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c755ef2ab73dd060d4f0233c4e1d5fb0", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f5a4715833d2e2715bf0f61c52fc6d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/BinaryIndexer.java", "commitBeforeChange": "8ef2e19ed4ad065a565f0c2b4b16065aa807e82f", "commitAfterChange": "dcb480eb89f55d2bede123ef7bb95483fcdff321", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void addTypeReference(char[] typeName)", "signatureAfterChange": " \tpublic void addTypeReference(char[] typeName)", "diff": ["-\tpublic void addTypeReference(char[] typeName){", "-\t ", "+\tpublic void addTypeReference(char[] typeName) {", "+\t\tint length = typeName.length;", "+\t\tif (length > 2 && typeName[length - 2] == '$') {", "+\t\t\tswitch (typeName[length - 1]) {", "+\t\t\t\tcase '0' :", "+\t\t\t\tcase '1' :", "+\t\t\t\tcase '2' :", "+\t\t\t\tcase '3' :", "+\t\t\t\tcase '4' :", "+\t\t\t\tcase '5' :", "+\t\t\t\tcase '6' :", "+\t\t\t\tcase '7' :", "+\t\t\t\tcase '8' :", "+\t\t\t\tcase '9' :", "+\t\t\t\t\treturn; // skip local type names", "+\t\t\t}", "+\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d87ae532756ba5add1c32a1ea199028a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "5b534766d4f50c0b706c85a960952c0a8d402690", "commitAfterChange": "9c01a288cfc10861d0cbe8d85e9282d8f2684406", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tprivate void printCodeSnippet(int startPosition, int endPosition)", "signatureAfterChange": " \tprivate void printCodeSnippet(int startPosition, int endPosition)", "diff": ["-\t\t\tint prefixOffset= inputBuffer.indexOf(contentPrefix, lineOffset);", "-\t\t\tif (prefixOffset >= 0 && inputBuffer.substring(lineOffset, prefixOffset).trim().length() == 0)", "-\t\t\t\tinputBuffer.delete(lineOffset, prefixOffset + 1 + 1);", "+\t\t\tint prefixOffset = inputBuffer.indexOf(contentPrefix, lineOffset);", "+\t\t\tif (prefixOffset >= 0 && inputBuffer.substring(lineOffset, prefixOffset).trim().length() == 0) {", "+\t\t\t\tint offsetEnd = prefixOffset + 1;", "+\t\t\t\tchar ch = inputBuffer.charAt(offsetEnd);", "+\t\t\t\tswitch (ch) {", "+\t\t\t\t\tcase '\\n':", "+\t\t\t\t\tcase '\\r':", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase ' ':", "+\t\t\t\t\tcase '\\t':", "+\t\t\t\t\tcase '\\u000c' :    /* FORM FEED               */", "+\t\t\t\t\t\toffsetEnd++;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tdefault:", "+\t\t\t\t\t\tif (ScannerHelper.isWhitespace(ch)) {", "+\t\t\t\t\t\t\toffsetEnd++;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t\tinputBuffer.delete(lineOffset, offsetEnd);", "+\t\t\t}"]}], "num": 33904}