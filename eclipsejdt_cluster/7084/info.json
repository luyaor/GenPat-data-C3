{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aa2a679c6912bc541215cea43a03fa26", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "621a9a5d70927089ff5303e9ebabcae7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "61910f9ffdfc607d31120af5ce39e6bf8d69bab0", "commitAfterChange": "3a10f90d587275b68cb248facf53e1ae26bb70b8", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tprotected void runConformTest(String[] testFiles, String[] vmArguments)", "signatureAfterChange": " \t \tprotected void runConformTest(String[] testFiles, String expectedOutputString)", "diff": ["+\tprotected void runConformTest(String[] testFiles, String expectedOutputString) {", "+\t\trunTest(", "+\t \t\t// test directory preparation", "+\t\t\ttestFiles /* test files */,", "+\t\t\t// compiler options", "+\t\t\tnull /* no class libraries */,", "+\t\t\tnull /* no custom options */,", "+\t\t\tfalse /* do not perform statements recovery */, ", "+\t\t\tnull /* no custom requestor */,", "+\t\t\t// compiler results", "+\t\t\tfalse /* expecting no compiler errors */,", "+\t\t\tnull /* do not check compiler log */,", "+\t\t\t// runtime options", "+\t\t\tfalse /* do not force execution */,", "+\t\t\tnull /* no vm arguments */, ", "+\t\t\t// runtime results", "+\t\t\texpectedOutputString /* expected output string */,", "+\t\t\tnull /* do not check error string */,", "+\t\t\t// javac options", "+\t\t\tJavacTestOptions.DEFAULT /* default javac test options */);", "-\tprotected void runConformTest(String[] testFiles, String[] vmArguments) {", "-\t\trunConformTest(", "-\t\t\ttestFiles, ", "-\t\t\tnull /* no expected output string */, ", "-\t\t\tnull /* no extra class libraries */, ", "-\t\t\ttrue /* flush output directory */, ", "-\t\t\tvmArguments,", "-\t\t\tnull /* no custom options*/,", "-\t\t\tnull /* no custom requestor*/,", "-\t\t  \tfalse /* do not skip javac for this peculiar test */);\t", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcf32e04c5afa5ac733e8d9e7c313e7a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "61910f9ffdfc607d31120af5ce39e6bf8d69bab0", "commitAfterChange": "3a10f90d587275b68cb248facf53e1ae26bb70b8", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tprotected void runConformTest( \t\tString[] testFiles,  \t\tString expectedSuccessOutputString,  \t\tString[] classLib, \t\tboolean shouldFlushOutputDirectory,  \t\tString[] vmArguments,  \t\tMap customOptions, \t\tICompilerRequestor clientRequestor)", "signatureAfterChange": " \t \tprotected void runConformTest( \t\tString[] testFiles,  \t\tString expectedOutputString,  \t\tString[] classLibraries, \t\tboolean shouldFlushOutputDirectory,  \t\tString[] vmArguments,  \t\tMap customOptions, \t\tICompilerRequestor customRequestor)", "diff": ["+\t", "-\t\tString expectedSuccessOutputString, ", "-\t\tString[] classLib,", "+\t\tString expectedOutputString, ", "+\t\tString[] classLibraries,", "-\t\tICompilerRequestor clientRequestor) {", "-\t\trunConformTest(", "-\t\t  testFiles, ", "-\t\t  expectedSuccessOutputString, ", "-\t\t  classLib,", "-\t\t  shouldFlushOutputDirectory, ", "-\t\t  vmArguments, ", "-\t\t  customOptions,", "-\t\t  clientRequestor,", "-\t\t  false /* do not skip javac for this peculiar test */); ", "+\t\tICompilerRequestor customRequestor) {", "+\t\trunTest(", "+\t \t\t// test directory preparation", "+\t\t\tshouldFlushOutputDirectory /* should flush output directory */,", "+\t\t\ttestFiles /* test files */,", "+\t\t\t// compiler options", "+\t\t\tclassLibraries /* class libraries */,", "+\t\t\tcustomOptions /* custom options */,", "+\t\t\tfalse /* do not perform statements recovery */, ", "+\t\t\tcustomRequestor /* custom requestor */,", "+\t\t\t// compiler results", "+\t\t\tfalse /* expecting no compiler errors */,", "+\t\t\tnull /* do not check compiler log */,", "+\t\t\t// runtime options", "+\t\t\tfalse /* do not force execution */,", "+\t\t\tvmArguments /* vm arguments */, ", "+\t\t\t// runtime results", "+\t\t\texpectedOutputString /* expected output string */,", "+\t\t\tnull /* do not check error string */,", "+\t\t\t// javac options", "+\t\t\tJavacTestOptions.DEFAULT /* default javac test options */);"]}], "num": 7084}