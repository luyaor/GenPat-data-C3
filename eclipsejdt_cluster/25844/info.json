{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "421ba9f10f1b50b63984da46b694c19d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64dec1ba82970db422c1898a081b2b7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "d40d65cc310f8b80e4964046fc88b861b3de2b63", "commitAfterChange": "4ec3d8941998f287d44af5beff0b7f8ef9d972cc", "methodNumberBeforeChange": 126, "methodNumberAfterChange": 126, "signatureBeforeChange": " \tpublic ReferenceContext originalReferenceContext()", "signatureAfterChange": " \tpublic ReferenceContext originalReferenceContext()", "diff": ["-\t\t\t\t\t\treturn expression.original;", "+\t\t\t\t\t\twhile (expression != expression.original)", "+\t\t\t\t\t\t\texpression = expression.original;", "+\t\t\t\t\t\treturn expression;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e04f4198839b99d59825aefd90d6217", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "a0827b5ed51f9fc68d50a6070897f74217550da1", "commitAfterChange": "266357791826a02f1dd87ad4cdccffd484f96fd9", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic BoundSet inferInvocationType(BoundSet b1, TypeBinding expectedType, InvocationSite invocationSite, MethodBinding method) \t\t\tthrows InferenceFailureException", "signatureAfterChange": " \tpublic BoundSet inferInvocationType(BoundSet b1, TypeBinding expectedType, InvocationSite invocationSite, MethodBinding method) \t\t\tthrows InferenceFailureException", "diff": ["-\t\t\t\t\tbottomSet.add(pickFromCycle(c)); ", "+\t\t\t\t\tbottomSet.add(pickFromCycle(c));", "-\t\t\t\tBoundSet solution = resolve();", "+\t\t\t\tBoundSet solution = resolve(variablesArray);", "+\t\t\t\t// in rare cases resolving just one set of variables doesn't suffice,", "+\t\t\t\t// don't bother with finding the necessary superset, just resolve all:", "+\t\t\t\tif (solution == null)", "+\t\t\t\t\tsolution = resolve(this.inferenceVariables);"]}], "num": 25844}