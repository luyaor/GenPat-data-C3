{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "97fd3780d9147d09d94cb45e3c914eb3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "129a68f57ca91a11a024cd1bee60d7ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericsRegressionTest_1_7.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " public void test0052b()", "signatureAfterChange": " public void test0052b()", "diff": ["-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 8)\\n\" + ", "-\t\t\"\tX<String> x2 = new X<String>(\\\"SUCCESS\\\");\\n\" + ", "-\t\t\"\t                   ^\\n\" + ", "-\t\t\"Redundant specification of type arguments <String>\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 9)\\n\" + ", "-\t\t\"\tX<String> x22 = new X<String>(1,\\\"SUCCESS\\\");\\n\" + ", "-\t\t\"\t                    ^\\n\" + ", "-\t\t\"Redundant specification of type arguments <String>\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"3. ERROR in X.java (at line 10)\\n\" + ", "-\t\t\"\tX<Integer> x3 = new X<Integer>(1);\\n\" + ", "-\t\t\"\t                    ^\\n\" + ", "-\t\t\"Redundant specification of type arguments <Integer>\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"4. ERROR in X.java (at line 11)\\n\" + ", "-\t\t\"\tString s = foo(new X<String>(\\\"aaa\\\"));\\n\" + ", "-\t\t\"\t                   ^\\n\" + ", "-\t\t\"Redundant specification of type arguments <String>\\n\" + ", "-\t\t\"----------\\n\",", "+\t\t(this.complianceLevel < ClassFileConstants.JDK1_8 ?", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tX<String> x2 = new X<String>(\\\"SUCCESS\\\");\\n\" + ", "+\t\t\t\"\t                   ^\\n\" + ", "+\t\t\t\"Redundant specification of type arguments <String>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tX<String> x22 = new X<String>(1,\\\"SUCCESS\\\");\\n\" + ", "+\t\t\t\"\t                    ^\\n\" + ", "+\t\t\t\"Redundant specification of type arguments <String>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tX<Integer> x3 = new X<Integer>(1);\\n\" + ", "+\t\t\t\"\t                    ^\\n\" + ", "+\t\t\t\"Redundant specification of type arguments <Integer>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\t\"\tString s = foo(new X<String>(\\\"aaa\\\"));\\n\" + ", "+\t\t\t\"\t                   ^\\n\" + ", "+\t\t\t\"Redundant specification of type arguments <String>\\n\" + ", "+\t\t\t\"----------\\n\"", "+\t\t: // additional error at line 7 due to better inference", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tX<Number> x = new X<Number>(1);\\n\" + ", "+\t\t\t\"\t                  ^\\n\" + ", "+\t\t\t\"Redundant specification of type arguments <Number>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tX<String> x2 = new X<String>(\\\"SUCCESS\\\");\\n\" + ", "+\t\t\t\"\t                   ^\\n\" + ", "+\t\t\t\"Redundant specification of type arguments <String>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tX<String> x22 = new X<String>(1,\\\"SUCCESS\\\");\\n\" + ", "+\t\t\t\"\t                    ^\\n\" + ", "+\t\t\t\"Redundant specification of type arguments <String>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tX<Integer> x3 = new X<Integer>(1);\\n\" + ", "+\t\t\t\"\t                    ^\\n\" + ", "+\t\t\t\"Redundant specification of type arguments <Integer>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\t\"\tString s = foo(new X<String>(\\\"aaa\\\"));\\n\" + ", "+\t\t\t\"\t                   ^\\n\" + ", "+\t\t\t\"Redundant specification of type arguments <String>\\n\" + ", "+\t\t\t\"----------\\n\"", "+\t\t),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52285b5baaa3b79afd9c1acdd99ad8c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 1175, "methodNumberAfterChange": 1175, "signatureBeforeChange": " public void test1146()", "signatureAfterChange": " public void test1146()", "diff": ["+\t\tthis.complianceLevel < ClassFileConstants.JDK1_7 ?", "-\t\t\"----------\\n\");", "+\t\t\"----------\\n\":", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tComparator<? super T>... rest) {\\n\" + ", "+\t\t\t\"\t                         ^^^^\\n\" + ", "+\t\t\t\"Type safety: Potential heap pollution via varargs parameter rest\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tint i = asList(a, b, rest);\\n\" + ", "+\t\t\t\"\t        ^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from List<Comparator<?>> to int\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tint j = asList2(a, b);\\n\" + ", "+\t\t\t\"\t        ^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from List<Comparator<? extends Object>> to int\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\"\treturn compound(asList(a, b, rest));\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^\\n\" + ", "+\t\t\t\"The method compound(Iterable<? extends Comparator<? super U>>) in the type X is not applicable for the arguments (List<Comparator<?>>)\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 14)\\n\" + ", "+\t\t\t\"\tpublic static <E> List<E> asList(E a, E b, E... rest) {\\n\" + ", "+\t\t\t\"\t                                                ^^^^\\n\" + ", "+\t\t\t\"Type safety: Potential heap pollution via varargs parameter rest\\n\" + ", "+\t\t\t\"----------\\n\");"]}], "num": 14794}