{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b82335d479db62b4ce8937792291c9d4", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf3fa866c963bf193da23ba38161d920", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableBinding.java", "commitBeforeChange": "badeb0487ffc4d03b8894b177626763bdc461127", "commitAfterChange": "875cc8d42787c90738d8dc077a25eb401e9e38f9", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic boolean isEqualTo(IBinding other)", "signatureAfterChange": " \tpublic boolean isEqualTo(IBinding other)", "diff": ["-\t\t// check return type", "-\t\treturn BindingComparator.isEqual(this.binding, otherBinding);", "+\t\tif (this.binding instanceof FieldBinding) {", "+\t\t\tif (otherBinding instanceof FieldBinding) {", "+\t\t\t\treturn BindingComparator.isEqual((FieldBinding) this.binding, (FieldBinding) otherBinding);", "+\t\t\t} else {", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t} else {", "+\t\t\treturn BindingComparator.isEqual(this.binding, otherBinding);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef7f11d52f42a2fcf993445018a536b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/VariableElementImpl.java", "commitBeforeChange": "26d507f9337456ca82e52ed896177b679ad9ed51", "commitAfterChange": "6954f6f09ec0fa4357c31e7abaa82f5c7cd86dbc", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \t@Override \tpublic boolean hides(Element target)", "signatureAfterChange": "  \t@Override \tpublic boolean hides(Element hiddenElement)", "diff": ["-\tpublic boolean hides(Element target)", "+\tpublic boolean hides(Element hiddenElement)", "-\t\t\tif (!(((ElementImpl)target)._binding instanceof FieldBinding)) {", "+\t\t\tif (!(((ElementImpl)hiddenElement)._binding instanceof FieldBinding)) {", "-\t\t\tFieldBinding hidden = (FieldBinding)((ElementImpl)target)._binding;", "+\t\t\tFieldBinding hidden = (FieldBinding)((ElementImpl)hiddenElement)._binding;", "+\t\t\tif (hidden == hider) {", "+\t\t\t\treturn false;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f89f6a13ef40b22f5d677afb731eb8a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableBinding.java", "commitBeforeChange": "756bb6bed26516f6a7f37d505e2052383d6cc457", "commitAfterChange": "4859598654fee7e1f981761dd77f16f864bb4009", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic boolean isEqualTo(IBinding other)", "signatureAfterChange": " \tpublic boolean isEqualTo(IBinding other)", "diff": ["-\t\t\treturn BindingComparator.isEqual(this.binding, otherBinding);", "+\t\t\tif (BindingComparator.isEqual(this.binding, otherBinding)) {", "+\t\t\t\tIMethodBinding declaringMethod = this.getDeclaringMethod();", "+\t\t\t\tIMethodBinding otherDeclaringMethod = ((VariableBinding) other).getDeclaringMethod();", "+\t\t\t\tif (declaringMethod == null) {", "+\t\t\t\t\tif (otherDeclaringMethod != null) {", "+\t\t\t\t\t\treturn false;", "+\t\t\t\t\t}", "+\t\t\t\t\treturn true;", "+\t\t\t\t}", "+\t\t\t\treturn declaringMethod.isEqualTo(otherDeclaringMethod);", "+\t\t\t}", "+\t\t\treturn false;"]}], "num": 34901}