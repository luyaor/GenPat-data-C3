{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2223f1734590a82477569e6af2f70c98", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f0f4ae59bb2beeb9e9965477473785a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "c45bf502fba0f629b4a4d8d054f7be8a5c8b1dee", "commitAfterChange": "39b76d2a7f3a6f2c26b172e494e7acf3aff1dea6", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 23, "signatureBeforeChange": " public int getNextToken() throws InvalidInputException", "signatureAfterChange": " public int getNextToken() throws InvalidInputException", "diff": ["-\t\t\t\t\t\tcheckNonExternalizedString();", "+\t\t\t\t\t\tif (this.currentLine != null) {", "+\t\t\t\t\t\t\tparseTags(false);", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tthis.currentLine = null;", "+\t\t\t\t\t\t} else if (this.currentLine != null) {", "+\t\t\t\t\t\t\tthis.currentLine.clear();", "-\t\t\t\t\tif (this.checkNonExternalizedStringLiterals){ // check for presence of\tNLS tags", "-\t\t\t\t\t\tif (this.currentLine == null) {", "-\t\t\t\t\t\t\tthis.currentLine = new NLSLine();", "-\t\t\t\t\t\t}", "+\t\t\t\t\tif (this.currentLine != null){ // check for presence of\tNLS tags", "-\t\t\t\t\t\t\t\t\tcheckNonExternalizedString();", "+\t\t\t\t\t\t\t\t\tif (this.currentLine != null) {", "+\t\t\t\t\t\t\t\t\t\tparseTags(true);", "+\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\t\tthis.currentLine = null;", "+\t\t\t\t\t\t\t\t\t} else if (this.currentLine != null) {", "+\t\t\t\t\t\t\t\t\t\tthis.currentLine.clear();", "+\t\t\t\t\t\t\t\tif (this.currentLine != null) {", "+\t\t\t\t\t\t\t\t\tparseTags(true);", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\tcheckNonExternalizedString();", "+\t\t\t\t\t\t\t\t\tif (this.currentLine != null) {", "+\t\t\t\t\t\t\t\t\t\tparseTags(false);", "+\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\t\tthis.currentLine = null;", "+\t\t\t\t\t\t\t\t\t} else if (currentLine != null){", "+\t\t\t\t\t\t\t\t\t\tthis.currentLine.clear();", "-\t\t\t\t\t\t\t\t\t\tcheckNonExternalizedString();", "+\t\t\t\t\t\t\t\t\t\tif (this.currentLine != null) {", "+\t\t\t\t\t\t\t\t\t\t\tparseTags(false);", "+\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\t\t\tthis.currentLine = null;", "+\t\t\t\t\t\t\t\t\t\t} else if (this.currentLine != null) {", "+\t\t\t\t\t\t\t\t\t\t\tthis.currentLine.clear();", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c6105e390d46eed70b7cf85a1a1cdb1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/eval/DebugEvaluationTest.java", "commitBeforeChange": "bc1023a3db35de5f11d5861f411b9a4de78ba0ab", "commitAfterChange": "bb9caf310cba60ea26e86d0cc9ab1b54feb67156", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t\tpublic boolean acceptClassFiles(org.eclipse.jdt.internal.compiler.ClassFile[] classFiles, char[] codeSnippetClassName)", "signatureAfterChange": " \t\tpublic boolean acceptClassFiles(org.eclipse.jdt.internal.compiler.ClassFile[] classFiles, char[] codeSnippetClassName)", "diff": ["-\t\t\t} else {", "-\t\t\t\t// Send but don't run", "-\t\t\t\tsuper.acceptClassFiles(classFiles, null);", "-", "-\t\t\t\t// Run if needed", "-\t\t\t\tif (codeSnippetClassName != null) {", "-\t\t\t\t\tboolean success = jdiStackFrame.run(new String(codeSnippetClassName));", "-\t\t\t\t\tif (success) {", "-\t\t\t\t\t\tTargetInterface.Result result = target.getResult();", "-\t\t\t\t\t\tif (result.displayString == null) {", "-\t\t\t\t\t\t\tthis.acceptResult(new EvaluationResult(null, EvaluationResult.T_CODE_SNIPPET, null, null));", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tthis.acceptResult(new EvaluationResult(null, EvaluationResult.T_CODE_SNIPPET, result.displayString, result.typeName));", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\treturn success;", "-\t\t\t\t} else {", "-\t\t\t\t\treturn true;", "-\t\t\t\t}", "+\t\t\t// Send but don't run", "+\t\t\tsuper.acceptClassFiles(classFiles, null);", "+", "+\t\t\t// Run if needed", "+\t\t\tif (codeSnippetClassName != null) {", "+\t\t\t\tboolean success = jdiStackFrame.run(new String(codeSnippetClassName));", "+\t\t\t\tif (success) {", "+\t\t\t\t\tTargetInterface.Result result = target.getResult();", "+\t\t\t\t\tif (result.displayString == null) {", "+\t\t\t\t\t\tthis.acceptResult(new EvaluationResult(null, EvaluationResult.T_CODE_SNIPPET, null, null));", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tthis.acceptResult(new EvaluationResult(null, EvaluationResult.T_CODE_SNIPPET, result.displayString, result.typeName));", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\treturn success;", "+\t\t\t}", "+\t\t\treturn true;"]}], "num": 61248}