{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "de0172efe5ddc2c08891855201fc16b1", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a90b0f98819f55ff3496de6ed89e358a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/EvaluationContext.java", "commitBeforeChange": "1369ee539fab963cb9212bc0e7728c8e7ea1581c", "commitAfterChange": "8677d75931646723a12e1b4ccafa141861462004", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void evaluateImports(INameEnvironment environment, IRequestor requestor, IProblemFactory problemFactory)", "signatureAfterChange": " public void evaluateImports(INameEnvironment environment, IRequestor requestor, IProblemFactory problemFactory)", "diff": ["-\t\t\t\t\tproblems[0] = problemFactory.createProblem(importDeclaration, IProblem.ImportNotFound, new String[] {new String(importDeclaration)}, ProblemSeverities.Warning, 0, importDeclaration.length - 1, i);", "+\t\t\t\t\tString[] arguments = new String[] {new String(importDeclaration)};", "+\t\t\t\t\tproblems[0] = problemFactory.createProblem(importDeclaration, IProblem.ImportNotFound, arguments, arguments, ProblemSeverities.Warning, 0, importDeclaration.length - 1, i);", "-\t\t\t\t\tproblems[0] = problemFactory.createProblem(importDeclaration, IProblem.ImportNotFound, new String[] {new String(importDeclaration)}, ProblemSeverities.Warning, 0, importDeclaration.length - 1, i);", "+\t\t\t\t\tString[] arguments = new String[] {new String(importDeclaration)};", "+\t\t\t\t\tproblems[0] = problemFactory.createProblem(importDeclaration, IProblem.ImportNotFound, arguments, arguments, ProblemSeverities.Warning, 0, importDeclaration.length - 1, i);", "-\t\t\tproblems[0] = problemFactory.createProblem(importDeclaration, IProblem.ImportNotFound, new String[] {new String(importDeclaration)}, ProblemSeverities.Warning, 0, importDeclaration.length - 1, i);", "+\t\t\tString[] arguments = new String[] {new String(importDeclaration)};", "+\t\t\tproblems[0] = problemFactory.createProblem(importDeclaration, IProblem.ImportNotFound, arguments, arguments, ProblemSeverities.Warning, 0, importDeclaration.length - 1, i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b424a7a67d54cdd2d78b69b0dcba024c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/EvaluationContext.java", "commitBeforeChange": "80c078ddcf769ceb84a30bdd1354fc49a196e760", "commitAfterChange": "1e3ac51cb3938f7e9fd57cd2551e590148671265", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r public void evaluateImports(INameEnvironment environment, IRequestor requestor, IProblemFactory problemFactory)", "signatureAfterChange": "\r public void evaluateImports(INameEnvironment environment, IRequestor requestor, IProblemFactory problemFactory)", "diff": ["-\t\t\t\t\tproblems[0] = problemFactory.createProblem(importDeclaration, ProblemIrritants.ImportProblemBase + ProblemReasons.NotFound, new String[] {new String(importDeclaration)}, ProblemSeverities.Warning, 0, importDeclaration.length - 1, i);\r", "+\t\t\t\t\tproblems[0] = problemFactory.createProblem(importDeclaration, IProblem.ImportProblemBase + ProblemReasons.NotFound, new String[] {new String(importDeclaration)}, ProblemSeverities.Warning, 0, importDeclaration.length - 1, i);\r", "-\t\t\t\t\tproblems[0] = problemFactory.createProblem(importDeclaration, ProblemIrritants.ImportProblemBase + ProblemReasons.NotFound, new String[] {new String(importDeclaration)}, ProblemSeverities.Warning, 0, importDeclaration.length - 1, i);\r", "+\t\t\t\t\tproblems[0] = problemFactory.createProblem(importDeclaration, IProblem.ImportProblemBase + ProblemReasons.NotFound, new String[] {new String(importDeclaration)}, ProblemSeverities.Warning, 0, importDeclaration.length - 1, i);\r", "-\t\t\tproblems[0] = problemFactory.createProblem(importDeclaration, ProblemIrritants.ImportProblemBase + ProblemReasons.NotFound, new String[] {new String(importDeclaration)}, ProblemSeverities.Warning, 0, importDeclaration.length - 1, i);\r", "+\t\t\tproblems[0] = problemFactory.createProblem(importDeclaration, IProblem.ImportProblemBase + ProblemReasons.NotFound, new String[] {new String(importDeclaration)}, ProblemSeverities.Warning, 0, importDeclaration.length - 1, i);\r"]}], "num": 22721}