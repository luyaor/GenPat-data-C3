{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e22a60127b51c9f4d5250fdd4e16b75b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8be9d71e04deb4d19bfd5f90788f5eed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "c986b0f978be08ca5c6279c4e65ad1a7f4c62b60", "commitAfterChange": "be7acf5c57ef3c4a15433f3f4f0191da4eed3774", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tpublic void generatePostIncrement(BlockScope currentScope, CodeStream codeStream, CompoundAssignment postIncrement, boolean valueRequired)", "signatureAfterChange": " \t \tpublic void generatePostIncrement(BlockScope currentScope, CodeStream codeStream, CompoundAssignment postIncrement, boolean valueRequired)", "diff": ["-\t\t\t\tcodeStream.generateImplicitConversion(postIncrement.assignmentImplicitConversion);", "+\t\t\t\tcodeStream.generateImplicitConversion(postIncrement.preAssignImplicitConversion);", "-\t\t\t\t\tcodeStream.generateImplicitConversion(postIncrement.assignmentImplicitConversion);", "+\t\t\t\t\tcodeStream.generateImplicitConversion(postIncrement.preAssignImplicitConversion);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e4052e69163f29bc309b30f7ff99a57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "05bd6362ebc3db4accc519070d9c8a9ecd2a788b", "commitAfterChange": "905cf94d64f942e28e58015355605b9b9383c577", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tpublic void generateOptimizedStringConcatenation( \t\tBlockScope blockScope, \t\tCodeStream codeStream, \t\tint typeID)", "signatureAfterChange": " \t \tpublic void generateOptimizedStringConcatenation( \t\tBlockScope blockScope, \t\tCodeStream codeStream, \t\tint typeID)", "diff": ["-\t\t\t\tcodeStream.invokeStringConcatenationAppendForType(implicitConversion & 0xF);", "+\t\t\t\tcodeStream.invokeStringConcatenationAppendForType(implicitConversion & COMPILE_TYPE_MASK);", "-\t\t\t\t\tleft.implicitConversion & 0xF);", "+\t\t\t\t\tleft.implicitConversion & COMPILE_TYPE_MASK);", "-\t\t\t\t\tright.implicitConversion & 0xF);", "+\t\t\t\t\tright.implicitConversion & COMPILE_TYPE_MASK);"]}], "num": 56890}