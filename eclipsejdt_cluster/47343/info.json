{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0d0cdbc8c8581b6eafdbad0755b91b87", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50da0c461bdb9042203e3e0a9a5d0f01", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "ffd96339198fcdfc38a0c44d4da9dfd0a59d21fc", "commitAfterChange": "800086b43f754a4bddaa8c7c50578119d7c63538", "methodNumberBeforeChange": 442, "methodNumberAfterChange": 442, "signatureBeforeChange": " protected void pushIdentifier(char [] identifier, long position)", "signatureAfterChange": " protected void pushIdentifier(char [] identifier, long position)", "diff": ["-\tif (this.parsingJava8Plus && identifier.length == 1 && identifier[0] == '_') {", "-\t\tproblemReporter().illegalUseOfUnderscoreAsAnIdentifier((int) (position >>> 32), (int) position);", "+\tif (this.parsingJava8Plus && identifier.length == 1 && identifier[0] == '_' && !this.processingLambdaParameterList) {", "+\t\tproblemReporter().illegalUseOfUnderscoreAsAnIdentifier((int) (position >>> 32), (int) position, false /* not a lambda parameter */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f294e43e42e580951da9c341d8aa60c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "0534618c17c0b5f6c361eb5acf9c22731255984f", "commitAfterChange": "d85ef445439a7932d1fe7c7dafa9bf16e2d2dd51", "methodNumberBeforeChange": 285, "methodNumberAfterChange": 289, "signatureBeforeChange": " protected void consumeToken(int type)", "signatureAfterChange": " protected void consumeToken(int type)", "diff": ["-\t\t\t\tproblemReporter().useAssertAsAnIdentifier((int) (positions >>> 32), (int) positions);", "+\t\t\t\tif(!this.statementRecoveryActivated) problemReporter().useAssertAsAnIdentifier((int) (positions >>> 32), (int) positions);", "-\t\t\t\tproblemReporter().useEnumAsAnIdentifier((int) (positions >>> 32), (int) positions);", "+\t\t\t\tif(!this.statementRecoveryActivated) problemReporter().useEnumAsAnIdentifier((int) (positions >>> 32), (int) positions);"]}], "num": 47343}