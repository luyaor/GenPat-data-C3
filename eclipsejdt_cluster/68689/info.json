{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3000d4cab06e5cde1c45055dd9da1540", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75fd9a07129aa8023971df6a2f356703", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "70e7dc8284deadd5b37cb25d1eb08df1105ac893", "commitAfterChange": "e08761f63c783c669290a9af1a8a518a8fe34113", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "signatureAfterChange": " \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "diff": ["-\t\t\tif (originalBinding != field && originalBinding.type != field.type) {", "-\t\t\t    // extra cast needed if method return type has type variable", "-\t\t\t    if ((originalBinding.type.tagBits & TagBits.HasTypeVariable) != 0 && runtimeTimeType.id != T_JavaLangObject) {", "-\t\t\t    \tTypeBinding targetType = (!compileTimeType.isBaseType() && runtimeTimeType.isBaseType()) ", "-\t\t\t    \t\t? compileTimeType  // unboxing: checkcast before conversion", "-\t\t\t    \t\t: runtimeTimeType;", "-\t\t\t        this.genericCast = originalBinding.type.genericCast(scope.boxing(targetType));", "-\t\t\t    }", "+\t\t\tTypeBinding originalType = originalBinding.type;", "+\t\t    // extra cast needed if method return type is type variable", "+\t\t\tif (originalBinding != field ", "+\t\t\t\t\t&& originalType != field.type", "+\t\t\t\t\t&& runtimeTimeType.id != T_JavaLangObject", "+\t\t\t\t\t&& (originalType.tagBits & TagBits.HasTypeVariable) != 0) {", "+\t\t    \tTypeBinding targetType = (!compileTimeType.isBaseType() && runtimeTimeType.isBaseType()) ", "+\t\t    \t\t? compileTimeType  // unboxing: checkcast before conversion", "+\t\t    \t\t: runtimeTimeType;", "+\t\t        this.genericCast = originalType.genericCast(scope.boxing(targetType));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85347aa7f41578d152b9480b5c5094d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "70e7dc8284deadd5b37cb25d1eb08df1105ac893", "commitAfterChange": "e08761f63c783c669290a9af1a8a518a8fe34113", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "signatureAfterChange": " \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "diff": ["-\t\t\tif (originalBinding != field && originalBinding.type != field.type) {", "-\t\t\t    // extra cast needed if method return type has type variable", "-\t\t\t    if ((originalBinding.type.tagBits & TagBits.HasTypeVariable) != 0 && runtimeTimeType.id != T_JavaLangObject) {", "-\t\t\t    \tTypeBinding targetType = (!compileTimeType.isBaseType() && runtimeTimeType.isBaseType()) ", "-\t\t\t    \t\t? compileTimeType  // unboxing: checkcast before conversion", "-\t\t\t    \t\t: runtimeTimeType;", "-\t\t\t    \tsetGenericCast(length,originalBinding.type.genericCast(targetType));", "-\t\t\t    }", "+\t\t\tTypeBinding originalType = originalBinding.type;", "+\t\t    // extra cast needed if method return type has type variable", "+\t\t\tif (originalBinding != field ", "+\t\t\t\t\t&& originalType != field.type", "+\t\t\t    \t&& runtimeTimeType.id != T_JavaLangObject", "+\t\t\t    \t&& (originalType.tagBits & TagBits.HasTypeVariable) != 0) {", "+\t\t    \tTypeBinding targetType = (!compileTimeType.isBaseType() && runtimeTimeType.isBaseType()) ", "+\t\t    \t\t? compileTimeType  // unboxing: checkcast before conversion", "+\t\t    \t\t: runtimeTimeType;", "+\t\t    \tsetGenericCast(length, originalType.genericCast(targetType));"]}], "num": 68689}