{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "76f886fbb2bc1453b039bd853dcedcf6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c22422db13b9b8bc3029117eb4ef9e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "07f2a3d76611d11852367ea136a6272990449122", "commitAfterChange": "b51487a3e769c1faf54930e906289a243b81936a", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": " \t\t\t\t\t\tpublic void handleException(Throwable exception)", "signatureAfterChange": "  \tpublic void notifyListeners(IJavaElementDelta deltaToNotify, int eventType, IElementChangedListener[] listeners, int[] listenerMask, int listenerCount)", "diff": ["+", "+\tpublic void notifyListeners(IJavaElementDelta deltaToNotify, int eventType, IElementChangedListener[] listeners, int[] listenerMask, int listenerCount) {", "+\t\tfinal ElementChangedEvent extraEvent = new ElementChangedEvent(deltaToNotify, eventType);", "+\t\tfor (int i= 0; i < listenerCount; i++) {", "+\t\t\tif ((listenerMask[i] & eventType) != 0){", "+\t\t\t\tfinal IElementChangedListener listener = listeners[i];", "+\t\t\t\tif (DeltaProcessor.VERBOSE) {", "+\t\t\t\t\tSystem.out.println(\"Listener #\" + (i+1) + \"=\" + listener.toString());//$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t\t// wrap callbacks with Safe runnable for subsequent listeners to be called when some are causing grief", "+\t\t\t\tPlatform.run(new ISafeRunnable() {", "+\t\t\t\t\tpublic void handleException(Throwable exception) {", "+\t\t\t\t\t\tUtil.log(exception, \"Exception occurred in listener of Java element change notification\"); //$NON-NLS-1$", "+\t\t\t\t\tpublic void run() throws Exception {", "+\t\t\t\t\t\tlistener.elementChanged(extraEvent);", "-\t\t\t\t\tPlatform.run(new ISafeRunnable() {", "-\t\t\t\t\t\tpublic void handleException(Throwable exception) {", "-\t\t\t\t\t\t\tUtil.log(exception, \"Exception occurred in listener of Java element change notification\"); //$NON-NLS-1$", "-\t\t\t\t\t\t}", "+\t\t\t\t});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95e38e4a55186ab87907dc4e62e51bf4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "9b8497af1cbd77526a4fa45b99ed631f29570c0f", "commitAfterChange": "e2827e126b55e7ef1923fa3efec0a2ea0aba2477", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t\t\t\t \t\tpublic CompilationParticipant[] getCompilationParticipants(IJavaProject project)", "signatureAfterChange": " \t\t\t\t \t\tpublic CompilationParticipant[] getCompilationParticipants(IJavaProject project)", "diff": ["-\t\t\tCompilationParticipant[] participants = getRegisteredParticipants();", "-\t\t\tif (participants == NO_PARTICIPANTS)", "+\t\t\tfinal Object[][] participantsPerSource = getRegisteredParticipants();", "+\t\t\tif (participantsPerSource == NO_PARTICIPANTS)", "+\t\t\tString sourceLevel = project.getOption(JavaCore.COMPILER_SOURCE, true/*inherit options*/);", "+\t\t\tfinal int sourceLevelIndex = indexForSourceLevel(sourceLevel);", "+\t\t\tfinal Object[] participants = participantsPerSource[sourceLevelIndex];", "-\t\t\t\tCompilationParticipant participant = participants[i];", "-\t\t\t\tif (participant.isActive(project))", "+\t\t\t\tif (participants[i] instanceof IConfigurationElement) {", "+\t\t\t\t\tfinal IConfigurationElement configElement = (IConfigurationElement) participants[i];", "+\t\t\t\t\tfinal int participantIndex = i;", "+\t\t\t\t\tPlatform.run(new ISafeRunnable() {", "+\t\t\t\t\t\tpublic void handleException(Throwable exception) {", "+\t\t\t\t\t\t\tUtil.log(exception, \"Exception occurred while creating compilation participant\"); //$NON-NLS-1$", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tpublic void run() throws Exception {", "+\t\t\t\t\t\t\tObject executableExtension = configElement.createExecutableExtension(\"class\"); //$NON-NLS-1$ ", "+\t\t\t\t\t\t\tfor (int j = sourceLevelIndex; j < MAX_SOURCE_LEVEL; j++)", "+\t\t\t\t\t\t\t\tparticipantsPerSource[j][participantIndex] = executableExtension;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t});", "+\t\t\t\t} ", "+\t\t\t\tCompilationParticipant participant = (CompilationParticipant) participants[i];", "+\t\t\t\tif (participant != null && participant.isActive(project))"]}], "num": 20208}