{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "10f7d6dd72a795ade8ded17e5840a645", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ac1680a8c6cc8abbb60e2b06fc39be9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/src/org/eclipse/jdt/compiler/apt/tests/BatchTestUtils.java", "commitBeforeChange": "da5d5f5dcaeaf009feb139b87f69fd7bf09595b3", "commitAfterChange": "65f5152e309a08bb91b2b35f96e93b2fa93bae4f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic static void compileTree(JavaCompiler compiler, List<String> options, File targetFolder, boolean useJLS8Processors)", "signatureAfterChange": " \t \tpublic static void compileTree(JavaCompiler compiler, List<String> options, File targetFolder,  \t\t\tDiagnosticListener<? super JavaFileObject> listener)", "diff": ["+\t", "+\tpublic static void compileTree(JavaCompiler compiler, List<String> options, File targetFolder, ", "+\t\t\tDiagnosticListener<? super JavaFileObject> listener) {", "+\t\tcompileTree(compiler, options, targetFolder, false, listener);", "+\t}", "-\t\tCompilationTask task = compiler.getTask(printWriter, manager, null, options, null, units);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1d903cd6bab06d9a491455518c371ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/src/org/eclipse/jdt/compiler/apt/tests/BatchTestUtils.java", "commitBeforeChange": "da5d5f5dcaeaf009feb139b87f69fd7bf09595b3", "commitAfterChange": "65f5152e309a08bb91b2b35f96e93b2fa93bae4f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic static void compileTree(JavaCompiler compiler, List<String> options, File targetFolder, boolean useJLS8Processors)", "signatureAfterChange": "  \tpublic static void compileTree(JavaCompiler compiler, List<String> options, \t\t\tFile targetFolder, boolean useJLS8Processors, \t\t\tDiagnosticListener<? super JavaFileObject> listener)", "diff": ["+", "+\tpublic static void compileTree(JavaCompiler compiler, List<String> options,", "+\t\t\tFile targetFolder, boolean useJLS8Processors,", "+\t\t\tDiagnosticListener<? super JavaFileObject> listener) {", "-\t\tCompilationTask task = compiler.getTask(printWriter, manager, null, options, null, units);", "+\t\tCompilationTask task = compiler.getTask(printWriter, manager, listener, options, null, units);"]}], "num": 9030}