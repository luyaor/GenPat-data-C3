{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc76fa76c047c04bcbcd4d3d2aa26d27", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85ecd6685c6dd61b4b959a0c44f424b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeTests.java", "commitBeforeChange": "9fa4ee2d52d7a35a0c57f8c4b875f0f155754f75", "commitAfterChange": "330462fa1b1e3cc7e6b257e0a0f3470535bf4f54", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 64, "signatureBeforeChange": " \tpublic void testStringPatternNestedParam05() throws CoreException", "signatureAfterChange": " \tpublic void testStringNestedMultipleArguments01() throws CoreException", "diff": ["-\tpublic void testStringPatternNestedParam05() throws CoreException {", "-\t\tIJavaSearchScope scope = getJavaSearchScope15(\"g3.t\", true /* add all subpackages */);", "+\t// String pattern with nested multiple type arguments", "+\tpublic void testStringNestedMultipleArguments01() throws CoreException {", "+\t\tIJavaSearchScope scope = getJavaSearchCUScope(\"JavaSearch15\", \"g3/t/ref\", \"R1.java\");", "-\t\t\t\"src/g3/t/ref/R1.java g3.t.ref.R1.sgsm_wld [GM<?, ?, ?>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R1.java g3.t.ref.R1.sgsm_www [GM<?, ?, ?>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R1.java g3.t.ref.R1.sgsm_www [GM<?, ?, ?>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R1.java g3.t.ref.R1.sgsm_www [GM<?, ?, ?>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R1.java g3.t.ref.R1.sgsm_obj [GM<Object, Exception, RuntimeException>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R1.java g3.t.ref.R1.qgsm_wld [GM<?, ?, ?>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R1.java g3.t.ref.R1.qgsm_www [GM<?, ?, ?>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R1.java g3.t.ref.R1.qgsm_www [GM<?, ?, ?>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R1.java g3.t.ref.R1.qgsm_www [GM<?, ?, ?>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R1.java g3.t.ref.R1.qgsm_obj [GM<java.lang.Object, java.lang.Exception, java.lang.RuntimeException>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.sgsm_wld [GM<?, ?, ?>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.sgsm_www [GM<?, ?, ?>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.sgsm_www [GM<?, ?, ?>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.sgsm_www [GM<?, ?, ?>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.sgsm_obj [GM<Object, Exception, RuntimeException>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.qgsm_wld [GM<?, ?, ?>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.qgsm_www [GM<?, ?, ?>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.qgsm_www [GM<?, ?, ?>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.qgsm_www [GM<?, ?, ?>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R2.java g3.t.ref.R2.qgsm_obj [GM<java.lang.Object, java.lang.Exception, java.lang.RuntimeException>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R3.java g3.t.ref.R3.sgsm_wld [GM<?, ?, ?>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R3.java g3.t.ref.R3.sgsm_www [GM<?, ?, ?>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R3.java g3.t.ref.R3.sgsm_www [GM<?, ?, ?>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R3.java g3.t.ref.R3.sgsm_www [GM<?, ?, ?>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R3.java g3.t.ref.R3.sgsm_obj [GM<Object, Exception, RuntimeException>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R3.java g3.t.ref.R3.qgsm_wld [GM<?, ?, ?>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R3.java g3.t.ref.R3.qgsm_www [GM<?, ?, ?>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R3.java g3.t.ref.R3.qgsm_www [GM<?, ?, ?>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R3.java g3.t.ref.R3.qgsm_www [GM<?, ?, ?>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g3/t/ref/R3.java g3.t.ref.R3.qgsm_obj [GM<Object, Exception, RuntimeException>] EXACT_MATCH\",", "+\t\t\t\"src/g3/t/ref/R1.java [GM] COMPATIBLE_ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R1.java g3.t.ref.R1.sgsm_wld [GM<?, ?, ?>] COMPATIBLE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R1.java g3.t.ref.R1.sgsm_www [GM<GM<?, ?, ?>,GM<?, ?, ?>,GM<?, ?, ?>>] ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R1.java g3.t.ref.R1.sgsm_www [GM<?, ?, ?>] COMPATIBLE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R1.java g3.t.ref.R1.sgsm_www [GM<?, ?, ?>] COMPATIBLE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R1.java g3.t.ref.R1.sgsm_www [GM<?, ?, ?>] COMPATIBLE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R1.java g3.t.ref.R1.sgsm_obj [GM<Object, Exception, RuntimeException>] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R1.java g3.t.ref.R1.sgms_wld [GM<GS<?>, GS<?>, GS<?>>] ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R1.java g3.t.ref.R1.sgms_www [GM<GS<?>, GS<GS<?>>, GS<GS<GS<?>>>>] ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R1.java g3.t.ref.R1.sgms_obj [GM<GS<Object>, GS<? extends Throwable>, GS<? super RuntimeException>>] ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R1.java g3.t.ref.R1.qgsm_wld [GM<?, ?, ?>] COMPATIBLE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R1.java g3.t.ref.R1.qgsm_www [GM<g3.t.def.GM<?, ?, ?>, g3.t.def.GM<?, ?, ?>, g3.t.def.GM<?, ?, ?>>] ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R1.java g3.t.ref.R1.qgsm_www [GM<?, ?, ?>] COMPATIBLE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R1.java g3.t.ref.R1.qgsm_www [GM<?, ?, ?>] COMPATIBLE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R1.java g3.t.ref.R1.qgsm_www [GM<?, ?, ?>] COMPATIBLE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R1.java g3.t.ref.R1.qgsm_obj [GM<java.lang.Object, java.lang.Exception, java.lang.RuntimeException>] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R1.java g3.t.ref.R1.qgms_wld [GM<g3.t.def.GS<?>, g3.t.def.GS<?>, g3.t.def.GS<?>>] ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R1.java g3.t.ref.R1.qgms_www [GM<g3.t.def.GS<?>, g3.t.def.GS<g3.t.def.GS<?>>, g3.t.def.GS<g3.t.def.GS<g3.t.def.GS<?>>>>] ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g3/t/ref/R1.java g3.t.ref.R1.qgms_obj [GM<g3.t.def.GS<java.lang.Object>, g3.t.def.GS<? extends java.lang.Throwable>, g3.t.def.GS<? super java.lang.RuntimeException>>] ERASURE_MATCH\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3edb4ab02c22b5450f31474a62ea3be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "08c5b9004bde27fb4063ce300ce881966676fe74", "commitAfterChange": "28d58bf6eb942015446b8ffce8f446f86e9686d9", "methodNumberBeforeChange": 164, "methodNumberAfterChange": 164, "signatureBeforeChange": " public void test401789_401790a()", "signatureAfterChange": " public void test401789_401790a()", "diff": ["-\t\t\t\t\"\t^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\"The constructor X.Y(X::goo) is undefined\\n\" + ", "+\t\t\t\t\"\t     ^^^^^^\\n\" + ", "+\t\t\t\t\"The type of goo() from the type X is int, this is incompatible with the descriptor\\'s return type: String\\n\" + ", "-\t\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\"The constructor X((<no type> x) -> {\\n\" + ", "-\t\t\t\t\"  return 10;\\n\" + ", "-\t\t\t\t\"}) is undefined\\n\" + ", "+\t\t\t\t\"\t                     ^^\\n\" + ", "+\t\t\t\t\"Type mismatch: cannot convert from int to String\\n\" + ", "-\t\t\t\t\"\t^^^\\n\" + ", "-\t\t\t\t\"The method foo(I) in the type X is not applicable for the arguments (X::goo)\\n\" + ", "+\t\t\t\t\"\t    ^^^^^^\\n\" + ", "+\t\t\t\t\"The type of goo() from the type X is int, this is incompatible with the descriptor\\'s return type: String\\n\" + ", "-\t\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\"The constructor X((<no type> x) -> {\\n\" + ", "-\t\t\t\t\"  return 10;\\n\" + ", "-\t\t\t\t\"}) is undefined\\n\" + ", "+\t\t\t\t\"\t                    ^^\\n\" + ", "+\t\t\t\t\"Type mismatch: cannot convert from int to String\\n\" + ", "-\t\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\"The constructor X((<no type> x) -> {\\n\" + ", "-\t\t\t\t\"  return 10;\\n\" + ", "-\t\t\t\t\"}) is undefined\\n\" + ", "+\t\t\t\t\"\t                    ^^\\n\" + ", "+\t\t\t\t\"Type mismatch: cannot convert from int to String\\n\" + ", "-\t\t\t\t\"6. ERROR in X.java (at line 20)\\n\" + ", "-\t\t\t\t\"\tnew X((x)->{ return 10;}).new Y((x) -> { return 0;});\\n\" + ", "-\t\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\"The constructor X.Y((<no type> x) -> {\\n\" + ", "-\t\t\t\t\"  return 0;\\n\" + ", "-\t\t\t\t\"}) is undefined\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"7. ERROR in X.java (at line 21)\\n\" + ", "+\t\t\t\t\"6. ERROR in X.java (at line 21)\\n\" + ", "-\t\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\"The constructor X((<no type> x) -> {\\n\" + ", "-\t\t\t\t\"  return 10;\\n\" + ", "-\t\t\t\t\"}) is undefined\\n\" + ", "+\t\t\t\t\"\t                    ^^\\n\" + ", "+\t\t\t\t\"Type mismatch: cannot convert from int to String\\n\" + ", "-\t\t\t\t\"8. ERROR in X.java (at line 26)\\n\" + ", "+\t\t\t\t\"7. ERROR in X.java (at line 26)\\n\" + ", "-\t\t\t\t\"\t^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\"The constructor X(X::goo) is undefined\\n\" + ", "+\t\t\t\t\"\t      ^^^^^^\\n\" + ", "+\t\t\t\t\"The type of goo() from the type X is int, this is incompatible with the descriptor\\'s return type: String\\n\" + ", "-\t\t\t\t\"9. ERROR in X.java (at line 29)\\n\" + ", "+\t\t\t\t\"8. ERROR in X.java (at line 29)\\n\" + ", "-\t\t\t\t\"\t^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\"The constructor X((<no type> x) -> 10) is undefined\\n\" + ", "+\t\t\t\t\"\t            ^^\\n\" + ", "+\t\t\t\t\"Type mismatch: cannot convert from int to String\\n\" + ", "-\t\t\t\t\"10. ERROR in X.java (at line 31)\\n\" + ", "+\t\t\t\t\"9. ERROR in X.java (at line 31)\\n\" + "]}], "num": 61039}