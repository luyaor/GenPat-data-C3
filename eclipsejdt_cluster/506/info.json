{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "116c8054ad95f6f3de1dc0b1d2269b75", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a66b9467480fe3c909cd61b5cea9b30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "198d94bedf8984594355707af3b11dd0e060bd78", "commitAfterChange": "ebf5deb17f462a2a1a50c9b4076f1d52394081e1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic boolean match(AssertStatement node, Object other)", "signatureAfterChange": " \tpublic boolean match(DimensionInfo node, Object other)", "diff": ["+\t */", "+\tpublic boolean match(DimensionInfo node, Object other) {", "+\t\tif (!(other instanceof DimensionInfo))", "+\t\t\treturn false;", "+\t\tDimensionInfo o = (DimensionInfo) other;", "+\t\treturn safeSubtreeListMatch(node.annotations(), o.annotations())", "+\t\t\t\t&& safeSubtreeMatch(node.expression(), o.expression());", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9f8de2d6845ee69ec611d7aa083283c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " \tpublic boolean match(SynchronizedStatement node, Object other)", "signatureAfterChange": " \tpublic boolean match(QualifiedType node, Object other)", "diff": ["+\t */", "+\tpublic boolean match(QualifiedType node, Object other) {", "+\t\tif (!(other instanceof QualifiedType)) {", "+\t\t\treturn false;", "+\t\t}", "+\t\tQualifiedType o = (QualifiedType) other;", "+\t\treturn (", "+\t\t\tsafeSubtreeMatch(node.getQualifier(), o.getQualifier())", "+\t\t\t\t&& safeSubtreeMatch(node.getName(), o.getName()));", "+\t}"]}], "num": 506}