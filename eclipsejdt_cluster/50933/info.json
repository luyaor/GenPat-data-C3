{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a00cb04d301f7186a6add0ab674eeceb", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40eb560a2abf389e0741f36e21990ea6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "82ebc709013252385fce65c14aa676e8e0d39c6f", "commitAfterChange": "e2360e075300bd271e5e3fd90537b7dce7bdaa00", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": "\r \tprotected IClasspathEntry[] readPaths(String xmlClasspath) throws IOException", "signatureAfterChange": "\r \tprotected IClasspathEntry[] readPaths(String xmlClasspath) throws IOException", "diff": ["+\t\t\t\t\t\tcase IClasspathEntry.CPE_CONTAINER :\r", "+\t\t\t\t\t\t\tpaths.add(JavaCore.newContainerEntry(\r", "+\t\t\t\t\t\t\t\t\tpath,\r", "+\t\t\t\t\t\t\t\t\tisExported));\r", "+\t\t\t\t\t\t\tbreak;\r", "+\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "621719d0973745fa52323ad7feb66601", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "1b83df7d45014e7f124fef507b7bdd60803d3e04", "commitAfterChange": "92d8872e8a618ddba36d41f3d903f6d211bf20ba", "methodNumberBeforeChange": 218, "methodNumberAfterChange": 218, "signatureBeforeChange": " public void invalidField(FieldReference fieldRef, TypeBinding searchedType)", "signatureAfterChange": " public void invalidField(FieldReference fieldRef, TypeBinding searchedType)", "diff": ["+\t\tcase ProblemReasons.NoProperEnclosingInstance:", "+\t\t\tnoSuchEnclosingInstance(fieldRef.actualReceiverType, fieldRef.receiver, false);", "+\t\t\treturn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8589294e76ab794de644155656ace6fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FunctionalExpression.java", "commitBeforeChange": "86284f2db6c7ac41b63c1766c9b7b3a016d95a9a", "commitAfterChange": "c8d8bdad35a9dc8d924116cabb6dd00986cff218", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope blockScope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope blockScope)", "diff": ["+\t", "+\t\t\t\tcase ProblemReasons.IntersectionHasMultipleFunctionalInterfaces:", "+\t\t\t\t\tblockScope.problemReporter().multipleFunctionalInterfaces(this);", "+\t\t\t\t\tbreak;", "-\t\treturn this.resolvedType = this.expectedType;  // if interface IJ extends I, J() & IJ's descriptor is I.foo, can't return I", "+\t\treturn this.resolvedType = this.expectedType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3864b555f91901c21ac4a1e2efd5465", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SynchronizedStatement.java", "commitBeforeChange": "4a14b7996200c4956ab362ea6fbd0444521a03e1", "commitAfterChange": "3753b28bebe99ff942eee6c541786e0784acbee4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \r \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "\r \r \tpublic void resolve(BlockScope upperScope)", "diff": ["+\t\t\tcase (T_void) :\r", "+\t\t\t\tscope.problemReporter().illegalVoidExpression(expression);\r", "+\t\t\t\tbreak;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aac0c290cb6fbd4ad6764a3aa62cbf23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/UnaryExpression.java", "commitBeforeChange": "53a1646d9e191b8b912f757450cb4b809c88a6c3", "commitAfterChange": "1981bf8ffea2219e8159438f3f203edffff2e187", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\t\tcase PLUS :", "+\t\t\t\ttableId = PLUS;", "+\t\t\t\tscope.problemReporter().unnecessaryOperator(this);", "+\t\t\t\tbreak;", "+\t\t\t\t// minus case", "-\t\t} //+ and - cases", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1a5e52e181934423ea4dbff198dc060", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.java", "commitBeforeChange": "f463f267bd3e26fe15afb712785b8045bca4918d", "commitAfterChange": "127c5aac940d6a1c5a28540905b27ce397eeca14", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\t\t\tcase FlowInfo.POTENTIALLY_NULL :", "+\t\t\t\tflowInfo.markAsPotentiallyNull(this.binding);", "+\t\t\t\tbreak;"]}], "num": 50933}