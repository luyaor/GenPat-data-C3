{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d6f2ef643ca1bf49259fbbd98efd6d05", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4323e2c81d40bc1eb5fcebf03f47d64f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "e7041eebe1b9ef3b1ae9f5f9c79b24274ea327d1", "commitAfterChange": "8585977b682b225927c2b7dfa188383f714b1d41", "methodNumberBeforeChange": 251, "methodNumberAfterChange": 251, "signatureBeforeChange": " public void test101()", "signatureAfterChange": " public void test101()", "diff": ["-\t\t\t\"Method getX(List<Integer>) has the same erasure getX(List<E>) as another method in type X\\n\" + ", "+\t\t\t\"Erasure of method getX(List<Integer>) is the same as another method in type X\\n\" +", "-\t\t\t\"Method getX(List<String>) has the same erasure getX(List<E>) as another method in type X\\n\" + ", "+\t\t\t\"Erasure of method getX(List<String>) is the same as another method in type X\\n\" +", "-\t\t\t\t\"Method getX(List<Integer>) has the same erasure getX(List<E>) as another method in type X\\n\" + ", "+\t\t\t\t\"Erasure of method getX(List<Integer>) is the same as another method in type X\\n\" +", "-\t\t\t\t\"Method getX(List<String>) has the same erasure getX(List<E>) as another method in type X\\n\" + ", "+\t\t\t\t\"Erasure of method getX(List<String>) is the same as another method in type X\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ca993989b8853ac21a0a58e29827a8c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "16d2bb22ab0669ee00790465fa843455279af5ae", "commitAfterChange": "cb2ffae6de1377c8c53c98f0144305fd03d135f4", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "  \tpublic void test037()", "signatureAfterChange": "  \tpublic void test037()", "diff": ["-\t\t\t\"Type safety: A is a raw type. References to generic type A<T> should be parameterized\\n\" + ", "+\t\t\t\"A is a raw type. References to generic type A<T> should be parameterized\\n\" + ", "-\t\t\t\"Type safety: A is a raw type. References to generic type A<T> should be parameterized\\n\" + ", "+\t\t\t\"A is a raw type. References to generic type A<T> should be parameterized\\n\" + ", "-\t\t\t\"Type safety: A is a raw type. References to generic type A<T> should be parameterized\\n\" + ", "+\t\t\t\"A is a raw type. References to generic type A<T> should be parameterized\\n\" + ", "-\t\t\t\"Type safety: A is a raw type. References to generic type A<T> should be parameterized\\n\" + ", "+\t\t\t\"A is a raw type. References to generic type A<T> should be parameterized\\n\" + "]}], "num": 56552}