{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "64466849c103b6417cac62ae2b708158", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b0ae3d70162d463c04186484c0ce28f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "fee4992bc17cce3178e607ffe1ab2f5367cfcad9", "commitAfterChange": "6e946c59c9a84721a5b3560d54b2d44267b26323", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean recurseInContainers)", "signatureAfterChange": " \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean referredByContainer)", "diff": ["-\tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean recurseInContainers){", "+\tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean referredByContainer){", "-\t\t\t\t\t\t\t\tif (recurseInContainers) {", "-\t\t\t\t\t\t\t\t\tIJavaModelStatus containerEntryStatus = validateClasspathEntry(project, containerEntry, checkSourceAttachment, recurseInContainers);", "-\t\t\t\t\t\t\t\t\tif (!containerEntryStatus.isOK()){", "-\t\t\t\t\t\t\t\t\t\treturn containerEntryStatus;", "-\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tIJavaModelStatus containerEntryStatus = validateClasspathEntry(project, containerEntry, checkSourceAttachment, true/*referred by container*/);", "+\t\t\t\t\t\t\t\tif (!containerEntryStatus.isOK()){", "+\t\t\t\t\t\t\t\t\treturn containerEntryStatus;", "-\t\t\t\t\tIJavaModelStatus status = validateClasspathEntry(project, entry, checkSourceAttachment, recurseInContainers);", "+\t\t\t\t\tIJavaModelStatus status = validateClasspathEntry(project, entry, checkSourceAttachment, false/*not referred by container*/);", "-\t\t\t\t\tif (!status.isOK())", "+\t\t\t\t\tif (!status.isOK()) {", "+\t\t\t\t\t\tif (referredByContainer && status.getCode() == IJavaModelStatusConstants.INVALID_CLASSPATH)", "+\t\t\t\t\t\t\tcontinue; // ignore this entry (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=250946 )", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82220768eced655f62957dd9ce58b420", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "d5cfbf43310ee4287ca95e41bcf01793920b4037", "commitAfterChange": "19036ed763985597632dc62fba09c6522d0864ac", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean referredByContainer)", "signatureAfterChange": " \t \tprivate static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, IClasspathContainer entryContainer, boolean checkSourceAttachment, boolean referredByContainer)", "diff": ["+\t", "+\tprivate static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, IClasspathContainer entryContainer, boolean checkSourceAttachment, boolean referredByContainer){", "-\t\t\t\t\t\t\t\tIJavaModelStatus containerEntryStatus = validateClasspathEntry(project, containerEntry, checkSourceAttachment, true/*referred by container*/);", "+\t\t\t\t\t\t\t\tIJavaModelStatus containerEntryStatus = validateClasspathEntry(project, containerEntry, container, checkSourceAttachment, true/*referred by container*/);", "-\t\t\t\t\tIJavaModelStatus status = validateClasspathEntry(project, entry, checkSourceAttachment, false/*not referred by container*/);", "+\t\t\t\t\tIJavaModelStatus status = validateClasspathEntry(project, entry, null, checkSourceAttachment, false/*not referred by container*/);", "-\t\t\t\tIJavaModelStatus status = validateLibraryEntry(path, project, checkSourceAttachment ? entry.getSourceAttachmentPath() : null, entryPathMsg);", "+\t\t\t\tString containerInfo = null;", "+\t\t\t\tif (entryContainer != null) {", "+\t\t\t\t\tif (entryContainer instanceof UserLibraryClasspathContainer) {", "+\t\t\t\t\t\tcontainerInfo = Messages.bind(Messages.classpath_userLibraryInfo, new String[] {entryContainer.getDescription()});", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tcontainerInfo = Messages.bind(Messages.classpath_containerInfo, new String[] {entryContainer.getDescription()});", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tIJavaModelStatus status = validateLibraryEntry(path, project, containerInfo, checkSourceAttachment ? entry.getSourceAttachmentPath() : null, entryPathMsg);", "-\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INCOMPATIBLE_JDK_LEVEL, project, path, CompilerOptions.versionFromJdkLevel(prereqProjectTargetJDK));", "+\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INCOMPATIBLE_JDK_LEVEL,", "+\t\t\t\t\t\t\t\t\t\tproject, path, ", "+\t\t\t\t\t\t\t\t\t\tMessages.bind(Messages.classpath_incompatibleLibraryJDKLevel,", "+\t\t\t\t\t\t\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\t\t\t\t\t\t\tproject.getElementName(),", "+\t\t\t\t\t\t\t\t\t\t\t\t\tCompilerOptions.versionFromJdkLevel(projectTargetJDK), ", "+\t\t\t\t\t\t\t\t\t\t\t\t\tpath.makeRelative().toString(),", "+\t\t\t\t\t\t\t\t\t\t\t\t\tCompilerOptions.versionFromJdkLevel(prereqProjectTargetJDK)}));"]}], "num": 26514}