{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "acdf8a136f9430f0cc589735eade6b23", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01316debd08eef447870c4192aca7c69", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AutoBoxingTest.java", "commitBeforeChange": "98ff5077500cc7d4399a77f9c1d322d3dbdad499", "commitAfterChange": "0114b817b3783a58a2fe1110992accec45af9e77", "methodNumberBeforeChange": 157, "methodNumberAfterChange": 157, "signatureBeforeChange": " public void _test154()", "signatureAfterChange": " public void test154()", "diff": ["-public void _test154() {", "+public void test154() {", "-\t\t\t\"public class X<T> {\\n\" +", "-\t\t\t\"        T counter;\\n\" +", "-\t\t\t\"        public static void main(String[] args) {\\n\" +", "-\t\t\t\"        \t bar(new X<Integer>());\\n\" +", "-\t\t\t\"        \t new Y().foo();\\n\" +", "-\t\t\t\"        \t new Y().baz();\\n\" +", "-\t\t\t\"        }\\n\" +", "-\t\t\t\"        static void bar(X<Integer> x) {\\n\" +", "-\t\t\t\"        \tx.counter = 0;\\n\" +", "-\t\t\t\"            System.out.print(Integer.toString(x.counter++));\\n\" +", "-\t\t\t\"        }\\n\" +", "-\t\t\t\"}\\n\" +", "-\t\t\t\"\\n\" +", "-\t\t\t\"class Y extends X<Integer> {\\n\" +", "-\t\t\t\"\tY() {\\n\" +", "-\t\t\t\"\t\tthis.counter = 0;\\n\" +", "-\t\t\t\"\t}\\n\" +", "-\t\t\t\"    void foo() {\\n\" +", "-\t\t\t\"        System.out.print(Integer.toString(counter++));\\n\" +", "-\t\t\t\"    }\\n\" +", "-\t\t\t\"    void baz() {\\n\" +", "-\t\t\t\"        System.out.println(Integer.toString(this.counter++));\\n\" +", "-\t\t\t\"    }\\n\" +", "+\t\t\t\"public class X<T> {\\n\" + ", "+\t\t\t\"        T counter;\\n\" + ", "+\t\t\t\"        public static void main(String[] args) {\\n\" + ", "+\t\t\t\"        \t bar(new X<Integer>());\\n\" + ", "+\t\t\t\"        \t new Y().foo();\\n\" + ", "+\t\t\t\"        \t new Y().baz();\\n\" + ", "+\t\t\t\"        }\\n\" + ", "+\t\t\t\"        static void bar(X<Integer> x) {\\n\" + ", "+\t\t\t\"        \tx.counter = 0;\\n\" + ", "+\t\t\t\"            System.out.print(Integer.toString(x.counter++));\\n\" + ", "+\t\t\t\"        }\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"class Y extends X<Integer> {\\n\" + ", "+\t\t\t\"\tY() {\\n\" + ", "+\t\t\t\"\t\tthis.counter = 0;\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"    void foo() {\\n\" + ", "+\t\t\t\"        System.out.print(Integer.toString(counter++));\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"    void baz() {\\n\" + ", "+\t\t\t\"        System.out.println(Integer.toString(this.counter++));\\n\" + ", "+\t\t\t\"    }\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd78a90606e062dbace00de6d1d71efa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AutoBoxingTest.java", "commitBeforeChange": "98ff5077500cc7d4399a77f9c1d322d3dbdad499", "commitAfterChange": "0114b817b3783a58a2fe1110992accec45af9e77", "methodNumberBeforeChange": 158, "methodNumberAfterChange": 158, "signatureBeforeChange": " public void _test155()", "signatureAfterChange": " public void test155()", "diff": ["-public void _test155() {", "+public void test155() {", "-\t\t\t\"public class X<T> {\\n\" +", "-\t\t\t\"        T[] counter;\\n\" +", "-\t\t\t\"        public static void main(String[] args) {\\n\" +", "-\t\t\t\"        \t bar(new X<Integer>());\\n\" +", "-\t\t\t\"        \t new Y().foo();\\n\" +", "-\t\t\t\"        \t new Y().baz();\\n\" +", "-\t\t\t\"        }\\n\" +", "-\t\t\t\"        static void bar(X<Integer> x) {\\n\" +", "-\t\t\t\"        \tx.counter = new Integer[]{ 0 };\\n\" +", "-\t\t\t\"            System.out.print(Integer.toString(x.counter[0]++));\\n\" +", "-\t\t\t\"        }\\n\" +", "-\t\t\t\"}\\n\" +", "-\t\t\t\"\\n\" +", "-\t\t\t\"class Y extends X<Integer> {\\n\" +", "-\t\t\t\"\tY() {\\n\" +", "-\t\t\t\"\t\tthis.counter =  new Integer[]{ 0 };\\n\" +", "-\t\t\t\"\t}\\n\" +", "-\t\t\t\"    void foo() {\\n\" +", "-\t\t\t\"        System.out.print(Integer.toString(counter[0]++));\\n\" +", "-\t\t\t\"    }\\n\" +", "-\t\t\t\"    void baz() {\\n\" +", "-\t\t\t\"        System.out.println(Integer.toString(this.counter[0]++));\\n\" +", "-\t\t\t\"    }\\n\" +", "+\t\t\t\"public class X<T> {\\n\" + ", "+\t\t\t\"        T[] counter;\\n\" + ", "+\t\t\t\"        public static void main(String[] args) {\\n\" + ", "+\t\t\t\"        \t bar(new X<Integer>());\\n\" + ", "+\t\t\t\"        \t new Y().foo();\\n\" + ", "+\t\t\t\"        \t new Y().baz();\\n\" + ", "+\t\t\t\"        }\\n\" + ", "+\t\t\t\"        static void bar(X<Integer> x) {\\n\" + ", "+\t\t\t\"        \tx.counter = new Integer[]{ 0 };\\n\" + ", "+\t\t\t\"            System.out.print(Integer.toString(x.counter[0]++));\\n\" + ", "+\t\t\t\"        }\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"class Y extends X<Integer> {\\n\" + ", "+\t\t\t\"\tY() {\\n\" + ", "+\t\t\t\"\t\tthis.counter =  new Integer[]{ 0 };\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"    void foo() {\\n\" + ", "+\t\t\t\"        System.out.print(Integer.toString(counter[0]++));\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"    void baz() {\\n\" + ", "+\t\t\t\"        System.out.println(Integer.toString(this.counter[0]++));\\n\" + ", "+\t\t\t\"    }\\n\" + "]}], "num": 63935}