{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "76f26bfbac001a1e05c9ed6c7b46a8c9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f1766b2c577244b87b1dc537675de15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public TypeDeclaration updatedTypeDeclaration()", "signatureAfterChange": " public TypeDeclaration updatedTypeDeclaration()", "diff": ["-\t\tMemberTypeDeclaration[] memberTypeDeclarations = new MemberTypeDeclaration[existingCount + memberTypeCount];", "+\t\tTypeDeclaration[] memberTypeDeclarations = new TypeDeclaration[existingCount + memberTypeCount];", "-\t\t\tmemberTypeDeclarations[existingCount + i] = (MemberTypeDeclaration)memberTypes[i].updatedTypeDeclaration();", "+\t\t\tmemberTypeDeclarations[existingCount + i] = memberTypes[i].updatedTypeDeclaration();", "-\t/* might need to cast itself into a MemberTypeDeclaration or a LocalTypeDeclaration */", "-\tTypeDeclaration newTypeDeclaration = null;", "-\t\tnewTypeDeclaration = new MemberTypeDeclaration(typeDeclaration.compilationResult);", "-\t} else {", "-\t\tif (parent instanceof RecoveredMethod){", "-\t\t\tnewTypeDeclaration = new LocalTypeDeclaration(typeDeclaration.compilationResult);", "-\t\t}", "-\t}", "-\t/* copy slots into new type */", "-\tif (newTypeDeclaration != null){", "-\t\tnewTypeDeclaration.modifiers = typeDeclaration.modifiers;", "-\t\tnewTypeDeclaration.modifiersSourceStart = typeDeclaration.modifiersSourceStart;", "-\t\tnewTypeDeclaration.name = typeDeclaration.name;", "-\t\tnewTypeDeclaration.superclass = typeDeclaration.superclass;", "-\t\tnewTypeDeclaration.superInterfaces = typeDeclaration.superInterfaces;", "-\t\tnewTypeDeclaration.fields = typeDeclaration.fields;", "-\t\tnewTypeDeclaration.methods = typeDeclaration.methods;", "-\t\tnewTypeDeclaration.memberTypes = typeDeclaration.memberTypes;", "-\t\tnewTypeDeclaration.ignoreFurtherInvestigation = typeDeclaration.ignoreFurtherInvestigation;", "-\t\tnewTypeDeclaration.maxFieldCount = typeDeclaration.maxFieldCount;", "-\t\tnewTypeDeclaration.declarationSourceStart = typeDeclaration.declarationSourceStart;", "-\t\tnewTypeDeclaration.declarationSourceEnd = typeDeclaration.declarationSourceEnd;", "-\t\tnewTypeDeclaration.bodyEnd = typeDeclaration.bodyEnd;", "-\t\tnewTypeDeclaration.bodyStart = typeDeclaration.bodyStart;", "-\t\ttypeDeclaration = newTypeDeclaration;", "+\t\ttypeDeclaration.bits |= ASTNode.IsMemberTypeMASK;", "+\t} else if (parent instanceof RecoveredMethod){", "+\t\ttypeDeclaration.bits |= ASTNode.IsLocalTypeMASK;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70e10a076f7942a85780fa9114cb4faf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/PrimitiveTypeImpl.java", "commitBeforeChange": "ad2281f1520933e65d479408c685e1055d82a8b2", "commitAfterChange": "90329a8061aecf116ef817e3a00ea13f48a88e85", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t@Override \tpublic TypeKind getKind()", "signatureAfterChange": " \t@Override \tpublic TypeKind getKind()", "diff": ["-\t\tswitch (((BaseTypeBinding)_binding).id) {", "+\t\treturn getKind((BaseTypeBinding)_binding);", "+\t}", "-\t\t\tthrow new IllegalArgumentException(\"BaseTypeBinding of unexpected id \" + ((BaseTypeBinding)_binding).id); //$NON-NLS-1$"]}], "num": 32172}