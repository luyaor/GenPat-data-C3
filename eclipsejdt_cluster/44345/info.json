{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8a1278cbd4c6710b2aa67dddbf281555", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fc65f680a22655d44075f15a81a6712", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      \tReferenceBinding resolve()", "signatureAfterChange": "      \tReferenceBinding resolve()", "diff": ["-\t\tBinaryTypeBinding.resolveType(this.genericType, this.environment, null, 0);", "+\t\tBinaryTypeBinding.resolveType(this.genericType, this.environment, null, 0); // do not assign to genericType field, since will return a raw type", "+\t\t\t\tthis.bound = BinaryTypeBinding.resolveType(this.bound, this.environment, null, 0);", "+\t        \tfor (int i = 0, length = this.otherBounds == null ? 0 : this.otherBounds.length; i < length; i++) {", "+\t\t\t\t\tthis.otherBounds[i]= BinaryTypeBinding.resolveType(this.bound, this.environment, null, 0);", "+\t        \t}", "+\t\t\t\tbreak;", "-\t\t\t\tBinaryTypeBinding.resolveType(this.bound, this.environment, null, 0);", "+\t\t\t\tthis.bound = BinaryTypeBinding.resolveType(this.bound, this.environment, null, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44a0dc77495fddfcdeaa7b4f52f585bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "973af06dbc6df022ac42e8e0a0c238581d8558f6", "commitAfterChange": "f61787e560ec300f4e60b2d9cc64378b38b8a03a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     \tReferenceBinding resolve(LookupEnvironment environment)", "signatureAfterChange": "     \tReferenceBinding resolve(LookupEnvironment environment)", "diff": ["-\t\t\tthis.superclass = BinaryTypeBinding.resolveUnresolvedType(this.superclass, environment, true);", "+\t\t\tthis.superclass = BinaryTypeBinding.resolveType(this.superclass, environment, true);", "-\t\t\t\tinterfaces[i] = BinaryTypeBinding.resolveUnresolvedType(interfaces[i], environment, true);", "+\t\t\t\tinterfaces[i] = BinaryTypeBinding.resolveType(interfaces[i], environment, true);", "-\t\tthis.modifiers &= ~ExtraCompilerModifiers.AccUnresolved;", "-\t", "-\t\t// finish resolving the types", "-\t\tif (this.superclass != null)", "-\t\t\tthis.superclass = BinaryTypeBinding.resolveType(this.superclass, environment, true);", "-\t\tfor (int i = interfaces.length; --i >= 0;)", "-\t\t\tinterfaces[i] = BinaryTypeBinding.resolveType(interfaces[i], environment, true);", "-", "+\t\tthis.modifiers &= ~ExtraCompilerModifiers.AccUnresolved;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d968dca6c1d3d3a1ba5f507eb016ce23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     \tReferenceBinding resolve(LookupEnvironment environment)", "signatureAfterChange": "     \tReferenceBinding resolve(LookupEnvironment environment)", "diff": ["-\t", "+", "+\t\tTypeBinding oldSuperclass = this.superclass, oldFirstInterface = null;", "-\t\tif (this.firstBound != null)", "-\t\t\tthis.firstBound = BinaryTypeBinding.resolveUnresolvedType(this.firstBound, environment, true);", "-\t\tfor (int i = interfaces.length; --i >= 0;)", "-\t\t\tinterfaces[i] = BinaryTypeBinding.resolveUnresolvedType(interfaces[i], environment, true);", "+\t\tint length;", "+\t\tif ((length = interfaces.length) != 0) {", "+\t\t\toldFirstInterface = interfaces[0];", "+\t\t\tfor (int i = length; --i >= 0;) {", "+\t\t\t\tinterfaces[i] = BinaryTypeBinding.resolveUnresolvedType(interfaces[i], environment, true);", "+\t\t\t}", "+\t\t}", "-\t\tif (this.firstBound != null)", "-\t\t\tthis.firstBound = BinaryTypeBinding.resolveType(this.firstBound, environment, true);", "+", "+\t\t// refresh the firstBound in case it changed", "+\t\tif (this.firstBound != null) {", "+\t\t\tif (this.firstBound == oldSuperclass) {", "+\t\t\t\tthis.firstBound = this.superclass;", "+\t\t\t} else if (this.firstBound == oldFirstInterface) {", "+\t\t\t\tthis.firstBound = interfaces[0];", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc3fb8868c963d3ca1bc415c45485367", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 24, "signatureBeforeChange": " private MethodBinding resolveTypesFor(MethodBinding method)", "signatureAfterChange": " private MethodBinding resolveTypesFor(MethodBinding method)", "diff": ["-\t\tmethod.returnType = resolveType(method.returnType);", "+\t\tmethod.returnType = resolveType(method.returnType, this.environment, null, 0);", "-\t\tmethod.parameters[i] = resolveType(method.parameters[i]);", "+\t\tmethod.parameters[i] = resolveType(method.parameters[i], this.environment, null, 0);", "-\t\tif (method.thrownExceptions[i] instanceof UnresolvedReferenceBinding)", "-\t\t\tmethod.thrownExceptions[i] = ((UnresolvedReferenceBinding) method.thrownExceptions[i]).resolve(environment);", "+\t\tmethod.thrownExceptions[i] = resolveType(method.thrownExceptions[i], this.environment, true);", "+\tfor (int i = method.typeVariables.length; --i >= 0;)", "+\t\tresolveTypesFor(method.typeVariables[i]);", "+}"]}], "num": 44345}