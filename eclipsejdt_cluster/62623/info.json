{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "947232ef75815c2e1f350619746e5af7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a22b1f68f04a1282d8199a2ed4edac19", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "31c45831879fb9d166146101d8c06704e7b03918", "commitAfterChange": "4cbee9c4edfca3748d4063d8a7e10ad2054f1b8a", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tprivate void findConstructors( \t\tReferenceBinding currentType, \t\tTypeBinding[] argTypes, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tboolean forAnonymousType)", "signatureAfterChange": " \tprivate void findConstructors( \t\tReferenceBinding currentType, \t\tTypeBinding[] argTypes, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tboolean forAnonymousType)", "diff": ["-\t\t\t\t\t\t\tStringBuffer javadocCompletion = new StringBuffer();", "-\t\t\t\t\t\t\tif (receiver.isThis()) {", "-\t\t\t\t\t\t\t\tselector = (((JavadocImplicitTypeReference)receiver).token);", "-\t\t\t\t\t\t\t\tif ((this.assistNodeInJavadoc & CompletionOnJavadoc.TEXT) != 0) {", "-\t\t\t\t\t\t\t\t\tjavadocCompletion.append('#');", "+\t\t\t\t\t\t\tif (receiver != null) {", "+\t\t\t\t\t\t\t\tStringBuffer javadocCompletion = new StringBuffer();", "+\t\t\t\t\t\t\t\tif (receiver.isThis()) {", "+\t\t\t\t\t\t\t\t\tselector = (((JavadocImplicitTypeReference)receiver).token);", "+\t\t\t\t\t\t\t\t\tif ((this.assistNodeInJavadoc & CompletionOnJavadoc.TEXT) != 0) {", "+\t\t\t\t\t\t\t\t\t\tjavadocCompletion.append('#');", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t} else if (receiver instanceof JavadocSingleTypeReference) {", "+\t\t\t\t\t\t\t\t\tJavadocSingleTypeReference typeRef = (JavadocSingleTypeReference) receiver;", "+\t\t\t\t\t\t\t\t\tselector = typeRef.token;", "+\t\t\t\t\t\t\t\t\tif ((this.assistNodeInJavadoc & CompletionOnJavadoc.TEXT) != 0) {", "+\t\t\t\t\t\t\t\t\t\tjavadocCompletion.append(typeRef.token);", "+\t\t\t\t\t\t\t\t\t\tjavadocCompletion.append('#');", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t} else if (receiver instanceof JavadocQualifiedTypeReference) {", "+\t\t\t\t\t\t\t\t\tJavadocQualifiedTypeReference typeRef = (JavadocQualifiedTypeReference) receiver;", "+\t\t\t\t\t\t\t\t\tselector = typeRef.tokens[typeRef.tokens.length-1];", "+\t\t\t\t\t\t\t\t\tif ((this.assistNodeInJavadoc & CompletionOnJavadoc.TEXT) != 0) {", "+\t\t\t\t\t\t\t\t\t\tjavadocCompletion.append(CharOperation.concatWith(typeRef.tokens, '.'));", "+\t\t\t\t\t\t\t\t\t\tjavadocCompletion.append('#');", "+\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t} else if (receiver instanceof JavadocSingleTypeReference) {", "-\t\t\t\t\t\t\t\tJavadocSingleTypeReference typeRef = (JavadocSingleTypeReference) receiver;", "-\t\t\t\t\t\t\t\tselector = typeRef.token;", "-\t\t\t\t\t\t\t\tif ((this.assistNodeInJavadoc & CompletionOnJavadoc.TEXT) != 0) {", "-\t\t\t\t\t\t\t\t\tjavadocCompletion.append(typeRef.token);", "-\t\t\t\t\t\t\t\t\tjavadocCompletion.append('#');", "+\t\t\t\t\t\t\t\t// Append parameters types", "+\t\t\t\t\t\t\t\tjavadocCompletion.append(selector);", "+\t\t\t\t\t\t\t\tjavadocCompletion.append('(');", "+\t\t\t\t\t\t\t\tif (constructor.parameters != null) {", "+\t\t\t\t\t\t\t\t\tfor (int p=0, ln=constructor.parameters.length; p<ln; p++) {", "+\t\t\t\t\t\t\t\t\t\tif (p>0) javadocCompletion.append(\", \"); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\t\tTypeBinding argTypeBinding = constructor.parameters[p];", "+\t\t\t\t\t\t\t\t\t\tcreateType(argTypeBinding.erasure(), javadocCompletion);", "+\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t} else if (receiver instanceof JavadocQualifiedTypeReference) {", "-\t\t\t\t\t\t\t\tJavadocQualifiedTypeReference typeRef = (JavadocQualifiedTypeReference) receiver;", "-\t\t\t\t\t\t\t\tselector = typeRef.tokens[typeRef.tokens.length-1];", "-\t\t\t\t\t\t\t\tif ((this.assistNodeInJavadoc & CompletionOnJavadoc.TEXT) != 0) {", "-\t\t\t\t\t\t\t\t\tjavadocCompletion.append(CharOperation.concatWith(typeRef.tokens, '.'));", "-\t\t\t\t\t\t\t\t\tjavadocCompletion.append('#');", "-\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tjavadocCompletion.append(')');", "+\t\t\t\t\t\t\t\tcompletion = javadocCompletion.toString().toCharArray();", "-\t\t\t\t\t\t\t// Append parameters types", "-\t\t\t\t\t\t\tjavadocCompletion.append(selector);", "-\t\t\t\t\t\t\tjavadocCompletion.append('(');", "-\t\t\t\t\t\t\tif (constructor.parameters != null) {", "-\t\t\t\t\t\t\t\tfor (int p=0, ln=constructor.parameters.length; p<ln; p++) {", "-\t\t\t\t\t\t\t\t\tif (p>0) javadocCompletion.append(\", \"); //$NON-NLS-1$", "-\t\t\t\t\t\t\t\t\tTypeBinding argTypeBinding = constructor.parameters[p];", "-\t\t\t\t\t\t\t\t\tcreateType(argTypeBinding.erasure(), javadocCompletion);", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tjavadocCompletion.append(')');", "-\t\t\t\t\t\t\tcompletion = javadocCompletion.toString().toCharArray();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1e7d02386b493d1c83edaebf1d1cea6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "31c45831879fb9d166146101d8c06704e7b03918", "commitAfterChange": "4cbee9c4edfca3748d4063d8a7e10ad2054f1b8a", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tprivate void findLocalMethods( \t\tchar[] methodName, \t\tTypeBinding[] argTypes, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tboolean canBePrefixed)", "signatureAfterChange": " \tprivate void findLocalMethods( \t\tchar[] methodName, \t\tTypeBinding[] argTypes, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tboolean canBePrefixed)", "diff": ["-\t\t\t\tStringBuffer javadocCompletion = new StringBuffer();", "-\t\t\t\tif (receiver.isThis()) {", "-\t\t\t\t\tif ((this.assistNodeInJavadoc & /*IN_JAVADOC_TEXT*/CompletionOnJavadoc.TEXT) != 0) {", "-\t\t\t\t\t\tjavadocCompletion.append('#');", "-\t\t\t\t\t}", "-\t\t\t\t} else if ((this.assistNodeInJavadoc & /*IN_JAVADOC_TEXT*/CompletionOnJavadoc.TEXT) != 0) {", "-\t\t\t\t\tif (receiver instanceof JavadocSingleTypeReference) {", "-\t\t\t\t\t\tJavadocSingleTypeReference typeRef = (JavadocSingleTypeReference) receiver;", "-\t\t\t\t\t\tjavadocCompletion.append(typeRef.token);", "-\t\t\t\t\t\tjavadocCompletion.append('#');", "-\t\t\t\t\t} else if (receiver instanceof JavadocQualifiedTypeReference) {", "-\t\t\t\t\t\tJavadocQualifiedTypeReference typeRef = (JavadocQualifiedTypeReference) receiver;", "-\t\t\t\t\t\tcompletion = CharOperation.concat(CharOperation.concatWith(typeRef.tokens, '.'), method.selector, '#');", "-\t\t\t\t\t\tfor (int t=0,nt =typeRef.tokens.length; t<nt; t++) {", "-\t\t\t\t\t\t\tif (t>0) javadocCompletion.append('.');", "-\t\t\t\t\t\t\tjavadocCompletion.append(typeRef.tokens[t]);", "+\t\t\t\tif (receiver != null) {", "+\t\t\t\t\tStringBuffer javadocCompletion = new StringBuffer();", "+\t\t\t\t\tif (receiver.isThis()) {", "+\t\t\t\t\t\tif ((this.assistNodeInJavadoc & CompletionOnJavadoc.TEXT) != 0) {", "+\t\t\t\t\t\t\tjavadocCompletion.append('#');", "-\t\t\t\t\t\tjavadocCompletion.append('#');", "+\t\t\t\t\t} else if ((this.assistNodeInJavadoc & CompletionOnJavadoc.TEXT) != 0) {", "+\t\t\t\t\t\tif (receiver instanceof JavadocSingleTypeReference) {", "+\t\t\t\t\t\t\tJavadocSingleTypeReference typeRef = (JavadocSingleTypeReference) receiver;", "+\t\t\t\t\t\t\tjavadocCompletion.append(typeRef.token);", "+\t\t\t\t\t\t\tjavadocCompletion.append('#');", "+\t\t\t\t\t\t} else if (receiver instanceof JavadocQualifiedTypeReference) {", "+\t\t\t\t\t\t\tJavadocQualifiedTypeReference typeRef = (JavadocQualifiedTypeReference) receiver;", "+\t\t\t\t\t\t\tcompletion = CharOperation.concat(CharOperation.concatWith(typeRef.tokens, '.'), method.selector, '#');", "+\t\t\t\t\t\t\tfor (int t=0,nt =typeRef.tokens.length; t<nt; t++) {", "+\t\t\t\t\t\t\t\tif (t>0) javadocCompletion.append('.');", "+\t\t\t\t\t\t\t\tjavadocCompletion.append(typeRef.tokens[t]);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tjavadocCompletion.append('#');", "+\t\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tjavadocCompletion.append(method.selector);", "-\t\t\t\t// Append parameters types", "-\t\t\t\tjavadocCompletion.append('(');", "-\t\t\t\tif (method.parameters != null) {", "-\t\t\t\t\tfor (int p=0, ln=method.parameters.length; p<ln; p++) {", "-\t\t\t\t\t\tif (p>0) javadocCompletion.append(\", \"); //$NON-NLS-1$", "-\t\t\t\t\t\tTypeBinding argTypeBinding = method.parameters[p];", "-\t\t\t\t\t\tcreateType(argTypeBinding.erasure(), javadocCompletion);", "+\t\t\t\t\tjavadocCompletion.append(method.selector);", "+\t\t\t\t\t// Append parameters types", "+\t\t\t\t\tjavadocCompletion.append('(');", "+\t\t\t\t\tif (method.parameters != null) {", "+\t\t\t\t\t\tfor (int p=0, ln=method.parameters.length; p<ln; p++) {", "+\t\t\t\t\t\t\tif (p>0) javadocCompletion.append(\", \"); //$NON-NLS-1$", "+\t\t\t\t\t\t\tTypeBinding argTypeBinding = method.parameters[p];", "+\t\t\t\t\t\t\tcreateType(argTypeBinding.erasure(), javadocCompletion);", "+\t\t\t\t\t\t}", "+\t\t\t\t\tjavadocCompletion.append(')');", "+\t\t\t\t\tcompletion = javadocCompletion.toString().toCharArray();", "-\t\t\t\tjavadocCompletion.append(')');", "-\t\t\t\tcompletion = javadocCompletion.toString().toCharArray();"]}], "num": 62623}