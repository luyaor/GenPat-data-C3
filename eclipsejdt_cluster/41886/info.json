{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4c5ed02ccef1cd319e96fc20a4890156", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d65543a993186cf6c8c4b7eae3e903d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "66fdd0cbdf40e85714a2e6461c1f38850556e24c", "commitAfterChange": "938fb240697949dd7e39ed8e808d1be963247406", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic synchronized int discardPerWorkingCopyInfo(CompilationUnit workingCopy) throws JavaModelException", "signatureAfterChange": " \tpublic synchronized int discardPerWorkingCopyInfo(CompilationUnit workingCopy) throws JavaModelException", "diff": ["-\t\t\tMap pathToPerWorkingCopyInfos = (Map)this.perWorkingCopyInfos.get(owner);", "-\t\t\tif (pathToPerWorkingCopyInfos == null) return -1;", "+\t\t\tMap workingCopyToInfos = (Map)this.perWorkingCopyInfos.get(owner);", "+\t\t\tif (workingCopyToInfos == null) return -1;", "-\t\t\tIPath path = workingCopy.getPath();", "-\t\t\tPerWorkingCopyInfo info = (PerWorkingCopyInfo)pathToPerWorkingCopyInfos.get(path);", "+\t\t\tPerWorkingCopyInfo info = (PerWorkingCopyInfo)workingCopyToInfos.get(workingCopy);", "-\t\t\t\tpathToPerWorkingCopyInfos.remove(path);", "-\t\t\t\tif (pathToPerWorkingCopyInfos.isEmpty()) {", "+\t\t\t\tworkingCopyToInfos.remove(workingCopy);", "+\t\t\t\tif (workingCopyToInfos.isEmpty()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e56969df91fa0bef6ef7f36f7268fd77", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "66fdd0cbdf40e85714a2e6461c1f38850556e24c", "commitAfterChange": "938fb240697949dd7e39ed8e808d1be963247406", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tpublic ICompilationUnit[] getWorkingCopies(WorkingCopyOwner owner, boolean addPrimary)", "signatureAfterChange": " \tpublic ICompilationUnit[] getWorkingCopies(WorkingCopyOwner owner, boolean addPrimary)", "diff": ["-\t\t\tMap pathToPerWorkingCopyInfos = (Map)perWorkingCopyInfos.get(owner);", "-\t\t\tif (pathToPerWorkingCopyInfos == null) return primaryWCs;", "+\t\t\tMap workingCopyToInfos = (Map)perWorkingCopyInfos.get(owner);", "+\t\t\tif (workingCopyToInfos == null) return primaryWCs;", "-\t\t\tint size = pathToPerWorkingCopyInfos.size(); // note size is > 0 otherwise pathToPerWorkingCopyInfos would be null", "+\t\t\tint size = workingCopyToInfos.size(); // note size is > 0 otherwise pathToPerWorkingCopyInfos would be null", "-\t\t\tIterator iterator = pathToPerWorkingCopyInfos.values().iterator();", "+\t\t\tIterator iterator = workingCopyToInfos.values().iterator();"]}], "num": 41886}