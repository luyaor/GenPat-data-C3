{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8923a3e2088e2cd90ba79a7f219e7919", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "809ca537922cb64bc000a06a4998ee18", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingKey.java", "commitBeforeChange": "65bc58d731b2b7495611004f31fbf68869bf0c34", "commitAfterChange": "a618dea008dd005a2062d94159d61d7900b021b7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t Binding getCompilerBinding(CompilationUnitResolver resolver)", "signatureAfterChange": " \t Binding getCompilerBinding()", "diff": ["-\t Binding getCompilerBinding(CompilationUnitResolver resolver) {", "-\t\tCompilationUnitDeclaration parsedUnit = getCompilationUnitDeclaration(resolver.lookupEnvironment);", "+\t Binding getCompilerBinding() {", "+\t\tCompilationUnitDeclaration parsedUnit = getCompilationUnitDeclaration();", "-\t\t\tif (!resolver.requestedKeys.containsKey(fileName) && !resolver.requestedSources.containsKey(fileName))", "-\t\t\t\tresolver.process(parsedUnit, resolver.totalUnits+1);", "+\t\t\tif (!this.resolver.requestedKeys.containsKey(fileName) && !this.resolver.requestedSources.containsKey(fileName))", "+\t\t\t\tthis.resolver.process(parsedUnit, this.resolver.totalUnits+1);", "-\t\treturn getCompilerBinding(parsedUnit, resolver);", "+\t\treturn getCompilerBinding(parsedUnit);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f29539ce461c6472266f1a547106b7d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchingOpenable.java", "commitBeforeChange": "16854241687f97764faa9f85ee1f3765fd3ba174", "commitAfterChange": "38d650016715ef9203472d6cae057b9ec4d53fc1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r private void locateMatchesInCompilationUnit(char[] source) throws CoreException", "signatureAfterChange": "\r private void locateMatchesInCompilationUnit(char[] source) throws CoreException", "diff": ["-\t\tthis.parsedUnit = this.locator.dietParse(source);\r", "+\t\tchar[] qualifiedName = this.getQualifiedName();\r", "+\t\tif (qualifiedName == null || (this.parsedUnit = (CompilationUnitDeclaration)this.locator.parsedUnits.get(qualifiedName)) == null) {\r", "+\t\t\tthis.parsedUnit = this.locator.dietParse(source);\r", "+\t\t}\r", "+\t\t\t\t\t\t\tif (this.parsedUnit.scope == null) {\r", "+\t\t\t\t\t\t\t\t// bindings were not created (case of a FieldReferencePattern that doesn't need resolve, \r", "+\t\t\t\t\t\t\t\t// but we need to resolve because of a SingleNameReference being a potential match)\r", "+\t\t\t\t\t\t\t\tthis.locator.lookupEnvironment.buildTypeBindings(this.parsedUnit);\r", "+\t\t\t\t\t\t\t\tthis.locator.lookupEnvironment.completeTypeBindings(this.parsedUnit, true);\r", "+\t\t\t\t\t\t\t}\r"]}], "num": 33810}