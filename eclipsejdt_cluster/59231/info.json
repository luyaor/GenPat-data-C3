{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2bb3d8c0f1ffd91338abc2adce0d45d5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e5883cd2c43522822832c0161657d73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ClassFileMatchLocator.java", "commitBeforeChange": "9170036b60b531a506b4ffe0efeda8e18d918bef", "commitAfterChange": "f8aee71b6b129d09f997301cd8500148a6feb325", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " boolean matchField(FieldPattern pattern, Object binaryInfo, IBinaryType enclosingBinaryType)", "signatureAfterChange": " boolean matchField(FieldPattern pattern, Object binaryInfo, IBinaryType enclosingBinaryType)", "diff": ["-\tif (!checkDeclaringType(enclosingBinaryType, pattern.declaringSimpleName, pattern.declaringQualification, pattern.isCaseSensitive()))", "+\tif (!checkDeclaringType(enclosingBinaryType, pattern.declaringSimpleName, pattern.declaringQualification, pattern.isCaseSensitive(), pattern.isCamelCase()))", "-\treturn checkTypeName(pattern.typeSimpleName, pattern.typeQualification, fieldTypeSignature, pattern.isCaseSensitive());", "+\treturn checkTypeName(pattern.typeSimpleName, pattern.typeQualification, fieldTypeSignature, pattern.isCaseSensitive(), pattern.isCamelCase());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d39642ace41e5016e00f6f5d580d35ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ClassFileMatchLocator.java", "commitBeforeChange": "9170036b60b531a506b4ffe0efeda8e18d918bef", "commitAfterChange": "f8aee71b6b129d09f997301cd8500148a6feb325", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  boolean checkDeclaringType(IBinaryType enclosingBinaryType, char[] simpleName, char[] qualification, boolean isCaseSensitive)", "signatureAfterChange": "  private boolean checkDeclaringType(IBinaryType enclosingBinaryType, char[] simpleName, char[] qualification, boolean isCaseSensitive, boolean isCamelCase)", "diff": ["-boolean checkDeclaringType(IBinaryType enclosingBinaryType, char[] simpleName, char[] qualification, boolean isCaseSensitive) {", "+private boolean checkDeclaringType(IBinaryType enclosingBinaryType, char[] simpleName, char[] qualification, boolean isCaseSensitive, boolean isCamelCase) {", "-\treturn checkTypeName(simpleName, qualification, declaringTypeName, isCaseSensitive);", "+\treturn checkTypeName(simpleName, qualification, declaringTypeName, isCaseSensitive, isCamelCase);"]}], "num": 59231}