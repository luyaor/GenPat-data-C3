{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "81775444e4abe228f0938e7752407ffc", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3240418ca72657bb6ee8c7d9a7301627", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "5c85e7570588f45bc28b317d5381f96243304903", "commitAfterChange": "e3af240dccc65542f2700248f6e576a65441a265", "methodNumberBeforeChange": 185, "methodNumberAfterChange": 185, "signatureBeforeChange": " \tpublic void test183()", "signatureAfterChange": " \tpublic void test183()", "diff": ["-\t\t\t\"Type safety: The cast from Object to Hashtable<String,Integer> will not check conformance of type arguments at runtime\\n\" + ", "+\t\t\t\"Type safety: The cast from Object to Hashtable<String,Integer> is actually checking against the erased type Hashtable\\n\" + ", "-\t\t\t\"Type safety: The cast from Z3 to Hashtable<String,Integer> will not check conformance of type arguments at runtime\\n\" + ", "+\t\t\t\"Type safety: The cast from Z3 to Hashtable<String,Integer> is actually checking against the erased type Hashtable\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e28216c2bc3194891834880906f8a6bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "5c85e7570588f45bc28b317d5381f96243304903", "commitAfterChange": "e3af240dccc65542f2700248f6e576a65441a265", "methodNumberBeforeChange": 184, "methodNumberAfterChange": 184, "signatureBeforeChange": " \tpublic void test182()", "signatureAfterChange": " \tpublic void test182()", "diff": ["-\t\t\t\"Type safety: The cast from Object to AX<String> will not check conformance of type arguments at runtime\\n\" + ", "+\t\t\t\"Type safety: The cast from Object to AX<String> is actually checking against the erased type AX\\n\" + ", "-\t\t\t\"Type safety: The cast from Object to AX<E> will not check conformance of type arguments at runtime\\n\" + ", "+\t\t\t\"Type safety: The cast from Object to AX<E> is actually checking against the erased type AX\\n\" + "]}], "num": 21242}