{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9156976346566a34aef58ce3cca26c1f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ce36c6f5e6d67433c00c0bfef87bc5b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "e4b120541cf6c404fcc534d957fc35fe80d78035", "commitAfterChange": "50d1489a949b2e888c9f126b8f39d1c4ff67eaa2", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic void test0032_autoboxing_literal()", "signatureAfterChange": " \tpublic void test0032_autoboxing_literal()", "diff": ["-\t\t\t\t\t\"\t public static void main(String args[]) {\\n\" + ", "+\t\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\t\"    if (i == null) {};\\n\" + // warn: this is non null", "+\t\t\t\t\t\"    if (i == null) {};\\n\" + // complain: this is non null"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83f4fa382dcdcbbfc188e4d85a809007", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void test000()", "signatureAfterChange": " \tpublic void test000()", "diff": ["+\t\t\t\t\t\"\tfinal static int OLD = 41;\\n\" +", "-\t\t\t\t\t\"\tT() { this(YODA.age()); }\\n\" +  // TODO (philippe) should this not complain: illegal reference to static field from initializer", "+\t\t\t\t\t\"\tT() { this(OLD); }\\n\" +  "]}], "num": 17293}