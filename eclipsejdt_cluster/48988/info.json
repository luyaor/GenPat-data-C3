{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cd2b8d878b30d8bce53052512c6ef48d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "428baae2ff3bc62e2232d25681e60532", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceType.java", "commitBeforeChange": "7f04146f7ecfc97ac8decbf845cb74d2c5fd9ef2", "commitAfterChange": "904675358dc0c5cf51f156f5fad299110702a532", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public String[] getSuperInterfaceTypeSignatures() throws JavaModelException", "signatureAfterChange": " public String[] getSuperInterfaceTypeSignatures() throws JavaModelException", "diff": ["-\treturn CharOperation.toStrings(names);", "+\tif (names == null) {", "+\t\treturn CharOperation.NO_STRINGS;", "+\t}", "+\tString[] strings= new String[names.length];", "+\tfor (int i= 0; i < names.length; i++) {", "+\t\tstrings[i]= new String(Signature.createTypeSignature(names[i], false));", "+\t}", "+\treturn strings;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c56acfc953dca36ba4cecbd5c1781bff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchParticipant.java", "commitBeforeChange": "e6021d67f030c85737aa105da719e9a09cfc30ed", "commitAfterChange": "47da1e1f50b1360a7b560d74dfe1c60303fec552", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic IPath[] selectIndexes(SearchPattern pattern, IJavaSearchScope scope)", "signatureAfterChange": " \tpublic IPath[] selectIndexes(SearchPattern pattern, IJavaSearchScope scope)", "diff": ["+\t\tIndexSelector selector = (IndexSelector) this.indexSelector.get();", "+\t\tif (selector == null) {", "+\t\t\tselector = new IndexSelector(scope, pattern);", "+\t\t\tthis.indexSelector.set(selector);", "+\t\t}", "+\t\tIndexLocation[] urls = selector.getIndexLocations();", "+\t\tIPath[] paths = new IPath[urls.length];", "+\t\tfor (int i = 0; i < urls.length; i++) {", "+\t\t\tpaths[i] = new Path(urls[i].getIndexFile().getPath());", "+\t\t}", "+\t\treturn paths;", "+\t}"]}], "num": 48988}