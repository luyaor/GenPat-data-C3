{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "883276c14af19479d34d228d5d368a5b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2fe0ea4fcb53774ff60f0e491ddfcc3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "d7e7bb059880a6c87ea3290708d2d0a9f9e7ebe8", "commitAfterChange": "a415220ad0bdc743d286b40ccc481ededfe8132e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void generateOptimizedBoolean(BlockScope currentScope, CodeStream codeStream, Label trueLabel, Label falseLabel, boolean valueRequired)", "signatureAfterChange": " public void generateOptimizedBoolean(BlockScope currentScope, CodeStream codeStream, Label trueLabel, Label falseLabel, boolean valueRequired)", "diff": ["-\tif ((constant != Constant.NotAConstant) && (constant.typeID() == T_boolean)) {", "+", "+\tif (constant != Constant.NotAConstant) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da35b79ac9a9544b5395a1880084dbc9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "f34d0660fc08a428cce0fefe472952c23bd16c8b", "commitAfterChange": "26280894123d7ef2ecad980903e2002f03a13de2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void generateOptimizedBoolean( \t\t\tBlockScope currentScope, \t\t\tCodeStream codeStream, \t\t\tBranchLabel trueLabel, \t\t\tBranchLabel falseLabel, \t\t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedBoolean( \t\t\tBlockScope currentScope, \t\t\tCodeStream codeStream, \t\t\tBranchLabel trueLabel, \t\t\tBranchLabel falseLabel, \t\t\tboolean valueRequired)", "diff": ["-\t\tif ((cst != Constant.NotAConstant) && (cst.typeID() == T_boolean)) {", "+\t\tif ((cst != Constant.NotAConstant) && (cst.typeID() == TypeIds.T_boolean)) {"]}], "num": 16763}