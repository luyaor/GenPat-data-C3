{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8024476b4df1ea870ce0bf5b981db65b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d4b506c27456a0379978393f8230fa6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "11ac720cf12c89391a32ed5e56750070174f7f3f", "commitAfterChange": "c35f48a470f9475e0b73c6c14c2a26ca2378ab58", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "diff": ["+\t\t", "+\t\tthis.scope = new MethodScope(blockScope, this, blockScope.methodScope().isStatic);", "+\t\t", "-\t\tthis.scope = new MethodScope(blockScope, this, blockScope.methodScope().isStatic);", "-\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7f4c125327ad56334088647a31e5bf0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DoStatement.java", "commitBeforeChange": "f1f25c6cdf998a1ec590849c8e88206d0ec0f3ca", "commitAfterChange": "11bdf7ee83fa535bb4e922a4f202eec91a5eb529", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tfinal ASTNode internalGetSetChildProperty(ChildPropertyDescriptor property, boolean get, ASTNode child)", "signatureAfterChange": " \tfinal ASTNode internalGetSetChildProperty(ChildPropertyDescriptor property, boolean get, ASTNode child)", "diff": ["-\t\tif (property == EXPRESSION_PROPERTY) {", "-\t\t\tif (get) {", "-\t\t\t\treturn getExpression();", "-\t\t\t} else {", "-\t\t\t\tsetExpression((Expression) child);", "-\t\t\t\treturn null;", "-\t\t\t}", "-\t\t}", "+\t\t\t\treturn null;", "+\t\t\t}", "+\t\t}", "+\t\tif (property == EXPRESSION_PROPERTY) {", "+\t\t\tif (get) {", "+\t\t\t\treturn getExpression();", "+\t\t\t} else {", "+\t\t\t\tsetExpression((Expression) child);"]}], "num": 27274}