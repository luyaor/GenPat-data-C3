{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "727dd80fa0c555684ec9aded25e62b9f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c810e68e86d814da0ace1d688e68d7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFlattener.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic boolean visit(FieldDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(FieldDeclaration node)", "diff": ["-\t\tprintModifiers(getIntAttribute(node, FieldDeclaration.MODIFIERS_PROPERTY), this.result);", "+\t\tif (node.getAST().apiLevel() == AST.JLS2) {", "+\t\t\tprintModifiers(getIntAttribute(node, FieldDeclaration.MODIFIERS_PROPERTY), this.result);", "+\t\t} else {", "+\t\t\tvisitList(node, FieldDeclaration.MODIFIERS2_PROPERTY, String.valueOf(' '), EMPTY, String.valueOf(' '));", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7540cf1c35951e5c88762768825f091f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFlattener.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 72, "signatureBeforeChange": " \tpublic boolean visit(VariableDeclarationStatement node)", "signatureAfterChange": " \tpublic boolean visit(VariableDeclarationStatement node)", "diff": ["-\t\tprintModifiers(getIntAttribute(node, VariableDeclarationStatement.MODIFIERS_PROPERTY), this.result);", "+\t\tif (node.getAST().apiLevel() == AST.JLS2) {", "+\t\t\tprintModifiers(getIntAttribute(node, VariableDeclarationStatement.MODIFIERS_PROPERTY), this.result);", "+\t\t} else {", "+\t\t\tvisitList(node, VariableDeclarationStatement.MODIFIERS2_PROPERTY, String.valueOf(' '), EMPTY, String.valueOf(' '));", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84380d2e44826a96c110404ecb10bf4d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFlattener.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 70, "signatureBeforeChange": " \tpublic boolean visit(VariableDeclarationExpression node)", "signatureAfterChange": " \tpublic boolean visit(VariableDeclarationExpression node)", "diff": ["-\t\tprintModifiers(getIntAttribute(node, VariableDeclarationExpression.MODIFIERS_PROPERTY), this.result);", "+\t\tif (node.getAST().apiLevel() == AST.JLS2) {", "+\t\t\tprintModifiers(getIntAttribute(node, VariableDeclarationExpression.MODIFIERS_PROPERTY), this.result);", "+\t\t} else {", "+\t\t\tvisitList(node, VariableDeclarationExpression.MODIFIERS2_PROPERTY, String.valueOf(' '), EMPTY, String.valueOf(' '));", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97b4f399ca8eb9f958b05f42a5634024", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFlattener.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tpublic boolean visit(Initializer node)", "signatureAfterChange": " \tpublic boolean visit(Initializer node)", "diff": ["-\t\tprintModifiers(getIntAttribute(node, Initializer.MODIFIERS_PROPERTY), this.result);", "+\t\tif (node.getAST().apiLevel() == AST.JLS2) {", "+\t\t\tprintModifiers(getIntAttribute(node, Initializer.MODIFIERS_PROPERTY), this.result);", "+\t\t} else {", "+\t\t\tvisitList(node, Initializer.MODIFIERS2_PROPERTY, String.valueOf(' '), EMPTY, String.valueOf(' '));", "+\t\t}"]}], "num": 72647}