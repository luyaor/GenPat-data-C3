{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "62ff995b039f3195d97b654f1f0ae41b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "108b65d3aae799e50f7ffcb16242ef97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void collectSubstitutes(Scope scope, TypeBinding otherType, Map substitutes, int constraint)", "signatureAfterChange": " \tpublic void collectSubstitutes(Scope scope, TypeBinding otherType, Map substitutes, int constraint)", "diff": ["+\t\tif (otherType.isCapture()) {", "+\t\t\tCaptureBinding capture = (CaptureBinding) otherType;", "+\t\t\totherType = capture.wildcard;", "+\t\t}", "+\t\t", "-\t\t\t\tswitch (this.kind) {", "+\t\t\t\tswitch (this.boundKind) {", "-\t\t\t\t\t\t\tswitch(otherWildcard.kind) {", "+\t\t\t\t\t\t\tswitch(otherWildcard.boundKind) {", "-\t\t\t\t\t\t\tswitch(otherWildcard.kind) {", "+\t\t\t\t\t\t\tswitch(otherWildcard.boundKind) {", "-\t\t\t\tswitch (this.kind) {", "+\t\t\t\tswitch (this.boundKind) {", "-\t\t\t\t\t\t\tswitch(otherWildcard.kind) {", "+\t\t\t\t\t\t\tswitch(otherWildcard.boundKind) {", "-\t\t\t\t\t\t\tswitch(otherWildcard.kind) {", "+\t\t\t\t\t\t\tswitch(otherWildcard.boundKind) {", "-\t\t\t\tswitch (this.kind) {", "+\t\t\t\tswitch (this.boundKind) {", "-\t\t\t\t\t\t\tswitch(otherWildcard.kind) {", "+\t\t\t\t\t\t\tswitch(otherWildcard.boundKind) {", "-\t\t\t\t\t\t\tswitch(otherWildcard.kind) {", "+\t\t\t\t\t\t\tswitch(otherWildcard.boundKind) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b037f7141b32ea56fde9ec73c2b8b35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " protected void updateMatch(TypeBinding[] argumentsBinding, MatchLocator locator, char[][] patternArguments, boolean hasTypeParameters)", "signatureAfterChange": " protected void updateMatch(TypeBinding[] argumentsBinding, MatchLocator locator, char[][] patternArguments, boolean hasTypeParameters)", "diff": ["-", "+\t\t\tif (argumentBinding instanceof CaptureBinding) {", "+\t\t\t\tWildcardBinding capturedWildcard = ((CaptureBinding)argumentBinding).wildcard;", "+\t\t\t\tif (capturedWildcard != null) argumentBinding = capturedWildcard;", "+\t\t\t}", "-\t\t\t\t\t\tif (wildcardBinding.kind == Wildcard.UNBOUND) continue;", "+\t\t\t\t\t\tif (wildcardBinding.boundKind == Wildcard.UNBOUND) continue;", "-\t\t\t\t\tif (wildcardBinding.kind == Wildcard.UNBOUND) {", "+\t\t\t\t\tif (wildcardBinding.boundKind == Wildcard.UNBOUND) {", "-\t\t\t\t\t\tif (wildcardBinding.kind == patternWildcardKind && wildcardBinding.bound == patternBinding) {", "+\t\t\t\t\t\tif (wildcardBinding.boundKind == patternWildcardKind && wildcardBinding.bound == patternBinding) {", "-\t\t\t\t\t\tswitch (wildcardBinding.kind) {", "+\t\t\t\t\t\tswitch (wildcardBinding.boundKind) {", "-\t\t\t\t\t\tif (wildcardBinding.kind == patternWildcardKind && wildcardBinding.bound == patternBinding) {", "+\t\t\t\t\t\tif (wildcardBinding.boundKind == patternWildcardKind && wildcardBinding.bound == patternBinding) {", "-\t\t\t\t\t\tswitch (wildcardBinding.kind) {", "+\t\t\t\t\t\tswitch (wildcardBinding.boundKind) {", "-\t\t\t\t\t\tswitch (wildcardBinding.kind) {", "+\t\t\t\t\t\tswitch (wildcardBinding.boundKind) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8396ed5f535066b9b8a2bdb0d969b1ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "fda975d98b069f678ae89a663957463bb7bd4088", "commitAfterChange": "62b97f10b8bb4123dfea4bccabc125ecea6ba019", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " private TypeBinding findDefaultNullness(MethodBinding methodBinding, LookupEnvironment environment)", "signatureAfterChange": " private TypeBinding findDefaultNullness(MethodBinding methodBinding, LookupEnvironment environment)", "diff": ["+\t\tif (currentType.isLocalType()) {", "+\t\t\t// if direct enclosing is a method travel that way:", "+\t\t\tMethodBinding enclosingMethod = ((LocalTypeBinding)currentType).enclosingMethod;", "+\t\t\tif (enclosingMethod != null)", "+\t\t\t\treturn findDefaultNullness(enclosingMethod, environment);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b7c79712116ddb2cb5bbeb5d90d94dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "7f76334b2bb7b495f563a0716e0291f8c0b0738d", "commitAfterChange": "d8abee406a39d7cb77587fdd5c81cab5cf67a426", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": " \t \tprivate void setTypeForField(FieldDeclaration fieldDeclaration, Type type, int extraDimension)", "signatureAfterChange": " \t \tprivate void setTypeForField(FieldDeclaration fieldDeclaration, Type type, int extraDimension)", "diff": ["+\t\t\t\t\tupdateInnerPositions(subarrayType, remainingDimensions);", "+\t\t\tif (type.isArrayType()) {", "+\t\t\t\t// update positions of the component types of the array type", "+\t\t\t\tint dimensions = ((ArrayType) type).getDimensions();", "+\t\t\t\tupdateInnerPositions(type, dimensions);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8b5e39d676657c9e1ee64582b6c8aa1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " protected int resolveLevelForType (char[] simpleNamePattern, \t\t\t\t\t\t\t\t\tchar[] qualificationPattern, \t\t\t\t\t\t\t\t\tchar[][][] patternTypeArguments, \t\t\t\t\t\t\t\t\tint depth, \t\t\t\t\t\t\t\t\tTypeBinding type)", "signatureAfterChange": " protected int resolveLevelForType (char[] simpleNamePattern, \t\t\t\t\t\t\t\t\tchar[] qualificationPattern, \t\t\t\t\t\t\t\t\tchar[][][] patternTypeArguments, \t\t\t\t\t\t\t\t\tint depth, \t\t\t\t\t\t\t\t\tTypeBinding type)", "diff": ["+\t\t\t\tif (argTypeBinding instanceof CaptureBinding) {", "+\t\t\t\t\tWildcardBinding capturedWildcard = ((CaptureBinding)argTypeBinding).wildcard;", "+\t\t\t\t\tif (capturedWildcard != null) argTypeBinding = capturedWildcard;", "+\t\t\t\t}", "-\t\t\t\t\tswitch (wildcardBinding.kind) {", "+\t\t\t\t\tswitch (wildcardBinding.boundKind) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3421d24dc04acf1f1ca9a1906ea86a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForeachStatement.java", "commitBeforeChange": "d79de0229c608563894d10437737b39e54570982", "commitAfterChange": "6b8ea1fe34801155ff098e297d8447ae3bdf9761", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope upperScope)", "diff": ["+\t\t\tif (collectionType.isCapture()) {", "+\t\t\t\tTypeBinding upperBound = ((CaptureBinding)collectionType).firstBound;", "+\t\t\t\tif (upperBound.isArrayType())", "+\t\t\t\t\tcollectionType = upperBound; // partially anticipating the fix for https://bugs.openjdk.java.net/browse/JDK-8013843", "+\t\t\t}"]}], "num": 52078}