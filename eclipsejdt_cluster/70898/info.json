{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "86c00c84a9166f4d5472e844c358815c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "535ce53219cbd909b513848c73ceeaef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LongLiteral.java", "commitBeforeChange": "fa5828480ebc13512cc4c6649155f597883abe5f", "commitAfterChange": "dbadb98550952623b726dd998146fbf52c65b243", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void computeConstant()", "signatureAfterChange": "  public void computeConstant()", "diff": ["-\tlong computedValue = 0;", "+\tlong computedValue ;", "-\t\tchar currentChar = this.source[j++];", "-\t\tif (currentChar != '_') {", "-\t\t\tint digitValue ;", "-\t\t\tif ((digitValue = ScannerHelper.digit(currentChar,radix)) < 0 ) {", "+\t\tint digitValue ;", "+\t\tif ((digitValue = ScannerHelper.digit(this.source[j++],radix)) < 0 ) {", "+\t\t\treturn; /*constant stays null*/", "+\t\t}", "+\t\tif (digitValue >= 8)", "+\t\t\tnbDigit = 4;", "+\t\telse if (digitValue >= 4)", "+\t\t\tnbDigit = 3;", "+\t\telse if (digitValue >= 2)", "+\t\t\tnbDigit = 2;", "+\t\telse", "+\t\t\tnbDigit = 1; //digitValue is not 0", "+\t\tcomputedValue = digitValue ;", "+\t\twhile (j<length) {", "+\t\t\tif ((digitValue = ScannerHelper.digit(this.source[j++],radix)) < 0) {", "-\t\t\tif (digitValue >= 8)", "-\t\t\t\tnbDigit = 4;", "-\t\t\telse if (digitValue >= 4)", "-\t\t\t\tnbDigit = 3;", "-\t\t\telse if (digitValue >= 2)", "-\t\t\t\tnbDigit = 2;", "-\t\t\telse", "-\t\t\t\tnbDigit = 1; //digitValue is not 0", "-\t\t\tcomputedValue = digitValue ;", "-\t\t\twhile (j<length) {", "-\t\t\t\tcurrentChar = this.source[j++];", "-\t\t\t\tif (currentChar == '_') continue;", "-\t\t\t\tif ((digitValue = ScannerHelper.digit(currentChar,radix)) < 0) {", "-\t\t\t\t\treturn; /*constant stays null*/", "-\t\t\t\t}", "-\t\t\t\tif ((nbDigit += shift) > 64)", "-\t\t\t\t\treturn; /*constant stays null*/", "-\t\t\t\tcomputedValue = (computedValue<<shift) | digitValue ;", "-\t\t\t}", "+\t\t\tif ((nbDigit += shift) > 64)", "+\t\t\t\treturn; /*constant stays null*/", "+\t\t\tcomputedValue = (computedValue<<shift) | digitValue ;", "+\t\tcomputedValue = 0;", "-\t\tloop: for (int i = 0 ; i < length; i++) {", "+\t\tfor (int i = 0 ; i < length; i++) {", "-\t\t\tchar currentChar = this.source[i];", "-\t\t\tif (currentChar == '_') continue loop;", "-\t\t\tif ((digitValue = ScannerHelper.digit(currentChar, 10)) < 0 ) return /*constant stays null*/;", "+\t\t\tif ((digitValue = ScannerHelper.digit(this.source[i], 10)) < 0 ) return /*constant stays null*/;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78c45f5a3679b27251b0c74d3a15f8d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "f36c718beb8bf08713390b2fd835e572041478ae", "commitAfterChange": "de0ec0255833f27449d5f59da580e82b41fe6f0d", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  public int getNextToken() throws InvalidInputException", "signatureAfterChange": "  public int getNextToken() throws InvalidInputException", "diff": ["-\t", "-", "-\tif (token == TokenNameLPAREN && atLambdaParameterList()) {", "-\t\tthis.nextToken = token;", "-\t\ttoken = TokenNameBeginLambda;", "-\t} else if (token == TokenNameLESS && atReferenceExpression()) {", "-\t\tthis.nextToken = token;", "-\t\ttoken = TokenNameBeginTypeArguments;", "-\t} else if (token == TokenNameAT && atTypeAnnotation()) {", "-\t\ttoken = TokenNameAT308;", "-\t\tif (atEllipsisAnnotation()) {", "-\t\t\tthis.nextToken = token;", "-\t\t\ttoken = TokenNameAT308DOTDOTDOT;", "-\t\t}", "+\tif (token == TokenNameLPAREN || token == TokenNameLESS || token == TokenNameAT) {", "+\t\ttoken = disambiguatedToken(token);", "-"]}], "num": 70898}