{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fb2720b7ec0fec3cc031e94a2c97619f", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2eb7fccb1a64d4a31bada3683ed9d0a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "5dcefdb7b6dc4ca118d352248744f6f6f0cfd53e", "commitAfterChange": "6568a2476b22c2b9915b48b3eb9ea4ea62f741d4", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public MethodBinding[] methods()", "signatureAfterChange": " public MethodBinding[] methods()", "diff": ["+\t\tboolean isViewedAsDeprecated = isViewedAsDeprecated();", "+\t\tboolean complyTo15 = fPackage.environment.options.sourceLevel >= ClassFileConstants.JDK1_5;", "-\t\t\tif (resolveTypesFor(methods[i]) == null) {", "+\t\t\tMethodBinding method = methods[i];", "+\t\t\tif (resolveTypesFor(method) == null) {", "+\t\t\t} else {", "+\t\t\t\tif ((method.getAnnotationTagBits() & AnnotationDeprecated) != 0) {", "+\t\t\t\t\tmethod.modifiers |= AccDeprecated;", "+\t\t\t\t} else if (complyTo15 && (method.modifiers & AccDeprecated) != 0) {", "+\t\t\t\t\tscope.problemReporter().missingDeprecatedAnnotationForMethod(method.sourceMethod());", "+\t\t\t\t}", "+\t\t\t\tif (isViewedAsDeprecated && !method.isDeprecated()) {", "+\t\t\t\t\tmethod.modifiers |= AccDeprecatedImplicitly;", "+\t\t\t\t}", "-\t\tboolean is15 = fPackage.environment.options.sourceLevel >= ClassFileConstants.JDK1_5;", "-\t\t\t\t\t\tboolean paramsMatch = is15 && method.returnType == method2.returnType // see 87956", "+\t\t\t\t\t\tboolean paramsMatch = complyTo15 && method.returnType == method2.returnType // see 87956"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84cf94a26084f3b014b594930a5afa95", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "5dcefdb7b6dc4ca118d352248744f6f6f0cfd53e", "commitAfterChange": "6568a2476b22c2b9915b48b3eb9ea4ea62f741d4", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public FieldBinding[] fields()", "signatureAfterChange": " public FieldBinding[] fields()", "diff": ["+\t\tboolean isViewedAsDeprecated = isViewedAsDeprecated();", "+\t\tboolean complyTo15 = fPackage.environment.options.sourceLevel >= ClassFileConstants.JDK1_5;", "-\t\t\tif (resolveTypeFor(fields[i]) == null) {", "+\t\t\tFieldBinding field = fields[i];", "+\t\t\tif (resolveTypeFor(field) == null) {", "+\t\t\t} else {", "+\t\t\t\tif ((field.getAnnotationTagBits() & AnnotationDeprecated) != 0) {", "+\t\t\t\t\tfield.modifiers |= AccDeprecated;", "+\t\t\t\t} else if (complyTo15 && (field.modifiers & AccDeprecated) != 0) {", "+\t\t\t\t\tscope.problemReporter().missingDeprecatedAnnotationForField(field.sourceField());", "+\t\t\t\t}", "+\t\t\t\tif (isViewedAsDeprecated && !field.isDeprecated()) {", "+\t\t\t\t\tfield.modifiers |= AccDeprecatedImplicitly;\t", "+\t\t\t\t}"]}], "num": 17627}