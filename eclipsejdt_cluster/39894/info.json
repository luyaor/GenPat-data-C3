{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f91750a72baa62614a19bc6c4e8ee4af", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c3d3cc9e4a0a19e3595aa318cee05d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "dcb9cba2d0dd17eb14d1885766c1ed4ea8e5c577", "commitAfterChange": "36b510694d3467a3270adec86a6794548a63026c", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tprivate void findLocalMethods( \t\tchar[] methodName, \t\tTypeBinding[] argTypes, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall)", "signatureAfterChange": " \tprivate void findLocalMethods( \t\tchar[] methodName, \t\tTypeBinding[] argTypes, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall)", "diff": ["-\t\t\t\t\tif (otherMethod.declaringClass.isInterface())", "+\t\t\t\t\tif (otherMethod.declaringClass.isInterface()) {", "+\t\t\t\t\t\tif(method.declaringClass == scope.getJavaLangObject())", "+\t\t\t\t\t\t\tcontinue next;", "+\t\t\t\t\t\t", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b799ee4952f940a3dde34fdf0bd757e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "dcb9cba2d0dd17eb14d1885766c1ed4ea8e5c577", "commitAfterChange": "36b510694d3467a3270adec86a6794548a63026c", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprivate void findFields( \t\tchar[] fieldName, \t\tFieldBinding[] fields, \t\tScope scope, \t\tObjectVector fieldsFound, \t\tObjectVector localsFound, \t\tboolean onlyStaticFields, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall)", "signatureAfterChange": " \tprivate void findFields( \t\tchar[] fieldName, \t\tFieldBinding[] fields, \t\tScope scope, \t\tObjectVector fieldsFound, \t\tObjectVector localsFound, \t\tboolean onlyStaticFields, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall)", "diff": ["-\t\t\t\t\tif (otherField.declaringClass.isInterface())", "+\t\t\t\t\tif (otherField.declaringClass.isInterface()) {", "+\t\t\t\t\t\tif (field.declaringClass == scope.getJavaLangObject())", "+\t\t\t\t\t\t\tcontinue next;", "+\t\t\t\t\t}"]}], "num": 39894}