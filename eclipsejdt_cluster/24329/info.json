{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "36ade70bbb89273e1b95c3cc923e752d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64348938c793e59da77ee2d6d9c630ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/RewriteEventStore.java", "commitBeforeChange": "7183d81a2458b7a9ecc9004f74bf12b52ac2eafc", "commitAfterChange": "54eb6fa8730358fcf98285db139cf9edbd02f92a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \t\tpublic int compare(Object o1, Object o2)", "signatureAfterChange": " \t\t \t\tpublic int compareTo(Object o2)", "diff": ["+\t\t", "+\t\tpublic int compareTo(Object o2) {", "+\t\t\tCopySourceInfo r2= (CopySourceInfo) o2;", "+\t\t", "+\t\t\tint startDiff= this.getNode().getStartPosition() - r2.getNode().getStartPosition();", "+\t\t\tif (startDiff != 0) {", "+\t\t\t\treturn startDiff; // insert before if start node is first", "+\t\t\t}", "+", "+\t\t\tif (r2.isMove != this.isMove) {", "+\t\t\t\treturn this.isMove ? -1 : 1; // first move then copy", "+\t\t\t}", "+\t\t\treturn 0;", "+\t\t}", "-\t\tpublic int compare(Object o1, Object o2) {", "-\t\t\tCopySourceInfo e1= (CopySourceInfo) o1;", "-\t\t\tCopySourceInfo e2= (CopySourceInfo) o2;", "-\t\t\tif (e1.isMove) {", "-\t\t\t\treturn -1;", "-\t\t\t} else if (e2.isMove) {", "-\t\t\t\treturn 1;", "-\t\t\t}", "-\t\t\treturn e2.getEndNode().getStartPosition() - e1.getEndNode().getStartPosition();", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e18da85e3823ab84f3510497c5e2b205", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "847811aba616fe8ef974c21595a3a8f5a0b4a4ab", "commitAfterChange": "4dbfc96b81c8ea986466921f071c4e6377836a2c", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tpublic static boolean isReadOnly(IResource resource)", "signatureAfterChange": " \tpublic static boolean isReadOnly(IResource resource)", "diff": ["+\t */", "+\tpublic static boolean isReadOnly(IResource resource) {", "+\t\tif (isReadOnlySupported()) {", "+\t\t\tResourceAttributes resourceAttributes = resource.getResourceAttributes();", "+\t\t\tif (resourceAttributes == null) return false; // not supported on this platform for this resource", "+\t\t\treturn resourceAttributes.isReadOnly();", "+\t\t}", "+\t\treturn false;", "+\t}", "-\tpublic static boolean isReadOnly(IResource resource) {", "-\t\tResourceAttributes resourceAttributes = resource.getResourceAttributes();", "-\t\tif (resourceAttributes == null) return false; // not supported on this platform for this resource", "-\t\treturn resourceAttributes.isReadOnly();", "-\t}"]}], "num": 24329}