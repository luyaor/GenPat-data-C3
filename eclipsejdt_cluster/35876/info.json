{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5031bd35720d3deb90feec66b08397e4", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bc5d014b35eecbf5c78007f13faa68e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/InterfaceMethodsTest.java", "commitBeforeChange": "5bca51a3a4b6130db814e9f9c75f049af2eaf04f", "commitAfterChange": "5733634bfb22c8bbb608c5329dac9f601203fe3d", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " \tpublic void testSuperCall1()", "signatureAfterChange": " \tpublic void testSuperCall1()", "diff": ["-\t\t\t\t\"\tdefault Stream<E> stream() { return List.super.stream();}\\n\" +", "-\t\t\t\t\"\t@Override\\n\" +", "-\t\t\t\t\"\tdefault Stream<E> parallelStream() { return Set.super.parallelStream();}\\n\" +", "+\t\t\t\t\"\tdefault Spliterator<E> spliterator() { if (true) return List.super.spliterator(); else return Set.super.spliterator(); }\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b173ac7f97e9350e1f7d6afc6d823db9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/InterfaceMethodsTest.java", "commitBeforeChange": "5bca51a3a4b6130db814e9f9c75f049af2eaf04f", "commitAfterChange": "5733634bfb22c8bbb608c5329dac9f601203fe3d", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tpublic void testSuperCall2()", "signatureAfterChange": " \tpublic void _testSuperCall2()", "diff": ["-\tpublic void testSuperCall2() {", "+\tpublic void _testSuperCall2() {", "-\t\t\t\t\"\tdefault Stream<E> stream() { return List.super.stream();}\\n\" +", "-\t\t\t\t\"\t@Override\\n\" +", "-\t\t\t\t\"\tdefault Stream<E> parallelStream() { return Set.super.parallelStream();}\\n\" +", "+\t\t\t\t\"   default Spliterator<E> spliterator() { return List.super.spliterator(); }\\n\" +"]}], "num": 35876}