{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d901df7eaea884d74e315606efc8b981", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22768e1ca3ba758c0705b9b1b777c968", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CopyResourceElementsOperation.java", "commitBeforeChange": "15601490c7fcfbf1d5cd50b2b9fcc08187c1f0d2", "commitAfterChange": "daf5838d3d0821f2a9be5ad5ca1a17918617a63a", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tprivate void updateReadOnlyPackageFragmentsForCopy(IContainer sourceFolder, IPackageFragmentRoot root, String[] newFragName)", "signatureAfterChange": " \t \tprivate void updateReadOnlyPackageFragmentsForCopy(IContainer sourceFolder, IPackageFragmentRoot root, String[] newFragName)", "diff": ["-\t\t\tif (sourceFolder.exists() && sourceFolder.isReadOnly()) {", "-\t\t\t\tparentFolder.setReadOnly(true);", "+\t\t\tif (sourceFolder.exists() && Util.isReadOnly(sourceFolder)) {", "+\t\t\t\tUtil.setReadOnly(parentFolder, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f20899c811ad20f8484416b3ae74b17", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "15601490c7fcfbf1d5cd50b2b9fcc08187c1f0d2", "commitAfterChange": "daf5838d3d0821f2a9be5ad5ca1a17918617a63a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  protected void findSourceFiles(IResourceDelta sourceDelta, ClasspathMultiDirectory md, int segmentCount) throws CoreException", "signatureAfterChange": "  protected void findSourceFiles(IResourceDelta sourceDelta, ClasspathMultiDirectory md, int segmentCount) throws CoreException", "diff": ["-\t\t\t\t\t\toutputFile.setReadOnly(false); // just in case the original was read only", "+\t\t\t\t\t\tUtil.setReadOnly(outputFile, false); // just in case the original was read only", "-\t\t\t\t\t\toutputFile.setReadOnly(false); // just in case the original was read only", "+\t\t\t\t\t\tUtil.setReadOnly(outputFile, false); // just in case the original was read only"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a165d03462cd1ec881eea6b9364cd351", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "4dbfc96b81c8ea986466921f071c4e6377836a2c", "commitAfterChange": "b7f468690a70977c68b74d1aeee81bdba359d238", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " public void test035()", "signatureAfterChange": " public void test035()", "diff": ["-\t\tif (!f.delete()) {", "+\t\tif (!Util.delete(f)) {", "-\t\tif (!f.delete()) {", "+\t\tif (!Util.delete(f)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9104852cbf1cfd1e8ceba05fec67ee6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CopyResourceElementsOperation.java", "commitBeforeChange": "15601490c7fcfbf1d5cd50b2b9fcc08187c1f0d2", "commitAfterChange": "daf5838d3d0821f2a9be5ad5ca1a17918617a63a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprivate void processCompilationUnitResource(ICompilationUnit source, PackageFragment dest) throws JavaModelException", "signatureAfterChange": " \tprivate void processCompilationUnitResource(ICompilationUnit source, PackageFragment dest) throws JavaModelException", "diff": ["-\t\t\t\t\tdestFile.setReadOnly(false);", "+\t\t\t\t\tUtil.setReadOnly(destFile, false);", "-\t\t\t\t\tdestFile.setReadOnly(wasReadOnly);", "+\t\t\t\t\tUtil.setReadOnly(destFile, wasReadOnly);"]}], "num": 27027}