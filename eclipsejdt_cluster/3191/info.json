{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "961ad66fb408187d64cf5e73eccf44dd", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31507b419b34f0d18d8720a19f3ee3b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 40, "signatureBeforeChange": "  void scanFieldForNullAnnotation(IBinaryField field, FieldBinding fieldBinding)", "signatureAfterChange": "  private void scanFieldForNullAnnotation(IBinaryField field, FieldBinding fieldBinding)", "diff": ["-void scanFieldForNullAnnotation(IBinaryField field, FieldBinding fieldBinding) {", "-\tif (this.environment.globalOptions.sourceLevel >= ClassFileConstants.JDK1_8) {", "-\t\tTypeBinding fieldType = fieldBinding.type;", "-\t\tif (fieldType != null", "-\t\t\t\t&& !fieldType.isBaseType()", "-\t\t\t\t&& (fieldType.tagBits & TagBits.AnnotationNullMASK) == 0", "-\t\t\t\t&& (this.tagBits & TagBits.AnnotationNonNullByDefault) != 0) {", "-\t\t\tfieldBinding.type = this.environment.createAnnotatedType(fieldType, TagBits.AnnotationNonNull);", "-\t\t}", "-\t\treturn; // not using fieldBinding.tagBits when we have type annotations.", "-\t}", "-", "+private void scanFieldForNullAnnotation(IBinaryField field, FieldBinding fieldBinding) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2f0863dc58152a8eca476257c977152", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "4582114353aa3904268b70cdd42dc3781becfb01", "commitAfterChange": "7b316625d96d66e552d608c4488c77581168d213", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " protected int resolveLevelForType(char[] qualifiedPattern, TypeBinding type)", "signatureAfterChange": " protected int resolveLevelForType(char[] qualifiedPattern, TypeBinding type)", "diff": ["-\tif (this.isCamelCase) {", "-\t\tif (!this.isCaseSensitive || (qualifiedPattern.length>0 && fullyQualifiedTypeName.length>0 && qualifiedPattern[0] == fullyQualifiedTypeName[0])) {", "-\t\t\tif (CharOperation.camelCaseMatch(qualifiedPattern, fullyQualifiedTypeName)) {", "-\t\t\t\treturn ACCURATE_MATCH;", "-\t\t\t}", "-\t\t\tif (!this.isCaseSensitive && (this.matchMode & SearchPattern.R_PREFIX_MATCH) != 0) {", "-\t\t\t\tif (CharOperation.prefixEquals(qualifiedPattern, fullyQualifiedTypeName, this.isCaseSensitive)) {", "-\t\t\t\t\treturn ACCURATE_MATCH;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t}"]}], "num": 3191}