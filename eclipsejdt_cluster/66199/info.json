{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "056b2c41192be911f80405649ac4b425", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c94a9e5041c8f35f9e7e39f67aea335", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "0271031e5844c32df2646c3a81a2c00b29e7d251", "commitAfterChange": "14c82497ad7236bee9eedf2d9ff4867e4a47ff21", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprotected void getMethodBodies(CompilationUnitDeclaration unit, int place)", "signatureAfterChange": " protected void getMethodBodies(CompilationUnitDeclaration unit, MatchingNodeSet matchingNodeSet)", "diff": ["-\t}", "-\tprotected void getMethodBodies(CompilationUnitDeclaration unit, int place) {", "-\t\t//fill the methods bodies in order for the code to be generated", "-", "-\t\tif (unit.ignoreMethodBodies) {", "-\t\t\tunit.ignoreFurtherInvestigation = true;", "-\t\t\treturn;", "-\t\t\t// if initial diet parse did not work, no need to dig into method bodies.", "-\t\t}", "-", "-\t\tif (place < parseThreshold)", "-\t\t\treturn; //work already done ...", "-", "-\t\t//real parse of the method....", "-\t\tthis.parser.scanner.setSource(unit.compilationResult.compilationUnit.getContents());", "-\t\tthis.parser.parseBodies(unit);", "-\t}", "+}", "+protected void getMethodBodies(CompilationUnitDeclaration unit, MatchingNodeSet matchingNodeSet) {", "+\tif (unit.ignoreMethodBodies) {", "+\t\tunit.ignoreFurtherInvestigation = true;", "+\t\treturn; // if initial diet parse did not work, no need to dig into method bodies.", "+\t}", "+", "+\ttry {", "+\t\tthis.parser.scanner.setSource(unit.compilationResult.compilationUnit.getContents());", "+\t\tthis.parser.matchSet = matchingNodeSet;", "+\t\tthis.parser.parseBodies(unit);", "+\t} finally {", "+\t\tthis.parser.matchSet = null;", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8a9f0fee16c827c0fa2d360337477a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "a53da0027d2af09b928dca6fa330419b46afa0ca", "commitAfterChange": "792caf681810140ce615d98d3abfdde62639719c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tvoid validateNullAnnotations()", "signatureAfterChange": " \tvoid validateNullAnnotations()", "diff": ["-\t\t\t\tlong nullAnnotationTagBit =  this.binding.returnType.tagBits & TagBits.AnnotationNullMASK;", "-\t\t\t\tthis.scope.validateNullAnnotation(nullAnnotationTagBit, this.arguments[i].type, this.arguments[i].annotations);", "+\t\t\t\tif (!this.scope.validateNullAnnotation(this.binding.returnType.tagBits, this.arguments[i].type, this.arguments[i].annotations))", "+\t\t\t\t\tthis.binding.returnType = this.binding.returnType.unannotated();"]}], "num": 66199}