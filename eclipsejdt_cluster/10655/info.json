{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e840e39f6d9094728a0ccd6d7afd9aab", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d72ddb81ad5d6f1e85001610b59acd8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocFieldReference.java", "commitBeforeChange": "7c7a29560cc77e20d75aa306a0e1f9b3d1fd7800", "commitAfterChange": "bea840ed083d1fec83d3c3225bb9a0c808792499", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\t\tscope.problemReporter().javadocInvalidField(this, this.receiverType, scope.getModifiers());", "+\t\t\tscope.problemReporter().javadocInvalidField(this, this.receiverType, scope.getDeclarationModifiers());", "-\t\t\tscope.problemReporter().javadocDeprecatedField(this.binding, this, scope.getModifiers());", "+\t\t\tscope.problemReporter().javadocDeprecatedField(this.binding, this, scope.getDeclarationModifiers());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "931f382d470cd967a12721c67ce1abb7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocArgumentExpression.java", "commitBeforeChange": "7c7a29560cc77e20d75aa306a0e1f9b3d1fd7800", "commitAfterChange": "bea840ed083d1fec83d3c3225bb9a0c808792499", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\t\t\t\t\tscope.problemReporter().javadocInvalidType(typeRef, this.resolvedType, scope.getModifiers());", "+\t\t\t\t\t\tscope.problemReporter().javadocInvalidType(typeRef, this.resolvedType, scope.getDeclarationModifiers());", "-\t\t\t\t\t\tscope.problemReporter().javadocDeprecatedType(this.resolvedType, typeRef, scope.getModifiers());", "+\t\t\t\t\t\tscope.problemReporter().javadocDeprecatedType(this.resolvedType, typeRef, scope.getDeclarationModifiers());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee2187c7e486a7508dede301dae10448", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocArgumentExpression.java", "commitBeforeChange": "cdead094a9813fdba5ccda0ce2f9f48a99552dbc", "commitAfterChange": "3be4aa0b7d051355f329ce1003f3f4c0f7acfab2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\tconstant = NotAConstant;", "+\t\tthis.constant = NotAConstant;", "-\t\t\t\t\t\tscope.problemReporter().invalidType(typeRef, this.resolvedType);", "+\t\t\t\t\t\tscope.problemReporter().javadocInvalidType(typeRef, this.resolvedType, scope.getModifiers());", "-\t\t\t\t\t\tscope.problemReporter().deprecatedType(this.resolvedType, typeRef);", "+\t\t\t\t\t\tscope.problemReporter().javadocDeprecatedType(this.resolvedType, typeRef, scope.getModifiers());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff5b507dc0133a0c9257bd1cac3d9d2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocAllocationExpression.java", "commitBeforeChange": "7c7a29560cc77e20d75aa306a0e1f9b3d1fd7800", "commitAfterChange": "bea840ed083d1fec83d3c3225bb9a0c808792499", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\t\t\tscope.problemReporter().javadocInvalidConstructor(this, this.binding, scope.getModifiers());", "+\t\t\t\tscope.problemReporter().javadocInvalidConstructor(this, this.binding, scope.getDeclarationModifiers());", "-\t\t\tscope.problemReporter().javadocDeprecatedMethod(this.binding, this, scope.getModifiers());", "+\t\t\tscope.problemReporter().javadocDeprecatedMethod(this.binding, this, scope.getDeclarationModifiers());"]}], "num": 10655}