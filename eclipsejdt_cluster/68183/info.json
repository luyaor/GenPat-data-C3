{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b1d185de0a3207fc272e66360a3024fb", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04944b1561b8d4963821b0b7ad30251d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "909d7ea106422d6ae8df5392c045bb0bb269cbe3", "commitAfterChange": "1b7cc740dd9297bd0f4bafe7fea18d712058ba6e", "methodNumberBeforeChange": 243, "methodNumberAfterChange": 243, "signatureBeforeChange": " public void test0563_try_catch()", "signatureAfterChange": " public void test0563_try_catch()", "diff": ["+\t\t\"----------\\n\" +", "+\t\t\"2. WARNING in X.java (at line 20)\\n\" + ", "+\t\t\"\tif (ex == null) {\\n\" + ", "+\t\t\"    }\\n\" + ", "+\t\t\"\t                ^^^^^^^\\n\" + ", "+\t\t\"Dead code\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15b8b639efe1379e19a762b2accae7a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_5.java", "commitBeforeChange": "b32bff89b335f9213e72a23b143872f67ac07452", "commitAfterChange": "25a9dba189bcefd34377713ece67fd65377cdf3c", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public void test032()", "signatureAfterChange": " public void test032()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in p\\\\X.java (at line 4)\\n\" +", "-\t\t\"\tSystem.out.println(new q.X2().foo);\t\\n\" +", "-\t\t\"\t                              ^^^\\n\" +", "-\t\t\"The field X2.foo is not visible\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. ERROR in p\\\\X.java (at line 5)\\n\" +", "-\t\t\"\tSystem.out.println(new q.X2().bar);\t\\n\" +", "-\t\t\"\t                              ^^^\\n\" +", "-\t\t\"The field X2.bar is not visible\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in p\\\\X.java (at line 4)\\n\" + ", "+\t\t\"\tSystem.out.println(new q.X2().foo);\t\\n\" + ", "+\t\t\"\t                              ^^^\\n\" + ", "+\t\t\"The field X2.foo is not visible\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in p\\\\X.java (at line 5)\\n\" + ", "+\t\t\"\tSystem.out.println(new q.X2().bar);\t\\n\" + ", "+\t\t\"\t                              ^^^\\n\" + ", "+\t\t\"The field X2.bar is not visible\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in q\\\\X2.java (at line 3)\\n\" + ", "+\t\t\"\tprotected String foo = \\\"X2.foo\\\";\t\\n\" + ", "+\t\t\"\t                 ^^^\\n\" + ", "+\t\t\"The field X2.foo is hiding a field from type X1\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15e33875084e8427a23490bba53b1658", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericsRegressionTest_1_8.java", "commitBeforeChange": "3256aef43e2296affdbf86e21f8cafdaa866161a", "commitAfterChange": "f357f309273e0bfe8345ff708d18fa83c6a34931", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " public void testBug424930c()", "signatureAfterChange": " public void testBug424930c()", "diff": ["+\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"The constructor X<S,Deque<S>>(() -> {}) is undefined\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 14)\\n\" + ", "+\t\t\"\treturn new X<>(() -> new ArrayDeque<>(dequeCapacity));\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c2db4811a8ed7e82281a4d9803181dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NamingConventionTests.java", "commitBeforeChange": "e4f990948db7128fd7d7d97f9a98b8766a65b4cc", "commitAfterChange": "350b02047cd9693bad8f368aad78539d79e48626", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void testSuggestFieldName010() throws CoreException", "signatureAfterChange": " public void testSuggestFieldName010() throws CoreException", "diff": ["+\t\t\"names\\n\" + //$NON-NLS-1$", "+\t\t\"namessuf\\n\" + //$NON-NLS-1$", "+\t\t\"preNames\\n\" + //$NON-NLS-1$", "+\t\t\"oneNames\\n\" + //$NON-NLS-1$", "+\t\t\"oneNamessuf\\n\" + //$NON-NLS-1$", "+\t\t\"preOneNames\\n\" + //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33902ec24d72b8a31206e95209fa4b47", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/StatementRecoveryTest.java", "commitBeforeChange": "4730ffa6af7b8ef865530621618933366af2da66", "commitAfterChange": "523f72b860e1c5f7334e13e5c75a18826c7ae1a0", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " public void test0036()", "signatureAfterChange": " public void test0036()", "diff": ["+\t\t\"    for (; ; ) \\n\" + ", "+\t\t\"      ;\\n\" + ", "+\t\t\"    if (true)\\n\" + ", "+\t\t\"        {\\n\" + ", "+\t\t\"          foo();\\n\" + ", "+\t\t\"        }\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4467e76bb64048bd9e8c9dfade66c79a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "4c05b51e282281d245149ac856aed4eb689aee0d", "commitAfterChange": "fcd8f6eb5a6e4ad47715a6f446da38772d56031c", "methodNumberBeforeChange": 230, "methodNumberAfterChange": 230, "signatureBeforeChange": " \tpublic void test0216() throws JavaModelException", "signatureAfterChange": " \tpublic void test0216() throws JavaModelException", "diff": ["-\t\tString expectedOutput = \"Type safety: The method foo(Object) belongs to the raw type Y. References to generic type Y<T> should be parameterized\\n\" + ", "-\t\t\"Type safety: The method foo(Object) belongs to the raw type Y. References to generic type Y<T> should be parameterized\";", "-\t\tassertProblemsSize(unit, 2, expectedOutput);", "+\t\tString expectedOutput =", "+\t\t\t\"Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"Type safety: The method foo(Object) belongs to the raw type Y. References to generic type Y<T> should be parameterized\\n\" + ", "+\t\t\t\"Y is a raw type. References to generic type Y<T> should be parameterized\\n\" + ", "+\t\t\t\"Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"Type safety: The method foo(Object) belongs to the raw type Y. References to generic type Y<T> should be parameterized\\n\" + ", "+\t\t\t\"Y is a raw type. References to generic type Y<T> should be parameterized\";", "+\t\tassertProblemsSize(unit, 7, expectedOutput);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46017bde6e9a872b8071f3f3b1a30fee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterBugsTests.java", "commitBeforeChange": "3cbc5a17035fd93e630a5ce3a447371924b2eaec", "commitAfterChange": "2fbac062d3f933d7974166e3d20ea9843fdd9750", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void testBug199265b() throws JavaModelException", "signatureAfterChange": " public void testBug199265b() throws JavaModelException", "diff": ["-\tformatSource(source);", "+\tformatSource(source,", "+\t\t\"import java.util.List;\\n\" + ", "+\t\t\"import java.util.Set;\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"//import java.util.HashMap;\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"public class X02 {\\n\" + ", "+\t\t\"}\\n\"", "+\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bb6446ab988929e86ea3a007587428b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "6224a5dcda094820e09b86e019ae927259ff3273", "commitAfterChange": "24c681585ef2f4b155e3d0f5cb2c551e612e2484", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " private void setUpGenericJar() throws IOException, CoreException", "signatureAfterChange": " private void setUpGenericJar() throws IOException, CoreException", "diff": ["+\t\t\"}\",", "+\t\t\"Container.java\",", "+\t\t\"public class Container {\\n\" + ", "+\t\t\"\tclass Inner<S> {\\n\" + ", "+\t\t\"\t\tInner(String st, Class<S> s) {\\n\" + ", "+\t\t\"\t\t\tsuper();\\n\" + ", "+\t\t\"\t\t}\\n\" + ", "+\t\t\"\t}\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bf281d51c402002834a3bd7793032b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTModelBridgeTests.java", "commitBeforeChange": "4cbca3a5c8650b81b5a31d226fc27b2c31db5b39", "commitAfterChange": "2d45e82533a4fdf2e19ac612c4a04c15da28bf1a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void setUpSuite() throws Exception", "signatureAfterChange": " \t \tpublic void setUpSuite() throws Exception", "diff": ["+\t\t\t\t\"  }\\n\" +", "+\t\t\t\t\"}\",", "+\t\t\t\t\"p/W.java\",", "+\t\t\t\t\"package p;\\n\" +", "+\t\t\t\t\"public class W {\\n\" +", "+\t\t\t\t\"  class Member {\\n\" +", "+\t\t\t\t\"    /*start*/Member(String s) {\\n\" +", "+\t\t\t\t\"    }/*end*/\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "782580964b6ffb94d3a259810a7b89c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeTypeAnnotationTest.java", "commitBeforeChange": "62a40ae820eb3f4d9fe13acbfcd6c17882e53721", "commitAfterChange": "6e5d8fb1fa59c43c60c58828e1e292aaafa3465f", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "\r \tpublic void test066() throws Exception", "signatureAfterChange": "\r \tpublic void test066() throws Exception", "diff": ["+\t\t\t\t\"\t                                ^^^^^^^\\n\" + \r", "+\t\t\t\t\"Annotation types that do not specify explicit target element types cannot be applied here\\n\" + \r", "+\t\t\t\t\"----------\\n\" + \r", "+\t\t\t\t\"2. ERROR in X.java (at line 2)\\n\" + \r", "+\t\t\t\t\"\tObject o = new X().new <String> @Marker X();\\n\" + \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d331587a756db778460eb7daa35a201", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTModelBridgeTests.java", "commitBeforeChange": "4ad3c874e62c224ecc8908a13e75fb553a601626", "commitAfterChange": "96b9f3a2bb7723060aaffc443c165d9a3e629afb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprivate void setUpJavaProject() throws CoreException, IOException, JavaModelException", "signatureAfterChange": "  \tprivate void setUpJavaProject() throws CoreException, IOException, JavaModelException", "diff": ["-\t\t\t\t\"}\"", "+\t\t\t\t\"}\",", "+\t\t\t\t\"p/Q.java\",", "+\t\t\t\t\"package p;\\n\" +", "+\t\t\t\t\"/*start*/@MyAnnot/*end*/\\n\" +", "+\t\t\t\t\"public class Q {\\n\" +", "+\t\t\t\t\"}\\n\" +", "+\t\t\t\t\"@interface MyAnnot {\\n\" +", "+\t\t\t\t\"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7df0dfcae32afceaac32c4d95f3d30bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/AnnotationDietRecoveryTest.java", "commitBeforeChange": "ff1eb602a8aea39b1e15b206441aadf76bfaa984", "commitAfterChange": "dc5ee42cb3e5694c60c3a1f62c20766cb3cb2274", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void test0009()", "signatureAfterChange": " public void test0009()", "diff": ["-\t\t\"  List<Test> l;\\n\" + ", "+\t\t\"  @SuppressWarnings(\\\"unchecked\\\") List<Test> l;\\n\" + ", "-\t\t\"  List<Test> l;\\n\" + ", "+\t\t\"  @SuppressWarnings(\\\"unchecked\\\") List<Test> l;\\n\" + ", "-\t\texpectedDietUnitToString;", "+\t\t\"package a;\\n\" + ", "+\t\t\"public class X {\\n\" + ", "+\t\t\"  List<Test> l;\\n\" + ", "+\t\t\"  public X() {\\n\" + ", "+\t\t\"  }\\n\" + ", "+\t\t\"}\\n\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f37cbec17f785324e6d7e4d9c71e818", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ExpressionContextTests.java", "commitBeforeChange": "68f185fc63132d7b106a1c7ca52ed6d004b96329", "commitAfterChange": "4a85a8ee613913420acf3dde5af380e91d3bad2c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void test004()", "signatureAfterChange": " public void test004()", "diff": ["+\t\t\t\"\t            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Arrays are not allowed in intersection cast operator\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tObject p = (X[] & Serializable & Cloneable) new X[0];\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "846a9bcc956b4374870d776f7c89cddb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_5.java", "commitBeforeChange": "1c0c2bf77ea7eb024038ba5150fcc9eb4dd14084", "commitAfterChange": "1cdb6c1b0fb5ba08d4e282b871474685ab8baf3f", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " public void test049()", "signatureAfterChange": " public void test049()", "diff": ["+\t\t\"----------\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in pb\\\\Concrete.java (at line 4)\\n\" + ", "+\t\t\"\tprotected void callme(){\tSystem.out.println(\\\"SUCCESS\\\"); }\\n\" + ", "+\t\t\"\t               ^^^^^^^^\\n\" + ", "+\t\t\"The method callme() of type Concrete should be tagged with @Override since it actually overrides a superclass method\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "856523b88a5289b5b5e8e78ebda955a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NamingConventionTests.java", "commitBeforeChange": "e4f990948db7128fd7d7d97f9a98b8766a65b4cc", "commitAfterChange": "350b02047cd9693bad8f368aad78539d79e48626", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void testSuggestFieldName006() throws CoreException", "signatureAfterChange": " public void testSuggestFieldName006() throws CoreException", "diff": ["+\t\t\"name\\n\" + //$NON-NLS-1$", "+\t\t\"namesuf\\n\" + //$NON-NLS-1$", "+\t\t\"preName\\n\" + //$NON-NLS-1$", "+\t\t\"oneName\\n\" + //$NON-NLS-1$", "+\t\t\"oneNamesuf\\n\" + //$NON-NLS-1$", "+\t\t\"preOneName\\n\" + //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c52a17768b7bc2dc0a9644d386d8420", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericMethodTests.java", "commitBeforeChange": "e370ba439679a26bb04e9b77917c8e22a1b8aa06", "commitAfterChange": "90d481edc9060cc498a8f085b08186108312e37b", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic void testMethodReferencesStringPatternSingleParamArguments06() throws CoreException", "signatureAfterChange": " \tpublic void testMethodReferencesStringPatternSingleParamArguments06() throws CoreException", "diff": ["+\t\t\t/* Results while resolving string pattern with no qualification (currently disabled as it is not comaptible with previous results):", "+\t\t\t*/", "+\t\t\t\"src/g5/m/ref/RefRaw.java void g5.m.ref.RefRaw.testSingle() [complete(new Exception(), gs)] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefSingle.java void g5.m.ref.RefSingle.testObject() [complete(new Object(), gs)] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefSingle.java void g5.m.ref.RefSingle.testException() [complete(new Exception(), gs)] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefSingle.java void g5.m.ref.RefSingle.testRuntimeException() [complete(new RuntimeException(), gs)] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefSingle.java void g5.m.ref.RefSingle.testUnbound() [complete(new String(), gs)] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefSingle.java void g5.m.ref.RefSingle.testExtends() [complete(new Throwable(), gs)] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefSingle.java void g5.m.ref.RefSingle.testSuper() [complete(new RuntimeException(), gs)] EXACT_MATCH\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9988736a0db8db9f89dcad95cc54492a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_4.java", "commitBeforeChange": "c40952dd3377ae996ee676dcac3fcb724d57d010", "commitAfterChange": "1283becde4269d4bd1b131ede84504f893ae6981", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " \tpublic void testBug96237_Public03()", "signatureAfterChange": " \tpublic void testBug96237_Public03()", "diff": ["-\t\t\t\"----------\\n\"", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in comment6a\\\\test\\\\Invalid2.java (at line 4)\\n\" + ", "+\t\t\t\"\t* @see Test.Inner\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: Invalid member type qualification\\n\" + ", "+\t\t\t\"----------\\n\"\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b10cb9493f72f97913f9db820e24cb7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "f5733c2118cce9570c584a3c84480228a3b7fc00", "commitAfterChange": "2325884dde9438b06c0c79c1dfd33a091d106072", "methodNumberBeforeChange": 735, "methodNumberAfterChange": 735, "signatureBeforeChange": " public void test0729()", "signatureAfterChange": " public void test0729()", "diff": ["+\t\t\"\t      ^\\n\" + ", "+\t\t\"The interface I cannot be implemented more than once with different arguments: I<Y> and I<X>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\"\tclass Y extends X implements I<X> {}\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b50bbab6f670593f9214176d2bb2bb5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NamingConventionTests.java", "commitBeforeChange": "e4f990948db7128fd7d7d97f9a98b8766a65b4cc", "commitAfterChange": "350b02047cd9693bad8f368aad78539d79e48626", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void testSuggestFieldName009() throws CoreException", "signatureAfterChange": " public void testSuggestFieldName009() throws CoreException", "diff": ["+\t\t\"name\\n\" + //$NON-NLS-1$", "+\t\t\"namesuf\\n\" + //$NON-NLS-1$", "+\t\t\"preName\\n\" + //$NON-NLS-1$", "+\t\t\"oneName\\n\" + //$NON-NLS-1$", "+\t\t\"oneNamesuf\\n\" + //$NON-NLS-1$", "+\t\t\"preOneName\\n\" + //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a854dab735bd3e22bc814e82c563cc77", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_4.java", "commitBeforeChange": "c40952dd3377ae996ee676dcac3fcb724d57d010", "commitAfterChange": "1283becde4269d4bd1b131ede84504f893ae6981", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " \tpublic void testBug96237_Private03()", "signatureAfterChange": " \tpublic void testBug96237_Private03()", "diff": ["+\t\t\t\"----------\\n\" + ", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in comment6a\\\\test\\\\Invalid2.java (at line 4)\\n\" + ", "+\t\t\t\"\t* @see Test.Inner\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: Invalid member type qualification\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b30a7e1b95002a7bdac49772f5aa1e13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_5.java", "commitBeforeChange": "c40952dd3377ae996ee676dcac3fcb724d57d010", "commitAfterChange": "1283becde4269d4bd1b131ede84504f893ae6981", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " \tpublic void testBug96237_Public03()", "signatureAfterChange": " \tpublic void testBug96237_Public03()", "diff": ["+\t\t\t\"----------\\n\" + ", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in comment6a\\\\test\\\\Invalid2.java (at line 4)\\n\" + ", "+\t\t\t\"\t* @see Test.Inner\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: Invalid member type qualification\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b795c485d1a826dcddc75232cf1e55e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_3.java", "commitBeforeChange": "c40952dd3377ae996ee676dcac3fcb724d57d010", "commitAfterChange": "1283becde4269d4bd1b131ede84504f893ae6981", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " \tpublic void testBug96237_Private03()", "signatureAfterChange": " \tpublic void testBug96237_Private03()", "diff": ["+\t\t\t\"----------\\n\" + ", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in comment6a\\\\test\\\\Invalid2.java (at line 4)\\n\" + ", "+\t\t\t\"\t* @see Test.Inner\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: Invalid member type qualification\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7b250a9322130281ba6bc743860e95e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_3.java", "commitBeforeChange": "c40952dd3377ae996ee676dcac3fcb724d57d010", "commitAfterChange": "1283becde4269d4bd1b131ede84504f893ae6981", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " \tpublic void testBug96237_Public03()", "signatureAfterChange": " \tpublic void testBug96237_Public03()", "diff": ["+\t\t\t\"----------\\n\" + ", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in comment6a\\\\test\\\\Invalid2.java (at line 4)\\n\" + ", "+\t\t\t\"\t* @see Test.Inner\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: Invalid member type qualification\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edd6c6bee48eb5f8a4861c6ea2883cac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_4.java", "commitBeforeChange": "b32bff89b335f9213e72a23b143872f67ac07452", "commitAfterChange": "25a9dba189bcefd34377713ece67fd65377cdf3c", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public void test032()", "signatureAfterChange": " public void test032()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in p\\\\X.java (at line 4)\\n\" +", "-\t\t\"\tSystem.out.println(new q.X2().foo);\t\\n\" +", "-\t\t\"\t                              ^^^\\n\" +", "-\t\t\"The field X2.foo is not visible\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. ERROR in p\\\\X.java (at line 5)\\n\" +", "-\t\t\"\tSystem.out.println(new q.X2().bar);\t\\n\" +", "-\t\t\"\t                              ^^^\\n\" +", "-\t\t\"The field X2.bar is not visible\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in p\\\\X.java (at line 4)\\n\" + ", "+\t\t\"\tSystem.out.println(new q.X2().foo);\t\\n\" + ", "+\t\t\"\t                              ^^^\\n\" + ", "+\t\t\"The field X2.foo is not visible\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in p\\\\X.java (at line 5)\\n\" + ", "+\t\t\"\tSystem.out.println(new q.X2().bar);\t\\n\" + ", "+\t\t\"\t                              ^^^\\n\" + ", "+\t\t\"The field X2.bar is not visible\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in q\\\\X2.java (at line 3)\\n\" + ", "+\t\t\"\tprotected String foo = \\\"X2.foo\\\";\t\\n\" + ", "+\t\t\"\t                 ^^^\\n\" + ", "+\t\t\"The field X2.foo is hiding a field from type X1\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3cca5ec406573f4a7fb3feaa3092911", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_5.java", "commitBeforeChange": "c40952dd3377ae996ee676dcac3fcb724d57d010", "commitAfterChange": "1283becde4269d4bd1b131ede84504f893ae6981", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " \tpublic void testBug96237_Private03()", "signatureAfterChange": " \tpublic void testBug96237_Private03()", "diff": ["+\t\t\t\"----------\\n\" + ", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in comment6a\\\\test\\\\Invalid2.java (at line 4)\\n\" + ", "+\t\t\t\"\t* @see Test.Inner\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: Invalid member type qualification\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc279c868b0fbc8b6470bf7708cad3c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "bea7b508525f70d680963772996546f2bcf8018f", "commitAfterChange": "6612336f81825afdf894aa053e2e886c83842e87", "methodNumberBeforeChange": 181, "methodNumberAfterChange": 182, "signatureBeforeChange": " public void test402219a()", "signatureAfterChange": " public void test402219a()", "diff": ["+\t\t\t\t\"\tnew X().goo((p1, p2) -> {});\\n\" + ", "+\t\t\t\t\"\t        ^^^\\n\" + ", "+\t\t\t\t\"The method goo(I) is ambiguous for the type X\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 11)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc556a1127b1e1dd9466666f7fe4af8c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_3.java", "commitBeforeChange": "b32bff89b335f9213e72a23b143872f67ac07452", "commitAfterChange": "25a9dba189bcefd34377713ece67fd65377cdf3c", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public void test032()", "signatureAfterChange": " public void test032()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in p\\\\X.java (at line 4)\\n\" +", "-\t\t\"\tSystem.out.println(new q.X2().foo);\t\\n\" +", "-\t\t\"\t                              ^^^\\n\" +", "-\t\t\"The field X2.foo is not visible\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. ERROR in p\\\\X.java (at line 5)\\n\" +", "-\t\t\"\tSystem.out.println(new q.X2().bar);\t\\n\" +", "-\t\t\"\t                              ^^^\\n\" +", "-\t\t\"The field X2.bar is not visible\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in p\\\\X.java (at line 4)\\n\" + ", "+\t\t\"\tSystem.out.println(new q.X2().foo);\t\\n\" + ", "+\t\t\"\t                              ^^^\\n\" + ", "+\t\t\"The field X2.foo is not visible\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in p\\\\X.java (at line 5)\\n\" + ", "+\t\t\"\tSystem.out.println(new q.X2().bar);\t\\n\" + ", "+\t\t\"\t                              ^^^\\n\" + ", "+\t\t\"The field X2.bar is not visible\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in q\\\\X2.java (at line 3)\\n\" + ", "+\t\t\"\tprotected String foo = \\\"X2.foo\\\";\t\\n\" + ", "+\t\t\"\t                 ^^^\\n\" + ", "+\t\t\"The field X2.foo is hiding a field from type X1\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffac2afc722a653843ba1ccd5f22912e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "51e1f00f8d474f0b209b47afa85e44328a517f92", "commitAfterChange": "4fd98abe69a6425880abe243fa431e365710bef2", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": " public void test_default_nullness_011()", "signatureAfterChange": " public void test_default_nullness_011()", "diff": ["+\t\t\"----------\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in p1\\\\C.java (at line 2)\\n\" + ", "+\t\t\"\t@org.eclipse.jdt.annotation.NonNullByDefault\\n\" + ", "+\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Nullness default is redundant with a default specified for the enclosing package p1\\n\" + "]}], "num": 68183}