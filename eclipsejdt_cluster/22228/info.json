{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f78e921fa5dbe6475a79085c71634ab", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "647470f1115e086b21ff9d69b729f9c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "40f76b3d0fb01a4a7fa1aad4b09c356c31458c94", "commitAfterChange": "323d52f789e646d704223fd3ac5d22c4e4efec25", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public ParameterizedTypeBinding createParameterizedType(ReferenceBinding genericType, TypeBinding[] typeArguments, long annotationBits, ReferenceBinding enclosingType)", "signatureAfterChange": " public ParameterizedTypeBinding createParameterizedType(ReferenceBinding genericType, TypeBinding[] typeArguments, long annotationBits, ReferenceBinding enclosingType)", "diff": ["-\t\t\t    if (annotationBits != 0 && ((cachedType.tagBits & annotationBits) != annotationBits)) continue nextCachedType;", "+\t\t\t    long cachedBits = cachedType.tagBits & TagBits.AnnotationNullMASK;", "+\t\t\t    if ((cachedBits | annotationBits) != 0 && cachedBits != annotationBits) continue nextCachedType;", "-\tparameterizedType.tagBits |= annotationBits;", "+\tif (annotationBits != 0L)", "+\t\tparameterizedType.tagBits |= annotationBits | TagBits.HasNullTypeAnnotation;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee82a629c135cd5eb437fd986eaf25b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "c45031a708344453f01f911278a63ebae41b9cba", "commitAfterChange": "c49a7bd34f8c2781dba76984d24d83335183205f", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 35, "signatureBeforeChange": "  public WildcardBinding createWildcard(ReferenceBinding genericType, int rank, TypeBinding bound, TypeBinding[] otherBounds, int boundKind)", "signatureAfterChange": " public WildcardBinding createWildcard(ReferenceBinding genericType, int rank, TypeBinding bound, TypeBinding[] otherBounds, int boundKind, long annotationTagBits)", "diff": ["+}", "+public WildcardBinding createWildcard(ReferenceBinding genericType, int rank, TypeBinding bound, TypeBinding[] otherBounds, int boundKind, long annotationTagBits) {", "+\t\t\t    if ((cachedType.tagBits & TagBits.AnnotationNullMASK) != annotationTagBits) continue nextCachedType;", "+\tif (annotationTagBits != 0)", "+\t\twildcard.tagBits |= annotationTagBits | TagBits.HasNullTypeAnnotation;"]}], "num": 22228}