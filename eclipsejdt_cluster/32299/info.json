{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f9de67c9d7ace08ddb4815e04d99741d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ddf2c25d72d16d4dfe2e32b0cab6cde", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration.java", "commitBeforeChange": "247b10e9e9a193c5bce0a0229f09f2db2b122552", "commitAfterChange": "e6338e37292bbb2765a320f5dc4c27994307cd6d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void bindArguments()", "signatureAfterChange": " \tpublic void bindArguments()", "diff": ["-\t\t\tboolean used = this.binding == null || this.binding.isAbstract() || this.binding.isNative();", "-", "-\t\t\tint length = this.arguments.length;", "-\t\t\tfor (int i = 0; i < length; i++) {", "-\t\t\t\tTypeBinding argType = this.binding == null ? null : this.binding.parameters[i];", "+\t\t\tif (this.binding == null) {", "+\t\t\t\tfor (int i = 0, length = this.arguments.length; i < length; i++) {", "+\t\t\t\t\tthis.arguments[i].bind(this.scope, null, true);", "+\t\t\t\t}", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\t\tboolean used = this.binding.isAbstract() || this.binding.isNative();", "+\t\t\tfor (int i = 0, length = this.arguments.length; i < length; i++) {", "-\t\t\t\targument.bind(this.scope, argType, used);", "+\t\t\t\targument.bind(this.scope, this.binding.parameters[i], used);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c966c356a129f1eac9cec7451a426044", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ElementsImpl.java", "commitBeforeChange": "d8bc0369a4febbf26184c3abdfb00924e5abcf8a", "commitAfterChange": "840a1f2f1e9b39c00b9c2e1286430c4050c7bac6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic static String formatJavadoc(char[] unparsed)", "signatureAfterChange": " \tpublic static String formatJavadoc(char[] unparsed)", "diff": ["-\t\t\tsb.append(lines[line]);", "+\t\t\tchar[] chars = lines[line].toCharArray();", "+\t\t\tfor (char c : chars) {", "+\t\t\t\tif (c == '\\t') {", "+\t\t\t\t\tfor (int i = 0; i < 8; i++) {", "+\t\t\t\t\t\tsb.append(' ');", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\tsb.append(c);", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 32299}