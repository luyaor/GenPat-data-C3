{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a6c4231be1a0ee613d278915270c0e3f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c144c7d6fef597890d7dc76b4fcd94c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "c7f9539fa0d2c7dd5ba718179636fb1d50eefced", "commitAfterChange": "1de4b4e3b8ec35df71e570f058c8d7726752e872", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": "         public void preferenceChange(IEclipsePreferences.PreferenceChangeEvent event)", "signatureAfterChange": "         public void preferenceChange(IEclipsePreferences.PreferenceChangeEvent event)", "diff": ["-\t\t\t\t\tIJavaProject[] projects;", "+\t\t\t\t\tIJavaProject[] jProjects;", "-\t\t\t\t\t\tprojects = model.getJavaProjects();", "-\t\t\t\t\t\tfor (int i = 0, pl = projects.length; i < pl; i++) {", "-\t\t\t\t\t\t\tJavaProject javaProject = (JavaProject) projects[i];", "+\t\t\t\t\t\tjProjects = model.getJavaProjects();", "+\t\t\t\t\t\tIProject[] projects = new IProject[jProjects.length];", "+\t\t\t\t\t\tfor (int i = 0, pl = jProjects.length; i < pl; i++) {", "+\t\t\t\t\t\t\tJavaProject javaProject = (JavaProject) jProjects[i];", "+\t\t\t\t\t\t\tprojects[i] = javaProject.getProject();", "-\t\t\t\t\t\t\ttry {", "-\t\t\t\t\t\t\t\t// need to touch the project to force validation by DeltaProcessor", "-\t\t\t\t\t            javaProject.getProject().touch(null);", "-\t\t\t\t\t        } catch (CoreException e) {", "-\t\t\t\t\t            // skip", "-\t\t\t\t\t        }", "+\t\t\t\t\t\tmanager.touchProjects(projects, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b41e35f2c4f78cb1c96458adef87cb0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModel.java", "commitBeforeChange": "6ca2c17de7d2cf75286045cf5fe4db47b5ffe702", "commitAfterChange": "ec09b25a18c19092cc9fe16e9fc3af2be1689d02", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " protected boolean generateInfos( \tOpenableElementInfo info, \tIProgressMonitor pm, \tMap newElements, \tIResource underlyingResource)\tthrows JavaModelException", "signatureAfterChange": " protected boolean generateInfos( \tOpenableElementInfo info, \tIProgressMonitor pm, \tMap newElements, \tIResource underlyingResource)\tthrows JavaModelException", "diff": ["-\ttry {", "-\t\tIProject[] projects = this.getWorkspace().getRoot().getProjects();", "-\t\tfor (int i = 0, max = projects.length; i < max; i++) {", "-\t\t\tIProject project = projects[i];", "-\t\t\tif (project.isOpen() && project.hasNature(JavaCore.NATURE_ID)) {", "-\t\t\t\tinfo.addChild(getJavaProject(project));", "-\t\t\t}", "+\tIProject[] projects = this.getWorkspace().getRoot().getProjects();", "+\tfor (int i = 0, max = projects.length; i < max; i++) {", "+\t\tIProject project = projects[i];", "+\t\tif (JavaProject.hasJavaNature(project)) {", "+\t\t\tinfo.addChild(getJavaProject(project));", "-\t} catch (CoreException e) {", "-\t\tthrow new JavaModelException(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eeecdc57de101ddabe2d17e46ec54e45", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "dfd8d4647bad1465cda928961972e854fc071249", "commitAfterChange": "31c3266cfb06f3143b63cd3aca05524ef5cd1755", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public void checkIndexConsistency()", "signatureAfterChange": "\r public void checkIndexConsistency()", "diff": ["-\t\tIProject[] projects = workspace.getRoot().getProjects();\r", "-\t\tfor (int i = 0, max = projects.length; i < max; i++){\r", "-\t\t\tIProject project = projects[i];\r", "-\t\t\t// not only java project, given at startup nature may not have been set yet\r", "-\t\t\tif (project.isOpen()) { \r", "-\t\t\t\tindexAll(project);\r", "+\t\tif (this.projectsToCheck != null){\r", "+\t\t\tIProject[] projects = this.projectsToCheck;\r", "+\t\t\tthis.projectsToCheck = null;\r", "+\t\t\tfor (int i = 0, max = projects.length; i < max; i++){\r", "+\t\t\t\tIProject project = projects[i];\r", "+\t\t\t\t// not only java project, given at startup nature may not have been set yet\r", "+\t\t\t\tif (project.isOpen()) { \r", "+\t\t\t\t\tindexAll(project);\r", "+\t\t\t\t}\r"]}], "num": 33832}