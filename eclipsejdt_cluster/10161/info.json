{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8a361078ffda748a7df7d1c42378d73c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61f365c7a2c1d4a90e77a687f559ef83", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "bec882b73e7c0461cc0585cc90fdee9b599b323f", "commitAfterChange": "2d93f702c418ae37553e53fb53a22c5fb9d1c19a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \r \tpublic void parseStatements(Parser parser, CompilationUnitDeclaration unit)", "signatureAfterChange": "\r \r \tpublic void parseStatements(Parser parser, CompilationUnitDeclaration unit)", "diff": ["-\t\tif (isDefaultConstructor)\r", "+\t\tif (isDefaultConstructor){\r", "+\t\t\tconstructorCall =\r", "+\t\t\t\tnew ExplicitConstructorCall(ExplicitConstructorCall.ImplicitSuper);\r", "+\t\t\tconstructorCall.sourceStart = sourceStart;\r", "+\t\t\tconstructorCall.sourceEnd = sourceEnd; \r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5d7c38a49d0fe272455bb9ce0096a70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "f47607a5e20236e51269e93808bf8c57fd455f8a", "commitAfterChange": "f67216e8a4721dbe44a0a5d1b44a59dfb3149cc6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r \tpublic void resolve(ClassScope upperScope)", "signatureAfterChange": "\r \tpublic void resolve(ClassScope upperScope)", "diff": ["+\t\t// checking for recursive constructor call (protection)\r", "+\t\tif (!ignoreFurtherInvestigation && constructorCall == null){\r", "+\t\t\tconstructorCall = new ExplicitConstructorCall(ExplicitConstructorCall.ImplicitSuper);\r", "+\t\t\tconstructorCall.sourceStart = sourceStart;\r", "+\t\t\tconstructorCall.sourceEnd = sourceEnd;\r", "+\t\t}\r", "+\r", "-\t\t\t// checking for recursive constructor call\r", "-\t\t\tif (constructorCall != null) {\r", "-\t\t\t\t// indirect reference: increment target constructor reference count\r", "+\t\t\t// indirect reference: increment target constructor reference count\r", "+\t\t\tif (constructorCall != null){\r"]}], "num": 10161}