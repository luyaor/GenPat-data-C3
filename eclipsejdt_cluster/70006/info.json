{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "338aead17df212f5f782863d51942da2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46b1dd9a835d995b578772edd4d34360", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 548, "methodNumberAfterChange": 548, "signatureBeforeChange": "\t\t \tpublic void test544()", "signatureAfterChange": "\t\t \tpublic void test544()", "diff": ["-\t\t\t\"1. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tVector b = new Vector();\\n\" + ", "+\t\t\t\"\t^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Vector is a raw type. References to generic type Vector<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tVector b = new Vector();\\n\" + ", "+\t\t\t\"\t               ^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Vector is a raw type. References to generic type Vector<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 7)\\n\" + ", "-\t\t\t\"2. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 8)\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\"5. ERROR in X.java (at line 9)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcf028d066ae2d3ebfbc66847b445ca2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": " \tpublic void test104()", "signatureAfterChange": " \tpublic void test104()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class X <T extends AX> {\\n\" + ", "+\t\t\t\"\t                          ^^\\n\" + ", "+\t\t\t\"Type safety: AX is a raw type. References to generic type AX<P> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tX<? extends BX> x = new X<AX<String>>(new AX<String>());\\n\" + ", "+\t\t\t\"\t            ^^\\n\" + ", "+\t\t\t\"Type safety: BX is a raw type. References to generic type BX<Q> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\t\"2. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 8)\\n\" + ", "-\t\t\t\"3. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 9)\\n\" + "]}], "num": 70006}