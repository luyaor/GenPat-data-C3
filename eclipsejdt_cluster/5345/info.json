{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ecd46a0bcc0fca632f246935512851cb", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a2dba9fd619c63ba9876461eb96761a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchMatch.java", "commitBeforeChange": "9f4083645d70a432f33ad4b76043e33c22dce66a", "commitAfterChange": "62b1363351c6bbbf8add0db3d16b932995188a11", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic String toString()", "signatureAfterChange": " \tpublic String toString()", "diff": ["+\t\tbuffer.append(\"\\n  rule=\"); //$NON-NLS-1$", "+\t\tif ((this.matchRule & SearchPattern.R_EQUIVALENT_MATCH) != 0) {", "+\t\t\tbuffer.append(\"EQUIVALENT\"); //$NON-NLS-1$", "+\t\t\tif ((this.matchRule & SearchPattern.R_ERASURE_MATCH) != 0)", "+\t\t\t\tbuffer.append(\"+ERASURE\"); //$NON-NLS-1$", "+\t\t} else if ((this.matchRule & SearchPattern.R_ERASURE_MATCH) != 0) {", "+\t\t\tbuffer.append(\"ERASURE\"); //$NON-NLS-1$", "+\t\t} else {", "+\t\t\tbuffer.append(\"EXACT\"); //$NON-NLS-1$", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56a659db83fcf0ef202beb3d24e4066f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "3861d4cfff200f4a20f9b2846cf8819b2fe85539", "commitAfterChange": "1ab7b833f2e8fe1eaa17a4c72f8b9580f4ae1592", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "  protected void report(SearchMatch match) throws CoreException", "signatureAfterChange": "  protected void report(SearchMatch match) throws CoreException", "diff": ["+\t\tSystem.out.print(\"\\tMatch rule: \"); //$NON-NLS-1$", "+\t\tif ((match.getMatchRule() & SearchPattern.R_EQUIVALENT_MATCH) != 0) {", "+\t\t\tif ((match.getMatchRule() & SearchPattern.R_ERASURE_MATCH) != 0) {", "+\t\t\t\tSystem.out.println(\"EQUIVALENT + ERASURE\"); //$NON-NLS-1$", "+\t\t\t} else {", "+\t\t\t\tSystem.out.println(\"EQUIVALENT\"); //$NON-NLS-1$", "+\t\t\t}", "+\t\t} else if ((match.getMatchRule() & SearchPattern.R_ERASURE_MATCH) != 0) {", "+\t\t\tSystem.out.println(\"ERASURE\"); //$NON-NLS-1$", "+\t\t} else {", "+\t\t\tSystem.out.println(\"PERFECT\"); //$NON-NLS-1$", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6af7b255cb5338071904e0157b13adb5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "9ee78f50bb7fb9d70095ea7ff2d9f2e27d840c37", "commitAfterChange": "b6410432af18704990f18fa69a09dd7a76e8fb04", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 59, "signatureBeforeChange": "  protected void report(SearchMatch match) throws CoreException", "signatureAfterChange": "  protected void report(SearchMatch match) throws CoreException", "diff": ["-\t\tSystem.out.print(\"\\tMatch rule: \"); //$NON-NLS-1$", "-\t\tif ((match.getMatchRule() & SearchPattern.R_EQUIVALENT_MATCH) != 0) {", "-\t\t\tif ((match.getMatchRule() & SearchPattern.R_ERASURE_MATCH) != 0) {", "-\t\t\t\tSystem.out.println(\"EQUIVALENT + ERASURE\"); //$NON-NLS-1$", "-\t\t\t} else {", "-\t\t\t\tSystem.out.println(\"EQUIVALENT\"); //$NON-NLS-1$", "-\t\t\t}", "-\t\t} else if ((match.getMatchRule() & SearchPattern.R_ERASURE_MATCH) != 0) {", "+\t\tSystem.out.print(\"\\tRule: \"); //$NON-NLS-1$", "+\t\tif (match.isExact()) {", "+\t\t\tSystem.out.println(\"EXACT\"); //$NON-NLS-1$", "+\t\t} else if (match.isEquivalent()) {", "+\t\t\tSystem.out.println(\"EQUIVALENT\"); //$NON-NLS-1$", "+\t\t} else if (match.isErasure()) {", "-\t\t\tSystem.out.println(\"PERFECT\"); //$NON-NLS-1$", "+\t\t\tSystem.out.println(\"INVALID RULE\"); //$NON-NLS-1$", "+\t\tSystem.out.println(\"\\tRaw: \"+match.isRaw()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "818da39ec94f15864d051e0083900e4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "20c9553c55b67a9c07624bd0b5b35f188a7f1769", "commitAfterChange": "14fb89a0281d6b0089ef94e47420da3d5f85923f", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "  protected void report(SearchMatch match) throws CoreException", "signatureAfterChange": "  protected void report(SearchMatch match) throws CoreException", "diff": ["-\t\t\tSystem.out.println(\"EXACT\"); //$NON-NLS-1$", "+\t\t\tSystem.out.print(\"EXACT\"); //$NON-NLS-1$", "-\t\t\tSystem.out.println(\"EQUIVALENT\"); //$NON-NLS-1$", "+\t\t\tSystem.out.print(\"EQUIVALENT\"); //$NON-NLS-1$", "-\t\t\tSystem.out.println(\"ERASURE\"); //$NON-NLS-1$", "+\t\t\tSystem.out.print(\"ERASURE\"); //$NON-NLS-1$", "-\t\t\tSystem.out.println(\"INVALID RULE\"); //$NON-NLS-1$", "+\t\t\tSystem.out.print(\"INVALID RULE\"); //$NON-NLS-1$", "-\t\tSystem.out.println(\"\\tRaw: \"+match.isRaw()); //$NON-NLS-1$", "+\t\tif (match instanceof MethodReferenceMatch) {", "+\t\t\tMethodReferenceMatch methodReferenceMatch = (MethodReferenceMatch) match;", "+\t\t\tif (methodReferenceMatch.isPolymorphic()) {", "+\t\t\t\tSystem.out.print(\"+POLYMORPHIC\"); //$NON-NLS-1$", "+\t\t\t}", "+\t\t\tif (methodReferenceMatch.isImplicit()) {", "+\t\t\t\tSystem.out.print(\"+IMPLICIT\"); //$NON-NLS-1$", "+\t\t\t}", "+\t\t\tif (methodReferenceMatch.isSynthetic()) {", "+\t\t\t\tSystem.out.print(\"+SYNTHETIC\"); //$NON-NLS-1$", "+\t\t\t}", "+\t\t}", "+\t\tSystem.out.println(\"\\n\\tRaw: \"+match.isRaw()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87f3aed02802b42c07d02d0934a07ee3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchMatch.java", "commitBeforeChange": "9ee78f50bb7fb9d70095ea7ff2d9f2e27d840c37", "commitAfterChange": "b6410432af18704990f18fa69a09dd7a76e8fb04", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic String toString()", "signatureAfterChange": " \tpublic String toString()", "diff": ["-\t\tif ((this.matchRule & SearchPattern.R_EQUIVALENT_MATCH) != 0) {", "-\t\t\tbuffer.append(\"EQUIVALENT\"); //$NON-NLS-1$", "-\t\t\tif ((this.matchRule & SearchPattern.R_ERASURE_MATCH) != 0)", "-\t\t\t\tbuffer.append(\"+ERASURE\"); //$NON-NLS-1$", "-\t\t} else if ((this.matchRule & SearchPattern.R_ERASURE_MATCH) != 0) {", "-\t\t\tbuffer.append(\"ERASURE\"); //$NON-NLS-1$", "-\t\t} else {", "+\t\tif ((this.rule & SearchPattern.R_FULL_MATCH) != 0) {", "+\t\t} else if ((this.rule & SearchPattern.R_EQUIVALENT_MATCH) != 0) {", "+\t\t\tbuffer.append(\"EQUIVALENT\"); //$NON-NLS-1$", "+\t\t} else if ((this.rule & SearchPattern.R_ERASURE_MATCH) != 0) {", "+\t\t\tbuffer.append(\"ERASURE\"); //$NON-NLS-1$", "+\t\tbuffer.append(\"\\n  raw=\"); //$NON-NLS-1$", "+\t\tbuffer.append(this.raw);"]}], "num": 5345}