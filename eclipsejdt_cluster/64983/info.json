{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "21d17a76f9aa68eddab5a4af1655877e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4afbc1c01b08c919964d213f76b4daa2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "6e3484e93dc48a09ac8c425df0144a313c14ab99", "commitAfterChange": "4258235f7bd226d0dfb8701ffe19643b12592deb", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tprivate void findLocalMethods( \t\tchar[] methodName, \t\tTypeBinding[] argTypes, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall)", "signatureAfterChange": " \tprivate void findLocalMethods( \t\tchar[] methodName, \t\tTypeBinding[] argTypes, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tboolean canBePrefixed)", "diff": ["-\t\tboolean superCall) {", "+\t\tboolean superCall,", "+\t\tboolean canBePrefixed) {", "-\t\t\t\t\t\tprefixRequired = true;", "+\t\t\t\t\t\tif(canBePrefixed) {", "+\t\t\t\t\t\t\tprefixRequired = true;", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tcontinue next;", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcd8dcdc8b8b05e7caec3dd3ffc0d395", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "333e183ebe56f659f1083c452edbf2ef4089fa56", "commitAfterChange": "f09e5b387a9b27a1161db6587b5598aa2acd37a0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": " protected int matchMethod(MethodBinding method)", "signatureAfterChange": " protected int matchMethod(MethodBinding method, boolean skipImpossibleArg)", "diff": ["-protected int matchMethod(MethodBinding method) {", "+protected int matchMethod(MethodBinding method, boolean skipImpossibleArg) {", "-//\t\t\t\t\tif (isErasureMatch) {", "-//\t\t\t\t\t\treturn ERASURE_MATCH;", "-//\t\t\t\t\t}", "-\t\t\t\t\treturn IMPOSSIBLE_MATCH;", "+\t\t\t\t\tif (skipImpossibleArg) {", "+\t\t\t\t\t\t// Do not consider match as impossible while finding declarations and source level >= 1.5", "+\t\t\t\t\t \t// (see  bugs https://bugs.eclipse.org/bugs/show_bug.cgi?id=79990, 96761, 96763)", "+\t\t\t\t\t\tnewLevel = level;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\treturn IMPOSSIBLE_MATCH;", "+\t\t\t\t\t}", "-}"]}], "num": 64983}