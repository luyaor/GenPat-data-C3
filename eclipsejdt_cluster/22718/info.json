{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7dec8d8b5b5ad1e7243a8c2d540abc6b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "346648ec19f722b5236c851150396df8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests2.java", "commitBeforeChange": "120defa76e249a7b50b5aa52206e16b815780186", "commitAfterChange": "635cdb5a7a6689c525de4e28f32c0630009bc2be", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic void testBug376673a() throws CoreException", "signatureAfterChange": " \tpublic void testBug376673a() throws CoreException", "diff": ["-\t\t\t\t\t\"class \ud842\udf9f1 {}\\n\";", "+\t\t\t\t\t\"class \\uD842\\uDF9F1 {}\\n\";", "-\t\t\t\tIFile file = createFile(\"/P/pkg/\ud842\udf9f1.java\", content, \"UTF-8\");", "+\t\t\t\tIFile file = createFile(\"/P/pkg/\\uD842\\uDF9F1.java\", content, \"UTF-8\");", "-\t\t\tsearch(\"\ud842\udf9f1\", TYPE, DECLARATIONS, EXACT_RULE, scope, this.resultCollector);", "-\t\t\tassertSearchResults(\"pkg/\ud842\udf9f1.java pkg.\ud842\udf9f1 [\ud842\udf9f1] EXACT_MATCH\");", "+\t\t\tsearch(\"\\uD842\\uDF9F1\", TYPE, DECLARATIONS, EXACT_RULE, scope, this.resultCollector);", "+\t\t\tassertSearchResults(\"pkg/\\uD842\\uDF9F1.java pkg.\\uD842\\uDF9F1 [\\uD842\\uDF9F1] EXACT_MATCH\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44351ef50d1110c019b30b2188e74cac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_3.java", "commitBeforeChange": "dbe199a0a35ed3939846015f97b0348b23531353", "commitAfterChange": "f86c66887c5e1ed3962b4b871db70881ac5621a6", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " \tpublic void testBug83127f()", "signatureAfterChange": " \tpublic void testBug83127f()", "diff": ["-\t\t\t\"Syntax error, type parameters are only available if source level is 5.0\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 5.0\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 5.0\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "-\t\t\t\"Syntax error, parameterized types are only available if source level is 5.0\\n\" + ", "+\t\t\t\"Syntax error, parameterized types are only available if source level is 1.5\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f7b6c99a766537f9445d933f3551ba8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/VarargsTest.java", "commitBeforeChange": "130cb4765fd3f636bbf53ed159d4905dec0a5fd5", "commitAfterChange": "938f4b2ad6ef3c12e60db3be23aed731979677d7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void test008()", "signatureAfterChange": "  \tpublic void test008()", "diff": ["-\t\t\t\"The argument of type null should explicitly be cast to Object[] for the invocation of the varargs constructor Y(boolean, Object...). It could alternatively be cast to Object for a varargs invocation\\n\" +", "+\t\t\t\"Type null of the last argument to constructor Y(boolean, Object...) doesn't exactly match the vararg parameter type. Cast to Object[] to confirm the non-varargs invocation, or pass individual arguments of type Object for a varargs invocation.\\n\" +", "-\t\t\t\"The argument of type null should explicitly be cast to int[][] for the invocation of the varargs constructor Y(char, int[]...). It could alternatively be cast to int[] for a varargs invocation\\n\" +", "+\t\t\t\"Type null of the last argument to constructor Y(char, int[]...) doesn't exactly match the vararg parameter type. Cast to int[][] to confirm the non-varargs invocation, or pass individual arguments of type int[] for a varargs invocation.\\n\" +", "-\t\t\t\"The argument of type null should explicitly be cast to Object[] for the invocation of the varargs constructor Y(boolean, Object...). It could alternatively be cast to Object for a varargs invocation\\n\" +", "+\t\t\t\"Type null of the last argument to constructor Y(boolean, Object...) doesn't exactly match the vararg parameter type. Cast to Object[] to confirm the non-varargs invocation, or pass individual arguments of type Object for a varargs invocation.\\n\" +", "-\t\t\t\"The argument of type null should explicitly be cast to int[][] for the invocation of the varargs constructor Y(char, int[]...). It could alternatively be cast to int[] for a varargs invocation\\n\" +", "+\t\t\t\"Type null of the last argument to constructor Y(char, int[]...) doesn't exactly match the vararg parameter type. Cast to int[][] to confirm the non-varargs invocation, or pass individual arguments of type int[] for a varargs invocation.\\n\" +"]}], "num": 22718}