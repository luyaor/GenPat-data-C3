{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "af43e198ab09b521ebbcb621597707fb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06d93b82fb31c981a8df324564dae154", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBuilder.java", "commitBeforeChange": "f5262e0e66d7e25877ee8d8a091dd788b69869c5", "commitAfterChange": "47e88d0335bbb81b7bc00bc5460ee9a54afeb8fd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public void connect(IGenericType suppliedType, IGenericType superclass, IGenericType[] superinterfaces)", "signatureAfterChange": "\r public void connect(IGenericType suppliedType, IGenericType superclass, IGenericType[] superinterfaces)", "diff": ["+\tif (TypeHierarchy.DEBUG) {\r", "+\t\tSystem.out.println(\"Connecting: \" + ((JavaElement)typeHandle).toStringWithAncestors()); //$NON-NLS-1$\r", "+\t\tSystem.out.println(\"  to superclass: \" + (superHandle == null ? \"<None>\" : ((JavaElement)superHandle).toStringWithAncestors())); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tSystem.out.print(\"  and superinterfaces:\"); //$NON-NLS-1$\r", "+\t\tif (interfaceHandles == null) {\r", "+\t\t\tSystem.out.println(\" <None>\"); //$NON-NLS-1$\r", "+\t\t} else {\r", "+\t\t\tSystem.out.println();\r", "+\t\t\tfor (int i = 0, length = interfaceHandles.length; i < length; i++) {", "+\t\t\t\tSystem.out.println(\"    \" + ((JavaElement)interfaceHandles[i]).toStringWithAncestors()); //$NON-NLS-1$", "+\t\t\t}\r", "+\t\t}\r", "+\t}\r", "+\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3078e95a777dd9bb41106a3cc78ee3ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "6b6471423b89c70a33d53654f3143292c15724dc", "commitAfterChange": "dbb5484f1c0506305bb2de3acc0db3501ec7c329", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void setUpSuite() throws Exception", "signatureAfterChange": " public void setUpSuite() throws Exception", "diff": ["-\t// skip standard model suite set up", "+", "+\t// Init directories", "+\tinitDirectories(this.inputDir, this.profiles);", "+", "+\t// Delete output dir before compute reference", "+\tif (CLEAN) {", "+\t\tSystem.out.print(\"Deleting all files from \"+OUTPUT_DIR+\"...\");", "+\t\tUtil.delete(OUTPUT_DIR);", "+\t\tSystem.out.println(\"done\");", "+\t}", "+\t// Init failure", "+\telse if (this.canCompare) {", "+\t\tinitFailures();", "+\t}", "+", "+\t// Dump the version", "+\tFile versionFile = new Path(OUTPUT_DIR.getPath()).append(\"version.txt\").toFile();", "+\tOUTPUT_DIR.mkdirs();", "+\tUtil.writeToFile(JDT_CORE_VERSION, versionFile.getAbsolutePath());", "+", "+\t// Init time measuring", "+\tTIME_MEASURES = new TimeMeasuring();", "+", "+\t// Print", "+\tprint();", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d4a360a034650b11f277987a6516110", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/AbstractCompletionTest.java", "commitBeforeChange": "e3b61331087882f47093048d6298d97548b68615", "commitAfterChange": "9ae1dbe2eb10f60df8b987132110cee826808427", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void checkMethodParse( \t\tchar[] source,  \t\tint cursorLocation,  \t\tString expectedCompletion,  \t\tString expectedParentCompletion, \t\tString expectedUnitToString,  \t\tString expectedCompletionIdentifier,  \t\tString expectedReplacedSource, \t\tString[] expectedLabels, \t\tString testName)", "signatureAfterChange": " public void checkMethodParse( \t\tchar[] source,  \t\tint cursorLocation,  \t\tString expectedCompletion,  \t\tString expectedParentCompletion, \t\tString expectedUnitToString,  \t\tString expectedCompletionIdentifier,  \t\tString expectedReplacedSource, \t\tString[] expectedLabels, \t\tString testName)", "diff": ["-\t\t\t\t\t\t\t\t: parser.assistNode.toString(0);", "+\t\t\t\t\t\t\t\t: parser.assistNode.toString();", "-\t\t\t\t\t\t\t\t: parser.assistNodeParent.toString(0);", "+\t\t\t\t\t\t\t\t: parser.assistNodeParent.toString();", "-\t//System.out.println(computedUnitToString);", "-\t//System.out.println(Util.displayString(computedUnitToString));", "-\t//System.out.println(expectedUnitToString);\t\t", "+\tif (!expectedCompletion.equals(computedCompletion)) {", "+\t\tSystem.out.println(Util.displayString(computedCompletion));", "+\t}", "+\t\tif (!expectedParentCompletion.equals(computedParentCompletion)) {", "+\t\t\tSystem.out.println(Util.displayString(computedParentCompletion));", "+\t\t}", "+\tif (!expectedUnitToString.equals(computedUnitToString)) {", "+\t\tSystem.out.println(Util.displayString(computedUnitToString));", "+\t}", "+\t\tif (!expectedCompletionIdentifier.equals(computedCompletionIdentifier)) {", "+\t\t\tSystem.out.println(Util.displayString(computedCompletionIdentifier));", "+\t\t}", "+\t\tif (!expectedReplacedSource.equals(computedReplacedSource)) {", "+\t\t\tSystem.out.println(Util.displayString(computedReplacedSource));", "+\t\t}"]}], "num": 56766}