{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "482cbb507ab5dd427aab2070f2b2acc1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90407f88d9831c6561bcff7f10661a11", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypesImpl.java", "commitBeforeChange": "90329a8061aecf116ef817e3a00ea13f48a88e85", "commitAfterChange": "f49548d71766106245f8b2c861ede2b817c0e68f", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t@Override \tpublic boolean isAssignable(TypeMirror t1, TypeMirror t2)", "signatureAfterChange": " \t@Override \tpublic boolean isAssignable(TypeMirror t1, TypeMirror t2)", "diff": ["-\t\treturn ((TypeBinding)b1).isCompatibleWith((TypeBinding)b2);", "+\t\tif (((TypeBinding)b1).isCompatibleWith((TypeBinding)b2)) {", "+\t\t\treturn true;", "+\t\t}", "+\t\t", "+\t\tTypeBinding convertedType = _env.getLookupEnvironment().computeBoxingType((TypeBinding)b1);", "+\t\treturn null != convertedType && convertedType.isCompatibleWith((TypeBinding)b2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afd812f4bf7f4946b67a370ed38a7b68", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/messager/MessagerProc.java", "commitBeforeChange": "7c18a9763024ad321fbd37c2e6b52a79b1b2fb7c", "commitAfterChange": "42f7a750991845ea38763c1731c7ef38a727c093", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate boolean collectElements()", "signatureAfterChange": " \tprivate boolean collectElements()", "diff": ["+\t\t\t} else if (_nestedAnnotation == null) {", "+\t\t\t\tCollection<? extends AnnotationValue> values = mirror.getElementValues().values();", "+\t\t\t\tfor (AnnotationValue annotationValue : values) {", "+\t\t\t\t\t_nestedAnnotation = (AnnotationMirror) annotationValue.getValue();", "+\t\t\t\t}", "+\t\t\t} else {"]}], "num": 32555}