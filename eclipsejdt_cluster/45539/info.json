{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ead48cc125bcf492f7c1066e3d3087e8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f986e04e3245f72b29505770b4d8c88", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "65ba68984fe57eaa6cdcb4404a989efd4c4bfad3", "commitAfterChange": "6af78f6363993cc19587ed08eb19603ff8c1257a", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "\r public void fieldTypeProblem(SourceTypeBinding type, FieldDeclaration fieldDecl, TypeBinding expectedType)", "signatureAfterChange": "\r public void fieldTypeProblem(SourceTypeBinding type, FieldDeclaration fieldDecl, TypeBinding expectedType)", "diff": ["+\tint id;\r", "+\t\t\tid = IProblem.FieldTypeNotFound;\r", "+\t\t\tbreak;\r", "+\t\t\tid = IProblem.FieldTypeNotVisible;\r", "+\t\t\tbreak;\r", "+\t\t\tid = IProblem.FieldTypeAmbiguous;\r", "+\t\t\tbreak;\r", "+\t\t\tid = IProblem.FieldTypeInternalNameProvided;\r", "+\t\t\tbreak;\r", "-\t\t\tthis.handle(\r", "-\t\t\t\tIProblem.FieldTypeProblemBase + problemId,\r", "-\t\t\t\tnew String[] {fieldDecl.name(), new String(type.sourceName()), new String(expectedType.readableName())},\r", "-\t\t\t\tfieldDecl.type.sourceStart,\r", "-\t\t\t\tfieldDecl.type.sourceEnd);\r", "+\t\t\tid = IProblem.FieldTypeInheritedNameHidesEnclosingName;\r", "-\t\t\tbreak;\r", "+\t\t\treturn;\r", "+\tthis.handle(\r", "+\t\tid,\r", "+\t\tnew String[] {fieldDecl.name(), new String(type.sourceName()), new String(expectedType.readableName())},\r", "+\t\tfieldDecl.type.sourceStart,\r", "+\t\tfieldDecl.type.sourceEnd);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e33f3420d3b635f963952bcac2fd7395", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "65ba68984fe57eaa6cdcb4404a989efd4c4bfad3", "commitAfterChange": "6af78f6363993cc19587ed08eb19603ff8c1257a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r public void argumentTypeProblem(SourceTypeBinding type, AbstractMethodDeclaration methodDecl, Argument arg, TypeBinding expectedType)", "signatureAfterChange": "\r public void argumentTypeProblem(SourceTypeBinding type, AbstractMethodDeclaration methodDecl, Argument arg, TypeBinding expectedType)", "diff": ["+\tint id;\r", "+\t\t\tid = IProblem.ArgumentTypeNotFound;\r", "+\t\t\tbreak;\r", "+\t\t\tid = IProblem.ArgumentTypeNotVisible;\r", "+\t\t\tbreak;\r", "+\t\t\tid = IProblem.ArgumentTypeAmbiguous;\r", "+\t\t\tbreak;\r", "+\t\t\tid = IProblem.ArgumentTypeInternalNameProvided;\r", "+\t\t\tbreak;\r", "-\t\t\tthis.handle(\r", "-\t\t\t\tIProblem.ArgumentProblemBase + problemId,\r", "-\t\t\t\tnew String[] {new String(methodDecl.selector), arg.name(), new String(expectedType.readableName())},\r", "-\t\t\t\targ.type.sourceStart,\r", "-\t\t\t\targ.type.sourceEnd);\r", "+\t\t\tid = IProblem.ArgumentTypeInheritedNameHidesEnclosingName;\r", "-\t\t\tbreak;\r", "+\t\t\treturn;\r", "+\tthis.handle(\r", "+\t\tid,\r", "+\t\tnew String[] {new String(methodDecl.selector), arg.name(), new String(expectedType.readableName())},\r", "+\t\targ.type.sourceStart,\r", "+\t\targ.type.sourceEnd);\r"]}], "num": 45539}