{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b75aa90e268f6a387f3b574a5b40ed9d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "416aec2104e4f053d2b5d3735d861d86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "c7faa32a6528344b00a9e604c5a7741d66ef04b2", "commitAfterChange": "3ebd920b94628f11b4180b27539affa16ca37a1e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tprivate void updateClasspath() throws JavaModelException", "signatureAfterChange": "  \tprivate void updateClasspath() throws JavaModelException", "diff": ["-\t\t}", "-\t\t", "-\t\t// remember the timestamps of external libraries", "-\t\tif (this.newResolvedPath != null) {\t\t\t\t\t", "-\t\t\tfor (int i = 0, length = this.newResolvedPath.length; i < length; i++) {", "-\t\t\t\tIClasspathEntry entry = this.newResolvedPath[i];", "-\t\t\t\tif (entry.getEntryKind() == IClasspathEntry.CPE_LIBRARY) {", "-\t\t\t\t\tIPath path = entry.getPath();", "-\t\t\t\t\tObject target = JavaModel.getTarget(ResourcesPlugin.getWorkspace().getRoot(), path, true);", "-\t\t\t\t\tif (target instanceof java.io.File) {", "-\t\t\t\t\t\tlong timestamp = DeltaProcessor.getTimeStamp((java.io.File)target);", "-\t\t\t\t\t\tJavaModelManager.getJavaModelManager().deltaProcessor.externalTimeStamps.put(path, new Long(timestamp));\t\t\t\t\t\t\t", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}\t\t\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f776c4ee9c6d4fb059236c5b2561bb6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathChange.java", "commitBeforeChange": "fbfdac6d7ce3e57d87b2a41c24ca19b307df27cb", "commitAfterChange": "1f2bb3880562da32cc48ce4bb6e920301c0ee336", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic int generateDelta(JavaElementDelta delta)", "signatureAfterChange": " \tpublic int generateDelta(JavaElementDelta delta)", "diff": ["-", "-\t\t\t\t// remember timestamp of jars that were removed (in case they are added as external jar in the same operation)", "-\t\t\t\tfor (int j = 0, length = pkgFragmentRoots.length; j < length; j++) {", "-\t\t\t\t\tPackageFragmentRoot root = pkgFragmentRoots[j];", "-\t\t\t\t\tif (root.isArchive() && !root.isExternal()) {", "-\t\t\t\t\t\tURI location = root.resource().getLocationURI();", "-\t\t\t\t\t\tFile file = null;", "-\t\t\t\t\t\ttry {", "-\t\t\t\t\t\t\tIFileStore fileStore = EFS.getStore(location);", "-\t\t\t\t\t\t\tfile = fileStore.toLocalFile(EFS.NONE, null);", "-\t\t\t\t\t\t} catch (CoreException e) {", "-\t\t\t\t\t\t\t// continue", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tif (file == null)", "-\t\t\t\t\t\t\tcontinue;", "-\t\t\t\t\t\tlong timeStamp = DeltaProcessor.getTimeStamp(file);", "-\t\t\t\t\t\tIPath externalPath = new org.eclipse.core.runtime.Path(file.getAbsolutePath());", "-\t\t\t\t\t\tstate.getExternalLibTimeStamps().put(externalPath, new Long(timeStamp));", "-\t\t\t\t\t}", "-\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdfaa72573e393440369bcbbdefaa116", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "fb79acb2f88020666334c353888dcdeb37abd070", "commitAfterChange": "4a7d6bdefb8cc07325fb8a5c7d2a751e2d99c2eb", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError) \t\tthrows JavaModelException", "diff": ["-\t\t\t// remember the timestamps of external libraries", "-\t\t\tfor (int i = 0, length = resolvedPath.length; i < length; i++) {", "-\t\t\t\tIClasspathEntry entry = resolvedPath[i];", "-\t\t\t\tif (entry.getEntryKind() == IClasspathEntry.CPE_LIBRARY) {", "-\t\t\t\t\tIPath path = entry.getPath();", "-\t\t\t\t\tObject target = JavaModel.getTarget(ResourcesPlugin.getWorkspace().getRoot(), path, true);", "-\t\t\t\t\tif (target instanceof java.io.File) {", "-\t\t\t\t\t\tlong timestamp = DeltaProcessor.getTimeStamp((java.io.File)target);", "-\t\t\t\t\t\tJavaModelManager.getJavaModelManager().deltaProcessor.externalTimeStamps.put(path, new Long(timestamp));\t\t\t\t\t\t\t", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}\t\t\t\t\t\t\t", "-\t\t"]}], "num": 3350}