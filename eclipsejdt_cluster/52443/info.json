{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "493547a83a0f5f30ce60e2b0bf5c5189", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55f387210fef9e071d1a4009cb5f7739", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TypeAnnotationTest.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 75, "signatureBeforeChange": " \tpublic void test023() throws Exception", "signatureAfterChange": " \t \tpublic void test071_codeblocks_constructorInvocationTypeArgument() throws Exception", "diff": ["-\t// type argument constructor call", "-\tpublic void test023() throws Exception {", "-\t\t\t\t\"\t<T> X(T t) {\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\tpublic Object foo() {\\n\" + ", "-\t\t\t\t\"\t\tX x = new <@A @B(1) String>X(null);\\n\" + ", "-\t\t\t\t\"\t\treturn x;\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\"      #31 @A(\\n\" + ", "-\t\t\t\"        target type = 0x18 TYPE_ARGUMENT_CONSTRUCTOR_CALL\\n\" + ", "-\t\t\t\"        offset = 5\\n\" + ", "-\t\t\t\"        type argument index = 0\\n\" + ", "-\t\t\t\"      #27 @B(\\n\" + ", "-\t\t\t\"        #28 value=(int) 1 (constant type)\\n\" + ", "-\t\t\t\"        target type = 0x18 TYPE_ARGUMENT_CONSTRUCTOR_CALL\\n\" + ", "-\t\t\t\"        offset = 5\\n\" + ", "-\t\t\t\"        type argument index = 0\\n\" + ", "+\t", "+\tpublic void test071_codeblocks_constructorInvocationTypeArgument() throws Exception {", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"A.java\",", "+\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "+\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "+\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "+\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "+\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "+\t\t\t\t\"@Retention(RUNTIME)\\n\" + ", "+\t\t\t\t\"@interface A {\\n\" + ", "+\t\t\t\t\"\tString value() default \\\"default\\\";\\n\" + ", "+\t\t\t\t\"}\\n\",", "+\t\t\t\t\"B.java\",", "+\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "+\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "+\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "+\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "+\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "+\t\t\t\t\"@Retention(CLASS)\\n\" + ", "+\t\t\t\t\"@interface B {\\n\" + ", "+\t\t\t\t\"\tint value() default -1;\\n\" + ", "+\t\t\t\t\"}\",", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" + ", "+\t\t\t\t\"\t<T> X(T t) {\\n\" + ", "+\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"\tpublic Object foo() {\\n\" + ", "+\t\t\t\t\"\t\tX x = new <@A @B(1) String>X(null);\\n\" + ", "+\t\t\t\t\"\t\treturn x;\\n\" + ", "+\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"}\",", "+\t\t},", "+\t\t\"\");", "+\t\tString expectedOutput =", "+\t\t\t\"    RuntimeInvisibleTypeAnnotations: \\n\" + ", "+\t\t\t\"      #27 @B(\\n\" + ", "+\t\t\t\"        #28 value=(int) 1 (constant type)\\n\" + ", "+\t\t\t\"        target type = 0x48 CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT\\n\" + ", "+\t\t\t\"        offset = 5\\n\" + ", "+\t\t\t\"        type argument index = 0\\n\" + ", "+\t\t\t\"      )\\n\" + ", "+\t\t\t\"    RuntimeVisibleTypeAnnotations: \\n\" + ", "+\t\t\t\"      #31 @A(\\n\" + ", "+\t\t\t\"        target type = 0x48 CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT\\n\" + ", "+\t\t\t\"        offset = 5\\n\" + ", "+\t\t\t\"        type argument index = 0\\n\" + ", "+\t\t\t\"      )\\n\";", "+\t\tcheckDisassembledClassFile(OUTPUT_DIR + File.separator + \"X.class\", \"X\", expectedOutput, ClassFileBytesDisassembler.SYSTEM);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "821376278657ad15feca4371d946a146", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/AnnotationCompletionParserTest.java", "commitBeforeChange": "1b98b39107e931dc0893df1da7a410cad5cc4745", "commitAfterChange": "9635fd418f2d5b55fe3d3dc4ccb7797a5daf3a53", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 84, "signatureBeforeChange": " public void test0084()", "signatureAfterChange": " public void test0084()", "diff": ["+}", "+\t\t\"@Annot(zzz = <CompleteOnName:foo>)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db8f444f27503c949cc57b2817e8fd63", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/RootManipulationsTests.java", "commitBeforeChange": "77be59ea5d67230fd212d874b96aeadaa71fd38c", "commitAfterChange": "496ec362de1eac6b25f53a35b2409254a0390a5f", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " public void testRenameJarFile2() throws CoreException", "signatureAfterChange": " public void testRenameJarFile2() throws CoreException", "diff": ["-\t\t\t\"\t/P1/myLib.jar[-]: {MOVED_TO(/P1/myLib2.jar [in P1])}\\n\" + ", "-\t\t\t\"\t/P1/myLib2.jar[+]: {MOVED_FROM(/P1/myLib.jar [in P1])}\\n\" + ", "+\t\t\t\"\tmyLib.jar[-]: {MOVED_TO(myLib2.jar [in P1])}\\n\" + ", "+\t\t\t\"\tmyLib2.jar[+]: {MOVED_FROM(myLib.jar [in P1])}\\n\" + ", "-\t\t\t\"\t/P1/myLib.jar[-]: {MOVED_TO(/P1/myLib2.jar [in P1])}\\n\" + ", "-\t\t\t\"\t/P1/myLib2.jar[+]: {MOVED_FROM(/P1/myLib.jar [in P1])}\\n\" + ", "+\t\t\t\"\t/P1/myLib.jar[-]: {MOVED_TO(myLib2.jar [in P1])}\\n\" + ", "+\t\t\t\"\t/P1/myLib2.jar[+]: {MOVED_FROM(myLib.jar [in P1])}\\n\" + ", "-\t\t\t\"\t/P1/myLib2.jar\\n\" + ", "+\t\t\t\"\tmyLib2.jar\\n\" + "]}], "num": 52443}