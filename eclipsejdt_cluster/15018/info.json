{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2c2c3af3061c7b16720db06512e08b68", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "187c5b99662b9bd453e797c7b03e6127", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/AnnotationMirrorImpl.java", "commitBeforeChange": "2445b4918489720c19f8f06e5268b782d8fa3e09", "commitAfterChange": "a4c0884f4909a7148eef43d80a79301d90c42921", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public Map<AnnotationTypeElementDeclaration, AnnotationValue> getElementValues()", "signatureAfterChange": "      public Map<AnnotationTypeElementDeclaration, AnnotationValue> getElementValues()", "diff": ["+            \t final ITypeBinding retType = elementMethod.getReturnType();            ", "-                 final AnnotationValue annoValue = ", "-\t\t\t\t\t Factory.createAnnotationMemberValue(pair.getValue(), name, this, _env);", "-                 if( mirrorDecl.kind() == EclipseMirrorImpl.MirrorKind.ANNOTATION_ELEMENT  &&", "-                     annoValue != null )", "-                     result.put( (AnnotationTypeElementDeclaration)mirrorDecl, annoValue);", "+                 if( mirrorDecl != null && mirrorDecl.kind() == EclipseMirrorImpl.MirrorKind.ANNOTATION_ELEMENT  )", "+                 {", "+                \t final AnnotationTypeElementDeclaration elementDecl = ", "+                \t\t (AnnotationTypeElementDeclaration)mirrorDecl;", "+                \t final AnnotationValue annoValue = ", "+    \t\t\t\t\t Factory.createAnnotationMemberValue(pair.getValue(), name, this, _env, elementDecl.getReturnType());", "+                \t if( annoValue != null )", "+                \t\t result.put( elementDecl, annoValue);", "+                 }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6db51bf44086e6d42b6f07e7452f6ac7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/AnnotationMirrorImpl.java", "commitBeforeChange": "ee3261d361c535bc2efdddf17bd2004ef36dd41a", "commitAfterChange": "9fbf431466d1c79d4789162c9375c8afcee26c4e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      private Object getReflectionValue(final Object value, final Class targetType)         throws Throwable", "signatureAfterChange": "      private Object getReflectionValue(final Object value, final Class targetType)         throws Throwable", "diff": ["-                final String className = new String( declaringClass.getBinaryName() );", "-", "-                ClassLoader classLoader = _env.getLatestProcessor().getClass().getClassLoader();", "-                Class clazz = classLoader.loadClass(className);", "-                final Field returnedField = clazz.getField( varBinding.getName() );", "+                final Field returnedField = targetType.getField( varBinding.getName() );", "+                if (returnedField == null)", "+                \treturn null;", "-\t\t\treturn Factory.createAnnotationMirror((IResolvedAnnotation)value, _annotated, _env);", "+\t\t\tfinal AnnotationMirrorImpl annoMirror =", "+                (AnnotationMirrorImpl)Factory.createAnnotationMirror((IResolvedAnnotation)value, _annotated, _env);", "+            final AnnotationInvocationHandler handler = new AnnotationInvocationHandler(annoMirror, targetType);", "+            return Proxy.newProxyInstance(targetType.getClassLoader(),", "+                                             new Class[]{ targetType }, handler );"]}], "num": 15018}