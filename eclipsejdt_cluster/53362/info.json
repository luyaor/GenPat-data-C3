{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ffc7863ee95fc8221a68ffd74e1b27ef", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e95e32fe83f4c28b04aabdce7b2e487f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "393bdec9ec7581654b4aa4ee60edc770ef37cb11", "commitAfterChange": "8089727dc6e57c18954234bb8002634241161372", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tif (valueIfTrue instanceof CastExpression) {", "-\t\t\tvalueIfTrue.bits |= IgnoreNeedForCastCheckMASK; // will check later on", "-\t\t}", "-\t\tif (valueIfFalse instanceof CastExpression) {", "-\t\t\tvalueIfFalse.bits |= IgnoreNeedForCastCheckMASK; // will check later on", "-\t\t}", "+\t\tif (valueIfTrue instanceof CastExpression) valueIfTrue.bits |= IgnoreNeedForCastCheckMASK; // will check later on", "+", "+\t\tif (valueIfFalse instanceof CastExpression) valueIfFalse.bits |= IgnoreNeedForCastCheckMASK; // will check later on", "+", "-\t\t\tif (valueIfTrueType == LongBinding || valueIfTrueType == DoubleBinding) {", "-\t\t\t\treturnTypeSlotSize = 2;", "-\t\t\t}", "-", "-\t\t\t\tthis.resolvedType = ShortBinding;", "-\t\t\t\treturn ShortBinding;", "+\t\t\t\treturn this.resolvedType = ShortBinding;", "-\t\t\t\tthis.resolvedType = valueIfTrueType;", "-\t\t\t\treturn valueIfTrueType;", "+\t\t\t\treturn this.resolvedType = valueIfTrueType;", "-\t\t\t\tthis.resolvedType = valueIfFalseType;", "-\t\t\t\treturn valueIfFalseType;", "+\t\t\t\treturn this.resolvedType = valueIfFalseType;", "-\t\t\t\tthis.resolvedType = IntBinding;", "-\t\t\t\treturn IntBinding;", "+\t\t\t\treturn this.resolvedType = IntBinding;", "-\t\t\t\treturnTypeSlotSize = 2;", "-\t\t\t\tthis.resolvedType = LongBinding;", "-\t\t\t\treturn LongBinding;", "+\t\t\t\treturn this.resolvedType = LongBinding;", "-\t\t\t\tthis.resolvedType = FloatBinding;", "-\t\t\t\treturn FloatBinding;", "+\t\t\t\treturn this.resolvedType = FloatBinding;", "-\t\t\treturnTypeSlotSize = 2;", "-\t\t\tthis.resolvedType = DoubleBinding;", "-\t\t\treturn DoubleBinding;", "+\t\t\treturn this.resolvedType = DoubleBinding;", "-\t\t\tthis.resolvedType = valueIfTrueType;", "-\t\t\treturn valueIfTrueType;", "+\t\t\treturn this.resolvedType = valueIfTrueType;", "-\t\t\tthis.resolvedType = valueIfFalseType;", "-\t\t\treturn valueIfFalseType;", "+\t\t\treturn this.resolvedType = valueIfFalseType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f09a39a693fd74dd6b466083d7556213", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\tif (valueIfTrueType == TypeBinding.BOOLEAN) {", "+\t\t\tif (TypeBinding.equalsEquals(valueIfTrueType, TypeBinding.BOOLEAN)) {", "-\t\t\tif ((valueIfTrueType == TypeBinding.BYTE && valueIfFalseType == TypeBinding.SHORT)", "-\t\t\t\t|| (valueIfTrueType == TypeBinding.SHORT && valueIfFalseType == TypeBinding.BYTE)) {", "+\t\t\tif ((TypeBinding.equalsEquals(valueIfTrueType, TypeBinding.BYTE) && TypeBinding.equalsEquals(valueIfFalseType, TypeBinding.SHORT))", "+\t\t\t\t|| (TypeBinding.equalsEquals(valueIfTrueType, TypeBinding.SHORT) && TypeBinding.equalsEquals(valueIfFalseType, TypeBinding.BYTE))) {", "-\t\t\tif ((valueIfTrueType == TypeBinding.BYTE || valueIfTrueType == TypeBinding.SHORT || valueIfTrueType == TypeBinding.CHAR)", "-\t\t\t\t\t&& (valueIfFalseType == TypeBinding.INT", "+\t\t\tif ((TypeBinding.equalsEquals(valueIfTrueType, TypeBinding.BYTE) || TypeBinding.equalsEquals(valueIfTrueType, TypeBinding.SHORT) || TypeBinding.equalsEquals(valueIfTrueType, TypeBinding.CHAR))", "+\t\t\t\t\t&& (TypeBinding.equalsEquals(valueIfFalseType, TypeBinding.INT)", "-\t\t\tif ((valueIfFalseType == TypeBinding.BYTE", "-\t\t\t\t\t|| valueIfFalseType == TypeBinding.SHORT", "-\t\t\t\t\t|| valueIfFalseType == TypeBinding.CHAR)", "-\t\t\t\t\t&& (valueIfTrueType == TypeBinding.INT", "+\t\t\tif ((TypeBinding.equalsEquals(valueIfFalseType, TypeBinding.BYTE)", "+\t\t\t\t\t|| TypeBinding.equalsEquals(valueIfFalseType, TypeBinding.SHORT)", "+\t\t\t\t\t|| TypeBinding.equalsEquals(valueIfFalseType, TypeBinding.CHAR))", "+\t\t\t\t\t&& (TypeBinding.equalsEquals(valueIfTrueType, TypeBinding.INT)"]}], "num": 53362}