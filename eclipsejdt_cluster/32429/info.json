{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "92062be620441255e619f94509b986ae", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54a7169fc496647af6cf48464902310b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorReferencePattern.java", "commitBeforeChange": "a1b8b888d8c8c040023fcd2856f96f5ad6c69b3e", "commitAfterChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public int matchLevel(AstNode node, boolean resolve)", "signatureAfterChange": "\r protected boolean matches(AstNode node, boolean resolve)", "diff": ["+ */\r", "+protected boolean matches(AstNode node, boolean resolve) {\r", "+\tif (node instanceof AllocationExpression) {\r", "+\t\treturn this.matches((AllocationExpression)node, resolve);\r", "+\t} else if (node instanceof ExplicitConstructorCall) {\r", "+\t\treturn this.matches((ExplicitConstructorCall)node, resolve);\r", "+\t}\r", "+\treturn false;\r", "+}\r", "- */\r", "-public int matchLevel(AstNode node, boolean resolve) {\r", "-\tif (node instanceof AllocationExpression) {\r", "-\t\treturn this.matchLevel((AllocationExpression)node, resolve);\r", "-\t} else if (node instanceof ExplicitConstructorCall) {\r", "-\t\treturn this.matchLevel((ExplicitConstructorCall)node, resolve);\r", "-\t}\r", "-\treturn IMPOSSIBLE_MATCH;\r", "-}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82583c872a86ada5ba1f3530ca67f5d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorReferencePattern.java", "commitBeforeChange": "46418d248f89a29f49a77d154cdbfa57c408b256", "commitAfterChange": "c85433e27f0fa74bfe8e06c38c1c02c51b5599d7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public int matchLevel(AstNode node, boolean resolve)", "signatureAfterChange": "\r protected boolean matches(AstNode node, boolean resolve)", "diff": ["+ */\r", "+protected boolean matches(AstNode node, boolean resolve) {\r", "+\tif (node instanceof AllocationExpression) {\r", "+\t\treturn this.matches((AllocationExpression)node, resolve);\r", "+\t} else if (node instanceof ExplicitConstructorCall) {\r", "+\t\treturn this.matches((ExplicitConstructorCall)node, resolve);\r", "+\t}\r", "+\treturn false;\r", "+}\r", "- */\r", "-public int matchLevel(AstNode node, boolean resolve) {\r", "-\tif (node instanceof AllocationExpression) {\r", "-\t\treturn this.matchLevel((AllocationExpression)node, resolve);\r", "-\t} else if (node instanceof ExplicitConstructorCall) {\r", "-\t\treturn this.matchLevel((ExplicitConstructorCall)node, resolve);\r", "-\t}\r", "-\treturn IMPOSSIBLE_MATCH;\r", "-}\r"]}], "num": 32429}