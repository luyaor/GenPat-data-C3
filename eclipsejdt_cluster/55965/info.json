{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f9863e9e6856967cb0cfa140a594fd31", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33bd1ce4668c2cb1a3bd74ffa72e098f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "8c93d4e99b8a943865cb7391e781eba5bb83dfc9", "commitAfterChange": "bd0edd7688142c1743cb6b10766dfc576040f113", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate void checkVariableComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse, VariableBinding var, int nullStatus, Expression reference)", "signatureAfterChange": " \tprivate void checkVariableComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse, VariableBinding var, int nullStatus, Expression reference)", "diff": ["-\t\t\t\t\tinitsWhenTrue.markAsComparedEqualToNull(var); // from thereon it is set", "-\t\t\t\t\tinitsWhenFalse.markAsComparedEqualToNonNull(var); // from thereon it is set", "+\t\t\t\t\tif ((var.tagBits & TagBits.AnnotationNonNull) == 0) { // never drop information from @NonNull annotation", "+\t\t\t\t\t\tinitsWhenTrue.markAsComparedEqualToNull(var); // from thereon it is set", "+\t\t\t\t\t\tinitsWhenFalse.markAsComparedEqualToNonNull(var); // from thereon it is set", "+\t\t\t\t\t}", "-\t\t\t\t\tinitsWhenTrue.markAsComparedEqualToNonNull(var); // from thereon it is set", "-\t\t\t\t\tinitsWhenFalse.markAsComparedEqualToNull(var); // from thereon it is set", "+\t\t\t\t\tif ((var.tagBits & TagBits.AnnotationNonNull) == 0) { // never drop information from @NonNull annotation", "+\t\t\t\t\t\tinitsWhenTrue.markAsComparedEqualToNonNull(var); // from thereon it is set", "+\t\t\t\t\t\tinitsWhenFalse.markAsComparedEqualToNull(var); // from thereon it is set", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9aa27d4ecf5f97a8f1ad31341b523a7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "874e2c41609c64af417834df9af2e898d8dcf37a", "commitAfterChange": "4977ef90a9cbab898d33f6e3ba736939d7ac7a85", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate void checkVariableComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse, VariableBinding var, int nullStatus, Expression reference)", "signatureAfterChange": " \tprivate void checkVariableComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse, VariableBinding var, int nullStatus, Expression reference)", "diff": ["-\t\t\t\t\tif ((var.tagBits & TagBits.AnnotationNonNull) == 0) { // never drop information from @NonNull annotation", "-\t\t\t\t\t\tinitsWhenTrue.markAsComparedEqualToNull(var); // from thereon it is set", "-\t\t\t\t\t\tinitsWhenFalse.markAsComparedEqualToNonNull(var); // from thereon it is set", "-\t\t\t\t\t}", "+\t\t\t\t\tinitsWhenTrue.markAsComparedEqualToNull(var); // from thereon it is set", "+\t\t\t\t\tinitsWhenFalse.markAsComparedEqualToNonNull(var); // from thereon it is set", "-\t\t\t\t\tif ((var.tagBits & TagBits.AnnotationNonNull) == 0) { // never drop information from @NonNull annotation", "-\t\t\t\t\t\tinitsWhenTrue.markAsComparedEqualToNonNull(var); // from thereon it is set", "-\t\t\t\t\t\tinitsWhenFalse.markAsComparedEqualToNull(var); // from thereon it is set", "-\t\t\t\t\t}", "+\t\t\t\t\tinitsWhenTrue.markAsComparedEqualToNonNull(var); // from thereon it is set", "+\t\t\t\t\tinitsWhenFalse.markAsComparedEqualToNull(var); // from thereon it is set"]}], "num": 55965}