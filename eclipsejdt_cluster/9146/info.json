{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "404317696e8a90f6fe9b3ba773532905", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17af2becc11661324b81ea99176b08f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 221, "methodNumberAfterChange": 221, "signatureBeforeChange": " protected void ignoreMethodBody()", "signatureAfterChange": " protected void ignoreMethodBody()", "diff": ["-\tintPtr--;", "+\tthis.intPtr--;", "-\trealBlockPtr--;", "+\tthis.realBlockPtr--;", "-\tif ((length = astLengthStack[astLengthPtr--]) != 0) {", "-\t\tastPtr -= length;", "+\tif ((length = this.astLengthStack[this.astLengthPtr--]) != 0) {", "+\t\tthis.astPtr -= length;", "-\tMethodDeclaration md = (MethodDeclaration) astStack[astPtr];", "-\tmd.bodyEnd = endPosition;", "-\tmd.declarationSourceEnd = flushCommentsDefinedPriorTo(endStatementPosition);", "+\tMethodDeclaration md = (MethodDeclaration) this.astStack[this.astPtr];", "+\tmd.bodyEnd = this.endPosition;", "+\tmd.declarationSourceEnd = flushCommentsDefinedPriorTo(this.endStatementPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f795207eab57019cdbadb7e86836e5e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/processing/JobManager.java", "commitBeforeChange": "7daf62bc284b30571754ce8d7fd5c3a7c9740dcb", "commitAfterChange": "b8c9923212bd9598e5d2ca68e0dc316b81a3eccb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void discardJobs(String jobFamily)", "signatureAfterChange": " \tpublic void discardJobs(String jobFamily)", "diff": ["-\t\t\tif (currentJob != null ", "-\t\t\t\t\t&& (jobFamily == null || currentJob.belongsTo(jobFamily))) {", "-\t", "+\t\t\tif (currentJob != null && jobFamily == null || currentJob.belongsTo(jobFamily)) {", "-\t\t\t", "+", "-\t\t\t\twhile (this.processingThread != null && executing){", "+\t\t\t\twhile (this.processingThread != null && this.executing){", "-\t", "+", "-\t\t\t\tfor (int i = jobStart; i <= jobEnd; i++) {", "-\t\t\t\t\tcurrentJob = awaitingJobs[i];", "-\t\t\t\t\tawaitingJobs[i] = null;", "-\t\t\t\t\tif (!(jobFamily == null", "-\t\t\t\t\t\t|| currentJob.belongsTo(jobFamily))) { // copy down, compacting", "-\t\t\t\t\t\tawaitingJobs[++loc] = currentJob;", "+\t\t\t\tfor (int i = this.jobStart; i <= this.jobEnd; i++) {", "+\t\t\t\t\tcurrentJob = this.awaitingJobs[i];", "+\t\t\t\t\tthis.awaitingJobs[i] = null;", "+\t\t\t\t\tif (!(jobFamily == null || currentJob.belongsTo(jobFamily))) { // copy down, compacting", "+\t\t\t\t\t\tthis.awaitingJobs[++loc] = currentJob;", "-\t\t\t\tjobStart = 0;", "-\t\t\t\tjobEnd = loc;", "+\t\t\t\tthis.jobStart = 0;", "+\t\t\t\tthis.jobEnd = loc;"]}], "num": 9146}