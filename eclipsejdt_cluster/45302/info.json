{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3eac984f031887b097bacba80e9d4f2c", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36613c59bb79ed24ac92dae9d9e25e76", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate TypeDeclaration convert(ISourceType sourceType, CompilationResult compilationResult)", "signatureAfterChange": " \tprivate TypeDeclaration convert(ISourceType sourceType, CompilationResult compilationResult)", "diff": ["+\t\t/* convert type parameters */", "+\t\tchar[][] typeParameterNames = sourceType.getTypeParameterNames();", "+\t\tif (typeParameterNames != null) {", "+\t\t\tint parameterCount = typeParameterNames.length;", "+\t\t\tchar[][][] typeParameterBounds = sourceType.getTypeParameterBounds();", "+\t\t\ttype.typeParameters = new TypeParameter[parameterCount];", "+\t\t\tfor (int i = 0; i < parameterCount; i++) {", "+\t\t\t\ttype.typeParameters[i] = createTypeParameter(typeParameterNames[i], typeParameterBounds[i], start, end);", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7aad98bba9e8192d73ce6c01433891e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate AbstractMethodDeclaration convert(ISourceMethod sourceMethod, CompilationResult compilationResult)", "signatureAfterChange": " \tprivate AbstractMethodDeclaration convert(ISourceMethod sourceMethod, CompilationResult compilationResult)", "diff": ["+\t\t/* convert type parameters */", "+\t\tchar[][] typeParameterNames = sourceMethod.getTypeParameterNames();", "+\t\tTypeParameter[] typeParams = null;", "+\t\tif (typeParameterNames != null) {", "+\t\t\tint parameterCount = typeParameterNames.length;", "+\t\t\tchar[][][] typeParameterBounds = sourceMethod.getTypeParameterBounds();", "+\t\t\ttypeParams = new TypeParameter[parameterCount];", "+\t\t\tfor (int i = 0; i < parameterCount; i++) {", "+\t\t\t\ttypeParams[i] = createTypeParameter(typeParameterNames[i], typeParameterBounds[i], start, end);", "+\t\t\t}", "+\t\t}", "+\t\t", "+\t\t\tdecl.typeParameters = typeParams;", "+\t\t\tdecl.typeParameters = typeParams;", "-\t\t\t\t\tAccDefault);", "+\t\t\t\t\tAccDefault,", "+\t\t\t\t\tfalse);"]}], "num": 45302}