{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f726687a04db68eadabdbb09b276297a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b840fcea66e275c407d163437bc9c48", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "2c216d62729c7bf0a533819d86bda0a688a39a26", "commitAfterChange": "789f8ee3dc78aa2cb74e4e857fb2da09cf6b5b4e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic MethodBinding tiebreakMethod()", "signatureAfterChange": " \tpublic MethodBinding tiebreakMethod()", "diff": ["-\t\t\tTypeVariableBinding[] originalVariables = originalMethod.typeVariables;", "+\t\t\tTypeVariableBinding[] originalVariables = this.originalMethod.typeVariables;", "-\t\t\tfor (int i = 0; i < length; i++)", "-\t\t\t\tnewArguments[i] = environment.convertToRawType(originalVariables[i].upperBound());", "+\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\tTypeVariableBinding originalVariable = originalVariables[i];", "+\t\t\t\tif (originalVariable.boundsCount() == 1) {", "+\t\t\t\t\tnewArguments[i] = this.environment.convertToRawType(originalVariable.upperBound());", "+\t\t\t\t} else {", "+\t\t\t\t\tnewArguments[i] = this.environment.convertToRawType(", "+\t\t\t\t\t\t\t// use an intersection type to retain full bound information", "+\t\t\t\t\t\t\tthis.environment.createWildcard(null, 0, originalVariable.superclass(), originalVariable.superInterfaces(), Wildcard.EXTENDS));", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdf3f31c5ee98106b26b49879c48df56", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "8d1d658761d5e634e1f9986cdb54c46ecd8cbc2e", "commitAfterChange": "f4d9deb41a71301595419326392826169e31b674", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic MethodBinding tiebreakMethod()", "signatureAfterChange": " \tpublic MethodBinding tiebreakMethod()", "diff": ["-\t\tif (this.tiebreakMethod == null) {", "-\t\t\tTypeVariableBinding[] originalVariables = this.originalMethod.typeVariables;", "-\t\t\tint length = originalVariables.length;", "-\t\t\tTypeBinding[] newArguments = new TypeBinding[length];", "-\t\t\tfor (int i = 0; i < length; i++) {", "-\t\t\t\tTypeVariableBinding originalVariable = originalVariables[i];", "-\t\t\t\tif (originalVariable.boundsCount() <= 1) {", "-\t\t\t\t\tnewArguments[i] = this.environment.convertToRawType(originalVariable.upperBound(), false /*do not force conversion of enclosing types*/);", "-\t\t\t\t} else {", "-\t\t\t\t\tnewArguments[i] = this.environment.convertToRawType(", "-\t\t\t\t\t\t\t// use an intersection type to retain full bound information", "-\t\t\t\t\t\t\tthis.environment.createWildcard(null, 0, originalVariable.superclass(), originalVariable.superInterfaces(), Wildcard.EXTENDS), false /*do not force conversion of enclosing types*/);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tthis.tiebreakMethod = this.environment.createParameterizedGenericMethod(this.originalMethod, newArguments);", "-\t\t}", "+\t\tif (this.tiebreakMethod == null)", "+\t\t\tthis.tiebreakMethod = this.originalMethod.asRawMethod(this.environment);"]}], "num": 48021}