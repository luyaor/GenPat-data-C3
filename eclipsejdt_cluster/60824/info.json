{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a68f4b07bde079b91267d1c605442a5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4144a4c5dac603780c6889a8696775b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "8cf1dcdf2235b54b4116fb6f086a0d218e6b26f7", "commitAfterChange": "45fa88428d5d04389be0956547a1793c4e66bac3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\t\t\tsyntheticAccessor = ((SourceTypeBinding)this.codegenBinding.declaringClass).addSyntheticMethod(this.codegenBinding, isSuperAccess());", "+\t\t\tthis.syntheticAccessor = ((SourceTypeBinding)this.codegenBinding.declaringClass).addSyntheticMethod(this.codegenBinding, isSuperAccess());", "-\t} else if (receiver instanceof QualifiedSuperReference){ // qualified super", "+\t} else if (this.receiver instanceof QualifiedSuperReference){ // qualified super", "-\t\tSourceTypeBinding destinationType = (SourceTypeBinding)(((QualifiedSuperReference)receiver).currentCompatibleType);", "-\t\tsyntheticAccessor = destinationType.addSyntheticMethod(this.codegenBinding, isSuperAccess());", "+\t\tSourceTypeBinding destinationType = (SourceTypeBinding)(((QualifiedSuperReference)this.receiver).currentCompatibleType);", "+\t\tthis.syntheticAccessor = destinationType.addSyntheticMethod(this.codegenBinding, isSuperAccess());", "-\t} else if (binding.isProtected()){", "+\t} else if (this.binding.isProtected()){", "-\t\tif (((bits & DepthMASK) != 0) ", "+\t\tif (((this.bits & ASTNode.DepthMASK) != 0) ", "-\t\t\tSourceTypeBinding currentCompatibleType = (SourceTypeBinding)enclosingSourceType.enclosingTypeAt((bits & DepthMASK) >> DepthSHIFT);", "-\t\t\tsyntheticAccessor = currentCompatibleType.addSyntheticMethod(this.codegenBinding, isSuperAccess());", "+\t\t\tSourceTypeBinding currentCompatibleType = (SourceTypeBinding)enclosingSourceType.enclosingTypeAt((this.bits & ASTNode.DepthMASK) >> ASTNode.DepthSHIFT);", "+\t\t\tthis.syntheticAccessor = currentCompatibleType.addSyntheticMethod(this.codegenBinding, isSuperAccess());", "-\t\t\t\t&& (options.complianceLevel >= ClassFileConstants.JDK1_4 || !(receiver.isImplicitThis() && this.codegenBinding.isStatic()))", "-\t\t\t\t&& this.binding.declaringClass.id != T_JavaLangObject) // no change for Object methods", "+\t\t\t\t&& (options.complianceLevel >= ClassFileConstants.JDK1_4 || !(this.receiver.isImplicitThis() && this.codegenBinding.isStatic()))", "+\t\t\t\t&& this.binding.declaringClass.id != TypeIds.T_JavaLangObject) // no change for Object methods"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee2882aa7e1f19bf6f94ec38d1c76f90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "5dba2fb9ff4a65e2ec3c984b606cb269bb911a06", "commitAfterChange": "de6638c19ddd648da6cdf9ca6437e426c1cc8e15", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "signatureAfterChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "diff": ["-\tif (binding.isPrivate()) {", "+\tif (this.binding.isPrivate()) {", "-\t\t\t\t&& binding.constant() == Constant.NotAConstant) {", "-\t\t\tif (syntheticAccessors == null)", "-\t\t\t\tsyntheticAccessors = new MethodBinding[2];", "-\t\t\tsyntheticAccessors[isReadAccess ? READ : WRITE] = ", "+\t\t\t\t&& this.binding.constant() == Constant.NotAConstant) {", "+\t\t\tif (this.syntheticAccessors == null)", "+\t\t\t\tthis.syntheticAccessors = new MethodBinding[2];", "+\t\t\tthis.syntheticAccessors[isReadAccess ? FieldReference.READ : FieldReference.WRITE] = ", "-\t} else if (receiver instanceof QualifiedSuperReference) { // qualified super", "+\t} else if (this.receiver instanceof QualifiedSuperReference) { // qualified super", "-\t\t\t(SourceTypeBinding) (((QualifiedSuperReference) receiver)", "+\t\t\t(SourceTypeBinding) (((QualifiedSuperReference) this.receiver)", "-\t\tif (syntheticAccessors == null)", "-\t\t\tsyntheticAccessors = new MethodBinding[2];", "-\t\tsyntheticAccessors[isReadAccess ? READ : WRITE] = destinationType.addSyntheticMethod(this.codegenBinding, isReadAccess);", "+\t\tif (this.syntheticAccessors == null)", "+\t\t\tthis.syntheticAccessors = new MethodBinding[2];", "+\t\tthis.syntheticAccessors[isReadAccess ? FieldReference.READ : FieldReference.WRITE] = destinationType.addSyntheticMethod(this.codegenBinding, isReadAccess);", "-\t} else if (binding.isProtected()) {", "+\t} else if (this.binding.isProtected()) {", "-\t\tif (((bits & DepthMASK) != 0)", "-\t\t\t&& binding.declaringClass.getPackage()", "+\t\tif (((this.bits & ASTNode.DepthMASK) != 0)", "+\t\t\t&& this.binding.declaringClass.getPackage()", "-\t\t\t\t\t(bits & DepthMASK) >> DepthSHIFT);", "-\t\t\tif (syntheticAccessors == null)", "-\t\t\t\tsyntheticAccessors = new MethodBinding[2];", "-\t\t\tsyntheticAccessors[isReadAccess ? READ : WRITE] = currentCompatibleType.addSyntheticMethod(this.codegenBinding, isReadAccess);", "+\t\t\t\t\t(this.bits & ASTNode.DepthMASK) >> ASTNode.DepthSHIFT);", "+\t\t\tif (this.syntheticAccessors == null)", "+\t\t\t\tthis.syntheticAccessors = new MethodBinding[2];", "+\t\t\tthis.syntheticAccessors[isReadAccess ? FieldReference.READ : FieldReference.WRITE] = currentCompatibleType.addSyntheticMethod(this.codegenBinding, isReadAccess);", "-\t\t\t\t&& (options.complianceLevel >= ClassFileConstants.JDK1_4 || !(receiver.isImplicitThis() && this.codegenBinding.isStatic()))", "-\t\t\t\t&& this.binding.declaringClass.id != T_JavaLangObject) // no change for Object fields", "+\t\t\t\t&& (options.complianceLevel >= ClassFileConstants.JDK1_4 || !(this.receiver.isImplicitThis() && this.codegenBinding.isStatic()))", "+\t\t\t\t&& this.binding.declaringClass.id != TypeIds.T_JavaLangObject) // no change for Object fields"]}], "num": 60824}