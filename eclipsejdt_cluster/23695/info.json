{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9fe6f42a8ac5bd32ffd0349e1287e982", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f3e842f5d7fde0244684a9d2d08e78b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/UtilTest.java", "commitBeforeChange": "0f549220f498cda7c86a65324f594a6b8e8c2616", "commitAfterChange": "17fcd420e0756889bcaffeff4cf983b2cff84a3e", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 67, "signatureBeforeChange": " public void test64()", "signatureAfterChange": " public void test64()", "diff": ["-\tassertTrue(\"Camel pattern matching failure-1\",", "-\t\t\tCharOperation.camelCaseMatch(\"IAE\".toCharArray(), \"IgnoreAllErrorHandler\".toCharArray()));", "-\tassertTrue(\"Camel pattern matching failure-2\",", "-\t\t\tCharOperation.camelCaseMatch(\"IAE\".toCharArray(), \"IAnchorElement\".toCharArray()));", "-\tassertTrue(\"Camel pattern matching failure-3\",", "-\t\t\tCharOperation.camelCaseMatch(\"IAnchorEleme\".toCharArray(), \"IAnchorElement\".toCharArray()));", "-\tassertTrue(\"Camel pattern matching failure-4\",", "-\t\t\t!CharOperation.camelCaseMatch(\"\".toCharArray(), \"IAnchorElement\".toCharArray()));", "-\tassertTrue(\"Camel pattern matching failure-5\",", "-\t\t\tCharOperation.camelCaseMatch(null, \"IAnchorElement\".toCharArray()));", "-\tassertTrue(\"Camel pattern matching failure-6\",", "-\t\t\tCharOperation.camelCaseMatch(\"\".toCharArray(), \"\".toCharArray()));", "-\tassertTrue(\"Camel pattern matching failure-7\",", "-\t\t\t!CharOperation.camelCaseMatch(\"IAnchor\".toCharArray(), null));", "+\tassertCamelCase(\"IAE\", \"IgnoreAllErrorHandler\", true/* should match */);", "+\tassertCamelCase(\"IAE\", \"IAnchorElement\", true/* should match */);", "+\tassertCamelCase(\"IAnchorEleme\", \"IAnchorElement\", true/* should match */);", "+\tassertCamelCase(\"\", \"IAnchorElement\", false/* should not match */);", "+\tassertCamelCase(null, \"IAnchorElement\", true/* should match */);", "+\tassertCamelCase(\"\", \"\", true/* should match */);", "+\tassertCamelCase(\"IAnchor\", null, false/* should not match */);", "+\t// Verify that there were no unexpected results", "+    assertTrue(this.camelCaseErrors.toString(), this.camelCaseErrors.length()==0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c535a3dcc5e6876dc21339c847589122", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/UtilTest.java", "commitBeforeChange": "0f549220f498cda7c86a65324f594a6b8e8c2616", "commitAfterChange": "17fcd420e0756889bcaffeff4cf983b2cff84a3e", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 66, "signatureBeforeChange": " public void test63()", "signatureAfterChange": " public void test63()", "diff": ["-\tassertTrue(\"Camel pattern matching failure-1\",", "-\t\t\t!CharOperation.camelCaseMatch(\"NPEX\".toCharArray(), \"NullPointerException\".toCharArray()));", "-\tassertTrue(\"Camel pattern matching failure-2\",", "-\t\t\t!CharOperation.camelCaseMatch(\"NPex\".toCharArray(), \"NullPointerException\".toCharArray()));", "-\tassertTrue(\"Camel pattern matching failure-3\",", "-\t\t\t!CharOperation.camelCaseMatch(\"npe\".toCharArray(), \"NullPointerException\".toCharArray()));", "-\tassertTrue(\"Camel pattern matching failure-4\",", "-\t\t\t!CharOperation.camelCaseMatch(\"npe\".toCharArray(), \"NPException\".toCharArray()));", "-\tassertTrue(\"Camel pattern matching failure-5\",", "-\t\t\tCharOperation.camelCaseMatch(\"NPointerE\".toCharArray(), \"NullPointerException\".toCharArray()));", "+\tassertCamelCase(\"NPEX\", \"NullPointerException\", false/* should not match */);", "+\tassertCamelCase(\"NPex\", \"NullPointerException\", false/* should not match */);", "+\tassertCamelCase(\"npe\", \"NullPointerException\", false/* should not match */);", "+\tassertCamelCase(\"npe\", \"NPException\", false/* should not match */);", "+\tassertCamelCase(\"NPointerE\", \"NullPointerException\", true/* should match */);", "+\t// Verify that there were no unexpected results", "+    assertTrue(this.camelCaseErrors.toString(), this.camelCaseErrors.length()==0);"]}], "num": 23695}