{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c2a86c89740ed0b09bf394045719bc31", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d8a531f3d9b99709e5840b511f11df7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "8641f54de2fbb396358e8ce74c8966d612b3bcdf", "commitAfterChange": "7f7fe7a0ba4a6e12c0bff10c900a5fe01a5f59ed", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "signatureAfterChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "diff": ["-\t\t\t\t\t\t\tif (this.completionToken == null || CharOperation.prefixEquals(this.completionToken, refBinding.sourceName)) {", "+\t\t\t\t\t\t\tif (this.completionToken == null", "+\t\t\t\t\t\t\t\t\t|| CharOperation.prefixEquals(this.completionToken, refBinding.sourceName)", "+\t\t\t\t\t\t\t\t\t|| (this.options.camelCaseMatch && CharOperation.camelCaseMatch(this.completionToken, refBinding.sourceName))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1741e02883485aea1f8068155b5e302f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "8641f54de2fbb396358e8ce74c8966d612b3bcdf", "commitAfterChange": "7f7fe7a0ba4a6e12c0bff10c900a5fe01a5f59ed", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t \tprivate void findAnnotationAttributes(char[] token, MemberValuePair[] attributesFound, ReferenceBinding annotation)", "signatureAfterChange": " \t \tprivate void findAnnotationAttributes(char[] token, MemberValuePair[] attributesFound, ReferenceBinding annotation)", "diff": ["-\t\t\tif(!CharOperation.prefixEquals(token, method.selector, false)) continue nextAttribute;", "+\t\t\tif(!CharOperation.prefixEquals(token, method.selector, false)", "+\t\t\t\t\t&& !(this.options.camelCaseMatch && CharOperation.camelCaseMatch(token, method.selector))) continue nextAttribute;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "235972db94af732e402465148e5cc3dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "8641f54de2fbb396358e8ce74c8966d612b3bcdf", "commitAfterChange": "7f7fe7a0ba4a6e12c0bff10c900a5fe01a5f59ed", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": "  \tprivate void findTypesFromStaticImports(char[] token, Scope scope, boolean proposeAllMemberTypes, ObjectVector typesFound)", "signatureAfterChange": "  \tprivate void findTypesFromStaticImports(char[] token, Scope scope, boolean proposeAllMemberTypes, ObjectVector typesFound)", "diff": ["-\t\t\t\t\t\t\tif (!CharOperation.prefixEquals(token, typeBinding.sourceName, false))\tcontinue;", "+\t\t\t\t\t\t\tif (!CharOperation.prefixEquals(token, typeBinding.sourceName, false)", "+\t\t\t\t\t\t\t\t\t&& !(this.options.camelCaseMatch && CharOperation.camelCaseMatch(token, typeBinding.sourceName)))\tcontinue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53579c1d769ef52e3c56e9135da70df1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "3cc4e50fbf99512fc65836c0bf762a6c1ae261f2", "commitAfterChange": "f82497ad99cb308a2465528007b929be726b75fb", "methodNumberBeforeChange": 145, "methodNumberAfterChange": 145, "signatureBeforeChange": "  \tprivate void findFieldsAndMethodsFromStaticImports( \t\t\tchar[] token, \t\t\tScope scope, \t\t\tInvocationSite invocationSite, \t\t\tScope invocationScope, \t\t\tboolean exactMatch, \t\t\tboolean insideAnnotationAttribute, \t\t\tObjectVector localsFound, \t\t\tObjectVector fieldsFound, \t\t\tObjectVector methodsFound, \t\t\tboolean proposeField, \t\t\tboolean proposeMethod)", "signatureAfterChange": "  \tprivate void findFieldsAndMethodsFromStaticImports( \t\t\tchar[] token, \t\t\tScope scope, \t\t\tInvocationSite invocationSite, \t\t\tScope invocationScope, \t\t\tboolean exactMatch, \t\t\tboolean insideAnnotationAttribute, \t\t\tObjectVector localsFound, \t\t\tObjectVector fieldsFound, \t\t\tObjectVector methodsFound, \t\t\tboolean proposeField, \t\t\tboolean proposeMethod)", "diff": ["-\t\t\t\t\t\t\t\t\t\t!exactMatch && CharOperation.prefixEquals(token, methodBinding.selector)) {", "-", "+\t\t\t\t\t\t\t\t\t\t!exactMatch && CharOperation.prefixEquals(token, methodBinding.selector) ||", "+\t\t\t\t\t\t\t\t\t\t(this.options.camelCaseMatch && CharOperation.camelCaseMatch(token, methodBinding.selector))) {", "-\t\t\t\t\t\t\t\t\t\t\tmethodBinding.selector,", "-\t\t\t\t\t\t\t\t\t\t\tmethodBinding.declaringClass.methods(),", "+\t\t\t\t\t\t\t\t\t\t\ttoken,", "+\t\t\t\t\t\t\t\t\t\t\tmethodBinding.declaringClass.getMethods(methodBinding.selector),"]}], "num": 57387}