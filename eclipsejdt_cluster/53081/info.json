{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dd9ee9b88f3781aca689169b1341cce5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f61c64e0c2cc837bfde1295962f86e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetQualifiedNameReference.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void generateReadSequence(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " public FieldBinding generateReadSequence(BlockScope currentScope, CodeStream codeStream)", "diff": ["-public void generateReadSequence(BlockScope currentScope, CodeStream codeStream) {", "+public FieldBinding generateReadSequence(BlockScope currentScope, CodeStream codeStream) {", "+    ", "-", "+\tFieldBinding lastFieldBinding = null;", "+\tTypeBinding lastGenericCast = null;", "+\t", "-\t\t\tthis.lastFieldBinding = (FieldBinding) this.codegenBinding;", "+\t\t\tlastFieldBinding = (FieldBinding) this.codegenBinding;", "+\t\t\tlastGenericCast = this.genericCast;", "-\t\t\tif (this.lastFieldBinding.constant != NotAConstant) {", "+\t\t\tif (lastFieldBinding.constant != NotAConstant) {", "-\t\t\t\tif (this.lastFieldBinding.canBeSeenBy(getReceiverType(currentScope), this, currentScope)) {", "-\t\t\t\t\tif (!this.lastFieldBinding.isStatic()) {", "+\t\t\t\tif (lastFieldBinding.canBeSeenBy(getReceiverType(currentScope), this, currentScope)) {", "+\t\t\t\t\tif (!lastFieldBinding.isStatic()) {", "-\t\t\t\t\t\t\tif (emulationPath == null) {", "-\t\t\t\t\t\t\t\t// internal error, per construction we should have found it", "-\t\t\t\t\t\t\t\tcurrentScope.problemReporter().needImplementation();", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tcodeStream.generateOuterAccess(emulationPath, this, targetType, currentScope);", "-\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tcodeStream.generateOuterAccess(emulationPath, this, targetType, currentScope);", "-\t\t\t\t\tif (!this.lastFieldBinding.isStatic()) {", "+\t\t\t\t\tif (!lastFieldBinding.isStatic()) {", "-\t\t\tthis.lastFieldBinding = null;", "-\t\t\t\tif ((this.bits & DepthMASK) != 0) {", "+\t\t\t\tif ((bits & DepthMASK) != 0) {", "-\t\t\t\t\tif (path == null) {", "-\t\t\t\t\t\t// emulation was not possible (should not happen per construction)", "-\t\t\t\t\t\tcurrentScope.problemReporter().needImplementation();", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tcodeStream.generateOuterAccess(path, this, localBinding, currentScope);", "-\t\t\t\t\t}", "+\t\t\t\t\tcodeStream.generateOuterAccess(path, this, localBinding, currentScope);", "-\t\t\tif (this.lastFieldBinding != null) {", "+\t\t\tTypeBinding nextGenericCast = this.otherGenericCasts == null ? null : this.otherGenericCasts[i];", "+\t\t\tif (lastFieldBinding != null) {", "-\t\t\t\t\tif (this.lastFieldBinding.canBeSeenBy(getReceiverType(currentScope), this, currentScope)) {", "-\t\t\t\t\t\tif (this.lastFieldBinding.constant != NotAConstant) {", "-\t\t\t\t\t\t\tif (this.lastFieldBinding != this.codegenBinding && !this.lastFieldBinding.isStatic()) {", "+\t\t\t\t\tif (lastFieldBinding.canBeSeenBy(getReceiverType(currentScope), this, currentScope)) {", "+\t\t\t\t\t\tif (lastFieldBinding.constant != NotAConstant) {", "+\t\t\t\t\t\t\tif (lastFieldBinding != this.codegenBinding && !lastFieldBinding.isStatic()) {", "-\t\t\t\t\t\t\tcodeStream.generateConstant(this.lastFieldBinding.constant, 0);", "-\t\t\t\t\t\t} else if (this.lastFieldBinding.isStatic()) {", "-\t\t\t\t\t\t\tcodeStream.getstatic(this.lastFieldBinding);", "+\t\t\t\t\t\t\tcodeStream.generateConstant(lastFieldBinding.constant, 0);", "+\t\t\t\t\t\t} else if (lastFieldBinding.isStatic()) {", "+\t\t\t\t\t\t\tcodeStream.getstatic(lastFieldBinding);", "-\t\t\t\t\t\t\tcodeStream.getfield(this.lastFieldBinding);", "+\t\t\t\t\t\t\tcodeStream.getfield(lastFieldBinding);", "-\t\t\t\t\t\t((CodeSnippetCodeStream) codeStream).generateEmulatedReadAccessForField(this.lastFieldBinding);", "+\t\t\t\t\t\t((CodeSnippetCodeStream) codeStream).generateEmulatedReadAccessForField(lastFieldBinding);", "+\t\t\t\t\tif (lastGenericCast != null) codeStream.checkcast(lastGenericCast);", "-\t\t\t\t\tif (this.codegenBinding != this.lastFieldBinding && !this.lastFieldBinding.isStatic()){", "+\t\t\t\t\tif (this.codegenBinding != lastFieldBinding && !lastFieldBinding.isStatic()){", "-\t\t\tthis.lastFieldBinding = nextField;", "-\t\t\tif (this.lastFieldBinding != null && !this.lastFieldBinding.canBeSeenBy(getReceiverType(currentScope), this, currentScope)) {", "-\t\t\t\tif (this.lastFieldBinding.isStatic()) {", "+\t\t\tlastFieldBinding = nextField;", "+\t\t\tlastGenericCast = nextGenericCast;", "+\t\t\tif (lastFieldBinding != null && !lastFieldBinding.canBeSeenBy(getReceiverType(currentScope), this, currentScope)) {", "+\t\t\t\tif (lastFieldBinding.isStatic()) {", "+\treturn lastFieldBinding;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e36c068a7077feb5b687a2ed133353d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetQualifiedNameReference.java", "commitBeforeChange": "302df05b099c1ea06faca0b00f806513c7db6904", "commitAfterChange": "c661afbb38268ca6f18a772df813f6c69bb9e17c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void generateReadSequence(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " public void generateReadSequence(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\tint otherBindingsCount = this.otherCodegenBindings == null ? 0 : otherCodegenBindings.length;", "+\tint otherBindingsCount = this.otherCodegenBindings == null ? 0 : this.otherCodegenBindings.length;", "-\tswitch (bits & RestrictiveFlagMASK) {", "+\tswitch (this.bits & RestrictiveFlagMASK) {", "-\t\t\tlastFieldBinding = (FieldBinding) this.codegenBinding;", "+\t\t\tthis.lastFieldBinding = (FieldBinding) this.codegenBinding;", "-\t\t\tif (lastFieldBinding.constant != NotAConstant) {", "+\t\t\tif (this.lastFieldBinding.constant != NotAConstant) {", "-\t\t\t\tif (lastFieldBinding.canBeSeenBy(getReceiverType(currentScope), this, currentScope)) {", "-\t\t\t\t\tif (!lastFieldBinding.isStatic()) {", "-\t\t\t\t\t\tif ((bits & DepthMASK) != 0) {", "-\t\t\t\t\t\t\tReferenceBinding targetType = currentScope.enclosingSourceType().enclosingTypeAt((bits & DepthMASK) >> DepthSHIFT);", "+\t\t\t\tif (this.lastFieldBinding.canBeSeenBy(getReceiverType(currentScope), this, currentScope)) {", "+\t\t\t\t\tif (!this.lastFieldBinding.isStatic()) {", "+\t\t\t\t\t\tif ((this.bits & DepthMASK) != 0) {", "+\t\t\t\t\t\t\tReferenceBinding targetType = currentScope.enclosingSourceType().enclosingTypeAt((this.bits & DepthMASK) >> DepthSHIFT);", "-\t\t\t\t\tif (!lastFieldBinding.isStatic()) {", "-\t\t\t\t\t\tif ((bits & DepthMASK) != 0) {", "+\t\t\t\t\tif (!this.lastFieldBinding.isStatic()) {", "+\t\t\t\t\t\tif ((this.bits & DepthMASK) != 0) {", "-\t\t\tlastFieldBinding = null;", "+\t\t\tthis.lastFieldBinding = null;", "-\t\t\t\tif ((bits & DepthMASK) != 0) {", "+\t\t\t\tif ((this.bits & DepthMASK) != 0) {", "-\t\t\tif (lastFieldBinding != null) {", "+\t\t\tif (this.lastFieldBinding != null) {", "-\t\t\t\t\tif (lastFieldBinding.canBeSeenBy(getReceiverType(currentScope), this, currentScope)) {", "-\t\t\t\t\t\tif (lastFieldBinding.constant != NotAConstant) {", "+\t\t\t\t\tif (this.lastFieldBinding.canBeSeenBy(getReceiverType(currentScope), this, currentScope)) {", "+\t\t\t\t\t\tif (this.lastFieldBinding.constant != NotAConstant) {", "-\t\t\t\t\t\t\tcodeStream.generateConstant(lastFieldBinding.constant, 0);", "-\t\t\t\t\t\t} else if (lastFieldBinding.isStatic()) {", "-\t\t\t\t\t\t\tcodeStream.getstatic(lastFieldBinding);", "+\t\t\t\t\t\t\tcodeStream.generateConstant(this.lastFieldBinding.constant, 0);", "+\t\t\t\t\t\t} else if (this.lastFieldBinding.isStatic()) {", "+\t\t\t\t\t\t\tcodeStream.getstatic(this.lastFieldBinding);", "-\t\t\t\t\t\t\tcodeStream.getfield(lastFieldBinding);", "+\t\t\t\t\t\t\tcodeStream.getfield(this.lastFieldBinding);", "-\t\t\t\t\t\t((CodeSnippetCodeStream) codeStream).generateEmulatedReadAccessForField(lastFieldBinding);", "+\t\t\t\t\t\t((CodeSnippetCodeStream) codeStream).generateEmulatedReadAccessForField(this.lastFieldBinding);", "-\t\t\tif (lastFieldBinding != null && !lastFieldBinding.canBeSeenBy(getReceiverType(currentScope), this, currentScope)) {", "-\t\t\t\tif (lastFieldBinding.isStatic()) {", "+\t\t\tif (this.lastFieldBinding != null && !this.lastFieldBinding.canBeSeenBy(getReceiverType(currentScope), this, currentScope)) {", "+\t\t\t\tif (this.lastFieldBinding.isStatic()) {"]}], "num": 53081}