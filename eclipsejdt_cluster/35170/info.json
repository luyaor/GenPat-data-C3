{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8bededc6494f518f3a22286d7700e179", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "370c2075006ee9e0680682efbe739e2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TestAll.java", "commitBeforeChange": "6a44e0777af1a4632e0d20c0e9b92d35d2ad59f3", "commitAfterChange": "2ca339c139c0fe73a5bd2705f66592731098d347", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["+\taddTest(suite, ArrayTest.class);", "+\taddTest(suite, AssignmentTest.class);", "+\taddTest(suite, BooleanTest.class);", "+\taddTest(suite, CastTest.class);", "+\taddTest(suite, ConstantTest.class);", "+\taddTest(suite, LocalVariableTest.class);", "+\taddTest(suite, NumericTest.class);", "-\taddTest(suite, UtilTest.class);", "-\t\t", "+\taddTest(suite, SwitchTest.class);", "+\taddTest(suite, TryStatementTest.class);", "+\taddTest(suite, UtilTest.class);", "+\taddTest(suite, XLargeTest.class);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5085d2f606db2959592734ee2a88421e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "61c4f34a99fac56b19ac1994f5a7274231102e0c", "commitAfterChange": "51338ea2c291fc027c3057bd509f9115f23d8914", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": "\t\t \t \tpublic void testStringLiteral()", "signatureAfterChange": "\t\t \t \tpublic void testStringLiteral()", "diff": ["+\t\tpreviousCount = ast.modificationCount();", "+\t\tx.setLiteralValue(\"\\\\012\\\\015\"); //$NON-NLS-1$", "+\t\tassertTrue(ast.modificationCount() > previousCount);", "+\t\tassertEquals(\"different\", \"\\\"\\\\\\\\012\\\\\\\\015\\\"\", x.getEscapedValue()); //$NON-NLS-1$", "+\t\tassertTrue(\"\\\\012\\\\015\".equals(x.getLiteralValue())); //$NON-NLS-1$", "+", "+\t\tpreviousCount = ast.modificationCount();", "+\t\tx.setLiteralValue(\"\\012\\015\"); //$NON-NLS-1$", "+\t\tassertTrue(ast.modificationCount() > previousCount);", "+\t\tassertTrue(\"\\n\\r\".equals(x.getLiteralValue())); //$NON-NLS-1$", "+\t\tassertEquals(\"different\", \"\\\"\\\\n\\\\r\\\"\", x.getEscapedValue()); //$NON-NLS-1$", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "686f9b5893b77621b1123db20d3bebd9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "17b5a42a2fa15b8003060f38130af8e988ed72fa", "commitAfterChange": "36fc9348d0d9c71b81e67b073b177c90fefb19f1", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "\t \t \tpublic void testSingleVariableDeclaration()", "signatureAfterChange": "\t \t \tpublic void testSingleVariableDeclaration()", "diff": ["+\t\tassertTrue(x.getExtraDimensions() == 0);", "+", "+\t\tpreviousCount = ast.modificationCount();", "+\t\tx.setExtraDimensions(1);", "+\t\tassertTrue(ast.modificationCount() > previousCount);", "+\t\tassertTrue(x.getExtraDimensions() == 1);", "+", "+\t\tpreviousCount = ast.modificationCount();", "+\t\tx.setExtraDimensions(0);", "+\t\tassertTrue(ast.modificationCount() > previousCount);", "+\t\tassertTrue(x.getExtraDimensions() == 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86aec0d096c58e3df33b3d74fe490dc5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "795236662f4c72deb433448a946f4a36cebbebd0", "commitAfterChange": "b74a7b82d9221b86893a88ea5453e92534ffe51b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprivate void checkProjectsBeingAddedOrRemoved(IResourceDelta delta)", "signatureAfterChange": " \tprivate void checkProjectsAndClasspathChanges(IResourceDelta delta)", "diff": ["-\tprivate void checkProjectsBeingAddedOrRemoved(IResourceDelta delta) {", "+\tprivate void checkProjectsAndClasspathChanges(IResourceDelta delta) {", "+\t\t\tcase IResource.FOLDER:", "+\t\t\t\tif (delta.getKind() == IResourceDelta.CHANGED) { // look for .jar file change to update classpath", "+\t\t\t\t\tchildren = delta.getAffectedChildren();", "+\t\t\t\t}", "+\t\t\t\tbreak;", "-\t\t\t\t/* classpath file change */", "+\t\t\t\tint kind = delta.getKind();", "+\t\t\t\tRootInfo rootInfo;", "+\t\t\t\t\t/* classpath file change */", "-\t\t\t\t\tswitch (delta.getKind()) {", "+\t\t\t\t\tswitch (kind) {", "+\t\t\t\t} else if ((rootInfo = rootInfo(file.getFullPath(), kind)) != null && rootInfo.entryKind == IClasspathEntry.CPE_LIBRARY) {", "+\t\t\t\t\tjavaProject = (JavaProject)JavaCore.create(file.getProject());", "+\t\t\t\t\tjavaProject.resetResolvedClasspath();", "+\t\t\t\t\tthis.state.rootsAreStale = true;", "-\t\t\t\tcheckProjectsBeingAddedOrRemoved(children[i]);", "+\t\t\t\tcheckProjectsAndClasspathChanges(children[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92c0171e049518d22fe9d0a0e3550da2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "17b5a42a2fa15b8003060f38130af8e988ed72fa", "commitAfterChange": "36fc9348d0d9c71b81e67b073b177c90fefb19f1", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": " \t \tpublic void testMethodDeclaration()", "signatureAfterChange": " \t \tpublic void testMethodDeclaration()", "diff": ["+\t\tassertTrue(x.getExtraDimensions() == 0);", "+\t\tpreviousCount = ast.modificationCount();", "+\t\tx.setExtraDimensions(1);", "+\t\tassertTrue(ast.modificationCount() > previousCount);", "+\t\tassertTrue(x.getExtraDimensions() == 1);", "+", "+\t\tpreviousCount = ast.modificationCount();", "+\t\tx.setExtraDimensions(0);", "+\t\tassertTrue(ast.modificationCount() > previousCount);", "+\t\tassertTrue(x.getExtraDimensions() == 0);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7cef16fd0a5c51fc3a7c028f8c2bd93", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "10f63341df199e970df278da3a8020c6446bceae", "commitAfterChange": "a828d1823cd677ba9f8607ef7a3ea568312cc671", "methodNumberBeforeChange": 300, "methodNumberAfterChange": 300, "signatureBeforeChange": "\t\t \t \tpublic void testMethodRefParameter()", "signatureAfterChange": "\t\t \t \tpublic void testMethodRefParameter()", "diff": ["+\t\tif (ast.apiLevel() >= AST.JLS3) {", "+\t\t\tassertTrue(x.isVarargs() == false);", "+\t\t}", "+\t\tif (ast.apiLevel() >= AST.JLS3) {", "+\t\t\tpreviousCount = ast.modificationCount();", "+\t\t\tx.setVarargs(true);", "+\t\t\tassertTrue(ast.modificationCount() > previousCount);", "+\t\t\tassertTrue(x.isVarargs() == true);", "+\t", "+\t\t\tpreviousCount = ast.modificationCount();", "+\t\t\tx.setVarargs(false);", "+\t\t\tassertTrue(ast.modificationCount() > previousCount);", "+\t\t\tassertTrue(x.isVarargs() == false);", "+\t\t}", "+"]}], "num": 35170}