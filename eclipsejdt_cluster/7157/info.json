{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0dde9b14a671f0864457a5e665893f41", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fe76faf6b57cfdcd7764389101df082", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateFieldOperation.java", "commitBeforeChange": "90d481edc9060cc498a8f085b08186108312e37b", "commitAfterChange": "f3a3c06f6e68ab7680c250209b9759ac3d56fec6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected IDOMNode generateElementDOM() throws JavaModelException", "signatureAfterChange": " protected ASTNode generateElementAST(ASTRewrite rewriter, IDocument document, ICompilationUnit cu) throws JavaModelException", "diff": ["-// TODO - JDOM - remove once model ported off of JDOM", "-protected IDOMNode generateElementDOM() throws JavaModelException {", "-\tif (fDOMNode == null) {", "-\t\tfDOMNode = (new DOMFactory()).createField(fSource);", "-\t\tif (fDOMNode == null) {", "-\t\t\tfDOMNode = generateSyntaxIncorrectDOM();", "-\t\t\tif (fDOMNode == null) {", "-\t\t\t\tthrow new JavaModelException(new JavaModelStatus(IJavaModelStatusConstants.INVALID_CONTENTS));", "-\t\t\t}", "-\t\t}", "-\t\tif (fAlteredName != null && fDOMNode != null) {", "-\t\t\tfDOMNode.setName(fAlteredName);", "-\t\t}", "-\t}", "-\tif (!(fDOMNode instanceof IDOMField)) {", "+protected ASTNode generateElementAST(ASTRewrite rewriter, IDocument document, ICompilationUnit cu) throws JavaModelException {", "+\tASTNode node = super.generateElementAST(rewriter, document, cu);", "+\tif (node.getNodeType() != ASTNode.FIELD_DECLARATION)", "-\t}", "-\treturn fDOMNode;", "+\treturn node;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93386abab871a344f2705cf93e0ef78a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateInitializerOperation.java", "commitBeforeChange": "90d481edc9060cc498a8f085b08186108312e37b", "commitAfterChange": "f3a3c06f6e68ab7680c250209b9759ac3d56fec6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected IDOMNode generateElementDOM() throws JavaModelException", "signatureAfterChange": " protected ASTNode generateElementAST(ASTRewrite rewriter, IDocument document, ICompilationUnit cu) throws JavaModelException", "diff": ["-// TODO - JDOM - remove once model ported off of JDOM", "-protected IDOMNode generateElementDOM() throws JavaModelException {", "-\tif (fDOMNode == null) {", "-\t\tfDOMNode = (new DOMFactory()).createInitializer(fSource);", "-\t\tif (fDOMNode == null) {", "-\t\t\tfDOMNode = generateSyntaxIncorrectDOM();", "-\t\t\tif (fDOMNode == null) {", "-\t\t\t\tthrow new JavaModelException(new JavaModelStatus(IJavaModelStatusConstants.INVALID_CONTENTS));", "-\t\t\t}", "-\t\t}", "-\t}\t\t\t\t\t", "-\tif (!(fDOMNode instanceof IDOMInitializer)) {", "+protected ASTNode generateElementAST(ASTRewrite rewriter, IDocument document, ICompilationUnit cu) throws JavaModelException {", "+\tASTNode node = super.generateElementAST(rewriter, document, cu);", "+\tif (node.getNodeType() != ASTNode.INITIALIZER)", "-\t}", "-\treturn fDOMNode;", "+\treturn node;"]}], "num": 7157}