{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "543af2b0c3c39f2ffccc616861030885", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0541d29fb2d4d6baddd01eb1b0d78e8c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "a170a70f9fd89b9996c94f318397ff4dca1db782", "commitAfterChange": "25c55f5a3b95044fb71ce56ee0bb0a797b58daa1", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\tif (compilerOptions.isAnnotationBasedNullAnalysisEnabled && (this.binding.tagBits & TagBits.IsNullnessKnown) == 0) {", "-\t\t// not interested in reporting problems against this.binding:", "-\t\tnew ImplicitNullAnnotationVerifier(compilerOptions.inheritNullAnnotations)", "-\t\t\t\t.checkImplicitNullAnnotations(this.binding, null/*srcMethod*/, false, scope);", "+\tif (compilerOptions.isAnnotationBasedNullAnalysisEnabled) {", "+\t\tif ((this.binding.tagBits & TagBits.IsNullnessKnown) == 0) {", "+\t\t\t// not interested in reporting problems against this.binding:", "+\t\t\tnew ImplicitNullAnnotationVerifier(compilerOptions.inheritNullAnnotations)", "+\t\t\t\t\t.checkImplicitNullAnnotations(this.binding, null/*srcMethod*/, false, scope);", "+\t\t}", "+\t\tif (compilerOptions.sourceLevel >= ClassFileConstants.JDK1_8) {", "+\t\t\tif (this.binding instanceof ParameterizedGenericMethodBinding && this.typeArguments != null) {", "+\t\t\t\tTypeVariableBinding[] typeVariables = this.binding.original().typeVariables();", "+\t\t\t\tfor (int i = 0; i < this.typeArguments.length; i++)", "+\t\t\t\t\tthis.typeArguments[i].checkNullConstraints(scope, typeVariables, i);", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b0855d9816201df122ffa1cafd34dd9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "00e2809bf72b0ef903127f87eda0cb314f3225a1", "commitAfterChange": "542bc03686c1982d51c01449da7cc4df74fbe14e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\tif (compilerOptions.isAnnotationBasedNullAnalysisEnabled && (this.binding.tagBits & TagBits.IsNullnessKnown) == 0) {", "-\t\t\t\tnew ImplicitNullAnnotationVerifier(scope.environment(), compilerOptions.inheritNullAnnotations)", "-\t\t\t\t\t\t.checkImplicitNullAnnotations(this.binding, null/*srcMethod*/, false, scope);", "+\t\t\tif (compilerOptions.isAnnotationBasedNullAnalysisEnabled) {", "+\t\t\t\tif ((this.binding.tagBits & TagBits.IsNullnessKnown) == 0) {", "+\t\t\t\t\tnew ImplicitNullAnnotationVerifier(scope.environment(), compilerOptions.inheritNullAnnotations)", "+\t\t\t\t\t\t\t.checkImplicitNullAnnotations(this.binding, null/*srcMethod*/, false, scope);", "+\t\t\t\t}", "+\t\t\t\tif (compilerOptions.sourceLevel >= ClassFileConstants.JDK1_8) {", "+\t\t\t\t\tif (this.binding instanceof ParameterizedGenericMethodBinding && this.typeArguments != null) {", "+\t\t\t\t\t\tTypeVariableBinding[] typeVariables = this.binding.original().typeVariables();", "+\t\t\t\t\t\tfor (int i = 0; i < this.typeArguments.length; i++)", "+\t\t\t\t\t\t\tthis.typeArguments[i].checkNullConstraints(scope, typeVariables, i);", "+\t\t\t\t\t}", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8edb2cb8a24124b72c652590a569b66", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "00e2809bf72b0ef903127f87eda0cb314f3225a1", "commitAfterChange": "542bc03686c1982d51c01449da7cc4df74fbe14e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\tif (compilerOptions.isAnnotationBasedNullAnalysisEnabled && (this.binding.tagBits & TagBits.IsNullnessKnown) == 0) {", "-\t\tnew ImplicitNullAnnotationVerifier(scope.environment(), compilerOptions.inheritNullAnnotations)", "-\t\t\t\t.checkImplicitNullAnnotations(this.binding, null/*srcMethod*/, false, scope);", "+\tif (compilerOptions.isAnnotationBasedNullAnalysisEnabled) {", "+\t\tif ((this.binding.tagBits & TagBits.IsNullnessKnown) == 0) {", "+\t\t\tnew ImplicitNullAnnotationVerifier(scope.environment(), compilerOptions.inheritNullAnnotations)", "+\t\t\t\t\t.checkImplicitNullAnnotations(this.binding, null/*srcMethod*/, false, scope);", "+\t\t}", "+\t\tif (compilerOptions.sourceLevel >= ClassFileConstants.JDK1_8) {", "+\t\t\tif (this.binding instanceof ParameterizedGenericMethodBinding && this.typeArguments != null) {", "+\t\t\t\tTypeVariableBinding[] typeVariables = this.binding.original().typeVariables();", "+\t\t\t\tfor (int i = 0; i < this.typeArguments.length; i++)", "+\t\t\t\t\tthis.typeArguments[i].checkNullConstraints(scope, typeVariables, i);", "+\t\t\t}", "+\t\t}"]}], "num": 39338}