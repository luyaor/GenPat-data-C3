{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "74395dcaf636e1949c538bcf7a8f92ed", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cc07cb686c8df637ee3e8eb0dd5a1bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  public void testCompletionFindSuperInterface() throws JavaModelException", "signatureAfterChange": "  public void testCompletionFindSuperInterface() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionFindSuperInterface.java\");", "+\tthis.wc = getWorkingCopy(", "+            \"/Completion/src/CompletionFindSuperInterface.java\",", "+            \"public class CompletionFindSuperInterface implements SuperInterface {\\n\"+", "+            \"}\");", "+    ", "+    ", "+    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+    String str = this.wc.getSource();", "+    String completeBehind = \"Super\";", "+    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "-\tString str = cu.getSource();", "-\tString completeBehind = \"Super\";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-\t\t", "-\tassertEquals(", "-\t\t\"element:SuperClass    completion:SuperClass    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\"element:SuperInterface    completion:SuperInterface    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_INTERFACE + R_UNQUALIFIED + R_NON_RESTRICTED),", "-\t\trequestor.getResults());", "+    if(CompletionEngine.PROPOSE_MEMBER_TYPES) {", "+\t    assertResults(", "+\t           \"SuperInterface[TYPE_REF]{SuperInterface, , LSuperInterface;, null, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_INTERFACE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\",", "+\t\t\t\trequestor.getResults());", "+    } else {", "+    \tassertResults(", "+\t            \"SuperClass[TYPE_REF]{SuperClass, , LSuperClass;, null, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\t\"SuperInterface[TYPE_REF]{SuperInterface, , LSuperInterface;, null, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_INTERFACE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\",", "+\t\t\t\trequestor.getResults());", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43aeca6beedb8371d3383662d4b586a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 345, "methodNumberAfterChange": 345, "signatureBeforeChange": " public void testCompletionKeywordThis15() throws JavaModelException", "signatureAfterChange": " public void testCompletionKeywordThis15() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src2\", \"\", \"CompletionKeywordThis15.java\");", "+\tthis.wc = getWorkingCopy(", "+            \"/Completion/src2/CompletionKeywordThis15.java\",", "+            \"public class CompletionKeywordThis15 {\\n\" +", "+            \"\tpublic class InnerClass {\\n\" +", "+            \"\t\tpublic InnerClass() {\\n\" +", "+            \"\t\t\tCompletionKeywordThis15 a = CompletionKeywordThis15.this;\\n\" +", "+            \"\t\t}\\n\" +", "+            \"\t}\\n\" +", "+            \"}\");", "+    ", "+    ", "+    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+    String str = this.wc.getSource();", "+    String completeBehind = \"CompletionKeywordThis15.\";", "+    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "-\tString str = cu.getSource();", "-\tString completeBehind = \"CompletionKeywordThis15.\";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-", "-\tassertEquals(", "-\t\t\t\"element:CompletionKeywordThis15.InnerClass    completion:InnerClass    relevance:\" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"\\n\" +", "-\t\t\t\"element:class    completion:class    relevance:\" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"\\n\"+", "-\t\t\t\"element:this    completion:this    relevance:\" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"\",", "+\tassertResults(", "+\t\t\t\"CompletionKeywordThis15.InnerClass[TYPE_REF]{InnerClass, , LCompletionKeywordThis15$InnerClass;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\"class[FIELD_REF]{class, null, Ljava.lang.Class;, class, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\\n\"+", "+\t\t\t\"this[KEYWORD]{this, null, null, this, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a4b2bdf516949f4c19fef1c52ca3338", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 557, "methodNumberAfterChange": 557, "signatureBeforeChange": " public void testCompletionStaticMethodDeclaration2() throws JavaModelException", "signatureAfterChange": " public void testCompletionStaticMethodDeclaration2() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionStaticMethodDeclaration2.java\");", "+\tthis.wc = getWorkingCopy(", "+            \"/Completion/src/CompletionStaticMethodDeclaration2.java\",", "+            \"public class CompletionStaticMethodDeclaration2 {\\n\" +", "+            \"\tclass Inner1 extends TypeWithAMethodAndAStaticMethod {\\n\" +", "+            \"\t\tfoo\\n\" +", "+            \"\t}\\n\" +", "+            \"}\");", "+    ", "+    ", "+    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+    String str = this.wc.getSource();", "+    String completeBehind = \"foo\";", "+    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "-\tString str = cu.getSource();", "-\tString completeBehind = \"foo\";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-", "-\tassertEquals(", "-\t\t\t\"element:foo0    completion:public void foo0()    relevance:\" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE+ R_NON_RESTRICTED),", "+\tassertResults(", "+\t\t\t\"foo[POTENTIAL_METHOD_DECLARATION]{foo, LCompletionStaticMethodDeclaration2$Inner1;, ()V, foo, null, \" + (R_DEFAULT + R_INTERESTING + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\"foo0[METHOD_DECLARATION]{public void foo0(), LTypeWithAMethodAndAStaticMethod;, ()V, foo0, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE+ R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8a6f9d81e9701712661fe9b1cd21cbe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 558, "methodNumberAfterChange": 558, "signatureBeforeChange": " public void testCompletionStaticMethodDeclaration3() throws JavaModelException", "signatureAfterChange": " public void testCompletionStaticMethodDeclaration3() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionStaticMethodDeclaration3.java\");", "+\tthis.wc = getWorkingCopy(", "+            \"/Completion/src/CompletionStaticMethodDeclaration3.java\",", "+            \"public class CompletionStaticMethodDeclaration3 {\\n\" +", "+            \"\tstatic class Inner1 extends TypeWithAMethodAndAStaticMethod {\\n\" +", "+            \"\t\tfoo\\n\" +", "+            \"\t}\\n\" +", "+            \"}\");", "+    ", "+    ", "+    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+    String str = this.wc.getSource();", "+    String completeBehind = \"foo\";", "+    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "-\tString str = cu.getSource();", "-\tString completeBehind = \"foo\";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-", "-\tassertEquals(", "-\t\t\t\"element:foo    completion:public static void foo()    relevance:\" + (R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_NAME + R_NON_RESTRICTED) + \"\\n\" +", "-\t\t\t\"element:foo0    completion:public void foo0()    relevance:\" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE+ R_NON_RESTRICTED),", "+\tassertResults(", "+\t\t\t\"foo[POTENTIAL_METHOD_DECLARATION]{foo, LCompletionStaticMethodDeclaration3$Inner1;, ()V, foo, null, \" + (R_DEFAULT + R_INTERESTING + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\"foo0[METHOD_DECLARATION]{public void foo0(), LTypeWithAMethodAndAStaticMethod;, ()V, foo0, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE+ R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\"foo[METHOD_DECLARATION]{public static void foo(), LTypeWithAMethodAndAStaticMethod;, ()V, foo, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_NAME + R_NON_RESTRICTED) + \"}\","]}], "num": 72093}