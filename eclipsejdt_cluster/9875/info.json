{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c74577a82b45086bd3e15daa63914bb9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09469356141c4fb5f08da66c158fce96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/LambdaExpression.java", "commitBeforeChange": "a3a00115caa9dfd2b9b6d5b9fcf61ba0f8479cd9", "commitAfterChange": "c5d3e87bb720e91660c058962146e02390cfc415", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tpublic String[] getSuperInterfaceTypeSignatures() throws JavaModelException", "signatureAfterChange": "  \tpublic String[] getSuperInterfaceTypeSignatures() throws JavaModelException", "diff": ["-\t\tSourceTypeElementInfo info = (SourceTypeElementInfo) getElementInfo();", "-\t\tchar[][] names = info.getInterfaceNames();", "-\t\tif (names == null) {", "-\t\t\treturn CharOperation.NO_STRINGS;", "-\t\t}", "-\t\tString[] strings = new String[names.length];", "-\t\tfor (int i= 0; i < names.length; i++) {", "-\t\t\tstrings[i] = new String(Signature.createTypeSignature(names[i], true));", "-\t\t}", "-\t\treturn strings;", "+\t\treturn new String[] { this.interphase };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a7f125e0ad379bf724cc0cb354281e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "f46836fc0182d6558b7db806545181e1bf6b7622", "commitAfterChange": "f48f3dd594832bdee5afb2423353d275b5827bd1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void appendQualifiedTypeParameters(StringBuffer buffer, ITypeBinding[] typeParameters)", "signatureAfterChange": " \t \tpublic void appendQualifiedTypeParameters(StringBuffer buffer, ITypeBinding[] typeParameters)", "diff": ["-\t\t\t\tTypeBinding typeParameter = (TypeBinding) typeParameters[i];", "-\t\t\t\tbuffer.append(typeParameter.getQualifiedName());", "-\t\t\t\tITypeBinding[] bounds = typeParameter.getTypeBounds();", "-\t\t\t\tint length = bounds.length;", "-\t\t\t\tif (length > 0) {", "-\t\t\t\t\tbuffer.append(\" extends \"); //$NON-NLS-1$", "-\t\t\t\t\tbuffer.append(bounds[0].getQualifiedName());", "-\t\t\t\t\tfor (int j = 1; j < length; j++) {", "-\t\t\t\t\t\tbuffer.append('&');", "-\t\t\t\t\t\tbuffer.append(bounds[j].getQualifiedName());", "-\t\t\t\t\t}", "-\t\t\t\t}", "+\t\t\t\tbuffer.append(typeParameters[i].getQualifiedName());"]}], "num": 9875}