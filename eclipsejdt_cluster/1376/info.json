{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dcc27c39b63f9508c73e65ef3f1f6ab5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53db208b668ac3047e3b0c6421e859b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "c2ffe8ad8d598fb546a580542eaede433f8f8195", "commitAfterChange": "997cc1d41c2226e34baef319ef2ec522841d939f", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": "\r \tpublic void updateCycleParticipants(IClasspathEntry[] preferredClasspath, HashSet visited, HashSet cycleParticipants, IWorkspaceRoot workspaceRoot)", "signatureAfterChange": "\r \tpublic void updateCycleParticipants(IClasspathEntry[] preferredClasspath, ArrayList visited, HashSet cycleParticipants, IWorkspaceRoot workspaceRoot)", "diff": ["-\tpublic void updateCycleParticipants(IClasspathEntry[] preferredClasspath, HashSet visited, HashSet cycleParticipants, IWorkspaceRoot workspaceRoot){\r", "+\tpublic void updateCycleParticipants(IClasspathEntry[] preferredClasspath, ArrayList visited, HashSet cycleParticipants, IWorkspaceRoot workspaceRoot){\r", "-\t\tif (!visited.add(this)) {\r", "-\t\t\tcycleParticipants.addAll(visited);\r", "+\t\tint index = visited.indexOf(this);\r", "+\t\tif (index >= 0){\r", "+\t\t\t// only consider direct participants inside the cycle\r", "+\t\t\tfor (int i = index, size = visited.size(); i < size; i++){\r", "+\t\t\t\tcycleParticipants.add(visited.get(i)); \r", "+\t\t\t}\r", "+\t\t} else {\r", "+\t\t\tvisited.add(this);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4c539e4be144f64d7141cc255fcc0d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "c143533d344835eae9053a7d384648906ed40cff", "commitAfterChange": "6abf8e1881c12c9c3a3eab104c63d4f76b1fb73b", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": " \tpublic static void updateAllCycleMarkers() throws JavaModelException", "signatureAfterChange": " \tpublic static void updateAllCycleMarkers() throws JavaModelException", "diff": ["-\t\t", "+", "+\t\t//long start = System.currentTimeMillis();", "+", "-\t\tHashSet alreadyTraversed = new HashSet();", "+\t\tHashSet traversed = new HashSet();", "-\t\t\tif (!alreadyTraversed.contains(project)){", "+\t\t\tif (!traversed.contains(project.getPath())){", "-\t\t\t\tproject.updateCycleParticipants(null, prereqChain, cycleParticipants, workspaceRoot, alreadyTraversed);", "+\t\t\t\tproject.updateCycleParticipants(null, prereqChain, cycleParticipants, workspaceRoot, traversed);", "-\t\t", "+\t\t//System.out.println(\"updateAllCycleMarkers: \" + (System.currentTimeMillis() - start) + \" ms\");", "+", "-\t\t\tif (cycleParticipants.contains(project)){", "+\t\t\tif (cycleParticipants.contains(project.getPath())){"]}], "num": 1376}