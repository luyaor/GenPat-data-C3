{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e06644b09122f54c3d734d78ad29f4a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fdd2649a7f6f0a1f9c5ac1b596cc65b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "396d47b23135e9fb3aaeb3d8f844ebea73195461", "commitAfterChange": "05a0f872d8ef1609f1817f5edabf70e0b1737e8d", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \t\tpublic void logVersion()", "signatureAfterChange": " \t\tpublic void logVersion(final boolean printToOut)", "diff": ["-\t\tpublic void logVersion() {", "-\t\t\tthis.printlnOut(Main.bind(\"misc.version\", //$NON-NLS-1$", "-\t\t\t\tnew String[] {", "-\t\t\t\t\tMain.bind(\"compiler.name\"), //$NON-NLS-1$", "-\t\t\t\t\tMain.bind(\"compiler.version\"), //$NON-NLS-1$", "-\t\t\t\t\tMain.bind(\"compiler.copyright\") //$NON-NLS-1$", "+\t\tpublic void logVersion(final boolean printToOut) {", "+\t\t\tif (this.log != null && !this.isXml) {", "+\t\t\t\tfinal String version = Main.bind(\"misc.version\", //$NON-NLS-1$", "+\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\tMain.bind(\"compiler.name\"), //$NON-NLS-1$", "+\t\t\t\t\t\tMain.bind(\"compiler.version\"), //$NON-NLS-1$", "+\t\t\t\t\t\tMain.bind(\"compiler.copyright\") //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t);", "+\t\t\t\tthis.log.println(\"# \" + version); //$NON-NLS-1$", "+\t\t\t\tif (printToOut) {", "+\t\t\t\t\tthis.out.println(version);", "-\t\t\t));", "+\t\t\t} else if (printToOut) {", "+\t\t\t\tfinal String version = Main.bind(\"misc.version\", //$NON-NLS-1$", "+\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\tMain.bind(\"compiler.name\"), //$NON-NLS-1$", "+\t\t\t\t\t\tMain.bind(\"compiler.version\"), //$NON-NLS-1$", "+\t\t\t\t\t\tMain.bind(\"compiler.copyright\") //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t);", "+\t\t\t\tthis.out.println(version);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd73425ac9ce4dd25dd44938018ff049", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "f51d6f5a0e9a386694d73d0c3aec5b18e2ce1002", "commitAfterChange": "4ec516fd83ba9f8d854c904c0afabe8bb5fc0412", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic static IPath getClasspathVariable(final String variableName)", "signatureAfterChange": " \tpublic static IPath getClasspathVariable(final String variableName)", "diff": ["-", "+\t", "+", "-\t\tfinal ClasspathVariableInitializer initializer = getClasspathVariableInitializer(variableName);", "+\t\tfinal ClasspathVariableInitializer initializer = JavaCore.getClasspathVariableInitializer(variableName);", "-\t\t\tJavaModelManager.variablePut(variableName, JavaModelManager.VariableInitializationInProgress); // avoid initialization cycles", "-\t\t\t// wrap initializer call with Safe runnable in case initializer would be causing some grief", "-\t\t\tPlatform.run(new ISafeRunnable() {", "-\t\t\t\tpublic void handleException(Throwable exception) {", "-\t\t\t\t\tUtil.log(exception, \"Exception occurred in classpath variable initializer: \"+initializer); //$NON-NLS-1$", "-\t\t\t\t}", "-\t\t\t\tpublic void run() throws Exception {", "-\t\t\t\t\tinitializer.initialize(variableName);", "-\t\t\t\t}", "-\t\t\t});", "-\t\t\tvariablePath = (IPath) JavaModelManager.variableGet(variableName); // retry", "-\t\t\tif (variablePath == JavaModelManager.VariableInitializationInProgress) {", "-\t\t\t\t// variable was not initialized by initializer, remove it", "-\t\t\t\tJavaModelManager.variablePut(variableName, null);", "-\t\t\t\treturn null; // break cycle", "-\t\t\t}", "-\t\t\t\tSystem.out.println(\"CPVariable INIT - after initialization: \" + variableName + \" --> \" + variablePath); //$NON-NLS-2$//$NON-NLS-1$", "+\t\t\t\tSystem.out.println(\"CPVariable INIT - triggering initialization of: \" + variableName+ \" using initializer: \"+ initializer); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Exception(\"FAKE exception for dumping current CPVariable (\"+variableName+ \")INIT invocation stack trace\").printStackTrace(); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t}", "+\t\t\tJavaModelManager.variablePut(variableName, JavaModelManager.VariableInitializationInProgress); // avoid initialization cycles", "+\t\t\tboolean ok = false;", "+\t\t\ttry {", "+\t\t\t\t// wrap initializer call with Safe runnable in case initializer would be causing some grief", "+\t\t\t\tPlatform.run(new ISafeRunnable() {", "+\t\t\t\t\tpublic void handleException(Throwable exception) {", "+\t\t\t\t\t\tUtil.log(exception, \"Exception occurred in classpath variable initializer: \"+initializer+\" while initializing variable: \"+variableName); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\t}", "+\t\t\t\t\tpublic void run() throws Exception {", "+\t\t\t\t\t\tinitializer.initialize(variableName);", "+\t\t\t\t\t}", "+\t\t\t\t});", "+\t\t\t\tvariablePath = (IPath) JavaModelManager.variableGet(variableName); // initializer should have performed side-effect", "+\t\t\t\tif (variablePath == JavaModelManager.VariableInitializationInProgress) return null; // break cycle (initializer did not init or reentering call)", "+\t\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE){", "+\t\t\t\t\tSystem.out.println(\"CPVariable INIT - after initialization: \" + variableName + \" --> \" + variablePath); //$NON-NLS-2$//$NON-NLS-1$", "+\t\t\t\t}", "+\t\t\t\tok = true;", "+\t\t\t} finally {", "+\t\t\t\tif (!ok) JavaModelManager.variablePut(variableName, null); // flush cache", "+\t\t\t}", "+\t\t} else {", "+\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE){", "+\t\t\t\tSystem.out.println(\"CPVariable INIT - no initializer found for: \" + variableName); //$NON-NLS-1$"]}], "num": 49445}