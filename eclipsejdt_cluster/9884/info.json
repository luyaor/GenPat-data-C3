{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f256d1986bc63eec4566ea2faadf192", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fff6fb5d8b7b8b684ae3931a9162eb2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "38faf3efd9d7a9e66ede29f2210a34a5031698a0", "commitAfterChange": "102c35a2a8562c276abba3a19ac61f3d18639af8", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tprivate JavaElement getUnresolvedJavaElement(org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding )", "signatureAfterChange": " \tprivate JavaElement getUnresolvedJavaElement(org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding )", "diff": ["-\t\tif (Util.isClassFileName(fileName)) {", "-\t\t\tClassFile classFile = (ClassFile) getClassFile(fileName);", "-\t\t\tif (classFile == null) return null;", "-\t\t\treturn (JavaElement) classFile.getType();", "-\t\t}", "+\t\t\tif (Util.isClassFileName(fileName)) {", "+\t\t\t\tint jarSeparator = CharOperation.indexOf(IDependent.JAR_FILE_ENTRY_SEPARATOR, fileName);", "+\t\t\t\tint lastSlash = CharOperation.lastIndexOf('/', fileName);", "+\t\t\t\tif (lastSlash == -1) ", "+\t\t\t\t\tlastSlash = CharOperation.lastIndexOf(File.separatorChar, fileName);", "+\t\t\t\tif (lastSlash <= jarSeparator) // if jarSeparator == -1 and there is no slash, lastSlash should be 0", "+\t\t\t\t\tlastSlash = jarSeparator+1;", "+\t\t\t\tIPackageFragment pkg = getPackageFragment(fileName, lastSlash, jarSeparator);", "+\t\t\t\tchar[] constantPoolName = referenceBinding.constantPoolName();", "+\t\t\t\tif (constantPoolName == null) {", "+\t\t\t\t\tClassFile classFile = (ClassFile) getClassFile(fileName);", "+\t\t\t\t\treturn classFile == null ? null : (JavaElement) classFile.getType();", "+\t\t\t\t}", "+\t\t\t\tlastSlash = CharOperation.lastIndexOf('/', constantPoolName);", "+\t\t\t\tchar[] classFileName = CharOperation.subarray(constantPoolName, lastSlash+1, constantPoolName.length);", "+\t\t\t\tClassFile classFile = (ClassFile) pkg.getClassFile(new String(classFileName) + SuffixConstants.SUFFIX_STRING_class);", "+\t\t\t\treturn (JavaElement) classFile.getType();", "+\t\t\t}", "+\t\t\t\tif (Util.isClassFileName(fileName)) {", "+\t\t\t\t\tClassFile classFile = (ClassFile) getClassFile(fileName);", "+\t\t\t\t\tif (classFile == null) return null;", "+\t\t\t\t\treturn (JavaElement) classFile.getType();", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a346a56e0fb181278384ba3af84335e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/EvaluationContext.java", "commitBeforeChange": "497b69b47b38f18098b3c3fae687e15309c6bbc5", "commitAfterChange": "d38bcf16d99693127114142320ebdb39140b8604", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void complete(char[] codeSnippet, int completionPosition, SearchableEnvironment environment, CompletionRequestor requestor, Map options, IJavaProject project)", "signatureAfterChange": " public void complete(char[] codeSnippet, int completionPosition, SearchableEnvironment environment, CompletionRequestor requestor, Map options, IJavaProject project)", "diff": ["+\ttry {", "+\t\tIRequestor variableRequestor = new IRequestor() {", "+\t\t\tpublic boolean acceptClassFiles(ClassFile[] classFiles, char[] codeSnippetClassName) {", "+\t\t\t\t// Do nothing", "+\t\t\t\treturn true;", "+\t\t\t}", "+\t\t\tpublic void acceptProblem(CategorizedProblem problem, char[] fragmentSource, int fragmentKind) {", "+\t\t\t\t// Do nothing", "+\t\t\t}", "+\t\t};", "+\t\tthis.evaluateVariables(environment, options, variableRequestor, new DefaultProblemFactory(Locale.getDefault()));", "+\t} catch (InstallException e) {", "+\t\t// Do nothing", "+\t}", "+\t", "+\t", "+\tif (this.installedVars != null) {", "+\t\tIBinaryType binaryType = this.getRootCodeSnippetBinary();", "+\t\tif (binaryType != null) {", "+\t\t\tengine.lookupEnvironment.cacheBinaryType(binaryType, null /*no access restriction*/);", "+\t\t}", "+\t\t", "+\t\tClassFile[] classFiles = installedVars.classFiles;", "+\t\tfor (int i = 0; i < classFiles.length; i++) {", "+\t\t\tClassFile classFile = classFiles[i];", "+\t\t\tIBinaryType binary = null;", "+\t\t\ttry {", "+\t\t\t\tbinary = new ClassFileReader(classFile.getBytes(), null);", "+\t\t\t} catch (ClassFormatException e) {", "+\t\t\t\te.printStackTrace(); // Should never happen since we compiled this type", "+\t\t\t}", "+\t\t\tengine.lookupEnvironment.cacheBinaryType(binary, null /*no access restriction*/);", "+\t\t}", "+\t}", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aec4cfecbdc70acb774d229eb7e6863a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitStructureRequestor.java", "commitBeforeChange": "26bbc0f1d79a90c550f0bbb95cc6eeae2aa4e3bf", "commitAfterChange": "3b79f63e00cbebb1fe326313cd6905bd51bae92d", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void exitField(int initializationStart, int declarationEnd, int declarationSourceEnd)", "signatureAfterChange": " public void exitField(int initializationStart, int declarationEnd, int declarationSourceEnd)", "diff": ["-\tSourceFieldElementInfo info = (SourceFieldElementInfo) this.infoStack.pop();", "-\tinfo.setSourceRangeEnd(declarationSourceEnd);", "-\tsetChildren(info);", "+\tJavaElement handle = (JavaElement) this.handleStack.peek();", "+\tFieldInfo fieldInfo = (FieldInfo) this.infoStack.peek();", "+\tIJavaElement[] elements = getChildren(fieldInfo);", "+\tSourceFieldElementInfo info = elements.length == 0 ? new SourceFieldElementInfo() : new SourceFieldWithChildrenInfo(elements);", "+\tinfo.setNameSourceStart(fieldInfo.nameSourceStart);", "+\tinfo.setNameSourceEnd(fieldInfo.nameSourceEnd);", "+\tinfo.setSourceRangeStart(fieldInfo.declarationStart);", "+\tinfo.setFlags(fieldInfo.modifiers);", "+\tchar[] typeName = JavaModelManager.getJavaModelManager().intern(fieldInfo.type);", "+\tinfo.setTypeName(typeName);", "+\tthis.newElements.put(handle, info);", "+\tif (fieldInfo.annotations != null) {", "+\t\tint length = fieldInfo.annotations.length;", "+\t\tthis.unitInfo.annotationNumber += length;", "+\t\tfor (int i = 0; i < length; i++) {", "+\t\t\torg.eclipse.jdt.internal.compiler.ast.Annotation annotation = fieldInfo.annotations[i];", "+\t\t\tacceptAnnotation(annotation, info, handle);", "+\t\t}", "+\t}", "+\tinfo.setSourceRangeEnd(declarationSourceEnd);", "+\tthis.handleStack.pop();", "+\tthis.infoStack.pop();", "+\t", "-\t\t\t\t|| ((typeInfo = this.infoStack.peek()) instanceof SourceTypeElementInfo", "-\t\t\t\t\t && (Flags.isInterface(((SourceTypeElementInfo)typeInfo).flags)))) {", "+\t\t\t\t|| ((typeInfo = this.infoStack.peek()) instanceof TypeInfo", "+\t\t\t\t\t && (Flags.isInterface(((TypeInfo)typeInfo).modifiers)))) {", "-\tthis.handleStack.pop();"]}], "num": 9884}