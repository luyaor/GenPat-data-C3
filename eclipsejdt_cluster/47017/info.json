{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a4bb750a35c2b09cbf475c920b198b96", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78d806694de6593ffbdd96faee5737e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 433, "methodNumberAfterChange": 441, "signatureBeforeChange": " public void varargsConflict(MethodBinding method1, MethodBinding method2, SourceTypeBinding type)", "signatureAfterChange": " public void varargsConflict(MethodBinding method1, MethodBinding method2, SourceTypeBinding type)", "diff": ["-\t\t        typesAsString(method1.isVarargs(), method1.parameters, false),", "+\t\t        typesAsString(method1, false),", "-\t\t        typesAsString(method2.isVarargs(), method2.parameters, false),", "+\t\t        typesAsString(method2, false),", "-\t\t        typesAsString(method1.isVarargs(), method1.parameters, true),", "+\t\t        typesAsString(method1, true),", "-\t\t        typesAsString(method2.isVarargs(), method2.parameters, true),", "+\t\t        typesAsString(method2, true),", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c572cd9cbe06ce3da14fa546d045af2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 407, "methodNumberAfterChange": 415, "signatureBeforeChange": " public void unnecessaryTypeArgumentsForMethodInvocation(MethodBinding method, TypeBinding[] genericTypeArguments, TypeReference[] typeArguments)", "signatureAfterChange": " public void unnecessaryTypeArgumentsForMethodInvocation(MethodBinding method, TypeBinding[] genericTypeArguments, TypeReference[] typeArguments)", "diff": ["-\t\t        typesAsString(method.isVarargs(), method.parameters, false),", "+\t\t        typesAsString(method, false),", "-\t\t        typesAsString(false, genericTypeArguments, false) },", "+\t\t        typesAsString(genericTypeArguments, false) },", "-\t\t        typesAsString(method.isVarargs(), method.parameters, true),", "+\t\t        typesAsString(method, true),", "-\t\t        typesAsString(false, genericTypeArguments, true) },", "+\t\t        typesAsString(genericTypeArguments, true) },"]}], "num": 47017}