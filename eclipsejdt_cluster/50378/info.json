{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2b2f696deab6582e398df3e8e6561a3b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7042a46a8500425efd23abab614d32ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "a9567e58ade978b67e4f2db4ee5fe35bc3c0d3fe", "commitAfterChange": "0b6f06d77f121375ae3494c8c329aad2cfc0a1a4", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " private IBinaryType getJarBinaryTypeInfo(PackageFragment pkg, boolean fullyInitialize) throws CoreException, IOException, ClassFormatException", "signatureAfterChange": " private IBinaryType getJarBinaryTypeInfo(PackageFragment pkg, boolean fullyInitialize) throws CoreException, IOException, ClassFormatException", "diff": ["+\tZipFile annotationZip = null;", "-\t\t\treturn new ClassFileReader(contents, fileName.toCharArray(), fullyInitialize);", "+\t\t\tClassFileReader reader = new ClassFileReader(contents, fileName.toCharArray(), fullyInitialize);", "+\t\t\tif (root.getKind() == IPackageFragmentRoot.K_BINARY) {", "+\t\t\t\tJavaProject javaProject = (JavaProject) getAncestor(IJavaElement.JAVA_PROJECT);", "+\t\t\t\tIClasspathEntry entry = javaProject.getClasspathEntryFor(getPath());", "+\t\t\t\tif (entry != null) {", "+\t\t\t\t\tIProject project = javaProject.getProject();", "+\t\t\t\t\tIPath externalAnnotationPath = ClasspathEntry.getExternalAnnotationPath(entry, project, false);", "+\t\t\t\t\tif (externalAnnotationPath != null)", "+\t\t\t\t\t\tsetupExternalAnnotationProvider(project, externalAnnotationPath, annotationZip, reader, ", "+\t\t\t\t\t\t\t\tentryName.substring(0, entryName.length() - SuffixConstants.SUFFIX_CLASS.length));", "+\t\t\t\t}", "+\t\t\t} ", "+\t\t\treturn reader;", "+\t\tJavaModelManager.getJavaModelManager().closeZipFile(annotationZip);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d3ae2831ead4b7c0c430641d3ce91fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tpublic static void initializeAfterLoad(IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tpublic static void initializeAfterLoad(IProgressMonitor monitor) throws CoreException", "diff": ["+\t\t\t// and recreate links for external folders if needed", "+\t\t\tboolean externalFoldersProjectExists = JavaModelManager.getExternalManager().getExternalFoldersProject().isAccessible();", "+\t\t\t\tJavaProject javaProject = (JavaProject) projects[i];", "-\t\t\t\t\tclasspath = ((JavaProject) projects[i]).getResolvedClasspath();", "+\t\t\t\t\tclasspath = javaProject.getResolvedClasspath();", "+\t\t\t\t\tboolean needExternalFolderCreation = false;", "+\t\t\t\t\t\tif (!needExternalFolderCreation && !externalFoldersProjectExists && entry.getEntryKind() == IClasspathEntry.CPE_LIBRARY) {", "+\t\t\t\t\t\t\tObject target = JavaModel.getTarget(entry.getPath(), false/*don't check existence*/);", "+\t\t\t\t\t\t\tif (target instanceof IFolder && ExternalFoldersManager.isExternal(((IFolder) target).getFullPath()))", "+\t\t\t\t\t\t\t\tneedExternalFolderCreation = true;", "+\t\t\t\t\t\t}", "+\t\t\t\t\tif (needExternalFolderCreation)", "+\t\t\t\t\t\tmanager.deltaState.addExternalFolderChange(javaProject, null/*act as if all external folders were new*/);"]}], "num": 50378}