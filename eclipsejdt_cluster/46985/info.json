{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ae3bba85e333371871b0a3e87c69de2c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1990fde4d0f83425bce1973696225de1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ThrowStatement.java", "commitBeforeChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "commitAfterChange": "44855522f87e615f1ca0bfcda268b074e4443dfe", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \r public void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": "\r \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["- */ \r", "-public void generateCode(BlockScope currentScope, CodeStream codeStream) {\r", "-\r", "-\tif ((bits & IsReachableMASK) == 0) {\r", "-\t\treturn;\r", "-\tint pc = codeStream.position;\r", "-\texception.generateCode(currentScope, codeStream, true);\r", "-\tcodeStream.athrow();\r", "-\tcodeStream.recordPositionsFrom(pc, this);\r", "-\t\r", "-}\r", "+\t */\r", "+\tpublic void generateCode(BlockScope currentScope, CodeStream codeStream) {\r", "+\r", "+\t\tif ((bits & IsReachableMASK) == 0)\r", "+\t\t\treturn;\r", "+\t\tint pc = codeStream.position;\r", "+\t\texception.generateCode(currentScope, codeStream, true);\r", "+\t\tcodeStream.athrow();\r", "+\t\tcodeStream.recordPositionsFrom(pc, this);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ec32f4bc6cbbd64ed628c00c9529482", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/runtime/LocalVirtualMachine.java", "commitBeforeChange": "bc1023a3db35de5f11d5861f411b9a4de78ba0ab", "commitAfterChange": "bb9caf310cba60ea26e86d0cc9ab1b54feb67156", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " protected void cleanupTargetPath() throws TargetException", "signatureAfterChange": " protected void cleanupTargetPath() throws TargetException", "diff": ["-\t\t\t} else {", "-\t\t\t\ttry {", "-\t\t\t\t\tThread.sleep(count * 100);", "-\t\t\t\t} catch (InterruptedException e) {", "-\t\t\t\t}", "+\t\t\t}", "+\t\t\ttry {", "+\t\t\t\tThread.sleep(count * 100);", "+\t\t\t} catch (InterruptedException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a12ed339a06432c9b410b7abcdda8cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/runtime/LocalVMLauncher.java", "commitBeforeChange": "bc1023a3db35de5f11d5861f411b9a4de78ba0ab", "commitAfterChange": "bb9caf310cba60ea26e86d0cc9ab1b54feb67156", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public String[] getProgramArguments()", "signatureAfterChange": " public String[] getProgramArguments()", "diff": ["-\t} else {", "-\t\treturn this.programArguments;", "+\treturn this.programArguments;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8357f4f1bc686b6153c29018fb9c00d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/PatternSearchJob.java", "commitBeforeChange": "9ccc53063dda8b7e1afdde95ae36a8417c582abc", "commitAfterChange": "7143e72571bb2e6a2e74f6791210a97b375b5ab6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void ensureReadyToRun()", "signatureAfterChange": " public void ensureReadyToRun()", "diff": ["-\t}", "-\tpublic void ensureReadyToRun() {", "-\t\tif (!this.areIndexesReady) {", "-\t\t\tgetIndexes(null/*progress*/); // may trigger some index recreation", "-\t\t}", "-\t}", "+}", "+public void ensureReadyToRun() {", "+\tif (!this.areIndexesReady)", "+\t\tgetIndexes(null/*progress*/); // may trigger some index recreation", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8941aaa3733eabe7c2479703252f1cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "c6b0ba0798e3e5869080431aec1d46cb3df138ed", "commitAfterChange": "0d803de6a1e9319f8fcdd3fdf5273a7bd463073e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tfinal private void markAsDefinitelyNotAssigned(int position)", "signatureAfterChange": " \tfinal private void markAsDefinitelyNotAssigned(int position)", "diff": ["-\t\t\t\t} else {", "-\t\t\t\t\t// might need to grow the arrays", "-\t\t\t\t\tif (vectorIndex >= extraDefiniteInits.length) {", "-\t\t\t\t\t\treturn; // nothing to do, it was not yet set ", "-\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\t// might need to grow the arrays", "+\t\t\t\tif (vectorIndex >= extraDefiniteInits.length) {", "+\t\t\t\t\treturn; // nothing to do, it was not yet set "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edb4095e5260a104b510fb17ad455324", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/eval/TestAll.java", "commitBeforeChange": "bc1023a3db35de5f11d5861f411b9a4de78ba0ab", "commitAfterChange": "bb9caf310cba60ea26e86d0cc9ab1b54feb67156", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\t} else {", "-\t\t// Disable evaluation tests on Linux", "-\t\treturn new TestSuite(TestAll.class.getName());", "+\t// Disable evaluation tests on Linux", "+\treturn new TestSuite(TestAll.class.getName());"]}], "num": 46985}