{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "39fda21e91b37484fb3e65497b7ec141", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00fe60225858239a4abf9c816b0124e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "54632eb8b3fc718083fd85b7fed41bcce1a85dc7", "commitAfterChange": "bfb03069bc857fa6dbdefe509f7d5cec8610c33c", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 104, "signatureBeforeChange": "  \tpublic Hashtable getOptions()", "signatureAfterChange": "  \tpublic Hashtable getOptions()", "diff": ["-\t\t// set deprecated options using preferences service lookup", "-\t\tIterator deprecatedEntries = this.deprecatedOptions.entrySet().iterator();", "-\t\twhile (deprecatedEntries.hasNext()) {", "-\t\t\tEntry entry = (Entry) deprecatedEntries.next();", "-\t\t\tString propertyName = (String) entry.getKey();", "-\t\t\tString propertyValue = service.get(propertyName, null, this.preferencesLookup);", "-\t\t\tif (propertyValue != null) {", "-\t\t\t\toptions.put(propertyName, propertyValue);", "-\t\t\t\tString[] compatibleOptions = (String[]) entry.getValue();", "-\t\t\t\tfor (int co=0, length=compatibleOptions.length; co < length; co++) {", "-\t\t\t\t\toptions.put(compatibleOptions[co], propertyValue);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-", "+\t\ttry {", "+\t\t\tfinal IEclipsePreferences eclipsePreferences = this.preferencesLookup[PREF_INSTANCE];", "+\t\t\tString[] instanceKeys = eclipsePreferences.keys();", "+\t\t\tfor (int i=0, length=instanceKeys.length; i<length; i++) {", "+\t\t\t\tString optionName = instanceKeys[i];", "+\t\t\t\tmigrateObsoleteOption(options, optionName, eclipsePreferences.get(optionName, null));", "+\t\t\t}", "+\t\t} catch (BackingStoreException e) {", "+\t\t\t// skip", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e423c5ab59d953f95006ba7f05ea3a3d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "54632eb8b3fc718083fd85b7fed41bcce1a85dc7", "commitAfterChange": "bfb03069bc857fa6dbdefe509f7d5cec8610c33c", "methodNumberBeforeChange": 233, "methodNumberAfterChange": 105, "signatureBeforeChange": " \tpublic boolean storePreference(String optionName, String optionValue, IEclipsePreferences eclipsePreferences)", "signatureAfterChange": " \tpublic void migrateObsoleteOption(Map options, String optionName, String optionValue)", "diff": ["+\t */", "+\tpublic void migrateObsoleteOption(Map options, String optionName, String optionValue) {", "+", "+\t\t// Migrate formatter options", "+\t\tString[] compatibleConstants = getFormatterCompatibleConstants(optionName);", "+\t\tif (compatibleConstants != null) {", "+\t\t\tfor (int i=0, length=compatibleConstants.length; i < length; i++) {", "+\t\t\t\toptions.put(compatibleConstants[i], optionValue);", "+\t\t\t}", "+\t\t\treturn;", "+\t\t}", "+\t}", "-\t */", "-\tpublic boolean storePreference(String optionName, String optionValue, IEclipsePreferences eclipsePreferences) {", "-\t\tint optionLevel = this.getOptionLevel(optionName);", "-\t\tif (optionLevel == UNKNOWN_OPTION) return false; // unrecognized option", "-\t\t", "-\t\t// Store option value", "-\t\tswitch (optionLevel) {", "-\t\t\tcase JavaModelManager.VALID_OPTION:", "-\t\t\t\tif (optionValue == null) {", "-\t\t\t\t\teclipsePreferences.remove(optionName);", "-\t\t\t\t} else {", "-\t\t\t\t\teclipsePreferences.put(optionName, optionValue);", "-\t\t\t\t}", "-\t\t\t\tbreak;", "-\t\t\tcase JavaModelManager.DEPRECATED_OPTION:", "-\t\t\t\t// Try to migrate deprecated option", "-\t\t\t\teclipsePreferences.remove(optionName); // get rid off old preference", "-\t\t\t\tString[] compatibleOptions = (String[]) this.deprecatedOptions.get(optionName);", "-\t\t\t\tfor (int co=0, length=compatibleOptions.length; co < length; co++) {", "-\t\t\t\t\tif (optionValue == null) {", "-\t\t\t\t\t\teclipsePreferences.remove(compatibleOptions[co]);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\teclipsePreferences.put(compatibleOptions[co], optionValue);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tbreak;", "-\t\t\tdefault:", "-\t\t\t\treturn false;", "-\t\t}", "-\t\treturn true;", "-\t}"]}], "num": 10205}