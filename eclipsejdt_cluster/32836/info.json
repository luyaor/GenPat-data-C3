{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4b94eb18077fec81282a3378dafeba82", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6763412e92bb57830e83d1ccdcb92c37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBinaryType.java", "commitBeforeChange": "b2329baad162e28eeaa0efd6e2ada9db5179775c", "commitAfterChange": "1d49668f30e4a48841a7ba14782018ddd855d6b6", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r public boolean isAnonymous()", "signatureAfterChange": "\r public boolean isAnonymous()", "diff": ["+public boolean isAnonymous() {\r", "+\treturn false; // index did not record this information (since unused for hierarchies)\r", "+}\r", "-}\r", "-public boolean isAnonymous() {\r", "-\tint index = CharOperation.lastIndexOf('$', this.name);\r", "-\tif (index == -1) {\r", "-\t\treturn false;\r", "-\t} else {\r", "-\t\tfor (int i = index + 1, length = this.name.length; i < length; i++) {\r", "-\t\t\tif (!Character.isDigit(this.name[i])) {\r", "-\t\t\t\treturn false;\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\treturn true;\r", "-\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9ce8341605fd2b08bed89c468b7d74e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "4a3b8d7f66c815bfc252f4ffc29a63c010eff917", "commitAfterChange": "2eb63d812179e5217306b90a651b95bfe7169c81", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \t\tpublic void logAverage()", "signatureAfterChange": "  \t\tpublic void logAverage()", "diff": ["-\t\t\tlong sum = 0, readSum = 0, writeSum = 0;", "+\t\t\tlong sum = 0;", "-\t\t\t\treadSum += stats.sourceInputTime + stats.binaryInputTime;", "-\t\t\t\twriteSum += stats.outputTime;", "-\t\t\tlong readTime = readSum/(length - 2);", "-\t\t\tlong writeTime = writeSum/(length - 2);", "-\t\t\t\t\t\t\t}));", "-\t\t\t\tthis.printlnOut(", "-\t\t\t\t\t\tthis.main.bind(\"compile.ioTime\", //$NON-NLS-1$", "-\t\t\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\t\t\tString.valueOf(readTime),", "-\t\t\t\t\t\t\t\tString.valueOf(((int) (readTime * 1000.0 / time)) / 10.0),", "-\t\t\t\t\t\t\t\tString.valueOf(writeTime),", "-\t\t\t\t\t\t\t\tString.valueOf(((int) (writeTime * 1000.0 / time)) / 10.0),"]}], "num": 32836}