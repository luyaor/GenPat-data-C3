{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4a1d15419a856e95e3e3ffcd30f379d9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0472191b19d19e089e7a9b8c0d067cde", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "db260d93667acab111e64138469df12a566a7b90", "commitAfterChange": "41616c6495c935b90356748e848cc3a6ffe7665e", "methodNumberBeforeChange": 250, "methodNumberAfterChange": 250, "signatureBeforeChange": " protected void pushOnAstLengthStack(int pos)", "signatureAfterChange": " protected void pushOnAstLengthStack(int pos)", "diff": ["-\ttry {", "-\t\tthis.astLengthStack[++this.astLengthPtr] = pos;", "-\t} catch (IndexOutOfBoundsException e) {", "-\t\tint oldStackLength = this.astLengthStack.length;", "-\t\tint[] oldPos = this.astLengthStack;", "-\t\tthis.astLengthStack = new int[oldStackLength + StackIncrement];", "-\t\tSystem.arraycopy(oldPos, 0, this.astLengthStack, 0, oldStackLength);", "-\t\tthis.astLengthStack[this.astLengthPtr] = pos;", "+", "+\tint stackLength = this.astLengthStack.length;", "+\tif (++this.astLengthPtr >= stackLength) {", "+\t\tSystem.arraycopy(", "+\t\t\tthis.astLengthStack, 0,", "+\t\t\tthis.astLengthStack = new int[stackLength + StackIncrement], 0,", "+\t\t\tstackLength);", "+\tthis.astLengthStack[this.astLengthPtr] = pos;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b5281ca6e9197c288722fcf3784542b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "db260d93667acab111e64138469df12a566a7b90", "commitAfterChange": "41616c6495c935b90356748e848cc3a6ffe7665e", "methodNumberBeforeChange": 253, "methodNumberAfterChange": 253, "signatureBeforeChange": " protected void pushOnExpressionStackLengthStack(int pos)", "signatureAfterChange": " protected void pushOnExpressionStackLengthStack(int pos)", "diff": ["-\ttry {", "-\t\tthis.expressionLengthStack[++this.expressionLengthPtr] = pos;", "-\t} catch (IndexOutOfBoundsException e) {", "-\t\tint oldStackLength = this.expressionLengthStack.length;", "-\t\tint[] oldPos = this.expressionLengthStack;", "-\t\tthis.expressionLengthStack = new int[oldStackLength + StackIncrement];", "-\t\tSystem.arraycopy(oldPos, 0, this.expressionLengthStack, 0, oldStackLength);", "-\t\tthis.expressionLengthStack[this.expressionLengthPtr] = pos;", "+", "+\tint stackLength = this.expressionLengthStack.length;", "+\tif (++this.expressionLengthPtr >= stackLength) {", "+\t\tSystem.arraycopy(", "+\t\t\tthis.expressionLengthStack, 0,", "+\t\t\tthis.expressionLengthStack = new int[stackLength + StackIncrement], 0,", "+\t\t\tstackLength);", "+\tthis.expressionLengthStack[this.expressionLengthPtr] = pos;"]}], "num": 39619}