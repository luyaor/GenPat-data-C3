{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "53193c5a18b250c1dbd021630398cab2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e02994595c0edf77b693b18bc840115", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "44812880b1f64f568edbe98bb8d70e4f3eb124f9", "commitAfterChange": "b11c2e1026d6a028bff4430b795e03277ca541c3", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " protected void process(PossibleMatch possibleMatch, boolean bindingsWereCreated) throws CoreException", "signatureAfterChange": " protected void process(PossibleMatch possibleMatch, boolean bindingsWereCreated) throws CoreException", "diff": ["-\t\t\t\tIBinaryType info = getBinaryInfo(classFile, classFile.resource());", "+\t\t\t\tIBinaryType info = null;", "+\t\t\t\ttry {", "+\t\t\t\t\tinfo = getBinaryInfo(classFile, classFile.resource());", "+\t\t\t\t}", "+\t\t\t\tcatch (CoreException ce) {", "+\t\t\t\t\t// Do nothing", "+\t\t\t\t}", "-\t\t\t\t\tthis.patternLocator.mayBeGeneric = false; // there's no longer generics in class files", "+\t\t\t\t\tthis.patternLocator.mayBeGeneric = false; // there's no longer generic in class files"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d83764acaa49b330b55194903eb2d83a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "5f660283883cb036f6f2660e9305988c653cd514", "commitAfterChange": "0a2561a9f4fa2cd8d6a7920515eebbf8940cc034", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " protected void process(PossibleMatch possibleMatch, boolean bindingsWereCreated) throws CoreException", "signatureAfterChange": " protected void process(PossibleMatch possibleMatch, boolean bindingsWereCreated) throws CoreException", "diff": ["-\t\t\t\tif (info != null)", "-\t\t\t\t\tnew ClassFileMatchLocator().locateMatches(this, classFile, info);", "+\t\t\t\tif (info != null) {", "+\t\t\t\t\tboolean mayBeGeneric = this.patternLocator.mayBeGeneric;", "+\t\t\t\t\tthis.patternLocator.mayBeGeneric = false; // there's no longer generics in class files", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tnew ClassFileMatchLocator().locateMatches(this, classFile, info);", "+\t\t\t\t\t}", "+\t\t\t\t\tfinally {", "+\t\t\t\t\t\tthis.patternLocator.mayBeGeneric = mayBeGeneric;", "+\t\t\t\t\t}", "+\t\t\t\t}"]}], "num": 48726}