{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "92cbe88faad8a5180e00ac432486d962", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39579c845dc7eb7272aeb2ae03ce8f24", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/src/org/eclipse/jdt/compiler/apt/tests/MessagerTests.java", "commitBeforeChange": "121da1ed9487cd06624131be60f7fed861a83829", "commitAfterChange": "65bcf10af454142ab48b1720e5cae843f9f8de26", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void testMessagerWithSystemCompiler() throws IOException", "signatureAfterChange": " \tpublic void testMessagerWithSystemCompiler() throws IOException", "diff": ["-\t\tString actualErrors = internalTestMessager(compiler);", "-\t\tassertEquals(COMPARE_OK, compareRegexLines(actualErrors, EXPECTED_JAVAC_MESSAGES));", "+\t\tif (compiler == null) {", "+\t\t\tSystem.out.println(\"No system java compiler available\");", "+\t\t\treturn;", "+\t\t}", "+\t\tDiagnosticReport<JavaFileObject> diagnosticListener = new DiagnosticReport<JavaFileObject>();", "+\t\tinternalTestMessager(compiler, diagnosticListener);", "+\t\t// surprisingly enough javac 1.7 only reports 3 errors", "+\t\t// javac 1.6 reports 4 errors as expected", "+\t\tassertTrue(\"Wrong number of reported errors\", diagnosticListener.errors >= 3);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f59dd380a782de542e1046ad0c646782", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/src/org/eclipse/jdt/compiler/apt/tests/MessagerTests.java", "commitBeforeChange": "121da1ed9487cd06624131be60f7fed861a83829", "commitAfterChange": "65bcf10af454142ab48b1720e5cae843f9f8de26", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void testMessagerWithEclipseCompiler() throws IOException", "signatureAfterChange": " \tpublic void testMessagerWithEclipseCompiler() throws IOException", "diff": ["-\t\tString actualErrors = internalTestMessager(compiler);", "-\t\tassertEquals(COMPARE_OK, compareRegexLines(actualErrors, EXPECTED_ECLIPSE_MESSAGES));", "+\t\tDiagnosticReport<JavaFileObject> diagnosticListener = new DiagnosticReport<JavaFileObject>();", "+\t\tinternalTestMessager(compiler, diagnosticListener);", "+\t\tassertEquals(\"Wrong number of reported errors\", 4, diagnosticListener.errors);"]}], "num": 4432}