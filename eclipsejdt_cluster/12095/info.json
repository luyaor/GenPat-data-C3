{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "68f55a6963b12ed490929d628b8e7bda", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af459facb345014509ddd41732cf5b81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "2f81606b204235a7fea213d9e3c8df9d3bed65b9", "commitAfterChange": "af85a4064bb6dcfadda2603d722c6067b5a89418", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "\r \r \tprivate BlockScope retrieveEnclosingScope(ASTNode node)", "signatureAfterChange": "\r \r \tprivate BlockScope retrieveEnclosingScope(ASTNode node)", "diff": ["-\t\twhile(!(currentNode instanceof MethodDeclaration) && !(currentNode instanceof Initializer) && !(currentNode instanceof FieldDeclaration)) {\r", "+\t\twhile(currentNode != null\r", "+\t\t\t&&!(currentNode instanceof MethodDeclaration)\r", "+\t\t\t&& !(currentNode instanceof Initializer)\r", "+\t\t\t&& !(currentNode instanceof FieldDeclaration)) {\r", "+\t\t}\r", "+\t\tif (currentNode == null) {\r", "+\t\t\treturn null;\r", "-\t\t// this is a MethodDeclaration\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da275c6745c6472729c538db2e7de9e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeDeclarationStatement.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 9, "signatureBeforeChange": "\t \tpublic ITypeBinding resolveBinding()", "signatureAfterChange": "\t \tpublic ITypeBinding resolveBinding()", "diff": ["-\t\tTypeDeclaration d = getTypeDeclaration();", "-\t\treturn d.resolveBinding();", "+\t\tAbstractTypeDeclaration d = getDeclaration();", "+\t\tif (d instanceof TypeDeclaration) {", "+\t\t\treturn ((TypeDeclaration) d).resolveBinding();", "+\t\t} else if (d instanceof AnnotationTypeDeclaration) {", "+\t\t\treturn ((AnnotationTypeDeclaration) d).resolveBinding();", "+\t\t} else {", "+\t\t\t// shouldn't happen", "+\t\t\treturn null;", "+\t\t}"]}], "num": 12095}