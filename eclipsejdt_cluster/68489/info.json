{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d79ea0a7363ba146a94a7ac0d96c5242", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4325160628b69a9856ebd2513bd8408f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "0af096b2d34684a162b7a195205699b7a15a3c32", "commitAfterChange": "55eb63b50ad4a934502bfb435a017ff21ebaf8d8", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t \tprivate static CompilationUnit handledSevereErrorsWhileParsing(AST ast)", "signatureAfterChange": " \t \tprivate static CompilationUnit handledSevereErrorsWhileParsing(AST ast, CodeSnippetParsingUtil codeSnippetParsingUtil)", "diff": ["-\tprivate static CompilationUnit handledSevereErrorsWhileParsing(AST ast) {", "+\tprivate static CompilationUnit handledSevereErrorsWhileParsing(AST ast, CodeSnippetParsingUtil codeSnippetParsingUtil) {", "-\t\tCompilationResult compilationResult = CodeSnippetParsingUtil.RecordedCompilationResult;", "-\t\tfinal int problemsCount = compilationResult.problemCount;", "-\t\tif (problemsCount != 0) {", "-\t\t\t// record problems", "-\t\t\tIProblem[] resizedProblems = null;", "-\t\t\tfinal IProblem[] problems = compilationResult.problems;", "-\t\t\tif (problems.length == problemsCount) {", "-\t\t\t\tresizedProblems = problems;", "-\t\t\t} else {", "-\t\t\t\tSystem.arraycopy(problems, 0, (resizedProblems = new IProblem[problemsCount]), 0, problemsCount);", "-\t\t\t}", "-\t\t\tcompilationUnit.setProblems(resizedProblems);", "+\t\tRecordedParsingInformation recordedParsingInformation = codeSnippetParsingUtil.recordedParsingInformation;", "+\t\tIProblem[] problems = recordedParsingInformation.problems;", "+\t\tif (problems != null) {", "+\t\t\tcompilationUnit.setProblems(problems);", "-\t\tCodeSnippetParsingUtil.reset();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bfefd786580835b2a865e865e92808e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "b25ed407ef1d09375524d9c9e824c1c1084b119b", "commitAfterChange": "0bd9f6472768db6e5f0062ffcfd17bd3adede039", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 109, "signatureBeforeChange": "  \tprivate void propagateErrors(CompilationUnit unit, IProblem[] problems, int problemLength)", "signatureAfterChange": "  \tvoid propagateErrors(ASTNode astNode, IProblem[] problems)", "diff": ["-\tprivate void propagateErrors(CompilationUnit unit, IProblem[] problems, int problemLength) {", "-\t\t// resize the problem array to the proper size", "-\t\tIProblem[] resizeProblems = null;", "-\t\tif (problems.length == problemLength) {", "-\t\t\tresizeProblems = problems;", "-\t\t} else {", "-\t\t\tSystem.arraycopy(problems, 0, (resizeProblems = new IProblem[problemLength]), 0, problemLength);", "-\t\t}", "-\t\tASTSyntaxErrorPropagator syntaxErrorPropagator = new ASTSyntaxErrorPropagator(resizeProblems);", "-\t\tunit.accept(syntaxErrorPropagator);", "-\t\t// store the messages error on the compulation unit", "-\t\tunit.setProblems(resizeProblems);", "+\tvoid propagateErrors(ASTNode astNode, IProblem[] problems) {", "+\t\tASTSyntaxErrorPropagator syntaxErrorPropagator = new ASTSyntaxErrorPropagator(problems);", "+\t\tastNode.accept(syntaxErrorPropagator);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa67cbbfbc66056307f0156715e7ebff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "5b34d15308d4f6546a84b9cd33776da6dbc0c72e", "commitAfterChange": "a60305f80bf1ad1ad174c9322c37748af6f5af59", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  \t\tpublic int logProblems(IProblem[] problems, char[] unitSource, Main currentMain)", "signatureAfterChange": "  \t\tpublic int logProblems(IProblem[] problems, char[] unitSource, Main currentMain)", "diff": ["+\t\t\tint localProblemCount = 0;", "-\t\t\t\t\t\t\tthis.logProblem(problem, localErrorCount, currentMain.globalProblemsCount, unitSource);", "-\t\t\t\t\t\t\tlocalErrorCount++;\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tthis.logProblem(problem, localProblemCount, currentMain.globalProblemsCount, unitSource);", "+\t\t\t\t\t\t\tlocalProblemCount++;", "+\t\t\t\t\t\t\t\tlocalErrorCount++;\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\tthis.logProblem(problems[i], localErrorCount, currentMain.globalProblemsCount, unitSource);", "-\t\t\t\t\t\t\tlocalErrorCount++;", "+\t\t\t\t\t\t\tthis.logProblem(problems[i], localProblemCount, currentMain.globalProblemsCount, unitSource);", "+\t\t\t\t\t\t\tlocalProblemCount++;", "+\t\t\t\t\t\t\t\tlocalErrorCount++;"]}], "num": 68489}