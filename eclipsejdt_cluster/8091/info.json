{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a3e698d686c06b7aaba75d5fd81a9b19", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd54253b677b7df8e34dd39c5b718869", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "589f6f354433243a559cfee0f9641e3e2af4d62f", "commitAfterChange": "078478e8a765943e089111dd6dddc420a7546230", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void indexAll(IProject project)", "signatureAfterChange": " public void indexAll(IProject project)", "diff": ["-\t\tIJavaModel model = JavaModelManager.getJavaModelManager().getJavaModel();", "-\t\tIJavaProject javaProject = ((JavaModel) model).getJavaProject(project);\t", "+\t\tJavaModel model = (JavaModel) JavaModelManager.getJavaModelManager().getJavaModel();", "+\t\tIJavaProject javaProject = model.getJavaProject(project);\t", "-\t}\t", "-\tthis.request(new IndexAllProject(project, this));", "+\t}", "+", "+\t// check if the same request is not already in the queue", "+\tIndexRequest request = new IndexAllProject(project, this);", "+\tfor (int i = this.jobEnd; i >= this.jobStart; i--)", "+\t\tif (request.equals(this.awaitingJobs[i])) return;", "+\tthis.request(request);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c06b2b9107d4af7bdc66e0da0c4c4b8c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "a80783c7a8d5186513edcff918a39b51bd15faed", "commitAfterChange": "c55cddff12b32377afae40bbcf9627a7ca7ad410", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void indexSourceFolder(JavaProject javaProject, IPath sourceFolder, final char[][] exclusionPattern)", "signatureAfterChange": " public void indexSourceFolder(JavaProject javaProject, IPath sourceFolder, final char[][] exclusionPattern)", "diff": ["+\tif (this.jobEnd >= this.jobStart) {", "+\t\t// check if a job to index the project is not already in the queue", "+\t\tIndexRequest request = new IndexAllProject(project, this);", "+\t\tfor (int i = this.jobEnd; i >= this.jobStart; i--)", "+\t\t\tif (request.equals(this.awaitingJobs[i])) return;", "+\t}", "+"]}], "num": 8091}