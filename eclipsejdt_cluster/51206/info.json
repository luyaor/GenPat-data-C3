{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b7aae0a2ec814f1e8188a8a11d4425d6", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "539c0587a215d4371f388e4cd8100edc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "c5710053e25b56911ef4ca37886dd15d080aafc0", "commitAfterChange": "e031b6a26265e40929030585397760b617acb2c1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tprivate String[] convertTypeNamesToSigs(char[][] typeNames)", "signatureAfterChange": " \tprivate String[] convertTypeNamesToSigs(char[][] typeNames)", "diff": ["-\t\t\t\ttypeSigs[i] = Signature.C_UNRESOLVED + typeSig.substring(lastIndex + 1, typeSig.length());", "+\t\t\t\tint arrayEnd = 0;", "+\t\t\t\twhile(typeSig.charAt(arrayEnd) == Signature.C_ARRAY) arrayEnd++;", "+\t\t\t\ttypeSigs[i] = typeSig.substring(0, arrayEnd) + Signature.C_UNRESOLVED + typeSig.substring(lastIndex + 1, typeSig.length());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "658fc77978e5932e74cee6b4485d95c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/KeyToSignature.java", "commitBeforeChange": "d5b2ac5401873d9ac8c29459b4b232eae34c07db", "commitAfterChange": "928ff2077825791c870088af7fc15af93a294250", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tpublic void consumeSecondaryType(char[] simpleTypeName)", "signatureAfterChange": "  \tpublic void consumeSecondaryType(char[] simpleTypeName)", "diff": ["-\t\tif (this.mainTypeStart == 0)", "-\t\t\tthis.mainTypeStart = 1; // default package", "+\t\tif (this.mainTypeStart == 0) {", "+\t\t\tthis.mainTypeStart = 1; // default package (1 for the 'L')", "+\t\t\tint i = 0;", "+\t\t\t// we need to preserve the array if needed", "+\t\t\twhile (this.signature.charAt(i) == Signature.C_ARRAY) {", "+\t\t\t\tthis.mainTypeStart ++;", "+\t\t\t\ti++;", "+\t\t\t}", "+\t\t}"]}], "num": 51206}