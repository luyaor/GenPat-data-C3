{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b6d82812df1bfe464a0210646abce90c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16472b09511846eb87165e87728a0cc8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Argument.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void bind(MethodScope scope, TypeBinding typeBinding, boolean used)", "signatureAfterChange": "  \tpublic void bind(MethodScope scope, TypeBinding typeBinding, boolean used)", "diff": ["-\t\t\tthis.type.resolvedType = typeBinding;", "+\t\t\tthis.type.resolvedType = typeBinding; // TODO (philippe) no longer necessary as when binding got resolved, it was recorded already (SourceTypeBinding#resolveTypesFor(MethodBinding))", "-\t\tif (typeBinding != null && isTypeUseDeprecated(typeBinding, scope))", "-\t\t\tscope.problemReporter().deprecatedType(typeBinding, this.type);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de64f2dfcaadbbb58e0cb367611ed6fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MethodDeclaration.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void resolveStatements()", "signatureAfterChange": "  \tpublic void resolveStatements()", "diff": ["-\t\t// look if the name of the method is correct", "-\t\tif (binding != null && isTypeUseDeprecated(binding.returnType, scope))", "-\t\t\tscope.problemReporter().deprecatedType(binding.returnType, returnType);", "-"]}], "num": 64833}