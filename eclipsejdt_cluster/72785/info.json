{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef225c3e4a23088b9ea6fea0254eb983", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "968fddbce975e9664a65e59a0d238dda", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " protected void consumeConstructorHeader()", "signatureAfterChange": " protected void consumeConstructorHeader()", "diff": ["-\tAbstractMethodDeclaration method = (AbstractMethodDeclaration)astStack[astPtr];", "+\tAbstractMethodDeclaration method = (AbstractMethodDeclaration)this.astStack[this.astPtr];", "-\tif (currentToken == TokenNameLBRACE){ ", "-\t\tmethod.bodyStart = scanner.currentPosition;", "+\tif (this.currentToken == TokenNameLBRACE){ ", "+\t\tmethod.bodyStart = this.scanner.currentPosition;", "-\tif (currentElement != null){", "-\t\tif (currentToken == TokenNameSEMICOLON){ // for invalid constructors", "+\tif (this.currentElement != null){", "+\t\tif (this.currentToken == TokenNameSEMICOLON){ // for invalid constructors", "-\t\t\tmethod.declarationSourceEnd = scanner.currentPosition-1;", "-\t\t\tmethod.bodyEnd = scanner.currentPosition-1;", "-\t\t\tif (currentElement.parseTree() == method && currentElement.parent != null) {", "-\t\t\t\tcurrentElement = currentElement.parent;", "+\t\t\tmethod.declarationSourceEnd = this.scanner.currentPosition-1;", "+\t\t\tmethod.bodyEnd = this.scanner.currentPosition-1;", "+\t\t\tif (this.currentElement.parseTree() == method && this.currentElement.parent != null) {", "+\t\t\t\tthis.currentElement = this.currentElement.parent;", "-\t\trestartRecovery = true; // used to avoid branching back into the regular automaton", "+\t\tthis.restartRecovery = true; // used to avoid branching back into the regular automaton"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e79ab42609545b5282603c3b2d37dcfd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 122, "signatureBeforeChange": " protected void consumeMethodHeader()", "signatureAfterChange": " protected void consumeMethodHeader()", "diff": ["-\tAbstractMethodDeclaration method = (AbstractMethodDeclaration)astStack[astPtr];", "+\tAbstractMethodDeclaration method = (AbstractMethodDeclaration)this.astStack[this.astPtr];", "-\tif (currentToken == TokenNameLBRACE){ ", "-\t\tmethod.bodyStart = scanner.currentPosition;", "+\tif (this.currentToken == TokenNameLBRACE){ ", "+\t\tmethod.bodyStart = this.scanner.currentPosition;", "-\tif (currentElement != null){", "-\t\tif (currentToken == TokenNameSEMICOLON){", "+\tif (this.currentElement != null){", "+\t\tif (this.currentToken == TokenNameSEMICOLON){", "-\t\t\tmethod.declarationSourceEnd = scanner.currentPosition-1;", "-\t\t\tmethod.bodyEnd = scanner.currentPosition-1;", "-\t\t\tif (currentElement.parseTree() == method && currentElement.parent != null) {", "-\t\t\t\tcurrentElement = currentElement.parent;", "+\t\t\tmethod.declarationSourceEnd = this.scanner.currentPosition-1;", "+\t\t\tmethod.bodyEnd = this.scanner.currentPosition-1;", "+\t\t\tif (this.currentElement.parseTree() == method && this.currentElement.parent != null) {", "+\t\t\t\tthis.currentElement = this.currentElement.parent;", "-\t\trestartRecovery = true; // used to avoid branching back into the regular automaton", "+\t\tthis.restartRecovery = true; // used to avoid branching back into the regular automaton"]}], "num": 72785}