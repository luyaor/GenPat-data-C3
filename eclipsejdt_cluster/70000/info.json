{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "70ca0c7fc34b34df3f07f3a3e206e4f5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a71f074867aeda3f08cafbb900bb34ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "2acd248eb60573a009a5b58c86beac17419631cd", "commitAfterChange": "a9713b4720f2b6e87a0d15709a3fbdb374d451f1", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " boolean isSubstituteParameterSubsignature(MethodBinding method, MethodBinding substituteMethod)", "signatureAfterChange": " boolean isSubstituteParameterSubsignature(MethodBinding method, MethodBinding substituteMethod)", "diff": ["+", "+\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=279836", "+\t\tif (method.declaringClass.isRawType() && substituteMethod.declaringClass.isRawType())", "+\t\t\tif (method.hasSubstitutedParameters() && substituteMethod.hasSubstitutedParameters())", "+\t\t\t\treturn areMethodsCompatible(method, substituteMethod);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef09cf83e7ff37fba9921c669c6725d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "8816a21753c2d607b8868597ac43f18ef7dd2d50", "commitAfterChange": "3af20c8fa9116cf8e52dcf498c1b4eea06f21754", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static void checkInvocationArguments(BlockScope scope, Expression receiver, TypeBinding receiverType, MethodBinding method, Expression[] arguments, TypeBinding[] argumentTypes, boolean argsContainCast, InvocationSite invocationSite)", "signatureAfterChange": " \tpublic static void checkInvocationArguments(BlockScope scope, Expression receiver, TypeBinding receiverType, MethodBinding method, Expression[] arguments, TypeBinding[] argumentTypes, boolean argsContainCast, InvocationSite invocationSite)", "diff": ["-\t\t} else if (!receiverType.isUnboundWildcard() && method.declaringClass.isRawType() && method.hasSubstitutedParameters()) {", "+\t\t} else if (!method.isStatic() && !receiverType.isUnboundWildcard() && method.declaringClass.isRawType() && method.hasSubstitutedParameters()) {"]}], "num": 70000}