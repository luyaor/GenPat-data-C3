{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "16b3ee2813703862408c704156654042", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16a080be035baa92a709a0b648e713b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "6e712fd981727d283817617aa56b968cae591bc2", "commitAfterChange": "99b584120d57fd9f2c2a7464785e4049acdac490", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tprivate void formatArrayInitializer(ArrayInitializer arrayInitializer, BlockScope scope, boolean insertSpaceBeforeOpeningBrace)", "signatureAfterChange": "  \tprivate void formatArrayInitializer(ArrayInitializer arrayInitializer, BlockScope scope, boolean insertSpaceBeforeOpeningBrace)", "diff": ["-", "+\t\t", "-\t\t\tfor (int i = this.preferences.array_initializer_continuation_indentation; i > 0; i--) {", "-\t\t\t\tthis.scribe.indent();", "-\t\t\t}", "-\t\t\t\t\t\tthis.preferences.insert_new_line_after_opening_brace_in_array_initializer ? 0 : this.preferences.array_initializer_continuation_indentation,", "+\t\t\t\t\t\tthis.preferences.array_initializer_continuation_indentation,", "+\t\t\t\t", "+\t\t\t\tif (this.preferences.insert_new_line_after_opening_brace_in_array_initializer) {", "+\t\t\t\t    arrayInitializerAlignment.fragmentIndentations[0] = arrayInitializerAlignment.breakIndentationLevel;", "+\t\t\t\t}", "+\t\t\t\t", "-\t\t}", "-\t\tif (this.preferences.insert_new_line_after_opening_brace_in_array_initializer) {", "-\t\t\tfor (int i = this.preferences.array_initializer_continuation_indentation; i > 0; i--) {", "-\t\t\t\tthis.scribe.unIndent();", "-\t\t\t}\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bef472b2ec8bbcb1ada9de7d125563a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Member.java", "commitBeforeChange": "b8967fb259bc4122f2d9f6e6be8973482d84bd2f", "commitAfterChange": "e7c40dbc434529a8379a830b9ae4ab2c74d0fc13", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r protected IMethod[] findMethods(IMethod method, IMethod[] methods)", "signatureAfterChange": "\r protected IMethod[] findMethods(IMethod method, IMethod[] methods)", "diff": ["-\t\tif (existingMethod.getElementName().equals(elementName)) {\r", "-\t\t\tString[] existingParams = existingMethod.getParameterTypes();\r", "-\t\t\tint existingParamLength = existingParams.length;\r", "-\t\t\tif (existingParamLength == paramLength) {\r", "-\t\t\t\tfor (int j = 0; j < paramLength; j++) {\r", "-\t\t\t\t\tString simpleName = Signature.getSimpleName(Signature.toString(existingParams[j]));\r", "-\t\t\t\t\tif (!simpleNames[j].equals(simpleName)) {\r", "-\t\t\t\t\t\tcontinue next;\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r", "-\t\t\t\tlist.add(existingMethod);\r", "-\t\t\t}\r", "+\t\tif (this.areSimilarMethods(\r", "+\t\t\t\telementName,\r", "+\t\t\t\tparameters,\r", "+\t\t\t\texistingMethod.getElementName(),\r", "+\t\t\t\texistingMethod.getParameterTypes(),\r", "+\t\t\t\tsimpleNames)) {\r", "+\t\t\tlist.add(existingMethod);\r"]}], "num": 50876}