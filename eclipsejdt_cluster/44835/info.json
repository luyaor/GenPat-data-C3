{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "958542f4aa6fadb4e71567320b76b05e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce8e283213824a33f550d621004c6b11", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/CorrectionEngine.java", "commitBeforeChange": "8170cb70174373d8d00b60000fbf5f5e5ba41a15", "commitAfterChange": "a63dab672e3fb0f48fb1d6f4b4eaeb1c4abf73ed", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \tpublic void computeCorrections(IMarker marker, ICorrectionRequestor requestor) throws JavaModelException", "signatureAfterChange": "\r \tpublic void computeCorrections(IMarker marker, ICompilationUnit targetUnit, int positionOffset, ICorrectionRequestor requestor) throws JavaModelException", "diff": ["-\tpublic void computeCorrections(IMarker marker, ICorrectionRequestor requestor) throws JavaModelException {\r", "+\tpublic void computeCorrections(IMarker marker, ICompilationUnit targetUnit, int positionOffset, ICorrectionRequestor requestor) throws JavaModelException {\r", "-\t\tIJavaElement element = JavaCore.create(marker.getResource());\r", "+\t\tIJavaElement element = targetUnit == null ? JavaCore.create(marker.getResource()) : targetUnit;\r", "-\t\tcomputeCorrections(unit, id, start, end, args, requestor);\r", "+\t\tcomputeCorrections(unit, id, start + positionOffset, end + positionOffset, args, requestor);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcad5922c78e1902a126313d31672b93", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/EvaluationContext.java", "commitBeforeChange": "ee446c21d0aaa4f4c4b0513ad11960ed53ccba7d", "commitAfterChange": "271be052e104f1beefee4cd78039eca6ee6adb4f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void complete(char[] codeSnippet, int completionPosition, SearchableEnvironment environment, CompletionRequestor requestor, Map options, IJavaProject project)", "signatureAfterChange": " public void complete(char[] codeSnippet, int completionPosition, SearchableEnvironment environment, CompletionRequestor requestor, Map options, final IJavaProject project, WorkingCopyOwner owner)", "diff": ["-public void complete(char[] codeSnippet, int completionPosition, SearchableEnvironment environment, CompletionRequestor requestor, Map options, IJavaProject project) {", "+public void complete(char[] codeSnippet, int completionPosition, SearchableEnvironment environment, CompletionRequestor requestor, Map options, final IJavaProject project, WorkingCopyOwner owner) {", "-\tCompletionEngine engine = new CompletionEngine(environment, mapper.getCompletionRequestor(requestor), options, project);", "+\tCompletionEngine engine = new CompletionEngine(environment, mapper.getCompletionRequestor(requestor), options, project, owner);", "-\tengine.complete(sourceUnit, mapper.startPosOffset + completionPosition, mapper.startPosOffset);", "+\tengine.complete(sourceUnit, mapper.startPosOffset + completionPosition, mapper.startPosOffset, null/*extended context isn't computed*/);"]}], "num": 44835}