{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "87e24ae785e2acd4a50ae337ae2c771f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22ae076ac8b8ec312c9e73d6131b75dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "77ac300d6d124e9b071b4e62fab3a583e6eecdc4", "commitAfterChange": "fbf658958d1eb066a4b5c16fdea253c3d8d5019c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\t\t\tfor (int i = 0, length = this.arguments == null ? 0 : this.arguments.length; i < length; i++) {", "+\t\t\t\t\tExpression argument = this.arguments[i];", "+\t\t\t\t\tif (argumentTypes[i] instanceof PolyTypeBinding) {", "+\t\t\t\t\t\targument.setExpressionContext(INVOCATION_CONTEXT);", "+\t\t\t\t\t\targument.setExpectedType(this.binding.parameters[i]);", "+\t\t\t\t\t\targumentTypes[i] = argument.resolveType(scope);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\tfor (int i = 0, length = this.arguments == null ? 0 : this.arguments.length; i < length; i++) {", "+\t\t\tExpression argument = this.arguments[i];", "+\t\t\tif (argumentTypes[i] instanceof PolyTypeBinding) {", "+\t\t\t\targument.setExpressionContext(INVOCATION_CONTEXT);", "+\t\t\t\targument.setExpectedType(inheritedBinding.parameters[i]);", "+\t\t\t\targumentTypes[i] = argument.resolveType(scope);", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b400be9ef0bafa7509ac3f69d0090457", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "01b4ca7b386e2151e72abd0b2f1c2ecda16f856e", "commitAfterChange": "a2a25daab3f792071cba7e3d51c3d2abf00c6c2a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "diff": ["+\t\tboolean argumentsTypeElided = argumentsTypeElided();", "+\t\tint length = this.arguments == null ? 0 : this.arguments.length;", "+\t\tif (!argumentsTypeElided) {", "+\t\t\tfor (int i = 0; i < length; i++)", "+\t\t\t\tthis.argumentTypes[i] = this.arguments[i].type.resolveType(blockScope, true /* check bounds*/);", "+\t\t}", "-\t\tboolean argumentsTypeElided = argumentsTypeElided();", "-\t\t\t\tint length = this.arguments != null ? this.arguments.length : 0;", "-\t\tint length = this.arguments == null ? 0 : this.arguments.length;", "-\t\t\tparameterType = argumentsTypeElided ? expectedParameterType : (this.argumentTypes[i] = argument.type.resolveType(this.scope, true /* check bounds*/));", "+\t\t\tparameterType = argumentsTypeElided ? expectedParameterType : this.argumentTypes[i];"]}], "num": 66326}