{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0580295112af2b909f7e28b6505b9185", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c4f700210f717d4a2dfcb97dddd1d73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "fe3a48f1f7f1a7c40cc246cc6fcf6be8ef3f9c35", "commitAfterChange": "193e5a666fe587859e4ffe3b97be66bcfde5cbec", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void _testSearchPotentialMatchInOutput() throws JavaModelException, CoreException", "signatureAfterChange": " public void testSearchPotentialMatchInOutput() throws CoreException", "diff": ["-public void _testSearchPotentialMatchInOutput() throws JavaModelException, CoreException {", "-\tthis.setClasspath(new String[] {\"/P\", \"src/\", \"/P/src\", \"\"});", "-\tthis.createFile(", "-\t\t\"/P/bin/X.java\",", "-\t\t\"public class X {\\n\" +", "-\t\t\"}\"", "-\t);", "-\tJavaSearchTests.JavaSearchResultCollector resultCollector = new JavaSearchTests.JavaSearchResultCollector();", "-\tIJavaSearchScope scope = SearchEngine.createJavaSearchScope(new IJavaElement[] {getJavaProject(\"P\")});", "-\tnew SearchEngine().search(", "-\t\tgetWorkspace(), ", "-\t\t\"X\",", "-\t\tIJavaSearchConstants.TYPE,", "-\t\tIJavaSearchConstants.DECLARATIONS, ", "-\t\tscope, ", "-\t\tresultCollector);", "-\tassertEquals(\"\", resultCollector.toString());", "+public void testSearchPotentialMatchInOutput() throws CoreException {", "+\ttry {", "+\t\tJavaCore.run(new IWorkspaceRunnable() {", "+\t\t\tpublic void run(IProgressMonitor monitor) throws CoreException {", "+\t\t\t\tIJavaProject project = createJavaProject(\"P2\", new String[] {}, \"bin\");", "+\t\t\t\tproject.setRawClasspath(createClasspath(new String[] {\"/P2\", \"src/\", \"/P2/src\", \"\"}), null);", "+\t\t\t\tcreateFile(", "+\t\t\t\t\t\"/P2/bin/X.java\",", "+\t\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\t\"}\"", "+\t\t\t\t);", "+\t\t\t}", "+\t\t}, null);", "+\t\t", "+\t\tJavaSearchTests.JavaSearchResultCollector resultCollector = new JavaSearchTests.JavaSearchResultCollector();", "+\t\tIJavaSearchScope scope = SearchEngine.createJavaSearchScope(new IJavaElement[] {getJavaProject(\"P\")});", "+\t\tnew SearchEngine().search(", "+\t\t\tgetWorkspace(), ", "+\t\t\t\"X\",", "+\t\t\tIJavaSearchConstants.TYPE,", "+\t\t\tIJavaSearchConstants.DECLARATIONS, ", "+\t\t\tscope, ", "+\t\t\tresultCollector);", "+\t\tassertEquals(\"\", resultCollector.toString());", "+\t} finally {", "+\t\tthis.deleteProject(\"P2\");", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84376684be0dd106f230a88a438a3cd6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "d32899eb4e5db96c386fe27007db09842d368980", "commitAfterChange": "454c09645419e42e424c8ed7d147ba861f3f0f93", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "  private void denseCycleDetection(int numberOfParticipants) throws CoreException", "signatureAfterChange": "  private void denseCycleDetection(final int numberOfParticipants) throws CoreException", "diff": ["-private void denseCycleDetection(int numberOfParticipants) throws CoreException {", "+private void denseCycleDetection(final int numberOfParticipants) throws CoreException {", "-\tIJavaProject[] projects = new IJavaProject[numberOfParticipants];", "-\tint[] allProjectsInCycle = new int[numberOfParticipants];", "+\tfinal IJavaProject[] projects = new IJavaProject[numberOfParticipants];", "+\tfinal int[] allProjectsInCycle = new int[numberOfParticipants];", "-\t\tfor (int i = 0; i < numberOfParticipants; i++){", "-\t\t\tprojects[i] = this.createJavaProject(\"P\"+i, new String[]{\"\"}, \"\");", "-\t\t\tallProjectsInCycle[i] = 1;", "-\t\t}\t\t", "-\t\tfor (int i = 0; i < numberOfParticipants; i++){", "-\t\t\tIClasspathEntry[] extraEntries = new IClasspathEntry[numberOfParticipants-1];", "-\t\t\tint index = 0;", "-\t\t\tfor (int j = 0; j < numberOfParticipants; j++){", "-\t\t\t\tif (i == j) continue;", "-\t\t\t\textraEntries[index++] = JavaCore.newProjectEntry(projects[j].getPath());", "+\t\tJavaCore.run(new IWorkspaceRunnable() {", "+\t\t\tpublic void run(IProgressMonitor monitor) throws CoreException {", "+\t\t\t\tfor (int i = 0; i < numberOfParticipants; i++){", "+\t\t\t\t\tprojects[i] = createJavaProject(\"P\"+i, new String[]{\"\"}, \"\");", "+\t\t\t\t\tallProjectsInCycle[i] = 1;", "+\t\t\t\t}\t\t", "+\t\t\t\tfor (int i = 0; i < numberOfParticipants; i++){", "+\t\t\t\t\tIClasspathEntry[] extraEntries = new IClasspathEntry[numberOfParticipants-1];", "+\t\t\t\t\tint index = 0;", "+\t\t\t\t\tfor (int j = 0; j < numberOfParticipants; j++){", "+\t\t\t\t\t\tif (i == j) continue;", "+\t\t\t\t\t\textraEntries[index++] = JavaCore.newProjectEntry(projects[j].getPath());", "+\t\t\t\t\t}", "+\t\t\t\t\t// append project references\t\t\t", "+\t\t\t\t\tIClasspathEntry[] oldClasspath = projects[i].getRawClasspath();", "+\t\t\t\t\tIClasspathEntry[] newClasspath = new IClasspathEntry[oldClasspath.length+extraEntries.length];", "+\t\t\t\t\tSystem.arraycopy(oldClasspath, 0 , newClasspath, 0, oldClasspath.length);", "+\t\t\t\t\tfor (int j = 0; j < extraEntries.length; j++){", "+\t\t\t\t\t\tnewClasspath[oldClasspath.length+j] = extraEntries[j];", "+\t\t\t\t\t}\t\t\t", "+\t\t\t\t\t// set classpath", "+\t\t\t\t\tprojects[i].setRawClasspath(newClasspath, null);", "+\t\t\t\t};", "-\t\t\t// append project references\t\t\t", "-\t\t\tIClasspathEntry[] oldClasspath = projects[i].getRawClasspath();", "-\t\t\tIClasspathEntry[] newClasspath = new IClasspathEntry[oldClasspath.length+extraEntries.length];", "-\t\t\tSystem.arraycopy(oldClasspath, 0 , newClasspath, 0, oldClasspath.length);", "-\t\t\tfor (int j = 0; j < extraEntries.length; j++){", "-\t\t\t\tnewClasspath[oldClasspath.length+j] = extraEntries[j];", "-\t\t\t}\t\t\t", "-\t\t\t// set classpath", "-\t\t\tprojects[i].setRawClasspath(newClasspath, null);", "-\t\t};", "+\t\t}, ", "+\t\tnull);", "-\t\t//System.out.println(\"Dense cycle check (\"+numberOfParticipants+\" participants) : \"+ (System.currentTimeMillis()-start)+\" ms\");", "+\t\tSystem.out.println(\"Dense cycle check (\"+numberOfParticipants+\" participants) : \"+ (System.currentTimeMillis()-start)+\" ms\");"]}], "num": 55514}