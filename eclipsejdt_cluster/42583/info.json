{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1db7d5f2be4b6a2bcd19f54c2efcf6d8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11e70e0e87133e7ae57af6ef2950aef8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/typeutils/TypeUtilsProc.java", "commitBeforeChange": "ad990078bc71c5ba4377a1b73bf726012790eb02", "commitAfterChange": "0f0f429f6e99c185caa1aa35276658b05d44b90b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t@Override \tpublic boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)", "signatureAfterChange": " \t@Override \tpublic boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)", "diff": ["+\t\tif (!examineGetDeclaredTypeParameterized()) {", "+\t\t\treturn false;", "+\t\t}", "+", "+\t\tif (!examineGetDeclaredTypeNested()) {", "+\t\t\treturn false;", "+\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5595d64d0145babb83cc4784bb4d5b0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/elements/ElementProc.java", "commitBeforeChange": "324a534b3baa7412f36ded559b05fd1012caae2a", "commitAfterChange": "6189612c7867cb146b37cc778fa8ccb247e44019", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t@Override \tpublic boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)", "signatureAfterChange": " \t@Override \tpublic boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)", "diff": ["+\t\tif (!examineABModifiers()) {", "+\t\t\treturn false;", "+\t\t}", "+\t\t", "+\t\t\treturn false;", "+\t\t}", "+\t\t", "+\t\tif (!examineDEnum()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78ef9d02fcf69ce19d90d789c87d598e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/negative/NegativeModelProc.java", "commitBeforeChange": "4c2a905aadc81c8c888c5fc5a111e98f871b85f1", "commitAfterChange": "2837bd360df1c376bc39df62191694b92b14b919", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t@Override \tpublic boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)", "signatureAfterChange": " \t@Override \tpublic boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)", "diff": ["-\t\tif (!checkAnnotations()) {", "+\t\tif (testNegative1 && !checkNegative1()) {", "+\t\t\treturn false;", "+\t\t}", "+\t\t", "+\t\tif (testNegative2 && !checkNegative2()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b059e4da929738d62c3dc2e616d946c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "888ff915accf0f7dc08ba845bca467c94f1e290b", "commitAfterChange": "f69c200469412ca3b93e80844c6c1f4e077169ac", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "signatureAfterChange": " protected boolean buildStructure(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "diff": ["+ */", "+protected boolean buildStructure(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException {", "+\t", "+\t// check whether this pkg fragment root can be opened", "+\tif (!resourceExists() || !isOnClasspath()) {", "+\t\tthrow newNotPresentException();", "+\t}", "+", "+\t((PackageFragmentRootInfo) info).setRootKind(determineKind(underlyingResource));", "+\treturn computeChildren(info, newElements);", "+}", "- */", "-protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException {", "-\t", "-\t((PackageFragmentRootInfo) info).setRootKind(determineKind(underlyingResource));", "-\treturn computeChildren(info, newElements);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b273d8c83ff5b7f0e7c9e612ffce1824", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "4592203a9ca4f535a7eed609203c10be25594830", "commitAfterChange": "dd8acd32bb2cfc259d17de73e694d3edd149f2a2", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r \tpublic void select(\r \t\tICompilationUnit sourceUnit,\r \t\tint selectionSourceStart,\r \t\tint selectionSourceEnd)", "signatureAfterChange": "\r \tpublic void select(\r \t\tICompilationUnit sourceUnit,\r \t\tint selectionSourceStart,\r \t\tint selectionSourceEnd)", "diff": ["-\t\t\t\t\t\t\tif (!acceptedAnswer)\r", "-\t\t\t\t\t\t\t\tnameEnvironment.findTypes(selectedIdentifier, this);\r", "-\t\t\t\t\t\t\t// try with simple type name\r", "+\t\t\t\t\t\t\t// accept qualified types only if no unqualified type was accepted\r", "+\t\t\t\t\t\t\tif(!acceptedAnswer) {\r", "+\t\t\t\t\t\t\t\tacceptQualifiedTypes();\r", "+\t\t\t\t\t\t\t\tif (!acceptedAnswer) {\r", "+\t\t\t\t\t\t\t\t\tnameEnvironment.findTypes(selectedIdentifier, this);\r", "+\t\t\t\t\t\t\t\t\t// try with simple type name\r", "+\t\t\t\t\t\t\t\t\tif(!acceptedAnswer) {\r", "+\t\t\t\t\t\t\t\t\t\tacceptQualifiedTypes();\r", "+\t\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba4a31a50c8e4e5c83439b3fac090894", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/elementutils/ElementUtilsProc.java", "commitBeforeChange": "c7e13eb999aeeb70fd34b19df0f27a778109206c", "commitAfterChange": "ad2281f1520933e65d479408c685e1055d82a8b2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t@Override \tpublic boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)", "signatureAfterChange": " \t@Override \tpublic boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)", "diff": ["+\t\tif (!examineGetAllAnnotations()) {", "+\t\t\treturn false;", "+\t\t}", "+\t\t", "+\t\t\treturn false;", "+\t\t}", "+\t\t", "+\t\tif (!examineIsDeprecated()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0fc64747dbc71b12e8918a53d21cbb2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/elements/ElementProc.java", "commitBeforeChange": "635d51c73a886e470d16e7ebb8d1b4a9177433d4", "commitAfterChange": "cf0af9789637850aa518ab1064a8b714c5c05a24", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t@Override \tpublic boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)", "signatureAfterChange": " \t@Override \tpublic boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)", "diff": ["+\t\tif (!examineDMethods()) {", "+\t\t\treturn false;", "+\t\t}", "+\t\t", "+\t\t\treturn false;", "+\t\t}", "+\t\t", "+\t\tif (!examineDAnnotations()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdb2cb488c36514304182214a1877b38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/generics/GenericsProc.java", "commitBeforeChange": "1a085f6923332d813470a8d5ddda1ced463837b2", "commitAfterChange": "ed6404d1b00fb0c4d7b0edc065f94f5cf30ee47f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tpublic boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)", "signatureAfterChange": "  \t@Override \tpublic boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)", "diff": ["-\t\t", "-\t\t", "+\t\t\treturn false;", "+\t\t}", "+\t\tif (!examineATypeParams()) {", "+\t\t\treturn false;", "+\t\t}", "+\t\tif (!examineFTypeParams()) {"]}], "num": 42583}