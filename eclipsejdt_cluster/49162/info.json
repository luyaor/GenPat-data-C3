{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6c2fb8496885af52025d4bb91aac1918", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "420990ce401330043ccc5d9604cce44d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedSingleTypeReference.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds)", "diff": ["-\t\tresolveAnnotations(scope);", "-\t\tcheckNullConstraints(scope, this.typeArguments);", "+\t\t\tresolveAnnotations(scope);", "+\t\t\tcheckNullConstraints(scope, this.typeArguments);", "-\t\t\tif (!this.resolvedType.isValidBinding())", "+\t\t\tif (!this.resolvedType.isValidBinding()) {", "+\t\t\t\tresolveAnnotations(scope);", "+\t\t\t\tcheckNullConstraints(scope, this.typeArguments);", "-\t\t\telse ", "-\t\t\t\treturn this.resolvedType = type; \t// no complaint, keep fully resolved type (incl. dimensions)", "+\t\t\t} else {", "+\t\t\t\tthis.resolvedType = type; \t// no complaint, keep fully resolved type (incl. dimensions)", "+\t\t\t\tresolveAnnotations(scope);", "+\t\t\t\tcheckNullConstraints(scope, this.typeArguments);", "+\t\t\t\treturn this.resolvedType; // pick up any annotated type.", "+\t\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ed83929af0b9bc8fa83f8e361f983f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedSingleTypeReference.java", "commitBeforeChange": "64403fd65d31a81a4f6b6fa4041be90b6211a1af", "commitAfterChange": "fd9b6698a8cb6db1562d2c34edb06f9e6d2cd259", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds)", "diff": ["-\t\t\tif (!this.resolvedType.isValidBinding())", "+\t\t\tif (!this.resolvedType.isValidBinding() && this.resolvedType.dimensions() == type.dimensions())", "-\t\t\t\treturn this.resolvedType = type; \t// no complaint, keep fully resolved type (incl. dimensions)", "+\t\t\t\treturn this.resolvedType = type; \t// no complaint, or problem type is useless due to missing dimensions\"", "+\t\t\t\t\t\t\t\t\t\t\t\t\t// keep and return fully resolved type (incl. dimensions)"]}], "num": 49162}