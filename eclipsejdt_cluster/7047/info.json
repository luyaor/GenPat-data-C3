{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d3f1a9a4107db2118cdf504b6fd08a0f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65a4df239145d5f1acf3f4d988cf9542", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "364abd1fe47d562f576cb6b54a083094e0671f23", "commitAfterChange": "1b555425db41a9eb4fba300521a43b3ff494a42f", "methodNumberBeforeChange": 551, "methodNumberAfterChange": 551, "signatureBeforeChange": " public void contradictoryNullAnnotationsInferred(MethodBinding inferredMethod, InvocationSite location)", "signatureAfterChange": " public void contradictoryNullAnnotationsInferred(MethodBinding inferredMethod, int sourceStart, int sourceEnd, boolean isFunctionalExpression)", "diff": ["-public void contradictoryNullAnnotationsInferred(MethodBinding inferredMethod, InvocationSite location) {", "-\tcontradictoryNullAnnotationsInferred(inferredMethod, location.sourceStart(), location.sourceEnd());", "-}", "+public void contradictoryNullAnnotationsInferred(MethodBinding inferredMethod, int sourceStart, int sourceEnd, boolean isFunctionalExpression) {", "+\tthis.handle(", "+\t\t\tisFunctionalExpression ? IProblem.ContradictoryNullAnnotationsInferredFunctionType : IProblem.ContradictoryNullAnnotationsInferred, ", "+\t\t\targuments, shortArguments, sourceStart, sourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b2cdd2dc0516b41119406b58168e08e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/workspace/Converter/junit/swingui/CounterPanel.java", "commitBeforeChange": "5f14954289dcfe3aa64cd723a9ea9807dea33e05", "commitAfterChange": "4b4449dde49cdcaed9ae00d1ac057ecfeb8d8c23", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic CounterPanel()", "signatureAfterChange": "  \tpublic CounterPanel()", "diff": ["-\t", "+", "-\t\tsuper(new GridLayout(2, 3));\t", "-\t\tadd(new JLabel(\"Runs:\"));\t\t", "-\t\tadd(new JLabel(\"Errors:\"));\t", "-\t\tadd(new JLabel(\"Failures: \"));\t", "-\t\tfNumberOfErrors= createOutputField();", "-\t\tfNumberOfFailures= createOutputField();", "-\t\tfNumberOfRuns= createOutputField();", "-\t\tadd(fNumberOfRuns);", "-\t\tadd(fNumberOfErrors);", "-\t\tadd(fNumberOfFailures);", "-\t} ", "+\t\tsuper(new GridBagLayout());", "+\t\tfNumberOfErrors= createOutputField(5);", "+\t\tfNumberOfFailures= createOutputField(5);", "+\t\tfNumberOfRuns= createOutputField(9);", "+", "+      addToGrid(new JLabel(\"Runs:\", JLabel.CENTER),", "+          0, 0, 1, 1, 0.0, 0.0,", "+          GridBagConstraints.CENTER, GridBagConstraints.NONE,", "+          new Insets(0, 0, 0, 0));", "+     addToGrid(fNumberOfRuns,", "+          1, 0, 1, 1, 0.33, 0.0,", "+          GridBagConstraints.CENTER, GridBagConstraints.HORIZONTAL,", "+          new Insets(0, 8, 0, 0));", "+", "+     addToGrid(new JLabel(\"Errors:\", fErrorIcon, SwingConstants.LEFT),", "+          2, 0, 1, 1, 0.0, 0.0,", "+          GridBagConstraints.CENTER, GridBagConstraints.NONE,", "+          new Insets(0, 8, 0, 0));", "+      addToGrid(fNumberOfErrors,", "+          3, 0, 1, 1, 0.33, 0.0,", "+          GridBagConstraints.CENTER, GridBagConstraints.HORIZONTAL,", "+          new Insets(0, 8, 0, 0));", "+", "+      addToGrid(new JLabel(\"Failures:\", fFailureIcon, SwingConstants.LEFT),", "+          4, 0, 1, 1, 0.0, 0.0,", "+          GridBagConstraints.CENTER, GridBagConstraints.NONE,", "+          new Insets(0, 8, 0, 0));", "+      addToGrid(fNumberOfFailures,", "+          5, 0, 1, 1, 0.33, 0.0,", "+          GridBagConstraints.CENTER, GridBagConstraints.HORIZONTAL,", "+          new Insets(0, 8, 0, 0));", "+\t}"]}], "num": 7047}