{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "60315b542afd9e6dab768d1cfd5c49f4", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4731b27c0cf8bc33e521a8bdb4f060ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  \tpublic MethodBinding getConstructor(ReferenceBinding receiverType, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": "  \tpublic MethodBinding getConstructor(ReferenceBinding receiverType, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t\t\tMethodBinding[] methods = receiverType.getMethods(ConstructorDeclaration.ConstantPoolName);", "+\t\t\tMethodBinding[] methods = receiverType.getMethods(TypeConstants.INIT);", "-\t\t\t\t\tConstructorDeclaration.ConstantPoolName,", "+\t\t\t\t\tTypeConstants.INIT,", "-\t\t\t\t\treturn new ProblemMethodBinding(ConstructorDeclaration.ConstantPoolName, argumentTypes, NotFound);", "+\t\t\t\t\treturn new ProblemMethodBinding(TypeConstants.INIT, argumentTypes, NotFound);", "-\t\t\t\t\tConstructorDeclaration.ConstantPoolName,", "+\t\t\t\t\tTypeConstants.INIT,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b41d464d6912075c1fad4a2e2f4b1bf8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 173, "methodNumberAfterChange": 174, "signatureBeforeChange": "\t public void invalidConstructor(Statement statement, MethodBinding targetConstructor)", "signatureAfterChange": " public void invalidConstructor(Statement statement, MethodBinding targetConstructor)", "diff": ["-}\t", "+}", "+\t\t\tProblemMethodBinding problemConstructor = (ProblemMethodBinding) targetConstructor;", "+\t\t\tif (problemConstructor.closestMatch != null) {", "+\t\t    \tif ((problemConstructor.closestMatch.tagBits & TagBits.HasMissingType) != 0) {", "+\t\t\t\t\tthis.missingTypeInConstructor(statement, problemConstructor.closestMatch);", "+\t\t\t\t\treturn;", "+\t\t    \t}", "+\t\t    }\t\t\t\t", "+\t\t\t", "-\t\t\tProblemMethodBinding problemConstructor = (ProblemMethodBinding) targetConstructor;", "+\t\t\tproblemConstructor = (ProblemMethodBinding) targetConstructor;"]}], "num": 17147}