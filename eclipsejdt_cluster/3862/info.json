{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "af27367488b73b301aba094dfbfa4477", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25c55e1028be024aeef437c0c09fe29a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprivate void checkAndSetModifiersForField(FieldBinding fieldBinding, FieldDeclaration fieldDecl)", "signatureAfterChange": " \tprivate void checkAndSetModifiersForField(FieldBinding fieldBinding, FieldDeclaration fieldDecl)", "diff": ["-\t\tif ((modifiers & AccAlternateModifierProblem) != 0)", "+\t\tif ((modifiers & ExtraCompilerModifiers.AccAlternateModifierProblem) != 0)", "-\t\t\tint expectedValue = AccPublic | AccStatic | AccFinal;", "+\t\t\tint expectedValue = ClassFileConstants.AccPublic | ClassFileConstants.AccStatic | ClassFileConstants.AccFinal;", "-\t\t\tif ((modifiers & AccJustFlag) != expectedValue) {", "-\t\t\t\tif ((declaringClass.modifiers  & AccAnnotation) != 0)", "+\t\t\tif ((modifiers & ExtraCompilerModifiers.AccJustFlag) != expectedValue) {", "+\t\t\t\tif ((declaringClass.modifiers  & ClassFileConstants.AccAnnotation) != 0)", "-\t\t\tif ((modifiers & AccJustFlag) != 0)", "+\t\t\tif ((modifiers & ExtraCompilerModifiers.AccJustFlag) != 0)", "-\t\t\tint implicitValue = AccPublic | AccStatic | AccFinal | AccEnum;", "+\t\t\tint implicitValue = ClassFileConstants.AccPublic | ClassFileConstants.AccStatic | ClassFileConstants.AccFinal | ClassFileConstants.AccEnum;", "-\t\t\t\tdeclaringClass.modifiers &= ~AccFinal;", "+\t\t\t\tdeclaringClass.modifiers &= ~ClassFileConstants.AccFinal;", "-\t\tint realModifiers = modifiers & AccJustFlag;", "-\t\tint unexpectedModifiers = ~(AccPublic | AccPrivate | AccProtected | AccFinal | AccStatic | AccTransient | AccVolatile);", "+\t\tint realModifiers = modifiers & ExtraCompilerModifiers.AccJustFlag;", "+\t\tint unexpectedModifiers = ~(ClassFileConstants.AccPublic | ClassFileConstants.AccPrivate | ClassFileConstants.AccProtected | ClassFileConstants.AccFinal | ClassFileConstants.AccStatic | ClassFileConstants.AccTransient | ClassFileConstants.AccVolatile);", "-\t\t\tmodifiers &= ~AccJustFlag | ~unexpectedModifiers;", "+\t\t\tmodifiers &= ~ExtraCompilerModifiers.AccJustFlag | ~unexpectedModifiers;", "-\t\tint accessorBits = realModifiers & (AccPublic | AccProtected | AccPrivate);", "+\t\tint accessorBits = realModifiers & (ClassFileConstants.AccPublic | ClassFileConstants.AccProtected | ClassFileConstants.AccPrivate);", "-\t\t\tif ((accessorBits & AccPublic) != 0) {", "-\t\t\t\tif ((accessorBits & AccProtected) != 0)", "-\t\t\t\t\tmodifiers &= ~AccProtected;", "-\t\t\t\tif ((accessorBits & AccPrivate) != 0)", "-\t\t\t\t\tmodifiers &= ~AccPrivate;", "-\t\t\t} else if ((accessorBits & AccProtected) != 0 && (accessorBits & AccPrivate) != 0) {", "-\t\t\t\tmodifiers &= ~AccPrivate;", "+\t\t\tif ((accessorBits & ClassFileConstants.AccPublic) != 0) {", "+\t\t\t\tif ((accessorBits & ClassFileConstants.AccProtected) != 0)", "+\t\t\t\t\tmodifiers &= ~ClassFileConstants.AccProtected;", "+\t\t\t\tif ((accessorBits & ClassFileConstants.AccPrivate) != 0)", "+\t\t\t\t\tmodifiers &= ~ClassFileConstants.AccPrivate;", "+\t\t\t} else if ((accessorBits & ClassFileConstants.AccProtected) != 0 && (accessorBits & ClassFileConstants.AccPrivate) != 0) {", "+\t\t\t\tmodifiers &= ~ClassFileConstants.AccPrivate;", "-\t\tif ((realModifiers & (AccFinal | AccVolatile)) == (AccFinal | AccVolatile))", "+\t\tif ((realModifiers & (ClassFileConstants.AccFinal | ClassFileConstants.AccVolatile)) == (ClassFileConstants.AccFinal | ClassFileConstants.AccVolatile))", "-\t\tif (fieldDecl.initialization == null && (modifiers & AccFinal) != 0)", "-\t\t\tmodifiers |= AccBlankFinal;", "+\t\tif (fieldDecl.initialization == null && (modifiers & ClassFileConstants.AccFinal) != 0)", "+\t\t\tmodifiers |= ExtraCompilerModifiers.AccBlankFinal;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d556f1d3793568f7aef48b2c868d201", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodScope.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate void checkAndSetModifiersForConstructor(MethodBinding methodBinding)", "signatureAfterChange": " \tprivate void checkAndSetModifiersForConstructor(MethodBinding methodBinding)", "diff": ["-\t\tif ((modifiers & AccAlternateModifierProblem) != 0)", "+\t\tif ((modifiers & ExtraCompilerModifiers.AccAlternateModifierProblem) != 0)", "-\t\t\t\tmodifiers = AccPrivate;", "+\t\t\t\tmodifiers = ClassFileConstants.AccPrivate;", "-\t\t\t\tmodifiers |= AccPublic;", "+\t\t\t\tmodifiers |= ClassFileConstants.AccPublic;", "-\t\t\t\tmodifiers |= AccProtected;", "+\t\t\t\tmodifiers |= ClassFileConstants.AccProtected;", "-\t\tint realModifiers = modifiers & AccJustFlag;", "+\t\tint realModifiers = modifiers & ExtraCompilerModifiers.AccJustFlag;", "-\t\tint unexpectedModifiers = ~(AccPublic | AccPrivate | AccProtected | AccStrictfp);", "+\t\tint unexpectedModifiers = ~(ClassFileConstants.AccPublic | ClassFileConstants.AccPrivate | ClassFileConstants.AccProtected | ClassFileConstants.AccStrictfp);", "-\t\t\tunexpectedModifiers = ~(AccPrivate | AccStrictfp);", "+\t\t\tunexpectedModifiers = ~(ClassFileConstants.AccPrivate | ClassFileConstants.AccStrictfp);", "-\t\t\t\tmodifiers &= ~AccJustFlag | ~unexpectedModifiers;", "-\t\t\t} else if ((((AbstractMethodDeclaration) referenceContext).modifiers & AccStrictfp) != 0) {", "+\t\t\t\tmodifiers &= ~ExtraCompilerModifiers.AccJustFlag | ~unexpectedModifiers;", "+\t\t\t} else if ((((AbstractMethodDeclaration) referenceContext).modifiers & ClassFileConstants.AccStrictfp) != 0) {", "-\t\t\tmodifiers |= AccPrivate; // enum constructor is implicitly private", "+\t\t\tmodifiers |= ClassFileConstants.AccPrivate; // enum constructor is implicitly private", "-\t\t\tmodifiers &= ~AccJustFlag | ~unexpectedModifiers;", "-\t\t} else if ((((AbstractMethodDeclaration) referenceContext).modifiers & AccStrictfp) != 0) {", "+\t\t\tmodifiers &= ~ExtraCompilerModifiers.AccJustFlag | ~unexpectedModifiers;", "+\t\t} else if ((((AbstractMethodDeclaration) referenceContext).modifiers & ClassFileConstants.AccStrictfp) != 0) {", "-\t\tint accessorBits = realModifiers & (AccPublic | AccProtected | AccPrivate);", "+\t\tint accessorBits = realModifiers & (ClassFileConstants.AccPublic | ClassFileConstants.AccProtected | ClassFileConstants.AccPrivate);", "-\t\t\tif ((accessorBits & AccPublic) != 0) {", "-\t\t\t\tif ((accessorBits & AccProtected) != 0)", "-\t\t\t\t\tmodifiers &= ~AccProtected;", "-\t\t\t\tif ((accessorBits & AccPrivate) != 0)", "-\t\t\t\t\tmodifiers &= ~AccPrivate;", "-\t\t\t} else if ((accessorBits & AccProtected) != 0 && (accessorBits & AccPrivate) != 0) {", "-\t\t\t\tmodifiers &= ~AccPrivate;", "+\t\t\tif ((accessorBits & ClassFileConstants.AccPublic) != 0) {", "+\t\t\t\tif ((accessorBits & ClassFileConstants.AccProtected) != 0)", "+\t\t\t\t\tmodifiers &= ~ClassFileConstants.AccProtected;", "+\t\t\t\tif ((accessorBits & ClassFileConstants.AccPrivate) != 0)", "+\t\t\t\t\tmodifiers &= ~ClassFileConstants.AccPrivate;", "+\t\t\t} else if ((accessorBits & ClassFileConstants.AccProtected) != 0 && (accessorBits & ClassFileConstants.AccPrivate) != 0) {", "+\t\t\t\tmodifiers &= ~ClassFileConstants.AccPrivate;", "-\t\tif (declaringClass.isPrivate() && (modifiers & AccPrivate) != 0)", "-\t\t\tmodifiers &= ~AccPrivate;", "+\t\tif (declaringClass.isPrivate() && (modifiers & ClassFileConstants.AccPrivate) != 0)", "+\t\t\tmodifiers &= ~ClassFileConstants.AccPrivate;"]}], "num": 3862}