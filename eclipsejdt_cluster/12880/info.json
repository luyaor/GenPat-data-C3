{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a3f195fc9fb5160fed83c3bb69db407a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7402db869629bdbdfd3d1b5863d07b06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/ClasspathJar.java", "commitBeforeChange": "71ca7b096c04e123348cb13b19efbd2de402f9f2", "commitAfterChange": "6872e25fe154a5852fcd3ac0c49b686e5e81ec7b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \t\r \tpublic boolean isPackage(char[][] compoundName, char[] packageName)", "signatureAfterChange": "\r public boolean isPackage(String qualifiedPackageName)", "diff": ["+}\r", "+public boolean isPackage(String qualifiedPackageName) {\r", "+\tif (packageCache != null)\r", "+\t\treturn packageCache.containsKey(qualifiedPackageName);\r", "+\r", "+\tthis.packageCache = new Hashtable(41);\r", "+\tpackageCache.put(\"\", \"\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\r", "+\tnextEntry : for (Enumeration e = zipFile.entries(); e.hasMoreElements(); ) {\r", "+\t\tString fileName = ((ZipEntry) e.nextElement()).getName();\r", "+\r", "+\t\t// add the package name & all of its parent packages\r", "+\t\tint last = fileName.lastIndexOf('/');\r", "+\t\twhile (last > 0) {\r", "+\t\t\tString packageName = fileName.substring(0, last);\r", "+\t\t\tif (packageCache.containsKey(packageName))\r", "+\t\t\t\tcontinue nextEntry;\r", "+\t\t\tpackageCache.put(packageName, packageName);\r", "+\t\t\tlast = packageName.lastIndexOf('/');\r", "+\treturn packageCache.containsKey(qualifiedPackageName);\r", "+}\r", "-\t\r", "-\tpublic boolean isPackage(char[][] compoundName, char[] packageName) {\r", "-\t\t\r", "-\t\treturn directoryCache.get(\r", "-\t\t\tFileSystem.assembleName(packageName, compoundName, '/'))\r", "-\t\t\t!= null;\r", "-\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79e5cb2eeb60c57a5f4eebe0bf4819e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/ClasspathJar.java", "commitBeforeChange": "26246adf380e69c31de951eed4c0173edaa96dd1", "commitAfterChange": "2c076bc353a2d83c198fbf8764d9fb723677890e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \t\r \tpublic boolean isPackage(char[][] compoundName, char[] packageName)", "signatureAfterChange": "\r public boolean isPackage(String qualifiedPackageName)", "diff": ["+}\r", "+public boolean isPackage(String qualifiedPackageName) {\r", "+\tif (packageCache != null)\r", "+\t\treturn packageCache.containsKey(qualifiedPackageName);\r", "+\r", "+\tthis.packageCache = new Hashtable(41);\r", "+\tpackageCache.put(\"\", \"\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\r", "+\tnextEntry : for (Enumeration e = zipFile.entries(); e.hasMoreElements(); ) {\r", "+\t\tString fileName = ((ZipEntry) e.nextElement()).getName();\r", "+\r", "+\t\t// add the package name & all of its parent packages\r", "+\t\tint last = fileName.lastIndexOf('/');\r", "+\t\twhile (last > 0) {\r", "+\t\t\tString packageName = fileName.substring(0, last);\r", "+\t\t\tif (packageCache.containsKey(packageName))\r", "+\t\t\t\tcontinue nextEntry;\r", "+\t\t\tpackageCache.put(packageName, packageName);\r", "+\t\t\tlast = packageName.lastIndexOf('/');\r", "+\treturn packageCache.containsKey(qualifiedPackageName);\r", "+}\r", "-\t\r", "-\tpublic boolean isPackage(char[][] compoundName, char[] packageName) {\r", "-\t\t\r", "-\t\treturn directoryCache.get(\r", "-\t\t\tFileSystem.assembleName(packageName, compoundName, '/'))\r", "-\t\t\t!= null;\r", "-\t}\r"]}], "num": 12880}