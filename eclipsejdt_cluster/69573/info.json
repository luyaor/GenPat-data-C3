{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "502ee354bee61f28bd1a3f7d2fff88a6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f09c1e963e293569f31f93c88f030b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "765aefb641ece984e8e3a8e814e66c7ff75e2a4d", "commitAfterChange": "87bc3aca5276736813fdee6191f13f0834fba9c7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  protected IProject[] build(int kind, Map ignored, IProgressMonitor monitor) throws CoreException", "signatureAfterChange": "  protected IProject[] build(int kind, Map ignored, IProgressMonitor monitor) throws CoreException", "diff": ["+\t\tmarker.setAttribute(IMarker.GENERATED_BY, JavaBuilder.GENERATED_BY);", "+\t\tmarker.setAttribute(IMarker.GENERATED_BY, JavaBuilder.GENERATED_BY);", "+\t\tmarker.setAttribute(IMarker.GENERATED_BY, JavaBuilder.GENERATED_BY);", "+\t\tmarker.setAttribute(IMarker.GENERATED_BY, JavaBuilder.GENERATED_BY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40332b40cb3016189bd464bbfa3e58a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceTests.java", "commitBeforeChange": "87b777c1fc477e9b3f12a1e072f005600f998f84", "commitAfterChange": "f66fb438b9cc0be7e04e5e7cd4ac6af72beb4f11", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tprotected Hashtable warningOptions(int kind)", "signatureAfterChange": " \tprotected Hashtable warningOptions(int kind)", "diff": ["+\t\t// Ignore 3.2 options", "+\t\toptionsMap.put(CompilerOptions.OPTION_ReportUnusedLabel, CompilerOptions.IGNORE); ", "+", "+\t\t// Set compliance", "+\t\tString compliance= compliance();", "+\t\tif (compliance != null) {", "+\t\t\toptionsMap.put(CompilerOptions.OPTION_Compliance, compliance);", "+\t\t\toptionsMap.put(CompilerOptions.OPTION_Source, compliance);", "+\t\t\toptionsMap.put(CompilerOptions.OPTION_TargetPlatform, compliance);", "+\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "483671237d4f3d0308a0f3f74419b8e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_3.java", "commitBeforeChange": "baba91778491837a84be9560b81c83086d98c36e", "commitAfterChange": "57b083b793c3b8c2d5620895f00ff1c58e226e44", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected Map getCompilerOptions()", "signatureAfterChange": " protected Map getCompilerOptions()", "diff": ["+\toptions.put(CompilerOptions.OPTION_ReportRawTypeReference, CompilerOptions.IGNORE);", "+\toptions.put(CompilerOptions.OPTION_ReportUnusedLocal, CompilerOptions.IGNORE);", "+\toptions.put(CompilerOptions.OPTION_ReportUnusedParameter, CompilerOptions.IGNORE);", "+\toptions.put(CompilerOptions.OPTION_ReportUnusedPrivateMember, CompilerOptions.IGNORE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4ba6ac6b5d1dd9ad67962bbbd84cd7a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_5.java", "commitBeforeChange": "baba91778491837a84be9560b81c83086d98c36e", "commitAfterChange": "57b083b793c3b8c2d5620895f00ff1c58e226e44", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected Map getCompilerOptions()", "signatureAfterChange": " protected Map getCompilerOptions()", "diff": ["+\toptions.put(CompilerOptions.OPTION_ReportRawTypeReference, CompilerOptions.IGNORE);", "+\toptions.put(CompilerOptions.OPTION_ReportUnusedLocal, CompilerOptions.IGNORE);", "+\toptions.put(CompilerOptions.OPTION_ReportUnusedParameter, CompilerOptions.IGNORE);", "+\toptions.put(CompilerOptions.OPTION_ReportUnusedPrivateMember, CompilerOptions.IGNORE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d774f512abaf914c83ace0d1b2ba0c08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "6d042411635c9e25293983b11bee41453609391b", "commitAfterChange": "bc230c9a2037f7f2692d1240a37dc4d689016229", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["+\t\t\t\t\t\toptions.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportDeprecationInsideDeprecatedCode, ", "+\t\t\t\t\t\t\tCompilerOptions.DISABLED);", "+\t\t\t\t\t} else if (token.equals(\"allDeprecation\")) { //$NON-NLS-1$", "+\t\t\t\t\t\toptions.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportDeprecation, ", "+\t\t\t\t\t\t\tCompilerOptions.WARNING);", "+\t\t\t\t\t\toptions.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportDeprecationInsideDeprecatedCode, ", "+\t\t\t\t\t\t\tCompilerOptions.ENABLED);"]}], "num": 69573}