{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c18ea5826dba3d1f85f26f580056a77e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e585d638a2071e491193e1f0d31572b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateCompilationUnitOperation.java", "commitBeforeChange": "eba1b2d8628458befc75c296c3c46577733d25b5", "commitAfterChange": "307bd23008332fd8b3a6f2a1ed42ab1b2a056046", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r protected void executeOperation() throws JavaModelException", "signatureAfterChange": "\r protected void executeOperation() throws JavaModelException", "diff": ["-\tInputStream stream = new ByteArrayInputStream(BufferManager.stringToBytes(fSource));\r", "-\tcreateFile(folder, unit.getElementName(), stream, fForce);\r", "-\tworked(1);\r", "-\tfResultElements = new IJavaElement[] {unit};\r", "-\tif (unit.getParent().exists()) {\r", "-\t\tfor (int i = 0; i < fResultElements.length; i++) {\r", "-\t\t\tdelta.added(fResultElements[i]);\r", "+\tIFile compilationUnitFile = folder.getFile(new Path(fName));\r", "+\tif (compilationUnitFile.exists()) {\r", "+\t\t// update the contents of the existing unit if fForce is true\r", "+\t\tif (fForce) {\r", "+\t\t\tunit.getBuffer().setContents(fSource);\r", "+\t\t\tunit.save(new NullProgressMonitor(), false);\r", "+\t\t\tfResultElements = new IJavaElement[] {unit};\r", "+\t\t\tif (unit.getParent().exists()) {\r", "+\t\t\t\tfor (int i = 0; i < fResultElements.length; i++) {\r", "+\t\t\t\t\tdelta.changed(fResultElements[i], IJavaElementDelta.F_CONTENT);\r", "+\t\t\t\t}\r", "+\t\t\t\taddDelta(delta);\r", "+\t\t\t}\r", "+\t\t} else {\r", "+\t\t\tthrow new JavaModelException(new JavaModelStatus(IJavaModelStatusConstants.NAME_COLLISION));\r", "-\t\taddDelta(delta);\r", "-\t} // else unit is created outside classpath\r", "-\t  // non-java resource delta will be notified by delta processor\r", "+\t} else {\r", "+\t\tInputStream stream = new ByteArrayInputStream(BufferManager.stringToBytes(fSource));\r", "+\t\tcreateFile(folder, unit.getElementName(), stream, false);\r", "+\t\tfResultElements = new IJavaElement[] {unit};\r", "+\t\tif (unit.getParent().exists()) {\r", "+\t\t\tfor (int i = 0; i < fResultElements.length; i++) {\r", "+\t\t\t\tdelta.added(fResultElements[i]);\r", "+\t\t\t}\r", "+\t\t\taddDelta(delta);\r", "+\t\t}\r", "+\t} \r", "+\tworked(1);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc1a5e5ebbd79aece5cfd438ce1b68e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/Util.java", "commitBeforeChange": "b54cdabe5a10342de9a42176e8c205b30ff48884", "commitAfterChange": "90abc6886041c7118f77692a32b3bc09eb1c2c58", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public static String[] getJavaClassLibs()", "signatureAfterChange": " public static String[] getJavaClassLibs()", "diff": ["+\tif (\"DRLVM\".equals(vmName)) {", "+\t\tFilenameFilter jarFilter = new FilenameFilter() {", "+\t\t\tpublic boolean accept(File dir, String name) {", "+\t\t\t\treturn name.endsWith(\".jar\") & !name.endsWith(\"-src.jar\");", "+\t\t\t}", "+\t\t};", "+\t\tString[] jars = new File(jreDir + \"/lib/boot/\").list(jarFilter);", "+\t\tfor (int i = 0; i < jars.length; i++) {", "+\t\t\tjars[i] = toNativePath(jreDir + \"/lib/boot/\" + jars[i]);", "+\t\t}", "+\t\treturn jars;", "+\t}"]}], "num": 31071}