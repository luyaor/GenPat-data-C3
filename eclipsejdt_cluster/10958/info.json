{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e189802167e8a2e7507075db03e53051", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c561c027693cb938e47f0bdaa0e0049", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "5f4e9c737df9b212364b9e892d0039c92ce2476a", "commitAfterChange": "3a2d8fc091b6c143de1eaab0e407d9046bc0425f", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "\r void setOption(ConfigurableOption setting)", "signatureAfterChange": "\r void setOption(ConfigurableOption setting)", "diff": ["-\tif(optionID.equals(componentName + \".debugLocalVariable\"/*nonNLS*/)){\r", "+\tif(optionID.equals(OPTION_LocalVariableAttribute)){\r", "-\t} else if(optionID.equals(componentName + \".debugLineNumber\"/*nonNLS*/)) {\r", "+\t} else if(optionID.equals(OPTION_LineNumberAttribute)) {\r", "-\t}else if(optionID.equals(componentName + \".debugSourceFile\"/*nonNLS*/)) {\r", "+\t}else if(optionID.equals(OPTION_SourceFileAttribute)) {\r", "-\t}else if(optionID.equals(componentName + \".codegenUnusedLocal\"/*nonNLS*/)){\r", "+\t}else if(optionID.equals(OPTION_PreserveUnusedLocal)){\r", "-\t}else if(optionID.equals(componentName + \".problemUnreachableCode\"/*nonNLS*/)){\r", "+\t}else if(optionID.equals(OPTION_ReportUnreachableCode)){\r", "-\t\t\tcase 2 :\r", "+\t\t\tcase 2 : \r", "-\t}else if(optionID.equals(componentName + \".problemInvalidImport\"/*nonNLS*/)){\r", "+\t}else if(optionID.equals(OPTION_ReportInvalidImport)){\r", "-\t}else if(optionID.equals(componentName + \".codegenTargetPlatform\"/*nonNLS*/)){\r", "+\t}else if(optionID.equals(OPTION_TargetPlatform)){\r", "-\t}else if(optionID.equals(componentName + \".problemMethodWithConstructorName\"/*nonNLS*/)){\r", "+\t}else if(optionID.equals(OPTION_ReportMethodWithConstructorName)){\r", "-\t}else if(optionID.equals(componentName + \".problemOverridingPackageDefaultMethod\"/*nonNLS*/)){\r", "+\t}else if(optionID.equals(OPTION_ReportOverridingPackageDefaultMethod)){\r", "-\t}else if(optionID.equals(componentName + \".problemDeprecation\"/*nonNLS*/)){\r", "+\t}else if(optionID.equals(OPTION_ReportDeprecation)){\r", "-\t}else if(optionID.equals(componentName + \".problemHiddenCatchBlock\"/*nonNLS*/)){\r", "+\t}else if(optionID.equals(OPTION_ReportHiddenCatchBlock)){\r", "-\t}else if(optionID.equals(componentName + \".problemUnusedLocal\"/*nonNLS*/)){\r", "+\t}else if(optionID.equals(OPTION_ReportUnusedLocal)){\r", "-\t}else if(optionID.equals(componentName + \".problemUnusedParameter\"/*nonNLS*/)){\r", "+\t}else if(optionID.equals(OPTION_ReportUnusedParameter)){\r", "-\t}else if(optionID.equals(componentName + \".problemSyntheticAccessEmulation\"/*nonNLS*/)){\r", "+\t}else if(optionID.equals(OPTION_ReportSyntheticAccessEmulation)){\r", "-\t}else if(optionID.equals(componentName + \".problemNonExternalizedStringLiteral\"/*nonNLS*/)){\r", "+\t}else if(optionID.equals(OPTION_ReportNonExternalizedStringLiteral)){\r", "-\t}else if(optionID.equals(componentName + \".problemAssertIdentifier\"/*nonNLS*/)){\r", "+\t}else if(optionID.equals(OPTION_ReportAssertIdentifier)){\r", "-\t}else if(optionID.equals(componentName + \".source\"/*nonNLS*/)){\r", "+\t}else if(optionID.equals(OPTION_Source)){\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fba7e66e7118f4c51944fd9ad18148ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/impl/FormatterOptions.java", "commitBeforeChange": "2fa8bdc58397f8ba42986ed8442348506f4b1424", "commitAfterChange": "f0c87cd93521c02e8dcc20da91d9eeb9be1b3608", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 20, "signatureBeforeChange": "\r public ConfigurableOption[] getConfigurableOptions(Locale locale)", "signatureAfterChange": "\r public void setOption(ConfigurableOption setting)", "diff": ["- */\r", "-public ConfigurableOption[] getConfigurableOptions(Locale locale) {\r", "-\tString componentName = CodeFormatter.class.getName();\r", "-\treturn new ConfigurableOption[] {\r", "-\t\tnew ConfigurableOption(componentName, \"newline.openingBrace\"/*nonNLS*/,  locale, newLineBeforeOpeningBraceMode ? 0 : 1),\r", "-\t\tnew ConfigurableOption(componentName, \"newline.controlStatement\"/*nonNLS*/,  locale, newlineInControlStatementMode ? 0 : 1),\r", "-\t\tnew ConfigurableOption(componentName, \"newline.clearAll\"/*nonNLS*/,  locale, clearAllBlankLinesMode ? 0 : 1),\r", "-\t\tnew ConfigurableOption(componentName, \"newline.elseIf\"/*nonNLS*/,  locale, compactElseIfMode ? 0 : 1),\r", "-\t\tnew ConfigurableOption(componentName, \"newline.emptyBlock\"/*nonNLS*/,  locale, newLineInEmptyBlockMode ? 0 : 1),\r", "-\t\tnew ConfigurableOption(componentName, \"line.split\"/*nonNLS*/,  locale, maxLineLength),\r", "-\t\tnew ConfigurableOption(componentName, \"style.compactAssignment\"/*nonNLS*/,  locale, compactAssignmentMode ? 0 : 1),\r", "-\t\tnew ConfigurableOption(componentName, \"tabulation.char\"/*nonNLS*/,  locale, indentWithTab ? 0 : 1),\r", "-\t\tnew ConfigurableOption(componentName, \"tabulation.size\"/*nonNLS*/,  locale, tabSize)\t\r", "-\t};\r", "-}\r", "+\tString componentName = CodeFormatter.class.getName();\r", "+\t\r", "+\tString optionID = setting.getID();\r", "+\t//String value = setting.getValue();\r", "+\t\r", "+\tif(optionID.equals(componentName+\".newlineOpeningBrace\"/*nonNLS*/)){\r", "+\t\tsetNewLineBeforeOpeningBraceMode(setting.getValueIndex() == 0);\r", "+\t}else if(optionID.equals(componentName+\".newlineControlStatement\"/*nonNLS*/)){\r", "+\t\tsetNewlineInControlStatementMode(setting.getValueIndex() == 0);\r", "+\t}else if(optionID.equals(componentName+\".newlineClearAll\"/*nonNLS*/)){\r", "+\t\tsetClearAllBlankLinesMode(setting.getValueIndex() == 0);\r", "+\t}else if(optionID.equals(componentName+\".newlineElseIf\"/*nonNLS*/)){\r", "+\t\tsetCompactElseIfMode(setting.getValueIndex() == 0);\r", "+\t}else if(optionID.equals(componentName+\".newlineEmptyBlock\"/*nonNLS*/)){\r", "+\t\tsetNewLineInEmptyBlockMode(setting.getValueIndex() == 0);\r", "+\t}else if(optionID.equals(componentName+\".lineSplit\"/*nonNLS*/)){\r", "+\t\tsetMaxLineLength(Integer.parseInt(setting.getValue()));\r", "+\t}else if(optionID.equals(componentName+\".styleCompactAssignment\"/*nonNLS*/)){\r", "+\t\tsetCompactAssignmentMode(setting.getValueIndex() == 0);\r", "+\t}else if(optionID.equals(componentName+\".tabulationChar\"/*nonNLS*/)){\r", "+\t\tsetIndentationUsesTab(setting.getValueIndex() == 0);\r", "+\t}else if(optionID.equals(componentName+\".tabulationSize\"/*nonNLS*/)){\r", "+\t\tsetTabSize(Integer.parseInt(setting.getValue()));\r"]}], "num": 10958}