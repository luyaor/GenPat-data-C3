{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aa69d636e8c4c3742e1130d4a64beb17", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "956b2d7637bcb0a87d140f5586af3d8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/BinaryIndexer.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprivate char[][] decodeParameterTypes(char[] signature) throws ClassFormatException", "signatureAfterChange": " \tprivate char[][] decodeParameterTypes(char[] signature, boolean firstIsSynthetic) throws ClassFormatException", "diff": ["-\tprivate char[][] decodeParameterTypes(char[] signature) throws ClassFormatException {", "+\tprivate char[][] decodeParameterTypes(char[] signature, boolean firstIsSynthetic) throws ClassFormatException {", "-\t\t\t\t\tparameterTypes[parameterTypesCounter++] = replace('/','.',CharOperation.subarray(signature, i + 1, indexOfSemiColon));", "-\t\t\t\t\tif (arrayDim > 0)", "-\t\t\t\t\t\tconvertToArrayType(parameterTypes, parameterTypesCounter-1, arrayDim);", "+\t\t\t\t\tif (firstIsSynthetic && parameterTypesCounter == 0) {", "+\t\t\t\t\t\t// skip first synthetic parameter", "+\t\t\t\t\t\tfirstIsSynthetic = false;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tparameterTypes[parameterTypesCounter++] = replace('/','.',CharOperation.subarray(signature, i + 1, indexOfSemiColon));", "+\t\t\t\t\t\tif (arrayDim > 0)", "+\t\t\t\t\t\t\tconvertToArrayType(parameterTypes, parameterTypesCounter-1, arrayDim);", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aef7b61e5444eb34ee6dbadf2b80c411", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/BinaryIndexer.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprivate int extractArgCount(char[] signature) throws ClassFormatException", "signatureAfterChange": " \tprivate int extractArgCount(char[] signature, char[] className) throws ClassFormatException", "diff": ["-\tprivate int extractArgCount(char[] signature) throws ClassFormatException {", "+\tprivate int extractArgCount(char[] signature, char[] className) throws ClassFormatException {", "-\t\t\t\t\tparameterTypesCounter++;", "+\t\t\t\t\t// verify if first parameter is synthetic", "+\t\t\t\t\tif (className != null && parameterTypesCounter == 0) {", "+\t\t\t\t\t\tchar[] classSignature = Signature.createCharArrayTypeSignature(className, true);", "+\t\t\t\t\t\tint length = indexOfSemiColon-i+1;", "+\t\t\t\t\t\tif (classSignature.length > (length+1)) {", "+\t\t\t\t\t\t\t// synthetic means that parameter type has same signature than given class", "+\t\t\t\t\t\t\tfor (int j=i, k=0; j<indexOfSemiColon; j++, k++) {", "+\t\t\t\t\t\t\t\tif (signature[j] != classSignature[k]) {", "+\t\t\t\t\t\t\t\t\tparameterTypesCounter++;", "+\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tparameterTypesCounter++;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tclassName = null; // do not verify following parameters", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tparameterTypesCounter++;", "+\t\t\t\t\t}"]}], "num": 52789}