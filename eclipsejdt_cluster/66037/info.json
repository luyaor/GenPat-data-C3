{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5986930c43361ea1f20307a413e64ff3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15e33875084e8427a23490bba53b1658", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericsRegressionTest_1_8.java", "commitBeforeChange": "3256aef43e2296affdbf86e21f8cafdaa866161a", "commitAfterChange": "f357f309273e0bfe8345ff708d18fa83c6a34931", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " public void testBug424930c()", "signatureAfterChange": " public void testBug424930c()", "diff": ["+\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"The constructor X<S,Deque<S>>(() -> {}) is undefined\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 14)\\n\" + ", "+\t\t\"\treturn new X<>(() -> new ArrayDeque<>(dequeCapacity));\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "782580964b6ffb94d3a259810a7b89c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeTypeAnnotationTest.java", "commitBeforeChange": "62a40ae820eb3f4d9fe13acbfcd6c17882e53721", "commitAfterChange": "6e5d8fb1fa59c43c60c58828e1e292aaafa3465f", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "\r \tpublic void test066() throws Exception", "signatureAfterChange": "\r \tpublic void test066() throws Exception", "diff": ["+\t\t\t\t\"\t                                ^^^^^^^\\n\" + \r", "+\t\t\t\t\"Annotation types that do not specify explicit target element types cannot be applied here\\n\" + \r", "+\t\t\t\t\"----------\\n\" + \r", "+\t\t\t\t\"2. ERROR in X.java (at line 2)\\n\" + \r", "+\t\t\t\t\"\tObject o = new X().new <String> @Marker X();\\n\" + \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f37cbec17f785324e6d7e4d9c71e818", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ExpressionContextTests.java", "commitBeforeChange": "68f185fc63132d7b106a1c7ca52ed6d004b96329", "commitAfterChange": "4a85a8ee613913420acf3dde5af380e91d3bad2c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void test004()", "signatureAfterChange": " public void test004()", "diff": ["+\t\t\t\"\t            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Arrays are not allowed in intersection cast operator\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tObject p = (X[] & Serializable & Cloneable) new X[0];\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b10cb9493f72f97913f9db820e24cb7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "f5733c2118cce9570c584a3c84480228a3b7fc00", "commitAfterChange": "2325884dde9438b06c0c79c1dfd33a091d106072", "methodNumberBeforeChange": 735, "methodNumberAfterChange": 735, "signatureBeforeChange": " public void test0729()", "signatureAfterChange": " public void test0729()", "diff": ["+\t\t\"\t      ^\\n\" + ", "+\t\t\"The interface I cannot be implemented more than once with different arguments: I<Y> and I<X>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\"\tclass Y extends X implements I<X> {}\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc279c868b0fbc8b6470bf7708cad3c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "bea7b508525f70d680963772996546f2bcf8018f", "commitAfterChange": "6612336f81825afdf894aa053e2e886c83842e87", "methodNumberBeforeChange": 181, "methodNumberAfterChange": 182, "signatureBeforeChange": " public void test402219a()", "signatureAfterChange": " public void test402219a()", "diff": ["+\t\t\t\t\"\tnew X().goo((p1, p2) -> {});\\n\" + ", "+\t\t\t\t\"\t        ^^^\\n\" + ", "+\t\t\t\t\"The method goo(I) is ambiguous for the type X\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 11)\\n\" + "]}], "num": 66037}