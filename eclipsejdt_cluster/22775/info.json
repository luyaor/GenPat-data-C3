{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "29d3524ce8de63fa37c8a26b2f51940b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "140a94115729936228f047ba3f3be5ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/antadapter/org/eclipse/jdt/core/JDTCompilerAdapter.java", "commitBeforeChange": "c57610f2bddda6b0279b80317ffbe2121991bc61", "commitAfterChange": "8bf9455f62816ce90f9b647400e93bfa5d632a6f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void addExtdirs(Path extDirs, Path classpath)", "signatureAfterChange": "     private void addExtdirs(Path extDirs, Path classpath)", "diff": ["-                fs.setIncludes(\"*\"); //$NON-NLS-1$", "+                fs.setIncludes(\"*.zip,*.jar\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15664c2d0d57d4f4a4e11767555cd534", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "288301050e750c96e441bffa1d7a0c7b5ea96099", "commitAfterChange": "f3dd19745e7946d1dc48b6b87c497227691bf97f", "methodNumberBeforeChange": 222, "methodNumberAfterChange": 222, "signatureBeforeChange": " \tpublic void test0208() throws JavaModelException", "signatureAfterChange": " \tpublic void test0208() throws JavaModelException", "diff": ["-\t\t\t\"@Override(x= 1)\\r\\n\" + ", "+\t\t\t\"@Override(x= 1)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "299929e5a7b862a858eb45ac37708c41", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/VarargsTest.java", "commitBeforeChange": "96a363e844088de7fad02c93968495ea0dca52ac", "commitAfterChange": "20306af2785b6993ef03f5b59102e1d76672145c", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic void test029()", "signatureAfterChange": " \tpublic void test029()", "diff": ["-\t\t\t\"Varargs argument String[] should be cast to Object[] when passed to the method printf(String, Object...) from type PrintStream\\n\" + ", "+\t\t\t\"The argument of type String[] should explicitly be cast to Object[] for the invocation of the varargs method printf(String, Object...) from type PrintStream. It could alternatively be cast to Object for a varargs invocation\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a559eb4a8bb0a6048ec4ae4bb66fdda1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_5.java", "commitBeforeChange": "868f3524d040dcfdbf4e74b94162d240d48279bd", "commitAfterChange": "5ca6ee5fca8063f3ae4c037e5721f50897b59fe4", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": " public void test088()", "signatureAfterChange": " public void test088()", "diff": ["-\t\t\"Varargs argument null should be cast to Class[] when passed to the method getMethod(String, Class...) from type Class\\n\" + ", "+\t\t\"The argument of type null should explicitly be cast to Class[] for the invocation of the varargs method getMethod(String, Class...) from type Class. It could alternatively be cast to Class for a varargs invocation\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de222e34ba986dfdb0e9366d849134ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AmbiguousMethodTest.java", "commitBeforeChange": "0d26cebfc5ac438f5812d87a88435e81d289bbea", "commitAfterChange": "51bd97b9a16ddeaff77cec180dcadc8f8924a66a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void test001()", "signatureAfterChange": " \tpublic void test001()", "diff": ["-\t\t\t\t\"class B extends A { <T extends Comparable<T>> void m(T t) { System.out.println(t); } }\\n\" +", "+\t\t\t\t\"class B extends A { @Override <T extends Comparable<T>> void m(T t) { System.out.println(t); } }\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f96b7816c9fe1573849bb0a26cbc0b54", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "fc4721a5d5acdb33b51e50b3cf56e7eabfae4a87", "commitAfterChange": "91f52bd5be936f7bbe4c16807f2507407ccf8fc5", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 119, "signatureBeforeChange": " public void testCompletionConstructorForAnonymousType() throws JavaModelException", "signatureAfterChange": " public void testCompletionConstructorForAnonymousType() throws JavaModelException", "diff": ["-\t\t\"element:TypeWithConstructor    completion:)    relevance:\"+(R_DEFAULT + R_INTERESTING+ R_NON_RESTRICTED),", "+\t\t\"element:TypeWithConstructor    completion:    relevance:\"+(R_DEFAULT + R_INTERESTING+ R_NON_RESTRICTED),"]}], "num": 22775}