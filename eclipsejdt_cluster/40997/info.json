{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cf6804cd746d6f4aa63e2bfc930741db", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25598c548653e018404756ca8ef8921b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "13991702fc2c3e2b678aa9ef22a4a03b29ad808b", "commitAfterChange": "3a8b2107b944f5a4646c23d5049199496436bc6e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " boolean areReturnTypesCompatible(MethodBinding one, MethodBinding two)", "signatureAfterChange": " boolean areReturnTypesCompatible(MethodBinding one, MethodBinding two)", "diff": ["-\tif (this.type.scope.compilerOptions().sourceLevel >= ClassFileConstants.JDK1_5) {", "-\t\treturn areReturnTypesCompatible0(one, two);", "-\t} else {", "-\t\treturn areTypesEqual(one.returnType.erasure(), two.returnType.erasure());", "-\t}", "+\treturn areReturnTypesCompatible0(one, two);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43dab50c270bbff65e9b90388a05d083", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "778e64a3c8e6903c625067607c9068d73d8cd5e5", "commitAfterChange": "e12812c02c749e710a55fe1f28fa9764f0ac6bd5", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " boolean detectInheritedNameClash(MethodBinding inherited, MethodBinding otherInherited)", "signatureAfterChange": " boolean detectInheritedNameClash(MethodBinding inherited, MethodBinding otherInherited)", "diff": ["-\tif (this.environment.globalOptions.sourceLevel < ClassFileConstants.JDK1_7) {", "-\t\t// with fix for http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6182950", "-\t\t// we now ignore return types when detecting name clashes", "-\t\t// FYI for now we will only make this change when compliance is set to 1.7 or higher", "-\t\tif (inherited.returnType.erasure() != otherInherited.returnType.erasure())", "-\t\t\treturn false;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "784f7b8e9ed0719982b15a3c7582c468", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/diagnose/DiagnoseParser.java", "commitBeforeChange": "bfac42801201b7609826716b3d7b2a4e81ff2e05", "commitAfterChange": "4c2900096a422605a0884d5ca39839064ce0c89a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   \tpublic void diagnoseParse(boolean record)", "signatureAfterChange": "   \tpublic void diagnoseParse(boolean record)", "diff": ["-\t\t}", "-\t\tif (this.options.sourceLevel >= ClassFileConstants.JDK1_8) {", "-\t\t\tthis.parser.scanner.shouldDisambiguate = true;", "-\t\t\tthis.parser.scanner.shouldDisambiguate = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e42b61448e9232ec36d8c96e7025aead", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "778e64a3c8e6903c625067607c9068d73d8cd5e5", "commitAfterChange": "e12812c02c749e710a55fe1f28fa9764f0ac6bd5", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " boolean detectNameClash(MethodBinding current, MethodBinding inherited)", "signatureAfterChange": " boolean detectNameClash(MethodBinding current, MethodBinding inherited)", "diff": ["-\tif (this.environment.globalOptions.sourceLevel < ClassFileConstants.JDK1_7) {", "-\t\t// with fix for http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6182950", "-\t\t// we now ignore return types when detecting name clashes", "-\t\t// FYI for now we will only make this change when compliance is set to 1.7 or higher", "-\t\tif (current.returnType.erasure() != original.returnType.erasure())", "-\t\t\treturn false;", "-\t}"]}], "num": 40997}