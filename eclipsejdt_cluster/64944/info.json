{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "938ee152c489b37f624bff28852d89de", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f96e4c127beb74229fb4180e8579287", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "67be753fec1b8f88653e28d3d4d4837dd29cdece", "commitAfterChange": "c76b87d837ed14384819cb84439501329f23edce", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \r \tpublic Name convert(TypeReference typeReference)", "signatureAfterChange": "\r \r \tpublic Name convert(TypeReference typeReference)", "diff": ["-\t\tName name;\r", "+\t\tName name = null;\r", "-\t\t\tlong[] positions = qualifiedTypeReference.sourcePositions;\r", "-\t\t\tSimpleName firstToken = this.ast.newSimpleName(new String(typeName[0]));\r", "-\t\t\tint start0 = (int)(positions[0]>>>32);\r", "-\t\t\tint start = start0;\r", "-\t\t\tint end = (int)(positions[0] & 0xFFFFFFFF);\r", "-\t\t\tfirstToken.setSourceRange(start, end - start + 1);\r", "-\t\t\tSimpleName secondToken = this.ast.newSimpleName(new String(typeName[1]));\r", "-\t\t\tstart = (int)(positions[1]>>>32);\r", "-\t\t\tend = (int)(positions[1] & 0xFFFFFFFF);\r", "-\t\t\tsecondToken.setSourceRange(start, end - start + 1);\r", "-\t\t\tQualifiedName qualifiedName = this.ast.newQualifiedName(firstToken, secondToken);\r", "-\t\t\tqualifiedName.setSourceRange(start0, end - start0 + 1);\r", "-\t\t\tSimpleName newPart = null;\r", "-\t\t\tfor (int i = 2; i < length; i++) {\r", "-\t\t\t\tnewPart = this.ast.newSimpleName(new String(typeName[i]));\r", "-\t\t\t\tstart = (int)(positions[i]>>>32);\r", "-\t\t\t\tend = (int)(positions[i] & 0xFFFFFFFF);\r", "-\t\t\t\tnewPart.setSourceRange(start,  end - start + 1);\r", "-\t\t\t\tqualifiedName = this.ast.newQualifiedName(qualifiedName, newPart);\r", "-\t\t\t\tqualifiedName.setSourceRange(start0, end - start0 + 1);\r", "-\t\t\t}\r", "-\t\t\tif (this.resolveBindings && newPart != null) {\r", "-\t\t\t\trecordNodes(newPart, typeReference);\r", "-\t\t\t}\r", "-\t\t\tname = qualifiedName;\r", "+\t\t\tlong[] positions = qualifiedTypeReference.sourcePositions;\t\t\t\r", "+\t\t\tname = setQualifiedNameNameAndSourceRanges(typeName, positions, typeReference);\r", "-\t\t\t// SimpleName\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a048a143ae650aed5c7ab6472ae2820e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "e52bc6252e35f80d84ea68de3f79ba6165dbedb0", "commitAfterChange": "c426d102698f7696728b2b0659449ec3f2a4483c", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "\r \r \tpublic Type convertType(TypeReference typeReference)", "signatureAfterChange": "\r \r \tpublic Type convertType(TypeReference typeReference)", "diff": ["-\t\t\t\t\tsimpleName.setSourceRange(sourceStart, length);\r", "+\t\t\t\t\t// we need to search for the starting position of the first brace in order to set the proper length\r", "+\t\t\t\t\t// PR http://dev.eclipse.org/bugs/show_bug.cgi?id=10759\r", "+\t\t\t\t\tint end = retrieveStartingLeftBracketPosition(sourceStart, sourceStart + length);\r", "+\t\t\t\t\tsimpleName.setSourceRange(sourceStart, end - sourceStart + 1);\r", "-\t\t\t\t\tsimpleType.setSourceRange(sourceStart, length);\r", "+\t\t\t\t\tsimpleType.setSourceRange(sourceStart, end - sourceStart + 1);\r", "+\t\t\ttype.setSourceRange(sourceStart, length);\r", "-\t\t\tString[] identifiers = new String[nameLength];\r", "-\t\t\tfor (int index = 0; index < nameLength; index++) {\r", "-\t\t\t\tidentifiers[index] = new String(name[index]);\r", "-\t\t\t}\r", "-\t\t\t\tName qualifiedName = this.ast.newName(identifiers);\r", "-\t\t\t\tqualifiedName.setSourceRange(sourceStart, length);\r", "+\t\t\t\tName qualifiedName = this.setQualifiedNameNameAndSourceRanges(name, positions, typeReference);\r", "+\t\t\t\tint end = retrieveEndOfDimensionsPosition(sourceStart+length, this.compilationUnitSource.length);\r", "+\t\t\t\ttype.setSourceRange(sourceStart, end - sourceStart + 1);\r", "-\t\t\t\tName qualifiedName = this.ast.newName(identifiers);\r", "-\t\t\t\tqualifiedName.setSourceRange(sourceStart, length);\r", "-\t\t\t\ttype = this.ast.newSimpleType(this.ast.newName(identifiers));\r", "+\t\t\t\tName qualifiedName = this.setQualifiedNameNameAndSourceRanges(name, positions, typeReference);\r", "+\t\t\t\ttype = this.ast.newSimpleType(qualifiedName);\r", "+\t\t\t\ttype.setSourceRange(sourceStart, length);\r", "-\t\ttype.setSourceRange(sourceStart, length);\r"]}], "num": 64944}