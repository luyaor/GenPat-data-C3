{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f60c271a4be27457e056bd9e7e9ec767", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "822478c6e486c2736778d18857755a44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool.tests/src/org/eclipse/jdt/compiler/tool/tests/CompilerToolTests.java", "commitBeforeChange": "24886323fed59fa7df90089efb8e6a1735628edf", "commitAfterChange": "2a6ccc4326c5f51715033b769f3fad2752538c59", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic void testFileManager2()", "signatureAfterChange": " \tpublic void testFileManager2()", "diff": ["-\t\t\tStringBuilder builder = new StringBuilder();", "+\t\t\tList<String> names = new ArrayList<String>();", "-\t\t\t\tbuilder.append(name.substring(lastIndexOf + 1));", "+\t\t\t\tnames.add(name.substring(lastIndexOf + 1));", "-\t\t\tassertEquals(\"Wrong contents\", \"X2.javaX.java\", String.valueOf(builder));", "+\t\t\tCollections.sort(names);", "+\t\t\tassertEquals(\"Wrong contents\", \"[X.java, X2.java]\", names.toString());", "+\t\t\tfileManager.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4bc973091f1bd13889339ab93ec8253", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "08504ba476b411d63330d4820dcef9b3032013d3", "commitAfterChange": "c2c9899514741103674136b061d37380904756e0", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "\r \tprotected String getClasspathAsXMLString(\r \t\tIClasspathEntry[] classpath,\r \t\tIPath outputLocation)\r \t\tthrows JavaModelException", "signatureAfterChange": "\r \tprotected String getClasspathAsXML(\r \t\tIClasspathEntry[] classpath,\r \t\tIPath outputLocation)\r \t\tthrows JavaModelException", "diff": ["-\tprotected String getClasspathAsXMLString(\r", "+\tprotected String getClasspathAsXML(\r", "-\t\tStringWriter writer = new StringWriter();\r", "+\t\t\tByteArrayOutputStream s= new ByteArrayOutputStream();\r", "+\t\t\tformat.setLineSeparator(System.getProperty(\"line.separator\"));  //$NON-NLS-1$\r", "+\t\t\t\r", "-\t\t\t\t\twriter,\r", "+\t\t\t\t\tnew OutputStreamWriter(s, \"UTF8\"), //$NON-NLS-1$\r", "+\t\t\treturn s.toString(\"UTF8\"); //$NON-NLS-1$\r", "-\t\treturn writer.toString();\r"]}], "num": 31091}