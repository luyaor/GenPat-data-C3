{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ad2667640c902bab0dcfe143afb07617", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "214edd6ada94127cf73d23965dc27830", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/State.java", "commitBeforeChange": "5ba107df633d1beada69a1a39d8b4efe7c8b77f6", "commitAfterChange": "5133c2bbdcfe9be066c05eb73a026179089e535a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \r void copyFrom(State lastState)", "signatureAfterChange": "\r \r void copyFrom(State lastState)", "diff": ["-\ttry {\r", "-\t\tthis.additionalTypeNames = (HashtableOfObject) lastState.additionalTypeNames.clone();\r", "-\t\tthis.references = (HashtableOfObject) lastState.references.clone();\r", "-\t} catch (CloneNotSupportedException e) {\r", "-\t\tthis.additionalTypeNames = lastState.additionalTypeNames;\r", "-\t\tthis.references = lastState.references;\r", "-\t}\r", "+\tthis.additionalTypeNames = (HashtableOfObject) lastState.additionalTypeNames.clone();\r", "+\tthis.references = (HashtableOfObject) lastState.references.clone();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44b578fdc17a73eb93816c3a2dc1355d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "07500b3aefa58aecd5e846627b7c70382793f29f", "commitAfterChange": "641c18a6fa8d154329ae2bcdac1ab25ff8b18f71", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tpublic void generatedSourceFolderDeleted()", "signatureAfterChange": " \tpublic void generatedSourceFolderDeleted()", "diff": ["-\t\t", "-\t\ttry{\t\t\t", "-\t\t\tremoveFromProjectClasspath( _javaProject, srcFolder, null );\t\t", "-\t\t}catch(JavaModelException e){", "-\t\t\tAptPlugin.log( e, \"Error occurred deleting old generated src folder \" + srcFolder.getName() ); //$NON-NLS-1$", "-\t\t}", "-\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b5d39027cb0200a5956ff8a1b34fb4d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "abd333621a0cbd2492673b0e887a888245d2d663", "commitAfterChange": "0adf7a4e0894d18d3979e493aafe00dfa5c14f8d", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 63, "signatureBeforeChange": " \t \tpublic IPath setOutputFolder(IPath projectPath, String outputFolder)", "signatureAfterChange": " \t \tpublic IPath setOutputFolder(IPath projectPath, String outputFolder)", "diff": ["-\t\t\tIJavaProject javaProject =", "-\t\t\t\t(IJavaProject) getProject(projectPath).getNature(JavaCore.NATURE_ID);", "+\t\t\tIJavaProject javaProject = JavaCore.create(getProject(projectPath));", "-\t\t} catch (CoreException e) {", "-\t\t\te.printStackTrace();", "-\t\t\tcheckAssertion(\"CoreException\", false); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74eef6162326a6dcaec65eb574e2a984", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "2e766bbca66c8d84b1a545bba0517d22086a3956", "commitAfterChange": "0900d363c7882a0cdbec8cc19af12d79dcbb6382", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "  \tpublic void setClasspath(IPath projectPath, IClasspathEntry[] entries)", "signatureAfterChange": "  \tpublic void setClasspath(IPath projectPath, IClasspathEntry[] entries) throws JavaModelException", "diff": ["-\tpublic void setClasspath(IPath projectPath, IClasspathEntry[] entries) {", "-\t\ttry {", "-\t\t\tcheckAssertion(\"a workspace must be open\", fIsOpen); //$NON-NLS-1$", "-\t\t\tIJavaProject javaProject = JavaCore.create(getProject(projectPath));", "-\t\t\tjavaProject.setRawClasspath(entries, null);", "-\t\t} catch (JavaModelException e) {", "-\t\t\te.printStackTrace();", "-\t\t\tcheckAssertion(\"JavaModelException\", false); //$NON-NLS-1$", "-\t\t}", "+\tpublic void setClasspath(IPath projectPath, IClasspathEntry[] entries) throws JavaModelException {", "+\t\tcheckAssertion(\"a workspace must be open\", fIsOpen); //$NON-NLS-1$", "+\t\tIJavaProject javaProject = JavaCore.create(getProject(projectPath));", "+\t\tjavaProject.setRawClasspath(entries, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afa5d52e87de19211e7bf29c26d8c0a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/CompilationUnitHelper.java", "commitBeforeChange": "c5aec3a765a7b3a6b1146e9e3a6a440f3522c2eb", "commitAfterChange": "868bb663e324da2f9402a117feeb046defe94741", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic void commitNewContents(ICompilationUnit wc, String contents, IProgressMonitor monitor)", "signatureAfterChange": " \tpublic void commitNewContents(ICompilationUnit wc, String contents, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\tpublic void commitNewContents(ICompilationUnit wc, String contents, IProgressMonitor monitor) {", "-\t\ttry {", "-\t\t\tIBuffer b = wc.getBuffer();", "-\t\t\tb.setContents(contents);", "-\t\t\twc.commitWorkingCopy(true, monitor);", "-\t\t} catch (JavaModelException e) {", "-\t\t\tAptPlugin.log(e, \"Unable to commit new contents for working copy \" + wc.getElementName()); //$NON-NLS-1$", "-\t\t}", "+\tpublic void commitNewContents(ICompilationUnit wc, String contents, IProgressMonitor monitor) throws JavaModelException {", "+\t\tIBuffer b = wc.getBuffer();", "+\t\tb.setContents(contents);", "+\t\twc.commitWorkingCopy(true, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc82060ec3f0146f25dbac2b33a9eab2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "69d976ecb2b4a910a78fb1eaf551e2775a0ff256", "commitAfterChange": "6e7138933a7b0a4bb6f562a7b0b5324e7f7fa604", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tprivate void setGeneratedSourceFolderName( String s )", "signatureAfterChange": " \tprivate void setGeneratedSourceFolderName( String s )", "diff": ["+\t\t\t// We are not going to delete any directories or change the classpath", "+\t\t\t// since this could happen during a build. ", "+\t\t\t// see ensureGeneratedSourceFolder() ", "-\t\tif ( srcFolder != null )", "-\t\t{", "-\t\t\ttry", "-\t\t\t{", "-\t\t\t\tif ( srcFolder.exists() ){", "-\t\t\t\t\t// this will cause a resource change event, and we will actually clean up the reference", "-\t\t\t\t\t// then. Until then, _generatedSourceFolderName and _generatedSourceFolder.getName() ", "-\t\t\t\t\t// will be different. -theodora", "-\t\t\t\t\tsrcFolder.delete( true, false, null );", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tcatch( CoreException ce )", "-\t\t\t{", "-\t\t\t\tAptPlugin.log( ce, \"Error occurred deleting old generated src folder \" + srcFolder.getName() ); //$NON-NLS-1$", "-\t\t\t}", "-\t\t}", "-\t\telse", "+\t\tif( srcFolder == null )"]}], "num": 42976}