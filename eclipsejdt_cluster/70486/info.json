{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b530e91549e360cd92406566d01d9a0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fd4cfd9d04238cd896f1a68f39b1458", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "09d58a6e319cfeec520d29fd7c2c24967ab4e499", "commitAfterChange": "3f9786eb97e62b9a5f765764dcc08a631a4e6afe", "methodNumberBeforeChange": 294, "methodNumberAfterChange": 294, "signatureBeforeChange": " protected void consumeReferenceExpressionTypeForm(boolean isPrimitive)", "signatureAfterChange": " protected void consumeReferenceExpressionTypeForm(boolean isPrimitive)", "diff": ["-\tSingleNameReference method;", "+\tchar [] selector;", "-\t", "-\tmethod = (SingleNameReference) getUnspecifiedReference();", "-\tsourceEnd = method.sourceEnd;", "+", "+\tsourceEnd = (int) this.identifierPositionStack[this.identifierPtr];", "+\tselector = this.identifierStack[this.identifierPtr--];", "+\tthis.identifierLengthPtr--;", "-\t\treferenceExpression = new ReferenceExpression(this.compilationUnit.compilationResult, getTypeReference(dimension), typeArguments, method, sourceEnd);", "+\t\treferenceExpression = new ReferenceExpression(this.compilationUnit.compilationResult, getTypeReference(dimension), typeArguments, selector, sourceEnd);", "-\t\treferenceExpression = new ReferenceExpression(this.compilationUnit.compilationResult, getUnspecifiedReference(), typeArguments, method, sourceEnd);", "+\t\treferenceExpression = new ReferenceExpression(this.compilationUnit.compilationResult, getUnspecifiedReference(), typeArguments, selector, sourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b6ed56ba6bf1c61c398b5b3162d97c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "cd7ab76e97bbde2dfa388ac94141efed3a1c5385", "commitAfterChange": "757f19ed428d31dbfa31c00cff42cd33fb3902ce", "methodNumberBeforeChange": 294, "methodNumberAfterChange": 295, "signatureBeforeChange": " protected void consumeReferenceExpressionTypeForm(boolean isPrimitive)", "signatureAfterChange": "  protected void consumeReferenceExpressionTypeForm(boolean isPrimitive)", "diff": ["+", "-\tReferenceExpression referenceExpression;", "+\tReferenceExpression referenceExpression = newReferenceExpression();", "-\t\treferenceExpression = new ReferenceExpression(this.compilationUnit.compilationResult, getTypeReference(dimension), typeArguments, selector, sourceEnd);", "+\t\treferenceExpression.initialize(this.compilationUnit.compilationResult, getTypeReference(dimension), typeArguments, selector, sourceEnd);", "-\t\treferenceExpression = new ReferenceExpression(this.compilationUnit.compilationResult, getUnspecifiedReference(), typeArguments, selector, sourceEnd);", "+\t\treferenceExpression.initialize(this.compilationUnit.compilationResult, getUnspecifiedReference(), typeArguments, selector, sourceEnd);"]}], "num": 70486}