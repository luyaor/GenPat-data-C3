{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "75c090ea2886e257aa9047de0c85a4c8", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8368d4199f3b35cee842fabeb314ce2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AptCompilationParticipant.java", "commitBeforeChange": "07500b3aefa58aecd5e846627b7c70382793f29f", "commitAfterChange": "641c18a6fa8d154329ae2bcdac1ab25ff8b18f71", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \t \tprivate BrokenClasspathBuildFailureResult brokenClasspathBuildFailureNotify( BrokenClasspathBuildFailureEvent event )", "signatureAfterChange": " \t \tpublic void aboutToBuild(IJavaProject project)", "diff": ["-\t", "-\tprivate BrokenClasspathBuildFailureResult brokenClasspathBuildFailureNotify( BrokenClasspathBuildFailureEvent event )", "-\t{", "-\t\ttry", "-\t\t{", "-\t\t\tIJavaProject jp = event.getJavaProject();", "-\t\t\tIProject p = jp.getProject();", "-\t\t\tGeneratedFileManager gfm = GeneratedFileManager.getGeneratedFileManager( p );", "-\t\t\tIFolder folder = gfm.getGeneratedSourceFolder();", "-\t\t\t", "-\t\t\tfolder.refreshLocal( IResource.DEPTH_INFINITE, null );", "-\t\t\tIClasspathEntry classpathEntry = GeneratedFileManager.findProjectSourcePath( jp, folder );", "-\t\t\tif ( classpathEntry != null && !folder.exists() )", "-\t\t\t{", "-\t\t\t\t// the generated source folder is part of the classpath, but it doesn't exist on disk", "-\t\t\t\t// try to fix this by creating the generated source folder. ", "-\t\t\t\tGeneratedFileManager.removeFromProjectClasspath( jp, folder, null );", "-\t\t\t\tgfm.ensureGeneratedSourceFolder( null );", "-\t\t\t}", "-\t\t}", "-\t\tcatch ( CoreException ce )", "-\t\t{", "-\t\t\tAptPlugin.log( ce, \"Failure trying to fix catastrophic build failure\"); //$NON-NLS-1$", "-\t\t}", "-\t\t", "-\t\treturn new BrokenClasspathBuildFailureResult();", "-\t}", "+\t", "+\tpublic void aboutToBuild(IJavaProject project) {", "+\t\tif (!AptConfig.isEnabled(project)) {", "+\t\t\treturn;", "+\t\t// setup the classpath and make sure the generated source folder is on disk.", "+\t\tGeneratedFileManager manager = AptPlugin.getAptProject(project).getGeneratedFileManager();", "+\t\tmanager.compilationStarted();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ead43202255489c6f7a9ab98777e96ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/FactoryPathConfigurationBlock.java", "commitBeforeChange": "6a39aeee024a65d73e9084e99bead655e3ded072", "commitAfterChange": "30a0d8b166ac2fa2854a231544dfecb8e382982a", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tprivate boolean settingsChanged()", "signatureAfterChange": " \tprivate boolean settingsChanged()", "diff": ["-\t\tint count = fFactoryPathList.getSize();", "-\t\tif (fOriginalPath.size() != count) {", "-\t\t\t// something was added or removed", "+\t\tif (fOriginalPath == null) {", "+\t\t\t// shouldn't happen, but just in case it does, consider it a change.", "-\t\t// now we know both lists are the same size", "-\t\tIterator<Map.Entry<FactoryContainer, Boolean>> iOriginal = fOriginalPath.entrySet().iterator();", "-\t\tfor (int i = 0; i < count; ++i) {", "-\t\t\tMap.Entry<FactoryContainer, Boolean> entry = iOriginal.next();", "-\t\t\tBoolean wasEnabled = entry.getValue();", "-\t\t\tFactoryContainer fc = (FactoryContainer)fFactoryPathList.getElement(i);", "-\t\t\tif (!fc.equals(entry.getKey())) {", "-\t\t\t\treturn true;", "-\t\t\t}", "-\t\t\tBoolean isEnabled = fFactoryPathList.isChecked(fc);", "-\t\t\tif (isEnabled ^ wasEnabled) {", "-\t\t\t\treturn true;", "-\t\t\t}", "-\t\t}", "-\t\treturn false;", "+\t\t// Is the new path the same size, containing the same items", "+\t\t// in the same order?  We rely on FactoryPathEntry.equals() here.", "+\t\tList<FactoryPathEntry> newPath = getListContents();", "+\t\treturn !fOriginalPath.equals(newPath);"]}], "num": 16380}