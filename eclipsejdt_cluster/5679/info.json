{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "230af39fbbbbc20025d92128e69c426a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a616d75d2940b39d456fc096a5d51853", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "1c3298c6e059e091058be85e5c193be4f3e2bb5c", "commitAfterChange": "1604c4cb884aee860a1cc5ef654a628a5e36afd0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic  FileGenerationResult generateFileDuringReconcile( \t\t\tICompilationUnit parentCompilationUnit, String typeName, \t\t\tString contents, WorkingCopyOwner workingCopyOwner, \t\t\tIProblemRequestor problemRequestor, IProgressMonitor progressMonitor )", "signatureAfterChange": " \tpublic  FileGenerationResult generateFileDuringReconcile( \t\t\tICompilationUnit parentCompilationUnit, String typeName, \t\t\tString contents, WorkingCopyOwner workingCopyOwner, \t\t\tIProblemRequestor problemRequestor, IProgressMonitor progressMonitor )", "diff": ["-\t{", "-\t\t// BUGZILLA 103183 - reconcile-path disabled until type-generation in reconcile is turned on", "-\t\tif ( true )", "+\t{\t\t", "+\t\t// type-generation during reconcile only works if the generated source", "+\t\t// folder is created and added to the project's source path. ", "+\t\tif ( ! isGeneratedSourceFolderConfigured() )", "-\t\t", "+\t\tIFile parentFile = (IFile)parentCompilationUnit.getResource();", "-\t\t\tworkingCopy = getCachedWorkingCopy( parentCompilationUnit, typeName );", "+\t\t\tworkingCopy = getCachedWorkingCopy( parentFile, typeName );", "+\t\t\t", "+\t\t\tif ( workingCopyOwner == null )", "+\t\t\t\tworkingCopyOwner = parentCompilationUnit.getOwner();", "-\t\t\t\t\t\tparentCompilationUnit,  typeName, contents,  ", "+\t\t\t\t\t\tparentFile,  typeName, contents,  ", "+\t\t\t\t\t\t\t\t", "-\t\tcatch (CoreException ce) ", "-\t\t{", "-\t\t\tAptPlugin.log(ce, \"Could not generate file for type: \" + typeName); //$NON-NLS-1$", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd6641f72997060080b83bd1f7116638", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatch.java", "commitBeforeChange": "b4304f5a0ae3fd0a899e4f86a55dafea7f0ca4a1", "commitAfterChange": "38faf3efd9d7a9e66ede29f2210a34a5031698a0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t\t \tprivate static APTResult runAPT(final List<AnnotationProcessorFactory> factories, \t\t\tIJavaProject javaProj, \t\t\tIFile[] files, \t\t\tICompilationUnit compilationUnit, \t\t\tboolean isFullBuild)", "signatureAfterChange": " \tprivate static APTResult runAPT(final List<AnnotationProcessorFactory> factories, \t\t\tIJavaProject javaProj, \t\t\tIFile[] files, \t\t\tICompilationUnit compilationUnit, \t\t\tboolean isFullBuild)", "diff": ["+\t */", "+\t\t       ", "+\t\tboolean building = files != null;", "-\t\tif ( files != null )", "+\t\tif ( building )", "+\t\t\t// If we're building, types can be generated, so we", "+\t\t\t// want to run this as an atomic workspace operation", "+\t\t\t IWorkspace workspace = ResourcesPlugin.getWorkspace();", "+\t\t\t try {", "+\t\t\t\t workspace.run(runnable, schedulingRule, IWorkspace.AVOID_UPDATE, null);", "+\t\t\t }", "+\t\t\t catch (CoreException ce) {", "+\t\t\t\t AptPlugin.log(ce, \"Could not run APT\"); //$NON-NLS-1$", "+\t\t\t }", "+\t\t\t// Reconciling, so we do not want to run this as an atomic workspace", "+\t\t\t// operation. If we do, it is easy to have locking issues when someone", "+\t\t\t// calls a reconcile from within a workspace lock", "-\t\t\tschedulingRule = null;", "-\t\t}", "-\t\t", "-\t\ttry", "-\t\t{", "-\t\t\tIWorkspace w = ResourcesPlugin.getWorkspace();", "-\t\t\tw.run( runnable, schedulingRule, IWorkspace.AVOID_UPDATE, null );", "-\t\t}", "-\t\tcatch( CoreException ce )", "-\t\t{", "-\t\t\tAptPlugin.log(ce, \"Could not run APT\"); //$NON-NLS-1$", "+\t\t\trunnable.run(null);"]}], "num": 5679}