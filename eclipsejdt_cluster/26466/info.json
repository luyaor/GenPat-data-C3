{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b26d2ee4778f0b861e4dae70e2e52e78", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bf1947f06cb5465b6f5801b69263b13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Statement.java", "commitBeforeChange": "79774393baaba7f9e5f3461242a5b822bf662647", "commitAfterChange": "8b644ce068ecf49daa5da8af14e814933ab3df61", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " private void internalCheckAgainstNullTypeAnnotation(BlockScope scope, TypeBinding requiredType, Expression expression, \t\tint nullStatus, FlowContext flowContext)", "signatureAfterChange": " private void internalCheckAgainstNullTypeAnnotation(BlockScope scope, TypeBinding requiredType, Expression expression, \t\tint nullStatus, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\tint nullStatus, FlowContext flowContext) {", "+\t\tint nullStatus, FlowContext flowContext, FlowInfo flowInfo) {", "-\t\tflowContext.recordNullityMismatch(scope, expression, expression.resolvedType, requiredType, nullStatus);", "+\t\tflowContext.recordNullityMismatch(scope, expression, expression.resolvedType, requiredType, flowInfo, nullStatus);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d863c46778cad50b00ff69f564a48ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "79774393baaba7f9e5f3461242a5b822bf662647", "commitAfterChange": "8b644ce068ecf49daa5da8af14e814933ab3df61", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tvoid checkAgainstNullAnnotation(FlowContext flowContext, Expression expression, int nullStatus)", "signatureAfterChange": " \tvoid checkAgainstNullAnnotation(FlowContext flowContext, Expression expression, FlowInfo flowInfo, int nullStatus)", "diff": ["-\tvoid checkAgainstNullAnnotation(FlowContext flowContext, Expression expression, int nullStatus) {", "+\tvoid checkAgainstNullAnnotation(FlowContext flowContext, Expression expression, FlowInfo flowInfo, int nullStatus) {", "-\t\t\t\tflowContext.recordNullityMismatch(this.scope, expression, expression.resolvedType, this.descriptor.returnType, nullStatus);", "+\t\t\t\tflowContext.recordNullityMismatch(this.scope, expression, expression.resolvedType, this.descriptor.returnType, flowInfo, nullStatus);"]}], "num": 26466}