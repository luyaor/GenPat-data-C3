{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2de362a334862a92338103787c1f1877", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f281bdeafa5a5e14c2f154cbb4f8826", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionScanner.java", "commitBeforeChange": "f4fac2a7e69cf336c94105a7eeaf8b6bd2b7e9f2", "commitAfterChange": "039d5ebb17d9b09ae245ba628ad4d0e9cf747b63", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public int getNextToken() throws InvalidInputException", "signatureAfterChange": " public int getNextToken() throws InvalidInputException", "diff": ["-\t\t\t\t \twhile(getNextCharAsJavaIdentifierPart()) {}", "+\t\t\t\t \twhile(getNextCharAsJavaIdentifierPart());", "+\t\t// eof reached"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1271b5f03d0a5924ef726bb2c29d2e16", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/AndPattern.java", "commitBeforeChange": "9f5ac891f21a26fc6cf1cdde572fc1534e9ac5c8", "commitAfterChange": "337e15e0761d4d0787a7ff9d0f528a1988cb567b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, int detailLevel, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException", "signatureAfterChange": " public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, int detailLevel, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException", "diff": ["-\t\t\twhile (--potentialLength >= 0 && potentialRefs[potentialLength] == 0) {}", "+\t\t\twhile (--potentialLength >= 0 && potentialRefs[potentialLength] == 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "129ee721ebb1bd004df8d8f3f6085345", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "0c70c7cc05daa3aed6427b9fb8f20bd7e282b588", "commitAfterChange": "d8d3d5200f27e422421ae0303798b8a7f8e75502", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " private final static void buildFileOfIntFor(String filename, String tag, String[] tokens) throws java.io.IOException", "signatureAfterChange": " private final static void buildFileOfIntFor(String filename, String tag, String[] tokens) throws java.io.IOException", "diff": ["-\twhile (!tokens[i++].equals(tag)) {}", "+\twhile (!tokens[i++].equals(tag));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1440fe16dd784f7abf5050495ac5926e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/ClasspathDirectory.java", "commitBeforeChange": "8e38b7199cd115ba7bd2c3238004eef7444e7c67", "commitAfterChange": "5d7b0ed4ccf6dc91337d9ac62f14ae585f547855", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  String[] directoryList(String qualifiedPackageName)", "signatureAfterChange": "  String[] directoryList(String qualifiedPackageName)", "diff": ["-\t\twhile (--index > last && !Character.isUpperCase(qualifiedPackageName.charAt(index))) {}", "+\t\twhile (--index > last && !Character.isUpperCase(qualifiedPackageName.charAt(index)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2581fbfab878539bbfb0e121333f1fe3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "0c70c7cc05daa3aed6427b9fb8f20bd7e282b588", "commitAfterChange": "d8d3d5200f27e422421ae0303798b8a7f8e75502", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public final void arrayInitializer(int length)", "signatureAfterChange": " public final void arrayInitializer(int length)", "diff": ["-\t\twhile (scanner.source[--searchPosition] != '{') {", "-\t\t}", "+\t\twhile (scanner.source[--searchPosition] != '{');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44ab0b96b11fb2591f42e862238de80a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "a2cae864ea7c58f9c5f65e55540be3a00b7290a4", "commitAfterChange": "af16b79d1e7739469af872d3d51cbbeac0ec135c", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " public void reportAccurateReference(int sourceStart, int sourceEnd, char[][] qualifiedName, IJavaElement element, int accuracy) throws CoreException", "signatureAfterChange": " public void reportAccurateReference(int sourceStart, int sourceEnd, char[][] qualifiedName, IJavaElement element, int accuracy) throws CoreException", "diff": ["-\t\t\twhile (i < tokenNumber && !(equals = this.pattern.matchesName(qualifiedName[i++], currentTokenSource))) {", "-\t\t\t}", "+\t\t\twhile (i < tokenNumber && !(equals = this.pattern.matchesName(qualifiedName[i++], currentTokenSource)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4ac006665b9bd8bcea3f7ceea709764", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/DefaultProblem.java", "commitBeforeChange": "f4fac2a7e69cf336c94105a7eeaf8b6bd2b7e9f2", "commitAfterChange": "039d5ebb17d9b09ae245ba628ad4d0e9cf747b63", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic String errorReportSource(ICompilationUnit compilationUnit)", "signatureAfterChange": "  \tpublic String errorReportSource(ICompilationUnit compilationUnit)", "diff": ["-\t\twhile (((c = extract[trimLeftIndex++]) == TAB) || (c == SPACE)) {", "-\t\t}", "+\t\twhile (((c = extract[trimLeftIndex++]) == TAB) || (c == SPACE));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3135580e4827649304068a386b15b1f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "0c70c7cc05daa3aed6427b9fb8f20bd7e282b588", "commitAfterChange": "d8d3d5200f27e422421ae0303798b8a7f8e75502", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " private final static void buildFileOfShortFor(String filename, String tag, String[] tokens) throws java.io.IOException", "signatureAfterChange": " private final static void buildFileOfShortFor(String filename, String tag, String[] tokens) throws java.io.IOException", "diff": ["-\twhile (!tokens[i++].equals(tag)) {}", "+\twhile (!tokens[i++].equals(tag));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc943f7c7cca117704d785a67ecbd8f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "0c70c7cc05daa3aed6427b9fb8f20bd7e282b588", "commitAfterChange": "d8d3d5200f27e422421ae0303798b8a7f8e75502", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " private final static void buildFileOfByteFor(String filename, String tag, String[] tokens) throws java.io.IOException", "signatureAfterChange": " private final static void buildFileOfByteFor(String filename, String tag, String[] tokens) throws java.io.IOException", "diff": ["-\twhile (!tokens[i++].equals(tag)) {}", "+\twhile (!tokens[i++].equals(tag));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d860a3be71c25a60c172c8b74d20d9f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "16f19f97a8c0b1427b54df75b660d6aca7b7db26", "commitAfterChange": "541b97703db1bd451769991108f32e3de9b086ac", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public void reportAccurateReference(int sourceStart, int sourceEnd, char[][] tokens, IJavaElement element, int[] accuracies) throws CoreException", "signatureAfterChange": " public void reportAccurateReference(int sourceStart, int sourceEnd, char[][] tokens, IJavaElement element, int[] accuracies) throws CoreException", "diff": ["+\t\t\t//ignore", "-\t\t\twhile (i < length && !(equals = this.pattern.matchesName(tokens[i++], currentTokenSource))) {", "-\t\t\t}", "+\t\t\twhile (i < length && !(equals = this.pattern.matchesName(tokens[i++], currentTokenSource)));", "+\t\t\t\t// ignore"]}], "num": 62480}