{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1e864c79cf4a8355b8a2ee0cbc141f76", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d571db511844370affc0f520eac169b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "ff3d786f8b733e34cd64f8ef3efff230a2dbff42", "commitAfterChange": "d8e17e252326ade78baaea3eb05d18d16eaf07ae", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void testAttachSource() throws CoreException", "signatureAfterChange": " public void testDetectRootPath() throws JavaModelException", "diff": ["-public void testAttachSource() throws CoreException {", "-\tthis.attachSource(this.root, \"/AttachSourceTests/attachsrc.zip\", null);", "+ */", "+public void testDetectRootPath() throws JavaModelException {", "+\tIJavaProject project = getJavaProject(\"AttachSourceTests\");", "+\tIFile jar = (IFile) project.getProject().findMember(\"attach2.jar\");", "+\tIFile srcZip=(IFile) project.getProject().findMember(\"attach2src.zip\");", "+\tIPackageFragmentRoot root = project.getPackageFragmentRoot(jar);", "+\troot.attachSource(srcZip.getFullPath(), null, null);", "+", "+\t// ensure root path is detected", "+\tIPath rootSAPath= root.getSourceAttachmentRootPath();", "+\tassertEquals(\"Unexpected source attachment root path for \" + root.getPath(), \"src/nested\", rootSAPath.toString());", "+\t", "+\t// ensure source can be retrieved", "+\tIClassFile cf = root.getPackageFragment(\"x.y\").getClassFile(\"B.class\");", "+\tassertTrue(\"source code does not exist for the entire attached compilation unit\", cf.getSource() != null);", "+\t", "+\t// ensure root path is recomputed", "+\troot.close();", "+\tcf = root.getPackageFragment(\"x.y\").getClassFile(\"B.class\");", "+\tassertTrue(\"source code does not exist for the entire attached compilation unit\", cf.getSource() != null);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86bfb4e7506f4ef2cc144f6785ca8f5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "253b6e86274d6a434f078cf2295ba672e6b070f0", "commitAfterChange": "79934422b7248cecbec8d2063d0f240c3b8a7541", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void testDetectRootPath() throws JavaModelException", "signatureAfterChange": " public void testRootPath5() throws JavaModelException", "diff": ["- */", "-public void testDetectRootPath() throws JavaModelException {", "-\tIJavaProject project = getJavaProject(\"AttachSourceTests\");", "-\tIFile jar = (IFile) project.getProject().findMember(\"attach2.jar\");", "-\tIFile srcZip=(IFile) project.getProject().findMember(\"attach2src.zip\");", "-\tIPackageFragmentRoot root = project.getPackageFragmentRoot(jar);", "-\troot.attachSource(srcZip.getFullPath(), null, null);", "-", "-\t// ensure root path is detected", "-\tIPath rootSAPath= root.getSourceAttachmentRootPath();", "-\tassertEquals(\"Unexpected source attachment root path for \" + root.getPath(), \"src/nested\", rootSAPath.toString());", "-\t", "-\t// ensure source can be retrieved", "-\tIClassFile cf = root.getPackageFragment(\"x.y\").getClassFile(\"B.class\");", "-\tassertTrue(\"source code does not exist for the entire attached compilation unit\", cf.getSource() != null);", "-\t", "-\t// ensure root path is recomputed", "-\troot.close();", "-\tcf = root.getPackageFragment(\"x.y\").getClassFile(\"B.class\");", "-\tassertTrue(\"source code does not exist for the entire attached compilation unit\", cf.getSource() != null);", "-}", "+ */", "+public void testRootPath5() throws JavaModelException {", "+\tIJavaProject project = this.getJavaProject(\"/AttachSourceTests\");", "+\tIPackageFragmentRoot root = project.getPackageFragmentRoot(this.getFile(\"/AttachSourceTests/update.jar\"));", "+\tthis.attachSource(root, \"/AttachSourceTests/src.zip\", \"invalid\");", "+\t", "+\tIClassFile cf = root.getPackageFragment(\"p1.p2\").getClassFile(\"A.class\");", "+\tassertSourceEquals(", "+\t\t\"Unexpected source for class file\",", "+\t\t\"package p1.p2;\\n\" +", "+\t\t\"\\n\" +", "+\t\t\"public class A {}\",", "+\t\tcf.getSource());", "+\t\t", "+\tcf = root.getPackageFragment(\"\").getClassFile(\"B.class\");", "+\tassertSourceEquals(", "+\t\t\"Unexpected source for class file\",", "+\t\t\"public class B {}\",", "+\t\tcf.getSource());\t\t", "+\t", "+\tthis.attachSource(root, null, null); // detach source", "+\troot.close();", "+}"]}], "num": 66785}