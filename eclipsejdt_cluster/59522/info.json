{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a98924826fcc2ab47a0ec9659ac209c0", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2291571aa8d3aeee4707aceec025a55c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypesImpl.java", "commitBeforeChange": "70293ebfba1aa3d3dce9544e23e757d77487db91", "commitAfterChange": "2e4e63b9ed8aad7925bed1f9109d7e2d1a341f45", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     @Override     public boolean isSameType(TypeMirror t1, TypeMirror t2)", "signatureAfterChange": "     @Override     public boolean isSameType(TypeMirror t1, TypeMirror t2)", "diff": ["-        return b1 == b2;", "+", "+        if (b1 == b2) {", "+            return true;", "+        }", "+        if (!(b1 instanceof TypeBinding) || !(b2 instanceof TypeBinding)) {", "+            return false;", "+        }", "+        return ((TypeBinding) b1).unannotated() == ((TypeBinding) b2).unannotated(); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b841bd902cd1b6971d2ce231bb83d48", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "f2d453b40b80a7b4342f872cb4a2ceb30cb26035", "commitAfterChange": "ff67eddd91980875c818d1dd4c9e986c8fe296a7", "methodNumberBeforeChange": 127, "methodNumberAfterChange": 130, "signatureBeforeChange": " \tprivate boolean isForbidden(Binding binding)", "signatureAfterChange": " \tprivate boolean isForbidden(Binding binding)", "diff": ["+\t\t\tif((this.forbbidenBindingsFilter & SUBTYPE) != 0) {", "+\t\t\t\tif (binding instanceof TypeBinding && ", "+\t\t\t\t\t\tthis.forbbidenBindings[i] instanceof TypeBinding &&", "+\t\t\t\t\t\t((TypeBinding)binding).isCompatibleWith((TypeBinding)this.forbbidenBindings[i])) {", "+\t\t\t\t\treturn true;", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c802a391fc38361661385a147219a0a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/SourcePositionImpl.java", "commitBeforeChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "commitAfterChange": "2ed8d2842cd060fd2ed1992ac37d7e3f157e19c9", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r     public IResource getResource()", "signatureAfterChange": "     public IResource getResource()", "diff": ["-    public int getLength(){ return _length; }\r", "-    public IResource getResource(){\r", "-        return _decl.getResource();\r", "-    }\r", "+    public int getLength(){ return _length; }", "+    public IResource getResource(){", "+\t\tif( _decl instanceof DeclarationImpl )", "+\t\t\treturn ((DeclarationImpl)_decl).getResource();", "+\t\telse if( _decl instanceof AnnotationMirrorImpl )", "+\t\t\treturn ((AnnotationMirrorImpl)_decl).getResouce();", "+\t\telse if( _decl instanceof AnnotationValueImpl )", "+\t\t\treturn ((AnnotationValueImpl)_decl).getResource();", "+\t\t", "+\t\tthrow new IllegalStateException();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf3fa866c963bf193da23ba38161d920", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableBinding.java", "commitBeforeChange": "badeb0487ffc4d03b8894b177626763bdc461127", "commitAfterChange": "875cc8d42787c90738d8dc077a25eb401e9e38f9", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic boolean isEqualTo(IBinding other)", "signatureAfterChange": " \tpublic boolean isEqualTo(IBinding other)", "diff": ["-\t\t// check return type", "-\t\treturn BindingComparator.isEqual(this.binding, otherBinding);", "+\t\tif (this.binding instanceof FieldBinding) {", "+\t\t\tif (otherBinding instanceof FieldBinding) {", "+\t\t\t\treturn BindingComparator.isEqual((FieldBinding) this.binding, (FieldBinding) otherBinding);", "+\t\t\t} else {", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t} else {", "+\t\t\treturn BindingComparator.isEqual(this.binding, otherBinding);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e778fb5c8edb1ce82cf6be26ec29525a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypesImpl.java", "commitBeforeChange": "2daf63d08a96c2ed6e0e08ccfe89195f55d9f8ce", "commitAfterChange": "b4d3f967db596bbe85e51e090676967f450c3332", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     @Override     public boolean isSubtype(TypeMirror t1, TypeMirror t2)", "signatureAfterChange": "     @Override     public boolean isSubtype(TypeMirror t1, TypeMirror t2)", "diff": ["+    \tif (t1 instanceof NoTypeImpl) {", "+    \t\tif (t2 instanceof NoTypeImpl) {", "+    \t\t\treturn ((NoTypeImpl) t1).getKind() == ((NoTypeImpl) t2).getKind();", "+    \t\t}", "+    \t\treturn false;", "+    \t} else if (t2 instanceof NoTypeImpl) {", "+    \t\treturn false;", "+    \t}"]}], "num": 59522}