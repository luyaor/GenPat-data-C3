{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7ceb80efb53d69de65219715104a41d2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "703b86e24c27bd87593964a8664b9c21", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AnnotationParser.java", "commitBeforeChange": "6dc12c8b864920cd49413602075b8cd92ac189eb", "commitAfterChange": "02b069812d9eccf18b607ccee2550a6bb0833132", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tchar[] readIdentifier()", "signatureAfterChange": " \tchar[] readIdentifier()", "diff": ["-\t\ttry {", "-\t\t\tthis.scanner.currentCharacter = this.currentCharacter;", "-\t\t\tthis.scanner.startPosition = this.startPosition;", "-\t\t\tthis.scanner.currentPosition = this.currentPosition;", "-\t\t\t", "-\t\t\tint token = this.scanner.scanIdentifierOrKeyword();\t\t", "-\t\t\tif (token == TerminalTokens.TokenNameIdentifier) {", "-\t\t\t\tidentifier = this.scanner.getCurrentIdentifierSource();", "-\t\t\t}", "-\t\t} catch (InvalidInputException e) {", "-\t\t\t// ignore", "+\t\tthis.scanner.currentCharacter = this.currentCharacter;", "+\t\tthis.scanner.startPosition = this.startPosition;", "+\t\tthis.scanner.currentPosition = this.currentPosition;", "+\t\t", "+\t\tint token = this.scanner.scanIdentifierOrKeyword();\t\t", "+\t\tif (token == TerminalTokens.TokenNameIdentifier) {", "+\t\t\tidentifier = this.scanner.getCurrentIdentifierSource();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b85f9abf3735673f0471b9ae9e53f8d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionJavadocParser.java", "commitBeforeChange": "c4891fe70e58ba287a7bbc2f099afcf753974e95", "commitAfterChange": "f50252d848b2855a0e3b480a92607978678762ce", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tprotected int readTokenAndConsume() throws InvalidInputException", "signatureAfterChange": " \tprotected int readToken() throws InvalidInputException", "diff": ["-\tprotected int readTokenAndConsume() throws InvalidInputException {", "-\t\tint token = super.readTokenAndConsume();", "-\t\tif (token == TerminalTokens.TokenNameIdentifier) {", "-\t\t\tif (this.scanner.currentPosition == this.scanner.startPosition) {", "-\t\t\t\tthis.scanner.getCurrentIdentifierSource();", "-\t\t\t}", "+\tprotected int readToken() throws InvalidInputException {", "+\t\tint token = super.readToken();", "+\t\tif (token == TerminalTokens.TokenNameIdentifier && this.scanner.currentPosition == this.scanner.startPosition) {", "+\t\t\t// Scanner is looping on empty token => read it... ", "+\t\t\tthis.scanner.getCurrentIdentifierSource();"]}], "num": 2847}