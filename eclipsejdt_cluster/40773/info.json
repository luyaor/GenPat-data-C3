{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e014839ebaff9ad157dcf69fefc67da9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "238d30c30da578fb6ec251adeae4cf4e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "40383c2427f4645edcb9e28f2e15a8a778f0a951", "commitAfterChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "\r public char[] findSource(IType type, IBinaryType info)", "signatureAfterChange": "\r \tpublic char[] findSource(IType type, IBinaryType info)", "diff": ["- */\r", "-public char[] findSource(IType type, IBinaryType info) {\r", "-\tString name = null;\r", "-\t// see 1FVVWZT\r", "-\tif (info instanceof ClassFileReader) {\r", "-\t\tchar[] sourceFileName = ((ClassFileReader) info).sourceFileName();\r", "+\t */\r", "+\tpublic char[] findSource(IType type, IBinaryType info) {\r", "+\t\tchar[] sourceFileName = info.sourceFileName();\r", "-\t\tname = new String(sourceFileName);\r", "-\t} else {\r", "-\t\treturn null;\r", "-\t}\r", "+\t\tString name = new String(sourceFileName);\r", "-\tIPackageFragment pkgFrag = type.getPackageFragment();\r", "-\tif (!pkgFrag.isDefaultPackage()) {\r", "-\t\tString pkg= type.getPackageFragment().getElementName().replace('.', '/');\r", "-\t\tname= pkg + '/' + name;\r", "-\t}\r", "-\t// try to get the entry\r", "-\tZipEntry entry= null;\r", "-\tZipFile zip = null;\r", "-\tchar[] source= null;\r", "-\ttry {\r", "-\t\tString fullName;\r", "-\t\t//add the root path if specified\r", "-\t\tif (!fRootPath.equals(IPackageFragmentRoot.DEFAULT_PACKAGEROOT_PATH)) {\r", "-\t\t\tfullName= fRootPath + '/' + name;\r", "-\t\t} else {\r", "-\t\t\tfullName= name;\r", "+\t\tIPackageFragment pkgFrag = type.getPackageFragment();\r", "+\t\tif (!pkgFrag.isDefaultPackage()) {\r", "+\t\t\tString pkg = type.getPackageFragment().getElementName().replace('.', '/');\r", "+\t\t\tname = pkg + '/' + name;\r", "-\t\tzip = getZip();\r", "-\t\tentry= zip.getEntry(fullName);\r", "-\t\tif (entry != null) {\r", "-\t\t\t// now read the source code\r", "-\t\t\tbyte[] bytes= readEntry(zip, entry);\r", "-\t\t\tif (bytes != null) {\r", "+\t\t// try to get the entry\r", "+\t\tZipEntry entry = null;\r", "+\t\tZipFile zip = null;\r", "+\t\tchar[] source = null;\r", "+\t\ttry {\r", "+\t\t\tString fullName;\r", "+\t\t\t//add the root path if specified\r", "+\t\t\tif (!fRootPath.equals(IPackageFragmentRoot.DEFAULT_PACKAGEROOT_PATH)) {\r", "+\t\t\t\tfullName = fRootPath + '/' + name;\r", "+\t\t\t} else {\r", "+\t\t\t\tfullName = name;\r", "+\t\t\t}\r", "+\t\t\tzip = getZip();\r", "+\t\t\tentry = zip.getEntry(fullName);\r", "+\t\t\tif (entry != null) {\r", "+\t\t\t\t// now read the source code\r", "+\t\t\t\tbyte[] bytes = readEntry(zip, entry);\r", "+\t\t\t\tif (bytes != null) {\r", "+\t\t\t\t\ttry {\r", "+\t\t\t\t\t\tsource = BufferManager.bytesToChar(bytes);\r", "+\t\t\t\t\t} catch (JavaModelException e) {\r", "+\t\t\t\t\t\tsource = null;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t} catch (CoreException e) {\r", "+\t\t\treturn null;\r", "+\t\t} finally {\r", "+\t\t\tif (zip != null) {\r", "-\t\t\t\t\tsource= BufferManager.bytesToChar(bytes);\r", "-\t\t\t\t} catch (JavaModelException e) {\r", "-\t\t\t\t\tsource= null;\r", "+\t\t\t\t\tzip.close();\r", "+\t\t\t\t} catch (IOException e) {\r", "-\t} catch (CoreException e) {\r", "-\t\treturn null;\r", "-\t} finally {\r", "-\t\tif (zip != null) {\r", "-\t\t\ttry {\r", "-\t\t\t\tzip.close();\r", "-\t\t\t} catch(IOException e) {}\r", "+\t\treturn source;\r", "+\t}\r", "-\t}\r", "-\treturn source;\r", "-}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c60ab531e1d9fb5bdebe7d3dd94df28a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "135399ac7f48d47679e738d0a583e6c95ff87fd6", "commitAfterChange": "092d49846655da2c4e511a256ba551dc4e15c674", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "\r public char[] findSource(IType type, IBinaryType info)", "signatureAfterChange": "\r \tpublic char[] findSource(IType type, IBinaryType info)", "diff": ["- */\r", "-public char[] findSource(IType type, IBinaryType info) {\r", "-\tString name = null;\r", "-\t// see 1FVVWZT\r", "-\tif (info instanceof ClassFileReader) {\r", "-\t\tchar[] sourceFileName = ((ClassFileReader) info).sourceFileName();\r", "+\t */\r", "+\tpublic char[] findSource(IType type, IBinaryType info) {\r", "+\t\tchar[] sourceFileName = info.sourceFileName();\r", "-\t\tname = new String(sourceFileName);\r", "-\t} else {\r", "-\t\treturn null;\r", "-\t}\r", "+\t\tString name = new String(sourceFileName);\r", "-\tIPackageFragment pkgFrag = type.getPackageFragment();\r", "-\tif (!pkgFrag.isDefaultPackage()) {\r", "-\t\tString pkg= type.getPackageFragment().getElementName().replace('.', '/');\r", "-\t\tname= pkg + '/' + name;\r", "-\t}\r", "-\t// try to get the entry\r", "-\tZipEntry entry= null;\r", "-\tZipFile zip = null;\r", "-\tchar[] source= null;\r", "-\ttry {\r", "-\t\tString fullName;\r", "-\t\t//add the root path if specified\r", "-\t\tif (!fRootPath.equals(IPackageFragmentRoot.DEFAULT_PACKAGEROOT_PATH)) {\r", "-\t\t\tfullName= fRootPath + '/' + name;\r", "-\t\t} else {\r", "-\t\t\tfullName= name;\r", "+\t\tIPackageFragment pkgFrag = type.getPackageFragment();\r", "+\t\tif (!pkgFrag.isDefaultPackage()) {\r", "+\t\t\tString pkg = type.getPackageFragment().getElementName().replace('.', '/');\r", "+\t\t\tname = pkg + '/' + name;\r", "-\t\tzip = getZip();\r", "-\t\tentry= zip.getEntry(fullName);\r", "-\t\tif (entry != null) {\r", "-\t\t\t// now read the source code\r", "-\t\t\tbyte[] bytes= readEntry(zip, entry);\r", "-\t\t\tif (bytes != null) {\r", "+\t\t// try to get the entry\r", "+\t\tZipEntry entry = null;\r", "+\t\tZipFile zip = null;\r", "+\t\tchar[] source = null;\r", "+\t\ttry {\r", "+\t\t\tString fullName;\r", "+\t\t\t//add the root path if specified\r", "+\t\t\tif (!fRootPath.equals(IPackageFragmentRoot.DEFAULT_PACKAGEROOT_PATH)) {\r", "+\t\t\t\tfullName = fRootPath + '/' + name;\r", "+\t\t\t} else {\r", "+\t\t\t\tfullName = name;\r", "+\t\t\t}\r", "+\t\t\tzip = getZip();\r", "+\t\t\tentry = zip.getEntry(fullName);\r", "+\t\t\tif (entry != null) {\r", "+\t\t\t\t// now read the source code\r", "+\t\t\t\tbyte[] bytes = readEntry(zip, entry);\r", "+\t\t\t\tif (bytes != null) {\r", "+\t\t\t\t\ttry {\r", "+\t\t\t\t\t\tsource = BufferManager.bytesToChar(bytes);\r", "+\t\t\t\t\t} catch (JavaModelException e) {\r", "+\t\t\t\t\t\tsource = null;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t} catch (CoreException e) {\r", "+\t\t\treturn null;\r", "+\t\t} finally {\r", "+\t\t\tif (zip != null) {\r", "-\t\t\t\t\tsource= BufferManager.bytesToChar(bytes);\r", "-\t\t\t\t} catch (JavaModelException e) {\r", "-\t\t\t\t\tsource= null;\r", "+\t\t\t\t\tzip.close();\r", "+\t\t\t\t} catch (IOException e) {\r", "-\t} catch (CoreException e) {\r", "-\t\treturn null;\r", "-\t} finally {\r", "-\t\tif (zip != null) {\r", "-\t\t\ttry {\r", "-\t\t\t\tzip.close();\r", "-\t\t\t} catch(IOException e) {}\r", "+\t\treturn source;\r", "+\t}\r", "-\t}\r", "-\treturn source;\r", "-}\r"]}], "num": 40773}