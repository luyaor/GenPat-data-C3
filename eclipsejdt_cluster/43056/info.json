{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c0c57ce104222be9667d2988d428ebf9", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f867ce452cae2fe4d639da47033e332", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "d02bd6550c58d90c9715e43cd6d6787e2666be1b", "commitAfterChange": "108af22a70bd5ce5bac2996d806c5c7df39f1d74", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate boolean checkSelection( \t\tchar[] source, \t\tint selectionStart, \t\tint selectionEnd)", "signatureAfterChange": " \tprivate boolean checkSelection( \t\tchar[] source, \t\tint selectionStart, \t\tint selectionEnd)", "diff": ["+\t\t\t// compute end position of the selection", "+\t\t\tint end = selectionEnd + 1 == source.length ? selectionEnd : selectionEnd + 1;", "+\t\t\t\t\t\t", "+\t\t\t\t\t\tint endOfUnicode = pos + 3;", "+\t\t\t\t\t\tif (end < endOfUnicode) {", "+\t\t\t\t\t\t\tif (endOfUnicode < source.length) {", "+\t\t\t\t\t\t\t\tend = endOfUnicode;", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\treturn false; // not enough characters to decode an unicode", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\t", "-\t\t\tscanner.resetTo(nextCharacterPosition, selectionEnd + 1 == source.length ? selectionEnd : selectionEnd + 1);", "+\t\t\tscanner.resetTo(nextCharacterPosition, end);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cda38fc0ac1bd72112d3c696f5f70f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "67da1da15e9afbcd33679f07597c706e7915cf4a", "commitAfterChange": "027fccb2c17e0f0d2b28705c6704af10fc8ce0aa", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 55, "signatureBeforeChange": " protected void prepareForBlockStatements()", "signatureAfterChange": " protected void prepareForBlockStatements()", "diff": ["-\tthis.invocationPtr = -1;", "-}", "+\t", "+\t// initialize element stack", "+\tint fieldInitializerIndex = lastIndexOfElement(K_FIELD_INITIALIZER_DELIMITER);", "+\tint methodIndex = lastIndexOfElement(K_METHOD_DELIMITER);", "+\tif(methodIndex == fieldInitializerIndex) {", "+\t\t// there is no method and no field initializer", "+\t\telementPtr = -1;", "+\t} else if(methodIndex > fieldInitializerIndex) {", "+\t\tpopUntilElement(K_METHOD_DELIMITER);", "+\t} else {", "+\t\tpopUntilElement(K_FIELD_INITIALIZER_DELIMITER);"]}], "num": 43056}