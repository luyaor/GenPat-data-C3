{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f52ba5426f490d41e9da0f594f40c54c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e3fff8cddad2190a785266024627e21", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ProgrammingProblemsTest.java", "commitBeforeChange": "d0c29ef085aca7621ab6ac19e8de871cbd734495", "commitAfterChange": "c8ca33a12ce5373c4c6bcb65eced790d82bc1944", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void test0029_declared_thrown_unchecked_exceptions()", "signatureAfterChange": " public void test0026_declared_thrown_checked_exceptions()", "diff": ["-public void test0029_declared_thrown_unchecked_exceptions() {", "-\tcustomOptions.put(CompilerOptions.OPTION_ReportUnusedDeclaredThrownExceptionIncludeUncheckedExceptions, ", "-\t\t\tCompilerOptions.ENABLED);", "+// unchecked exceptions", "+public void test0026_declared_thrown_checked_exceptions() {", "+\tMap customOptions = new HashMap();", "+\tcustomOptions.put(CompilerOptions.OPTION_ReportUnusedDeclaredThrownExceptionExemptExceptionAndThrowable, ", "+\t\t\tCompilerOptions.DISABLED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f131760e8ed70681749c4b9fdac047e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ProgrammingProblemsTest.java", "commitBeforeChange": "d0c29ef085aca7621ab6ac19e8de871cbd734495", "commitAfterChange": "c8ca33a12ce5373c4c6bcb65eced790d82bc1944", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void test0028_declared_thrown_unchecked_exceptions()", "signatureAfterChange": " public void test0025_declared_thrown_checked_exceptions()", "diff": ["-// reporting unnecessary declaration of thrown unchecked exceptions as warning", "-public void test0028_declared_thrown_unchecked_exceptions() {", "-\tMap customOptions = new HashMap();", "-\tcustomOptions.put(CompilerOptions.OPTION_ReportUnusedDeclaredThrownExceptionIncludeUncheckedExceptions, ", "-\t\t\tCompilerOptions.ENABLED);", "+// unchecked exceptions", "+public void test0025_declared_thrown_checked_exceptions() {", "+\tMap customOptions = new HashMap();", "+\tcustomOptions.put(CompilerOptions.OPTION_ReportUnusedDeclaredThrownExceptionExemptExceptionAndThrowable, ", "+\t\t\tCompilerOptions.DISABLED);", "+\trunTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  public void foo() throws Exception {\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"", "+\t\t\t},", "+\t\tnull /* errorOptions */,", "+\t\tnew String[] {", "+\t\t\tCompilerOptions.OPTION_ReportUnusedDeclaredThrownException", "+\t\t\t} /* warningOptions */,", "+\t\tnull /* ignoreOptions */,", "+\t\tfalse /* expectingCompilerErrors */,", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 2)\\n\" + ", "+\t\t\"\tpublic void foo() throws Exception {\\n\" + ", "+\t\t\"\t                         ^^^^^^^^^\\n\" + ", "+\t\t\"The declared exception Exception is not actually thrown by the method foo() from type X\\n\" + ", "+\t\t\"----------\\n\" /* expectedCompilerLog */,", "+\t\t\"\" /* expectedOutputString */,", "+\t\tfalse /* forceExecution */,", "+\t\tnull /* classLib */,", "+\t\ttrue /* shouldFlushOutputDirectory */, ", "+\t\tnull /* vmArguments */, ", "+\t\tcustomOptions,", "+\t\tnull /* clientRequestor */,", "+\t\ttrue /* skipJavac */);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f55750f869468c34efa7610fb8a70243", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ProgrammingProblemsTest.java", "commitBeforeChange": "d0c29ef085aca7621ab6ac19e8de871cbd734495", "commitAfterChange": "c8ca33a12ce5373c4c6bcb65eced790d82bc1944", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 38, "signatureBeforeChange": " public void test0037_declared_thrown_unchecked_exceptions()", "signatureAfterChange": " public void test0034_declared_thrown_checked_exceptions()", "diff": ["-public void test0037_declared_thrown_unchecked_exceptions() {", "+// https://bugs.eclipse.org/bugs/show_bug.cgi?id=219461", "+public void test0034_declared_thrown_checked_exceptions() {", "-\tcustomOptions.put(CompilerOptions.OPTION_ReportUnusedDeclaredThrownExceptionIncludeUncheckedExceptions, ", "-\t\t\tCompilerOptions.ENABLED);", "+\tcustomOptions.put(CompilerOptions.OPTION_ReportUnusedDeclaredThrownExceptionExemptExceptionAndThrowable, ", "+\t\t\tCompilerOptions.DISABLED);"]}], "num": 44087}