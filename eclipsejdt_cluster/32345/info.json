{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "96c1bfa9fb76bda206bd25e88b510756", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cacf733c246e251a69c31995d18d39df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 580, "methodNumberAfterChange": 683, "signatureBeforeChange": "  \tpublic void testClassInstanceCreation()", "signatureAfterChange": "  \tpublic void testClassInstanceCreation()", "diff": ["-\t\tassertTrue(x.getName().getParent() == x);", "+\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "+\t\t\tassertTrue(x.getName().getParent() == x);", "+\t\t} else {", "+\t\t\tassertTrue(x.getType().getParent() == x);", "+\t\t}", "-\t\tgenericPropertyTest(x, new Property(\"Name\", true, Name.class) { //$NON-NLS-1$", "-\t\t\tpublic ASTNode sample(AST targetAst, boolean parented) {", "-\t\t\t\tSimpleName result = targetAst.newSimpleName(\"a\"); //$NON-NLS-1$", "-\t\t\t\tif (parented) {", "-\t\t\t\t\ttargetAst.newExpressionStatement(result);", "+\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "+\t\t\tgenericPropertyTest(x, new Property(\"Name\", true, Name.class) { //$NON-NLS-1$", "+\t\t\t\tpublic ASTNode sample(AST targetAst, boolean parented) {", "+\t\t\t\t\tSimpleName result = targetAst.newSimpleName(\"a\"); //$NON-NLS-1$", "+\t\t\t\t\tif (parented) {", "+\t\t\t\t\t\ttargetAst.newExpressionStatement(result);", "+\t\t\t\t\t}", "+\t\t\t\t\treturn result;", "-\t\t\t\treturn result;", "-\t\t\t}", "-\t\t\tpublic ASTNode get() {", "-\t\t\t\treturn x.getName();", "-\t\t\t}", "-\t\t\tpublic void set(ASTNode value) {", "-\t\t\t\tx.setName((Name) value);", "-\t\t\t}", "-\t\t});", "-", "+\t\t\t\tpublic ASTNode get() {", "+\t\t\t\t\treturn x.getName();", "+\t\t\t\t}", "+\t\t\t\tpublic void set(ASTNode value) {", "+\t\t\t\t\tx.setName((Name) value);", "+\t\t\t\t}", "+\t\t\t});", "+\t\t}", "+\t\t", "+\t\tif (ast.apiLevel() >= AST.LEVEL_3_0) {", "+\t\t\tgenericPropertyTest(x, new Property(\"Type\", true, Type.class) { //$NON-NLS-1$", "+\t\t\t\tpublic ASTNode sample(AST targetAst, boolean parented) {", "+\t\t\t\t\tSimpleType result = targetAst.newSimpleType(targetAst.newSimpleName(\"foo\")); //$NON-NLS-1$", "+\t\t\t\t\tif (parented) {", "+\t\t\t\t\t\ttargetAst.newArrayType(result);", "+\t\t\t\t\t}", "+\t\t\t\t\treturn result;", "+\t\t\t\t}", "+\t\t\t\tpublic ASTNode get() {", "+\t\t\t\t\treturn x.getType();", "+\t\t\t\t}", "+\t\t\t\tpublic void set(ASTNode value) {", "+\t\t\t\t\tx.setType((Type) value);", "+\t\t\t\t}", "+\t\t\t});", "+\t\t}", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea1ade84b14aa3337658627b8097442b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "226043f9dd3d1e9322a49e57d09a88a325e9c26a", "commitAfterChange": "151e041480380fb109f20c95c721957f96ef7aa0", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 151, "signatureBeforeChange": "\t\t  \tpublic void testPackageDeclaration()", "signatureAfterChange": "\t\t  \tpublic void testPackageDeclaration()", "diff": ["+\t\t\tassertTrue(x.getJavadoc() == null);", "+\t\t\tgenericPropertyTest(x, new Property(\"Javadoc\", false, Javadoc.class) { //$NON-NLS-1$", "+\t\t\t\tpublic ASTNode sample(AST targetAst, boolean parented) {", "+\t\t\t\t\tJavadoc result = targetAst.newJavadoc();", "+\t\t\t\t\tif (parented) {", "+\t\t\t\t\t\ttargetAst.newInitializer().setJavadoc(result);", "+\t\t\t\t\t}", "+\t\t\t\t\treturn result;", "+\t\t\t\t}", "+\t\t\t\tpublic ASTNode get() {", "+\t\t\t\t\treturn x.getJavadoc();", "+\t\t\t\t}", "+\t\t\t\tpublic void set(ASTNode value) {", "+\t\t\t\t\tx.setJavadoc((Javadoc) value);", "+\t\t\t\t}", "+\t\t\t});", "+\t\t\t"]}], "num": 32345}