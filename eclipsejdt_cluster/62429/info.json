{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "69e0db8d3ca43a7d6257d20491bc048c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34c1a1fc728825c1c219064d894d86db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SignatureTests.java", "commitBeforeChange": "a8bd7e97c152777f1e1948ccf67fa409ae0b55bc", "commitAfterChange": "f75845a909c9709790a752489e8b24df93e2c103", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void testGetParameterCount()", "signatureAfterChange": " public void testGetParameterCount01()", "diff": ["-public void testGetParameterCount() {", "+public void testGetParameterCount01() {", "-\tassertEquals(\"Signature#getParameterCount is not correct1\", 3,", "+\tassertEquals(\"Signature#getParameterCount is not correct\", 3,", "+}", "-\t// tests with 1.5-specific elements", "-\tmethodSig = \"<X:Qlist<Qstring;>;>(IQlist;Tww;)Qlist<Qxxx;>;^Qexception;^Qerror;\";", "-\tassertEquals(\"Signature#getParameterCount is not correct3\", 3,", "-\tmethodSig = \"<X:Qlist<Qstring;>;>(IQlist<Qstring;>;Tww;)Qlist<Qxxx;>;^Qexception;^Qerror;\";", "-\tassertEquals(\"Signature#getParameterCount is not correct4\", 3,", "-\t", "-\tmethodSig= \"foo(+Ljava.lang.Comparable;)\";", "-\tassertEquals(\"Signature#getParameterCount is not correct5\", 1,", "-", "-\tmethodSig= \"foo(+Ljava.lang.Comparable;)\";", "-\tassertEquals(\"Signature#getParameterCount is not correct6\", 1,", "-\t", "-\tmethodSig= \"foo(*)\";", "-\tassertEquals(\"Signature#getParameterCount is not correct7\", 1,", "-\t", "-\tmethodSig= \"foo(LA<+Ljava.lang.Comparable;>;)\";", "-\tassertEquals(\"Signature#getParameterCount is not correct8\", 1,", "-", "-\tmethodSig= \"foo(LA<-Ljava.lang.Comparable;>;)\";", "-\tassertEquals(\"Signature#getParameterCount is not correct9\", 1,", "-", "-\tmethodSig= \"foo(LA<*>;)\";", "-\tassertEquals(\"Signature#getParameterCount is not correct10\", 1,", "-", "-\tmethodSig= \"foo(LA<+Ljava.lang.Comparable;+Ljava.lang.Comparable;>;)\";", "-\tassertEquals(\"Signature#getParameterCount is not correct11\", 1,", "-", "-\tmethodSig= \"foo(+Ljava.lang.Comparable;+Ljava.lang.Comparable;)\";", "-\tassertEquals(\"Signature#getParameterCount is not correct12\", 2,", "-", "-\tmethodSig= \"foo(+Ljava.lang.Comparable;-Ljava.lang.Comparable;)\";", "-\tassertEquals(\"Signature#getParameterCount is not correct13\", 2,", "-", "-\tmethodSig= \"foo(Ljava.util.List<-[Ljava.lang.Number;>;)\";", "-\tassertEquals(\"Signature#getParameterCount is not correct14\", 1,", "-\t", "-\tmethodSig= \"foo(LA<++Ljava.lang.Comparable;>;)\";", "-\tassertEquals(\"Signature#getParameterCount is not correct14\", 1,", "-", "-\tmethodSig= \"foo(LA<--Ljava.lang.Comparable;>;)\";", "-\tassertEquals(\"Signature#getParameterCount is not correct14\", 1,", "-", "-\tmethodSig= \"foo(LA<+-Ljava.lang.Comparable;>;)\";", "-\tassertEquals(\"Signature#getParameterCount is not correct14\", 1,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "878ad12659a291b9da39553ed622ad8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SignatureTests.java", "commitBeforeChange": "f8fbd2ef937bb9a099dbb116efd7aa2bc746a321", "commitAfterChange": "87035e28d15718dec923cda9730195aba7b8ab31", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void testGetParameterCount()", "signatureAfterChange": " public void testGetParameterCount()", "diff": ["+\t", "+\tmethodSig= \"foo(+Ljava.lang.Comparable;)\";", "+\tassertEquals(\"Signature#getParameterCount is not correct5\", 1,", "+\t\t\tSignature.getParameterCount(methodSig));", "+", "+\tmethodSig= \"foo(+Ljava.lang.Comparable;)\";", "+\tassertEquals(\"Signature#getParameterCount is not correct6\", 1,", "+\t\t\tSignature.getParameterCount(methodSig));", "+\t", "+\tmethodSig= \"foo(*)\";", "+\tassertEquals(\"Signature#getParameterCount is not correct7\", 1,", "+\t\t\tSignature.getParameterCount(methodSig));", "+\t", "+\tmethodSig= \"foo(LA<+Ljava.lang.Comparable;>;)\";", "+\tassertEquals(\"Signature#getParameterCount is not correct8\", 1,", "+\t\t\tSignature.getParameterCount(methodSig));", "+", "+\tmethodSig= \"foo(LA<-Ljava.lang.Comparable;>;)\";", "+\tassertEquals(\"Signature#getParameterCount is not correct9\", 1,", "+\t\t\tSignature.getParameterCount(methodSig));", "+", "+\tmethodSig= \"foo(LA<*>;)\";", "+\tassertEquals(\"Signature#getParameterCount is not correct10\", 1,", "+\t\t\tSignature.getParameterCount(methodSig));", "+", "+\tmethodSig= \"foo(LA<+Ljava.lang.Comparable;+Ljava.lang.Comparable;>;)\";", "+\tassertEquals(\"Signature#getParameterCount is not correct11\", 1,", "+\t\t\tSignature.getParameterCount(methodSig));", "+", "+\tmethodSig= \"foo(+Ljava.lang.Comparable;+Ljava.lang.Comparable;)\";", "+\tassertEquals(\"Signature#getParameterCount is not correct12\", 2,", "+\t\t\tSignature.getParameterCount(methodSig));", "+", "+\tmethodSig= \"foo(+Ljava.lang.Comparable;-Ljava.lang.Comparable;)\";", "+\tassertEquals(\"Signature#getParameterCount is not correct13\", 2,", "+\t\t\tSignature.getParameterCount(methodSig));", "+", "+\tmethodSig= \"foo(Ljava.util.List<-[Ljava.lang.Number;>;)\";", "+\tassertEquals(\"Signature#getParameterCount is not correct14\", 1,", "+\t\t\tSignature.getParameterCount(methodSig));", "+\ttry {", "+\t\tSignature.getParameterCount(\"foo(LA<++Ljava.lang.Comparable;>;)\");", "+\t\tassertTrue(\"Signature#getParameterCount is not correct: exception\", false);", "+\t} catch (IllegalArgumentException iae) {", "+\t\t// do nothing", "+\t}", "+", "+\ttry {", "+\t\tSignature.getParameterCount(\"foo(LA<--Ljava.lang.Comparable;>;)\");", "+\t\tassertTrue(\"Signature#getParameterCount is not correct: exception\", false);", "+\t} catch (IllegalArgumentException iae) {", "+\t\t// do nothing", "+\t}", "+", "+\ttry {", "+\t\tSignature.getParameterCount(\"foo(LA<+-Ljava.lang.Comparable;>;)\");", "+\t\tassertTrue(\"Signature#getParameterCount is not correct: exception\", false);", "+\t} catch (IllegalArgumentException iae) {", "+\t\t// do nothing", "+\t}"]}], "num": 62429}