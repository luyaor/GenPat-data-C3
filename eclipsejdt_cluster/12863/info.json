{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "82c5a047404fd57d21f70d3bb79fa96c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b039d0e45f45d26637262b181dbed92", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "6dbf227f3909a5c9be3f2b1942d08bb2a333adf5", "commitAfterChange": "1007c186f9f6b762c7a99cc47620c05dbb87ab5f", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " \tpublic boolean visit( \t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\tCompilationUnitScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\tCompilationUnitScope scope)", "diff": ["-\t\t\tfor (int i = 0; i < importLength; i++) {", "-\t\t\t\timports[i].traverse(this, scope);", "-\t\t\t}\t\t\t", "+\t\t\tif (importLength != 1) {", "+\t\t\t\timports[0].traverse(this, scope);", "+\t\t\t\tint savedNumberOfLineToPreserve = this.preferences.number_of_empty_lines_to_preserve;", "+\t\t\t\tthis.preferences.number_of_empty_lines_to_preserve = this.preferences.blank_lines_between_import_groups;", "+    \t\t\tfor (int i = 1; i < importLength; i++) {", "+    \t\t\t\timports[i].traverse(this, scope);", "+    \t\t\t}", "+    \t\t\tthis.preferences.number_of_empty_lines_to_preserve = savedNumberOfLineToPreserve;", "+\t\t\t} else {", "+\t\t\t\timports[0].traverse(this, scope);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b962f36d1c9dc59d0203324913e775e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "731929a06a8f05076b7a266e45ecc75a2b6ababa", "commitAfterChange": "120a1314bcf80baae4607793238bcd14718d9568", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " \tpublic boolean visit( \t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\tCompilationUnitScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\tCompilationUnitScope scope)", "diff": ["-\t\tif (compilationUnitDeclaration.currentPackage != null) {", "+\t\tfinal boolean hasPackage = compilationUnitDeclaration.currentPackage != null;", "+\t\tint numberOfEmptyLineToPreserve = this.preferences.number_of_empty_lines_to_preserve;", "+\t\tthis.preferences.number_of_empty_lines_to_preserve = 0;", "+\t\tif (hasPackage) {", "+\t\t\t\tthis.preferences.number_of_empty_lines_to_preserve = numberOfEmptyLineToPreserve;", "+\t\t\tthis.preferences.number_of_empty_lines_to_preserve = numberOfEmptyLineToPreserve;", "-\t\t\t}\t\t\t", "+\t\t\t}", "-\t\t", "-\t\t\tint blankLinesBeforeImports = this.preferences.blank_lines_before_imports;", "-\t\t\tif (blankLinesBeforeImports > 0) {", "-\t\t\t\tthis.scribe.printEmptyLines(blankLinesBeforeImports);", "+\t\t\tif (hasPackage) {", "+\t\t\t\tint blankLinesBeforeImports = this.preferences.blank_lines_before_imports;", "+\t\t\t\tif (blankLinesBeforeImports > 0) {", "+\t\t\t\t\tthis.scribe.printEmptyLines(blankLinesBeforeImports);", "+\t\t\t\t}", "-", "+\t", "+\t\tthis.preferences.number_of_empty_lines_to_preserve = numberOfEmptyLineToPreserve;"]}], "num": 12863}