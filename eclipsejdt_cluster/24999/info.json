{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6ca6acdd16112aeb6c7839aa5d7415b4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d53baec591e7398eaf02db8f0fa725d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/Constant.java", "commitBeforeChange": "6017f4facf1d44f5b60f882841fc9461dff344b3", "commitAfterChange": "8bb6b9481b79f29da1fc965f1ebeeb888e97d205", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public final Constant castTo(int conversionToTargetType)", "signatureAfterChange": "\r public final Constant castTo(int conversionToTargetType)", "diff": ["-\t    case (T_long<<4)+T_short  \t\t : return Constant.fromValue((long)this.shortValue()); ; \r", "+\t    case (T_long<<4)+T_short  \t\t : return Constant.fromValue((long)this.shortValue()); \r", "-\t    case (T_long<<4)+T_double  \t\t : return Constant.fromValue((long)this.doubleValue()); ;   \r", "-\t    case (T_long<<4)+T_float  \t\t : return Constant.fromValue((long)this.floatValue()); ;   \r", "+\t    case (T_long<<4)+T_double  \t\t : return Constant.fromValue((long)this.doubleValue());   \r", "+\t    case (T_long<<4)+T_float  \t\t : return Constant.fromValue((long)this.floatValue());  \r", "-\t    case (T_long<<4)+T_char  \t\t : return Constant.fromValue((long)this.charValue()); ;  \r", "-\t    case (T_long<<4)+T_int  \t\t : return Constant.fromValue((long)this.intValue()); ;  \r", "+\t    case (T_long<<4)+T_char  \t\t : return Constant.fromValue((long)this.charValue()); \r", "+\t    case (T_long<<4)+T_int  \t\t : return Constant.fromValue((long)this.intValue()); \r", "-\t    case (T_short<<4)+T_byte  \t\t : return Constant.fromValue((short)this.byteValue()); ; \r", "-\t    case (T_short<<4)+T_long  \t\t : return Constant.fromValue((short)this.longValue()); ;  \r", "+\t    case (T_short<<4)+T_byte  \t\t : return Constant.fromValue((short)this.byteValue());\r", "+\t    case (T_short<<4)+T_long  \t\t : return Constant.fromValue((short)this.longValue()); \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d3b5dd459fe14673cd59f577238a755", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/Constant.java", "commitBeforeChange": "d7e7bb059880a6c87ea3290708d2d0a9f9e7ebe8", "commitAfterChange": "a415220ad0bdc743d286b40ccc481ededfe8132e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic final Constant castTo(int conversionToTargetType)", "signatureAfterChange": "  \tpublic final Constant castTo(int conversionToTargetType)", "diff": ["-\t//\t    case (T_undefined<<4)+T_null  \t\t : return NotAConstant;   ", "-\t//\t    case (T_byte<<4)+T_null  \t\t : return NotAConstant;   ", "-\t//\t    case (T_long<<4)+T_null  \t\t : return NotAConstant;   ", "-\t//\t    case (T_short<<4)+T_null  \t\t : return NotAConstant;   ", "-\t//\t    case (T_void<<4)+T_null  \t\t : return NotAConstant;   ", "-\t//\t    case (T_String<<4)+T_null  \t\t : return NotAConstant;   ", "-\t\t    case (T_Object<<4)+T_null  \t\t \t: return this;   ", "-\t//\t    case (T_double<<4)+T_null  \t\t \t: return NotAConstant;   ", "-\t//\t    case (T_float<<4)+T_null  \t\t : return NotAConstant;   ", "-\t//\t    case (T_boolean<<4)+T_null  \t\t\t : return NotAConstant;   ", "-\t//\t    case (T_char<<4)+T_null  \t\t : return NotAConstant;   ", "-\t//\t    case (T_int<<4)+T_null  \t\t : return NotAConstant;   ", "-\t//\t    case (T_null<<4)+T_undefined  \t\t : return NotAConstant;   ", "-\t//\t    case (T_null<<4)+T_byte  \t\t\t : return NotAConstant;   ", "-\t//\t    case (T_null<<4)+T_long  \t\t\t : return NotAConstant;   ", "-\t//\t    case (T_null<<4)+T_short  \t\t\t : return NotAConstant;   ", "-\t//\t    case (T_null<<4)+T_void  \t\t\t : return NotAConstant;   ", "-\t//\t    case (T_null<<4)+T_String  \t\t \t : return NotAConstant;   ", "-\t//\t    case (T_null<<4)+T_Object  \t\t\t : return NotAConstant;   ", "-\t//\t    case (T_null<<4)+T_double  \t\t \t : return NotAConstant;   ", "-\t//\t    case (T_null<<4)+T_float  \t\t\t : return NotAConstant;   ", "-\t//\t    case (T_null<<4)+T_boolean  \t\t : return NotAConstant;   ", "-\t//\t    case (T_null<<4)+T_char  \t\t\t : return NotAConstant;   ", "-\t//\t    case (T_null<<4)+T_int  \t\t\t : return NotAConstant;   ", "-\t\t    case (T_null<<4)+T_null  \t\t\t : return this;"]}], "num": 24999}