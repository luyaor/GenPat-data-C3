{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "299823fb2b5b9ab82b40db8f7ee0c1fa", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b49121c5c13db01f04a6ba12aaf5c6ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "c6961acc233e64a82278d28e67157307632639ee", "commitAfterChange": "f0a2b85aaf6b088579e27d2ecfb4517d7d426ed6", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic static String concat(String s1, String s2, String s3)", "signatureAfterChange": " \tpublic static String concatenateName(String name1, String name2, char separator)", "diff": ["+\tpublic static String concatenateName(String name1, String name2, char separator) {", "+\t\tStringBuffer buf= new StringBuffer();", "+\t\tif (name1 != null && name1.length() > 0) {", "+\t\t\tbuf.append(name1);", "+\t\t}", "+\t\tif (name2 != null && name2.length() > 0) {", "+\t\t\tif (buf.length() > 0) {", "+\t\t\t\tbuf.append(separator);", "+\t\t\t}", "+\t\t\tbuf.append(name2);", "+\t\t}", "+\t\treturn buf.toString();", "+\t}", "-\t */", "-\tpublic static String concat(String s1, String s2, String s3) {", "-\t\tif (s1 == null) s1 = \"null\"; //$NON-NLS-1$", "-\t\tif (s2 == null) s2 = \"null\"; //$NON-NLS-1$", "-\t\tif (s3 == null) s3 = \"null\"; //$NON-NLS-1$", "-\t\tint l1 = s1.length();", "-\t\tint l2 = s2.length();", "-\t\tint l3 = s3.length();", "-\t\tchar[] buf = new char[l1 + l2 + l3];", "-\t\ts1.getChars(0, l1, buf, 0);", "-\t\ts2.getChars(0, l2, buf, l1);", "-\t\ts3.getChars(0, l3, buf, l1 + l2);", "-\t\treturn new String(buf);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fce3657611e4ddfcd8d376ec27e24d87", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ExplicitConstructorCall.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic String toString(int tab)", "signatureAfterChange": "  \tpublic StringBuffer printStatement(int indent, StringBuffer output)", "diff": ["+\tpublic StringBuffer printStatement(int indent, StringBuffer output) {", "+", "+\t\tprintIndent(indent, output);", "+\t\tif (qualification != null) qualification.printExpression(0, output).append('.');", "+\t\tif (accessMode == This) {", "+\t\t\toutput.append(\"this(\"); //$NON-NLS-1$", "+\t\t} else {", "+\t\t\toutput.append(\"super(\"); //$NON-NLS-1$", "+\t\t}", "+\t\tif (arguments != null) {", "+\t\t\tfor (int i = 0; i < arguments.length; i++) {", "+\t\t\t\tif (i > 0) output.append(\", \"); //$NON-NLS-1$", "+\t\t\t\targuments[i].printExpression(0, output);", "+\t\t\t}", "+\t\t}", "+\t\treturn output.append(\");\"); //$NON-NLS-1$", "+\t}", "-", "-\tpublic String toString(int tab) {", "-", "-\t\tString s = tabString(tab);", "-\t\tif (qualification != null)", "-\t\t\ts = s + qualification.toStringExpression() + \".\"; //$NON-NLS-1$", "-\t\tif (accessMode == This) {", "-\t\t\ts = s + \"this(\"; //$NON-NLS-1$", "-\t\t} else {", "-\t\t\ts = s + \"super(\"; //$NON-NLS-1$", "-\t\t}", "-\t\tif (arguments != null)", "-\t\t\tfor (int i = 0; i < arguments.length; i++) {", "-\t\t\t\ts = s + arguments[i].toStringExpression();", "-\t\t\t\tif (i != arguments.length - 1)", "-\t\t\t\t\ts = s + \", \"; //$NON-NLS-1$", "-\t\t\t}", "-\t\ts = s + \")\"; //$NON-NLS-1$", "-\t\treturn s;"]}], "num": 29629}