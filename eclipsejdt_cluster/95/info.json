{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "724ec81befa788534b6864cc82d50052", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29ebbbc6e9f6f0bc99f670ddb8c660a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "5046f0da42323773845d7a3edf39df0b8c6a1944", "commitAfterChange": "80f69cca108e407e297e62382ba04bd29eb1703d", "methodNumberBeforeChange": 179, "methodNumberAfterChange": 183, "signatureBeforeChange": "  \tprivate static void recreatePersistedContainer(final IJavaProject project, final IPath containerPath, String containerString, boolean addToContainerValues)", "signatureAfterChange": "  \tprivate static void recreatePersistedContainer(final IJavaProject project, final IPath containerPath, String containerString, boolean addToContainerValues)", "diff": ["-\t\t\t\tentries = ((JavaProject) project).decodeClasspath(containerString, null/*not interested in unknown elements*/);", "+\t\t\t\tentries = ((JavaProject) project).decodeClasspath(containerString, null/*not interested in unknown elements*/)[0];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2ee290f84732276e5c66732bed65df8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "5046f0da42323773845d7a3edf39df0b8c6a1944", "commitAfterChange": "80f69cca108e407e297e62382ba04bd29eb1703d", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 89, "signatureBeforeChange": " \tpublic IClasspathEntry[] getRawClasspath() throws JavaModelException", "signatureAfterChange": " \tpublic IClasspathEntry[] getRawClasspath() throws JavaModelException", "diff": ["-\t\tclasspath = perProjectInfo.readAndCacheClasspath(this);", "+\t\tclasspath = perProjectInfo.readAndCacheClasspath(this)[0];"]}], "num": 95}