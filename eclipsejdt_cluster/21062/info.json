{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d49c849ade11ccc0aa92ca3793192787", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cf5245f406a7431a4af0c3e85ea7027", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "a00b91e363390d5872f24709421a2a2b1249ea30", "commitAfterChange": "61bf91bb0112a7323235a8711e82564a6109221c", "methodNumberBeforeChange": 247, "methodNumberAfterChange": 247, "signatureBeforeChange": "\t\t \tpublic void test243()", "signatureAfterChange": "\t\t \tpublic void test243()", "diff": ["-\t\t\t\t\"    public A foo() { return this; }\\n\" +", "+\t\t\t\t\"    @Override public A foo() { return this; }\\n\" +", "-\t\t\t\t\"    public X foo() { return new X(); }\\n\" +", "-\t\t\t\t\"    public B foo() { return this; }\\n\" +", "+\t\t\t\t\"    @Override public X foo() { return new X(); }\\n\" +", "+\t\t\t\t\"    @Override public B foo() { return this; }\\n\" +", "-\t\t\t\t\"    public X foo() { return new X(); }\\n\" +", "+\t\t\t\t\"    @Override public X foo() { return new X(); }\\n\" +", "-\t\t\t\"1. WARNING in SubTypes.java (at line 2)\\n\" + ", "-\t\t\t\"\tpublic A foo() { return this; }\\n\" + ", "-\t\t\t\"\t         ^^^^^\\n\" + ", "-\t\t\t\"The method foo() of type A should be tagged with @Override since it actually overrides a superclass method\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in SubTypes.java (at line 5)\\n\" + ", "-\t\t\t\"\tpublic X foo() { return new X(); }\\n\" + ", "-\t\t\t\"\t         ^^^^^\\n\" + ", "+\t\t\t\"1. ERROR in SubTypes.java (at line 5)\\n\" + ", "+\t\t\t\"\t@Override public X foo() { return new X(); }\\n\" + ", "+\t\t\t\"\t                   ^^^^^\\n\" + ", "-\t\t\t\"3. ERROR in SubTypes.java (at line 6)\\n\" + ", "-\t\t\t\"\tpublic B foo() { return this; }\\n\" + ", "-\t\t\t\"\t         ^^^^^\\n\" + ", "+\t\t\t\"2. ERROR in SubTypes.java (at line 6)\\n\" + ", "+\t\t\t\"\t@Override public B foo() { return this; }\\n\" + ", "+\t\t\t\"\t                   ^^^^^\\n\" + ", "-\t\t\t\"4. ERROR in SubTypes.java (at line 9)\\n\" + ", "-\t\t\t\"\tpublic X foo() { return new X(); }\\n\" + ", "-\t\t\t\"\t         ^^^^^\\n\" + ", "+\t\t\t\"3. ERROR in SubTypes.java (at line 9)\\n\" + ", "+\t\t\t\"\t@Override public X foo() { return new X(); }\\n\" + ", "+\t\t\t\"\t                   ^^^^^\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87ea62b2ed30dfc52b1a1c76047e9f87", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocBugsTest.java", "commitBeforeChange": "7630777cf7ef8a4120e715e810a80717f836592b", "commitAfterChange": "699f26e934e59aeb24a73287942d4b68645611a6", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic void testBug45782a()", "signatureAfterChange": " \tpublic void testBug45782a()", "diff": ["-\t\t\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\t\t\"\tpublic int foo(String str) throws IllegalArgumentException { return 0; }\\n\" + ", "-\t\t\t\t\"\t       ^^^\\n\" + ", "-\t\t\t\t\"Javadoc: Missing tag for return type\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\t\t\"\tpublic int foo(String str) throws IllegalArgumentException { return 0; }\\n\" + ", "-\t\t\t\t\"\t                      ^^^\\n\" + ", "-\t\t\t\t\"Javadoc: Missing tag for parameter str\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"3. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\t\t\"\tpublic int foo(String str) throws IllegalArgumentException { return 0; }\\n\" + ", "-\t\t\t\t\"\t                                  ^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\"Javadoc: Missing tag for declared exception IllegalArgumentException\\n\" + ", "-\t\t\t\t\"----------\\n\"", "+\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\t* {@inheritDoc}\\n\" + ", "+\t\t\t\"\t    ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: Unexpected tag\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tpublic int foo(String str) throws IllegalArgumentException { return 0; }\\n\" + ", "+\t\t\t\"\t       ^^^\\n\" + ", "+\t\t\t\"Javadoc: Missing tag for return type\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tpublic int foo(String str) throws IllegalArgumentException { return 0; }\\n\" + ", "+\t\t\t\"\t                      ^^^\\n\" + ", "+\t\t\t\"Javadoc: Missing tag for parameter str\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tpublic int foo(String str) throws IllegalArgumentException { return 0; }\\n\" + ", "+\t\t\t\"\t                                  ^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: Missing tag for declared exception IllegalArgumentException\\n\" + ", "+\t\t\t\"----------\\n\""]}], "num": 21062}