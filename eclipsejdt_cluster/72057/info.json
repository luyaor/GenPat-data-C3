{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e17038103befe8890602124580d888c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42aaff4ff4c2da9e8e71bca766f03b46", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "25be1dbaf8fb1fd662379be5af2493a9cf321ce6", "commitAfterChange": "e044b611f0f1c6c6d210b119e4ddf6a868a2b664", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public Binding getBinding(char[][] compoundName, int mask, InvocationSite invocationSite, boolean needResolve)", "signatureAfterChange": " public Binding getBinding(char[][] compoundName, int mask, InvocationSite invocationSite, boolean needResolve)", "diff": ["-\tbinding = environment().convertToRawType((ReferenceBinding) binding);", "+\tReferenceBinding referenceBinding = (ReferenceBinding) binding;", "+\tbinding = environment().convertToRawType(referenceBinding);", "+\tif (invocationSite instanceof ASTNode) {", "+\t\tASTNode invocationNode = (ASTNode) invocationSite;", "+\t\tif (invocationNode.isTypeUseDeprecated(referenceBinding, this)) {", "+\t\t\tproblemReporter().deprecatedType(referenceBinding, invocationNode);", "+\t\t}", "+\t}", "-\t\tReferenceBinding referenceBinding = (ReferenceBinding) binding;", "+\t\treferenceBinding = (ReferenceBinding) binding;", "+\t\tif (invocationSite instanceof ASTNode) {", "+\t\t\treferenceBinding = (ReferenceBinding) binding;", "+\t\t\tASTNode invocationNode = (ASTNode) invocationSite;", "+\t\t\tif (invocationNode.isTypeUseDeprecated(referenceBinding, this)) {", "+\t\t\t\tproblemReporter().deprecatedType(referenceBinding, invocationNode);", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97bb12eb14ac69c61a4cd3ed068f9cf7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "c870f031a98c81ecd7c6b67e75c9e69323537096", "commitAfterChange": "5b2be5e77960f7aa4dfe7d5eb915a5439f635d3a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " void faultInImports()", "signatureAfterChange": " void faultInImports()", "diff": ["-\t\t\t\tif (importBinding instanceof ProblemFieldBinding && importBinding.problemId() == ProblemReasons.Ambiguous) {", "+\t\t\t\tif (importBinding.problemId() == ProblemReasons.Ambiguous) {", "-\t\t\t\tif (importReference.isTypeUseDeprecated(referenceBinding, this))", "-\t\t\t\t\tproblemReporter().deprecatedType(referenceBinding, importReference);", "+\t\t\t\tReferenceBinding typeToCheck = referenceBinding.problemId() == ProblemReasons.Ambiguous", "+\t\t\t\t\t? ((ProblemReferenceBinding) referenceBinding).closestMatch", "+\t\t\t\t\t: referenceBinding;", "+\t\t\t\tif (importReference.isTypeUseDeprecated(typeToCheck, this))", "+\t\t\t\t\tproblemReporter().deprecatedType(typeToCheck, importReference);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b379f1c5d02d9a0e3ea1d2c89401ac1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingComparator.java", "commitBeforeChange": "78ed311ef72b443cc728f27421052257b683cc6b", "commitAfterChange": "1995deba8c96efdefeb6a6078c7e55c511780c0c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tstatic boolean isEqual(org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding2)", "signatureAfterChange": " \tstatic boolean isEqual(org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding2)", "diff": ["-\t\t\treturn CharOperation.equals(referenceBinding.compoundName, referenceBinding2.compoundName);", "+\t\t\treturn CharOperation.equals(referenceBinding.compoundName, referenceBinding2.compoundName)", "+\t\t\t\t&& (referenceBinding.isParameterizedType() == referenceBinding2.isParameterizedType())", "+\t\t\t\t&& (referenceBinding.isWildcard() == referenceBinding2.isWildcard())", "+\t\t\t\t&& (referenceBinding.isGenericType() == referenceBinding2.isGenericType())", "+\t\t\t\t&& (referenceBinding.isRawType() == referenceBinding2.isRawType())", "+\t\t\t\t&& (referenceBinding.isInterface() == referenceBinding2.isInterface())", "+\t\t\t\t&& (referenceBinding.isEnum() == referenceBinding2.isEnum())", "+\t\t\t\t&& (referenceBinding.isAnnotationType() == referenceBinding2.isAnnotationType())", "+\t\t\t\t&& (referenceBinding.modifiers == referenceBinding2.modifiers);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce15b4c0bbc49076089f4b5543bf6f1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingComparator.java", "commitBeforeChange": "234baeb433cddb9a4e19b385ab8f3f3e404e97b7", "commitAfterChange": "833c4835f154a0a43a7c08b7136b48c44f5783aa", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tstatic boolean isEqual(org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding2, HashSet visitedTypes)", "signatureAfterChange": " \tstatic boolean isEqual(org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding2, HashSet visitedTypes)", "diff": ["-\t\t\t\t\t&& isEqual(parameterizedTypeBinding.arguments, parameterizedTypeBinding2.arguments, visitedTypes);", "+\t\t\t\t\t&& isEqual(parameterizedTypeBinding.arguments, parameterizedTypeBinding2.arguments, visitedTypes)", "+\t\t\t\t\t&& isEqual(parameterizedTypeBinding.enclosingType(), parameterizedTypeBinding2.enclosingType(), visitedTypes);", "-\t\t\t\t\t&& isEqual(referenceBinding.typeVariables(), referenceBinding2.typeVariables(), visitedTypes);", "-\t\t", "+\t\t\t\t\t&& isEqual(referenceBinding.typeVariables(), referenceBinding2.typeVariables(), visitedTypes)", "+\t\t\t\t\t&& isEqual(referenceBinding.enclosingType(), referenceBinding2.enclosingType(), visitedTypes);", "+", "-\t\t\t\t\t\t\t== (referenceBinding2.modifiers & (CompilerModifiers.AccJustFlag | IConstants.AccInterface | IConstants.AccEnum | IConstants.AccAnnotation));", "-\t\t\t\t", "+\t\t\t\t\t\t\t== (referenceBinding2.modifiers & (CompilerModifiers.AccJustFlag | IConstants.AccInterface | IConstants.AccEnum | IConstants.AccAnnotation))", "+\t\t\t\t\t&& isEqual(referenceBinding.enclosingType(), referenceBinding2.enclosingType(), visitedTypes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaefa18d0af0d6d146ff9849d226dc2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingComparator.java", "commitBeforeChange": "17e03e863fb774766736648d947c8784669a04ad", "commitAfterChange": "cf03f10ecf5c982a4c8aaf6ef0f1a66c903bb0e0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tstatic boolean isEqual(org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding2, boolean checkTypeVariables)", "signatureAfterChange": " \tstatic boolean isEqual(org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding2, boolean checkTypeVariables)", "diff": ["-\t\t\t\t\t&& (referenceBinding.modifiers == referenceBinding2.modifiers);", "+\t\t\t\t\t&& ((referenceBinding.modifiers & CompilerModifiers.AccJustFlag) == (referenceBinding2.modifiers & CompilerModifiers.AccJustFlag));", "-\t\t\t\t\t&& (referenceBinding.modifiers == referenceBinding2.modifiers);", "+\t\t\t\t\t&& ((referenceBinding.modifiers & CompilerModifiers.AccJustFlag) == (referenceBinding2.modifiers & CompilerModifiers.AccJustFlag));", "-\t\t\t\t\t\t&& isEqual(typeVariableBinding.superclass, typeVariableBinding2.superclass, true)", "-\t\t\t\t\t\t&& isEqual(typeVariableBinding.superInterfaces, typeVariableBinding2.superInterfaces, true);", "+\t\t\t\t\t\t&& isEqual(typeVariableBinding.superclass(), typeVariableBinding2.superclass(), true)", "+\t\t\t\t\t\t&& isEqual(typeVariableBinding.superInterfaces(), typeVariableBinding2.superInterfaces(), true);", "-\t\t\t\t\t&& (referenceBinding.modifiers == referenceBinding2.modifiers);", "+\t\t\t\t\t&& ((referenceBinding.modifiers & CompilerModifiers.AccJustFlag) == (referenceBinding2.modifiers & CompilerModifiers.AccJustFlag));"]}], "num": 72057}