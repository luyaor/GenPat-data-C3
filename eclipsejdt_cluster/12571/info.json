{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ccc79142f6a2443c7bbe53e16d67f261", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b682d58a747fbd28b892b7c48f0b4ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "1da80432c78bbaea0a8998b6847ad81e0d9c87be", "commitAfterChange": "29d04c67639da8c85ba49a17424d09db5c2a2fad", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  \tprivate boolean complete( \t\t\tASTNode astNode, \t\t\tASTNode astNodeParent, \t\t\tASTNode enclosingNode, \t\t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\t\tBinding qualifiedBinding, \t\t\tScope scope, \t\t\tboolean insideTypeAnnotation)", "signatureAfterChange": "  \tprivate boolean complete( \t\t\tASTNode astNode, \t\t\tASTNode astNodeParent, \t\t\tASTNode enclosingNode, \t\t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\t\tBinding qualifiedBinding, \t\t\tScope scope, \t\t\tboolean insideTypeAnnotation)", "diff": ["-\t\t\t\tObjectVector typesFound = new ObjectVector();", "-\t\t\t\tif (this.assistNodeIsException && astNodeParent instanceof TryStatement) {", "-\t\t\t\t\tfindExceptionFromTryStatement(", "-\t\t\t\t\t\t\tthis.completionToken,", "-\t\t\t\t\t\t\t(ReferenceBinding)qualifiedBinding,", "-\t\t\t\t\t\t\tscope.enclosingSourceType(),", "-\t\t\t\t\t\t\t(BlockScope)scope,", "-\t\t\t\t\t\t\ttypesFound);", "+\t\t\t\tif (qualifiedBinding.problemId() == ProblemReasons.NotFound) {", "+\t\t\t\t\tif (this.assistNodeInJavadoc == 0 &&", "+\t\t\t\t\t\t\t(this.requestor.isAllowingRequiredProposals(CompletionProposal.TYPE_REF, CompletionProposal.TYPE_REF))) {", "+\t\t\t\t\t\tif(ref.tokens.length == 1) {", "+\t\t\t\t\t\t\tfindMemberTypesFromMissingType(", "+\t\t\t\t\t\t\t\t\tref.tokens[0],", "+\t\t\t\t\t\t\t\t\tref.sourcePositions[0],", "+\t\t\t\t\t\t\t\t\tscope);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\tObjectVector typesFound = new ObjectVector();", "+\t\t\t\t\tif (this.assistNodeIsException && astNodeParent instanceof TryStatement) {", "+\t\t\t\t\t\tfindExceptionFromTryStatement(", "+\t\t\t\t\t\t\t\tthis.completionToken,", "+\t\t\t\t\t\t\t\t(ReferenceBinding)qualifiedBinding,", "+\t\t\t\t\t\t\t\tscope.enclosingSourceType(),", "+\t\t\t\t\t\t\t\t(BlockScope)scope,", "+\t\t\t\t\t\t\t\ttypesFound);", "+\t\t\t\t\t}", "+\t\t\t\t\t", "+\t\t\t\t\tfindMemberTypes(", "+\t\t\t\t\t\tthis.completionToken,", "+\t\t\t\t\t\t(ReferenceBinding) qualifiedBinding,", "+\t\t\t\t\t\tscope,", "+\t\t\t\t\t\tscope.enclosingSourceType(),", "+\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\ttypesFound,", "+\t\t\t\t\t\tnull,", "+\t\t\t\t\t\tnull,", "+\t\t\t\t\t\tnull,", "+\t\t\t\t\t\tfalse);", "-\t\t\t\t", "-\t\t\t\tfindMemberTypes(", "-\t\t\t\t\tthis.completionToken,", "-\t\t\t\t\t(ReferenceBinding) qualifiedBinding,", "-\t\t\t\t\tscope,", "-\t\t\t\t\tscope.enclosingSourceType(),", "-\t\t\t\t\tfalse,", "-\t\t\t\t\tfalse,", "-\t\t\t\t\ttypesFound,", "-\t\t\t\t\tnull,", "-\t\t\t\t\tnull,", "-\t\t\t\t\tnull,", "-\t\t\t\t\tfalse);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1c9f333e47616b25088a93d017ed972", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "72a4987e03f2b3b01c1f1fa7e641153e8b607b6e", "commitAfterChange": "1da80432c78bbaea0a8998b6847ad81e0d9c87be", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  \tprivate boolean complete( \t\t\tASTNode astNode, \t\t\tASTNode astNodeParent, \t\t\tASTNode enclosingNode, \t\t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\t\tBinding qualifiedBinding, \t\t\tScope scope, \t\t\tboolean insideTypeAnnotation)", "signatureAfterChange": "  \tprivate boolean complete( \t\t\tASTNode astNode, \t\t\tASTNode astNodeParent, \t\t\tASTNode enclosingNode, \t\t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\t\tBinding qualifiedBinding, \t\t\tScope scope, \t\t\tboolean insideTypeAnnotation)", "diff": ["-\t\t\t\t\t\t\t\tthis.requestor.isAllowingRequiredProposals(CompletionProposal.METHOD_REF, CompletionProposal.TYPE_REF))) {", "+\t\t\t\t\t\t\t\tthis.requestor.isAllowingRequiredProposals(CompletionProposal.METHOD_REF, CompletionProposal.TYPE_REF) ||", "+\t\t\t\t\t\t\t\tthis.requestor.isAllowingRequiredProposals(CompletionProposal.TYPE_REF, CompletionProposal.TYPE_REF))) {", "-\t\t\tif (qualifiedBinding instanceof ReferenceBinding && !(qualifiedBinding instanceof TypeVariableBinding)) {", "+\t\t\tif (qualifiedBinding.problemId() == ProblemReasons.NotFound) {", "+\t\t\t\tsetSourceAndTokenRange((int) (completionPosition >>> 32), (int) completionPosition);", "+\t\t\t\tif (this.assistNodeInJavadoc == 0 &&", "+\t\t\t\t\t\t(this.requestor.isAllowingRequiredProposals(CompletionProposal.TYPE_REF, CompletionProposal.TYPE_REF))) {", "+\t\t\t\t\tif(ref.tokens.length == 1) {", "+\t\t\t\t\t\tfindMemberTypesFromMissingType(", "+\t\t\t\t\t\t\t\tref.tokens[0],", "+\t\t\t\t\t\t\t\tref.sourcePositions[0],", "+\t\t\t\t\t\t\t\tscope);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t} else if (qualifiedBinding instanceof ReferenceBinding && !(qualifiedBinding instanceof TypeVariableBinding)) {"]}], "num": 12571}