{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "85210859fe841c7d5d5953e8b0ba580c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ddbdb46e06c43dddc49ab97f1250933", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CopyMoveResourcesTests.java", "commitBeforeChange": "90b1908492a5f9d4c5df732b0e6c825a2d37465b", "commitAfterChange": "57baf3ab2dd5307ea86760f7955e1b40b82c6d4e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void testCopyCUReadOnly() throws CoreException", "signatureAfterChange": " public void testCopyCUReadOnly() throws CoreException", "diff": ["-\tthis.createFolder(\"/P/src/p1\");", "-\tIFile file = this.createFile(", "-\t\t\"/P/src/p1/X.java\",", "-\t\t\"package p1;\\n\" +", "-\t\t\"public class X {\\n\" +", "-\t\t\"}\"", "-\t);", "-\tfile.setReadOnly(true);", "-\tICompilationUnit cuSource = getCompilationUnit(\"/P/src/p1/X.java\");", "-", "-\tthis.createFolder(\"/P/src/p2\");", "-\tIPackageFragment pkgDest = getPackage(\"/P/src/p2\");", "-", "-\tcopyPositive(cuSource, pkgDest, null, null, false);", "+\ttry {", "+\t\tthis.createFolder(\"/P/src/p1\");", "+\t\tIFile file = this.createFile(", "+\t\t\t\"/P/src/p1/X.java\",", "+\t\t\t\"package p1;\\n\" +", "+\t\t\t\"public class X {\\n\" +", "+\t\t\t\"}\"", "+\t\t);", "+\t\tfile.setReadOnly(true);", "+\t\tICompilationUnit cuSource = getCompilationUnit(\"/P/src/p1/X.java\");", "-\tassertTrue(\"Destination cu should be read-only\", getFile(\"/P/src/p2/X.java\").isReadOnly());", "+\t\tthis.createFolder(\"/P/src/p2\");", "+\t\tIPackageFragment pkgDest = getPackage(\"/P/src/p2\");", "+\t", "+\t\tcopyPositive(cuSource, pkgDest, null, null, false);", "+\t\t", "+\t\tassertTrue(\"Destination cu should be read-only\", getFile(\"/P/src/p2/X.java\").isReadOnly());", "+\t} finally {", "+\t\tdeleteFolder(\"/P/src/p1\");", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42f69627d1a2f69f18de2ba88e415c5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaElementDeltaTests.java", "commitBeforeChange": "d9c5650b5cbddab2c4722e719615cd4c4df0f60d", "commitAfterChange": "791affe516392319e362ae53c73928ce9057bd4a", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 43, "signatureBeforeChange": " public void testDestroySharedWorkingCopy() throws CoreException", "signatureAfterChange": " public void testDiscardWorkingCopy2() throws CoreException", "diff": ["-public void testDestroySharedWorkingCopy() throws CoreException {", "-\tICompilationUnit copy = null;", "-\ttry {", "-\t\tcreateJavaProject(\"P\", new String[] {\"\"}, \"\");", "-\t\tcreateFile(\"P/X.java\",", "-\t\t\t\"public class X {\\n\" +", "-\t\t\t\"}\");", "-\t\tICompilationUnit unit = getCompilationUnit(\"P\", \"\", \"\", \"X.java\");", "-\t\tcopy = unit.getWorkingCopy(new WorkingCopyOwner() {}, null, null);", "-\t\tstartDeltas();", "-\t\tcopy.discardWorkingCopy();", "-\t\tassertDeltas(", "-\t\t\t\"Unexpected delta\", ", "-\t\t\t\"P[*]: {CHILDREN}\\n\" +", "-\t\t\t\"\t<project root>[*]: {CHILDREN}\\n\" +", "-\t\t\t\"\t\t<default>[*]: {CHILDREN}\\n\" +", "-\t\t\t\"\t\t\t[Working copy] X.java[-]: {}\"", "-\t\t);", "-\t} finally {", "-\t\tstopDeltas();", "-\t\tdeleteProject(\"P\");", "-\t}", "-}", "+}", "+public void testDiscardWorkingCopy2() throws CoreException { // renamed from testDestroySharedWorkingCopy", "+\tICompilationUnit copy = null;", "+\ttry {", "+\t\tcreateJavaProject(\"P\", new String[] {\"\"}, \"\");", "+\t\tcreateFile(\"P/X.java\",", "+\t\t\t\"public class X {\\n\" +", "+\t\t\t\"}\");", "+\t\tICompilationUnit unit = getCompilationUnit(\"P\", \"\", \"\", \"X.java\");", "+\t\tcopy = unit.getWorkingCopy(new WorkingCopyOwner() {}, null, null);", "+\t\tstartDeltas();", "+\t\tcopy.discardWorkingCopy();", "+\t\tassertDeltas(", "+\t\t\t\"Unexpected delta\", ", "+\t\t\t\"P[*]: {CHILDREN}\\n\" +", "+\t\t\t\"\t<project root>[*]: {CHILDREN}\\n\" +", "+\t\t\t\"\t\t<default>[*]: {CHILDREN}\\n\" +", "+\t\t\t\"\t\t\t[Working copy] X.java[-]: {}\"", "+\t\t);", "+\t} finally {", "+\t\tstopDeltas();", "+\t\tif (copy != null)", "+\t\t\tcopy.discardWorkingCopy();"]}], "num": 28860}