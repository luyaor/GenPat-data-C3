{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d51e87ecea8f482c35313d58795e1c53", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6fbb53ebfc17102d5428915a429a54f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedHierarchyBuilder.java", "commitBeforeChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "commitAfterChange": "2e2e66f7f68b994d0931afecfd3c1e559acd59d5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r private void injectAllTypesForPackageFragment(IPackageFragment packFrag, Vector types)", "signatureAfterChange": "\r \tprivate void injectAllTypesForPackageFragment(\r \t\tIPackageFragment packFrag,\r \t\tArrayList types)", "diff": ["+\t */\r", "+\tprivate void injectAllTypesForPackageFragment(\r", "+\t\tIPackageFragment packFrag,\r", "+\t\tArrayList types) {\r", "+\t\t\t\r", "+\t\ttry {\r", "+\t\t\tIPackageFragmentRoot root = (IPackageFragmentRoot) packFrag.getParent();\r", "+\t\t\tint kind = root.getKind();\r", "+\t\t\tif (kind != 0) {\r", "+\t\t\t\tboolean isSourcePackageFragment = (kind == IPackageFragmentRoot.K_SOURCE);\r", "+\t\t\t\tif (isSourcePackageFragment) {\r", "+\t\t\t\t\tICompilationUnit[] typeContainers = packFrag.getCompilationUnits();\r", "+\t\t\t\t\tinjectAllTypesForTypeContainers(typeContainers, types);\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\tIClassFile[] typeContainers = packFrag.getClassFiles();\r", "+\t\t\t\t\tinjectAllTypesForTypeContainers(typeContainers, types);\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t} catch (JavaModelException e) {\r", "+\t\t}\r", "+\t}\r", "- */\r", "-private void injectAllTypesForPackageFragment(IPackageFragment packFrag, Vector types) {\r", "-\ttry {\r", "-\t\tIPackageFragmentRoot root = (IPackageFragmentRoot) packFrag.getParent();\r", "-\t\tint kind = root.getKind();\r", "-\t\tif (kind != 0) {\r", "-\t\t\tboolean isSourcePackageFragment = (kind == IPackageFragmentRoot.K_SOURCE);\r", "-\t\t\tif (isSourcePackageFragment) {\r", "-\t\t\t\tICompilationUnit[] typeContainers = packFrag.getCompilationUnits();\r", "-\t\t\t\tinjectAllTypesForTypeContainers(typeContainers, types);\r", "-\t\t\t} else {\r", "-\t\t\t\tIClassFile[] typeContainers = packFrag.getClassFiles();\r", "-\t\t\t\tinjectAllTypesForTypeContainers(typeContainers, types);\r", "-\t} catch (JavaModelException npe) {\r", "-}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df77e7a8f20a4ed771b24fdd589dc731", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedHierarchyBuilder.java", "commitBeforeChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "commitAfterChange": "2e2e66f7f68b994d0931afecfd3c1e559acd59d5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r private void injectAllTypesForJavaProject(IJavaProject project, Vector types)", "signatureAfterChange": "\r \tprivate void injectAllTypesForJavaProject(\r \t\tIJavaProject project,\r \t\tArrayList types)", "diff": ["- */\r", "-private void injectAllTypesForJavaProject(IJavaProject project, Vector types) {\r", "-\ttry {\r", "-\t\tIPackageFragmentRoot[] devPathRoots = ((JavaProject) project).getPackageFragmentRoots();\r", "-\t\tif (devPathRoots == null) {\r", "+\t */\r", "+\tprivate void injectAllTypesForJavaProject(\r", "+\t\tIJavaProject project,\r", "+\t\tArrayList types) {\r", "+\t\ttry {\r", "+\t\t\tIPackageFragmentRoot[] devPathRoots =\r", "+\t\t\t\t((JavaProject) project).getPackageFragmentRoots();\r", "+\t\t\tif (devPathRoots == null) {\r", "+\t\t\t\treturn;\r", "+\t\t\t}\r", "+\t\t\tfor (int j = 0; j < devPathRoots.length; j++) {\r", "+\t\t\t\tIPackageFragmentRoot root = devPathRoots[j];\r", "+\t\t\t\tinjectAllTypesForPackageFragmentRoot(root, types);\r", "+\t\t\t}\r", "+\t\t} catch (JavaModelException e) {\r", "+\t\t}\r", "+\t}\r", "-\t\tfor (int j = 0; j < devPathRoots.length; j++) {\r", "-\t\t\tIPackageFragmentRoot root = devPathRoots[j];\r", "-\t\t\tinjectAllTypesForPackageFragmentRoot(root, types);\r", "-\t\t}\r", "-\t} catch (JavaModelException e) {\r", "-}\r"]}], "num": 64677}