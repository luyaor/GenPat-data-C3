{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f679d07e3bf3854d096fe77060244bbd", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26d364e031c558b6d68d22963a48f984", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetMessageSend.java", "commitBeforeChange": "77ac300d6d124e9b071b4e62fab3a583e6eecdc4", "commitAfterChange": "fbf658958d1eb066a4b5c16fdea253c3d8d5019c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["+\tfor (int i = 0, length = this.arguments == null ? 0 : this.arguments.length; i < length; i++) {", "+\t\tExpression argument = this.arguments[i];", "+\t\tif (argumentTypes[i] instanceof PolyTypeBinding) {", "+\t\t\targument.setExpressionContext(INVOCATION_CONTEXT);", "+\t\t\targument.setExpectedType(this.binding.parameters[i]);", "+\t\t\targumentTypes[i] = argument.resolveType(scope);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a37cb81308064e199c494c01f65674d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetAllocationExpression.java", "commitBeforeChange": "77ac300d6d124e9b071b4e62fab3a583e6eecdc4", "commitAfterChange": "fbf658958d1eb066a4b5c16fdea253c3d8d5019c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["+\tfor (int i = 0, length = this.arguments == null ? 0 : this.arguments.length; i < length; i++) {", "+\t\tExpression argument = this.arguments[i];", "+\t\tif (argumentTypes[i] instanceof PolyTypeBinding) {", "+\t\t\targument.setExpressionContext(INVOCATION_CONTEXT);", "+\t\t\targument.setExpectedType(this.binding.parameters[i]);", "+\t\t\targumentTypes[i] = argument.resolveType(scope);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de80e90e01ebbbe81527366687f1c877", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "de85d73a10e0280a45c9d9fcbbd2b35068e06127", "commitAfterChange": "df9615ffbbc7235a218c4e9aa88ba85075714875", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["+\tfor (int i = 0, length = this.arguments == null ? 0 : this.arguments.length; i < length; i++) {", "+\t\tExpression argument = this.arguments[i];", "+\t\tif (argumentTypes[i] instanceof PolyTypeBinding) {", "+\t\t\targument.setExpressionContext(INVOCATION_CONTEXT);", "+\t\t\targument.setExpectedType(this.binding.parameters[i]);", "+\t\t\targumentTypes[i] = argument.resolveType(scope);", "+\t\t}", "+\t}"]}], "num": 71489}