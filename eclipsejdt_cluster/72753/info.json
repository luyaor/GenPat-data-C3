{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e2cb28b3971fa9bc8f166132b69b1d11", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2a1a9feebd2f644a7594566914f08f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "12d0cbc12a4ef9ba5f6916fbef30ff4f5bb79c12", "commitAfterChange": "a2301f82498c4055cac3a6f03b5c3307588ebfcf", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void testCompletionFindConstructor() throws JavaModelException", "signatureAfterChange": " public void testCompletionFindConstructor() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionFindConstructor.java\");", "+\tthis.wc = getWorkingCopy(", "+            \"/Completion/src/CompletionFindConstructor.java\",", "+            \"public class CompletionFindConstructor {\\n\"+", "+            \"\tpublic CompletionFindConstructor (int i) {\\n\"+", "+            \"\t}\\n\"+", "+            \"\tpubluc void foo(){\\n\"+", "+            \"\t\tint x = 45;\\n\"+", "+            \"\t\tnew CompletionFindConstructor(i);\\n\"+", "+            \"\t}\\n\"+", "+            \"}\");", "+    ", "+    ", "+    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+    ", "+    String str = this.wc.getSource();", "+    String completeBehind = \"CompletionFindConstructor(\";", "+    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "-\tString str = cu.getSource();", "-\tString completeBehind = \"CompletionFindConstructor(\";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-\tassertEquals(", "-\t\t\"should have two constructor (a constructor and an anonymous type)\", ", "-\t\t\"element:CompletionFindConstructor    completion:)    relevance:\"+(R_DEFAULT + R_INTERESTING + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:CompletionFindConstructor    completion:)    relevance:\"+(R_DEFAULT + R_INTERESTING + R_NON_RESTRICTED),", "-\t\trequestor.getResults());", "+    assertResults(", "+            \"expectedTypesSignatures=null\\n\"+", "+            \"expectedTypesKeys=null\",", "+            requestor.getContext());", "+    ", "+   assertResults(", "+\t\t\t\"CompletionFindConstructor[ANONYMOUS_CLASS_DECLARATION]{), LCompletionFindConstructor;, (I)V, null, (i), \"+(R_DEFAULT + R_INTERESTING + R_NON_RESTRICTED)+\"}\\n\" +", "+\t\t\t\"CompletionFindConstructor[METHOD_REF<CONSTRUCTOR>]{), LCompletionFindConstructor;, (I)V, CompletionFindConstructor, (i), \"+(R_DEFAULT + R_INTERESTING + R_NON_RESTRICTED)+\"}\",", "+\t\t\trequestor.getResults());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f75f9cd0e73dc29f5912e19e525530bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "ad12ac6d83e11b0dba5a9dea2f498c1b91db4e9b", "commitAfterChange": "725e72e518724c7d2e0f34521be4e0d027908df8", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 120, "signatureBeforeChange": " public void testCompletionEmptyTypeName1() throws JavaModelException", "signatureAfterChange": " public void testCompletionEmptyTypeName1() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionEmptyTypeName1.java\");", "-", "-\tString str = cu.getSource();", "-\tString completeBehind = \"new \";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "+\tthis.wc = getWorkingCopy(", "+            \"/Completion/src/CompletionEmptyTypeName1.java\",", "+            \"public class CompletionEmptyTypeName1 {\\n\"+", "+           \"\tvoid foo() {\\n\"+", "+           \"\t\tA a = new \\n\"+", "+           \"\t}\\n\"+", "+           \"}\");", "+    ", "+    ", "+    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+    String str = this.wc.getSource();", "+    String completeBehind = \"new \";", "+    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "-\t\tassertEquals(", "-\t\t\t\"\",", "+\t\tassertResults(", "+\t\t\t\"A[TYPE_REF]{A, , LA;, null, null, \" +(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\",", "-\t\tassertEquals(", "-\t\t\t\"element:A    completion:A    relevance:\" +(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\t\"element:CompletionEmptyTypeName1    completion:CompletionEmptyTypeName1    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED+ R_NON_RESTRICTED),", "+\t\tassertResults(", "+\t\t\t\"CompletionEmptyTypeName1[TYPE_REF]{CompletionEmptyTypeName1, , LCompletionEmptyTypeName1;, null, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED+ R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\"A[TYPE_REF]{A, , LA;, null, null, \" +(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\","]}], "num": 72753}