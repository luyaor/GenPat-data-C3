{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5326e71e3cc25e083fbc34d936572a1b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f1a6addd8eb49865e78a3014c66d3f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "821b6028ffbd0ba8edfd1a0534c32e817f4e830d", "commitAfterChange": "06e4a5efa4ac79a81431ad2110bd08f2ba1b98a7", "methodNumberBeforeChange": 127, "methodNumberAfterChange": 127, "signatureBeforeChange": " \tprotected int retrieveEndOfPotentialExtendedDimensions(int initializerEnd, int nameEnd, int end)", "signatureAfterChange": " \tprotected int retrieveEndOfPotentialExtendedDimensions(int initializerEnd, int nameEnd, int end)", "diff": ["+\t\tboolean hasTokens = false;", "+\t\tint balance = 0;", "+\t\tint pos = initializerEnd > nameEnd ? initializerEnd - 1 : nameEnd;", "-\t\t\tint balance = 0;", "-\t\t\tint pos = initializerEnd > nameEnd ? initializerEnd - 1 : nameEnd;", "+\t\t\t\thasTokens = true;", "-\t\t\t\t\t\treturn pos;", "+\t\t\t\t\t\tif (balance == 0) return pos;", "+\t\t\t\t\t\treturn -pos;", "-\t\treturn -1;", "+\t\t// no token, we simply return pos as the right position", "+\t\treturn hasTokens ? Integer.MIN_VALUE : pos;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "345544d2ba9ef634e437b1e668b4eb31", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ExternalAnnotationProvider.java", "commitBeforeChange": "26de20ae619c91a55a35147a34aba32ab3111d61", "commitAfterChange": "6aa15157c4a89778b30fbac85a8e1c76029da034", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tprivate void initialize(InputStream input) throws IOException", "signatureAfterChange": "  \tprivate void initialize(InputStream input) throws IOException", "diff": ["+\t\t\tString pendingLine;", "+\t\t\t\tpendingLine = null;", "-\t\t\t\t\tif (line.charAt(0) == ' ')", "-\t\t\t\t\t\tannotSig = line.substring(1);", "+\t\t\t\t\tif (line.charAt(0) != ' ') {", "+\t\t\t\t\t\tpendingLine = line; // push back what appears to be the next selector, not a signature", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tannotSig = line.substring(1);", "-\t\t\t} while ((line = reader.readLine()) != null);", "+\t\t\t} while (((line = pendingLine) != null) || (line = reader.readLine()) != null);"]}], "num": 25108}