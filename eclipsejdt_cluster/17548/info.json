{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ed3d52b9d31608a6902895a357a9f9fb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b888710ad324580d0f5ae9fb3e4cd1b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration.java", "commitBeforeChange": "fc25b1b826e7fad7f1da04ab9d452bc350b24919", "commitAfterChange": "19b4c669e6d8313d03dbcc8b595622002fe408a5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void bindArguments()", "signatureAfterChange": " \tpublic void bindArguments()", "diff": ["+\t\t\t\t}", "+\t\t\t\t// transfer nullness info from the argument to the method:", "+\t\t\t\tif ((argument.binding.tagBits & (TagBits.AnnotationNonNull|TagBits.AnnotationNullable)) != 0) {", "+\t\t\t\t\tif (this.binding.parameterNonNullness == null)", "+\t\t\t\t\t\tthis.binding.parameterNonNullness = new Boolean[this.arguments.length];", "+\t\t\t\t\tthis.binding.parameterNonNullness[i] = Boolean.valueOf((argument.binding.tagBits & TagBits.AnnotationNonNull) != 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f24f701d9590a27d2da63ede1d51e4e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "dbdde44f24ace4ee47bccce2cfe484eeeb8013f3", "commitAfterChange": "33bcc97ba28fd6319a8c922b4f8d989e4aab5311", "methodNumberBeforeChange": 529, "methodNumberAfterChange": 529, "signatureBeforeChange": " public void nullityMismatchSpecdNullable(Expression expression, TypeBinding requiredType, char[][] annotationName)", "signatureAfterChange": " public void nullityMismatchSpecdNullable(Expression expression, TypeBinding requiredType, char[][] annotationName)", "diff": ["+\tif (expression.resolvedType != null && expression.resolvedType.hasNullTypeAnnotations()) {", "+\t\tproblemId = IProblem.NullityMismatchingTypeAnnotation;", "+\t\targuments[1] = String.valueOf(expression.resolvedType.nullAnnotatedReadableName(this.options, false));", "+\t\targumentsShort[1] = String.valueOf(expression.resolvedType.nullAnnotatedReadableName(this.options, true));", "+\t}"]}], "num": 17548}