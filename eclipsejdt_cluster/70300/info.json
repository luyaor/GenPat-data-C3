{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "59375f2ca4b2f9e56a53ae0cec378f23", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ed4dbc5924e0a0cd7b2d82d6d9ef70c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/annotations/mirrortest/MirrorDeclarationTestAnnotationProcessor.java", "commitBeforeChange": "39ba98be39d071668a6de3e8fa86c213405fcffe", "commitAfterChange": "fa5043035008baa87658a861702929b4e6cc6033", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate void testAnnotationImplementations(TypeDeclaration testClass)", "signatureAfterChange": " \tprivate void testAnnotationImplementations(TypeDeclaration testClass)", "diff": ["-\t\tassertEquals(\"Number of annotation mirrors\", 1, annoMirrors.size());", "+\t\tProcessorTestStatus.assertEquals(\"Number of annotation mirrors\", 1, annoMirrors.size());", "-        assertTrue(\"Annotation mirror contents\", annoMirror.toString().startsWith(\"@MirrorDeclarationTestAnnotation\"));", "+        ProcessorTestStatus.assertTrue(\"Annotation mirror contents\", annoMirror.toString().startsWith(\"@MirrorDeclarationTestAnnotation\"));", "-        assertTrue(\"AnnotationType name\", annoType.toString().endsWith(\"mirrortest.MirrorDeclarationTestAnnotation\"));", "+        ProcessorTestStatus.assertTrue(\"AnnotationType name\", annoType.toString().endsWith(\"mirrortest.MirrorDeclarationTestAnnotation\"));", "-        assertEquals(\"AnnotationTypeDeclaration same as AnnotationType\", annoType, annoTypeDecl);", "+        ProcessorTestStatus.assertEquals(\"AnnotationTypeDeclaration same as AnnotationType\", annoType, annoTypeDecl);", "-        assertEquals(\"Number of methods on annotation\", 2, elementDeclarations.size());", "+        ProcessorTestStatus.assertEquals(\"Number of methods on annotation\", 2, elementDeclarations.size());", "-        assertEquals(\"declaring type same as AnnotationTypeDeclaration\", annoTypeDecl, elementString.getDeclaringType());", "-        assertEquals(\"declaring type same as AnnotationTypeDeclaration\", annoTypeDecl, elementInt.getDeclaringType());", "+        ProcessorTestStatus.assertEquals(\"declaring type same as AnnotationTypeDeclaration\", annoTypeDecl, elementString.getDeclaringType());", "+        ProcessorTestStatus.assertEquals(\"declaring type same as AnnotationTypeDeclaration\", annoTypeDecl, elementInt.getDeclaringType());", "-        assertEquals(\"\", \"bob\", valueString.getValue());", "-        assertEquals(\"\", new Integer(3), valueInt.getValue());", "-        assertEquals(\"\", \"bob\", valueString.toString());", "-        assertEquals(\"\", \"3\", valueInt.toString());", "+        ProcessorTestStatus.assertEquals(\"\", \"bob\", valueString.getValue());", "+        ProcessorTestStatus.assertEquals(\"\", new Integer(3), valueInt.getValue());", "+        ProcessorTestStatus.assertEquals(\"\", \"bob\", valueString.toString());", "+        ProcessorTestStatus.assertEquals(\"\", \"3\", valueInt.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2320bbe730b61dbce4b0cfbe2e61a74", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/annotations/mirrortest/MirrorDeclarationTestAnnotationProcessor.java", "commitBeforeChange": "39ba98be39d071668a6de3e8fa86c213405fcffe", "commitAfterChange": "fa5043035008baa87658a861702929b4e6cc6033", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate void testMethodDeclaration(ClassDeclaration testClassDec)", "signatureAfterChange": " \tprivate void testMethodDeclaration(ClassDeclaration testClassDec)", "diff": ["-\t\tassertTrue(\"Method methodDec exists\", methodDec != null);", "+\t\tProcessorTestStatus.assertTrue(\"Method methodDec exists\", methodDec != null);", "-\t\tassertEquals(\"Number of types thrown\", 1, thrownTypes.size());", "+\t\tProcessorTestStatus.assertEquals(\"Number of types thrown\", 1, thrownTypes.size());", "-\t\tassertEquals(\"methodDec throws Exception\", \"java.lang.Exception\", thrownType.toString());", "-\t\tassertTrue(\"methodDec is varargs\", methodDec.isVarArgs());", "-\t\tassertTrue(\"Method methodDecNoArg exists\", methodDecNoArg != null);", "-\t\tassertEquals(\"Number of types thrown\", 0, methodDecNoArg.getThrownTypes().size());", "-\t\tassertTrue(\"methodDecNoArg is not varargs\", !methodDecNoArg.isVarArgs());", "+\t\tProcessorTestStatus.assertEquals(\"methodDec throws Exception\", \"java.lang.Exception\", thrownType.toString());", "+\t\tProcessorTestStatus.assertTrue(\"methodDec is varargs\", methodDec.isVarArgs());", "+\t\tProcessorTestStatus.assertTrue(\"Method methodDecNoArg exists\", methodDecNoArg != null);", "+\t\tProcessorTestStatus.assertEquals(\"Number of types thrown\", 0, methodDecNoArg.getThrownTypes().size());", "+\t\tProcessorTestStatus.assertTrue(\"methodDecNoArg is not varargs\", !methodDecNoArg.isVarArgs());", "-\t\tassertTrue(\"int parameter exists\", paramDeclInt != null);", "-\t\tassertEquals(\"Parameter type is int\", \"int\", paramDeclInt.getType().toString());", "-\t\tassertTrue(\"String[] parameter exists\", paramDeclString != null);", "-\t\tassertEquals(\"Parameter type is String[]\", \"java.lang.String[]\", paramDeclString.getType().toString());", "-\t\tassertEquals(\"Number of parameters in methodDecNoArg\", 0, methodDecNoArg.getParameters().size());", "+\t\tProcessorTestStatus.assertTrue(\"int parameter exists\", paramDeclInt != null);", "+\t\tProcessorTestStatus.assertEquals(\"Parameter type is int\", \"int\", paramDeclInt.getType().toString());", "+\t\tProcessorTestStatus.assertTrue(\"String[] parameter exists\", paramDeclString != null);", "+\t\tProcessorTestStatus.assertEquals(\"Parameter type is String[]\", \"java.lang.String[]\", paramDeclString.getType().toString());", "+\t\tProcessorTestStatus.assertEquals(\"Number of parameters in methodDecNoArg\", 0, methodDecNoArg.getParameters().size());"]}], "num": 70300}