{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9928f702648b0fb2abe628943b96466c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "149dc8bdf646b3147f89df76f9761588", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementDeltaBuilder.java", "commitBeforeChange": "2870aa14f88288f60383b8e3b2e39060da290126", "commitAfterChange": "8dec4f5607ad1e86e5748f18a4dec03c4f3d988b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " private void findContentChange(JavaElementInfo oldInfo, JavaElementInfo newInfo, IJavaElement newElement)", "signatureAfterChange": " private void findContentChange(JavaElementInfo oldInfo, JavaElementInfo newInfo, IJavaElement newElement)", "diff": ["-\t\t\tIterator elements = oldTypeCategories.keySet().iterator();", "-\t\t\twhile (elements.hasNext()) {", "-\t\t\t\tIJavaElement element = (IJavaElement) elements.next();", "+\t\t\t// take the union of old and new categories elements (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=125675)", "+\t\t\tSet elements;", "+\t\t\tif (newTypeCategories != null) {", "+\t\t\t\telements = new HashSet(oldTypeCategories.keySet());", "+\t\t\t\telements.addAll(newTypeCategories.keySet());", "+\t\t\t} else", "+\t\t\t\telements = oldTypeCategories.keySet();", "+\t\t\tIterator iterator = elements.iterator();", "+\t\t\twhile (iterator.hasNext()) {", "+\t\t\t\tIJavaElement element = (IJavaElement) iterator.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3c675d40bc00f2939ad7cb8bb31e4f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "a0fd6dae6dbb696f05ef352cad9852f287a5aeec", "commitAfterChange": "3f1cbb254c604c7416bb668e3ca0c2f6d90b8afc", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprivate BoundSet resolve() throws InferenceFailureException", "signatureAfterChange": " \tprivate BoundSet resolve() throws InferenceFailureException", "diff": ["-\t\t\t\t\t\t// FIXME: remove capture bounds", "+\t\t\t\t\t\tIterator captureKeys = tmpBoundSet.captures.keySet().iterator();", "+\t\t\t\t\t\tSet toRemove = new HashSet();", "+\t\t\t\t\t\twhile (captureKeys.hasNext()) {", "+\t\t\t\t\t\t\tParameterizedTypeBinding key = (ParameterizedTypeBinding) captureKeys.next();", "+\t\t\t\t\t\t\tint len = key.arguments.length;", "+\t\t\t\t\t\t\tfor (int i = 0; i < len; i++) {", "+\t\t\t\t\t\t\t\tif (key.arguments[i] == variable) { //$IDENTITY-COMPARISON$", "+\t\t\t\t\t\t\t\t\ttoRemove.add(key);", "+\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tcaptureKeys = toRemove.iterator();", "+\t\t\t\t\t\twhile (captureKeys.hasNext())", "+\t\t\t\t\t\t\ttmpBoundSet.captures.remove(captureKeys.next());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c46634832be9e68a3c46f204842695e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementDeltaBuilder.java", "commitBeforeChange": "70ee08b37d9e1985bf6e556eb4c75b0a1c82e56b", "commitAfterChange": "a46f42e6852cac4afd504be345bfdc6cb42a6150", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " private void findContentChange(JavaElementInfo oldInfo, JavaElementInfo newInfo, IJavaElement newElement)", "signatureAfterChange": " private void findContentChange(JavaElementInfo oldInfo, JavaElementInfo newInfo, IJavaElement newElement)", "diff": ["+\t\tHashMap oldTypeCategories = oldSourceTypeInfo.categories;", "+\t\tHashMap newTypeCategories = newSourceTypeInfo.categories;", "+\t\tif (oldTypeCategories != null) {", "+\t\t\tIterator elements = oldTypeCategories.keySet().iterator();", "+\t\t\twhile (elements.hasNext()) {", "+\t\t\t\tIJavaElement element = (IJavaElement) elements.next();", "+\t\t\t\tString[] oldCategories = (String[]) oldTypeCategories.get(element);", "+\t\t\t\tString[] newCategories = newTypeCategories == null ? null : (String[]) newTypeCategories.get(element);", "+\t\t\t\tif (!Util.equalArraysOrNull(oldCategories, newCategories)) {", "+\t\t\t\t\tthis.delta.changed(element, IJavaElementDelta.F_CATEGORIES);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} else if (newTypeCategories != null) {", "+\t\t\tIterator elements = newTypeCategories.keySet().iterator();", "+\t\t\twhile (elements.hasNext()) {", "+\t\t\t\tIJavaElement element = (IJavaElement) elements.next();", "+\t\t\t\tthis.delta.changed(element, IJavaElementDelta.F_CATEGORIES); // all categories for this element were removed", "+\t\t\t}", "+\t\t}"]}], "num": 37926}