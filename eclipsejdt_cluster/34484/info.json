{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7775f5fd4232b1e23ae49eb1ff494474", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "091f1268a006aeadccd3059563b9d8a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/processing/JobManager.java", "commitBeforeChange": "7daf62bc284b30571754ce8d7fd5c3a7c9740dcb", "commitAfterChange": "b8c9923212bd9598e5d2ca68e0dc316b81a3eccb", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public String toString()", "signatureAfterChange": " \tpublic String toString()", "diff": ["-public String toString() {", "-\tStringBuffer buffer = new StringBuffer(10);", "-\tbuffer.append(\"Enabled:\").append(this.enabled).append('\\n'); //$NON-NLS-1$", "-\tint numJobs = jobEnd - jobStart + 1;", "-\tbuffer.append(\"Jobs in queue:\").append(numJobs).append('\\n'); //$NON-NLS-1$", "-\tfor (int i = 0; i < numJobs && i < 15; i++) {", "-\t\tbuffer.append(i).append(\" - job[\"+i+\"]: \").append(awaitingJobs[jobStart+i]).append('\\n'); //$NON-NLS-1$ //$NON-NLS-2$", "-\t}", "-\treturn buffer.toString();", "-}\t", "+\tpublic String toString() {", "+\t\tStringBuffer buffer = new StringBuffer(10);", "+\t\tbuffer.append(\"Enabled:\").append(this.enabled).append('\\n'); //$NON-NLS-1$", "+\t\tint numJobs = this.jobEnd - this.jobStart + 1;", "+\t\tbuffer.append(\"Jobs in queue:\").append(numJobs).append('\\n'); //$NON-NLS-1$", "+\t\tfor (int i = 0; i < numJobs && i < 15; i++) {", "+\t\t\tbuffer.append(i).append(\" - job[\"+i+\"]: \").append(this.awaitingJobs[this.jobStart+i]).append('\\n'); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t}", "+\t\treturn buffer.toString();", "+\t}\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52e356ff8801a927d941ce08f0238135", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ExceptionLabel.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic boolean isStandardLabel()", "signatureAfterChange": " public String toString()", "diff": ["-\tpublic boolean isStandardLabel(){", "-", "-\t\treturn false;", "+}", "+public String toString() {", "+\tString basic = getClass().getName();", "+\tbasic = basic.substring(basic.lastIndexOf('.')+1);", "+\tStringBuffer buffer = new StringBuffer(basic); ", "+\tbuffer.append('@').append(Integer.toHexString(hashCode()));", "+\tbuffer.append(\"(type=\").append(this.exceptionType == null ? null : this.exceptionType.readableName()); //$NON-NLS-1$", "+\tbuffer.append(\", position=\").append(position); //$NON-NLS-1$", "+\tbuffer.append(\", ranges = \"); //$NON-NLS-1$", "+\tif (this.count == 0) {", "+\t\tbuffer.append(\"[]\"); //$NON-NLS-1$", "+\t} else {", "+\t\tfor (int i = 0; i < this.count; i++) {", "+\t\t\tif (i % 2 == 0) {", "+\t\t\t\tbuffer.append(\"[\").append(ranges[i]); //$NON-NLS-1$", "+\t\t\t} else { ", "+\t\t\t\tbuffer.append(\",\").append(ranges[i]).append(\"]\"); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t}", "+\t\t}", "+\t\tif (this.count % 2 == 1) {", "+\t\t\tbuffer.append(\",?]\"); //$NON-NLS-1$", "+\t\t}", "+\tbuffer.append(')'); //$NON-NLS-1$", "+\treturn buffer.toString();", "+}"]}], "num": 34484}