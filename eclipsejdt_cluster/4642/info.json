{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "77f563d66eb0ec13fb2c1e4d145c22a4", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d9ae9a6b171432681cec60835d77846", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/eval/DebugEvaluationTest.java", "commitBeforeChange": "72447fc8301129ec23ec2cfbe469aedc3b4c9d3e", "commitAfterChange": "a337a67d07e229d2e8a590edfef8bdffb92e4516", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void test012() throws Exception", "signatureAfterChange": " public void test012() throws Exception", "diff": ["-\t\t\"date.toString();\";", "+\t\t\"System.out.println(\\\"Old date =\\t\\\" + date.toString());\";", "-\tEvaluationResult[] results = requestor.results;", "-\tSystem.out.println(\"\\nDebugEvaluationTests:test012: Results (1):\");", "-\tfor(int i = 0; i < results.length; i++) {", "-\t\tEvaluationResult r = results[i];", "-\t\tif (r == null) continue;", "-\t\tSystem.out.println(\"\\t[\" + i + \"] Evaluation Type: \"+ r.getEvaluationType() + ", "-\t\t\t\t\" Value Type: \" + new String(r.getValueTypeName()) + ", "-\t\t\t\t\" Value: \" + new String(r.getValueDisplayString()));", "-\t}", "-\tsnippet = \"return date.after(cal.getGregorianChange());\".toCharArray();", "+\tuserCode = \"System.out.println(\\\"new date =\\t\\\" + date.toString());\\n\" +", "+\t\t\t\t\"System.out.println(\\\"cal.getGregorianChange() =\\t\\\" + cal.getGregorianChange());\\n\" +", "+\t\t\t\t\"return date.after(cal.getGregorianChange());\";", "+\tsnippet = userCode.toCharArray();", "-\tresults = requestor.results;", "-\tSystem.out.println(\"\\nDebugEvaluationTests:test012: Results (2):\");", "-\tfor(int i = 0; i < results.length; i++) {", "-\t\tEvaluationResult r = results[i];", "-\t\tif (r == null) continue;", "-\t\tSystem.out.println(\"\\t[\" + i + \"] Evaluation Type: \"+ r.getEvaluationType() + ", "-\t\t\t\t\" Value Type: \" + new String(r.getValueTypeName()) + ", "-\t\t\t\t\" Value: \" + new String(r.getValueDisplayString()));", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6bc96d6492c9cf83e26a12bf5b2cd5b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/Tests.java", "commitBeforeChange": "e37796f522b7bb4721626cf54f6fb6424b32950c", "commitAfterChange": "cb73a34d3fbf60bb435ba470954bcb213328d377", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprotected void expectingSpecificProblemsFor(IPath root, Problem[] problems)", "signatureAfterChange": " \tprotected void expectingSpecificProblemsFor(IPath root, Problem[] problems)", "diff": ["+\t\texpectingSpecificProblemsFor(root, problems, false);", "+\t}", "-\t\tProblem[] rootProblems = env.getProblemsFor(root);", "-\t\t\t\tSystem.out.println(\"got pb:\t\tnew Problem(\\\"\" + pb.getLocation() + \"\\\", \\\"\" + pb.getMessage() + \"\\\", \\\"\" + pb.getResourcePath() + \"\\\")\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$", "-\t\t\tassertTrue(\"missing expected problem : \" + problem, false); //$NON-NLS-1$"]}], "num": 4642}