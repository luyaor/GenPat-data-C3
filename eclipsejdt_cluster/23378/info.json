{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "53ec1f2bb82e9d19358849e38b7eb594", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3bb51618e434dad397543832a694bef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypesImpl.java", "commitBeforeChange": "d3213172d29e4c1010f79436308b94172cea83cc", "commitAfterChange": "2daf63d08a96c2ed6e0e08ccfe89195f55d9f8ce", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     @Override     public boolean contains(TypeMirror t1, TypeMirror t2)", "signatureAfterChange": "     @Override     public boolean contains(TypeMirror t1, TypeMirror t2)", "diff": ["+    \tswitch(t1.getKind()) {", "+    \t\tcase EXECUTABLE :", "+    \t\tcase PACKAGE :", "+    \t\t\tthrow new IllegalArgumentException(\"Executable and package are illegal argument for Types.contains(..)\"); //$NON-NLS-1$", "+    \t}", "+    \tswitch(t2.getKind()) {", "+    \t\tcase EXECUTABLE :", "+    \t\tcase PACKAGE :", "+    \t\t\tthrow new IllegalArgumentException(\"Executable and package are illegal argument for Types.contains(..)\"); //$NON-NLS-1$", "+    \t}", "-        throw new UnsupportedOperationException(\"NYI: TypesImpl.contains(...)\"); //$NON-NLS-1$", "+        throw new UnsupportedOperationException(\"NYI: TypesImpl.contains(\" + t1 + \", \" + t2 + \")\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4af579cca3b649929c4c4c67448449c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypeMirrorImpl.java", "commitBeforeChange": "c62a418f35a40981606d85e97ecee9f9596fa8d0", "commitAfterChange": "4c8a3ba34c720dda98e8d56ba71f0361efbe740b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t@Override \tpublic TypeKind getKind()", "signatureAfterChange": " \t@Override \tpublic TypeKind getKind()", "diff": ["-\t\t", "+\t\t// case Binding.METHOD: handled by ExecutableTypeImpl", "+\t\t// case Binding.PACKAGE: handled by NoTypeImpl", "+\t\t// case Binding.WILDCARD_TYPE: handled by WildcardTypeImpl", "+\t\t// case Binding.ARRAY_TYPE: handled by ArrayTypeImpl", "-\t\tcase Binding.METHOD:", "-\t\t\tthrow new IllegalArgumentException(\"Invalid binding kind: \" + _binding.kind()); //$NON-NLS-1$", "-\t\tcase Binding.PACKAGE:", "-\t\t\treturn TypeKind.PACKAGE;", "-\t\tcase Binding.ARRAY_TYPE:", "-\t\t\treturn TypeKind.ARRAY;", "-\t\tcase Binding.WILDCARD_TYPE:", "-\t\t\treturn TypeKind.WILDCARD;", "-\t\t\tthrow new UnsupportedOperationException(\"NYI\"); //$NON-NLS-1$", "+\t\t\tthrow new IllegalArgumentException(\"Invalid binding kind: \" + _binding.kind()); //$NON-NLS-1$"]}], "num": 23378}