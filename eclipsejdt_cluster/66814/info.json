{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e50f935546561526130ee6ea93442d09", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42a78b0c09da0ef76bc4679d92931fb1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "c22ae4e2acd996824ff94a2b0edaa0df69d9b3b1", "commitAfterChange": "1eeba055c4a858ddea83f6c85864678280808173", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope blockScope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope blockScope)", "diff": ["-\t", "-\t\tif (this.primary != null) {", "-\t\t\tthis.primary.resolveType(blockScope);", "-\t\t} else if (this.name != null) {", "-\t\t\tthis.name.resolveType(blockScope);", "-\t\t} else if (this.type != null) {", "-\t\t\tthis.type.resolveType(blockScope);", "+", "+\t\tthis.receiverType = this.lhs.resolveType(blockScope);", "+\t\tthis.haveReceiver = true;", "+\t\tif (this.lhs instanceof NameReference) {", "+\t\t\tif ((this.lhs.bits & ASTNode.RestrictiveFlagMASK) == Binding.TYPE) {", "+\t\t\t\tthis.haveReceiver = false;", "+\t\t\t\tif (this.receiverType.isRawType())", "+\t\t\t\t\tblockScope.problemReporter().rawTypeReference(this.lhs, this.receiverType);", "+\t\t\t}", "+\t\t} else if (this.lhs instanceof TypeReference) {", "+\t\t\tthis.haveReceiver = false;", "+", "-\t\t\tthis.genericTypeArguments = new TypeBinding[length];", "+\t\t\tthis.resolvedTypeArguments = new TypeBinding[length];", "-\t\t\t\tif ((this.genericTypeArguments[i] = typeReference.resolveType(blockScope, true /* check bounds*/)) == null) {", "+\t\t\t\tif ((this.resolvedTypeArguments[i] = typeReference.resolveType(blockScope, true /* check bounds*/)) == null) {", "+\t\t", "+\t\tif (this.receiverType == null || !this.receiverType.isValidBinding()) ", "+\t\t\treturn this.resolvedType;", "+\t\t", "+\t\tif (this.receiverType.isBaseType()) {", "+\t\t\tblockScope.problemReporter().errorNoMethodFor(this.lhs, this.receiverType, this.method.token, this.descriptor != null ? this.descriptor.parameters : Binding.NO_TYPES);", "+\t\t\treturn null;", "+\t\t}", "+\t\t", "+\t\tif (isConstructorReference() && !this.receiverType.canBeInstantiated()) {", "+\t\t\tblockScope.problemReporter().cannotInstantiate(this.lhs, this.receiverType);", "+\t\t\treturn this.resolvedType;", "+\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd2db6be0d0bb99b44a15f9328b69611", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "0534618c17c0b5f6c361eb5acf9c22731255984f", "commitAfterChange": "d85ef445439a7932d1fe7c7dafa9bf16e2d2dd51", "methodNumberBeforeChange": 372, "methodNumberAfterChange": 377, "signatureBeforeChange": " protected void parse()", "signatureAfterChange": " protected void parse()", "diff": ["+\tboolean jumpOverTypeAfterReduce = false;", "-\t\t\t}\t\t\t\t\t", "+\t\t\t}\t\t\t\t", "+\t\t\tif(this.statementRecoveryActivated) {", "+\t\t\t\tjumpOverTypeAfterReduce = true;", "+\t\t\t}", "+\t\t\t\tif(this.statementRecoveryActivated) {", "+\t\t\t\t\tthis.jumpOverType();", "+\t\t\t\t}", "+\t\t\tif(this.statementRecoveryActivated && act > NUM_RULES) {", "+\t\t\t\tif(jumpOverTypeAfterReduce) {", "+\t\t\t\t\tthis.jumpOverType();", "+\t\t\t\t\tjumpOverTypeAfterReduce = false;", "+\t\t\t\t}", "+\t\t\t}", "+\t", "-\tif (this.reportSyntaxErrorIsRequired && this.hasError) {", "-\t\treportSyntaxErrors(isDietParse, oldFirstToken);", "-\t}\t", "+\tif (this.reportSyntaxErrorIsRequired && this.hasError && !this.statementRecoveryActivated) {", "+\t\tif(!this.options.performStatementsRecovery) {", "+\t\t\treportSyntaxErrors(isDietParse, oldFirstToken);", "+\t\t} else {", "+\t\t\tRecoveryScannerData data = this.referenceContext.compilationResult().recoveryScannerData;", "+\t\t\t", "+\t\t\tif(this.recoveryScanner == null) {", "+\t\t\t\tthis.recoveryScanner = new RecoveryScanner(this.scanner, data);", "+\t\t\t} else {", "+\t\t\t\tthis.recoveryScanner.setData(data);", "+\t\t\t}", "+\t\t\t", "+\t\t\tthis.recoveryScanner.setSource(scanner.source);", "+\t\t\tthis.recoveryScanner.lineEnds = this.scanner.lineEnds;", "+\t\t\tthis.recoveryScanner.linePtr = this.scanner.linePtr;", "+\t\t\t", "+\t\t\treportSyntaxErrors(isDietParse, oldFirstToken);", "+\t\t\t", "+\t\t\tif(data == null) {", "+\t\t\t\tthis.referenceContext.compilationResult().recoveryScannerData =", "+\t\t\t\t\tthis.recoveryScanner.getData();", "+\t\t\t}", "+\t\t\t", "+\t\t\tif (this.methodRecoveryActivated) {", "+\t\t\t\tthis.methodRecoveryActivated = false;", "+\t\t\t\tthis.recoverStatements();", "+\t\t\t\tthis.methodRecoveryActivated = true;", "+", "+\t\t\t\tthis.lastAct = ERROR_ACTION;", "+\t\t\t}", "+\t\t}", "+\t}", "+\t"]}], "num": 66814}