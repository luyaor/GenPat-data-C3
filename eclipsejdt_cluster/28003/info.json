{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a7ebdb9a005d191290195f62504aa87c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a28e046a5ed23064d5d908512e1946a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "e2d31ef7ac94c5bb6285f9813df43a1164c5ca8d", "commitAfterChange": "11132934987e84219ca80fa47f5c2b4b4040e5de", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic MethodBinding findCompileTimeMethodTargeting(TypeBinding targetType, Scope scope)", "signatureAfterChange": " \tpublic MethodBinding findCompileTimeMethodTargeting(TypeBinding targetType, Scope scope)", "diff": ["-\t\tif (this.exactMethodBinding != null) {", "-\t\t\t// TODO: shouldn't extactMethodBinding already be parameterized?", "-\t\t\tif (this.exactMethodBinding.typeVariables != Binding.NO_TYPE_VARIABLES && this.resolvedTypeArguments != null) {", "-\t\t\t\treturn scope.environment().createParameterizedGenericMethod(this.exactMethodBinding, this.resolvedTypeArguments);", "-\t\t\t}", "-\t\t\treturn this.exactMethodBinding;", "-\t\t}", "-\t\treturn internalResolveTentatively(targetType, scope);", "+\t\tMethodBinding targetMethod = internalResolveTentatively(targetType, scope);", "+\t\tif (targetMethod == null || !targetMethod.isValidBinding())", "+\t\t\treturn null;", "+\t\treturn targetMethod;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6129d29d20ed397ca243122bc3a67ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/jdom/DOMPackage.java", "commitBeforeChange": "46f57536ed8e2bfbe5a9484e153647c7c5b9cb5d", "commitAfterChange": "846faf5699bcd826a09451dfb06e7bb91fe5a472", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected void appendFragmentedContents(CharArrayBuffer buffer)", "signatureAfterChange": " protected void appendFragmentedContents(CharArrayBuffer buffer)", "diff": ["+\t\tString lineSeparator = Util.getLineSeparator(buffer.toString(), null);", "-\t\t\t.append(org.eclipse.jdt.internal.compiler.util.Util.LINE_SEPARATOR)", "-\t\t\t.append(org.eclipse.jdt.internal.compiler.util.Util.LINE_SEPARATOR);", "+\t\t\t.append(lineSeparator)", "+\t\t\t.append(lineSeparator);"]}], "num": 28003}