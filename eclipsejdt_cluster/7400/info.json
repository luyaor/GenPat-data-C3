{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3862c7f2f9a5b27d5af61548d62ad1a9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "784fa69373fd693e9c044f519e5653d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "6d8036f4b0f90ef715394ba92952a819714c2135", "commitAfterChange": "02733ea32199eef92e7e8bc7be9f2db172e7eedd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void match(Reference node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public void match(Reference node, MatchingNodeSet nodeSet)", "diff": ["-\t\tnodeSet.addMatch(node, this.pattern.mustResolve ? POTENTIAL_MATCH : ACCURATE_MATCH);", "+\t\tnodeSet.addMatch(node, this.pattern.mustResolve ? POSSIBLE_MATCH : ACCURATE_MATCH);", "-\t\t\tnodeSet.addMatch(node, POTENTIAL_MATCH); // resolution is needed to find out if it is a type ref ", "+\t\t\tnodeSet.addMatch(node, POSSIBLE_MATCH); // resolution is needed to find out if it is a type ref ", "-\t\t\t\tnodeSet.addMatch(node, POTENTIAL_MATCH); // resolution is needed to find out if it is a type ref", "+\t\t\t\tnodeSet.addMatch(node, POSSIBLE_MATCH); // resolution is needed to find out if it is a type ref"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81231656ec25ba83e96e3a000643c6a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "6d8036f4b0f90ef715394ba92952a819714c2135", "commitAfterChange": "02733ea32199eef92e7e8bc7be9f2db172e7eedd", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void match(TypeReference node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public void match(TypeReference node, MatchingNodeSet nodeSet)", "diff": ["-\t\tnodeSet.addMatch(node, this.pattern.mustResolve ? POTENTIAL_MATCH : ACCURATE_MATCH);", "+\t\tnodeSet.addMatch(node, this.pattern.mustResolve ? POSSIBLE_MATCH : ACCURATE_MATCH);", "-\t\t\tnodeSet.addMatch(node, this.pattern.mustResolve ? POTENTIAL_MATCH : ACCURATE_MATCH);", "+\t\t\tnodeSet.addMatch(node, this.pattern.mustResolve ? POSSIBLE_MATCH : ACCURATE_MATCH);", "-\t\t\t\tnodeSet.addMatch(node, POTENTIAL_MATCH); // resolution is needed to find out if it is a type ref", "+\t\t\t\tnodeSet.addMatch(node, POSSIBLE_MATCH); // resolution is needed to find out if it is a type ref"]}], "num": 7400}