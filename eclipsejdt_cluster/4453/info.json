{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "64bdee406a6b1d3e2c7ce42f6882a7af", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d7820c29b9cb1f2f95c22ac3fccb3e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedSuperReference.java", "commitBeforeChange": "826aaa7d3dacd4ddad5f556a3ebb7318859595b5", "commitAfterChange": "86ee968d8acf90a0a75c72085f72a3416b02186d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  int findCompatibleEnclosing(ReferenceBinding enclosingType, TypeBinding type)", "signatureAfterChange": "  int findCompatibleEnclosing(ReferenceBinding enclosingType, TypeBinding type)", "diff": ["-\t\t\tthis.currentCompatibleType = supers[i];", "-\t\t\tif (this.currentCompatibleType.erasure() == type) {", "+\t\t\tif (supers[i].erasure() == type) {", "+\t\t\t\tthis.currentCompatibleType = supers[i];", "+\t\t\t} else if (supers[i].erasure().isCompatibleWith(type)) {", "+\t\t\t\tthis.currentCompatibleType = null;", "+\t\t\t\tthis.resolvedType = new ProblemReferenceBinding(supers[i].compoundName, supers[i], ProblemReasons.AttemptToBypassDirectSuper);", "+\t\treturn 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be63677f5d2cb1bfd6d4e413ad63156d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "1369ee539fab963cb9212bc0e7728c8e7ea1581c", "commitAfterChange": "8677d75931646723a12e1b4ccafa141861462004", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": " public void inheritedMethodsHaveIncompatibleReturnTypes(SourceTypeBinding type, MethodBinding[] inheritedMethods, int length)", "signatureAfterChange": " public void inheritedMethodsHaveIncompatibleReturnTypes(SourceTypeBinding type, MethodBinding[] inheritedMethods, int length)", "diff": ["+\tStringBuffer shortSignatures = new StringBuffer();", "-\t\tif (i != 0)", "+\t\tshortSignatures", "+\t\t\t.append(inheritedMethods[i].declaringClass.shortReadableName())", "+\t\t\t.append('.')", "+\t\t\t.append(inheritedMethods[i].shortReadableName());", "+\t\tif (i != 0){", "+\t\t\tshortSignatures.append(\", \"); //$NON-NLS-1$", "+\t\t}", "+\t\tnew String[] {shortSignatures.toString()},"]}], "num": 4453}