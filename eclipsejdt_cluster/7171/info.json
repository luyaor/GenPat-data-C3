{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "226263c31ee7936f75c70cc7c51f0273", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c0137b2d6e32dafa8190165ff90bcae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClassFileTests.java", "commitBeforeChange": "20a3b07578a2ebec2d9a0569764e78af37761eaf", "commitAfterChange": "c052d66dbc2732414cdaf446e79eec5da0743843", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " public void testWorkingCopy08() throws CoreException", "signatureAfterChange": " public void testWorkingCopy08() throws CoreException", "diff": ["-\tWorkingCopyOwner owner = new WorkingCopyOwner() {};", "-\tthis.workingCopy = clazz.becomeWorkingCopy(null/*no problem requestor*/, owner, null/*no progress*/);", "+\tProblemRequestor problemRequestor = new ProblemRequestor();", "+\tWorkingCopyOwner owner = newWorkingCopyOwner(problemRequestor);", "+\tthis.workingCopy = clazz.getWorkingCopy(owner, null/*no progress*/);", "-\t\t\"public class X {\\n\" + ", "+\t\t\"public class X {\\n\" +", "-\t", "+", "-\t\tProblemRequestor problemRequestor = new ProblemRequestor();", "-\t\tcopy = cu.getWorkingCopy(owner, problemRequestor, null/*no prpgress*/);", "+\t\tcopy = cu.getWorkingCopy(owner, null/*no progress*/);", "+\t\tproblemRequestor.problemCount = 0;", "-\t\t\t\"Unexpected problems\", ", "-\t\t\t\"----------\\n\" + ", "+\t\t\t\"Unexpected problems\",", "+\t\t\t\"----------\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d70a19ad6f8fd52b745095dc55e94ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClassFileTests.java", "commitBeforeChange": "20a3b07578a2ebec2d9a0569764e78af37761eaf", "commitAfterChange": "c052d66dbc2732414cdaf446e79eec5da0743843", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " public void testWorkingCopy09() throws CoreException", "signatureAfterChange": " public void testWorkingCopy09() throws CoreException", "diff": ["-\tWorkingCopyOwner owner = new WorkingCopyOwner() {};", "-\tthis.workingCopy = clazz.becomeWorkingCopy(null/*no problem requestor*/, owner, null/*no progress*/);", "+\tProblemRequestor problemRequestor = new ProblemRequestor();", "+\tWorkingCopyOwner owner = newWorkingCopyOwner(problemRequestor);", "+\tthis.workingCopy = clazz.getWorkingCopy(owner, null/*no progress*/);", "-\t", "+", "-\t\tProblemRequestor problemRequestor = new ProblemRequestor();", "-\t\tcopy = cu.getWorkingCopy(owner, problemRequestor, null/*no prpgress*/);", "+\t\tcopy = cu.getWorkingCopy(owner, /*problemRequestor, */null/*no prpgress*/);", "+\t\tproblemRequestor.problemCount = 0;", "-\t\t\t\"Unexpected problems\", ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in /P/Y.java\\n\" + ", "-\t\t\t\"workingcopy.X cannot be resolved to a type\\n\" + ", "+\t\t\t\"Unexpected problems\",", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in /P/Y.java\\n\" +", "+\t\t\t\"workingcopy.X cannot be resolved to a type\\n\" +"]}], "num": 7171}