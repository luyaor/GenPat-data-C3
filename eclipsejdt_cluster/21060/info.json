{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "749ef371043f5411e73bdc703a3fc16c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf4403dee3517501eda801a918432466", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tprotected IJavaElement[] getUnqualifiedMethodHandle(IMethod method, boolean noDollar)", "signatureAfterChange": " \tprotected IJavaElement[] getUnqualifiedMethodHandle(IMethod method, boolean noDollar)", "diff": ["-\t\t\tif (qualifiedName.charAt(count) == Signature.C_RESOLVED) {", "+\t\t\tchar currentChar = qualifiedName.charAt(count);", "+\t\t\tif (currentChar == Signature.C_RESOLVED || currentChar == Signature.C_TYPE_VARIABLE) {", "-\t\t\t\tif(!noDollar) {", "-\t\t\t\t\tif(!hasDollar && simpleName.indexOf('$') != -1) {", "-\t\t\t\t\t\thasDollar = true;", "+\t\t\t\tint lastDollar = simpleName.lastIndexOf('$');", "+\t\t\t\thasDollar |= lastDollar != -1;", "+\t\t\t\tint start = noDollar ? lastDollar + 1 : 0;", "+\t\t\t\tboolean sigStart = false;", "+\t\t\t\tfor (int j = start, length = simpleName.length(); j < length; j++) {", "+\t\t\t\t\tchar current = simpleName.charAt(j);", "+\t\t\t\t\tswitch (current) {", "+\t\t\t\t\t\tcase Signature.C_SUPER:", "+\t\t\t\t\t\tcase Signature.C_EXTENDS:", "+\t\t\t\t\t\tcase Signature.C_GENERIC_START:", "+\t\t\t\t\t\tcase Signature.C_NAME_END:", "+\t\t\t\t\t\t\tunqualifiedName.append(current);", "+\t\t\t\t\t\t\tsigStart = true;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\tif (sigStart) {", "+\t\t\t\t\t\t\t\tif (current == Signature.C_TYPE_VARIABLE) {", "+\t\t\t\t\t\t\t\t\tunqualifiedName.append(Signature.C_UNRESOLVED);", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tunqualifiedName.append(current);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tsigStart = false;", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tunqualifiedName.append(current);", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\tunqualifiedName.append(simpleName);", "-\t\t\t\t} else {", "-\t\t\t\t\tunqualifiedName.append(CharOperation.lastSegment(simpleName.toCharArray(), '$'));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3cdda14dc5b8fc8cddbb2dc3296be6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "2824ba5423780c179acf9a0b6a91351bf791cbe9", "commitAfterChange": "88e68aadcb2bef0d42f85bcbc67cd3093bf6d159", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tprotected IJavaElement[] getUnqualifiedMethodHandle(IMethod method, boolean noDollar)", "signatureAfterChange": " \tprotected IJavaElement[] getUnqualifiedMethodHandle(IMethod method, boolean noDollar)", "diff": ["-\t\t\tStringBuffer unqualifiedName = new StringBuffer();", "-\t\t\tString qualifiedName = qualifiedParameterTypes[i];", "-\t\t\tint count = 0;", "-\t\t\twhile (qualifiedName.charAt(count) == Signature.C_ARRAY) {", "-\t\t\t\tunqualifiedName.append(Signature.C_ARRAY);", "-\t\t\t\t++count;", "-\t\t\t}", "-\t\t\tchar currentChar = qualifiedName.charAt(count);", "-\t\t\tif (currentChar == Signature.C_RESOLVED || currentChar == Signature.C_TYPE_VARIABLE) {", "-\t\t\t\tunqualifiedName.append(Signature.C_UNRESOLVED);", "-\t\t\t\tString simpleName = Signature.getSimpleName(qualifiedName.substring(count+1));", "-\t\t\t\tint lastDollar = simpleName.lastIndexOf('$');", "-\t\t\t\thasDollar |= lastDollar != -1;", "-\t\t\t\tint start = noDollar ? lastDollar + 1 : 0;", "-\t\t\t\tboolean sigStart = false;", "-\t\t\t\tfor (int j = start, length = simpleName.length(); j < length; j++) {", "-\t\t\t\t\tchar current = simpleName.charAt(j);", "-\t\t\t\t\tswitch (current) {", "-\t\t\t\t\t\tcase Signature.C_SUPER:", "-\t\t\t\t\t\tcase Signature.C_EXTENDS:", "-\t\t\t\t\t\tcase Signature.C_GENERIC_START:", "-\t\t\t\t\t\tcase Signature.C_NAME_END:", "-\t\t\t\t\t\t\tunqualifiedName.append(current);", "-\t\t\t\t\t\t\tsigStart = true;", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tdefault:", "-\t\t\t\t\t\t\tif (sigStart) {", "-\t\t\t\t\t\t\t\tswitch(current) {", "-\t\t\t\t\t\t\t\t\tcase Signature.C_TYPE_VARIABLE :", "-\t\t\t\t\t\t\t\t\t\tunqualifiedName.append(Signature.C_UNRESOLVED);", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\tcase Signature.C_GENERIC_END :", "-\t\t\t\t\t\t\t\t\tcase Signature.C_STAR :", "-\t\t\t\t\t\t\t\t\t\tunqualifiedName.append(current);", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\tdefault:", "-\t\t\t\t\t\t\t\t\t\tunqualifiedName.append(Signature.C_UNRESOLVED);", "-\t\t\t\t\t\t\t\t\t\tunqualifiedName.append(current);", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tsigStart = false;", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tunqualifiedName.append(current);", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tunqualifiedName.append(qualifiedName.substring(count, qualifiedName.length()));", "-\t\t\t}", "-\t\t\tunqualifiedParameterTypes[i] = unqualifiedName.toString();", "+\t\t\tStringBuffer unqualifiedTypeSig = new StringBuffer();", "+\t\t\tgetUnqualifiedTypeSignature(qualifiedParameterTypes[i], 0/*start*/, qualifiedParameterTypes[i].length(), unqualifiedTypeSig, noDollar);", "+\t\t\tunqualifiedParameterTypes[i] = unqualifiedTypeSig.toString();", "+\t\t\thasDollar |= unqualifiedParameterTypes[i].lastIndexOf('$') != -1;"]}], "num": 21060}