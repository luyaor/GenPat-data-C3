{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e211a22f44bb79a4a3377f1b6feb2de6", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10988b531e7aaa30e62cfe0dd1b3d733", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "0f7389d382d65723d2623818d6e6cb4fb133556c", "commitAfterChange": "8ed896e298fa9789ff51d3aeca45b60a4a3c5b99", "methodNumberBeforeChange": 152, "methodNumberAfterChange": 152, "signatureBeforeChange": " \tpublic boolean visit(EnumDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(EnumDeclaration node)", "diff": ["-\t\t// TODO; wait for resolve of bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=76190", "-\t\trewriteNodeList(node, EnumDeclaration.BODY_DECLARATIONS_PROPERTY, pos, \"\", \", \"); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tpos= rewriteNodeList(node, EnumDeclaration.ENUM_CONSTANTS_PROPERTY, pos, \"\", \", \"); //$NON-NLS-1$ //$NON-NLS-2$", "+", "+\t\tRewriteEvent bodyEvent= getEvent(node, EnumDeclaration.BODY_DECLARATIONS_PROPERTY);", "+\t\tint indent= 0;", "+\t\tif (bodyEvent != null && bodyEvent.getChangeKind() != RewriteEvent.UNCHANGED) {", "+\t\t\tRewriteEvent[] children= bodyEvent.getChildren();", "+\t\t\ttry {", "+\t\t\t\tint token= getScanner().readNext(pos, true);", "+\t\t\t\tboolean hasSemicolon= token == ITerminalSymbols.TokenNameSEMICOLON;", "+\t\t\t\tif (!hasSemicolon && isAllOfKind(children, RewriteEvent.INSERTED)) {", "+\t\t\t\t\tdoTextInsert(pos, \";\", getEditGroup(children[0])); //$NON-NLS-1$", "+\t\t\t\t} else if (hasSemicolon) {", "+\t\t\t\t\tint endPos= getScanner().getCurrentEndOffset();", "+\t\t\t\t\tif (isAllOfKind(children, RewriteEvent.REMOVED)) {", "+\t\t\t\t\t\tdoTextRemove(pos, endPos - pos, getEditGroup(children[0])); //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t\tpos= endPos;", "+\t\t\t\t}", "+\t\t\t\tindent= getIndent(pos);", "+\t\t\t} catch (CoreException e) {", "+\t\t\t\thandleException(e);", "+\t\t\t}", "+\t\t}", "+\t\trewriteParagraphList(node, EnumDeclaration.BODY_DECLARATIONS_PROPERTY, pos, indent, -1, 2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac5dacbb605746d70de20d9c7e1892bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "02030da0528a8fcbd0cf47635fdec2fbb50668ef", "commitAfterChange": "8ceb000c7fbb649bb64dc31d912e59b394f3fb60", "methodNumberBeforeChange": 156, "methodNumberAfterChange": 156, "signatureBeforeChange": " \tpublic boolean visit(EnumDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(EnumDeclaration node)", "diff": ["+", "+\t\tpos= getPosAfterLeftBrace(pos);", "-\t\tStringBuffer leadString= new StringBuffer();", "+\t\tString leadString= \"\"; //$NON-NLS-1$", "+", "-\t", "-\t\t\tpos= getPosAfterLeftBrace(pos);", "-\t\t\t\tint lead= 1;", "-\t\t\t\tint startIndent= getIndent(node.getStartPosition()) + 1;", "-\t\t\t\tfor (int i= 0; i < lead; i++) {", "-\t\t\t\t\tleadString.append(getLineDelimiter());", "-\t\t\t\t}", "-\t\t\t\tleadString.append(createIndentString(startIndent));", "+\t\t\t\tleadString= this.formatter.FIRST_ENUM_CONST.getPrefix(getIndent(node.getStartPosition()), getLineDelimiter());", "-\t\tpos= rewriteNodeList(node, EnumDeclaration.ENUM_CONSTANTS_PROPERTY, pos, leadString.toString(), \", \"); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tpos= rewriteNodeList(node, EnumDeclaration.ENUM_CONSTANTS_PROPERTY, pos, leadString, \", \"); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tboolean hasConstants= !((List) getNewValue(node, EnumDeclaration.ENUM_CONSTANTS_PROPERTY)).isEmpty();", "+\t\t\t", "+\t\t\t\tif (hasConstants) {", "+\t\t\t\t\tindent= getIndent(pos);", "+\t\t\t\t} else {", "+\t\t\t\t\tindent= getIndent(node.getStartPosition()) + 1;", "+\t\t\t\t}", "+\t\t\t\t\tif (!hasConstants) {", "+\t\t\t\t\t\tString str= this.formatter.FIRST_ENUM_CONST.getPrefix(indent - 1, getLineDelimiter());", "+\t\t\t\t\t\tdoTextInsert(pos, str, getEditGroup(children[0])); //$NON-NLS-1$", "+\t\t\t\t\t}", "-\t\t\t\tindent= getIndent(pos);"]}], "num": 58528}