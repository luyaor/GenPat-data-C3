{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f7e521feb4252f875c1482a2d786495", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6880f191653ac3f6bb27c649104bf0c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ElementsImpl.java", "commitBeforeChange": "2a851009aaa407c5e4c32cb132dfb84271f2e7fd", "commitAfterChange": "2d801bf770aaf09259e660518c988fbfdf829ec5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t@Override \tpublic List<? extends AnnotationMirror> getAllAnnotationMirrors(Element e)", "signatureAfterChange": " \t@Override \tpublic List<? extends AnnotationMirror> getAllAnnotationMirrors(Element e)", "diff": ["+\t\t\tboolean checkIfInherited = false;", "-\t\t\t\tfor (AnnotationBinding annotation : binding.getAnnotations()) {", "+\t\t\t\tfor (AnnotationBinding annotation : Factory.getPackedAnnotationBindings(binding.getAnnotations())) {", "+\t\t\t\t\tif (checkIfInherited && (annotationType.getAnnotationTagBits() & TagBits.AnnotationInherited) == 0)", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\tcheckIfInherited = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcd65cc8799a5c613a6e36869e852dd8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "0faf571a2b978290e761500f873fc8f116675788", "commitAfterChange": "16ea2a8daece1ce57aeee98ca0579c5d79d5f9c9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate TypeDeclaration convert(ISourceType sourceType, CompilationResult compilationResult)", "signatureAfterChange": " \tprivate TypeDeclaration convert(ISourceType sourceType, CompilationResult compilationResult)", "diff": ["+\t\t\tboolean hasAbstractMethods = false;", "+\t\t\t\tif ((sourceMethod.getModifiers() & Flags.AccAbstract) != 0) {", "+\t\t\t\t\thasAbstractMethods = true;", "+\t\t\t\t}", "+\t\t\tif (hasAbstractMethods) type.bits |= ASTNode.HasAbstractMethods;"]}], "num": 55136}