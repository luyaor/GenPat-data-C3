{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ab6ea770557e1f55acfe9f2d5ee4c826", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbd9082607c501c2d92e983034d12437", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "0dc7155c5e6d95f70a9aded517c1b54b5c1563f1", "commitAfterChange": "f6b4d99cbdd9c3e7eddd18da23b2ebc6b500e5e0", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "\t  \tprotected boolean hasErasedCandidatesCollisions(TypeBinding one, TypeBinding two, Map invocations, ReferenceBinding type, ASTNode typeRef)", "signatureAfterChange": "\t  \tprotected boolean hasErasedCandidatesCollisions(TypeBinding one, TypeBinding two, Map invocations, ReferenceBinding type, ASTNode typeRef)", "diff": ["-\t\t\t\tSet invalidInvocations = (Set) invocations.get(mec);", "-\t\t\t\tint invalidSize = invalidInvocations.size();", "-\t\t\t\tif (invalidSize > 1) {", "-\t\t\t\t\tTypeBinding[] collisions;", "-\t\t\t\t\tinvalidInvocations.toArray(collisions = new TypeBinding[invalidSize]);", "-\t\t\t\t\tproblemReporter().superinterfacesCollide(collisions[0].erasure(), typeRef, collisions[0], collisions[1]);", "+\t\t\t\tObject value = invocations.get(mec);", "+\t\t\t\tif (value instanceof TypeBinding[]) {", "+\t\t\t\t\tTypeBinding[] invalidInvocations = (TypeBinding[]) value;", "+\t\t\t\t\tproblemReporter().superinterfacesCollide(invalidInvocations[0].erasure(), typeRef, invalidInvocations[0], invalidInvocations[1]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8099e2168b08658faea70de91fac934", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/JavaSearchNameEnvironment2.java", "commitBeforeChange": "b736a4b7b5e36e43e9911cb920eaa27b719a1739", "commitAfterChange": "f7ef9224b59ac5e8fd98d69dbf74c94b4c3ba7fe", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public NameEnvironmentAnswer findType(char[] typeName, char[][] packageName)", "signatureAfterChange": "  public NameEnvironmentAnswer findType(char[] typeName, char[][] packageName)", "diff": ["-public NameEnvironmentAnswer findType(char[] typeName, char[][] packageName) {", "-\tif (typeName == null) return null;", "-\tchar[][] compoundName = CharOperation.arrayConcat(packageName, typeName);", "-\tNameEnvironmentAnswer answer = findTypeInPotentialMatches(compoundName);", "-\tif (answer != null) return answer;", "-\treturn this.nameEnvironment.findType(typeName, packageName);", "-}", "+public NameEnvironmentAnswer findType(char[] typeName, char[][] packageName) {", "+\tif (typeName != null)", "+\t\treturn findClass(", "+\t\t\tnew String(CharOperation.concatWith(packageName, typeName, '/')),", "+\t\t\ttypeName);", "+\treturn null;", "+}"]}], "num": 29786}