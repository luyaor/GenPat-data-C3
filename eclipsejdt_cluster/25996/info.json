{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "81838615b6ac3368cf45a85368fbebc5", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d2511545af069985e91ee30f910b79c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/FactoryPathConfigurationBlock.java", "commitBeforeChange": "b5012cbf5bbeb60257503c05374665bf1738c502", "commitAfterChange": "4326108404a9c5495558d852fb2cee71d5d10136", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tprivate FactoryContainer[] openExtJarFileDialog(FactoryContainer existing)", "signatureAfterChange": "  \tprivate FactoryContainer[] openExtJarFileDialog(FactoryContainer existing)", "diff": ["-\t//TODO: figure out how to edit an existing jar file - see LibrariesWorkbookPage for example", "-\t\t\tif (selected != null) {", "-\t\t\t\tArrayList<FactoryContainer> res= new ArrayList<FactoryContainer>();", "-\t\t\t\tfor (int i= 0; i < selected.length; i++) {", "-\t\t\t\t\tres.add(FactoryPath.newExtJarFactoryContainer(selected[i].toFile()));", "-\t\t\t\t}", "-\t\t\t\treturn res.toArray(new FactoryContainer[res.size()]);", "+\t\t\tif (selected == null) {", "+\t\t\t\treturn null;", "-\t\t} \t\t", "-\t\treturn null;", "+\t\t\tArrayList<FactoryContainer> res= new ArrayList<FactoryContainer>();", "+\t\t\tfor (int i= 0; i < selected.length; i++) {", "+\t\t\t\tres.add(FactoryPath.newExtJarFactoryContainer(selected[i].toFile()));", "+\t\t\t}", "+\t\t\treturn res.toArray(new FactoryContainer[res.size()]);", "+\t\t}", "+\t\telse {", "+\t\t\tIPath result= BuildPathDialogAccess.configureExternalJAREntry(getShell(), new Path(existing.getId()));", "+\t\t\tif (result == null) {", "+\t\t\t\treturn null;", "+\t\t\t}", "+\t\t\tFactoryContainer[] edited= new FactoryContainer[1];", "+\t\t\tedited[0]= FactoryPath.newExtJarFactoryContainer(result.toFile());", "+\t\t\treturn edited;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "739f6142f47dc63d281635a02e54b8f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/FactoryPathConfigurationBlock.java", "commitBeforeChange": "b5012cbf5bbeb60257503c05374665bf1738c502", "commitAfterChange": "4326108404a9c5495558d852fb2cee71d5d10136", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t \tprivate FactoryContainer[] openVariableSelectionDialog(FactoryContainer existing)", "signatureAfterChange": " \t \tprivate FactoryContainer[] openVariableSelectionDialog(FactoryContainer original)", "diff": ["-\tprivate FactoryContainer[] openVariableSelectionDialog(FactoryContainer existing) {", "-\t\tif (existing == null) {", "-\t\t\tIPath[] existingPaths = getExistingPaths(FactoryContainer.FactoryType.VARJAR);", "+\tprivate FactoryContainer[] openVariableSelectionDialog(FactoryContainer original) {", "+\t\tIPath[] existingPaths = getExistingPaths(FactoryContainer.FactoryType.VARJAR, original);", "+\t\tif (original == null) {", "-\t\t\tif (selected != null) {", "-\t\t\t\tArrayList<FactoryContainer> res= new ArrayList<FactoryContainer>();", "-\t\t\t\tfor (int i= 0; i < selected.length; i++) {", "-\t\t\t\t\tres.add(FactoryPath.newVarJarFactoryContainer(selected[i]));", "-\t\t\t\t}", "-\t\t\t\treturn res.toArray(new FactoryContainer[res.size()]);", "+\t\t\tif (selected == null) {", "+\t\t\t\treturn null;", "-\t\t} \t\t", "-\t\treturn null;", "+\t\t\tArrayList<FactoryContainer> res= new ArrayList<FactoryContainer>();", "+\t\t\tfor (int i= 0; i < selected.length; i++) {", "+\t\t\t\tres.add(FactoryPath.newVarJarFactoryContainer(selected[i]));", "+\t\t\t}", "+\t\t\treturn res.toArray(new FactoryContainer[res.size()]);", "+\t\t}", "+\t\telse {", "+\t\t\tIPath result= BuildPathDialogAccess.configureVariableEntry(getShell(), new Path(original.getId()), existingPaths);", "+\t\t\tif (result == null) {", "+\t\t\t\treturn null;", "+\t\t\t}", "+\t\t\tFactoryContainer[] edited= new FactoryContainer[1];", "+\t\t\tedited[0]= FactoryPath.newVarJarFactoryContainer(result);", "+\t\t\treturn edited;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abad037435891b15333bc3b42f2edd8a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/FactoryPathConfigurationBlock.java", "commitBeforeChange": "b5012cbf5bbeb60257503c05374665bf1738c502", "commitAfterChange": "4326108404a9c5495558d852fb2cee71d5d10136", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tprivate FactoryContainer[] openJarFileDialog(FactoryContainer existing)", "signatureAfterChange": " \tprivate FactoryContainer[] openJarFileDialog(FactoryContainer original)", "diff": ["-\t", "-\tprivate FactoryContainer[] openJarFileDialog(FactoryContainer existing) {", "+\t */", "+\tprivate FactoryContainer[] openJarFileDialog(FactoryContainer original) {", "-\t\tif (existing == null) {", "-\t\t\tIPath[] existingPaths = getExistingPaths(FactoryContainer.FactoryType.WKSPJAR);", "-\t\t\tIPath[] selected= BuildPathDialogAccess.chooseJAREntries(getShell(), fJProj.getPath(), existingPaths);", "-\t\t\tif (selected != null) {", "-\t\t\t\tArrayList<FactoryContainer> res= new ArrayList<FactoryContainer>();", "-\t\t\t\tfor (int i= 0; i < selected.length; i++) {", "-\t\t\t\t\t// verify that the path points to an actual resource.", "-\t\t\t\t\t//TODO: how to handle missing jars?", "-\t\t\t\t\tIResource resource= root.findMember(selected[i]);", "-\t\t\t\t\tif (resource instanceof IFile) {", "-\t\t\t\t\t\tres.add(FactoryPath.newWkspJarFactoryContainer(selected[i]));", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\treturn res.toArray(new FactoryContainer[res.size()]);", "+\t\tIPath[] existingPaths = getExistingPaths(FactoryContainer.FactoryType.WKSPJAR, original);", "+\t\tif (original == null) {", "+\t\t\tIPath[] results= BuildPathDialogAccess.chooseJAREntries(getShell(), fJProj.getPath(), existingPaths);", "+\t\t\tif (results == null) {", "+\t\t\t\treturn null;", "-\t\t} \t\t", "-\t\treturn null;", "+\t\t\tArrayList<FactoryContainer> res= new ArrayList<FactoryContainer>();", "+\t\t\tfor (int i= 0; i < results.length; i++) {", "+\t\t\t\tIResource resource= root.findMember(results[i]);", "+\t\t\t\tif (resource instanceof IFile) {", "+\t\t\t\t\tres.add(FactoryPath.newWkspJarFactoryContainer(results[i]));", "+\t\t\t\t}", "+\t\t\t\t//TODO: handle missing jars", "+\t\t\t}", "+\t\t\treturn res.toArray(new FactoryContainer[res.size()]);", "+\t\t}", "+\t\telse {", "+\t\t\tIPath result= BuildPathDialogAccess.configureJAREntry(getShell(), new Path(original.getId()), existingPaths);", "+\t\t\tif (result == null) {", "+\t\t\t\treturn null;", "+\t\t\t}", "+\t\t\tIResource resource= root.findMember(result);", "+\t\t\tif (resource instanceof IFile) {", "+\t\t\t\tFactoryContainer[] edited = new FactoryContainer[1];", "+\t\t\t\tedited[0]= FactoryPath.newWkspJarFactoryContainer(result);", "+\t\t\t\treturn edited;", "+\t\t\t}", "+\t\t\t//TODO: handle missing jars", "+\t\t\treturn null;", "+ \t\t}"]}], "num": 25996}