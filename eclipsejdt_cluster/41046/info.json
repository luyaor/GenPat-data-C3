{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc902611f7e23203913c8212da3e9387", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "164ae78c3b99f46d54394eb97476d810", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ConverterTestSetup.java", "commitBeforeChange": "dcf93fb34d4ce9325841c9302bc217b02f49501a", "commitAfterChange": "2d445826d63f77051d33e940a44a5c31fae7d718", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \t\t \tprotected void checkSourceRange(ASTNode node, String expectedContents, char[] source)", "signatureAfterChange": " \t\t \tprotected void checkSourceRange(ASTNode node, String expectedContents, String source)", "diff": ["+\tprotected void checkSourceRange(ASTNode node, String expectedContents, String source) {", "+\t\tassertNotNull(\"The node is null\", node); //$NON-NLS-1$", "+\t\tassertTrue(\"The node(\" + node.getClass() + \").getLength() == 0\", node.getLength() != 0); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tassertTrue(\"The node.getStartPosition() == -1\", node.getStartPosition() != -1); //$NON-NLS-1$", "+\t\tint length = node.getLength();", "+\t\tint start = node.getStartPosition();", "+\t\tString actualContentsString = source.substring(start, start + length);", "+\t\tassertSourceEquals(\"Unexpected source\", Util.convertToIndependantLineDelimiter(expectedContents), Util.convertToIndependantLineDelimiter(actualContentsString));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28198e3f25ed7b3f0dd0cbb2fffdfcb3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ConverterTestSetup.java", "commitBeforeChange": "13c8801d2f8e4ce1fa92bdf4a4bb98ae724d8896", "commitAfterChange": "44313304e0594d0f08292955b5056eea6f38a821", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": "  \tprotected void checkSourceRange(ASTNode node, String expectedContents, String source)", "signatureAfterChange": "  \tprotected void checkSourceRange(int start, int length, String expectedContents, String source)", "diff": ["+\tprotected void checkSourceRange(int start, int length, String expectedContents, String source) {", "+\t\tassertTrue(\"length == 0\", length != 0); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tassertTrue(\"start == -1\", start != -1); //$NON-NLS-1$", "+\t\tString actualContentsString = source.substring(start, start + length);", "+\t\tassertSourceEquals(\"Unexpected source\", Util.convertToIndependantLineDelimiter(expectedContents), Util.convertToIndependantLineDelimiter(actualContentsString));", "+\t}"]}], "num": 41046}