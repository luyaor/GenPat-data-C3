{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cd938239603871a92ba016713a8ad4b3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13021e16aa85d98b2a059858b80898b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "ade89e4fcc147d76e26736c6fadf9edebfc6386e", "commitAfterChange": "29f9f7b54f341569f134578b4014b331ae83ea82", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r \r private SimpleLookupTable findDeltas()", "signatureAfterChange": "\r \r private SimpleLookupTable findDeltas()", "diff": ["-\tSimpleLookupTable deltas = new SimpleLookupTable(prereqOutputFolders.elementSize + 1);\r", "+\tSimpleLookupTable deltas = new SimpleLookupTable(binaryResources.elementSize + 1);\r", "-\tObject[] keyTable = prereqOutputFolders.keyTable;\r", "-\tfor (int i = 0, l = keyTable.length; i < l; i++) {\r", "-\t\tIProject prereqProject = (IProject) keyTable[i];\r", "-\t\tif (prereqProject != null && lastState.isStructurallyChanged(prereqProject, getLastState(prereqProject))) {\r", "-\t\t\tnotifier.subTask(Util.bind(\"build.readingDelta\", prereqProject.getName())); //$NON-NLS-1$\r", "-\t\t\tdelta = getDelta(prereqProject);\r", "+\tObject[] keyTable = binaryResources.keyTable;\r", "+\tObject[] valueTable = binaryResources.valueTable;\r", "+\tnextProject : for (int i = 0, l = keyTable.length; i < l; i++) {\r", "+\t\tIProject p = (IProject) keyTable[i];\r", "+\t\tif (p != null && p != currentProject) {\r", "+\t\t\tif (!lastState.isStructurallyChanged(p, getLastState(p))) { // see if we can skip its delta\r", "+\t\t\t\tIResource[] binaryResources = (IResource[]) valueTable[i];\r", "+\t\t\t\tif (binaryResources.length <= 1)\r", "+\t\t\t\t\tcontinue nextProject; // project has no structural changes in its output folder\r", "+\t\t\t\tbinaryResources[0] = null; // skip the output folder\r", "+\t\t\t}\r", "+\r", "+\t\t\tnotifier.subTask(Util.bind(\"build.readingDelta\", p.getName())); //$NON-NLS-1$\r", "+\t\t\tdelta = getDelta(p);\r", "-\t\t\t\tdeltas.put(prereqProject, delta);\r", "+\t\t\t\tdeltas.put(p, delta);\r", "-\t\t\t\t\tSystem.out.println(\"Missing delta for: \" + prereqProject.getName());\t //$NON-NLS-1$\r", "+\t\t\t\t\tSystem.out.println(\"Missing delta for: \" + p.getName());\t //$NON-NLS-1$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f4a5449e9deed2364998df65d71877c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "376cf3e1a3637f0d6698064b8aa139e3173f12de", "commitAfterChange": "15d76232d8d0f6d3d473493e1ebc4002775a58d1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r \r private SimpleLookupTable findDeltas()", "signatureAfterChange": "\r \r private SimpleLookupTable findDeltas()", "diff": ["-\tSimpleLookupTable deltas = new SimpleLookupTable(binaryResources.elementSize + 1);\r", "+\tSimpleLookupTable deltas = new SimpleLookupTable(3);\r", "-\t\tdeltas.put(currentProject, delta);\r", "+\t\tif (delta.getKind() != IResourceDelta.NO_CHANGE) {\r", "+\t\t\tif (DEBUG)\r", "+\t\t\t\tSystem.out.println(\"Found source delta for: \" + currentProject.getName()); //$NON-NLS-1$\r", "+\t\t\tdeltas.put(currentProject, delta);\r", "+\t\t}\r", "-\t\t\tif (!lastState.isStructurallyChanged(p, getLastState(p))) { // see if we can skip its delta\r", "-\t\t\t\tIResource[] binaryResources = (IResource[]) valueTable[i];\r", "-\t\t\t\tif (binaryResources.length <= 1)\r", "+\t\t\tState s = getLastState(p);\r", "+\t\t\tif (!lastState.isStructurallyChanged(p, s)) { // see if we can skip its delta\r", "+\t\t\t\tif (s.wasNoopBuild())\r", "+\t\t\t\t\tcontinue nextProject; // project has no source folders and can be skipped\r", "+\t\t\t\tIResource[] classFoldersAndJars = (IResource[]) valueTable[i];\r", "+\t\t\t\tif (classFoldersAndJars.length <= 1)\r", "-\t\t\t\tbinaryResources[0] = null; // skip the output folder\r", "+\t\t\t\tclassFoldersAndJars[0] = null; // skip the output folder\r", "-\t\t\t\tdeltas.put(p, delta);\r", "+\t\t\t\tif (delta.getKind() != IResourceDelta.NO_CHANGE) {\r", "+\t\t\t\t\tif (DEBUG)\r", "+\t\t\t\t\t\tSystem.out.println(\"Found binary delta for: \" + p.getName()); //$NON-NLS-1$\r", "+\t\t\t\t\tdeltas.put(p, delta);\r", "+\t\t\t\t}\r"]}], "num": 69351}