{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8227f3cc798a442fee0d153ac64e61d6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30ef47e025af9cec41323446e3571066", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate TypeDeclaration convert(ISourceType sourceType, CompilationResult compilationResult)", "signatureAfterChange": " \tprivate TypeDeclaration convert(ISourceType sourceType, CompilationResult compilationResult)", "diff": ["-\t\tTypeDeclaration type;", "-\t\tif (sourceType.getEnclosingType() == null) {", "-\t\t\ttype = new TypeDeclaration(compilationResult);", "-\t\t} else {", "-\t\t\ttype = new MemberTypeDeclaration(compilationResult);", "+\t\tTypeDeclaration type = type = new TypeDeclaration(compilationResult);", "+\t\tif (sourceType.getEnclosingType() != null) {", "+\t\t\ttype.bits |= ASTNode.IsMemberTypeMASK;", "-\t\t\ttype.memberTypes = new MemberTypeDeclaration[sourceMemberTypeCount];", "+\t\t\ttype.memberTypes = new TypeDeclaration[sourceMemberTypeCount];", "-\t\t\t\ttype.memberTypes[i] =", "-\t\t\t\t\t(MemberTypeDeclaration) convert(sourceMemberTypes[i], compilationResult);", "+\t\t\t\ttype.memberTypes[i] = convert(sourceMemberTypes[i], compilationResult);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d46afdbb00b74c7c0b6724bd97fa2bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/TypeConverter.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tprivate static TypeDeclaration convert(IType type, IType alreadyComputedMember,MemberTypeDeclaration alreadyComputedMemberDeclaration, CompilationResult compilationResult) throws JavaModelException", "signatureAfterChange": " \t \tprivate static TypeDeclaration convert(IType type, IType alreadyComputedMember,TypeDeclaration alreadyComputedMemberDeclaration, CompilationResult compilationResult) throws JavaModelException", "diff": ["-\tprivate static TypeDeclaration convert(IType type, IType alreadyComputedMember,MemberTypeDeclaration alreadyComputedMemberDeclaration, CompilationResult compilationResult) throws JavaModelException {", "+\tprivate static TypeDeclaration convert(IType type, IType alreadyComputedMember,TypeDeclaration alreadyComputedMemberDeclaration, CompilationResult compilationResult) throws JavaModelException {", "-\t\tTypeDeclaration typeDeclaration;", "-\t\tif (type.getDeclaringType() == null) {", "-\t\t\ttypeDeclaration = new TypeDeclaration(compilationResult);", "-\t\t} else {", "-\t\t\ttypeDeclaration = new MemberTypeDeclaration(compilationResult);", "+\t\tTypeDeclaration typeDeclaration = new TypeDeclaration(compilationResult);", "+", "+\t\tif (type.getDeclaringType() != null) {", "+\t\t\ttypeDeclaration.bits |= ASTNode.IsMemberTypeMASK;", "-\t\ttypeDeclaration.memberTypes = new MemberTypeDeclaration[memberTypeCount];", "+\t\ttypeDeclaration.memberTypes = new TypeDeclaration[memberTypeCount];", "-\t\t\t\ttypeDeclaration.memberTypes[i] =", "-\t\t\t\t\t(MemberTypeDeclaration) convert(memberTypes[i], null, null, compilationResult);", "+\t\t\t\ttypeDeclaration.memberTypes[i] = convert(memberTypes[i], null, null, compilationResult);"]}], "num": 2324}