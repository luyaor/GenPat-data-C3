{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ae45c64edf8190f4e5d494afec9ef4e5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "397feb656a7c2589e5bd9d3f81ea4c1b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/NamingConventions.java", "commitBeforeChange": "302df05b099c1ea06faca0b00f806513c7db6904", "commitAfterChange": "c661afbb38268ca6f18a772df813f6c69bb9e17c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t\tpublic char[][] getResults()", "signatureAfterChange": " \t\tpublic char[][] getResults()", "diff": ["-\t\t\t\tfirstPrefixAndFirstSuffixResultsCount", "-\t\t\t\t+ firstPrefixAndSuffixResultsCount", "-\t\t\t\t+ prefixAndFirstSuffixResultsCount", "-\t\t\t\t+ prefixAndSuffixResultsCount", "-\t\t\t\t+ firstPrefixResultsCount", "-\t\t\t\t+ prefixResultsCount", "-\t\t\t\t+ firstSuffixResultsCount", "-\t\t\t\t+ suffixResultsCount", "-\t\t\t\t+ otherResultsCount;", "+\t\t\t\tthis.firstPrefixAndFirstSuffixResultsCount", "+\t\t\t\t+ this.firstPrefixAndSuffixResultsCount", "+\t\t\t\t+ this.prefixAndFirstSuffixResultsCount", "+\t\t\t\t+ this.prefixAndSuffixResultsCount", "+\t\t\t\t+ this.firstPrefixResultsCount", "+\t\t\t\t+ this.prefixResultsCount", "+\t\t\t\t+ this.firstSuffixResultsCount", "+\t\t\t\t+ this.suffixResultsCount", "+\t\t\t\t+ this.otherResultsCount;", "-\t\t\tSystem.arraycopy(firstPrefixAndFirstSuffixResults, 0, results, index, firstPrefixAndFirstSuffixResultsCount);", "-\t\t\tindex += firstPrefixAndFirstSuffixResultsCount;", "-\t\t\tSystem.arraycopy(firstPrefixAndSuffixResults, 0, results, index, firstPrefixAndSuffixResultsCount);", "-\t\t\tindex += firstPrefixAndSuffixResultsCount;", "-\t\t\tSystem.arraycopy(prefixAndFirstSuffixResults, 0, results, index, prefixAndFirstSuffixResultsCount);", "-\t\t\tindex += prefixAndFirstSuffixResultsCount;\t\t", "-\t\t\tSystem.arraycopy(prefixAndSuffixResults, 0, results, index, prefixAndSuffixResultsCount);", "-\t\t\tindex += prefixAndSuffixResultsCount;", "-\t\t\tSystem.arraycopy(firstPrefixResults, 0, results, index, firstPrefixResultsCount);", "-\t\t\tindex += firstPrefixResultsCount;", "-\t\t\tSystem.arraycopy(prefixResults, 0, results, index, prefixResultsCount);", "-\t\t\tindex += prefixResultsCount;", "-\t\t\tSystem.arraycopy(firstSuffixResults, 0, results, index, firstSuffixResultsCount);", "-\t\t\tindex += firstSuffixResultsCount;", "-\t\t\tSystem.arraycopy(suffixResults, 0, results, index, suffixResultsCount);", "-\t\t\tindex += suffixResultsCount;", "-\t\t\tSystem.arraycopy(otherResults, 0, results, index, otherResultsCount);", "+\t\t\tSystem.arraycopy(this.firstPrefixAndFirstSuffixResults, 0, results, index, this.firstPrefixAndFirstSuffixResultsCount);", "+\t\t\tindex += this.firstPrefixAndFirstSuffixResultsCount;", "+\t\t\tSystem.arraycopy(this.firstPrefixAndSuffixResults, 0, results, index, this.firstPrefixAndSuffixResultsCount);", "+\t\t\tindex += this.firstPrefixAndSuffixResultsCount;", "+\t\t\tSystem.arraycopy(this.prefixAndFirstSuffixResults, 0, results, index, this.prefixAndFirstSuffixResultsCount);", "+\t\t\tindex += this.prefixAndFirstSuffixResultsCount;\t\t", "+\t\t\tSystem.arraycopy(this.prefixAndSuffixResults, 0, results, index, this.prefixAndSuffixResultsCount);", "+\t\t\tindex += this.prefixAndSuffixResultsCount;", "+\t\t\tSystem.arraycopy(this.firstPrefixResults, 0, results, index, this.firstPrefixResultsCount);", "+\t\t\tindex += this.firstPrefixResultsCount;", "+\t\t\tSystem.arraycopy(this.prefixResults, 0, results, index, this.prefixResultsCount);", "+\t\t\tindex += this.prefixResultsCount;", "+\t\t\tSystem.arraycopy(this.firstSuffixResults, 0, results, index, this.firstSuffixResultsCount);", "+\t\t\tindex += this.firstSuffixResultsCount;", "+\t\t\tSystem.arraycopy(this.suffixResults, 0, results, index, this.suffixResultsCount);", "+\t\t\tindex += this.suffixResultsCount;", "+\t\t\tSystem.arraycopy(this.otherResults, 0, results, index, this.otherResultsCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d304ed4de0325584e60621db13099e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionScanner.java", "commitBeforeChange": "ee73272992444a9c8e6586ce5a37f5dc6d6e8bd9", "commitAfterChange": "f598d68e65d421b1e902e4d71831d57a9b4e73ab", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public char[] getCurrentIdentifierSource()", "signatureAfterChange": " public char[] getCurrentIdentifierSource()", "diff": ["-\tif (completionIdentifier == null){", "-\t\tif (cursorLocation < startPosition && currentPosition == startPosition){ // fake empty identifier got issued", "+\tif (this.completionIdentifier == null){", "+\t\tif (this.cursorLocation < this.startPosition && this.currentPosition == this.startPosition){ // fake empty identifier got issued", "-\t\t\tcompletedIdentifierStart = startPosition;", "-\t\t\tcompletedIdentifierEnd = completedIdentifierStart - 1;\t\t\t", "-\t\t\treturn completionIdentifier = EmptyCompletionIdentifier;\t\t\t\t\t", "+\t\t\tthis.completedIdentifierStart = this.startPosition;", "+\t\t\tthis.completedIdentifierEnd = this.completedIdentifierStart - 1;\t\t\t", "+\t\t\treturn this.completionIdentifier = EmptyCompletionIdentifier;\t\t\t\t\t", "-\t\tif (cursorLocation+1 >= startPosition && cursorLocation < currentPosition){", "+\t\tif (this.cursorLocation+1 >= this.startPosition && this.cursorLocation < this.currentPosition){", "-\t\t\tcompletedIdentifierStart = startPosition;", "-\t\t\tcompletedIdentifierEnd = currentPosition - 1;", "-\t\t\tif (withoutUnicodePtr != 0){\t\t\t// check unicode scenario", "-\t\t\t\tSystem.arraycopy(withoutUnicodeBuffer, 1, completionIdentifier = new char[withoutUnicodePtr], 0, withoutUnicodePtr);", "+\t\t\tthis.completedIdentifierStart = this.startPosition;", "+\t\t\tthis.completedIdentifierEnd = this.currentPosition - 1;", "+\t\t\tif (this.withoutUnicodePtr != 0){\t\t\t// check unicode scenario", "+\t\t\t\tSystem.arraycopy(this.withoutUnicodeBuffer, 1, this.completionIdentifier = new char[this.withoutUnicodePtr], 0, this.withoutUnicodePtr);", "-\t\t\t\tint length = cursorLocation + 1 - startPosition;", "+\t\t\t\tint length = this.cursorLocation + 1 - this.startPosition;", "-\t\t\t\tSystem.arraycopy(source, startPosition, (completionIdentifier = new char[length]), 0, length);", "+\t\t\t\tSystem.arraycopy(this.source, this.startPosition, (this.completionIdentifier = new char[length]), 0, length);", "-\t\t\treturn completionIdentifier;", "+\t\t\treturn this.completionIdentifier;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f3aa5b874754e2471a3b95e87451749", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": " protected void consumeFieldDeclaration()", "signatureAfterChange": " protected void consumeFieldDeclaration()", "diff": ["-\tint variableDeclaratorsCounter = astLengthStack[astLengthPtr];", "+\tint variableDeclaratorsCounter = this.astLengthStack[this.astLengthPtr];", "-\t\tFieldDeclaration fieldDeclaration = (FieldDeclaration) astStack[astPtr - i];", "-\t\tfieldDeclaration.declarationSourceEnd = endStatementPosition; ", "-\t\tfieldDeclaration.declarationEnd = endStatementPosition;\t// semi-colon included", "+\t\tFieldDeclaration fieldDeclaration = (FieldDeclaration) this.astStack[this.astPtr - i];", "+\t\tfieldDeclaration.declarationSourceEnd = this.endStatementPosition; ", "+\t\tfieldDeclaration.declarationEnd = this.endStatementPosition;\t// semi-colon included", "-\tint endPos = flushCommentsDefinedPriorTo(endStatementPosition);", "-\tif (endPos != endStatementPosition) {", "+\tint endPos = flushCommentsDefinedPriorTo(this.endStatementPosition);", "+\tif (endPos != this.endStatementPosition) {", "-\t\t\tFieldDeclaration fieldDeclaration = (FieldDeclaration) astStack[astPtr - i];", "+\t\t\tFieldDeclaration fieldDeclaration = (FieldDeclaration) this.astStack[this.astPtr - i];", "-\tint startIndex = astPtr - variablesCounter[nestedType] + 1;", "+\tint startIndex = this.astPtr - this.variablesCounter[this.nestedType] + 1;", "-\t\tastStack, ", "+\t\tthis.astStack, ", "-\t\tastStack, ", "+\t\tthis.astStack, ", "-\tastPtr--; // remove the type reference", "-\tastLengthStack[--astLengthPtr] = variableDeclaratorsCounter;", "+\tthis.astPtr--; // remove the type reference", "+\tthis.astLengthStack[--this.astLengthPtr] = variableDeclaratorsCounter;", "-\tif (currentElement != null) {", "-\t\tlastCheckPoint = endPos + 1;", "-\t\tif (currentElement.parent != null && currentElement instanceof RecoveredField){", "-\t\t\tif (!(currentElement instanceof RecoveredInitializer)) {", "-\t\t\t\tcurrentElement = currentElement.parent;", "+\tif (this.currentElement != null) {", "+\t\tthis.lastCheckPoint = endPos + 1;", "+\t\tif (this.currentElement.parent != null && this.currentElement instanceof RecoveredField){", "+\t\t\tif (!(this.currentElement instanceof RecoveredInitializer)) {", "+\t\t\t\tthis.currentElement = this.currentElement.parent;", "-\t\trestartRecovery = true;", "+\t\tthis.restartRecovery = true;", "-\tvariablesCounter[nestedType] = 0;", "+\tthis.variablesCounter[this.nestedType] = 0;"]}], "num": 26530}