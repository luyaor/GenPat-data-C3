{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9fcd5f70b0077369193d697eadcf1aa2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "708abae0456e262ef3508c948cf14247", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "da50a11f1737dbee3925e1da64ad7f9cbaff2e84", "commitAfterChange": "99342a278896e2f8caf142911ce817f7cc97d106", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \r \tprivate void complete(AstNode astNode, Binding qualifiedBinding, Scope scope)", "signatureAfterChange": "\r \r \tprivate void complete(AstNode astNode, Binding qualifiedBinding, Scope scope)", "diff": ["+\t\t\t\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\t\t\t\tif(astNode instanceof CompletionOnMethodName) {\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\tCompletionOnMethodName method = (CompletionOnMethodName) astNode;\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\tsetSourceRange(method.sourceStart, method.selectorEnd);\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\tFieldBinding[] fields = scope.enclosingSourceType().fields();\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\tchar[][] excludeNames = new char[fields.length][];\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\tfor(int i = 0 ; i < fields.length ; i++){\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\texcludeNames[i] = fields[i].name;\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\tfindVariableNames(method.selector, method.returnType, excludeNames);\r", "+\t\t\t\t\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\tif (astNode instanceof CompletionOnFieldName) {\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tCompletionOnFieldName field = (CompletionOnFieldName) astNode;\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tFieldBinding[] fields = scope.enclosingSourceType().fields();\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tchar[][] excludeNames = new char[fields.length][];\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor(int i = 0 ; i < fields.length ; i++){\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\texcludeNames[i] = fields[i].name;\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindVariableNames(field.name, field.type, excludeNames);\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (astNode instanceof CompletionOnLocalName ||\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tastNode instanceof CompletionOnArgumentName){\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tLocalDeclaration variable = (LocalDeclaration) astNode;\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tLocalVariableBinding[] locals = ((BlockScope)scope).locals;\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchar[][] excludeNames = new char[locals.length][];\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tint localCount = 0;\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor(int i = 0 ; i < locals.length ; i++){\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(locals[i] != null) {\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\texcludeNames[localCount++] = locals[i].name;\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSystem.arraycopy(excludeNames, 0, excludeNames = new char[localCount][], 0, localCount);\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindVariableNames(variable.name, variable.type, excludeNames);\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t} \r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\t\t\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e26af720b2e99d0ab9f6d8eedb69e85c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "71895c81fed55af12d70112075adbee60bd4e2a4", "commitAfterChange": "4a8e4bc6253cbe53e5dc0d89214baeb1f9444811", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \r \tprivate void complete(AstNode astNode, Binding qualifiedBinding, Scope scope)", "signatureAfterChange": "\r \r \tprivate void complete(AstNode astNode, Binding qualifiedBinding, Scope scope)", "diff": ["-\t\t\tchar[] token = type.token;\r", "+\t\t\ttoken = type.token;\r", "-\t\t\t\tchar[] token = ((CompletionOnSingleNameReference) astNode).token;\r", "+\t\t\t\ttoken = ((CompletionOnSingleNameReference) astNode).token;\r", "-\t\t\t\t\tchar[] token = ((CompletionOnSingleTypeReference) astNode).token;\r", "+\t\t\t\t\ttoken = ((CompletionOnSingleTypeReference) astNode).token;\r", "-\t\t\t\t\t\tchar[] token = ref.completionIdentifier;\r", "+\t\t\t\t\t\ttoken = ref.completionIdentifier;\r", "-\t\t\t\t\t\t\tchar[] token = ref.completionIdentifier;\r", "+\t\t\t\t\t\t\ttoken = ref.completionIdentifier;\r", "+\t\t\t\t\r", "+\t\t\t\t\t\t\t\ttoken = access.token;\r", "-\t\t\t\t\t\t\t\t\taccess.token,\r", "+\t\t\t\t\t\t\t\t\ttoken,\r", "+\t\t\t\t\t\t\t\t\ttoken = messageSend.selector;\r", "-\r", "-\t\t\t\t\t\t\t\t\t\tfindImplicitMessageSends(messageSend.selector, argTypes, scope, messageSend, scope);\r", "+\t\t\t\t\t\t\t\t\t\t\r", "+\t\t\t\t\t\t\t\t\t\tfindImplicitMessageSends(token, argTypes, scope, messageSend, scope);\r", "-\t\t\t\t\t\t\t\t\t\t\tmessageSend.selector,\r", "+\t\t\t\t\t\t\t\t\t\t\ttoken,\r", "-\t\t\t\t\t\t\t\t\t\t\t\tfindClassField(access.completionIdentifier, (TypeBinding) qualifiedBinding);\r", "+\t\t\t\t\t\t\t\t\t\t\t\ttoken = access.completionIdentifier;\r", "+\t\t\t\t\t\t\t\t\r", "+\t\t\t\t\t\t\t\t\t\t\t\tfindClassField(token, (TypeBinding) qualifiedBinding);\r", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r", "-\t\t\t\t\t\t\t\t\t\t\t\t\tfindVariableNames(method.selector, method.returnType, excludeNames);\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\ttoken = method.selector;\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\tfindVariableNames(token, method.returnType, excludeNames);\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\ttoken = field.realName;\r", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchar[] name;\r", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname = ((CompletionOnLocalName) variable).realName;\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttoken = ((CompletionOnLocalName) variable).realName;\r", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname = ((CompletionOnArgumentName) variable).realName;\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttoken = ((CompletionOnArgumentName) variable).realName;\r", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindVariableNames(name, variable.type, excludeNames);\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindVariableNames(token, variable.type, excludeNames);\r"]}], "num": 61862}