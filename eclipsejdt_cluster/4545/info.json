{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "264dc39d416a7b56f2fb4da3ca973036", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58b43aaeb799a22e1b399626e24dc143", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "4b3205881d2b83b4d22e7e7448a1c8a755f73982", "commitAfterChange": "c30613b3c1eac52834666cb07a38e3f9077e1829", "methodNumberBeforeChange": 371, "methodNumberAfterChange": 371, "signatureBeforeChange": " \tpublic void test367()", "signatureAfterChange": " \tpublic void test367()", "diff": ["-\t\t\t\"1. WARNING in X.java (at line 3)\\r\\n\" + ", "-\t\t\t\"\tvoid foo1(MX<? extends MX> target, MX<MX<String>> value) {\\r\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tvoid foo1(MX<? extends MX> target, MX<MX<String>> value) {\\n\" + ", "-\t\t\t\"2. WARNING in X.java (at line 9)\\r\\n\" + ", "-\t\t\t\"\tvoid foo3(MX<? super MX> target, MX<MX<String>> value) {\\r\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tvoid foo3(MX<? super MX> target, MX<MX<String>> value) {\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 10)\\r\\n\" + ", "-\t\t\t\"\ttarget= value; // foo3\\r\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\t\"\ttarget= value; // foo3\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61f6405dab34510de0c03fcb5824ed4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "87ae141af8fce3aef7e67ba02676b958a112fef6", "commitAfterChange": "5a6216b5646e4800b580b6acc994e6adb1594c6f", "methodNumberBeforeChange": 206, "methodNumberAfterChange": 206, "signatureBeforeChange": " \tpublic void test071()", "signatureAfterChange": " \tpublic void test071()", "diff": ["-\t\t\t\"1. ERROR in D.java (at line 2)\\r\\n\" +", "-\t\t\t\"\t@Override void m(Number t) {}\\r\\n\" +", "+\t\t\t\"1. ERROR in D.java (at line 2)\\n\" +", "+\t\t\t\"\t@Override void m(Number t) {}\\n\" +", "-\t\t\t\"2. ERROR in D.java (at line 2)\\r\\n\" +", "-\t\t\t\"\t@Override void m(Number t) {}\\r\\n\" +", "+\t\t\t\"2. ERROR in D.java (at line 2)\\n\" +", "+\t\t\t\"\t@Override void m(Number t) {}\\n\" +", "-\t\t\t\"3. WARNING in D.java (at line 6)\\r\\n\" +", "-\t\t\t\"\tclass B<S extends Integer> extends A<S> { @Override void m(S t) {} }\\r\\n\" +", "+\t\t\t\"3. WARNING in D.java (at line 6)\\n\" +", "+\t\t\t\"\tclass B<S extends Integer> extends A<S> { @Override void m(S t) {} }\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8081c8446f5d5e4c6011058af1de7074", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "135b5458f903218b5e5f72f009845ca69a1dfc48", "commitAfterChange": "fd19dfb11535c216820cbb7ea651282176d7f285", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic void test007a()", "signatureAfterChange": " \tpublic void test007a()", "diff": ["-\t\t\t\"1. ERROR in A.java (at line 2)\\r\\n\" + ", "-\t\t\t\"\tinterface I extends J { Object foo(); }\\r\\n\" + ", "+\t\t\t\"1. ERROR in A.java (at line 1)\\n\" + ", "+\t\t\t\"\tabstract class A implements I {}\\n\" + ", "+\t\t\t\"\t               ^\\n\" + ", "+\t\t\t\"The return type is incompatible with J.foo(), I.foo()\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in A.java (at line 2)\\n\" + ", "+\t\t\t\"\tinterface I extends J { Object foo(); }\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 1)\\r\\n\" + ", "-\t\t\t\"\tabstract class X2 extends A implements J {}\\r\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 1)\\n\" + ", "+\t\t\t\"\tabstract class X2 extends A implements J {}\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c32aa96567b6ca77b4a68d988e7d98da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "87ae141af8fce3aef7e67ba02676b958a112fef6", "commitAfterChange": "5a6216b5646e4800b580b6acc994e6adb1594c6f", "methodNumberBeforeChange": 235, "methodNumberAfterChange": 235, "signatureBeforeChange": " \tpublic void test085c()", "signatureAfterChange": " \tpublic void test085c()", "diff": ["-\t\t\t\"2. ERROR in X.java (at line 3)\\r\\n\" +", "-\t\t\t\"\tabstract class X2 extends CX implements IX {}\\r\\n\" +", "+\t\t\t\"2. ERROR in X.java (at line 3)\\n\" +", "+\t\t\t\"\tabstract class X2 extends CX implements IX {}\\n\" +", "-\t\t\t\"3. WARNING in X.java (at line 3)\\r\\n\" +", "-\t\t\t\"\tabstract class X2 extends CX implements IX {}\\r\\n\" +", "+\t\t\t\"3. WARNING in X.java (at line 3)\\n\" +", "+\t\t\t\"\tabstract class X2 extends CX implements IX {}\\n\" +", "-\t\t\t\"4. WARNING in X.java (at line 3)\\r\\n\" +", "-\t\t\t\"\tabstract class X2 extends CX implements IX {}\\r\\n\" +", "+\t\t\t\"4. WARNING in X.java (at line 3)\\n\" +", "+\t\t\t\"\tabstract class X2 extends CX implements IX {}\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cef24514caf808e1e5e53f9083da03cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "e5fda1d929f48b1ed961a5e3c698240a2263aa5e", "commitAfterChange": "492742130581f98e928eea7bd4ac7e448a4c7517", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic void test007a()", "signatureAfterChange": " \tpublic void test007a()", "diff": ["-\t\t\t\t\"interface I extends J { Object foo(); }\\n\" +", "+\t\t\t\t\"interface I extends J { Object foo(); }\\n\" + // with javac only this type gets an error", "-\t\t\t\"1. ERROR in A.java (at line 1)\\n\" + ", "-\t\t\t\"\tabstract class A implements I {}\\n\" + ", "-\t\t\t\"\t               ^\\n\" + ", "-\t\t\t\"The return type is incompatible with J.foo(), I.foo()\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in A.java (at line 2)\\n\" + ", "+\t\t\t\"1. ERROR in A.java (at line 2)\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 1)\\n\" + ", "-\t\t\t\"\tabstract class X2 extends A implements J {}\\n\" + ", "-\t\t\t\"\t               ^^\\n\" + ", "-\t\t\t\"The return type is incompatible with I.foo(), J.foo()\\n\" + "]}], "num": 4545}