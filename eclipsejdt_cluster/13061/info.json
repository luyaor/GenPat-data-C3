{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "929b3046ec54d6ffacb372260a8e9d21", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54cf61c915bcd53806cfa72287ec51ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "1317e9ebe26807b45d83a46701194241e6f648d5", "commitAfterChange": "3649f3f6d703fd53c9c12b41cdc037f657d98134", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 26, "signatureBeforeChange": "\r \tpublic static ClasspathContainerResolver getClasspathContainerResolver(IPath containerPath)", "signatureAfterChange": "\r \tpublic static ClasspathContainerInitializer getClasspathContainerInitializer(String containerID)", "diff": ["-\tpublic static ClasspathContainerResolver getClasspathContainerResolver(IPath containerPath){\r", "+\tpublic static ClasspathContainerInitializer getClasspathContainerInitializer(String containerID){\r", "-\t\tIExtensionPoint extension = jdtCorePlugin.getDescriptor().getExtensionPoint(CPCONTAINER_RESOLVER_EXTPOINT_ID);\r", "+\t\tIExtensionPoint extension = jdtCorePlugin.getDescriptor().getExtensionPoint(CPCONTAINER_INITIALIZER_EXTPOINT_ID);\r", "-\t\t\t\t\t\tint bestMatch = -1;\r", "-\t\t\t\t\t\tIConfigurationElement bestResolver = null;\r", "-\t\t\t\t\t\t\t\tString prefixAttribute = configElements[j].getAttribute(\"prefix\"); //$NON-NLS-1$\r", "-\t\t\t\t\t\t\t\tif (prefixAttribute != null){\r", "-\t\t\t\t\t\t\t\t\tIPath resolverPrefixPath = new Path(prefixAttribute);\r", "-\t\t\t\t\t\t\t\t\tif (resolverPrefixPath.isPrefixOf(containerPath)){\r", "-\t\t\t\t\t\t\t\t\t\tif (resolverPrefixPath.segmentCount() > bestMatch){\r", "-\t\t\t\t\t\t\t\t\t\t\tbestResolver = configElements[j];\r", "-\t\t\t\t\t\t\t\t\t\t\tbestMatch = resolverPrefixPath.segmentCount();\r", "-\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\r", "+\t\t\t\t\t\t\t\tString initializerID = configElements[j].getAttribute(\"id\"); //$NON-NLS-1$\r", "+\t\t\t\t\t\t\t\tif (initializerID != null && initializerID.equals(containerID)){\r", "+\t\t\t\t\t\t\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE) {\r", "+\t\t\t\t\t\t\t\t\t\tSystem.out.println(\"CPVariable INIT - found initializer: \"+containerID +\" --> \" + configElements[j].getAttribute(\"class\"));//$NON-NLS-3$//$NON-NLS-2$//$NON-NLS-1$\r", "+\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\r", "+\t\t\t\t\t\t\t\t\ttry {\r", "+\t\t\t\t\t\t\t\t\t\tObject execExt = configElements[j].createExecutableExtension(\"class\"); //$NON-NLS-1$\r", "+\t\t\t\t\t\t\t\t\t\tif (execExt instanceof ClasspathContainerInitializer){\r", "+\t\t\t\t\t\t\t\t\t\t\treturn (ClasspathContainerInitializer)execExt;\r", "+\t\t\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\t\t\t} catch(CoreException e) {\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t\tif (bestResolver != null){\r", "-\t\t\t\t\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE) {\r", "-\t\t\t\t\t\t\t\tSystem.out.println(\"CPVariable INIT - found initializer: \"+containerPath+\" --> \" + bestResolver.getAttribute(\"class\"));//$NON-NLS-3$//$NON-NLS-2$//$NON-NLS-1$\r", "-\t\t\t\t\t\t\t}\t\t\t\t\t\t\r", "-\t\t\t\t\t\t\ttry {\r", "-\t\t\t\t\t\t\t\tObject execExt = bestResolver.createExecutableExtension(\"class\"); //$NON-NLS-1$\r", "-\t\t\t\t\t\t\t\tif (execExt instanceof ClasspathContainerResolver){\r", "-\t\t\t\t\t\t\t\t\treturn (ClasspathContainerResolver)execExt;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t} catch(CoreException e) {\r", "-\t\t\t\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8537eb7e1c00424ba3897185da48cda", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/EnumDeclaration.java", "commitBeforeChange": "4ec8463782f86806757a76ab2d360d5012825932", "commitAfterChange": "f7bc2ee5d62baf64b6f044f322b40cdaa75e5dcc", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tpublic EnumConstantDeclaration[] getEnumConstants()", "signatureAfterChange": " \tpublic EnumConstantDeclaration[] getEnumConstants()", "diff": ["+\t// TODO (jeem) remove this deprecated method after 3.1M3", "-\t\tList bd = bodyDeclarations();", "-\t\tint enumCount = 0;", "-\t\tfor (Iterator it = bd.listIterator(); it.hasNext(); ) {", "-\t\t\tif (it.next() instanceof EnumConstantDeclaration) {", "-\t\t\t\tenumCount++;", "-\t\t\t}", "-\t\t}", "-\t\tEnumConstantDeclaration[] enumConstants = new EnumConstantDeclaration[enumCount];", "-\t\tint next = 0;", "-\t\tfor (Iterator it = bd.listIterator(); it.hasNext(); ) {", "-\t\t\tObject decl = it.next();", "-\t\t\tif (decl instanceof EnumConstantDeclaration) {", "-\t\t\t\tenumConstants[next++] = (EnumConstantDeclaration) decl;", "-\t\t\t}", "-\t\t}", "-\t\treturn enumConstants;", "+\t\tEnumConstantDeclaration[] enumConstantsInBody = new EnumConstantDeclaration[enumConstants().size()];", "+\t\tenumConstants().toArray(enumConstantsInBody);", "+\t\treturn enumConstantsInBody;"]}], "num": 13061}