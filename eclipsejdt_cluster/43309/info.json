{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0c7990802b2735fca93915a6a3f990e5", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13b05ffc48f3f996c48ec2c3198c8e49", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ASTRewrite.java", "commitBeforeChange": "154eb5a35bc8871be423c76826aa951bbdf84001", "commitAfterChange": "9174770081243ee00ec5ba9a53055a2ca337e226", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tprivate ASTNode getRootNode()", "signatureAfterChange": " \t \tprivate ASTNode getRootNode()", "diff": ["-\t\tfor (Iterator iter= fEventStore.getChangeRootIterator(); iter.hasNext();) {", "+\t\tfor (Iterator iter= getRewriteEventStore().getChangeRootIterator(); iter.hasNext();) {", "-", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3635e21f69e76b271913fe88f0dd322d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "bffd05273174fba670489cd637d40ac2a4d0913b", "commitAfterChange": "5cda6ee5d9726ecd4c3800dc98f96b9913f2498c", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "\r private boolean typeHasSupertype(IType type)", "signatureAfterChange": "\r private boolean typeHasSupertype(IType type)", "diff": ["-\tfor(Iterator iter = fClassToSuperclass.values().iterator(); iter.hasNext();){\r", "+\tfor(Iterator iter = this.classToSuperclass.values().iterator(); iter.hasNext();){\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2f53114e8ff78d6d14437bec87ea393", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "dfc91d56806c456b9b3ccf18b7180e0ffe937730", "commitAfterChange": "b2cc128bda23f9f1345b0f7e7b16cc0855af3cea", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic boolean visit(Javadoc node)", "signatureAfterChange": " \tpublic boolean visit(Javadoc node)", "diff": ["-\t\tfor (Iterator it = node.fragments().iterator(); it.hasNext(); ) {", "+\t\tfor (Iterator it = node.tags().iterator(); it.hasNext(); ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3a1ae9f5918f014279ef475d3bfe649", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "5b7577970cc1147a47fff02a981297149bac38c1", "commitAfterChange": "747a63a0a2a9b4e7029fd103555c522985364757", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 66, "signatureBeforeChange": " \tpublic void saving(ISaveContext context) throws CoreException", "signatureAfterChange": " \tpublic void saving(ISaveContext context) throws CoreException", "diff": ["-\t\tfor (Iterator iter =  perProjectInfo.values().iterator(); iter.hasNext();) {", "+\t\tfor (Iterator iter =  perProjectInfos.values().iterator(); iter.hasNext();) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9b9be07930d153ba9a202aab27cd428", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ReconcileWorkingCopyOperation.java", "commitBeforeChange": "c6bb72dfd7f0dfd00f9699e4734a4252424afcf4", "commitAfterChange": "212fb4a61079c57776e428535d84e1576de20de4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["-\t\t\t\tfor (Iterator iteraror = problems.values().iterator(); iteraror.hasNext();) {", "+\t\t\t\tfor (Iterator iteraror = this.problems.values().iterator(); iteraror.hasNext();) {"]}], "num": 43309}