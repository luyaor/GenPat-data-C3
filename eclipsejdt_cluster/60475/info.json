{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3a59af56509028a2552375e9474b4e2f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "336f46e6c5b6adc8f8069329d84d9059", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " \tprivate TypeBinding leastContainingTypeArgument(TypeBinding u, TypeBinding v, ReferenceBinding genericType, int rank, List lubStack)", "signatureAfterChange": " \tprivate TypeBinding leastContainingTypeArgument(TypeBinding u, TypeBinding v, ReferenceBinding genericType, int rank, List lubStack)", "diff": ["-\t\t\t\t\t\t\t\tif (lub == IntBinding) return environment().createWildcard(genericType, rank, null, null /*no extra bound*/, Wildcard.UNBOUND);", "+\t\t\t\t\t\t\t\tif (lub == TypeBinding.INT) return environment().createWildcard(genericType, rank, null, null /*no extra bound*/, Wildcard.UNBOUND);", "-\t\t\t\t\t\tif (lub == IntBinding) return environment().createWildcard(genericType, rank, null, null /*no extra bound*/, Wildcard.UNBOUND);", "+\t\t\t\t\t\tif (lub == TypeBinding.INT) return environment().createWildcard(genericType, rank, null, null /*no extra bound*/, Wildcard.UNBOUND);", "-\t\t\t\t\tif (lub == IntBinding) return environment().createWildcard(genericType, rank, null, null /*no extra bound*/, Wildcard.UNBOUND);", "+\t\t\t\t\tif (lub == TypeBinding.INT) return environment().createWildcard(genericType, rank, null, null /*no extra bound*/, Wildcard.UNBOUND);", "-\t\tif (lub == IntBinding) return environment().createWildcard(genericType, rank, null, null /*no extra bound*/, Wildcard.UNBOUND);", "+\t\tif (lub == TypeBinding.INT) return environment().createWildcard(genericType, rank, null, null /*no extra bound*/, Wildcard.UNBOUND);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fee0e0a92d778944d9410f73a3b327d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tpublic void generatePostIncrement( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tCompoundAssignment postIncrement, \t\tboolean valueRequired)", "signatureAfterChange": " \t \tpublic void generatePostIncrement( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tCompoundAssignment postIncrement, \t\tboolean valueRequired)", "diff": ["-\t\t\t\tif ((lastFieldBinding.type == LongBinding)", "-\t\t\t\t\t|| (lastFieldBinding.type == DoubleBinding)) {", "+\t\t\t\tif ((lastFieldBinding.type == TypeBinding.LONG)", "+\t\t\t\t\t|| (lastFieldBinding.type == TypeBinding.DOUBLE)) {", "-\t\t\t\tif ((lastFieldBinding.type == LongBinding)", "-\t\t\t\t\t|| (lastFieldBinding.type == DoubleBinding)) {", "+\t\t\t\tif ((lastFieldBinding.type == TypeBinding.LONG)", "+\t\t\t\t\t|| (lastFieldBinding.type == TypeBinding.DOUBLE)) {"]}], "num": 60475}