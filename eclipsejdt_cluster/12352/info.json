{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ffef73c815be29f1a90dc4728695211d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a8b9367afba4126192c3d4d1c14eeb1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "e6e8c555a7d6f504d4ea246c591d5bb3f080d438", "commitAfterChange": "3316f207e855c46fb5e805791239fa37620ca8c4", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": " void initialize(boolean reuseExistingFile) throws IOException", "signatureAfterChange": " void initialize(boolean reuseExistingFile) throws IOException", "diff": ["-}", "-\tFile indexFile = getIndexFile();", "-\tif (indexFile.exists()) {", "+\tif (this.indexFile.exists()) {", "-\t\t\tRandomAccessFile file = new RandomAccessFile(this.fileName, \"r\"); //$NON-NLS-1$", "+\t\t\tRandomAccessFile file = new RandomAccessFile(this.indexFile, \"r\"); //$NON-NLS-1$", "-\t\tif (!indexFile.delete()) {", "+\t\tif (!this.indexFile.delete()) {", "-\t\t\t\tSystem.out.println(\"initialize - Failed to delete index \" + this.fileName); //$NON-NLS-1$", "-\t\t\tthrow new IOException(\"Failed to delete index \" + this.fileName); //$NON-NLS-1$", "+\t\t\t\tSystem.out.println(\"initialize - Failed to delete index \" + this.indexFile); //$NON-NLS-1$", "+\t\t\tthrow new IOException(\"Failed to delete index \" + this.indexFile); //$NON-NLS-1$", "-\tif (indexFile.createNewFile()) {", "-\t\tRandomAccessFile file = new RandomAccessFile(this.fileName, \"rw\"); //$NON-NLS-1$", "+\tif (this.indexFile.createNewFile()) {", "+\t\tRandomAccessFile file = new RandomAccessFile(this.indexFile, \"rw\"); //$NON-NLS-1$", "-\t\t\tSystem.out.println(\"initialize - Failed to create new index \" + this.fileName); //$NON-NLS-1$", "-\t\tthrow new IOException(\"Failed to create new index \" + this.fileName); //$NON-NLS-1$", "+\t\t\tSystem.out.println(\"initialize - Failed to create new index \" + this.indexFile); //$NON-NLS-1$", "+\t\tthrow new IOException(\"Failed to create new index \" + this.indexFile); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "741088380ad5e36a807f966a709e5392", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest.java", "commitBeforeChange": "06e44af1d1177a8820136cde1fbe3146b9563e7f", "commitAfterChange": "c0452100f2ed18d65cf0dd0efb6f9fc0ffa98156", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tvoid writeFiles(String[] testFiles)", "signatureAfterChange": " \tprotected void writeFiles(String[] testFiles)", "diff": ["-\tvoid writeFiles(String[] testFiles) {", "+\tprotected void writeFiles(String[] testFiles) {", "-\t\tFile dir = new File(\"d:/usr/OTI/tests/javadoc/\");", "-\t\tif (!dir.exists()) return;", "-\t\tdir = new File(dir, classDirName);", "-\t\tif (!dir.exists()) dir.mkdirs();", "-\t\tdir = new File(dir, Character.toUpperCase(testName.charAt(0))+testName.substring(1));", "-\t\tif (!dir.exists()) dir.mkdirs();", "-\t\tSystem.out.println(\"Write test file to \"+dir+\"...\");", "+    // File dir = new File(\"d:/usr/OTI/tests/javadoc/\");", "+\t\t// non portable", "+\t\tcreateOutputTestDirectory(classDirName);", "+\t\tcreateOutputTestDirectory(Character.toUpperCase(testName.charAt(0)) + ", "+\t\t\t\ttestName.substring(1));", "+\t\tSystem.out.println(\"Write test file to \" + ", "+\t\t\t\tthis.outputTestDirectoryPath + \"...\");", "-\t\t\tString dirFileName = dir.getPath();", "+\t\t\tString dirFileName = this.outputTestDirectoryPath.toString();", "-\t\t\t\t\tdir = new File(dirFileName, subdirs);", "+\t\t\t\t\tFile dir = new File(dirFileName, subdirs);", "+\t\t\t\t\tif (RUN_JAVAC) {", "+\t\t\t\t\t\tUtil.writeToFile(contents, dirFileName+\"/\"+fileName);", "+\t\t\t\t\t\t// PREMATURE this results into a duplicate file.", "+\t\t\t\t\t}", "-\t\t\tUtil.writeToFile(contents, dirFileName+\"/\"+fileName);", "+\t\t\tUtil.writeToFile(contents, dirFileName+\"/\"+fileName); ", "+\t\t\t// REVIEW don't know why this is created at the default package level"]}], "num": 12352}