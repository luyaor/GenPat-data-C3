{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c8dc9e7f15fc91ddc34ae83ed74ffd04", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f34956c35b782cfe883b286501fac5f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/DietRecoveryTest.java", "commitBeforeChange": "e7b1ea867718ceec3cf08d3cf2170026c991b041", "commitAfterChange": "ba0154713ba7d434aa2e47b80fd55a84048c10dc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public void checkParse( \tchar[] source,  \tString expectedDietUnitToString, \tString expectedDietPlusBodyUnitToString,\t \tString expectedFullUnitToString, \tString expectedCompletionDietUnitToString,  \tString testName)", "signatureAfterChange": "  public void checkParse( \tchar[] source,  \tString expectedDietUnitToString, \tString expectedDietPlusBodyUnitToString,\t \tString expectedDietPlusBodyPlusStatementsRecoveryUnitToString, \tString expectedFullUnitToString,  \tString expectedCompletionDietUnitToString, String testName)", "diff": ["-\tString expectedFullUnitToString,", "-\tString expectedCompletionDietUnitToString, ", "-\tString testName) {", "+\tString expectedDietPlusBodyPlusStatementsRecoveryUnitToString,", "+\tString expectedFullUnitToString, ", "+\tString expectedCompletionDietUnitToString, String testName) {", "+\t\tparser.setStatementsRecovery(false);", "+\t\t\tcomputedUnitToString);", "+\t}", "+\t/* using regular parser in DIET mode + getMethodBodies + statements recovery */", "+\t{", "+\t\tParser parser = ", "+\t\t\tnew Parser(", "+\t\t\t\tnew ProblemReporter(", "+\t\t\t\t\tDefaultErrorHandlingPolicies.proceedWithAllProblems(), ", "+\t\t\t\t\tnew CompilerOptions(getCompilerOptions()), ", "+\t\t\t\t\tnew DefaultProblemFactory(Locale.getDefault())),", "+\t\t\t\toptimizeStringLiterals);", "+\t\tparser.setStatementsRecovery(true);", "+", "+\t\tICompilationUnit sourceUnit = new CompilationUnit(source, testName, null);", "+\t\tCompilationResult compilationResult = new CompilationResult(sourceUnit, 0, 0, 0);\t", "+\t\t", "+\t\tCompilationUnitDeclaration computedUnit = parser.dietParse(sourceUnit, compilationResult);", "+\t\tString computedUnitToString = computedUnit.toString();", "+\t\tif (!expectedDietUnitToString.equals(computedUnitToString)){", "+\t\t\tSystem.out.println(Util.displayString(computedUnitToString));", "+\t\t}", "+\t\tassertEquals(", "+\t\t\t\"Invalid unit diet structure\" + testName,", "+\t\t\texpectedDietUnitToString,", "+\t\t\tcomputedUnitToString);", "+\t\tif (computedUnit.types != null) {", "+\t\t\tfor (int i = computedUnit.types.length; --i >= 0;){", "+\t\t\t\tcomputedUnit.types[i].parseMethod(parser, computedUnit);", "+\t\t\t}", "+\t\t}", "+\t\tcomputedUnitToString = computedUnit.toString();", "+\t\tif (!expectedDietPlusBodyPlusStatementsRecoveryUnitToString.equals(computedUnitToString)){", "+\t\t\tSystem.out.println(Util.displayString(computedUnitToString));", "+\t\t}", "+\t\t", "+\t\tassertEquals(", "+\t\t\t\"Invalid unit diet+body structure\" + testName,", "+\t\t\texpectedDietPlusBodyPlusStatementsRecoveryUnitToString,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a908a2fb2d5a3bb9aa541faec36a2a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/GenericDietRecoveryTest.java", "commitBeforeChange": "e7b1ea867718ceec3cf08d3cf2170026c991b041", "commitAfterChange": "ba0154713ba7d434aa2e47b80fd55a84048c10dc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public void checkParse( \tchar[] source,  \tString expectedDietUnitToString, \tString expectedDietPlusBodyUnitToString,\t \tString expectedFullUnitToString, \tString expectedCompletionDietUnitToString,  \tString testName)", "signatureAfterChange": "  public void checkParse( \tchar[] source,  \tString expectedDietUnitToString, \tString expectedDietPlusBodyUnitToString,\t \tString expectedDietPlusBodyPlusStatementsRecoveryUnitToString, \tString expectedFullUnitToString,  \tString expectedCompletionDietUnitToString, String testName)", "diff": ["-\tString expectedFullUnitToString,", "-\tString expectedCompletionDietUnitToString, ", "-\tString testName) {", "+\tString expectedDietPlusBodyPlusStatementsRecoveryUnitToString,", "+\tString expectedFullUnitToString, ", "+\tString expectedCompletionDietUnitToString, String testName) {", "+\t\tparser.setStatementsRecovery(false);", "+\t", "+\t/* using regular parser in DIET mode + getMethodBodies + statements recovery*/", "+\t{", "+\t\tParser parser = ", "+\t\t\tnew Parser(", "+\t\t\t\tnew ProblemReporter(", "+\t\t\t\t\tDefaultErrorHandlingPolicies.proceedWithAllProblems(), ", "+\t\t\t\t\tnew CompilerOptions(getCompilerOptions()), ", "+\t\t\t\t\tnew DefaultProblemFactory(Locale.getDefault())),", "+\t\t\t\toptimizeStringLiterals);", "+\t\tparser.setStatementsRecovery(true);", "+", "+\t\tICompilationUnit sourceUnit = new CompilationUnit(source, testName, null);", "+\t\tCompilationResult compilationResult = new CompilationResult(sourceUnit, 0, 0, 0);\t", "+\t\t", "+\t\tCompilationUnitDeclaration computedUnit = parser.dietParse(sourceUnit, compilationResult);", "+\t\tString computedUnitToString = computedUnit.toString();", "+\t\tif (!expectedDietUnitToString.equals(computedUnitToString)){", "+\t\t\tSystem.out.println(Util.displayString(computedUnitToString));", "+\t\t}", "+\t\tassertEquals(", "+\t\t\t\"Invalid unit diet structure\" + testName,", "+\t\t\texpectedDietUnitToString,", "+\t\t\tcomputedUnitToString);", "+\t\tif (computedUnit.types != null) {", "+\t\t\tfor (int i = computedUnit.types.length; --i >= 0;){", "+\t\t\t\tcomputedUnit.types[i].parseMethod(parser, computedUnit);", "+\t\t\t}", "+\t\t}", "+\t\tcomputedUnitToString = computedUnit.toString();", "+\t\tif (!expectedDietPlusBodyPlusStatementsRecoveryUnitToString.equals(computedUnitToString)){", "+\t\t\tSystem.out.println(Util.displayString(computedUnitToString));", "+\t\t}", "+\t\t", "+\t\tassertEquals(", "+\t\t\t\"Invalid unit diet+body structure\" + testName,", "+\t\t\texpectedDietPlusBodyPlusStatementsRecoveryUnitToString,", "+\t\t\tcomputedUnitToString);", "+\t}", "+\t"]}], "num": 58346}