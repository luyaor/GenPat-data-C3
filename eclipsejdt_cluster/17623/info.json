{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a86926d889a00f45aae6c5b3ba695c01", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1726ce513be4c903aef6cb5a85f0b3f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedTypeReference.java", "commitBeforeChange": "66655f5e1f98e14cb994324b511a6633d4950147", "commitAfterChange": "05ac7a532e5c7862447e6e0fc351f30875c4dd96", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprotected TypeBinding getTypeBinding(Scope scope)", "signatureAfterChange": " \tprotected TypeBinding getTypeBinding(Scope scope)", "diff": ["-\t\t\t", "+\t\t\tif (i == 0 && this.resolvedType.isTypeVariable()) { // cannot select from a type variable", "+\t\t\t\tscope.problemReporter().illegalAccessFromTypeVariable((TypeVariableBinding) this.resolvedType, this);", "+\t\t\t\treturn this.resolvedType = null;", "+\t\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "890f7cfac7eea1099febe1c8929988b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedTypeReference.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprotected TypeBinding getTypeBinding(Scope scope)", "signatureAfterChange": " \tprotected TypeBinding getTypeBinding(Scope scope)", "diff": ["-\t\t\tif (i == 0 && this.resolvedType.isTypeVariable()) { // cannot select from a type variable", "+\t\t\tif (i == 0 && this.resolvedType.isTypeVariable() && ((TypeVariableBinding) this.resolvedType).firstBound == null) { // cannot select from a type variable"]}], "num": 17623}