{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1222e07372698f95443e9a222a79a289", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7138e5c5e8a65e6e832f36bc9fbb38f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "6436bbd31cbe5b698244c0208dd161fd144dd93e", "commitAfterChange": "4e5b524e8fed0a2f038362e79ac7bed8b62bd551", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public TypeBinding getOtherFieldBindings(BlockScope scope)", "signatureAfterChange": " public TypeBinding getOtherFieldBindings(BlockScope scope)", "diff": ["-\t\t\t\t? type.capture(scope, this.sourceEnd)", "+\t\t\t\t? type.capture(scope, this.sourceStart, this.sourceEnd)", "-\t\tfield = scope.getField(type.capture(scope, (int)this.sourcePositions[index]), token, this);", "+\t\tfield = scope.getField(type.capture(scope, (int) (this.sourcePositions[index] >>> 32), (int)this.sourcePositions[index]), token, this);", "-\t\t\t? type.capture(scope, this.sourceEnd)", "+\t\t\t? type.capture(scope, this.sourceStart, this.sourceEnd)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aaa17acc45c31ecad5dbc4118a2c4bb0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "6436bbd31cbe5b698244c0208dd161fd144dd93e", "commitAfterChange": "4e5b524e8fed0a2f038362e79ac7bed8b62bd551", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\tthis.receiverType = lhsType.capture(scope, this.sourceEnd);", "+\t\t\tthis.receiverType = lhsType.capture(scope, this.sourceStart, this.sourceEnd);", "-        \t\t\t\ttypeToSearch = superType.capture(scope, this.sourceEnd);", "+        \t\t\t\ttypeToSearch = superType.capture(scope, this.sourceStart, this.sourceEnd);", "-    \t\t\t\t\treturnType = returnType.capture(scope, this.sourceEnd);", "+    \t\t\t\t\treturnType = returnType.capture(scope, this.sourceStart, this.sourceEnd);"]}], "num": 53082}