{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cb964ef5425106621ce1fed93d3e1b29", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6615fc603fc934b98623b9b3f078a995", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "82adc87bce1ed4088802638154568eeec8ab8e88", "commitAfterChange": "b1c69f20f23ddb575225e5b5cb5d470714f41aad", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tprivate BoundSet resolve(InferenceVariable[] toResolve) throws InferenceFailureException", "signatureAfterChange": " \tprivate BoundSet resolve(InferenceVariable[] toResolve) throws InferenceFailureException", "diff": ["-\t\t\t\t\t\t\t\tif (tmpBoundSet.inThrows.contains(variable) && tmpBoundSet.hasOnlyTrivialExceptionBounds(variable, upperBounds)) {", "+\t\t\t\t\t\t\t\tif (tmpBoundSet.inThrows.contains(variable.prototype()) && tmpBoundSet.hasOnlyTrivialExceptionBounds(variable, upperBounds)) {", "-\t\t\t\t\t\t\t\tif (variables[j] == typeVariable) //$IDENTITY-COMPARISON$ InferenceVariable does not participate in type annotation encoding", "+\t\t\t\t\t\t\t\tif (TypeBinding.equalsEquals(variables[j], typeVariable))", "-\t\t\t\t\t\t\t\tif (key.arguments[i] == variable) { //$IDENTITY-COMPARISON$", "+\t\t\t\t\t\t\t\tif (TypeBinding.equalsEquals(key.arguments[i], variable)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f5ffeaffbb302bb341d3fb593fe2881", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " protected void updateMatch(TypeBinding[] argumentsBinding, MatchLocator locator, char[][] patternArguments, boolean hasTypeParameters)", "signatureAfterChange": " protected void updateMatch(TypeBinding[] argumentsBinding, MatchLocator locator, char[][] patternArguments, boolean hasTypeParameters)", "diff": ["-\t\t\t\t\t\tif (wildcardBinding.boundKind == patternWildcardKind && wildcardBinding.bound == patternBinding) {", "+\t\t\t\t\t\tif (wildcardBinding.boundKind == patternWildcardKind && TypeBinding.equalsEquals(wildcardBinding.bound, patternBinding)) {", "-\t\t\t\t\t\tif (wildcardBinding.boundKind == patternWildcardKind && wildcardBinding.bound == patternBinding) {", "+\t\t\t\t\t\tif (wildcardBinding.boundKind == patternWildcardKind && TypeBinding.equalsEquals(wildcardBinding.bound, patternBinding)) {", "-\t\t\t\t\t} else if (argumentBinding == patternBinding)", "+\t\t\t\t\t} else if (TypeBinding.equalsEquals(argumentBinding, patternBinding))"]}], "num": 18704}