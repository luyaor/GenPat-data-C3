{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "afba448be1aaf8deb3531958dd5cab84", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26bc8c14ccd53b16eea162cedb46c347", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "d198dbbeec87ead700fdbe86d9e79e2e1f88dd6d", "commitAfterChange": "4ecee5c8a75df484effd8533397506b36cfb9d30", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  void compareFormattedSource() throws IOException, Exception", "signatureAfterChange": "  void compareFormattedSource() throws IOException, Exception", "diff": ["-\t\t\tString expectedResult = new String(org.eclipse.jdt.internal.compiler.util.Util.getFileCharContent(outputFile, null));", "+\t\t\t\tString expectedResult = new String(org.eclipse.jdt.internal.compiler.util.Util.getFileCharContent(outputFile, null));", "+\t\t\tcatch (FileNotFoundException fnfe) {", "+\t\t\t\tthis.failureIndex = FILE_NOT_FOUND_FAILURE;", "+\t\t\t\tFAILURES[FILE_NOT_FOUND_FAILURE].failures.add(this.path);", "+\t\t\t\treturn;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5789589fcbffd4b7dfc512656fe1155", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "dc9db9c22a51b01cfbe75b8acac7c7a000432f1b", "commitAfterChange": "d0c43348882f3d54a8f979ccfa7fbd36fd3e1b36", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": "  String runFormatter(CodeFormatter codeFormatter, String source, int kind, int indentationLevel, int offset, int length, String lineSeparator, boolean repeat)", "signatureAfterChange": "  String runFormatter(CodeFormatter codeFormatter, String source, int kind, int indentationLevel, int offset, int length, String lineSeparator, boolean repeat)", "diff": ["+", "+\t\tif (sourceHasCompilationErrors(source)) {", "+\t\t\tthis.failureIndex = COMPILATION_ERRORS_FAILURE;", "+\t\t\tFAILURES[COMPILATION_ERRORS_FAILURE].failures.add(this.path);", "+\t\t\treturn null;", "+\t\t}", "-\t\t\t\tthis.hasSpaceFailure = true;", "-\t\t\t\tthis.hasSpaceFailure = true;"]}], "num": 37000}