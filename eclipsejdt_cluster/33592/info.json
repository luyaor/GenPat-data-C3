{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "32d03cb6b0c1032cff7348ac406a89af", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44cb10ebade601d75112ed921895c1fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/processing/JobManager.java", "commitBeforeChange": "51a4f2a266e427b9082424377d4669fbae76d37f", "commitAfterChange": "12331fd4225d9fa04b70f46cf54c602501f119c8", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic boolean performConcurrentJob(IJob searchJob, int waitingPolicy, IProgressMonitor progress)", "signatureAfterChange": " \tpublic boolean performConcurrentJob(IJob searchJob, int waitingPolicy, IProgressMonitor progress)", "diff": ["-\t\t\t\t\tboolean wasEnabled = isEnabled();", "-\t\t\t\t\t\tif (wasEnabled)", "-\t\t\t\t\t\t\tenable();", "+\t\t\t\t\t\tenable();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc8b733ea8c6c10e1e385fcb501e7a4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "409f0d1ccf0133d5fcf6863869c728111e50135d", "commitAfterChange": "84e2da9db5b8e3d6a6df97b0f7ad6795dd65a9ad", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \tprotected void basicElementAdded(Openable element, IResourceDelta delta)", "signatureAfterChange": "\r \tprotected void basicElementAdded(Openable element, IResourceDelta delta)", "diff": ["-\t\t\tboolean onClasspath = isOnClasspath(element);\r", "-\t\t\t// only add as a child if it is on the classpath\r", "-\t\t\tif (onClasspath) {\r", "-\t\t\t\taddToParentInfo(element);\r", "-\t\t\t\tswitch (element.getElementType()) {\r", "-\t\t\t\t\tcase IJavaElement.PACKAGE_FRAGMENT_ROOT :\r", "-\t\t\t\t\t\t// when a root is added, and is on the classpath, the project must be updated\r", "-\t\t\t\t\t\tJavaProject project = (JavaProject) element.getJavaProject();\r", "-\t\t\t\t\t\tupdateProject(project);\r", "-\t\t\t\t\t\t//1G1TW2T - get rid of namelookup since it holds onto obsolete cached info \r", "-\t\t\t\t\t\ttry {\r", "-\t\t\t\t\t\t\tproject.getJavaProjectElementInfo().setNameLookup(null);\r", "-\t\t\t\t\t\t} catch (JavaModelException e) {\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\tcase IJavaElement.PACKAGE_FRAGMENT :\r", "-\t\t\t\t\t\t//1G1TW2T - get rid of namelookup since it holds onto obsolete cached info \r", "-\t\t\t\t\t\tproject = (JavaProject) element.getJavaProject();\r", "-\t\t\t\t\t\ttry {\r", "-\t\t\t\t\t\t\tproject.getJavaProjectElementInfo().setNameLookup(null);\r", "-\t\t\t\t\t\t} catch (JavaModelException e) {\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t\tbreak;\r", "-\t\t\t\t}\r", "+\t\t\taddToParentInfo(element);\r", "+\t\t\tswitch (element.getElementType()) {\r", "+\t\t\t\tcase IJavaElement.PACKAGE_FRAGMENT_ROOT :\r", "+\t\t\t\t\t// when a root is added, and is on the classpath, the project must be updated\r", "+\t\t\t\t\tJavaProject project = (JavaProject) element.getJavaProject();\r", "+\t\t\t\t\tupdateProject(project);\r", "+\t\t\t\t\t//1G1TW2T - get rid of namelookup since it holds onto obsolete cached info \r", "+\t\t\t\t\ttry {\r", "+\t\t\t\t\t\tproject.getJavaProjectElementInfo().setNameLookup(null);\r", "+\t\t\t\t\t} catch (JavaModelException e) {\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\tcase IJavaElement.PACKAGE_FRAGMENT :\r", "+\t\t\t\t\t//1G1TW2T - get rid of namelookup since it holds onto obsolete cached info \r", "+\t\t\t\t\tproject = (JavaProject) element.getJavaProject();\r", "+\t\t\t\t\ttry {\r", "+\t\t\t\t\t\tproject.getJavaProjectElementInfo().setNameLookup(null);\r", "+\t\t\t\t\t} catch (JavaModelException e) {\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tbreak;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf2e87b7f4d1118d8c2ad0242496a164", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/processing/JobManager.java", "commitBeforeChange": "51a4f2a266e427b9082424377d4669fbae76d37f", "commitAfterChange": "12331fd4225d9fa04b70f46cf54c602501f119c8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void discardJobs(String jobFamily)", "signatureAfterChange": " \tpublic void discardJobs(String jobFamily)", "diff": ["-\t\tboolean wasEnabled = isEnabled();", "-\t\t\tif (wasEnabled)", "-\t\t\t\tenable();", "+\t\t\tenable();"]}], "num": 33592}