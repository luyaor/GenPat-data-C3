{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3fcc03c0498e0667e7ac324098782f32", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e5d86042f42c1098b7ba1d030af45eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "210b89134044d06a70fa2c472f5e9a859c41ba00", "commitAfterChange": "b268992d45d00cd5439bb032a6e5a5226c715e7e", "methodNumberBeforeChange": 331, "methodNumberAfterChange": 331, "signatureBeforeChange": " public void test181()", "signatureAfterChange": " public void test181()", "diff": ["-\t\t\"The type A2 must be an abstract class to define abstract methods: m(), n(), o(), p()\\n\" + ", "+\t\t\"The type A2 must be an abstract class to define abstract methods\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in I.java (at line 14)\\n\" + ", "+\t\t\"\tpublic abstract Object m();\\n\" + ", "+\t\t\"\t                       ^^^\\n\" + ", "+\t\t\"The abstract method m in type A2 can only be defined by an abstract class\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in I.java (at line 15)\\n\" + ", "+\t\t\"\tpublic abstract String n();\\n\" + ", "+\t\t\"\t                       ^^^\\n\" + ", "+\t\t\"The abstract method n in type A2 can only be defined by an abstract class\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. ERROR in I.java (at line 16)\\n\" + ", "+\t\t\"\tabstract Object o();\\n\" + ", "+\t\t\"\t                ^^^\\n\" + ", "+\t\t\"The abstract method o in type A2 can only be defined by an abstract class\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. ERROR in I.java (at line 17)\\n\" + ", "+\t\t\"\tabstract String p();\\n\" + ", "+\t\t\"\t                ^^^\\n\" + ", "+\t\t\"The abstract method p in type A2 can only be defined by an abstract class\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9c782113ea7ed864ef591c6cd3aa945", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AccessRestrictionsTests.java", "commitBeforeChange": "64774f020d7005b54827ff53032895aaf4555d81", "commitAfterChange": "e2d31ef7ac94c5bb6285f9813df43a1164c5ca8d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void test001() throws CoreException", "signatureAfterChange": " public void test001() throws CoreException", "diff": ["-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. ERROR in /P2/src/p/Z.java (at line 2)\\n\" +", "-\t\t\t\"\tpublic class Z extends X1 {\\n\" +", "-\t\t\t\"\t                       ^^\\n\" +", "-\t\t\t\"Access restriction: The type X1 is not accessible due to restriction on required project P1\\n\" +", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in /P2/src/p/Z.java (at line 2)\\n\" + ", "+\t\t\t\"\tpublic class Z extends X1 {\\n\" + ", "+\t\t\t\"\t                       ^^\\n\" + ", "+\t\t\t\"Access restriction: The type \\'X1\\' is not API (restriction on required project \\'P1\\')\\n\" + ", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. ERROR in /P2/src/p/Y.java (at line 4)\\n\" +", "-\t\t\t\"\tfoo(); // accesses X1.foo, should trigger an error\\n\" +", "-\t\t\t\"\t^^^^^\\n\" +", "-\t\t\t\"Access restriction: The method foo() from the type X1 is not accessible due to restriction on required project P1\\n\" +", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in /P2/src/p/Y.java (at line 4)\\n\" + ", "+\t\t\t\"\tfoo(); // accesses X1.foo, should trigger an error\\n\" + ", "+\t\t\t\"\t^^^^^\\n\" + ", "+\t\t\t\"Access restriction: The method \\'X1.foo()\\' is not API (restriction on required project \\'P1\\')\\n\" + "]}], "num": 30203}