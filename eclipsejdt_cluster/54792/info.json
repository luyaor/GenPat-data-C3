{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a8a5dfbca89e150b35d7c18008a5476", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fec9c1ee346c4e367f21e780a423585", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 48, "signatureBeforeChange": " public void testSimpleDeclarationsOfSentMessages() throws CoreException", "signatureAfterChange": " public void testDeclarationsOfSentMessages01() throws CoreException", "diff": ["+ */", "+public void testDeclarationsOfSentMessages01() throws CoreException { // was testSimpleDeclarationsOfSentMessages", "+\tICompilationUnit cu = getCompilationUnit(\"JavaSearch\", \"src\", \"\", \"Test.java\");", "+\tJavaSearchResultCollector resultCollector = new JavaSearchResultCollector();", "+\tsearchDeclarationsOfSentMessages(", "+\t\tcu, ", "+\t\tresultCollector);", "+\tassertSearchResults(", "+\t\t\"src/p/X.java void p.X.foo(int, String, X) [foo(int i, String s, X x)]\\n\" + ", "+\t\t\"src/p/Y.java void p.Y.bar() [bar()]\\n\" + ", "+\t\t\"src/p/Z.java void p.Z.foo(int, String, X) [foo(int i, String s, X x)]\\n\" + ", "+\t\t\"src/p/A.java void p.A.foo(int, String, X) [foo()]\",", "+\t\tresultCollector);", "+}", "- */", "-public void testSimpleDeclarationsOfSentMessages() throws CoreException {", "-\tICompilationUnit cu = getCompilationUnit(\"JavaSearch\", \"src\", \"\", \"Test.java\");", "-\tJavaSearchResultCollector resultCollector = new JavaSearchResultCollector();", "-\tsearchDeclarationsOfSentMessages(", "-\t\tcu, ", "-\t\tresultCollector);", "-\tassertSearchResults(", "-\t\t\"src/p/X.java void p.X.foo(int, String, X) [foo(int i, String s, X x)]\\n\" + ", "-\t\t\"src/p/Y.java void p.Y.bar() [bar()]\\n\" + ", "-\t\t\"src/p/Z.java void p.Z.foo(int, String, X) [foo(int i, String s, X x)]\\n\" + ", "-\t\t\"src/p/A.java void p.A.foo(int, String, X) [foo()]\",", "-\t\tresultCollector);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a1ee9a49ee5c6a00ce7ee3c2575255f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 161, "signatureBeforeChange": " public void testSimpleTypeReference() throws CoreException", "signatureAfterChange": " public void testTypeReference17() throws CoreException", "diff": ["- */", "-public void testSimpleTypeReference() throws CoreException {", "-\tIType type = getCompilationUnit(\"JavaSearch\", \"src\", \"p\", \"X.java\").getType(\"X\");", "-\tJavaSearchResultCollector resultCollector = new JavaSearchResultCollector();", "-\tsearch(", "-\t\ttype, ", "-\t\tREFERENCES, ", "-\t\tgetJavaSearchScope(), ", "-\t\tresultCollector);", "-\tassertSearchResults(", "-\t\t\"src/p/A.java p.A.x [X]\\n\" + ", "-\t\t\"src/p/A.java p.A(X) [X]\\n\" + ", "-\t\t\"src/p/A.java void p.A.foo(int, String, X) [X]\\n\" + ", "-\t\t\"src/p/X.java p.X() [X]\\n\" + ", "-\t\t\"src/p/X.java void p.X.foo(int, String, X) [X]\\n\" + ", "-\t\t\"src/p/Y.java p.Y [X]\\n\" + ", "-\t\t\"src/p/Z.java void p.Z.foo(int, String, X) [X]\",", "-\t\tresultCollector);", "-}", "+ */", "+public void testTypeReference17() throws CoreException { // was testTypeReferenceNotInClasspath", "+\tIType type = getCompilationUnit(\"JavaSearch\", \"src\", \"p\", \"X.java\").getType(\"X\");", "+\tJavaSearchResultCollector resultCollector = new JavaSearchResultCollector();", "+\tsearch(", "+\t\ttype, ", "+\t\tREFERENCES, ", "+\t\tgetJavaSearchScope(), ", "+\t\tresultCollector);", "+\tassertSearchResults(", "+\t\t\"src/p/A.java p.A.x [X]\\n\" + ", "+\t\t\"src/p/A.java p.A(X) [X]\\n\" + ", "+\t\t\"src/p/A.java void p.A.foo(int, String, X) [X]\\n\" + ", "+\t\t\"src/p/X.java p.X() [X]\\n\" + ", "+\t\t\"src/p/X.java void p.X.foo(int, String, X) [X]\\n\" + ", "+\t\t\"src/p/Y.java p.Y [X]\\n\" + ", "+\t\t\"src/p/Z.java void p.Z.foo(int, String, X) [X]\",", "+\t\tresultCollector);", "+}"]}], "num": 54792}