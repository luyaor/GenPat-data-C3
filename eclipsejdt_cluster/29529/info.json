{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7b9ffe26e4d24f27631200fa05d5793d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41f4fbe57e6ffc7844df26a76e7a5726", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "7aa41fe639eb46a740b35e612973cada9ba8267f", "commitAfterChange": "7ec8f457fa5afa1822c5c5a2c51b29731a82c4ce", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \t \tpublic void consumeParameterizedType(char[] simpleTypeName, boolean isRaw)", "signatureAfterChange": " \t \tpublic void consumeParameterizedType(char[] simpleTypeName, boolean isRaw)", "diff": ["-\t\t\tif (enclosing != null) enclosing = (ReferenceBinding) this.environment.convertToRawType(enclosing);", "+\t\t\tif (enclosing != null) enclosing = (ReferenceBinding) this.environment.convertToRawType(enclosing, false /*do not force conversion of enclosing types*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b03764ea09b7d6f7c9495b35f97689da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "b7403b29059200afb0a63e6027ea84fe3b4ecb92", "commitAfterChange": "1ee3b257e822fcbedfd61f468d0d681f07548107", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public static ReferenceBinding resolveType(ReferenceBinding type, LookupEnvironment environment, boolean convertGenericToRawType)", "signatureAfterChange": "  public static ReferenceBinding resolveType(ReferenceBinding type, LookupEnvironment environment, boolean convertGenericToRawType)", "diff": ["-\tif (convertGenericToRawType && type.isGenericType()) // raw reference to generic ?", "-\t    return environment.createRawType(type, type.enclosingType());", "+\tif (convertGenericToRawType) // raw reference to generic ?", "+\t\treturn (ReferenceBinding) environment.convertToRawType(type);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8a714aedb8a02af5b7fe9da8c70fd64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "b3906111a4433325958de7604465d8f0e49325d2", "commitAfterChange": "0b27309efdaba54bffa19e81e0f1e5ae6f176884", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t\tpublic TypeBinding substitute(Substitution substitution, TypeBinding originalType)", "signatureAfterChange": " \t\tpublic TypeBinding substitute(Substitution substitution, TypeBinding originalType)", "diff": ["-\t\t\t\t\t\tsubstitutedEnclosing = (ReferenceBinding) substitute(substitution, originalEnclosing);", "+\t\t\t\t\t\tsubstitutedEnclosing = (ReferenceBinding) (originalType.isStatic() ? substitution.environment().convertToRawType(originalEnclosing, true) : ", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(ReferenceBinding) substitute(substitution, originalEnclosing));"]}], "num": 29529}