{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5ca96dc22880c4e0afac49df1749c15c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19c23317147c73a51fa9e9c3d3dfb9e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldReferencePattern.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r \r \tpublic boolean initializeFromLookupEnvironment(LookupEnvironment env)", "signatureAfterChange": "\r \r public boolean initializeFromLookupEnvironment(LookupEnvironment env)", "diff": ["-\r", "-\tpublic boolean initializeFromLookupEnvironment(LookupEnvironment env) {\r", "-\r", "-\t\tchar[][] declaringTypeName = null;\r", "-\t\tif ((this.declaringQualification != null)\r", "-\t\t\t&& (this.declaringSimpleName != null)\r", "-\t\t\t&& (this.matchMode == EXACT_MATCH)) {\r", "-\t\t\tchar[][] qualification =\r", "-\t\t\t\tCharOperation.splitOn('.', this.declaringQualification);\r", "-\t\t\tdeclaringTypeName =\r", "-\t\t\t\tCharOperation.arrayConcat(qualification, this.declaringSimpleName);\r", "-\t\t}\r", "-\t\tif (declaringTypeName != null) {\r", "-\t\t\tfor (int i = 0, max = declaringTypeName.length; i < max; i++) {\r", "-\t\t\t\tReferenceBinding matchingDeclaringType = env.getCachedType(declaringTypeName);\r", "-\t\t\t\tif (matchingDeclaringType != null && matchingDeclaringType.isValidBinding()) {\r", "-\t\t\t\t\tthis.declaringTypes = new ReferenceBinding[] { matchingDeclaringType };\r", "-\t\t\t\t\treturn true;\r", "-\t\t\t\t// if nothing is in the cache, it could have been a member type (A.B.C.D --> A.B.C$D)\r", "-\t\t\t\tint last = declaringTypeName.length - 1;\r", "-\t\t\t\tif (last == 0)\r", "-\t\t\t\t\tbreak;\r", "-\t\t\t\tdeclaringTypeName[last - 1] =\r", "-\t\t\t\t\tCharOperation.concat(declaringTypeName[last - 1], declaringTypeName[last], '$');\r", "-\t\t\t\t// try nested type\r", "-\t\t\t\tdeclaringTypeName = CharOperation.subarray(declaringTypeName, 0, last);\r", "-\t\t\t}\r", "-\t\t\treturn false;\r", "-\t\treturn false;\r", "+\r", "+public boolean initializeFromLookupEnvironment(LookupEnvironment env) {\r", "+\tthis.allSuperDeclaringTypeNames = this.collectSuperTypeNames(this.declaringQualification, this.declaringSimpleName, this.matchMode, env);\r", "+\treturn this.allSuperDeclaringTypeNames == null || this.allSuperDeclaringTypeNames != NOT_FOUND_DECLARING_TYPE; \r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e9f22326acb17574cf9157a0ecd5b7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodReferencePattern.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \r \tpublic boolean initializeFromLookupEnvironment(LookupEnvironment env)", "signatureAfterChange": "\r \r public boolean initializeFromLookupEnvironment(LookupEnvironment env)", "diff": ["-\r", "-\tpublic boolean initializeFromLookupEnvironment(LookupEnvironment env) {\r", "-\r", "-\t\tchar[][] declaringTypeName = null;\r", "-\t\tif ((this.declaringQualification != null)\r", "-\t\t\t&& (this.declaringSimpleName != null)\r", "-\t\t\t&& (this.matchMode == EXACT_MATCH)) {\r", "-\t\t\tchar[][] qualification =\r", "-\t\t\t\tCharOperation.splitOn('.', this.declaringQualification);\r", "-\t\t\tdeclaringTypeName =\r", "-\t\t\t\tCharOperation.arrayConcat(qualification, this.declaringSimpleName);\r", "-\t\t}\r", "-\t\tif (declaringTypeName != null) {\r", "-\t\t\tfor (int i = 0, max = declaringTypeName.length; i < max; i++) {\r", "-\t\t\t\tReferenceBinding matchingDeclaringType = env.getCachedType(declaringTypeName);\r", "-\t\t\t\tif (matchingDeclaringType != null && matchingDeclaringType.isValidBinding()) {\r", "-\t\t\t\t\tthis.declaringTypes = new ReferenceBinding[] { matchingDeclaringType };\r", "-\t\t\t\t\treturn true;\r", "-\t\t\t\t}\r", "-\t\t\t\t// if nothing is in the cache, it could have been a member type (A.B.C.D --> A.B.C$D)\r", "-\t\t\t\tint last = declaringTypeName.length - 1;\r", "-\t\t\t\tif (last == 0)\r", "-\t\t\t\t\tbreak;\r", "-\t\t\t\tdeclaringTypeName[last - 1] =\r", "-\t\t\t\t\tCharOperation.concat(declaringTypeName[last - 1], declaringTypeName[last], '$');\r", "-\t\t\t\t// try nested type\r", "-\t\t\t\tdeclaringTypeName = CharOperation.subarray(declaringTypeName, 0, last);\r", "-\t\t\t}\r", "-\t\t\treturn false;\r", "-\t\t\treturn true;\r", "+\r", "+public boolean initializeFromLookupEnvironment(LookupEnvironment env) {\r", "+\tthis.allSuperDeclaringTypeNames = this.collectSuperTypeNames(this.declaringQualification, this.declaringSimpleName, this.matchMode, env);\r", "+\treturn this.allSuperDeclaringTypeNames == null || this.allSuperDeclaringTypeNames != NOT_FOUND_DECLARING_TYPE; \r", "+}\r"]}], "num": 56621}