{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1b213782e01dbb1a72dc1e3465c7c090", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05400ae98f8d0f1d8a9dcc12361227d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "2eab698c606e3b17217602bbc99837242c743a5a", "commitAfterChange": "6d141275326cf4caf65ec5dca68b565e2e9b1360", "methodNumberBeforeChange": 385, "methodNumberAfterChange": 385, "signatureBeforeChange": "  public void test1027()", "signatureAfterChange": "  public void test1027()", "diff": ["-\tthis.runConformTest(", "+\tthis.runNegativeTest(", "-\t\t\"\");", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in X.java (at line 9)\\n\" +", "+\t\t\t\"\tif (o == null) \\n\" +", "+\t\t\t\"\t    ^\\n\" +", "+\t\t\t\"Redundant null check: The variable o can only be null at this location\\n\" +", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "134de87ec2cc78b42ee7a71b4580d81c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/LambdaExpressionsTest.java", "commitBeforeChange": "68f185fc63132d7b106a1c7ca52ed6d004b96329", "commitAfterChange": "4a85a8ee613913420acf3dde5af380e91d3bad2c", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": " public void test425512() throws Exception", "signatureAfterChange": " public void test425512() throws Exception", "diff": ["-\tthis.runConformTest(", "+\tthis.runNegativeTest(", "-\t\t\"5\");", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\"\tint [] a = (int [] & Cloneable & Serializable) new int[5];\\n\" + ", "+\t\t\"\t            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Arrays are not allowed in intersection cast operator\\n\" + ", "+\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "195c70ad54796cf0c5f263bce52e57d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9144806e49f76b29608474c4bebb2700b5c20faa", "commitAfterChange": "142c1803cd69a49b32423044506cd57c4ca51a87", "methodNumberBeforeChange": 753, "methodNumberAfterChange": 753, "signatureBeforeChange": " public void test747()", "signatureAfterChange": " public void test747()", "diff": ["-\tthis.runConformTest(", "+\tthis.runNegativeTest(", "-\t\t\"\");", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 3)\\r\\n\" + ", "+\t\t\"\tclass Y<U extends T & I> {\\r\\n\" + ", "+\t\t\"\t                      ^\\n\" + ", "+\t\t\"Cannot specify any additional bound X.I when first bound is a type parameter\\n\" + ", "+\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d3cc48dcb2a9c79b1baac8906c6434b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "8c030d505f30b0cafedd9f4204a10256b97739b1", "commitAfterChange": "7ad108ea3de2b7d68d2737f4428379110b97b811", "methodNumberBeforeChange": 392, "methodNumberAfterChange": 392, "signatureBeforeChange": " public void test1034()", "signatureAfterChange": " public void test1034()", "diff": ["-\tthis.runConformTest(", "+\tthis.runNegativeTest(", "-\t\t\"\");", "+\t\t\"----------\\n\" +", "+\t\t\"1. ERROR in X.java (at line 16)\\n\" +", "+\t\t\"\tif (rs != null)\\n\" +", "+\t\t\"\t    ^^\\n\" +", "+\t\t\"Redundant null check: The variable rs cannot be null at this location\\n\" +", "+\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fe9a4b786ee1db059512e8d9d792b82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/VarargsTest.java", "commitBeforeChange": "0edd2a8da94febc0bef7418a02cfac9f1a30d36a", "commitAfterChange": "85f48e0f08275e1f81e9995073d5c4f69bfd0707", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic void test015()", "signatureAfterChange": "  \tpublic void test015()", "diff": ["-\t\tthis.runConformTest(", "+\t\tthis.runNegativeTest(", "-\t\t\t\"1\"", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tY.count(new int[0]);\\n\" + ", "+\t\t\t\"\t  ^^^^^\\n\" + ", "+\t\t\t\"The method count(int[], int[]) is ambiguous for the type Y\\n\" + ", "+\t\t\t\"----------\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3645ddb8d97ca0308c45edabeb3d3466", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "66655f5e1f98e14cb994324b511a6633d4950147", "commitAfterChange": "05ac7a532e5c7862447e6e0fc351f30875c4dd96", "methodNumberBeforeChange": 233, "methodNumberAfterChange": 233, "signatureBeforeChange": " \tpublic void test0229()", "signatureAfterChange": " \tpublic void test0229()", "diff": ["-\t\tthis.runConformTest(", "+\t\tthis.runNegativeTest(", "-\t\t\t\"SUCCESS\");", "-\t}\t\t\t", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 2)\\r\\n\" + ", "+\t\t\t\"\tT.MXC f;\\r\\n\" + ", "+\t\t\t\"\t^^^^^\\n\" + ", "+\t\t\t\"Illegal qualified access from the type parameter T\\n\" + ", "+\t\t\t\"----------\\n\"", "+\t\t\t // cannot select from a type variable", "+\t\t);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ba0072c384d438874b18e789c403e6c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "44b2c87051c4d9bbf37b4cf649be500c54102bf7", "commitAfterChange": "9abfcc7867d970a4b8915c842032bf1660c0523c", "methodNumberBeforeChange": 762, "methodNumberAfterChange": 762, "signatureBeforeChange": " public void test756()", "signatureAfterChange": " public void test756()", "diff": ["-//https://bugs.eclipse.org/bugs/show_bug.cgi?id=99999", "+//https://bugs.eclipse.org/bugs/show_bug.cgi?id=99999 - variation", "-\tthis.runConformTest(", "+\tthis.runNegativeTest(", "-\t\t\"\");", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 4)\\r\\n\" + ", "+\t\t\"\tX<?>.B[] b = new X<?>.B[1];\\r\\n\" + ", "+\t\t\"\t             ^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Cannot create a generic array of X<?>.B\\n\" + ", "+\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43f7adb64452b3ace89829fff946fd06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "26c2e79f3bf65d02ca24e9f456c481b11db84310", "commitAfterChange": "1542690d818b56ca31610b1599cca37ada2a98ce", "methodNumberBeforeChange": 431, "methodNumberAfterChange": 431, "signatureBeforeChange": " \tpublic void test429()", "signatureAfterChange": " \tpublic void test429()", "diff": ["-\t\tthis.runConformTest(", "+\t\tthis.runNegativeTest(", "-\t\t\t\"\" // no complaints about duplicates", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X4.java (at line 1)\\r\\n\" + ", "+\t\t\t\"\tclass X4 <T extends Comparable<Z> & Comparable<Z>> {}\\r\\n\" + ", "+\t\t\t\"\t                                    ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Duplicate bound Comparable<Z>\\n\" + ", "+\t\t\t\"----------\\n\"", "+\t\t\t// no complaints about duplicates if they are both parameterized with same args", "+\t\t\t// but you cannot extend Comparable & Comparable so we'll report an error"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "588de5b33b80de459da578db0b9a2b98", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 140, "methodNumberAfterChange": 140, "signatureBeforeChange": " public void test0413_while_unknown_field()", "signatureAfterChange": " public void test0413_while_unknown_field()", "diff": ["-\tthis.runConformTest(", "+\tthis.runNegativeTest(", "-\t\t\"\");", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\"\to.toString();\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"Potential null pointer access: The field o may be null at this location\\n\" + ", "+\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62268c309ce60a8065db2db55bb6c02f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9144806e49f76b29608474c4bebb2700b5c20faa", "commitAfterChange": "142c1803cd69a49b32423044506cd57c4ca51a87", "methodNumberBeforeChange": 858, "methodNumberAfterChange": 858, "signatureBeforeChange": " public void test852()", "signatureAfterChange": " public void test852()", "diff": ["-\tthis.runConformTest(", "+\tthis.runNegativeTest(", "-\t\t\"\");\t", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 2)\\r\\n\" + ", "+\t\t\"\t<T extends Runnable, U extends T & Runnable>  T foo() { return null; }\\r\\n\" + ", "+\t\t\"\t                                   ^^^^^^^^\\n\" + ", "+\t\t\"Cannot specify any additional bound Runnable when first bound is a type parameter\\n\" + ", "+\t\t\"----------\\n\");\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "639359bfe093ed9c40984c6d3b96cfc2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "2eab698c606e3b17217602bbc99837242c743a5a", "commitAfterChange": "6d141275326cf4caf65ec5dca68b565e2e9b1360", "methodNumberBeforeChange": 203, "methodNumberAfterChange": 203, "signatureBeforeChange": " public void test0505_try_finally()", "signatureAfterChange": " public void test0505_try_finally()", "diff": ["-//       initialized (for sure) on line 2.", "+// As of Bug 345305 this has been changed to a more accurate analysis.", "-\tthis.runConformTest(", "+\tthis.runNegativeTest(", "-\t\t\"\");", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in X.java (at line 7)\\n\" +", "+\t\t\t\"\tif (x == null) {/* */}\\n\" +", "+\t\t\t\"\t    ^\\n\" +", "+\t\t\t\"Redundant null check: The variable x can only be null at this location\\n\" +", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6984927274293e6cad4a9315be8e1d73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "27981506f2756dff04c50e8b59d9c147159c1382", "commitAfterChange": "3a03108b43e5ef2ebe5aa948629c8324c4c57d2e", "methodNumberBeforeChange": 365, "methodNumberAfterChange": 365, "signatureBeforeChange": " \tpublic void test363()", "signatureAfterChange": " \tpublic void test363()", "diff": ["-\t\tthis.runConformTest(", "+\t\tthis.runNegativeTest(", "-\t\t\t\"\");", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 6)\\r\\n\" + ", "+\t\t\"\tm_values = values.entrySet();\\r\\n\" + ", "+\t\t\"\t           ^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type mismatch: cannot convert from Set<Map.Entry<Integer,?>> to Set<Map.Entry<Integer,?>>\\n\" + ", "+\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81ddc756900027d834ac08e1f46bb92c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "c86c38d672e49d50e598810327b66493258e94dd", "commitAfterChange": "060261358ee4101b16c7399fe1e71ff5bc4ac40a", "methodNumberBeforeChange": 1047, "methodNumberAfterChange": 1047, "signatureBeforeChange": " public void test1021b()", "signatureAfterChange": " public void test1021b()", "diff": ["-\tthis.runConformTest(", "+\tthis.runNegativeTest(", "-\t\t\"\"", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in p\\\\SomeClass2.java (at line 3)\\n\" + ", "+\t\t\"\tpublic abstract class SomeClass2<T> extends M {\\n\" + ", "+\t\t\"\t                                            ^\\n\" + ", "+\t\t\"Cycle detected: the type SomeClass2<T> cannot extend/implement itself or one of its own member types\\n\" + ", "+\t\t\"----------\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4c22f1213dd358b3763ec27503ff0b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "8c030d505f30b0cafedd9f4204a10256b97739b1", "commitAfterChange": "7ad108ea3de2b7d68d2737f4428379110b97b811", "methodNumberBeforeChange": 385, "methodNumberAfterChange": 385, "signatureBeforeChange": "  public void test1027()", "signatureAfterChange": "  public void test1027()", "diff": ["-\tthis.runConformTest(", "+\tthis.runNegativeTest(", "-\t\t\"\");", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in X.java (at line 9)\\n\" +", "+\t\t\t\"\tif (o == null) \\n\" +", "+\t\t\t\"\t    ^\\n\" +", "+\t\t\t\"Redundant null check: The variable o can only be null at this location\\n\" +", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a51b734174e4ffc737af4b13f1711a47", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "af330be1052a8d3b1a31b10596d367fb42f89f79", "commitAfterChange": "b3a6b4ddf9d5bd5365b7e897739a001bb2ff860b", "methodNumberBeforeChange": 768, "methodNumberAfterChange": 768, "signatureBeforeChange": " public void test0748()", "signatureAfterChange": " public void test0748()", "diff": ["-\tthis.runConformTest(", "+\tthis.runNegativeTest(", "-\t\t\"\");", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 6)\\r\\n\" + ", "+\t\t\"\tstatic class BytesFactory implements Factory<byte[]> {\\r\\n\" + ", "+\t\t\"\t             ^^^^^^^^^^^^\\n\" + ", "+\t\t\"The type X.BytesFactory must implement the inherited abstract method X.Factory<byte[]>.create(Class<U>)\\n\" + ", "+\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afac6451b503aac0ec2bd8aa610a75e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "8c030d505f30b0cafedd9f4204a10256b97739b1", "commitAfterChange": "7ad108ea3de2b7d68d2737f4428379110b97b811", "methodNumberBeforeChange": 203, "methodNumberAfterChange": 203, "signatureBeforeChange": " public void test0505_try_finally()", "signatureAfterChange": " public void test0505_try_finally()", "diff": ["-//       initialized (for sure) on line 2.", "+// As of Bug 345305 this has been changed to a more accurate analysis.", "-\tthis.runConformTest(", "+\tthis.runNegativeTest(", "-\t\t\"\");", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in X.java (at line 7)\\n\" +", "+\t\t\t\"\tif (x == null) {/* */}\\n\" +", "+\t\t\t\"\t    ^\\n\" +", "+\t\t\t\"Redundant null check: The variable x can only be null at this location\\n\" +", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbfcae68f8120373a33b67e174fbc569", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "4e1c84d7f1b5cbfdb04337ad1ef6661973bb5b54", "commitAfterChange": "d1fadbf3a3cc65cdec59a81bd717eea0685adc65", "methodNumberBeforeChange": 127, "methodNumberAfterChange": 127, "signatureBeforeChange": " \tpublic void test122()", "signatureAfterChange": " \tpublic void test122()", "diff": ["-\t\tthis.runConformTest(", "+\t\tthis.runNegativeTest(", "-\t\t\t\"\");", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tcase (NORMAL) :\\n\" + ", "+\t\t\t\"\t     ^^^^^^^^\\n\" + ", "+\t\t\t\"Enum contants cannot be surrounded by parenthesis\\n\" + ", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf0a3857459206568e4979cc1387850b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9144806e49f76b29608474c4bebb2700b5c20faa", "commitAfterChange": "142c1803cd69a49b32423044506cd57c4ca51a87", "methodNumberBeforeChange": 787, "methodNumberAfterChange": 787, "signatureBeforeChange": " public void test781()", "signatureAfterChange": " public void test781()", "diff": ["-\tthis.runConformTest(", "+\tthis.runNegativeTest(", "-\t\t\"\");", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 3)\\r\\n\" + ", "+\t\t\"\tpublic static <E, T extends E & Comparable<? super T>> Foo<E> doIt(T t) {\\r\\n\" + ", "+\t\t\"\t                                ^^^^^^^^^^\\n\" + ", "+\t\t\"Cannot specify any additional bound Comparable<? super T> when first bound is a type parameter\\n\" + ", "+\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1a224b2bf5db73bced75b7f6536def0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "c86c38d672e49d50e598810327b66493258e94dd", "commitAfterChange": "060261358ee4101b16c7399fe1e71ff5bc4ac40a", "methodNumberBeforeChange": 1167, "methodNumberAfterChange": 1167, "signatureBeforeChange": " public void test1139()", "signatureAfterChange": " public void test1139()", "diff": ["-\tthis.runConformTest(", "+\tthis.runNegativeTest(", "-\t\t\"\");", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in p\\\\X.java (at line 9)\\r\\n\" + ", "+\t\t\"\tpublic class X extends Super<A<X>> {\\r\\n\" + ", "+\t\t\"\t                       ^^^^^\\n\" + ", "+\t\t\"Cycle detected: the type X cannot extend/implement itself or one of its own member types\\n\" + ", "+\t\t\"----------\\n\"", "+\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5b217a92af615928bb5868976efbada", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "2eab698c606e3b17217602bbc99837242c743a5a", "commitAfterChange": "6d141275326cf4caf65ec5dca68b565e2e9b1360", "methodNumberBeforeChange": 392, "methodNumberAfterChange": 392, "signatureBeforeChange": " public void test1034()", "signatureAfterChange": " public void test1034()", "diff": ["-\tthis.runConformTest(", "+\tthis.runNegativeTest(", "-\t\t\"\");", "+\t\t\"----------\\n\" +", "+\t\t\"1. ERROR in X.java (at line 16)\\n\" +", "+\t\t\"\tif (rs != null)\\n\" +", "+\t\t\"\t    ^^\\n\" +", "+\t\t\"Redundant null check: The variable rs cannot be null at this location\\n\" +", "+\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecbf6fded58236476f971eae9ffa99da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AutoBoxingTest.java", "commitBeforeChange": "f0430317923561aaf4c1a789df7c09fbc01d5f33", "commitAfterChange": "dfb3637702f1e682e6ee6d2d1c5b6ed54a2efc28", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " \tpublic void test073()", "signatureAfterChange": " \tpublic void test073()", "diff": ["-\t\tthis.runConformTest(", "+\t\tthis.runNegativeTest(", "-\t\t\t\"SUCCESS\");", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 3)\\r\\n\" + ", "+\t\t\t\"\ta(new Integer(1), 2);\\r\\n\" + ", "+\t\t\t\"\t^\\n\" + ", "+\t\t\t\"The method a(int, int) is ambiguous for the type X\\n\" + ", "+\t\t\t\"----------\\n\"", "+\t\t\t// a is ambiguous, both method a(int,int) in X and method a(java.lang.Object,java.lang.Object) in X match", "+\t\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f073430c4a2d0ed4a3b6dddb7c6a275c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "aeb25ab0fdeaedfd0f4ac9a6012d2a11af4c869a", "commitAfterChange": "a2e52170d07ac53b0646161c65180b5691c41bb6", "methodNumberBeforeChange": 144, "methodNumberAfterChange": 144, "signatureBeforeChange": "     public void test140()", "signatureAfterChange": "     public void test140()", "diff": ["-        this.runConformTest(", "+        this.runNegativeTest(", "-\t\t\t\"\");", "+    \t\t\"----------\\n\" + ", "+    \t\t\"1. ERROR in X.java (at line 6)\\r\\n\" + ", "+    \t\t\"\tstatic void foo(){}\t\\r\\n\" + ", "+    \t\t\"\t            ^^^^^\\n\" + ", "+    \t\t\"The method foo() of type Bar must override a superclass method\\n\" + ", "+    \t\t\"----------\\n\");"]}], "num": 16575}