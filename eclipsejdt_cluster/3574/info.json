{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3264c998402cfe458996fe7cef498907", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b41290eaa85974b5950144875ec3e3f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImplicitNullAnnotationVerifier.java", "commitBeforeChange": "3aaa02433bee6eae022db09efeb9fd0aba7da6a0", "commitAfterChange": "e62068644543b99c745f832b9263b49ff6b3d0ba", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tvoid checkNullSpecInheritance(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod,  \t\t\tboolean hasReturnNonNullDefault, boolean hasParameterNonNullDefault, boolean shouldComplain, \t\t\tMethodBinding inheritedMethod, MethodBinding[] allInheritedMethods, Scope scope, InheritedNonNullnessInfo[] inheritedNonNullnessInfos)", "signatureAfterChange": " \tvoid checkNullSpecInheritance(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod,  \t\t\tboolean hasReturnNonNullDefault, boolean hasParameterNonNullDefault, boolean shouldComplain, \t\t\tMethodBinding inheritedMethod, MethodBinding[] allInheritedMethods, Scope scope, InheritedNonNullnessInfo[] inheritedNonNullnessInfos)", "diff": ["-\t\t\t\t\t\t\tscope.problemReporter().illegalReturnRedefinition(srcMethod, inheritedMethod, null);", "+\t\t\t\t\t\t\tscope.problemReporter().illegalReturnRedefinition(srcMethod, inheritedMethod,", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.environment.getNonNullAnnotationName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a9d0a90f945fb618c8ce5dabc9ae92f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "d95feda7fc2f9a6563596c0e4c31ae322f705773", "commitAfterChange": "8477130b01f048bfc1fd1f484a88902aeefb2f38", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " void checkInheritedMethods(MethodBinding[] methods, int length, boolean[] isOverridden, boolean[] isInherited)", "signatureAfterChange": " void checkInheritedMethods(MethodBinding[] methods, int length, boolean[] isOverridden, boolean[] isInherited)", "diff": ["-\t\t\t\t\tproblemReporter().duplicateInheritedMethods(this.type, concreteMethod, methods[i]);", "+\t\t\t\t\tproblemReporter().duplicateInheritedMethods(this.type, concreteMethod, methods[i],", "+\t\t\t\t\t\t\t\t\t\t\tthis.environment.globalOptions.sourceLevel >= ClassFileConstants.JDK1_8);"]}], "num": 3574}