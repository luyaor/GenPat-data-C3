{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4a0288d37fb31226dcb8842ce56ce60a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dbadf20c4be8fa390c9b67a7748a26f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "d1d9c4b9d41b5dee6585f38ec44b96973779f261", "commitAfterChange": "ae391996f2ba5153face2dc96f44fbe25cc6cfcf", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": " \tpublic void test032b()", "signatureAfterChange": " \tpublic void test032b()", "diff": ["-\t\t\t\t\"class A { public Object foo() { return null; } }\" +", "-\t\t\t\t\"public class X<T extends A&I> {}\\n\"", "+\t\t\t\t\"class A { public Object foo() { return null; } }\\n\" +", "+\t\t\t\t\"public class X<T extends A&I> {}\\n\" +", "+\t\t\t\t\"interface J extends I { Object foo(); }\\n\" +", "+\t\t\t\t\"class Y<T extends I&J> {}\\n\" +", "+\t\t\t\t\"class Z<T extends J&I> {}\"", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. ERROR in X.java (at line 2)\\r\\n\" +", "-\t\t\t\"\tclass A { public Object foo() { return null; } }public class X<T extends A&I> {}\\r\\n\" +", "-\t\t\t\"\t                                                               ^\\n\" +", "-\t\t\t\"The return types are incompatible for the inherited methods I.foo(), A.foo()\\n\" +", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tpublic class X<T extends A&I> {}\\n\" + ", "+\t\t\t\"\t               ^\\n\" + ", "+\t\t\t\"The return types are incompatible for the inherited methods I.foo(), A.foo()\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tinterface J extends I { Object foo(); }\\n\" + ", "+\t\t\t\"\t                        ^^^^^^\\n\" + ", "+\t\t\t\"The return type is incompatible with I.foo()\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e7a354b1d407c15676c3f2bca29eaf3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 309, "methodNumberAfterChange": 309, "signatureBeforeChange": " public void test159()", "signatureAfterChange": " public void test159()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 15)\\n\" +", "-\t\t\"\tpublic abstract class X extends Root implements AFoo, BFoo {}\\n\" +", "-\t\t\"\t                      ^\\n\" +", "-\t\t\"The return types are incompatible for the inherited methods BFoo.bar(), AFoo.bar()\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. ERROR in X.java (at line 17)\\n\" +", "-\t\t\"\tclass Z extends X {}\\n\" +", "-\t\t\"\t      ^\\n\" +", "-\t\t\"The type Z must implement the inherited abstract method AFoo.bar()\\n\" +", "-\t\t\"----------\\n\"", "-\t);", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 15)\\n\" + ", "+\t\t\"\tpublic abstract class X extends Root implements AFoo, BFoo {}\\n\" + ", "+\t\t\"\t                      ^\\n\" + ", "+\t\t\"The return types are incompatible for the inherited methods BFoo.bar(), AFoo.bar()\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 16)\\n\" + ", "+\t\t\"\tabstract class Y extends X {}\\n\" + ", "+\t\t\"\t               ^\\n\" + ", "+\t\t\"The return types are incompatible for the inherited methods BFoo.bar(), AFoo.bar()\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 17)\\n\" + ", "+\t\t\"\tclass Z extends X {}\\n\" + ", "+\t\t\"\t      ^\\n\" + ", "+\t\t\"The type Z must implement the inherited abstract method AFoo.bar()\\n\" + ", "+\t\t\"----------\\n\");"]}], "num": 42924}