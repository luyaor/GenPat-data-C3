{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "717be668089386a97bba56dd943efd5c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01f7d99b67b7ff0389e0017b94202774", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "3307a3b21f8472cc998512e9e4cd5afdd4f17b52", "commitAfterChange": "b155f47580a90f694a899aae6d06a1ff29f450b8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void analyseCode(ClassScope classScope, InitializationFlowContext initializerFlowContext, FlowInfo flowInfo, int initialReachMode)", "signatureAfterChange": " public void analyseCode(ClassScope classScope, InitializationFlowContext initializerFlowContext, FlowInfo flowInfo, int initialReachMode)", "diff": ["-\t\t\tboolean didAlreadyComplain = false;", "+\t\t\tint complaintLevel = (nonStaticFieldInfoReachMode & FlowInfo.UNREACHABLE) == 0 ? Statement.NOT_COMPLAINED : Statement.COMPLAINED_FAKE_REACHABLE;", "-\t\t\t\tif (!stat.complainIfUnreachable(flowInfo, this.scope, didAlreadyComplain)) {", "+\t\t\t\tif ((complaintLevel = stat.complainIfUnreachable(flowInfo, this.scope, complaintLevel)) < Statement.COMPLAINED_UNREACHABLE) {", "-\t\t\t\t} else {", "-\t\t\t\t\tdidAlreadyComplain = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f99f686453f5be7f8292e61395ef6660", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MethodDeclaration.java", "commitBeforeChange": "3307a3b21f8472cc998512e9e4cd5afdd4f17b52", "commitAfterChange": "b155f47580a90f694a899aae6d06a1ff29f450b8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void analyseCode( \t\tClassScope classScope, \t\tInitializationFlowContext initializationContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void analyseCode(ClassScope classScope, InitializationFlowContext initializationContext, FlowInfo flowInfo)", "diff": ["-\tpublic void analyseCode(", "-\t\tClassScope classScope,", "-\t\tInitializationFlowContext initializationContext,", "-\t\tFlowInfo flowInfo) {", "-", "+\tpublic void analyseCode(ClassScope classScope, InitializationFlowContext initializationContext, FlowInfo flowInfo) {", "-\t\t\t\tboolean didAlreadyComplain = false;", "+\t\t\t\tint complaintLevel = (flowInfo.reachMode() & FlowInfo.UNREACHABLE) == 0 ? Statement.NOT_COMPLAINED : Statement.COMPLAINED_FAKE_REACHABLE;", "-\t\t\t\t\tif (!stat.complainIfUnreachable(flowInfo, this.scope, didAlreadyComplain)) {", "+\t\t\t\t\tif ((complaintLevel = stat.complainIfUnreachable(flowInfo, this.scope, complaintLevel)) < Statement.COMPLAINED_UNREACHABLE) {", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tdidAlreadyComplain = true;"]}], "num": 8878}