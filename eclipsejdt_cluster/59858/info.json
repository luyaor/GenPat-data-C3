{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e7c024abf28d8f21a0ac7f049fafe118", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e8b0adc9d5678dd910da0ccfa56659c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionScanner.java", "commitBeforeChange": "3f75c9397ff53f65021c19499da76d98c9e23550", "commitAfterChange": "d3a9da1814717a2c18ee252440a7a4915c82ca4d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": " public int scanIdentifierOrKeyword()", "signatureAfterChange": " public int scanIdentifierOrKeyword()", "diff": ["-\tif (id != TokenNameIdentifier", "-\t\t&& this.startPosition <= this.cursorLocation+1 ", "+\tif (this.startPosition <= this.cursorLocation+1 ", "-\t\treturn TokenNameIdentifier;", "+\t\tif(!this.completedTokenFound) {", "+\t\t\tthis.completedTokenFound = true;", "+\t\t\tthis.completedIdentifierStart = this.startPosition;", "+\t\t\tthis.completedIdentifierEnd = this.currentPosition - 1;", "+\t\t\treturn TokenNameIdentifier;", "+\t\t} else if(this.completedIdentifierStart == this.startPosition", "+\t\t\t\t&& this.completedIdentifierEnd == this.currentPosition - 1) {", "+\t\t\t\treturn TokenNameIdentifier;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3293fea5d14da24b89feee8ebf90af5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "41f092015c73f4913b3c6ef2c39e376db5e0606c", "commitAfterChange": "58a17984909ee26c9411cb96407ed6af0dff709e", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " protected void consumeConstructorHeader()", "signatureAfterChange": " protected void consumeConstructorHeader()", "diff": ["-// TODO: (david) investigate why the following breaks regression tests", "-// it should just be the same as for consumeMethodHeader()", "-//\t\tif (currentToken == TokenNameSEMICOLON){ // for invalid constructors", "-//\t\t\tmethod.modifiers |= AccSemicolonBody;\t\t\t", "-//\t\t\tmethod.declarationSourceEnd = scanner.currentPosition-1;", "-//\t\t\tmethod.bodyEnd = scanner.currentPosition-1;", "-//\t\t\tif (currentElement.parent != null){ // --> suspecting this is the offending part causing breakage", "-//\t\t\t\tcurrentElement = currentElement.parent;", "-//\t\t\t}", "-//\t\t}\t\t", "+\t\tif (currentToken == TokenNameSEMICOLON){ // for invalid constructors", "+\t\t\tmethod.modifiers |= AccSemicolonBody;\t\t\t", "+\t\t\tmethod.declarationSourceEnd = scanner.currentPosition-1;", "+\t\t\tmethod.bodyEnd = scanner.currentPosition-1;", "+\t\t\tif (currentElement.parseTree() == method && currentElement.parent != null) {", "+\t\t\t\tcurrentElement = currentElement.parent;", "+\t\t\t}", "+\t\t}\t\t"]}], "num": 59858}