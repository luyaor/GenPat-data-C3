{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bb77175898e404199ce98cc724da91e1", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a6b06526b9df78aff5574d68308c1ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "7b0f09fd73b49ba4dc507ba4a634d425ab3e92c2", "commitAfterChange": "90ccf89195ab29ecb5a569cf526f683aefa3263d", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "\r protected IBuffer openBuffer(IProgressMonitor pm) throws JavaModelException", "signatureAfterChange": "\r protected IBuffer openBuffer(IProgressMonitor pm) throws JavaModelException", "diff": ["+\t\t\t// create buffer\r", "-\t\t\tIBuffer buf = bufManager.openBuffer(contents, pm, this, isReadOnly());\r", "-\t\t\tbuf.addBufferChangedListener(this);\t\t\t\r", "+\t\t\tIBuffer buffer = bufManager.getDefaultBufferFactory().createBuffer(this);\r", "+\t\t\tbufManager.addBuffer(buffer);\r", "+\t\t\t\r", "+\t\t\t// set the buffer source\r", "+\t\t\tif (buffer != null && buffer.getCharacters() == null){\r", "+\t\t\t\tbuffer.setContents(contents);\r", "+\t\t\t}\r", "+\t\t\t\r", "+\t\t\t// listen to buffer changes\r", "+\t\t\tbuffer.addBufferChangedListener(this);\t\r", "+\t\t\t\t\t\r", "-\t\t\treturn buf;\r", "+\t\t\t\r", "+\t\t\treturn buffer;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2faae79cbcdaeb6b4647d0297ae089f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "7b0f09fd73b49ba4dc507ba4a634d425ab3e92c2", "commitAfterChange": "90ccf89195ab29ecb5a569cf526f683aefa3263d", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "\r protected IBuffer openBuffer(IProgressMonitor pm) throws JavaModelException", "signatureAfterChange": "\r protected IBuffer openBuffer(IProgressMonitor pm) throws JavaModelException", "diff": ["-\tIBuffer buf = getBufferManager().openBuffer((IFile) getUnderlyingResource(), pm, this, isReadOnly());\r", "-\tbuf.addBufferChangedListener(this);\r", "-\treturn buf;\r", "+\t// create buffer\r", "+\tBufferManager bufManager = getBufferManager();\r", "+\tIBuffer buffer = bufManager.getDefaultBufferFactory().createBuffer(this);\r", "+\tbufManager.addBuffer(buffer);\r", "+\t\r", "+\t// set the buffer source\r", "+\tif (buffer != null && buffer.getCharacters() == null){\r", "+\t\tbuffer.setContents(Util.getResourceContentsAsCharArray((IFile)this.getResource()));\r", "+\t}\r", "+\t\t\t\r", "+\t// listen to buffer changes\r", "+\tbuffer.addBufferChangedListener(this);\r", "+\t\r", "+\treturn buffer;\r"]}], "num": 8576}