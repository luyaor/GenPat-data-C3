{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8bd325e690f283a3dc9c3ff4e012d758", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cfa21f21f0e9dfd30e19211da7c4d33", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "c775c1d0f23881553fb0e260a70314c10cea2026", "commitAfterChange": "05b6d0de9346f14e62c144050801c846baf33bc9", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public final boolean canBeSeenBy(ReferenceBinding receiverType, ReferenceBinding invocationType)", "signatureAfterChange": "  public final boolean canBeSeenBy(ReferenceBinding receiverType, ReferenceBinding invocationType)", "diff": ["-\t\tReferenceBinding currentType = invocationType;", "-\t\tReferenceBinding declaringClass = enclosingType(); // protected types always have an enclosing one", "+\t\tTypeBinding currentType = invocationType.erasure();", "+\t\tTypeBinding declaringClass = enclosingType().erasure(); // protected types always have an enclosing one"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b17d5c3663a49e5a9aba799fb6d856f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "c2e080fd4cdb5b6966f7ddcebea4e79bb09b6a7c", "commitAfterChange": "8226bc02e4d6a00af95c0556ac81efe01c315289", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public final boolean canBeSeenBy(Scope scope)", "signatureAfterChange": "  public final boolean canBeSeenBy(Scope scope)", "diff": ["-\t\t// answer true if the receiver (or its enclosing type) is the superclass ", "-\t\t//\tof the invocationType or in the same package", "-\t\treturn invocationType.fPackage == fPackage ", "-\t\t\t\t|| isSuperclassOf(invocationType)", "-\t\t\t\t|| enclosingType().isSuperclassOf(invocationType); // protected types always have an enclosing one", "-\t}", "-", "-\tif (isProtected()) {"]}], "num": 49884}