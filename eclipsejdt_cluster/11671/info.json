{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c65a1f12b02e2bd202ca8fdf4cf2ffc1", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "027b781152a6e4b632965ffd659e32ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/InternalSearchPattern.java", "commitBeforeChange": "b11ff08d2ac69725bdc069a993b1c7c922c0935d", "commitAfterChange": "2b658a2e19b9466b65c78bf38bae4989bbb6fce3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tString documentPath(String containerPath, String relativePath)", "signatureAfterChange": " \tString documentPath(String containerPath, String relativePath)", "diff": ["-\t\tif (Util.isArchiveFileName(containerPath))", "-\t\t\treturn containerPath + IJavaSearchScope.JAR_FILE_ENTRY_SEPARATOR + relativePath;", "-\t\treturn containerPath + '/' + relativePath;", "+\t\tString separator = Util.isArchiveFileName(containerPath) ? IJavaSearchScope.JAR_FILE_ENTRY_SEPARATOR : \"/\"; //$NON-NLS-1$", "+\t\tStringBuffer buffer = new StringBuffer(containerPath.length() + separator.length() + relativePath.length());", "+\t\tbuffer.append(containerPath);", "+\t\tbuffer.append(separator);", "+\t\tbuffer.append(relativePath);", "+\t\treturn buffer.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e1df681f73767edbd6b2f7ff87ba513", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitProblemFinder.java", "commitBeforeChange": "6001d3b093576094091cc8d401be17207c6cc911", "commitAfterChange": "3ce9a84109f75e9356d2eb9e4e5ad65f0e87fa41", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic static CompilationUnitDeclaration process( \t\tCompilationUnitDeclaration unit, \t\tICompilationUnit unitElement,  \t\tchar[] contents, \t\tParser parser, \t\tWorkingCopyOwner workingCopyOwner, \t\tHashMap problems, \t\tboolean creatingAST, \t\tboolean statementsRecovery, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "signatureAfterChange": "  \tpublic static CompilationUnitDeclaration process( \t\tCompilationUnitDeclaration unit, \t\tICompilationUnit unitElement,  \t\tchar[] contents, \t\tParser parser, \t\tWorkingCopyOwner workingCopyOwner, \t\tHashMap problems, \t\tboolean creatingAST, \t\tboolean statementsRecovery, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "diff": ["-\t\t\tUtil.log(e, \"Exception occurred during problem detection: \"); //$NON-NLS-1$ ", "+\t\t\tString lineDelimiter = unitElement.findRecommendedLineSeparator();", "+\t\t\tStringBuffer message = new StringBuffer(\"Exception occurred during problem detection:\");  //$NON-NLS-1$ ", "+\t\t\tmessage.append(lineDelimiter);", "+\t\t\tmessage.append(\"----------------------------------- SOURCE BEGIN -------------------------------------\"); //$NON-NLS-1$", "+\t\t\tmessage.append(lineDelimiter);", "+\t\t\tmessage.append(contents);", "+\t\t\tmessage.append(lineDelimiter);", "+\t\t\tmessage.append(\"----------------------------------- SOURCE END -------------------------------------\"); //$NON-NLS-1$", "+\t\t\tUtil.log(e, message.toString());"]}], "num": 11671}