{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "50004cdd7db44562d322eb1e3bb36aa9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50da0c461bdb9042203e3e0a9a5d0f01", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "ffd96339198fcdfc38a0c44d4da9dfd0a59d21fc", "commitAfterChange": "800086b43f754a4bddaa8c7c50578119d7c63538", "methodNumberBeforeChange": 442, "methodNumberAfterChange": 442, "signatureBeforeChange": " protected void pushIdentifier(char [] identifier, long position)", "signatureAfterChange": " protected void pushIdentifier(char [] identifier, long position)", "diff": ["-\tif (this.parsingJava8Plus && identifier.length == 1 && identifier[0] == '_') {", "-\t\tproblemReporter().illegalUseOfUnderscoreAsAnIdentifier((int) (position >>> 32), (int) position);", "+\tif (this.parsingJava8Plus && identifier.length == 1 && identifier[0] == '_' && !this.processingLambdaParameterList) {", "+\t\tproblemReporter().illegalUseOfUnderscoreAsAnIdentifier((int) (position >>> 32), (int) position, false /* not a lambda parameter */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5960bb73d6f1791ad487cfba25984e35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "ffd96339198fcdfc38a0c44d4da9dfd0a59d21fc", "commitAfterChange": "800086b43f754a4bddaa8c7c50578119d7c63538", "methodNumberBeforeChange": 288, "methodNumberAfterChange": 288, "signatureBeforeChange": " protected void consumeLambdaExpression()", "signatureAfterChange": " protected void consumeLambdaExpression()", "diff": ["-\t\tif (arguments[i].isReceiver()) {", "-\t\t\tproblemReporter().illegalThis(arguments[i]);", "+\t\tfinal Argument argument = arguments[i];", "+\t\tif (argument.isReceiver()) {", "+\t\t\tproblemReporter().illegalThis(argument);", "+\t\tif (argument.name.length == 1 && argument.name[0] == '_')", "+\t\t\tproblemReporter().illegalUseOfUnderscoreAsAnIdentifier(argument.sourceStart, argument.sourceEnd, true); // true == lambdaParameter"]}], "num": 70959}