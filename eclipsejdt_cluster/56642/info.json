{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1e4ab594c5c1ac7d357060c555babc5e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b914faf56d0e509cc9b4efd9ecbc97d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  \tpublic void test025()", "signatureAfterChange": "  \tpublic void test025()", "diff": ["-\t\t\t\"\" // no warnings", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 1)\\n\" + ", "+\t\t\t\"\tinterface X<T extends X> { T x(); }\\n\" + ", "+\t\t\t\"\t                      ^\\n\" + ", "+\t\t\t\"Type safety: X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 2)\\n\" + ", "+\t\t\t\"\tabstract class Y<S extends X> implements X<S> { public abstract S x(); }\\n\" + ", "+\t\t\t\"\t                           ^\\n\" + ", "+\t\t\t\"Type safety: X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tabstract class Z implements X { public abstract X x(); }\\n\" + ", "+\t\t\t\"\t                            ^\\n\" + ", "+\t\t\t\"Type safety: X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tabstract class Z implements X { public abstract X x(); }\\n\" + ", "+\t\t\t\"\t                                                ^\\n\" + ", "+\t\t\t\"Type safety: X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\"", "-\t\t\t\"\" // no warnings", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 1)\\n\" + ", "+\t\t\t\"\tinterface X<T extends X> { T[] x(); }\\n\" + ", "+\t\t\t\"\t                      ^\\n\" + ", "+\t\t\t\"Type safety: X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 2)\\n\" + ", "+\t\t\t\"\tabstract class Y<S extends X> implements X<S> { public abstract S[] x(); }\\n\" + ", "+\t\t\t\"\t                           ^\\n\" + ", "+\t\t\t\"Type safety: X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tabstract class Z implements X { public abstract X[] x(); }\\n\" + ", "+\t\t\t\"\t                            ^\\n\" + ", "+\t\t\t\"Type safety: X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec37344db9dec895c4a2e6e871155d6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsTests.java", "commitBeforeChange": "27612a777df418501ffa9535c686f7fa1f1cc84e", "commitAfterChange": "df0ced66f14be6d828e0c07bdfbf827df2636039", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 133, "signatureBeforeChange": " public void _testLineComments02b() throws JavaModelException", "signatureAfterChange": " public void testLineComments07() throws JavaModelException", "diff": ["-// TODO (frederic) Pass this test", "-public void _testLineComments02b() throws JavaModelException {", "-\tformatUnit(\"comments.line\", \"X02b.java\");", "+public void testLineComments07() throws JavaModelException {", "+\tString source =", "+\t\t\"package test.comments.line;\\r\\n\" + ", "+\t\t\"\\r\\n\" + ", "+\t\t\"public class X07 {\\r\\n\" + ", "+\t\t\"\\r\\n\" + ", "+\t\t\"boolean inTitle;\\r\\n\" + ", "+\t\t\"boolean inMetaTag;\\r\\n\" + ", "+\t\t\"boolean inStyle;\\r\\n\" + ", "+\t\t\"boolean inImg;\\r\\n\" + ", "+\t\t\"\\r\\n\" + ", "+\t\t\"void foo(String tagName) {\\r\\n\" + ", "+\t\t\"    inTitle = tagName.equalsIgnoreCase(\\\"<title\\\"); // keep track if in <TITLE>\\r\\n\" + ", "+\t\t\"    inMetaTag = tagName.equalsIgnoreCase(\\\"<META\\\"); // keep track if in <META>\\r\\n\" + ", "+\t\t\"    inStyle = tagName.equalsIgnoreCase(\\\"<STYLE\\\"); // keep track if in <STYLE>\\r\\n\" + ", "+\t\t\"    inImg = tagName.equalsIgnoreCase(\\\"<img\\\");     // keep track if in <IMG>\\r\\n\" + ", "+\t\t\"}\\r\\n\" + ", "+\t\t\"}\\r\\n\";", "+\tformatSource(source,", "+\t\t\"package test.comments.line;\\r\\n\" + ", "+\t\t\"\\r\\n\" + ", "+\t\t\"public class X07 {\\r\\n\" + ", "+\t\t\"\\r\\n\" + ", "+\t\t\"\tboolean inTitle;\\r\\n\" + ", "+\t\t\"\tboolean inMetaTag;\\r\\n\" + ", "+\t\t\"\tboolean inStyle;\\r\\n\" + ", "+\t\t\"\tboolean inImg;\\r\\n\" + ", "+\t\t\"\\r\\n\" + ", "+\t\t\"\tvoid foo(String tagName) {\\r\\n\" + ", "+\t\t\"\t\tinTitle = tagName.equalsIgnoreCase(\\\"<title\\\"); // keep track if in\\r\\n\" + ", "+\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t// <TITLE>\\r\\n\" + ", "+\t\t\"\t\tinMetaTag = tagName.equalsIgnoreCase(\\\"<META\\\"); // keep track if in\\r\\n\" + ", "+\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t// <META>\\r\\n\" + ", "+\t\t\"\t\tinStyle = tagName.equalsIgnoreCase(\\\"<STYLE\\\"); // keep track if in\\r\\n\" + ", "+\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t// <STYLE>\\r\\n\" + ", "+\t\t\"\t\tinImg = tagName.equalsIgnoreCase(\\\"<img\\\"); // keep track if in <IMG>\\r\\n\" + ", "+\t\t\"\t}\\r\\n\" + ", "+\t\t\"}\\r\\n\",", "+\t\tfalse /* do not repeat */", "+\t);"]}], "num": 56642}