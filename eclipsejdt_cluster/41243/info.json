{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "631918d592b895a5874bf50cf0ee830c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "407b891ca6972a25d0250a7200327058", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryMethod.java", "commitBeforeChange": "71abd877ad821a18101d4f0c04cd015f0a15dbfe", "commitAfterChange": "8245bd73c0aef7bf5f6de5def8941104b56db6f7", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public String[] getParameterNames() throws JavaModelException", "signatureAfterChange": " public String[] getParameterNames() throws JavaModelException", "diff": ["-\tif (fParameterNames == null) {", "+\tif (this.parameterNames == null) {", "-\t\t\tchar[][] parameterNames = mapper.getMethodParameterNames(this);", "+\t\t\tchar[][] paramNames = mapper.getMethodParameterNames(this);", "-\t\t\tif(parameterNames == null) {", "+\t\t\tif(paramNames == null) {", "-\t\t\t\tparameterNames = mapper.getMethodParameterNames(this);", "+\t\t\t\tparamNames = mapper.getMethodParameterNames(this);", "-\t\t\tif(parameterNames != null) {", "-\t\t\t\tfParameterNames = new String[parameterNames.length];", "-\t\t\t\tfor (int i = 0; i < parameterNames.length; i++) {", "-\t\t\t\t\tfParameterNames[i] = new String(parameterNames[i]);", "+\t\t\tif(paramNames != null) {", "+\t\t\t\tthis.parameterNames = new String[paramNames.length];", "+\t\t\t\tfor (int i = 0; i < paramNames.length; i++) {", "+\t\t\t\t\tthis.parameterNames[i] = new String(paramNames[i]);", "-\t\tif (fParameterNames == null) {", "+\t\tif (this.parameterNames == null) {", "-\t\t\tfParameterNames = new String[paramCount];", "+\t\t\tthis.parameterNames = new String[paramCount];", "-\t\t\t\tfParameterNames[i] = \"arg\" + i; //$NON-NLS-1$", "+\t\t\t\tthis.parameterNames[i] = \"arg\" + i; //$NON-NLS-1$", "-\treturn fParameterNames;", "+\treturn this.parameterNames;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "895c83dd8190a251d57a81371a2e9b0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "cdead094a9813fdba5ccda0ce2f9f48a99552dbc", "commitAfterChange": "3be4aa0b7d051355f329ce1003f3f4c0f7acfab2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate Expression parseArguments(TypeReference receiver) throws InvalidInputException", "signatureAfterChange": " \tprivate Expression parseArguments(TypeReference receiver) throws InvalidInputException", "diff": ["-\t\tint ptr = astPtr;", "-\t\tint lptr = astLengthPtr;", "+\t\tint ptr = this.astPtr;", "+\t\tint lptr = this.astLengthPtr;", "-\t\t\tchar[] memberName = identifierStack[0];", "+\t\t\tchar[] memberName = this.identifierStack[0];", "-\t\t\t\t\t\tJavadocAllocationExpression expr = new JavadocAllocationExpression(identifierPositionStack[0]);", "+\t\t\t\t\t\tJavadocAllocationExpression expr = new JavadocAllocationExpression(this.identifierPositionStack[0]);", "-\t\t\t\t\t\tJavadocMessageSend msg = new JavadocMessageSend(identifierStack[0], identifierPositionStack[0]);", "+\t\t\t\t\t\tJavadocMessageSend msg = new JavadocMessageSend(this.identifierStack[0], this.identifierPositionStack[0]);", "-\t\t\t\tint size = astLengthStack[astLengthPtr--];", "+\t\t\t\tint size = this.astLengthStack[this.astLengthPtr--];", "-\t\t\t\t\targuments[i] = (JavadocArgumentExpression) astStack[astPtr--];", "+\t\t\t\t\targuments[i] = (JavadocArgumentExpression) this.astStack[this.astPtr--];", "-\t\t\t\t\tJavadocAllocationExpression alloc = new JavadocAllocationExpression(identifierPositionStack[0]);", "+\t\t\t\t\tJavadocAllocationExpression alloc = new JavadocAllocationExpression(this.identifierPositionStack[0]);", "-\t\t\t\t\tJavadocMessageSend msg = new JavadocMessageSend(identifierStack[0], identifierPositionStack[0], arguments);", "+\t\t\t\t\tJavadocMessageSend msg = new JavadocMessageSend(this.identifierStack[0], this.identifierPositionStack[0], arguments);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c21926282cf3265895bcad1252d2769e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " protected void consumeArrayAccess(boolean unspecifiedReference)", "signatureAfterChange": " protected void consumeArrayAccess(boolean unspecifiedReference)", "diff": ["-\t\t\texpressionStack[expressionPtr] = ", "+\t\t\tthis.expressionStack[this.expressionPtr] = ", "-\t\t\t\t\texpressionStack[expressionPtr]);", "+\t\t\t\t\tthis.expressionStack[this.expressionPtr]);", "-\t\texpressionPtr--;", "-\t\texpressionLengthPtr--;", "+\t\tthis.expressionPtr--;", "+\t\tthis.expressionLengthPtr--;", "-\t\t\texpressionStack[expressionPtr] = ", "+\t\t\tthis.expressionStack[this.expressionPtr] = ", "-\t\t\t\t\texpressionStack[expressionPtr],", "-\t\t\t\t\texpressionStack[expressionPtr + 1]);", "+\t\t\t\t\tthis.expressionStack[this.expressionPtr],", "+\t\t\t\t\tthis.expressionStack[this.expressionPtr + 1]);", "-\texp.sourceEnd = endPosition;", "+\texp.sourceEnd = this.endPosition;"]}], "num": 41243}