{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0444b732522b2cfe1f2ad7d592d667a9", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78545afece0cdb56ecc1fa333d7c15b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void inexactParameterToVarargsMethod(MethodBinding method, InvocationSite location)", "signatureAfterChange": " public void ambiguousArgumentToVarargsMethod(MethodBinding method, InvocationSite location)", "diff": ["+public void ambiguousArgumentToVarargsMethod(MethodBinding method, InvocationSite location) {", "+\tTypeBinding lastParam = method.parameters[method.parameters.length-1];", "+\tif (method.isConstructor()) {", "+\t\tthis.handle(", "+\t\t\tIProblem.AmbiguousArgumentToVarargsConstructor,", "+\t\t\tnew String[] {new String(method.declaringClass.readableName()), typesAsString(method.isVarargs(), method.parameters, false), new String(lastParam.readableName())},", "+\t\t\tnew String[] {new String(method.declaringClass.shortReadableName()), typesAsString(method.isVarargs(), method.parameters, true), new String(lastParam.shortReadableName())},", "+\t\t\tlocation.sourceStart(),", "+\t\t\tlocation.sourceEnd());", "+\t} else {", "+\t\tthis.handle(", "+\t\t\tIProblem.AmbiguousArgumentToVarargsMethod,", "+\t\t\tnew String[] {new String(method.declaringClass.readableName()), new String(method.selector), typesAsString(method.isVarargs(), method.parameters, false), new String(lastParam.readableName())},", "+\t\t\tnew String[] {new String(method.declaringClass.shortReadableName()), new String(method.selector), typesAsString(method.isVarargs(), method.parameters, true), new String(lastParam.shortReadableName())},", "+\t\t\tlocation.sourceStart(),", "+\t\t\tlocation.sourceEnd());", "+\t}", "+}", "-}", "-public void inexactParameterToVarargsMethod(MethodBinding method, InvocationSite location) {", "-\tif (method.isConstructor()) {", "-\t\tthis.handle(", "-\t\t\tIProblem.InexactParameterToVarargsConstructor,", "-\t\t\tnew String[] {new String(method.declaringClass.readableName()), parametersAsString(method.parameters, false)},", "-\t\t\tnew String[] {new String(method.declaringClass.shortReadableName()), parametersAsString(method.parameters, true)},", "-\t\t\tlocation.sourceStart(),", "-\t\t\tlocation.sourceEnd());", "-\t} else {", "-\t\tthis.handle(", "-\t\t\tIProblem.InexactParameterToVarargsMethod,", "-\t\t\tnew String[] {new String(method.declaringClass.readableName()), new String(method.selector), parametersAsString(method.parameters, false)},", "-\t\t\tnew String[] {new String(method.declaringClass.shortReadableName()), new String(method.selector), parametersAsString(method.parameters, true)},", "-\t\t\tlocation.sourceStart(),", "-\t\t\tlocation.sourceEnd());", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4ce6e32f09c8a960785e5024c9ecdc3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "20306af2785b6993ef03f5b59102e1d76672145c", "commitAfterChange": "288301050e750c96e441bffa1d7a0c7b5ea96099", "methodNumberBeforeChange": 384, "methodNumberAfterChange": 384, "signatureBeforeChange": " public void varargsArgumentNeedCast(MethodBinding method, TypeBinding argumentType, InvocationSite location)", "signatureAfterChange": " public void varargsArgumentNeedCast(MethodBinding method, TypeBinding argumentType, InvocationSite location)", "diff": ["-\tTypeBinding lastParam = method.parameters[method.parameters.length-1];", "+\tif (this.options.getSeverity(CompilerOptions.VarargsArgumentNeedCast) == ProblemSeverities.Ignore) return;", "+\tArrayBinding varargsType = (ArrayBinding)method.parameters[method.parameters.length-1];", "-\t\t\tnew String[] {new String(argumentType.readableName()), new String(lastParam.readableName()), new String(method.declaringClass.readableName()), typesAsString(method.isVarargs(), method.parameters, false), },", "-\t\t\tnew String[] {new String(argumentType.shortReadableName()), new String(lastParam.shortReadableName()), new String(method.declaringClass.shortReadableName()), typesAsString(method.isVarargs(), method.parameters, true), },", "+\t\t\tnew String[] {", "+\t\t\t\t\tnew String(argumentType.readableName()), ", "+\t\t\t\t\tnew String(varargsType.readableName()), ", "+\t\t\t\t\tnew String(method.declaringClass.readableName()), ", "+\t\t\t\t\ttypesAsString(method.isVarargs(), method.parameters, false), ", "+\t\t\t\t\tnew String(varargsType.elementsType().readableName()), ", "+\t\t\t},", "+\t\t\tnew String[] {", "+\t\t\t\t\tnew String(argumentType.shortReadableName()), ", "+\t\t\t\t\tnew String(varargsType.shortReadableName()), ", "+\t\t\t\t\tnew String(method.declaringClass.shortReadableName()), ", "+\t\t\t\t\ttypesAsString(method.isVarargs(), method.parameters, true), ", "+\t\t\t\t\tnew String(varargsType.elementsType().shortReadableName()), ", "+\t\t\t},", "-\t\t\tnew String[] { new String(argumentType.readableName()), new String(lastParam.readableName()), new String(method.selector), typesAsString(method.isVarargs(), method.parameters, false), new String(method.declaringClass.readableName()), },", "-\t\t\tnew String[] { new String(argumentType.shortReadableName()), new String(lastParam.shortReadableName()), new String(method.selector), typesAsString(method.isVarargs(), method.parameters, true), new String(method.declaringClass.shortReadableName()), },", "+\t\t\tnew String[] { ", "+\t\t\t\t\tnew String(argumentType.readableName()), ", "+\t\t\t\t\tnew String(varargsType.readableName()), ", "+\t\t\t\t\tnew String(method.selector), ", "+\t\t\t\t\ttypesAsString(method.isVarargs(), method.parameters, false), ", "+\t\t\t\t\tnew String(method.declaringClass.readableName()), ", "+\t\t\t\t\tnew String(varargsType.elementsType().readableName()), ", "+\t\t\t},", "+\t\t\tnew String[] { ", "+\t\t\t\t\tnew String(argumentType.shortReadableName()), ", "+\t\t\t\t\tnew String(varargsType.shortReadableName()), ", "+\t\t\t\t\tnew String(method.selector), typesAsString(method.isVarargs(), method.parameters, true), ", "+\t\t\t\t\tnew String(method.declaringClass.shortReadableName()), ", "+\t\t\t\t\tnew String(varargsType.elementsType().shortReadableName()), ", "+\t\t\t},"]}], "num": 72573}