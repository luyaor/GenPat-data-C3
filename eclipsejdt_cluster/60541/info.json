{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8095bc25625ea57e6c0de656bb88d04f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0c2ea251a6515c5ccddd2d4ccb1d936", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "6b6471423b89c70a33d53654f3143292c15724dc", "commitAfterChange": "dbb5484f1c0506305bb2de3acc0db3501ec7c329", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public static Test suite()", "signatureAfterChange": "  public static Test suite()", "diff": ["+\treturn suite(new File(System.getProperty(\"inputDir\")), buildProfileString(), new HashMap());", "+}", "-\tTestSuite suite = new Suite(FormatterMassiveRegressionTests.class.getName());", "-\t\tStringBuffer buffer = new StringBuffer();", "-\t\tinitVersion(buffer);", "-\t\t", "-\t\tinitProfiles(buffer);", "-\t\t// Log date of test", "-\t\tlong start = System.currentTimeMillis();", "-\t\tSimpleDateFormat format = new SimpleDateFormat();", "-\t\tDate now = new Date(start);", "-\t\tbuffer.append(\"Test date : \");", "-\t\tbuffer.append(format.format(now));", "-\t\tbuffer.append(LINE_SEPARATOR);", "-", "-\t\t// Get input dir", "-\t\tbuffer.append(\"Input dir : \");", "-\t\tbuffer.append(INPUT_DIR);", "-", "-\t\t// Output to console to show startup", "-\t\tString firstBuffer = buffer.toString();", "-\t\tSystem.out.println(firstBuffer);", "-\t\tbuffer.setLength(0);", "-\t\tFile[] allFiles = ModelTestsUtil.getAllFiles(INPUT_DIR, filter);", "-\t\tbuffer.append(\"            \");", "-\t\tbuffer.append(MAX_FILES);", "-\t\tbuffer.append(\" java files found\");", "-\t\tbuffer.append(LINE_SEPARATOR);", "-\t\t// Init directories", "-\t\tinitDirectories(buffer);", "-//\t\tbuffer.append(\"Compare vs: \");", "-\t\tif (CAN_COMPARE) {", "-\t\t\tif (CLEAN) {", "-//\t\t\t\tbuffer.append(JDT_CORE_VERSION);", "-\t\t\t} else {", "-\t\t\t\tbuffer.append(\"Compare vs: \");", "-\t\t\t\tFile versionFile = new File(OUTPUT_DIR, \"version.txt\");", "-\t\t\t\tif (versionFile.exists()) {", "-\t\t\t\t\tString fileContent = Util.fileContent(versionFile.getAbsolutePath());", "-\t\t\t\t\tif (TEMP_OUTPUT != null) {", "-\t\t\t\t\t\tbuffer.append(TEMP_OUTPUT);", "-\t\t\t\t\t\tbuffer.append(\" on top of \");", "-\t\t\t\t\t}", "-\t\t\t\t\tbuffer.append(fileContent);", "-\t\t\t\t} else {", "-\t\t\t\t\tbuffer.append(\"???\");", "-\t\t\t\t}", "-\t\t\t}", "-\t\t} else {", "-\t\t\tbuffer.append(\"Compare vs: none\");", "-\t\t}", "-", "-\t\t// Write logs", "-\t\tSystem.out.println(buffer.toString());", "-\t\tif (LOG_STREAM != null) {", "-\t\t\tLOG_STREAM.println(firstBuffer);", "-\t\t\tLOG_STREAM.println(buffer.toString());", "-\t\t\tLOG_STREAM.flush();", "-\t\t}", "-\t\t", "-\t\tif (CLEAN) {", "-\t\t\tsuite.addTest(new FormatterMassiveRegressionTests());", "-//\t\t\tsuite.addTest(new FormatterMassiveRegressionTests(allFiles));", "-\t\t}", "-\t\t", "-\t\t\t\tsuite.addTest(new FormatterMassiveRegressionTests(allFiles[i], i, false/*do not compare while cleaning*/));", "-\t\t\t\tsuite.addTest(new FormatterMassiveRegressionTests(allFiles[i], i, CAN_COMPARE));", "-    \t// skip"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b75689acd594421b7dc4e7433e0f86a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "6b6471423b89c70a33d53654f3143292c15724dc", "commitAfterChange": "dbb5484f1c0506305bb2de3acc0db3501ec7c329", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public static Test suite()", "signatureAfterChange": "  protected static Test suite(File inputDir, String profile, Map directories)", "diff": ["-\tTestSuite suite = new Suite(FormatterMassiveRegressionTests.class.getName());", "+protected static Test suite(File inputDir, String profile, Map directories) {", "+", "+\tString name = \"FormatterMassiveRegressionTests on \"+inputDir.getName();", "+\tif (profile == null || profile.length() == 0) {", "+\t\tname += \" \" + profile;", "+\t}", "+\tTestSuite suite = new Suite(name);", "-\t\tStringBuffer buffer = new StringBuffer();", "-\t\tinitVersion(buffer);", "-\t\t", "+\t\tinitVersion();", "+", "-\t\tinitProfiles(buffer);", "+\t\tint profiles = initProfiles(profile);", "-\t\t// Log date of test", "-\t\tlong start = System.currentTimeMillis();", "-\t\tSimpleDateFormat format = new SimpleDateFormat();", "-\t\tDate now = new Date(start);", "-\t\tbuffer.append(\"Test date : \");", "-\t\tbuffer.append(format.format(now));", "-\t\tbuffer.append(LINE_SEPARATOR);", "-", "-\t\t// Get input dir", "-\t\tbuffer.append(\"Input dir : \");", "-\t\tbuffer.append(INPUT_DIR);", "-", "-\t\t// Output to console to show startup", "-\t\tString firstBuffer = buffer.toString();", "-\t\tSystem.out.println(firstBuffer);", "-\t\tbuffer.setLength(0);", "+\t\t// Init directories", "+\t\tinitDirectories(inputDir, profiles);", "-\t\tFile[] allFiles = ModelTestsUtil.getAllFiles(INPUT_DIR, filter);", "+\t\tFile[] allFiles = (File[]) directories.get(inputDir);", "+\t\tif (allFiles == null) {", "+\t\t\tSystem.out.print(\"Get all files from \"+inputDir+\"...\");", "+\t\t\tallFiles = ModelTestsUtil.getAllFiles(inputDir, filter);", "+\t\t\tdirectories.put(inputDir, allFiles);", "+\t\t\tSystem.out.println(\"done\");", "+\t\t}", "-\t\tbuffer.append(\"            \");", "-\t\tbuffer.append(MAX_FILES);", "-\t\tbuffer.append(\" java files found\");", "-\t\tbuffer.append(LINE_SEPARATOR);", "-\t\t// Init directories", "-\t\tinitDirectories(buffer);", "-//\t\tbuffer.append(\"Compare vs: \");", "-\t\tif (CAN_COMPARE) {", "-\t\t\tif (CLEAN) {", "-//\t\t\t\tbuffer.append(JDT_CORE_VERSION);", "-\t\t\t} else {", "-\t\t\t\tbuffer.append(\"Compare vs: \");", "-\t\t\t\tFile versionFile = new File(OUTPUT_DIR, \"version.txt\");", "-\t\t\t\tif (versionFile.exists()) {", "-\t\t\t\t\tString fileContent = Util.fileContent(versionFile.getAbsolutePath());", "-\t\t\t\t\tif (TEMP_OUTPUT != null) {", "-\t\t\t\t\t\tbuffer.append(TEMP_OUTPUT);", "-\t\t\t\t\t\tbuffer.append(\" on top of \");", "-\t\t\t\t\t}", "-\t\t\t\t\tbuffer.append(fileContent);", "-\t\t\t\t} else {", "-\t\t\t\t\tbuffer.append(\"???\");", "-\t\t\t\t}", "-\t\t\t}", "-\t\t} else {", "-\t\t\tbuffer.append(\"Compare vs: none\");", "-\t\t}", "-", "-\t\t// Write logs", "-\t\tSystem.out.println(buffer.toString());", "-\t\tif (LOG_STREAM != null) {", "-\t\t\tLOG_STREAM.println(firstBuffer);", "-\t\t\tLOG_STREAM.println(buffer.toString());", "-\t\t\tLOG_STREAM.flush();", "-\t\t}", "-\t\t", "-\t\tif (CLEAN) {", "-\t\t\tsuite.addTest(new FormatterMassiveRegressionTests());", "-//\t\t\tsuite.addTest(new FormatterMassiveRegressionTests(allFiles));", "-\t\t}", "-\t\t", "+//\t\tif (CLEAN) {", "+//\t\t\tsuite.addTest(new FormatterMassiveRegressionTests(profiles));", "+//\t\t}", "+", "-\t\t\t\tsuite.addTest(new FormatterMassiveRegressionTests(allFiles[i], i, false/*do not compare while cleaning*/));", "+\t\t\t\tsuite.addTest(new FormatterMassiveRegressionTests(inputDir, allFiles[i], i, profiles, false/*do not compare while cleaning*/));", "-\t\t\t\tsuite.addTest(new FormatterMassiveRegressionTests(allFiles[i], i, CAN_COMPARE));", "+\t\t\t\tsuite.addTest(new FormatterMassiveRegressionTests(inputDir, allFiles[i], i, profiles, CAN_COMPARE));", "-    \t// skip", "+    \te.printStackTrace();"]}], "num": 60541}