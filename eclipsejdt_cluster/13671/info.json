{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d6501e0c3b053c5db6d2ad3514f35af9", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ede0f75c5366d8fba72bdec2ba660de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "bdc003280094677782597954dd2d58945742ba73", "commitAfterChange": "a5428774cbd04bd7c443f0103cafd574e0be40b3", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " private ICompilationUnit[] getWorkingCopies()", "signatureAfterChange": " private ICompilationUnit[] getWorkingCopies()", "diff": ["-\t\tcopies = this.workingCopies;", "+\t\tif (this.workingCopyOwner == null) {", "+\t\t\tcopies = JavaModelManager.getJavaModelManager().getWorkingCopies(DefaultWorkingCopyOwner.PRIMARY, false/*don't add primary WCs a second time*/);", "+\t\t\tif (copies == null) {", "+\t\t\t\tcopies = this.workingCopies;", "+\t\t\t} else {", "+\t\t\t\tHashMap pathToCUs = new HashMap();", "+\t\t\t\tfor (int i = 0, length = copies.length; i < length; i++) {", "+\t\t\t\t\tICompilationUnit unit = copies[i];", "+\t\t\t\t\tpathToCUs.put(unit.getPath(), unit);", "+\t\t\t\t}", "+\t\t\t\tfor (int i = 0, length = this.workingCopies.length; i < length; i++) {", "+\t\t\t\t\tICompilationUnit unit = this.workingCopies[i];", "+\t\t\t\t\tpathToCUs.put(unit.getPath(), unit);", "+\t\t\t\t}", "+\t\t\t\tint length = pathToCUs.size();", "+\t\t\t\tcopies = new ICompilationUnit[length];", "+\t\t\t\tpathToCUs.values().toArray(copies);", "+\t\t\t}", "+\t\t} else {", "+\t\t\tcopies = this.workingCopies;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2f1bf11fe898dae8d432837bd27cc9e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "eedafe9176d5ca60193623550822839844fd4aae", "commitAfterChange": "16a0328cb89c7e4d508e8edfc85e1af4879c13c7", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public char[] genericSignature()", "signatureAfterChange": " public char[] genericSignature()", "diff": ["-\t// only append thrown exception if any is generic/parameterized", "-\tfor (int i = 0, length = this.thrownExceptions.length; i < length; i++) {", "+\t", "+\t// only append thrown exceptions if any is generic/parameterized", "+\tboolean needExceptionSignatures = false;", "+\tint length = this.thrownExceptions.length;", "+\tfor (int i = 0; i < length; i++) {", "-\t\t\tfor (int j = 0; j < length; j++) {", "-\t\t\t\tsig.append(this.thrownExceptions[j].genericTypeSignature());", "-\t\t\t}", "+\t\t\tneedExceptionSignatures = true;", "+\t\t}", "+\t}", "+\tif (needExceptionSignatures) {", "+\t\tfor (int i = 0; i < length; i++) {", "+\t\t\tsig.append(this.thrownExceptions[i].genericTypeSignature());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b923f86942f394c1e0334df095bcd0b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "04fb6202efdc761094aeadbfae786f791930dbc9", "commitAfterChange": "574419ea1bfec3547ee209064f26cc8514bc0721", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void searchAllTypeNames( \tIWorkspace workspace, \tchar[] packageName,  \tchar[] typeName, \tint matchMode,  \tboolean isCaseSensitive, \tint searchFor,  \tIJavaSearchScope scope,  \tfinal ITypeNameRequestor nameRequestor, \tint waitingPolicy, \tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": " public void searchAllTypeNames( \tIWorkspace workspace, \tchar[] packageName,  \tchar[] typeName, \tint matchMode,  \tboolean isCaseSensitive, \tint searchFor,  \tIJavaSearchScope scope,  \tfinal ITypeNameRequestor nameRequestor, \tint waitingPolicy, \tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\tif (this.workingCopies != null) {", "-\t\tfor (int i = 0, length = this.workingCopies.length; i < length; i++) {", "-\t\t\tICompilationUnit workingCopy = this.workingCopies[i];", "+\tICompilationUnit[] copies = getWorkingCopies();", "+\tif (copies != null) {", "+\t\tfor (int i = 0, length = copies.length; i < length; i++) {", "+\t\t\tICompilationUnit workingCopy = copies[i];", "-\t\tif (this.workingCopies != null) {", "-\t\t\tfor (int i = 0, length = this.workingCopies.length; i < length; i++) {", "-\t\t\t\tICompilationUnit workingCopy = this.workingCopies[i];", "+\t\tif (copies != null) {", "+\t\t\tfor (int i = 0, length = copies.length; i < length; i++) {", "+\t\t\t\tICompilationUnit workingCopy = copies[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3521c13e0f6be8e1fa3397006ad7674", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "6b41f376eb5bd5fa3046b8ac6fedca194080b0bd", "commitAfterChange": "262490d9212f700275b0f63ee471ae3ff354e58f", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic void locateMatches( \t\tString[] filePaths,  \t\tIWorkspace workspace, \t\tIWorkingCopy[] workingCopies) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic void locateMatches( \t\tString[] filePaths,  \t\tIWorkspace workspace, \t\tIWorkingCopy[] copies) \t\tthrows JavaModelException", "diff": ["-\t\tIWorkingCopy[] workingCopies)", "+\t\tIWorkingCopy[] copies)", "-\t\t\tif (workingCopies != null) {", "+\t\t\tif (copies != null) {", "-\t\t\t\tfor (int i = 0, length = workingCopies.length; i < length; i++) {", "-\t\t\t\t\tIWorkingCopy wc = workingCopies[i];", "+\t\t\t\tfor (int i = 0, length = copies.length; i < length; i++) {", "+\t\t\t\t\tIWorkingCopy wc = copies[i];", "-\t\t\tthis.workingCopies = workingCopies;", "+\t\t\tthis.workingCopies = copies;", "-\t\t\tif (workingCopies != null && (wcLength = workingCopies.length) > 0) {", "+\t\t\tif (copies != null && (wcLength = copies.length) > 0) {", "-\t\t\t\t\tIWorkingCopy workingCopy = workingCopies[i];", "+\t\t\t\t\tIWorkingCopy workingCopy = copies[i];", "-\t\t\tthis.potentialMatches = new PotentialMatchSet();", "+\t\t\tthis.matchSet = new PotentialMatchSet();", "-\t\t\t\t\t\t\tthis.potentialMatches = new PotentialMatchSet();", "+\t\t\t\t\t\t\tthis.matchSet = new PotentialMatchSet();", "-\t\t\t\tthis.potentialMatches = new PotentialMatchSet();", "+\t\t\t\tthis.matchSet = new PotentialMatchSet();"]}], "num": 13671}