{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "76023e4e99118755672a4f2e79569fc2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "232f244a9a6cb570de9e4a2d7343c8b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "70416b46b1375461a92d89ffa1cb077778dc6e86", "commitAfterChange": "0c53505dd9d8f221929a96f99e04ff55bfc4fc05", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tpublic void reportMethodDeclaration( \t\tAbstractMethodDeclaration methodDeclaration, \t\tIJavaElement parent, \t\tint accuracy) \t\tthrows CoreException", "signatureAfterChange": " \tpublic void reportMethodDeclaration( \t\tAbstractMethodDeclaration methodDeclaration, \t\tIJavaElement parent, \t\tint accuracy) \t\tthrows CoreException", "diff": ["-\t */", "-\tpublic void reportMethodDeclaration(", "-\t\tAbstractMethodDeclaration methodDeclaration,", "-\t\tIJavaElement parent,", "-\t\tint accuracy)", "-\t\tthrows CoreException {", "-", "-\t\tIJavaElement enclosingElement;", "-\t\tif (parent instanceof IType) {", "-\t\t\t// create method handle", "-\t\t\tenclosingElement = this.createMethodHandle(methodDeclaration, (IType)parent);", "-\t\t\tif (enclosingElement == null) return;", "-\t\t} else {", "-\t\t\tenclosingElement = parent;", "-\t\t}", "-", "-\t\t// compute source positions of the selector ", "-\t\tScanner scanner = parser.scanner;", "-\t\tint nameSourceStart = methodDeclaration.sourceStart;", "-\t\tscanner.setSource(", "-\t\t\tthis.currentMatchingOpenable.getSource());", "-\t\tscanner.resetTo(nameSourceStart, methodDeclaration.sourceEnd);", "-\t\ttry {", "-\t\t\tscanner.getNextToken();", "-\t\t} catch (InvalidInputException e) {", "-\t\t}", "-\t\tint nameSourceEnd = scanner.currentPosition - 1;", "-", "-\t\t// accept method declaration", "-\t\tthis.report(nameSourceStart, nameSourceEnd, enclosingElement, accuracy);", "-\t}", "+\t */", "+\tpublic void reportMethodDeclaration(", "+\t\tAbstractMethodDeclaration methodDeclaration,", "+\t\tIJavaElement parent,", "+\t\tint accuracy)", "+\t\tthrows CoreException {", "+", "+\t\tIJavaElement enclosingElement;", "+\t\tif (parent instanceof IType) {", "+\t\t\t// create method handle", "+\t\t\tenclosingElement = this.createMethodHandle(methodDeclaration, (IType)parent);", "+\t\t\tif (enclosingElement == null) return;", "+\t\t} else {", "+\t\t\tenclosingElement = parent;", "+\t\t}", "+", "+\t\t// compute source positions of the selector ", "+\t\tScanner scanner = parser.scanner;", "+\t\tint nameSourceStart = methodDeclaration.sourceStart;", "+\t\tscanner.setSource(", "+\t\t\tthis.currentPotentialMatch.getContents());", "+\t\tscanner.resetTo(nameSourceStart, methodDeclaration.sourceEnd);", "+\t\ttry {", "+\t\t\tscanner.getNextToken();", "+\t\t} catch (InvalidInputException e) {", "+\t\t}", "+\t\tint nameSourceEnd = scanner.currentPosition - 1;", "+", "+\t\t// accept method declaration", "+\t\tthis.report(nameSourceStart, nameSourceEnd, enclosingElement, accuracy);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d7de1bbca3b86c1db0e20d6a23cf10f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 121, "methodNumberAfterChange": 121, "signatureBeforeChange": " \tpublic void test099()", "signatureAfterChange": " \tpublic void test099()", "diff": ["-\t\tpreferences.insert_space_before_method_declaration_open_paren = true;", "-\t\tpreferences.insert_space_before_for_paren = true;", "+\t\tpreferences.insert_space_before_opening_paren_in_method_declaration = true;", "+\t\tpreferences.insert_space_before_opening_paren_in_for = true;"]}], "num": 46823}