{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "644dd4a770381deb48fea6c660ff162f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b8b1de8e7f57653caf81404b14846c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "009f20126c1d3488d55fd03939439082cc2b8500", "commitAfterChange": "221d108d3944a4b3be482e01878be27efb774a39", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static boolean checkInvocationArguments(BlockScope scope, Expression receiver, TypeBinding receiverType, MethodBinding method, Expression[] arguments, TypeBinding[] argumentTypes, boolean argsContainCast, InvocationSite invocationSite)", "signatureAfterChange": " \tpublic static boolean checkInvocationArguments(BlockScope scope, Expression receiver, TypeBinding receiverType, MethodBinding method, Expression[] arguments, TypeBinding[] argumentTypes, boolean argsContainCast, InvocationSite invocationSite)", "diff": ["-\t\t    scope.problemReporter().unsafeRawInvocation((ASTNode)invocationSite, method);", "+\t\t\tif (scope.compilerOptions().reportUnavoidableGenericTypeProblems || receiver == null || !receiver.forcedToBeRaw(scope.referenceContext())) {", "+\t\t\t\tscope.problemReporter().unsafeRawInvocation((ASTNode)invocationSite, method);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9251d7c426a476de4dba435277b898ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "009f20126c1d3488d55fd03939439082cc2b8500", "commitAfterChange": "221d108d3944a4b3be482e01878be27efb774a39", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\t\tscope.problemReporter().unsafeCast(this, scope);", "+\t\t\t\t\t\tif (scope.compilerOptions().reportUnavoidableGenericTypeProblems || !this.expression.forcedToBeRaw(scope.referenceContext())) {", "+\t\t\t\t\t\t\tscope.problemReporter().unsafeCast(this, scope);", "+\t\t\t\t\t\t}"]}], "num": 21285}