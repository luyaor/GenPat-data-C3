{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3a94413b685f4fcb748fcd4b051ed10d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d96bf5d550766fcc8c124c07ebbbb0f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "  public void testCompletionMethodDeclaration5() throws JavaModelException", "signatureAfterChange": "  public void testCompletionMethodDeclaration5() throws JavaModelException", "diff": ["-", "-public void testCompletionMethodDeclaration5() throws JavaModelException {", "-", "-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionMethodDeclaration5.java\");", "-", "-\tString str = cu.getSource();", "-\tString completeBehind = \"new CompletionSuperClass() {\";", "-\tint cursorLocation = str.indexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-", "-\tif(CompletionEngine.NO_TYPE_COMPLETION_ON_EMPTY_TOKEN) {", "-\t\tassertEquals(", "-\t\t\t\"should have one completion\", ", "-\t\t\t\"element:clone    completion:protected Object clone() throws CloneNotSupportedException    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\t\"element:eqFoo    completion:public int eqFoo(int a,Object b)    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\t\"element:equals    completion:public boolean equals(Object obj)    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\t\"element:finalize    completion:protected void finalize() throws Throwable    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\t\"element:hashCode    completion:public int hashCode()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\t\"element:toString    completion:public String toString()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE+ R_NON_RESTRICTED),", "-\t} else {", "-\t\tassertEquals(", "-\t\t\t\"should have one completion\", ", "-\t\t\t\"element:CompletionMethodDeclaration5    completion:CompletionMethodDeclaration5    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\t\"element:clone    completion:protected Object clone() throws CloneNotSupportedException    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\t\"element:eqFoo    completion:public int eqFoo(int a,Object b)    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\t\"element:equals    completion:public boolean equals(Object obj)    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\t\"element:finalize    completion:protected void finalize() throws Throwable    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\t\"element:hashCode    completion:public int hashCode()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\t\"element:toString    completion:public String toString()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE+ R_NON_RESTRICTED),", "-\t\t\trequestor.getResults());", "+public void testCompletionMethodDeclaration5() throws JavaModelException {", "+\tICompilationUnit superClass = null;", "+\ttry {", "+\t\tsuperClass = getWorkingCopy(", "+\t            \"/Completion/src/CompletionSuperClass.java\",", "+\t            \"public class CompletionSuperClass{\\n\" +", "+\t            \"\tpublic class Inner {}\\n\" +", "+\t            \"\tpublic int eqFoo(int a,Object b){\\n\" +", "+\t            \"\t\treturn 1;\\n\" +", "+\t            \"\t}\\n\" +", "+\t            \"}\");", "+\t\t", "+\t\tthis.wc = getWorkingCopy(", "+\t            \"/Completion/src/CompletionMethodDeclaration5.java\",", "+\t            \"public class CompletionMethodDeclaration5 {\\n\" +", "+\t            \"\tpublic static void main(String[] args) {\\n\" +", "+\t            \"\t\tnew CompletionSuperClass() {\\n\" +", "+\t            \"\t}\\n\" +", "+\t            \"\\n\" +", "+\t            \"}\");", "+\t    ", "+\t    ", "+\t    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+\t    String str = this.wc.getSource();", "+\t    String completeBehind = \"new CompletionSuperClass() {\";", "+\t    int cursorLocation = str.indexOf(completeBehind) + completeBehind.length();", "+\t    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "+\t", "+\t    if(CompletionEngine.NO_TYPE_COMPLETION_ON_EMPTY_TOKEN) {", "+\t\t\tassertResults(", "+\t\t\t\t\"[POTENTIAL_METHOD_DECLARATION]{, LCompletionSuperClass;, ()V, , null, \"+(R_DEFAULT + R_INTERESTING + R_NON_RESTRICTED)+\"}\\n\" +", "+\t\t\t\t\"clone[METHOD_DECLARATION]{protected Object clone() throws CloneNotSupportedException, Ljava.lang.Object;, ()Ljava.lang.Object;, clone, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\t\"eqFoo[METHOD_DECLARATION]{public int eqFoo(int a,Object b), LCompletionSuperClass;, (ILjava.lang.Object;)I, eqFoo, (a, b), \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\t\"equals[METHOD_DECLARATION]{public boolean equals(Object obj), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, (obj), \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\t\"finalize[METHOD_DECLARATION]{protected void finalize() throws Throwable, Ljava.lang.Object;, ()V, finalize, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\t\"hashCode[METHOD_DECLARATION]{public int hashCode(), Ljava.lang.Object;, ()I, hashCode, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\t\"toString[METHOD_DECLARATION]{public String toString(), Ljava.lang.Object;, ()Ljava.lang.String;, toString, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE+ R_NON_RESTRICTED)+ \"}\",", "+\t\t\t\trequestor.getResults());", "+\t\t} else {", "+\t\t\tassertResults(", "+\t\t\t\t\"[POTENTIAL_METHOD_DECLARATION]{, LCompletionSuperClass;, ()V, , null, \"+(R_DEFAULT + R_INTERESTING + R_NON_RESTRICTED)+\"}\\n\" +", "+\t\t\t\t\"CompletionMethodDeclaration5[TYPE_REF]{CompletionMethodDeclaration5, , LCompletionMethodDeclaration5;, null, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\t\"clone[METHOD_DECLARATION]{protected Object clone() throws CloneNotSupportedException, Ljava.lang.Object;, ()Ljava.lang.Object;, clone, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\t\"eqFoo[METHOD_DECLARATION]{public int eqFoo(int a,Object b), LCompletionSuperClass;, (ILjava.lang.Object;)I, eqFoo, (a, b), \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\t\"equals[METHOD_DECLARATION]{public boolean equals(Object obj), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, (obj), \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\t\"finalize[METHOD_DECLARATION]{protected void finalize() throws Throwable, Ljava.lang.Object;, ()V, finalize, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\t\"hashCode[METHOD_DECLARATION]{public int hashCode(), Ljava.lang.Object;, ()I, hashCode, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\t\"toString[METHOD_DECLARATION]{public String toString(), Ljava.lang.Object;, ()Ljava.lang.String;, toString, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE+ R_NON_RESTRICTED)+ \"}\",", "+\t\t\t\trequestor.getResults());", "+\t\t}", "+\t} finally {", "+\t\tif(superClass != null) {", "+\t\t\tsuperClass.discardWorkingCopy();", "+\t\t}", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe66b16b88c7810a25c916219f21ddb8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 123, "methodNumberAfterChange": 123, "signatureBeforeChange": " public void testCompletionAbstractMethodRelevance1() throws JavaModelException", "signatureAfterChange": " public void testCompletionAbstractMethodRelevance1() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionAbstractMethodRelevance1.java\");", "-", "-\tString str = cu.getSource();", "-\tString completeBehind = \"foo\";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-", "-\tassertEquals(", "-\t\t\"element:foo1    completion:public void foo1()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:foo2    completion:public void foo2()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_ABSTRACT_METHOD + R_NON_STATIC_OVERIDE + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:foo3    completion:public void foo3()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE+ R_NON_RESTRICTED),", "-\t\trequestor.getResults());", "+\tICompilationUnit superClass = null;", "+\ttry {", "+\t\tsuperClass = getWorkingCopy(", "+\t            \"/Completion/src/CompletionAbstractSuperClass.java\",", "+\t            \"public abstract class CompletionAbstractSuperClass {\\n\"+", "+\t            \"\tpublic void foo1(){}\\n\"+", "+\t            \"\tpublic abstract void foo2();\\n\"+", "+\t            \"\tpublic void foo3(){}\\n\"+", "+\t            \"}\");", "+\t\t", "+\t\tthis.wc = getWorkingCopy(", "+\t            \"/Completion/src/CompletionAbstractMethodRelevance1.java\",", "+\t            \"public class CompletionAbstractMethodRelevance1 extends CompletionAbstractSuperClass {\\n\"+", "+\t            \"\tfoo\\n\"+", "+\t            \"}\");", "+\t    ", "+\t    ", "+\t    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+\t    String str = this.wc.getSource();", "+\t    String completeBehind = \"foo\";", "+\t    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+\t    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "+\t", "+\t\tassertResults(", "+\t\t\t\"foo[POTENTIAL_METHOD_DECLARATION]{foo, LCompletionAbstractMethodRelevance1;, ()V, foo, null, \"+(R_DEFAULT + R_INTERESTING + R_NON_RESTRICTED)+\"}\\n\" +", "+\t\t\t\"foo1[METHOD_DECLARATION]{public void foo1(), LCompletionAbstractSuperClass;, ()V, foo1, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE + R_NON_RESTRICTED)+\"}\\n\" +", "+\t\t\t\"foo3[METHOD_DECLARATION]{public void foo3(), LCompletionAbstractSuperClass;, ()V, foo3, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE + R_NON_RESTRICTED)+\"}\\n\" +", "+\t\t\t\"foo2[METHOD_DECLARATION]{public void foo2(), LCompletionAbstractSuperClass;, ()V, foo2, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_ABSTRACT_METHOD + R_NON_STATIC_OVERIDE+ R_NON_RESTRICTED)+\"}\",", "+\t\t\trequestor.getResults());", "+\t} finally {", "+\t\tif(superClass != null) {", "+\t\t\tsuperClass.discardWorkingCopy();", "+\t\t}", "+\t}"]}], "num": 68606}