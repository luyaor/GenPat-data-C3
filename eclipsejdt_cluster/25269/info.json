{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "829308ffa5e4b5e64743868016b9d931", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d7e37605b20b827454014d09b824c2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/OrLocator.java", "commitBeforeChange": "11d9bc69677fa9c8e3ad183264b865451dc15a16", "commitAfterChange": "0aef5635cdda5f8b487e6520930c462feef51cd5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void match(AstNode node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(AstNode node, MatchingNodeSet nodeSet)", "diff": ["-public void match(AstNode node, MatchingNodeSet nodeSet) {", "-\tfor (int i = 0, length = this.patternLocators.length; i < length; i++)", "-\t\tthis.patternLocators[i].match(node, nodeSet);", "+public int match(AstNode node, MatchingNodeSet nodeSet) {", "+\tint level = IMPOSSIBLE_MATCH;", "+\tfor (int i = 0, length = this.patternLocators.length; i < length; i++) {", "+\t\tint newLevel = this.patternLocators[i].match(node, nodeSet);", "+\t\tif (newLevel > level) {", "+\t\t\tif (newLevel == ACCURATE_MATCH) return ACCURATE_MATCH;", "+\t\t\tlevel = newLevel;", "+\t\t}", "+\t}", "+\treturn level;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71d6f1127a041493a333703e2a178970", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/OrLocator.java", "commitBeforeChange": "11d9bc69677fa9c8e3ad183264b865451dc15a16", "commitAfterChange": "0aef5635cdda5f8b487e6520930c462feef51cd5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void match(ConstructorDeclaration node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(ConstructorDeclaration node, MatchingNodeSet nodeSet)", "diff": ["-public void match(ConstructorDeclaration node, MatchingNodeSet nodeSet) {", "-\tfor (int i = 0, length = this.patternLocators.length; i < length; i++)", "-\t\tthis.patternLocators[i].match(node, nodeSet);", "+public int match(ConstructorDeclaration node, MatchingNodeSet nodeSet) {", "+\tint level = IMPOSSIBLE_MATCH;", "+\tfor (int i = 0, length = this.patternLocators.length; i < length; i++) {", "+\t\tint newLevel = this.patternLocators[i].match(node, nodeSet);", "+\t\tif (newLevel > level) {", "+\t\t\tif (newLevel == ACCURATE_MATCH) return ACCURATE_MATCH;", "+\t\t\tlevel = newLevel;", "+\t\t}", "+\t}", "+\treturn level;"]}], "num": 25269}