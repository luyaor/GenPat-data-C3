{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8c85fccfcbf6e53b717c089de2806016", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0009ca2c701e6bd21771776755a922c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/InstanceofExpression.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Type getRightOperand()", "signatureAfterChange": "  \tpublic Type getRightOperand()", "diff": ["-\t\tif (rightOperand  == null) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetRightOperand(new SimpleType(getAST()));", "-\t\t\tgetAST().setModificationCount(count);", "+\t\tif (this.rightOperand  == null) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.rightOperand= new SimpleType(this.ast);", "+\t\t\tpostLazyInit(this.rightOperand, RIGHT_OPERAND_PROPERTY);", "-\t\treturn rightOperand;", "+\t\treturn this.rightOperand;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59ae372d0b2f5662d8aea5a65b766304", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/InfixExpression.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic Expression getRightOperand()", "signatureAfterChange": "  \tpublic Expression getRightOperand()", "diff": ["-\t\tif (rightOperand  == null) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetRightOperand(new SimpleName(getAST()));", "-\t\t\tgetAST().setModificationCount(count);", "+\t\tif (this.rightOperand  == null) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.rightOperand= new SimpleName(this.ast);", "+\t\t\tpostLazyInit(this.rightOperand, RIGHT_OPERAND_PROPERTY);", "-\t\treturn rightOperand;", "+\t\treturn this.rightOperand;"]}], "num": 32682}