{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "76f9e1f1f31fe85d8411bf9714e6a81d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00bf970538c03d91a5eaa69b6148193e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ExceptionHandlingFlowContext.java", "commitBeforeChange": "8b644ce068ecf49daa5da8af14e814933ab3df61", "commitAfterChange": "23872cdac6fbbd78479a7f309cf6a923f8b64047", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public ExceptionHandlingFlowContext( \t\tFlowContext parent, \t\tTryStatement tryStatement, \t\tReferenceBinding[] handledExceptions, \t\tint [] exceptionToCatchBlockMap, \t\tFlowContext initializationParent, \t\tBlockScope scope, \t\tFlowInfo flowInfo)", "signatureAfterChange": " public ExceptionHandlingFlowContext( \t\tFlowContext parent, \t\tTryStatement tryStatement, \t\tReferenceBinding[] handledExceptions, \t\tint [] exceptionToCatchBlockMap, \t\tFlowContext initializationParent, \t\tBlockScope scope, \t\tFlowInfo flowInfo)", "diff": ["-\tthis.initsOnFinally = flowInfo.unconditionalCopy();", "+\tUnconditionalFlowInfo unconditionalCopy = flowInfo.unconditionalCopy();", "+\tunconditionalCopy.iNBit = -1L;", "+\tunconditionalCopy.iNNBit = -1L;", "+\tthis.initsOnFinally = unconditionalCopy;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "594bb7ba4fdbd3e298cfcbfe465a2172", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "afec7d4a120ad9d3de76bf79cb0366f8fe30669d", "commitAfterChange": "57c6d386f529d0e8572acc77526ab668fb7c3818", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\tUnconditionalFlowInfo initsBeforeReturn = insideSubContext.initsOnReturn.copy().unconditionalInits();", "-\t\tinitsBeforeReturn.addInitializationsFrom(subInfo);", "+\t\tFlowInfo initsBeforeReturn = insideSubContext.initsOnReturn.copy().addInitializationsFrom(subInfo);"]}], "num": 6623}