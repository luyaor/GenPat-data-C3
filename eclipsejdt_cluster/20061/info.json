{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0f15a649aa835ae9aff38296e2a02351", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c97c59dddcbc975ee1d670d0a2fcca7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\tif (isTypeUseDeprecated((TypeBinding) binding, scope))", "-\t\t\t\t\t\tscope.problemReporter().deprecatedType((TypeBinding) binding, this);", "-\t\t\t\t\treturn this.resolvedType = (TypeBinding) binding;", "+\t\t\t\t\tTypeBinding type = (TypeBinding)binding;", "+\t\t\t\t\tif (isTypeUseDeprecated(type, scope))", "+\t\t\t\t\t\tscope.problemReporter().deprecatedType(type, this);", "+\t\t\t\t\t// check raw type", "+\t\t\t\t\tif (type.isArrayType()) {", "+\t\t\t\t\t    TypeBinding leafComponentType = type.leafComponentType();", "+\t\t\t\t\t    if (leafComponentType.isGenericType()) { // raw type", "+\t\t\t\t\t        return this.resolvedType = scope.createArrayType(scope.environment().createRawType((ReferenceBinding)leafComponentType, null), type.dimensions());", "+\t\t\t\t\t    }", "+\t\t\t\t\t} else if (type.isGenericType()) {", "+\t\t\t\t        return this.resolvedType = scope.environment().createRawType((ReferenceBinding)type, null); // raw type", "+\t\t\t\t\t}\t\t", "+\t\t\t\t\treturn this.resolvedType = type;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8211af25d0054b40fd73c017e0e367e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\tif (isTypeUseDeprecated((TypeBinding) binding, scope))", "-\t\t\t\t\t\tscope.problemReporter().deprecatedType((TypeBinding) binding, this);", "-\t\t\t\t\treturn this.resolvedType = (TypeBinding) binding;", "+\t\t\t\t    TypeBinding type = (TypeBinding) binding;", "+\t\t\t\t\tif (isTypeUseDeprecated(type, scope))", "+\t\t\t\t\t\tscope.problemReporter().deprecatedType(type, this);", "+\t\t\t\t\t// check raw type", "+\t\t\t\t\tif (type.isArrayType()) {", "+\t\t\t\t\t    TypeBinding leafComponentType = type.leafComponentType();", "+\t\t\t\t\t    if (leafComponentType.isGenericType()) { // raw type", "+\t\t\t\t\t        return this.resolvedType = scope.createArrayType(scope.environment().createRawType((ReferenceBinding)leafComponentType, null), type.dimensions());", "+\t\t\t\t\t    }", "+\t\t\t\t\t} else if (type.isGenericType()) {", "+\t\t\t\t        return this.resolvedType = scope.environment().createRawType((ReferenceBinding)type, null); // raw type", "+\t\t\t\t\t}\t\t", "+\t\t\t\t\treturn this.resolvedType = type;"]}], "num": 20061}