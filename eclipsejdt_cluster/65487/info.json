{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9d7858b84e35706d44b2e82e2ae3fe51", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a27c6b1ed3bda840860554a15903eb8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "7f51e750d684686314cf957cd0a463e4558546e5", "commitAfterChange": "f65225afa9896daa624936de0f87dc55afc93a95", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " private static int appendArrayTypeSignature(char[] string, int start, boolean fullyQualifyTypeNames, StringBuffer buffer, boolean isVarArgs)", "signatureAfterChange": " private static int appendArrayTypeSignature(char[] string, int start, boolean fullyQualifyTypeNames, StringBuffer buffer, boolean isVarArgs)", "diff": ["+\tint length = string.length;", "-\tif (start >= string.length - 1) {", "+\tif (start >= length - 1) {", "-\tint e = appendTypeSignature(string, start + 1, fullyQualifyTypeNames, buffer);", "+\t", "+\tint index = start;", "+\tc = string[++index];", "+\twhile(c == C_ARRAY) {", "+\t\t// need a minimum 2 char", "+\t\tif (index >= length - 1) {", "+\t\t\tthrow new IllegalArgumentException();", "+\t\t}", "+\t\tc = string[++index];", "+\t}", "+\t", "+\tint e = appendTypeSignature(string, index, fullyQualifyTypeNames, buffer);", "+\t", "+\tfor(int i = 1, dims = index - start; i < dims; i++) {", "+\t\tbuffer.append('[').append(']');", "+\t}", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "236bcd3e78231e563e2c8f79dcfa4d18", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "7f51e750d684686314cf957cd0a463e4558546e5", "commitAfterChange": "f65225afa9896daa624936de0f87dc55afc93a95", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": " \tprivate static void appendArrayTypeSignature(char[] string, int start, StringBuffer buffer, boolean compact)", "signatureAfterChange": " \tprivate static void appendArrayTypeSignature(char[] string, int start, StringBuffer buffer, boolean compact)", "diff": ["+\t\tint length = string.length;", "-\t\tif (start >= string.length - 1) {", "+\t\tif (start >= length - 1) {", "-\t\tappendTypeSignature(string, start + 1, buffer, compact);", "-\t\tbuffer.append('[').append(']');", "+\t\t", "+\t\tint index = start;", "+\t\tc = string[++index];", "+\t\twhile(c == Signature.C_ARRAY) {", "+\t\t\t// need a minimum 2 char", "+\t\t\tif (index >= length - 1) {", "+\t\t\t\tthrow new IllegalArgumentException();", "+\t\t\t}", "+\t\t\tc = string[++index];", "+\t\t}", "+\t\t", "+\t\tappendTypeSignature(string, index, buffer, compact);", "+\t\t", "+\t\tfor(int i = 0, dims = index - start; i < dims; i++) {", "+\t\t\tbuffer.append('[').append(']');", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25e2c79f331fbbfcc26dfddd801948d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "cf8dccca7e26bf94e36e8f031d2a4ef316542d45", "commitAfterChange": "ce73e795e17fb13da77192ae5025c50ccc7665fe", "methodNumberBeforeChange": 129, "methodNumberAfterChange": 95, "signatureBeforeChange": " \tpublic static int scanBaseTypeSignature(char[] string, int start)", "signatureAfterChange": " \tpublic static int scanTypeSignature(char[] string, int start)", "diff": ["+\t */", "+\tpublic static int scanTypeSignature(char[] string, int start) {", "+\t\t// this method is used in jdt.debug", "+\t\treturn org.eclipse.jdt.internal.compiler.util.Util.scanTypeSignature(string, start);", "+\t}", "-\t */", "-\tpublic static int scanBaseTypeSignature(char[] string, int start) {", "-\t\t// need a minimum 1 char", "-\t\tif (start >= string.length) {", "-\t\t\tthrow new IllegalArgumentException();", "-\t\t}", "-\t\tchar c = string[start];", "-\t\tif (\"BCDFIJSVZ\".indexOf(c) >= 0) { //$NON-NLS-1$", "-\t\t\treturn start;", "-\t\t} else {", "-\t\t\tthrow new IllegalArgumentException();", "-\t\t}", "-\t}"]}], "num": 65487}