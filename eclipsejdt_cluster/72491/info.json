{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3faea6b624eee4ce7a4e4624a630bc57", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c9933f0d5b963790dba247dea9f1ca5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "dbdde44f24ace4ee47bccce2cfe484eeeb8013f3", "commitAfterChange": "33bcc97ba28fd6319a8c922b4f8d989e4aab5311", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " public void recordNullityMismatch(BlockScope currentScope, Expression expression, TypeBinding providedType, TypeBinding expectedType, FlowInfo flowInfo, int nullStatus)", "signatureAfterChange": " public void recordNullityMismatch(BlockScope currentScope, Expression expression, TypeBinding providedType, TypeBinding expectedType, FlowInfo flowInfo, int nullStatus, NullAnnotationMatching annotationStatus)", "diff": ["-public void recordNullityMismatch(BlockScope currentScope, Expression expression, TypeBinding providedType, TypeBinding expectedType, FlowInfo flowInfo, int nullStatus) {", "+public void recordNullityMismatch(BlockScope currentScope, Expression expression, TypeBinding providedType, TypeBinding expectedType, FlowInfo flowInfo, int nullStatus, NullAnnotationMatching annotationStatus) {", "-\tchar[][] annotationName = currentScope.environment().getNonNullAnnotationName();", "-\tcurrentScope.problemReporter().nullityMismatch(expression, providedType, expectedType, nullStatus, annotationName);", "+\tif (annotationStatus != null)", "+\t\tcurrentScope.problemReporter().nullityMismatchingTypeAnnotation(expression, providedType, expectedType, annotationStatus);", "+\telse", "+\t\tcurrentScope.problemReporter().nullityMismatch(expression, providedType, expectedType, nullStatus,", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentScope.environment().getNonNullAnnotationName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0d3008447d875ec47618b9ee9855113", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "80a71329c6d3a0896fae7794150ec55104f5c2f0", "commitAfterChange": "f59cd62ee82097eb13f8e87f8fbab8b81f747c29", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public void recordNullityMismatch(BlockScope currentScope, Expression expression, int nullStatus, TypeBinding expectedType)", "signatureAfterChange": " public void recordNullityMismatch(BlockScope currentScope, Expression expression, TypeBinding providedType, TypeBinding expectedType, int nullStatus)", "diff": ["-public void recordNullityMismatch(BlockScope currentScope, Expression expression, int nullStatus, TypeBinding expectedType) {", "+public void recordNullityMismatch(BlockScope currentScope, Expression expression, TypeBinding providedType, TypeBinding expectedType, int nullStatus) {", "+\tif (providedType == null) {", "+\t\treturn; // assume type error was already reported", "+\t}", "-\t\t\tif (currentContext.internalRecordNullityMismatch(expression, nullStatus, expectedType, ASSIGN_TO_NONNULL | isInsideAssert))", "+\t\t\tif (currentContext.internalRecordNullityMismatch(expression, providedType, nullStatus, expectedType, ASSIGN_TO_NONNULL | isInsideAssert))", "-\tcurrentScope.problemReporter().nullityMismatch(expression, expectedType, nullStatus, annotationName);", "+\tcurrentScope.problemReporter().nullityMismatch(expression, providedType, expectedType, nullStatus, annotationName);"]}], "num": 72491}