{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "acd65cd86f7bd0b3f9a7cc1bc191d24f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21cc2bd19787bb1d035a0999b64d18f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic FieldBinding findField(TypeBinding receiverType, char[] fieldName, InvocationSite invocationSite, boolean needResolve)", "signatureAfterChange": " \tpublic FieldBinding findField(TypeBinding receiverType, char[] fieldName, InvocationSite invocationSite, boolean needResolve)", "diff": ["-\t\t\tif (CharOperation.equals(fieldName, LENGTH))", "+\t\t\tif (CharOperation.equals(fieldName, LENGTH)) {", "+\t\t\t\tif ((leafType.tagBits & TagBits.HasMissingType) != 0) {", "+\t\t\t\t\treturn new ProblemFieldBinding(ArrayBinding.ArrayLength, null, fieldName, ProblemReasons.NotFound);\t\t\t\t\t", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40c63c4f65664831dc345568ee3a03c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic ReferenceBinding findDirectMemberType(char[] typeName, ReferenceBinding enclosingType)", "signatureAfterChange": " \tpublic ReferenceBinding findDirectMemberType(char[] typeName, ReferenceBinding enclosingType)", "diff": ["-\t\tif ((enclosingType.tagBits & HasNoMemberTypes) != 0)", "+\t\tif ((enclosingType.tagBits & TagBits.HasNoMemberTypes) != 0)", "-\t\t\treturn new ProblemReferenceBinding(typeName, memberType, NotVisible);", "+\t\t\treturn new ProblemReferenceBinding(typeName, memberType, ProblemReasons.NotVisible);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1d8c40c084d49a6307fdce48242d52d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "e54d50080648af5488fa9c5b477fd11dcd157227", "commitAfterChange": "dbcb3792ecd2123b1ae06c35b045d6b44d7f2a00", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " \t\tfinal Binding getTypeOrPackage(char[] name, int mask)", "signatureAfterChange": " \t\tfinal Binding getTypeOrPackage(char[] name, int mask)", "diff": ["-\t\t\tboolean resolvingHierarchy = false;", "-\t\t\t\t\t\t\t\tresolvingHierarchy = true;", "-\t\t\t\t\t\t\t\tif (resolvingHierarchy)", "-\t\t\t\t\t\t\t\t\t// class X <T> { class MX extends T {}}", "-\t\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, IllegalSuperTypeVariable); // cannot bind to a type variable"]}], "num": 57927}