{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a44ab1d96d81b6b2175751acbef1d50", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "075f8d538a6924314f867b17037d0255", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "d7b968f8074ad4e44b5a08309dcb414a4be941a4", "commitAfterChange": "b64275d5d6005c49a64e53460529203088ebb2bb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic Map getMap()", "signatureAfterChange": "  \tpublic Map getMap()", "diff": ["+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_BRACE_POSITION_FOR_LAMBDA_BODY, this.brace_position_for_lambda_body);", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_LAMBDA_ARROW, this.insert_space_after_lambda_arrow ? JavaCore.INSERT : JavaCore.DO_NOT_INSERT);", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_LAMBDA_ARROW, this.insert_space_before_lambda_arrow ? JavaCore.INSERT : JavaCore.DO_NOT_INSERT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b09e319808b0587afd2f2f9be1f4acae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathAccessRule.java", "commitBeforeChange": "de8634c6596eba9d498f21b3f06a4d952c468878", "commitAfterChange": "ed3ff9a36eb2db48659e462eacb164d15ad7a872", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprivate static int toProblemId(int kind)", "signatureAfterChange": " \t \tprivate static int toProblemId(int kind)", "diff": ["-\t\tswitch (kind) {", "+\t\tboolean ignoreIfBetter = (kind & IAccessRule.IGNORE_IF_BETTER) != 0;", "+\t\tswitch (kind & ~IAccessRule.IGNORE_IF_BETTER) {", "-\t\t\t\treturn IProblem.ForbiddenReference;", "+\t\t\t\treturn ignoreIfBetter ? IProblem.ForbiddenReference | AccessRule.IgnoreIfBetter : IProblem.ForbiddenReference;", "-\t\t\t\treturn IProblem.DiscouragedReference;", "+\t\t\t\treturn ignoreIfBetter ? IProblem.DiscouragedReference | AccessRule.IgnoreIfBetter : IProblem.DiscouragedReference;", "-\t\t\t\treturn -1;", "+\t\t\t\treturn ignoreIfBetter ? AccessRule.IgnoreIfBetter : 0;"]}], "num": 62830}