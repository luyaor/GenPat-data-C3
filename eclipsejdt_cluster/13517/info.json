{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f4c3689a1911b17eff38f95f69ed06f8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21b2fa20e51fe60a3f2d1b83c1cfe567", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "0e8ca24e8451f1d91ed53a269d184ea21d12301f", "commitAfterChange": "369ffd3db09511488e039ba2575df2eeea055320", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r \tprotected void basicElementAdded(Openable element, IResourceDelta delta)", "signatureAfterChange": "\r \tprotected void nonJavaResourcesChanged(Openable element, IResourceDelta delta)\r \t\tthrows JavaModelException", "diff": ["-\t */\r", "-\tprotected void basicElementAdded(Openable element, IResourceDelta delta) {\r", "-\t\tif (isOpen(delta.getResource())) {\r", "-\r", "-\t\t\tswitch (element.getElementType()) {\r", "-\t\t\t\tcase IJavaElement.PACKAGE_FRAGMENT_ROOT :\r", "-\t\t\t\t\t// when a root is added, and is on the classpath, the project must be updated\r", "-\t\t\t\t\tthis.projectsToUpdate.add(element.getJavaProject());\r", "-\t\t\t\t\t//updateProject(project);\r", "-\t\t\t\t\t//try {\r", "-\t\t\t\t\t//\tproject.getJavaProjectElementInfo().setNameLookup(null);\r", "-\t\t\t\t\t//} catch (JavaModelException e) {\r", "-\t\t\t\t\t//}\r", "-\t\t\t\t\tbreak;\r", "-\t\t\t\tcase IJavaElement.PACKAGE_FRAGMENT :\r", "-\t\t\t\t\taddToParentInfo(element);\r", "-\t\t\t\t\tJavaProject project = (JavaProject) element.getJavaProject();\r", "-\t\t\t\t\ttry {\r", "-\t\t\t\t\t\tproject.getJavaProjectElementInfo().setNameLookup(null);\r", "-\t\t\t\t\t} catch (JavaModelException e) {\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\tbreak;\r", "-\t\t\t\tdefault:\r", "-\t\t\t\t\taddToParentInfo(element);\r", "-\t\t\t}\r", "-\r", "-\t\t\tclose(element);\r", "-\t\t\tfCurrentDelta.added(element);\r", "-\t\t}\r", "-\t}\r", "+\t\t// reset non-java resources if element was open\r", "+\t\tif (element.isOpen()) {\r", "+\t\t\tJavaElementInfo info = element.getElementInfo();\r", "+\t\t\tswitch (element.getElementType()) {\r", "+\t\t\t\tcase IJavaElement.JAVA_PROJECT :\r", "+\t\t\t\t\tIResource resource = delta.getResource();\r", "+\t\t\t\t\t((JavaProjectElementInfo) info).setNonJavaResources(null);\r", "+\t\r", "+\t\t\t\t\t// if a package fragment root is the project, clear it too\r", "+\t\t\t\t\tPackageFragmentRoot projectRoot =\r", "+\t\t\t\t\t\t(PackageFragmentRoot) ((JavaProject) element).getPackageFragmentRoot(\r", "+\t\t\t\t\t\t\tnew Path(IPackageFragment.DEFAULT_PACKAGE_NAME));\r", "+\t\t\t\t\tif (projectRoot.isOpen()) {\r", "+\t\t\t\t\t\t((PackageFragmentRootInfo) projectRoot.getElementInfo()).setNonJavaResources(\r", "+\t\t\t\t\t\t\tnull);\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\tcase IJavaElement.PACKAGE_FRAGMENT :\r", "+\t\t\t\t\t ((PackageFragmentInfo) info).setNonJavaResources(null);\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\tcase IJavaElement.PACKAGE_FRAGMENT_ROOT :\r", "+\t\t\t\t\t ((PackageFragmentRootInfo) info).setNonJavaResources(null);\r", "+\t\t\t}\r", "+\t\t}\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc8b733ea8c6c10e1e385fcb501e7a4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "409f0d1ccf0133d5fcf6863869c728111e50135d", "commitAfterChange": "84e2da9db5b8e3d6a6df97b0f7ad6795dd65a9ad", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \tprotected void basicElementAdded(Openable element, IResourceDelta delta)", "signatureAfterChange": "\r \tprotected void basicElementAdded(Openable element, IResourceDelta delta)", "diff": ["-\t\t\tboolean onClasspath = isOnClasspath(element);\r", "-\t\t\t// only add as a child if it is on the classpath\r", "-\t\t\tif (onClasspath) {\r", "-\t\t\t\taddToParentInfo(element);\r", "-\t\t\t\tswitch (element.getElementType()) {\r", "-\t\t\t\t\tcase IJavaElement.PACKAGE_FRAGMENT_ROOT :\r", "-\t\t\t\t\t\t// when a root is added, and is on the classpath, the project must be updated\r", "-\t\t\t\t\t\tJavaProject project = (JavaProject) element.getJavaProject();\r", "-\t\t\t\t\t\tupdateProject(project);\r", "-\t\t\t\t\t\t//1G1TW2T - get rid of namelookup since it holds onto obsolete cached info \r", "-\t\t\t\t\t\ttry {\r", "-\t\t\t\t\t\t\tproject.getJavaProjectElementInfo().setNameLookup(null);\r", "-\t\t\t\t\t\t} catch (JavaModelException e) {\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\tcase IJavaElement.PACKAGE_FRAGMENT :\r", "-\t\t\t\t\t\t//1G1TW2T - get rid of namelookup since it holds onto obsolete cached info \r", "-\t\t\t\t\t\tproject = (JavaProject) element.getJavaProject();\r", "-\t\t\t\t\t\ttry {\r", "-\t\t\t\t\t\t\tproject.getJavaProjectElementInfo().setNameLookup(null);\r", "-\t\t\t\t\t\t} catch (JavaModelException e) {\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t\tbreak;\r", "-\t\t\t\t}\r", "+\t\t\taddToParentInfo(element);\r", "+\t\t\tswitch (element.getElementType()) {\r", "+\t\t\t\tcase IJavaElement.PACKAGE_FRAGMENT_ROOT :\r", "+\t\t\t\t\t// when a root is added, and is on the classpath, the project must be updated\r", "+\t\t\t\t\tJavaProject project = (JavaProject) element.getJavaProject();\r", "+\t\t\t\t\tupdateProject(project);\r", "+\t\t\t\t\t//1G1TW2T - get rid of namelookup since it holds onto obsolete cached info \r", "+\t\t\t\t\ttry {\r", "+\t\t\t\t\t\tproject.getJavaProjectElementInfo().setNameLookup(null);\r", "+\t\t\t\t\t} catch (JavaModelException e) {\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\tcase IJavaElement.PACKAGE_FRAGMENT :\r", "+\t\t\t\t\t//1G1TW2T - get rid of namelookup since it holds onto obsolete cached info \r", "+\t\t\t\t\tproject = (JavaProject) element.getJavaProject();\r", "+\t\t\t\t\ttry {\r", "+\t\t\t\t\t\tproject.getJavaProjectElementInfo().setNameLookup(null);\r", "+\t\t\t\t\t} catch (JavaModelException e) {\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tbreak;\r"]}], "num": 13517}