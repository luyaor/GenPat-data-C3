{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d5f8c96224cd2b5f124af689886048f8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd1d5bd756fcdd237c057188b0a37aa3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "70416b46b1375461a92d89ffa1cb077778dc6e86", "commitAfterChange": "0c53505dd9d8f221929a96f99e04ff55bfc4fc05", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void accept(IBinaryType binaryType, PackageBinding packageBinding)", "signatureAfterChange": " \tpublic void accept(IBinaryType binaryType, PackageBinding packageBinding)", "diff": ["-\t\tBinaryTypeBinding binaryBinding =  new BinaryTypeBinding(packageBinding, binaryType, this.lookupEnvironment);", "-\t\tReferenceBinding cachedType = this.lookupEnvironment.getCachedType(binaryBinding.compoundName);", "-\t\tif (cachedType == null || cachedType instanceof UnresolvedReferenceBinding) { // NB: cachedType is not null if already cached as a source type", "-\t\t\tthis.lookupEnvironment.createBinaryTypeFrom(binaryType, packageBinding);", "-\t\t}", "+\t\tthis.lookupEnvironment.createBinaryTypeFrom(binaryType, packageBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fec02a9526884eb76419133dcf00463c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "7502c354f00552d7df559cfffd2db23ffd2b1616", "commitAfterChange": "63a798f7d16bafbaffbfdbfbed84f2c23e97447e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \tpublic void accept(IBinaryType binaryType, PackageBinding packageBinding)", "signatureAfterChange": "\r \tpublic void accept(IBinaryType binaryType, PackageBinding packageBinding)", "diff": ["-\t\tthis.lookupEnvironment.createBinaryTypeFrom(binaryType, packageBinding);\r", "+\t\tBinaryTypeBinding binaryBinding =  new BinaryTypeBinding(packageBinding, binaryType, this.lookupEnvironment);\r", "+\t\tReferenceBinding cachedType = this.lookupEnvironment.getCachedType(binaryBinding.compoundName);\r", "+\t\tif (cachedType == null || cachedType instanceof UnresolvedReferenceBinding) { // NB: cachedType is not null if already cached as a source type\r", "+\t\t\tthis.lookupEnvironment.createBinaryTypeFrom(binaryType, packageBinding);\r", "+\t\t}\r"]}], "num": 5480}