{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "19443ebe084e8399a5e4cfebefabc0db", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "494eafcc004d56c301a9938a7bf8841a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t \tpublic void consumeWildCard(int kind, int rank)", "signatureAfterChange": " \t \tpublic void consumeWildCard(int kind)", "diff": ["-\tpublic void consumeWildCard(int kind, int rank) {", "-\t\tTypeBinding bound = ", "-\t\t\tkind != Wildcard.UNBOUND ? ", "-\t\t\t\t\t(TypeBinding) this.types.remove(this.types.size()-1) : ", "-\t\t\t\t\tnull;", "-\t\tTypeBinding wildCardBinding = this.environment.createWildcard((ReferenceBinding) this.typeBinding, rank, bound, null /*no extra bound*/, kind);", "-\t\tthis.types.add(wildCardBinding);", "+\tpublic void consumeWildCard(int kind) {", "+\t\tthis.wildcardKind = kind;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56c6dbf5216653bc66a62960014c32d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeSystem.java", "commitBeforeChange": "ff2fe8665a4cc197831509bf8ec85eecac35f7cf", "commitAfterChange": "b035f7a4c467249c63cc869fd5f75e4bad8cf303", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic final CaptureBinding getCapturedWildcard(WildcardBinding wildcard, ReferenceBinding contextType, int start, int end, ASTNode cud, int id)", "signatureAfterChange": " \tpublic final CaptureBinding getCapturedWildcard(WildcardBinding wildcard, ReferenceBinding contextType, int start, int end, ASTNode cud, int id)", "diff": ["-\t\tTypeBinding capture = derivedTypes[i] = new CaptureBinding(wildcard, contextType, start, end, cud, id);", "-\t", "-\t\tint typesLength = this.types.length;", "-\t\tif (this.typeid == typesLength)", "-\t\t\tSystem.arraycopy(this.types, 0, this.types = new TypeBinding[typesLength * 2][], 0, typesLength);", "-\t\tthis.types[this.typeid] = new TypeBinding[1];", "-\t\treturn (CaptureBinding) (this.types[capture.id = this.typeid++][0] = capture);", "+\t\treturn (CaptureBinding) (derivedTypes[i] = new CaptureBinding(wildcard, contextType, start, end, cud, id));", "+\t\t// the above constructor already registers the capture, don't repeat that here"]}], "num": 11800}