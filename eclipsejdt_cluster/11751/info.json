{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c30c59d101b316be6c1197ba8572e7be", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29c72d08a1bf860f5396cd7f5fe84be9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "c4baf766be166b04f595eec5cebbd2a64f399daa", "commitAfterChange": "6574ecf5c4b5647220e5c6028073411e3f107ad7", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": " public void test097()", "signatureAfterChange": " public void test097()", "diff": ["-\t\t\t\"    I functional = Action::<?>fooMethod;\\r\\n\" + ", "+\t\t\t\"    I functional = Action::<?>fooMethod;\\r\\n\" + // no raw type warning here, Action:: is really Action<>::", "-\t\t\t\"1. WARNING in X.java (at line 9)\\n\" + ", "-\t\t\t\"\tI functional = Action::<?>fooMethod;\\n\" + ", "-\t\t\t\"\t               ^^^^^^\\n\" + ", "-\t\t\t\"Action is a raw type. References to generic type Action<K> should be parameterized\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 9)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "517b1c684d818a3f1e31622a5cbaa00b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "ee44380e8d52a97dffe90bb61e33a1e5ccfb30e8", "commitAfterChange": "6f17c126ff89ea2e3c03f832be8ed25d26113551", "methodNumberBeforeChange": 139, "methodNumberAfterChange": 139, "signatureBeforeChange": " public void test384750u()", "signatureAfterChange": " public void test384750u()", "diff": ["-\t\t\t\t\t\"1. WARNING in X.java (at line 9)\\n\" + ", "-\t\t\t\t\t\"\tI i1 = X::foo;\\n\" + ", "-\t\t\t\t\t\"\t       ^\\n\" + ", "-\t\t\t\t\t\"X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "-\t\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\t\"2. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\t\t\"1. ERROR in X.java (at line 9)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56bffaba878431bf0fd86ae145165804", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AssignmentTest.java", "commitBeforeChange": "909d7ea106422d6ae8df5392c045bb0bb269cbe3", "commitAfterChange": "1b7cc740dd9297bd0f4bafe7fea18d712058ba6e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void test042()", "signatureAfterChange": " public void test042()", "diff": ["-\t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "-\t\t\"\tb = false;\\n\" + ", "-\t\t\"\t^^^^^^^^^\\n\" + ", "-\t\t\"Dead code\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 6)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ec02aadc9f72f7f347593b582342e11", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "c3e5bbbaaf7c9fe7156d9ad7d6c0c644695a0f7d", "commitAfterChange": "686d49fbd8450ce0409a37660e136752d9a01dc6", "methodNumberBeforeChange": 592, "methodNumberAfterChange": 592, "signatureBeforeChange": " \tpublic void test588()", "signatureAfterChange": " \tpublic void test588()", "diff": ["-            \"----------\\n\" + ", "-    \t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "-    \t\t\"\tboolean c = X.class == Long.class;\\n\" + ", "-    \t\t\"\t            ^\\n\" + ", "-    \t\t\"X is a raw type. References to generic type X<S> should be parameterized\\n\" + ", "-    \t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "+    \t\t\"1. ERROR in X.java (at line 6)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b25862dd635c076efab0b0879e60bc22", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/InnerEmulationTest.java", "commitBeforeChange": "baba91778491837a84be9560b81c83086d98c36e", "commitAfterChange": "57b083b793c3b8c2d5620895f00ff1c58e226e44", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 86, "signatureBeforeChange": "  public void test085()", "signatureAfterChange": "  public void test085()", "diff": ["-\t\t\"1. WARNING in X.java (at line 10)\\n\" +", "-\t\t\"\tX x = X.this; \t\\n\" +", "-\t\t\"\t  ^\\n\" +", "-\t\t\"The field new B(){}.x is never read locally\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. ERROR in X.java (at line 10)\\n\" +", "+\t\t\"1. ERROR in X.java (at line 10)\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd6b97df4f630b2764daa4c700878340", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "ee44380e8d52a97dffe90bb61e33a1e5ccfb30e8", "commitAfterChange": "6f17c126ff89ea2e3c03f832be8ed25d26113551", "methodNumberBeforeChange": 136, "methodNumberAfterChange": 136, "signatureBeforeChange": " public void test384750r()", "signatureAfterChange": " public void test384750r()", "diff": ["-\t\t\t\t\t\"1. WARNING in X.java (at line 9)\\n\" + ", "-\t\t\t\t\t\"\tI i1 = X::foo;\\n\" + ", "-\t\t\t\t\t\"\t       ^\\n\" + ", "-\t\t\t\t\t\"X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "-\t\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\t\"2. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\t\t\"1. ERROR in X.java (at line 9)\\n\" + "]}], "num": 11751}