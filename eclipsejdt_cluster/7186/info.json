{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "570437e5cc24397a804e4747f89a7e82", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e2de33648c28ddb96e78e6b375967c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "62542d77179e2d9d9eae2d205be3f0fefe8aabb4", "commitAfterChange": "4819fad32c78bae1ce1ee5d132562a40aee0fa3e", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  \tprivate String getNewLineString(int linesCount)", "signatureAfterChange": "  \tprivate String getNewLineString(int linesCount)", "diff": ["-\t\tString newLineString = this.newEmptyLines[linesCount-1];", "-\t\tif (newLineString == null) {", "-\t\t\tthis.tempBuffer.setLength(0);", "-\t\t\tfor (int j=0; j<linesCount; j++) {", "-\t\t\t\tthis.tempBuffer.append(this.lineSeparator);", "+\t\tString newLineString = Util.EMPTY_STRING;", "+\t\tif (linesCount > 0) {", "+\t\t\tnewLineString = this.newEmptyLines[linesCount-1];", "+\t\t\tif (newLineString == null) {", "+\t\t\t\tthis.tempBuffer.setLength(0);", "+\t\t\t\tfor (int j=0; j<linesCount; j++) {", "+\t\t\t\t\tthis.tempBuffer.append(this.lineSeparator);", "+\t\t\t\t}", "+\t\t\t\tnewLineString = this.tempBuffer.toString();", "+\t\t\t\tthis.newEmptyLines[linesCount-1] = newLineString;", "-\t\t\tnewLineString = this.tempBuffer.toString();", "-\t\t\tthis.newEmptyLines[linesCount-1] = newLineString;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c938e9f67392efa6aaa737159cd58ade", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "a708a833352a17a462cbe9e9346d660fa6317a1e", "commitAfterChange": "0e8e783b8823e467b82792c7ef9289caad32e202", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 69, "signatureBeforeChange": "  \tprivate void printJavadocBlock(FormatJavadocBlock block)", "signatureAfterChange": "  \tprivate void printJavadocBlock(FormatJavadocBlock block)", "diff": ["-\t\t\t\tif (commentIndentationLevel == 0) {", "-\t\t\t\t    this.commentIndentation = null;", "-\t\t\t\t} else {", "-\t\t    \t\tStringBuffer indentationBuffer = new StringBuffer();", "-\t\t        \tfor (int i=0; i<commentIndentationLevel; i++) {", "-\t\t    \t\t\tindentationBuffer.append(' ');", "-\t\t        \t}", "-\t        \t\tthis.commentIndentation = indentationBuffer.toString();", "-\t\t    \t}", "+\t\t\t\tsetCommentIndentation(commentIndentationLevel);", "-\t\t\t\t\tStringBuffer buffer = new StringBuffer();", "+\t\t\t\t\tthis.tempBuffer.setLength(0);", "-\t\t\t\t\t\t\tprintJavadocNewLine(buffer);", "+\t\t\t\t\t\t\tprintJavadocNewLine(this.tempBuffer);", "-\t\t\t\t\t\taddInsertEdit(nodeStart, buffer.toString());", "+\t\t\t\t\t\taddInsertEdit(nodeStart, this.tempBuffer.toString());"]}], "num": 7186}