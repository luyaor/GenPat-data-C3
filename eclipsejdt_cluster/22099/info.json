{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b1fa107b5744eb7889638d66122a297", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcdb5000db6eec526dee4e8ce3a4bbae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "e33ceacdb6e9b17f29de3a23e3df28f1c6bec162", "commitAfterChange": "81fe472327b51c234112233c89df88e95ab01675", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic static boolean conflictsWithOutputLocation(IPath folderPath, JavaProject project)", "signatureAfterChange": " \tpublic static boolean conflictsWithOutputLocation(IPath folderPath, JavaProject project)", "diff": ["-\t\t\t\t// only allow nesting in outputlocation if there is a corresponding source folder", "-\t\t\t\treturn project.getClasspathEntryFor(outputLocation) == null;", "+\t\t\t\t// only allow nesting in project's output if there is a corresponding source folder", "+\t\t\t\t// or if the project's output is not used (i.e. all source folders have a custom output)", "+\t\t\t\tIClasspathEntry[] classpath = project.getResolvedClasspath(true);", "+\t\t\t\tboolean isOutputUsed = false;", "+\t\t\t\tfor (int i = 0, length = classpath.length; i < length; i++) {", "+\t\t\t\t\tIClasspathEntry entry = classpath[i];", "+\t\t\t\t\tif (entry.getEntryKind() == IClasspathEntry.CPE_SOURCE) {", "+\t\t\t\t\t\tif (entry.getPath().equals(outputLocation)) {", "+\t\t\t\t\t\t\treturn false;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (entry.getOutputLocation() == null) {", "+\t\t\t\t\t\t\tisOutputUsed = true;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\treturn isOutputUsed;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2fd12b5945aa6ad6465cc6d64128a10", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaConventions.java", "commitBeforeChange": "f9e12d985b728b5ec490dc1de9ed47af7a1005b4", "commitAfterChange": "6e5f053d8485b4297ea5e20045a1d6133bea90b8", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic static IJavaModelStatus validateClasspath(IJavaProject javaProject, IClasspathEntry[] rawClasspath, IPath projectOutputLocation)", "signatureAfterChange": " \tpublic static IJavaModelStatus validateClasspath(IJavaProject javaProject, IClasspathEntry[] rawClasspath, IPath projectOutputLocation)", "diff": ["-\t\t// ensure that no output is coincidating with another source folder (only allowed if matching current source folder)", "+\t\t// ensure that no specific output is coincidating with another source folder (only allowed if matching current source folder)", "+\t\t// 36465 - for 2.0 backward compatibility, only check specific output locations (the default can still coincidate)", "-\t\t\t\tif (output == null) output = projectOutputLocation; // if no specific output, still need to check using default output", "+\t\t\t\tif (output == null) continue; // 36465 - for 2.0 backward compatibility, only check specific output locations (the default can still coincidate)", "+\t\t\t\t// if (output == null) output = projectOutputLocation; // if no specific output, still need to check using default output (this line would check default output)"]}], "num": 22099}