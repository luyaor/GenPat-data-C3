{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "00bc6c9cb11acc7ae45652136373f00a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d203ec1b6e24a9622b3f574af9382b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/RoundEnvImpl.java", "commitBeforeChange": "57eb24f7ca5bd638b11e2a1afda2d825225d880e", "commitAfterChange": "b0991463d796f8d722da593e2f8f5c9ff730ab5e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tprivate void collectAnnotations(ReferenceBinding[] referenceBindings)", "signatureAfterChange": "  \tprivate void collectAnnotations(ReferenceBinding[] referenceBindings)", "diff": ["-\t\t\t\tTypeElement anno = (TypeElement)Factory.newElement(annotationBinding.getAnnotationType()); ", "-\t\t\t\tElement element = Factory.newElement(referenceBinding);", "+\t\t\t\tTypeElement anno = (TypeElement)_factory.newElement(annotationBinding.getAnnotationType()); ", "+\t\t\t\tElement element = _factory.newElement(referenceBinding);", "-\t\t\t\t\tTypeElement anno = (TypeElement)Factory.newElement(annotationBinding.getAnnotationType()); ", "-\t\t\t\t\tElement element = Factory.newElement(fieldBinding);", "+\t\t\t\t\tTypeElement anno = (TypeElement)_factory.newElement(annotationBinding.getAnnotationType()); ", "+\t\t\t\t\tElement element = _factory.newElement(fieldBinding);", "-\t\t\t\t\tTypeElement anno = (TypeElement)Factory.newElement(annotationBinding.getAnnotationType()); ", "-\t\t\t\t\tElement element = Factory.newElement(methodBinding);", "+\t\t\t\t\tTypeElement anno = (TypeElement)_factory.newElement(annotationBinding.getAnnotationType()); ", "+\t\t\t\t\tElement element = _factory.newElement(methodBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be65e8a8ca3dc8989b04bfe5346c06a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ElementsImpl.java", "commitBeforeChange": "57eb24f7ca5bd638b11e2a1afda2d825225d880e", "commitAfterChange": "b0991463d796f8d722da593e2f8f5c9ff730ab5e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \t@Override \tpublic PackageElement getPackageOf(Element type)", "signatureAfterChange": "  \t@Override \tpublic PackageElement getPackageOf(Element type)", "diff": ["-\t\t\t\treturn (PackageElement) Factory.newElement(referenceBinding.fPackage);", "+\t\t\t\treturn (PackageElement) _env.getFactory().newElement(referenceBinding.fPackage);", "-\t\t\t\treturn (PackageElement) Factory.newElement(methodBinding.declaringClass.fPackage);", "+\t\t\t\treturn (PackageElement) _env.getFactory().newElement(methodBinding.declaringClass.fPackage);", "-\t\t\t\treturn (PackageElement) Factory.newElement(fieldBinding.declaringClass.fPackage);", "+\t\t\t\treturn (PackageElement) _env.getFactory().newElement(fieldBinding.declaringClass.fPackage);", "-\t\t\t\treturn (PackageElement) Factory.newElement(localVariableBinding.declaringScope.classScope().referenceContext.binding.fPackage);", "+\t\t\t\treturn (PackageElement) _env.getFactory().newElement(localVariableBinding.declaringScope.classScope().referenceContext.binding.fPackage);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf521ed8d352abb6bebf62252c394b2e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/RoundEnvImpl.java", "commitBeforeChange": "0451f7d8d4c6c8405b9315cd6272871fc556bba4", "commitAfterChange": "99792a3ac5be202887d314558a46b5851f3a5997", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t@Override \tpublic Set<? extends Element> getElementsAnnotatedWith(TypeElement a)", "signatureAfterChange": " \t@Override \tpublic Set<? extends Element> getElementsAnnotatedWith(TypeElement a)", "diff": ["+\t */", "-\t\treturn _annoToUnit.getValues(a);", "+\t\tif (a.getKind() != ElementKind.ANNOTATION_TYPE) {", "+\t\t\tthrow new IllegalArgumentException(\"Argument must represent an annotation type\"); //$NON-NLS-1$", "+\t\t}", "+\t\tif (isAnnotationInherited(a)) {", "+\t\t\tSet<Element> annotatedElements = new HashSet<Element>(_annoToUnit.getValues(a));", "+\t\t\t// For all other root elements that are TypeElements, and for their recursively enclosed", "+\t\t\t// types, add each element if it has a superclass are annotated with 'a'", "+\t\t\tReferenceBinding annoTypeBinding = (ReferenceBinding)((TypeElementImpl)a)._binding;", "+\t\t\tfor (TypeElement element : ElementFilter.typesIn(getRootElements())) {", "+\t\t\t\tReferenceBinding typeBinding = (ReferenceBinding)((TypeElementImpl)element)._binding;", "+\t\t\t\taddAnnotatedElements(annoTypeBinding, typeBinding, annotatedElements);", "+\t\t\t}", "+\t\t\treturn Collections.unmodifiableSet(annotatedElements);", "+\t\t}", "+\t\treturn Collections.unmodifiableSet(_annoToUnit.getValues(a));"]}], "num": 26040}