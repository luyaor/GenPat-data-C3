{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ccf512d175abd25b7f5f44080c12ceb4", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "659570bacbd809a8b47df88dce06b719", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "48d8b25fe48652384eaea784beaca4f2d5a7f1f1", "commitAfterChange": "d2bbe758aa36ed261c3b0452e9226ce41cb1f1bd", "methodNumberBeforeChange": 265, "methodNumberAfterChange": 265, "signatureBeforeChange": " public void recordPositionsFrom(int startPC, int sourcePos)", "signatureAfterChange": " public void recordPositionsFrom(int startPC, int sourcePos)", "diff": ["-\t\t\t\t\tif ((pcToSourceMapSize > 4) && (pcToSourceMap[pcToSourceMapSize - 4] > startPC)) {", "-\t\t\t\t\t\tSystem.arraycopy(pcToSourceMap, insertionIndex, pcToSourceMap, insertionIndex + 2, pcToSourceMapSize - 2 - insertionIndex);", "-\t\t\t\t\t\tpcToSourceMap[insertionIndex++] = startPC;", "-\t\t\t\t\t\tpcToSourceMap[insertionIndex] = newLine;\t\t\t\t\t\t", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tpcToSourceMap[pcToSourceMapSize - 2] = startPC;", "+\t\t\t\t\t/* First we need to check if at the insertion position there is not an existing entry", "+\t\t\t\t\t * that includes the one we want to insert. This is the case if pcToSourceMap[insertionIndex - 1] == newLine.", "+\t\t\t\t\t * In this case we don't want to change the table. If not, we want to insert a new entry. Prior to insertion", "+\t\t\t\t\t * we want to check if it is worth doing an arraycopy. If not we simply update the recorded pc.", "+\t\t\t\t\t */", "+\t\t\t\t\tif (!((insertionIndex > 1) && (pcToSourceMap[insertionIndex - 1] == newLine))) {", "+\t\t\t\t\t\tif ((pcToSourceMapSize > 4) && (pcToSourceMap[pcToSourceMapSize - 4] > startPC)) {", "+\t\t\t\t\t\t\tSystem.arraycopy(pcToSourceMap, insertionIndex, pcToSourceMap, insertionIndex + 2, pcToSourceMapSize - 2 - insertionIndex);", "+\t\t\t\t\t\t\tpcToSourceMap[insertionIndex++] = startPC;", "+\t\t\t\t\t\t\tpcToSourceMap[insertionIndex] = newLine;\t\t\t\t\t\t", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tpcToSourceMap[pcToSourceMapSize - 2] = startPC;", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee3f5c5a51aaa963471e9ee81551601f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 258, "methodNumberAfterChange": 261, "signatureBeforeChange": " public void recordPositionsFrom(int startPC, int sourcePos)", "signatureAfterChange": " public void recordPositionsFrom(int startPC, int sourcePos)", "diff": ["-\t\t\t\t\t} else {", "+\t\t\t\t\t} else if (insertionIndex < 1 || pcToSourceMap[insertionIndex - 1] != newLine) {", "-\t\t\t\t}", "-\t\t\t\tif (position != lastEntryPC) { // no bytecode since last entry pc", "+\t\t\t\t} else if (position != lastEntryPC) { // no bytecode since last entry pc"]}], "num": 67078}