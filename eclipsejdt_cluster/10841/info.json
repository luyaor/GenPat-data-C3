{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "830c33d1d50abb20441e6c37d7314750", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bb647db805052f8fa7a70dbe927f6ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionJavadocParser.java", "commitBeforeChange": "523ea3b2c64428d6b9f9d9783cbb0776a4263765", "commitAfterChange": "19e8b378f3973cba5b6ddd20330ed251678b8a37", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \t\tprotected boolean parseParam() throws InvalidInputException", "signatureAfterChange": "  \t\tprotected boolean parseParam() throws InvalidInputException", "diff": ["-\t\t\tif (this.identifierPtr >= 0) {", "+\t\t\tif (this.identifierPtr < 0) {", "+\t\t\t\t// workaround, empty token should set an empty identifier by scanner and so identifierPtr should be == 0", "+\t\t\t\tif (completionScanner.getCurrentIdentifierSource() == CompletionScanner.EmptyCompletionIdentifier) {", "+\t\t\t\t\tnamePosition = completionScanner.completedIdentifierStart;", "+\t\t\t\t\tstartPosition = completionScanner.completedIdentifierStart;", "+\t\t\t\t\tendPosition = completionScanner.completedIdentifierEnd;", "+\t\t\t\t}", "+\t\t\t} else {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f18ff71f807526363dc6fc20f847da2a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "8c93d4e99b8a943865cb7391e781eba5bb83dfc9", "commitAfterChange": "bd0edd7688142c1743cb6b10766dfc576040f113", "methodNumberBeforeChange": 274, "methodNumberAfterChange": 275, "signatureBeforeChange": "  public void variablePotentialNullReference(VariableBinding variable, ASTNode location)", "signatureAfterChange": "  public void variablePotentialNullReference(VariableBinding variable, ASTNode location)", "diff": ["+\tString[] arguments = new String[] {new String(variable.name)};", "-\t\tproblem = IProblem.PotentialNullFieldReference;", "+\t\tif ((variable.tagBits & TagBits.AnnotationNullable) != 0) {", "+\t\t\t// instead of reporting \"can be null at this location\" say *why* we give the warning: @Nullable!", "+\t\t\tproblem = IProblem.NullableFieldReference;", "+\t\t\tchar[][] nullableName = this.options.nullableAnnotationName;", "+\t\t\targuments = new String[] {new String(variable.name),", "+\t\t\t\t\t                  new String(nullableName[nullableName.length-1])};", "+\t\t} else {", "+\t\t\tproblem = IProblem.PotentialNullFieldReference;", "+\t\t}", "-\tString[] arguments = new String[] {new String(variable.name)};", "+}"]}], "num": 10841}