{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "716bbfa61a61d18d0ea3c97211d914ec", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6e7180133453fc9795f20865e5acd01", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "a708a833352a17a462cbe9e9346d660fa6317a1e", "commitAfterChange": "0e8e783b8823e467b82792c7ef9289caad32e202", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 79, "signatureBeforeChange": "  \tprivate void printJavadocText(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine)", "signatureAfterChange": "  \tprivate void printJavadocText(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine)", "diff": ["-\t\tStringBuffer buffer = new StringBuffer();", "+\t\tthis.javadocTextBuffer.setLength(0);", "-\t\t\tprintJavadocTextLine(buffer, nextStart, end, block, idx==0 || (!joinLines && textOnNewLine)/*first text?*/, needIndentation, false /*not an html tag*/);", "+\t\t\tprintJavadocTextLine(this.javadocTextBuffer, nextStart, end, block, idx==0 || (!joinLines && textOnNewLine)/*first text?*/, needIndentation, false /*not an html tag*/);", "-\t\t\t\t\taddReplaceEdit(textStart, end, buffer.toString());", "+\t\t\t\t\taddReplaceEdit(textStart, end, this.javadocTextBuffer.toString());", "-\t\t\t\t\tbuffer.setLength(0);", "+\t\t\t\t\tthis.javadocTextBuffer.setLength(0);", "-\t\tprintJavadocTextLine(buffer, nextStart, text.sourceEnd, block, text.separatorsPtr==-1 /* first text?*/, needIndentation, false /*not an html tag*/);", "+\t\tprintJavadocTextLine(this.javadocTextBuffer, nextStart, text.sourceEnd, block, text.separatorsPtr==-1 /* first text?*/, needIndentation, false /*not an html tag*/);", "-\t\t\taddReplaceEdit(textStart, text.sourceEnd, buffer.toString());", "+\t\t\taddReplaceEdit(textStart, text.sourceEnd, this.javadocTextBuffer.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9782b0f0ea57e19e4c7e4e84e7f53e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "3a9d0e9ebb77a4184e107b2ffacf2122d4d188cf", "commitAfterChange": "cc44d533509199a22dee3cb03412b30282a18add", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": "  \tprivate int printJavadocHtmlTag(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine)", "signatureAfterChange": "  \tprivate int printJavadocHtmlTag(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine)", "diff": ["-\t\t\t\t\tif (newLines > 0 || (idx > 1 && (previousEnd+1) <= (nextStart-1))) {", "-\t\t\t\t\t\tprintJavadocGapLines(previousEnd+1, node.sourceStart-1, newLines, clearBlankLines, false, null);", "+\t\t\t\t\tint nodeStart = node.sourceStart;", "+\t\t\t\t\tif (newLines > 0 || (idx > 1 && nodeStart > (previousEnd+1))) {", "+\t\t\t\t\t\tprintJavadocGapLines(previousEnd+1, nodeStart-1, newLines, clearBlankLines, false, null);", "+\t\t\t\t\t\t// There's no space between text and html tag or inline block => do not insert space a the beginning of the text", "-\t\tprintJavadocTextLine(buffer, nextStart, text.sourceEnd, block, max<=0 /*not the first text*/, needIndentation, closingTag/* closing html tag*/);", "+\t\tboolean firstText = max <= 0 // single tag (e.g. <br>)", "+\t\t\t|| (previousEnd+1) > (nextStart-1); // There's no space between text and html tag or inline block => do not insert space a the beginning of the text", "+\t\tprintJavadocTextLine(buffer, nextStart, text.sourceEnd, block, firstText, needIndentation, closingTag/* closing html tag*/);"]}], "num": 9812}