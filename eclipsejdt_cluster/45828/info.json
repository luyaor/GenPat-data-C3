{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7b21c21e6b1088d128b09abeb839cb7b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b3ab38258326d612a5fc7956fa57e61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/AbstractCompilerTest.java", "commitBeforeChange": "04e84156f72e78841e81f466d63909a84dc84d02", "commitAfterChange": "f4280b902ee434925603ab3160f9ac7e41c27ef9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic static Test buildTestSuite(Class evaluationTestClass)", "signatureAfterChange": "  \tpublic static Test buildTestSuite(Class evaluationTestClass)", "diff": ["-\t\tif (TESTS_PREFIX != null || TESTS_NAMES != null || TESTS_NUMBERS!=null || TESTS_RANGE !=null || RUN_ONLY_ID != null) {", "-\t\t\t\tTestSuite all = new TestSuite(evaluationTestClass.getName());", "-\t\t\t\tint complianceLevels = AbstractCompilerTest.getPossibleComplianceLevels();", "-\t\t\t\tif ((complianceLevels & AbstractCompilerTest.F_1_3) != 0) {", "-\t\t\t\t\tall.addTest(buildTestSuite(evaluationTestClass, AbstractCompilerTest.COMPLIANCE_1_3));", "-\t\t\t\t}", "-\t\t\t\tif ((complianceLevels & AbstractCompilerTest.F_1_4) != 0) {", "-\t\t\t\t\tall.addTest(buildTestSuite(evaluationTestClass, AbstractCompilerTest.COMPLIANCE_1_4));", "-\t\t\t\t}", "-\t\t\t\tif ((complianceLevels & AbstractCompilerTest.F_1_5) != 0) {", "-\t\t\t\t\tall.addTest(buildTestSuite(evaluationTestClass, AbstractCompilerTest.COMPLIANCE_1_5));", "-\t\t\t\t}", "-\t\t\t\tif ((complianceLevels & AbstractCompilerTest.F_1_6) != 0) {", "-\t\t\t\t\tall.addTest(buildTestSuite(evaluationTestClass, AbstractCompilerTest.COMPLIANCE_1_6));", "-\t\t\t\t}", "-\t\t\t\treturn all;", "-//\t\t\treturn buildTestSuite(evaluationTestClass, highestComplianceLevels());", "+\t\tTestSuite suite = new TestSuite(evaluationTestClass.getName());", "+\t\tint complianceLevels = AbstractCompilerTest.getPossibleComplianceLevels();", "+\t\tif ((complianceLevels & AbstractCompilerTest.F_1_3) != 0) {", "+\t\t\tsuite.addTest(buildTestSuite(evaluationTestClass, AbstractCompilerTest.COMPLIANCE_1_3));", "-\t\treturn setupSuite(evaluationTestClass);", "+\t\tif ((complianceLevels & AbstractCompilerTest.F_1_4) != 0) {", "+\t\t\tsuite.addTest(buildTestSuite(evaluationTestClass, AbstractCompilerTest.COMPLIANCE_1_4));", "+\t\t}", "+\t\tif ((complianceLevels & AbstractCompilerTest.F_1_5) != 0) {", "+\t\t\tsuite.addTest(buildTestSuite(evaluationTestClass, AbstractCompilerTest.COMPLIANCE_1_5));", "+\t\t}", "+\t\tif ((complianceLevels & AbstractCompilerTest.F_1_6) != 0) {", "+\t\t\tsuite.addTest(buildTestSuite(evaluationTestClass, AbstractCompilerTest.COMPLIANCE_1_6));", "+\t\t}", "+\t\treturn suite;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fd85162224ee34f4ebe2d3657e38c86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/AbstractCompilerTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static Test buildAllCompliancesRegressionTestSetupSuite(Class evaluationTestClass)", "signatureAfterChange": " \tpublic static Test buildAllCompliancesTestSuite(Class evaluationTestClass)", "diff": ["+\t */", "+\tpublic static Test buildAllCompliancesTestSuite(Class evaluationTestClass) {", "+\t\tTestSuite suite = new TestSuite(evaluationTestClass.getName());", "+\t\tint complianceLevels = AbstractCompilerTest.getPossibleComplianceLevels();", "+\t\tif ((complianceLevels & AbstractCompilerTest.F_1_3) != 0) {", "+\t\t\tsuite.addTest(buildUniqueComplianceTestSuite(evaluationTestClass, AbstractCompilerTest.COMPLIANCE_1_3));", "+\t\t}", "+\t\tif ((complianceLevels & AbstractCompilerTest.F_1_4) != 0) {", "+\t\t\tsuite.addTest(buildUniqueComplianceTestSuite(evaluationTestClass, AbstractCompilerTest.COMPLIANCE_1_4));", "+\t\t}", "+\t\tif ((complianceLevels & AbstractCompilerTest.F_1_5) != 0) {", "+\t\t\tsuite.addTest(buildUniqueComplianceTestSuite(evaluationTestClass, AbstractCompilerTest.COMPLIANCE_1_5));", "+\t\t}", "+\t\tif ((complianceLevels & AbstractCompilerTest.F_1_6) != 0) {", "+\t\t\tsuite.addTest(buildUniqueComplianceTestSuite(evaluationTestClass, AbstractCompilerTest.COMPLIANCE_1_6));", "+\t\t}", "+\t\treturn suite;", "+\t}", "-\t */", "-\tpublic static Test buildAllCompliancesRegressionTestSetupSuite(Class evaluationTestClass) {", "-\t\tTestSuite suite = new TestSuite(evaluationTestClass.getName());", "-\t\tint complianceLevels = AbstractCompilerTest.getPossibleComplianceLevels();", "-\t\tif ((complianceLevels & AbstractCompilerTest.F_1_3) != 0) {", "-\t\t\tsuite.addTest(buildComplianceRegressionSetupSuite(evaluationTestClass, AbstractCompilerTest.COMPLIANCE_1_3));", "-\t\t}", "-\t\tif ((complianceLevels & AbstractCompilerTest.F_1_4) != 0) {", "-\t\t\tsuite.addTest(buildComplianceRegressionSetupSuite(evaluationTestClass, AbstractCompilerTest.COMPLIANCE_1_4));", "-\t\t}", "-\t\tif ((complianceLevels & AbstractCompilerTest.F_1_5) != 0) {", "-\t\t\tsuite.addTest(buildComplianceRegressionSetupSuite(evaluationTestClass, AbstractCompilerTest.COMPLIANCE_1_5));", "-\t\t}", "-\t\tif ((complianceLevels & AbstractCompilerTest.F_1_6) != 0) {", "-\t\t\tsuite.addTest(buildComplianceRegressionSetupSuite(evaluationTestClass, AbstractCompilerTest.COMPLIANCE_1_6));", "-\t\t}", "-\t\treturn suite;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4376e2a71a6302de2434bcafd7fe287", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/AbstractCompilerTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static Test buildAllCompliancesSetupSuite(Class testSuiteClass, Class setupClass, List testClasses)", "signatureAfterChange": " \tpublic static Test buildAllCompliancesTestSuite(Class testSuiteClass, Class setupClass, List testClasses)", "diff": ["+\t */", "+\tpublic static Test buildAllCompliancesTestSuite(Class testSuiteClass, Class setupClass, List testClasses) {", "+\t\tTestSuite suite = new TestSuite(testSuiteClass.getName());", "+\t\tint complianceLevels = AbstractCompilerTest.getPossibleComplianceLevels();", "+\t\tif ((complianceLevels & AbstractCompilerTest.F_1_3) != 0) {", "+\t\t\tsuite.addTest(buildComplianceTestSuite(testClasses, setupClass, COMPLIANCE_1_3));", "+\t\t}", "+\t\tif ((complianceLevels & AbstractCompilerTest.F_1_4) != 0) {", "+\t\t\tsuite.addTest(buildComplianceTestSuite(testClasses, setupClass, COMPLIANCE_1_4));", "+\t\t}", "+\t\tif ((complianceLevels & AbstractCompilerTest.F_1_5) != 0) {", "+\t\t\tsuite.addTest(buildComplianceTestSuite(testClasses, setupClass, COMPLIANCE_1_5));", "+\t\t}", "+\t\tif ((complianceLevels & AbstractCompilerTest.F_1_6) != 0) {", "+\t\t\tsuite.addTest(buildComplianceTestSuite(testClasses, setupClass, COMPLIANCE_1_6));", "+\t\t}", "+\t\treturn suite;", "+\t}", "-\t */", "-\tpublic static Test buildAllCompliancesSetupSuite(Class testSuiteClass, Class setupClass, List testClasses) {", "-\t\tTestSuite suite = new TestSuite(testSuiteClass.getName());", "-\t\tint complianceLevels = AbstractCompilerTest.getPossibleComplianceLevels();", "-\t\tif ((complianceLevels & AbstractCompilerTest.F_1_3) != 0) {", "-\t\t\tsuite.addTest(buildComplianceSetupTestSuite(testClasses, setupClass, COMPLIANCE_1_3));", "-\t\t}", "-\t\tif ((complianceLevels & AbstractCompilerTest.F_1_4) != 0) {", "-\t\t\tsuite.addTest(buildComplianceSetupTestSuite(testClasses, setupClass, COMPLIANCE_1_4));", "-\t\t}", "-\t\tif ((complianceLevels & AbstractCompilerTest.F_1_5) != 0) {", "-\t\t\tsuite.addTest(buildComplianceSetupTestSuite(testClasses, setupClass, COMPLIANCE_1_5));", "-\t\t}", "-\t\tif ((complianceLevels & AbstractCompilerTest.F_1_6) != 0) {", "-\t\t\tsuite.addTest(buildComplianceSetupTestSuite(testClasses, setupClass, COMPLIANCE_1_6));", "-\t\t}", "-\t\treturn suite;", "-\t}"]}], "num": 45828}