{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d3aee63f50cb7b774bf303cc0a77a74c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3c15c1a61c5178926ae0374e98dbc5e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedQualifiedTypeReference.java", "commitBeforeChange": "ca0a8d2a8dcbdca4c1d22b2aafd247d22556e537", "commitAfterChange": "1155b311a647fc5f126edd0c5e6b818f225baee0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic ParameterizedQualifiedTypeReference(char[][] tokens, TypeReference[][] typeArguments, int dim, long[] positions)", "signatureAfterChange": " \tpublic ParameterizedQualifiedTypeReference(char[][] tokens, TypeReference[][] typeArguments, int dim, long[] positions)", "diff": ["+\t\tannotationSearch: for (int i = 0, max = typeArguments.length; i < max; i++) {", "+\t\t\tTypeReference[] typeArgumentsOnTypeComponent = typeArguments[i];", "+\t\t\tif (typeArgumentsOnTypeComponent != null) {", "+\t\t\t\tfor (int j = 0, max2 = typeArgumentsOnTypeComponent.length; j < max2; j++) {", "+\t\t\t\t\tif ((typeArgumentsOnTypeComponent[j].bits & ASTNode.HasTypeAnnotations) != 0) {", "+\t\t\t\t\t\tthis.bits |= ASTNode.HasTypeAnnotations;", "+\t\t\t\t\t\tbreak annotationSearch;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bba61dbe226d96215e77df0b38b5ed00", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "7186c730d487753734b0547672e890b50fededb4", "commitAfterChange": "7ceb7b86e5d2c6d0639c543a0b8998dc4ed1502e", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tboolean incorporate(InferenceContext18 context) throws InferenceFailureException", "signatureAfterChange": " \tboolean incorporate(InferenceContext18 context) throws InferenceFailureException", "diff": ["+\t\t\t\t\t\t// TODO here and below: better checking if constraint really added to the boundset (optimization)?", "+\t\t\t\t\t}", "+\t\t\t\t\tConstraintFormula[] typeArgumentConstraints = deriveTypeArgumentConstraints(boundI, boundJ);", "+\t\t\t\t\tif (typeArgumentConstraints != null) {", "+\t\t\t\t\t\tfor (int k = 0; k < typeArgumentConstraints.length; k++) {", "+\t\t\t\t\t\t\tif (!reduceOneConstraint(context, typeArgumentConstraints[k]))", "+\t\t\t\t\t\t\t\treturn false;", "+\t\t\t\t\t\t\thasUpdate = true;", "+\t\t\t\t\t\t}"]}], "num": 52404}