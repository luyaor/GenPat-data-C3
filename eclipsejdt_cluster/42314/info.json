{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6abc8f2365daac9bc7ed112a59f6e858", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97893b6d1947000866beec5dca839641", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "46418d248f89a29f49a77d154cdbfa57c408b256", "commitAfterChange": "c85433e27f0fa74bfe8e06c38c1c02c51b5599d7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r \tprivate void findFieldsAndMethods(\r \t\tchar[] token,\r \t\tTypeBinding receiverType,\r \t\tScope scope,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope)", "signatureAfterChange": "\r private void findFieldsAndMethods(char[] token, TypeBinding receiverType, Scope scope)", "diff": ["-\t}\r", "-\tprivate void findFieldsAndMethods(\r", "-\t\tchar[] token,\r", "-\t\tTypeBinding receiverType,\r", "-\t\tScope scope,\r", "-\t\tInvocationSite invocationSite,\r", "-\t\tScope invocationScope) {\r", "-\t\tif (token == null)\r", "-\t\t\treturn;\r", "-\r", "-\t\tif (receiverType.isBaseType())\r", "-\t\t\treturn; // nothing else is possible with base types\r", "-\t\tif (receiverType.isArrayType()) {\r", "-\t\t\tif (token.length <= lengthField.length\r", "-\t\t\t\t&& CharOperation.prefixEquals(token, lengthField, false /* ignore case */\r", "-\t\t\t\t))\r", "-\t\t\t\trequestor.acceptField(\r", "-\t\t\t\t\tNoChar,\r", "-\t\t\t\t\tNoChar,\r", "-\t\t\t\t\tlengthField,\r", "-\t\t\t\t\tNoChar,\r", "-\t\t\t\t\tNoChar,\r", "-\t\t\t\t\tlengthField,\r", "-\t\t\t\t\tCompilerModifiers.AccPublic,\r", "-\t\t\t\t\tstartPosition,\r", "-\t\t\t\t\tendPosition);\r", "-\r", "-\t\t\treceiverType = scope.getJavaLangObject();\r", "-\t\tfindFields(\r", "-\t\t\ttoken,\r", "-\t\t\t(ReferenceBinding) receiverType,\r", "-\t\t\tscope,\r", "-\t\t\tnew ObjectVector(),\r", "-\t\t\tnew ObjectVector(),\r", "-\t\t\tfalse,\r", "-\t\t\tinvocationSite,\r", "-\t\t\tinvocationScope);\r", "-\t\tfindMethods(\r", "-\t\t\ttoken,\r", "-\t\t\tnull,\r", "-\t\t\t(ReferenceBinding) receiverType,\r", "-\t\t\tscope,\r", "-\t\t\tnew ObjectVector(),\r", "-\t\t\tfalse,\r", "-\t\t\tfalse,\r", "-\t\t\tinvocationSite);\r", "-\t}\r", "+}\r", "+private void findFieldsAndMethods(char[] token, TypeBinding receiverType, Scope scope) {\r", "+\tif (token == null) return;\r", "+\r", "+\tif (receiverType.isBaseType()) return; // nothing else is possible with base types\r", "+\tif (receiverType.isArrayType()) {\r", "+\t\tif (token.length <= lengthField.length && CharOperation.prefixEquals(token, lengthField, false /* ignore case */))\r", "+\t\t\trequestor.acceptField(\r", "+\t\t\t\tNoChar,\r", "+\t\t\t\tNoChar,\r", "+\t\t\t\tlengthField,\r", "+\t\t\t\tNoChar,\r", "+\t\t\t\tNoChar,\r", "+\t\t\t\tlengthField,\r", "+\t\t\t\tCompilerModifiers.AccPublic,\r", "+\t\t\t\tstartPosition,\r", "+\t\t\t\tendPosition);\r", "+\r", "+\t\treceiverType = scope.getJavaLangObject();\r", "+\t}\r", "+\r", "+\tfindFields(token, (ReferenceBinding) receiverType, scope, new ObjectVector(), false);\r", "+\tfindMethods(token, null, (ReferenceBinding) receiverType, scope, new ObjectVector(), false, false);\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af9e73edd01d56d3b731fccd8797ee88", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a1b8b888d8c8c040023fcd2856f96f5ad6c69b3e", "commitAfterChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r \tprivate void findFieldsAndMethods(\r \t\tchar[] token,\r \t\tTypeBinding receiverType,\r \t\tScope scope,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope)", "signatureAfterChange": "\r private void findFieldsAndMethods(char[] token, TypeBinding receiverType, Scope scope)", "diff": ["-\t}\r", "-\tprivate void findFieldsAndMethods(\r", "-\t\tchar[] token,\r", "-\t\tTypeBinding receiverType,\r", "-\t\tScope scope,\r", "-\t\tInvocationSite invocationSite,\r", "-\t\tScope invocationScope) {\r", "-\t\tif (token == null)\r", "-\t\t\treturn;\r", "-\r", "-\t\tif (receiverType.isBaseType())\r", "-\t\t\treturn; // nothing else is possible with base types\r", "-\t\tif (receiverType.isArrayType()) {\r", "-\t\t\tif (token.length <= lengthField.length\r", "-\t\t\t\t&& CharOperation.prefixEquals(token, lengthField, false /* ignore case */\r", "-\t\t\t\t))\r", "-\t\t\t\trequestor.acceptField(\r", "-\t\t\t\t\tNoChar,\r", "-\t\t\t\t\tNoChar,\r", "-\t\t\t\t\tlengthField,\r", "-\t\t\t\t\tNoChar,\r", "-\t\t\t\t\tNoChar,\r", "-\t\t\t\t\tlengthField,\r", "-\t\t\t\t\tCompilerModifiers.AccPublic,\r", "-\t\t\t\t\tstartPosition,\r", "-\t\t\t\t\tendPosition);\r", "-\r", "-\t\t\treceiverType = scope.getJavaLangObject();\r", "-\t\tfindFields(\r", "-\t\t\ttoken,\r", "-\t\t\t(ReferenceBinding) receiverType,\r", "-\t\t\tscope,\r", "-\t\t\tnew ObjectVector(),\r", "-\t\t\tnew ObjectVector(),\r", "-\t\t\tfalse,\r", "-\t\t\tinvocationSite,\r", "-\t\t\tinvocationScope);\r", "-\t\tfindMethods(\r", "-\t\t\ttoken,\r", "-\t\t\tnull,\r", "-\t\t\t(ReferenceBinding) receiverType,\r", "-\t\t\tscope,\r", "-\t\t\tnew ObjectVector(),\r", "-\t\t\tfalse,\r", "-\t\t\tfalse,\r", "-\t\t\tinvocationSite);\r", "-\t}\r", "+}\r", "+private void findFieldsAndMethods(char[] token, TypeBinding receiverType, Scope scope) {\r", "+\tif (token == null) return;\r", "+\r", "+\tif (receiverType.isBaseType()) return; // nothing else is possible with base types\r", "+\tif (receiverType.isArrayType()) {\r", "+\t\tif (token.length <= lengthField.length && CharOperation.prefixEquals(token, lengthField, false /* ignore case */))\r", "+\t\t\trequestor.acceptField(\r", "+\t\t\t\tNoChar,\r", "+\t\t\t\tNoChar,\r", "+\t\t\t\tlengthField,\r", "+\t\t\t\tNoChar,\r", "+\t\t\t\tNoChar,\r", "+\t\t\t\tlengthField,\r", "+\t\t\t\tCompilerModifiers.AccPublic,\r", "+\t\t\t\tstartPosition,\r", "+\t\t\t\tendPosition);\r", "+\r", "+\t\treceiverType = scope.getJavaLangObject();\r", "+\t}\r", "+\r", "+\tfindFields(token, (ReferenceBinding) receiverType, scope, new ObjectVector(), false);\r", "+\tfindMethods(token, null, (ReferenceBinding) receiverType, scope, new ObjectVector(), false, false);\r", "+}\r"]}], "num": 42314}