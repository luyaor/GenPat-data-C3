{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "02cfebf4a73b538ca2ba7b3ae9028bd4", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c2c09ee0a4e861ee3e1a1836540e138", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tprivate void formatTypeMembers(TypeDeclaration typeDeclaration)", "signatureAfterChange": " \tprivate void formatTypeMembers(TypeDeclaration typeDeclaration)", "diff": ["-\t\t\t\t\t\tif (member instanceof MultiFieldDeclaration){", "+\t\t\t\t\t\tif (member instanceof MultiFieldDeclaration) {", "-\t\t\t\t\t} else if (member instanceof EnumDeclaration) {", "-\t\t\t\t\t\tisChunkStart = memberAlignment.checkChunkStart(Alignment.CHUNK_ENUM, i, this.scribe.scanner.currentPosition);", "-\t\t\t\t\t\tformat((EnumDeclaration) member, typeDeclaration.scope, isChunkStart, i == 0);\t\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e8b168e6fa4d894f3d533d5384bee00", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "25be1dbaf8fb1fd662379be5af2493a9cf321ce6", "commitAfterChange": "e044b611f0f1c6c6d210b119e4ddf6a868a2b664", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\t\t// check for deprecated receiver type", "-\t\t\t\t\t\t// deprecation check for receiver type if not first token", "-\t\t\t\t\t\tif (indexOfFirstFieldBinding > 1) {", "-\t\t\t\t\t\t\tif (isTypeUseDeprecated(this.actualReceiverType, scope))", "-\t\t\t\t\t\t\t\tscope.problemReporter().deprecatedType(this.actualReceiverType, this);", "-\t\t\t\t\t\t}", "+//\t\t\t\t\t\t// check for deprecated receiver type", "+//\t\t\t\t\t\t// deprecation check for receiver type if not first token", "+//\t\t\t\t\t\tif (indexOfFirstFieldBinding > 1) {", "+//\t\t\t\t\t\t\tif (isTypeUseDeprecated(this.actualReceiverType, scope))", "+//\t\t\t\t\t\t\t\tscope.problemReporter().deprecatedType(this.actualReceiverType, this);", "+//\t\t\t\t\t\t}", "-\t\t\t\t\tif (isTypeUseDeprecated(type, scope))", "-\t\t\t\t\t\tscope.problemReporter().deprecatedType(type, this);", "+//\t\t\t\t\tif (isTypeUseDeprecated(type, scope))", "+//\t\t\t\t\t\tscope.problemReporter().deprecatedType(type, this);"]}], "num": 53269}