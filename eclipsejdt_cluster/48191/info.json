{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2a43b58e51dec2a38f8cb40775ff2c81", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8af00541f2d0bfe014a61281b17ec15b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "f9a29367ea8f3c4c9489072b937e0b301d28ae36", "commitAfterChange": "a4f4cf398b9c048885f33786fe40b8704243b93a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public Object[] getEmulationPath(ReferenceBinding targetEnclosingType, boolean onlyExactMatch, boolean denyEnclosingArgInConstructorCall)", "signatureAfterChange": " public Object[] getEmulationPath(ReferenceBinding targetEnclosingType, boolean onlyExactMatch, boolean denyEnclosingArgInConstructorCall)", "diff": ["-\t\tif ((syntheticArg = ((NestedTypeBinding) sourceType).getSyntheticArgument(targetEnclosingType, onlyExactMatch)) != null) {", "+\t\tif ((syntheticArg = ((NestedTypeBinding) sourceType).getSyntheticArgument(targetEnclosingType, onlyExactMatch, currentMethodScope.isConstructorCall)) != null) {", "+\t\t\tboolean isAnonymousAndHasEnclosing = sourceType.isAnonymousType()", "+\t\t\t\t&& sourceType.scope.referenceContext.allocation.enclosingInstance != null;", "+\t\t\t\t\t&& !isAnonymousAndHasEnclosing", "-\t\t\tSyntheticArgumentBinding enclosingArgument = nestedEnclosingType.getSyntheticArgument(nestedEnclosingType.enclosingType(), onlyExactMatch);", "+\t\t\tSyntheticArgumentBinding enclosingArgument = nestedEnclosingType.getSyntheticArgument(nestedEnclosingType.enclosingType(), onlyExactMatch, currentMethodScope.isConstructorCall);", "-\t\tpath[0] = ((NestedTypeBinding) sourceType).getSyntheticArgument(currentType, onlyExactMatch);", "+\t\tpath[0] = ((NestedTypeBinding) sourceType).getSyntheticArgument(currentType, onlyExactMatch, currentMethodScope.isConstructorCall);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3015ae51f0a0dfb71531ead5e965638", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "4b1cb82b00b0f3c43755c37280deb732ae600c1a", "commitAfterChange": "1caf2b41c370e66c328190589dd64f01b35d7384", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic Object[] getEmulationPath( \t\t\tReferenceBinding targetEnclosingType,  \t\t\tboolean onlyExactMatch, \t\t\tboolean ignoreEnclosingArgInConstructorCall)", "signatureAfterChange": " \tpublic Object[] getEmulationPath( \t\t\tReferenceBinding targetEnclosingType,  \t\t\tboolean onlyExactMatch, \t\t\tboolean denyEnclosingArgInConstructorCall)", "diff": ["-\t\t\tboolean ignoreEnclosingArgInConstructorCall) {", "+\t\t\tboolean denyEnclosingArgInConstructorCall) {", "-\t\tif (!currentMethodScope.isConstructorCall && !currentMethodScope.isStatic) {", "+\t\tif (!currentMethodScope.isStatic && !currentMethodScope.isConstructorCall) {", "-\t\t\t\tif (ignoreEnclosingArgInConstructorCall ", "+\t\t\t\tif (denyEnclosingArgInConstructorCall", "+\t\tif (sourceType.isAnonymousType()) {", "+\t\t\tReferenceBinding enclosingType = sourceType.enclosingType();", "+\t\t\tif (enclosingType.isNestedType()) {", "+\t\t\t\tNestedTypeBinding nestedEnclosingType = (NestedTypeBinding) enclosingType;", "+\t\t\t\tSyntheticArgumentBinding enclosingArgument = nestedEnclosingType.getSyntheticArgument(nestedEnclosingType.enclosingType(), onlyExactMatch);", "+\t\t\t\tif (enclosingArgument != null) {", "+\t\t\t\t\tFieldBinding syntheticField = sourceType.getSyntheticField(enclosingArgument);", "+\t\t\t\t\tif (syntheticField != null) {", "+\t\t\t\t\t\tif (syntheticField.type == targetEnclosingType || (!onlyExactMatch && ((ReferenceBinding)syntheticField.type).findSuperTypeErasingTo(targetEnclosingType) != null))", "+\t\t\t\t\t\t\treturn new Object[] { syntheticField };", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4d8bbd47ce0ba0edcd5c145947aa064", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "20607cc9da90bd1294c224d1eff6327bec9954ac", "commitAfterChange": "11dd8a99a088c0f8f708fce4ca2ab2a6381f554a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public Object[] getEmulationPath(ReferenceBinding targetEnclosingType, boolean onlyExactMatch, boolean denyEnclosingArgInConstructorCall)", "signatureAfterChange": " public Object[] getEmulationPath(ReferenceBinding targetEnclosingType, boolean onlyExactMatch, boolean denyEnclosingArgInConstructorCall)", "diff": ["-\t\tif ((syntheticArg = ((NestedTypeBinding) sourceType).getSyntheticArgument(targetEnclosingType, onlyExactMatch)) != null) {", "+\t\tif ((syntheticArg = ((NestedTypeBinding) sourceType).getSyntheticArgument(targetEnclosingType, onlyExactMatch, currentMethodScope.isConstructorCall)) != null) {", "+\t\t\tboolean isAnonymousAndHasEnclosing = sourceType.isAnonymousType()", "+\t\t\t\t&& sourceType.scope.referenceContext.allocation.enclosingInstance != null;", "+\t\t\t\t\t&& !isAnonymousAndHasEnclosing", "-\t\t\tSyntheticArgumentBinding enclosingArgument = nestedEnclosingType.getSyntheticArgument(nestedEnclosingType.enclosingType(), onlyExactMatch);", "+\t\t\tSyntheticArgumentBinding enclosingArgument = nestedEnclosingType.getSyntheticArgument(nestedEnclosingType.enclosingType(), onlyExactMatch, currentMethodScope.isConstructorCall);", "-\t\tpath[0] = ((NestedTypeBinding) sourceType).getSyntheticArgument(currentType, onlyExactMatch);", "+\t\tpath[0] = ((NestedTypeBinding) sourceType).getSyntheticArgument(currentType, onlyExactMatch, currentMethodScope.isConstructorCall);"]}], "num": 48191}