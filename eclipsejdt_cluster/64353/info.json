{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d95edc6ffb850dc75845e3fd1cb0e474", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17af597791fb4664f0bcf1899ca94455", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests.java", "commitBeforeChange": "34106cbe5c11d866864bb97a52bcf55f920c9662", "commitAfterChange": "f08e2fcfb74b9a513988b6c92b3d0f1c94eb6ecf", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void testResolveAbstractMethod() throws JavaModelException", "signatureAfterChange": " public void testResolveAbstractMethod() throws JavaModelException", "diff": ["-\tassertTrue(\"should have one method\", elements.length == 1 && ", "-\t\telements[0].getElementName().equals(\"foo\") &&", "-\t\telements[0] instanceof IMethod &&", "-\t\t((IMethod)elements[0]).getDeclaringType().getElementName().equals(\"SuperInterface\"));", "+\tassertElementsEqual(", "+\t\t\"Unexpected elements\",", "+\t\t\"foo [in SuperInterface [in SuperInterface.java [in <default> [in src [in Resolve]]]]]\",", "+\t\telements", "+\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6043bb008f80189bb4d6102d87ba0715", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests.java", "commitBeforeChange": "34106cbe5c11d866864bb97a52bcf55f920c9662", "commitAfterChange": "f08e2fcfb74b9a513988b6c92b3d0f1c94eb6ecf", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 40, "signatureBeforeChange": " public void testResolveMethod() throws JavaModelException", "signatureAfterChange": " public void testResolveMethod() throws JavaModelException", "diff": ["- */", "-public void testResolveMethod() throws JavaModelException {", "-\tICompilationUnit cu = getCompilationUnit(\"Resolve\", \"src\", \"\", \"ResolveMethod.java\");", "-\t", "-\tString str = cu.getSource();", "-\tString selectAt = \"foo(\\\"\";", "-\tString selection = \"foo\";", "-\tint start = str.lastIndexOf(selectAt);", "-\tint length = selection.length();", "-\tIJavaElement[] elements = cu.codeSelect(start, length);", "-", "-\tassertTrue(\"should have one method of 'foo'\",", "-\t\telements.length == 1 &&", "-\t\telements[0].getElementName().equals(\"foo\") &&", "-\t\telements[0] instanceof IMethod &&", "-\t\t((IMethod)elements[0]).getParameterTypes()[0].equals(\"QString;\"));\t\t", "-}", "+ */", "+public void testResolveMethod() throws JavaModelException {", "+\tICompilationUnit cu = getCompilationUnit(\"Resolve\", \"src\", \"\", \"ResolveMethod.java\");", "+\t", "+\tString str = cu.getSource();", "+\tString selectAt = \"foo(\\\"\";", "+\tString selection = \"foo\";", "+\tint start = str.lastIndexOf(selectAt);", "+\tint length = selection.length();", "+\tIJavaElement[] elements = cu.codeSelect(start, length);", "+", "+\tassertElementsEqual(", "+\t\t\"Unexpected elements\",", "+\t\t\"foo [in ResolveMethod [in ResolveMethod.java [in <default> [in src [in Resolve]]]]]\",", "+\t\telements", "+\t);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "667eefff3ff5a05a7a02f4975220a92c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests.java", "commitBeforeChange": "34106cbe5c11d866864bb97a52bcf55f920c9662", "commitAfterChange": "f08e2fcfb74b9a513988b6c92b3d0f1c94eb6ecf", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void testResolveConstructorDeclaration() throws JavaModelException", "signatureAfterChange": " public void testResolveConstructorDeclaration() throws JavaModelException", "diff": ["- */", "-public void testResolveConstructorDeclaration() throws JavaModelException {", "-\tICompilationUnit cu = getCompilationUnit(\"Resolve\", \"src\", \"\", \"ResolveConstructorDeclaration.java\");", "-\t", "-\tString str = cu.getSource();", "-\tString selectAt = \"ResolveConstructorDeclaration(i\";", "-\tString selection = \"ResolveConstructorDeclaration\";", "-\tint start = str.indexOf(selectAt);", "-\tint length = selection.length();", "-\tIJavaElement[] elements = cu.codeSelect(start, length);", "-\t", "-\tassertTrue(\"should have one method\", elements.length == 1 && ", "-\t\telements[0].getElementName().equals(\"ResolveConstructorDeclaration\") &&", "-\t\telements[0] instanceof IMethod &&", "-\t\t((IMethod)elements[0]).getParameterTypes()[0].equals(\"I\"));\t", "-}", "+ */", "+public void testResolveConstructorDeclaration() throws JavaModelException {", "+\tICompilationUnit cu = getCompilationUnit(\"Resolve\", \"src\", \"\", \"ResolveConstructorDeclaration.java\");", "+\t", "+\tString str = cu.getSource();", "+\tString selectAt = \"ResolveConstructorDeclaration(i\";", "+\tString selection = \"ResolveConstructorDeclaration\";", "+\tint start = str.indexOf(selectAt);", "+\tint length = selection.length();", "+\tIJavaElement[] elements = cu.codeSelect(start, length);", "+\t", "+\tassertElementsEqual(", "+\t\t\"Unexpected elements\",", "+\t\t\"ResolveConstructorDeclaration [in ResolveConstructorDeclaration [in ResolveConstructorDeclaration.java [in <default> [in src [in Resolve]]]]]\",", "+\t\telements", "+\t);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0db2bb79c9f3f974e6000afe3f1bbfa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests.java", "commitBeforeChange": "34106cbe5c11d866864bb97a52bcf55f920c9662", "commitAfterChange": "f08e2fcfb74b9a513988b6c92b3d0f1c94eb6ecf", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void testResolveConstructor() throws JavaModelException", "signatureAfterChange": " public void testResolveConstructor() throws JavaModelException", "diff": ["- */", "-public void testResolveConstructor() throws JavaModelException {", "-\tICompilationUnit cu = getCompilationUnit(\"Resolve\", \"src\", \"\", \"ResolveConstructor.java\");", "-\t", "-\tString str = cu.getSource();", "-\tString selectAt = \"ResolveConstructor(\\\"\";", "-\tString selection = \"ResolveConstructor\";", "-\tint start = str.lastIndexOf(selectAt);", "-\tint length = selection.length();", "-\tIJavaElement[] elements = cu.codeSelect(start, length);", "-\t", "-\tassertTrue(\"should have one method\", elements.length == 1 && ", "-\t\telements[0].getElementName().equals(\"ResolveConstructor\") &&", "-\t\telements[0] instanceof IMethod &&", "-\t\t((IMethod)elements[0]).getParameterTypes()[0].equals(\"QString;\"));\t", "-}", "+ */", "+public void testResolveConstructor() throws JavaModelException {", "+\tICompilationUnit cu = getCompilationUnit(\"Resolve\", \"src\", \"\", \"ResolveConstructor.java\");", "+\t", "+\tString str = cu.getSource();", "+\tString selectAt = \"ResolveConstructor(\\\"\";", "+\tString selection = \"ResolveConstructor\";", "+\tint start = str.lastIndexOf(selectAt);", "+\tint length = selection.length();", "+\tIJavaElement[] elements = cu.codeSelect(start, length);", "+\t", "+\tassertElementsEqual(", "+\t\t\"Unexpected elements\",", "+\t\t\"ResolveConstructor [in ResolveConstructor [in ResolveConstructor.java [in <default> [in src [in Resolve]]]]]\",", "+\t\telements", "+\t);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2812438d763c01942cfe9701c6b5f26", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests.java", "commitBeforeChange": "34106cbe5c11d866864bb97a52bcf55f920c9662", "commitAfterChange": "f08e2fcfb74b9a513988b6c92b3d0f1c94eb6ecf", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 41, "signatureBeforeChange": " public void testResolveMethodDeclaration() throws JavaModelException", "signatureAfterChange": " public void testResolveMethodDeclaration() throws JavaModelException", "diff": ["- */", "-public void testResolveMethodDeclaration() throws JavaModelException {", "-\tICompilationUnit cu = getCompilationUnit(\"Resolve\", \"src\", \"\", \"ResolveMethodDeclaration.java\");", "-\t", "-\tString str = cu.getSource();", "-\tString selectAt = \"foo(i\";", "-\tString selection = \"foo\";", "-\tint start = str.indexOf(selectAt);", "-\tint length = selection.length();", "-\tIJavaElement[] elements = cu.codeSelect(start, length);", "-\t", "-\tassertTrue(\"should have one method\", elements.length == 1 && ", "-\t\telements[0].getElementName().equals(\"foo\") &&", "-\t\telements[0] instanceof IMethod &&", "-\t\t((IMethod)elements[0]).getParameterTypes()[0].equals(\"I\"));\t", "-}", "+ */", "+public void testResolveMethodDeclaration() throws JavaModelException {", "+\tICompilationUnit cu = getCompilationUnit(\"Resolve\", \"src\", \"\", \"ResolveMethodDeclaration.java\");", "+\t", "+\tString str = cu.getSource();", "+\tString selectAt = \"foo(i\";", "+\tString selection = \"foo\";", "+\tint start = str.indexOf(selectAt);", "+\tint length = selection.length();", "+\tIJavaElement[] elements = cu.codeSelect(start, length);", "+\t", "+\tassertElementsEqual(", "+\t\t\"Unexpected elements\",", "+\t\t\"foo [in ResolveMethodDeclaration [in ResolveMethodDeclaration.java [in <default> [in src [in Resolve]]]]]\",", "+\t\telements", "+\t);", "+}"]}], "num": 64353}