{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "92c63a90090075e0f71a88ebb47569a5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "080777bcc0d78335299ef4ca074a17de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathInitializerTests.java", "commitBeforeChange": "6954f6f09ec0fa4357c31e7abaa82f5c7cd86dbc", "commitAfterChange": "1681420a49895c71b06fecf2cdaa16ab79145282", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " public void testContainerInitializer17() throws CoreException", "signatureAfterChange": " public void testContainerInitializer17() throws CoreException", "diff": ["-\t\tContainerInitializer.setInitializer(new DefaultContainerInitializer(new String[] {\"P2\", \"/P1/lib.jar\"}));", "+\t\tContainerInitializer.setInitializer(new DefaultContainerInitializer(new String[] {\"P2\", \"/P1/lib.jar\", \"P3\", \"/P1/lib.jar\"}));", "-\t\tContainerInitializer.setInitializer(new DefaultContainerInitializer(new String[] {\"P3\", \"/P1/lib.jar\"}));", "-\t\tContainerInitializer.setInitializer(new DefaultContainerInitializer(new String[] {\"P2\", \"/P1/lib.jar\"}) {", "+\t\tContainerInitializer.setInitializer(new DefaultContainerInitializer(new String[] {\"P2\", \"/P1/lib.jar\", \"P3\", \"/P1/lib.jar\"}) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "154a07203aff05d3c8581074d9e856ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "73ab4fb6ad4900fe0fe0cff84b1e8987d60b9f9c", "commitAfterChange": "71dd900bd4b484c4ca74983456159f0694fb9053", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic static ClasspathContainerInitializer getClasspathContainerInitializer(String containerID)", "signatureAfterChange": " \tpublic static ClasspathContainerInitializer getClasspathContainerInitializer(String containerID)", "diff": ["-\tpublic static ClasspathContainerInitializer getClasspathContainerInitializer(String containerID){", "-\t\t", "+\tpublic static ClasspathContainerInitializer getClasspathContainerInitializer(String containerID) {", "+\t\tHashMap containerInitializersCache = JavaModelManager.getJavaModelManager().containerInitializersCache;", "+\t\tClasspathContainerInitializer initializer = (ClasspathContainerInitializer) containerInitializersCache.get(containerID);", "+\t\tif (initializer == null) {", "+\t\t\tinitializer = computeClasspathContainerInitializer(containerID);", "+\t\t\tif (initializer == null)", "+\t\t\t\treturn null;", "+\t\t\tcontainerInitializersCache.put(containerID, initializer);", "+\t\t}", "+\t\treturn initializer;", "+\t}"]}], "num": 27458}