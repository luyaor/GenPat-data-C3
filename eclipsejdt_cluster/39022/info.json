{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9ca703a182bec6bc1e626eb57a546f32", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b5fe53cdc45c5a14ecd518a88c6e7a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ExplicitConstructorCall.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tpublic FlowInfo analyseCode(", "-\t\tBlockScope currentScope,", "-\t\tFlowContext flowContext,", "-\t\tFlowInfo flowInfo) {", "-", "+\tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo) {", "-\t\t\tif (qualification != null) {", "+\t\t\tif (this.qualification != null) {", "-\t\t\t\t\tqualification", "+\t\t\t\t\tthis.qualification", "-\t\t\tif (arguments != null) {", "-\t\t\t\tfor (int i = 0, max = arguments.length; i < max; i++) {", "+\t\t\tif (this.arguments != null) {", "+\t\t\t\tfor (int i = 0, max = this.arguments.length; i < max; i++) {", "-\t\t\t\t\t\targuments[i]", "+\t\t\t\t\t\tthis.arguments[i]", "-\t\t\tif ((thrownExceptions = binding.thrownExceptions) != Binding.NO_EXCEPTIONS) {", "+\t\t\tif ((thrownExceptions = this.binding.thrownExceptions) != Binding.NO_EXCEPTIONS) {", "-\t\t\t\t\t(accessMode == ImplicitSuper)", "+\t\t\t\t\t(this.accessMode == ExplicitConstructorCall.ImplicitSuper)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb5b01b6235c73b6597671b21f04697a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "8cf1dcdf2235b54b4116fb6f086a0d218e6b26f7", "commitAfterChange": "45fa88428d5d04389be0956547a1793c4e66bac3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " \t public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tboolean nonStatic = !binding.isStatic();", "-\tflowInfo = receiver.analyseCode(currentScope, flowContext, flowInfo, nonStatic).unconditionalInits();", "+\tboolean nonStatic = !this.binding.isStatic();", "+\tflowInfo = this.receiver.analyseCode(currentScope, flowContext, flowInfo, nonStatic).unconditionalInits();", "-\t\treceiver.checkNPE(currentScope, flowContext, flowInfo);", "+\t\tthis.receiver.checkNPE(currentScope, flowContext, flowInfo);", "-\tif (arguments != null) {", "-\t\tint length = arguments.length;", "+\tif (this.arguments != null) {", "+\t\tint length = this.arguments.length;", "-\t\t\tflowInfo = arguments[i].analyseCode(currentScope, flowContext, flowInfo).unconditionalInits();", "+\t\t\tflowInfo = this.arguments[i].analyseCode(currentScope, flowContext, flowInfo).unconditionalInits();", "-\tif ((thrownExceptions = binding.thrownExceptions) != Binding.NO_EXCEPTIONS) {", "+\tif ((thrownExceptions = this.binding.thrownExceptions) != Binding.NO_EXCEPTIONS) {"]}], "num": 39022}