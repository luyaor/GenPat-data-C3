{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7565fbc57260dd042286e2401b5ee2a7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "722497356e467b3bc0d87e89c3fe4538", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "40dc3e7d9dd43b267f2ba783336b865193eac1be", "commitAfterChange": "01b9296a9ea93c38acbcfd0ee226b1f00d5fc41b", "methodNumberBeforeChange": 327, "methodNumberAfterChange": 327, "signatureBeforeChange": " \tpublic void test325()", "signatureAfterChange": " \tpublic void test325()", "diff": ["-\t\t\t\"should also report illegal construct on init of j field\");", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tX<String>.Item<Thread> i = new X<Exception>().new Item<Thread>();\\n\" + ", "+\t\t\t\"\t                       ^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from X<Exception>.Item<Thread> to X<String>.Item<Thread>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 12)\\n\" + ", "+\t\t\t\"\tX.Item k = new X.Item();\\n\" + ", "+\t\t\t\"\t           ^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"No enclosing instance of type X<T> is accessible. Must qualify the allocation with an enclosing instance of type X<T> (e.g. x.new A() where x is an instance of X<T>).\\n\" + ", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca17b04d630882ce5f89de672494c178", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericsRegressionTest_1_8.java", "commitBeforeChange": "341ead40b71a0bffec0f8325f6b29d2b567caf8a", "commitAfterChange": "f5884fa8b0573c548eaeabaa37cd99c51e41fd3b", "methodNumberBeforeChange": 123, "methodNumberAfterChange": 123, "signatureBeforeChange": " public void testBug435767()", "signatureAfterChange": " public void testBug435767()", "diff": ["-\t\t\"\");", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in DummyClass.java (at line 18)\\n\" + ", "+\t\t\"\t.collect(Collectors.toMap(path -> this.getKey(path), path -> this.getValue(path))));\\n\" + ", "+\t\t\"\t                                       ^^^^^^\\n\" + ", "+\t\t\"The method getKey(String) in the type DummyClass is not applicable for the arguments (Object)\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in DummyClass.java (at line 18)\\n\" + ", "+\t\t\"\t.collect(Collectors.toMap(path -> this.getKey(path), path -> this.getValue(path))));\\n\" + ", "+\t\t\"\t                                                                  ^^^^^^^^\\n\" + ", "+\t\t\"The method getValue(String) in the type DummyClass is not applicable for the arguments (Object)\\n\" + ", "+\t\t\"----------\\n\");"]}], "num": 5459}