{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ea826d130c92a18cc33e37d8dc4e4174", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "022e10eee766e2580343e2d0a1f60c98", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SynchronizedStatement.java", "commitBeforeChange": "bb035342af3e77c43a12431c380fb2a6fe6ec67e", "commitAfterChange": "d9aabee2fc6180b2ed4f4131332dc5a46cc37a0d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["+\t\tthis.resetAnyExceptionHandlers(); // could reenter if redoing codegen in wide-mode", "-\t\t\tExceptionLabel anyExceptionHandler = new ExceptionLabel(codeStream, null);", "-\t\t\t//'null' denotes any kind of exception", "+\t\t\tthis.enterAnyExceptionHandler(codeStream);", "-\t\t\tanyExceptionHandler.placeEnd();", "-\t\t\tanyExceptionHandler.place();", "+\t\t\tthis.exitAnyExceptionHandler();", "+\t\t\tthis.placeAllAnyExceptionHandlers();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "889d0e3dd906227fde3d74bf76db507c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "a708a833352a17a462cbe9e9346d660fa6317a1e", "commitAfterChange": "0e8e783b8823e467b82792c7ef9289caad32e202", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 67, "signatureBeforeChange": "  \tvoid printIndentationIfNecessary()", "signatureAfterChange": "  \tvoid printIndentationIfNecessary()", "diff": ["-\t\tStringBuffer buffer = new StringBuffer();", "-\t\tprintIndentationIfNecessary(buffer);", "-\t\tif (buffer.length() > 0) {", "-\t\t\taddInsertEdit(this.scanner.getCurrentTokenStartPosition(), buffer.toString());", "+\t\tthis.tempBuffer.setLength(0);", "+\t\tprintIndentationIfNecessary(this.tempBuffer);", "+\t\tif (this.tempBuffer.length() > 0) {", "+\t\t\taddInsertEdit(this.scanner.getCurrentTokenStartPosition(), this.tempBuffer.toString());"]}], "num": 53678}