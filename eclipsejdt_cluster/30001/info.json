{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "55517813d26f17e0b18310753d60cab1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "171c3432b22e9c1618bb89aac580f228", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/diagnose/LexStream.java", "commitBeforeChange": "d100192f697f326dff66b368f9d71d16adde29e2", "commitAfterChange": "c99e3bd7df24eb7b0133eb18cfef3f12a0f60a4d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprivate void readTokenFromScanner()", "signatureAfterChange": " \t \tprivate void readTokenFromScanner()", "diff": ["-\t\t\t\t\tif(!RangeUtil.isInInterval(start, end, intervalStartToSkip, intervalEndToSkip)) {", "+\t\t\t\t\t", "+\t\t\t\t\tint nextInterval = currentInterval + 1;", "+\t\t\t\t\tif(intervalStartToSkip.length == 0 ||", "+\t\t\t\t\t\t\tnextInterval >= intervalStartToSkip.length ||", "+\t\t\t\t\t\t\tstart < intervalStartToSkip[nextInterval]) {", "-\t\t\t\t\t\tint pInterval = RangeUtil.getPreviousInterval(start, end, intervalStartToSkip, intervalEndToSkip);", "-\t\t\t\t\t\tif(pInterval != previousInterval && (intervalFlagsToSkip[previousInterval + 1] & RangeUtil.IGNORE) == 0){", "+\t\t\t\t\t\tif(currentInterval != previousInterval && (intervalFlagsToSkip[currentInterval] & RangeUtil.IGNORE) == 0){", "-\t\t\t\t\t\t\tif((intervalFlagsToSkip[pInterval] & RangeUtil.LBRACE_MISSING) != 0){", "+\t\t\t\t\t\t\tif((intervalFlagsToSkip[currentInterval] & RangeUtil.LBRACE_MISSING) != 0){", "-\t\t\t\t\t\tpreviousInterval = pInterval;", "+\t\t\t\t\t\tpreviousInterval = currentInterval;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tscanner.resetTo(intervalEndToSkip[++currentInterval] + 1, scanner.eofPosition - 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2e8149e314a12e0fb0474ea27068387", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/diagnose/LexStream.java", "commitBeforeChange": "94dcb6652f514256018e8c1f7dcc1acc7030201c", "commitAfterChange": "c1caadb3e97f0c5d02c6ad3748ed5e3373af3f00", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprivate void readTokenFromScanner()", "signatureAfterChange": " \t \tprivate void readTokenFromScanner()", "diff": ["-\t\t\t\t\tif(!Util.isInInterval(start, end, intervalStartToSkip, intervalEndToSkip)) {", "+\t\t\t\t\tif(!RangeUtil.isInInterval(start, end, intervalStartToSkip, intervalEndToSkip)) {", "-\t\t\t\t\t\tint pInterval = Util.getPreviousInterval(start, end, intervalStartToSkip, intervalEndToSkip);", "-\t\t\t\t\t\tif(pInterval != previousInterval && (intervalFlagsToSkip[previousInterval + 1] & Util.IGNORE) == 0){", "+\t\t\t\t\t\tint pInterval = RangeUtil.getPreviousInterval(start, end, intervalStartToSkip, intervalEndToSkip);", "+\t\t\t\t\t\tif(pInterval != previousInterval && (intervalFlagsToSkip[previousInterval + 1] & RangeUtil.IGNORE) == 0){", "-\t\t\t\t\t\t\tif((intervalFlagsToSkip[pInterval] & Util.LBRACE_MISSING) != 0){", "+\t\t\t\t\t\t\tif((intervalFlagsToSkip[pInterval] & RangeUtil.LBRACE_MISSING) != 0){"]}], "num": 30001}