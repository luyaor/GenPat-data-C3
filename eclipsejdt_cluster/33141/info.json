{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "df94415e8232226c73fe72d17f8e74f6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab4c025d6314aee64d4ef3dbd429289b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "909d7ea106422d6ae8df5392c045bb0bb269cbe3", "commitAfterChange": "1b7cc740dd9297bd0f4bafe7fea18d712058ba6e", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void recordUsingNullReference(Scope scope, LocalVariableBinding local, \t\tExpression reference, int checkType, FlowInfo flowInfo)", "signatureAfterChange": " public void recordUsingNullReference(Scope scope, LocalVariableBinding local, \t\tExpression reference, int checkType, FlowInfo flowInfo)", "diff": ["+\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba066a462552c7c7121838bc5a9d45fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "3307a3b21f8472cc998512e9e4cd5afdd4f17b52", "commitAfterChange": "b155f47580a90f694a899aae6d06a1ff29f450b8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\ttrueFlowInfo.setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\tif ((trueFlowInfo.reachMode() & FlowInfo.UNREACHABLE) == 0) {", "+\t\t\t\tcurrentScope.problemReporter().fakeReachable(this.valueIfTrue);", "+\t\t\t\ttrueFlowInfo.setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t}", "-\t\t\tfalseFlowInfo.setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\tif ((falseFlowInfo.reachMode() & FlowInfo.UNREACHABLE) == 0) {", "+\t\t\t\tcurrentScope.problemReporter().fakeReachable(this.valueIfFalse);", "+\t\t\t\tfalseFlowInfo.setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t}", "-\t\t\tif (isValueIfTrueOptimizedFalse) trueInfoWhenTrue.setReachMode(FlowInfo.UNREACHABLE);", "-\t\t\tif (isValueIfFalseOptimizedFalse) falseInfoWhenTrue.setReachMode(FlowInfo.UNREACHABLE);", "-\t\t\tif (isValueIfTrueOptimizedTrue) trueInfoWhenFalse.setReachMode(FlowInfo.UNREACHABLE);", "-\t\t\tif (isValueIfFalseOptimizedTrue) falseInfoWhenFalse.setReachMode(FlowInfo.UNREACHABLE);", "-", "+\t\t\tif (isValueIfTrueOptimizedFalse) {", "+\t\t\t\ttrueInfoWhenTrue.setReachMode(FlowInfo.UNREACHABLE);\t\t\t\t", "+\t\t\t}", "+\t\t\tif (isValueIfFalseOptimizedFalse) {", "+\t\t\t\tfalseInfoWhenTrue.setReachMode(FlowInfo.UNREACHABLE);\t", "+\t\t\t}", "+\t\t\tif (isValueIfTrueOptimizedTrue) {", "+\t\t\t\ttrueInfoWhenFalse.setReachMode(FlowInfo.UNREACHABLE);\t", "+\t\t\t}", "+\t\t\tif (isValueIfFalseOptimizedTrue) {", "+\t\t\t\tfalseInfoWhenFalse.setReachMode(FlowInfo.UNREACHABLE);\t", "+\t\t\t}"]}], "num": 33141}