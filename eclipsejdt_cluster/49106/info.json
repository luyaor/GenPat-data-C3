{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "24e81209062f04c2ddf2e066762eaa27", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a6b208266a0830e57bd47460928926a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public final boolean needBlankFinalFieldInitializationCheck(FieldBinding binding)", "signatureAfterChange": " public final boolean needBlankFinalFieldInitializationCheck(FieldBinding binding)", "diff": ["-\t\tif (enclosingType == fieldDeclaringClass) {", "+\t\tif (TypeBinding.equalsEquals(enclosingType, fieldDeclaringClass)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19c39dffdd7d5b0951323217a8844be4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  public TypeBinding resolveTypeExpecting(BlockScope scope, TypeBinding expectedType)", "signatureAfterChange": "  public TypeBinding resolveTypeExpecting(BlockScope scope, TypeBinding expectedType)", "diff": ["-\tif (expressionType == expectedType) return expressionType;", "+\tif (TypeBinding.equalsEquals(expressionType, expectedType)) return expressionType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22fb4bb4ef3beb14a80f150c051afa60", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImplicitNullAnnotationVerifier.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tstatic boolean areTypesEqual(TypeBinding one, TypeBinding two)", "signatureAfterChange": " \tstatic boolean areTypesEqual(TypeBinding one, TypeBinding two)", "diff": ["-\t\tif (one == two) return true;", "+\t\tif (TypeBinding.equalsEquals(one, two)) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c5dc53e6b3d26a13adfcde49aeec0a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": "  \tprivate char[] computePrefix(SourceTypeBinding declarationType, SourceTypeBinding invocationType, boolean isStatic)", "signatureAfterChange": "  \tprivate char[] computePrefix(SourceTypeBinding declarationType, SourceTypeBinding invocationType, boolean isStatic)", "diff": ["-\t\t} else if (declarationType == invocationType) {", "+\t\t} else if (TypeBinding.equalsEquals(declarationType, invocationType)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3da871922b34599be7e794305535c841", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public boolean isConstantValueOfTypeAssignableToType(TypeBinding constantType, TypeBinding targetType)", "signatureAfterChange": " public boolean isConstantValueOfTypeAssignableToType(TypeBinding constantType, TypeBinding targetType)", "diff": ["-\tif (constantType == targetType)", "+\tif (TypeBinding.equalsEquals(constantType, targetType))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44545485b01cdb8f84594c77b9482973", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 188, "methodNumberAfterChange": 188, "signatureBeforeChange": "  \tprivate void findNestedTypes( \t\tchar[] typeName, \t\tSourceTypeBinding currentType, \t\tScope scope, \t\tboolean proposeAllMemberTypes, \t\tObjectVector typesFound)", "signatureAfterChange": "  \tprivate void findNestedTypes( \t\tchar[] typeName, \t\tSourceTypeBinding currentType, \t\tScope scope, \t\tboolean proposeAllMemberTypes, \t\tObjectVector typesFound)", "diff": ["-\t\t\t\t\t\t\t\t\tif (localType == otherType)", "+\t\t\t\t\t\t\t\t\tif (TypeBinding.equalsEquals(localType, otherType))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a650799a0c17fd2d1d715892cee987b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void computeConversion(Scope scope, TypeBinding runtimeType, TypeBinding compileTimeType)", "signatureAfterChange": " public void computeConversion(Scope scope, TypeBinding runtimeType, TypeBinding compileTimeType)", "diff": ["-\t\tif (boxedType == runtimeType) // Object o = 12;", "+\t\tif (TypeBinding.equalsEquals(boxedType, runtimeType)) // Object o = 12;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fa305badd187d20f962982cca43aa52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypeElementImpl.java", "commitBeforeChange": "017f9918b88fff3a8fea9daac2df2ba8b7e560d6", "commitAfterChange": "5066a165665c172193991ef548a06f9b6acd680e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \t@Override \tpublic boolean hides(Element hidden)", "signatureAfterChange": "  \t@Override \tpublic boolean hides(Element hidden)", "diff": ["-\t\tif (hiddenBinding == hiderBinding) {", "+\t\tif (TypeBinding.equalsEquals(hiddenBinding, hiderBinding)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fb4eba5656b77c2e9d2b24ae19cf55b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " private boolean subTypeOfType(ReferenceBinding subType, ReferenceBinding typeBinding)", "signatureAfterChange": " private boolean subTypeOfType(ReferenceBinding subType, ReferenceBinding typeBinding)", "diff": ["-\tif (subType == typeBinding) return true;", "+\tif (TypeBinding.equalsEquals(subType, typeBinding)) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c4eb3996a94469b0a1ca248c316f581", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "82adc87bce1ed4088802638154568eeec8ab8e88", "commitAfterChange": "b1c69f20f23ddb575225e5b5cb5d470714f41aad", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "  \tprivate boolean addDependencies(BoundSet boundSet, Set<InferenceVariable> variableSet, InferenceVariable currentVariable, int min)", "signatureAfterChange": "  \tprivate boolean addDependencies(BoundSet boundSet, Set<InferenceVariable> variableSet, InferenceVariable currentVariable, int min)", "diff": ["-\t\t\tif (nextVariable == currentVariable) continue; //$IDENTITY-COMPARISON$ Inference variables", "+\t\t\tif (TypeBinding.equalsEquals(nextVariable, currentVariable)) continue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e9301ce9345fa0017bedae84561b6e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  public boolean checkUnsafeCast(Scope scope, TypeBinding castType, TypeBinding expressionType, TypeBinding match, boolean isNarrowing)", "signatureAfterChange": "  public boolean checkUnsafeCast(Scope scope, TypeBinding castType, TypeBinding expressionType, TypeBinding match, boolean isNarrowing)", "diff": ["-\tif (match == castType) {", "+\tif (TypeBinding.equalsEquals(match, castType)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82d20caa2de6cf3ad1d86741ee289ac7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 133, "signatureBeforeChange": "  public void hierarchyCircularity(TypeVariableBinding type, ReferenceBinding superType, TypeReference reference)", "signatureAfterChange": "  public void hierarchyCircularity(TypeVariableBinding type, ReferenceBinding superType, TypeReference reference)", "diff": ["-\tif (type == superType)", "+\tif (TypeBinding.equalsEquals(type, superType))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d761a938d01cd0b8fd230a164ed3898", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypeParameterElementImpl.java", "commitBeforeChange": "017f9918b88fff3a8fea9daac2df2ba8b7e560d6", "commitAfterChange": "5066a165665c172193991ef548a06f9b6acd680e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate List<? extends TypeMirror> calculateBounds()", "signatureAfterChange": " \tprivate List<? extends TypeMirror> calculateBounds()", "diff": ["-\t\t\tif (firstClassOrArrayBound == varSuperclass) {", "+\t\t\tif (TypeBinding.equalsEquals(firstClassOrArrayBound, varSuperclass)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1da88880481e0a40f816ce52968d6ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "  boolean isSameClassOrSubclassOf(ReferenceBinding testClass, ReferenceBinding superclass)", "signatureAfterChange": "  boolean isSameClassOrSubclassOf(ReferenceBinding testClass, ReferenceBinding superclass)", "diff": ["-\t\tif (testClass == superclass) return true;", "+\t\tif (TypeBinding.equalsEquals(testClass, superclass)) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5b11e662308f3a5f7ef4fadd8ff7417", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 132, "signatureBeforeChange": "  public void hierarchyCircularity(SourceTypeBinding sourceType, ReferenceBinding superType, TypeReference reference)", "signatureAfterChange": "  public void hierarchyCircularity(SourceTypeBinding sourceType, ReferenceBinding superType, TypeReference reference)", "diff": ["-\tif (sourceType == superType)", "+\tif (TypeBinding.equalsEquals(sourceType, superType))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c787d9ebcdb624a935a34f8ba1dd3eed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/ThrownExceptionFinder.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tprivate void removeCaughtException(ReferenceBinding caughtException)", "signatureAfterChange": "  \tprivate void removeCaughtException(ReferenceBinding caughtException)", "diff": ["-\t\t\t\tif (exception == caughtException) {", "+\t\t\t\tif (TypeBinding.equalsEquals(exception, caughtException)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbdca7076d481148fca3d0ffd37961b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": "  \tprivate int computeRelevanceForInheritance(ReferenceBinding receiverType, ReferenceBinding declaringClass)", "signatureAfterChange": "  \tprivate int computeRelevanceForInheritance(ReferenceBinding receiverType, ReferenceBinding declaringClass)", "diff": ["-\t\tif (receiverType == declaringClass) return R_NON_INHERITED;", "+\t\tif (TypeBinding.equalsEquals(receiverType, declaringClass)) return R_NON_INHERITED;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4ad3ab887f25c538a70253193f53df2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public boolean checkUnsafeCast(Scope scope, TypeBinding castType, TypeBinding expressionType, TypeBinding match, boolean isNarrowing)", "signatureAfterChange": "  public boolean checkUnsafeCast(Scope scope, TypeBinding castType, TypeBinding expressionType, TypeBinding match, boolean isNarrowing)", "diff": ["-\tif (match == castType) {", "+\tif (TypeBinding.equalsEquals(match, castType)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e732cfe3611ab7ab2b90e9294272d990", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void annotationCircularity(TypeBinding sourceType, TypeBinding otherType, TypeReference reference)", "signatureAfterChange": " public void annotationCircularity(TypeBinding sourceType, TypeBinding otherType, TypeReference reference)", "diff": ["-\tif (sourceType == otherType)", "+\tif (TypeBinding.equalsEquals(sourceType, otherType))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fda1b3abc34bac963abbc6e4862c6da5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 180, "methodNumberAfterChange": 180, "signatureBeforeChange": " \tprivate void findMemberTypes( \t\tchar[] typeName, \t\tReferenceBinding[] memberTypes, \t\tObjectVector typesFound, \t\tReferenceBinding receiverType, \t\tSourceTypeBinding invocationType, \t\tboolean staticOnly, \t\tboolean staticFieldsAndMethodOnly, \t\tboolean fromStaticImport, \t\tboolean checkQualification, \t\tScope scope, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems)", "signatureAfterChange": " \tprivate void findMemberTypes( \t\tchar[] typeName, \t\tReferenceBinding[] memberTypes, \t\tObjectVector typesFound, \t\tReferenceBinding receiverType, \t\tSourceTypeBinding invocationType, \t\tboolean staticOnly, \t\tboolean staticFieldsAndMethodOnly, \t\tboolean fromStaticImport, \t\tboolean checkQualification, \t\tScope scope, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems)", "diff": ["-\t\t\t\tif (memberType == otherType)", "+\t\t\t\tif (TypeBinding.equalsEquals(memberType, otherType))"]}], "num": 49106}