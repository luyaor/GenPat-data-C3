{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ce9245a12eda20b9bcd1fe336d6a4b3", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "650927004c8c86036ced88bfd00b3697", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Argument.java", "commitBeforeChange": "c7e61e314902d7cf48e71c1a1c0437bb40107c2e", "commitAfterChange": "8a1621e802c664e59aba36b8a87f59ae57902e37", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void bind(MethodScope scope, TypeBinding typeBinding, boolean used)", "signatureAfterChange": "  \tpublic TypeBinding bind(MethodScope scope, TypeBinding typeBinding, boolean used)", "diff": ["-\tpublic void bind(MethodScope scope, TypeBinding typeBinding, boolean used) {", "-\t\tcreateBinding(scope, typeBinding); // basically a no-op if createBinding() was called before", "+\tpublic TypeBinding bind(MethodScope scope, TypeBinding typeBinding, boolean used) {", "+\t\tTypeBinding newTypeBinding = createBinding(scope, typeBinding); // basically a no-op if createBinding() was called before", "+\t\treturn newTypeBinding;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dafb62a943387d3ee55c7cdb6c3ff735", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "34d9db62212af32e829d05a97ab4f5ce2667a1ec", "commitAfterChange": "753d6a0ebf6c471f5abc3f7b84f5e9fd7d55bf9e", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \t\t \t\tpublic synchronized void setClasspath(IClasspathEntry[] newRawClasspath, IPath newOutputLocation, IJavaModelStatus newRawClasspathStatus, IClasspathEntry[] newResolvedClasspath, Map newRootPathToRawEntries, Map newRootPathToResolvedEntries, IJavaModelStatus newUnresolvedEntryStatus)", "signatureAfterChange": " \t\t \t\tpublic synchronized ClasspathChange setClasspath(IClasspathEntry[] newRawClasspath, IPath newOutputLocation, IJavaModelStatus newRawClasspathStatus, IClasspathEntry[] newResolvedClasspath, Map newRootPathToRawEntries, Map newRootPathToResolvedEntries, IJavaModelStatus newUnresolvedEntryStatus)", "diff": ["-\t\tpublic synchronized void setClasspath(IClasspathEntry[] newRawClasspath, IPath newOutputLocation, IJavaModelStatus newRawClasspathStatus, IClasspathEntry[] newResolvedClasspath, Map newRootPathToRawEntries, Map newRootPathToResolvedEntries, IJavaModelStatus newUnresolvedEntryStatus) {", "+\t\tpublic synchronized ClasspathChange setClasspath(IClasspathEntry[] newRawClasspath, IPath newOutputLocation, IJavaModelStatus newRawClasspathStatus, IClasspathEntry[] newResolvedClasspath, Map newRootPathToRawEntries, Map newRootPathToResolvedEntries, IJavaModelStatus newUnresolvedEntryStatus) {", "-\t\t\tdeltaProcessor.addClasspathChange(this.project, this.rawClasspath, this.outputLocation, this.resolvedClasspath);", "+\t\t\tClasspathChange classpathChange = deltaProcessor.addClasspathChange(this.project, this.rawClasspath, this.outputLocation, this.resolvedClasspath);", "+\t\t\t", "+\t\t\treturn classpathChange;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f66c4092f19024309b7f58a22ea0fb3c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/workspace/Converter/junit/runner/ClassPathTestCollector.java", "commitBeforeChange": "5f14954289dcfe3aa64cd723a9ea9807dea33e05", "commitAfterChange": "4b4449dde49cdcaed9ae00d1ac057ecfeb8d8c23", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tvoid collectFilesInRoots(Vector roots, Hashtable result)", "signatureAfterChange": " \t \tHashtable collectFilesInRoots(Vector roots)", "diff": ["-\tvoid collectFilesInRoots(Vector roots, Hashtable result) {", "+\tHashtable collectFilesInRoots(Vector roots) {", "+\t\tHashtable result= new Hashtable(100);", "+\t\treturn result;"]}], "num": 59454}