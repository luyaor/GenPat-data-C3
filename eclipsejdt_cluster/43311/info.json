{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "30182b6ee038df4b0b1faae7bb358565", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bcbf7fb36f7a14d003e813cbe0f29d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JarPackageFragmentRoot.java", "commitBeforeChange": "9de11e1c2a41a21613174b6ab91cab4369b64686", "commitAfterChange": "d8ffd58c7c4b7aeb0d38e216b7c221e9b8f78625", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic Object[] getNonJavaResources() throws JavaModelException", "signatureAfterChange": " \tpublic Object[] getNonJavaResources() throws JavaModelException", "diff": ["-\t\treturn ((JarPackageFragment) getPackageFragment(CharOperation.NO_STRINGS)).storedNonJavaResources();", "+\t\tObject[] defaultPkgResources =  ((JarPackageFragment) getPackageFragment(CharOperation.NO_STRINGS)).storedNonJavaResources();", "+\t\tint length = defaultPkgResources.length;", "+\t\tif (length == 0)", "+\t\t\treturn defaultPkgResources;", "+\t\tObject[] nonJavaResources = new Object[length];", "+\t\tfor (int i = 0; i < length; i++) {", "+\t\t\tObject nonJavaResource = defaultPkgResources[i];", "+\t\t\tif (nonJavaResource instanceof JarEntryFile)", "+\t\t\t\tnonJavaResources[i] = ((JarEntryFile) nonJavaResource).clone(this);", "+\t\t\telse", "+\t\t\t\tnonJavaResources[i] = ((JarEntryDirectory) nonJavaResource).clone(this);", "+\t\t}", "+\t\treturn nonJavaResources;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "baedc3f742f41baf708e7b06327e6075", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathInitializerTests.java", "commitBeforeChange": "fe46c42d584fc9df798276778c11a2ce2f79d8c4", "commitAfterChange": "8904ea4393baa4ec97ffdacde82d6f35bb8add7c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t\t\t\t\tpublic IClasspathEntry[] getClasspathEntries()", "signatureAfterChange": " \t\tpublic IClasspathEntry[] getClasspathEntries()", "diff": ["+\t\t}", "+\t\tpublic IClasspathEntry[] getClasspathEntries() {", "+\t\t\tint length = this.libPaths.length;", "+\t\t\tIClasspathEntry[] entries = new IClasspathEntry[length];", "+\t\t\tfor (int j = 0; j < length; j++) {", "+\t\t\t    IPath path = new Path(new String(this.libPaths[j]));", "+\t\t\t    if (path.segmentCount() == 1) {", "+\t\t\t        entries[j] = JavaCore.newProjectEntry(path);", "+\t\t\t    } else {", "+\t\t\t\t\tentries[j] = JavaCore.newLibraryEntry(path, null, null);", "+\t\t\t    }", "+\t\t\t}", "+\t\t\treturn entries;", "+\t\t}", "-\t\t\t\tnew IClasspathContainer() {", "-\t\t\t\t\tpublic IClasspathEntry[] getClasspathEntries() {", "-\t\t\t\t\t\tint length = libPaths.length;", "-\t\t\t\t\t\tIClasspathEntry[] entries = new IClasspathEntry[length];", "-\t\t\t\t\t\tfor (int j = 0; j < length; j++) {", "-\t\t\t\t\t\t    IPath path = new Path(new String(libPaths[j]));", "-\t\t\t\t\t\t    if (path.segmentCount() == 1) {", "-\t\t\t\t\t\t        entries[j] = JavaCore.newProjectEntry(path);", "-\t\t\t\t\t\t    } else {", "-\t\t\t\t\t\t\t\tentries[j] = JavaCore.newLibraryEntry(path, null, null);", "-\t\t\t\t\t\t    }", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\treturn entries;", "-\t\t\t\t\t}"]}], "num": 43311}