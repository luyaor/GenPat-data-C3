{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9bde11681c2ac713a2a5ed3b49915248", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0467f89908ed7455c473be29171863d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "c67ad5667d81e7ca8719e3b0faf6c7f2b84f03ce", "commitAfterChange": "55a2e1357c3327be6468ccea0fa1bd5884ed35ad", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic TypeBinding capture(Scope scope, int position)", "signatureAfterChange": " \tpublic TypeBinding capture(Scope scope, int position)", "diff": ["-\t\tTypeBinding[] originalArguments = arguments, capturedArguments = originalArguments;", "+\t\tTypeBinding[] originalArguments = arguments;", "-\t\tcapturedArguments = new TypeBinding[length];", "+\t\tTypeBinding[] capturedArguments = new TypeBinding[length];", "+\t\t", "-\t\tif (capturedArguments != originalArguments) {", "-\t\t\tParameterizedTypeBinding capturedParameterizedType = this.environment.createParameterizedType(this.type, capturedArguments, enclosingType());", "-\t\t\tfor (int i = 0; i < length; i++) {", "-\t\t\t\tTypeBinding argument = capturedArguments[i];", "-\t\t\t\tif (argument.isCapture()) {", "-\t\t\t\t\t((CaptureBinding)argument).initializeBounds(capturedParameterizedType);", "-\t\t\t\t}", "+\t\tParameterizedTypeBinding capturedParameterizedType = this.environment.createParameterizedType(this.type, capturedArguments, enclosingType());", "+\t\tfor (int i = 0; i < length; i++) {", "+\t\t\tTypeBinding argument = capturedArguments[i];", "+\t\t\tif (argument.isCapture()) {", "+\t\t\t\t((CaptureBinding)argument).initializeBounds(capturedParameterizedType);", "-\t\t\treturn capturedParameterizedType;", "-\t\treturn this;", "+\t\treturn capturedParameterizedType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7c654e74ee8a0303eb853b24c82f382", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "e0224da700606ee4894293f10b71bd4b6b9d30f5", "commitAfterChange": "3cdc40c3e141f1d38e6828b30530d087867619a9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic TypeBinding capture(Scope scope, int position)", "signatureAfterChange": " \tpublic TypeBinding capture(Scope scope, int position)", "diff": ["+\t\tif ((this.tagBits & TagBits.HasDirectWildcard) == 0) ", "+\t\t\treturn this;", "+\t\t", "-\t\tif ((this.tagBits & TagBits.HasDirectWildcard) != 0) {", "-\t\t\tint length = originalArguments.length;", "-\t\t\tcapturedArguments = new TypeBinding[length];", "-\t\t\tfor (int i = 0; i < length; i++) {", "-\t\t\t\tTypeBinding argument = originalArguments[i];", "-\t\t\t\tif (argument.kind() == Binding.WILDCARD_TYPE) {", "-\t\t\t\t\tcapturedArguments[i] = ", "-\t\t\t\t\t\tnew CaptureBinding(", "-\t\t\t\t\t\t\t\t(WildcardBinding) argument, ", "-\t\t\t\t\t\t\t\tscope.enclosingSourceType().outermostEnclosingType(),", "-\t\t\t\t\t\t\t\tposition);", "-\t\t\t\t} else {", "-\t\t\t\t\tcapturedArguments[i] = argument;", "-\t\t\t\t}", "+\t\tint length = originalArguments.length;", "+\t\tcapturedArguments = new TypeBinding[length];", "+\t\tfor (int i = 0; i < length; i++) {", "+\t\t\tTypeBinding argument = originalArguments[i];", "+\t\t\tif (argument.kind() == Binding.WILDCARD_TYPE) {", "+\t\t\t\tcapturedArguments[i] = ", "+\t\t\t\t\tnew CaptureBinding(", "+\t\t\t\t\t\t\t(WildcardBinding) argument, ", "+\t\t\t\t\t\t\tscope.enclosingSourceType().outermostEnclosingType(),", "+\t\t\t\t\t\t\tposition);", "+\t\t\t} else {", "+\t\t\t\tcapturedArguments[i] = argument;", "-\t\t\treturn this.environment.createParameterizedType(this.type, capturedArguments, enclosingType());", "+\t\t\tParameterizedTypeBinding capturedParameterizedType = this.environment.createParameterizedType(this.type, capturedArguments, enclosingType());", "+\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\tTypeBinding argument = capturedArguments[i];", "+\t\t\t\tif (argument.isCapture()) {", "+\t\t\t\t\t((CaptureBinding)argument).initializeBounds(capturedParameterizedType);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\treturn capturedParameterizedType;"]}], "num": 20179}