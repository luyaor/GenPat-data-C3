{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0b505a0acd56b22100984560b8c734bb", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09516f9e1f4040b03916256103c8a79d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "3c24f3c5868942545b866a06aea7ff0e6d501ace", "commitAfterChange": "c52bf9c9641831c37e7ba4fe251dcc6debca74a5", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["+\t\t\t\t\tCompilerOptions.OPTION_ReportSuperfluousSemicolon,", "+\t\t\t\t\tCompilerOptions.IGNORE);", "+\t\t\t\toptions.put(", "+\t\t\t\t\t} else if (token.equals(\"semicolon\")) {//$NON-NLS-1$ ", "+\t\t\t\t\t\toptions.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportSuperfluousSemicolon,", "+\t\t\t\t\t\t\tCompilerOptions.WARNING);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bee0c82de507ae3c459f8e7fecdecdf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "cf3402778a386b4819e4d3554ae8d21d9e5326e6", "commitAfterChange": "56a4d388176794077c8c6fb2f22cd1defef6beb5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["+\t\t\t\t\tCompilerOptions.OPTION_ReportPossibleAccidentalBooleanAssignment,", "+\t\t\t\t\tCompilerOptions.IGNORE);", "+\t\t\t\toptions.put(", "+\t\t\t\t\t} else if (token.equals(\"conditionAssign\")) { //$NON-NLS-1$", "+\t\t\t\t\t\toptions.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportPossibleAccidentalBooleanAssignment,", "+\t\t\t\t\t\t\tCompilerOptions.WARNING);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "170fdbe8fe41c409f3d069729079ba02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "3d36482945f3dfef831171290c6c75c936b23751", "commitAfterChange": "7139526b453f0e67eab8762699884060db7f0843", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["+\t\t\t\t\tCompilerOptions.OPTION_ReportNoImplicitStringConversion,", "+\t\t\t\t\tCompilerOptions.IGNORE);\t\t\t\t", "+\t\t\t\toptions.put(", "+\t\t\t\t\t} else if (token.equals(\"noImplicitStringConversion\")) {//$NON-NLS-1$", "+\t\t\t\t\t\toptions.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportNoImplicitStringConversion,", "+\t\t\t\t\t\t\tCompilerOptions.WARNING);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47a284dbcb088c8396be394224cc2339", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "cc370a50ac7ec603f065f1e6278826253518f4d4", "commitAfterChange": "1ae189eb0affddcddb5cf43f9552f434a9d25d38", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["+\t\t\t\toptions.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportStaticAccessReceiver,", "+\t\t\t\t\tCompilerOptions.IGNORE);", "+\t\t\t\t\t} else if (token.equals(\"staticReceiver\")) { //$NON-NLS-1$", "+\t\t\t\t\t\toptions.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportStaticAccessReceiver,", "+\t\t\t\t\t\t\tCompilerOptions.WARNING);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73d5d85e8f84c8496448744cae8eab17", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "2102b467360a15c8cee175a15e0e8b3a9bf530a3", "commitAfterChange": "2f99bede247620c1c16748fe7b02dd925afcf7a5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["+\t\t\t\t\tCompilerOptions.OPTION_ReportIncompatibleNonInheritedInterfaceMethod,", "+\t\t\t\t\tCompilerOptions.IGNORE);\t\t\t\t", "+\t\t\t\toptions.put(", "+\t\t\t\t\t} else if (token.equals(\"interfaceNonInherited\")) { //$NON-NLS-1$", "+\t\t\t\t\t\toptions.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportIncompatibleNonInheritedInterfaceMethod,", "+\t\t\t\t\t\t\tCompilerOptions.WARNING);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c96307ea93aabcc42c46ad547c2817a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "fa6e92df9d3db7e8cd1dd939b87ce17fd6a25504", "commitAfterChange": "669b9af0f5a06f4381a84a633c0be85e376c6f3e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["+\t\t\t\t\tCompilerOptions.OPTION_ReportNoEffectAssignment,", "+\t\t\t\t\tCompilerOptions.IGNORE);", "+\t\t\t\toptions.put(", "+\t\t\t\t\t} else if (token.equals(\"noOpAssign\")) { //$NON-NLS-1$", "+\t\t\t\t\t\toptions.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportNoEffectAssignment,", "+\t\t\t\t\t\t\tCompilerOptions.WARNING);"]}], "num": 53222}