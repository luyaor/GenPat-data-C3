{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "35f388b90307ec2aa545cfcd6aa14cb7", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e1fd951b755c201a4bb29a777b50f63", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9454e9fdd85131c7503e9846e1e6c7d9c91dd2fb", "commitAfterChange": "5d61afa709802d331d230880f37fe526cefe25cb", "methodNumberBeforeChange": 764, "methodNumberAfterChange": 764, "signatureBeforeChange": " public void test0744()", "signatureAfterChange": " public void test0744()", "diff": ["-\t\t\t\"public abstract class X<K1, V1> extends HashMap<K1, V1> {\\n\" + ", "+\t\t\t\"class Super<U, V> {\\n\" +", "+\t\t\t\"\tstatic class Entry<U,V> {\\n\" +", "+\t\t\t\"\t\tEntry(int i, U u, V v, Entry<U,V> entry) {}\\n\" + ", "+\t\t\t\"\t\tvoid recordAccess(Super<U,V> s) {\\n\" + ", "+\t\t\t\"\t\t}\\n\" +", "+\t\t\t\"\t}\\n\" +", "+\t\t\t\"}\\n\"+", "+\t\t\t\"public abstract class X<K1, V1> extends Super<K1, V1> {\\n\" + ", "-\t\t\t\"\tprivate static class Entry<K2, V2> extends HashMap.Entry<K2, V2> {\\n\" + ", "+\t\t\t\"\tprivate static class Entry<K2, V2> extends Super.Entry<K2, V2> {\\n\" + ", "-\t\t\t\"\t\t@Override void recordAccess(HashMap<K2, V2> m) {\\n\" + ", "+\t\t\t\"\t\t@Override void recordAccess(Super<K2, V2> m) {\\n\" + ", "-\t\t\"1. ERROR in java\\\\util\\\\X.java (at line 23)\\n\" + ", "+\t\t\"1. ERROR in java\\\\util\\\\X.java (at line 30)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d704347c2125261c5865a09b8bc42957", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericsRegressionTest_1_8.java", "commitBeforeChange": "341ead40b71a0bffec0f8325f6b29d2b567caf8a", "commitAfterChange": "f5884fa8b0573c548eaeabaa37cd99c51e41fd3b", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 122, "signatureBeforeChange": " public void testBug435187()", "signatureAfterChange": " public void testBug435187()", "diff": ["+\t\t\t\"import java.util.function.Function;\\n\" + ", "-\t\t\"\");", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in ExtractLocalLambda.java (at line 22)\\n\" + ", "+\t\t\"\t).collect(groupingBy);\\n\" + ", "+\t\t\"\t  ^^^^^^^\\n\" + ", "+\t\t\"The method collect(Collector<? super Object,A,R>) in the type Stream<Object> is not applicable for the arguments (Collector<Map.Entry<String,String>,capture#1-of ?,Map<String,List<String>>>)\\n\" + ", "+\t\t\"----------\\n\");"]}], "num": 58829}