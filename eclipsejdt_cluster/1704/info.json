{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "88e6b470b0191a89c3d6c7507ee171d8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ffe66374dafcd0f6f90ff18c4656d25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "095967aa861492076c902e9a1e29cc3ef5401f4b", "commitAfterChange": "f22ddb091972eb999f7d979c44476f3c3c9647e3", "methodNumberBeforeChange": 210, "methodNumberAfterChange": 210, "signatureBeforeChange": " \tprivate void findVariablesAndMethods( \t\tchar[] token, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean insideTypeAnnotation, \t\tboolean insideAnnotationAttribute)", "signatureAfterChange": " \tprivate void findVariablesAndMethods( \t\tchar[] token, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean insideTypeAnnotation, \t\tboolean insideAnnotationAttribute)", "diff": ["-\t\t\t\t\t\t\t// don't propose array types in case expression", "+\t\t\t\t\t\t\t// don't propose non constant variables or strings (1.6 or below) in case expression", "-\t\t\t\t\t\t\tif (this.assistNodeIsInsideCase && local.type instanceof ArrayBinding)", "-\t\t\t\t\t\t\t\tcontinue next;", "+\t\t\t\t\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=343342", "+\t\t\t\t\t\t\tif (this.assistNodeIsInsideCase) {", "+\t\t\t\t\t\t\t\tif (local.isFinal()) {", "+\t\t\t\t\t\t\t\t\tif (!(local.type instanceof BaseTypeBinding))", "+\t\t\t\t\t\t\t\t\t\tcontinue next; ", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tcontinue next; // non-constants not allowed in case.\t", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tif(proposeMethod && !insideAnnotationAttribute) {", "+\t\t\t\t\t\t\tif(proposeMethod && !insideAnnotationAttribute && !this.assistNodeIsInsideCase) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcabe5221a89fabfd754a3ff2974c705", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "095967aa861492076c902e9a1e29cc3ef5401f4b", "commitAfterChange": "f22ddb091972eb999f7d979c44476f3c3c9647e3", "methodNumberBeforeChange": 140, "methodNumberAfterChange": 140, "signatureBeforeChange": " \tprivate void findFields( \t\tchar[] fieldName, \t\tFieldBinding[] fields, \t\tScope scope, \t\tObjectVector fieldsFound, \t\tObjectVector localsFound, \t\tboolean onlyStaticFields, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems, \t\tchar[] castedReceiver, \t\tint receiverStart, \t\tint receiverEnd)", "signatureAfterChange": " \tprivate void findFields( \t\tchar[] fieldName, \t\tFieldBinding[] fields, \t\tScope scope, \t\tObjectVector fieldsFound, \t\tObjectVector localsFound, \t\tboolean onlyStaticFields, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems, \t\tchar[] castedReceiver, \t\tint receiverStart, \t\tint receiverEnd)", "diff": ["-\t\t\t// don't propose array types in case expression", "+\t\t\t// don't propose non constant fields or strings (1.6 or below) in case expression", "-\t\t\tif (this.assistNodeIsInsideCase && field.type instanceof ArrayBinding)", "-\t\t\t\tcontinue next;", "+\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=343342", "+\t\t\tif (this.assistNodeIsInsideCase) {", "+\t\t\t\tif (field.isFinal() && field.isStatic()) {", "+\t\t\t\t\tif (!(field.type instanceof BaseTypeBinding))", "+\t\t\t\t\t\tcontinue next; ", "+\t\t\t\t} else {", "+\t\t\t\t\tcontinue next; // non-constants not allowed in case.\t", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 1704}