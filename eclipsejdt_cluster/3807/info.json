{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "24e2eb609dd2ee9a557bf467ed5fb6d9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78fa4480b3f83768006986324457d93c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModel.java", "commitBeforeChange": "4de0f743b4a496e91904e5bc8b1a21757a23c5f6", "commitAfterChange": "e781f8e7f01bf193d5dc75f48e7e40aa2b3a1ff8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public boolean contains(IResource resource)", "signatureAfterChange": " public boolean contains(IResource resource)", "diff": ["-\t\t\tboolean isInOutput = output.isPrefixOf(path);", "+\t\t\tIPath innerMostOutput = output.isPrefixOf(path) ? output : null;", "-\t\t\t\t\tisInOutput = true;", "+\t\t\t\t\tinnerMostOutput = entryOutput;", "+\t\t\t\t// special case prj==src and nested output location", "+\t\t\t\tif (innerMostOutput != null && innerMostOutput.segmentCount() > 1 // output isn't project", "+\t\t\t\t\t\t&& innerMostEntry.getPath().segmentCount() == 1) { // 1 segment must be project name", "+\t\t\t\t\treturn false;", "+\t\t\t\t}", "-\t\t\tif (isInOutput) {", "+\t\t\tif (innerMostOutput != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81d5937ef74c8a05bb50133184dd8a53", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "0c9f31ea2ca6f747fc91ab022c7efc052d0b1c5a", "commitAfterChange": "8c64bffbde25c824dd307f6fe5deea636346d85b", "methodNumberBeforeChange": 222, "methodNumberAfterChange": 222, "signatureBeforeChange": "  \tprotected void setUpProjectCompliance(IJavaProject javaProject, String compliance) throws JavaModelException, IOException", "signatureAfterChange": "  \tprotected void setUpProjectCompliance(IJavaProject javaProject, String compliance) throws JavaModelException, IOException", "diff": ["+\t\t// At 1.8 compliance, replace JCL15_LIB with JCL18_LIB, JCL15_SRC with JCL18_SRC", "+\t\tIPath jcl5Lib = new Path(\"JCL15_LIB\");", "+\t\tIPath jcl8Lib = new Path(\"JCL18_LIB\");", "+\t\tboolean compliance18Plus = compliance.charAt(2) > '7';", "-\t\t\tif (entry.getPath().equals(jclLib)) {", "+\t\t\tfinal IPath path = entry.getPath();", "+\t\t\tif (path.equals(jclLib) || (compliance18Plus && path.equals(jcl5Lib)) || (!compliance18Plus && path.equals(jcl8Lib))) {"]}], "num": 3807}