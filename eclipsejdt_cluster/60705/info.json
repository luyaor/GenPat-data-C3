{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "27615209cfc328990b02ec9f0366c79f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "883568c92504920289b07d8afa06e155", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "67c55712e5adee92eb685a3f98810e93028c1621", "commitAfterChange": "548de86332afb7029a7e52d92f65bbd7cb010819", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic void selectType(ISourceType sourceType, char[] typeName, SourceTypeElementInfo[] topLevelTypes, boolean searchInEnvironment)", "signatureAfterChange": " \tpublic void selectType(ISourceType sourceType, char[] typeName, SourceTypeElementInfo[] topLevelTypes, boolean searchInEnvironment)", "diff": ["+\t\t\t", "+\t\t\t// only the type erasure are returned by IType.resolvedType(...)", "+\t\t\tif (CharOperation.indexOf('<', typeName) != -1) {", "+\t\t\t\tchar[] typeSig = Signature.createCharArrayTypeSignature(typeName, false/*not resolved*/);", "+\t\t\t\ttypeSig = Signature.getTypeErasure(typeSig);", "+\t\t\t\ttypeName = Signature.toCharArray(typeSig);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca2ea055eb9001c1d1a9c96cf1f2d29e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodBinding.java", "commitBeforeChange": "0c953799b66dc53a6c967cf8fbb783c7783df27b", "commitAfterChange": "b0b9e2d51aeae93a2f420d7a645d915ef7e777f4", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic IJavaElement getJavaElement()", "signatureAfterChange": "  \tpublic IJavaElement getJavaElement()", "diff": ["-\t\t\t\t\tparameterSignatures.add(Util.getSignature(type));", "+\t\t\t\t\tString typeSig = Util.getSignature(type);", "+\t\t\t\t\tint arrayDim = parameter.getExtraDimensions();", "+\t\t\t\t\tif (parameter.isVarargs())", "+\t\t\t\t\t\tarrayDim++;", "+\t\t\t\t\tif (arrayDim > 0)", "+\t\t\t\t\t\ttypeSig = Signature.createArraySignature(typeSig, arrayDim);", "+\t\t\t\t\tparameterSignatures.add(typeSig);"]}], "num": 60705}