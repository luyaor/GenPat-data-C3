{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a1c9c1ee289b5a8e9ab93f4a0579f8bb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce908075879c707c00779d41d898ea9b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "5266b947a41bc87e33ca243d2f06d621c5b35d8c", "commitAfterChange": "5b0c62f0c85cc7c393266b52408d3bd3c14d0ef5", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 32, "signatureBeforeChange": " public SourceMapper getSourceMapper()", "signatureAfterChange": " public SourceMapper getSourceMapper()", "diff": ["-\t\t\tif (rootPath == null && mapper.rootPath != null) {", "-\t\t\t\t// as a side effect of calling the SourceMapper constructor, the root path was computed", "-\t\t\t\trootPath = new Path(mapper.rootPath);", "-\t\t\t\t", "-\t\t\t\t//set the property to the path of the mapped source", "-\t\t\t\tif (sourcePath != null)", "-\t\t\t\t\tsetSourceAttachmentProperty(", "-\t\t\t\t\t\tsourcePath.toString() ", "-\t\t\t\t\t\t+ ATTACHMENT_PROPERTY_DELIMITER ", "-\t\t\t\t\t\t+ rootPath.toString());", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3528992288e30bab69c00a6c6fbeee5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "0848b8a6a9afff16623dfc6b0821adb833326b41", "commitAfterChange": "29d4a1149e392c0b5c052a9202992e800f5506a5", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  public int nullStatus(FlowInfo flowInfo)", "signatureAfterChange": "  public int nullStatus(FlowInfo flowInfo, FlowContext flowContext)", "diff": ["-public int nullStatus(FlowInfo flowInfo) {", "-", "-\tif (/* (this.bits & IsNonNull) != 0 || */", "-\t\tthis.constant != null && this.constant != Constant.NotAConstant)", "-\t\treturn FlowInfo.NON_NULL; // constant expression cannot be null", "-", "-\tLocalVariableBinding local = localVariableBinding();", "-\tif (local != null)", "-\t\treturn flowInfo.nullStatus(local);", "+public int nullStatus(FlowInfo flowInfo, FlowContext flowContext) {", "+\t// many kinds of expression need no analysis / are always non-null, make it the default:"]}], "num": 33261}