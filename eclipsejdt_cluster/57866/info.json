{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1bb3cfc7dfa692d6f1b2711f0e22fd6d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ac113b0b3bffba0b2f9163f0b51e1f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "7dd03532bcfb1c993a21c44294d5af3f093cd0ca", "commitAfterChange": "d2e4e219064ebbb29189c651c12fc0ce8b125e81", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tsynchronized ITypeBinding resolveExpressionType(Expression expression)", "signatureAfterChange": " \tsynchronized ITypeBinding resolveExpressionType(Expression expression)", "diff": ["-\t\t\treturn this.getTypeBinding(this.scope.getJavaLangClass());", "+\t\t\tClassLiteralAccess classLiteralAccess = (ClassLiteralAccess) this.newAstToOldAst.get(expression);", "+\t\t\treturn this.getTypeBinding(classLiteralAccess.resolvedType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ac818a5cff551200da07096184519f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "3db4ce27557c02689107a83d27fb757d363e9707", "commitAfterChange": "6b9c67fdfa3245347902558ec7bd2d647d0b986f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tprivate TypeDeclaration convert(SourceType typeHandle, CompilationResult compilationResult) throws JavaModelException", "signatureAfterChange": " \tprivate TypeDeclaration convert(SourceType typeHandle, CompilationResult compilationResult) throws JavaModelException", "diff": ["-\t\t\t\tboolean isConstructor = sourceMethod.isConstructor();", "-\t\t\t\tif ((sourceMethod.getFlags() & ClassFileConstants.AccAbstract) != 0) {", "+\t\t\t\tSourceMethodElementInfo methodInfo = (SourceMethodElementInfo)sourceMethod.getElementInfo();", "+\t\t\t\tboolean isConstructor = methodInfo.isConstructor();", "+\t\t\t\tif ((methodInfo.getModifiers() & ClassFileConstants.AccAbstract) != 0) {", "-\t\t\t\t\tAbstractMethodDeclaration method = convert(sourceMethod, compilationResult);", "+\t\t\t\t\tAbstractMethodDeclaration method = convert(sourceMethod, methodInfo, compilationResult);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c30ed6f4449660a23084886288cd4301", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "68e058c49e55090c3efeb985c0093a601de509bb", "commitAfterChange": "807b33cf50fdb479db403880e28eb0989e0fbdba", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public final boolean canBeSeenBy(ReferenceBinding receiverType, SourceTypeBinding invocationType)", "signatureAfterChange": "  public final boolean canBeSeenBy(ReferenceBinding receiverType, SourceTypeBinding invocationType)", "diff": ["+\t\tif (declaringClass == invocationType) return true;", "+", "+\t\tReferenceBinding declaringErasure = (ReferenceBinding) declaringClass.erasure();", "-\t\t\tif (declaringClass == invocationType) return true;", "-\t\t\tif (declaringClass.isSuperclassOf(currentType)) return true;", "+\t\t\tif (currentType.findSuperTypeErasingTo(declaringErasure) != null) return true;"]}], "num": 57866}