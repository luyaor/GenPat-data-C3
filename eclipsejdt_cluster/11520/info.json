{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c24f0e7c897c7f30c03ea6fe6b0f9f89", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dd07bfcb2a8353da49626c7d028190e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsMassiveTests.java", "commitBeforeChange": "5292c15945b50fef548808f853ce39423b5670f2", "commitAfterChange": "e32dbbc9904e1f7eb4c6e79a7595e742217638b3", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "  String runFormatter(CodeFormatter codeFormatter, String source, int kind, int indentationLevel, int offset, int length, String lineSeparator)", "signatureAfterChange": "  String runFormatter(CodeFormatter codeFormatter, String source, int kind, int indentationLevel, int offset, int length, String lineSeparator)", "diff": ["+", "-\t\t\t\tassertSourceEquals(counterString+\" formatting is different from first one!\", Util.convertToIndependantLineDelimiter(result), Util.convertToIndependantLineDelimiter(newResult));", "+\t\t\t\tif (!isExpectedFailure()) {", "+\t\t\t\t\tassertSourceEquals(counterString+\" formatting is different from first one!\", Util.convertToIndependantLineDelimiter(result), Util.convertToIndependantLineDelimiter(newResult));", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94211cd56b5057b7cc2c5b0e504c7e10", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ConverterTestSetup.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t\t \tprotected void checkSourceRange(ASTNode node, String expectedContents, char[] source)", "signatureAfterChange": " \t\t \tprotected void checkSourceRange(ASTNode node, String expectedContents, char[] source)", "diff": ["-\t\tassertSourceEquals(\"Unexpected source\", expectedContents, actualContentsString);", "+\t\tassertSourceEquals(\"Unexpected source\", Util.convertToIndependantLineDelimiter(expectedContents), Util.convertToIndependantLineDelimiter(actualContentsString));"]}], "num": 11520}