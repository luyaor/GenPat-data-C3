{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3624cce21b0bf5b77b86e1efa3232799", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43743911afb9a8618d7af9bd16e82234", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 373, "methodNumberAfterChange": 420, "signatureBeforeChange": " public void testBug137087e() throws CoreException", "signatureAfterChange": " public void testBug137087e() throws CoreException", "diff": ["+/** @deprecated As using a depreciated constant */", "-\t// Search CamelCase", "-\t// Search like UI does (ie. replace it with prefix if it's not a valid CamelCase)", "-\tint validatedRule = SearchPattern.validateMatchRule(pattern, matchRule);", "-\tif (validatedRule != matchRule) {", "-\t\tmatchRule = SearchPattern.R_PREFIX_MATCH;", "-\t}", "-\tsearch(pattern, TYPE, DECLARATIONS, matchRule);", "-\tassertSearchResults(", "-\t\t\"\"+ getExternalJCLPathString(\"1.5\") + \" java.lang.IllegalMonitorStateException EXACT_MATCH\\n\" +", "-\t\t\"\"+ getExternalJCLPathString(\"1.5\") + \" java.lang.IllegalMonitorStateException EXACT_MATCH\"", "-\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "710653b548d3e7db8a7554a9fd5b36f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 376, "methodNumberAfterChange": 423, "signatureBeforeChange": " public void testBug137087h() throws CoreException", "signatureAfterChange": " public void testBug137087h() throws CoreException", "diff": ["+/** @deprecated As using a depreciated constant */", "-\t// Search CamelCase", "-\t// Search like UI does (ie. replace it with prefix if it's not a valid CamelCase)", "-\tint validatedRule = SearchPattern.validateMatchRule(pattern, matchRule);", "-\tif (validatedRule != matchRule) {", "-\t\tmatchRule = SearchPattern.R_PREFIX_MATCH;", "-\t}", "-\tsearch(pattern, TYPE, DECLARATIONS, matchRule);", "-\tassertSearchResults(", "-\t\t\"\"+ getExternalJCLPathString(\"1.5\") + \" java.lang.CloneNotSupportedException EXACT_MATCH\\n\" +", "-\t\t\"\"+ getExternalJCLPathString(\"1.5\") + \" java.lang.CloneNotSupportedException EXACT_MATCH\"", "-\t);"]}], "num": 61742}