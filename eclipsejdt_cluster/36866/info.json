{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7329f8b747d163dab7f089858725945b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "200a370f577f5710df1833c2f72e453d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/AbstractASTTests.java", "commitBeforeChange": "fcebf68426f9aa792d1f3380803ca144f79b6c3c", "commitAfterChange": "4da5a9a150c1a47a773a4fd9e96abe9171b5562d", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tprotected ASTNode[] buildASTs(String contents, ICompilationUnit cu, boolean reportErrors) throws JavaModelException", "signatureAfterChange": " \tprotected ASTNode[] buildASTs(String newContents, ICompilationUnit cu, boolean reportErrors) throws JavaModelException", "diff": ["-\tprotected ASTNode[] buildASTs(String contents, ICompilationUnit cu, boolean reportErrors) throws JavaModelException {", "-\t\tMarkerInfo markerInfo = new MarkerInfo(contents);", "-\t\tcontents = markerInfo.source;", "-", "-\t\tcu.getBuffer().setContents(contents);", "+\tprotected ASTNode[] buildASTs(String newContents, ICompilationUnit cu, boolean reportErrors) throws JavaModelException {", "+\t\tMarkerInfo markerInfo;", "+\t\tif (newContents == null) {", "+\t\t\tmarkerInfo = new MarkerInfo(cu.getSource());", "+\t\t\tnewContents = markerInfo.source;", "+\t\t\tcu.getBuffer().setContents(newContents);", "+\t\t\tcu.makeConsistent(null);", "+\t\t} else {", "+\t\t\tmarkerInfo = new MarkerInfo(newContents);", "+\t\t\tnewContents = markerInfo.source;", "+\t\t\tcu.getBuffer().setContents(newContents);", "+\t\t}", "-\t\t\tunit = cu.reconcile(AST.JLS3, false, null, null);", "+\t\t\tunit = cu.reconcile(AST.JLS3, reportErrors, null, null);", "-\t\t\t\tUtil.appendProblem(buffer, problems[i], contents.toCharArray(), i+1);", "+\t\t\t\tUtil.appendProblem(buffer, problems[i], newContents.toCharArray(), i+1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "695cb0616cfce234550dbaa02e6088e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/AbstractASTTests.java", "commitBeforeChange": "3cdc40c3e141f1d38e6828b30530d087867619a9", "commitAfterChange": "0768a01c46bf55c1ad1aefdbfa14c12019b43872", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprotected ASTNode[] buildASTs(String contents, ICompilationUnit cu, boolean reportErrors) throws JavaModelException", "signatureAfterChange": " \tprotected ASTNode[] buildASTs(String contents, ICompilationUnit cu, boolean reportErrors) throws JavaModelException", "diff": ["-\t\tArrayList infos = new ArrayList();", "-\t\tMarkerInfo markerInfo;", "-\t\tint markerIndex = 0;", "-\t\twhile (contents.indexOf(\"/*start\" + ++markerIndex + \"*/\") != -1) {", "-\t\t\tmarkerInfo = new MarkerInfo(contents, markerIndex);", "-\t\t\tinfos.add(markerInfo);", "-\t\t\tcontents = markerInfo.source;", "-\t\t}", "-\t\tif (contents.indexOf(\"/*start*/\") != -1 || infos.size() == 0) {", "-\t\t\tmarkerInfo = new MarkerInfo(contents);", "-\t\t\tinfos.add(markerInfo);", "-\t\t\tcontents = markerInfo.source;", "-\t\t}", "+\t\tMarkerInfo markerInfo = new MarkerInfo(contents);", "+\t\tcontents = markerInfo.source;", "-\t\tint length = infos.size();", "-\t\tASTNode[] nodes = new ASTNode[length];", "-\t\tfor (int i = 0; i < length; i++) {", "-\t\t\tMarkerInfo info = (MarkerInfo) infos.get(i);", "-\t\t\tnodes[i] = findNode(unit, info);", "-\t\t}", "-\t\t", "+\t\tASTNode[] nodes = findNodes(unit, markerInfo);", "+\t\tif (nodes.length == 0)", "+\t\t\treturn new ASTNode[] {unit};"]}], "num": 36866}