{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "278eaac643ec10cd6e0a9f47c122502d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f78ec75733a40c4b4d88951c1e43aeb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "06bc51755014cd9b7b3dc704b8ea211f7fcf82d8", "commitAfterChange": "5ab08388b249465c506db2c621e33d2c743557fc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void set(Map settings)", "signatureAfterChange": "  \tpublic void set(Map settings)", "diff": ["-\t\t// backward compatibility code", "-\t\tfinal Object commentClearBlankLinesOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_COMMENT_CLEAR_BLANK_LINES);", "-\t\tif (commentClearBlankLinesOption != null) {", "-\t\t\tthis.comment_clear_blank_lines_in_javadoc_comment = DefaultCodeFormatterConstants.TRUE.equals(commentClearBlankLinesOption);", "-\t\t\tthis.comment_clear_blank_lines_in_block_comment = DefaultCodeFormatterConstants.TRUE.equals(commentClearBlankLinesOption);", "-\t\t} else {", "-\t\t\tfinal Object commentClearBlankLinesInJavadocCommentOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_COMMENT_CLEAR_BLANK_LINES_IN_JAVADOC_COMMENT);", "-\t\t\tif (commentClearBlankLinesInJavadocCommentOption != null) {", "-\t\t\t\tthis.comment_clear_blank_lines_in_javadoc_comment = DefaultCodeFormatterConstants.TRUE.equals(commentClearBlankLinesInJavadocCommentOption);", "-\t\t\t}", "-\t\t\tfinal Object commentClearBlankLinesInBlockCommentOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_COMMENT_CLEAR_BLANK_LINES_IN_BLOCK_COMMENT);", "-\t\t\tif (commentClearBlankLinesInBlockCommentOption != null) {", "-\t\t\t\tthis.comment_clear_blank_lines_in_block_comment = DefaultCodeFormatterConstants.TRUE.equals(commentClearBlankLinesInBlockCommentOption);", "-\t\t\t}", "-\t\t}", "+\t\tsetDeprecatedOptions(settings);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8012997880ad313be05b2eeeb61d1bfc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedTypeHierarchy.java", "commitBeforeChange": "64b2400918fa9c980503c07d6eedfc52178c580c", "commitAfterChange": "8f40b18693d984d1b3346925dd24dfb773855585", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " private void pruneDeadBranches(IType[] types, boolean superInRegion)", "signatureAfterChange": " private void pruneDeadBranches(IType[] types)", "diff": ["-private void pruneDeadBranches(IType[] types, boolean superInRegion) {", "+}", "+private void pruneDeadBranches(IType[] types) {", "-\t\tif (this.region.contains(type)) {", "-\t\t\tTypeVector subtypes = (TypeVector)this.typeToSubtypes.get(type);", "-\t\t\tif (subtypes != null) {", "-\t\t\t\tthis.pruneDeadBranches(subtypes.copy().elements(), true);", "-\t\t\t}", "-\t\t} else {", "-\t\t\tif (superInRegion) {", "-\t\t\t\tthis.removeType(type);", "-\t\t\t} else {", "-\t\t\t\tTypeVector subtypes = (TypeVector)this.typeToSubtypes.get(type);", "-\t\t\t\tif (subtypes != null) {", "-\t\t\t\t\tthis.pruneDeadBranches(subtypes.copy().elements(), false);", "-\t\t\t\t}", "-\t\t\t\tsubtypes = (TypeVector)this.typeToSubtypes.get(type);", "-\t\t\t\tif (subtypes == null || subtypes.size == 0) {", "-\t\t\t\t\tthis.removeType(type);", "-\t\t\t\t} ", "-\t\t\t}", "+\t\tif (pruneDeadBranches(type) && !this.region.contains(type)) {", "+\t\t\tremoveType(type);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2057c6c8cd7dbf761e75f62f6e8972f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedTypeHierarchy.java", "commitBeforeChange": "64b2400918fa9c980503c07d6eedfc52178c580c", "commitAfterChange": "8f40b18693d984d1b3346925dd24dfb773855585", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " private void pruneDeadBranches(IType[] types, boolean superInRegion)", "signatureAfterChange": " private boolean pruneDeadBranches(IType type)", "diff": ["-private void pruneDeadBranches(IType[] types, boolean superInRegion) {", "+ */", "+private boolean pruneDeadBranches(IType type) {", "+\tTypeVector subtypes = (TypeVector)this.typeToSubtypes.get(type);", "+\tif (subtypes == null) return true;", "+\tpruneDeadBranches(subtypes.copy().elements());", "+\tsubtypes = (TypeVector)this.typeToSubtypes.get(type);", "+\treturn (subtypes == null || subtypes.size == 0);", "+}", "-\t\tif (this.region.contains(type)) {", "-\t\t\tTypeVector subtypes = (TypeVector)this.typeToSubtypes.get(type);", "-\t\t\tif (subtypes != null) {", "-\t\t\t\tthis.pruneDeadBranches(subtypes.copy().elements(), true);", "-\t\t\t}", "-\t\t} else {", "-\t\t\tif (superInRegion) {", "-\t\t\t\tthis.removeType(type);", "-\t\t\t} else {", "-\t\t\t\tTypeVector subtypes = (TypeVector)this.typeToSubtypes.get(type);", "-\t\t\t\tif (subtypes != null) {", "-\t\t\t\t\tthis.pruneDeadBranches(subtypes.copy().elements(), false);", "-\t\t\t\t}", "-\t\t\t\tsubtypes = (TypeVector)this.typeToSubtypes.get(type);", "-\t\t\t\tif (subtypes == null || subtypes.size == 0) {", "-\t\t\t\t\tthis.removeType(type);", "-\t\t\t\t} ", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b970dd192708eb29c06c26f0113f26b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/core/formatter/CodeFormatterApplication.java", "commitBeforeChange": "f1f8d0b10a3f2cd848499ed766e0186c0d53a439", "commitAfterChange": "78859c0e317e109636f77a46e3f95c8d4b8c24ec", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic Object start(IApplicationContext context) throws Exception", "signatureAfterChange": " \tpublic Object start(IApplicationContext context) throws Exception", "diff": ["-\t\t// preserve existing default behavior", "-\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=20793", "-\t\tif (this.options == null) {", "-\t\t\tthis.options = JavaCore.getOptions();", "-\t\t\tthis.options.put(", "-\t\t\t\tDefaultCodeFormatterConstants.FORMATTER_NEVER_INDENT_BLOCK_COMMENTS_ON_FIRST_COLUMN,", "-\t\t\t\tDefaultCodeFormatterConstants.FALSE);", "-\t\t\tthis.options.put(", "-\t\t\t\t\tDefaultCodeFormatterConstants.FORMATTER_NEVER_INDENT_LINE_COMMENTS_ON_FIRST_COLUMN,", "-\t\t\t\t\tDefaultCodeFormatterConstants.FALSE);", "-\t\t} else {", "-\t\t\tObject option = this.options.get(DefaultCodeFormatterConstants.FORMATTER_NEVER_INDENT_BLOCK_COMMENTS_ON_FIRST_COLUMN);", "-\t\t\tif (option == null) {", "-\t\t\t\tthis.options.put(", "-\t\t\t\t\t\tDefaultCodeFormatterConstants.FORMATTER_NEVER_INDENT_BLOCK_COMMENTS_ON_FIRST_COLUMN,", "-\t\t\t\t\t\tDefaultCodeFormatterConstants.FALSE);", "-\t\t\t}", "-\t\t\toption = this.options.get(DefaultCodeFormatterConstants.FORMATTER_NEVER_INDENT_LINE_COMMENTS_ON_FIRST_COLUMN);", "-\t\t\tif (option == null) {", "-\t\t\t\tthis.options.put(", "-\t\t\t\t\t\tDefaultCodeFormatterConstants.FORMATTER_NEVER_INDENT_LINE_COMMENTS_ON_FIRST_COLUMN,", "-\t\t\t\t\t\tDefaultCodeFormatterConstants.FALSE);", "-\t\t\t}", "-\t\t}"]}], "num": 36246}