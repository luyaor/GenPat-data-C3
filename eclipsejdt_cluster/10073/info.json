{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3d552e5984551baec54dfb74d303b78e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e6505014e285d0e0fd54a8383b2f760", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": "\t \tpublic int parameterCompatibilityLevel(MethodBinding method, TypeBinding[] arguments, boolean tiebreakingVarargsMethods)", "signatureAfterChange": "\t \tpublic int parameterCompatibilityLevel(MethodBinding method, TypeBinding[] arguments, boolean tiebreakingVarargsMethods)", "diff": ["-\t\t\t\tif (arg != param && !arg.isCompatibleWith(param.erasure(), this))", "+\t\t\t\tif (TypeBinding.notEquals(arg, param) && !arg.isCompatibleWith(param.erasure(), this))", "-\t\t\t\tif (param != arg) {", "+\t\t\t\tif (TypeBinding.notEquals(param, arg)) {", "-\t\t\t\t\t\tif (param != arg && parameterCompatibilityLevel(arg, param, env, tiebreakingVarargsMethods) == NOT_COMPATIBLE)", "+\t\t\t\t\t\tif (TypeBinding.notEquals(param, arg) && parameterCompatibilityLevel(arg, param, env, tiebreakingVarargsMethods) == NOT_COMPATIBLE)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc63e6f72662bd67d53a9355855a40d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " \tprivate final boolean areParametersCompatibleWith(TypeBinding[] parameters, TypeBinding[] arguments, boolean isVarargs)", "signatureAfterChange": " \tprivate final boolean areParametersCompatibleWith(TypeBinding[] parameters, TypeBinding[] arguments, boolean isVarargs)", "diff": ["-\t\t\t\tif (varArgType != lastArgument && !lastArgument.isCompatibleWith(varArgType))", "+\t\t\t\tif (TypeBinding.notEquals(varArgType, lastArgument) && !lastArgument.isCompatibleWith(varArgType))", "-\t\t\t\t\tif (varArgType != arguments[i] && !arguments[i].isCompatibleWith(varArgType))", "+\t\t\t\t\tif (TypeBinding.notEquals(varArgType, arguments[i]) && !arguments[i].isCompatibleWith(varArgType))", "-\t\t\tif (parameters[i] != arguments[i] && !arguments[i].isCompatibleWith(parameters[i]))", "+\t\t\tif (TypeBinding.notEquals(parameters[i], arguments[i]) && !arguments[i].isCompatibleWith(parameters[i]))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5cd94193d0c49fd7a45d16877ef33b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " \tprotected boolean isAcceptableMethod(MethodBinding one, MethodBinding two)", "signatureAfterChange": " \tprotected boolean isAcceptableMethod(MethodBinding one, MethodBinding two)", "diff": ["-\t\t\t\tif (oneParam == twoParam || oneParam.isCompatibleWith(twoParam)) {", "+\t\t\t\tif (TypeBinding.equalsEquals(oneParam, twoParam) || oneParam.isCompatibleWith(twoParam)) {", "-\t\t\t\t\t\t\tif (oneParam == eType || oneParam.isCompatibleWith(eType))", "+\t\t\t\t\t\t\tif (TypeBinding.equalsEquals(oneParam, eType) || oneParam.isCompatibleWith(eType))", "-\t\t\t\t\t\t\tif (oType == eType || oType.isCompatibleWith(eType))", "+\t\t\t\t\t\t\tif (TypeBinding.equalsEquals(oType, eType) || oType.isCompatibleWith(eType))", "-\t\t\t\tif (oneParams[i] != twoParams[i] && !oneParams[i].isCompatibleWith(twoParams[i]))", "+\t\t\t\tif (TypeBinding.notEquals(oneParams[i], twoParams[i]) && !oneParams[i].isCompatibleWith(twoParams[i]))"]}], "num": 10073}