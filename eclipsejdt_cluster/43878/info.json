{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "893b8c95a6690594295472a86e5979a0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d69543231cad4afcc1f3588aad3a8af9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "2e199be1cb9f53bc00414ea80765129518e12c23", "commitAfterChange": "46bdd6036153580a7889ceb7993a8f8a6300be85", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void generateOptimizedLogicalAnd(BlockScope currentScope, CodeStream codeStream, BranchLabel trueLabel, BranchLabel falseLabel, boolean valueRequired)", "signatureAfterChange": " public void generateOptimizedLogicalAnd(BlockScope currentScope, CodeStream codeStream, BranchLabel trueLabel, BranchLabel falseLabel, boolean valueRequired)", "diff": ["-\t\t\t\t// reposition the endPC", "-\t\t\t\tcodeStream.updateLastRecordedEndPC(currentScope, codeStream.position);", "+\t\t\t\tcodeStream.recordPositionsFrom(codeStream.position, this.sourceEnd);", "-\t\t\t\t// reposition the endPC", "-\t\t\t\tcodeStream.updateLastRecordedEndPC(currentScope, codeStream.position);", "+\t\t\t\tcodeStream.recordPositionsFrom(codeStream.position, this.sourceEnd);", "-\t// reposition the endPC", "-\tcodeStream.updateLastRecordedEndPC(currentScope, codeStream.position);", "+\tcodeStream.recordPositionsFrom(codeStream.position, this.sourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df649bdd5b3575d523fb7b33e34ab71c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "2e199be1cb9f53bc00414ea80765129518e12c23", "commitAfterChange": "46bdd6036153580a7889ceb7993a8f8a6300be85", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void generateLogicalXor(BlockScope currentScope,\tCodeStream codeStream, boolean valueRequired)", "signatureAfterChange": " public void generateLogicalXor(BlockScope currentScope,\tCodeStream codeStream, boolean valueRequired)", "diff": ["-\t\t\t\t\tcodeStream.updateLastRecordedEndPC(currentScope, codeStream.position);", "+\t\t\t\t\tcodeStream.recordPositionsFrom(codeStream.position, this.sourceEnd);", "-\t\t\t\t\tcodeStream.updateLastRecordedEndPC(currentScope, codeStream.position);", "+\t\t\t\t\tcodeStream.recordPositionsFrom(codeStream.position, this.sourceEnd);", "-\t// reposition the endPC", "-\tcodeStream.updateLastRecordedEndPC(currentScope, codeStream.position);", "+\tcodeStream.recordPositionsFrom(codeStream.position, this.sourceEnd);"]}], "num": 43878}