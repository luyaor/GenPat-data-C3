{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fad02963decc8d5fd4f14ffbcfc2f041", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "438df5084ebabc07e7ece07a26ff4e5f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "14369aade824a8ea9cd172f06aeb63b163bb9bf0", "commitAfterChange": "76049c710d8a15447cdfbafce1296b7824e89c76", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " private void add(String relativePath, String containerPath, boolean isPackage, AccessRuleSet access)", "signatureAfterChange": " private void add(String projectPath, String relativePath, String containerPath, boolean isPackage, AccessRuleSet access)", "diff": ["-private void add(String relativePath, String containerPath, boolean isPackage, AccessRuleSet access) {", "+private void add(String projectPath, String relativePath, String containerPath, boolean isPackage, AccessRuleSet access) {", "+\tint idx = -1;", "+\tif (projectPath != null && !containerPath.startsWith(projectPath)) {", "+\t\tidx = this.projectPaths.indexOf(projectPath);", "+\t\tif (idx == -1) {", "+\t\t\t// store project in separated list to minimize memory footprint", "+\t\t\tthis.projectPaths.add(projectPath);", "+\t\t\tidx = this.projectPaths.indexOf(projectPath);", "+\t\t}", "+\t}", "+\tthis.projectIndexes[index] = idx;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9472360a77c3b318db0870eaff6330ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelCompletionTests.java", "commitBeforeChange": "43910be7c5e7874a970515d1dbb3b63c454bc688", "commitAfterChange": "d7d4a2e6181a270380c8726d1367c8cd49a78b6b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " protected CompletionResult complete(String path, String source, boolean showPositions, String completeBehind) throws JavaModelException", "signatureAfterChange": " protected CompletionResult complete(String path, String source, boolean showPositions, String completeBehind, String tokenStartBehind, String token) throws JavaModelException", "diff": ["+}", "+protected CompletionResult complete(String path, String source, boolean showPositions, String completeBehind, String tokenStartBehind, String token) throws JavaModelException {", "+\tint tokenStart = -1;", "+\tint tokenEnd = -1;", "+\tif(tokenStartBehind != null && token != null) {", "+\t\ttokenStart = str.lastIndexOf(tokenStartBehind) + tokenStartBehind.length();", "+\t\ttokenEnd = tokenStart + token.length() - 1;", "+\t}", "+\tresult.tokenStart = tokenStart;", "+\tresult.tokenEnd = tokenEnd;", "+\treturn result;", "+}"]}], "num": 57212}