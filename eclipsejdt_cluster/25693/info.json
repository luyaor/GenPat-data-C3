{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8a2f4aa8459ee65b11161b0c2473189b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01d401a4e79c6f136204d02765f2e8a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "4087231d30a4b358686cbbdca168b3172502840a", "commitAfterChange": "067ce26834c5540d672d2cb2c57759092eacbb7c", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "\r public boolean hasStructuralChanges(byte[] newBytes)", "signatureAfterChange": "\r public boolean hasStructuralChanges(byte[] newBytes)", "diff": ["-\t\t\tint matchCounter = 0;\r", "-\t\t\t\tfor (int j = 0; j < newInterfacesLength; j++) {\r", "-\t\t\t\t\tif (CharOperation.equals(this.interfaceNames[i], newInterfacesNames[j])) {\r", "-\t\t\t\t\t\tmatchCounter++;\r", "-\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\t}\r", "+\t\t\t\tif (!CharOperation.equals(this.interfaceNames[i], newInterfacesNames[i])) {\r", "+\t\t\t\t\treturn true;\r", "-\t\t\t}\r", "-\t\t\tif (matchCounter != this.interfacesCount) {\r", "-\t\t\t\treturn true;\r", "-\t\tif (otherFieldInfos != null) {\r", "-\t\t\tArrays.sort(this.fields);\r", "-\t\t\tArrays.sort(otherFieldInfos);\r", "+\t\tif (otherFieldInfosLength != 0) {\r", "+//\t\t\tArrays.sort(this.fields);\r", "+//\t\t\tArrays.sort(otherFieldInfos);\r", "+\t\t\t\t\tif (!otherFieldInfo.hasConstant()) {\r", "+\t\t\t\t\t\treturn true;\r", "+\t\t\t\t\t}\r", "-\t\tif (otherMethodInfos != null) {\r", "-\t\t\tArrays.sort(this.methods);\r", "-\t\t\tArrays.sort(otherMethodInfos);\r", "+\t\tif (otherMethodInfosLength != 0) {\r", "+//\t\t\tArrays.sort(this.methods);\r", "+//\t\t\tArrays.sort(otherMethodInfos);\r", "-\t\t\t\t\tint matchCounter = 0;\r", "-\t\t\t\t\t\tfor (int j = 0; j < otherThrownExceptionsLength; j++) {\r", "-\t\t\t\t\t\t\tif (CharOperation.equals(currentThrownExceptions[k], otherThrownExceptions[j])) {\r", "-\t\t\t\t\t\t\t\tmatchCounter++;\r", "-\t\t\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\tif (!CharOperation.equals(currentThrownExceptions[k], otherThrownExceptions[k])) {\r", "+\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\tif (matchCounter != currentThrownExceptionsLength) {\r", "-\t\t\t\t\t\treturn true;\r", "+\t\t// Member types\r", "+\t\tInnerClassInfo[] currentMemberTypes = (InnerClassInfo[]) this.getMemberTypes();\r", "+\t\tInnerClassInfo[] otherMemberTypes = (InnerClassInfo[]) newClassFile.getMemberTypes();\r", "+\t\tint currentMemberTypeLength = currentMemberTypes == null ? 0 : currentMemberTypes.length;\r", "+\t\tint otherMemberTypeLength = otherMemberTypes == null ? 0 : otherMemberTypes.length;\r", "+\t\tif (currentMemberTypeLength != otherMemberTypeLength) {\r", "+\t\t\treturn true;\r", "+\t\t}\r", "+\t\tif (currentMemberTypeLength != 0) {\r", "+\t\t\tfor (int i = 0; i < currentMemberTypeLength; i++) {\r", "+\t\t\t\tif (!CharOperation.equals(currentMemberTypes[i].getName(), otherMemberTypes[i].getName())\r", "+\t\t\t\t\t|| currentMemberTypes[i].getModifiers() != otherMemberTypes[i].getModifiers()) {\r", "+\t\t\t\t\t\treturn true;\r", "+\t\t\t\t}\r", "+\t\t\t}\t\t\t\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e9d024088f0453518f6ec05fb15fb06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "530c48877da8402a05b3f0b84990331c9acd9df4", "commitAfterChange": "d5488a3ba93291ed8339edaad64e7cedc13fb558", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "\r public boolean hasStructuralChanges(byte[] newBytes, boolean orderRequired, boolean excludesSynthetic)", "signatureAfterChange": "\r public boolean hasStructuralChanges(byte[] newBytes, boolean orderRequired, boolean excludesSynthetic)", "diff": ["-\t\tif (orderRequired) {\r", "-\t\t\tif (this.fieldsCount != 0)\r", "-\t\t\t\tArrays.sort(this.fields);\r", "-\t\t\tif (otherFieldInfosLength != 0)\r", "-\t\t\t\tArrays.sort(otherFieldInfos);\r", "+\t\tboolean compareFields = true;\r", "+\t\tif (this.fieldsCount == otherFieldInfosLength) {\r", "+\t\t\tint i = 0;\r", "+\t\t\tfor (; i < this.fieldsCount; i++)\r", "+\t\t\t\tif (hasStructuralFieldChanges(this.fields[i], otherFieldInfos[i])) break;\r", "+\t\t\tif ((compareFields = i != this.fieldsCount) && !orderRequired && !excludesSynthetic)\r", "+\t\t\t\treturn true;\r", "-\t\tif (excludesSynthetic) {\r", "-\t\t\tif (hasNonSyntheticFieldChanges(this.fields, otherFieldInfos))\r", "-\t\t\t\treturn true;\r", "-\t\t} else {\r", "-\t\t\tif (this.fieldsCount != otherFieldInfosLength)\r", "-\t\t\t\treturn true;\r", "-\t\t\tfor (int i = 0; i < this.fieldsCount; i++)\r", "-\t\t\t\tif (hasStructuralFieldChanges(this.fields[i], otherFieldInfos[i]))\r", "+\t\tif (compareFields) {\r", "+\t\t\tif (orderRequired) {\r", "+\t\t\t\tif (this.fieldsCount != 0)\r", "+\t\t\t\t\tArrays.sort(this.fields);\r", "+\t\t\t\tif (otherFieldInfosLength != 0)\r", "+\t\t\t\t\tArrays.sort(otherFieldInfos);\r", "+\t\t\t}\r", "+\t\t\tif (excludesSynthetic) {\r", "+\t\t\t\tif (hasNonSyntheticFieldChanges(this.fields, otherFieldInfos))\r", "+\t\t\t} else {\r", "+\t\t\t\tif (this.fieldsCount != otherFieldInfosLength)\r", "+\t\t\t\t\treturn true;\r", "+\t\t\t\tfor (int i = 0; i < this.fieldsCount; i++)\r", "+\t\t\t\t\tif (hasStructuralFieldChanges(this.fields[i], otherFieldInfos[i]))\r", "+\t\t\t\t\t\treturn true;\r", "+\t\t\t}\r", "-\t\tif (orderRequired) {\r", "-\t\t\tif (this.methodsCount != 0)\r", "-\t\t\t\tArrays.sort(this.methods);\r", "-\t\t\tif (otherMethodInfosLength != 0)\r", "-\t\t\t\tArrays.sort(otherMethodInfos);\t\r", "+\t\tboolean compareMethods = true;\r", "+\t\tif (this.methodsCount == otherMethodInfosLength) {\r", "+\t\t\tint i = 0;\r", "+\t\t\tfor (; i < this.methodsCount; i++)\r", "+\t\t\t\tif (hasStructuralMethodChanges(this.methods[i], otherMethodInfos[i])) break;\r", "+\t\t\tif ((compareMethods = i != this.methodsCount) && !orderRequired && !excludesSynthetic)\r", "+\t\t\t\treturn true;\r", "-\t\tif (excludesSynthetic) {\r", "-\t\t\tif (hasNonSyntheticMethodChanges(this.methods, otherMethodInfos))\r", "-\t\t\t\treturn true;\r", "-\t\t} else {\r", "-\t\t\tif (this.methodsCount != otherMethodInfosLength)\r", "-\t\t\t\treturn true;\r", "-\t\t\tfor (int i = 0; i < this.methodsCount; i++)\r", "-\t\t\t\tif (hasStructuralMethodChanges(this.methods[i], otherMethodInfos[i]))\r", "+\t\tif (compareMethods) {\r", "+\t\t\tif (orderRequired) {\r", "+\t\t\t\tif (this.methodsCount != 0)\r", "+\t\t\t\t\tArrays.sort(this.methods);\r", "+\t\t\t\tif (otherMethodInfosLength != 0)\r", "+\t\t\t\t\tArrays.sort(otherMethodInfos);\t\r", "+\t\t\t}\r", "+\t\t\tif (excludesSynthetic) {\r", "+\t\t\t\tif (hasNonSyntheticMethodChanges(this.methods, otherMethodInfos))\r", "+\t\t\t} else {\r", "+\t\t\t\tif (this.methodsCount != otherMethodInfosLength)\r", "+\t\t\t\t\treturn true;\r", "+\t\t\t\tfor (int i = 0; i < this.methodsCount; i++)\r", "+\t\t\t\t\tif (hasStructuralMethodChanges(this.methods[i], otherMethodInfos[i]))\r", "+\t\t\t\t\t\treturn true;\r", "+\t\t\t}\r"]}], "num": 25693}