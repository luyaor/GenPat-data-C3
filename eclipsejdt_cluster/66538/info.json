{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "501e8f756e79b87fe506e54334af49f4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "897a0f8b71f273c8defe53698b0a9479", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/WhileStatement.java", "commitBeforeChange": "6e9fa2887419c5e973bc6ff9a10a3c1bcfa941db", "commitAfterChange": "6001d3b093576094091cc8d401be17207c6cc911", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\t\tFlowInfo mergedInfo = condInfo.initsWhenFalse();", "+\t\t\t\tFlowInfo mergedInfo = flowInfo.copy().addInitializationsFrom(condInfo.initsWhenFalse());", "-\t\t\t\treturn flowInfo.unconditionalInits().", "-\t\t\t\t\taddPotentialNullInfoFrom(", "-\t\t\t\t\t\t\tcondInfo.initsWhenFalse().unconditionalInits()); ", "+\t\t\t\treturn mergedInfo; "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d18b5fcd38e7017147004fd54c4cd398", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/DoStatement.java", "commitBeforeChange": "b3d6511bfc5dff5703062bc61c81c4162e5d04f0", "commitAfterChange": "93991dcca6f649b3226644169cf868ab7dae96df", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\tUnconditionalFlowInfo checkFlowInfo;", "-\t\t\t\tcheckFlowInfo = actionInfo.", "-\t\t\t\t\taddPotentialNullInfoFrom(", "+\t\t\t\tflowInfo.unconditionalCopy().addPotentialNullInfoFrom(", "-\t\t\t\tcheckFlowInfo);", "+\t\t\t\tactionInfo.addPotentialNullInfoFrom(", "+\t\t\t\t  condInfo.initsWhenTrue().unconditionalInits()));"]}], "num": 66538}