{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "22cd6fd7fb01c3b4d325fcb1a9580baa", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4eeb19a7f1ee124149310e9086975919", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/InternalExtendedCompletionContext.java", "commitBeforeChange": "0d164c5fd27f905997905e2364acd7d413efe08e", "commitAfterChange": "cb53eff5db7d4f76eb24c91a2abecee1441f0bbc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprivate void computeVisibleElementBindings()", "signatureAfterChange": "  \tprivate void computeVisibleElementBindings()", "diff": ["-\t\t\t\t\t\t\tif (fieldDeclaration.initialization != null &&", "-\t\t\t\t\t\t\t\t\tfieldDeclaration.initialization.sourceStart <= astNode.sourceStart &&", "-\t\t\t\t\t\t\t\t\tastNode.sourceEnd <= fieldDeclaration.initialization.sourceEnd) {", "+\t\t\t\t\t\t\tif (fieldDeclaration.initialization != null) {", "+\t\t\t\t\t\t\t\t// remove this field from visibleFields list because completion is being asked in its", "+\t\t\t\t\t\t\t\t// intialization and so this has not yet been declared successfully.", "+\t\t\t\t\t\t\t\tif (this.visibleFields.size > 0 && this.visibleFields.contains(fieldDeclaration.binding)) {", "+\t\t\t\t\t\t\t\t\tthis.visibleFields.remove(fieldDeclaration.binding);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t/*(Incase fieldDeclaration != null is not sufficient to infer that", "+\t\t\t\t\t\t\t  proposal is being asked inside initializer of field decl, use the below if", "+\t\t\t\t\t\t\t  block instead of the above)", "+\t\t\t\t\t\t\tif (fieldDeclaration.initialization != null) {", "+\t\t\t\t\t\t\t ", "+\t\t\t\t\t\t\t\tif (fieldDeclaration.initialization.sourceEnd > 0) {", "+\t\t\t\t\t\t\t\t\tif (fieldDeclaration.initialization.sourceStart <= astNode.sourceStart &&", "+\t\t\t\t\t\t\t\t\t\t\tastNode.sourceEnd <= fieldDeclaration.initialization.sourceEnd) {", "+\t\t\t\t\t\t\t\t\t\t// completion is inside a field initializer", "+\t\t\t\t\t\t\t\t\t\tsearchVisibleVariablesAndMethods(scope, this.visibleLocalVariables, this.visibleFields, this.visibleMethods, notInJavadoc);", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t} else { // The sourceEnd may not yet be set", "+\t\t\t\t\t\t\t\t\tCompletionNodeDetector detector = new CompletionNodeDetector(this.assistNode, fieldDeclaration.initialization);", "+\t\t\t\t\t\t\t\t\tif (detector.containsCompletionNode()) {", "+\t\t\t\t\t\t\t\t\t\tsearchVisibleVariablesAndMethods(scope, this.visibleLocalVariables, this.visibleFields, this.visibleMethods, notInJavadoc);", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t// remove this field from visibleFields list because completion is being asked in its", "+\t\t\t\t\t\t\t\t// intialization and so this has not yet been declared successfully.", "+\t\t\t\t\t\t\t\tif (this.visibleFields.size > 0 && this.visibleFields.contains(fieldDeclaration.binding)) {", "+\t\t\t\t\t\t\t\t\tthis.visibleFields.remove(fieldDeclaration.binding);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}*/"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7d70e30ae3728c8d5b03c35133a5716", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/InternalExtendedCompletionContext.java", "commitBeforeChange": "13de33d27f62a8e18bfa9b4bad7cc8222b56b1f2", "commitAfterChange": "e1cd009aeadbb1638b9152a08db4bfcba963e522", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprivate void computeVisibleElementBindings()", "signatureAfterChange": "  \tprivate void computeVisibleElementBindings()", "diff": ["-\t\t\t\t\t\t\tFieldDeclaration fieldDeclaration = fields[i];", "+\t\t\t\t\t\t\tFieldDeclaration fieldDeclaration = fields[i];\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\t// completion is inside a field initializer", "-\t\t\t\t\t\t\t\tsearchVisibleVariablesAndMethods(scope, this.visibleLocalVariables, this.visibleFields, this.visibleMethods, notInJavadoc);", "-\t\t\t\t\t\t\t\t// remove this field from visibleFields list because completion is being asked in its", "-\t\t\t\t\t\t\t\t// intialization and so this has not yet been declared successfully.", "-\t\t\t\t\t\t\t\tif (this.visibleFields.size > 0 && this.visibleFields.contains(fieldDeclaration.binding)) {", "-\t\t\t\t\t\t\t\t\tthis.visibleFields.remove(fieldDeclaration.binding);", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tint count = 0;", "-\t\t\t\t\t\t\t\twhile (count < this.visibleFields.size) {", "-\t\t\t\t\t\t\t\t\tFieldBinding visibleField = (FieldBinding)this.visibleFields.elementAt(count);", "-\t\t\t\t\t\t\t\t\tif (visibleField.id > fieldDeclaration.binding.id) {", "-\t\t\t\t\t\t\t\t\t\tthis.visibleFields.remove(visibleField);", "-\t\t\t\t\t\t\t\t\t\tcontinue;", "-\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\tcount++;", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tbreak done;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t/*(Incase fieldDeclaration != null is not sufficient to infer that", "-\t\t\t\t\t\t\t  proposal is being asked inside initializer of field decl, use the below if", "-\t\t\t\t\t\t\t  block instead of the above)", "-\t\t\t\t\t\t\tif (fieldDeclaration.initialization != null) {", "-\t\t\t\t\t\t\t ", "+\t\t\t\t\t\t\t\tboolean isInsideInitializer = false;", "-\t\t\t\t\t\t\t\t\t\tsearchVisibleVariablesAndMethods(scope, this.visibleLocalVariables, this.visibleFields, this.visibleMethods, notInJavadoc);", "+\t\t\t\t\t\t\t\t\t\tisInsideInitializer = true;", "-\t\t\t\t\t\t\t\t\t\tsearchVisibleVariablesAndMethods(scope, this.visibleLocalVariables, this.visibleFields, this.visibleMethods, notInJavadoc);", "+\t\t\t\t\t\t\t\t\t\t// completion is inside a field initializer", "+\t\t\t\t\t\t\t\t\t\tisInsideInitializer = true;", "-\t\t\t\t\t\t\t\t// remove this field from visibleFields list because completion is being asked in its", "-\t\t\t\t\t\t\t\t// intialization and so this has not yet been declared successfully.", "-\t\t\t\t\t\t\t\tif (this.visibleFields.size > 0 && this.visibleFields.contains(fieldDeclaration.binding)) {", "-\t\t\t\t\t\t\t\t\tthis.visibleFields.remove(fieldDeclaration.binding);", "+\t\t\t\t\t\t\t\tif (isInsideInitializer) {", "+\t\t\t\t\t\t\t\t\tsearchVisibleVariablesAndMethods(scope, this.visibleLocalVariables, this.visibleFields, this.visibleMethods, notInJavadoc);", "+\t\t\t\t\t\t\t\t\t// remove this field from visibleFields list because completion is being asked in its", "+\t\t\t\t\t\t\t\t\t// intialization and so this has not yet been declared successfully.", "+\t\t\t\t\t\t\t\t\tif (this.visibleFields.size > 0 && this.visibleFields.contains(fieldDeclaration.binding)) {", "+\t\t\t\t\t\t\t\t\t\tthis.visibleFields.remove(fieldDeclaration.binding);", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tint count = 0;", "+\t\t\t\t\t\t\t\t\twhile (count < this.visibleFields.size) {", "+\t\t\t\t\t\t\t\t\t\tFieldBinding visibleField = (FieldBinding)this.visibleFields.elementAt(count);", "+\t\t\t\t\t\t\t\t\t\tif (visibleField.id > fieldDeclaration.binding.id) {", "+\t\t\t\t\t\t\t\t\t\t\tthis.visibleFields.remove(visibleField);", "+\t\t\t\t\t\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\tcount++;", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tbreak done;", "-\t\t\t\t\t\t\t}*/", "+\t\t\t\t\t\t\t}"]}], "num": 61009}