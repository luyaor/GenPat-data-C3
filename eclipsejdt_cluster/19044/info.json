{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e412ab269ea89994a7b8477a09b35b63", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c9f322f34c9caf7674bde03774b7e03", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "78ca28be54dd37f4936afd7f9f84bc9cf69d2754", "commitAfterChange": "bffba7ea3757cad0d78bd45d4de11e93bc4b09c5", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " public final void jumpOverMethodBody()", "signatureAfterChange": " public final void jumpOverMethodBody()", "diff": ["+\t\t\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\t\t\tbreak NextToken;", "-\t\t\t\t\t\t\t\tthrow new InvalidInputException(INVALID_LOW_SURROGATE);", "+\t\t\t\t\t\t\t\tbreak NextToken;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\telse if (c >= LOW_SURROGATE_MIN_VALUE && c <= LOW_SURROGATE_MAX_VALUE) {", "-\t\t\t\t\t\t\tif (this.complianceLevel < ClassFileConstants.JDK1_5) {", "-\t\t\t\t\t\t\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tthrow new InvalidInputException(INVALID_HIGH_SURROGATE);", "+\t\t\t\t\t\t} else if (c >= LOW_SURROGATE_MIN_VALUE && c <= LOW_SURROGATE_MAX_VALUE) {", "+\t\t\t\t\t\t\tbreak NextToken;", "-\t\t\t\t\t\tif (ScannerHelper.isDigit(this.currentCharacter)) {", "-\t\t\t\t\t\t\tscanNumber(false);", "-\t\t\t\t\t\t\tbreak NextToken;", "-\t\t\t\t\t\t}\t\t\t\t\t\t", "+//\t\t\t\t\t\tif (ScannerHelper.isDigit(this.currentCharacter)) {", "+//\t\t\t\t\t\t\tscanNumber(false);", "+//\t\t\t\t\t\t\tbreak NextToken;", "+//\t\t\t\t\t\t}\t\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2082ff5bf2670bf40430edd9ec34556c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "78ca28be54dd37f4936afd7f9f84bc9cf69d2754", "commitAfterChange": "bffba7ea3757cad0d78bd45d4de11e93bc4b09c5", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " public final void jumpOverMethodBody()", "signatureAfterChange": " public final void jumpOverMethodBody()", "diff": ["+\t\t\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\t\t\tbreak NextToken;", "-\t\t\t\t\t\t\t\tthrow new InvalidInputException(INVALID_LOW_SURROGATE);", "+\t\t\t\t\t\t\t\tbreak NextToken;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\telse if (c >= LOW_SURROGATE_MIN_VALUE && c <= LOW_SURROGATE_MAX_VALUE) {", "-\t\t\t\t\t\t\tif (this.complianceLevel < ClassFileConstants.JDK1_5) {", "-\t\t\t\t\t\t\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tthrow new InvalidInputException(INVALID_HIGH_SURROGATE);", "+\t\t\t\t\t\t} else if (c >= LOW_SURROGATE_MIN_VALUE && c <= LOW_SURROGATE_MAX_VALUE) {", "+\t\t\t\t\t\t\tbreak NextToken;", "-\t\t\t\t\t\tif (ScannerHelper.isDigit(this.currentCharacter)) {", "-\t\t\t\t\t\t\tscanNumber(false);", "-\t\t\t\t\t\t\tbreak NextToken;", "-\t\t\t\t\t\t}\t\t\t\t\t\t", "+//\t\t\t\t\t\tif (ScannerHelper.isDigit(this.currentCharacter)) {", "+//\t\t\t\t\t\t\tscanNumber(false);", "+//\t\t\t\t\t\t\tbreak NextToken;", "+//\t\t\t\t\t\t}\t\t\t\t\t\t"]}], "num": 19044}