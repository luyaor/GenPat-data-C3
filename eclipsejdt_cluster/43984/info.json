{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "10d62b1fc8dc3d2a84660afc70d7d5b1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2062907dbb04dc6dc6536c9b7c93b859", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableDeclaration.java", "commitBeforeChange": "4005c370e6cbaf5fe897eaa7c9410e92ff25148d", "commitAfterChange": "f0d3823e693314be74db80c5730855ddd690aa1f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic abstract void setName(SimpleName variableName);", "signatureAfterChange": " \tpublic void setName(SimpleName variableName)", "diff": ["-\tpublic abstract void setName(SimpleName variableName);", "+\tpublic void setName(SimpleName variableName) {", "+\t\tif (variableName == null) {", "+\t\t\tthrow new IllegalArgumentException();", "+\t\t}", "+\t\tChildPropertyDescriptor p = internalNameProperty();", "+\t\tASTNode oldChild = this.variableName;", "+\t\tpreReplaceChild(oldChild, variableName, p);", "+\t\tthis.variableName = variableName;", "+\t\tpostReplaceChild(oldChild, variableName, p);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4d6137727da84c88788c5ee6cf84110", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableDeclaration.java", "commitBeforeChange": "4005c370e6cbaf5fe897eaa7c9410e92ff25148d", "commitAfterChange": "f0d3823e693314be74db80c5730855ddd690aa1f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic abstract void setInitializer(Expression initializer);", "signatureAfterChange": " \tpublic void setInitializer(Expression initializer)", "diff": ["-\tpublic abstract void setInitializer(Expression initializer);", "+\tpublic void setInitializer(Expression initializer) {", "+\t\tChildPropertyDescriptor p = internalInitializerProperty();", "+\t\tASTNode oldChild = this.optionalInitializer;", "+\t\tpreReplaceChild(oldChild, initializer, p);", "+\t\tthis.optionalInitializer = initializer;", "+\t\tpostReplaceChild(oldChild, initializer, p);", "+\t}"]}], "num": 43984}