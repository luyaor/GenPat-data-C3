{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "badc13ffa81ee7ef38217340924b7355", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e3790a121bbc99b58adb95d8636a31e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "149a16962b36e6d4b4296a40fc42d0af98ac09df", "commitAfterChange": "b42f9769f5c975cb7f06e2a89e4981d23834d622", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprivate String computeRootPath()", "signatureAfterChange": " \tprivate String computeRootPath()", "diff": ["-// KJ : Release next week", "-//\t\t\t\t\tfolder.accept(new IResourceProxyVisitor() {", "-//\t\t\t\t\t\tpublic boolean visit(IResourceProxy proxy) throws CoreException {", "-//\t\t\t\t\t\t\tif (proxy.getType() == IResource.FILE) {", "-//\t\t\t\t\t\t\t\tif (Util.isJavaFileName(proxy.getName())) { ", "-//\t\t\t\t\t\t\t\t\tIResource resource = proxy.requestResource();", "-\t\t\t\t\tfolder.accept(new IResourceVisitor() {", "-\t\t\t\t\t\tpublic boolean visit(IResource resource) throws CoreException {", "-\t\t\t\t\t\t\tif (resource.getType() == IResource.FILE) {", "-\t\t\t\t\t\t\t\tif (Util.isJavaFileName(resource.getName())) {", "-\t\t\t\t\t\t\t\t\tchar[] contents = org.eclipse.jdt.internal.core.Util.getResourceContentsAsCharArray((IFile)resource, encoding);", "-\t\t\t\t\t\t\t\t\tIPath fullPath = resource.getFullPath();", "-\t\t\t\t\t\t\t\t\tint sourcePathSegmentCount = sourcePath.segmentCount();", "-\t\t\t\t\t\t\t\t\tIPath javaFilePath = fullPath.removeFirstSegments(sourcePathSegmentCount);", "-\t\t\t\t\t\t\t\t\tString rootPath = computeRootPath(javaFilePath.toString(), contents);", "-\t\t\t\t\t\t\t\t\tif (rootPath != null) {", "-\t\t\t\t\t\t\t\t\t\trootPathHolder[0] = rootPath;", "-\t\t\t\t\t\t\t\t\t\tthrow new CoreException(new JavaModelStatus()); // abort visit", "+\t\t\t\t\tfolder.accept(", "+\t\t\t\t\t\tnew IResourceProxyVisitor() {", "+\t\t\t\t\t\t\tpublic boolean visit(IResourceProxy proxy) throws CoreException {", "+\t\t\t\t\t\t\t\tif (proxy.getType() == IResource.FILE) {", "+\t\t\t\t\t\t\t\t\tif (Util.isJavaFileName(proxy.getName())) { ", "+\t\t\t\t\t\t\t\t\t\tIResource resource = proxy.requestResource();", "+\t\t\t\t\t\t\t\t\t\tchar[] contents = org.eclipse.jdt.internal.core.Util.getResourceContentsAsCharArray((IFile)resource, encoding);", "+\t\t\t\t\t\t\t\t\t\tIPath fullPath = resource.getFullPath();", "+\t\t\t\t\t\t\t\t\t\tint sourcePathSegmentCount = sourcePath.segmentCount();", "+\t\t\t\t\t\t\t\t\t\tIPath javaFilePath = fullPath.removeFirstSegments(sourcePathSegmentCount);", "+\t\t\t\t\t\t\t\t\t\tString rootPath = computeRootPath(javaFilePath.toString(), contents);", "+\t\t\t\t\t\t\t\t\t\tif (rootPath != null) {", "+\t\t\t\t\t\t\t\t\t\t\trootPathHolder[0] = rootPath;", "+\t\t\t\t\t\t\t\t\t\t\tthrow new CoreException(new JavaModelStatus()); // abort visit", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\treturn false;", "-\t\t\t\t\t\t\t\treturn false;", "+\t\t\t\t\t\t\t\treturn true;", "-\t\t\t\t\t\t\treturn true;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t});", "+\t\t\t\t\t\t},", "+\t\t\t\t\t\tIResource.NONE", "+\t\t\t\t\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2437e33a02b9721255caa80ca634b607", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/BatchImageBuilder.java", "commitBeforeChange": "149a16962b36e6d4b4296a40fc42d0af98ac09df", "commitAfterChange": "b42f9769f5c975cb7f06e2a89e4981d23834d622", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  protected void copyPackages(ClasspathMultiDirectory sourceLocation) throws CoreException", "signatureAfterChange": "  protected void copyPackages(ClasspathMultiDirectory sourceLocation) throws CoreException", "diff": ["-//\t\tnew IResourceProxyVisitor() {", "-//\t\t\tpublic boolean visit(IResourceProxy proxy) throws CoreException {", "-//\t\t\t\tswitch(proxy.getType()) {", "-//\t\t\t\t\tcase IResource.FILE :", "-//\t\t\t\t\t\treturn false;", "-//\t\t\t\t\tcase IResource.FOLDER :", "-//\t\t\t\t\t\tIResource resource = proxy.requestResource();", "-//\t\t\t\t\t\tif (resource.equals(outputFolder)) return false;", "-//\t\t\t\t\t\tif (javaBuilder.filterExtraResource(resource)) return false;", "-//\t\t\t\t\t\tif (exclusionPatterns != null && Util.isExcluded(resource, exclusionPatterns))", "-//\t\t\t\t\t\t\treturn false;", "-//", "-//\t\t\t\t\t\tcreateFolder(resource.getFullPath().removeFirstSegments(segmentCount), outputFolder);", "-//\t\t\t\t}", "-//\t\t\t\treturn true;", "-//\t\t\t}", "-//\t\t}", "-\t\tnew IResourceVisitor() {", "-\t\t\tpublic boolean visit(IResource resource) throws CoreException {", "-\t\t\t\tswitch(resource.getType()) {", "+\t\tnew IResourceProxyVisitor() {", "+\t\t\tpublic boolean visit(IResourceProxy proxy) throws CoreException {", "+\t\t\t\tswitch(proxy.getType()) {", "+\t\t\t\t\t\tIResource resource = proxy.requestResource();", "-\t\t}", "+\t\t},", "+\t\tIResource.NONE"]}], "num": 29361}