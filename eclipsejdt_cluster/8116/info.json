{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "17b1de6fe3910dcfb1bc41ccf35b2fa1", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1165665f335ef5f141b0ad98f7c76757", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 35, "signatureBeforeChange": "  \tpublic CastExpression convert(org.eclipse.jdt.internal.compiler.ast.CastExpression expression)", "signatureAfterChange": "  \tpublic CastExpression convert(org.eclipse.jdt.internal.compiler.ast.CastExpression expression)", "diff": ["-\t\tif (type instanceof TypeReference ) {", "-\t\t\tcastExpression.setType(convertType((TypeReference)type));", "-\t\t} else if (type instanceof NameReference) {", "-\t\t\tcastExpression.setType(convertToType((NameReference)type));", "+\t\tif (type instanceof org.eclipse.jdt.internal.compiler.ast.TypeReference ) {", "+\t\t\tcastExpression.setType(convertType((org.eclipse.jdt.internal.compiler.ast.TypeReference)type));", "+\t\t} else if (type instanceof org.eclipse.jdt.internal.compiler.ast.NameReference) {", "+\t\t\tcastExpression.setType(convertToType((org.eclipse.jdt.internal.compiler.ast.NameReference)type));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc4f419819b46b9696665cea3432170a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 67, "signatureBeforeChange": " \t \tpublic ForStatement convert(org.eclipse.jdt.internal.compiler.ast.ForStatement statement)", "signatureAfterChange": " \t \tpublic ForStatement convert(org.eclipse.jdt.internal.compiler.ast.ForStatement statement)", "diff": ["-\t\t\tif (initializations[0] instanceof LocalDeclaration) {", "-\t\t\t\tVariableDeclarationExpression variableDeclarationExpression = convertToVariableDeclarationExpression((LocalDeclaration) initializations[0]);", "+\t\t\tif (initializations[0] instanceof org.eclipse.jdt.internal.compiler.ast.LocalDeclaration) {", "+\t\t\t\tVariableDeclarationExpression variableDeclarationExpression = convertToVariableDeclarationExpression((org.eclipse.jdt.internal.compiler.ast.LocalDeclaration) initializations[0]);", "-\t\t\t\t\tvariableDeclarationExpression.fragments().add(convertToVariableDeclarationFragment((LocalDeclaration)initializations[i]));", "+\t\t\t\t\tvariableDeclarationExpression.fragments().add(convertToVariableDeclarationFragment((org.eclipse.jdt.internal.compiler.ast.LocalDeclaration)initializations[i]));", "-\t\t\t\t\tint end = ((LocalDeclaration) initializations[initializationsLength - 1]).declarationSourceEnd;", "+\t\t\t\t\tint end = ((org.eclipse.jdt.internal.compiler.ast.LocalDeclaration) initializations[initializationsLength - 1]).declarationSourceEnd;"]}], "num": 8116}