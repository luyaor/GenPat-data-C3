{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8c946d80079c607a469bc4635dee298c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "425e56b229403acf06339551b117c93f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "844b891620178c0b92403d6108fad8dcdac272df", "commitAfterChange": "f4f81968c0fa49af0ebd2fc1f35fb9113776c823", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic void testDeltaDiscardPrimaryWorkingCopy3() throws CoreException", "signatureAfterChange": " \tpublic void testDeltaDiscardPrimaryWorkingCopy3() throws CoreException", "diff": ["-\t\tICompilationUnit workingCopy = null;", "-\t\t\tworkingCopy = getCompilationUnit(\"P/Y.java\");", "-\t\t\tworkingCopy.becomeWorkingCopy(null, null);", "+\t\t\tthis.workingCopy = getCompilationUnit(\"P/Y.java\");", "+\t\t\tthis.workingCopy.becomeWorkingCopy(null, null);", "-\t\t\tworkingCopy.discardWorkingCopy();", "+\t\t\tthis.workingCopy.discardWorkingCopy();", "-\t\t\tif (workingCopy != null) {", "-\t\t\t\tworkingCopy.discardWorkingCopy();", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0688236a94d666118f74367e15b15ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "844b891620178c0b92403d6108fad8dcdac272df", "commitAfterChange": "f4f81968c0fa49af0ebd2fc1f35fb9113776c823", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tpublic void testGetWorkingCopy1() throws CoreException", "signatureAfterChange": " \tpublic void testGetWorkingCopy1() throws CoreException", "diff": ["-\t\tICompilationUnit workingCopy = null;", "-\t\t\tworkingCopy = cu.getWorkingCopy(owner, null, null);", "+\t\t\tthis.workingCopy = cu.getWorkingCopy(owner, null, null);", "-\t\t\tassertEquals(\"Unexpected working copy\", workingCopy, cu.getWorkingCopy(owner, null, null));", "+\t\t\tassertEquals(\"Unexpected working copy\", this.workingCopy, cu.getWorkingCopy(owner, null, null));", "-\t\t\tif (workingCopy != null) {", "+\t\t\tif (this.workingCopy != null) {", "-\t\t\t\twhile (workingCopy.isWorkingCopy() && max-- > 0) {", "-\t\t\t\t\tworkingCopy.discardWorkingCopy();", "+\t\t\t\twhile (this.workingCopy.isWorkingCopy() && max-- > 0) {", "+\t\t\t\t\tthis.workingCopy.discardWorkingCopy();"]}], "num": 21809}