{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b4a1f87efac8fc629f14957d5ce41ffc", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "677050c1e2b22a9a8da065bf42c69951", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "53380a5830867128cd28d10f3919067730bbfb82", "commitAfterChange": "c0f393752b7d4523a5fc372912c7b4e192e52da7", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tprotected boolean parseParam() throws InvalidInputException", "signatureAfterChange": " \tprotected boolean parseParam() throws InvalidInputException", "diff": ["+\t\tthis.identifierPtr = -1;", "+\t\tthis.identifierLengthPtr = -1;", "-\t\t\t\t\t\tthis.identifierPtr = -1;", "-\t\t\t\t\t\tthis.identifierLengthPtr = -1;", "+\t\t\t\t\t\t// store '<' in identifiers stack as we need to add it to tag element (bug 79809)", "+\t\t\t\t\t\tpushIdentifier(true);", "-\t\t\t\t\t\t\tthis.identifierPtr = -1;", "-\t\t\t\t\t\t\tthis.identifierLengthPtr = -1;", "-\t\t\t\t\t\t\tpushIdentifier(true);", "+\t\t\t\t\t\t\tpushIdentifier(false);", "+\t\t\t\t\t\t\t// store '>' in identifiers stack as we need to add it to tag element (bug 79809)", "+\t\t\t\t\t\t\tpushIdentifier(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71a2549cae3cf2e3f8c8727e0fce0f4b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \t \tprivate void format(TypeDeclaration typeDeclaration)", "signatureAfterChange": " \t \tprivate void format(TypeDeclaration typeDeclaration)", "diff": ["-\t\t\t\t\tthis.preferences.type_declaration_superclass_alignment,", "+\t\t\t\t\tthis.preferences.alignment_for_superclass_in_type_declaration,", "-\t\t\t\t\tthis.preferences.type_declaration_superinterfaces_alignment,", "+\t\t\t\t\tthis.preferences.alignment_for_superinterfaces_in_type_declaration,", "-\t\tString class_declaration_brace = this.preferences.type_declaration_brace_position;", "+\t\tString class_declaration_brace = this.preferences.brace_position_for_type_declaration;", "-        formatLeftCurlyBrace(line, this.preferences.type_declaration_brace_position);", "-\t\tformatTypeOpeningBrace(class_declaration_brace, this.preferences.insert_space_before_type_open_brace, typeDeclaration);", "+        formatLeftCurlyBrace(line, class_declaration_brace);", "+\t\tformatTypeOpeningBrace(class_declaration_brace, this.preferences.insert_space_before_opening_brace_in_type_declaration, typeDeclaration);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c129174bfdf6ca06e2ca8cc1c808cbe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBuilder.java", "commitBeforeChange": "8b61d97704a2b67ed3d29404b8692bdbf30b8b5d", "commitAfterChange": "7fa6d6b6f60d0d2345e743063241c3eb3452b00f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprotected IType getHandle(IGenericType genericType, ReferenceBinding binding)", "signatureAfterChange": " \tprotected IType getHandle(IGenericType genericType, ReferenceBinding binding)", "diff": ["-\t\t\t\thandle = new ResolvedSourceType((SourceType) handle, new String(binding.computeUniqueKey()));", "+\t\t\t\thandle = (IType) ((JavaElement) handle).resolved(binding);", "-\t\t\treturn new ResolvedSourceType((SourceType) handle, new String(binding.computeUniqueKey()));", "+\t\t\treturn (IType) ((JavaElement) handle).resolved(binding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac0b29a7b984fd77621339b802e67f02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeNamesCollector.java", "commitBeforeChange": "cbfd067641796f6985a0e5364caf12dd4a6d8906", "commitAfterChange": "aeba2c4302e0eda57cf037e76e7dd42f94a39592", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 15, "signatureBeforeChange": " public char[][][] collect() throws JavaModelException", "signatureAfterChange": " public char[][][] collect() throws JavaModelException", "diff": ["-\t\t\t\t\tthis.collectSuperTypeNames(binding);", "+\t\t\t\t\tcollectSuperTypeNames(binding);", "-\t\t\t\tCompilationUnitDeclaration parsedUnit = this.buildBindings(unit);", "+\t\t\t\tCompilationUnitDeclaration parsedUnit = buildBindings(unit);", "-\t\t\t\t\tCompilationUnitDeclaration parsedUnit = this.buildBindings(unit);", "+\t\t\t\t\tCompilationUnitDeclaration parsedUnit = buildBindings(unit);", "-\t\t\t\t\tif (this.matches(binding))", "-\t\t\t\t\t\tthis.collectSuperTypeNames(binding);", "+\t\t\t\t\tif (matches(binding))", "+\t\t\t\t\t\tcollectSuperTypeNames(binding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b184a8c4042761113e4cf3e7126bcabe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 38, "signatureBeforeChange": " public void testGrowImports() throws JavaModelException", "signatureAfterChange": " public void testGrowImports() throws JavaModelException", "diff": ["-\tthis.clearDeltas();", "+\tclearDeltas();", "-\tthis.clearDeltas();", "+\tclearDeltas();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9d48f2deb5fd0523ba2200aef703595", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "20a3b07578a2ebec2d9a0569764e78af37761eaf", "commitAfterChange": "c052d66dbc2732414cdaf446e79eec5da0743843", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 123, "signatureBeforeChange": " public void testBug118823b() throws CoreException, InterruptedException", "signatureAfterChange": " public void testBug118823b() throws CoreException, InterruptedException", "diff": ["-\t\t\t\"/P1/Test.java\", ", "+\t\t\t\"/P1/Test.java\",", "-\t\tString source2 = ", "+\t\tString source2 =", "-\t\tthis.workingCopies[0] = getCompilationUnit(\"/P1/Test.java\").getWorkingCopy(new WorkingCopyOwner() {}, this.problemRequestor, null);", "+\t\tthis.workingCopies[0] = getCompilationUnit(\"/P1/Test.java\").getWorkingCopy(this.wcOwner, null);", "-\t\tthis.workingCopies[1] = getCompilationUnit(\"/P2/A.java\").getWorkingCopy(new WorkingCopyOwner() {}, this.problemRequestor, null);", "+\t\tthis.workingCopies[1] = getCompilationUnit(\"/P2/A.java\").getWorkingCopy(this.wcOwner, null);", "-\t\tsource1 = ", "-\t\t\t\"public class Test {}\\n\" + ", "+\t\tsource1 =", "+\t\t\t\"public class Test {}\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f394283c3caf147dc85ecb41022bdbd8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "cd290957c2bd8d760411805c481ea53ade57f09d", "commitAfterChange": "c235f0d68d13055cb9237a3b54fd2255553fe602", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 23, "signatureBeforeChange": " protected void consumeAnnotationAsModifier()", "signatureAfterChange": " protected void consumeMarkerAnnotation()", "diff": ["-protected void consumeAnnotationAsModifier() {", "-\tsuper.consumeAnnotationAsModifier();", "-\tExpression expression = this.expressionStack[this.expressionPtr];", "-\tif (expression instanceof Annotation) {", "-\t\tthis.patternLocator.match(((Annotation)expression).type, this.nodeSet);", "-\t}", "-}", "+}", "+protected void consumeMarkerAnnotation() {", "+\tsuper.consumeMarkerAnnotation();", "+\t// this is always an Annotation", "+\tAnnotation annotation = (Annotation) expressionStack[expressionPtr];", "+\tthis.patternLocator.match(annotation, nodeSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4e7f3b56ab5e43c9dc6f4ebc95b0020", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "f8f9b421e40a063ca8114a2e1dadfc0f4aed3108", "commitAfterChange": "fa2298688682ae3418bc86c6341b5d5f8c730cc1", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "  \tprivate void printLineComment(int commentStart, int commentEnd)", "signatureAfterChange": "  \tprivate void printLineComment(int commentStart, int commentEnd)", "diff": ["-\t\tthis.indentationLevel = (this.column / this.tabLength) * this.tabLength;", "+\t\tthis.indentationLevel = getNextIndentationLevel(firstColumn);"]}], "num": 18172}