{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "840ef5bcf466b092e84906314ae5e50a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8439f3fc646b883756a0d005f501d63d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AddJarFileToIndex.java", "commitBeforeChange": "2bf8d876e4d66bd0fa9172a177289e82abf5e2a4", "commitAfterChange": "8115b94a15102913234fbbe463796f613813039a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\t\r \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": "\t\r \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["+\t\t\t\t\tif (JobManager.VERBOSE) \r", "+\t\t\t\t\t\tJobManager.log(\"-> failed indexing \" + this.path + \" as it is not local\"); //$NON-NLS-1$//$NON-NLS-2$\r", "-\t\t\tif (index != null)\r", "+\t\t\tif (index != null) {\r", "+\t\t\t\tif (JobManager.VERBOSE) \r", "+\t\t\t\t\tJobManager.log(\"-> no indexing required (index already exists) for \" + this.path); //$NON-NLS-1$\r", "+\t\t\t}\r", "-\t\t\tif (index == null)\r", "+\t\t\tif (index == null) {\r", "+\t\t\t\tif (JobManager.VERBOSE) \r", "+\t\t\t\t\tJobManager.log(\"-> index could not be created for \" + this.path); //$NON-NLS-1$\r", "+\t\t\t}\r", "-\t\t\tif (monitor == null)\r", "+\t\t\tif (monitor == null) {\r", "+\t\t\t\tif (JobManager.VERBOSE) \r", "+\t\t\t\t\tJobManager.log(\"-> index for \" + this.path + \" just got deleted\"); //$NON-NLS-1$//$NON-NLS-2$\r", "+\t\t\t}\r", "-\t\t\t\t\t\t\t\t\"-> no indexing required for \" //$NON-NLS-1$\r", "+\t\t\t\t\t\t\t\t\"-> no indexing required (index is consistent with library) for \" //$NON-NLS-1$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9224414d47c2084ae4c465aba349aff8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "14d447e9b3a680ded3744f07910de88768216ea3", "commitAfterChange": "689526016f6ab442680e718d2760fc44e79dd9b5", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  public void computeId()", "signatureAfterChange": "  public void computeId()", "diff": ["-\t\t\t\t\t\t\t\t\tif (CharOperation.equals(typeName, TypeConstants.JAVA_UTIL_COLLECTION[2]))", "+\t\t\t\t\t\t\t\t\tif (CharOperation.equals(typeName, TypeConstants.JAVA_UTIL_COLLECTION[2])) {", "+\t\t\t\t\t\t\t\t\t\tthis.typeBits |= TypeIds.BitCollection;", "+\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\tcase 'L' :", "+\t\t\t\t\t\t\t\t\tif (CharOperation.equals(typeName, TypeConstants.JAVA_UTIL_LIST[2])) {", "+\t\t\t\t\t\t\t\t\t\tthis.id = TypeIds.T_JavaUtilList;", "+\t\t\t\t\t\t\t\t\t\tthis.typeBits |= TypeIds.BitList;", "+\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\treturn;", "+\t\t\t\t\t\t\t\tcase 'M' :", "+\t\t\t\t\t\t\t\t\tif (CharOperation.equals(typeName, TypeConstants.JAVA_UTIL_MAP[2])) {", "+\t\t\t\t\t\t\t\t\t\tthis.id = TypeIds.T_JavaUtilMap;", "+\t\t\t\t\t\t\t\t\t\tthis.typeBits |= TypeIds.BitMap;", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\treturn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c23f09d99cd866c083a944e05daa9940", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "24242f27a56569515f3a766b79af5b4f6c52fffe", "commitAfterChange": "270b2d0dc66fd2f8c8012264ce82bca4953b85cb", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  public void computeId()", "signatureAfterChange": "  public void computeId()", "diff": ["-\t\t\tif (!CharOperation.equals(TypeConstants.JDT, this.compoundName[2]) || !CharOperation.equals(TypeConstants.ITYPEBINDING, this.compoundName[5]))", "-\t\t\t\treturn;", "-\t\t\tif (CharOperation.equals(TypeConstants.ORG_ECLIPSE_JDT_CORE_DOM_ITYPEBINDING, this.compoundName))", "-\t\t\t\tthis.typeBits |= TypeIds.BitUninternedType;", "+\t\t\tif (CharOperation.equals(TypeConstants.ORG, this.compoundName[0])) {", "+\t\t\t\tif (CharOperation.equals(TypeConstants.SPRING, this.compoundName[1])) {", "+\t\t\t\t\tif (CharOperation.equals(TypeConstants.AUTOWIRED, this.compoundName[5])) {", "+\t\t\t\t\t\tif (CharOperation.equals(TypeConstants.ORG_SPRING_AUTOWIRED, this.compoundName)) {", "+\t\t\t\t\t\t\tthis.id = TypeIds.T_OrgSpringframeworkBeansFactoryAnnotationAutowired;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\treturn;", "+\t\t\t\t}", "+\t\t\t\tif (!CharOperation.equals(TypeConstants.JDT, this.compoundName[2]) || !CharOperation.equals(TypeConstants.ITYPEBINDING, this.compoundName[5]))", "+\t\t\t\t\treturn;", "+\t\t\t\tif (CharOperation.equals(TypeConstants.ORG_ECLIPSE_JDT_CORE_DOM_ITYPEBINDING, this.compoundName))", "+\t\t\t\t\tthis.typeBits |= TypeIds.BitUninternedType;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c550343486117c40a165a96b8bcdc01f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "87d4fd7980451e90652820b5860e6399b708ef2c", "commitAfterChange": "913656a5a76e9163d25332c6a9aeee51291ec413", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tprivate final void addOptimizedReplaceEdit(int offset, int length, String replacement)", "signatureAfterChange": "  \tprivate final void addOptimizedReplaceEdit(int offset, int length, String replacement)", "diff": ["+\t\tif (!this.editsEnabled) {", "+\t\t\tif (this.previousDisabledEdit != null && this.previousDisabledEdit.offset == offset) {", "+\t\t\t\treplacement = this.previousDisabledEdit.replacement;", "+\t\t\t}", "+\t\t\tthis.previousDisabledEdit = null;", "+\t\t\tif (replacement.indexOf(this.lineSeparator) >= 0) {", "+\t\t\t\tif (length == 0 || printNewLinesCharacters(offset, length)) {", "+\t\t\t\t\tthis.previousDisabledEdit = new OptimizedReplaceEdit(offset, length, replacement);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\treturn;", "+\t\t}"]}], "num": 6793}