{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "47df4931cd75425658580d062c426836", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60753b78bce8bb3641402c390d47cd5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "d4a90dd90535197bda12b521c603853c2f8eb60c", "commitAfterChange": "d473849794f95ce2b5cbae060ffe683ee81ff056", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 34, "signatureBeforeChange": " private void purgeMethodStatements(TypeDeclaration type, MatchingNodeSet nodeSet, boolean checkEachMethod)", "signatureAfterChange": " private void purgeMethodStatements(TypeDeclaration type, boolean checkEachMethod)", "diff": ["+private void purgeMethodStatements(TypeDeclaration type, boolean checkEachMethod) {", "+\tcheckEachMethod = checkEachMethod", "+\t\t&& this.currentPossibleMatch.nodeSet.hasPossibleNodes(type.declarationSourceStart, type.declarationSourceEnd);", "+\tAbstractMethodDeclaration[] methods = type.methods;", "+\tif (methods != null) {", "+\t\tif (checkEachMethod) {", "+\t\t\tfor (int j = 0, k = methods.length; j < k; j++) {", "+\t\t\t\tAbstractMethodDeclaration method = methods[j];", "+\t\t\t\tif (!this.currentPossibleMatch.nodeSet.hasPossibleNodes(method.declarationSourceStart, method.declarationSourceEnd))", "+\t\t\t\t\tmethod.statements = null;", "+\t\t\t}", "+\t\t} else {", "+\t\t\tfor (int j = 0, k = methods.length; j < k; j++)", "+\t\t\t\tmethods[j].statements = null;", "+\t\t}", "+\t}", "+", "+\tMemberTypeDeclaration[] memberTypes = type.memberTypes;", "+\tif (memberTypes != null)", "+\t\tfor (int i = 0, l = memberTypes.length; i < l; i++)", "+\t\t\tpurgeMethodStatements(memberTypes[i], checkEachMethod);", "+}", "-private void purgeMethodStatements(TypeDeclaration type, MatchingNodeSet nodeSet, boolean checkEachMethod) {", "-\tcheckEachMethod = checkEachMethod && nodeSet.hasPossibleNodes(type.declarationSourceStart, type.declarationSourceEnd);", "-\tAbstractMethodDeclaration[] methods = type.methods;", "-\tif (methods != null) {", "-\t\tif (checkEachMethod) {", "-\t\t\tfor (int j = 0, k = methods.length; j < k; j++) {", "-\t\t\t\tAbstractMethodDeclaration method = methods[j];", "-\t\t\t\tif (!nodeSet.hasPossibleNodes(method.declarationSourceStart, method.declarationSourceEnd))", "-\t\t\t\t\tmethod.statements = null;", "-\t\t\t}", "-\t\t} else {", "-\t\t\tfor (int j = 0, k = methods.length; j < k; j++)", "-\t\t\t\tmethods[j].statements = null;", "-\t\t}", "-\t}", "-", "-\tMemberTypeDeclaration[] memberTypes = type.memberTypes;", "-\tif (memberTypes != null)", "-\t\tfor (int i = 0, l = memberTypes.length; i < l; i++)", "-\t\t\tpurgeMethodStatements(memberTypes[i], nodeSet, checkEachMethod);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf2c531119522deba7453d16fc506ab3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "56242f2c4a4e3fdfdcffa7d9541655946a7953f8", "commitAfterChange": "40f76b3d0fb01a4a7fa1aad4b09c356c31458c94", "methodNumberBeforeChange": 510, "methodNumberAfterChange": 510, "signatureBeforeChange": " public void nullityMismatchIsNull(Expression expression, TypeBinding requiredType, char[][] annotationName)", "signatureAfterChange": " public void nullityMismatchIsNull(Expression expression, TypeBinding requiredType)", "diff": ["-public void nullityMismatchIsNull(Expression expression, TypeBinding requiredType, char[][] annotationName) {", "+public void nullityMismatchIsNull(Expression expression, TypeBinding requiredType) {", "-\t\t\tannotatedTypeName(requiredType, annotationName)", "+\t\t\tannotatedTypeName(requiredType, this.options.nonNullAnnotationName)", "-\t\t\tshortAnnotatedTypeName(requiredType, annotationName)", "+\t\t\tshortAnnotatedTypeName(requiredType, this.options.nonNullAnnotationName)"]}], "num": 47860}