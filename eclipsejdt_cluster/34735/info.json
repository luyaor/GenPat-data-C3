{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a821ece364b1bb300420329d59042c8", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0105762ee08a8dace85f6855a75918bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "3611ba43251231b282038ef4bf220a3e430ba411", "commitAfterChange": "8ddb795897861fe94c9269feaf63d0b53ecdb996", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  protected boolean triggerRecoveryUponLambdaClosure(Statement statement, boolean shouldCommit)", "signatureAfterChange": "  protected boolean triggerRecoveryUponLambdaClosure(Statement statement, boolean shouldCommit)", "diff": ["-\t\t\tthis.currentElement.add(statement, 0);", "+\t\t\twhile (this.currentElement != null) {", "+\t\t\t\tASTNode tree = this.currentElement.parseTree();", "+\t\t\t\tif (tree.sourceStart < statement.sourceStart) {", "+\t\t\t\t\tthis.currentElement.add(statement, 0);", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t\tthis.currentElement = this.currentElement.parent;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80d0e9cfc4a3398b00b770323378e5a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "c44d89fd5379544a6ddb472a22f014ab5bce19e8", "commitAfterChange": "a7e924b1651a1b9026ccc6590ce8e03365836a1b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " private void buildMoreGenericsCompletionContext(ASTNode node)", "signatureAfterChange": " private void buildMoreGenericsCompletionContext(ASTNode node)", "diff": ["-\t\t\t\t\t\tcurrentElement = currentElement.add((TypeReference)node, 0);", "-\t\t\t\t\t\tbreak nextElement;", "+\t\t\t\t\t\tif(topKnownElementInfo(COMPLETION_OR_ASSIST_PARSER, 1) == 0) {", "+\t\t\t\t\t\t\tcurrentElement = currentElement.add((TypeReference)node, 0);", "+\t\t\t\t\t\t\tbreak nextElement;", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a28f35d2862f06a0429360fc7ab64ddf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "837346ba964bb0d4b1f43b6b3500ddc7ecfbb966", "commitAfterChange": "f5a6b32f5440a6dc40e1353ed6c94f89e64c1de3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " private void buildMoreCompletionContext(Expression expression)", "signatureAfterChange": " private void buildMoreCompletionContext(Expression expression)", "diff": ["-\t\t\t\t", "-\t\t\tcurrentElement = currentElement.add(statement, 0);", "+\t\t\t", "+\t\t\tcurrentElement = currentElement.add(statement, 0);", "-\t\t\t\t", "-\t\t\tcurrentElement = currentElement.add(statement, 0);", "+\t\t\t", "+\t\t\tcurrentElement = currentElement.add(statement, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcb3e6714f044729dafec4d770012246", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "817f5b60f1b5283073ee91db13e8dcaec6a51e5d", "commitAfterChange": "19ed6515960d03123d69a9f3f7b64066c1bf212b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public RecoveredElement buildInitialRecoveryState()", "signatureAfterChange": " public RecoveredElement buildInitialRecoveryState()", "diff": ["-\t\t\t\telement = element.add(local, 0);", "+\t\t\t\tif (!local.isArgument()) {", "+\t\t\t\t\telement = element.add(local, 0);", "+\t\t\t\t} else {", "+\t\t\t\t\t// Bug 442868 - For arguments, let the method continue to be the current element.", "+\t\t\t\t\telement.add(local, 0);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffc16d8e503531050da88c5749606fb2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "1be14359d87350a2a854ccd3edd15344e3b9a238", "commitAfterChange": "ac53095d28417c26e7d9cf96a8d771220a927ba5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " private void buildMoreGenericsCompletionContext(ASTNode node)", "signatureAfterChange": " private void buildMoreGenericsCompletionContext(ASTNode node)", "diff": ["-\t\t\t\t\t\tcurrentElement = currentElement.add(ref, 0);", "+\t\t\t\t\t\tif(currentElement instanceof RecoveredType) {", "+\t\t\t\t\t\t\tcurrentElement = currentElement.add(new CompletionOnFieldType(ref, false), 0);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tcurrentElement = currentElement.add(ref, 0);", "+\t\t\t\t\t\t}"]}], "num": 34735}