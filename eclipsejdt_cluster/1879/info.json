{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bd06f7dc7663e5115e457631b6582f78", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47102cd8f30c3f85c287039f490322a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyTests.java", "commitBeforeChange": "0ce8ad5b0d44dc70bab93f6f64c0b898ece7748d", "commitAfterChange": "42f83db749431568a0412462e46b75fee51080ac", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void testOnClassFile() throws JavaModelException", "signatureAfterChange": " public void testOnClassFile() throws JavaModelException", "diff": ["-\tIBufferFactory factory = new BufferFactory();", "-\tIJavaElement customizedCopy = classFile.getWorkingCopy(null, factory);", "+\tWorkingCopyOwner owner = new TestWorkingCopyOwner();", "+\tICompilationUnit customizedCopy = classFile.getWorkingCopy(owner, null);", "-\t\tassertTrue(\"Should be an IOpenable\", customizedCopy instanceof ICompilationUnit);", "-\t\tIBuffer buffer = ((ICompilationUnit)customizedCopy).getBuffer();", "+\t\tIBuffer buffer = customizedCopy.getBuffer();", "-\t\tif (customizedCopy instanceof ICompilationUnit) {", "-\t\t\t((ICompilationUnit)customizedCopy).discardWorkingCopy();", "-\t\t}", "+\t\tcustomizedCopy.discardWorkingCopy();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99589a07c2fc7fac259adb044622d2a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyTests.java", "commitBeforeChange": "97b330eb505dfca0980041926ec66a0261a5be5c", "commitAfterChange": "d3580136581144eb64c8a6ff7ec886b58a1ec764", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void testShared1() throws JavaModelException", "signatureAfterChange": " public void testShared1() throws JavaModelException", "diff": ["-\t\tassertTrue(\"Should be an IWorkingCopy\", shared instanceof IWorkingCopy);", "-\t\tassertTrue(\"Original element should have shared working copy\", this.cu.findSharedWorkingCopy(null) == shared);", "+\t\tassertTrue(\"Should be an ICompilationUnit\", shared instanceof ICompilationUnit);", "+\t\tassertTrue(\"Primary element should have shared working copy\", this.cu.findSharedWorkingCopy(null) == shared);", "-\t\tif (shared instanceof IWorkingCopy) {", "-\t\t\t((IWorkingCopy)shared).destroy();", "+\t\tif (shared instanceof ICompilationUnit) {", "+\t\t\t((ICompilationUnit)shared).discardWorkingCopy();", "-\tassertTrue(\"Original element should not have shared working copy\", this.cu.findSharedWorkingCopy(null) == null);", "+\tassertTrue(\"Primary element should not have shared working copy\", this.cu.findSharedWorkingCopy(null) == null);"]}], "num": 1879}