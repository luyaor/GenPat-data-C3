{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bd91b6fad0d071b52d6945de0d578ce1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b68db557d8711f52815fa720fe7523c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a12b1847e48d96ac5e805a907f4cf72bcc8b1f19", "commitAfterChange": "1f22eae4a2779bf8c236df5ff222307e09db45c0", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 67, "signatureBeforeChange": " \tprivate char[][] findMethodParameterNames(MethodBinding method, char[][] parameterTypeNames)", "signatureAfterChange": " \tprivate char[][] findMethodParameterNames(MethodBinding method, char[][] parameterTypeNames)", "diff": ["-\t\tReferenceBinding bindingType = method.declaringClass;", "+\t\tTypeBinding erasure =  method.declaringClass.erasure();", "+\t\tif(!(erasure instanceof ReferenceBinding)) return null;", "-\t\tif (bindingType instanceof SourceTypeBinding){", "-\t\t\tSourceTypeBinding sourceType = (SourceTypeBinding) bindingType;", "+\t\tif (erasure instanceof SourceTypeBinding){", "+\t\t\tSourceTypeBinding sourceType = (SourceTypeBinding) erasure;", "+\t\t\t", "+\t\t\tReferenceBinding bindingType = (ReferenceBinding)erasure;", "+\t\t\t", "-\t\t\t\tSourceMethod[] sourceMethods = ((SourceTypeElementInfo) sourceType).getMethodHandles();", "-\t\t\t\tint len = sourceMethods.length;", "-\t\t\t\tfor(int i = 0; i < len ; i++){", "-\t\t\t\t\tSourceMethod sourceMethod = sourceMethods[i];", "-\t\t\t\t\tString[] argTypeSignatures = sourceMethod.getParameterTypes();", "-", "-\t\t\t\t\tif(argTypeSignatures != null &&", "-\t\t\t\t\t\tCharOperation.equals(method.selector,sourceMethod.getElementName().toCharArray()) &&", "-\t\t\t\t\t\tequalSignatures(parameterTypeNames, argTypeSignatures)){", "+\t\t\t\tIType typeHandle = ((SourceTypeElementInfo) sourceType).getHandle();", "+\t\t\t\t", "+\t\t\t\tString[] parameterTypeSignatures = new String[length];", "+\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\tparameterTypeSignatures[i] = Signature.createTypeSignature(parameterTypeNames[i], false);", "+\t\t\t\t}", "+\t\t\t\tIMethod searchedMethod = typeHandle.getMethod(String.valueOf(method.selector), parameterTypeSignatures);", "+\t\t\t\tIMethod[] foundMethods = typeHandle.findMethods(searchedMethod);", "+\t\t\t\t", "+\t\t\t\tif(foundMethods != null) {", "+\t\t\t\t\tint len = foundMethods.length;", "+\t\t\t\t\tif(len == 1) {", "+\t\t\t\t\t\t\tSourceMethod sourceMethod = (SourceMethod) foundMethods[0];", "-\t\t\t\t\t\t\tbreak;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6abb6c66ae8f056273dac62c6e28054", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "96af5a429e71ca25b6d63f12d9c3ddf8a8050b76", "commitAfterChange": "86fe5df1661ea451ff0236e707546d6bd1e84ff3", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tprivate char[][] findMethodParameterNames(MethodBinding method, char[][] parameterTypeNames)", "signatureAfterChange": " \tprivate char[][] findMethodParameterNames(MethodBinding method, char[][] parameterTypeNames)", "diff": ["-\t\t\tNameEnvironmentAnswer answer = nameEnvironment.findType(bindingType.compoundName);", "+\t\t\tchar[] compoundName = CharOperation.concatWith(bindingType.compoundName, '.');", "+\t\t\tObject type = typeCache.get(compoundName);", "+\t\t\t", "+\t\t\tISourceType sourceType = null;", "+\t\t\tif(type != null) {", "+\t\t\t\tif(type instanceof ISourceType) {", "+\t\t\t\t\tsourceType = (ISourceType) type;", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tNameEnvironmentAnswer answer = nameEnvironment.findType(bindingType.compoundName);", "+\t\t\t\tif(answer != null && answer.isSourceType()) {", "+\t\t\t\t\tsourceType = answer.getSourceTypes()[0];", "+\t\t\t\t\ttypeCache.put(compoundName, sourceType);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\t", "+\t\t\tif(sourceType != null) {", "+\t\t\t\tISourceMethod[] sourceMethods = sourceType.getMethods();", "+\t\t\t\tint len = sourceMethods == null ? 0 : sourceMethods.length;", "+\t\t\t\tfor(int i = 0; i < len ; i++){", "+\t\t\t\t\tISourceMethod sourceMethod = sourceMethods[i];", "+\t\t\t\t\tchar[][] argTypeNames = sourceMethod.getArgumentTypeNames();", "-\t\t\tif(answer != null){", "-\t\t\t\tif(answer.isSourceType()) {", "-\t\t\t\t\tISourceType sourceType = answer.getSourceTypes()[0];", "-\t\t\t\t\tISourceMethod[] sourceMethods = sourceType.getMethods();", "-\t\t\t\t\tint len = sourceMethods == null ? 0 : sourceMethods.length;", "-\t\t\t\t\tfor(int i = 0; i < len ; i++){", "-\t\t\t\t\t\tISourceMethod sourceMethod = sourceMethods[i];", "-\t\t\t\t\t\tchar[][] argTypeNames = sourceMethod.getArgumentTypeNames();", "-", "-\t\t\t\t\t\tif(argTypeNames != null &&", "-\t\t\t\t\t\t\tCharOperation.equals(method.selector,sourceMethod.getSelector()) &&", "-\t\t\t\t\t\t\tCharOperation.equals(argTypeNames,parameterTypeNames)){", "-\t\t\t\t\t\t\tparameterNames = sourceMethod.getArgumentNames();", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t}", "+\t\t\t\t\tif(argTypeNames != null &&", "+\t\t\t\t\t\tCharOperation.equals(method.selector,sourceMethod.getSelector()) &&", "+\t\t\t\t\t\tCharOperation.equals(argTypeNames,parameterTypeNames)){", "+\t\t\t\t\t\tparameterNames = sourceMethod.getArgumentNames();", "+\t\t\t\t\t\tbreak;", "-\t\t\t\t} ", "+\t\t\t\t}"]}], "num": 49876}