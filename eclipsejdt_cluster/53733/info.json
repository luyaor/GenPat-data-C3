{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a3433b363191db5ff8b6549211196463", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "272d0e482c591638606e8b57ee1699b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "3bee3efb3c3139a52dff7aa299065deb5290ece4", "commitAfterChange": "645825dd1e7c490f7b149a754d38a08b99765996", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprotected boolean parseReference() throws InvalidInputException", "signatureAfterChange": " \tprotected boolean parseReference() throws InvalidInputException", "diff": ["-\t\t\t\tint token = readToken();", "+\t\t\t\tint token = readTokenSafely();", "-\t\t\t\t\tcase TerminalTokens.TokenNameStringLiteral : // @see \"string\"", "+\t\t\t\tcase TerminalTokens.TokenNameStringLiteral : // @see \"string\"", "+\t\t\t\t\t\tif (typeRef != null) break nextToken;", "+\t\t\t\t\t\tif (typeRef != null) break nextToken;", "+\t\t\t\t\t\t\treturn false;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tchar[] currentError = this.scanner.getCurrentIdentifierSource();", "+\t\t\t\t\t\tif (currentError.length>0 && currentError[0] == '\"') {", "+\t\t\t\t\t\t\tif (this.reportProblems) this.sourceParser.problemReporter().javadocInvalidReference(this.scanner.getCurrentTokenStartPosition(), getTokenEndPosition());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3af48786c742ad62918a7841497148dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "1784048e951cac8e5c6590cc5827817757e6384e", "commitAfterChange": "4a48abb3b4027036bdeac61104059b6c83710144", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate Expression parseMember(TypeReference receiver) throws InvalidInputException", "signatureAfterChange": " \tprivate Expression parseMember(TypeReference receiver) throws InvalidInputException", "diff": ["-\t\tif (readTokenAndConsume() == TerminalTokens.TokenNameIdentifier) {", "+\t\tif (readToken() == TerminalTokens.TokenNameIdentifier) {", "+\t\t\tconsumeToken();", "-\t\t\tif (readTokenAndConsume() == TerminalTokens.TokenNameLPAREN) {", "+\t\t\tif (readToken() == TerminalTokens.TokenNameLPAREN) {", "+\t\t\t\tconsumeToken();", "-\t\t\t\t\tend = end < this.lineEnd ? end : (this.lineEnd - 1);", "+\t\t\t\t\tend = end < this.lineEnd ? end : this.lineEnd;", "-\t\tthis.sourceParser.problemReporter().javadocInvalidSeeReference(start, getEndPosition());", "+\t\tint end = getEndPosition() - 1;", "+\t\tend = start > end ? getEndPosition() : end;", "+\t\tthis.sourceParser.problemReporter().javadocInvalidSeeReference(start, end);"]}], "num": 53733}