{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ab8d468acd3a790a85e6b2ed97bcb298", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20fc765c21bc4238c180da44c4a727ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "e659592a32935b3480e8554de2e33b0870ea4573", "commitAfterChange": "bc6b27bd92cc1473386e7ebcfc5790ffed5deaf3", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "  \tprotected void compileAndDeploy(String source, String directoryName, String className)", "signatureAfterChange": "  \tprotected void compileAndDeploy(String source, String directoryName, String className)", "diff": ["+\t\tString processAnnot = this.enableAPT ? \"\" : \"-proc:none\";", "-\t\t\tbuffer.append(\"\\\" -1.6 -proc:none\");", "+\t\t\tbuffer.append(\"\\\" -1.6 \" + processAnnot);", "-\t\t\tbuffer.append(\"\\\" -1.7 -proc:none\");", "+\t\t\tbuffer.append(\"\\\" -1.7 \" + processAnnot);", "-\t\t\tbuffer.append(\"\\\" -1.8 -proc:none\");", "+\t\t\tbuffer.append(\"\\\" -1.8 \" + processAnnot);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee1eecf8ff13f3e37fd6ab4ce83dbc49", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprivate void internalGenerateCode(ClassScope classScope, ClassFile classFile)", "signatureAfterChange": "  \tprivate void internalGenerateCode(ClassScope classScope, ClassFile classFile)", "diff": ["-\t\t\tint argSlotSize = 1; // this==aload0", "-\t\t\t", "+\t\t\tint enumOffset = declaringClass.isEnum() ? 2 : 0; // String name, int ordinal", "+\t\t\tint argSlotSize = 1 + enumOffset; // this==aload0", "+", "-\t\t\t\t\tnestedType.enclosingInstancesSlotSize + 1,", "+\t\t\t\t\tnestedType.enclosingInstancesSlotSize + 1 + enumOffset,", "-\t\t\t\tscope.computeLocalVariablePositions(1,  codeStream);", "+\t\t\t\tscope.computeLocalVariablePositions(1 + enumOffset,  codeStream);"]}], "num": 48879}