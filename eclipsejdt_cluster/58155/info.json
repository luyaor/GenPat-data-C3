{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a8a1ce78d8e63f4726b1eff566f9fa12", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9192ad1ee6fd6933c68e75c23b5426e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "0241b6a034ef8fa4f27f3bd260b936d3f2c0aea7", "commitAfterChange": "99074098c6405e18b1f1a04aabe7c2838c777448", "methodNumberBeforeChange": 978, "methodNumberAfterChange": 978, "signatureBeforeChange": " public void test0955()", "signatureAfterChange": " public void test0955()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 4)\\n\" +", "-\t\t\"\tif (o instanceof List<E>[]) { //incorrect: bug 104695\\n\" +", "-\t\t\"\t    ^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Cannot perform instanceof check against parameterized type List<E>[]. Use instead its raw form List[] since generic type information will be erased at runtime\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. WARNING in X.java (at line 5)\\n\" +", "-\t\t\"\tList<E>[] es= (List<E>[]) o; //unchecked\\n\" +", "-\t\t\"\t              ^^^^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: Unchecked cast from Object to List<E>[]\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\"\tif (o instanceof List<E>[]) { //incorrect: bug 104695\\n\" + ", "+\t\t\"\t    ^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Cannot perform instanceof check against parameterized type List<E>[]. Use the form List<?>[] instead since further generic type information will be erased at runtime\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\"\tList<E>[] es= (List<E>[]) o; //unchecked\\n\" + ", "+\t\t\"\t              ^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: Unchecked cast from Object to List<E>[]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad06a73c45704bc2b9386a489a43d638", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "0241b6a034ef8fa4f27f3bd260b936d3f2c0aea7", "commitAfterChange": "99074098c6405e18b1f1a04aabe7c2838c777448", "methodNumberBeforeChange": 836, "methodNumberAfterChange": 836, "signatureBeforeChange": " public void test0816()", "signatureAfterChange": " public void test0816()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 4)\\n\" +", "-\t\t\"\tif (o instanceof List<E>[][]) { //incorrect too\\n\" +", "-\t\t\"\t    ^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Cannot perform instanceof check against parameterized type List<E>[][]. Use instead its raw form List[][] since generic type information will be erased at runtime\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. WARNING in X.java (at line 5)\\n\" +", "-\t\t\"\tList<E>[][] es = (List<E>[][]) o; \\n\" +", "-\t\t\"\t                 ^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: Unchecked cast from Object[] to List<E>[][]\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\"\tif (o instanceof List<E>[][]) { //incorrect too\\n\" + ", "+\t\t\"\t    ^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Cannot perform instanceof check against parameterized type List<E>[][]. Use the form List<?>[][] instead since further generic type information will be erased at runtime\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\"\tList<E>[][] es = (List<E>[][]) o; \\n\" + ", "+\t\t\"\t                 ^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: Unchecked cast from Object[] to List<E>[][]\\n\" + "]}], "num": 58155}