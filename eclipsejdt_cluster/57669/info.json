{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e8f58d5a64fe21c085322a4d4a999db0", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ffccda9203951bc09c049fe731f481a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/SaveIndex.java", "commitBeforeChange": "45d0f6e8ed19879fad410c4943e0bd7c911e5a35", "commitAfterChange": "46e2f444b56f0e0f57bce5b9fe3d82c6bae00e3b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\t", "-\t\tif (progressMonitor != null && progressMonitor.isCanceled()) return true;", "-\t\t", "-\t\ttry {", "-\t\t\t/* ensure no concurrent write access to index */", "-\t\t\tIIndex index = this.manager.getIndex(this.indexPath, true /*reuse index file*/, false /*don't create if none*/);", "-\t\t\tif (index == null) return true;", "-\t\t\tReadWriteMonitor monitor = this.manager.getMonitorFor(index);", "-\t\t\tif (monitor == null) return true; // index got deleted since acquired", "-\t\t\ttry {", "-\t\t\t\tmonitor.enterWrite(); // ask permission to write", "-\t\t\t\tthis.manager.saveIndex(index);", "-\t\t\t} finally {", "-\t\t\t\tmonitor.exitWrite(); // free write lock", "-\t\t\t}", "+\t\tif (progressMonitor != null && progressMonitor.isCanceled()) return true;", "+", "+\t\t/* ensure no concurrent write access to index */", "+\t\tIIndex index = this.manager.getIndex(this.indexPath, true /*reuse index file*/, false /*don't create if none*/);", "+\t\tif (index == null) return true;", "+\t\tReadWriteMonitor monitor = this.manager.getMonitorFor(index);", "+\t\tif (monitor == null) return true; // index got deleted since acquired", "+", "+\t\ttry {", "+\t\t\tmonitor.enterWrite(); // ask permission to write", "+\t\t\tthis.manager.saveIndex(index);", "+\t\t} finally {", "+\t\t\tmonitor.exitWrite(); // free write lock"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26c2b47e25bf7bc58f709b201bb4e7bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexAllProject.java", "commitBeforeChange": "2b658a2e19b9466b65c78bf38bae4989bbb6fce3", "commitAfterChange": "52ad2d5b0def2732a36b65b6310c1844772d18ed", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\t\t\tif ((entry.getEntryKind() == IClasspathEntry.CPE_SOURCE)) ", "+\t\t\t\tif (entry.getEntryKind() == IClasspathEntry.CPE_SOURCE)", "-\t\t\t\t// nothing to index but want to save empty index file", "-// TODO (kent) how should empty projects be saved? if no rebuild job is issued then we would be ok", "-//\t\t\t\tIndex index = this.manager.getIndexForUpdate(this.containerPath, true, /*reuse index file*/ true /*create if none*/);", "-//\t\t\t\tif (index != null)", "-//\t\t\t\t\tthis.manager.saveIndex(index);", "-\t\t\t\t// also the project might be a library folder (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=89815)", "+\t\t\t\tIPath projectPath = javaProject.getPath();", "+\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\tIClasspathEntry entry = entries[i];", "+\t\t\t\t\tif (entry.getEntryKind() == IClasspathEntry.CPE_LIBRARY && entry.getPath().equals(projectPath))", "+\t\t\t\t\t\treturn true; // the project is also a library folder (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=89815)", "+\t\t\t\t}", "+", "+\t\t\t\t// nothing to index but want to save an empty index file so its not 'rebuilt' when part of a search request", "+\t\t\t\tIndex index = this.manager.getIndexForUpdate(this.containerPath, true, /*reuse index file*/ true /*create if none*/);", "+\t\t\t\tif (index != null)", "+\t\t\t\t\tthis.manager.saveIndex(index);"]}], "num": 57669}