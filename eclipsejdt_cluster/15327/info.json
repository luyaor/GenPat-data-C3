{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "30e7d427558634bdf8ed47c7a2a987a6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ef389428b47744506b5f987b39cc73b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "93ae272625cf7aea539e03a762b5190105386996", "commitAfterChange": "c6f78f890c1ca00b0157b632da091fae2c781833", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tScribe(CodeFormatterVisitor formatter, Map settings, int offset, int length, CodeSnippetParsingUtil codeSnippetParsingUtil)", "signatureAfterChange": "  \tScribe(CodeFormatterVisitor formatter, Map settings, int offset, int length, CodeSnippetParsingUtil codeSnippetParsingUtil)", "diff": ["-\t\tthis.tabSize = formatter.preferences.tab_size;", "-\t\tthis.useTab = formatter.preferences.use_tab;", "-\t\tthis.fillingSpace = formatter.preferences.filling_space;", "-\t\tsetLineSeparatorAndIdentationLevel(formatter.preferences);", "+\t\tthis.tabLength = formatter.preferences.tab_size;", "+\t\tthis.indentationLevel= 0; // initialize properly", "+\t\tthis.tabChar = formatter.preferences.tab_char;", "+\t\tif (this.tabChar == DefaultCodeFormatterOptions.MIXED) {", "+\t\t\tthis.indentationSize = formatter.preferences.indentation_size;", "+\t\t} else {", "+\t\t\tthis.indentationSize = this.tabLength;", "+\t\t}", "+\t\tthis.lineSeparator = formatter.preferences.line_separator;", "+\t\tthis.indentationLevel = formatter.preferences.initial_indentation_level * this.indentationSize;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "988503ed1acd8410a2c963813a651ccb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "c36806bf795aa69e23f027117b2ebc1cb99bee93", "commitAfterChange": "d627da8238aec48018bdf0d2b4bff905a4883256", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tprotected boolean parseReference(boolean plain) throws InvalidInputException", "signatureAfterChange": " \tprotected boolean parseReference(boolean plain) throws InvalidInputException", "diff": ["+\t\t\tthis.index = this.tokenPreviousPosition;", "+\t\t\tthis.scanner.currentPosition = this.tokenPreviousPosition;", "+\t\t\tthis.currentTokenType = -1;", "-\t\t\t\t\tthis.index = previousPosition;", "-\t\t\t\t\tthis.scanner.currentPosition = previousPosition;", "+\t\t\t\t\tthis.index = this.tokenPreviousPosition;", "+\t\t\t\t\tthis.scanner.currentPosition = this.tokenPreviousPosition;", "+\t\t// Reset position to avoid missing tokens when new line was encountered", "+\t\tthis.index = this.tokenPreviousPosition;", "+\t\tthis.scanner.currentPosition = this.tokenPreviousPosition;", "+\t\tthis.currentTokenType = -1;"]}], "num": 15327}