{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9d6a2f0e028f1a4ac0970f1a9c86287a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bd9e99138bf28e8c4a8b2ce03fdf8ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Annotation.java", "commitBeforeChange": "75fd26922e4c1a3951587500ef0d4c4aec9b93ba", "commitAfterChange": "ec933200149b0beb2aa7f1482e62f6a573c5bd61", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tpublic void recordSuppressWarnings(Scope scope, int startSuppresss, int endSuppress, boolean isSuppressingWarnings)", "signatureAfterChange": " \t \tpublic void recordSuppressWarnings(Scope scope, int startSuppresss, int endSuppress, boolean isSuppressingWarnings)", "diff": ["-\t\t\t\t\t\t\t\t\tsuppressWarningIrritants |= irritant;", "-\t\t\t\t\t\t\t\t\tif (~suppressWarningIrritants == 0) break pairLoop;", "+\t\t\t\t\t\t\t\t\tif ((suppressWarningIrritants & irritant) == irritant) {", "+\t\t\t\t\t\t\t\t\t\tscope.problemReporter().unusedWarningToken(inits[j]);", "+\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\tsuppressWarningIrritants |= irritant;", "+\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tif (~suppressWarningIrritants == 0) break pairLoop;", "-\t\t\tscope.referenceCompilationUnit().compilationResult.recordSuppressWarnings(suppressWarningIrritants, startSuppresss, endSuppress);", "+\t\t\tscope.referenceCompilationUnit().recordSuppressWarnings(suppressWarningIrritants, this, startSuppresss, endSuppress);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80f38c5ffa8aa89a742d3560e70190d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "765d0dc527cdebebfba880e646b8b6f178e9a8a9", "commitAfterChange": "a65c651462db146ef30e8371112ec82793b3e4f6", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprivate void computeRootPath(IContainer container, HashSet firstLevelPackageNames, boolean hasDefaultPackage, Set set, int sourcePathSegmentCount)", "signatureAfterChange": "  \tprivate void computeRootPath(IContainer container, HashSet firstLevelPackageNames, boolean hasDefaultPackage, Set set, int sourcePathSegmentCount)", "diff": ["-\t\t\tboolean hasSubDirectories = false;", "-\t\t\tloop: for (int i = 0, max = resources.length; i < max; i++) {", "+\t\t\tfor (int i = 0, max = resources.length; i < max; i++) {", "-\t\t\t\t\thasSubDirectories = true;", "-\t\t\t\t\t\tset.add(rootPathEntry);", "-\t\t\t\t\t\tbreak loop;", "+\t\t\t\t\t\tif (rootPathEntry.segmentCount() >= 1) {", "+\t\t\t\t\t\t\tset.add(rootPathEntry);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tcomputeRootPath((IFolder) resource, firstLevelPackageNames, hasDefaultPackage, set, sourcePathSegmentCount);", "-\t\t\t\tif (i == max - 1 && !hasSubDirectories && hasDefaultPackage) {", "+\t\t\t\tif (i == max - 1 && hasDefaultPackage) {"]}], "num": 53646}