{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "97dfc3c2af5b789c6e02491575917f29", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7396507909dfedbcb090a8b1e77e77dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "  ReferenceBinding getTypeFromCompoundName(char[][] compoundName, boolean isParameterized)", "signatureAfterChange": " private ReferenceBinding getTypeFromCompoundName(char[][] compoundName, boolean isParameterized, boolean wasMissingType)", "diff": ["-", "-ReferenceBinding getTypeFromCompoundName(char[][] compoundName, boolean isParameterized) {", "+private ReferenceBinding getTypeFromCompoundName(char[][] compoundName, boolean isParameterized, boolean wasMissingType) {", "-\t\tPackageBinding packageBinding = computePackageFrom(compoundName);", "+\t\tPackageBinding packageBinding = computePackageFrom(compoundName, false /* valid pkg */);", "+\t\tif (wasMissingType) {", "+\t\t\tbinding.tagBits |= TagBits.HasMissingType; // record it was bound to a missing type", "+\t\t}", "+\t\t// report the missing class file first", "+\t\tproblemReporter.isClassPathCorrect(compoundName, this.unitBeingCompleted, this.missingClassFileLocation);\t\t", "-\t\tbinding = cacheMissingBinaryType(compoundName, this.unitBeingCompleted);", "+\t\tbinding = createMissingType(null, compoundName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b56d403675af89636fcad0362f76ebdf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "75e2dec6c40beb99004df5e9b441c0ff490527b5", "commitAfterChange": "6072925ab1af00c7091afbac8257e69ef61e2818", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tprivate boolean detectHierarchyCycle(SourceTypeBinding sourceType, ReferenceBinding superType, TypeReference reference)", "signatureAfterChange": " \tprivate boolean detectHierarchyCycle(SourceTypeBinding sourceType, ReferenceBinding superType, TypeReference reference)", "diff": ["+\t\t\tif ((superType.tagBits & TagBits.HierarchyHasProblems) != 0) {", "+\t\t\t\tsourceType.tagBits |= TagBits.HierarchyHasProblems;", "+\t\t\t\tproblemReporter().hierarchyHasProblems(sourceType);", "+\t\t\t\treturn true;", "+\t\t\t}"]}], "num": 35610}