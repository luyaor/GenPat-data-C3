{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eb0a889404d1c89231a0862655ab5b0a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "614006159c67c2871abe7c3b923004a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModel.java", "commitBeforeChange": "21cbb8771cc00d8e13a556404fdfae59ecdb14f8", "commitAfterChange": "0899c90ae8de27e397eab6637d91f616ff022416", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected boolean buildStructure(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource)", "signatureAfterChange": " protected boolean buildStructure(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource)", "diff": ["-\tfor (int i = 0, max = projects.length; i < max; i++) {", "+\tint length = projects.length;", "+\tIJavaElement[] children = new IJavaElement[length];", "+\tint index = 0;", "+\tfor (int i = 0; i < length; i++) {", "-\t\t\tinfo.addChild(getJavaProject(project));", "+\t\t\tchildren[index++] = getJavaProject(project);", "+\tif (index < length)", "+\t\tSystem.arraycopy(children, 0, children = new IJavaElement[index], 0, index);", "+\tinfo.setChildren(children);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fddecff98fbfacb30c9546a753fe3cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SearchParticipantTests.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t\tpublic void locateMatches(SearchDocument[] documents, SearchPattern pattern, IJavaSearchScope scope, SearchRequestor requestor, IProgressMonitor monitor) throws CoreException", "signatureAfterChange": "  \t\tpublic void locateMatches(SearchDocument[] documents, SearchPattern pattern, IJavaSearchScope scope, SearchRequestor requestor, IProgressMonitor monitor) throws CoreException", "diff": ["+\t\t\tint length = documents.length;", "+\t\t\tSearchDocument[] wrapperDocuments = new SearchDocument[length];", "+\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\twrapperDocuments[i] = new WrapperDocument(documents[i], this);", "+\t\t\t}", "+\t\t\tthis.defaultSearchParticipant.locateMatches(wrapperDocuments, pattern, scope, requestor, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9e50baa96954361c7a4319d55a529a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "2ae41539e386d12d9e7c121e231730e370deda2f", "commitAfterChange": "05dd526dbb279df7b7e23a1d7ccb53d445943919", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r public static IJavaSearchScope createJavaSearchScope(IResource[] resources)", "signatureAfterChange": "\r public static IJavaSearchScope createJavaSearchScope(IResource[] resources)", "diff": ["+\tJavaCore javaCore = JavaCore.getJavaCore();\r", "+\tint length = resources.length;\r", "+\tIJavaElement[] elements = new IJavaElement[length];\r", "+\tfor (int i = 0; i < length; i++) {\r", "+\t\telements[i] = javaCore.create(resources[i]);\r", "+\t}\r", "+\treturn createJavaSearchScope(elements);\r", "+}\r", "-\tfor (int i = 0, length = resources.length; i < length; i++) {\r", "-\t\tscope.add(resources[i]);\r"]}], "num": 57605}