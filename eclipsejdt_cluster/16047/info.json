{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2d1d54407b6e2fd4af889111465f4cb1", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18807dc0aa82cf539d75a7aa73155205", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 127, "methodNumberAfterChange": 128, "signatureBeforeChange": " \tpublic boolean visit(TryStatement tryStatement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(TryStatement tryStatement, BlockScope scope)", "diff": ["+\t\tformatTryResources(", "+\t\t\t\ttryStatement, ", "+\t\t\t\tthis.preferences.insert_space_before_opening_paren_in_try, ", "+\t\t\t\tthis.preferences.insert_space_before_closing_paren_in_try,", "+\t\t\t\tthis.preferences.insert_space_after_opening_paren_in_try,", "+\t\t\t\tthis.preferences.insert_space_before_semicolon_in_try_resources,", "+\t\t\t\tthis.preferences.insert_space_after_semicolon_in_try_resources,", "+\t\t\t\tthis.preferences.alignment_for_resources_in_try);", "-", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "403f32e7712693d3ae609e561e19791d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " \tpublic boolean visit( \t\tArrayAllocationExpression arrayAllocationExpression, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tArrayAllocationExpression arrayAllocationExpression, \t\tBlockScope scope)", "diff": ["-\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLBRACKET);", "+\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLBRACKET, this.preferences.insert_space_before_opening_bracket_in_array_allocation_expression);", "+\t\t\t\t\tif (this.preferences.insert_space_after_opening_bracket_in_array_allocation_expression) {", "+\t\t\t\t\t\tthis.scribe.space();", "+\t\t\t\t\t}", "+\t\t\t\t} else if (this.preferences.insert_space_between_empty_brackets_in_array_allocation_expression) {", "+\t\t\t\t\tthis.scribe.space();", "-\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET);", "+\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET, this.preferences.insert_space_before_closing_bracket_in_array_allocation_expression);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bba0e2d6ff1a23c80e5c2bab4191d4dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor2.java", "commitBeforeChange": "74d059b3fbdc00070c70bee76509a44ccad7fb4d", "commitAfterChange": "31d2b0bac7c9b032f1ad8765fd4577eaff8d79fd", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprivate void formatAction(final int line, final Statement action)", "signatureAfterChange": "  \tprivate void formatAction(final int line, final Statement action, boolean insertLineForSingleStatement)", "diff": ["-\tprivate void formatAction(final int line, final Statement action) {", "+\tprivate void formatAction(final int line, final Statement action, boolean insertLineForSingleStatement) {", "+\t\t\t\t\tthis.scribe.indent();", "+\t\t\t\t\tthis.scribe.unIndent();", "-\t\t\t\t\tthis.scribe.unIndent();\t\t\t", "+\t\t\t\t\tthis.scribe.unIndent();", "+\t\t\t\t\tif (insertLineForSingleStatement) {", "+\t\t\t\t\t\tthis.scribe.printNewLine();", "+\t\t\t\t\t}", "+\t\t\t// empty statement", "+\t\t\tthis.scribe.indent();", "+\t\t\tthis.scribe.unIndent();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca88cc352cdf0c3448636b847fe257f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/UnresolvedReferenceNameFinder.java", "commitBeforeChange": "1fe69d52230e67687b32b072c6843ac0b930c0b8", "commitAfterChange": "6b2eaccbd1d9579997548e9877abcafa55f36650", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t \tprivate void acceptName(char[] name)", "signatureAfterChange": "  \t \tprivate void acceptName(char[] name)", "diff": ["+\t\t\t\t\t\t", "+\t\tif (!CharOperation.prefixEquals(this.completionEngine.completionToken, name, false /* ignore case */)", "+\t\t\t\t&& !(this.completionEngine.options.camelCaseMatch && CharOperation.camelCaseMatch(this.completionEngine.completionToken, name))) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f370262cbbfa8f01d17e95d4907acc28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "5103cbbe93dc06e237ba05a89fd826d834ad4e54", "commitAfterChange": "36f7c1e916ce794f19c8c7bfc5e63afd70aa3df0", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic boolean visit( \t\tImportReference importRef, \t\tCompilationUnitScope scope)", "signatureAfterChange": " \t \tprivate void format(ImportReference importRef, boolean isLast)", "diff": ["+\tprivate void format(ImportReference importRef, boolean isLast) {", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameimport);", "+\t\tthis.preferences.number_of_empty_lines_to_preserve = this.preferences.blank_lines_between_import_groups;", "+\t\tthis.scribe.space();", "+\t\tif (importRef.isStatic()) {", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNamestatic);", "+\t\t\tthis.scribe.space();", "+\t\t}", "+\t\tif (importRef.onDemand) {", "+\t\t\tthis.scribe.printQualifiedReference(importRef.sourceEnd);", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameDOT);", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameMULTIPLY);\t\t\t", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "+\t\t} else {", "+\t\t\tthis.scribe.printQualifiedReference(importRef.sourceEnd);", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "+\t\t}", "+\t\tif (isLast) {", "+\t\t\tthis.scribe.printTrailingComment();", "+\t\t} else {", "+\t\t\tthis.scribe.printTrailingComment(this.preferences.blank_lines_between_import_groups);", "+\t\t}", "+\t\tthis.scribe.printNewLine();\t\t\t", "+\t}", "-\t */", "-\tpublic boolean visit(", "-\t\tImportReference importRef,", "-\t\tCompilationUnitScope scope) {", "-\t\t", "-\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameimport);", "-\t\tthis.scribe.space();", "-\t\tif (importRef.isStatic()) {", "-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNamestatic);", "-\t\t\tthis.scribe.space();", "-\t\t}", "-\t\tif (importRef.onDemand) {", "-\t\t\tthis.scribe.printQualifiedReference(importRef.sourceEnd);", "-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameDOT);", "-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameMULTIPLY);\t\t\t", "-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "-\t\t} else {", "-\t\t\tthis.scribe.printQualifiedReference(importRef.sourceEnd);", "-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "-\t\t}", "-\t\tthis.scribe.printTrailingComment();", "-\t\tthis.scribe.printNewLine();"]}], "num": 16047}