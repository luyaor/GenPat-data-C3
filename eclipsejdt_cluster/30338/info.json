{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f39f82cc396c47e76218f9b5ebb92570", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f21b4450f3d149fd8795181d95a651f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 971, "methodNumberAfterChange": 972, "signatureBeforeChange": " public void test0947()", "signatureAfterChange": " public void test0947()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "-\t\t\"X.java\", //================================", "-\t\t\"import java.util.*;\\n\" +", "+\tString xSource =", "-\t\t\"}\\n\",", "-\t\t},", "-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 4)\\n\" +", "-\t\t\"\tBox<Runnable> bx = box(b.element);\\n\" +", "-\t\t\"\t                   ^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Type mismatch: cannot convert from Box<capture#1-of ?> to Box<Runnable>\\n\" +", "-\t\t\"----------\\n\",", "-\t\tJavacTestOptions.EclipseHasABug.EclipseBug236236);", "+\t\t\"}\\n\";", "+\tif (this.complianceLevel < ClassFileConstants.JDK1_8) {", "+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\txSource,", "+\t\t\t},", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in X.java (at line 3)\\n\" +", "+\t\t\t\"\tBox<Runnable> bx = box(b.element);\\n\" +", "+\t\t\t\"\t                   ^^^^^^^^^^^^^^\\n\" +", "+\t\t\t\"Type mismatch: cannot convert from Box<capture#1-of ?> to Box<Runnable>\\n\" +", "+\t\t\t\"----------\\n\",", "+\t\t\tJavacTestOptions.EclipseHasABug.EclipseBug236236);", "+\t} else {", "+\t\trunConformTest(new String[]{ \"X.java\", xSource });", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b42ab9f5a780c3bc11ec4e216963acc4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 1289, "methodNumberAfterChange": 1290, "signatureBeforeChange": " public void test1255()", "signatureAfterChange": " public void test1255()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "+\tString xSource =", "+\t\t\t\t\"        @SuppressWarnings(\\\"rawtypes\\\")\\n\" +", "-\t\t\t\t\"}\\n\", // =================", "-\t\t},", "-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 7)\\n\" +", "-\t\t\"\tstatic XList<Sub<?>> LIST = asList(ARRAY); \\n\" +", "-\t\t\"\t                            ^^^^^^^^^^^^^\\n\" +", "-\t\t\"Type mismatch: cannot convert from XList<X.Foo.Sub<capture#1-of ?>> to XList<X.Foo.Sub<?>>\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. WARNING in X.java (at line 9)\\n\" +", "-\t\t\"\tstatic Sub<?> ARRAY = new Sub() { };\\n\" +", "-\t\t\"\t                          ^^^\\n\" +", "-\t\t\"X.Foo.Sub is a raw type. References to generic type X.Foo<T>.Sub<T> should be parameterized\\n\" +", "-\t\t\"----------\\n\");", "+\t\t\t\t\"}\\n\";", "+\tif (this.complianceLevel < ClassFileConstants.JDK1_8) {", "+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\txSource,", "+\t\t\t},", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in X.java (at line 7)\\n\" +", "+\t\t\t\"\tstatic XList<Sub<?>> LIST = asList(ARRAY); \\n\" +", "+\t\t\t\"\t                            ^^^^^^^^^^^^^\\n\" +", "+\t\t\t\"Type mismatch: cannot convert from XList<X.Foo.Sub<capture#1-of ?>> to XList<X.Foo.Sub<?>>\\n\" +", "+\t\t\t\"----------\\n\");", "+\t} else {", "+\t\trunConformTest(new String[]{ \"X.java\", xSource });", "+\t}"]}], "num": 30338}