{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "223eea22e89dbb777a09257947d7b3aa", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2023402432b7671fac15bbc229c5da04", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocFieldReference.java", "commitBeforeChange": "46bb2fc11bd9440d4fff5ca5f3078f9c39a1d152", "commitAfterChange": "cc1ae7d3e1f618e7e804996cc901b77df44b4213", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\t} else if (scope.kind == Scope.CLASS_SCOPE) {", "-\t\t\tthis.receiverType = this.receiver.resolveType((ClassScope) scope);", "-\t\t\tthis.receiverType = this.receiver.resolveType((BlockScope)scope);", "+\t\t\tswitch (scope.kind) {", "+\t\t\t\tcase Scope.COMPILATION_UNIT_SCOPE:", "+\t\t\t\t\tthis.receiverType = this.receiver.resolveType((CompilationUnitScope) scope);", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Scope.CLASS_SCOPE:", "+\t\t\t\t\tthis.receiverType = this.receiver.resolveType((ClassScope) scope);", "+\t\t\t\t\tbreak;", "+\t\t\t\tdefault:", "+\t\t\t\t\tthis.receiverType = this.receiver.resolveType((BlockScope)scope);", "+\t\t\t\t\tbreak;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "523afecc21fb19070d3ee2b2a6fc8b6e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocFieldReference.java", "commitBeforeChange": "16d54acda4e0b7a146a54bf4587ffd8f08316b0a", "commitAfterChange": "adb31abd7b76aacf34a5241ce11f6a5ccfcea015", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["+\t\t} else if (scope.kind == Scope.CLASS_SCOPE) {", "+\t\t\tthis.receiverType = this.receiver.resolveType((ClassScope) scope);", "-\t\t\tswitch (scope.kind) {", "-\t\t\t\tcase Scope.COMPILATION_UNIT_SCOPE:", "-\t\t\t\t\tthis.receiverType = this.receiver.resolveType((CompilationUnitScope) scope);", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase Scope.CLASS_SCOPE:", "-\t\t\t\t\tthis.receiverType = this.receiver.resolveType((ClassScope) scope);", "-\t\t\t\t\tbreak;", "-\t\t\t\tdefault:", "-\t\t\t\t\tthis.receiverType = this.receiver.resolveType((BlockScope)scope);", "-\t\t\t\t\tbreak;", "-\t\t\t}", "+\t\t\tthis.receiverType = this.receiver.resolveType((BlockScope)scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "850c5aa1803fc1ef8fd11f2339248e50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocMessageSend.java", "commitBeforeChange": "16d54acda4e0b7a146a54bf4587ffd8f08316b0a", "commitAfterChange": "adb31abd7b76aacf34a5241ce11f6a5ccfcea015", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["+\t\t} else if (scope.kind == Scope.CLASS_SCOPE) {", "+\t\t\tthis.actualReceiverType = this.receiver.resolveType((ClassScope) scope);", "-\t\t\tswitch (scope.kind) {", "-\t\t\t\tcase Scope.COMPILATION_UNIT_SCOPE:", "-\t\t\t\t\tthis.actualReceiverType = this.receiver.resolveType((CompilationUnitScope) scope);", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase Scope.CLASS_SCOPE:", "-\t\t\t\t\tthis.actualReceiverType = this.receiver.resolveType((ClassScope) scope);", "-\t\t\t\t\tbreak;", "-\t\t\t\tdefault:", "-\t\t\t\t\tthis.actualReceiverType = this.receiver.resolveType((BlockScope) scope);", "-\t\t\t\t\tbreak;", "-\t\t\t}", "+\t\t\tthis.actualReceiverType = this.receiver.resolveType((BlockScope) scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1956877fc7d4d044c1a13a8d8a86f08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocAllocationExpression.java", "commitBeforeChange": "16d54acda4e0b7a146a54bf4587ffd8f08316b0a", "commitAfterChange": "adb31abd7b76aacf34a5241ce11f6a5ccfcea015", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": "  \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["+\t\t} else if (scope.kind == Scope.CLASS_SCOPE) {", "+\t\t\tthis.resolvedType = this.type.resolveType((ClassScope)scope);", "-\t\t\tswitch (scope.kind) {", "-\t\t\t\tcase Scope.COMPILATION_UNIT_SCOPE:", "-\t\t\t\t\tthis.resolvedType = this.type.resolveType((CompilationUnitScope)scope);", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase Scope.CLASS_SCOPE:", "-\t\t\t\t\tthis.resolvedType = this.type.resolveType((ClassScope)scope);", "-\t\t\t\t\tbreak;", "-\t\t\t\tdefault:", "-\t\t\t\t\tthis.resolvedType = this.type.resolveType((BlockScope)scope, true /* check bounds*/);", "-\t\t\t\t\tbreak;", "-\t\t\t}", "+\t\t\tthis.resolvedType = this.type.resolveType((BlockScope)scope, true /* check bounds*/);"]}], "num": 22723}