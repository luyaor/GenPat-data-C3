{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a41e9f5f7694fe81e15e52cadcd7c9d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0233da2530c40d64e43ffca3c99e4e59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "aa1c17694b27b504666c5ba8972f5deebf077d85", "commitAfterChange": "26ddee9495db90c29b250e3eed03a94e2269259d", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " \tpublic static IClasspathEntry newLibraryEntry( \t\t\tIPath path, \t\t\tIPath sourceAttachmentPath, \t\t\tIPath sourceAttachmentRootPath, \t\t\tIAccessRule[] accessRules, \t\t\tIClasspathAttribute[] extraAttributes, \t\t\tboolean isExported)", "signatureAfterChange": " \tpublic static IClasspathEntry newLibraryEntry( \t\t\tIPath path, \t\t\tIPath sourceAttachmentPath, \t\t\tIPath sourceAttachmentRootPath, \t\t\tIAccessRule[] accessRules, \t\t\tIClasspathAttribute[] extraAttributes, \t\t\tboolean isExported)", "diff": ["-\t\tif (path == null) Assert.isTrue(false, \"Library path cannot be null\"); //$NON-NLS-1$", "-\t\tif (!path.isAbsolute()) Assert.isTrue(false, \"Path for IClasspathEntry must be absolute: \" + path); //$NON-NLS-1$", "+\t\tif (path == null) throw new ClasspathEntry.AssertionFailedException(\"Library path cannot be null\"); //$NON-NLS-1$", "+\t\tif (!path.isAbsolute()) throw new ClasspathEntry.AssertionFailedException(\"Path for IClasspathEntry must be absolute: \" + path); //$NON-NLS-1$", "-\t\t\t\tAssert.isTrue(false, \"Source attachment path '\" //$NON-NLS-1$", "+\t\t\t\tthrow new ClasspathEntry.AssertionFailedException(\"Source attachment path '\" //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bec5674b4cec06c5319799cfbb92fd8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "f5bc1120f0fcf28d11610e258b1d706aac57c4e4", "commitAfterChange": "bd55e21e5b140501fd9b3488335aff5722719eed", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " \tpublic static IClasspathEntry newLibraryEntry( \t\t\tIPath path, \t\t\tIPath sourceAttachmentPath, \t\t\tIPath sourceAttachmentRootPath, \t\t\tIAccessRule[] accessRules, \t\t\tIClasspathAttribute[] extraAttributes, \t\t\tboolean isExported)", "signatureAfterChange": " \tpublic static IClasspathEntry newLibraryEntry( \t\t\tIPath path, \t\t\tIPath sourceAttachmentPath, \t\t\tIPath sourceAttachmentRootPath, \t\t\tIAccessRule[] accessRules, \t\t\tIClasspathAttribute[] extraAttributes, \t\t\tboolean isExported)", "diff": ["-\t\tif (!path.isAbsolute()) throw new ClasspathEntry.AssertionFailedException(\"Path for IClasspathEntry must be absolute: \" + path); //$NON-NLS-1$", "+\t\tboolean hasDotDot = ClasspathEntry.hasDotDot(path);", "+\t\tif (!hasDotDot && !path.isAbsolute()) throw new ClasspathEntry.AssertionFailedException(\"Path for IClasspathEntry must be absolute: \" + path); //$NON-NLS-1$", "-\t\t\tJavaProject.canonicalizedPath(path),", "+\t\t\thasDotDot ? path : JavaProject.canonicalizedPath(path),"]}], "num": 21729}