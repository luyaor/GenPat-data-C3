{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "66790497d01fbab4002827bfc5a5501f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a3051a8d36b2ac5e86c5d5d8dc0ecac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "e910027d17c5e750d4722e20d5f23e40961c15bd", "commitAfterChange": "9d1d3e91d48e527ecbf533c327d0d9893f86792c", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": "  \tpublic void initialize(SourceTypeBinding aType, ClassFile parentClassFile, boolean createProblemType)", "signatureAfterChange": "  \tpublic void initialize(SourceTypeBinding aType, ClassFile parentClassFile, boolean createProblemType)", "diff": ["-\t\t\tsuperclassNameIndex =", "-\t\t\t\t(aType.superclass == null ? 0 : this.constantPool.literalIndexForType(aType.superclass));", "+\t\t\tif (aType.superclass != null) {", "+\t\t\t\t if ((aType.superclass.tagBits & TagBits.HasMissingType) != 0) {", "+\t\t\t\t\t\tsuperclassNameIndex = this.constantPool.literalIndexForType(ConstantPool.JavaLangObjectConstantPoolName);", "+\t\t\t\t } else {", "+\t\t\t\t\t\tsuperclassNameIndex = this.constantPool.literalIndexForType(aType.superclass);", "+\t\t\t\t }", "+\t\t\t} else {", "+\t\t\t\tsuperclassNameIndex = 0;", "+\t\t\t}", "-\t\tthis.contents[this.contentsOffset++] = (byte) (interfacesCount >> 8);", "-\t\tthis.contents[this.contentsOffset++] = (byte) interfacesCount;", "+\t\tint interfacesCountPosition = this.contentsOffset;", "+\t\tthis.contentsOffset += 2;", "+\t\tint interfaceCounter = 0;", "-\t\t\tint interfaceIndex = this.constantPool.literalIndexForType(superInterfacesBinding[i]);", "+\t\t\tReferenceBinding binding = superInterfacesBinding[i];", "+\t\t\tif ((binding.tagBits & TagBits.HasMissingType) != 0) {", "+\t\t\t\tcontinue;", "+\t\t\t}", "+\t\t\tinterfaceCounter++;", "+\t\t\tint interfaceIndex = this.constantPool.literalIndexForType(binding);", "+\t\tthis.contents[interfacesCountPosition++] = (byte) (interfaceCounter >> 8);", "+\t\tthis.contents[interfacesCountPosition] = (byte) interfaceCounter;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dabd095b05629af6f68fc4569652918c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/base/XMLComparer.java", "commitBeforeChange": "e5afcb0ec821099a058acc796f2348c4c58a2e3e", "commitAfterChange": "1a36ae2092977e6a13134bbe916d1e02aefe6f2e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprivate boolean compareDeclarations(Element actualDecl, Element expectedDecl)", "signatureAfterChange": " \tprivate boolean compareDeclarations(Element actualDecl, Element expectedDecl)", "diff": ["-\t\t\t\t\t+ expectedDecl.getAttribute(SNAME));", "+\t\t\t\t\t+ expectedDecl.getAttribute(SNAME_TAG));", "-\t\t\t\t\t+ actualDecl.getAttribute(SNAME));", "+\t\t\t\t\t+ actualDecl.getAttribute(SNAME_TAG));", "+\t\t", "+\t\t// compare superclasses.  Ignore if reference does not specify a superclass.", "+\t\tif (expectedContents.superclass != null) {", "+\t\t\tif (actualContents.superclass == null) {", "+\t\t\t\tprintProblem(\"No superclass found for element: \" + actualDecl.getAttribute(SNAME_TAG));", "+\t\t\t\tprintDifferences();", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t\tif (!compareSuperclassNodes(actualContents.superclass, expectedContents.superclass)) {", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t}", "+\t\t", "+\t\t// compare interface lists.  Ignore if reference does not specify interfaces.", "+\t\t// TODO: javac fails to provide unresolved interfaces.  Here, we ignore interfaces altogether", "+\t\t// if we're ignoring javac bugs, which means we also ignore the non-error cases.", "+\t\tif (expectedContents.interfaces != null && !_ignoreJavacBugs) {", "+\t\t\tif (actualContents.interfaces == null) {", "+\t\t\t\tprintProblem(\"No interfaces list found for element: \" + actualDecl.getAttribute(SNAME_TAG));", "+\t\t\t\tprintDifferences();", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t\tif (!compareInterfacesNodes(actualContents.interfaces, expectedContents.interfaces)) {", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t}"]}], "num": 24290}