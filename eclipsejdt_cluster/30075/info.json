{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "32c3dd3b70f66874a963241a32e81772", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47d63ad0cf01fb27b7c73f3885502d4f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceTypeHierarchyTests.java", "commitBeforeChange": "f15f3a4daa4f7cbf363475bdb20d4707912f834f", "commitAfterChange": "1e2211eded7d5ae87dfcf507bb00676a5a81d8e9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void testPerfAllTypes() throws CoreException", "signatureAfterChange": "  \tpublic void testPerfAllTypes() throws CoreException", "diff": ["-\t// Do NOT forget that tests must start with \"testPerf\"", "-\t\ttagAsSummary(\"Type Hierarchy all types\", Dimension.CPU_TIME);", "+\t\ttagAsSummary(\"Type Hierarchy>All Types\", Dimension.CPU_TIME, true/*put in fingerprint*/);", "-\t\tstartMeasuring();", "-\t\tITypeHierarchy hierarchy = unit.getType(\"ASTNode\").newTypeHierarchy(null);", "-\t\tIType[] types = hierarchy.getAllClasses();", "-\t\tstopMeasuring();", "+", "+\t\t// warm-up", "+\t\tIType[] types = unit.getType(\"ASTNode\").newTypeHierarchy(null).getAllClasses();", "+\t\tint length = types.length;", "+", "+\t\t// Loop of measures", "+\t\tfor (int i=0; i<MEASURES_COUNT; i++) {", "+\t\t\tstartMeasuring();", "+//\t\t\tfor (int j=0; j<ITERATIONS_COUNT; j++) {", "+\t\t\t\tassertEquals(\"Unexpected classes number in hierarchy!\", length, unit.getType(\"ASTNode\").newTypeHierarchy(null).getAllClasses().length);", "+//\t\t\t}", "+\t\t\tstopMeasuring();", "+\t\t}", "+\t\t", "+\t\t// Commit measures", "-\t\t// store counter", "-\t\tCOUNTERS[0] = types.length;", "+", "+\t\t// Store counter", "+\t\tCOUNTERS[0] = length;"]}], "num": 30075}