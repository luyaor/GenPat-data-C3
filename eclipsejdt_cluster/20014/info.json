{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e7b016357fa0e23ac4de01cbfb5d0986", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5402cffd3a0108c35a90610daf535d6c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "9b921f99315dbbd37e5ce242cb0efa8c0bd12214", "commitAfterChange": "6b16361a0fd854f68a5a4796074fceea4b12f838", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " protected void runJavac( \t\tString[] testFiles, \t\tboolean expectingCompilerErrors, \t\tString expectedCompilerLog, \t\tString expectedOutputString, \t\tString expectedErrorString, \t\tboolean shouldFlushOutputDirectory,  \t\tJavacTestOptions options)", "signatureAfterChange": " protected void runJavac( \t\tString[] testFiles, \t\tboolean expectingCompilerErrors, \t\tString expectedCompilerLog, \t\tString expectedOutputString, \t\tString expectedErrorString, \t\tboolean shouldFlushOutputDirectory,  \t\tJavacTestOptions options, \t\tString[] vmArguments)", "diff": ["-\t\tJavacTestOptions options) {", "+\t\tJavacTestOptions options,", "+\t\tString[] vmArguments) {", "+\t// WORK reorder parameters", "-\t\t\t\t\truntime.execute(javacOutputDirectory, \"\", testFiles[0].substring(0, testFiles[0].length() - 5), stdout, stderr);", "+\t\t\t\t\tString vmOptions = \"\";", "+\t\t\t\t\tif (vmArguments != null) {", "+\t\t\t\t\t\tint l = vmArguments.length;", "+\t\t\t\t\t\tif (l > 0) {", "+\t\t\t\t\t\t\tStringBuffer buffer = new StringBuffer(vmArguments[0]);", "+\t\t\t\t\t\t\tfor (int i = 1; i < l; i++) {", "+\t\t\t\t\t\t\t\tbuffer.append(' ');", "+\t\t\t\t\t\t\t\tbuffer.append(vmArguments[i]);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tvmOptions = buffer.toString();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\truntime.execute(javacOutputDirectory, vmOptions, testFiles[0].substring(0, testFiles[0].length() - 5), stdout, stderr);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6f8a5d713dce6cd329ba45d42955e67", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "5978fb5add266a6b89021d9e3d0424d77fb0f8da", "commitAfterChange": "108542969a1d7f14803221b232d5a5fa98603735", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tprivate void handleCoreException(CoreException e)", "signatureAfterChange": " \tprivate void handleCoreException(CoreException e)", "diff": ["+\t\tIStatus status = e.getStatus();", "+\t\tString message = e.getMessage();", "+\t\tif (status.isMultiStatus()) {", "+\t\t\tMultiStatus multiStatus = (MultiStatus) status;", "+\t\t\tIStatus[] children = multiStatus.getChildren();", "+\t\t\tStringBuffer buffer = new StringBuffer();", "+\t\t\tfor (int i = 0, max = children.length; i < max; i++) {", "+\t\t\t\tIStatus child = children[i];", "+\t\t\t\tif (child != null) {", "+\t\t\t\t\tbuffer.append(child.getMessage());", "+\t\t\t\t\tbuffer.append(System.getProperty(\"line.separator\"));//$NON-NLS-1$", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tmessage = String.valueOf(buffer);", "+\t\t}", "-\t\t\t\"Core exception in testing environment: \" + e.getMessage()); //$NON-NLS-1$", "+\t\t\t\"Core exception in testing environment: \" + message); //$NON-NLS-1$"]}], "num": 20014}