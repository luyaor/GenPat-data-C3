{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f8f098d56e24b39568d7135dd4827fb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53bf8f575480a74d96790d76c222bda9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "77f63ea750ed0364fe2343040edb02da4f79c989", "commitAfterChange": "c7494793aa1ed6a2f75240b5a076591b5a3e9bf6", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  private boolean isWorthBuilding() throws CoreException", "signatureAfterChange": "  private boolean isWorthBuilding() throws CoreException", "diff": ["+\t", "-\tfor (int i = 0, length = markers.length; i < length; i++) {", "-\t\tIMarker marker = markers[i];", "-\t\tif (((Integer)marker.getAttribute(IMarker.SEVERITY)).intValue() == IMarker.SEVERITY_ERROR) {", "-\t\t\tbuildPathHasError = true;", "-\t\t\tbreak;", "+\tIClasspathEntry[] classpath = null;", "+\tif (this.javaProject != null && (classpath = this.javaProject.getRawClasspath()) == JavaProject.INVALID_CLASSPATH) {", "+\t\t// the .classpath file could not be read", "+\t\tbuildPathHasError = true;", "+\t} else {", "+\t\tfor (int i = 0, length = markers.length; i < length; i++) {", "+\t\t\tIMarker marker = markers[i];", "+\t\t\tif (((Integer)marker.getAttribute(IMarker.SEVERITY)).intValue() == IMarker.SEVERITY_ERROR) {", "+\t\t\t\tbuildPathHasError = true;", "+\t\t\t\tbreak;", "+\t\t\t}", "-\t\tnew BatchImageBuilder(this).scrubOutputFolder();", "+\t\t// only if the .classpath file could be read", "+\t\tif (classpath != JavaProject.INVALID_CLASSPATH) {", "+\t\t\tnew BatchImageBuilder(this).scrubOutputFolder();", "+\t\t}", "-\t\t\tnew BatchImageBuilder(this).scrubOutputFolder();", "+\t\t\t// only if the .classpath file could be read", "+\t\t\tif (prereqProject.getRawClasspath() != JavaProject.INVALID_CLASSPATH) {", "+\t\t\t\tnew BatchImageBuilder(this).scrubOutputFolder();", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b327277719ed97bbbb15c5ad25b13318", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "f82e4d05a4f1b95dab4840ba12da04e4c98e8e79", "commitAfterChange": "8cef40b9e9d49dc2a5309d2fd231e8381ea450b1", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "  private boolean isWorthBuilding() throws CoreException", "signatureAfterChange": "  private boolean isWorthBuilding() throws CoreException", "diff": ["+", "-\tIMarker[] markers =", "-\t\tcurrentProject.findMarkers(IJavaModelMarker.BUILDPATH_PROBLEM_MARKER, false, IResource.DEPTH_ONE);", "-\tboolean buildPathHasError = false;", "-\tIClasspathEntry[] classpath = null;", "-\tif (javaProject != null && (classpath = javaProject.getRawClasspath()) == JavaProject.INVALID_CLASSPATH) {", "-\t\t// the .classpath file could not be read", "-\t\tbuildPathHasError = true;", "-\t} else {", "-\t\tfor (int i = 0, l = markers.length; i < l; i++) {", "-\t\t\tIMarker marker = markers[i];", "-\t\t\tif (((Integer)marker.getAttribute(IMarker.SEVERITY)).intValue() == IMarker.SEVERITY_ERROR) {", "-\t\t\t\tbuildPathHasError = true;", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t}", "-\t}", "-\tif (buildPathHasError) {", "+\tIClasspathEntry[] classpath = javaProject.getRawClasspath();", "+\tif (isClasspathBroken(classpath, currentProject)) {", "-\t\t\tif (prereq.getRawClasspath() != JavaProject.INVALID_CLASSPATH)", "+\t\t\tIClasspathEntry[] prereqClasspath = prereq.getRawClasspath();", "+\t\t\tif (prereqClasspath != JavaProject.INVALID_CLASSPATH)", "-\t\t\tmarker.setAttribute(IMarker.MESSAGE, Util.bind(\"build.prereqProjectWasNotBuilt\", p.getName())); //$NON-NLS-1$", "+\t\t\tmarker.setAttribute(IMarker.MESSAGE,", "+\t\t\t\tisClasspathBroken(prereqClasspath, p)", "+\t\t\t\t\t? Util.bind(\"build.prereqProjectHasClasspathProblems\", p.getName())", "+\t\t\t\t\t: Util.bind(\"build.prereqProjectMustBeRebuilt\", p.getName())); //$NON-NLS-1$"]}], "num": 4565}