{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "18f11a642547c89d9f2ed6e229dc8b35", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "738cd4e8467a2849fdd39795f146d886", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "82d58f9af854b98a92f7d694d40ac1e84e13013c", "commitAfterChange": "6d114aac1fbfd4c23041534efbb02c24c883ba25", "methodNumberBeforeChange": 144, "methodNumberAfterChange": 144, "signatureBeforeChange": " public void test139()", "signatureAfterChange": " public void test139()", "diff": ["- this.runNegativeTest(", "-     new String[] {", "-    \t    \"X.java\",", "- \t\t\t\"public enum X {\\n\" + ", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public enum X {\\n\" + ", "-     },", "-\t\"----------\\n\" + ", "-\t\"1. WARNING in X.java (at line 3)\\n\" + ", "-\t\"\tdouble eval(double x, double y) {\\n\" + ", "-\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\"The method eval(double, double) of type new X(){} should be tagged with @Override since it actually overrides a superclass method\\n\" + ", "-\t\"----------\\n\" + ", "-\t\"2. ERROR in X.java (at line 7)\\n\" + ", "-\t\"\tMINUS {\\n\" + ", "-\t\"\t      ^\\n\" + ", "-\t\"The type new X(){} must implement the inherited abstract method X.eval(double, double)\\n\" + ", "-\t\"----------\\n\" + ", "-\t\"3. ERROR in X.java (at line 8)\\n\" + ", "-\t\"\tabstract double eval2(double x, double y);\\n\" + ", "-\t\"\t                ^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\"The abstract method eval2 in type new X(){} can only be defined by an abstract class\\n\" + ", "-\t\"----------\\n\");", "+\t\t},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\"\tdouble eval(double x, double y) {\\n\" + ", "+\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"The method eval(double, double) of type new X(){} should be tagged with @Override since it actually overrides a superclass method\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\"\tMINUS {\\n\" + ", "+\t\t\"\t^^^^^\\n\" + ", "+\t\t\"The enum constant MINUS must define the abstract method eval(double, double)\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\"\tabstract double eval2(double x, double y);\\n\" + ", "+\t\t\"\t                ^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"The abstract method eval2 in type new X(){} can only be defined by an abstract class\\n\" + ", "+\t\t\"----------\\n\"", "+\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bea268db1af50b519875bf2a80ddb2d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "82dc67de142f757f6098e678017a2b32f752c9b7", "commitAfterChange": "5249d37677c0ce4d66ab262efb5c3dd4aa089796", "methodNumberBeforeChange": 143, "methodNumberAfterChange": 143, "signatureBeforeChange": " public void test138()", "signatureAfterChange": " public void test138()", "diff": ["- this.runNegativeTest(", "-     new String[] {", "-    \t    \"X.java\",", "- \t\t\t\"public enum X {\\n\" +", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public enum X {\\n\" +", "-     },", "-\t\"----------\\n\" +", "-\t\"1. WARNING in X.java (at line 3)\\n\" +", "-\t\"\tdouble eval(double x, double y) {\\n\" +", "-\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\"The method eval(double, double) of type new X(){} should be tagged with @Override since it actually overrides a superclass method\\n\" +", "-\t\"----------\\n\" +", "-\t\"2. ERROR in X.java (at line 9)\\n\" +", "-\t\"\tabstract double eval(double x, double y);\\n\" +", "-\t\"\t                ^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\"The abstract method eval in type new X(){} can only be defined by an abstract class\\n\" +", "-\t\"----------\\n\");", "+\t\t },", "+\t\t\"----------\\n\" +", "+\t\t\"1. WARNING in X.java (at line 3)\\n\" +", "+\t\t\"\tdouble eval(double x, double y) {\\n\" +", "+\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "+\t\t\"The method eval(double, double) of type new X(){} should be tagged with @Override since it actually overrides a superclass method\\n\" +", "+\t\t\"----------\\n\" +", "+\t\t\"2. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\"\tMINUS {\\n\" + ", "+\t\t\"\t^^^^^\\n\" + ", "+\t\t\"The enum constant MINUS cannot define abstract methods\\n\" + ", "+\t\t\"----------\\n\"", "+\t);"]}], "num": 19912}