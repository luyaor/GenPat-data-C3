{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "df581edfedb21c1624c964effb61fe6f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2157d94301a5daa592cb059a3f5b67e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "74d2aea83c6e0695d56d884494cbf746e657419c", "commitAfterChange": "7a9c0666eb2e26d6f63c1d37d496287d2df152d0", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public long getAnnotationTagBits()", "signatureAfterChange": " public long getAnnotationTagBits()", "diff": ["-\t\tTypeDeclaration typeDecl = ((SourceTypeBinding)originalMethod.declaringClass).scope.referenceContext;", "-\t\tAbstractMethodDeclaration methodDecl = typeDecl.declarationOf(originalMethod);", "-\t\tif (methodDecl != null)", "-\t\t\tASTNode.resolveAnnotations(methodDecl.scope, methodDecl.annotations, originalMethod);", "+\t\tClassScope scope = ((SourceTypeBinding) originalMethod.declaringClass).scope;", "+\t\tif (scope != null) {", "+\t\t\tTypeDeclaration typeDecl = scope.referenceContext;", "+\t\t\tAbstractMethodDeclaration methodDecl = typeDecl.declarationOf(originalMethod);", "+\t\t\tif (methodDecl != null)", "+\t\t\t\tASTNode.resolveAnnotations(methodDecl.scope, methodDecl.annotations, originalMethod);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24c17691f271d2d9bc2fbb20fea0c0e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "2f0c7ec523954b9442b914a192aeb84937c76666", "commitAfterChange": "e1ce38065823480549fe152214755fa58b2884e3", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " \tpublic String getSharedProperty(String key) throws CoreException", "signatureAfterChange": " \tpublic String getSharedProperty(String key) throws CoreException", "diff": ["-\t\t\tFile file  = rscFile.getLocation().toFile();", "-\t\t\tif (file.exists()) {", "-\t\t\t\tbyte[] bytes;", "-\t\t\t\ttry {", "-\t\t\t\t\tbytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(file);", "-\t\t\t\t} catch (IOException e) {", "-\t\t\t\t\treturn null;", "-\t\t\t\t}", "-\t\t\t\ttry {", "-\t\t\t\t\tproperty = new String(bytes, org.eclipse.jdt.internal.compiler.util.Util.UTF_8); // .classpath always encoded with UTF-8", "-\t\t\t\t} catch (UnsupportedEncodingException e) {", "-\t\t\t\t\tUtil.log(e, \"Could not read .classpath with UTF-8 encoding\"); //$NON-NLS-1$", "-\t\t\t\t\t// fallback to default", "-\t\t\t\t\tproperty = new String(bytes);", "+\t\t\tIPath location = rscFile.getLocation();", "+\t\t\tif (location != null) {", "+\t\t\t\tFile file = location.toFile();", "+\t\t\t\tif (file.exists()) {", "+\t\t\t\t\tbyte[] bytes;", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tbytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(file);", "+\t\t\t\t\t} catch (IOException e) {", "+\t\t\t\t\t\treturn null;", "+\t\t\t\t\t}", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tproperty = new String(bytes, org.eclipse.jdt.internal.compiler.util.Util.UTF_8); // .classpath always encoded with UTF-8", "+\t\t\t\t\t} catch (UnsupportedEncodingException e) {", "+\t\t\t\t\t\tUtil.log(e, \"Could not read .classpath with UTF-8 encoding\"); //$NON-NLS-1$", "+\t\t\t\t\t\t// fallback to default", "+\t\t\t\t\t\tproperty = new String(bytes);", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54d743f8bb08aaee04b1564816a568b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/DeclarationOfReferencedTypesPattern.java", "commitBeforeChange": "76332517ba0d460000825c116fbd767d8bfa0d4b", "commitAfterChange": "1e1015da1a84dbe7690360cee6c8e73ba7428d3a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " private void reportDeclaration(TypeBinding typeBinding, int maxType, MatchLocator locator) throws CoreException", "signatureAfterChange": " private void reportDeclaration(TypeBinding typeBinding, int maxType, MatchLocator locator) throws CoreException", "diff": ["-\t\t\t\tTypeDeclaration typeDecl = ((SourceTypeBinding)typeBinding).scope.referenceContext;", "-\t\t\t\tlocator.report(resource, typeDecl.sourceStart, typeDecl.sourceEnd, type, IJavaSearchResultCollector.EXACT_MATCH);", "+\t\t\t\tClassScope scope = ((SourceTypeBinding)typeBinding).scope;", "+\t\t\t\tif (scope != null) {", "+\t\t\t\t\tTypeDeclaration typeDecl = scope.referenceContext;", "+\t\t\t\t\tlocator.report(resource, typeDecl.sourceStart, typeDecl.sourceEnd, type, IJavaSearchResultCollector.EXACT_MATCH);", "+\t\t\t\t}"]}], "num": 65166}