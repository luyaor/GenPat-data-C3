{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4c21c3641410c6b6694a00f8adcf4b1d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69fd07b8bdebab0504ccc12c4330c7df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "d48348b35546aedb713110b2ed105dc5edef642d", "commitAfterChange": "af92ec761864fc440fb8211ae7d1ddf0cccd86d0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r \tITypeBinding resolveExpressionType(Expression expression)", "signatureAfterChange": "\r \tITypeBinding resolveExpressionType(Expression expression)", "diff": ["+\t\t} else if (expression instanceof StringLiteral) {\r", "+\t\t\torg.eclipse.jdt.internal.compiler.ast.StringLiteral stringLiteral = (org.eclipse.jdt.internal.compiler.ast.StringLiteral) this.newAstToOldAst.get(expression);\r", "+\t\t\treturn this.getTypeBinding(stringLiteral.literalType(this.retrieveEnclosingScope(expression)));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9733570db5179dcf853625fc0cdcfbb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "718efb00ce060fbf6d67daabb2cd0f9845ae9570", "commitAfterChange": "d5bb78582d4992003bc3f1aa67226d9e44bea956", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": " \t \tprivate BlockScope lookupScope(ASTNode node)", "signatureAfterChange": " \t \tprivate BlockScope lookupScope(ASTNode node)", "diff": ["-\t\t\t&& !(currentNode instanceof FieldDeclaration)) {", "+\t\t\t&& !(currentNode instanceof FieldDeclaration)", "+\t\t\t&& !(currentNode instanceof AbstractTypeDeclaration)) {", "-\t\t\tif (currentNode instanceof TypeDeclaration", "-\t\t\t\t\t|| currentNode instanceof EnumDeclaration", "-\t\t\t\t\t|| currentNode instanceof AnnotationTypeDeclaration) {", "+\t\t\tif (currentNode instanceof AbstractTypeDeclaration) {", "+\t\t} else if (currentNode instanceof AbstractTypeDeclaration) {", "+\t\t\torg.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDecl = (org.eclipse.jdt.internal.compiler.ast.TypeDeclaration) this.ast.getBindingResolver().getCorrespondingNode(currentNode);", "+\t\t\treturn typeDecl.initializerScope;"]}], "num": 62373}