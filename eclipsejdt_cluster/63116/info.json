{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bad45a8ea2fa78f43ecffe27be862a70", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "619513ea36f24dde65d995bf6aa032dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "1181734000bc58166717f28b96a50ec09d7eb3ed", "commitAfterChange": "c51e77393b67f111789d948569acd2e5924511c0", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 34, "signatureBeforeChange": "\r \tpublic ZipFile getZipFile(IPath path) throws CoreException", "signatureAfterChange": "\r \tpublic synchronized ZipFile getZipFile(IPath path) throws CoreException", "diff": ["-\tpublic ZipFile getZipFile(IPath path) throws CoreException {\r", "+\tpublic synchronized ZipFile getZipFile(IPath path) throws CoreException {\r", "+\t\tThread currentThread = Thread.currentThread();\r", "+\t\tHashMap map = null;\r", "-\t\tif (this.zipFiles != null && (zipFile = (ZipFile)this.zipFiles.get(path)) != null) {\r", "+\t\tif ((map = (HashMap)this.zipFiles.get(currentThread)) != null \r", "+\t\t\t\t&& (zipFile = (ZipFile)map.get(path)) != null) {\r", "+\t\t\t\t\r", "-\t\t\t\tSystem.out.println(\"[JavaModelManager.getZipFile(IPath)] Creating ZipFile on \" + fileSystemPath ); //$NON-NLS-1$\r", "+\t\t\t\tSystem.out.println(\"(\" + currentThread + \") [JavaModelManager.getZipFile(IPath)] Creating ZipFile on \" + fileSystemPath ); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\t\tif (this.zipFiles != null) {\r", "-\t\t\t\tthis.zipFiles.put(path, zipFile);\r", "+\t\t\tif (map != null) {\r", "+\t\t\t\tmap.put(path, zipFile);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97174424df82d9550f21cefb634f113e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedThisReference.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tthis.resolvedType = this.qualification.resolveType(scope);", "-\t\tif (this.resolvedType == null) return null;", "-", "+\t\tTypeBinding type = this.resolvedType = this.qualification.resolveType(scope);", "+\t\tif (type == null) return null;", "+\t\t// X.this is not a raw type as denoting enclosing instance", "+\t\tif (type.isRawType()) {", "+\t\t    RawTypeBinding rawType = (RawTypeBinding) type;", "+\t\t    type = this.resolvedType = rawType.type; // unwrap", "+\t\t}", "-\t\t\t&& this.currentCompatibleType != this.resolvedType) {", "+\t\t\t&& this.currentCompatibleType != type) {", "-\t\t\tscope.problemReporter().noSuchEnclosingInstance(this.resolvedType, this, false);", "-\t\t\treturn this.resolvedType;", "+\t\t\tscope.problemReporter().noSuchEnclosingInstance(type, this, false);", "+\t\t\treturn type;", "-\t\treturn this.resolvedType;", "+\t\treturn type;"]}], "num": 63116}