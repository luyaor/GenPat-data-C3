{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a93d47793aa8605273ff960a60778c07", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92a50b5499a68559609790a0a5dcd07b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/OrPattern.java", "commitBeforeChange": "60e138d2828b37f2615e0cced57acea3adb47644", "commitAfterChange": "3c340a30d5ee47c28968789969de0fd1189f5b30", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r protected boolean matches(AstNode node, boolean resolve)", "signatureAfterChange": "\r public int matchLevel(AstNode node, boolean resolve)", "diff": ["- */\r", "-protected boolean matches(AstNode node, boolean resolve) {\r", "-\treturn this.leftPattern.matches(node, resolve) || this.rightPattern.matches(node, resolve);\r", "-}\r", "+ */\r", "+public int matchLevel(AstNode node, boolean resolve) {\r", "+\tswitch (this.leftPattern.matchLevel(node, resolve)) {\r", "+\t\tcase IMPOSSIBLE_MATCH:\r", "+\t\t\treturn this.rightPattern.matchLevel(node, resolve);\r", "+\t\tcase POSSIBLE_MATCH:\r", "+\t\t\treturn POSSIBLE_MATCH;\r", "+\t\tcase INACCURATE_MATCH:\r", "+\t\t\tint rightLevel = this.rightPattern.matchLevel(node, resolve);\r", "+\t\t\tif (rightLevel != IMPOSSIBLE_MATCH) {\r", "+\t\t\t\treturn rightLevel;\r", "+\t\t\t} else {\r", "+\t\t\t\treturn INACCURATE_MATCH;\r", "+\t\t\t}\r", "+\t\tcase ACCURATE_MATCH:\r", "+\t\t\treturn ACCURATE_MATCH;\r", "+\t\tdefault:\r", "+\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t}\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f34ac23bc8dfc4d0d1e41065c914e4fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/OrPattern.java", "commitBeforeChange": "135399ac7f48d47679e738d0a583e6c95ff87fd6", "commitAfterChange": "092d49846655da2c4e511a256ba551dc4e15c674", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r protected boolean matches(AstNode node, boolean resolve)", "signatureAfterChange": "\r public int matchLevel(AstNode node, boolean resolve)", "diff": ["- */\r", "-protected boolean matches(AstNode node, boolean resolve) {\r", "-\treturn this.leftPattern.matches(node, resolve) || this.rightPattern.matches(node, resolve);\r", "-}\r", "+ */\r", "+public int matchLevel(AstNode node, boolean resolve) {\r", "+\tswitch (this.leftPattern.matchLevel(node, resolve)) {\r", "+\t\tcase IMPOSSIBLE_MATCH:\r", "+\t\t\treturn this.rightPattern.matchLevel(node, resolve);\r", "+\t\tcase POSSIBLE_MATCH:\r", "+\t\t\treturn POSSIBLE_MATCH;\r", "+\t\tcase INACCURATE_MATCH:\r", "+\t\t\tint rightLevel = this.rightPattern.matchLevel(node, resolve);\r", "+\t\t\tif (rightLevel != IMPOSSIBLE_MATCH) {\r", "+\t\t\t\treturn rightLevel;\r", "+\t\t\t} else {\r", "+\t\t\t\treturn INACCURATE_MATCH;\r", "+\t\t\t}\r", "+\t\tcase ACCURATE_MATCH:\r", "+\t\t\treturn ACCURATE_MATCH;\r", "+\t\tdefault:\r", "+\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t}\r", "+}\r"]}], "num": 22480}