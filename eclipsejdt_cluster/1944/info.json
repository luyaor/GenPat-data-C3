{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f1cf20721c363723028d78e314ce04bb", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60c5858fbfcd609d844cd8f24f24481d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tprivate synchronized void computeAllRootPaths(IType type)", "signatureAfterChange": " \t \tprivate synchronized void computeAllRootPaths(IType type)", "diff": ["-\t\t\tObject target = JavaModel.getTarget(ResourcesPlugin.getWorkspace().getRoot(), root.getPath(), true);", "+\t\t\tObject target = JavaModel.getTarget(root.getPath(), true);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t} else if (target instanceof File) {", "-\t\t\t\tFile file = (File)target;", "-\t\t\t\tif (file.isDirectory()) {", "-\t\t\t\t\tFile[] files = file.listFiles();", "-\t\t\t\t\tfor (int i = 0, max = files.length; i < max; i++) {", "-\t\t\t\t\t\tFile currentFile = files[i];", "-\t\t\t\t\t\tif (currentFile.isDirectory()) {", "-\t\t\t\t\t\t\tfirstLevelPackageNames.add(currentFile.getName());", "-\t\t\t\t\t\t} else if (Util.isClassFileName(currentFile.getName())) {", "-\t\t\t\t\t\t\tcontainsADefaultPackage = true;", "-\t\t\t\t\t\t}", "-\t\t\tObject target = JavaModel.getTarget(ResourcesPlugin.getWorkspace().getRoot(), this.sourcePath, true);", "-\t\t\tif (target instanceof IResource) {", "-\t\t\t\tif (target instanceof IContainer) {", "-\t\t\t\t\tcomputeRootPath((IContainer)target, firstLevelPackageNames, containsADefaultPackage, tempRoots);", "-\t\t\t\t}", "-\t\t\t} else if (target instanceof File) {", "-\t\t\t\tFile file = (File)target;", "-\t\t\t\tif (file.isDirectory()) {", "-\t\t\t\t\tcomputeRootPath(file, firstLevelPackageNames, containsADefaultPackage, tempRoots);", "-\t\t\t\t}", "+\t\t\tObject target = JavaModel.getTarget(this.sourcePath, true);", "+\t\t\tif (target instanceof IContainer) {", "+\t\t\t\tcomputeRootPath((IContainer)target, firstLevelPackageNames, containsADefaultPackage, tempRoots);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83b9f324fe0bd136380c2c73803b095f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/util/JdtCorePerformanceMeter.java", "commitBeforeChange": "4119a65befb0f1b826133c8b40790cea36510774", "commitAfterChange": "199c84f2cae998bf19dec5ba0cb5f860d990b3fa", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate void storeCpuTime(Sample sample)", "signatureAfterChange": "  private void storeDataPoints(Sample sample)", "diff": ["-\tprivate void storeCpuTime(Sample sample) {", "-\t\tDataPoint[] dataPoints= sample.getDataPoints();", "-\t\tSystem.out.println(\"Scenario '\" + getReadableName()+ \"':\"); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\tif (dataPoints.length > 0) {", "-\t\t\tStatisticsSession s= new StatisticsSession(dataPoints);", "-\t\t\tDim[] dimensions= dataPoints[0].getDimensions();", "-\t\t\tif (dimensions.length > 0) {", "-\t\t\t\tfor (int i= 0; i < dimensions.length; i++) {", "-\t\t\t\t    Dim dimension= dimensions[i];", "-\t\t\t\t\tif (dimension.getName().equals(\"CPU Time\")) {", "-\t\t\t\t\t\tStatistics stat = new Statistics(s, dimension);", "-\t\t\t\t\t    CPU_TIMES.put(getReadableName(), stat);", "-\t\t\t\t\t\tSystem.out.println(\"\t- CPU Time: \"+stat.toString());", "-\t\t\t\t\t} else if (dimension.getName().startsWith(\"Elapsed\")) {", "-\t\t\t\t\t\tStatistics stat = new Statistics(s, dimension);", "-\t\t\t\t\t    ELAPSED_TIMES.put(getReadableName(), stat);", "-\t\t\t\t\t\tSystem.out.println(\"\t- Elapsed process: \"+stat.toString());", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "+private void storeDataPoints(Sample sample) {", "+\tDataPoint[] dataPoints = sample.getDataPoints();", "+\tint length = dataPoints.length;", "+\tif (length > 0) {", "+\t\tSystem.out.println(\"\tStore \" + length + \" data points...\");", "+\t\tSTATISTICS.put(getReadableName(), dataPoints);", "+}"]}], "num": 1944}