{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e72df868d66e9ee9dc8677153059dc8b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "125f0dcee45755726e36857346805ccc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "8a45189b56dd53f49b522651eb6b3bd9d4419390", "commitAfterChange": "9c0200613f6d3b1541431a53e81611b5e71da85a", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": " public void generateSyntheticBodyForConstructorAccess(SyntheticMethodBinding accessBinding)", "signatureAfterChange": " public void generateSyntheticBodyForConstructorAccess(SyntheticMethodBinding accessBinding)", "diff": ["-\tif (constructorBinding.declaringClass.isNestedType()) {", "-\t\tNestedTypeBinding nestedType = (NestedTypeBinding) constructorBinding.declaringClass;", "+\t// special name&ordinal argument generation for enum constructors", "+\tTypeBinding declaringClass = constructorBinding.declaringClass;", "+\tif (declaringClass.erasure().id == T_JavaLangEnum || declaringClass.isEnum()) {", "+\t\tthis.aload_1(); // pass along name param as name arg", "+\t\tthis.iload_2(); // pass along ordinal param as ordinal arg", "+\t}\t", "+\tif (declaringClass.isNestedType()) {", "+\t\tNestedTypeBinding nestedType = (NestedTypeBinding) declaringClass;", "-\tif (constructorBinding.declaringClass.isNestedType()) {", "-\t\tNestedTypeBinding nestedType = (NestedTypeBinding) constructorBinding.declaringClass;", "+\tif (declaringClass.isNestedType()) {", "+\t\tNestedTypeBinding nestedType = (NestedTypeBinding) declaringClass;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac89075e531e55578aecd21155e090b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "cdf4427e144add1a36f3939b37283556991d4db8", "commitAfterChange": "75f702ac7a9f5b98d8daf289140c0d700af63244", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public int literalIndex(MethodBinding aMethodBinding)", "signatureAfterChange": " public int literalIndex(MethodBinding aMethodBinding)", "diff": ["-\t\tif (aMethodBinding.declaringClass.isInterface()) {", "+\t\tif (aMethodBinding.constantPoolDeclaringClass().isInterface()) {", "-\t\t\t\tclassIndex = literalIndex(aMethodBinding.declaringClass);", "+\t\t\t\tclassIndex = literalIndex(aMethodBinding.constantPoolDeclaringClass());", "-\t\t\t\tclassIndex = literalIndex(aMethodBinding.declaringClass);", "+\t\t\t\tclassIndex = literalIndex(aMethodBinding.constantPoolDeclaringClass());", "-\t\t\tif (aMethodBinding.declaringClass.isInterface()) {", "+\t\t\tif (aMethodBinding.constantPoolDeclaringClass().isInterface()) {", "-\t\t\t\tclassIndex = literalIndex(aMethodBinding.declaringClass);", "+\t\t\t\tclassIndex = literalIndex(aMethodBinding.constantPoolDeclaringClass());", "-\t\t\t\tclassIndex = literalIndex(aMethodBinding.declaringClass);", "+\t\t\t\tclassIndex = literalIndex(aMethodBinding.constantPoolDeclaringClass());"]}], "num": 63753}