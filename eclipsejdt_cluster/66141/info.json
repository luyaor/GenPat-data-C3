{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "afff24fa209deaf42184831f1b3a9251", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d638d634e42f39abc3357c26f21ffa6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/FieldInfo.java", "commitBeforeChange": "51c6ca3e4dfed3078a1640da7a2ab7f26c899e0a", "commitAfterChange": "de8aa9940086fe152901aa168536f30670945804", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic FieldInfo(byte classFileBytes[], IConstantPool constantPool, int offset) \t\tthrows ClassFormatException", "signatureAfterChange": " \tpublic FieldInfo(byte classFileBytes[], IConstantPool constantPool, int offset) \t\tthrows ClassFormatException", "diff": ["+\t\t\t} else if (equals(attributeName, IAttributeNamesConstants.RUNTIME_VISIBLE_TYPE_ANNOTATIONS)) {", "+\t\t\t\tthis.attributes[attributesIndex++] = new RuntimeVisibleTypeAnnotationsAttribute(classFileBytes, constantPool, offset + readOffset);", "+\t\t\t} else if (equals(attributeName, IAttributeNamesConstants.RUNTIME_INVISIBLE_TYPE_ANNOTATIONS)) {", "+\t\t\t\tthis.attributes[attributesIndex++] = new RuntimeInvisibleTypeAnnotationsAttribute(classFileBytes, constantPool, offset + readOffset);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b88c50929c83b4ccc22329df693ce5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/CodeAttribute.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tCodeAttribute(byte[] classFileBytes, IConstantPool constantPool, int offset) throws ClassFormatException", "signatureAfterChange": "  \tCodeAttribute(byte[] classFileBytes, IConstantPool constantPool, int offset) throws ClassFormatException", "diff": ["+\t\t\t} else if (equals(attributeName, IAttributeNamesConstants.RUNTIME_VISIBLE_TYPE_ANNOTATIONS)) {", "+\t\t\t\tthis.attributes[attributesIndex++] = new RuntimeVisibleTypeAnnotationsAttribute(classFileBytes, constantPool, offset + readOffset);", "+\t\t\t} else if (equals(attributeName, IAttributeNamesConstants.RUNTIME_INVISIBLE_TYPE_ANNOTATIONS)) {", "+\t\t\t\tthis.attributes[attributesIndex++] = new RuntimeInvisibleTypeAnnotationsAttribute(classFileBytes, constantPool, offset + readOffset);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da49986bd9f527b6ff1cef179536240e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/MethodInfo.java", "commitBeforeChange": "51c6ca3e4dfed3078a1640da7a2ab7f26c899e0a", "commitAfterChange": "de8aa9940086fe152901aa168536f30670945804", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic MethodInfo(byte classFileBytes[], IConstantPool constantPool, int offset, int decodingFlags) \t\tthrows ClassFormatException", "signatureAfterChange": " \tpublic MethodInfo(byte classFileBytes[], IConstantPool constantPool, int offset, int decodingFlags) \t\tthrows ClassFormatException", "diff": ["+\t\t\t} else if (equals(attributeName, IAttributeNamesConstants.RUNTIME_VISIBLE_TYPE_ANNOTATIONS)) {", "+\t\t\t\tthis.attributes[attributesIndex++] = new RuntimeVisibleTypeAnnotationsAttribute(classFileBytes, constantPool, offset + readOffset);", "+\t\t\t} else if (equals(attributeName, IAttributeNamesConstants.RUNTIME_INVISIBLE_TYPE_ANNOTATIONS)) {", "+\t\t\t\tthis.attributes[attributesIndex++] = new RuntimeInvisibleTypeAnnotationsAttribute(classFileBytes, constantPool, offset + readOffset);"]}], "num": 66141}