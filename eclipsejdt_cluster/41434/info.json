{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8e355cc9a78977f19b3211a330f0ff4f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb845f80d81436743bf13d81584115d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "740d8a3bbf7d827a9782a8704551b5892c828d42", "commitAfterChange": "37fa53fe1bcd1db81d377f564f101511c07818f5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void collectSubstitutes(Scope scope, TypeBinding otherType, Map substitutes, int constraint)", "signatureAfterChange": " \tpublic void collectSubstitutes(Scope scope, TypeBinding otherType, Map substitutes, int constraint)", "diff": ["-\t\t        otherEquivalent = ((ReferenceBinding)otherType).findSuperTypeErasingTo((ReferenceBinding)this.type.erasure());", "+\t\t        otherEquivalent = ((ReferenceBinding)otherType).findSuperTypeWithSameErasure(this.type);", "-\t\t        equivalent = this.findSuperTypeErasingTo((ReferenceBinding)(otherType.erasure()));", "+\t\t        equivalent = this.findSuperTypeWithSameErasure(otherType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc30439b5a7cbbfaf53f7b369fdd2562", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "740d8a3bbf7d827a9782a8704551b5892c828d42", "commitAfterChange": "37fa53fe1bcd1db81d377f564f101511c07818f5", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void collectSubstitutes(Scope currentScope, TypeBinding otherType, Map substitutes, int constraint)", "signatureAfterChange": " public void collectSubstitutes(Scope currentScope, TypeBinding otherType, Map substitutes, int constraint)", "diff": ["-\t        otherEquivalent = ((ReferenceBinding)otherType).findSuperTypeErasingTo(this);", "+\t        otherEquivalent = ((ReferenceBinding)otherType).findSuperTypeWithSameErasure(this);", "-\t        equivalent = this.findSuperTypeErasingTo((ReferenceBinding)(otherType.erasure()));", "+\t        equivalent = this.findSuperTypeWithSameErasure(otherType);"]}], "num": 41434}