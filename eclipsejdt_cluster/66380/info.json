{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6ca907ca5b21284c55a77c0a4252feea", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "113694acadc172dde9c22333a000a7f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/AbstractCompilerTest.java", "commitBeforeChange": "2452619bb5034f0a0ba9b6e9747cd6db77b2eb53", "commitAfterChange": "8d4f2ebabb0e50507cab6ea5f17acab787cfb10b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic static Test setupSuite(Class clazz)", "signatureAfterChange": " \tpublic static Test buildComplianceRegressionTestSetupSuite(String complianceLevel, List testClasses)", "diff": ["+\t */", "+\tpublic static Test buildComplianceRegressionTestSetupSuite(String complianceLevel, List testClasses) {", "+\t\treturn buildComplianceSetupTestSuite(testClasses, RegressionTestSetup.class, complianceLevel);", "+\t}", "-\tpublic static Test setupSuite(Class clazz) {", "-\t\tArrayList testClasses = new ArrayList();", "-\t\ttestClasses.add(clazz);", "-\t\treturn suite(clazz.getName(), RegressionTestSetup.class, testClasses);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40b4c777369c404d843822fead62095b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedTypeReference.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public String toStringExpression(int tab)", "signatureAfterChange": " \t \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "diff": ["-}", "-public String toStringExpression(int tab) {", "-\tStringBuffer buffer = new StringBuffer();", "-\tfor (int i = 0; i < tokens.length; i++) {", "-\t\tbuffer.append(tokens[i]);", "-\t\tif (i < (tokens.length - 1)) {", "-\t\t\tbuffer.append(\".\"); //$NON-NLS-1$", "-\t\t}", "-\treturn buffer.toString();", "-}", "+\t", "+\tpublic StringBuffer printExpression(int indent, StringBuffer output) {", "+\t\t", "+\t\tfor (int i = 0; i < tokens.length; i++) {", "+\t\t\tif (i > 0) output.append('.');", "+\t\t\toutput.append(tokens[i]);", "+\t\t}", "+\t\treturn output;", "+\t}"]}], "num": 66380}