{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7170022a0f4bb0df5e24155a213638f4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9629144cc81cc352762a9d0a5596ccc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "11d9bc69677fa9c8e3ad183264b865451dc15a16", "commitAfterChange": "0aef5635cdda5f8b487e6520930c462feef51cd5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void match(AstNode node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(AstNode node, MatchingNodeSet nodeSet)", "diff": ["-public void match(AstNode node, MatchingNodeSet nodeSet) { // interested in ImportReference", "-\tif (!(node instanceof ImportReference)) return;", "+public int match(AstNode node, MatchingNodeSet nodeSet) { // interested in ImportReference", "+\tif (!(node instanceof ImportReference)) return IMPOSSIBLE_MATCH;", "-\tint level = matchLevel((ImportReference) node);", "-\tif (level >= POSSIBLE_MATCH)", "-\t\tnodeSet.addMatch(node, level);", "+\treturn nodeSet.addMatch(node, matchLevel((ImportReference) node));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c97c836f310faa6f82ca835a2f2bb377", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferenceLocator.java", "commitBeforeChange": "11d9bc69677fa9c8e3ad183264b865451dc15a16", "commitAfterChange": "0aef5635cdda5f8b487e6520930c462feef51cd5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void match(AstNode node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(AstNode node, MatchingNodeSet nodeSet)", "diff": ["-public void match(AstNode node, MatchingNodeSet nodeSet) { // interested in ImportReference", "-\tif (!(node instanceof ImportReference)) return;", "+public int match(AstNode node, MatchingNodeSet nodeSet) { // interested in ImportReference", "+\tif (!(node instanceof ImportReference)) return IMPOSSIBLE_MATCH;", "-\tint level = matchLevel((ImportReference) node);", "-\tif (level >= POSSIBLE_MATCH)", "-\t\tnodeSet.addMatch(node, level);", "+\treturn nodeSet.addMatch(node, matchLevel((ImportReference) node));"]}], "num": 43308}