{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c3bfde252f36f02eaabb13e2e53a0275", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d02468bcb8e98cb096ff4b20b507097", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FakedTrackingVariable.java", "commitBeforeChange": "8cb3365a924e5869d5c8a5715a80d4cd8189b243", "commitAfterChange": "4ec04ec7ec987de2e86c2ac8cdacbf6a8acd72a4", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprivate static FakedTrackingVariable analyseCloseableExpression(FlowInfo flowInfo, FlowContext flowContext, LocalVariableBinding local,  \t\t\t\t\t\t\t\t\tASTNode location, Expression expression, FakedTrackingVariable previousTracker)", "signatureAfterChange": " \tprivate static FakedTrackingVariable analyseCloseableExpression(FlowInfo flowInfo, FlowContext flowContext, LocalVariableBinding local,  \t\t\t\t\t\t\t\t\tASTNode location, Expression expression, FakedTrackingVariable previousTracker)", "diff": ["+\t\tboolean isResourceProducer = false;", "+\t\tif (expression.resolvedType instanceof ReferenceBinding) {", "+\t\t\tReferenceBinding resourceType = (ReferenceBinding) expression.resolvedType;", "+\t\t\tif (resourceType.hasTypeBit(TypeIds.BitResourceFreeCloseable)) {", "+\t\t\t\tif (isBlacklistedMethod(expression))", "+\t\t\t\t\tisResourceProducer = true;", "+\t\t\t\telse", "+\t\t\t\t\treturn null; // (a) resource-free closeable: -> null", "+\t\t\t}", "+\t\t}", "+", "-\t\t\ttracker.globalClosingState |= SHARED_WITH_OUTSIDE;", "+\t\t\tif (!isResourceProducer)", "+\t\t\t\ttracker.globalClosingState |= SHARED_WITH_OUTSIDE;", "-\t\tif (expression.resolvedType instanceof ReferenceBinding) {", "-\t\t\tReferenceBinding resourceType = (ReferenceBinding) expression.resolvedType;", "-\t\t\tif (resourceType.hasTypeBit(TypeIds.BitResourceFreeCloseable)) {", "-\t\t\t\t// (a) resource-free closeable: -> null", "-\t\t\t\treturn null;", "-\t\t\t}", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60896dc6b1b233240b163a897f9e7cc4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "7f51e750d684686314cf957cd0a463e4558546e5", "commitAfterChange": "f65225afa9896daa624936de0f87dc55afc93a95", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " protected void consumeInsideCastExpression()", "signatureAfterChange": " protected void consumeInsideCastExpression()", "diff": ["-\tif(topKnownElementKind(COMPLETION_OR_ASSIST_PARSER) == K_PARAMETERIZED_CAST) {", "+\tboolean isParameterized =(topKnownElementKind(COMPLETION_OR_ASSIST_PARSER) == K_PARAMETERIZED_CAST);", "+\tif(isParameterized) {", "+\tif(isParameterized) {", "+\t\tintPtr--;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c509cfd8e9da80baeeae592129352cb2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "0b99e59f5b8c33dba4fea6bb15ed5a9967aeb172", "commitAfterChange": "f963317eb29ffe4dba07b023619d08ff06cca487", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  void checkInheritedMethods(MethodBinding[] methods, int length)", "signatureAfterChange": "  void checkInheritedMethods(MethodBinding[] methods, int length)", "diff": ["-\t\tif (bestAbstractMethod == null) {", "-\t\t\tproblemReporter().inheritedMethodsHaveIncompatibleReturnTypes(this.type, methods, length);", "-\t\t} else if (mustImplementAbstractMethod(bestAbstractMethod.declaringClass)) {", "+\t\tboolean noMatch = bestAbstractMethod == null;", "+\t\tif (noMatch)", "+\t\t\tbestAbstractMethod = methods[0];", "+\t\tif (mustImplementAbstractMethod(bestAbstractMethod.declaringClass)) {", "+\t\t} else if (noMatch) {", "+\t\t\tproblemReporter().inheritedMethodsHaveIncompatibleReturnTypes(this.type, methods, length);"]}], "num": 29559}