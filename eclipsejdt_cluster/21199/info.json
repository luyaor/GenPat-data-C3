{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9bbcc51a63e011602c6bf2ef13a23a40", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d3d20ac9533d3782e73219e4886d590", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "ba623d582045575b43eee2b86be165ff58225746", "commitAfterChange": "5f25db2c9c02bf799108bff292447ab679c3c3b7", "methodNumberBeforeChange": 237, "methodNumberAfterChange": 237, "signatureBeforeChange": " public void methodNameClash(MethodBinding currentMethod, MethodBinding inheritedMethod)", "signatureAfterChange": " public void methodNameClash(MethodBinding currentMethod, MethodBinding inheritedMethod)", "diff": ["-\t\t\ttypesAsString(currentMethod.original().isVarargs(), currentMethod.original().parameters, false),", "+\t\t\ttypesAsString(currentMethod.isVarargs(), currentMethod.parameters, false),", "-\t\t\ttypesAsString(inheritedMethod.original().isVarargs(), inheritedMethod.original().parameters, false),", "+\t\t\ttypesAsString(inheritedMethod.isVarargs(), inheritedMethod.parameters, false),", "-\t\t\ttypesAsString(currentMethod.original().isVarargs(), currentMethod.original().parameters, true),", "+\t\t\ttypesAsString(currentMethod.isVarargs(), currentMethod.parameters, true),", "-\t\t\ttypesAsString(inheritedMethod.original().isVarargs(), inheritedMethod.original().parameters, true),", "+\t\t\ttypesAsString(inheritedMethod.isVarargs(), inheritedMethod.parameters, true),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e4862e47637f8d392685d6bb244692c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "4705410343400fe2a1c15aa7834d45664e8169f8", "commitAfterChange": "bbbc03c8974b50736f7c2247e05857599972fd62", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 112, "signatureBeforeChange": " \tpublic void testBug93880_15c() throws JavaModelException", "signatureAfterChange": " \tpublic void testBug93880_15c() throws JavaModelException", "diff": ["+\t\t\t\"/**\\n\" + ", "+\t\t\t\" * Javadoc for all package\\n\" + ", "+\t\t\t\" */\\n\" + ", "+\t\t\t\"private package javadoc.b93880;\"", "+\t\t);", "+\t\tCompilationUnit compilUnit = verifyComments(workingCopies[0]);", "+\t\tif (docCommentSupport.equals(JavaCore.ENABLED)) {", "+\t\t\t// Get package declaration declaration and javadoc", "+\t\t\tPackageDeclaration packDecl = compilUnit.getPackage();", "+\t\t\tJavadoc docComment = (Javadoc) compilUnit.getCommentList().get(0); // Do not need to verify following statement as we know it's ok as verifyComments did not fail", "+", "+\t\t\t// Verify package declaration javadoc", "+\t\t\tassertTrue(\"Javadoc should be set on package declaration\", docComment == packDecl.getJavadoc());", "+", "+\t\t\t// Verify package declaration declaration source start", "+\t\t\tassertEquals(\"Source range of PackageDeclaration should include Javadoc child\", docComment.getStartPosition(), packDecl.getStartPosition());", "+\t\t}", "+\t}", "-\t\t\tassertTrue(\"Source range of PackageDeclaration should include Javadoc child\", packDecl.getStartPosition() > comment.getStartPosition()+comment.getLength());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aff5445c8ddb64a796857102dda7db57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "fbbba838d59f0d76b49f33bcea6536f9f0897679", "commitAfterChange": "5174a8c02a257a6c5c2bc19d00e0cd6b27cfdb23", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["+\t\t\t\t\t} else if (token.equals(\"raw\")) {//$NON-NLS-1$", "-\t\t\t\t\t\t\tCompilerOptions.DISABLED);\t\t\t\t\t\t", "-\t\t\t\t\t} else if (token.equals(\"allUnchecked\")) {//$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUncheckedTypeOperation,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportRawTypeReference,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);\t\t\t\t\t\t", "+\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);\t\t\t\t\t\t"]}], "num": 21199}