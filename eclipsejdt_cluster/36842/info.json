{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a757a6529690b8d414a84007dbb1499", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0defbcbb7e8a55dbc8279e7c3184d442", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b9c215c1a0014055731b42921e6d8437fe5d1c30", "commitAfterChange": "cf30dcc5cf110d772b62d35f57e0c35d494f0e46", "methodNumberBeforeChange": 525, "methodNumberAfterChange": 525, "signatureBeforeChange": "\t\t\t \tpublic void test523()", "signatureAfterChange": "\t\t\t \tpublic void test523()", "diff": ["-\t\t\t\"2. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tList<String> ls = m.list(); // rawified even though wasn\\'t using T parameter\\n\" + ", "+\t\t\t\"\t                  ^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The method list() belongs to the raw type X.M. References to generic type X.M<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 7)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f19879d86104e8b0fa4827eac49aeef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "8f217d25322b885604d27f1ae4690e476bac378b", "commitAfterChange": "9cc20cb240e3ca7f459d6bee269a4e8a319e621d", "methodNumberBeforeChange": 174, "methodNumberAfterChange": 174, "signatureBeforeChange": " \tpublic void test0170()", "signatureAfterChange": " \tpublic void test0170()", "diff": ["-\t\t\t\"2. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tax = (AX)bar(ax);\\n\" + ", "+\t\t\t\"\t      ^^\\n\" + ", "+\t\t\t\"AX is a raw type. References to generic type AX<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 9)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20f685718c6bae2f8067e12420a74594", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/InnerEmulationTest.java", "commitBeforeChange": "0eda4899fe49711eb207c4c5710f5520d9ea2e2d", "commitAfterChange": "4a8da6910e1c14334403dae0988de171cbd44126", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " public void test035()", "signatureAfterChange": " public void test035()", "diff": ["-\t\t\"3. ERROR in p1\\\\A2.java (at line 20)\\n\" +", "+\t\t\"3. WARNING in p1\\\\A2.java (at line 19)\\n\" +", "+\t\t\"\tpublic void foo() {\t\\n\" +", "+\t\t\"\t            ^^^^^\\n\" +", "+\t\t\"The method foo() from the type A2.C is never used locally\\n\" +", "+\t\t\"----------\\n\" +", "+\t\t\"4. ERROR in p1\\\\A2.java (at line 20)\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "282a849f0e08c51e09468536e04d4d48", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 501, "methodNumberAfterChange": 501, "signatureBeforeChange": " \tpublic void test497()", "signatureAfterChange": " \tpublic void test497()", "diff": ["-\t\t\t\"2. ERROR in X.java (at line 14)\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\ttake(new A());\\n\" + ", "+\t\t\t\"\t         ^\\n\" + ", "+\t\t\t\"Type safety: Super.A is a raw type. References to generic type Super<S>.A<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 14)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d4c20bbc7e47f8672d40328119b79d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "8f217d25322b885604d27f1ae4690e476bac378b", "commitAfterChange": "9cc20cb240e3ca7f459d6bee269a4e8a319e621d", "methodNumberBeforeChange": 765, "methodNumberAfterChange": 765, "signatureBeforeChange": " public void test0758()", "signatureAfterChange": " public void test0758()", "diff": ["-\t\t\"4. ERROR in X.java (at line 14)\\n\" + ", "+\t\t\"4. WARNING in X.java (at line 12)\\n\" + ", "+\t\t\"\tEntryMap<K,V>.Entry entry = (EntryMap.Entry) internalGet(key);\\n\" + ", "+\t\t\"\t                             ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"X.EntryMap.Entry is a raw type. References to generic type X<K,V>.EntryMap<K,V>.Entry should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. ERROR in X.java (at line 14)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30972d6ca9770e3fc431623a33530deb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/InnerEmulationTest.java", "commitBeforeChange": "0eda4899fe49711eb207c4c5710f5520d9ea2e2d", "commitAfterChange": "4a8da6910e1c14334403dae0988de171cbd44126", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public void test033()", "signatureAfterChange": " public void test033()", "diff": ["-\t\t\"3. ERROR in p1\\\\A2.java (at line 20)\\n\" +", "+\t\t\"3. WARNING in p1\\\\A2.java (at line 19)\\n\" +", "+\t\t\"\tpublic void foo() {\t\\n\" +", "+\t\t\"\t            ^^^^^\\n\" +", "+\t\t\"The method foo() from the type A2.C is never used locally\\n\" +", "+\t\t\"----------\\n\" +", "+\t\t\"4. ERROR in p1\\\\A2.java (at line 20)\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34c60538b02a3ce8636e5075285ecf77", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "51ef1f3e636c416c08f983016f64f795f2b9cc74", "commitAfterChange": "9d3908e6916e224f861c3acffb456d39563ef22b", "methodNumberBeforeChange": 659, "methodNumberAfterChange": 659, "signatureBeforeChange": " public void test655()", "signatureAfterChange": " public void test655()", "diff": ["-\t\t\"2. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\"\tObject o = (BD<Number>) bb;\\n\" + ", "+\t\t\"\t           ^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Unnecessary cast from X.BB<capture-of ? extends Number,capture-of ? super Integer> to X.BD<Number>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 8)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3be5f30bc375bae045d250e282c830cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": " \tpublic void test085()", "signatureAfterChange": " \tpublic void test085()", "diff": ["-\t\t\t\"2. ERROR in X.java (at line 19)\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 15)\\n\" + ", "+\t\t\t\"\tvoid foo3(Test1 t1, Enum t2) {\\n\" + ", "+\t\t\t\"\t                    ^^^^\\n\" + ", "+\t\t\t\"Type safety: Enum is a raw type. References to generic type Enum<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 19)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d591bff903113b3b262363d9a7a403d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "8f217d25322b885604d27f1ae4690e476bac378b", "commitAfterChange": "9cc20cb240e3ca7f459d6bee269a4e8a319e621d", "methodNumberBeforeChange": 841, "methodNumberAfterChange": 841, "signatureBeforeChange": " public void test0834()", "signatureAfterChange": " public void test0834()", "diff": ["-\t\t\"2. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\"\tcollection = (Collection) set;\\n\" + ", "+\t\t\"\t              ^^^^^^^^^^\\n\" + ", "+\t\t\"Collection is a raw type. References to generic type Collection<E> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 9)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47470601202a7cc2f5f7691c7f5427f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "11d37ba24baa8a8d5177d1ba6ab1649342a0de47", "commitAfterChange": "3b53dc72aa60c63aafa5e63cea69df72f36f7346", "methodNumberBeforeChange": 855, "methodNumberAfterChange": 855, "signatureBeforeChange": " public void test0848()", "signatureAfterChange": " public void test0848()", "diff": ["-\t\t\"3. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\"3. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\"\tList<Number> numz= (LinkedList<Number>) asList; // type safety warning missing\\n\" + ", "+\t\t\"\t                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: The cast from Collection<capture#2-of ? extends Number> to LinkedList<Number> is actually checking against the erased type LinkedList\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. ERROR in X.java (at line 7)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51f4632bc1fdc6de5da490746ca9cd28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/StaticImportTest.java", "commitBeforeChange": "c53fb291a849342748306e59b6959038f8ec1321", "commitAfterChange": "d5a32e245b27c645dcf70347396d7253765682d3", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " \tpublic void test047()", "signatureAfterChange": " \tpublic void test047()", "diff": ["-\t\t\t\"3. ERROR in sample\\\\X.java (at line 22)\\n\" +", "+\t\t\t\"3. WARNING in sample\\\\X.java (at line 12)\\n\" +", "+\t\t\t\"\tswitch (value) {\\n\" +", "+\t\t\t\"\t        ^^^^^\\n\" +", "+\t\t\t\"The switch on the enum type X.TestEnum should have a default case\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"4. ERROR in sample\\\\X.java (at line 22)\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59979d0d12a0d3f93947ad566a868bc5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 146, "methodNumberAfterChange": 146, "signatureBeforeChange": "\t\t \tpublic void test142()", "signatureAfterChange": "\t\t \tpublic void test142()", "diff": ["-\t\t\t\"2. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tvoid bar(X<? extends X> x) {\\n\" + ", "+\t\t\t\"\t                     ^\\n\" + ", "+\t\t\t\"Type safety: X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 10)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "747e1ddbd1fa08f7df3325a31088b3ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "1c0c2bf77ea7eb024038ba5150fcc9eb4dd14084", "commitAfterChange": "1cdb6c1b0fb5ba08d4e282b871474685ab8baf3f", "methodNumberBeforeChange": 277, "methodNumberAfterChange": 277, "signatureBeforeChange": " \tpublic void test275()", "signatureAfterChange": " \tpublic void test275()", "diff": ["-\t\t\t\"2. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tpublic List useList(List l) {\\n\" + ", "+\t\t\t\"\t            ^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"The method useList(List) of type Y should be tagged with @Override since it actually overrides a superclass method\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 10)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a032af3899ab961ff4ca91a2c68c366", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GrammarCoverageTests308.java", "commitBeforeChange": "5bad0f0933acdc658d4e40a7d9becfd8568dd235", "commitAfterChange": "4316c760d5aabce67e5ab83fef96d7ef0cdbee57", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void test013() throws Exception", "signatureAfterChange": " \tpublic void test013() throws Exception", "diff": ["-\t\t\t\t\"3. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\t\"3. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\tI i = @Marker int @Marker []::<String>clone;\\n\" + ", "+\t\t\t\t\"\t                               ^^^^^^\\n\" + ", "+\t\t\t\t\"Unused type arguments for the non generic method clone() of type Object; it should not be parameterized with arguments <String>\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"4. ERROR in X.java (at line 7)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acde848f0991ac9867318ef2dd0e891f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericsRegressionTest_1_8.java", "commitBeforeChange": "d3d6e8a120fcc21d2141655c16c3f72a3fe7aa82", "commitAfterChange": "a914eaa80cfee2f1a5138d665998598bc293ae8e", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " public void test427218_reduced()", "signatureAfterChange": " public void test427218_reduced()", "diff": ["-\t\t\"2. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\"\tmatch(getLast(\\\"a\\\"), null);\\n\" + ", "+\t\t\"\t      ^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type mismatch: cannot convert from String to boolean\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. WARNING in X.java (at line 5)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd58acff62eb67a9b784aff476826eae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 174, "methodNumberAfterChange": 174, "signatureBeforeChange": " \tpublic void test170()", "signatureAfterChange": " \tpublic void test170()", "diff": ["-\t\t\t\"2. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tax = (AX)bar(ax);\\n\" + ", "+\t\t\t\"\t      ^^\\n\" + ", "+\t\t\t\"Type safety: AX is a raw type. References to generic type AX<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 9)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebe6a8a4f3cc53493732791f07cd39f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "8f217d25322b885604d27f1ae4690e476bac378b", "commitAfterChange": "9cc20cb240e3ca7f459d6bee269a4e8a319e621d", "methodNumberBeforeChange": 907, "methodNumberAfterChange": 907, "signatureBeforeChange": " public void test0900()", "signatureAfterChange": " public void test0900()", "diff": ["-\t\t\"2. ERROR in X.java (at line 16)\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 12)\\n\" + ", "+\t\t\"\t((Comparable) new Implements()).toString();\\n\" + ", "+\t\t\"\t  ^^^^^^^^^^\\n\" + ", "+\t\t\"Comparable is a raw type. References to generic type Comparable<T> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 16)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9389d68df9d01ac05802b9bf6d02c29", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/StaticImportTest.java", "commitBeforeChange": "c53fb291a849342748306e59b6959038f8ec1321", "commitAfterChange": "d5a32e245b27c645dcf70347396d7253765682d3", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tpublic void test048()", "signatureAfterChange": " \tpublic void test048()", "diff": ["+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in sample\\\\X.java (at line 11)\\n\" + ", "+\t\t\t\"\tswitch (value) {\\n\" + ", "+\t\t\t\"\t        ^^^^^\\n\" + ", "+\t\t\t\"The switch on the enum type X.TestEnum should have a default case\\n\" + ", "-\t\t\t\"2. ERROR in sample\\\\X.java (at line 21)\\n\" +", "+\t\t\t\"3. ERROR in sample\\\\X.java (at line 21)\\n\" +"]}], "num": 36842}