{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c4abbeb4baa04fbe92b821549a7da20d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1acb574031d2df3c349bc103392661ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "2b9df464fe844bb540314d6f9bc7e8d8d047b8ca", "commitAfterChange": "fd2c6860f6050376aa1a89de4b3eabe6f6200d3f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \tprivate void findFields(\r \t\tchar[] fieldName,\r \t\tFieldBinding[] fields,\r \t\tScope scope,\r \t\tObjectVector fieldsFound,\r \t\tObjectVector localsFound,\r \t\tboolean onlyStaticFields,\r \t\tReferenceBinding receiverType,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope,\r \t\tboolean implicitCall)", "signatureAfterChange": "\r \tprivate void findFields(\r \t\tchar[] fieldName,\r \t\tFieldBinding[] fields,\r \t\tScope scope,\r \t\tObjectVector fieldsFound,\r \t\tObjectVector localsFound,\r \t\tboolean onlyStaticFields,\r \t\tReferenceBinding receiverType,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope,\r \t\tboolean implicitCall)", "diff": ["-\t\t\t\r", "-\t\t\tif(receiverType != invocationScope.enclosingSourceType()){\r", "-\t\t\t\tprefixRequired = implicitCall && isEnclosed(receiverType,invocationScope.enclosingSourceType());\r", "-\t\t\t}\r", "+\t\t\t\t\tprefixRequired = true;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4aff45f929c5712a7fda1c508d5e67af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "2b9df464fe844bb540314d6f9bc7e8d8d047b8ca", "commitAfterChange": "fd2c6860f6050376aa1a89de4b3eabe6f6200d3f", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "\r \tprivate void findLocalMethods(\r \t\tchar[] methodName,\r \t\tTypeBinding[] argTypes,\r \t\tMethodBinding[] methods,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tReferenceBinding receiverType,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope,\r \t\tboolean implicitCall)", "signatureAfterChange": "\r \tprivate void findLocalMethods(\r \t\tchar[] methodName,\r \t\tTypeBinding[] argTypes,\r \t\tMethodBinding[] methods,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tReferenceBinding receiverType,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope,\r \t\tboolean implicitCall)", "diff": ["-\t\t\tif(receiverType != invocationScope.enclosingSourceType()){\r", "-\t\t\t\tprefixRequired = implicitCall && isEnclosed(receiverType,invocationScope.enclosingSourceType());\r", "-\t\t\t}\r", "-\t\t\t\r", "+\t\t\t\t\tprefixRequired = true;\r"]}], "num": 30163}