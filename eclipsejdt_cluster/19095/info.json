{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d2d1f5b5948596057b4aa0d80d0360ca", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74029a130d66cb4223c7349f9189e465", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "616e0cc4b1bc013d67f08c19f7ad98694e8af3c9", "commitAfterChange": "fe30c0f08ddab5b80fae1b7726ce1fae05bb7c1e", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " \tpublic boolean visit(Argument argument, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(Argument argument, BlockScope scope)", "diff": ["-\t\t/*", "-\t\t * Print the argument name", "-\t\t */\t", "-\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameIdentifier, true);", "+\t\tif (argument.isVarArgs) {", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameELLIPSIS, this.preferences.insert_space_before_ellipsis);", "+\t\t\tif (this.preferences.insert_space_after_ellipsis) {", "+\t\t\t\tthis.scribe.space();", "+\t\t\t}", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameIdentifier, false);", "+\t\t} else {", "+\t\t\t/*", "+\t\t\t * Print the argument name", "+\t\t\t */\t", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameIdentifier, true);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f88d8d69f8dc10c811e95d83f8b1b3d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor2.java", "commitBeforeChange": "c9b530e01318c4f59e9e7828de1da4c97f8fe89e", "commitAfterChange": "69656daba7331091b482d7c6b3e675c144730396", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": "  \tpublic boolean visit(SingleVariableDeclaration node)", "signatureAfterChange": "  \tpublic boolean visit(SingleVariableDeclaration node)", "diff": ["-\t\t// single field declaration", "-\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameIdentifier, true);", "+\t\tif (node.isVarargs()) {", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameELLIPSIS, this.preferences.insert_space_before_ellipsis);", "+\t\t\tif (this.preferences.insert_space_after_ellipsis) {", "+\t\t\t\tthis.scribe.space();", "+\t\t\t}", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameIdentifier, false);", "+\t\t} else {", "+\t\t\t/*", "+\t\t\t * Print the argument name", "+\t\t\t */\t", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameIdentifier, true);", "+\t\t}", "+\t\t"]}], "num": 19095}