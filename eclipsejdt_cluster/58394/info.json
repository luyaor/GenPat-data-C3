{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "323456a902657163b8d444f8c86a75eb", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ab08234a7cf4db6094e1f463fabed06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "2e45e13022b2a9411380e4e0b6133d9f38ca8be4", "commitAfterChange": "d11ec20c5ee631d9416842868616675440352aca", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " private void buildForProject(JavaProject project, ArrayList potentialSubtypes, org.eclipse.jdt.core.ICompilationUnit[] workingCopies, HashSet localTypes, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " private void buildForProject(JavaProject project, ArrayList potentialSubtypes, org.eclipse.jdt.core.ICompilationUnit[] workingCopies, HashSet localTypes, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\t\tchar[] fullyQualifiedName = focusType.getFullyQualifiedName().toCharArray();", "-\t\t\t\tif (!inProjectOfFocusType && searchableEnvironment.findType(CharOperation.splitOn('.', fullyQualifiedName)) == null) {", "-\t\t\t\t\t// focus type is not visible in this project: no need to go further", "-\t\t\t\t\treturn;", "+\t\t\t\tif (!inProjectOfFocusType) {", "+\t\t\t\t\tchar[] typeQualifiedName = focusType.getTypeQualifiedName('.').toCharArray();", "+\t\t\t\t\tString[] packageName = ((PackageFragment) focusType.getPackageFragment()).names;", "+\t\t\t\t\tif (searchableEnvironment.findType(typeQualifiedName, Util.toCharArrays(packageName)) == null) {", "+\t\t\t\t\t\t// focus type is not visible in this project: no need to go further", "+\t\t\t\t\t\treturn;", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f654d8bf8bd0d23aa1c8d75ce296ce52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "7fa614421be752542e93fc8394ff005421401e06", "commitAfterChange": "8c40adfe15c680e040fa4c1f51e65e6986081149", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " private void reportHierarchy()", "signatureAfterChange": " private void reportHierarchy(IType focus, CompilationUnitDeclaration parsedUnit, BinaryTypeBinding binaryTypeBinding)", "diff": ["-private void reportHierarchy() {", "+private void reportHierarchy(IType focus, CompilationUnitDeclaration parsedUnit, BinaryTypeBinding binaryTypeBinding) {", "-\tIType focus = this.requestor.getType();", "-\t\tMember declaringMember = ((Member)focus).getOuterMostLocalContext();", "-\t\tif (declaringMember == null) {", "-\t\t\t// top level or member type", "-\t\t\tchar[] fullyQualifiedName = focus.getFullyQualifiedName().toCharArray();", "-\t\t\tsetFocusType(CharOperation.splitOn('.', fullyQualifiedName));", "+\t\tif (binaryTypeBinding != null) {", "+\t\t\t// binary type", "+\t\t\tthis.focusType = binaryTypeBinding;", "+\t\t} else {", "+\t\t\t// source type", "+\t\t\tMember declaringMember = ((Member)focus).getOuterMostLocalContext();", "+\t\t\tif (declaringMember == null) {", "+\t\t\t\t// top level or member type", "+\t\t\t\tchar[] fullyQualifiedName = focus.getFullyQualifiedName().toCharArray();", "+\t\t\t\tsetFocusType(CharOperation.splitOn('.', fullyQualifiedName));", "+\t\t\t} else {", "+\t\t\t\t// anonymous or local type", "+\t\t\t\tif (parsedUnit != null) {", "+\t\t\t\t\tTypeDeclaration typeDecl = new AstNodeFinder(parsedUnit).findType(focus);", "+\t\t\t\t\tif (typeDecl != null) {", "+\t\t\t\t\t\tthis.focusType = typeDecl.binding;", "+\t\t\t\t\t}", "+\t\t\t\t} ", "+\t\t\t}"]}], "num": 58394}