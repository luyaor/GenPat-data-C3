{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0196cae6668b40dd1c68368ebae364ae", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "551c6b559e35dfc6e53c4019856440fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor2.java", "commitBeforeChange": "a744e65ca211ca7be2dd3830d1bd4009b273df27", "commitAfterChange": "c95e24ef2e4bfa2139fbca3e3b2078e40695cacf", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 54, "signatureBeforeChange": "  \tpublic boolean visit(InfixExpression node)", "signatureAfterChange": "  \tpublic boolean visit(InfixExpression node)", "diff": ["+\t\t\t\t\tif (this.scribe.lastNumberOfNewLines == 1) {", "+\t\t\t\t\t\tif (binaryExpressionAlignment.couldBreak() && binaryExpressionAlignment.wasSplit) {", "+\t\t\t\t\t\t\tbinaryExpressionAlignment.performFragmentEffect();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98c31258fa0be09af86700dee11e3a4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "2b899d5709db9c6865f7da76d74928892a056b7b", "commitAfterChange": "1cce623392dc2abad468b342ade5233f38d20f6c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic void analyseCode( \t\tClassScope classScope, \t\tInitializationFlowContext initializerFlowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": " \t \tpublic void analyseCode( \t\tClassScope classScope, \t\tInitializationFlowContext initializerFlowContext, \t\tFlowInfo flowInfo)", "diff": ["+\t\t\t", "+\t\t// check constructor recursion, once all constructor got resolved", "+\t\tif (isRecursive(null /*lazy initialized visited list*/)) {\t\t\t\t", "+\t\t\tthis.scope.problemReporter().recursiveConstructorInvocation(this.constructorCall);", "+\t\t}", "+\t\t\t"]}], "num": 3175}