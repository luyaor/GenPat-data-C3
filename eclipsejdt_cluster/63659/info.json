{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9caffd935a621ed8683cdda05a84d923", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e80e29978d5aa7f10f3dcf4f38e52c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic MethodBinding findDefaultAbstractMethod( \t\tReferenceBinding receiverType,  \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite, \t\tReferenceBinding classHierarchyStart, \t\tMethodBinding matchingMethod, \t\tObjectVector found)", "signatureAfterChange": " \tpublic MethodBinding findDefaultAbstractMethod( \t\tReferenceBinding receiverType,  \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite, \t\tReferenceBinding classHierarchyStart, \t\tMethodBinding matchingMethod, \t\tObjectVector found)", "diff": ["+\t\tMethodBinding problemMethod = null;", "-\t\t\tif (areParametersAssignable(methodBinding.parameters, argumentTypes))", "-\t\t\t\tcandidates[candidatesCount++] = methodBinding;", "+\t\t\tMethodBinding compatibleMethod = computeCompatibleMethod(methodBinding, argumentTypes, invocationSite);", "+\t\t\tif (compatibleMethod != null) {", "+\t\t\t\tif (compatibleMethod.isValidBinding())", "+\t\t\t\t\tcandidates[candidatesCount++] = compatibleMethod;", "+\t\t\t\telse if (problemMethod == null)", "+\t\t\t\t\tproblemMethod = compatibleMethod;", "+\t\t\t}", "+", "+\t\t\tif (problemMethod != null) return problemMethod;", "-\t\treturn mostSpecificInterfaceMethodBinding(candidates, candidatesCount);", "+\t\treturn mostSpecificInterfaceMethodBinding(candidates, candidatesCount, invocationSite);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa32102f444d4dbe7b349474ce57b811", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetScope.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public MethodBinding findMethod( \tReferenceBinding receiverType, \tchar[] selector, \tTypeBinding[] argumentTypes, \tInvocationSite invocationSite)", "signatureAfterChange": " public MethodBinding findMethod( \tReferenceBinding receiverType, \tchar[] selector, \tTypeBinding[] argumentTypes, \tInvocationSite invocationSite)", "diff": ["-\t\t\tif (areParametersAssignable(methodBinding.parameters, argumentTypes))", "-\t\t\t\tcandidates[candidatesCount++] = methodBinding;", "+\t\t\tMethodBinding compatibleMethod = computeCompatibleMethod(methodBinding, argumentTypes, invocationSite);", "+\t\t\tif (compatibleMethod != null)", "+\t\t\t\tcandidates[candidatesCount++] = compatibleMethod;", "-\t\t\treturn mostSpecificClassMethodBinding(candidates, visiblesCount);", "+\t\t\treturn mostSpecificClassMethodBinding(candidates, visiblesCount, invocationSite);", "-\t\t\treturn mostSpecificInterfaceMethodBinding(candidates, visiblesCount);", "+\t\t\treturn mostSpecificInterfaceMethodBinding(candidates, visiblesCount, invocationSite);"]}], "num": 63659}