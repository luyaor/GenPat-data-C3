{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "54fb59ea8c3592d60f4cbfd2780bc88b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbc14b4cbde80856e330e92d9e641133", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/InternalSearchPattern.java", "commitBeforeChange": "d7573375da034a8df526c16250d3442a649a1b32", "commitAfterChange": "6133d9195a7868877f17c34f487b8a2dc67fa75b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tvoid findIndexMatches(Index index, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor monitor) throws IOException", "signatureAfterChange": " \tvoid findIndexMatches(Index index, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor monitor) throws IOException", "diff": ["+\t\t\tchar separator = index.separator;", "-\t\t\t\t\t\tacceptMatch(names[j], containerPath, decodedResult, requestor, participant, scope);", "+\t\t\t\t\t\tacceptMatch(names[j], containerPath, separator, decodedResult, requestor, participant, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f649b2c47a52603f7aaf1caff582524f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/IntersectingPattern.java", "commitBeforeChange": "d7573375da034a8df526c16250d3442a649a1b32", "commitAfterChange": "6133d9195a7868877f17c34f487b8a2dc67fa75b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void findIndexMatches(Index index, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor progressMonitor) throws IOException", "signatureAfterChange": " public void findIndexMatches(Index index, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor progressMonitor) throws IOException", "diff": ["+\tchar separator = index.separator;", "-\t\t\t((InternalSearchPattern) this).acceptMatch((String) names[i], containerPath, null/*no pattern*/, requestor, participant, scope); // AndPatterns cannot provide the decoded result", "+\t\t\t((InternalSearchPattern) this).acceptMatch((String) names[i], containerPath, separator, null/*no pattern*/, requestor, participant, scope); // AndPatterns cannot provide the decoded result"]}], "num": 56175}