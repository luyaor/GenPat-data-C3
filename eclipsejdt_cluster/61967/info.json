{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6bf206b056363b21d6c0e9af332c9ae9", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "197d3492e1e5fc4d270075f33b0a785e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "fa03066adafb6dfcee086c905bf4f1ebcb1e5e9b", "commitAfterChange": "e8743e058a713296ad6f810f3473ad0820265b39", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tprotected IVariableBinding getVariableBinding(org.eclipse.jdt.internal.compiler.lookup.VariableBinding variableBinding)", "signatureAfterChange": " \tprotected IVariableBinding getVariableBinding(org.eclipse.jdt.internal.compiler.lookup.VariableBinding variableBinding)", "diff": ["-\t\t\t\t\t\t\tif (variableBinding != null) {", "-\t\t\t\t\t\t\t\tFieldBinding exactBinding = declaringClass.getField(problemFieldBinding.name);", "-\t\t\t\t\t\t\t\tif (exactBinding != null) {", "-\t\t\t\t\t\t\t\t\tIVariableBinding variableBinding2 = (IVariableBinding) this.compilerBindingsToASTBindings.get(exactBinding);", "-\t\t\t\t\t\t\t\t\tif (variableBinding2 != null) {", "-\t\t\t\t\t\t\t\t\t\treturn variableBinding2;", "-\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\tvariableBinding2 = new VariableBinding(this, exactBinding);", "-\t\t\t\t\t\t\t\t\tthis.compilerBindingsToASTBindings.put(exactBinding, variableBinding2);", "+\t\t\t\t\t\t\tFieldBinding exactBinding = declaringClass.getField(problemFieldBinding.name);", "+\t\t\t\t\t\t\tif (exactBinding != null) {", "+\t\t\t\t\t\t\t\tIVariableBinding variableBinding2 = (IVariableBinding) this.compilerBindingsToASTBindings.get(exactBinding);", "+\t\t\t\t\t\t\t\tif (variableBinding2 != null) {", "+\t\t\t\t\t\t\t\tvariableBinding2 = new VariableBinding(this, exactBinding);", "+\t\t\t\t\t\t\t\tthis.compilerBindingsToASTBindings.put(exactBinding, variableBinding2);", "+\t\t\t\t\t\t\t\treturn variableBinding2;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "284e0ac5eb11fb08cb3272841718da2e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "93444b7671b763598022452cafbe29143ff8c004", "commitAfterChange": "b9dd40f151f099ea02bdb585a636b0e4d30a3aca", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tsynchronized IBinding resolveName(Name name)", "signatureAfterChange": " \tsynchronized IBinding resolveName(Name name)", "diff": ["-\t\t\t\t\t\t\t\tcase ProblemReasons.NotVisible : ", "+\t\t\t\t\t\t\t\tcase ProblemReasons.NotVisible :", "-\t\t\t\t\treturn this.getVariableBinding(qualifiedNameReference.otherBindings[index - indexOfFirstFieldBinding - 1]);\t\t\t\t", "+\t\t\t\t\treturn this.getVariableBinding(qualifiedNameReference.otherBindings[index - indexOfFirstFieldBinding - 1]);", "-\t\t\t\t\t\treturn this.getVariableBinding((org.eclipse.jdt.internal.compiler.lookup.FieldBinding)binding);\t\t\t\t\t\t", "+\t\t\t\t\t\treturn this.getVariableBinding((org.eclipse.jdt.internal.compiler.lookup.FieldBinding)binding);", "-\t\t\t\t\t\treturn this.getMethodBinding((org.eclipse.jdt.internal.compiler.lookup.MethodBinding)binding);\t\t\t\t\t\t", "+\t\t\t\t\t\treturn this.getMethodBinding((org.eclipse.jdt.internal.compiler.lookup.MethodBinding)binding);", "-\t\t\tif (methodDeclaration != null) {", "-\t\t\t\tIMethodBinding methodBinding = this.getMethodBinding(methodDeclaration.binding);", "-\t\t\t\tif (methodBinding != null) {", "-\t\t\t\t\treturn methodBinding;", "-\t\t\t\t}", "+\t\t\tIMethodBinding methodBinding = this.getMethodBinding(methodDeclaration.binding);", "+\t\t\tif (methodBinding != null) {", "+\t\t\t\treturn methodBinding;", "-\t\t\t\t\t\treturn this.getVariableBinding((org.eclipse.jdt.internal.compiler.lookup.VariableBinding) binding);\t\t\t\t", "+\t\t\t\t\t\treturn this.getVariableBinding((org.eclipse.jdt.internal.compiler.lookup.VariableBinding) binding);", "-\t\t\t\t\t\t\t\tcase ProblemReasons.NotVisible : ", "+\t\t\t\t\t\t\t\tcase ProblemReasons.NotVisible :", "-\t \t\t\t}\t\t\t\t", "+\t \t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35d1130bd921649503e28fcde87e5fa0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "2a01994b0addf3b51b8cc85382b32cfdc277de6c", "commitAfterChange": "03bf58276587a73704c9ef865d4a7b548edf18f3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r public void search(IWorkspace workspace, ISearchPattern searchPattern, IJavaSearchScope scope, IJavaSearchResultCollector resultCollector) throws JavaModelException", "signatureAfterChange": "\r public void search(IWorkspace workspace, ISearchPattern searchPattern, IJavaSearchScope scope, IJavaSearchResultCollector resultCollector) throws JavaModelException", "diff": ["-\t\tif (indexManager != null) {\r", "-\t\t\tindexManager.performConcurrentJob(\r", "-\t\t\t\tnew PatternSearchJob(\r", "-\t\t\t\t\t(SearchPattern)searchPattern, \r", "-\t\t\t\t\tscope, \r", "-\t\t\t\t\tdetailLevel, \r", "-\t\t\t\t\tpathCollector, \r", "-\t\t\t\t\tindexManager),\r", "-\t\t\t\tIJavaSearchConstants.WAIT_UNTIL_READY_TO_SEARCH,\r", "-\t\t\t\tprogressMonitor);\r", "-\t\t\tif (progressMonitor != null) {\r", "-\t\t\t\tprogressMonitor.worked(5);\r", "-\t\t\t}\r", "-\t\t\t\t\r", "-\t\t\t/* eliminating false matches and locating them */\r", "-\t\t\tif (progressMonitor != null && progressMonitor.isCanceled()) throw new OperationCanceledException();\r", "-\t\t\tmatchLocator.locateMatches(pathCollector.getPaths(), workspace);\r", "+\t\tindexManager.performConcurrentJob(\r", "+\t\t\tnew PatternSearchJob(\r", "+\t\t\t\t(SearchPattern)searchPattern, \r", "+\t\t\t\tscope, \r", "+\t\t\t\tdetailLevel, \r", "+\t\t\t\tpathCollector, \r", "+\t\t\t\tindexManager),\r", "+\t\t\tIJavaSearchConstants.WAIT_UNTIL_READY_TO_SEARCH,\r", "+\t\t\tprogressMonitor);\r", "+\r", "+\t\tif (progressMonitor != null) {\r", "+\t\t\tprogressMonitor.worked(5);\r", "+\t\t\t\r", "+\t\t/* eliminating false matches and locating them */\r", "+\t\tif (progressMonitor != null && progressMonitor.isCanceled()) throw new OperationCanceledException();\r", "+\t\tmatchLocator.locateMatches(pathCollector.getPaths(), workspace);\r", "+\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b001b5fae2f851a0376a3a565b53c2a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeNamesCollector.java", "commitBeforeChange": "2a01994b0addf3b51b8cc85382b32cfdc277de6c", "commitAfterChange": "03bf58276587a73704c9ef865d4a7b548edf18f3", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "\r \r private String[] getPathsOfDeclaringType()", "signatureAfterChange": "\r \r private String[] getPathsOfDeclaringType()", "diff": ["-\t\tif (indexManager != null) {\r", "-\t\t\tindexManager.performConcurrentJob(\r", "-\t\t\t\tnew PatternSearchJob(\r", "-\t\t\t\t\tsearchPattern, \r", "-\t\t\t\t\tscope, \r", "-\t\t\t\t\tdetailLevel, \r", "-\t\t\t\t\tsearchRequestor, \r", "-\t\t\t\t\tindexManager),\r", "-\t\t\t\tIJavaSearchConstants.WAIT_UNTIL_READY_TO_SEARCH,\r", "-\t\t\t\tprogressMonitor);\r", "-\t\t\treturn pathCollector.getPaths();\r", "-\t\t}\r", "+\r", "+\t\tindexManager.performConcurrentJob(\r", "+\t\t\tnew PatternSearchJob(\r", "+\t\t\t\tsearchPattern, \r", "+\t\t\t\tscope, \r", "+\t\t\t\tdetailLevel, \r", "+\t\t\t\tsearchRequestor, \r", "+\t\t\t\tindexManager),\r", "+\t\t\tIJavaSearchConstants.WAIT_UNTIL_READY_TO_SEARCH,\r", "+\t\t\tprogressMonitor);\r", "+\t\treturn pathCollector.getPaths();\r", "+\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f6787ce0c3fc14ac7cffde8017b8995", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/VerifyTests.java", "commitBeforeChange": "5f4d09d81cc02220ed58c513d25ed70f79b83bf4", "commitAfterChange": "072ed84b1d5aa2452474d0d47d66f9e4152c2f56", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic synchronized Class loadClass(String name, boolean resolve) \t\tthrows ClassNotFoundException", "signatureAfterChange": " \tpublic synchronized Class loadClass(String name, boolean resolve) \t\tthrows ClassNotFoundException", "diff": ["-\t\tif (c == null) {", "-\t\t\tFile file= locate(name);", "-\t\t\tif (file == null)", "-\t\t\t\tthrow new ClassNotFoundException();", "-\t\t\tbyte data[]= loadClassData(file);", "-\t\t\tc= defineClass(name, data, 0, data.length);", "-\t\t}", "+\t\tFile file= locate(name);", "+\t\tif (file == null)", "+\t\t\tthrow new ClassNotFoundException();", "+\t\tbyte data[]= loadClassData(file);", "+\t\tc= defineClass(name, data, 0, data.length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a81d7d8696ac307ab2113379790cb477", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "8fe834cb8f4336c4e03a0aec8b6e7a981a1d317c", "commitAfterChange": "cd405a8db634596f85cfafeafe4d4ea561cbd638", "methodNumberBeforeChange": 168, "methodNumberAfterChange": 168, "signatureBeforeChange": " \tpublic void saving(ISaveContext context) throws CoreException", "signatureAfterChange": " \tpublic void saving(ISaveContext context) throws CoreException", "diff": ["-\t\tif (values != null) {", "-\t\t\tIterator iterator = values.iterator();", "-\t\t\twhile (iterator.hasNext()) {", "-\t\t\t\ttry {", "-\t\t\t\t\tPerProjectInfo info = (PerProjectInfo) iterator.next();", "-\t\t\t\t\tsaveState(info, context);", "-\t\t\t\t\tinfo.rememberExternalLibTimestamps();", "-\t\t\t\t} catch (CoreException e) {", "-\t\t\t\t\tif (vStats == null)", "-\t\t\t\t\t\tvStats= new ArrayList();", "-\t\t\t\t\tvStats.add(e.getStatus());", "-\t\t\t\t}", "+\t\tIterator iterator = values.iterator();", "+\t\twhile (iterator.hasNext()) {", "+\t\t\ttry {", "+\t\t\t\tPerProjectInfo info = (PerProjectInfo) iterator.next();", "+\t\t\t\tsaveState(info, context);", "+\t\t\t\tinfo.rememberExternalLibTimestamps();", "+\t\t\t} catch (CoreException e) {", "+\t\t\t\tif (vStats == null)", "+\t\t\t\t\tvStats= new ArrayList();", "+\t\t\t\tvStats.add(e.getStatus());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec99740f489041c3251f0a8ccbe8b4d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "93444b7671b763598022452cafbe29143ff8c004", "commitAfterChange": "b9dd40f151f099ea02bdb585a636b0e4d30a3aca", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \t \tsynchronized ITypeBinding resolveTypeBindingForName(Name name)", "signatureAfterChange": "  \tsynchronized ITypeBinding resolveTypeBindingForName(Name name)", "diff": ["-\t", "+", "-\t\t\tif (methodDeclaration != null) {", "-\t\t\t\tIMethodBinding method = this.getMethodBinding(methodDeclaration.binding);", "-\t\t\t\tif (method == null) return null;", "-\t\t\t\treturn method.getReturnType();", "-\t\t\t}", "+\t\t\tIMethodBinding method = this.getMethodBinding(methodDeclaration.binding);", "+\t\t\tif (method == null) return null;", "+\t\t\treturn method.getReturnType();", "-\t}\t", "+\t}"]}], "num": 61967}