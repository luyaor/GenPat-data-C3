{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d4708a22656f655eec4afd6b69b3e393", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a25c840b2df08cdb249c5ce4b13033a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "66f0e8b8112bb13bbbf568db765302c9834a0001", "commitAfterChange": "8173bc34d19a76799af83a37be998ec65b3a1874", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   \tprivate void disassemble(IStackMapTableAttribute attribute, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "signatureAfterChange": "  \tprivate String disassemble(IVerificationTypeInfo[] infos, String lineSeparator, int tabNumber, int mode)", "diff": ["-", "-\tprivate void disassemble(IStackMapTableAttribute attribute, StringBuffer buffer, String lineSeparator, int tabNumber, int mode) {", "-\t\twriteNewLine(buffer, lineSeparator, tabNumber + 1);", "-\t\tint numberOfEntries = attribute.getNumberOfEntries();", "-\t\tbuffer.append(Messages.bind(Messages.disassembler_stackmaptableattributeheader, Integer.toString(numberOfEntries)));", "-\t\tif (numberOfEntries != 0) {", "-\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 2);", "-\t\t\tfinal IStackMapFrame[] stackMapFrames = attribute.getStackMapFrame();", "-\t\t\tfor (int i = 0; i < numberOfEntries; i++) {", "-\t\t\t\tdisassemble(stackMapFrames[i], buffer, lineSeparator, tabNumber + 2, mode);", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f67b9fbd4cef60cd9e418dc827f1b73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "900392dc83f32684036212f916a5915ba3721662", "commitAfterChange": "adfa6eea97da9a8b8e860dcf2bcb64f1459b7350", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   \tprivate void disassemble(StackMapTableAttribute attribute, StringBuffer buffer, String lineSeparator, int tabNumber)", "signatureAfterChange": "   \tprivate void disassemble(IStackMapTableAttribute attribute, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "diff": ["-\tprivate void disassemble(StackMapTableAttribute attribute, StringBuffer buffer, String lineSeparator, int tabNumber) {", "+\tprivate void disassemble(IStackMapTableAttribute attribute, StringBuffer buffer, String lineSeparator, int tabNumber, int mode) {", "-\t\tbuffer.append(Messages.bind(Messages.disassembler_stackmaptableattributeheader,", "-\t\t\tnew String[] {", "-\t\t\t\tLong.toString(attribute.getAttributeLength()),", "-\t\t\t\tgetBytesAsString(attribute.getBytes(), lineSeparator, tabNumber)", "-\t\t\t}));", "+\t\tint numberOfEntries = attribute.getNumberOfEntries();", "+\t\tbuffer.append(Messages.bind(Messages.disassembler_stackmaptableattributeheader, Integer.toString(numberOfEntries)));", "+\t\tif (numberOfEntries != 0) {", "+\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 2);", "+\t\t\tfinal IStackMapFrame[] stackMapFrames = attribute.getStackMapFrame();", "+\t\t\tfor (int i = 0; i < numberOfEntries; i++) {", "+\t\t\t\tdisassemble(stackMapFrames[i], buffer, lineSeparator, tabNumber + 2, mode);", "+\t\t\t}", "+\t\t}"]}], "num": 42850}