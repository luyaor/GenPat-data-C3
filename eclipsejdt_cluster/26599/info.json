{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b9a32f7eb31e200832be97141ca90aed", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3572c223f99835fe69a285778eee1e8b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "670c7c942285af991247a6c3c0ef1114124960d2", "commitAfterChange": "c992fe270693288c9e38f212c5d2c8ee630d1930", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\t\t\t\t\tif (subRoutineStartLabel != null) {", "-\t\t\t\t\t\t\tif (!catchExits[i] && preserveCurrentHandler) {", "-\t\t\t\t\t\t\t\trequiresNaturalJsr = !nonReturningSubRoutine;", "-\t\t\t\t\t\t\t\tcodeStream.goto_(endLabel);", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tif (!catchExits[i] && preserveCurrentHandler) {", "-\t\t\t\t\t\t\tif (nonReturningSubRoutine) {", "-\t\t\t\t\t\t\t\tcodeStream.goto_(subRoutineStartLabel);", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\trequiresNaturalJsr = true;", "-\t\t\t\t\t\t\t\tcodeStream.goto_(endLabel);", "-\t\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tif (!catchExits[i] && preserveCurrentHandler) {", "+\t\t\t\t\t\tif (nonReturningSubRoutine) {", "+\t\t\t\t\t\t\tcodeStream.goto_(subRoutineStartLabel);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\trequiresNaturalJsr = true;", "+\t\t\t\t\t\t\tcodeStream.goto_(endLabel);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d59667d6ea90f84bd84f5b174f5f9a0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "628e9c4648e198faf112f84ab4f79974c542dba4", "commitAfterChange": "a5c3db41a58c8521d5f8f73e141ab57108cd47bc", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tprivate void formatClassBodyDeclarations(AstNode[] nodes)", "signatureAfterChange": " \tprivate void formatClassBodyDeclarations(AstNode[] nodes)", "diff": ["-\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\tif (multiField.isStatic()) {", "-\t\t\t\t\t\t\t\tformat(multiField, this, null, isChunkStart);", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tformat(multiField, this, null, isChunkStart);", "-\t\t\t\t\t\t\t}\t\t\t\t\t", "+\t\t\t\t\t\t\tformat(multiField, this, null, isChunkStart);", "-\t\t\t\t\t\t\tif (initializer.isStatic()) {", "-\t\t\t\t\t\t\t\tinitializer.traverse(this, null);", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tinitializer.traverse(this, null);", "-\t\t\t\t\t\t\t}\t\t\t\t\t", "+\t\t\t\t\t\t\tinitializer.traverse(this, null);", "-\t\t\t\t\t\t\tif (field.isStatic()) {", "-\t\t\t\t\t\t\t\tformat(field, this, null, isChunkStart);", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tformat(field, this, null, isChunkStart);", "-\t\t\t\t\t\t\t}\t\t\t\t\t", "+\t\t\t\t\t\t\tformat(field, this, null, isChunkStart);", "+\t\t\t\t\t}", "+\t\t\t\t\tif (i != max - 1) {", "+\t\t\t\t\t\tthis.scribe.printNewLine();"]}], "num": 26599}