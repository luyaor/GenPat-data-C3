{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "392ae3c469991a0a4409efe2903179c9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28ec88c43a6df92eb708c65ba836142a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/Problem.java", "commitBeforeChange": "dade23c0ca1cb5b996dfae1d1cfc189d06d41a6f", "commitAfterChange": "b9f6281b56af6781d8bb8cc727077eb3dccaebba", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic Problem(String location, String message, IPath resourcePath)", "signatureAfterChange": " \t \tpublic Problem(String location, String message, IPath resourcePath, int start, int end, int categoryId)", "diff": ["-\tpublic Problem(String location, String message, IPath resourcePath){", "-\t\tthis(location, message, resourcePath, -1, -1);", "-\t}", "+\tpublic Problem(String location, String message, IPath resourcePath, int start, int end, int categoryId){", "+\t\tthis.categoryId = categoryId;", "+\t\tif (false && (start > 0 || end > 0) && categoryId <= 0) {", "+\t\t\tSystem.out.print(\"is categoryId properly set ? new Problem(\\\"\" + location + \"\\\", \\\"\" + message + \"\\\", \\\"\" + resourcePath + \"\\\"\");", "+\t\t\tSystem.out.print(\", \" + start + \", \" + end +  \", \" + categoryId);", "+\t\t\tSystem.out.println(\")\");", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4857b5df6483af2677f9d2b6b6799a2a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "d4b1799d68d9da7272b7b6470cdf87ffed026135", "commitAfterChange": "87e8af21b6459d4881cd0237a774f295946a026a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic void test013() throws JavaModelException, CoreException", "signatureAfterChange": " \tpublic void test013() throws JavaModelException, CoreException", "diff": ["+\t// TODO (frederic) put back assertions when failure on linux platform will be fixed", "-//\t\tString independentSource = org.eclipse.jdt.core.tests.util.Util.convertToIndependantLineDelimiter(source);", "+\t\tString independentSource = org.eclipse.jdt.core.tests.util.Util.convertToIndependantLineDelimiter(source);", "-\t\tassertSourceEquals(\"Encoded UTF-8 source should have been decoded the same way!\", source, encodedContents);", "+//\t\tassertSourceEquals(\"Encoded UTF-8 source should have been decoded the same way!\", source, encodedContents);", "+\t\tSystem.out.println(\"Encoding tests013:\");", "+\t\tSystem.out.println(\"  - file encoding: \"+this.utf8File.getCharset());", "+\t\tSystem.out.println(\"  - project encoding: \"+this.encodingProject.getDefaultCharset());", "+\t\tSystem.out.println(\"  - workspace encoding: \"+getWorkspaceRoot().getDefaultCharset());", "+\t\tif (encodedContents.equals(independentSource)) {", "+\t\t\tSystem.out.println(\"  => SUCCESS: sources are identical\");", "+\t\t} else {", "+//\t\t\tSystem.out.println(\"  => FAIL: Encoded UTF-8 source should have been decoded the same way!\");", "+\t\t}"]}], "num": 59093}