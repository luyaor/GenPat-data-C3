{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6eb39a04bb14a0eba765dff1d6d48ec5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ff8efdc4366f62b82bbdc1ef3ac1cfc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 191, "signatureBeforeChange": " \tpublic void _test0222_for()", "signatureAfterChange": " public void test0702_for()", "diff": ["-\t// TODO (maxime) fix", "-\tpublic void _test0222_for() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\"\t\t Object o = null;\\n\" + ", "-\t\t\t\t\"\t\t for (;o != null;) {/* */}\\n\" + ", "-\t\t\t\t  // complain: get o null first time and forever", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "-\t\t\t\"\tfor (;o != null;) {/* */}\\n\" + ", "-\t\t\t\"\t      ^\\n\" + ", "-\t\t\t\"The variable o can only be null; it was either set to null or checked for null when last used\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t);", "-\t}", "+// null analysis -- for", "+public void test0702_for() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\"    Object o = null;\\n\" + ", "+\t\t\t\"    for (;o != null;) {/* */}\\n\" + ", "+\t\t\t  // complain: get o null first time and forever", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\"\tfor (;o != null;) {/* */}\\n\" + ", "+\t\t\"\t      ^\\n\" + ", "+\t\t\"The variable o can only be null; it was either set to null or checked for null when last used\\n\" + ", "+\t\t\"----------\\n\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "299c93e4b7b9fb60287681b2443a0f49", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic void _test0021_conditional_expression()", "signatureAfterChange": " public void test0031_conditional_expression()", "diff": ["-\t// TODO (maxime) fix", "-\tpublic void _test0021_conditional_expression() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\"\t\t Object o = true ? null : new Object();\\n\" + ", "-\t\t\t\t\"\t\t o.toString();\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "-\t\t\t\"\to.toString();\\n\" + ", "-\t\t\t\"\t^\\n\" + ", "-\t\t\t\"The variable o can only be null; it was either set to null or checked for null when last used\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t);", "-\t}", "+// null analysis -- conditional expression", "+public void test0031_conditional_expression() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\"    Object o = true ? null : new Object();\\n\" + ", "+\t\t\t\"    o.toString();\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\"\to.toString();\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"The variable o can only be null; it was either set to null or checked for null when last used\\n\" + ", "+\t\t\"----------\\n\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a0b82735aa33d2a35b9e2d8f913731c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 200, "signatureBeforeChange": " \tpublic void _test0232_for()", "signatureAfterChange": " public void test0712_for()", "diff": ["-\t// TODO (maxime) fix", "-\tpublic void _test0232_for() {", "-\t\tif (COMPLIANCE_1_5.equals(this.complianceLevel)) {", "-\t\t\tthis.runNegativeTest(", "-\t\t\t\tnew String[] {", "-\t\t\t\t\t\"X.java\",", "-\t\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\t\"\t\t Iterable i = null;\\n\" + ", "-\t\t\t\t\t\"\t\t for (Object o : i) {/* */}\\n\" +", "-\t\t\t\t\t      // complain: NPE", "-\t\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\t\"}\\n\"},", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "-\t\t\t\t\"\tfor (Object o : i) {/* */}\\n\" + ", "-\t\t\t\t\"\t                ^\\n\" + ", "-\t\t\t\t\"The variable i can only be null; it was either set to null or checked for null when last used\\n\" + ", "-\t\t\t\t\"----------\\n\"", "-\t\t\t);", "-\t\t}", "-\t}", "+// null analysis -- for", "+public void test0712_for() {", "+\tif (COMPLIANCE_1_5.equals(this.complianceLevel)) {", "+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" + ", "+\t\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\t\"    Iterable i = null;\\n\" + ", "+\t\t\t\t\"    for (Object o : i) {/* */}\\n\" +", "+\t\t\t\t      // complain: NPE", "+\t\t\t\t\"  }\\n\" + ", "+\t\t\t\t\"}\\n\"},", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tfor (Object o : i) {/* */}\\n\" + ", "+\t\t\t\"\t                ^\\n\" + ", "+\t\t\t\"The variable i can only be null; it was either set to null or checked for null when last used\\n\" + ", "+\t\t\t\"----------\\n\");", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fa6f5cfd1345b5d503b8108d8cb2ffd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic void test0009_field_with_explicit_this_access()", "signatureAfterChange": " public void test0015_field_with_explicit_this_access()", "diff": ["+// null analysis -- field", "+public void test0015_field_with_explicit_this_access() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  Object o;\\n\" + ", "+\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\"    this.o = null;\\n\" + ", "+\t\t\t\"    o.toString();\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"\"", "+//      \"----------\\n\" + ", "+//      \"1. ERROR in X.java (at line 5)\\n\" + ", "+//      \"\to.toString();\\n\" + ", "+//      \"\t^\\n\" + ", "+//      \"The field o is likely null; it was either set to null or checked for null when last used\\n\" + ", "+//      \"----------\\n\"", "+\t);", "+}", "-\t// TODO (maxime) reset diagnostic once supported", "-\tpublic void test0009_field_with_explicit_this_access() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t Object o;\\n\" + ", "-\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\"\t\t this.o = null;\\n\" + ", "-\t\t\t\t\"\t\t o.toString();\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"\"", "-//\t\t\t\"----------\\n\" + ", "-//\t\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "-//\t\t\t\"\to.toString();\\n\" + ", "-//\t\t\t\"\t^\\n\" + ", "-//\t\t\t\"The field o is likely null; it was either set to null or checked for null when last used\\n\" + ", "-//\t\t\t\"----------\\n\"", "-\t\t);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "553f442d14daedfc6858113aa6fb8975", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tpublic void _test0020_conditional_expression()", "signatureAfterChange": " public void test0030_conditional_expression()", "diff": ["-\t// TODO (maxime) fix", "-\tpublic void _test0020_conditional_expression() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\"\t\t Object o = true ? null : null;\\n\" + ", "-\t\t\t\t\"\t\t o.toString();\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "-\t\t\t\"\to.toString();\\n\" + ", "-\t\t\t\"\t^\\n\" + ", "-\t\t\t\"The variable o can only be null; it was either set to null or checked for null when last used\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t);", "-\t}", "+// null analysis -- conditional expression", "+public void test0030_conditional_expression() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\"    Object o = true ? null : null;\\n\" + ", "+\t\t\t\"    o.toString();\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\"\to.toString();\\n\" + ", "+\t\t\"The variable o can only be null; it was either set to null or checked for null when last used\\n\" + ", "+\t\t\"----------\\n\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59d2e0cf77f16c2ac6abdcf43f9f1644", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic void test0008_field_with_explicit_this_access()", "signatureAfterChange": " public void test0014_field_with_explicit_this_access()", "diff": ["+// null analysis -- field", "+public void test0014_field_with_explicit_this_access() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  Object o;\\n\" + ", "+\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\"    o = null;\\n\" + ", "+\t\t\t\"    this.o.toString();\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+//      \"----------\\n\" + ", "+//      \"1. ERROR in X.java (at line 5)\\n\" + ", "+//      \"\tthis.o.toString();\\n\" + ", "+//      \"\t^^^^^^\\n\" + ", "+//      \"The field o is likely null; it was either set to null or checked for null when last used\\n\" + ", "+//      \"----------\\n\"", "+\t);", "+}", "-\t// TODO (maxime) reset diagnostic once supported", "-\tpublic void test0008_field_with_explicit_this_access() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t Object o;\\n\" + ", "-\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\"\t\t o = null;\\n\" + ", "-\t\t\t\t\"\t\t this.o.toString();\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"\"", "-//\t\t\t\"----------\\n\" + ", "-//\t\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "-//\t\t\t\"\tthis.o.toString();\\n\" + ", "-//\t\t\t\"\t^^^^^^\\n\" + ", "-//\t\t\t\"The field o is likely null; it was either set to null or checked for null when last used\\n\" + ", "-//\t\t\t\"----------\\n\"", "-\t\t);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cba6e14ea2678463691fc4ae38e9f2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 57, "signatureBeforeChange": " \tpublic void _test0066_method_call_invocation_target()", "signatureAfterChange": " public void test0066_method_call_invocation_target()", "diff": ["-\t// TODO (maxime) fix", "-\tpublic void _test0066_method_call_invocation_target() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\"\t\t Object o = new Object();\\n\" + ", "-\t\t\t\t\"\t\t (o = null).toString();\\n\" + // complain ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "-\t\t\t\"\t(o = null).toString();\\n\" + ", "-\t\t\t\"\t^^^^^^^^^^\\n\" + ", "-\t\t\t\"The variable o can only be null; it was either set to null or checked for null when last used\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t);", "-\t}\t\t", "+// null analysis - method call", "+public void test0066_method_call_invocation_target() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\"    Object o = new Object();\\n\" + ", "+\t\t\t\"    (o = null).toString();\\n\" + // complain ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\"\t(o = null).toString();\\n\" + ", "+\t\t\"\t^^^^^^^^^^\\n\" + ", "+\t\t\"The variable o can only be null; it was either set to null or checked for null when last used\\n\" + ", "+\t\t\"----------\\n\");", "+}   "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e4ee7e9eca2a478484bfef6a8405a1d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 190, "signatureBeforeChange": " \tpublic void _test0221_for()", "signatureAfterChange": " public void test0701_for()", "diff": ["-\t// TODO (maxime) fix", "-\tpublic void _test0221_for() {", "-\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\"\t\t Object o = null;\\n\" + ", "-\t\t\t\t\"\t\t for (;o.toString() != null;) {/* */}\\n\" +", "-\t\t\t\t      // complain: NPE", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "-\t\t\t\"\tfor (;o.toString() != null;) {/* */}\\n\" + ", "-\t\t\t\"\t      ^\\n\" + ", "-\t\t\t\"The variable o can only be null; it was either set to null or checked for null when last used\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t);", "-\t}", "+// null analysis -- for", "+public void test0701_for() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\"    Object o = null;\\n\" + ", "+\t\t\t\"    for (;o.toString() != null;) {/* */}\\n\" +", "+\t\t\t      // complain: NPE", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\"\tfor (;o.toString() != null;) {/* */}\\n\" + ", "+\t\t\"\t      ^\\n\" + ", "+\t\t\"The variable o can only be null; it was either set to null or checked for null when last used\\n\" + ", "+\t\t\"----------\\n\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88a2a715830b3c0a39748aa857ee9cc9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 104, "signatureBeforeChange": " \tpublic void _test0112_while()", "signatureAfterChange": " public void test0402_while()", "diff": ["-\t// TODO (maxime) fix", "-\tpublic void _test0112_while() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\"\t\t Object o = null;\\n\" + ", "-\t\t\t\t\"\t\t while (o != null) {/* */}\\n\" + ", "-\t\t\t\t  // complain: get o null first time and forever", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "-\t\t\t\"\twhile (o != null) {/* */}\\n\" + ", "-\t\t\t\"\t       ^\\n\" + ", "-\t\t\t\"The variable o can only be null; it was either set to null or checked for null when last used\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t);", "-\t}", "+// null analysis -- while", "+public void test0402_while() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\"    Object o = null;\\n\" + ", "+\t\t\t\"    while (o != null) {/* */}\\n\" + ", "+\t\t\t  // complain: get o null first time and forever", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\"\twhile (o != null) {/* */}\\n\" + ", "+\t\t\"\t       ^\\n\" + ", "+\t\t\"The variable o can only be null; it was either set to null or checked for null when last used\\n\" + ", "+\t\t\"----------\\n\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3f345d76b1faaa014d3df1fd99f588c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic void _test0023_conditional_expression()", "signatureAfterChange": " public void test0033_conditional_expression()", "diff": ["-\t// TODO (maxime) fix", "-\tpublic void _test0023_conditional_expression() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\"\t\t Object o = (1 == 1) ? null : new Object();\\n\" + ", "-\t\t\t\t\"\t\t o.toString();\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "-\t\t\t\"\to.toString();\\n\" + ", "-\t\t\t\"\t^\\n\" + ", "-\t\t\t\"The variable o can only be null; it was either set to null or checked for null when last used\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t);", "-\t}", "+// null analysis -- conditional expression", "+public void test0033_conditional_expression() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\"    Object o = (1 == 1) ? null : new Object();\\n\" + ", "+\t\t\t\"    o.toString();\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\"\to.toString();\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"The variable o can only be null; it was either set to null or checked for null when last used\\n\" + ", "+\t\t\"----------\\n\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9ea90c4430b24bca817d61a7bae7149", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic void test0012_field_of_enclosing_object()", "signatureAfterChange": " public void test0018_field_of_enclosing_object()", "diff": ["+// null analysis -- field", "+public void test0018_field_of_enclosing_object() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  Object o;\\n\" + ", "+\t\t\t\"  public class Y {\\n\" + ", "+\t\t\t\"    void foo() {\\n\" + ", "+\t\t\t\"      X.this.o = null;\\n\" + ", "+\t\t\t\"      X.this.o.toString();\\n\" + // complain", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"\"", "+//      \"----------\\n\" + ", "+//      \"1. ERROR in X.java (at line 6)\\n\" + ", "+//      \"\tX.this.o.toString();\\n\" + ", "+//      \"\t^^^^^^^^\\n\" + ", "+//      \"The field o is likely null; it was either set to null or checked for null when last used\\n\" + ", "+//      \"----------\\n\"", "+\t);", "+}", "-\t// TODO (maxime) reset diagnostic once supported", "-\tpublic void test0012_field_of_enclosing_object() {", "-\t\tthis.runNegativeTest(", "-\t\t\t\t\"\t Object o;\\n\" + ", "-\t\t\t\t\"  public class Y {\\n\" + ", "-\t\t\t\t\"\t   void foo() {\\n\" + ", "-\t\t\t\t\"\t\t   X.this.o = null;\\n\" + ", "-\t\t\t\t\"\t\t   X.this.o.toString();\\n\" + // complain", "-\t\t\t\t\"\t   }\\n\" + ", "-\t\t\t\"\"", "-//\t\t\t\"----------\\n\" + ", "-//\t\t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "-//\t\t\t\"\tX.this.o.toString();\\n\" + ", "-//\t\t\t\"\t^^^^^^^^\\n\" + ", "-//\t\t\t\"The field o is likely null; it was either set to null or checked for null when last used\\n\" + ", "-//\t\t\t\"----------\\n\"", "-\t\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac6bcd817abb29d4b0d863f927aff1af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 103, "signatureBeforeChange": " \tpublic void _test0111_while()", "signatureAfterChange": " public void test0401_while()", "diff": ["-\t// TODO (maxime) fix", "-\tpublic void _test0111_while() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\"\t\t Object o = null;\\n\" + ", "-\t\t\t\t\"\t\t while (o.toString() != null) {/* */}\\n\" +", "-\t\t\t\t      // complain: NPE", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "-\t\t\t\"\twhile (o.toString() != null) {/* */}\\n\" + ", "-\t\t\t\"\t       ^\\n\" + ", "-\t\t\t\"The variable o can only be null; it was either set to null or checked for null when last used\\n\" + ", "-\t\t\t\"----------\\n\"  ", "-\t\t);", "-\t}", "+// null analysis -- while", "+public void test0401_while() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\"    Object o = null;\\n\" + ", "+\t\t\t\"    while (o.toString() != null) {/* */}\\n\" +", "+\t\t\t      // complain: NPE", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\"\twhile (o.toString() != null) {/* */}\\n\" + ", "+\t\t\"\t       ^\\n\" + ", "+\t\t\"The variable o can only be null; it was either set to null or checked for null when last used\\n\" + ", "+\t\t\"----------\\n\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d49e474d61e358f99954465020809853", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 199, "signatureBeforeChange": " \tpublic void _test0231_for()", "signatureAfterChange": " public void test0711_for()", "diff": ["-\t// TODO (maxime) fix", "-\tpublic void _test0231_for() {", "-\t\tif (COMPLIANCE_1_5.equals(this.complianceLevel)) {", "-\t\t\tthis.runNegativeTest(", "-\t\t\t\tnew String[] {", "-\t\t\t\t\t\"X.java\",", "-\t\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\t\"\t\t Object t[] = null;\\n\" + ", "-\t\t\t\t\t\"\t\t for (Object o : t) {/* */}\\n\" +", "-\t\t\t\t\t      // complain: NPE", "-\t\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\t\"}\\n\"},", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "-\t\t\t\t\"\tfor (Object o : t) {/* */}\\n\" + ", "-\t\t\t\t\"\t                ^\\n\" + ", "-\t\t\t\t\"The variable t can only be null; it was either set to null or checked for null when last used\\n\" + ", "-\t\t\t\t\"----------\\n\"", "-\t\t\t);", "-\t\t}", "-\t}", "+// null analysis -- for", "+public void test0711_for() {", "+\tif (COMPLIANCE_1_5.equals(this.complianceLevel)) {", "+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" + ", "+\t\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\t\"    Object t[] = null;\\n\" + ", "+\t\t\t\t\"    for (Object o : t) {/* */}\\n\" +", "+\t\t\t\t      // complain: NPE", "+\t\t\t\t\"  }\\n\" + ", "+\t\t\t\t\"}\\n\"},", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tfor (Object o : t) {/* */}\\n\" + ", "+\t\t\t\"\t                ^\\n\" + ", "+\t\t\t\"The variable t can only be null; it was either set to null or checked for null when last used\\n\" + ", "+\t\t\t\"----------\\n\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1fb8542d86d303a636605a74432ea95", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 196, "signatureBeforeChange": " \tpublic void _test0228_for()", "signatureAfterChange": " public void test0708_for()", "diff": ["-\t// TODO (maxime) fix", "-\tpublic void _test0228_for() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t void foo(Object o) {\\n\" + ", "-\t\t\t\t\"\t\t for (;o == null; o.toString()) {\\n\" + ", "-\t\t\t\t\"\t\t }\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "-\t\t\t\"\tfor (;o == null; o.toString()) {\\n\" + ", "-\t\t\t\"\t                 ^\\n\" + ", "-\t\t\t\"The variable o can only be null; it was either set to null or checked for null when last used\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t);", "+// null analysis -- for", "+public void test0708_for() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  void foo(Object o) {\\n\" + ", "+\t\t\t\"    for (;o == null; o.toString()) {\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\"\tfor (;o == null; o.toString()) {\\n\" + ", "+\t\t\"\t                 ^\\n\" + ", "+\t\t\"The variable o can only be null; it was either set to null or checked for null when last used\\n\" + ", "+\t\t\"----------\\n\");", "+}"]}], "num": 68217}