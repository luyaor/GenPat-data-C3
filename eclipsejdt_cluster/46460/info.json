{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "028114f5f63a4dedcf6a9ac593180064", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5824324aa24e3cfea19684012fe207a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "ba74dc7a93e5bf80ccc6be3234ebe25167de5c99", "commitAfterChange": "d08effb073320a9ccb4faab2c54c467a507371be", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": " \t \tprivate BlockScope lookupScope(ASTNode node)", "signatureAfterChange": " \t \tprivate BlockScope lookupScope(ASTNode node)", "diff": ["-\t\t\tif (currentNode instanceof TypeDeclaration) {", "+\t\t\tif (currentNode instanceof TypeDeclaration", "+\t\t\t\t|| currentNode instanceof EnumDeclaration) {", "-\t\t\tif (currentNode instanceof TypeDeclaration) {", "+\t\t\tif (currentNode instanceof TypeDeclaration", "+\t\t\t\t\t|| currentNode instanceof EnumDeclaration) {", "-\t\t\t\t}", "-\t\t\t} else if (currentNode instanceof EnumDeclaration) {", "-\t\t\t\torg.eclipse.jdt.internal.compiler.ast.TypeDeclaration enumDecl = (org.eclipse.jdt.internal.compiler.ast.TypeDeclaration) this.ast.getBindingResolver().getCorrespondingNode(currentNode);", "-\t\t\t\tif ((fieldDeclaration.getModifiers() & Modifier.STATIC) != 0) {", "-\t\t\t\t\treturn enumDecl.staticInitializerScope;", "-\t\t\t\t} else {", "-\t\t\t\t\treturn enumDecl.initializerScope;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9733570db5179dcf853625fc0cdcfbb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "718efb00ce060fbf6d67daabb2cd0f9845ae9570", "commitAfterChange": "d5bb78582d4992003bc3f1aa67226d9e44bea956", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": " \t \tprivate BlockScope lookupScope(ASTNode node)", "signatureAfterChange": " \t \tprivate BlockScope lookupScope(ASTNode node)", "diff": ["-\t\t\t&& !(currentNode instanceof FieldDeclaration)) {", "+\t\t\t&& !(currentNode instanceof FieldDeclaration)", "+\t\t\t&& !(currentNode instanceof AbstractTypeDeclaration)) {", "-\t\t\tif (currentNode instanceof TypeDeclaration", "-\t\t\t\t\t|| currentNode instanceof EnumDeclaration", "-\t\t\t\t\t|| currentNode instanceof AnnotationTypeDeclaration) {", "+\t\t\tif (currentNode instanceof AbstractTypeDeclaration) {", "+\t\t} else if (currentNode instanceof AbstractTypeDeclaration) {", "+\t\t\torg.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDecl = (org.eclipse.jdt.internal.compiler.ast.TypeDeclaration) this.ast.getBindingResolver().getCorrespondingNode(currentNode);", "+\t\t\treturn typeDecl.initializerScope;"]}], "num": 46460}