{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "29db3026c7c41ec8a9d54f0efb4a72ce", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a64aaf4cc964c0c519036fcf14e8440", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "3fa437321fe88b141d60a98c3b39cea46c7fbc44", "commitAfterChange": "ac6a9f56760bba7aec9ca8548c00a789a95fdc11", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "\r \tpublic Object getLastBuiltState2(IProject project, IProgressMonitor monitor)", "signatureAfterChange": "\r \tpublic Object getLastBuiltState2(IProject project, IProgressMonitor monitor)", "diff": ["-//\t\tif (state == null && JavaBuilder.SAVE_ENABLED && !info.triedRead) {\r", "-//\t\t\tinfo.triedRead= true;\r", "-//\t\t\ttry {\r", "-//\t\t\t\tif (monitor != null) monitor.subTask(Util.bind(\"build.readStateProgress\"/*nonNLS*/, project.getName()));\r", "-//\t\t\t\tstate= readState(info);\r", "-//\t\t\t\tinfo.setLastBuiltState(state);\r", "-//\t\t\t} catch (CoreException e) {\r", "-//\t\t\t\te.printStackTrace();\r", "-//\t\t\t}\r", "-//\t\t}\r", "+\t\tif (state == null && !info.triedRead) {\r", "+\t\t\tinfo.triedRead= true;\r", "+\t\t\ttry {\r", "+\t\t\t\tif (monitor != null)\r", "+\t\t\t\t\tmonitor.subTask(Util.bind(\"build.readStateProgress\"/*nonNLS*/, project.getName()));\r", "+\t\t\t\tstate = readState2(project);\r", "+\t\t\t} catch (CoreException e) {\r", "+\t\t\t\te.printStackTrace();\r", "+\t\t\t}\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c70306089faec28b5f5e2e6789b75eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "325f3cd70524915aea7c5208cccbff17dcccc775", "commitAfterChange": "eaaeea046b340f91bd2146e38b8d80abded44679", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": " \tprivate IClasspathContainer initializeAllContainers(IJavaProject javaProjectToInit, IPath containerToInit) throws JavaModelException", "signatureAfterChange": " \tprivate IClasspathContainer initializeAllContainers(IJavaProject javaProjectToInit, IPath containerToInit) throws JavaModelException", "diff": ["-\t\t\t\t\t\tSet entrySet = allContainerPaths.entrySet();", "-\t\t\t\t\t\tint length = entrySet.size();", "-\t\t\t\t\t\tMap.Entry[] entries = new Map.Entry[length]; // clone as the following will have a side effect", "-\t\t\t\t\t\tentrySet.toArray(entries);", "-\t\t\t\t\t\tfor (int i = 0; i < length; i++) {", "-\t\t\t\t\t\t\tMap.Entry entry = entries[i];", "-\t\t\t\t\t\t\tIJavaProject javaProject = (IJavaProject) entry.getKey();", "-\t\t\t\t\t\t\tHashSet pathSet = (HashSet) entry.getValue();", "-\t\t\t\t\t\t\tif (pathSet == null) continue;", "-\t\t\t\t\t\t\tint length2 = pathSet.size();", "-\t\t\t\t\t\t\tIPath[] paths = new IPath[length2];", "-\t\t\t\t\t\t\tpathSet.toArray(paths); // clone as the following will have a side effect", "-\t\t\t\t\t\t\tfor (int j = 0; j < length2; j++) {", "-\t\t\t\t\t\t\t\tIPath path = paths[j];", "-\t\t\t\t\t\t\t\tinitializeContainer(javaProject, path);", "+\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\tSet entrySet = allContainerPaths.entrySet();", "+\t\t\t\t\t\t\tint length = entrySet.size();", "+\t\t\t\t\t\t\tif (monitor != null)", "+\t\t\t\t\t\t\t\tmonitor.beginTask(\"\", length); //$NON-NLS-1$", "+\t\t\t\t\t\t\tMap.Entry[] entries = new Map.Entry[length]; // clone as the following will have a side effect", "+\t\t\t\t\t\t\tentrySet.toArray(entries);", "+\t\t\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\t\t\tMap.Entry entry = entries[i];", "+\t\t\t\t\t\t\t\tIJavaProject javaProject = (IJavaProject) entry.getKey();", "+\t\t\t\t\t\t\t\tHashSet pathSet = (HashSet) entry.getValue();", "+\t\t\t\t\t\t\t\tif (pathSet == null) continue;", "+\t\t\t\t\t\t\t\tint length2 = pathSet.size();", "+\t\t\t\t\t\t\t\tIPath[] paths = new IPath[length2];", "+\t\t\t\t\t\t\t\tpathSet.toArray(paths); // clone as the following will have a side effect", "+\t\t\t\t\t\t\t\tfor (int j = 0; j < length2; j++) {", "+\t\t\t\t\t\t\t\t\tIPath path = paths[j];", "+\t\t\t\t\t\t\t\t\tinitializeContainer(javaProject, path);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tif (monitor != null)", "+\t\t\t\t\t\t\t\t\tmonitor.worked(1);", "+\t\t\t\t\t\t} finally {", "+\t\t\t\t\t\t\tif (monitor != null)", "+\t\t\t\t\t\t\t\tmonitor.done();", "+\t\t\tIProgressMonitor monitor = (IProgressMonitor) this.batchContainerInitializationsProgress.get();", "-\t\t\t\trunnable.run(null/*no progress available*/);", "+\t\t\t\trunnable.run(monitor);", "-\t\t\t\t\tnull/*no progress available here*/);", "+\t\t\t\t\tmonitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc1f50d98df4bbb95710d1b25c4bc43c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "325f3cd70524915aea7c5208cccbff17dcccc775", "commitAfterChange": "eaaeea046b340f91bd2146e38b8d80abded44679", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": "  \tIClasspathContainer initializeContainer(IJavaProject project, IPath containerPath) throws JavaModelException", "signatureAfterChange": "  \tIClasspathContainer initializeContainer(IJavaProject project, IPath containerPath) throws JavaModelException", "diff": ["+\t\t\t\tIProgressMonitor monitor = (IProgressMonitor) this.batchContainerInitializationsProgress.get();", "+\t\t\t\tif (monitor != null)", "+\t\t\t\t\tmonitor.subTask(Messages.bind(Messages.javamodel_configuring, initializer.getDescription(containerPath, project)));", "+\t\t\t\t", "+\t\t\t\tif (monitor != null)", "+\t\t\t\t\tmonitor.subTask(\"\"); //$NON-NLS-1$", "+\t\t\t\t"]}], "num": 29762}