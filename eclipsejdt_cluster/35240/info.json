{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "31b04d49fa1bf8142a9b75f681668efc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6d1e17dd9e4d653a3dca92d7a06ea70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CompilerInvocationTests.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void test012_compiler_problems_tuning()", "signatureAfterChange": " public void test012_compiler_problems_tuning()", "diff": ["+\t\texpectedProblemAttributes.put(\"NonNullFieldComparisonYieldsFalse\", new ProblemAttributes(JavaCore.COMPILER_PB_REDUNDANT_NULL_CHECK));", "+\t\texpectedProblemAttributes.put(\"NullFieldComparisonYieldsFalse\", new ProblemAttributes(JavaCore.COMPILER_PB_REDUNDANT_NULL_CHECK));", "+\t\texpectedProblemAttributes.put(\"NullFieldInstanceofYieldsFalse\", new ProblemAttributes(JavaCore.COMPILER_PB_REDUNDANT_NULL_CHECK));", "+\t\texpectedProblemAttributes.put(\"NullFieldReference\", new ProblemAttributes(JavaCore.COMPILER_PB_NULL_REFERENCE));", "+\t\texpectedProblemAttributes.put(\"PotentialNullFieldReference\", new ProblemAttributes(JavaCore.COMPILER_PB_POTENTIAL_NULL_REFERENCE));", "+\t\texpectedProblemAttributes.put(\"RedundantFieldNullAssignment\", new ProblemAttributes(JavaCore.COMPILER_PB_REDUNDANT_NULL_CHECK));", "+\t\texpectedProblemAttributes.put(\"RedundantNullCheckOnNonNullField\", new ProblemAttributes(JavaCore.COMPILER_PB_REDUNDANT_NULL_CHECK));", "+\t\texpectedProblemAttributes.put(\"RedundantNullCheckOnNullField\", new ProblemAttributes(JavaCore.COMPILER_PB_REDUNDANT_NULL_CHECK));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b71451b5cf3bcb61714f1a2007e96798", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/FactoryPathUtil.java", "commitBeforeChange": "8908235d3be70b9dc1a86302d67d48a28d815e79", "commitAfterChange": "a5a5f2f627cd928ff3dd3693be20380c04afbdb2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic static Map<FactoryContainer, Boolean> decodeFactoryPath(final String xmlFactoryPath)  \t\tthrows IOException", "signatureAfterChange": " \t \tpublic static Map<FactoryContainer, Boolean> decodeFactoryPath(final String xmlFactoryPath)  \t\tthrows CoreException", "diff": ["-\t\tthrows IOException", "+\t\tthrows CoreException", "+\t\tcatch (IOException e) {", "+\t\t\tthrow new CoreException(new Status(IStatus.ERROR, AptPlugin.PLUGIN_ID, -1, Messages.FactoryPathUtil_status_ioException, e));", "+\t\t}", "-\t\t\tthrow new IOException(\"Unable to parse: \" + e); //$NON-NLS-1$", "+\t\t\tthrow new CoreException(new Status(IStatus.ERROR, AptPlugin.PLUGIN_ID, -1, Messages.FactoryPathUtil_status_couldNotParse, e));", "-\t\t\tthrow new IOException(\"Unable to get parser: \" + e); //$NON-NLS-1$", "+\t\t\tthrow new CoreException(new Status(IStatus.ERROR, AptPlugin.PLUGIN_ID, -1, Messages.FactoryPathUtil_status_parserConfigError, e));", "-\t\t\tthrow new IOException(\"Incorrect file format. File must begin with \" + FACTORYPATH_TAG); //$NON-NLS-1$", "+\t\t\tIOException e = new IOException(\"Incorrect file format. File must begin with \" + FACTORYPATH_TAG); //$NON-NLS-1$", "+\t\t\tthrow new CoreException(new Status(IStatus.ERROR, AptPlugin.PLUGIN_ID, -1, Messages.FactoryPathUtil_status_ioException, e));"]}], "num": 35240}