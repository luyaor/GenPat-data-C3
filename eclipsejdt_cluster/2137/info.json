{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "390d5f5499e88ec6c088575936d10b35", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16f026ccffe6ea0be3117b05171bb793", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "d8f7412a7e197e30b6fcc17db5eeaf7d2638563c", "commitAfterChange": "b80780a7f472c2384c681f831c578ec77037e0cb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic ParameterizedTypeBinding(ReferenceBinding type, TypeBinding[] arguments,  ReferenceBinding enclosingType, LookupEnvironment environment)", "signatureAfterChange": " \t \tpublic ParameterizedTypeBinding(ReferenceBinding type, TypeBinding[] arguments,  ReferenceBinding enclosingType, LookupEnvironment environment)", "diff": ["+", "-\t\tif (type.isParameterizedType() && type.isMemberType()) { // fixup instance of parameterized member type, e.g. Map<K,V>.Entry + <A,B>", "-\t\t\tenclosingType = type.enclosingType(); // use enclosing from previously parameterized", "-\t\t\ttype = (ReferenceBinding)type.erasure(); // connect to erasure of member type", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b253eb6856978ffcd5a05d8d23d27e7f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SignatureWrapper.java", "commitBeforeChange": "13991702fc2c3e2b678aa9ef22a4a03b29ad808b", "commitAfterChange": "3a8b2107b944f5a4646c23d5049199496436bc6e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic int computeEnd()", "signatureAfterChange": " \tpublic int computeEnd()", "diff": ["-\t\tif (this.use15specifics || this.end != this.bracket) {", "-\t\t\tthis.start = this.end + 1; // skip ';'", "-\t\t} else {", "-\t\t\tthis.start = skipAngleContents(this.end) + 1;  // skip <<>*>;", "-\t\t\tthis.bracket = -1;", "-\t\t}", "+\t\tthis.start = this.end + 1; // skip ';'", "-\t}"]}], "num": 2137}