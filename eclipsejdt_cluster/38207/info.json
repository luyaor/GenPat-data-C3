{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e435e4542b16b7ff26e80a0ce23ccbd8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2807cc1daf3d45793f90d89315715585", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "3fd9ba7770cab33e59f381d90c14d9b1a2469d1c", "commitAfterChange": "051572f99b6a73010e844cbf76e196d479c1689d", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tprivate boolean createExternalArchiveDelta(HashSet refreshedElements, IProgressMonitor monitor)", "signatureAfterChange": " \tprivate boolean createExternalArchiveDelta(HashSet refreshedElements, IProgressMonitor monitor)", "diff": ["+\t\t\t\t\t\t// Clear the external file state for this path, since this method is responsible for updating it.", "+\t\t\t\t\t\tthis.manager.clearExternalFileState(entryPath);", "+", "-\t\t// ensure the external file cache is reset so that if a .jar file is deleted but no longer on the classpath, it won't appear as changed next time it is added", "-\t\tJavaModel.flushExternalFileCache();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "beebd6f9964c7531b442d52a8d3606b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "6682863fe9411dd7e2f051947acbfe509953da3c", "commitAfterChange": "d125ece72c2ad46b856092bcf90700e8a503dcbf", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tprivate boolean createExternalArchiveDelta(HashSet refreshedElements, IProgressMonitor monitor)", "signatureAfterChange": " \tprivate boolean createExternalArchiveDelta(HashSet refreshedElements, IProgressMonitor monitor)", "diff": ["-\t\t\t\t\t\t\tif (this.state.getExternalLibTimeStamps().remove(entryPath) != null){", "+\t\t\t\t\t\t\tif (this.state.getExternalLibTimeStamps().remove(entryPath) != null /* file was known*/", "+\t\t\t\t\t\t\t\t\t&& this.state.roots.get(entryPath) != null /* and it was on the classpath*/) {", "-\t\tif (hasDelta){", "-\t\t\t// force classpath marker refresh of affected projects", "-\t\t\tJavaModel.flushExternalFileCache();", "+\t\t// ensure the external file cache is reset so that if a .jar file is deleted but no longer on the classpath, it won't appear as changed next time it is added", "+\t\tJavaModel.flushExternalFileCache();", "+\t\tif (hasDelta){"]}], "num": 38207}