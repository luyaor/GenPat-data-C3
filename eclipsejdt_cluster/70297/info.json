{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9554aa9d16b6a6f83510a4d5698b55f1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17a8db1f111c06616e0743f9ab3447eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "1af26d01cfd72849d8c290dd25ccb7fc62852780", "commitAfterChange": "72895982cdfd43c6e856c9e0af3d1d64cc3e0181", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void testDetachSource() throws JavaModelException", "signatureAfterChange": " public void testDetachSource() throws JavaModelException", "diff": ["-\ttry {", "-\t\tthis.attachSource(this.jarRoot, null, null);", "-\t\tIClassFile cf = this.jarRoot.getPackageFragment(\"x.y\").getClassFile(\"A.class\");", "-\t\tassertTrue(\"source code should no longer exist for A\", cf.getSource() == null);", "-\t\tassertTrue(\"name range should no longer exist for A\", cf.getType().getNameRange().getOffset() == -1);", "-\t\tassertTrue(\"source range should no longer exist for A\", cf.getType().getSourceRange().getOffset() == -1);", "-\t\tassertTrue(\"Source attachment path should be null\", null == this.jarRoot.getSourceAttachmentPath());", "-\t\tassertTrue(\"Source attachment root path should be null\", null ==this.jarRoot.getSourceAttachmentRootPath());", "-\t} catch (JavaModelException jme) {", "-\t\tfail(\"Source Detach Failed\");", "-\t}", "+\tthis.attachSource(this.root, null, null);", "+\tIClassFile cf = this.root.getPackageFragment(\"x.y\").getClassFile(\"A.class\");", "+\tassertTrue(\"source code should no longer exist for A\", cf.getSource() == null);", "+\tassertTrue(\"name range should no longer exist for A\", cf.getType().getNameRange().getOffset() == -1);", "+\tassertTrue(\"source range should no longer exist for A\", cf.getType().getSourceRange().getOffset() == -1);", "+\tassertTrue(\"Source attachment path should be null\", null == this.root.getSourceAttachmentPath());", "+\tassertTrue(\"Source attachment root path should be null\", null ==this.root.getSourceAttachmentRootPath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de2ebb9587484c9bc3ec05e4382a8f0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "1af26d01cfd72849d8c290dd25ccb7fc62852780", "commitAfterChange": "72895982cdfd43c6e856c9e0af3d1d64cc3e0181", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void testAttachSourceWithRootPath() throws JavaModelException", "signatureAfterChange": " public void testAttachSourceWithRootPath() throws JavaModelException", "diff": ["-\ttry {", "-\t\tIJavaProject project = getJavaProject(\"AttachSourceTests\");", "-\t\tIFile jar = (IFile) project.getProject().findMember(\"attach2.jar\");", "-\t\tIFile srcZip=(IFile) project.getProject().findMember(\"attach2src.zip\");", "-\t\tJarPackageFragmentRoot jarRoot = (JarPackageFragmentRoot) project.getPackageFragmentRoot(jar);", "-\t\tjarRoot.attachSource(srcZip.getFullPath(), new Path(\"src/nested\"), null);", "+\tIJavaProject project = getJavaProject(\"AttachSourceTests\");", "+\tIFile jar = (IFile) project.getProject().findMember(\"attach2.jar\");", "+\tIFile srcZip=(IFile) project.getProject().findMember(\"attach2src.zip\");", "+\tJarPackageFragmentRoot root = (JarPackageFragmentRoot) project.getPackageFragmentRoot(jar);", "+\troot.attachSource(srcZip.getFullPath(), new Path(\"src/nested\"), null);", "-\t\tIClassFile cf = jarRoot.getPackageFragment(\"x.y\").getClassFile(\"B.class\");", "-\t\tassertTrue(\"source code does not exist for the entire attached compilation unit\", cf.getSource() != null);", "-\t\tjarRoot.close();", "-\t\tcf = jarRoot.getPackageFragment(\"x.y\").getClassFile(\"B.class\");", "-\t\tassertTrue(\"source code does not exist for the entire attached compilation unit\", cf.getSource() != null);", "+\tIClassFile cf = root.getPackageFragment(\"x.y\").getClassFile(\"B.class\");", "+\tassertTrue(\"source code does not exist for the entire attached compilation unit\", cf.getSource() != null);", "+\troot.close();", "+\tcf = root.getPackageFragment(\"x.y\").getClassFile(\"B.class\");", "+\tassertTrue(\"source code does not exist for the entire attached compilation unit\", cf.getSource() != null);", "-\t\tIPath rootSAPath= jarRoot.getSourceAttachmentRootPath();", "-\t\tassertEquals(\"Unexpected source attachment root path for \" + jarRoot.getPath(), \"src/nested\", rootSAPath.toString());", "+\tIPath rootSAPath= root.getSourceAttachmentRootPath();", "+\tassertEquals(\"Unexpected source attachment root path for \" + root.getPath(), \"src/nested\", rootSAPath.toString());", "-\t\tIPath saPath= jarRoot.getSourceAttachmentPath();", "-\t\tassertEquals(\"Unexpected source attachment path for \" + jarRoot.getPath(), \"/AttachSourceTests/attach2src.zip\", saPath.toString());", "-\t\t", "-\t\tjarRoot.close();", "-\t} catch (JavaModelException jme) {", "-\t\tfail(\"Attach source operation creation failed\");", "-\t}", "+\tIPath saPath= root.getSourceAttachmentPath();", "+\tassertEquals(\"Unexpected source attachment path for \" + root.getPath(), \"/AttachSourceTests/attach2src.zip\", saPath.toString());", "+\t", "+\troot.close();"]}], "num": 70297}