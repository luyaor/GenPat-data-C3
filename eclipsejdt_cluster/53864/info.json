{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d87b05a3ad9f637b56b57fc29d22c3b3", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66e1cead20caf1d201ee41293ccb8599", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "0841a91a39a58a8a007f1736329beedec8b54836", "commitAfterChange": "b7160e8085cf8063f1f3db4ac577c79071d5d7b0", "methodNumberBeforeChange": 820, "methodNumberAfterChange": 820, "signatureBeforeChange": " public void test0800()", "signatureAfterChange": " public void test0800()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\t\"----------\\n\");", "+\t\t\"----------\\n\",", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBug6400189 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dc23339bee9787be777b7f2a1689f43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "6309a9b2aeb767c0183db42672308082688897e5", "commitAfterChange": "9d3443d9ed27d5bf1a9ba003a556b60eecb97c38", "methodNumberBeforeChange": 1336, "methodNumberAfterChange": 1337, "signatureBeforeChange": " public void test1306()", "signatureAfterChange": " public void test1306()", "diff": ["-\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\t\"X.java\",", "-\t\t\t\t\t\"import java.lang.reflect.Constructor;\\n\" + ", "-\t\t\t\t\t\"import java.lang.annotation.Documented;\\n\" + ", "-\t\t\t\t\t\"import java.util.List;\\n\" + ", "-\t\t\t\t\t\"\\n\" + ", "-\t\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\t\"    Constructor c = null;\\n\" + ", "-\t\t\t\t\t\"    Documented d = c.getAnnotation(Documented.class);\\n\" + ", "-\t\t\t\t\t\"}\\n\", // =================", "-\t\t\t},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "-\t\t\t\"\tConstructor c = null;\\n\" + ", "-\t\t\t\"\t^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Constructor is a raw type. References to generic type Constructor<T> should be parameterized\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. WARNING in X.java (at line 7)\\n\" + ", "-\t\t\t\"\tDocumented d = c.getAnnotation(Documented.class);\\n\" + ", "-\t\t\t\"\t               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Type safety: The method getAnnotation(Class) belongs to the raw type Constructor. References to generic type Constructor<T> should be parameterized\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\t\"\tDocumented d = c.getAnnotation(Documented.class);\\n\" + ", "-\t\t\t\"\t               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Type mismatch: cannot convert from Annotation to Documented\\n\" + ", "-\t\t\t\"----------\\n\");", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\tnew String[] { /* test files */", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"import java.lang.reflect.Constructor;\\n\" + ", "+\t\t\t\t\"import java.lang.annotation.Documented;\\n\" + ", "+\t\t\t\t\"import java.util.List;\\n\" + ", "+\t\t\t\t\"\\n\" + ", "+\t\t\t\t\"public class X {\\n\" + ", "+\t\t\t\t\"    Constructor c = null;\\n\" + ", "+\t\t\t\t\"    Documented d = c.getAnnotation(Documented.class);\\n\" + ", "+\t\t\t\t\"}\\n\", // =================", "+\t\t},", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "+\t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\"\tConstructor c = null;\\n\" + ", "+\t\t\"\t^^^^^^^^^^^\\n\" + ", "+\t\t\"Constructor is a raw type. References to generic type Constructor<T> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\"\tDocumented d = c.getAnnotation(Documented.class);\\n\" + ", "+\t\t\"\t               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: The method getAnnotation(Class) belongs to the raw type Constructor. References to generic type Constructor<T> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\"\tDocumented d = c.getAnnotation(Documented.class);\\n\" + ", "+\t\t\"\t               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type mismatch: cannot convert from Annotation to Documented\\n\" + ", "+\t\t\"----------\\n\",", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBug6400189 /* javac test options */);"]}], "num": 53864}