{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8412e942c88a481eb5c986a7dd63b219", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03f65caddb347acd474d432d384f6e6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "d939c06c1bb86210ecdbf93881e5113054d8f519", "commitAfterChange": "69eeae945b65b4592f77b2b84f96eeb06060ca5b", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " \t \tpublic boolean isInsideDeprecatedCode()", "signatureAfterChange": " \t \tpublic boolean isInsideDeprecatedCode()", "diff": ["-\t\t\t\t\tif (type != null && type.isViewedAsDeprecated())", "-\t\t\t\t\t\treturn true;", "+\t\t\t\t\tif (type != null) {", "+\t\t\t\t\t\ttype.initializeDeprecatedAnnotationTagBits(); // may not have been resolved until then", "+\t\t\t\t\t\tif (type.isViewedAsDeprecated())", "+\t\t\t\t\t\t\treturn true;", "+\t\t\t\t\t}", "-\t\t\t\tif (context != null && context.isViewedAsDeprecated())", "-\t\t\t\t\treturn true;", "+\t\t\t\tif (context != null) {", "+\t\t\t\t\tcontext.initializeDeprecatedAnnotationTagBits(); // may not have been resolved until then", "+\t\t\t\t\tif (context.isViewedAsDeprecated()) ", "+\t\t\t\t\t\treturn true;", "+\t\t\t\t}", "-\t\t\t\t\tif (type != null && type.isViewedAsDeprecated())", "-\t\t\t\t\t\treturn true;", "+\t\t\t\t\tif (type != null) {", "+\t\t\t\t\t\ttype.initializeDeprecatedAnnotationTagBits(); // may not have been resolved until then", "+\t\t\t\t\t\tif (type.isViewedAsDeprecated())", "+\t\t\t\t\t\t\treturn true;", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8272c434f0e1c965f748f9d4d6eba5d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "7b815bfaa3b1a804bb04e149d3fdcdeccff01e22", "commitAfterChange": "f447e8419317d96ca676850de75b170e4276d1fc", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tpublic TypeBinding checkAgainstFinalTargetType(TypeBinding targetType)", "signatureAfterChange": " \t \tpublic TypeBinding checkAgainstFinalTargetType(TypeBinding targetType)", "diff": ["-\t\t\tif (valueIfTrueType != null && !valueIfTrueType.isCompatibleWith(targetType, this.polyExpressionScope)) {", "-\t\t\t\tthis.polyExpressionScope.problemReporter().typeMismatchError(valueIfTrueType, targetType, this.valueIfTrue, null);", "+\t\t\tif (valueIfTrueType != null) {", "+\t\t\t\tif (!valueIfTrueType.isCompatibleWith(targetType, this.polyExpressionScope)) {", "+\t\t\t\t\tthis.polyExpressionScope.problemReporter().typeMismatchError(valueIfTrueType, targetType, this.valueIfTrue, null);", "+\t\t\t\t} else {", "+\t\t\t\t\tthis.valueIfTrue.computeConversion(this.polyExpressionScope, targetType, this.originalValueIfTrueType);\t", "+\t\t\t\t}", "-\t\t\tif (valueIfFalseType != null && !valueIfFalseType.isCompatibleWith(targetType, this.polyExpressionScope)) {", "-\t\t\t\tthis.polyExpressionScope.problemReporter().typeMismatchError(valueIfFalseType, targetType, this.valueIfFalse, null);", "+\t\t\tif (valueIfFalseType != null) {", "+\t\t\t\tif (!valueIfFalseType.isCompatibleWith(targetType, this.polyExpressionScope)) {", "+\t\t\t\t\tthis.polyExpressionScope.problemReporter().typeMismatchError(valueIfFalseType, targetType, this.valueIfFalse, null);", "+\t\t\t\t} else {", "+\t\t\t\t\tthis.valueIfFalse.computeConversion(this.polyExpressionScope, targetType, this.originalValueIfFalseType);", "+\t\t\t\t}"]}], "num": 54650}