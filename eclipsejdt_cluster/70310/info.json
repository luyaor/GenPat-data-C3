{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6d4f33fbe6e8de446069c64a5aa0d6fa", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61408781bb5cae65f8545e2b3fe5a415", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "1ba6cf1a1cd58ea6964d3e53d500ba37300ad6c5", "commitAfterChange": "122386dad13a4daa4a6eb3fe318a2c079a2655ef", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 99, "signatureBeforeChange": "\r \r \tprivate void setTypeForVariableDeclarationExpression(LocalDeclaration localDeclaration, VariableDeclarationExpression variableDeclarationExpression, Type type, int extraDimension)", "signatureAfterChange": "\r \r \tprivate void setTypeForVariableDeclarationExpression(VariableDeclarationExpression variableDeclarationExpression, Type type, int extraDimension)", "diff": ["-\tprivate void setTypeForVariableDeclarationExpression(LocalDeclaration localDeclaration, VariableDeclarationExpression variableDeclarationExpression, Type type, int extraDimension) {\r", "+\tprivate void setTypeForVariableDeclarationExpression(VariableDeclarationExpression variableDeclarationExpression, Type type, int extraDimension) {\r", "-\t\t\t\tType eltType = arrayType.getElementType();\r", "-\t\t\t\tType elementType = (Type) ASTNode.copySubtree(this.ast, eltType);\r", "-\t\t\t\teltType.subtreeMatch(new CopyPositionsMatcher(), elementType);\r", "+\t\t\t\t\tType elementType = arrayType.getElementType();\r", "+\t\t\t\t\telementType.setParent(null);\r", "+\t\t\t\t\tthis.ast.getBindingResolver().updateKey(type, elementType);\r", "-\t\t\t\t\tArrayType arrayType2 = this.ast.newArrayType(elementType, remainingDimensions);\r", "-\t\t\t\t\tarrayType2.setSourceRange(type.getStartPosition(), type.getLength());\r", "-\t\t\t\t\tvariableDeclarationExpression.setType(arrayType2);\r", "+\t\t\t\t\tint start = type.getStartPosition();\r", "+\t\t\t\t\tint length = type.getLength();\r", "+\t\t\t\t\tArrayType subarrayType = arrayType;\r", "+\t\t\t\t\tint index = extraDimension;\r", "+\t\t\t\t\twhile (index > 0) {\r", "+\t\t\t\t\t\tsubarrayType = (ArrayType) subarrayType.getComponentType();\r", "+\t\t\t\t\t\tindex--;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tint end = retrieveProperRightBracketPosition(remainingDimensions, start, start + length);\r", "+\t\t\t\t\tsubarrayType.setSourceRange(start, end - start + 1);\r", "+\t\t\t\t\tsubarrayType.setParent(null);\r", "+\t\t\t\t\tvariableDeclarationExpression.setType(subarrayType);\r", "+\t\t\t\t\tthis.ast.getBindingResolver().updateKey(type, subarrayType);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcc2ae138720fedd3b52b406122460cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "1ba6cf1a1cd58ea6964d3e53d500ba37300ad6c5", "commitAfterChange": "122386dad13a4daa4a6eb3fe318a2c079a2655ef", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 98, "signatureBeforeChange": "\r \r \tprivate void setTypeForVariableDeclarationStatement(LocalDeclaration localDeclaration, VariableDeclarationStatement variableDeclarationStatement, Type type, int extraDimension)", "signatureAfterChange": "\r \r \tprivate void setTypeForVariableDeclarationStatement(VariableDeclarationStatement variableDeclarationStatement, Type type, int extraDimension)", "diff": ["-\tprivate void setTypeForVariableDeclarationStatement(LocalDeclaration localDeclaration, VariableDeclarationStatement variableDeclarationStatement, Type type, int extraDimension) {\r", "+\tprivate void setTypeForVariableDeclarationStatement(VariableDeclarationStatement variableDeclarationStatement, Type type, int extraDimension) {\r", "-\t\t\t\tType eltType = arrayType.getElementType();\r", "-\t\t\t\tType elementType = (Type) ASTNode.copySubtree(this.ast, eltType);\r", "-\t\t\t\teltType.subtreeMatch(new CopyPositionsMatcher(), elementType);\r", "+\t\t\t\t\tType elementType = arrayType.getElementType();\r", "+\t\t\t\t\telementType.setParent(null);\r", "+\t\t\t\t\tthis.ast.getBindingResolver().updateKey(type, elementType);\r", "-\t\t\t\t\tArrayType arrayType2 = this.ast.newArrayType(elementType, remainingDimensions);\r", "-\t\t\t\t\tarrayType2.setSourceRange(type.getStartPosition(), type.getLength());\r", "-\t\t\t\t\tvariableDeclarationStatement.setType(arrayType2);\r", "+\t\t\t\t\tint start = type.getStartPosition();\r", "+\t\t\t\t\tint length = type.getLength();\r", "+\t\t\t\t\tArrayType subarrayType = arrayType;\r", "+\t\t\t\t\tint index = extraDimension;\r", "+\t\t\t\t\twhile (index > 0) {\r", "+\t\t\t\t\t\tsubarrayType = (ArrayType) subarrayType.getComponentType();\r", "+\t\t\t\t\t\tindex--;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tint end = retrieveProperRightBracketPosition(remainingDimensions, start, start + length);\r", "+\t\t\t\t\tsubarrayType.setSourceRange(start, end - start + 1);\r", "+\t\t\t\t\tsubarrayType.setParent(null);\r", "+\t\t\t\t\tvariableDeclarationStatement.setType(subarrayType);\r", "+\t\t\t\t\tthis.ast.getBindingResolver().updateKey(type, subarrayType);\r"]}], "num": 70310}