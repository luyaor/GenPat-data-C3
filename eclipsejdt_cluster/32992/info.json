{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "01a54f166fe7642e607715bfa97d70e7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f343253ed59e0533924d1604d83e9a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "462d48c2ab243e0f3a23c0def993c032272cb1da", "commitAfterChange": "94c5d8c83d0f95bb421c52b6355a2fe84ff2ee03", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public boolean checkUnsafeCast(Scope scope, TypeBinding castType, TypeBinding expressionType, TypeBinding match, boolean isNarrowing)", "signatureAfterChange": "  public boolean checkUnsafeCast(Scope scope, TypeBinding castType, TypeBinding expressionType, TypeBinding match, boolean isNarrowing)", "diff": ["-\tif (match != null && (castType.isEnclosingTypeBoundParameterizedType() || expressionType.isEnclosingTypeBoundParameterizedType())) {", "+\tif (match != null && (!castType.isReifiable() || !expressionType.isReifiable())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f02a38d549409fa0155d75278c346594", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "1981bf8ffea2219e8159438f3f203edffff2e187", "commitAfterChange": "462d48c2ab243e0f3a23c0def993c032272cb1da", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public boolean checkUnsafeCast(Scope scope, TypeBinding castType, TypeBinding expressionType, TypeBinding match, boolean isNarrowing)", "signatureAfterChange": "  public boolean checkUnsafeCast(Scope scope, TypeBinding castType, TypeBinding expressionType, TypeBinding match, boolean isNarrowing)", "diff": ["-\tif (match != null && (castType.isBoundParameterizedType() || expressionType.isBoundParameterizedType())) {", "+\tif (match != null && (castType.isEnclosingTypeBoundParameterizedType() || expressionType.isEnclosingTypeBoundParameterizedType())) {"]}], "num": 32992}