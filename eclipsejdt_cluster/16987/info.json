{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a4ce7ace98ed006e905b314f0bd183f0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac011e8dad49b50407385007ea485c94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "1585d95aacd546d0fef8e25ddee2f5a6f64f7c62", "commitAfterChange": "bcf6d39cea27ed7bf3bf85709bd7e60dc5605058", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic MethodBinding findDefaultAbstractMethod( \t\tReferenceBinding receiverType,  \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite, \t\tReferenceBinding classHierarchyStart, \t\tMethodBinding matchingMethod, \t\tObjectVector found)", "signatureAfterChange": " \tpublic MethodBinding findDefaultAbstractMethod( \t\tReferenceBinding receiverType,  \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite, \t\tReferenceBinding classHierarchyStart, \t\tMethodBinding matchingMethod, \t\tObjectVector found)", "diff": ["+\t\tCompilationUnitScope unitScope = compilationUnitScope();", "-\t\t\tif (matchingMethod != null) compilationUnitScope().recordTypeReferences(matchingMethod.thrownExceptions);", "+\t\t\tif (matchingMethod != null)", "+\t\t\t\tunitScope.recordTypeReferences(matchingMethod.thrownExceptions);", "-\t\t\tcompilationUnitScope().recordTypeReferences(candidates[0].thrownExceptions);", "+\t\t\tunitScope.recordTypeReferences(candidates[0].thrownExceptions);", "+\t\tboolean isCompliant14 = unitScope.environment.options.complianceLevel >= ClassFileConstants.JDK1_4;", "+\t\tif (isCompliant14)", "+\t\t\treturn mostSpecificMethodBinding(candidates, candidatesCount, argumentTypes, invocationSite);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9cb2f3607e38866e478de979d6bc9fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "3284f738bbf7a2dbd90434dea313c8629bed5722", "commitAfterChange": "bd3806cc9cec8e9a14826ff23d7065c6143ced5e", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 103, "signatureBeforeChange": " \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, final InvocationSite invocationSite, ReferenceBinding receiverType)", "signatureAfterChange": " \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, final InvocationSite invocationSite, ReferenceBinding receiverType)", "diff": ["-\t\t\tcompilationUnitScope().recordTypeReferences(candidate.thrownExceptions);", "+\t\t\tif (candidate != null)", "+\t\t\t\tcompilationUnitScope().recordTypeReferences(candidate.thrownExceptions);", "-\t\t\t\tcompilationUnitScope().recordTypeReferences(candidate.thrownExceptions);", "+\t\t\t\tif (candidate != null)", "+\t\t\t\t\tcompilationUnitScope().recordTypeReferences(candidate.thrownExceptions);", "-\t\t\t\t\t\tcompilationUnitScope().recordTypeReferences(candidate.thrownExceptions);", "+\t\t\t\t\t\tif (candidate != null)", "+\t\t\t\t\t\t\tcompilationUnitScope().recordTypeReferences(candidate.thrownExceptions);"]}], "num": 16987}