{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "af365f4d75745f3b1382520561121d31", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b05ff41bd854b64ab0b889bec3b55305", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "35bd4e1ac4b1e11c036461a7309d887d1527f75a", "commitAfterChange": "c62a418f35a40981606d85e97ecee9f9596fa8d0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " boolean areReturnTypesEqual(MethodBinding one, MethodBinding substituteTwo)", "signatureAfterChange": " boolean areReturnTypesCompatible(MethodBinding one, MethodBinding two)", "diff": ["-boolean areReturnTypesEqual(MethodBinding one, MethodBinding substituteTwo) {", "-\treturn areReturnTypesCompatible(one, substituteTwo);", "+boolean areReturnTypesCompatible(MethodBinding one, MethodBinding two) {", "+\tif (one.returnType == two.returnType) return true;", "+\treturn areReturnTypesCompatible0(one, two);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fedf17629e3bd1e5bc0e492ae288098d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "35bd4e1ac4b1e11c036461a7309d887d1527f75a", "commitAfterChange": "c62a418f35a40981606d85e97ecee9f9596fa8d0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": " boolean areReturnTypesEqual(MethodBinding one, MethodBinding two)", "signatureAfterChange": " boolean areReturnTypesCompatible(MethodBinding one, MethodBinding two)", "diff": ["+boolean areReturnTypesCompatible(MethodBinding one, MethodBinding two) {", "+\tif (one.returnType == two.returnType) return true;", "+\tif (areTypesEqual(one.returnType, two.returnType)) return true;", "+\t", "+\t// when sourceLevel < 1.5 but compliance >= 1.5, allow return types in binaries to be compatible instead of just equal", "+\tif (this.allowCompatibleReturnTypes &&", "+\t\t\tone.declaringClass instanceof BinaryTypeBinding &&", "+\t\t\ttwo.declaringClass instanceof BinaryTypeBinding) {", "+\t\treturn areReturnTypesCompatible0(one, two);", "+\t}", "+\treturn false;", "+}", "-}", "-boolean areReturnTypesEqual(MethodBinding one, MethodBinding two) {", "-\tif (areTypesEqual(one.returnType, two.returnType)) return true;", "-", "-\t// when sourceLevel < 1.5 but compliance >= 1.5, allow return types in binaries to be compatible instead of just equal", "-\tif (this.allowCompatibleReturnTypes)", "-\t\tif (one.declaringClass instanceof BinaryTypeBinding && two.declaringClass instanceof BinaryTypeBinding)", "-\t\t\tif (areReturnTypesCompatible(one, two))", "-\t\t\t\treturn true;", "-\treturn false;"]}], "num": 46529}