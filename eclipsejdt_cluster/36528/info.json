{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c3bb65b6c9674e471b2dd09badc4bea4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02e977662a4d2c348001fab248af7ccf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "6cb413dbd992ad73f847d7b4e14e78f1406fa2fc", "commitAfterChange": "8659b871eae5c2008485cfb120ce2c8f8ecbfe04", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic synchronized void writeState()", "signatureAfterChange": " \tpublic void writeState()", "diff": ["+\t */", "+\tpublic void writeState()", "+\t{", "+\t\t_parentToGenFiles.writeState();", "+\t}", "-\tpublic synchronized void writeState() {", "-\t\tif (!_mapsDirty) {", "-\t\t\treturn;", "-\t\tFile file = getSerializationFile(_jProject.getProject());", "-\t\tif (file == null) {", "-\t\t\t// Cannot write state, as project has been deleted", "-\t\t\treturn;", "-\t\t}", "-\t\tfile.delete();", "-\t\tDataOutputStream out = null;", "-\t\ttry {", "-\t\t\tout = new DataOutputStream(new BufferedOutputStream(new FileOutputStream(file)));", "-\t\t\t", "-\t\t\tout.writeInt(SERIALIZATION_VERSION);", "-\t\t\t", "-\t\t\tout.writeInt(_parentFile2GeneratedFiles.size());", "-\t\t\t", "-\t\t\tfor (Map.Entry<IFile,Set<IFile>> entry : _parentFile2GeneratedFiles.entrySet()) {", "-\t\t\t\t", "-\t\t\t\tIFile parent = entry.getKey();", "-\t\t\t\tout.writeUTF(convertIFileToPath(parent));", "-\t\t\t\t", "-\t\t\t\tSet<IFile> children = entry.getValue();", "-\t\t\t\t", "-\t\t\t\tout.writeInt(children.size());", "-\t\t\t\t", "-\t\t\t\tfor (IFile child : children) {", "-\t\t\t\t\tout.writeUTF(convertIFileToPath(child));", "-\t\t\t_mapsDirty = false;", "-\t\t}", "-\t\tcatch (IOException ioe) {", "-\t\t\t// We can safely continue without having written our dependencies.", "-\t\t\tAptPlugin.log(ioe, \"Could not serialize APT dependencies\"); //$NON-NLS-1$", "-\t\t}", "-\t\tfinally {", "-\t\t\tif (out != null) {", "-\t\t\t\ttry {", "-\t\t\t\t\tout.flush();", "-\t\t\t\t\tout.close();", "-\t\t\t\t}", "-\t\t\t\tcatch (IOException ioe) {", "-\t\t\t\t\tAptPlugin.log(ioe, \"Failed to write the APT dependency state to disk\"); //$NON-NLS-1$", "-\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad3007fc458c72c1f88c33902c6d7392", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileMap.java", "commitBeforeChange": "f673a1d9c7172b796dd31cfa78dd0dad32318c9f", "commitAfterChange": "bd2b202132c8d4bb0e104bd05827a1b9231c9dc5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tprivate void readState()", "signatureAfterChange": " \tprivate void readState()", "diff": ["+\t\t\t", "+\t\t\t// Now the _flags map:", "+\t\t\tint sizeOfFlags = in.readInt();", "+\t\t\tfor (int i = 0; i < sizeOfFlags; ++i) {", "+\t\t\t\tString childPath = in.readUTF();", "+\t\t\t\tIFile child = convertPathToIFile(childPath);", "+\t\t\t\tif (!containsValue(child)) {", "+\t\t\t\t\tthrow new IOException(\"Error in generated file attributes: did not expect file \" + childPath); //$NON-NLS-1$", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\tint attributeCount = in.readInt();", "+\t\t\t\tEnumSet<Flags> flags = EnumSet.noneOf(Flags.class);", "+\t\t\t\tfor (int j = 0; j < attributeCount; ++j) {", "+\t\t\t\t\tString attr = in.readUTF();", "+\t\t\t\t\tFlags f = Flags.valueOf(attr);", "+\t\t\t\t\tflags.add(f);", "+\t\t\t\t}", "+\t\t\t\t_flags.put(child, flags);", "+\t\t\t}", "+\t\t\t", "+\t\t\t// Avoid partial initialization", "+\t\t\tclear();", "-\t\t\tAptPlugin.log(ioe, \"Could not deserialize APT dependencies\"); //$NON-NLS-1$", "+\t\t\tAptPlugin.logWarning(ioe, \"Could not read APT dependencies: generated files may not be deleted until the next clean\"); //$NON-NLS-1$", "+\t\t}", "+\t\tcatch (IllegalArgumentException iae) {", "+\t\t\t// Avoid partial initialization", "+\t\t\tclear();", "+\t\t\t// We can safely continue without having read our dependencies.", "+\t\t\tAptPlugin.logWarning(iae, \"Could not read APT dependencies: generated files may not be deleted until the next clean\"); //$NON-NLS-1$"]}], "num": 36528}