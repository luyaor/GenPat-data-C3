{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e3e80255b099636f15ec9c2cd63870dc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02451d63874266d7d5cf0a4b51150f8c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaConventionTests.java", "commitBeforeChange": "5f7b1ccfabc400ea9e65986d696417445a37876d", "commitAfterChange": "d3d3fd84014a6dcb70309f0821240a82ccf93b29", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void testValidPackageName()", "signatureAfterChange": " \tpublic void testValidPackageName()", "diff": ["-\t\tassertTrue(\"unicode package name not handled\", JavaConventions.validatePackageName(pkgName).isOK());", "+\t\tassertTrue(\"unicode package name not handled\", JavaConventions.validatePackageName(pkgName, sourceLevel, complianceLevel).isOK());", "-\t\tassertTrue(\"package name not recognized as invalid1\", !JavaConventions.validatePackageName(\"\").isOK());", "-\t\tassertTrue(\"package name not recognized as valid1\", JavaConventions.validatePackageName(\"java . lang\").isOK());", "-\t\tassertTrue(\"package name not recognized as invalid2\", !JavaConventions.validatePackageName(\"   java . lang\").isOK());", "-\t\tassertTrue(\"package name not recognized as invalid3\", !JavaConventions.validatePackageName(\"java . lang  \").isOK());", "-\t\tassertTrue(\"package name not recognized as invalid4\", !JavaConventions.validatePackageName(null).isOK());", "-\t\tassertTrue(\"package name not recognized as unconventional1\", JavaConventions.validatePackageName(\"Java.lang\").getSeverity() == IStatus.WARNING);", "-\t\tassertTrue(\"package name not recognized as valid2\", JavaConventions.validatePackageName(\"java.Lang\").isOK());", "-\t\tassertTrue(\"package name not recognized as invalid5\", JavaConventions.validatePackageName(\"Test.sample&plugin\").getSeverity() == IStatus.ERROR);", "-\t\tassertTrue(\"package name not recognized as unconventional2\", JavaConventions.validatePackageName(\"Test.sample\").getSeverity() == IStatus.WARNING);", "+\t\tassertTrue(\"package name not recognized as invalid1\", !JavaConventions.validatePackageName(\"\", sourceLevel, complianceLevel).isOK());", "+\t\tassertTrue(\"package name not recognized as valid1\", JavaConventions.validatePackageName(\"java . lang\", sourceLevel, complianceLevel).isOK());", "+\t\tassertTrue(\"package name not recognized as invalid2\", !JavaConventions.validatePackageName(\"   java . lang\", sourceLevel, complianceLevel).isOK());", "+\t\tassertTrue(\"package name not recognized as invalid3\", !JavaConventions.validatePackageName(\"java . lang  \", sourceLevel, complianceLevel).isOK());", "+\t\tassertTrue(\"package name not recognized as invalid4\", !JavaConventions.validatePackageName(null, sourceLevel, complianceLevel).isOK());", "+\t\tassertTrue(\"package name not recognized as unconventional1\", JavaConventions.validatePackageName(\"Java.lang\", sourceLevel, complianceLevel).getSeverity() == IStatus.WARNING);", "+\t\tassertTrue(\"package name not recognized as valid2\", JavaConventions.validatePackageName(\"java.Lang\", sourceLevel, complianceLevel).isOK());", "+\t\tassertTrue(\"package name not recognized as invalid5\", JavaConventions.validatePackageName(\"Test.sample&plugin\", sourceLevel, complianceLevel).getSeverity() == IStatus.ERROR);", "+\t\tassertTrue(\"package name not recognized as unconventional2\", JavaConventions.validatePackageName(\"Test.sample\", sourceLevel, complianceLevel).getSeverity() == IStatus.WARNING);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bfa454b731ccdefb18633337bf13d9a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaConventionTests.java", "commitBeforeChange": "38835101c5cb5aa877400915ae93db40feae72e1", "commitAfterChange": "4007ad30c270c1323bfebe340590d44f8586e167", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void testValidPackageName()", "signatureAfterChange": " \tpublic void testValidPackageName()", "diff": ["-\t\tassertTrue(\"unicode package name not handled\", JavaConventions.validatePackageName(pkgName, sourceLevel, complianceLevel).isOK());", "+\t\tassertEquals(\"unicode package name not handled\", IStatus.OK, validate(pkgName, PACKAGE_NAME));", "-\t\tassertTrue(\"package name not recognized as invalid1\", !JavaConventions.validatePackageName(\"\", sourceLevel, complianceLevel).isOK());", "-\t\tassertTrue(\"package name not recognized as valid1\", JavaConventions.validatePackageName(\"java . lang\", sourceLevel, complianceLevel).isOK());", "-\t\tassertTrue(\"package name not recognized as invalid2\", !JavaConventions.validatePackageName(\"   java . lang\", sourceLevel, complianceLevel).isOK());", "-\t\tassertTrue(\"package name not recognized as invalid3\", !JavaConventions.validatePackageName(\"java . lang  \", sourceLevel, complianceLevel).isOK());", "-\t\tassertTrue(\"package name not recognized as invalid4\", !JavaConventions.validatePackageName(null, sourceLevel, complianceLevel).isOK());", "-\t\tassertTrue(\"package name not recognized as unconventional1\", JavaConventions.validatePackageName(\"Java.lang\", sourceLevel, complianceLevel).getSeverity() == IStatus.WARNING);", "-\t\tassertTrue(\"package name not recognized as valid2\", JavaConventions.validatePackageName(\"java.Lang\", sourceLevel, complianceLevel).isOK());", "-\t\tassertTrue(\"package name not recognized as invalid5\", JavaConventions.validatePackageName(\"Test.sample&plugin\", sourceLevel, complianceLevel).getSeverity() == IStatus.ERROR);", "-\t\tassertTrue(\"package name not recognized as unconventional2\", JavaConventions.validatePackageName(\"Test.sample\", sourceLevel, complianceLevel).getSeverity() == IStatus.WARNING);", "+\t\tassertEquals(\"package name not recognized as invalid1\", IStatus.ERROR, validate(\"\", PACKAGE_NAME));", "+\t\tassertEquals(\"package name not recognized as valid1\", IStatus.OK, validate(\"java . lang\", PACKAGE_NAME));", "+\t\tassertEquals(\"package name not recognized as invalid2\", IStatus.ERROR, validate(\"   java . lang\", PACKAGE_NAME));", "+\t\tassertEquals(\"package name not recognized as invalid3\", IStatus.ERROR, validate(\"java . lang  \", PACKAGE_NAME));", "+\t\tassertEquals(\"package name not recognized as invalid4\", IStatus.ERROR, validate(null, PACKAGE_NAME));", "+\t\tassertEquals(\"package name not recognized as unconventional1\", IStatus.WARNING, validate(\"Java.lang\", PACKAGE_NAME));", "+\t\tassertEquals(\"package name not recognized as valid2\", IStatus.OK, validate(\"java.Lang\", PACKAGE_NAME));", "+\t\tassertEquals(\"package name not recognized as invalid5\", IStatus.ERROR, validate(\"Test.sample&plugin\", PACKAGE_NAME));", "+\t\tassertEquals(\"package name not recognized as unconventional2\", IStatus.WARNING, validate(\"Test.sample\", PACKAGE_NAME));"]}], "num": 65451}