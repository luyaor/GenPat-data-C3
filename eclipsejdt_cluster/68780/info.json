{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "44114fcea86c9c0a2f0292df8d8f2386", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6265d394be4ee4bd0539411bd746a1ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "c93b7fc02953335388042ab5bd4ec34f70464821", "commitAfterChange": "c9213ae595dd32af0d2b3bd7c31b733e8b1d0dd1", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public String projectPathFor(String resourcePathString)", "signatureAfterChange": " public IPackageFragmentRoot packageFragmentRoot(String resourcePathString)", "diff": ["-public String projectPathFor(String resourcePathString) {", "+public IPackageFragmentRoot packageFragmentRoot(String resourcePathString) {", "-\tif (separatorIndex != -1) {", "+\tboolean isJarFile = separatorIndex != -1;", "+\tif (isJarFile) {", "-\t\tif (idx != -1) {", "-\t\t\treturn (String) this.projectPaths.get(idx);", "+\t\tString projectPath = idx == -1 ? null : (String) this.projectPaths.get(idx);", "+\t\tif (projectPath != null) {", "+\t\t\tIJavaProject project =JavaCore.create(ResourcesPlugin.getWorkspace().getRoot().getProject(projectPath));", "+\t\t\tif (isJarFile) {", "+\t\t\t\treturn project.getPackageFragmentRoot(this.containerPaths[index]);", "+\t\t\t}", "+\t\t\tObject target = JavaModel.getTarget(ResourcesPlugin.getWorkspace().getRoot(), new Path(this.containerPaths[index]+'/'+this.relativePaths[index]), false);", "+\t\t\tif (target instanceof IResource) {", "+\t\t\t\treturn project.getPackageFragmentRoot((IResource)target);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8511ec2e8aac2f4cf18ef3c9ba308cc0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "37468b15b5c10767a0d1f5bcf745b5635724272d", "commitAfterChange": "269c8c1f587787c02ae256af1e14f83a052a8b35", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic ClasspathEntry( \t\tint contentKind, \t\tint entryKind, \t\tIPath path, \t\tIPath[] inclusionPatterns, \t\tIPath[] exclusionPatterns, \t\tIPath sourceAttachmentPath, \t\tIPath sourceAttachmentRootPath, \t\tIPath specificOutputLocation, \t\tboolean isExported, \t\tIAccessRule[] accessRules, \t\tboolean combineAccessRules, \t\tIClasspathAttribute[] extraAttributes)", "signatureAfterChange": " \tpublic ClasspathEntry( \t\tint contentKind, \t\tint entryKind, \t\tIPath path, \t\tIPath[] inclusionPatterns, \t\tIPath[] exclusionPatterns, \t\tIPath sourceAttachmentPath, \t\tIPath sourceAttachmentRootPath, \t\tIPath specificOutputLocation, \t\tboolean isExported, \t\tIAccessRule[] accessRules, \t\tboolean combineAccessRules, \t\tIClasspathAttribute[] extraAttributes)", "diff": ["-\t\t\tthis.accessRuleSet = new AccessRuleSet(rules, getMessageTemplates());", "+\t\t\tbyte classpathEntryType;", "+\t\t\tString classpathEntryName;", "+\t\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "+\t\t\tif (this.entryKind == CPE_PROJECT || this.entryKind == CPE_SOURCE) { // can be remote source entry when reconciling", "+\t\t\t\tclasspathEntryType = AccessRestriction.PROJECT;", "+\t\t\t\tclasspathEntryName = manager.intern(getPath().segment(0));", "+\t\t\t} else {", "+\t\t\t\tclasspathEntryType = AccessRestriction.LIBRARY;", "+\t\t\t\tObject target = JavaModel.getTarget(ResourcesPlugin.getWorkspace().getRoot(), path, false);", "+\t\t\t\tif (target instanceof java.io.File) {", "+\t\t\t\t\tclasspathEntryName = manager.intern(path.toOSString());", "+\t\t\t\t} else {", "+\t\t\t\t\tclasspathEntryName = manager.intern(path.makeRelative().toString());", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tthis.accessRuleSet = new AccessRuleSet(rules, classpathEntryType, classpathEntryName);"]}], "num": 68780}