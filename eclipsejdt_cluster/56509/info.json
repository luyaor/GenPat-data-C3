{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c51938f9e9054e0cea025d7712fcdc44", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cfb12b21c3067fad632be3fa8f701be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "0f549220f498cda7c86a65324f594a6b8e8c2616", "commitAfterChange": "17fcd420e0756889bcaffeff4cf983b2cff84a3e", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " protected int matchNameValue(char[] pattern, char[] name)", "signatureAfterChange": " protected int matchNameValue(char[] pattern, char[] name)", "diff": ["-\tboolean canBePrefix = name.length > pattern.length;", "+\tboolean canBePrefix = name.length >= pattern.length;", "+\tif (this.isCamelCase && matchFirstChar && CharOperation.camelCaseMatch(pattern, name)) {", "+\t\treturn POSSIBLE_CAMELCASE_MATCH;", "+\t}", "-\t\t\tif (sameLength && matchFirstChar && \tCharOperation.equals(pattern, name, this.isCaseSensitive)) {", "+\t\t\tif (!this.isCamelCase && sameLength && matchFirstChar && CharOperation.equals(pattern, name, this.isCaseSensitive)) {", "-\t\t\t}", "-\t\t\tif (this.isCamelCase) {", "-\t\t\t\tif (canBePrefix && matchFirstChar && CharOperation.prefixEquals(pattern, name, this.isCaseSensitive)) {", "-\t\t\t\t\treturn POSSIBLE_PREFIX_MATCH;", "-\t\t\t\t}", "-\t\t\t\tif (matchFirstChar && CharOperation.camelCaseMatch(pattern, name)) {", "-\t\t\t\t\treturn POSSIBLE_CAMELCASE_MATCH;", "-\t\t\t\t}", "-\t\t\tif (sameLength && matchFirstChar && \tCharOperation.equals(pattern, name, this.isCaseSensitive)) {", "-\t\t\t\treturn POSSIBLE_FULL_MATCH;", "-\t\t\t}", "-\t\t\t}", "-\t\t\tif (this.isCamelCase && matchFirstChar && CharOperation.camelCaseMatch(pattern, name)) {", "-\t\t\t\treturn POSSIBLE_CAMELCASE_MATCH;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddb1c5a1e74d4849c7e819296da1736c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "9170036b60b531a506b4ffe0efeda8e18d918bef", "commitAfterChange": "f8aee71b6b129d09f997301cd8500148a6feb325", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " protected boolean matchesName(char[] pattern, char[] name)", "signatureAfterChange": " protected boolean matchesName(char[] pattern, char[] name)", "diff": ["-\tif (name != null) {", "-\t\tswitch (this.matchMode) {", "-\t\t\tcase SearchPattern.R_EXACT_MATCH :", "-\t\t\t\treturn CharOperation.equals(pattern, name, this.isCaseSensitive);", "-\t\t\tcase SearchPattern.R_PREFIX_MATCH :", "-\t\t\t\treturn CharOperation.prefixEquals(pattern, name, this.isCaseSensitive);", "-\t\t\tcase SearchPattern.R_PATTERN_MATCH :", "-\t\t\t\tif (!this.isCaseSensitive)", "-\t\t\t\t\tpattern = CharOperation.toLowerCase(pattern);", "-\t\t\t\treturn CharOperation.match(pattern, name, this.isCaseSensitive);", "+\tif (name == null) return false; // cannot match null name", "+\treturn matchNameValue(pattern, name) != IMPOSSIBLE_MATCH;", "+}", "-\treturn false;"]}], "num": 56509}