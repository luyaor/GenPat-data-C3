{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "13c088bee9ee69a365ba3a2116a7a864", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e5de00a32df75f9f98c3aee7bc2ea0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "  \tpublic void printQualifiedReference(int sourceEnd)", "signatureAfterChange": "  \tpublic void printQualifiedReference(int sourceEnd)", "diff": ["+\t\tint currentTokenStartPosition = this.scanner.currentPosition;", "+\t\t\t\t\t\tcurrentTokenStartPosition = this.scanner.currentPosition;", "-\t\t\t\t\tdefault: ", "+\t\t\t\t\tcase TerminalTokens.TokenNameCOMMENT_BLOCK :", "+\t\t\t\t\tcase TerminalTokens.TokenNameCOMMENT_JAVADOC :", "+\t\t\t\t\t\tthis.printBlockComment(this.scanner.getRawTokenSource(), false);", "+\t\t\t\t\t\tcurrentTokenStartPosition = this.scanner.currentPosition;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase TerminalTokens.TokenNameCOMMENT_LINE :", "+\t\t\t\t\t\tthis.printCommentLine(this.scanner.getRawTokenSource());", "+\t\t\t\t\t\tcurrentTokenStartPosition = this.scanner.currentPosition;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase TerminalTokens.TokenNameIdentifier :", "+\t\t\t\t\tcase TerminalTokens.TokenNameDOT :", "+\t\t\t\t\t\tcurrentTokenStartPosition = this.scanner.currentPosition;", "+\t\t\t\t\tdefault:", "+\t\t\t\t\t\tthis.scanner.resetTo(currentTokenStartPosition, this.scannerEndPosition - 1);", "+\t\t\t\t\t\treturn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2e65aba59f772cd3f9d162347ab420d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/FormatterCommentParser.java", "commitBeforeChange": "37bfadecd597b554760a27206f364cc5b3777c73", "commitAfterChange": "375dcbee487ab6274ddf2b60c23e3979a6bc7b7e", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": " protected boolean verifyEndLine(int textPosition)", "signatureAfterChange": " protected boolean verifyEndLine(int textPosition)", "diff": ["-\tint endPosition = this.scanner.currentPosition;", "-\tthis.scanner.resetTo(textPosition, this.javadocEnd);", "-\tboolean tokenizeWhiteSpace = this.scanner.tokenizeWhiteSpace;", "-\tthis.scanner.tokenizeWhiteSpace = true;", "-\ttry {", "-\t\tint token = this.scanner.getNextToken();", "-\t\tint startPosition = textPosition;", "-\t\tif (token == TerminalTokens.TokenNameWHITESPACE) {", "-\t\t\twhile (this.scanner.currentCharacter == '*' || ScannerHelper.isWhitespace(this.scanner.currentCharacter)) {", "-\t\t\t\ttoken = this.scanner.getNextToken();", "-\t\t\t}", "-\t\t\tstartPosition = this.scanner.currentPosition;", "-\t\t}", "-\t\tcreateTag();", "-\t\tpushText(startPosition, endPosition);", "-\t}", "-\tcatch (InvalidInputException iie) {", "-\t\t// skip", "-\t}", "-\tfinally {", "-\t\tthis.scanner.tokenizeWhiteSpace = tokenizeWhiteSpace;", "-\t}", "-\tthis.scanner.resetTo(endPosition, this.javadocEnd);", "-\tthis.index = endPosition;", "+\t// do not verify anything at end of line while formatting"]}], "num": 38013}