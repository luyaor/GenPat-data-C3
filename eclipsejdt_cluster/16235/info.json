{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "69790aeceeb12a3c0dca086835294baa", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37115015e1183db768baa926e9854407", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "931e434bb3e4b9f62577b10f8123cfc028893969", "commitAfterChange": "c0b519c3b149b13ea0f307f0d3414359b2cf0639", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": "  public void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-", "-\tpublic void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo) {", "-\t\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE) == 0)\t{", "-\t\t//If inlinable field, forget the access emulation, the code gen will directly target it", "-\t\tif (((bits & DepthMASK) == 0) || (constant != Constant.NotAConstant)) {", "-\t\t\treturn;", "-\t\t}", "-\t\tif ((bits & RestrictiveFlagMASK) == Binding.LOCAL) {", "-\t\t\tcurrentScope.emulateOuterAccess((LocalVariableBinding) binding);", "-\t\t}", "+public void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo) {", "+\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE) == 0)\t{", "+\t//If inlinable field, forget the access emulation, the code gen will directly target it", "+\tif (((this.bits & ASTNode.DepthMASK) == 0) || (this.constant != Constant.NotAConstant)) {", "+\t\treturn;", "+\t}", "+\tif ((this.bits & ASTNode.RestrictiveFlagMASK) == Binding.LOCAL) {", "+\t\tcurrentScope.emulateOuterAccess((LocalVariableBinding) this.binding);", "+\t}", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52ff5ca78a51f59a0dcadfc4f1eef85c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tpublic void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": "  public void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\t", "-\tpublic void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo) {", "-\t", "-\t\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE) == 0)\t{", "-\t\t//If inlinable field, forget the access emulation, the code gen will directly target it", "-\t\tif (((bits & DepthMASK) == 0) || (constant != Constant.NotAConstant)) return;", "-\t", "-\t\tif ((bits & RestrictiveFlagMASK) == Binding.LOCAL) {", "-\t\t\tcurrentScope.emulateOuterAccess((LocalVariableBinding) binding);", "-\t\t}", "-\t\t}", "-\t}", "+", "+public void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo) {", "+\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE) == 0)\t{", "+\t\t//If inlinable field, forget the access emulation, the code gen will directly target it", "+\t\tif (((this.bits & ASTNode.DepthMASK) == 0) || (this.constant != Constant.NotAConstant)) return;", "+\t", "+\t\tif ((this.bits & ASTNode.RestrictiveFlagMASK) == Binding.LOCAL) {", "+\t\t\tcurrentScope.emulateOuterAccess((LocalVariableBinding) this.binding);", "+\t\t}", "+\t}", "+}"]}], "num": 16235}