{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eedd83818eca579768d71864e23ce44e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b36e7d08fbb73a9d3cefe833f3e92d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprivate boolean connectSuperclass()", "signatureAfterChange": " \tprivate boolean connectSuperclass()", "diff": ["-\t\tSourceTypeBinding sourceType = referenceContext.binding;", "-\t\tif (sourceType.id == T_JavaLangObject) { // handle the case of redefining java.lang.Object up front", "+\t\tSourceTypeBinding sourceType = this.referenceContext.binding;", "+\t\tif (sourceType.id == TypeIds.T_JavaLangObject) { // handle the case of redefining java.lang.Object up front", "-\t\t\tif (referenceContext.superclass != null || (referenceContext.superInterfaces != null && referenceContext.superInterfaces.length > 0))", "+\t\t\tif (this.referenceContext.superclass != null || (this.referenceContext.superInterfaces != null && this.referenceContext.superInterfaces.length > 0))", "-\t\tif (referenceContext.superclass == null) {", "+\t\tif (this.referenceContext.superclass == null) {", "-\t\tTypeReference superclassRef = referenceContext.superclass;", "+\t\tTypeReference superclassRef = this.referenceContext.superclass;", "-\t\t\tif (!superclass.isClass()) {", "+\t\t\tif (!superclass.isClass() && (superclass.tagBits & TagBits.HasMissingType) == 0) {", "-\t\t\t} else if (superclass.erasure().id == T_JavaLangEnum) {", "+\t\t\t} else if (superclass.erasure().id == TypeIds.T_JavaLangEnum) {", "+\t\t\t} else if ((superclass.tagBits & TagBits.HierarchyHasProblems) != 0", "+\t\t\t\t\t|| !superclassRef.resolvedType.isValidBinding()) {", "+\t\t\t\tsourceType.superclass = superclass;", "+\t\t\t\tsourceType.tagBits |= TagBits.HierarchyHasProblems; // propagate if missing supertype", "+\t\t\t\treturn superclassRef.resolvedType.isValidBinding(); // reported some error against the source type ?"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9059d9e1f88af0d7d2eeb487fc6d68cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tprivate boolean connectSuperclass()", "signatureAfterChange": " \tprivate boolean connectSuperclass()", "diff": ["-\t\tReferenceBinding superclass = findSupertype(referenceContext.superclass);", "-\t\tif (superclass != null) { // is null if a cycle was detected cycle", "-\t\t\treferenceContext.superclass.resolvedType = superclass; // hold onto the problem type", "-\t\t\tif (!superclass.isValidBinding()) {", "-\t\t\t\tproblemReporter().invalidSuperclass(sourceType, referenceContext.superclass, superclass);", "-\t\t\t} else if (superclass.isInterface()) {", "-\t\t\t\tproblemReporter().superclassMustBeAClass(sourceType, referenceContext.superclass, superclass);", "+\t\tTypeReference superclassRef = referenceContext.superclass;", "+\t\tReferenceBinding superclass = findSupertype(superclassRef);", "+\t\tif (superclass != null) { // is null if a cycle was detected cycle or a problem", "+\t\t\tif (superclass.isInterface()) {", "+\t\t\t\tproblemReporter().superclassMustBeAClass(sourceType, superclassRef, superclass);", "-\t\t\t\tproblemReporter().classExtendFinalClass(sourceType, referenceContext.superclass, superclass);", "+\t\t\t\tproblemReporter().classExtendFinalClass(sourceType, superclassRef, superclass);"]}], "num": 72739}