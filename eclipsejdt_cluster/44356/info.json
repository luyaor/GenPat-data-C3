{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2c4c6b5db804a9102ea1edf345f605f9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2eed154956eb99dd3d2a245c97e2472d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "commitAfterChange": "44855522f87e615f1ca0bfcda268b074e4443dfe", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \r public CompletionEngine(\r \tISearchableNameEnvironment nameEnvironment, ICompletionRequestor requestor, ConfigurableOption[] settings)", "signatureAfterChange": "\r \r \tpublic CompletionEngine(\r \t\tISearchableNameEnvironment nameEnvironment,\r \t\tICompletionRequestor requestor,\r \t\tConfigurableOption[] settings)", "diff": ["+\tpublic CompletionEngine(\r", "+\t\tISearchableNameEnvironment nameEnvironment,\r", "+\t\tICompletionRequestor requestor,\r", "+\t\tConfigurableOption[] settings) {\r", "-public CompletionEngine(\r", "-\tISearchableNameEnvironment nameEnvironment, ICompletionRequestor requestor, ConfigurableOption[] settings) {\r", "+\t\tthis.requestor = requestor;\r", "+\t\tthis.nameEnvironment = nameEnvironment;\r", "-\tthis.requestor = requestor;\r", "-\tthis.nameEnvironment = nameEnvironment;\r", "-\r", "-\tCompilerOptions options = new CompilerOptions(settings);\r", "-\tProblemReporter problemReporter =\r", "-\t\tnew ProblemReporter(\r", "-\t\t\tDefaultErrorHandlingPolicies.proceedWithAllProblems(),\r", "-\t\t\toptions,\r", "-\t\t\tnew DefaultProblemFactory(Locale.getDefault())) {\r", "-\t\t\t\tpublic void record(IProblem problem, CompilationResult unitResult) {\r", "-\t\t\t\t\tif (problem.getID() != ProblemIrritants.UnmatchedBracket) {\r", "-\t\t\t\t\t\tunitResult.record(problem);\r", "-\t\t\t\t\t\tCompletionEngine.this.requestor.acceptError(problem);\r", "-\t\t\t\t\t}\r", "+\t\toptions = new CompletionOptions(settings);\r", "+\t\tCompilerOptions compilerOptions = new CompilerOptions(settings);\r", "+\t\tProblemReporter problemReporter =\r", "+\t\t\tnew ProblemReporter(\r", "+\t\t\t\tDefaultErrorHandlingPolicies.proceedWithAllProblems(),\r", "+\t\t\t\tcompilerOptions,\r", "+\t\t\t\tnew DefaultProblemFactory(Locale.getDefault())) {\r", "+\t\t\tpublic void record(IProblem problem, CompilationResult unitResult) {\r", "+\t\t\t\tif (problem.getID() != ProblemIrritants.UnmatchedBracket) {\r", "+\t\t\t\t\tunitResult.record(problem);\r", "+\t\t\t\t\tCompletionEngine.this.requestor.acceptError(problem);\r", "-\t\t\t};\r", "-\r", "-\tthis.parser = new CompletionParser(problemReporter);\r", "-\tthis.lookupEnvironment = new LookupEnvironment(this, options, problemReporter, nameEnvironment);\r", "-}\r", "+\t\t};\r", "+\r", "+\t\tthis.parser =\r", "+\t\t\tnew CompletionParser(problemReporter, compilerOptions.getAssertMode());\r", "+\t\tthis.lookupEnvironment =\r", "+\t\t\tnew LookupEnvironment(this, compilerOptions, problemReporter, nameEnvironment);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78c3eeb2210f5d04abce5cdb4d203e43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "40383c2427f4645edcb9e28f2e15a8a778f0a951", "commitAfterChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \r public CompletionEngine(\r \tISearchableNameEnvironment nameEnvironment, ICompletionRequestor requestor, ConfigurableOption[] settings)", "signatureAfterChange": "\r \r \tpublic CompletionEngine(\r \t\tISearchableNameEnvironment nameEnvironment,\r \t\tICompletionRequestor requestor,\r \t\tConfigurableOption[] settings)", "diff": ["+\tpublic CompletionEngine(\r", "+\t\tISearchableNameEnvironment nameEnvironment,\r", "+\t\tICompletionRequestor requestor,\r", "+\t\tConfigurableOption[] settings) {\r", "-public CompletionEngine(\r", "-\tISearchableNameEnvironment nameEnvironment, ICompletionRequestor requestor, ConfigurableOption[] settings) {\r", "+\t\tthis.requestor = requestor;\r", "+\t\tthis.nameEnvironment = nameEnvironment;\r", "-\tthis.requestor = requestor;\r", "-\tthis.nameEnvironment = nameEnvironment;\r", "-\r", "-\tCompilerOptions options = new CompilerOptions(settings);\r", "-\tProblemReporter problemReporter =\r", "-\t\tnew ProblemReporter(\r", "-\t\t\tDefaultErrorHandlingPolicies.proceedWithAllProblems(),\r", "-\t\t\toptions,\r", "-\t\t\tnew DefaultProblemFactory(Locale.getDefault())) {\r", "-\t\t\t\tpublic void record(IProblem problem, CompilationResult unitResult) {\r", "-\t\t\t\t\tif (problem.getID() != ProblemIrritants.UnmatchedBracket) {\r", "-\t\t\t\t\t\tunitResult.record(problem);\r", "-\t\t\t\t\t\tCompletionEngine.this.requestor.acceptError(problem);\r", "-\t\t\t\t\t}\r", "+\t\toptions = new CompletionOptions(settings);\r", "+\t\tCompilerOptions compilerOptions = new CompilerOptions(settings);\r", "+\t\tProblemReporter problemReporter =\r", "+\t\t\tnew ProblemReporter(\r", "+\t\t\t\tDefaultErrorHandlingPolicies.proceedWithAllProblems(),\r", "+\t\t\t\tcompilerOptions,\r", "+\t\t\t\tnew DefaultProblemFactory(Locale.getDefault())) {\r", "+\t\t\tpublic void record(IProblem problem, CompilationResult unitResult) {\r", "+\t\t\t\tif (problem.getID() != ProblemIrritants.UnmatchedBracket) {\r", "+\t\t\t\t\tunitResult.record(problem);\r", "+\t\t\t\t\tCompletionEngine.this.requestor.acceptError(problem);\r", "-\t\t\t};\r", "-\r", "-\tthis.parser = new CompletionParser(problemReporter);\r", "-\tthis.lookupEnvironment = new LookupEnvironment(this, options, problemReporter, nameEnvironment);\r", "-}\r", "+\t\t};\r", "+\r", "+\t\tthis.parser =\r", "+\t\t\tnew CompletionParser(problemReporter, compilerOptions.getAssertMode());\r", "+\t\tthis.lookupEnvironment =\r", "+\t\t\tnew LookupEnvironment(this, compilerOptions, problemReporter, nameEnvironment);\r", "+\t}\r"]}], "num": 44356}