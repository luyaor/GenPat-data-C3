{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "500d0b0b8c64eef39039d61922b04873", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d067efecc078e6f3e89ed5fcdd344448", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BaseProcessorEnv.java", "commitBeforeChange": "b4f6df5ae08d61af8762ee59e5c247a670be227d", "commitAfterChange": "7007043cae1b12e48764a4ad7f71075181f1dd30", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public TypeDeclaration getTypeDeclaration(String name)", "signatureAfterChange": "     public TypeDeclaration getTypeDeclaration(String name)", "diff": ["-    // does not generated dependencies", "+    // does not generate dependencies", "-\t\t// get rid of the generics parts.", "+", "+    \t//First check cache", "+    \tTypeDeclaration result = _typeCache.get(name);", "+    \tif (result != null) return result;", "+", "+    \t// get rid of the generics parts.", "-\t\tif( typeBinding != null )", "-\t\t\treturn Factory.createReferenceType(typeBinding, this);", "-", "+\t\t", "-\t\ttypeBinding = getTypeDefinitionBindingFromName(name);", "-\t\tif( typeBinding != null ){\t\t\t", "-\t\t\treturn Factory.createReferenceType(typeBinding, this);", "-\t\t}", "-", "-\t\treturn null;", "+\t\tif (typeBinding == null)", "+\t\t\ttypeBinding = getTypeDefinitionBindingFromName(name);", "+\t\t", "+\t\tresult = Factory.createReferenceType(typeBinding, this);", "+    \t", "+    \t// update cache", "+    \tif (result != null)", "+    \t\t_typeCache.put(name, result);", "+    \treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da8d36d1732581b6574d53cbc20723a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BaseProcessorEnv.java", "commitBeforeChange": "80b216af2abfbc335ce04bf55fc463ba47e45873", "commitAfterChange": "8eb843ef75292ca86ade9a64a79ec382d0e5f4fa", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic static void getBinding(ASTNode node, List<IBinding> bindings)", "signatureAfterChange": "     protected void getDeclarations(ASTNode node, List<Declaration>decls)", "diff": ["-\tpublic static void getBinding(ASTNode node, List<IBinding> bindings)", "-\t{", "-\t\tif( node == null ) return;", "+    protected void getDeclarations(ASTNode node, List<Declaration>decls)", "+    {", "+    \tif( node == null ) return;", "+\t\t\t\tfinal EclipseDeclarationImpl decl; ", "-\t\t\t\t\tbindings.add(fieldBinding);", "+\t\t\t\t\tdecl = Factory.createDeclaration(fieldBinding, this);", "+\t\t\t\telse{", "+\t\t\t\t\tdecl = Factory.createDeclaration(frag, getFileForNode(frag), this);", "+\t\t\t\t}", "+\t\t\t\tif( decl != null )", "+\t\t\t\t\tdecls.add(decl);", "-        if(binding != null)", "-            bindings.add(binding);", "+\t\tfinal EclipseDeclarationImpl decl; ", "+\t\tif( binding != null )", "+\t\t\tdecl = Factory.createDeclaration(binding, this);", "+\t\telse{", "+\t\t\tdecl = Factory.createDeclaration(node, getFileForNode(node), this);", "+\t\t}", "+\t\tif( decl != null )", "+\t\t\tdecls.add( decl );", "+        ", "-\t}", "+    }"]}], "num": 61936}