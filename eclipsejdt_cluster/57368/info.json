{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e319692edbbba5babf96142aa44b4557", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64a72b1ac5f1481bbcdc9f3702f7555d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "d35754bf597e1e3c63426404dbcb66843b76444c", "commitAfterChange": "889cbee9e452a2b606e084167406ae9a949acd46", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": " public void generateBoxingConversion(int unboxedTypeID)", "signatureAfterChange": "  public void generateBoxingConversion(int unboxedTypeID)", "diff": ["+", "-    \t\t\tif (DEBUG) System.out.println(this.position + \"\\t\\tinvokestatic java.lang.Byte.valueOf(byte)\"); //$NON-NLS-1$", "-                    1, // argCount", "+                    1, // receiverAndArgsSize", "-    \t\t\tif (DEBUG) System.out.println(this.position + \"\\t\\tinvokespecial java.lang.Byte(byte)\"); //$NON-NLS-1$", "-                    1, // argCount", "+                    2, // receiverAndArgsSize", "-    \t\t\tif (DEBUG) System.out.println(this.position + \"\\t\\tinvokestatic java.lang.Short.valueOf(short)\"); //$NON-NLS-1$", "-                    1, // argCount", "+                    1, // receiverAndArgsSize", "-            \tif (DEBUG) System.out.println(this.position + \"\\t\\tinvokespecial java.lang.Short(short)\"); //$NON-NLS-1$", "-                    1, // argCount", "+                    2, // receiverAndArgsSize", "-            \tif (DEBUG) System.out.println(this.position + \"\\t\\tinvokestatic java.lang.Character.valueOf(char)\"); //$NON-NLS-1$", "-                    1, // argCount", "+                    1, // receiverAndArgsSize", "-            \tif (DEBUG) System.out.println(this.position + \"\\t\\tinvokespecial java.lang.Character(char)\"); //$NON-NLS-1$", "-                    1, // argCount", "+                    2, // receiverAndArgsSize", "-            \tif (DEBUG) System.out.println(this.position + \"\\t\\tinvokestatic java.lang.Integer.valueOf(int)\"); //$NON-NLS-1$", "-                    1, // argCount", "+                    1, // receiverAndArgsSize", "-            \tif (DEBUG) System.out.println(this.position + \"\\t\\tinvokespecial java.lang.Integer(int)\"); //$NON-NLS-1$", "-                    1, // argCount", "+                    2, // receiverAndArgsSize", "-            \tif (DEBUG) System.out.println(this.position + \"\\t\\tinvokestatic java.lang.Long.valueOf(long)\"); //$NON-NLS-1$", "-                    2, // argCount", "+                    2, // receiverAndArgsSize", "-            \tif (DEBUG) System.out.println(this.position + \"\\t\\tinvokespecial java.lang.Long(long)\"); //$NON-NLS-1$", "-                    2, // argCount", "+                    3, // receiverAndArgsSize", "-            \tif (DEBUG) System.out.println(this.position + \"\\t\\tinvokestatic java.lang.Float.valueOf(float)\"); //$NON-NLS-1$", "-                    1, // argCount", "+                    1, // receiverAndArgsSize", "-            \tif (DEBUG) System.out.println(this.position + \"\\t\\tinvokespecial java.lang.Float(float)\"); //$NON-NLS-1$", "-                    1, // argCount", "+                    2, // receiverAndArgsSize", "-            \tif (DEBUG) System.out.println(this.position + \"\\t\\tinvokestatic java.lang.Double.valueOf(double)\"); //$NON-NLS-1$", "-                    2, // argCount", "+                    2, // receiverAndArgsSize", "-            \tif (DEBUG) System.out.println(this.position + \"\\t\\tinvokespecial java.lang.Double(double)\"); //$NON-NLS-1$", "-                    2, // argCount", "+                    3, // receiverAndArgsSize", "-            \tif (DEBUG) System.out.println(this.position + \"\\t\\tinvokestatic java.lang.Boolean.valueOf(boolean)\"); //$NON-NLS-1$", "-                    1, // argCount", "+                    1, // receiverAndArgsSize", "-            \tif (DEBUG) System.out.println(this.position + \"\\t\\tinvokespecial java.lang.Boolean(boolean)\"); //$NON-NLS-1$", "-                    1, // argCount", "+                    2, // receiverAndArgsSize"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a963d9027602bee9d21de8c3782c68f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "667b6c6169416d9b79d86e73c3fa9c45930c36a8", "commitAfterChange": "8e69d36fa08db2d61d2c40fecd2494cfd19819f5", "methodNumberBeforeChange": 242, "methodNumberAfterChange": 242, "signatureBeforeChange": " \tprotected void tearDown() throws Exception", "signatureAfterChange": " \tprotected void tearDown() throws Exception", "diff": ["-\t\tif (JavaModelManager.DEBUG_302850) {", "-\t\t\tSystem.out.println(\"\t- Options before tear down:\");", "-\t\t\tSystem.out.println(\"\t\t+ Task tags:           \" + JavaCore.getOption(JavaCore.COMPILER_TASK_TAGS));", "-\t\t\tSystem.out.println(\"\t\t+ Task priorities:     \" + JavaCore.getOption(JavaCore.COMPILER_TASK_PRIORITIES));", "-\t\t\tSystem.out.println(\"\t\t+ Forbidden reference: \" + JavaCore.getOption(JavaCore.COMPILER_PB_FORBIDDEN_REFERENCE));", "-\t\t\tSystem.out.println(org.eclipse.jdt.core.tests.util.Util.indentString(new CompilerOptions(JavaCore.getOptions()).toString(), 2));", "-\t\t}", "-\t\tif (JavaModelManager.DEBUG_302850) {", "-\t\t\tSystem.out.println(\"\t- Options before comparison with defaults:\");", "-\t\t\tSystem.out.println(\"\t\t+ Task tags:           \" + JavaCore.getOption(JavaCore.COMPILER_TASK_TAGS));", "-\t\t\tSystem.out.println(\"\t\t+ Task priorities:     \" + JavaCore.getOption(JavaCore.COMPILER_TASK_PRIORITIES));", "-\t\t\tSystem.out.println(\"\t\t+ Forbidden reference: \" + JavaCore.getOption(JavaCore.COMPILER_PB_FORBIDDEN_REFERENCE));", "-\t\t\tSystem.out.println(org.eclipse.jdt.core.tests.util.Util.indentString(new CompilerOptions(JavaCore.getOptions()).toString(), 2));", "-\t\t\tSystem.out.println(\"\t- Default Options before comparison:\");", "-\t\t\tSystem.out.println(org.eclipse.jdt.core.tests.util.Util.indentString(new CompilerOptions(JavaCore.getDefaultOptions()).toString(), 2));", "-\t\t\tSystem.out.println(\"================================================================================\");", "-\t\t}", "-", "-\t\t", "-\t\tJavaModelManager.DEBUG_302850 = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf1d30caa019232ee421444bbe8b114b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "4dbfc96b81c8ea986466921f071c4e6377836a2c", "commitAfterChange": "b7f468690a70977c68b74d1aeee81bdba359d238", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": " \tpublic void deleteResource(IResource resource) throws CoreException", "signatureAfterChange": " \tpublic void deleteResource(IResource resource) throws CoreException", "diff": ["-\t\tCoreException lastException = null;", "-\t\ttry {", "-\t\t\tresource.delete(true, null);", "-\t\t\treturn;", "-\t\t} catch (CoreException e) {", "-\t\t\tlastException = e;", "-\t\t\t// just print for info", "-\t\t\tSystem.out.println(e.getMessage() + \" [\" + resource.getFullPath() + \"]\");", "-\t\t} catch (IllegalArgumentException iae) {", "-\t\t\t// just print for info", "-\t\t\tSystem.out.println(iae.getMessage() + \" [\" + resource.getFullPath() + \"]\");", "-\t\t}", "-\t\twhile (resource.isAccessible() && ++retryCount <= 60) {", "-\t\t\tSystem.out.println(\"Running GC and waiting 1s...\");", "-\t\t\ttry {", "+\t\twhile (++retryCount <= 60) {", "+\t\t\tif (!org.eclipse.jdt.core.tests.util.Util.delete(resource)) {", "-\t\t\t\tThread.sleep(1000);", "-\t\t\t} catch (InterruptedException e) {", "-\t\t\ttry {", "-\t\t\t\tresource.delete(true, null);", "-\t\t\t} catch (CoreException e) {", "-\t\t\t\tlastException = e;", "-\t\t\t\t// just print for info", "-\t\t\t\tSystem.out.println(\"Retry \"+retryCount+\": \"+ e.getMessage() + \" [\" + resource.getFullPath() + \"]\");", "-\t\t\t} catch (IllegalArgumentException iae) {", "-\t\t\t\t// just print for info", "-\t\t\t\tSystem.out.println(\"Retry \"+retryCount+\": \"+ iae.getMessage() + \" [\" + resource.getFullPath() + \"]\");", "-\t\t\t}", "-\t\t}", "-\t\tif (!resource.isAccessible()) {", "-\t\t\tSystem.out.println(\"Succeed to delete resource [\" + resource.getFullPath() + \"]\");", "-\t\t\treturn;", "-\t\t}", "-\t\tSystem.err.println(\"Failed to delete resource [\" + resource.getFullPath() + \"]\");", "-\t\tif (lastException != null) {", "-\t\t\tthrow lastException;"]}], "num": 57368}