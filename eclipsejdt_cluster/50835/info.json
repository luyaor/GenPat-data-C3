{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "547c1efe4679efe8744ad712402471a6", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5e379fab34cff9eca1dff17daff0dc2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "dfe6cc33aaef3c9c6160f09ab2a92557f3d235f0", "commitAfterChange": "27bcc195c17809f9c7f757f8ebe6641240ab9c60", "methodNumberBeforeChange": 124, "methodNumberAfterChange": 124, "signatureBeforeChange": " public void _test1001() throws CoreException, InterruptedException, IOException", "signatureAfterChange": " public void test1001() throws CoreException, InterruptedException, IOException", "diff": ["-public void _test1001() throws CoreException, InterruptedException, IOException {", "+// our mind", "+public void test1001() throws CoreException, InterruptedException, IOException {", "-\t\t\t\"\t      ^\\n\" + ", "-\t\t\t\"The type Y must implement the inherited abstract method I.bar(X)\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in /P3/Y.java (at line 1)\\n\" + ", "-\t\t\t\"\tclass Y implements I {\\n\" + ", "-\t\t\t\"\t      ^\\n\" + ", "+\t\t\t\"\t      ^\\n\" +", "+// we miss the first diagnostic - see justification in bugzilla", "+//\t\t\t\"The type Y must implement the inherited abstract method I.bar(X)\\n\" + ", "+//\t\t\t\"----------\\n\" + ", "+//\t\t\t\"2. ERROR in /P3/Y.java (at line 1)\\n\" + ", "+//\t\t\t\"\tclass Y implements I {\\n\" + ", "+//\t\t\t\"\t      ^\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa8a39db9bcc6e11cfcf4dc449a14d08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 208, "methodNumberAfterChange": 209, "signatureBeforeChange": " public void test412453()", "signatureAfterChange": " public void test412453()", "diff": ["-\t\t\"\tfinal Optional<Integer> min = empty.minBy((a, b) -> a - b);\\n\" + ", "-\t\t\"\t                                    ^^^^^\\n\" + ", "-\t\t\"The method minBy(Function<Integer,C>) in the type Y<Integer> is not applicable for the arguments ((<no type> a, <no type> b) -> (a - b))\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 13)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca857b86614df78ab1a112ccedafd52c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 158, "methodNumberAfterChange": 158, "signatureBeforeChange": " public void test401610e()", "signatureAfterChange": " public void test401610e()", "diff": ["-\t\t\t\t\"\t        ^^^\\n\" + ", "-\t\t\t\t\"The method foo(I<T>) in the type X is not applicable for the arguments (() -> {\\n\" + ", "-\t\t\t\t\"})\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"4. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\t\t\"\tnew X().foo(()->{});\\n\" + ", "+\t\t\t\t\"----------\\n\");", "+}"]}], "num": 50835}