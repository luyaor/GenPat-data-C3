{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c4d15e3099ee00866d1706466928cd7b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cc07cb686c8df637ee3e8eb0dd5a1bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  public void testCompletionFindSuperInterface() throws JavaModelException", "signatureAfterChange": "  public void testCompletionFindSuperInterface() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionFindSuperInterface.java\");", "+\tthis.wc = getWorkingCopy(", "+            \"/Completion/src/CompletionFindSuperInterface.java\",", "+            \"public class CompletionFindSuperInterface implements SuperInterface {\\n\"+", "+            \"}\");", "+    ", "+    ", "+    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+    String str = this.wc.getSource();", "+    String completeBehind = \"Super\";", "+    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "-\tString str = cu.getSource();", "-\tString completeBehind = \"Super\";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-\t\t", "-\tassertEquals(", "-\t\t\"element:SuperClass    completion:SuperClass    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\"element:SuperInterface    completion:SuperInterface    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_INTERFACE + R_UNQUALIFIED + R_NON_RESTRICTED),", "-\t\trequestor.getResults());", "+    if(CompletionEngine.PROPOSE_MEMBER_TYPES) {", "+\t    assertResults(", "+\t           \"SuperInterface[TYPE_REF]{SuperInterface, , LSuperInterface;, null, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_INTERFACE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\",", "+\t\t\t\trequestor.getResults());", "+    } else {", "+    \tassertResults(", "+\t            \"SuperClass[TYPE_REF]{SuperClass, , LSuperClass;, null, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\t\"SuperInterface[TYPE_REF]{SuperInterface, , LSuperInterface;, null, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_INTERFACE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\",", "+\t\t\t\trequestor.getResults());", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fbecd3593023f30c3b8616da1f1f293", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "71c4acdd0905e065690b5a7def2363cd736fd9d9", "commitAfterChange": "40efcac62f74a525f36207bf04469af4d555a161", "methodNumberBeforeChange": 695, "methodNumberAfterChange": 695, "signatureBeforeChange": " public void testCompletionVariableName14() throws JavaModelException", "signatureAfterChange": " public void testCompletionVariableName14() throws JavaModelException", "diff": ["+\t            \"\t\tFooBar pretheFo\\n\"+", "+\t            \"\t}\\n\"+", "+\t            \"}\");", "+\t    ", "+\t    ", "+\t    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+\t    String str = this.wc.getSource();", "+\t    String completeBehind = \"pretheFo\";", "+\t    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+\t    this.wc.codeComplete(cursorLocation, requestor, this.wcOwner);", "+\t", "+\t    assertResults(", "+\t\t\t\t\"preTheFoBar[VARIABLE_DECLARATION]{preTheFoBar, null, LFooBar;, preTheFoBar, null, \"+(R_DEFAULT  + R_INTERESTING + R_NAME_FIRST_PREFIX + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\t\"preTheFoBarsuf[VARIABLE_DECLARATION]{preTheFoBarsuf, null, LFooBar;, preTheFoBarsuf, null, \"+(R_DEFAULT  + R_INTERESTING + R_NAME_FIRST_PREFIX + R_NAME_FIRST_SUFFIX + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\t\"preTheFooBar[VARIABLE_DECLARATION]{preTheFooBar, null, LFooBar;, preTheFooBar, null, \"+(R_DEFAULT  + R_INTERESTING + R_NAME_FIRST_PREFIX + R_NAME_LESS_NEW_CHARACTERS + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\t\"preTheFooBarsuf[VARIABLE_DECLARATION]{preTheFooBarsuf, null, LFooBar;, preTheFooBarsuf, null, \"+(R_DEFAULT  + R_INTERESTING + R_NAME_FIRST_PREFIX + R_NAME_FIRST_SUFFIX + R_NAME_LESS_NEW_CHARACTERS + R_NON_RESTRICTED)+\"}\",", "+\t\t\t\trequestor.getResults());", "+\t} finally {", "+\t\toptions.put(JavaCore.CODEASSIST_LOCAL_PREFIXES,argumentPrefixPreviousValue);", "+\t\toptions.put(JavaCore.CODEASSIST_LOCAL_SUFFIXES,localPrefixPreviousValue);", "+\t\tJavaCore.setOptions(options);", "+\t}", "+}", "-\t\t\t\t\"preTheFooBar[VARIABLE_DECLARATION]{preTheFooBar, null, LFooBar;, preTheFooBar, null, \"+(R_DEFAULT  + R_INTERESTING + R_NAME_FIRST_PREFIX + R_NAME_LESS_NEW_CHARACTERS + R_NON_RESTRICTED)+\"}\\n\"+", "-\t\t\t\t\"preTheFooBarsuf[VARIABLE_DECLARATION]{preTheFooBarsuf, null, LFooBar;, preTheFooBarsuf, null, \"+(R_DEFAULT  + R_INTERESTING + R_NAME_FIRST_PREFIX + R_NAME_FIRST_SUFFIX + R_NAME_LESS_NEW_CHARACTERS + R_NON_RESTRICTED)+\"}\","]}], "num": 66897}