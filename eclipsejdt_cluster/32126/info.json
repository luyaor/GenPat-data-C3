{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2780836938094387d7ed51c3bdf8851c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fbce5259721262d9fbab062bf63e2c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "a601b6b1bd0055831cf914eda4a394af5ff40421", "commitAfterChange": "aae3a2ae7793bc4970c4033658428e24ab5d11f5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " protected boolean buildStructure(OpenableElementInfo info, final IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "signatureAfterChange": " protected boolean buildStructure(OpenableElementInfo info, final IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "diff": ["+\tWorkingCopyElementInfo workingCopyElementInfo = computeProblems ? (WorkingCopyElementInfo)unitInfo : null;", "-\t\t\t?  CompilationUnitProblemFinder.getProblemFactory(getElementName().toCharArray(), (WorkingCopyElementInfo)unitInfo, pm) ", "+\t\t\t?  CompilationUnitProblemFinder.getProblemFactory(getElementName().toCharArray(), workingCopyElementInfo, pm) ", "-\t\t((WorkingCopyElementInfo)unitInfo).problems = new ArrayList();", "+\t\tworkingCopyElementInfo.beginReporting();", "-\t\tCompilationUnit original = new CompilationUnit((IPackageFragment)getParent(), getElementName(), DefaultCompilationUnitOwner.PRIMARY);", "+\t\tCompilationUnit original = new CompilationUnit((IPackageFragment)getParent(), getElementName(), DefaultWorkingCopyOwner.PRIMARY);", "-\t\tCompilationUnitProblemFinder.process(unit, this, (WorkingCopyElementInfo)unitInfo, pm); ", "-\t", "-\t\t// TODO: can now report problems as they are computed", "-\t\treportProblemsIfNeeded((WorkingCopyElementInfo)info);", "+\t\tCompilationUnitProblemFinder.process(unit, this, workingCopyElementInfo, pm);", "+\t\tworkingCopyElementInfo.endReporting();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4e4e9a346fc9e2c7bcd0a53c46809fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "5b7577970cc1147a47fff02a981297149bac38c1", "commitAfterChange": "747a63a0a2a9b4e7029fd103555c522985364757", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": " protected boolean buildStructure(OpenableElementInfo info, final IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "signatureAfterChange": " protected boolean buildStructure(OpenableElementInfo info, final IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "diff": ["-\tif (!(info instanceof WorkingCopyElementInfo)) { // no check is done on root kind or exclusion pattern for working copies", "+\tif (!isWorkingCopy()) { // no check is done on root kind or exclusion pattern for working copies", "-\tboolean computeProblems = computeProblems(info);", "-\tWorkingCopyElementInfo workingCopyElementInfo = computeProblems ? (WorkingCopyElementInfo)unitInfo : null;", "+\tJavaModelManager.PerWorkingCopyInfo perWorkingCopyInfo = getPerWorkingCopyInfo();", "+\tboolean computeProblems = perWorkingCopyInfo != null && perWorkingCopyInfo.isActive();", "-\t\t\t?  CompilationUnitProblemFinder.getProblemFactory(getElementName().toCharArray(), workingCopyElementInfo, pm) ", "+\t\t\t?  CompilationUnitProblemFinder.getProblemFactory(getElementName().toCharArray(), perWorkingCopyInfo, pm) ", "-\t\tworkingCopyElementInfo.beginReporting();", "+\t\tperWorkingCopyInfo.beginReporting();", "-\t\tCompilationUnitProblemFinder.process(unit, this, workingCopyElementInfo, pm);", "-\t\tworkingCopyElementInfo.endReporting();", "+\t\tCompilationUnitProblemFinder.process(unit, this, perWorkingCopyInfo, pm);", "+\t\tperWorkingCopyInfo.endReporting();"]}], "num": 32126}