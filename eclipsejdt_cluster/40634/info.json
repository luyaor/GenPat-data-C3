{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5a0517b9a46695994659bdab9b965972", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a5455e67415440132acee3d67fbfef0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void checkExceptionHandlers(TypeBinding raisedException, ASTNode location, FlowInfo flowInfo, BlockScope scope)", "signatureAfterChange": "  public void checkExceptionHandlers(TypeBinding raisedException, ASTNode location, FlowInfo flowInfo, BlockScope scope)", "diff": ["-\t\t\tif ((caughtExceptions = exceptionContext.handledExceptions) != NoExceptions) {", "+\t\t\tif ((caughtExceptions = exceptionContext.handledExceptions) != Binding.NO_EXCEPTIONS) {", "-\t\t\t\t    \t? EqualOrMoreSpecific /* any exception */", "+\t\t\t\t    \t? Scope.EQUAL_OR_MORE_SPECIFIC /* any exception */", "-\t\t\t\t\t\tcase EqualOrMoreSpecific :", "+\t\t\t\t\t\tcase Scope.EQUAL_OR_MORE_SPECIFIC :", "-\t\t\t\t\t\tcase MoreGeneric :", "+\t\t\t\t\t\tcase Scope.MORE_GENERIC :"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77d17e1893407988779731a061bd57b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public void checkExceptionHandlers(TypeBinding[] raisedExceptions, ASTNode location, FlowInfo flowInfo, BlockScope scope)", "signatureAfterChange": "  public void checkExceptionHandlers(TypeBinding[] raisedExceptions, ASTNode location, FlowInfo flowInfo, BlockScope scope)", "diff": ["-\t\t\tif ((caughtExceptions = exceptionContext.handledExceptions) != NoExceptions) {", "+\t\t\tif ((caughtExceptions = exceptionContext.handledExceptions) != Binding.NO_EXCEPTIONS) {", "-\t\t\t\t\t\t    \t? EqualOrMoreSpecific /* any exception */", "+\t\t\t\t\t\t    \t? Scope.EQUAL_OR_MORE_SPECIFIC /* any exception */", "-\t\t\t\t\t\t\t\tcase EqualOrMoreSpecific :", "+\t\t\t\t\t\t\t\tcase Scope.EQUAL_OR_MORE_SPECIFIC :", "-\t\t\t\t\t\t\t\tcase MoreGeneric :", "+\t\t\t\t\t\t\t\tcase Scope.MORE_GENERIC :"]}], "num": 40634}