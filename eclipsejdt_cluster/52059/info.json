{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dba33d07738f80a8999cecdd2a709ecf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11e6315cdc6e05fdd5eecd8b43652ff9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/VarargsTest.java", "commitBeforeChange": "1c0c2bf77ea7eb024038ba5150fcc9eb4dd14084", "commitAfterChange": "1cdb6c1b0fb5ba08d4e282b871474685ab8baf3f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void test011()", "signatureAfterChange": " \tpublic void test011()", "diff": ["+\t\t\t\"The method count(int[]) of type Y should be tagged with @Override since it actually overrides a superclass method\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 2)\\n\" + ", "+\t\t\t\"\tclass Y extends X { void count(int[] values) {} }\\n\" + ", "+\t\t\t\"\t                         ^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"2. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tclass Z extends Y { void count(int... values) {} }\\n\" + ", "+\t\t\t\"\t                         ^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"The method count(int...) of type Z should be tagged with @Override since it actually overrides a superclass method\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 3)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e0b32e000cce4710ee90561512a6b90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b9c215c1a0014055731b42921e6d8437fe5d1c30", "commitAfterChange": "cf30dcc5cf110d772b62d35f57e0c35d494f0e46", "methodNumberBeforeChange": 460, "methodNumberAfterChange": 460, "signatureBeforeChange": " \tpublic void test458()", "signatureAfterChange": " \tpublic void test458()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 18)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 17)\\n\" + ", "+\t\t\t\"\tObject o= a.getOne();\\n\" + ", "+\t\t\t\"\t          ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The method getOne() belongs to the raw type A. References to generic type A<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 18)\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 18)\\n\" + ", "+\t\t\t\"\tNumber n1= b.getOne(); // fails\\n\" + ", "+\t\t\t\"\t           ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The method getOne() belongs to the raw type A. References to generic type A<E> should be parameterized\\n\" + "]}], "num": 52059}