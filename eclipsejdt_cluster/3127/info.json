{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "553464ecd849b2d6f80ee072b5d3be51", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b308c81ca7c7e9d8bbd98bc38e16c2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/State.java", "commitBeforeChange": "c4112ab397da10b85cbb2a3f081c4c91ed7c7975", "commitAfterChange": "2077df1da6fa132fd5beb7d042b102e760cf8cbf", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  void record(String typeLocator, char[][][] qualifiedRefs, char[][] simpleRefs, char[] mainTypeName, ArrayList typeNames)", "signatureAfterChange": "  void record(String typeLocator, char[][][] qualifiedRefs, char[][] simpleRefs, char[][] rootRefs, char[] mainTypeName, ArrayList typeNames)", "diff": ["-void record(String typeLocator, char[][][] qualifiedRefs, char[][] simpleRefs, char[] mainTypeName, ArrayList typeNames) {", "+void record(String typeLocator, char[][][] qualifiedRefs, char[][] simpleRefs, char[][] rootRefs, char[] mainTypeName, ArrayList typeNames) {", "-\t\tthis.references.put(typeLocator, new ReferenceCollection(qualifiedRefs, simpleRefs));", "+\t\tthis.references.put(typeLocator, new ReferenceCollection(qualifiedRefs, simpleRefs, rootRefs));", "-\t\tthis.references.put(typeLocator, new AdditionalTypeCollection(definedTypeNames, qualifiedRefs, simpleRefs));", "+\t\tthis.references.put(typeLocator, new AdditionalTypeCollection(definedTypeNames, qualifiedRefs, simpleRefs, rootRefs));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b72f6db764c2fe18ed762a48df116dd3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/State.java", "commitBeforeChange": "4e88e1625bb1c2659a2ee4ba931e466f5126f9f4", "commitAfterChange": "075da32620f3ceb13a370a8be8550de2baf091f1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \r void record(String location, char[][][] qualifiedRefs, char[][] simpleRefs, char[][] typeNames)", "signatureAfterChange": "\r \r void record(String location, char[][][] qualifiedRefs, char[][] simpleRefs, char[] mainTypeName, ArrayList typeNames)", "diff": ["-void record(String location, char[][][] qualifiedRefs, char[][] simpleRefs, char[][] typeNames) {\r", "-\treferences.put(location,\r", "-\t\t(typeNames != null && typeNames.length > 0)\r", "-\t\t\t? new AdditionalTypeCollection(typeNames, qualifiedRefs, simpleRefs)\r", "-\t\t\t: new ReferenceCollection(qualifiedRefs, simpleRefs));\r", "+void record(String location, char[][][] qualifiedRefs, char[][] simpleRefs, char[] mainTypeName, ArrayList typeNames) {\r", "+\tif (typeNames.size() == 1 && CharOperation.equals(mainTypeName, (char[]) typeNames.get(0))) {\r", "+\t\treferences.put(location, new ReferenceCollection(qualifiedRefs, simpleRefs));\r", "+\t} else {\r", "+\t\tchar[][] definedTypeNames = new char[typeNames.size()][];\r", "+\t\ttypeNames.toArray(definedTypeNames);\r", "+\t\treferences.put(location, new AdditionalTypeCollection(definedTypeNames, qualifiedRefs, simpleRefs));\r", "+\t}\r"]}], "num": 3127}