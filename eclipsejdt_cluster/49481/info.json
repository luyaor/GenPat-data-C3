{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e3077158bcd1c9655c218025257a5732", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b7a41d7bfe09f1db59516ca4bf8634c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "b44b4fd6439e774494f3a17d7ac456cabe7796df", "commitAfterChange": "bc5a9fd030c0a7d5b52fd1ae4200ecc835c0a584", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tprivate boolean detectCycle(SourceTypeBinding sourceType, ReferenceBinding superType, TypeReference reference)", "signatureAfterChange": " \tprivate boolean detectCycle(SourceTypeBinding sourceType, ReferenceBinding superType, TypeReference reference)", "diff": ["-\t\t\tproblemReporter().hierarchyCircularity(sourceType, superType, reference);", "-\t\t\tsourceType.tagBits |= HierarchyHasProblems;", "-\t\t\tsuperType.tagBits |= HierarchyHasProblems;", "-\t\t\treturn true;", "+\t\t\tif (((SourceTypeBinding) superType).scope.superTypeReference != null) { // if null then its connecting its type variables", "+\t\t\t\tproblemReporter().hierarchyCircularity(sourceType, superType, reference);", "+\t\t\t\tsourceType.tagBits |= HierarchyHasProblems;", "+\t\t\t\tsuperType.tagBits |= HierarchyHasProblems;", "+\t\t\t\treturn true;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9267ca59944126e2736d839371f89052", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "commitAfterChange": "b1d2801cbd77cde72fb8fb40e241e1d3e42f4b0f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tprotected boolean connectTypeVariables(TypeParameter[] typeParameters, boolean checkForErasedCandidateCollisions)", "signatureAfterChange": " \tprotected boolean connectTypeVariables(TypeParameter[] typeParameters, boolean checkForErasedCandidateCollisions)", "diff": ["-\t\t\t\t\t\t\t\tproblemReporter().forwardTypeVariableReference(typeParameter, varSuperType);", "-\t\t\t\t\t\t\t\ttypeVariable.tagBits |= TagBits.HierarchyHasProblems;", "-\t\t\t\t\t\t\t\tbreak firstBound; // do not keep first bound", "+\t\t\t\t\t\t\t\tif (compilerOptions().complianceLevel <= ClassFileConstants.JDK1_6) {", "+\t\t\t\t\t\t\t\t\tproblemReporter().forwardTypeVariableReference(typeParameter, varSuperType);", "+\t\t\t\t\t\t\t\t\ttypeVariable.tagBits |= TagBits.HierarchyHasProblems;", "+\t\t\t\t\t\t\t\t\tbreak firstBound; // do not keep first bound", "+\t\t\t\t\t\t\t\t}"]}], "num": 49481}