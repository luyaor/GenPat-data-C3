{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c78ff0ce76872b68cefa23db5d1e0dc8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b7e75bc8c1e65e311ae6ffc0c4b7bc0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/HookedJavaFileObject.java", "commitBeforeChange": "aba5db418de65ea21899bfdf893833cd0fc3f586", "commitAfterChange": "7aba284c4ea53048ed9ad4ccc85fef0f7294903a", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \t \tprotected void closed()", "signatureAfterChange": " \t \tprotected void closed()", "diff": ["-\t\t\tCompilationUnit unit = new CompilationUnit(null, _fileName, null /* encoding */);", "-\t\t\t_filer.addNewUnit(unit);", "+\t\t\tswitch(this.getKind()) {", "+\t\t\t\tcase SOURCE :", "+\t\t\t\t\tCompilationUnit unit = new CompilationUnit(null, _fileName, null /* encoding */);", "+\t\t\t\t\t_filer.addNewUnit(unit);", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase CLASS :", "+\t\t\t\t\tIBinaryType binaryType = null;", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tbinaryType = ClassFileReader.read(_fileName);", "+\t\t\t\t\t} catch (ClassFormatException e) {", "+\t\t\t\t\t\t// ignore", "+\t\t\t\t\t} catch (IOException e) {", "+\t\t\t\t\t\t// ignore", "+\t\t\t\t\t}", "+\t\t\t\t\tif (binaryType != null) {", "+\t\t\t\t\t\tchar[] name = binaryType.getName();", "+\t\t\t\t\t\tReferenceBinding type = this._filer._env._compiler.lookupEnvironment.getType(CharOperation.splitOn('/', name));", "+\t\t\t\t\t\tif (type != null && type.isValidBinding() && type.isBinaryBinding()) {", "+\t\t\t\t\t\t\t_filer.addNewClassFile(type);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4bf737775977bdf5e831cd0b0e7014b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "e37796f522b7bb4721626cf54f6fb6424b32950c", "commitAfterChange": "cb73a34d3fbf60bb435ba470954bcb213328d377", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void acceptResult(CompilationResult result)", "signatureAfterChange": "  public void acceptResult(CompilationResult result)", "diff": ["+\t\tIType mainType = null;", "+\t\tString mainTypeName = null;", "-\t\t\t\t\tIType type = null;", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\ttype = javaBuilder.javaProject.findType(qualifiedTypeName.replace('/', '.'));", "-\t\t\t\t\t} catch (JavaModelException e) {", "-\t\t\t\t\t\t// ignore", "+\t\t\t\t\tif (mainType == null)", "+\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\tmainTypeName = compilationUnit.initialTypeName; // slash separated qualified name \"p1/p1/A\"", "+\t\t\t\t\t\t\tmainType = javaBuilder.javaProject.findType(mainTypeName.replace('/', '.'));", "+\t\t\t\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t\t\t\t// ignore", "+\t\t\t\t\t\t}", "+\t\t\t\t\tIType type;", "+\t\t\t\t\tif (qualifiedTypeName.equals(mainTypeName))", "+\t\t\t\t\t\ttype = mainType;", "+\t\t\t\t\telse {", "+\t\t\t\t\t\tString simpleName = qualifiedTypeName.substring(qualifiedTypeName.lastIndexOf('/')+1);", "+\t\t\t\t\t\ttype = mainType == null ? null : mainType.getCompilationUnit().getType(simpleName);"]}], "num": 33926}