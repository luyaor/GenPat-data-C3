{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9eec35d4faa05970f575b793d9dbb720", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "257c55071c20950181325567525b614c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "0de5167791884524f72d9d44c10f0e243af65d00", "commitAfterChange": "07ab76f69fbeeb2f2fd54cdf3d01ee69344b9ae0", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": " public File getJavaHome()", "signatureAfterChange": " public File getJavaHome()", "diff": ["-\t\tString javaHome = System.getProperty(\"java.home\");//$NON-NLS-1$", "-\t\tif (javaHome != null) {", "-\t\t\tthis.javaHomeCache = new File(javaHome);", "-\t\t\tif (!this.javaHomeCache.exists())", "-\t\t\t\tthis.javaHomeCache = null;", "-\t\t}", "+\t\tthis.javaHomeCache = Util.getJavaHome();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5b5e91146107950857c3f9d3cdc80aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 74, "signatureBeforeChange": "\r \tprotected void setRawClasspath0(IClasspathEntry[] entries) throws JavaModelException", "signatureAfterChange": "\r \tprotected void setRawClasspath0(IClasspathEntry[] entries) throws JavaModelException", "diff": ["-\t\t\t\t\t\tif (root.isArchive()) {\r", "-\t\t\t\t\t\t\tIResource rsc= root.getUnderlyingResource();\r", "-\t\t\t\t\t\t\tif (rsc == null) {\r", "-\t\t\t\t\t\t\t\tif (indexManager != null) indexManager.indexJarFile(root, getUnderlyingResource().getName());\r", "-\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\tif (indexManager != null) indexManager.indexJarFile((IFile) rsc, getUnderlyingResource().getName());\r", "-\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\tif (root.isArchive()){\r", "+\t\t\t\t\t\t\tif (indexManager != null) indexManager.indexJarFile(root.getPath(), getUnderlyingResource().getName());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acc1562184099cf639c0ac8d22b289f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "8d4c1d1ffccad45ec9a12888c6b55b8b6baaa0c5", "commitAfterChange": "4b2447f980b1f004d5d76b9cf416fd4398082a5b", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "  public void evaluateNullAnnotations(Scope skope)", "signatureAfterChange": "  public void evaluateNullAnnotations()", "diff": ["-public void evaluateNullAnnotations(Scope skope) {", "+public void evaluateNullAnnotations() {", "-", "-\tif (this.scope != null)", "-\t\tskope = this.scope;", "-\tif (this.nullnessDefaultInitialized > 0 || !skope.compilerOptions().isAnnotationBasedNullAnalysisEnabled)", "+\tif (this.nullnessDefaultInitialized > 0 || !this.scope.compilerOptions().isAnnotationBasedNullAnalysisEnabled)", "-\t\t\t\tpkg == skope.environment().nonnullAnnotationPackage", "-\t\t\t\t|| pkg == skope.environment().nullableAnnotationPackage", "-\t\t\t\t|| pkg == skope.environment().nonnullByDefaultAnnotationPackage;", "+\t\t\t\tpkg == this.scope.environment().nonnullAnnotationPackage", "+\t\t\t\t|| pkg == this.scope.environment().nullableAnnotationPackage", "+\t\t\t\t|| pkg == this.scope.environment().nonnullByDefaultAnnotationPackage;", "-\t\t\t\tif (this.scope != null)", "-\t\t\t\t\tthis.scope.problemReporter().missingNonNullByDefaultAnnotation(this.scope.referenceContext);", "+\t\t\t\tthis.scope.problemReporter().missingNonNullByDefaultAnnotation(this.scope.referenceContext);", "-\tboolean usesNullTypeAnnotations = skope.environment().usesNullTypeAnnotations();", "-\tif (usesNullTypeAnnotations && this.scope != null) {", "+\tboolean usesNullTypeAnnotations = this.scope.environment().usesNullTypeAnnotations();", "+\tif (usesNullTypeAnnotations) {", "-\t\tif (this.scope != null) {", "-\t\t\tif (newDefaultNullness != NO_NULL_DEFAULT) {", "-\t\t\t\tif (isPackageInfo) {", "-\t\t\t\t\tpkg.defaultNullness = newDefaultNullness;", "-\t\t\t\t} else {", "-\t\t\t\t\tthis.defaultNullness = newDefaultNullness;", "-\t\t\t\t\tTypeDeclaration typeDecl = this.scope.referenceContext;", "-\t\t\t\t\tlong nullDefaultBits = annotationTagBits & (TagBits.AnnotationNullUnspecifiedByDefault|TagBits.AnnotationNonNullByDefault);", "-\t\t\t\t\tcheckRedundantNullnessDefaultRecurse(typeDecl, typeDecl.annotations, nullDefaultBits, false);", "-\t\t\t\t}", "-\t\t\t} else if (isPackageInfo || (isInDefaultPkg && !(this instanceof NestedTypeBinding))) {", "-\t\t\t\tthis.scope.problemReporter().missingNonNullByDefaultAnnotation(this.scope.referenceContext);", "-\t\t\t\tif (!isInDefaultPkg)", "-\t\t\t\t\tpkg.defaultNullness = NULL_UNSPECIFIED_BY_DEFAULT;", "+\t\tif (newDefaultNullness != NO_NULL_DEFAULT) {", "+\t\t\tif (isPackageInfo) {", "+\t\t\t\tpkg.defaultNullness = newDefaultNullness;", "+\t\t\t} else {", "+\t\t\t\tthis.defaultNullness = newDefaultNullness;", "+\t\t\t\tTypeDeclaration typeDecl = this.scope.referenceContext;", "+\t\t\t\tlong nullDefaultBits = annotationTagBits & (TagBits.AnnotationNullUnspecifiedByDefault|TagBits.AnnotationNonNullByDefault);", "+\t\t\t\tcheckRedundantNullnessDefaultRecurse(typeDecl, typeDecl.annotations, nullDefaultBits, false);", "+\t\t} else if (isPackageInfo || (isInDefaultPkg && !(this instanceof NestedTypeBinding))) {", "+\t\t\tthis.scope.problemReporter().missingNonNullByDefaultAnnotation(this.scope.referenceContext);", "+\t\t\tif (!isInDefaultPkg)", "+\t\t\t\tpkg.defaultNullness = NULL_UNSPECIFIED_BY_DEFAULT;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9a2ac852ec7b6efb215f6a428168907", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "4dd777707c2803e1e51e44f3ccb37074b166c552", "commitAfterChange": "bb0062c9650742fadc1d35f4bf3fa1b174bd1969", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " protected void consumeFieldAccess(boolean isSuperAccess)", "signatureAfterChange": " protected void consumeFieldAccess(boolean isSuperAccess)", "diff": ["-\tExpression node = this.expressionStack[this.expressionPtr];", "-\tif (node instanceof Reference) // should always be a FieldReference, but play it safe", "-\t\tthis.patternLocator.match((Reference) node, this.matchSet);", "-\telse", "-\t\tthis.patternLocator.match(node, this.matchSet);", "+", "+\t// this is always a Reference", "+\tthis.patternLocator.match((Reference) this.expressionStack[this.expressionPtr], this.matchSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1334466e6a2159c0c5c207fed245c46", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/MethodInvocationFragmentBuilder.java", "commitBeforeChange": "bef94b122a5806a6bc4d6007e2830abcf111676d", "commitAfterChange": "280d119d240fe15fdcda0abda2f680707bc40458", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic boolean visit(SuperMethodInvocation methodInvocation)", "signatureAfterChange": " \tpublic boolean visit(SuperMethodInvocation methodInvocation)", "diff": ["-\t\tfinal Name qualifier = methodInvocation.getQualifier();", "-\t\tif (qualifier != null) {", "-\t\t\tthis.fragmentsList.add(qualifier);", "-\t\t}", "-\t\tthis.fragmentsList.add(methodInvocation.getName());", "+\t\tthis.fragmentsList.add(methodInvocation);"]}], "num": 45952}