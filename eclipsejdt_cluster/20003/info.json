{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a57465133dd223607789c9bc74c5dd38", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59d2a6b990a33f3eb9d6776d72397df0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "2a736526cf0c07c962b917711ed6666ebeefdfa1", "commitAfterChange": "c012c3900814a42f4ddf6062be7a4a09cfd10693", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic synchronized void containerPut(IJavaProject project, IPath containerPath, IClasspathContainer container)", "signatureAfterChange": "  \tpublic synchronized void containerPut(IJavaProject project, IPath containerPath, IClasspathContainer container)", "diff": ["-\t\t", "-\t\tPreferences preferences = JavaCore.getPlugin().getPluginPreferences();", "-\t\tString containerKey = CP_CONTAINER_PREFERENCES_PREFIX+project.getElementName() +\"|\"+containerPath;//$NON-NLS-1$", "-\t\tString containerString = CP_ENTRY_IGNORE;", "-\t\ttry {", "-\t\t\tif (container != null) {", "-\t\t\t\tcontainerString = ((JavaProject)project).encodeClasspath(container.getClasspathEntries(), null, false);", "-\t\t\t}", "-\t\t} catch(JavaModelException e){", "-\t\t\t// could not encode entry: leave it as CP_ENTRY_IGNORE", "-\t\t}", "-\t\tpreferences.setDefault(containerKey, CP_ENTRY_IGNORE); // use this default to get rid of removed ones", "-\t\tpreferences.setValue(containerKey, containerString);", "-\t\tJavaCore.getPlugin().savePluginPreferences();", "+\t\t// container values are persisted in preferences during save operations, see #saving(ISaveContext)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0d4b3fe50915e474de8b7858662a06a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/AptReconcileTests.java", "commitBeforeChange": "b04af732a3a47936a23fd763b0f1a266fe2c010f", "commitAfterChange": "675036893efc507eeb48fc7f8ec7970945121ebd", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \t@SuppressWarnings(\"nls\") \tpublic void setUp() throws Exception", "signatureAfterChange": "  \t@SuppressWarnings(\"nls\") \tpublic void setUp() throws Exception", "diff": ["-\t\ttry ", "-\t\t{", "-\t\t\tsuper.setUp();\t\t\t", "-\t\t\tthis._problemRequestor = new ProblemRequestor();", "+\t\tsuper.setUp();\t\t\t", "+\t\t// disable auto-build.  We don't want build-time type-generation interfering with", "+\t\t// our reconcile tests.", "+\t\tString key = ResourcesPlugin.PREF_AUTO_BUILDING;", "+\t\tboolean value = false;", "+\t\tResourcesPlugin.getPlugin().getPluginPreferences().setValue(key, value);", "-\t\t\tfinal IJavaProject project = createJavaProject( TEST_PROJECT,", "-\t\t\t\t\tnew String[] { \"src\" }, new String[] { \"JCL15_LIB\" },", "-\t\t\t\t\t\"bin\", \"1.5\" );", "-\t\t\tproject.getProject().refreshLocal( IResource.DEPTH_INFINITE, null );", "-\t\t\tAptConfig.setEnabled(project, true);", "-\t\t\t", "-\t\t\t// make sure generated source folder exists in the project.  This is necessary", "-\t\t\t// for reconcile-time type-generation to work", "-\t\t\tAptPlugin.getAptProject(project).getGeneratedFileManager();", "-\t\t\t", "-\t\t\t_classesJarFile = TestUtil.createAndAddAnnotationJar( project );", "+\t\tthis._problemRequestor = new ProblemRequestor();", "-\t\t\tIFolder testFolder = createFolder( TEST_FOLDER );", "-\t\t\tif ( !testFolder.exists() )", "-\t\t\t\ttestFolder.create( true, false, null );", "-\t\t\t", "-\t\t\t// disable auto-build.  We don't want build-time type-generation interfering with", "-\t\t\t// our reconcile tests.", "-\t\t\tString key = ResourcesPlugin.PREF_AUTO_BUILDING;", "-\t\t\tboolean value = false;", "-\t\t\tResourcesPlugin.getPlugin().getPluginPreferences().setValue(key, value);", "-\t\t} ", "-\t\tcatch ( Exception t ) ", "-\t\t{", "-\t\t\tt.printStackTrace();", "-\t\t\tthrow t;", "-\t\t} ", "-\t\tcatch ( Throwable t ) ", "-\t\t{", "-\t\t\tt.printStackTrace();", "-\t\t\tthrow new RuntimeException( t ); ", "-\t\t}", "+\t\tfinal IJavaProject project = createJavaProject( TEST_PROJECT,", "+\t\t\t\tnew String[] { \"src\" }, new String[] { \"JCL15_LIB\" },", "+\t\t\t\t\"bin\", \"1.5\" );", "+\t\tTestUtil.createAndAddAnnotationJar(project);", "+\t\tAptConfig.setEnabled(project, true);", "+\t\t", "+\t\tcreateFolder( TEST_FOLDER );", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcd1eb5b683308b513bff726940d5f9c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "06936904198c611be62c824b31d20a6fe6e7c079", "commitAfterChange": "002201aa6b838d4f844feb263d7925f91914aab8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \tpublic void performPreBuildCheck(\r \t\tIResourceDelta delta,\r \t\tIJavaElement parent)", "signatureAfterChange": "\r \tpublic void performPreBuildCheck(\r \t\tIResourceDelta delta,\r \t\tIJavaElement parent)", "diff": ["-\t\ttry {\r", "-\t\t\tif (!ResourcesPlugin.getWorkspace().isAutoBuilding()) {\r", "-\t\t\t\tIterator iterator = this.projectsToUpdate.iterator();\r", "-\t\t\t\twhile (iterator.hasNext()) {\r", "-\t\t\t\t\ttry {\r", "-\t\t\t\t\t\tJavaProject project = (JavaProject)iterator.next();\r", "-\t\t\t\t\t\t\r", "-\t\t\t\t\t\t // force classpath marker refresh\r", "-\t\t\t\t\t\tproject.getResolvedClasspath(\r", "-\t\t\t\t\t\t\ttrue, // ignoreUnresolvedEntry\r", "-\t\t\t\t\t\t\ttrue); // generateMarkerOnError\r", "-\t\t\t\t\t\t\r", "-\t\t\t\t\t} catch (JavaModelException e) {\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r", "-\t\t\t\tif (!this.projectsToUpdate.isEmpty()){\r", "-\t\t\t\t\ttry {\r", "-\t\t\t\t\t\t// update all cycle markers\r", "-\t\t\t\t\t\tJavaProject.updateAllCycleMarkers();\r", "-\t\t\t\t\t} catch (JavaModelException e) {\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\t\t\t\t\r", "-\t\t\t}\r", "-\t\t} finally {\r", "-\t\t\tthis.projectsToUpdate = new HashSet();\r", "-\t\t}\r", "-\t\r"]}], "num": 20003}