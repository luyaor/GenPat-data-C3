{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c5412705bd92d9e5a4106d08dd1d2593", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8233c1c304193c65623f7767d9d2805", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ConditionalExpression.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\tif (conditionExpression == null) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetExpression(new SimpleName(getAST()));", "-\t\t\tgetAST().setModificationCount(count);", "+\t\tif (this.conditionExpression == null) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.conditionExpression = new SimpleName(this.ast);", "+\t\t\tpostLazyInit(this.conditionExpression, EXPRESSION_PROPERTY);", "-\t\treturn conditionExpression;", "+\t\treturn this.conditionExpression;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4c604ccb4d86f3b29679292e1395119", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/EnhancedForStatement.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Type getType()", "signatureAfterChange": "  \tpublic SingleVariableDeclaration getParameter()", "diff": ["-\tpublic Type getType() {", "-\t\tif (type == null) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetType(getAST().newPrimitiveType(PrimitiveType.INT));", "-\t\t\tgetAST().setModificationCount(count);", "+\tpublic SingleVariableDeclaration getParameter() {", "+\t\tif (this.parameter == null) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.parameter = this.ast.newSingleVariableDeclaration();", "+\t\t\tpostLazyInit(this.parameter, PARAMETER_PROPERTY);", "-\t\treturn type;", "+\t\treturn this.parameter;"]}], "num": 49795}