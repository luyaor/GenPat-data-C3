{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e782b9891818185e7b6b20fb147c27d0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91a5a8be4eefea4fec797581addba1f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "9ee78f50bb7fb9d70095ea7ff2d9f2e27d840c37", "commitAfterChange": "b6410432af18704990f18fa69a09dd7a76e8fb04", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " protected void reportAccurateTypeReference(ASTNode typeRef, char[] name, IJavaElement element, int accuracy, int rule) throws CoreException", "signatureAfterChange": " protected void reportAccurateTypeReference(SearchMatch match, ASTNode typeRef, char[] name) throws CoreException", "diff": ["-}", "-protected void reportAccurateTypeReference(ASTNode typeRef, char[] name, IJavaElement element, int accuracy, int rule) throws CoreException {", "-\tif (accuracy == -1) return;", "-\tif (!encloses(element)) return;", "-", "+protected void reportAccurateTypeReference(SearchMatch match, ASTNode typeRef, char[] name) throws CoreException {", "+\tif (match.getRule() == 0) return;", "+\tif (!encloses((IJavaElement)match.getElement())) return;", "+\t", "+\t// Compute source positions of the qualified reference ", "-\t", "-\t// compute source positions of the qualified reference ", "-\t\t\tSearchMatch match = newTypeReferenceMatch(element, accuracy, currentPosition, length, rule, typeRef);", "+\t\t\tmatch.setOffset(currentPosition);", "+\t\t\tmatch.setLength(length);", "-\tSearchMatch match = newTypeReferenceMatch(element, accuracy, sourceStart, sourceEnd-sourceStart+1, rule, typeRef);", "+", "+\t//\tReport match", "+\tmatch.setOffset(sourceStart);", "+\tmatch.setLength(sourceEnd-sourceStart+1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5c505bf386be546190caa897a796a7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "9ee78f50bb7fb9d70095ea7ff2d9f2e27d840c37", "commitAfterChange": "b6410432af18704990f18fa69a09dd7a76e8fb04", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 62, "signatureBeforeChange": " protected void reportAccurateParameterizedTypeReference(TypeReference typeRef, int start, int index, TypeReference[] typeArguments, IJavaElement element, int accuracy, int rule) throws CoreException", "signatureAfterChange": " protected void reportAccurateParameterizedTypeReference(SearchMatch match, TypeReference typeRef, int index, TypeReference[] typeArguments) throws CoreException", "diff": ["-protected void reportAccurateParameterizedTypeReference(TypeReference typeRef, int start, int index, TypeReference[] typeArguments, IJavaElement element, int accuracy, int rule) throws CoreException {", "-\tif (accuracy == -1) return;", "-\tif (!encloses(element)) return;", "+ */", "+protected void reportAccurateParameterizedTypeReference(SearchMatch match, TypeReference typeRef, int index, TypeReference[] typeArguments) throws CoreException {", "+\tif (match.getRule() == 0) return;", "+\tif (!encloses((IJavaElement)match.getElement())) return;", "-\t\tboolean isErasureMatch = (pattern instanceof OrPattern) ? ((OrPattern)pattern).isErasureMatch : ((JavaSearchPattern)pattern).isErasureMatch;", "+\t\tboolean shouldMatchErasure= (pattern instanceof OrPattern) ? ((OrPattern)pattern).isErasureMatch() : ((JavaSearchPattern)pattern).isErasureMatch();", "-\t\tif (isErasureMatch || !hasSignatures) {", "+\t\tif (shouldMatchErasure || !hasSignatures) {", "-\tSearchMatch match = newTypeReferenceMatch(element, accuracy, start, end-start+1, rule, typeRef);", "+\tmatch.setLength(end-match.getOffset()+1);", "-}"]}], "num": 58212}