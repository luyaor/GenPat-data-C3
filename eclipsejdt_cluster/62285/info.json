{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b5db714d2d645f20eaddc5f6e0ab75e3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13be13986c44566f8f2bff69ffcaaa6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "4cf47d627358d0cbaa8f441928dc92203ede93b7", "commitAfterChange": "9a5b5a99030a69cb46e540836dd1e4aec26aaffb", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t \tpublic boolean isEquivalentTo(TypeBinding otherType)", "signatureAfterChange": " \t \tpublic boolean isEquivalentTo(TypeBinding otherType)", "diff": ["-            int otherLength = otherParamType.arguments == null ? 0 : otherParamType.arguments.length;", "+            TypeBinding[] otherArguments = otherParamType.arguments;", "+            int otherLength = otherArguments == null ? 0 : otherArguments.length;", "+            // argument must be identical, only equivalence is allowed if wildcard other type", "-                if (!this.arguments[i].isEquivalentTo(otherParamType.arguments[i]))", "-                        return false;", "+            \tTypeBinding argument = this.arguments[i];", "+            \tTypeBinding otherArgument = otherArguments[i];", "+\t\t\t\tif (!(argument == otherArgument", "+\t\t\t\t\t\t|| (otherArgument.isWildcard()) && argument.isEquivalentTo(otherArgument))) {", "+\t\t\t\t\treturn false;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e128c7242d857ccfc2e9e17365b1ee9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "1302cba8a2d9e7deb014096a0cf438c7f031d8f4", "commitAfterChange": "629f19b9848dc98d62568a3c9b1db94e81597d7a", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public boolean isEquivalentTo(TypeBinding otherType)", "signatureAfterChange": " public boolean isEquivalentTo(TypeBinding otherType)", "diff": ["-\t        ReferenceBinding enclosing = enclosingType();", "-\t        if (enclosing != null && !enclosing.isEquivalentTo(otherParamType.enclosingType()))", "-\t            return false;", "+            if (!isStatic()) { // static member types do not compare their enclosing", "+\t\t        ReferenceBinding enclosing = enclosingType();", "+\t\t        if (enclosing != null && !enclosing.isEquivalentTo(otherParamType.enclosingType()))", "+\t\t            return false;", "+            }", "-\t        // argument must be identical, only equivalence is allowed if wildcard other type", "-\t        \tTypeBinding argument = this.typeVariables[i];", "-\t        \tTypeBinding otherArgument = otherArguments[i];", "-\t\t\t\tif (!(argument == otherArgument", "-\t\t\t\t\t\t|| (otherArgument.isWildcard()) && argument.isEquivalentTo(otherArgument))) {", "+\t        \tif (!this.typeVariables[i].isTypeArgumentContainedBy(otherArguments[i]))", "-\t\t\t\t}"]}], "num": 62285}