{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f1c361495ef4d1890ffcc83244b5ab17", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3143fe1a06c357abf86211a97ed5bbf5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "31cfa6b6488d9d9fc18c173f048355508ddab466", "commitAfterChange": "abd333621a0cbd2492673b0e887a888245d2d663", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprivate char[][] getParameterNames(char[] methodDescriptor)", "signatureAfterChange": "  \tprivate char[][] getParameterNames(char[] methodDescriptor, ICodeAttribute codeAttribute, int accessFlags)", "diff": ["-\tprivate char[][] getParameterNames(char[] methodDescriptor) {", "+\tprivate char[][] getParameterNames(char[] methodDescriptor, ICodeAttribute codeAttribute, int accessFlags) {", "-\t\tfor (int i = 0; i < paramCount; i++) {", "-\t\t\tparameterNames[i] = Util.bind(\"disassembler.parametername\").toCharArray(); //$NON-NLS-1$", "+\t\t// check if the code attribute has debug info for this method", "+\t\tif (codeAttribute != null) {", "+\t\t\tILocalVariableAttribute localVariableAttribute = codeAttribute.getLocalVariableAttribute();", "+\t\t\tif (localVariableAttribute != null) {", "+\t\t\t\tILocalVariableTableEntry[] entries = localVariableAttribute.getLocalVariableTable();", "+\t\t\t\tint startingIndex = (accessFlags & IModifierConstants.ACC_STATIC) != 0 ? 0 : 1;", "+\t\t\t\tfor (int i = 0; i < paramCount; i++) {", "+\t\t\t\t\tILocalVariableTableEntry searchedEntry = getEntryFor(startingIndex + i, entries);", "+\t\t\t\t\tif (searchedEntry != null) {", "+\t\t\t\t\t\tparameterNames[i] = searchedEntry.getName();", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tparameterNames[i] = Util.bind(\"disassembler.parametername\").toCharArray(); //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tfor (int i = 0; i < paramCount; i++) {", "+\t\t\t\t\tparameterNames[i] = Util.bind(\"disassembler.parametername\").toCharArray(); //$NON-NLS-1$", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} else {", "+\t\t\tfor (int i = 0; i < paramCount; i++) {", "+\t\t\t\tparameterNames[i] = Util.bind(\"disassembler.parametername\").toCharArray(); //$NON-NLS-1$", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af65f20f929a5a55c76680b8d210e77e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "bba2bca88efef9ed01c7e2181bcf1d41e5989888", "commitAfterChange": "bf39b08bac5fe04538b98cd37961d265ad6d7cd8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic DefaultBytecodeVisitor(long codeLength, StringBuffer buffer, String lineSeparator, int tabNumber)", "signatureAfterChange": " \t \tpublic DefaultBytecodeVisitor(ICodeAttribute codeAttribute, StringBuffer buffer, String lineSeparator, int tabNumber)", "diff": ["-\tpublic DefaultBytecodeVisitor(long codeLength, StringBuffer buffer, String lineSeparator, int tabNumber) {", "+\tpublic DefaultBytecodeVisitor(ICodeAttribute codeAttribute, StringBuffer buffer, String lineSeparator, int tabNumber) {", "+\t\tILocalVariableAttribute localVariableAttribute = codeAttribute.getLocalVariableAttribute();", "+\t\tint localVariableAttributeLength = localVariableAttribute == null ? 0 : localVariableAttribute.getLocalVariableTableLength();", "+\t\tif (localVariableAttributeLength != 0) {", "+\t\t\tthis.hashMap = new HashMap(localVariableAttributeLength);", "+\t\t\tILocalVariableTableEntry[] localVariableTableEntries = localVariableAttribute.getLocalVariableTable();", "+\t\t\tfor (int i = 0; i < localVariableAttributeLength; i++) {", "+\t\t\t\tILocalVariableTableEntry localVariableTableEntry = localVariableTableEntries[i];", "+\t\t\t\tswitch(i) {", "+\t\t\t\t\tcase 0 :", "+\t\t\t\t\tcase 1 :", "+\t\t\t\t\tcase 2 :", "+\t\t\t\t\tcase 3 :", "+\t\t\t\t\t\tthis.hashMap.put(INDEXES[i], new String(localVariableTableEntry.getName()));", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tdefault: ", "+\t\t\t\t\t\tthis.hashMap.put(new Integer(localVariableTableEntry.getIndex()), new String(localVariableTableEntry.getName()));", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} else {", "+\t\t\tthis.hashMap = null;", "+\t\t}", "+\t\tlong codeLength = codeAttribute.getCodeLength();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf92e934e568b30fd3273caab96aa884", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "3561a65aa6894682f3ea9a6665dee82b18c3d4bf", "commitAfterChange": "0b12d287970a543efa74b3f16f5eaa0f1a0fc0f9", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tpublic ITypeBinding[] getTypeBounds()", "signatureAfterChange": " \tpublic ITypeBinding[] getTypeBounds()", "diff": ["-\t\t// TODO (olivier) missing implementation of J2SE 1.5 language feature", "+\t\tif (this.binding instanceof TypeVariableBinding) {", "+\t\t\tTypeVariableBinding typeVariableBinding = (TypeVariableBinding) this.binding;", "+\t\t\tint boundsNumber = 0;", "+\t\t\tReferenceBinding superclass = typeVariableBinding.superclass();", "+\t\t\tif (superclass != null) {", "+\t\t\t\tboundsNumber++;", "+\t\t\t}", "+\t\t\tReferenceBinding[] superinterfaces = typeVariableBinding.superInterfaces();", "+\t\t\tint superinterfacesLength = 0;", "+\t\t\tif (superinterfaces != null) {", "+\t\t\t\tsuperinterfacesLength = superinterfaces.length;", "+\t\t\t\tboundsNumber += superinterfacesLength;", "+\t\t\t}", "+\t\t\tif (boundsNumber != 0) {", "+\t\t\t\tITypeBinding[] typeBounds = new ITypeBinding[boundsNumber];", "+\t\t\t\tint boundsIndex = 0;", "+\t\t\t\tif (superclass != null) {", "+\t\t\t\t\ttypeBounds[boundsIndex++] = this.resolver.getTypeBinding(superclass);", "+\t\t\t\t}", "+\t\t\t\tif (superinterfaces != null) {", "+\t\t\t\t\tfor (int i = 0; i < superinterfacesLength; i++, boundsIndex++) {", "+\t\t\t\t\t\ttypeBounds[boundsIndex] = this.resolver.getTypeBinding(superinterfaces[i]);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\treturn typeBounds;", "+\t\t\t}", "+\t\t}"]}], "num": 13725}