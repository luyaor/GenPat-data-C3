{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "83659d05c1d26418360ca5552457a687", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45635f6e2cbea34ebb41cfcda2b63027", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "b90626a8f6e0a122baef19254d7e1d462d97446e", "commitAfterChange": "afb20f30301e2620352c3a6eece24740efc080f3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected void acceptBinaryMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames, String[] paramterSignatures)", "signatureAfterChange": " protected void acceptBinaryMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames, String[] paramterSignatures, char[] uniqueKey)", "diff": ["-protected void acceptBinaryMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames, String[] paramterSignatures) {", "+protected void acceptBinaryMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames, String[] paramterSignatures, char[] uniqueKey) {", "+\t\tif(uniqueKey != null) {", "+\t\t\tmethod = new ParameterizedBinaryMethod(", "+\t\t\t\t\t(JavaElement)method.getParent(),", "+\t\t\t\t\tmethod.getElementName(),", "+\t\t\t\t\tmethod.getParameterTypes(),", "+\t\t\t\t\tnew String(uniqueKey));", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57d32721693accd59245b3421aea3bba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "dc74bbda99d44eb7c9bf5e21853e09a003a72218", "commitAfterChange": "3c289b9a951cfd3e36c9387c73b3893fba2c0158", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 66, "signatureBeforeChange": " \tprivate void findLocalMethodDeclarations( \t\tchar[] methodName, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean exactMatch, \t\tReferenceBinding receiverType)", "signatureAfterChange": " \tprivate void findLocalMethodDeclarations( \t\tchar[] methodName, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean exactMatch, \t\tReferenceBinding receiverType)", "diff": ["+\t\t\tif(method.typeVariables != null && method.typeVariables.length > 0) {", "+\t\t\t\tchar[][] excludedNames = findEnclosingTypeNames(scope);", "+\t\t\t\tchar[][] substituedParameterNames = substituteMethodTypeParameterNames(method.typeVariables, excludedNames);", "+\t\t\t\tif(substituedParameterNames != null) {", "+\t\t\t\t\tmethod = new ParameterizedMethodBinding(", "+\t\t\t\t\t\t\t\tmethod.declaringClass,", "+\t\t\t\t\t\t\t\tmethod,", "+\t\t\t\t\t\t\t\tsubstituedParameterNames,", "+\t\t\t\t\t\t\t\tscope.environment());", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\t"]}], "num": 67586}