{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8d014f6e878019f1c7eced690462b181", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "428be461330092fce1595fd0d7b77304", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CaseStatement.java", "commitBeforeChange": "e800493c73d077986e3f6522b8a98b80e9166ab4", "commitAfterChange": "b78055b0af8e506da7af4de2aaff490d0fdf2996", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic Constant resolveCase( \t\tBlockScope scope, \t\tTypeBinding switchExpressionType, \t\tSwitchStatement switchStatement)", "signatureAfterChange": " \tpublic Constant resolveCase( \t\tBlockScope scope, \t\tTypeBinding switchExpressionType, \t\tSwitchStatement switchStatement)", "diff": ["+\t\t// tag constant name with enum type for privileged access to its members", "+\t\tif (switchExpressionType.isEnum() && (constantExpression instanceof SingleNameReference)) {", "+\t\t\t((SingleNameReference) constantExpression).setActualReceiverType((ReferenceBinding)switchExpressionType);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98452b395f499bd0283522539a8f974f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "c4c5d1f7cea2c5dfe27a67808f94917c3f90af5b", "commitAfterChange": "fb92cfb822669ddb00db1cf41e3bdb1057d4d00d", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 131, "signatureBeforeChange": " \tprivate void computeExpectedTypes(ASTNode parent, ASTNode node, Scope scope)", "signatureAfterChange": " \tprivate void computeExpectedTypes(ASTNode parent, ASTNode node, Scope scope)", "diff": ["+\t\t} else if (parent instanceof SwitchStatement) {", "+\t\t\tSwitchStatement switchStatement = (SwitchStatement) parent;", "+\t\t\tif (switchStatement.expression != null &&", "+\t\t\t\t\tswitchStatement.expression.resolvedType != null) {", "+\t\t\t\taddExpectedType(switchStatement.expression.resolvedType, scope);", "+\t\t\t}"]}], "num": 63520}