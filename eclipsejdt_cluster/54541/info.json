{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2a7d56793dcc8f0eb809aab9323c69ed", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ec7664581ea76f0b097d36eaefac350", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "0ef15ab3e77b7c293b04de9a99ac186cbe5a3c0f", "commitAfterChange": "dd6bc11628a6724c7599b64bbc9d6dfcf59daa40", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic FlowInfo addInitializationsFrom(FlowInfo inits)", "signatureAfterChange": " \tpublic FlowInfo addInitializationsFrom(FlowInfo inits)", "diff": ["+\t\t// union of definitely null variables, ", "+\t\tdefiniteNulls |= otherInits.definiteNulls;", "+\t\t// union of definitely non null variables,", "+\t\tdefiniteNonNulls |= otherInits.definiteNonNulls;", "+", "-\t\t\t\t\t\textraPotentialInits[i] |= otherInits.extraPotentialInits[i++];", "+\t\t\t\t\t\textraPotentialInits[i] |= otherInits.extraPotentialInits[i];", "+\t\t\t\t\t\textraDefiniteNulls[i] |= otherInits.extraDefiniteNulls[i];", "+\t\t\t\t\t\textraDefiniteNonNulls[i] |= otherInits.extraDefiniteNonNulls[i++];", "-\t\t\t\t\t\textraPotentialInits[i] |= otherInits.extraPotentialInits[i++];", "+\t\t\t\t\t\textraPotentialInits[i] |= otherInits.extraPotentialInits[i];", "+\t\t\t\t\t\textraDefiniteNulls[i] |= otherInits.extraDefiniteNulls[i];", "+\t\t\t\t\t\textraDefiniteNonNulls[i] |= otherInits.extraDefiniteNonNulls[i++];", "-\t\t\t\t\twhile (i < length)", "-\t\t\t\t\t\textraDefiniteInits[i++] = 0;", "+\t\t\t\t\twhile (i < length) {", "+\t\t\t\t\t\textraDefiniteInits[i] = 0;", "+\t\t\t\t\t\textraDefiniteNulls[i] = 0;", "+\t\t\t\t\t\textraDefiniteNonNulls[i++] = 0;", "+\t\t\t\t\t}", "+\t\t\t\tSystem.arraycopy(otherInits.extraDefiniteNulls, 0, (extraDefiniteNulls = new long[otherLength]), 0, otherLength);\t\t\t", "+\t\t\t\tSystem.arraycopy(otherInits.extraDefiniteNonNulls, 0, (extraDefiniteNonNulls = new long[otherLength]), 0, otherLength);\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84e1adecf7abf38c87dd0c101bb5336d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tprivate void dumpTargetTypeContents(int targetType, AnnotationContext annotationContext)", "signatureAfterChange": " \tprivate void dumpTargetTypeContents(int targetType, AnnotationContext annotationContext)", "diff": ["-\t\t\tcase AnnotationTargetTypeConstants.THROWS :", "-\t\t\tcase AnnotationTargetTypeConstants.CLASS_EXTENDS_IMPLEMENTS :", "-\t\t\tcase AnnotationTargetTypeConstants.CLASS_EXTENDS_IMPLEMENTS_GENERIC_OR_ARRAY :", "-\t\t\tcase AnnotationTargetTypeConstants.OBJECT_CREATION :", "-\t\t\tcase AnnotationTargetTypeConstants.OBJECT_CREATION_GENERIC_OR_ARRAY :", "-\t\t\tcase AnnotationTargetTypeConstants.CLASS_LITERAL :", "-\t\t\tcase AnnotationTargetTypeConstants.CLASS_LITERAL_GENERIC_OR_ARRAY :", "-\t\t\tcase AnnotationTargetTypeConstants.TYPE_INSTANCEOF :", "-\t\t\tcase AnnotationTargetTypeConstants.TYPE_INSTANCEOF_GENERIC_OR_ARRAY :", "-\t\t\tcase AnnotationTargetTypeConstants.TYPE_CAST :", "-\t\t\tcase AnnotationTargetTypeConstants.TYPE_CAST_GENERIC_OR_ARRAY :", "+\t\t\tcase AnnotationTargetTypeConstants.CLASS_TYPE_PARAMETER :", "+\t\t\tcase AnnotationTargetTypeConstants.METHOD_TYPE_PARAMETER :", "+\t\t\t\t// parameter index", "+\t\t\t\tthis.contents[this.contentsOffset++] = (byte) annotationContext.info;", "+\t\t\t\tbreak;", "+", "+\t\t\tcase AnnotationTargetTypeConstants.CLASS_TYPE_PARAMETER_BOUND :", "+\t\t\t\t// type_parameter_index", "+\t\t\t\tthis.contents[this.contentsOffset++] = (byte) annotationContext.info;", "+\t\t\t\t// bound_index", "+\t\t\t\tthis.contents[this.contentsOffset++] = (byte) annotationContext.info2;", "+\t\t\t\tbreak;\t\t\t\t", "+\t\t\tcase AnnotationTargetTypeConstants.FIELD :", "+\t\t\tcase AnnotationTargetTypeConstants.METHOD_RECEIVER :", "+\t\t\tcase AnnotationTargetTypeConstants.METHOD_RETURN :", "+\t\t\t\t // target_info is empty_target", "+\t\t\t\tbreak;", "+\t\t\tcase AnnotationTargetTypeConstants.METHOD_FORMAL_PARAMETER :", "+\t\t\t\t// target_info is parameter index", "+\t\t\t\tthis.contents[this.contentsOffset++] = (byte) annotationContext.info;", "+\t\t\t\tbreak;", "+\t\t\t\t", "+\t\t\tcase AnnotationTargetTypeConstants.INSTANCEOF :", "+\t\t\tcase AnnotationTargetTypeConstants.NEW :", "+\t\t\tcase AnnotationTargetTypeConstants.EXCEPTION_PARAMETER :", "+\t\t\tcase AnnotationTargetTypeConstants.CONSTRUCTOR_REFERENCE :", "+\t\t\tcase AnnotationTargetTypeConstants.METHOD_REFERENCE :", "+\t\t\t\t// bytecode offset for new/instanceof/method_reference", "+\t\t\t\t// exception table entry index for exception_parameter", "+\t\t\tcase AnnotationTargetTypeConstants.CAST :", "+\t\t\t\t// bytecode offset", "+\t\t\t\tthis.contents[this.contentsOffset++] = (byte) (annotationContext.info >> 8);", "+\t\t\t\tthis.contents[this.contentsOffset++] = (byte) annotationContext.info;", "+\t\t\t\t// type_argument_index not set for cast", "+\t\t\t\tthis.contents[this.contentsOffset++] = (byte)0;", "+\t\t\t\tbreak;", "+\t\t\t\t", "+\t\t\tcase AnnotationTargetTypeConstants.CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT :", "+\t\t\tcase AnnotationTargetTypeConstants.METHOD_INVOCATION_TYPE_ARGUMENT :", "+\t\t\tcase AnnotationTargetTypeConstants.CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT :", "+\t\t\tcase AnnotationTargetTypeConstants.METHOD_REFERENCE_TYPE_ARGUMENT :", "+\t\t\t\t// bytecode offset", "+\t\t\t\tthis.contents[this.contentsOffset++] = (byte) (annotationContext.info >> 8);", "+\t\t\t\tthis.contents[this.contentsOffset++] = (byte) annotationContext.info;", "+\t\t\t\t// type_argument_index ", "+\t\t\t\tthis.contents[this.contentsOffset++] = (byte) annotationContext.info2;", "+\t\t\t\tbreak;", "+\t\t\t\t", "+\t\t\tcase AnnotationTargetTypeConstants.CLASS_EXTENDS :", "+\t\t\tcase AnnotationTargetTypeConstants.THROWS :\t\t\t", "+\t\t\t\t// For CLASS_EXTENDS - info is supertype index (-1 = superclass)", "+\t\t\t\t// For THROWS - info is exception table index", "+\t\t\t\tthis.contents[this.contentsOffset++] = (byte) (annotationContext.info >> 8);", "+\t\t\t\tthis.contents[this.contentsOffset++] = (byte) annotationContext.info;", "+\t\t\t\tbreak;", "+\t\t\t\t", "-\t\t\tcase AnnotationTargetTypeConstants.LOCAL_VARIABLE_GENERIC_OR_ARRAY :", "+\t\t\tcase AnnotationTargetTypeConstants.RESOURCE_VARIABLE :", "-\t\t\tcase AnnotationTargetTypeConstants.METHOD_PARAMETER :", "-\t\t\tcase AnnotationTargetTypeConstants.METHOD_PARAMETER_GENERIC_OR_ARRAY :", "-\t\t\t\tthis.contents[this.contentsOffset++] = (byte) annotationContext.info;", "-\t\t\t\tbreak;", "-\t\t\t// nothing to do", "-\t\t\t// case AnnotationTargetTypeConstants.METHOD_RECEIVER :", "-\t\t\t// case AnnotationTargetTypeConstants.METHOD_RECEIVER_GENERIC_OR_ARRAY :", "-\t\t\t//\tbreak;", "-\t\t\t// case AnnotationTargetTypeConstants.FIELD :", "-\t\t\t// case AnnotationTargetTypeConstants.FIELD_GENERIC_OR_ARRAY :", "-\t\t\t//\tbreak;", "-\t\t\tcase AnnotationTargetTypeConstants.METHOD_TYPE_PARAMETER :", "-\t\t\tcase AnnotationTargetTypeConstants.CLASS_TYPE_PARAMETER :", "-\t\t\t\tthis.contents[this.contentsOffset++] = (byte) annotationContext.info;", "-\t\t\t\tbreak;", "-\t\t\tcase AnnotationTargetTypeConstants.CLASS_TYPE_PARAMETER_BOUND :", "-\t\t\tcase AnnotationTargetTypeConstants.METHOD_TYPE_PARAMETER_BOUND_GENERIC_OR_ARRAY :", "-\t\t\tcase AnnotationTargetTypeConstants.CLASS_TYPE_PARAMETER_BOUND_GENERIC_OR_ARRAY :", "-\t\t\tcase AnnotationTargetTypeConstants.TYPE_ARGUMENT_METHOD_CALL :", "-\t\t\tcase AnnotationTargetTypeConstants.TYPE_ARGUMENT_METHOD_CALL_GENERIC_OR_ARRAY :", "-\t\t\tcase AnnotationTargetTypeConstants.TYPE_ARGUMENT_CONSTRUCTOR_CALL :", "-\t\t\tcase AnnotationTargetTypeConstants.TYPE_ARGUMENT_CONSTRUCTOR_CALL_GENERIC_OR_ARRAY :", "-\t\t\t\t// offset", "-\t\t\t\tthis.contents[this.contentsOffset++] = (byte) (annotationContext.info >> 8);", "-\t\t\t\tthis.contents[this.contentsOffset++] = (byte) annotationContext.info;", "-\t\t\t\t// type index", "-\t\t\t\tthis.contents[this.contentsOffset++] = (byte) annotationContext.info2;"]}], "num": 54541}