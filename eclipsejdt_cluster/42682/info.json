{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b36dc98260cdbfdbd8da0f07ce0c84c1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1270a0da19314d7d01fd452f2e4e5f85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public FieldBinding getField(char[] fieldName, boolean needResolve)", "signatureAfterChange": " public FieldBinding getField(char[] fieldName, boolean needResolve)", "diff": ["-// NOTE: the type of a field of a binary type is resolved when needed", "+//NOTE: the type of a field of a binary type is resolved when needed", "-\tint fieldLength = fieldName.length;", "-\tfor (int f = fields.length; --f >= 0;) {", "-\t\tchar[] name = fields[f].name;", "-\t\tif (name.length == fieldLength && CharOperation.equals(name, fieldName))", "-\t\t\treturn needResolve ? resolveTypeFor(fields[f]) : fields[f];", "+\t// lazily sort fields", "+\tif ((this.tagBits & TagBits.AreFieldsSorted) == 0) {", "+\t\tint length = this.fields.length;", "+\t\tif (length > 1) \tReferenceBinding.sortFields(this.fields, 0, length - 1);", "+\t\tthis.tagBits |= TagBits.AreFieldsSorted;", "+\t}\t\t", "+\tFieldBinding field = ReferenceBinding.binarySearch(fieldName, this.fields);", "+\tif (field != null) {", "+\t\treturn needResolve ? resolveTypeFor(field) : field;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c305466aaa477191a761d5027740614", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public FieldBinding[] fields()", "signatureAfterChange": " public FieldBinding[] fields()", "diff": ["+\tFieldBinding[] resolvedFields = this.fields;", "-\t\t}\t\t\t", "+\t\t}", "-\t\t\t\tthis.fields[i] = null;", "+\t\t\t\t// do not alter original field array until resolution is over, due to reentrance (143259)", "+\t\t\t\tif (resolvedFields == this.fields) {", "+\t\t\t\t\tSystem.arraycopy(this.fields, 0, resolvedFields = new FieldBinding[length], 0, length);", "+\t\t\t\t}", "+\t\t\t\tresolvedFields[i] = null;", "-\t\t\tint newSize = this.fields.length - failed;", "+\t\t\tint newSize = resolvedFields.length - failed;", "-\t\t\tfor (int i = 0, j = 0, length = this.fields.length; i < length; i++) {", "-\t\t\t\tif (this.fields[i] != null)", "-\t\t\t\t\tnewFields[j++] = this.fields[i];", "+\t\t\tfor (int i = 0, j = 0, length = resolvedFields.length; i < length; i++) {", "+\t\t\t\tif (resolvedFields[i] != null)", "+\t\t\t\t\tnewFields[j++] = resolvedFields[i];"]}], "num": 42682}