{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "07b35755615dd485c534aeed948e4d0c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6dd673b8ae53a969ae9cdeff10e9f1f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "af652d9d40e3e30a14ccbd2056144782592afc53", "commitAfterChange": "3dca78ae937ad139f018c4ddaaa87c3fe26600ed", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  public boolean tIsMoreSpecific(TypeBinding t, TypeBinding s)", "signatureAfterChange": "  public boolean sIsMoreSpecific(TypeBinding s, TypeBinding t)", "diff": ["-public boolean tIsMoreSpecific(TypeBinding t, TypeBinding s) {", "-\treturn isPolyExpression() ? !t.isBaseType() && s.isBaseType() : super.tIsMoreSpecific(t, s);", "+public boolean sIsMoreSpecific(TypeBinding s, TypeBinding t) {", "+\treturn isPolyExpression() ? !s.isBaseType() && t.isBaseType() : super.sIsMoreSpecific(s, t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f77b0e782eadb015425873c16a5df18d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "af652d9d40e3e30a14ccbd2056144782592afc53", "commitAfterChange": "3dca78ae937ad139f018c4ddaaa87c3fe26600ed", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  public boolean tIsMoreSpecific(TypeBinding t, TypeBinding s)", "signatureAfterChange": "  public boolean sIsMoreSpecific(TypeBinding s, TypeBinding t)", "diff": ["-public boolean tIsMoreSpecific(TypeBinding t, TypeBinding s) {", "-\treturn isPolyExpression() ? !t.isBaseType() && s.isBaseType() : super.tIsMoreSpecific(t, s);", "+public boolean sIsMoreSpecific(TypeBinding s, TypeBinding t) {", "+\treturn isPolyExpression() ? !s.isBaseType() && t.isBaseType() : super.sIsMoreSpecific(s, t);"]}], "num": 28873}