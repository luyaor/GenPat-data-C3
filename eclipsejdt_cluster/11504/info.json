{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "40ad2386aeb66813f8aa09deb48d2f2e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "193172d2b3247c0c85144847553ff1d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 102, "signatureBeforeChange": " \t \tpublic void testSimpleName()", "signatureAfterChange": " \t \tpublic void testSimpleName()", "diff": ["+\t\t// \"assert\" only became a keyword in J2SE 1.4 and we do *not* want to", "+\t\t// preclude the AST API from being used to analyze pre-1.4 code", "+\t\t", "+\t\t// check that \"enum\" is not considered a keyword", "+\t\t// \"enum\" only became a keyword in J2SE 1.5 and we do *not* want to", "+\t\t// preclude the AST API from being used to analyze pre-1.5 code", "+\t\tx.setIdentifier(\"enum\"); //$NON-NLS-1$", "+\t\t", "+\t\tif (ast.apiLevel() >= AST.LEVEL_3_0) {", "+\t\t\tAnnotationTypeDeclaration atd = ast.newAnnotationTypeDeclaration();", "+\t\t\tatd.setName(x);", "+\t\t\tassertTrue(x.isDeclaration() == true);", "+\t\t\tatd.setName(ast.newSimpleName(\"b\")); //$NON-NLS-1$", "+\t\t\tassertTrue(x.isDeclaration() == false);", "+\t\t}", "+\t\t", "+\t\tif (ast.apiLevel() >= AST.LEVEL_3_0) {", "+\t\t\tAnnotationTypeMemberDeclaration atmd = ast.newAnnotationTypeMemberDeclaration();", "+\t\t\tatmd.setName(x);", "+\t\t\tassertTrue(x.isDeclaration() == true);", "+\t\t\tatmd.setName(ast.newSimpleName(\"b\")); //$NON-NLS-1$", "+\t\t\tassertTrue(x.isDeclaration() == false);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3468ae95ec2899f6dd9b190c1b57956", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SimpleName.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic boolean isDeclaration()", "signatureAfterChange": "  \tpublic boolean isDeclaration()", "diff": ["+\t\tif (parent instanceof EnumDeclaration) {", "+\t\t\t// could only be the name of the enum type", "+\t\t\treturn true;", "+\t\t}", "+\t\tif (parent instanceof EnumConstantDeclaration) {", "+\t\t\t// could only be the name of the enum constant", "+\t\t\treturn true;", "+\t\t}", "+\t\tif (parent instanceof EnhancedForStatement) {", "+\t\t\tEnhancedForStatement p = (EnhancedForStatement) parent;", "+\t\t\t// make sure its the name of the loop variable (not the initializer)", "+\t\t\treturn (p.getName() == this);", "+\t\t}", "+\t\tif (parent instanceof TypeParameter) {", "+\t\t\t// could only be the type variable name", "+\t\t\treturn true;", "+\t\t}", "+\t\tif (parent instanceof AnnotationTypeDeclaration) {", "+\t\t\t// could only be the name of the annotation type", "+\t\t\treturn true;", "+\t\t}", "+\t\tif (parent instanceof AnnotationTypeMemberDeclaration) {", "+\t\t\tAnnotationTypeMemberDeclaration p = (AnnotationTypeMemberDeclaration) parent;", "+\t\t\t// make sure its the name of the member (not the default)", "+\t\t\treturn (p.getName() == this);", "+\t\t}"]}], "num": 11504}