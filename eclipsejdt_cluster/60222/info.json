{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f019d7782650664e843d178090fde18d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0388e4e0dde9311a70ad0add278de5f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "6541d75050f353e81b9f6a8ff41c07620d6b791c", "commitAfterChange": "36fb90550dd82b50b969bbbbd80f2aeb1af1f9a9", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " public void setupExternalJCL() throws IOException", "signatureAfterChange": " public void setupExternalJCL() throws IOException", "diff": ["-\t\t//copy either file that is missing", "-\t\tif (!jclMin.exists()) {", "-\t\t\tjava.io.File resourceJCLMin =", "-\t\t\t\tnew java.io.File(resourceJCLDir + separator + \"jclMin.jar\");", "+\t\t//copy either file that is missing or less recent than the one in workspace", "+\t\tjava.io.File resourceJCLMin =", "+\t\t\tnew java.io.File(resourceJCLDir + separator + \"jclMin.jar\");", "+\t\tif (jclMin.lastModified() < resourceJCLMin.lastModified()) {", "-\t\tif (!jclMinsrc.exists()) {", "-\t\t\tjava.io.File resourceJCLMinsrc =", "-\t\t\t\tnew java.io.File(resourceJCLDir + separator + \"jclMinsrc.zip\");", "+\t\tjava.io.File resourceJCLMinsrc =", "+\t\t\tnew java.io.File(resourceJCLDir + separator + \"jclMinsrc.zip\");", "+\t\tif (jclMinsrc.lastModified() < resourceJCLMinsrc.lastModified()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc930f31977851ef43ad8db8c4bc175f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ConverterTestSetup.java", "commitBeforeChange": "57a786b54662e393b4b035310c470971cc6bb7db", "commitAfterChange": "3589e32eb51b2bef28737cbe3f012998cb3208db", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void setupConverterJCL() throws IOException", "signatureAfterChange": " \tpublic void setupConverterJCL() throws IOException", "diff": ["-\t\t\tif (!jclMin.exists()) {", "-\t\t\t\tjava.io.File resourceJCLMin =", "-\t\t\t\t\tnew java.io.File(resourceJCLDir + separator + \"converterJclMin.jar\"); //$NON-NLS-1$", "+\t\t\tjava.io.File resourceJCLMin =", "+\t\t\t\tnew java.io.File(resourceJCLDir + separator + \"converterJclMin.jar\"); //$NON-NLS-1$", "+\t\t\tif (!jclMin.exists() || jclMin.length() != resourceJCLMin.length()) {", "-\t\t\tif (!jclMinsrc.exists()) {", "-\t\t\t\tjava.io.File resourceJCLMinsrc =", "-\t\t\t\t\tnew java.io.File(resourceJCLDir + separator + \"converterJclMinsrc.zip\"); //$NON-NLS-1$", "+\t\t\tjava.io.File resourceJCLMinsrc =", "+\t\t\t\tnew java.io.File(resourceJCLDir + separator + \"converterJclMinsrc.zip\"); //$NON-NLS-1$", "+\t\t\tif (!jclMinsrc.exists() || jclMinsrc.length() != resourceJCLMinsrc.length()) {"]}], "num": 60222}