{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "526fed7f91b7decdaa67c7f8e7e61e99", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "734400bef7829bbd455175b20813e5b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "5dd0de42e39b5ae6b6ed70261ede6298820c064c", "commitAfterChange": "2d1b668da982fab23d85fda225f2e9df3073c2e1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, \tFlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "signatureAfterChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, \tFlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "diff": ["-\t\t\t\tmanageSyntheticAccessIfNecessary(currentScope, lastFieldBinding, this.actualReceiverType, 0, flowInfo);", "+\t\t\t\tmanageSyntheticAccessIfNecessary(currentScope, lastFieldBinding, 0, flowInfo);", "-\t\t\t\tmanageSyntheticAccessIfNecessary(", "-\t\t\t\t\tcurrentScope,", "-\t\t\t\t\tlastFieldBinding,", "-\t\t\t\t\ti == 0", "-\t\t\t\t\t\t? ((VariableBinding)this.binding).type", "-\t\t\t\t\t\t: this.otherBindings[i-1].type,", "-\t\t\t\t\ti + 1,", "-\t\t\t\t\tflowInfo);", "+\t\t\t\tmanageSyntheticAccessIfNecessary(currentScope, lastFieldBinding, i + 1, flowInfo);", "-\t\tTypeBinding lastReceiverType;", "-\t\tswitch (otherBindingsCount) {", "-\t\t\tcase 0 :", "-\t\t\t\tlastReceiverType = this.actualReceiverType;", "-\t\t\t\tbreak;", "-\t\t\tcase 1 :", "-\t\t\t\tlastReceiverType = ((VariableBinding)this.binding).type;", "-\t\t\t\tbreak;", "-\t\t\tdefault:", "-\t\t\t\tlastReceiverType = this.otherBindings[otherBindingsCount-2].type;", "-\t\t\t\tbreak;", "-\t\t}", "-\t\tmanageSyntheticAccessIfNecessary(", "-\t\t\tcurrentScope,", "-\t\t\tlastFieldBinding,", "-\t\t\tlastReceiverType,", "-\t\t\totherBindingsCount,", "-\t\t\tflowInfo);", "+\t\tmanageSyntheticAccessIfNecessary(currentScope, lastFieldBinding, otherBindingsCount, flowInfo);", "-\t// equivalent to valuesRequired[maxOtherBindings]", "-\tTypeBinding lastReceiverType;", "-\tswitch (otherBindingsCount) {", "-\t\tcase 0 :", "-\t\t\tlastReceiverType = this.actualReceiverType;", "-\t\t\tbreak;", "-\t\tcase 1 :", "-\t\t\tlastReceiverType = ((VariableBinding)this.binding).type;", "-\t\t\tbreak;", "-\t\tdefault :", "-\t\t\tlastReceiverType = this.otherBindings[otherBindingsCount-2].type;", "-\t\t\tbreak;", "-\t}", "-\tmanageSyntheticAccessIfNecessary(currentScope, lastFieldBinding, lastReceiverType, -1 /*write-access*/, flowInfo);", "+\tmanageSyntheticAccessIfNecessary(currentScope, lastFieldBinding, -1 /*write-access*/, flowInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa237e00ca6a46eb2a6e21f33bcc5997", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "19b4c669e6d8313d03dbcc8b595622002fe408a5", "commitAfterChange": "7b084156620c5c922d11b27bd8e1266a04bb9736", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " void faultInImports()", "signatureAfterChange": " void faultInImports()", "diff": ["-\t\tfor (int i = 0; i < this.imports.length; i++) {", "-\t\t\t// cache default-imported null annotation types:", "-\t\t\tif (!this.imports[i].onDemand) {", "-\t\t\t\tchar[][] importName = this.imports[i].compoundName;", "-\t\t\t\tthis.typeOrPackageCache.put(importName[importName.length-1], this.imports[i].resolvedImport);", "-\t\t\t}", "-\t\t}", "-\tint numberOfDefaultImports = 1;", "-\tif (this.environment.globalOptions.defaultImportNullAnnotationTypes) {", "-\t\tnumberOfDefaultImports += 2;", "-\t\tnumberOfImports += 2;", "-\t}", "-\tImportBinding[] defaultImports = getDefaultImports(); // consistent number of default imports is ensured in LookupEnvironment.makeNullAnnotationTypeImports()", "-\tfor (int i = 0; i < numberOfDefaultImports; i++) {", "-\t\tresolvedImports[i] = defaultImports[i];", "-\t}", "-", "-\tint index = numberOfDefaultImports;", "+\tresolvedImports[0] = getDefaultImports()[0];", "+\tint index = 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5cc5043c12f573a982c2afa99d83b2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MethodDeclaration.java", "commitBeforeChange": "124a401b35ddb3cc0555282bbef1b6f8dc3584d3", "commitAfterChange": "fd21f493e3168b87fbe342edd55057dcfebdb3df", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void analyseCode(ClassScope classScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void analyseCode(ClassScope classScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\tif (this.arguments != null) {", "-\t\t\t\tfor (int i = 0, count = this.arguments.length; i < count; i++) {", "-\t\t\t\t\tthis.bits |= (this.arguments[i].bits & ASTNode.HasTypeAnnotations);", "-\t\t\t\t\t// if this method uses a type parameter declared by the declaring class,", "-\t\t\t\t\t// it can't be static. https://bugs.eclipse.org/bugs/show_bug.cgi?id=318682", "-\t\t\t\t\tif (this.arguments[i].binding != null && (this.arguments[i].binding.type instanceof TypeVariableBinding)) {", "-\t\t\t\t\t\tBinding declaringElement = ((TypeVariableBinding)this.arguments[i].binding.type).declaringElement;", "-\t\t\t\t\t\tif (this.binding != null && this.binding.declaringClass == declaringElement)", "-\t\t\t\t\t\t\tthis.bits &= ~ASTNode.CanBeStatic;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}"]}], "num": 67027}