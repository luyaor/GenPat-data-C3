{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0d60d50b2b78621df2f9dea86054c483", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c2620775211ff5a483bd811accb8001", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "9e733725973bf60aeaebc889415ea2286c54f96e", "commitAfterChange": "3c311a61671e5b7f3b27e7c52a90844815a7ac27", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "\r \tpublic IClasspathEntry[] getResolvedClasspath(\r \t\tIClasspathEntry[] classpathEntries,\r \t\tboolean ignoreUnresolvedEntry,\r \t\tboolean generateMarkerOnError)\r \t\tthrows JavaModelException", "signatureAfterChange": "\r \tpublic IClasspathEntry[] getResolvedClasspath(\r \t\tIClasspathEntry[] classpathEntries,\r \t\tboolean ignoreUnresolvedEntry,\r \t\tboolean generateMarkerOnError)\r \t\tthrows JavaModelException", "diff": ["-\t\t\t\t\t// container was bound, container entries could be variables\r", "+\t\t\t\t\t// container was bound\r", "-\t\t\t\t\t\t\r", "-\t\t\t\t\t\t// container entry is variable ?\r", "-\t\t\t\t\t\tif (containerRawEntry.getEntryKind() == IClasspathEntry.CPE_VARIABLE){\r", "-\t\t\t\t\t\t\tresolvedEntry = JavaCore.getResolvedClasspathEntry(containerRawEntry);\r", "-\t\t\t\t\t\t\tif (resolvedEntry == null) {\r", "-\t\t\t\t\t\t\t\tif (!ignoreUnresolvedEntry) {\r", "-\t\t\t\t\t\t\t\t\tthrow new JavaModelException(\r", "-\t\t\t\t\t\t\t\t\t\tnew JavaModelStatus(\r", "-\t\t\t\t\t\t\t\t\t\t\tIJavaModelStatusConstants.CP_VARIABLE_PATH_UNBOUND,\r", "-\t\t\t\t\t\t\t\t\t\t\tcontainerRawEntry.getPath().toString()));\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\tresolvedEntries.add(resolvedEntry);\r", "-\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\tresolvedEntries.add(containerRawEntry);\r", "-\t\t\t\t\t\t}\r", "+\t\t\t\t\t\tresolvedEntries.add(containerRawEntry);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e79121686ec7c954e33df4d5baaaaaa6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "33dd642b2c9ac363569515524c4de0bd2712355d", "commitAfterChange": "81506ae8cde4c9731bf1393802436c42681071e3", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": "\r public void generateSyntheticArgumentValues(BlockScope currentScope, ReferenceBinding targetType, Expression enclosingInstance, AstNode invocationSite)", "signatureAfterChange": "\r public void generateSyntheticArgumentValues(BlockScope currentScope, ReferenceBinding targetType, Expression enclosingInstance, AstNode invocationSite)", "diff": ["-\t\t\t\tif (currentScope.environment().options.complianceLevel >= CompilerOptions.JDK1_4){\r", "-\t\t\t\t\tenclosingInstance.generateCode(currentScope, this, true);\r", "-\t\t\t\t\tif (syntheticArgType == targetEnclosingType){\r", "-\t\t\t\t\t\tthis.dup();\r", "-\t\t\t\t\t} \r", "-\t\t\t\t\tthis.invokeObjectGetClass(); // causes null check for all explicit enclosing instances\r", "-\t\t\t\t\tthis.pop();\r", "-\t\t\t\t} else {\r", "-\t\t\t\t\tenclosingInstance.generateCode(currentScope, this, syntheticArgType == targetEnclosingType);\r", "-\t\t\t\t}\t\t\t\r", "+\t\t\t\t//if (currentScope.environment().options.complianceLevel >= CompilerOptions.JDK1_4){\r", "+\t\t\t\tenclosingInstance.generateCode(currentScope, this, true);\r", "+\t\t\t\tif (syntheticArgType == targetEnclosingType){\r", "+\t\t\t\t\tthis.dup();\r", "+\t\t\t\t} \r", "+\t\t\t\tthis.invokeObjectGetClass(); // causes null check for all explicit enclosing instances\r", "+\t\t\t\tthis.pop();\r", "+\t\t\t\t//} else {\r", "+\t\t\t\t//\tenclosingInstance.generateCode(currentScope, this, syntheticArgType == targetEnclosingType);\r", "+\t\t\t\t//}\t\t\t\r", "-\t\t\tif (currentScope.environment().options.complianceLevel >= CompilerOptions.JDK1_4){\r", "-\t\t\t\tenclosingInstance.generateCode(currentScope, this, true);\r", "-\t\t\t\tthis.invokeObjectGetClass(); // causes null check for all explicit enclosing instances\r", "-\t\t\t\tthis.pop();\r", "-\t\t\t} else {\r", "-\t\t\t\tenclosingInstance.generateCode(currentScope, this, false); // do not want the value\r", "-\t\t\t}\t\t\t\r", "+\t\t\t//if (currentScope.environment().options.complianceLevel >= CompilerOptions.JDK1_4){\r", "+\t\t\tenclosingInstance.generateCode(currentScope, this, true);\r", "+\t\t\tthis.invokeObjectGetClass(); // causes null check for all explicit enclosing instances\r", "+\t\t\tthis.pop();\r", "+\t\t\t//} else {\r", "+\t\t\t//\tenclosingInstance.generateCode(currentScope, this, false); // do not want the value\r", "+\t\t\t//}\t\t\t\r"]}], "num": 70127}