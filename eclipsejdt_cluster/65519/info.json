{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ccf5ea2f9530aef55185650339fc8007", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2235d36cd572544089e7dde5e6301f03", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "11c24986fc925cfc43f4c88e72e0daee39a1576b", "commitAfterChange": "55350d5af8386833b94a470ab6a0d389ee3fc665", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " \tprotected IJavaProject createJavaProject(final String projectName, final String[] sourceFolders, final String[] libraries, final String[] projects, final boolean[] exportedProjects, final String projectOutput, final String[] sourceOutputs, final String[][] inclusionPatterns, final String[][] exclusionPatterns, final String compliance) throws CoreException", "signatureAfterChange": " \tprotected IJavaProject createJavaProject(final String projectName, final String[] sourceFolders, final String[] libraries, final String[] projects, final boolean[] exportedProjects, final String projectOutput, final String[] sourceOutputs, final String[][] inclusionPatterns, final String[][] exclusionPatterns, final String compliance) throws CoreException", "diff": ["+\t\treturn", "+\t\tthis.createJavaProject(", "+\t\t\tprojectName,", "+\t\t\tsourceFolders,", "+\t\t\tlibraries,", "+\t\t\tnull/*no inclusion pattern*/,", "+\t\t\tnull/*no exclusion pattern*/,", "+\t\t\tprojects,", "+\t\t\tnull/*no inclusion pattern*/,", "+\t\t\tnull/*no exclusion pattern*/,", "+\t\t\texportedProjects, ", "+\t\t\tprojectOutput,", "+\t\t\tsourceOutputs,", "+\t\t\tinclusionPatterns,", "+\t\t\texclusionPatterns,", "+\t\t\tcompliance", "+\t\t);", "+\t}", "-\t\t\t\t\t\tentries[sourceLength+i] = JavaCore.newContainerEntry(new Path(lib));", "-\t\t\t\t\t\tentries[sourceLength+i] = JavaCore.newLibraryEntry(libPath, null, null);", "-\t\t\t\t\tentries[sourceLength+libLength+i] = JavaCore.newProjectEntry(new Path(projects[i]), isExported);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80af8c8e87126d81e416f3bde4c56461", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "5ef1cc56a5d4ebd967cc5c7e76265ab37a605575", "commitAfterChange": "f5476e05b46ec9b70e1bb26b071f29e4868379b5", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " \tprotected IJavaProject createJavaProject( \t\t\tfinal String projectName, \t\t\tfinal String[] sourceFolders, \t\t\tfinal String[] libraries, \t\t\tfinal String[][] librariesInclusionPatterns, \t\t\tfinal String[][] librariesExclusionPatterns, \t\t\tfinal String[] projects, \t\t\tfinal String[][] projectsInclusionPatterns, \t\t\tfinal String[][] projectsExclusionPatterns, \t\t\tfinal boolean[] exportedProjects, \t\t\tfinal String projectOutput, \t\t\tfinal String[] sourceOutputs, \t\t\tfinal String[][] inclusionPatterns, \t\t\tfinal String[][] exclusionPatterns, \t\t\tfinal String compliance) throws CoreException", "signatureAfterChange": " \tprotected IJavaProject createJavaProject( \t\t\tfinal String projectName, \t\t\tfinal String[] sourceFolders, \t\t\tfinal String[] libraries, \t\t\tfinal String[][] librariesInclusionPatterns, \t\t\tfinal String[][] librariesExclusionPatterns, \t\t\tfinal String[] projects, \t\t\tfinal String[][] projectsInclusionPatterns, \t\t\tfinal String[][] projectsExclusionPatterns, \t\t\tfinal boolean[] exportedProjects, \t\t\tfinal String projectOutput, \t\t\tfinal String[] sourceOutputs, \t\t\tfinal String[][] inclusionPatterns, \t\t\tfinal String[][] exclusionPatterns, \t\t\tfinal String compliance) throws CoreException", "diff": ["+\t\treturn createJavaProject(", "+\t\t\tprojectName,", "+\t\t\tsourceFolders,", "+\t\t\tlibraries,", "+\t\t\tlibrariesInclusionPatterns,", "+\t\t\tlibrariesExclusionPatterns,", "+\t\t\tprojects,", "+\t\t\tprojectsInclusionPatterns,", "+\t\t\tprojectsExclusionPatterns,", "+\t\t\ttrue, // combine access restrictions by default", "+\t\t\texportedProjects,", "+\t\t\tprojectOutput,", "+\t\t\tsourceOutputs,", "+\t\t\tinclusionPatterns,", "+\t\t\texclusionPatterns,", "+\t\t\tcompliance);", "+\t}", "-\t\t\t\t\t\t\t\texclusionPaths, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a14c0b3cdf1f8f0146ed2915a5b5229e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "a111700f27f629c06c29b26fb692229488b72d4a", "commitAfterChange": "c5f61e95813074aefaec195bd95f86eeca45b4ca", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " protected IJavaProject createJavaProject(final String projectName, final String[] sourceFolders, final String[] libraries, final String[] projects, final String projectOutput, final String[] sourceOutputs) throws CoreException", "signatureAfterChange": " protected IJavaProject createJavaProject(String projectName, String[] sourceFolders, String[] libraries, String[] projects, boolean[] exportedProject, String projectOutput) throws CoreException", "diff": ["-protected IJavaProject createJavaProject(final String projectName, final String[] sourceFolders, final String[] libraries, final String[] projects, final String projectOutput, final String[] sourceOutputs) throws CoreException {", "+protected IJavaProject createJavaProject(String projectName, String[] sourceFolders, String[] libraries, String[] projects, boolean[] exportedProject, String projectOutput) throws CoreException {", "+\treturn", "+\t\tthis.createJavaProject(", "+\t\t\tprojectName,", "+\t\t\tsourceFolders,", "+\t\t\tlibraries,", "+\t\t\tprojects,", "+\t\t\texportedProject, ", "+\t\t\tprojectOutput,", "+\t\t\tnull/*no source outputs*/", "+\t\t);", "+}", "-\t\t\t\tentries[sourceLength+libLength+i] = JavaCore.newProjectEntry(new Path(projects[i]));"]}], "num": 65519}