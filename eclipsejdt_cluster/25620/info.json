{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0415c8f0517696796af81b3730849306", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4a0dd7e3c258873de492e0d7ae131b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingStatementsTest.java", "commitBeforeChange": "62b1429c1157377303cda59d75bfca97d69751c0", "commitAfterChange": "2bf3ca4fdac4d07bd91bee9a8957437ed1319e5b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tpublic void testForStatement() throws Exception", "signatureAfterChange": " \t \tpublic void testForStatement() throws Exception", "diff": ["-\t\tNewASTRewrite rewrite= new NewASTRewrite(astRoot.getAST());", "+\t\tASTRewrite rewrite= new ASTRewrite(astRoot.getAST());", "-\t\t\trewrite.markAsReplaced((ASTNode) initializers.get(0), assignment, null);", "+\t\t\trewrite.replace((ASTNode) initializers.get(0), assignment, null);", "-\t\t\trewrite.markAsReplaced(forStatement.getExpression(), literal, null);", "+\t\t\trewrite.replace(forStatement.getExpression(), literal, null);", "-\t\t\trewrite.markAsReplaced(forStatement.getBody(), newBody, null);", "+\t\t\trewrite.replace(forStatement.getBody(), newBody, null);", "-\t\t\trewrite.markAsRemoved((ASTNode) initializers.get(0), null);", "-\t\t\trewrite.markAsRemoved((ASTNode) initializers.get(1), null);", "+\t\t\trewrite.remove((ASTNode) initializers.get(0), null);", "+\t\t\trewrite.remove((ASTNode) initializers.get(1), null);", "-\t\t\trewrite.markAsRemoved(forStatement.getExpression(), null);", "+\t\t\trewrite.remove(forStatement.getExpression(), null);", "-\t\t\trewrite.markAsRemoved((ASTNode) updaters.get(0), null);", "-\t\t\trewrite.markAsRemoved((ASTNode) updaters.get(1), null);", "+\t\t\trewrite.remove((ASTNode) updaters.get(0), null);", "+\t\t\trewrite.remove((ASTNode) updaters.get(1), null);", "-\t\t\trewrite.markAsReplaced(assignment, varDecl, null);", "+\t\t\trewrite.replace(assignment, varDecl, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3d201589e707d24f789084618db4aa1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "1146476ca138da09c36a16ea64250a150f60b014", "commitAfterChange": "e3d3c02cc33fd5166184422215f4903c5a405e0f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  protected boolean findAffectedSourceFiles(IResourceDelta delta, IResource[] binaryResources)", "signatureAfterChange": "  protected boolean findAffectedSourceFiles(IResourceDelta delta, ClasspathLocation[] classFoldersAndJars)", "diff": ["-protected boolean findAffectedSourceFiles(IResourceDelta delta, IResource[] binaryResources) {", "-\tfor (int j = 0, k = binaryResources.length; j < k; j++) {", "-\t\tIResource binaryResource = binaryResources[j];", "+protected boolean findAffectedSourceFiles(IResourceDelta delta, ClasspathLocation[] classFoldersAndJars) {", "+\tfor (int i = 0, l = classFoldersAndJars.length; i < l; i++) {", "+\t\tClasspathLocation bLocation = classFoldersAndJars[i];", "-\t\tif (binaryResource != null) { // skip unchanged output folder", "-\t\t\tIResourceDelta binaryDelta = delta.findMember(binaryResource.getProjectRelativePath());", "+\t\tif (bLocation != null) { // skip unchanged output folder", "+\t\t\tIResourceDelta binaryDelta = delta.findMember(bLocation.getRelativePath());", "-\t\t\t\tif (binaryResource instanceof IFile) {", "+\t\t\t\tif (bLocation instanceof ClasspathJar) {", "-\t\t\t\t\treturn false; // do full build since jar file was added/removed/changed", "+\t\t\t\t\treturn false; // do full build since jar file was changed (added/removed were caught as classpath change)", "-\t\t\t\t\treturn false; // added/removed binary folder should not make it here, but handle anyways", "+\t\t\t\t\treturn false; // added/removed binary folder should not make it here (classpath change), but handle anyways", "-\t\t\t\tint segmentCount = binaryResource.getLocation().segmentCount();", "+\t\t\t\tint segmentCount = binaryDelta.getFullPath().segmentCount();", "-\t\t\t\tfor (int i = 0, length = children.length; i < length; ++i)", "-\t\t\t\t\tfindAffectedSourceFiles(children[i], segmentCount);", "+\t\t\t\tfor (int j = 0, m = children.length; j < m; j++)", "+\t\t\t\t\tfindAffectedSourceFiles(children[j], segmentCount);"]}], "num": 25620}