{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ae69d9589fcf3a5e426e082e4948eb29", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c8e345e5eb3f261be8e49345a650060", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForeachStatement.java", "commitBeforeChange": "204dbb0f962baec45cc155adc0f25897806fc936", "commitAfterChange": "8d7962f9f430b3236797be4f077716228c08370e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope upperScope)", "diff": ["-\t\t\t\t\tthis.indexVariable.constant = NotAConstant; // not inlinable", "+\t\t\t\t\tthis.indexVariable.setConstant(NotAConstant); // not inlinable", "-\t\t\t\t\tthis.maxVariable.constant = NotAConstant; // not inlinable", "+\t\t\t\t\tthis.maxVariable.setConstant(NotAConstant); // not inlinable", "-\t\t\t\t\tthis.indexVariable.constant = NotAConstant; // not inlinable", "+\t\t\t\t\tthis.indexVariable.setConstant(NotAConstant); // not inlinable", "-\t\t\tthis.collectionVariable.constant = NotAConstant; // not inlinable", "+\t\t\tthis.collectionVariable.setConstant(NotAConstant); // not inlinable"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c030ee93007551ea04320a97c2fa047", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tprivate void buildMethods()", "signatureAfterChange": " \t \tprivate void buildMethods()", "diff": ["-\t\t\treferenceContext.binding.methods = Binding.NO_METHODS;", "+\t\t\treferenceContext.binding.setMethods(Binding.NO_METHODS);", "-\t\t}", "+\t\t} ", "+\t    SourceTypeBinding sourceType = referenceContext.binding;", "-\t\t    SourceTypeBinding sourceType = referenceContext.binding;", "-", "-\t\treferenceContext.binding.methods = methodBindings;", "+\t\tsourceType.tagBits &= ~TagBits.AreMethodsSorted; // in case some static imports reached already into this type", "+\t\tsourceType.setMethods(methodBindings);"]}], "num": 19209}