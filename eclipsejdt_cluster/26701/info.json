{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "29d80aa6008583ebee3a01de14cd5129", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36ed41e16abcd3960ee753d7e9a3e591", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "96b6a1a036d724eb72c9dda7f875bf468e57542f", "commitAfterChange": "1088bd5003c7ca9240c67a19e715067bfb429dc6", "methodNumberBeforeChange": 974, "methodNumberAfterChange": 974, "signatureBeforeChange": " public void test0968()", "signatureAfterChange": " public void test0968()", "diff": ["-\t\t\"2. WARNING in X.java (at line 2)\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\"\tpublic class X<T0> extends ArrayList<T0> implements I<T0> {\\n\" + ", "+\t\t\"\t             ^\\n\" + ", "+\t\t\"Name clash: The method addAll(Collection<? extends E>) of type ArrayList<T0> has the same erasure as addAll(Collection<? extends E>) of type Collection but does not override it\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\"\tpublic class X<T0> extends ArrayList<T0> implements I<T0> {\\n\" + ", "+\t\t\"\t             ^\\n\" + ", "+\t\t\"Name clash: The method retainAll(Collection<?>) of type AbstractCollection<T0> has the same erasure as retainAll(Collection<?>) of type Collection but does not override it\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\"\tpublic class X<T0> extends ArrayList<T0> implements I<T0> {\\n\" + ", "+\t\t\"\t             ^\\n\" + ", "+\t\t\"Name clash: The method toArray(T[]) of type ArrayList<T0> has the same erasure as toArray(T[]) of type Collection but does not override it\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\"\tpublic class X<T0> extends ArrayList<T0> implements I<T0> {\\n\" + ", "+\t\t\"\t             ^\\n\" + ", "+\t\t\"Name clash: The method add(E) of type ArrayList<T0> has the same erasure as add(E) of type Collection but does not override it\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"6. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\"\tpublic class X<T0> extends ArrayList<T0> implements I<T0> {\\n\" + ", "+\t\t\"\t             ^\\n\" + ", "+\t\t\"Name clash: The method containsAll(Collection<?>) of type AbstractCollection<T0> has the same erasure as containsAll(Collection<?>) of type Collection but does not override it\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"7. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\"\tpublic class X<T0> extends ArrayList<T0> implements I<T0> {\\n\" + ", "+\t\t\"\t             ^\\n\" + ", "+\t\t\"Name clash: The method removeAll(Collection<?>) of type AbstractCollection<T0> has the same erasure as removeAll(Collection<?>) of type Collection but does not override it\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"8. WARNING in X.java (at line 2)\\n\" + ", "-\t\t\"3. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\"9. WARNING in X.java (at line 4)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d45516d669b98ecca038f7acbd2be8c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 974, "methodNumberAfterChange": 977, "signatureBeforeChange": " public void test0968()", "signatureAfterChange": " public void test0968()", "diff": ["-\t\t\"2. ERROR in X.java (at line 2)\\n\" + ", "-\t\t\"\tpublic class X<T0> extends ArrayList<T0> implements I<T0> {\\n\" + ", "-\t\t\"\t             ^\\n\" + ", "-\t\t\"Name clash: The method addAll(Collection<? extends E>) of type ArrayList<T0> has the same erasure as addAll(Collection<? extends E>) of type Collection but does not override it\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"3. ERROR in X.java (at line 2)\\n\" + ", "-\t\t\"\tpublic class X<T0> extends ArrayList<T0> implements I<T0> {\\n\" + ", "-\t\t\"\t             ^\\n\" + ", "-\t\t\"Name clash: The method retainAll(Collection<?>) of type AbstractCollection<T0> has the same erasure as retainAll(Collection<?>) of type Collection but does not override it\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"4. ERROR in X.java (at line 2)\\n\" + ", "-\t\t\"\tpublic class X<T0> extends ArrayList<T0> implements I<T0> {\\n\" + ", "-\t\t\"\t             ^\\n\" + ", "-\t\t\"Name clash: The method toArray(T[]) of type ArrayList<T0> has the same erasure as toArray(T[]) of type Collection but does not override it\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"5. ERROR in X.java (at line 2)\\n\" + ", "-\t\t\"\tpublic class X<T0> extends ArrayList<T0> implements I<T0> {\\n\" + ", "-\t\t\"\t             ^\\n\" + ", "-\t\t\"Name clash: The method add(E) of type ArrayList<T0> has the same erasure as add(E) of type Collection but does not override it\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"6. ERROR in X.java (at line 2)\\n\" + ", "-\t\t\"\tpublic class X<T0> extends ArrayList<T0> implements I<T0> {\\n\" + ", "-\t\t\"\t             ^\\n\" + ", "-\t\t\"Name clash: The method containsAll(Collection<?>) of type AbstractCollection<T0> has the same erasure as containsAll(Collection<?>) of type Collection but does not override it\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"7. ERROR in X.java (at line 2)\\n\" + ", "-\t\t\"\tpublic class X<T0> extends ArrayList<T0> implements I<T0> {\\n\" + ", "-\t\t\"\t             ^\\n\" + ", "-\t\t\"Name clash: The method removeAll(Collection<?>) of type AbstractCollection<T0> has the same erasure as removeAll(Collection<?>) of type Collection but does not override it\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"8. WARNING in X.java (at line 2)\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 2)\\n\" + ", "-\t\t\"9. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\"3. WARNING in X.java (at line 4)\\n\" + "]}], "num": 26701}