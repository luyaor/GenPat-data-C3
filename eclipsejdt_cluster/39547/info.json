{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "efbece89260a819886b747cbe08cf12d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "344bcb5b5095f5fa2ffb324aaa70d205", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/MultiOperation.java", "commitBeforeChange": "8bea847412c36874664a80a329bfe627deff5fa9", "commitAfterChange": "c4145c80a504c8681f4571ff2bd214b778e87107", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprotected void processElements() throws JavaModelException", "signatureAfterChange": " \tprotected void processElements() throws JavaModelException", "diff": ["-\t\tbeginTask(getMainTaskName(), this.elementsToProcess.length);", "-\t\tIJavaModelStatus[] errors = new IJavaModelStatus[3];", "-\t\tint errorsCounter = 0;", "-\t\tfor (int i = 0; i < this.elementsToProcess.length; i++) {", "-\t\t\ttry {", "-\t\t\t\tverify(this.elementsToProcess[i]);", "-\t\t\t\tprocessElement(this.elementsToProcess[i]);", "-\t\t\t} catch (JavaModelException jme) {", "-\t\t\t\tif (errorsCounter == errors.length) {", "-\t\t\t\t\t// resize", "-\t\t\t\t\tSystem.arraycopy(errors, 0, (errors = new IJavaModelStatus[errorsCounter*2]), 0, errorsCounter);", "+\t\ttry {", "+\t\t\tbeginTask(getMainTaskName(), this.elementsToProcess.length);", "+\t\t\tIJavaModelStatus[] errors = new IJavaModelStatus[3];", "+\t\t\tint errorsCounter = 0;", "+\t\t\tfor (int i = 0; i < this.elementsToProcess.length; i++) {", "+\t\t\t\ttry {", "+\t\t\t\t\tverify(this.elementsToProcess[i]);", "+\t\t\t\t\tprocessElement(this.elementsToProcess[i]);", "+\t\t\t\t} catch (JavaModelException jme) {", "+\t\t\t\t\tif (errorsCounter == errors.length) {", "+\t\t\t\t\t\t// resize", "+\t\t\t\t\t\tSystem.arraycopy(errors, 0, (errors = new IJavaModelStatus[errorsCounter*2]), 0, errorsCounter);", "+\t\t\t\t\t}", "+\t\t\t\t\terrors[errorsCounter++] = jme.getJavaModelStatus();", "+\t\t\t\t} finally {", "+\t\t\t\t\tworked(1);", "-\t\t\t\terrors[errorsCounter++] = jme.getJavaModelStatus();", "-\t\t\t} finally {", "-\t\t\t\tworked(1);", "-\t\t}", "-\t\tdone();", "-\t\tif (errorsCounter == 1) {", "-\t\t\tthrow new JavaModelException(errors[0]);", "-\t\t} else if (errorsCounter > 1) {", "-\t\t\tif (errorsCounter != errors.length) {", "-\t\t\t\t// resize", "-\t\t\t\tSystem.arraycopy(errors, 0, (errors = new IJavaModelStatus[errorsCounter]), 0, errorsCounter);", "+\t\t\tif (errorsCounter == 1) {", "+\t\t\t\tthrow new JavaModelException(errors[0]);", "+\t\t\t} else if (errorsCounter > 1) {", "+\t\t\t\tif (errorsCounter != errors.length) {", "+\t\t\t\t\t// resize", "+\t\t\t\t\tSystem.arraycopy(errors, 0, (errors = new IJavaModelStatus[errorsCounter]), 0, errorsCounter);", "+\t\t\t\t}", "+\t\t\t\tthrow new JavaModelException(JavaModelStatus.newMultiStatus(errors));", "-\t\t\tthrow new JavaModelException(JavaModelStatus.newMultiStatus(errors));", "+\t\t} finally {", "+\t\t\tdone();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b486435fcc6f8cfea5cc7c58ee740fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/OptionTests.java", "commitBeforeChange": "84bc512fd479cfff2f73ee854c44099b01de5b79", "commitAfterChange": "55369835f4de509d18e116254a7a5ee5fbfb9076", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void testBug72214() throws CoreException, BackingStoreException", "signatureAfterChange": " \tpublic void testBug72214() throws CoreException, BackingStoreException", "diff": ["-\t\t// Remove JavaCore instance prefs", "-\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "-\t\tIEclipsePreferences preferences = manager.getInstancePreferences();", "-\t\tint size = JavaCore.getOptions().size();", "-\t\tpreferences.removeNode();", "-\t", "-\t\t// verify that JavaCore preferences have been reset", "-\t\tassertFalse(\"JavaCore preferences should have been reset\", preferences == manager.getInstancePreferences());", "-\t\tassertEquals(\"JavaCore preferences should have been resotred!\", size, JavaCore.getOptions().size());", "+\t\ttry {", "+\t\t\t// Remove JavaCore instance prefs", "+\t\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "+\t\t\tIEclipsePreferences preferences = manager.getInstancePreferences();", "+\t\t\tint size = JavaCore.getOptions().size();", "+\t\t\tpreferences.removeNode();", "-\t\t// Put back default options", "-\t\tJavaCore.setOptions(JavaCore.getDefaultOptions());", "+\t\t\t// verify that JavaCore preferences have been reset", "+\t\t\tassertFalse(\"JavaCore preferences should have been reset\", preferences == manager.getInstancePreferences());", "+\t\t\tassertEquals(\"JavaCore preferences should have been resotred!\", size, JavaCore.getOptions().size());", "+\t\t} finally {", "+\t\t\t// Put back default options", "+\t\t\tJavaCore.setOptions(JavaCore.getDefaultOptions());", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b8b3ac7ad782ddddd6eb3f4bde5f204", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "e3d875263ee12404bb21dc7fcef95c903c7f1b24", "commitAfterChange": "3e350d8ca4b864ea7ab31af7c0cd5be570888a19", "methodNumberBeforeChange": 758, "methodNumberAfterChange": 758, "signatureBeforeChange": " public void testCompletionVisibilityCheckEnabled() throws JavaModelException", "signatureAfterChange": " public void testCompletionVisibilityCheckEnabled() throws JavaModelException", "diff": ["-", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionVisibilityCheck.java\");", "-\tString str = cu.getSource();", "-\tString completeBehind = \"x.p\";", "-\tint cursorLocation = str.indexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-", "-\toptions.put(visibilityCheckID,visibilityCheckPreviousValue);", "-\tJavaCore.setOptions(options);", "+\ttry {", "+\t\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionVisibilityCheck.java\");", "+\t", "+\t\tString str = cu.getSource();", "+\t\tString completeBehind = \"x.p\";", "+\t\tint cursorLocation = str.indexOf(completeBehind) + completeBehind.length();", "+\t\tcu.codeComplete(cursorLocation, requestor);", "+\t} finally {", "+\t\toptions.put(visibilityCheckID,visibilityCheckPreviousValue);", "+\t\tJavaCore.setOptions(options);", "+\t}"]}], "num": 39547}