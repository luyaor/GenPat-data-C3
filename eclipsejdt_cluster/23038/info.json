{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9fc875ceca0f4d00d8fc623cce286e6b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aca7dde3c15e88cf93c0b2b1fa23fa22", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "e5bb4bddaa8ae27dfddec859067bcb3df83df4dc", "commitAfterChange": "65877d9109defab8c1c7191e1a9530b8bc8f9b43", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": " private void handleErrorOrWarningToken(String token, boolean isEnabling, int severity)", "signatureAfterChange": " private void handleErrorOrWarningToken(String token, boolean isEnabling, int severity)", "diff": ["+\t\t\t} else if (token.equals(\"all-static-method\")) { //$NON-NLS-1$", "+\t\t\t\tsetSeverity(CompilerOptions.OPTION_ReportMethodCanBeStatic, severity, isEnabling);", "+\t\t\t\tsetSeverity(CompilerOptions.OPTION_ReportMethodCanBePotentiallyStatic, severity, isEnabling);", "+\t\t\t\treturn;", "+\t\t\t} else if (token.equals(\"static-method\")) { //$NON-NLS-1$", "+\t\t\t\tsetSeverity(CompilerOptions.OPTION_ReportMethodCanBeStatic, severity, isEnabling);", "+\t\t\t\treturn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4588f2250f687caeb36ebdfbbb05809", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": " private void handleErrorOrWarningToken(String token, boolean isEnabling, int severity)", "signatureAfterChange": " private void handleErrorOrWarningToken(String token, boolean isEnabling, int severity)", "diff": ["-\t\t\t\t\t|| token.equals(\"incomplete-switch\") /*backward compatible*/) { //$NON-NLS-1$", "+\t\t\t\t\t|| token.equals(\"incomplete-switch\")) { //$NON-NLS-1$", "+\t\t\t\tsetSeverity(CompilerOptions.OPTION_ReportRedundantSpecificationOfTypeArguments, severity, isEnabling);", "+\t\t\t\tsetSeverity(CompilerOptions.OPTION_ReportRedundantSpecificationOfTypeArguments, severity, isEnabling);"]}], "num": 23038}