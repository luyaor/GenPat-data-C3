{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5353565ba882a541ce71fd90023fcd67", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a9ba44ebd90daa9001f7b3638497461", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AND_AND_Expression.java", "commitBeforeChange": "949f1bbe84622faa807866412d26a5bdb0f64fe4", "commitAfterChange": "ecd2d9d0e14c2688e43c7c452930452fe7a77cc0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\trightInfo.setReachMode(FlowInfo.SILENT_FAKE_REACHABLE);", "+\t\t\trightInfo.setReachMode(FlowInfo.UNREACHABLE); ", "-\t\trightInfo.setReachMode(mode); // reset mode on way out", "+\t\tFlowInfo trueInfo = rightInfo.initsWhenTrue().copy();", "+\t\ttrueInfo.setReachMode(rightInfo.reachMode()); // so merge works fine", "+\t\trightInfo.setReachMode(mode); // reset after trueInfo got extracted", "-\t\tFlowInfo mergedInfo =", "+\t\tFlowInfo mergedInfo = ", "-\t\t\t\trightInfo.initsWhenTrue().copy(),", "+\t\t\t\ttrueInfo,", "-\t\t\t\t\trightInfo.initsWhenFalse().copy().unconditionalInits()));", "+\t\t\t\t\t\trightInfo.initsWhenFalse().copy().unconditionalInits()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd477947e8820656fbbd030e23ba09f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/OR_OR_Expression.java", "commitBeforeChange": "949f1bbe84622faa807866412d26a5bdb0f64fe4", "commitAfterChange": "ecd2d9d0e14c2688e43c7c452930452fe7a77cc0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["+", "-\t\t\trightInfo.setReachMode(FlowInfo.SILENT_FAKE_REACHABLE);", "+\t\t\trightInfo.setReachMode(FlowInfo.UNREACHABLE); //SILENT_FAKE_REACHABLE);", "-\t\trightInfo.setReachMode(mode); // reset back", "+\t\tFlowInfo falseInfo = rightInfo.initsWhenFalse().copy();", "+\t\tfalseInfo.setReachMode(rightInfo.reachMode()); // so merge works fine", "+\t\trightInfo.setReachMode(mode); // reset after trueInfo got extracted", "+"]}], "num": 11797}