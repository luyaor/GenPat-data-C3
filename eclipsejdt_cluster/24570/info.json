{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "48fe035d29e339a385afb6658384db16", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3511e3df676b24466f13e50b0091191f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "1e8305535ff304200778a08eb6eb4025791a09c1", "commitAfterChange": "3388256fa80bf40daffa9f485d2674986c875b82", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tpublic SingleVariableDeclaration convert(org.eclipse.jdt.internal.compiler.ast.Argument argument)", "signatureAfterChange": "  \tpublic SingleVariableDeclaration convert(org.eclipse.jdt.internal.compiler.ast.Argument argument)", "diff": ["+\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=391898", "+\t\t\tif (this.ast.apiLevel() >= AST.JLS8 && !type.annotations().isEmpty()) {", "+\t\t\t\tIterator annotations = type.annotations.iterator();", "+\t\t\t\twhile (annotations.hasNext()) {", "+\t\t\t\t\tAnnotation annotation = (Annotation) annotations.next();", "+\t\t\t\t\tannotation.setParent(null, null);", "+\t\t\t\t\tvariableDecl.varargsAnnotations().add(annotation);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99c397766d17edf272113067953ca324", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "82286041004c3a1c8b03ed85a8b5ba0c85e39f08", "commitAfterChange": "c3894f02481a65e7c5a6b2e211e3716b20cd9dd8", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": " \tpublic boolean visit(TypeParameter node)", "signatureAfterChange": " \tpublic boolean visit(TypeParameter node)", "diff": ["+\t\tif (node.getAST().apiLevel() >= AST.JLS8) {", "+\t\t\tList annotations = node.annotations();", "+\t\t\tif (annotations != null) {", "+\t\t\t\tfor (Iterator it = annotations.iterator(); it.hasNext(); ) {", "+\t\t\t\t\tAnnotation annotation = (Annotation) it.next();", "+\t\t\t\t\tannotation.accept(this);", "+\t\t\t\t\tthis.buffer.append(' ');", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}"]}], "num": 24570}