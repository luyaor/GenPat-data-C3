{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "19eb3a6c7e6f129e993d51a8f933be81", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6408e39ad82b990829dc607b97262ca6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "9ef16bbd886b16521464fbe002994d5fbaed976f", "commitAfterChange": "b27f301e84866741a3cab27f0e35cc886c5fd2e8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          private AnnotationProcessorFactoryLoader()", "signatureAfterChange": "          private AnnotationProcessorFactoryLoader()", "diff": ["-    \tList<FactoryContainer> containers = getPluginFactoryContainers();", "-    \tsetWorkspaceAnnotationProcessorFactories( containers );", "+    \tList<PluginFactoryContainer> pluginContainers = FactoryPathUtil.getAllPluginFactoryContainers();", "+    \tsetPluginAnnotationProcessorFactories( pluginContainers );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d50fcc5564fd8c4346cc97c61d43fd8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/util/AptConfig.java", "commitBeforeChange": "9ef16bbd886b16521464fbe002994d5fbaed976f", "commitAfterChange": "b27f301e84866741a3cab27f0e35cc886c5fd2e8", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic synchronized void setContainers(IJavaProject jproj, Map<FactoryContainer, Boolean> containers)  \tthrows IOException, CoreException", "signatureAfterChange": " \tpublic synchronized void setContainers(IJavaProject jproj, Map<FactoryContainer, Boolean> containers)  \tthrows IOException, CoreException", "diff": ["-\t\tif (jproj == null) {", "-\t\t\t// workspace", "-\t\t\t_workspaceFactories = new HashMap(containers);", "-\t\t\t_workspaceFactoryPathLoaded = true;", "-\t\t}", "-\t\telse {", "-\t\t\t_containerMaps.put(jproj, new HashMap(containers));", "-\t\t\t_projectsWithFactoryPathLoaded.add(jproj);", "-\t\t}", "-\t\t", "+\t\tAnnotationProcessorFactoryLoader.getLoader().reset();"]}], "num": 43584}