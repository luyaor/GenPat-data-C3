{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ac3fd3dd1a538078d59ba6bc2b4199e3", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "173073a7bb1fdfa261be7ce3b295b0ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "b18b012adcc471e2280a6e20faa4d2a33f1db69a", "commitAfterChange": "5bb01926d23a6cf003d0d521691c391ac08b77a7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprivate void checkClassFile(String className, String source, String expectedOutput)", "signatureAfterChange": "  \tprivate void checkClassFile(String className, String source, String expectedOutput)", "diff": ["-\t\t\t\tSystem.out.print(Util.displayString(result, 3));", "+\t\t\t\tSystem.out.println(Util.displayString(result, 3));", "-\t\t\tassertTrue(\"Wrong contents\", index != -1 && expectedOutput.length() != 0);", "+\t\t\tif (index == -1) {", "+\t\t\t\tassertEquals(\"Wrong contents\", expectedOutput, result);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af0ebe400218df7ca91b35b3648f80f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/BatchASTCreationTests.java", "commitBeforeChange": "2292d96d982a21ac668b3edcff1d774c928dd59d", "commitAfterChange": "e19275b58ad64aff1e057c59c0e35ec0b545a662", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tprivate void assertBindingsCreated(String[] pathAndSources, final String[] expectedKeys) throws JavaModelException", "signatureAfterChange": " \tprivate void assertBindingsCreated(String[] pathAndSources, final String[] expectedKeys) throws JavaModelException", "diff": ["-\t\t\t\tassertStringsEqual(\"Inconsistent expected key \", expectedKeys, resolver.getBindingKeys());", "-\t\t\t\tSystem.out.println(Util.displayString(actualKey, 3));", "+\t\t\t\tString[] markedKeys = resolver.getBindingKeys();", "+\t\t\t\tif (markedKeys.length > 0) {", "+\t\t\t\t\tassertStringsEqual(\"Inconsistent expected key \", expectedKeys, markedKeys);", "+\t\t\t\t}"]}], "num": 2246}