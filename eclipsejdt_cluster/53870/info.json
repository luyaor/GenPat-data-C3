{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc28b8f7c9fdaa532667cf920db3b8b8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a37641401b5217bfc1a436b36055503a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceModelTests.java", "commitBeforeChange": "a2905241c8f7a3e3308dc841ede04f62d302de11", "commitAfterChange": "d10bd55b3181dc38c5b0ba7a73791c33d041ff54", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void testPerfReconcile() throws CoreException", "signatureAfterChange": " public void testPerfReconcile() throws CoreException", "diff": ["-\t\tProblemRequestor requestor = new ProblemRequestor();", "-\t\tworkingCopy = PARSER_WORKING_COPY.getWorkingCopy(new WorkingCopyOwner() {}, requestor, null);", "+\t\tfinal ProblemRequestor requestor = new ProblemRequestor();", "+\t\tWorkingCopyOwner owner = new WorkingCopyOwner() {", "+\t\t\tpublic IProblemRequestor getProblemRequestor(ICompilationUnit cu) {", "+\t\t\t\treturn requestor;", "+            }", "+\t\t};", "+\t\tworkingCopy = PARSER_WORKING_COPY.getWorkingCopy(owner, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c718b202874cc092ab2fbba92d76e3fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceModelTests.java", "commitBeforeChange": "a2905241c8f7a3e3308dc841ede04f62d302de11", "commitAfterChange": "d10bd55b3181dc38c5b0ba7a73791c33d041ff54", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void testPerfSearchAllTypeNamesAndReconcile() throws CoreException", "signatureAfterChange": " public void testPerfSearchAllTypeNamesAndReconcile() throws CoreException", "diff": ["-\t\tProblemRequestor requestor = new ProblemRequestor();", "-\t\tworkingCopy = PARSER_WORKING_COPY.getWorkingCopy(new WorkingCopyOwner() {}, requestor, null);", "+\t\tfinal ProblemRequestor requestor = new ProblemRequestor();", "+\t\tWorkingCopyOwner owner = new WorkingCopyOwner() {", "+\t\t\tpublic IProblemRequestor getProblemRequestor(ICompilationUnit cu) {", "+\t\t\t\treturn requestor;", "+            }", "+\t\t};", "+\t\tworkingCopy = PARSER_WORKING_COPY.getWorkingCopy(owner, null);"]}], "num": 53870}