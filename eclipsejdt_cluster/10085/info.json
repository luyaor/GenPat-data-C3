{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e57b210eb67635c209612142df5c4ccd", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36ca5683e957d3f814d927a123f3c140", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "f7925cf41fa4dc44a6e15eac310a5c508cfc5b56", "commitAfterChange": "d07c06ecaa4da831c1901301c2f8af8b5aae84c9", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic MethodBinding findMethod( \t\tReferenceBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding findMethod( \t\tReferenceBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "diff": ["+\t\tboolean mustBePublic = receiverType.isInterface();", "-\t\t\tif (isCompliant14 && matchingMethod != null || found.size > 0) {", "+\t\t\tif (isCompliant14 && (mustBePublic || matchingMethod != null || found.size > 0)) {", "+\t\t\t\t\tif (mustBePublic && !currentMethod.isPublic()) { // only public methods from Object are visible to interface receiverTypes", "+\t\t\t\t\t\tcurrentLength--;", "+\t\t\t\t\t\tcurrentMethods[i] = null;", "+\t\t\t\t\t\tcontinue nextMethod;", "+\t\t\t\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43223ec46e9165210f0f5ab59c7f9aec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "2a46362da18e1189829e578c276cfbf726376a20", "commitAfterChange": "948661c4cb198af70b598b9954e5159cb73d7234", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "\r \r \tprivate void findMethods(\r \t\tchar[] selector,\r \t\tTypeBinding[] argTypes,\r \t\tReferenceBinding receiverType,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tboolean isCompletingDeclaration,\r \t\tInvocationSite invocationSite)", "signatureAfterChange": "\r \r \tprivate void findMethods(\r \t\tchar[] selector,\r \t\tTypeBinding[] argTypes,\r \t\tReferenceBinding receiverType,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tboolean isCompletingDeclaration,\r \t\tInvocationSite invocationSite)", "diff": ["-\r", "+\t\t\t\r", "+\t\tboolean isInterface = receiverType.isInterface();\r", "+\t\t\r", "-\t\tif (currentType.isInterface()) {\r", "+\t\tif (isInterface || isCompletingDeclaration) {\r", "+\t\t\t\r", "-\t\tif(isCompletingDeclaration && currentType != null)\r", "-\t\t\tcurrentType = currentType.superclass();\r", "+\t\tif(!isInterface){\r", "+\t\t\tif(isCompletingDeclaration){\r", "+\t\t\t\tcurrentType = receiverType.superclass();\r", "+\t\t\t} else {\r", "+\t\t\t\tcurrentType = receiverType;\r", "+\t\t\t}\r", "+\t\t}\r"]}], "num": 10085}