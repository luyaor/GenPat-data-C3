{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cbdcffa72dac4afb39668a13fa02939c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fc03889420c57610e51d5efe355d1d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "d0cadab17e13c2fbabeeab7e19dab0ead49500bf", "commitAfterChange": "8457dc17f56c4fff3fa2589438e210393d270f41", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public SourceTypeBinding(char[][] compoundName, PackageBinding fPackage, ClassScope scope)", "signatureAfterChange": "  public SourceTypeBinding(char[][] compoundName, PackageBinding fPackage, ClassScope scope)", "diff": ["-\tthis.fields = Binding.NO_FIELDS;", "-\tthis.methods = Binding.NO_METHODS;", "+\tthis.fields = Binding.UNINITIALIZED_FIELDS;", "+\tthis.methods = Binding.UNINITIALIZED_METHODS;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98b9ac177791972039ed679ec6356c9d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyTests.java", "commitBeforeChange": "97b330eb505dfca0980041926ec66a0261a5be5c", "commitAfterChange": "d3580136581144eb64c8a6ff7ec886b58a1ec764", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 32, "signatureBeforeChange": " public void testMultipleCommit()", "signatureAfterChange": " public void testMultipleCommit()", "diff": ["-\t\tthis.copy.commit(false, null);", "+\t\tthis.copy.commitWorkingCopy(false, null);", "-\t\tthis.copy.commit(false, null);", "+\t\tthis.copy.commitWorkingCopy(false, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb1846531afb260cde545d3e5a60a606", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo, \t\tboolean valueRequired)", "signatureAfterChange": " \t \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo, \t\tboolean valueRequired)", "diff": ["-\t\t\t\t\tmanageSyntheticReadAccessIfNecessary(currentScope, (FieldBinding) binding, this.actualReceiverType, 0, flowInfo);", "+\t\t\t\t\tmanageSyntheticAccessIfNecessary(currentScope, (FieldBinding) binding, this.actualReceiverType, 0, flowInfo);", "-\t\t\t\t\tmanageSyntheticReadAccessIfNecessary(", "+\t\t\t\t\tmanageSyntheticAccessIfNecessary(", "-\t\t\t\t\t\ti == 0 ", "-\t\t\t\t\t\t\t? ((VariableBinding)binding).type", "-\t\t\t\t\t\t\t: otherBindings[i-1].type,", "+\t\t\t\t\t\ti == 0 \t? ((VariableBinding)binding).type : otherBindings[i-1].type,"]}], "num": 45535}