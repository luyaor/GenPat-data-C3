{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "87ce53ec29fb595b04216c4acf55ac98", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6168adb3d41f899c3a0146391ce498c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExpressionFormula.java", "commitBeforeChange": "a2a25daab3f792071cba7e3d51c3d2abf00c6c2a", "commitAfterChange": "8bffc680730baeb75a0764c02d5d9479eee4502e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic Object reduce(InferenceContext18 inferenceContext) throws InferenceFailureException", "signatureAfterChange": "  \tpublic Object reduce(InferenceContext18 inferenceContext) throws InferenceFailureException", "diff": ["-\t\t\t\tInvocationRecord prevInvocation = inferenceContext.enterPolyInvocation(invocation, invocation.arguments());", "+\t\t\t\tSuspendedInferenceRecord prevInvocation = inferenceContext.enterPolyInvocation(invocation, invocation.arguments());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88e41d4760e2883b2e79df17c996451e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExpressionFormula.java", "commitBeforeChange": "a2a25daab3f792071cba7e3d51c3d2abf00c6c2a", "commitAfterChange": "8bffc680730baeb75a0764c02d5d9479eee4502e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprivate Object reduceReferenceExpressionCompatibility(ReferenceExpression reference, InferenceContext18 inferenceContext)", "signatureAfterChange": "  \tprivate Object reduceReferenceExpressionCompatibility(ReferenceExpression reference, InferenceContext18 inferenceContext)", "diff": ["-\t\t\t\tInvocationRecord prevInvocation = inferenceContext.enterPolyInvocation(reference, null/*no invocation arguments available*/);", "+\t\t\t\tSuspendedInferenceRecord prevInvocation = inferenceContext.enterPolyInvocation(reference, null/*no invocation arguments available*/);"]}], "num": 45736}