{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a8f3f099a2fa0b7f868e3aba6babff04", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1122db058bc0f2bd68d929123fe0c2d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "0e8ca24e8451f1d91ed53a269d184ea21d12301f", "commitAfterChange": "369ffd3db09511488e039ba2575df2eeea055320", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \tpublic static IJavaElement create(IFolder folder)", "signatureAfterChange": "\r \tpublic static IJavaElement create(IFolder folder)", "diff": ["-\t\ttry {\r", "-\t\t\tIPath outputLocation = project.getOutputLocation();\r", "-\t\t\tif (outputLocation == null)\r", "-\t\t\t\treturn null;\r", "-\t\t\tif (outputLocation.isPrefixOf(folder.getFullPath())) {\r", "-\t\t\t\tif (project.getClasspathEntryFor(outputLocation) != null) {\r", "-\t\t\t\t\t// if the output location is the same as an input location, return the element\r", "-\t\t\t\t\treturn element;\r", "-\t\t\t\t} else {\r", "-\t\t\t\t\t// otherwise, do not create elements for folders in the output location\r", "-\t\t\t\t\treturn null;\r", "-\t\t\t\t}\r", "-\t\t\t} else {\r", "-\t\t\t\tif (folder.getName().indexOf('.') >= 0 && !(element instanceof IPackageFragmentRoot)) {\r", "-\t\t\t\t\treturn null; // only package fragment roots are allowed with dot names\r", "-\t\t\t\t}\r", "-\r", "-\t\t\t\treturn element;\r", "-\t\t\t}\r", "-\t\t} catch (JavaModelException e) {\r", "+\t\tif (Util.conflictsWithOutputLocation(folder.getFullPath(), project)\r", "+\t\t \t|| (folder.getName().indexOf('.') >= 0 \r", "+\t\t \t\t&& !(element instanceof IPackageFragmentRoot))) {\r", "+\t\t\treturn null; // only package fragment roots are allowed with dot names\r", "+\t\t} else {\r", "+\t\t\treturn element;\r", "-\t\treturn null;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea4572e02d375f65757474a7b2edef6a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/ClasspathJar.java", "commitBeforeChange": "639f95fb93a85f023afe828b77bfc8cd4dbf811c", "commitAfterChange": "8a3cbdf1db434ade029724481c4ce0338046043a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public NameEnvironmentAnswer findClass(char[] typeName, String qualifiedPackageName, String qualifiedBinaryFileName)", "signatureAfterChange": " public NameEnvironmentAnswer findClass(char[] typeName, String qualifiedPackageName, String qualifiedBinaryFileName)", "diff": ["+\treturn findClass(typeName, qualifiedPackageName, qualifiedBinaryFileName, false);", "+}"]}], "num": 31944}