{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3c570888d41e0302fa544f79021dc5d5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44c0044b03bd6efcd39e6004b829e1c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "c12a3a9781a2cb03fb343a1b11660c99cccf4eb5", "commitAfterChange": "25f6ec4d6e61ae8f45e86debb6fc86f45cfebab1", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "  public final void scanEscapeCharacter() throws InvalidInputException", "signatureAfterChange": "  public final void scanEscapeCharacter() throws InvalidInputException", "diff": ["-", "-\tif (this.unicodeAsBackSlash) {", "-\t\t// consume next character", "-\t\tthis.unicodeAsBackSlash = false;", "-\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\') && (this.source[this.currentPosition] == 'u')) {", "-\t\t\tgetNextUnicodeChar();", "-\t\t} else {", "-\t\t\tif (this.withoutUnicodePtr != 0) {", "-\t\t\t\tunicodeStore();", "-\t\t\t}", "-\t\t}", "-\t} else", "-\t\tthis.currentCharacter = this.source[this.currentPosition++];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f85bc515b4696cb1075f701edad254f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "6d986f90e46cead3f7ad9cda57050210e9706675", "commitAfterChange": "267a4d5e2c999ddd91f8f8fabb0312930f048c1a", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "  public final void scanEscapeCharacter() throws InvalidInputException", "signatureAfterChange": "  public final void scanEscapeCharacter() throws InvalidInputException", "diff": ["-", "-\tif (this.unicodeAsBackSlash) {", "-\t\t// consume next character", "-\t\tthis.unicodeAsBackSlash = false;", "-\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\') && (this.source[this.currentPosition] == 'u')) {", "-\t\t\tgetNextUnicodeChar();", "-\t\t} else {", "-\t\t\tif (this.withoutUnicodePtr != 0) {", "-\t\t\t\tunicodeStore();", "-\t\t\t}", "-\t\t}", "-\t} else", "-\t\tthis.currentCharacter = this.source[this.currentPosition++];"]}], "num": 35803}