{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "195723e70be1d19979315b50401a6b21", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d731a1c43e298565414d8e65bc07ba9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/OrPattern.java", "commitBeforeChange": "7e5cc03e445550d3cbc10c611218c79332074276", "commitAfterChange": "c57706d05dc3654769cca2053ff9cb20fb0a6664", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public int matchLevel(AstNode node, boolean resolve)", "signatureAfterChange": "\r protected boolean matches(AstNode node, boolean resolve)", "diff": ["+ */\r", "+protected boolean matches(AstNode node, boolean resolve) {\r", "+\treturn this.leftPattern.matches(node, resolve) || this.rightPattern.matches(node, resolve);\r", "+}\r", "- */\r", "-public int matchLevel(AstNode node, boolean resolve) {\r", "-\tswitch (this.leftPattern.matchLevel(node, resolve)) {\r", "-\t\tcase IMPOSSIBLE_MATCH:\r", "-\t\t\treturn this.rightPattern.matchLevel(node, resolve);\r", "-\t\tcase POSSIBLE_MATCH:\r", "-\t\t\treturn POSSIBLE_MATCH;\r", "-\t\tcase INACCURATE_MATCH:\r", "-\t\t\tint rightLevel = this.rightPattern.matchLevel(node, resolve);\r", "-\t\t\tif (rightLevel != IMPOSSIBLE_MATCH) {\r", "-\t\t\t\treturn rightLevel;\r", "-\t\t\t} else {\r", "-\t\t\t\treturn INACCURATE_MATCH;\r", "-\t\t\t}\r", "-\t\tcase ACCURATE_MATCH:\r", "-\t\t\treturn ACCURATE_MATCH;\r", "-\t\tdefault:\r", "-\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t}\r", "-}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6ac492d1e84d4b7d0b408174102e69c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/OrPattern.java", "commitBeforeChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "commitAfterChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public int matchLevel(AstNode node, boolean resolve)", "signatureAfterChange": "\r protected boolean matches(AstNode node, boolean resolve)", "diff": ["+ */\r", "+protected boolean matches(AstNode node, boolean resolve) {\r", "+\treturn this.leftPattern.matches(node, resolve) || this.rightPattern.matches(node, resolve);\r", "+}\r", "- */\r", "-public int matchLevel(AstNode node, boolean resolve) {\r", "-\tswitch (this.leftPattern.matchLevel(node, resolve)) {\r", "-\t\tcase IMPOSSIBLE_MATCH:\r", "-\t\t\treturn this.rightPattern.matchLevel(node, resolve);\r", "-\t\tcase POSSIBLE_MATCH:\r", "-\t\t\treturn POSSIBLE_MATCH;\r", "-\t\tcase INACCURATE_MATCH:\r", "-\t\t\tint rightLevel = this.rightPattern.matchLevel(node, resolve);\r", "-\t\t\tif (rightLevel != IMPOSSIBLE_MATCH) {\r", "-\t\t\t\treturn rightLevel;\r", "-\t\t\t} else {\r", "-\t\t\t\treturn INACCURATE_MATCH;\r", "-\t\t\t}\r", "-\t\tcase ACCURATE_MATCH:\r", "-\t\t\treturn ACCURATE_MATCH;\r", "-\t\tdefault:\r", "-\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t}\r", "-}\r"]}], "num": 15356}