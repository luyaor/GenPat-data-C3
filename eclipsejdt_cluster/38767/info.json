{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d9726c36ffd8ff94c0299edd5f3fc4cc", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d20a77ed33e97f47416d0e5e975ae7e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "2bf3ca4fdac4d07bd91bee9a8957437ed1319e5b", "commitAfterChange": "095f68551aabc4fec8e028b2a81b692255ffc31a", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic boolean visit(ClassInstanceCreation node)", "signatureAfterChange": " \tpublic boolean visit(ClassInstanceCreation node)", "diff": ["+\t\t\tif (!node.typeParameters().isEmpty()) {", "+\t\t\t\tthis.buffer.append(\"<\");//$NON-NLS-1$", "+\t\t\t\tfor (Iterator it = node.typeParameters().iterator(); it.hasNext(); ) {", "+\t\t\t\t\tTypeParameter t = (TypeParameter) it.next();", "+\t\t\t\t\tt.accept(this);", "+\t\t\t\t\tif (it.hasNext()) {", "+\t\t\t\t\t\tthis.buffer.append(\",\");//$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tthis.buffer.append(\">\");//$NON-NLS-1$", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed97417d505ba2597b4ac5964c74cdb9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " \tpublic boolean visit(SuperConstructorInvocation node)", "signatureAfterChange": " \tpublic boolean visit(ParameterizedType node)", "diff": ["+\t */", "+\tpublic boolean visit(ParameterizedType node) {", "+\t\tnode.getName().accept(this);", "+\t\tthis.buffer.append(\"<\");//$NON-NLS-1$", "+\t\tfor (Iterator it = node.typeArguments().iterator(); it.hasNext(); ) {", "+\t\t\tType t = (Type) it.next();", "+\t\t\tt.accept(this);", "+\t\t\tif (it.hasNext()) {", "+\t\t\t\tthis.buffer.append(\",\");//$NON-NLS-1$", "+\t\t\t}", "+\t\t}", "+\t\tthis.buffer.append(\">\");//$NON-NLS-1$"]}], "num": 38767}