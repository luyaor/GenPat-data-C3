{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "46539b5e8a031d7b2e5e7bc0050ea108", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7992fea25d453bee233f733029a029ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "562f566c1c2b8bfedaad7117a5b53ae2f781bec9", "commitAfterChange": "b11449e69404728ca4b19e3cce8d08756ffe4f52", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " protected void reportAccurateParameterizedTypeReference(TypeReference typeRef, int start, int index, TypeReference[] typeArguments, IJavaElement element, int accuracy, int rule) throws CoreException", "signatureAfterChange": " protected void reportAccurateParameterizedTypeReference(TypeReference typeRef, int start, int index, TypeReference[] typeArguments, IJavaElement element, int accuracy, int rule) throws CoreException", "diff": ["-\t\t", "-\t\tJavaSearchPattern javaSearchPattern = (JavaSearchPattern)this.pattern;", "-\t\tif (javaSearchPattern.isErasureMatch || !javaSearchPattern.hasSignatures()) {", "+\t\tboolean isErasureMatch = (pattern instanceof OrPattern) ? ((OrPattern)pattern).isErasureMatch : ((JavaSearchPattern)pattern).isErasureMatch;", "+\t\tboolean hasSignatures = (pattern instanceof OrPattern) ? ((OrPattern)pattern).hasSignatures() : ((JavaSearchPattern)pattern).hasSignatures();", "+\t\tif (isErasureMatch || !hasSignatures) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c802a391fc38361661385a147219a0a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/SourcePositionImpl.java", "commitBeforeChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "commitAfterChange": "2ed8d2842cd060fd2ed1992ac37d7e3f157e19c9", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r     public IResource getResource()", "signatureAfterChange": "     public IResource getResource()", "diff": ["-    public int getLength(){ return _length; }\r", "-    public IResource getResource(){\r", "-        return _decl.getResource();\r", "-    }\r", "+    public int getLength(){ return _length; }", "+    public IResource getResource(){", "+\t\tif( _decl instanceof DeclarationImpl )", "+\t\t\treturn ((DeclarationImpl)_decl).getResource();", "+\t\telse if( _decl instanceof AnnotationMirrorImpl )", "+\t\t\treturn ((AnnotationMirrorImpl)_decl).getResouce();", "+\t\telse if( _decl instanceof AnnotationValueImpl )", "+\t\t\treturn ((AnnotationValueImpl)_decl).getResource();", "+\t\t", "+\t\tthrow new IllegalStateException();", "+    }"]}], "num": 8622}