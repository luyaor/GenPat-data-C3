{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f8d44e500cec48910c6ac547f66db7e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "714edc9f342d7ea9da583fbd2bf78968", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "ac7757b9f18b80af245a139edbb9e9ec0399cc95", "commitAfterChange": "f8334cc2f4707a38bb8c442d2aa0203f2137a4bf", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean recurseInContainers)", "signatureAfterChange": " \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean recurseInContainers)", "diff": ["-\t\tboolean pathStartsWithProject = path.segment(0).toString().equals(projectName);", "+\t\tboolean pathStartsWithProject = projectName.equals(path.segment(0));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d07f4f19eb421eafab1de0c6c3f0d1a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "b76752c4514702a8d23bce33aaea8b569326dd8b", "commitAfterChange": "9be23fc2d62f4ce93ecee7802865796fde322418", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\t\t\t \tprivate void computeExpandedClasspath( \t\tJavaProject initialProject,  \t\tboolean ignoreUnresolvedVariable, \t\tboolean generateMarkerOnError, \t\tHashSet visitedProjects,  \t\tObjectVector accumulatedEntries, \t\tMap preferredClasspaths, \t\tMap preferredOutputs) throws JavaModelException", "signatureAfterChange": "\t\t\t \tprivate void computeExpandedClasspath( \t\tJavaProject initialProject,  \t\tboolean ignoreUnresolvedVariable, \t\tboolean generateMarkerOnError, \t\tHashSet visitedProjects,  \t\tObjectVector accumulatedEntries, \t\tMap preferredClasspaths, \t\tMap preferredOutputs) throws JavaModelException", "diff": ["+\t\tboolean isInitialProject = this.equals(initialProject);", "-", "-\t\t\tboolean isInitialProject = this.equals(initialProject);"]}], "num": 43371}