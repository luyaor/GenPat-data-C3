{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "935ccfa58d18afa89a25359c1947ac26", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c2ba5a28b44d5acfde8ceba59f5632a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest.java", "commitBeforeChange": "f174c5e3ec66ea2a46810b190cc3e9d57c0432d4", "commitAfterChange": "8bbacffbe712e7ac5a5d22a44809b44ff8a5e616", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 10, "signatureBeforeChange": "  protected Map getCompilerOptions()", "signatureAfterChange": " \tprotected Map getCompilerOptions()", "diff": ["-protected Map getCompilerOptions() {", "-\tMap options = super.getCompilerOptions();", "-\toptions.put(CompilerOptions.OPTION_ReportFieldHiding, CompilerOptions.IGNORE);", "-\toptions.put(CompilerOptions.OPTION_ReportSyntheticAccessEmulation, CompilerOptions.IGNORE);", "-\treturn options;", "-}", "+\t}", "+\tprotected Map getCompilerOptions() {", "+\t\tMap options = super.getCompilerOptions();", "+\t\toptions.put(CompilerOptions.OPTION_ReportFieldHiding, CompilerOptions.IGNORE);", "+\t\toptions.put(CompilerOptions.OPTION_ReportSyntheticAccessEmulation, CompilerOptions.IGNORE);", "+\t\toptions.put(CompilerOptions.OPTION_DocCommentSupport, this.docCommentSupport);", "+\t\treturn options;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c14b5369c9e8dbec6b7930cd7dab49a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "baba91778491837a84be9560b81c83086d98c36e", "commitAfterChange": "57b083b793c3b8c2d5620895f00ff1c58e226e44", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprotected Map getCompilerOptions()", "signatureAfterChange": "  \tprotected Map getCompilerOptions()", "diff": ["-\t\tMap compilerOptions = super.getCompilerOptions();", "-\t\tcompilerOptions.put(CompilerOptions.OPTION_ReportMissingOverrideAnnotationForInterfaceMethodImplementation, CompilerOptions.DISABLED);", "-\t\treturn compilerOptions;", "+\t\tMap options = super.getCompilerOptions();", "+\t\toptions.put(CompilerOptions.OPTION_ReportMissingOverrideAnnotationForInterfaceMethodImplementation, CompilerOptions.DISABLED);", "+\t\toptions.put(CompilerOptions.OPTION_ReportUnusedLocal, CompilerOptions.IGNORE);", "+\t\toptions.put(CompilerOptions.OPTION_ReportUnusedParameter, CompilerOptions.IGNORE);", "+\t\toptions.put(CompilerOptions.OPTION_ReportUnusedPrivateMember, CompilerOptions.IGNORE);", "+\t\treturn options;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8afad19d7448e282f17b81ab07e750b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/eval/EvaluationContextWrapper.java", "commitBeforeChange": "bf1ba1c1732b0be00fbd03cfd8ae394b6a169e63", "commitAfterChange": "debb51f61b0b4a5b1a6926f67a451ba72125546c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void evaluateCodeSnippet( \tString codeSnippet,  \tString[] localVariableTypeNames,  \tString[] localVariableNames,  \tint[] localVariableModifiers,  \tIType declaringType,  \tboolean isStatic,  \tboolean isConstructorCall,  \tICodeSnippetRequestor requestor,  \tIProgressMonitor progressMonitor) throws org.eclipse.jdt.core.JavaModelException", "signatureAfterChange": " public void evaluateCodeSnippet( \tString codeSnippet,  \tString[] localVariableTypeNames,  \tString[] localVariableNames,  \tint[] localVariableModifiers,  \tIType declaringType,  \tboolean isStatic,  \tboolean isConstructorCall,  \tICodeSnippetRequestor requestor,  \tIProgressMonitor progressMonitor) throws org.eclipse.jdt.core.JavaModelException", "diff": ["+\tMap options = this.project.getOptions(true);", "+\t\t\t\t// turn off import complaints for implicitly added ones", "+\t\t\t\toptions.put(CompilerOptions.OPTION_ReportUnusedImport, CompilerOptions.IGNORE);", "+\t\t\t\toptions.put(CompilerOptions.OPTION_ReportInvalidImport, CompilerOptions.IGNORE);", "+\t\t\t\t\t// turn off import complaints for implicitly added ones", "+\t\t\t\t\toptions.put(CompilerOptions.OPTION_ReportUnusedImport, CompilerOptions.IGNORE);", "+\t\t\t\t\toptions.put(CompilerOptions.OPTION_ReportInvalidImport, CompilerOptions.IGNORE);", "-\t\t\tthis.project.getOptions(true), ", "+\t\t\toptions, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4ad4766fa8428ecda6566201e857879", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/eval/DebugEvaluationTest.java", "commitBeforeChange": "faf6597aa00a794b3bf608aa263d02964fb5a0f9", "commitAfterChange": "26e210811de2fca857d5561ae26405b72dccc0f5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 6, "signatureBeforeChange": " public Map getOptions()", "signatureAfterChange": " \tpublic Map getCompilerOptions()", "diff": ["+\t */", "+\tpublic Map getCompilerOptions() {", "+\t\tMap options = super.getCompilerOptions();", "+\t\toptions.put(CompilerOptions.OPTION_LocalVariableAttribute, CompilerOptions.GENERATE);", "+\t\toptions.put(CompilerOptions.OPTION_PreserveUnusedLocal, CompilerOptions.PRESERVE);", "+\t\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_2);", "+\t\treturn options;", "- */", "-public Map getOptions() {", "-\tMap options = super.getOptions();", "-\toptions.put(CompilerOptions.OPTION_LocalVariableAttribute, CompilerOptions.GENERATE);", "-\toptions.put(CompilerOptions.OPTION_PreserveUnusedLocal, CompilerOptions.PRESERVE);", "-\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_2);\t", "-\treturn options;", "-}"]}], "num": 8594}