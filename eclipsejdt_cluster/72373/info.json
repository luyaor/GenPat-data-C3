{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b4955984998651ae3834dd0aa53ad2e9", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c84d30b522d6410cac248a6f0dc4c4f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/FactoryPathConfigurationBlock.java", "commitBeforeChange": "b5012cbf5bbeb60257503c05374665bf1738c502", "commitAfterChange": "4326108404a9c5495558d852fb2cee71d5d10136", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprivate IPath[] getExistingPaths(FactoryContainer.FactoryType type)", "signatureAfterChange": " \tprivate IPath[] getExistingPaths(FactoryContainer.FactoryType type, FactoryContainer ignore)", "diff": ["-\tprivate IPath[] getExistingPaths(FactoryContainer.FactoryType type) {", "+\tprivate IPath[] getExistingPaths(FactoryContainer.FactoryType type, FactoryContainer ignore) {", "-\t\t\tif (fc.getType() == type) {", "+\t\t\tif (fc.getType() == type && fc != ignore) {", "-\t\t\tif (fc.getType() == type) {", "+\t\t\tif (fc.getType() == type && fc != ignore) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61f664316dd75be967db2f2e205db5a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "2af4d6c5a01ec5b5f71fc5f4417f402b3cbb8976", "commitAfterChange": "938c6a1a841b22e47405cea69af1a008feb65db4", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \t\t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t\t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\tif (!leftType.isBaseType() && rightTypeID != T_JavaLangString) {", "+\t\t\tif (!leftType.isBaseType() && rightTypeID != T_JavaLangString && rightTypeID != T_null) {", "-\t\t\tif (!rightType.isBaseType() && leftTypeID != T_JavaLangString) {", "+\t\t\tif (!rightType.isBaseType() && leftTypeID != T_JavaLangString && leftTypeID != T_null) {"]}], "num": 72373}