{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "81106155f92db83518788847fc041f80", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "581f755459cd5bc4fa4ff45eae3d862d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryType.java", "commitBeforeChange": "7f04146f7ecfc97ac8decbf845cb74d2c5fd9ef2", "commitAfterChange": "904675358dc0c5cf51f156f5fad299110702a532", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " public String[] getSuperInterfaceTypeSignatures() throws JavaModelException", "signatureAfterChange": " public String[] getSuperInterfaceTypeSignatures() throws JavaModelException", "diff": ["-\tchar[][] names= info.getInterfaceNames();", "-\tint length;", "-\tif (names == null || (length = names.length) == 0) {", "-\t\treturn NO_STRINGS;", "+\tchar[] genericSignature = info.getGenericSignature();", "+\tif (genericSignature != null) {", "+\t\tArrayList interfaces = new ArrayList();", "+\t\tint signatureLength = genericSignature.length;", "+\t\t// skip type parameters", "+\t\tint index = 0;", "+\t\tif (genericSignature[0] == '<') {", "+\t\t\tint count = 1;", "+\t\t\twhile (count > 0 && ++index < signatureLength) {", "+\t\t\t\tswitch (genericSignature[index]) {", "+\t\t\t\t\tcase '<': ", "+\t\t\t\t\t\tcount++;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase '>':", "+\t\t\t\t\t\tcount--;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tindex++;", "+\t\t}", "+\t\t// skip superclass", "+\t\tindex = Util.scanClassTypeSignature(genericSignature, index) + 1;", "+\t\twhile (index  < signatureLength) {", "+\t\t\tint start = index;", "+\t\t\tindex = Util.scanClassTypeSignature(genericSignature, start) + 1;", "+\t\t\tchar[] interfaceSig = CharOperation.subarray(genericSignature, start, index);", "+\t\t\tinterfaces.add(new String(interfaceSig));", "+\t\t}", "+\t\tint size = interfaces.size();", "+\t\tString[] result = new String[size];", "+\t\tinterfaces.toArray(result);", "+\t\treturn result;", "+\t} else {", "+\t\tchar[][] names= info.getInterfaceNames();", "+\t\tint length;", "+\t\tif (names == null || (length = names.length) == 0) {", "+\t\t\treturn NO_STRINGS;", "+\t\t}", "+\t\tnames= ClassFile.translatedNames(names);", "+\t\tString[] strings= new String[length];", "+\t\tfor (int i= 0; i < length; i++) {", "+\t\t\tstrings[i]= new String(Signature.createTypeSignature(names[i], true));", "+\t\t}", "+\t\treturn strings;", "-\tnames= ClassFile.translatedNames(names);", "-\tString[] strings= new String[length];", "-\tfor (int i= 0; i < length; i++) {", "-\t\tstrings[i]= new String(Signature.createTypeSignature(names[i], true));", "-\t}", "-\treturn strings;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a71377c8401a110fc957b34c38bc10c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryType.java", "commitBeforeChange": "5411e32aaeab6116e881e3fbe3ecd2e1380ba2a6", "commitAfterChange": "809dcc0b94a0ee014d34f856e18c64bec8618f2a", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public String getSuperclassTypeSignature() throws JavaModelException", "signatureAfterChange": " public String getSuperclassTypeSignature() throws JavaModelException", "diff": ["-\tchar[] superclassName = info.getSuperclassName();", "-\tif (superclassName == null) {", "-\t\treturn null;", "+\tchar[] genericSignature = info.getGenericSignature();", "+\tif (genericSignature != null) {", "+\t\tint signatureLength = genericSignature.length;", "+\t\t// skip type parameters", "+\t\tint index = 0;", "+\t\tif (genericSignature[0] == '<') {", "+\t\t\tint count = 1;", "+\t\t\twhile (count > 0 && ++index < signatureLength) {", "+\t\t\t\tswitch (genericSignature[index]) {", "+\t\t\t\t\tcase '<': ", "+\t\t\t\t\t\tcount++;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase '>':", "+\t\t\t\t\t\tcount--;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tindex++;", "+\t\t}", "+\t\tint start = index;", "+\t\tindex = Util.scanClassTypeSignature(genericSignature, start) + 1;", "+\t\tchar[] superclassSig = CharOperation.subarray(genericSignature, start, index);", "+\t\treturn new String(ClassFile.translatedName(superclassSig));", "+\t} else {", "+\t\tchar[] superclassName = info.getSuperclassName();", "+\t\tif (superclassName == null) {", "+\t\t\treturn null;", "+\t\t}", "+\t\treturn new String(Signature.createTypeSignature(ClassFile.translatedName(superclassName), true));", "-\treturn new String(Signature.createTypeSignature(ClassFile.translatedName(superclassName), true));"]}], "num": 37923}