{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "371764c7e33ac98712868aa608ba772b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b66f26628a79273853101a2406cd29f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "6e6f51aebf98352a0ce0c363fefcb4659f1b5e8a", "commitAfterChange": "2a6dae5f036d3d2969c0b8ba36abf75c33e3e841", "methodNumberBeforeChange": 113, "methodNumberAfterChange": 113, "signatureBeforeChange": " public void generateSyntheticBodyForMethodAccess(SyntheticMethodBinding accessBinding)", "signatureAfterChange": " public void generateSyntheticBodyForMethodAccess(SyntheticMethodBinding accessMethod)", "diff": ["-public void generateSyntheticBodyForMethodAccess(SyntheticMethodBinding accessBinding) {", "+public void generateSyntheticBodyForMethodAccess(SyntheticMethodBinding accessMethod) {", "-\tinitializeMaxLocals(accessBinding);", "-\tMethodBinding methodBinding = accessBinding.targetMethod;", "-\tTypeBinding[] parameters = methodBinding.parameters;", "+\tinitializeMaxLocals(accessMethod);", "+\tMethodBinding targetMethod = accessMethod.targetMethod;", "+\tTypeBinding[] parameters = targetMethod.parameters;", "-\tTypeBinding[] arguments = accessBinding.kind == SyntheticMethodBinding.BridgeMethod ", "-\t\t\t\t\t\t\t\t\t\t\t\t\t? accessBinding.parameters", "+\tTypeBinding[] arguments = accessMethod.kind == SyntheticMethodBinding.BridgeMethod ", "+\t\t\t\t\t\t\t\t\t\t\t\t\t? accessMethod.parameters", "-\tif (methodBinding.isStatic())", "+\tif (targetMethod.isStatic())", "-\tTypeBinding type;", "-\tif (methodBinding.isStatic())", "-\t\tthis.invokestatic(methodBinding);", "+\tif (targetMethod.isStatic())", "+\t\tthis.invokestatic(targetMethod);", "-\t\tif (methodBinding.isConstructor()", "-\t\t\t|| methodBinding.isPrivate()", "+\t\tif (targetMethod.isConstructor()", "+\t\t\t|| targetMethod.isPrivate()", "-\t\t\t|| accessBinding.kind == SyntheticMethodBinding.SuperMethodAccess){", "-\t\t\tthis.invokespecial(methodBinding);", "+\t\t\t|| accessMethod.kind == SyntheticMethodBinding.SuperMethodAccess){", "+\t\t\tthis.invokespecial(targetMethod);", "-\t\t\tif (methodBinding.declaringClass.isInterface()) { // interface or annotation type", "-\t\t\t\tthis.invokeinterface(methodBinding);", "+\t\t\tif (targetMethod.declaringClass.isInterface()) { // interface or annotation type", "+\t\t\t\tthis.invokeinterface(targetMethod);", "-\t\t\t\tthis.invokevirtual(methodBinding);", "+\t\t\t\tthis.invokevirtual(targetMethod);", "-\tif ((type = methodBinding.returnType).isBaseType())", "-\t\tif (type == VoidBinding)", "+\tswitch (targetMethod.returnType.id) {", "+\t\tcase T_void :", "-\t\telse", "-\t\t\tif (type == IntBinding)", "-\t\t\t\tthis.ireturn();", "-\t\t\telse", "-\t\t\t\tif (type == FloatBinding)", "-\t\t\t\t\tthis.freturn();", "-\t\t\t\telse", "-\t\t\t\t\tif (type == LongBinding)", "-\t\t\t\t\t\tthis.lreturn();", "-\t\t\t\t\telse", "-\t\t\t\t\t\tif (type == DoubleBinding)", "-\t\t\t\t\t\t\tthis.dreturn();", "-\t\t\t\t\t\telse", "-\t\t\t\t\t\t\tthis.ireturn();", "-\telse", "-\t\tthis.areturn();", "+\t\t\tbreak;", "+\t\tcase T_boolean :", "+\t\tcase T_byte :", "+\t\tcase T_char :", "+\t\tcase T_short :", "+\t\tcase T_int :", "+\t\t\tthis.ireturn();", "+\t\t\tbreak;", "+\t\tcase T_long :", "+\t\t\tthis.lreturn();", "+\t\t\tbreak;", "+\t\tcase T_float :", "+\t\t\tthis.freturn();", "+\t\t\tbreak;", "+\t\tcase T_double :", "+\t\t\tthis.dreturn();", "+\t\t\tbreak;", "+\t\tdefault :", "+\t\t\tif (targetMethod.returnType != accessMethod.returnType)", "+\t\t\t\tthis.checkcast(accessMethod.returnType); // for bridge methods", "+\t\t\tthis.areturn();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ece2cd4ac74678087893e73467260819", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "6e6f51aebf98352a0ce0c363fefcb4659f1b5e8a", "commitAfterChange": "2a6dae5f036d3d2969c0b8ba36abf75c33e3e841", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 111, "signatureBeforeChange": " public void generateSyntheticBodyForFieldReadAccess(SyntheticMethodBinding accessBinding)", "signatureAfterChange": " public void generateSyntheticBodyForFieldReadAccess(SyntheticMethodBinding accessBinding)", "diff": ["-\tif ((type = fieldBinding.type).isBaseType()) {", "-\t\tif (type == IntBinding)", "+\tswitch (fieldBinding.type.id) {", "+//\t\tcase T_void :", "+//\t\t\tthis.return_();", "+//\t\t\tbreak;", "+\t\tcase T_boolean :", "+\t\tcase T_byte :", "+\t\tcase T_char :", "+\t\tcase T_short :", "+\t\tcase T_int :", "-\t\telse", "-\t\t\tif (type == FloatBinding)", "-\t\t\t\tthis.freturn();", "-\t\t\telse", "-\t\t\t\tif (type == LongBinding)", "-\t\t\t\t\tthis.lreturn();", "-\t\t\t\telse", "-\t\t\t\t\tif (type == DoubleBinding)", "-\t\t\t\t\t\tthis.dreturn();", "-\t\t\t\t\telse", "-\t\t\t\t\t\tthis.ireturn();", "-\t} else", "-\t\tthis.areturn();", "+\t\t\tbreak;", "+\t\tcase T_long :", "+\t\t\tthis.lreturn();", "+\t\t\tbreak;", "+\t\tcase T_float :", "+\t\t\tthis.freturn();", "+\t\t\tbreak;", "+\t\tcase T_double :", "+\t\t\tthis.dreturn();", "+\t\t\tbreak;", "+\t\tdefault :", "+\t\t\tthis.areturn();", "+\t}\t"]}], "num": 70552}