{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a081f1dd56178ffca80bb35d5b9aa10b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b76fa4b9aee1bb1807fadbded6a7372", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "0bb0d4573d6c66c1ac9d1cb2e9c3c75a71063c64", "commitAfterChange": "6b83f210f48576459977c0ca86d46729031558f3", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 105, "signatureBeforeChange": " \t private Preferences loadPreferences()", "signatureAfterChange": " \t private IEclipsePreferences loadPreferences()", "diff": ["-\t private Preferences loadPreferences() {", "+\t private IEclipsePreferences loadPreferences() {", "-\t \tPreferences preferences = new Preferences();", "+\t \tIEclipsePreferences preferences = null;", "-\t\t\t\t\tpreferences.load(in);", "+\t\t\t\t\tpreferences = Platform.getPreferencesService().readPreferences(in);", "+\t\t\t\t} catch (CoreException e) { // problems loading preference store - quietly ignore"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9957cf002b5f2956e714f954b2f08526", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "d36603e234e78a5608b9d157413740c9d9579f5d", "commitAfterChange": "947b49b32e7050f776cb224d4e387fbfba005680", "methodNumberBeforeChange": 238, "methodNumberAfterChange": 238, "signatureBeforeChange": " \tpublic boolean storePreference(String optionName, String optionValue, IEclipsePreferences eclipsePreferences)", "signatureAfterChange": " \tpublic boolean storePreference(String optionName, String optionValue, IEclipsePreferences eclipsePreferences, Map otherOptions)", "diff": ["-\tpublic boolean storePreference(String optionName, String optionValue, IEclipsePreferences eclipsePreferences) {", "+\tpublic boolean storePreference(String optionName, String optionValue, IEclipsePreferences eclipsePreferences, Map otherOptions) {", "+\t\t\t\t\tif (otherOptions != null && otherOptions.containsKey(compatibleOptions[co]))", "+\t\t\t\t\t\tcontinue; // don't overwrite explicit value of otherOptions at compatibleOptions[co]"]}], "num": 52141}