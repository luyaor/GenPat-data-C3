{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b3ab50eccf03d30382ee238e0a594a9d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f887871be68e5a2e2a5358444d4e647", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "e4b120541cf6c404fcc534d957fc35fe80d78035", "commitAfterChange": "50d1489a949b2e888c9f126b8f39d1c4ff67eaa2", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 80, "signatureBeforeChange": " \tpublic void test0179_try_catch()", "signatureAfterChange": " \tpublic void _test0179_try_catch()", "diff": ["-\tpublic void test0179_try_catch() {", "+\t// TODO (maxime) fix", "+\tpublic void _test0179_try_catch() {", "-\t\t\t\t\"\t\t\t if (this.dummy) {\\n\" + ", "-\t\t\t\t\"\t\t\t   System.out.print(0);\\n\" + ", "+\t\t\t\t\"\t\t\t if (dummy) {\\n\" + ", "-\t\t\t\t\"\t\t catch (LocalException e) {\\n\" + ", "+\t\t\t\t\"\t\t catch (LocalException e) {\\n\" + // must catch SubException"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e5c0da709fbb7af382c52b571d3b6c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ImportRewriteTest.java", "commitBeforeChange": "fd3b7a5f13831ab502da35b25283f8932b2b1174", "commitAfterChange": "4542c74874023fdaf35f1d53423cc7a878dae2ec", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "     public void testBug376930() throws Exception", "signatureAfterChange": "     public void testBug376930() throws Exception", "diff": ["-                \"\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c83e26fbfe646631f7cef67ed7f171f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ImportRewriteTest.java", "commitBeforeChange": "919024c6945d276058446a723145394a23656d2f", "commitAfterChange": "4acde1e0a5179616c6bfc8db1555f7556fcd927f", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "     public void testBug376930() throws Exception", "signatureAfterChange": "     public void testBug376930() throws Exception", "diff": ["-                \"\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d480f29c8036f7bbc23ef448e7111873", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "b94498a9448a5b9c5f679d9455940fca0f271602", "commitAfterChange": "485d2265d4a657582a8bc0f8521212137d5dd5af", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " public void test012b()", "signatureAfterChange": " public void test012b()", "diff": ["-        \"      unnecessaryOperator  unnecessary ''+'' operator for unary expression\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e901160121dc09beff8c8581aa64165d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsBugsTest.java", "commitBeforeChange": "d1246b4aff159c8bec10d39c7616aa371724fb25", "commitAfterChange": "3aaa02433bee6eae022db09efeb9fd0aba7da6a0", "methodNumberBeforeChange": 224, "methodNumberAfterChange": 223, "signatureBeforeChange": " public void testBug260381_wksp2_03() throws JavaModelException", "signatureAfterChange": " public void testBug260381_wksp2_03() throws JavaModelException", "diff": ["-\t\t\"\t * \t&#64;code\\n\" + ", "-\t\t\"\t *\\n\" + ", "-\t\t\"\t * \tstatic final ImmutableBiMap<String, Integer> WORD_TO_INT = new ImmutableBiMap.Builder<String, Integer>()\\n\" + ", "-\t\t\"\t * \t\t\t.put(\\\"one\\\", 1).put(\\\"two\\\", 2).put(\\\"three\\\", 3).build();\\n\" + ", "+\t\t\"\t * \t&#064;code\\n\" + ", "+\t\t\"\t * \tstatic final ImmutableBiMap&lt;String, Integer&gt; WORD_TO_INT = new ImmutableBiMap.Builder&lt;String, Integer&gt;()\\n\" + ", "+\t\t\"\t * \t\t\t.put(&quot;one&quot;, 1).put(&quot;two&quot;, 2).put(&quot;three&quot;, 3).build();\\n\" + "]}], "num": 2195}