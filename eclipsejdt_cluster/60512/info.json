{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "983b99f00c10f3cffe25a80b242d782d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63e5371ac86c7a2353d21a7b35ceecf4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "35063ce5d9a09463d0cd8cba0e3ead1e4b545071", "commitAfterChange": "bd6ca77171fabf4da2f366e7f152e0ef38feca91", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": " protected void reportMatching(TypeParameter[] typeParameters, IJavaElement enclosingElement, IJavaElement parent, Binding binding, MatchingNodeSet nodeSet) throws CoreException", "signatureAfterChange": " protected void reportMatching(TypeParameter[] typeParameters, IJavaElement enclosingElement, IJavaElement parent, Binding binding, MatchingNodeSet nodeSet) throws CoreException", "diff": ["+\t\t\t\t\tif (typeParameterBound.annotations != null) {", "+\t\t\t\t\t\treportMatching(typeParameterBound.annotations, enclosingElement, binding,nodeSet, matchedClassContainer);", "+\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tif (typeArgument.annotations != null) {", "+\t\t\t\t\t\t\t\t\treportMatching(typeArgument.annotations, enclosingElement, binding,nodeSet, matchedClassContainer);", "+\t\t\t\t\t\t\t\t}", "+\t\t            \t\t\t\t\tif (wildcardBound.annotations != null) {", "+\t\t            \t\t\t\t\t\treportMatching(wildcardBound.annotations, enclosingElement, binding,nodeSet, matchedClassContainer);", "+\t\t            \t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9b123e343a2c02acc79e73dd562d412", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "85a51230859ba76a62ce4d566f4cbd47aac06488", "commitAfterChange": "3885d0327ef37626bb68aa8a0a9e1a4a5bb4ba7a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic String disassemble(IClassFileReader classFileReader, String lineSeparator, int mode)", "signatureAfterChange": " \tpublic String disassemble(IClassFileReader classFileReader, String lineSeparator, int mode)", "diff": ["-", "+\t", "-\t\tfinal int accesssFlags = classFileReader.getAccessFlags();", "-\t\tif (mode == ClassFileBytesDisassembler.DETAILED) {", "+\t\tfinal int accessFlags = classFileReader.getAccessFlags();", "+\t\tif (mode == DETAILED || mode == SYSTEM) {", "-\t\t\t\t\t((accesssFlags & IModifierConstants.ACC_SUPER) != 0", "+\t\t\t\t\t((accessFlags & IModifierConstants.ACC_SUPER) != 0", "-\t\t\tdecodeModifiersForType(buffer, accesssFlags);", "+\t\t\tdecodeModifiersForType(buffer, accessFlags);", "-\t\tif ((accesssFlags & IModifierConstants.ACC_ENUM) != 0) {", "+\t\t", "+\t\tif ((accessFlags & IModifierConstants.ACC_ENUM) != 0) {", "+\t\t\tif ((accessFlags & IModifierConstants.ACC_ANNOTATION) != 0) {", "+\t\t\t\tbuffer.append(\"@\"); //$NON-NLS-1$", "+\t\t\t}", "+\t\tif (mode == SYSTEM) {", "+\t\t\tdisassemble(classFileReader.getConstantPool(), buffer, lineSeparator, 1);", "+\t\t}", "-\t\tif (mode == ClassFileBytesDisassembler.DETAILED) {", "+\t\tif (mode == DETAILED || mode == SYSTEM) {"]}], "num": 60512}