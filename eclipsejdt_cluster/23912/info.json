{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a1a71c2044a959a9c2ded9a45788a9ae", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b3307406069fc261e50940235601ad8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "38437076b7a492cbe65acea37c6da2899990885f", "commitAfterChange": "a85dd3772bf40e01ede4717af426d44844307345", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void checkComment()", "signatureAfterChange": " public void checkComment()", "diff": ["-\t\t\tpatternLocator.match(typeRef, nodeSet);", "+\t\t\tthis.patternLocator.match(typeRef, this.nodeSet);", "-\t\t\t\tpatternLocator.match(typeRef, nodeSet);", "+\t\t\t\tthis.patternLocator.match(typeRef, this.nodeSet);", "-\t\t\t\tpatternLocator.match(fieldRef, nodeSet);", "-\t\t\t\tif (fieldRef.receiver instanceof TypeReference) {", "+\t\t\t\tthis.patternLocator.match(fieldRef, this.nodeSet);", "+\t\t\t\tif (fieldRef.receiver instanceof TypeReference && !fieldRef.receiver.isThis()) {", "-\t\t\t\t\tpatternLocator.match(typeRef, nodeSet);", "+\t\t\t\t\tthis.patternLocator.match(typeRef, this.nodeSet);", "-\t\t\t\tpatternLocator.match(messageSend, nodeSet);", "-\t\t\t\tif (messageSend.receiver instanceof TypeReference) {", "+\t\t\t\tthis.patternLocator.match(messageSend, this.nodeSet);", "+\t\t\t\tif (messageSend.receiver instanceof TypeReference && !messageSend.receiver.isThis()) {", "-\t\t\t\t\tpatternLocator.match(typeRef, nodeSet);", "+\t\t\t\t\tthis.patternLocator.match(typeRef, this.nodeSet);", "-\t\t\t\tpatternLocator.match(constructor, nodeSet);", "-\t\t\t\tif (constructor.type != null) {", "-\t\t\t\t\tpatternLocator.match(constructor.type, nodeSet);", "+\t\t\t\tthis.patternLocator.match(constructor, this.nodeSet);", "+\t\t\t\tif (constructor.type != null && !constructor.type.isThis()) {", "+\t\t\t\t\tthis.patternLocator.match(constructor.type, this.nodeSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96d4c6038f35b84b31a2ea4ba621c6aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "fced1a7a2b8f5ce77723d058091976d51b43704e", "commitAfterChange": "6900dd1a03d1ad901ee84c7d15bd4e318744abe6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void select( \t\tICompilationUnit sourceUnit, \t\tint selectionSourceStart, \t\tint selectionSourceEnd)", "signatureAfterChange": " \tpublic void select( \t\tICompilationUnit sourceUnit, \t\tint selectionSourceStart, \t\tint selectionSourceEnd)", "diff": ["-\t\t\t\tparser.dietParse(sourceUnit, result, actualSelectionStart, actualSelectionEnd);", "+\t\t\t\tthis.parser.dietParse(sourceUnit, result, this.actualSelectionStart, this.actualSelectionEnd);", "-\t\t\t\t\tnoProposal = false;", "-\t\t\t\t\trequestor.acceptPackage(CharOperation.concatWith(tokens, '.'));", "+\t\t\t\t\tthis.noProposal = false;", "+\t\t\t\t\tthis.requestor.acceptPackage(CharOperation.concatWith(tokens, '.'));", "-\t\t\t\t\t\t\tnoProposal = false;", "-\t\t\t\t\t\t\trequestor.acceptPackage(CharOperation.concatWith(tokens, '.'));", "-\t\t\t\t\t\t\tnameEnvironment.findTypes(CharOperation.concatWith(tokens, '.'), this);", "+\t\t\t\t\t\t\tthis.noProposal = false;", "+\t\t\t\t\t\t\tthis.requestor.acceptPackage(CharOperation.concatWith(tokens, '.'));", "+\t\t\t\t\t\t\tthis.nameEnvironment.findTypes(CharOperation.concatWith(tokens, '.'), this);", "-\t\t\t\t\t\t\tif(!acceptedAnswer) {", "+\t\t\t\t\t\t\tif(!this.acceptedAnswer) {", "-\t\t\t\t\t\t\t\tif (!acceptedAnswer) {", "-\t\t\t\t\t\t\t\t\tnameEnvironment.findTypes(selectedIdentifier, this);", "+\t\t\t\t\t\t\t\tif (!this.acceptedAnswer) {", "+\t\t\t\t\t\t\t\t\tthis.nameEnvironment.findTypes(this.selectedIdentifier, this);", "-\t\t\t\t\t\t\t\t\tif(!acceptedAnswer) {", "+\t\t\t\t\t\t\t\t\tif(!this.acceptedAnswer) {", "-\t\t\t\t\t\t\tif(noProposal && problem != null) {", "-\t\t\t\t\t\t\t\trequestor.acceptError(problem);", "+\t\t\t\t\t\t\tif(this.noProposal && this.problem != null) {", "+\t\t\t\t\t\t\t\tthis.requestor.acceptError(this.problem);", "-\t\t\t\t\tlookupEnvironment.buildTypeBindings(parsedUnit);", "+\t\t\t\t\tthis.lookupEnvironment.buildTypeBindings(parsedUnit);", "-\t\t\t\t\t\t\tlookupEnvironment.completeTypeBindings(parsedUnit, true);", "+\t\t\t\t\t\t\tthis.lookupEnvironment.completeTypeBindings(parsedUnit, true);", "-\t\t\tif (!acceptedAnswer) {", "-\t\t\t\tnameEnvironment.findTypes(selectedIdentifier, this);", "+\t\t\tif (!this.acceptedAnswer) {", "+\t\t\t\tthis.nameEnvironment.findTypes(this.selectedIdentifier, this);", "-\t\t\t\tif(!acceptedAnswer) {", "+\t\t\t\tif(!this.acceptedAnswer) {", "-\t\t\tif(noProposal && problem != null) {", "-\t\t\t\trequestor.acceptError(problem);", "+\t\t\tif(this.noProposal && this.problem != null) {", "+\t\t\t\tthis.requestor.acceptError(this.problem);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eef231a46496ae64c391c091846a9a86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredUnit.java", "commitBeforeChange": "f4fc58ef48a6d9d6c398d56576d18d3e70e62c86", "commitAfterChange": "6537a24c88f25f9b49763273df663f64d4b48580", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public CompilationUnitDeclaration updatedCompilationUnitDeclaration()", "signatureAfterChange": " public CompilationUnitDeclaration updatedCompilationUnitDeclaration()", "diff": ["-\tif (importCount > 0){", "-\t\tImportReference[] importRefences = new ImportReference[importCount];", "-\t\tfor (int i = 0; i < importCount; i++){", "-\t\t\timportRefences[i] = imports[i].updatedImportReference();", "+\tif (this.importCount > 0){", "+\t\tImportReference[] importRefences = new ImportReference[this.importCount];", "+\t\tfor (int i = 0; i < this.importCount; i++){", "+\t\t\timportRefences[i] = this.imports[i].updatedImportReference();", "-\t\tunitDeclaration.imports = importRefences;", "+\t\tthis.unitDeclaration.imports = importRefences;", "-\tif (typeCount > 0){", "-\t\tint existingCount = unitDeclaration.types == null ? 0 : unitDeclaration.types.length;", "-\t\tTypeDeclaration[] typeDeclarations = new TypeDeclaration[existingCount + typeCount];", "+\tif (this.typeCount > 0){", "+\t\tint existingCount = this.unitDeclaration.types == null ? 0 : this.unitDeclaration.types.length;", "+\t\tTypeDeclaration[] typeDeclarations = new TypeDeclaration[existingCount + this.typeCount];", "-\t\t\tSystem.arraycopy(unitDeclaration.types, 0, typeDeclarations, 0, existingCount);", "+\t\t\tSystem.arraycopy(this.unitDeclaration.types, 0, typeDeclarations, 0, existingCount);", "-\t\tif (types[typeCount - 1].typeDeclaration.declarationSourceEnd == 0){", "-\t\t\ttypes[typeCount - 1].typeDeclaration.declarationSourceEnd = unitDeclaration.sourceEnd;", "-\t\t\ttypes[typeCount - 1].typeDeclaration.bodyEnd = unitDeclaration.sourceEnd;", "+\t\tif (this.types[this.typeCount - 1].typeDeclaration.declarationSourceEnd == 0){", "+\t\t\tthis.types[this.typeCount - 1].typeDeclaration.declarationSourceEnd = this.unitDeclaration.sourceEnd;", "+\t\t\tthis.types[this.typeCount - 1].typeDeclaration.bodyEnd = this.unitDeclaration.sourceEnd;", "-\t\tfor (int i = 0; i < typeCount; i++){", "-\t\t\tTypeDeclaration typeDecl = types[i].updatedTypeDeclaration();", "+\t\tfor (int i = 0; i < this.typeCount; i++){", "+\t\t\tTypeDeclaration typeDecl = this.types[i].updatedTypeDeclaration();", "-\t\tif (actualCount != typeCount){", "+\t\tif (actualCount != this.typeCount){", "-\t\tunitDeclaration.types = typeDeclarations;", "+\t\tthis.unitDeclaration.types = typeDeclarations;", "-\treturn unitDeclaration;", "+\treturn this.unitDeclaration;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0adaa6924d515a7977873ca83b18f1b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "e33f9e50507ed5c3d45f37527737576191428633", "commitAfterChange": "62bebd71f36545c90d6c943df5cd6ccb18d59a48", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic void complete(ICompilationUnit sourceUnit, int completionPosition, int pos)", "signatureAfterChange": " \tpublic void complete(ICompilationUnit sourceUnit, int completionPosition, int pos)", "diff": ["-\t\t\tactualCompletionPosition = completionPosition - 1;", "+\t\t\tthis.actualCompletionPosition = completionPosition - 1;", "-\t\t\tCompilationUnitDeclaration parsedUnit = parser.dietParse(sourceUnit, result, actualCompletionPosition);", "+\t\t\tCompilationUnitDeclaration parsedUnit = this.parser.dietParse(sourceUnit, result, this.actualCompletionPosition);", "-\t\t\t\t\tif(noProposal && problem != null) {", "-\t\t\t\t\t\trequestor.acceptError(problem);", "+\t\t\t\t\tif(this.noProposal && this.problem != null) {", "+\t\t\t\t\t\tthis.requestor.acceptError(this.problem);", "-\t\t\t\t\t\t\tif(noProposal && problem != null) {", "-\t\t\t\t\t\t\t\trequestor.acceptError(problem);", "+\t\t\t\t\t\t\tif(this.noProposal && this.problem != null) {", "+\t\t\t\t\t\t\t\tthis.requestor.acceptError(this.problem);", "-\t\t\t\t\t\t\tif(noProposal && problem != null) {", "-\t\t\t\t\t\t\t\trequestor.acceptError(problem);", "+\t\t\t\t\t\t\tif(this.noProposal && this.problem != null) {", "+\t\t\t\t\t\t\t\tthis.requestor.acceptError(this.problem);", "-\t\t\t\t\t\tlookupEnvironment.buildTypeBindings(parsedUnit);", "+\t\t\t\t\t\tthis.lookupEnvironment.buildTypeBindings(parsedUnit);", "-\t\t\t\t\t\tif ((unitScope = parsedUnit.scope) != null) {", "-\t\t\t\t\t\t\tsource = sourceUnit.getContents();", "-\t\t\t\t\t\t\tlookupEnvironment.completeTypeBindings(parsedUnit, true);", "+\t\t\t\t\t\tif ((this.unitScope = parsedUnit.scope) != null) {", "+\t\t\t\t\t\t\tthis.source = sourceUnit.getContents();", "+\t\t\t\t\t\t\tthis.lookupEnvironment.completeTypeBindings(parsedUnit, true);", "-\t\t\t\t\t\t\tparseBlockStatements(parsedUnit, actualCompletionPosition);", "+\t\t\t\t\t\t\tparseBlockStatements(parsedUnit, this.actualCompletionPosition);", "-\t\t\t\t\t\t\t\tif(parser.assistNodeParent != null) {", "+\t\t\t\t\t\t\t\tif(this.parser.assistNodeParent != null) {", "-\t\t\t\t\t\t\t\t\tSystem.out.println(parser.assistNodeParent);", "+\t\t\t\t\t\t\t\t\tSystem.out.println(this.parser.assistNodeParent);", "-\t\t\t\t\t\t\tcomplete(e.astNode, parser.assistNodeParent, e.qualifiedBinding, e.scope);", "+\t\t\t\t\t\t\tcomplete(e.astNode, this.parser.assistNodeParent, e.qualifiedBinding, e.scope);", "-\t\t\tif(noProposal && problem != null) {", "-\t\t\t\trequestor.acceptError(problem);", "+\t\t\tif(this.noProposal && this.problem != null) {", "+\t\t\t\tthis.requestor.acceptError(this.problem);", "-\t\t\t\t\t\t\tCompletionScanner scanner = (CompletionScanner) parser.scanner;", "+\t\t\t\t\t\t\tCompletionScanner scanner = (CompletionScanner) this.parser.scanner;"]}], "num": 23912}