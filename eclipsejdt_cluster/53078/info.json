{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "88a4e6527fbaa613287c5344aa9ea27d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d08e7f1529734c339d80295987128b16", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "d82ae848a9c4d7b35f614d484418e3b413534446", "commitAfterChange": "c4725a925ff03cde3fc0735f1b7bd65f4e96815b", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tprivate TextEdit probeFormatting(String source, int indentationLevel, String lineSeparator, IRegion[] regions, boolean includeComments)", "signatureAfterChange": "  \tprivate TextEdit probeFormatting(String source, int indentationLevel, String lineSeparator, IRegion[] regions, boolean includeComments)", "diff": ["-\t\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=227043", "-\t\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=102780", "-\t\t\t\t// use the integrated comment formatter to format comment", "-\t\t\t\tif (ENABLE_NEW_COMMENTS_FORMAT /*|| FORCE_NEW_COMMENTS_FORMAT*/) {", "-\t\t\t\t\treturn formatComment(kind, source, indentationLevel, lineSeparator, regions);", "-\t\t\t\t}", "-\t\t\t\treturn formatComment(kind, source, indentationLevel, lineSeparator, regions, includeComments);", "+\t\t\t\treturn formatComment(kind, source, indentationLevel, lineSeparator, regions);", "-\t\t\treturn internalFormatExpression(source, indentationLevel, lineSeparator, expression, regions);", "+\t\t\treturn internalFormatExpression(source, indentationLevel, lineSeparator, expression, regions, includeComments);", "-\t\t\treturn internalFormatClassBodyDeclarations(source, indentationLevel, lineSeparator, bodyDeclarations, regions);", "+\t\t\treturn internalFormatClassBodyDeclarations(source, indentationLevel, lineSeparator, bodyDeclarations, regions, includeComments);", "-\t\t\treturn internalFormatStatements(source, indentationLevel, lineSeparator, constructorDeclaration, regions);", "+\t\t\treturn internalFormatStatements(source, indentationLevel, lineSeparator, constructorDeclaration, regions, includeComments);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7430d8e1ba786ce66c30c336881e469", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic String format( \t\t\tint kind, \t\t\tString source, \t\t\tint indentationLevel, \t\t\tint[] positions, \t\t\tString lineSeparator, \t\t\tMap options)", "signatureAfterChange": " \tpublic TextEdit format( \t\t\tint kind, \t\t\tString source, \t\t\tint offset, \t\t\tint length, \t\t\tint indentationLevel, \t\t\tString lineSeparator)", "diff": ["-\tpublic String format(", "+\tpublic TextEdit format(", "+\t\t\tint offset,", "+\t\t\tint length,", "-\t\t\tint[] positions,", "-\t\t\tString lineSeparator,", "-\t\t\tMap options) {", "+\t\t\tString lineSeparator) {", "-\t\tString result = source;\t\t\t\t", "-\t\t\t\tresult = formatClassBodyDeclarations(source, indentationLevel, positions, lineSeparator, options);", "-\t\t\t\tbreak;", "+\t\t\t\treturn formatClassBodyDeclarations(source, indentationLevel, lineSeparator, offset, length);", "-\t\t\t\tresult = formatCompilationUnit(source, indentationLevel, positions, lineSeparator, options);", "-\t\t\t\tbreak;", "+\t\t\t\treturn formatCompilationUnit(source, indentationLevel, lineSeparator, offset, length);", "-\t\t\t\tresult = formatExpression(source, indentationLevel, positions, lineSeparator, options);", "-\t\t\t\tbreak;", "+\t\t\t\treturn formatExpression(source, indentationLevel, lineSeparator, offset, length);", "-\t\t\t\tresult = formatStatements(source, indentationLevel, positions, lineSeparator, options);", "-\t\t\t\tbreak;", "+\t\t\t\treturn formatStatements(source, indentationLevel, lineSeparator, offset, length);", "-\t\t\t\tresult = probeFormatting(source, indentationLevel, positions, lineSeparator, options);", "+\t\t\t\treturn probeFormatting(source, indentationLevel, lineSeparator, offset, length);", "-\t\tthis.positionsMapping = positions;", "-\t\treturn result;", "-\t}", "+\t\treturn null;"]}], "num": 53078}