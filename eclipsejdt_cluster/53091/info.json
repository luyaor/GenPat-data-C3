{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "408012b7fb77dafdf9bf74dfd5e99d6b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d83c64343e686230098534328a0249f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ForeachStatementTest.java", "commitBeforeChange": "5cfe1c6eeb32942ce6146836f5e9c4a17362c1a2", "commitAfterChange": "bfcf9b26d6e4144cb0c2640d02cc59095e635771", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " public void _test034()", "signatureAfterChange": " public void __test034()", "diff": ["-public void _test034() { ", "+public void __test034() { "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a410edb37cf4a2702551baa977e1ff82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugs8Tests.java", "commitBeforeChange": "260ff63e87f242ab982cdcea6ba42f866e16f101", "commitAfterChange": "dbbd3644c027d320da3467fe824f2184d78d4b17", "methodNumberBeforeChange": 140, "methodNumberAfterChange": 140, "signatureBeforeChange": " public void testBug468127_0001() throws CoreException", "signatureAfterChange": " public void testBug468127_0001() throws CoreException", "diff": ["+\t\taddLibraryEntry(project, \"/JavaSearchBugs/lib/b468127.jar\", false);", "-\t\tString libSource = \"final class MyDistinctOps {\\n\" +", "-\t\t\t\t\"    static <T> MyStatefulOp<T> makeRef() {\\n\" +", "-\t\t\t\t\"        return new MyStatefulOp<T>() {\\n\" +", "-\t\t\t\t\"\t\t\t@SuppressWarnings(\\\"unused\\\")\\n\" +", "-\t\t\t\t\"\t\t\t@Override\\n\" +", "-\t\t\t\t\"\t\t \tvoid opEvaluateParallel() {\\n\" +", "-\t\t\t\t\"                TerminalOp<T, Void> forEachOp = ForEachOps.makeRef(t -> {}, false);\\n\" +", "-\t\t\t\t\"\t\t\t}\\n\" +", "-\t\t\t\t\"    @SuppressWarnings({ \\\"unchecked\\\", \\\"rawtypes\\\", \\\"unused\\\" })\\n\" +", "-\t\t\t\t\"\t MySink<T> opWrapSink(MySink<T> sink) {\\n\" +", "-\t\t\t\t\"           return new MySink.ChainedReference(sink) {\\n\" +", "-\t\t\t\t\"\\n\" +", "-\t\t\t\t\"\t\t\t\t@Override\\n\" +", "-\t\t\t\t\"\t\t\t\tpublic void accept(Object t) {\\n\" +", "-\t\t\t\t\"                     downstream.accept(t);\t\t\t\t\t\\n\" +", "-\t\t\t\t\"\t\t\t\t}\\n\" +", "-\t\t\t\t\"            };\\n\" +", "-\t\t\t\t\"        }\\n\" +", "-\t\t\t\t\"        };\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"\\n\" +", "-\t\t\t\t\"interface TerminalOp<E_IN, R> {}\\n\" +", "-\t\t\t\t\"final static class ForEachOps {\\n\" +", "-\t\t\t\t\"    public static <T> TerminalOp<T, Void> makeRef(IY<? super T> action,\\n\" +", "-\t\t\t\t\"                                                  boolean ordered) {\\n\" +", "-\t\t\t\t\"    \treturn null;\\n\" +", "-\t\t\t\t\"    }\\n\" +", "-\t\t\t\t\"\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"\\n\" +", "-\t\t\t\t\"abstract static class MyStatefulOp<T> {\\n\" +", "-\t\t\t\t\"\tabstract void opEvaluateParallel();\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"\\n\" +", "-\t\t\t\t\"interface MySink<T> extends IY<T> {\\n\" +", "-\t\t\t\t\"    static abstract class ChainedReference<T, E_OUT> implements MySink<T> {\\n\" +", "-\t\t\t\t\"    protected final MySink<T> downstream;\\n\" +", "-\t\t\t\t\"\\n\" +", "-\t\t\t\t\"    public ChainedReference(MySink<T> downstream) {\\n\" +", "-\t\t\t\t\"        this.downstream = downstream;\\n\" +", "-\t\t\t\t\"    }\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"}\\n\";", "-", "-\t\tString iy = \"@FunctionalInterface\\n\" +", "-\t\t\t\t\t\"public interface IY<T> {\\n\" +", "-\t\t\t\t\t\"  public void accept(T t);\\n\" +", "-\t\t\t\t\t\"}\\n\";\t", "-\t\ttry {", "-\t\t\tString jarFileName = \"lib468127.jar\";", "-\t\t\tString srcZipName = \"lib468127.src.zip\";", "-\t\t\tcreateLibrary(project, jarFileName, srcZipName, new String[] {\"IY.java\", iy, \"MyDistinctOps.java\",libSource},", "-\t\t\t\t\tnew String[0], JavaCore.VERSION_1_8);", "-\t\t\tIFile srcZip=(IFile) project.getProject().findMember(srcZipName);", "-\t\t\tIFile jar = (IFile) project.getProject().findMember(jarFileName);", "-\t\t\tJarPackageFragmentRoot root = (JarPackageFragmentRoot) project.getPackageFragmentRoot(jar);", "-\t\t\troot.attachSource(srcZip.getFullPath(), null, null);", "-\t\t\twaitUntilIndexesReady();", "-", "-\t\t\tSearchPattern pattern = SearchPattern.createPattern(\"IY.accept(T)\", METHOD, REFERENCES, ERASURE_RULE);", "-\t\t\tsearch(pattern, SearchEngine.createJavaSearchScope(new IJavaElement[] { project }, IJavaSearchScope.APPLICATION_LIBRARIES | IJavaSearchScope.SOURCES), this.resultCollector);", "-\t\t\tassertSearchResults(", "-\t\t\t\t\t\"src/X.java void X.main(String[]) [accept(0)] EXACT_MATCH\\n\" + ", "-\t\t\t\t\t\"lib468127.jar void <anonymous>.accept(java.lang.Object) EXACT_MATCH\");", "-\t\t} catch (IOException e) {", "-\t\t\te.printStackTrace();", "-\t\t}", "+\t\twaitUntilIndexesReady();", "+\t\t", "+\t\tSearchPattern pattern = SearchPattern.createPattern(\"IY.accept(T)\", METHOD, REFERENCES, ERASURE_RULE);", "+\t\tsearch(pattern, SearchEngine.createJavaSearchScope(new IJavaElement[] { project }, IJavaSearchScope.APPLICATION_LIBRARIES | IJavaSearchScope.SOURCES), this.resultCollector);", "+\t\tassertSearchResults(", "+\t\t\t\t\"src/X.java void X.main(String[]) [accept(0)] EXACT_MATCH\\n\" + ", "+\t\t\t\t\"lib/b468127.jar void <anonymous>.accept(java.lang.Object) EXACT_MATCH\");"]}], "num": 53091}