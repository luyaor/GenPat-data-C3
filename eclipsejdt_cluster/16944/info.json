{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b869511f0291e7f64b078e86397f7ff5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "220c4b67540edf6171cba2037d89ddc0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SynchronizedStatement.java", "commitBeforeChange": "17d4fac2e2145f81ae8773e6bd604f552ec24c76", "commitAfterChange": "8f4037084194a0a8c6b51e4ac889744e5d6e68a8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " public void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["+\t\tif (scope != currentScope) {", "+\t\t\t// close all locals defined in the synchronized block except the secret local", "+\t\t\tcodeStream.exitUserScope(scope, synchroVariable);", "+\t\t}", "+", "+\t\tif (this.preSynchronizedInitStateIndex != -1) {", "+\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(currentScope, this.preSynchronizedInitStateIndex);", "+\t\t}", "+\t\t// May loose some local variable initializations : affecting the local variable attributes", "+\t\tif (this.mergedSynchronizedInitStateIndex != -1) {", "+\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(currentScope, this.mergedSynchronizedInitStateIndex);", "+\t\t\tcodeStream.addDefinitelyAssignedVariables(currentScope, this.mergedSynchronizedInitStateIndex);", "+\t\t}", "-\t\t\tcodeStream.exitUserScope(scope);", "+\t\t\tcodeStream.removeVariable(this.synchroVariable);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "742a030c176ca6cc2fda0936a1f2953d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForeachStatement.java", "commitBeforeChange": "830277de86eee08c18b5e0da495c01b96cccdad2", "commitAfterChange": "a874c20c38675a0faf72bfd6c0cb69354f6ff3fb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\t\t\tcodeStream.addDefinitelyAssignedVariables(currentScope, mergedInitStateIndex);\t\t\t\t", "+\t\t\t\tcodeStream.addDefinitelyAssignedVariables(currentScope, mergedInitStateIndex);", "-\t\t\t\tcodeStream.store(this.collectionVariable, true); ", "+\t\t\t\tcodeStream.store(this.collectionVariable, true);", "+\t\t\t\tcodeStream.addVariable(this.collectionVariable);", "+\t\t\t\t\tcodeStream.addVariable(this.maxVariable);", "+\t\t\t\t\tcodeStream.addVariable(this.indexVariable);", "+\t\t\t\tcodeStream.addVariable(this.indexVariable);", "+\t\tswitch(this.kind) {", "+\t\t\tcase ARRAY :", "+\t\t\t\tcodeStream.removeVariable(this.indexVariable);", "+\t\t\t\tcodeStream.removeVariable(this.maxVariable);", "+\t\t\t\tcodeStream.removeVariable(this.collectionVariable);", "+\t\t\t\tbreak;", "+\t\t\tcase RAW_ITERABLE :", "+\t\t\tcase GENERIC_ITERABLE :", "+\t\t\t\t// generate the condition", "+\t\t\t\tcodeStream.removeVariable(this.indexVariable);", "+\t\t\t\tbreak;", "+\t\t}"]}], "num": 16944}