{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8774f5f90144f07d6c4366df3c1423b4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44b1a9d676873d356f4842ecf23b4e58", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodBinding.java", "commitBeforeChange": "ec8e689e69ce65d5a3f127f9c7126c4bebdd7b60", "commitAfterChange": "c922c60b9bc5fcda7fb9f2a477eba6f8f95a6cf9", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic String getKey()", "signatureAfterChange": " \tpublic String getKey()", "diff": ["-\t\t\tbuffer.append(this.getDeclaringClass().getKey());", "+\t\t\tbuffer.append(getDeclaringClass().getKey());", "-\t\t\tITypeBinding _returnType = getReturnType();", "-\t\t\tif (_returnType != null) {", "-\t\t\t\tif (_returnType.isTypeVariable()) {", "-\t\t\t\t\tbuffer.append(_returnType.getQualifiedName());", "-\t\t\t\t} else if (_returnType.isArray() && _returnType.getElementType().isTypeVariable()) {", "-\t\t\t\t\tint dimensions = _returnType.getDimensions();", "-\t\t\t\t\tbuffer.append(_returnType.getElementType().getQualifiedName());", "-\t\t\t\t\tfor (int i = 0; i < dimensions; i++) {", "-\t\t\t\t\t\tbuffer.append('[').append(']');", "-\t\t\t\t\t}", "-\t\t\t\t} else {", "-\t\t\t\t\tbuffer.append(_returnType.getKey());", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\t\tbuffer.append(this.getName());", "+\t\t\t\tbuffer.append(getName());", "+\t\t\t\t\t\tbuffer.append(',');", "-\t\t\tITypeBinding[] thrownExceptions = getExceptionTypes();", "-\t\t\tfor (int i = 0, max = thrownExceptions.length; i < max; i++) {", "-\t\t\t\tfinal ITypeBinding thrownException = thrownExceptions[i];", "-\t\t\t\tif (thrownException != null) {", "-\t\t\t\t\tif (thrownException.isTypeVariable()) {", "-\t\t\t\t\t\tbuffer.append(thrownException.getQualifiedName());\t\t\t\t\t", "-\t\t\t\t\t} else if (thrownException.isArray() && thrownException.getElementType().isTypeVariable()) {", "-\t\t\t\t\t\tint dimensions = thrownException.getDimensions();", "-\t\t\t\t\t\tbuffer.append(thrownException.getElementType().getQualifiedName());", "-\t\t\t\t\t\tfor (int j = 0; j < dimensions; j++) {", "-\t\t\t\t\t\t\tbuffer.append('[').append(']');", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tbuffer.append(thrownException.getKey());", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f96a3de5430a31738d1e9232861a7bde", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "e92324cecc3fbf731a68d99288f72318b17cf1ea", "commitAfterChange": "9832689930749c0e863f1bb11ec756d41ad5c5d4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void accept(IResource resource, int start, int end, IJavaElement element, int accuracy)", "signatureAfterChange": " \tpublic void accept(IResource resource, int start, int end, IJavaElement element, int accuracy)", "diff": ["-\t\t\t\tresults.append(method.getDeclaringType().getFullyQualifiedName());", "-\t\t\t\tif (!method.isConstructor()) {", "-\t\t\t\t\tresults.append(\".\");", "-\t\t\t\t\tresults.append(method.getElementName());", "-\t\t\t\t}", "-\t\t\t\tresults.append(\"(\");", "-\t\t\t\tString[] parameters = method.getParameterTypes();\t\t\t", "-\t\t\t\tfor (int i = 0; i < parameters.length; i++) {", "-\t\t\t\t\tresults.append(Signature.toString(parameters[i]));", "-\t\t\t\t\tif (i < parameters.length-1) {", "-\t\t\t\t\t\tresults.append(\", \");", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tresults.append(\")\");", "-\t\t\t\tif (!method.isConstructor()) {", "-\t\t\t\t\tresults.append(\" -> \");", "-\t\t\t\t\tresults.append(Signature.toString(method.getReturnType()));", "-\t\t\t\t}", "+\t\t\t\tappend(method);", "-\t\t\t\tresults.append(initializer.getDeclaringType().getFullyQualifiedName());", "-\t\t\t\tresults.append(\".\");", "-\t\t\t\tif (Flags.isStatic(initializer.getFlags())) {", "-\t\t\t\t\tresults.append(\"static \");", "-\t\t\t\t}", "-\t\t\t\tresults.append(\"{}\");", "+\t\t\t\tappend(initializer);", "+\t\t\t} else if (element instanceof ILocalVariable) {", "+\t\t\t\tresults.append(\" \");", "+\t\t\t\tILocalVariable localVar = (ILocalVariable)element;", "+\t\t\t\tIJavaElement parent = localVar.getParent();", "+\t\t\t\tif (parent instanceof IInitializer) {", "+\t\t\t\t\tIInitializer initializer = (IInitializer)parent;", "+\t\t\t\t\tappend(initializer);", "+\t\t\t\t} else { // IMethod", "+\t\t\t\t\tIMethod method = (IMethod)parent;", "+\t\t\t\t\tappend(method);", "+\t\t\t\t}", "+\t\t\t\tresults.append(\".\");", "+\t\t\t\tresults.append(localVar.getElementName());", "+\t\t\t\tunit = (ICompilationUnit)localVar.getAncestor(IJavaElement.COMPILATION_UNIT);", "+\t}"]}], "num": 31439}