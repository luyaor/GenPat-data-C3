{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e8c9fc87a6be52ff5f97b987957ff4ca", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aab84e91578f802cec08f69300d1158f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "079f1f525d3cbb0b2570dd4fe3bd959b7a33dc49", "commitAfterChange": "b21cadb5eae53d9f84dce9f073b5350a267b6ad6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": " private void add(IPath path, boolean withSubFolders)", "signatureAfterChange": " private void add(IPath path, boolean withSubFolders, AccessRestriction access)", "diff": ["-private void add(IPath path, boolean withSubFolders) {", "+private void add(IPath path, boolean withSubFolders, AccessRestriction access) {", "+\t\tSystem.arraycopy(", "+\t\t\tthis.pathRestrictions,", "+\t\t\t0,", "+\t\t\tthis.pathRestrictions = new AccessRestriction[this.pathsCount * 2],", "+\t\t\t0,", "+\t\t\tthis.pathsCount);", "-\tthis.pathWithSubFolders[this.pathsCount++] = withSubFolders; ", "+\tthis.pathWithSubFolders[this.pathsCount] = withSubFolders; ", "+\tthis.pathRestrictions[this.pathsCount++] = access;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b18739280803272f8f67e88cdaf3f16e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "79774393baaba7f9e5f3461242a5b822bf662647", "commitAfterChange": "8b644ce068ecf49daa5da8af14e814933ab3df61", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  protected void recordNullReference(LocalVariableBinding local, \tASTNode expression, int checkType)", "signatureAfterChange": "  protected void recordNullReference(LocalVariableBinding local, \tASTNode expression, int checkType, FlowInfo nullInfo)", "diff": ["-\tASTNode expression, int checkType) {", "+\tASTNode expression, int checkType, FlowInfo nullInfo) {", "+\t\tthis.nullInfos = new UnconditionalFlowInfo[5];", "+\t\tSystem.arraycopy(this.nullInfos, 0,", "+\t\t\tthis.nullInfos = new UnconditionalFlowInfo[this.nullCount * 2], 0, this.nullCount);", "-\tthis.nullCheckTypes[this.nullCount++] = checkType;", "+\tthis.nullCheckTypes[this.nullCount] = checkType;", "+\tthis.nullInfos[this.nullCount++] = nullInfo.unconditionalCopy();"]}], "num": 498}