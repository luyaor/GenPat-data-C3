{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9f80af65d1d4cc383bbf17f66ba68af2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e316314fbda716e6fe014f3e44249fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AutoBoxingTest.java", "commitBeforeChange": "0edd2a8da94febc0bef7418a02cfac9f1a30d36a", "commitAfterChange": "85f48e0f08275e1f81e9995073d5c4f69bfd0707", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": " \tpublic void test101()", "signatureAfterChange": " \tpublic void test101()", "diff": ["-\t\tthis.runConformTest(", "+\t\tthis.runNegativeTest(", "-\t\t\t\"222\"", "-\t\t);", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tnew X().foo(1);\\n\" + ", "+\t\t\t\"\t        ^^^\\n\" + ", "+\t\t\t\"The method foo(Object[]) is ambiguous for the type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tnew X().foo(new Integer(1));\\n\" + ", "+\t\t\t\"\t        ^^^\\n\" + ", "+\t\t\t\"The method foo(Object[]) is ambiguous for the type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tnew X().foo(1, new Integer(1));\\n\" + ", "+\t\t\t\"\t        ^^^\\n\" + ", "+\t\t\t\"The method foo(Object[]) is ambiguous for the type X\\n\" + ", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79a3342d970117003d792762b74f829c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "ec36c5b556303647a122217dbc357a0c1ccafd42", "commitAfterChange": "a25cead90931bbc9548552bec95aa6f79a389aa3", "methodNumberBeforeChange": 371, "methodNumberAfterChange": 371, "signatureBeforeChange": " \tpublic void test367()", "signatureAfterChange": " \tpublic void test367()", "diff": ["-\t\tthis.runConformTest(", "+\t\tthis.runNegativeTest(", "-\t\t\t\"\");", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 3)\\r\\n\" + ", "+\t\t\t\"\tvoid foo1(MX<? extends MX> target, MX<MX<String>> value) {\\r\\n\" + ", "+\t\t\t\"\t                       ^^\\n\" + ", "+\t\t\t\"MX is a raw type. References to generic type MX<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 9)\\r\\n\" + ", "+\t\t\t\"\tvoid foo3(MX<? super MX> target, MX<MX<String>> value) {\\r\\n\" + ", "+\t\t\t\"\t                     ^^\\n\" + ", "+\t\t\t\"MX is a raw type. References to generic type MX<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 10)\\r\\n\" + ", "+\t\t\t\"\ttarget= value; // foo3\\r\\n\" + ", "+\t\t\t\"\t        ^^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from MX<MX<String>> to MX<? super MX>\\n\" + ", "+\t\t\t\"----------\\n\");"]}], "num": 3695}