{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "981461ca90e18339a259f758622bf709", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3439ee3eaece9bb641b1c258e8c258a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "4bfbcab36fb89b16cf210b2b9fb5423da164ca27", "commitAfterChange": "f8d11ef45ee47eccac4f4a1fef52a70287187d6c", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " \tpublic Map getOptions(boolean inheritJavaCoreOptions)", "signatureAfterChange": " \tpublic Map getOptions(boolean inheritJavaCoreOptions)", "diff": ["-\t\t\t\t\t\tif (optionNames.contains(propertyName)){", "-\t\t\t\t\t\t\tprojectOptions.put(propertyName, value.trim());", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t// Maybe an obsolete preference, try to migrate it...", "-\t\t\t\t\t\t\tjavaModelManager.migrateObsoleteOption(projectOptions, propertyName, value.trim());", "+\t\t\t\t\t\tvalue = value.trim();", "+\t\t\t\t\t\t// Keep the option value, even if it's deprecated", "+\t\t\t\t\t\t// see bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=324987", "+\t\t\t\t\t\tprojectOptions.put(propertyName, value);", "+\t\t\t\t\t\tif (!optionNames.contains(propertyName)) {", "+\t\t\t\t\t\t\t// try to migrate deprecated options", "+\t\t\t\t\t\t\tString[] compatibleOptions = (String[]) javaModelManager.deprecatedOptions.get(propertyName);", "+\t\t\t\t\t\t\tif (compatibleOptions != null) {", "+\t\t\t\t\t\t\t\tfor (int co=0, length=compatibleOptions.length; co < length; co++) {", "+\t\t\t\t\t\t\t\t\tString compatibleOption = compatibleOptions[co];", "+\t\t\t\t\t\t\t\t\tif (!projectOptions.containsKey(compatibleOption))", "+\t\t\t\t\t\t\t\t\t\tprojectOptions.put(compatibleOption, value);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "-\t\t\t\tif (propertyValue != null && optionNames.contains(propertyName)){", "+\t\t\t\tif (propertyValue != null && javaModelManager.knowsOption(propertyName)){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a1fab4c329fbddf0b6b16da5ed41888", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "57b083b793c3b8c2d5620895f00ff1c58e226e44", "commitAfterChange": "6a32dca50f918bfeb1714bff0c2eb2686d8d482e", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " \tpublic Map getOptions(boolean inheritJavaCoreOptions)", "signatureAfterChange": " \tpublic Map getOptions(boolean inheritJavaCoreOptions)", "diff": ["-\t\t\t\t\t\tif (optionNames.contains(propertyName)){", "-\t\t\t\t\t\t\tprojectOptions.put(propertyName, value.trim());", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t// Maybe an obsolete preference, try to migrate it...", "-\t\t\t\t\t\t\tjavaModelManager.migrateObsoleteOption(projectOptions, propertyName, value.trim());", "+\t\t\t\t\t\tvalue = value.trim();", "+\t\t\t\t\t\t// Keep the option value, even if it's deprecated", "+\t\t\t\t\t\t// see bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=324987", "+\t\t\t\t\t\tprojectOptions.put(propertyName, value);", "+\t\t\t\t\t\tif (!optionNames.contains(propertyName)) {", "+\t\t\t\t\t\t\t// try to migrate deprecated options", "+\t\t\t\t\t\t\tString[] compatibleOptions = (String[]) javaModelManager.deprecatedOptions.get(propertyName);", "+\t\t\t\t\t\t\tif (compatibleOptions != null) {", "+\t\t\t\t\t\t\t\tfor (int co=0, length=compatibleOptions.length; co < length; co++) {", "+\t\t\t\t\t\t\t\t\tprojectOptions.put(compatibleOptions[co], value);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "-\t\t\t\tif (propertyValue != null && optionNames.contains(propertyName)){", "+\t\t\t\tif (propertyValue != null && javaModelManager.knowsOption(propertyName)){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a4a5896951eefec223ffc502c785a3c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "54632eb8b3fc718083fd85b7fed41bcce1a85dc7", "commitAfterChange": "bfb03069bc857fa6dbdefe509f7d5cec8610c33c", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " \tpublic Map getOptions(boolean inheritJavaCoreOptions)", "signatureAfterChange": " \tpublic Map getOptions(boolean inheritJavaCoreOptions)", "diff": ["-\t\t\t\t\t\tvalue = value.trim();", "-\t\t\t\t\t\t// Keep the option value, even if it's deprecated", "-\t\t\t\t\t\t// see bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=324987", "-\t\t\t\t\t\tprojectOptions.put(propertyName, value);", "-\t\t\t\t\t\tif (!optionNames.contains(propertyName)) {", "-\t\t\t\t\t\t\t// try to migrate deprecated options", "-\t\t\t\t\t\t\tString[] compatibleOptions = (String[]) javaModelManager.deprecatedOptions.get(propertyName);", "-\t\t\t\t\t\t\tif (compatibleOptions != null) {", "-\t\t\t\t\t\t\t\tfor (int co=0, length=compatibleOptions.length; co < length; co++) {", "-\t\t\t\t\t\t\t\t\tprojectOptions.put(compatibleOptions[co], value);", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (optionNames.contains(propertyName)){", "+\t\t\t\t\t\t\tprojectOptions.put(propertyName, value.trim());", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t// Maybe an obsolete preference, try to migrate it...", "+\t\t\t\t\t\t\tjavaModelManager.migrateObsoleteOption(projectOptions, propertyName, value.trim());", "-\t\t\t\tif (propertyValue != null && javaModelManager.knowsOption(propertyName)){", "+\t\t\t\tif (propertyValue != null && optionNames.contains(propertyName)){"]}], "num": 4775}