{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ffb10377fb1359552703da1c59a999e4", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c167882d55c4a8e9006d8254d75d515", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AmbiguousMethodTest.java", "commitBeforeChange": "484bb49f20ab3dfdc1bd0aad8e6eff3ac06b3aff", "commitAfterChange": "cfd501694f5288c5b2d25d4e0376aabc070087d8", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " public void test027()", "signatureAfterChange": " public void test027()", "diff": ["-\t\t\"1. ERROR in J.java (at line 3)\\n\" +", "+\t\t\"1. ERROR in J.java (at line 2)\\n\" +", "+\t\t\"\t<T extends Number> T foo(final Number p);\\n\" +", "+\t\t\"\t                     ^^^^^^^^^^^^^^^^^^^\\n\" +", "+\t\t\"Duplicate method foo(Number) in type J\\n\" +", "+\t\t\"----------\\n\" +", "+\t\t\"2. ERROR in J.java (at line 3)\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4c48e1c29be6dd8941492ec13667b33", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "484bb49f20ab3dfdc1bd0aad8e6eff3ac06b3aff", "commitAfterChange": "cfd501694f5288c5b2d25d4e0376aabc070087d8", "methodNumberBeforeChange": 181, "methodNumberAfterChange": 181, "signatureBeforeChange": " \tpublic void test054c()", "signatureAfterChange": " \tpublic void test054c()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 3)\\r\\n\" +", "+\t\t\t\"1. ERROR in X.java (at line 2)\\r\\n\" +", "+\t\t\t\"\t<T1 extends X<T1>> void dupT() {}\\r\\n\" +", "+\t\t\t\"\t                        ^^^^^^\\n\" +", "+\t\t\t\"Duplicate method dupT() in type X<T>\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"2. ERROR in X.java (at line 3)\\r\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9fd479e164c1ee1e8bc2271bcd8cc60", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "484bb49f20ab3dfdc1bd0aad8e6eff3ac06b3aff", "commitAfterChange": "cfd501694f5288c5b2d25d4e0376aabc070087d8", "methodNumberBeforeChange": 250, "methodNumberAfterChange": 250, "signatureBeforeChange": " public void test101()", "signatureAfterChange": " public void test101()", "diff": ["-\t\t\"1. ERROR in X.java (at line 14)\\n\" +", "+\t\t\"1. ERROR in X.java (at line 11)\\n\" +", "+\t\t\"\tInteger getX(List<Integer> l) {\\n\" +", "+\t\t\"\t        ^^^^^^^^^^^^^^^^^^^^^\\n\" +", "+\t\t\"Duplicate method getX(List<Integer>) in type Y\\n\" +", "+\t\t\"----------\\n\" +", "+\t\t\"2. ERROR in X.java (at line 14)\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e398227d1bde2f84b36e27106b205f41", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9713cc0fc86fbe0881ff90c5290328149c35cbdc", "commitAfterChange": "236485921f70a82e4283431ca8763bf21e25e459", "methodNumberBeforeChange": 1063, "methodNumberAfterChange": 1063, "signatureBeforeChange": " public void test1035()", "signatureAfterChange": " public void test1035()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. WARNING in ComparableComparator.java (at line 14)\\n\" +", "-\t\t\"\tstatic <M extends String> Comparator<M> baz() {\\n\" +", "-\t\t\"\t                  ^^^^^^\\n\" +", "-\t\t\"The type parameter M should not be bounded by the final type String. Final types cannot be further extended\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. ERROR in ComparableComparator.java (at line 27)\\n\" +", "-\t\t\"\tstatic Object BAR2 = ComparableComparator.bar();//1a\\n\" +", "-\t\t\"\t                                          ^^^\\n\" +", "-\t\t\"Bound mismatch: The generic method bar() of type ComparableComparator<T> is not applicable for the arguments (). The inferred type Comparable<Comparable<M>> is not a valid substitute for the bounded parameter <M extends Comparable<M>>\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in ComparableComparator.java (at line 14)\\n\" + ", "+\t\t\"\tstatic <M extends String> Comparator<M> baz() {\\n\" + ", "+\t\t\"\t                  ^^^^^^\\n\" + ", "+\t\t\"The type parameter M should not be bounded by the final type String. Final types cannot be further extended\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in ComparableComparator.java (at line 25)\\n\" + ", "+\t\t\"\tstatic Comparator BAR = ComparableComparator.bar();//0\\n\" + ", "+\t\t\"\t                                             ^^^\\n\" + ", "+\t\t\"Bound mismatch: The generic method bar() of type ComparableComparator<T> is not applicable for the arguments (). The inferred type Comparable<Comparable<M>> is not a valid substitute for the bounded parameter <M extends Comparable<M>>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in ComparableComparator.java (at line 27)\\n\" + ", "+\t\t\"\tstatic Object BAR2 = ComparableComparator.bar();//1a\\n\" + ", "+\t\t\"\t                                          ^^^\\n\" + ", "+\t\t\"Bound mismatch: The generic method bar() of type ComparableComparator<T> is not applicable for the arguments (). The inferred type Comparable<Comparable<M>> is not a valid substitute for the bounded parameter <M extends Comparable<M>>\\n\" + "]}], "num": 25820}