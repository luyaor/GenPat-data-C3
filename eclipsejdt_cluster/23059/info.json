{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "33cd1448753bf3e99d9faaed04d61a3d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "899024c9b7ecd37f32ca7919c2a44806", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 116, "signatureBeforeChange": " \tpublic static int scanTypeArgumentSignature(char[] string, int start)", "signatureAfterChange": " \tpublic static int scanTypeArgumentSignature(char[] string, int start)", "diff": ["-\t\tif (c == Signature.C_STAR) {", "-\t\t\treturn start;", "-\t\t}", "-\t\tif (c == Signature.C_EXTENDS || c == Signature.C_SUPER) {", "-\t\t\treturn scanTypeBoundSignature(string, start);", "-\t\t} else {", "-\t\t\treturn scanTypeSignature(string, start);", "+\t\tswitch (c) {", "+\t\t\tcase Signature.C_STAR :", "+\t\t\t\treturn start;", "+\t\t\tcase Signature.C_EXTENDS :", "+\t\t\tcase Signature.C_SUPER :", "+\t\t\t\treturn scanTypeBoundSignature(string, start);", "+\t\t\tdefault :", "+\t\t\t\treturn scanTypeSignature(string, start);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9c716b2feb0a0d9ddf3c3091849155a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "c0f9d8b84abc89ce64134386f4c44ab56579df25", "commitAfterChange": "9ba8652d2cebf2117416af5e39a70e172556117b", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " private static int appendTypeArgumentSignature(char[] string, int start, boolean fullyQualifyTypeNames, StringBuffer buffer)", "signatureAfterChange": " private static int appendTypeArgumentSignature(char[] string, int start, boolean fullyQualifyTypeNames, StringBuffer buffer)", "diff": ["-\tif (c == C_STAR) {", "-\t\tbuffer.append('?');", "-\t\treturn start;", "-\t}", "-\tif (c == '+') {", "-\t\tbuffer.append(\"? extends \"); //$NON-NLS-1$", "-\t\treturn appendTypeSignature(string, start + 1, fullyQualifyTypeNames, buffer);", "-\t} else if (c == '-') {", "-\t\tbuffer.append(\"? super \"); //$NON-NLS-1$", "-\t\treturn appendTypeSignature(string, start + 1, fullyQualifyTypeNames, buffer);", "-\t} else {", "-\t\treturn appendTypeSignature(string, start, fullyQualifyTypeNames, buffer);", "+\tswitch(c) {", "+\t\tcase C_STAR :", "+\t\t\tbuffer.append('?');", "+\t\t\treturn start;", "+\t\tcase '+' :", "+\t\t\tbuffer.append(\"? extends \"); //$NON-NLS-1$", "+\t\t\treturn appendTypeSignature(string, start + 1, fullyQualifyTypeNames, buffer);", "+\t\tcase '-' :", "+\t\t\tbuffer.append(\"? super \"); //$NON-NLS-1$", "+\t\t\treturn appendTypeSignature(string, start + 1, fullyQualifyTypeNames, buffer);", "+\t\tdefault :", "+\t\t\treturn appendTypeSignature(string, start, fullyQualifyTypeNames, buffer);"]}], "num": 23059}