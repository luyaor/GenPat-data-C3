{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "49ef067f0e5c76fe9dec8055c1230cc8", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d59ce9b16015ca5653f965b136af472", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "e4e1e1935f0e7607d1265df332c7ce922de89c18", "commitAfterChange": "a83a54ab80abf4613699946f179a101a3baa6d47", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  protected void writeClassFileBytes(byte[] bytes, IFile file, String qualifiedFileName, boolean isSecondaryType) throws CoreException", "signatureAfterChange": "  protected void writeClassFileBytes(byte[] bytes, IFile file, String qualifiedFileName, boolean isSecondaryType) throws CoreException", "diff": ["-\t\tfile.create(new ByteArrayInputStream(bytes), IResource.FORCE, null);", "+\t\ttry {", "+\t\t\tfile.create(new ByteArrayInputStream(bytes), IResource.FORCE, null);", "+\t\t} catch (org.eclipse.core.internal.resources.ResourceException e) {", "+\t\t\tif (e.getStatus().getCode() == IResourceStatus.CASE_VARIANT_EXISTS)", "+\t\t\t\t// catch the case that a nested type has been renamed and collides on disk with an as-yet-to-be-deleted type", "+\t\t\t\tthrow new AbortCompilation(true, new AbortIncrementalBuildException(qualifiedFileName));", "+\t\t\tthrow e; // rethrow", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e31493cfda11f6b54c7fc85e81ad0969", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/NameEnvironment.java", "commitBeforeChange": "3b2052c623130c252652dbc4ea1f3e9fec2cb90c", "commitAfterChange": "e2a6d43d6cfc7ae0c6dc6dfaa282461be00cd7e3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \r private NameEnvironmentAnswer findClass(String qualifiedTypeName, char[] typeName)", "signatureAfterChange": "\r \r private NameEnvironmentAnswer findClass(String qualifiedTypeName, char[] typeName)", "diff": ["-\t\tfor (int i = 0, length = initialTypeNames.length; i < length; i++)\r", "-\t\t\tif (qualifiedTypeName.equals(initialTypeNames[i]))\r", "+\t\tfor (int i = 0, length = initialTypeNames.length; i < length; i++) {\r", "+\t\t\tif (qualifiedTypeName.equals(initialTypeNames[i])) {\r", "+\t\t\t\tif (isIncrementalBuild)\r", "+\t\t\t\t\t// catch the case that a type inside a source file has been renamed but other class files are looking for it\r", "+\t\t\t\t\tthrow new AbortCompilation(true, new AbortIncrementalBuildException(qualifiedTypeName));\r", "+\t\t\t}\r", "+\t\t}\r"]}], "num": 39145}