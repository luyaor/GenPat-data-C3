{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fe838afcd8ce228f11fc940fa1765531", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23be60e08e9f6e3e9d353fda66fb3453", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 308, "methodNumberAfterChange": 315, "signatureBeforeChange": " public void unusedPrivateConstructor(ConstructorDeclaration constructorDecl)", "signatureAfterChange": " public void unusedPrivateConstructor(ConstructorDeclaration constructorDecl)", "diff": ["-\t\t\tparametersAsString(constructor.parameters, false)", "+\t\t\ttypesAsString(constructor.isVarargs(), constructor.parameters, false)", "-\t\t\tparametersAsString(constructor.parameters, true)", "+\t\t\ttypesAsString(constructor.isVarargs(), constructor.parameters, true)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31014f14c5717a34f4515dfdf12fb730", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": " public void cannotDireclyInvokeAbstractMethod(MessageSend messageSend, MethodBinding method)", "signatureAfterChange": " public void cannotDireclyInvokeAbstractMethod(MessageSend messageSend, MethodBinding method)", "diff": ["-\t\tnew String[] {new String(method.declaringClass.readableName()), new String(method.selector), parametersAsString(method.parameters, false)},", "-\t\tnew String[] {new String(method.declaringClass.shortReadableName()), new String(method.selector), parametersAsString(method.parameters, true)},", "+\t\tnew String[] {new String(method.declaringClass.readableName()), new String(method.selector), typesAsString(method.isVarargs(), method.parameters, false)},", "+\t\tnew String[] {new String(method.declaringClass.shortReadableName()), new String(method.selector), typesAsString(method.isVarargs(), method.parameters, true)},"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44a22538f8bd6a0c3c8f5e515e9a9618", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 125, "signatureBeforeChange": " public void indirectAccessToStaticMethod(ASTNode location, MethodBinding method)", "signatureAfterChange": " public void indirectAccessToStaticMethod(ASTNode location, MethodBinding method)", "diff": ["-\t\tnew String[] {new String(method.declaringClass.readableName()), new String(method.selector), parametersAsString(method.parameters, false)},", "-\t\tnew String[] {new String(method.declaringClass.shortReadableName()), new String(method.selector), parametersAsString(method.parameters, true)},", "+\t\tnew String[] {new String(method.declaringClass.readableName()), new String(method.selector), typesAsString(method.isVarargs(), method.parameters, false)},", "+\t\tnew String[] {new String(method.declaringClass.shortReadableName()), new String(method.selector), typesAsString(method.isVarargs(), method.parameters, true)},"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "619e22971052a573d12dc5a20aefdc59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 310, "methodNumberAfterChange": 317, "signatureBeforeChange": " public void unusedPrivateMethod(AbstractMethodDeclaration methodDecl)", "signatureAfterChange": " public void unusedPrivateMethod(AbstractMethodDeclaration methodDecl)", "diff": ["-\t\t\tparametersAsString(method.parameters, false)", "+\t\t\ttypesAsString(method.isVarargs(), method.parameters, false)", "-\t\t\tparametersAsString(method.parameters, true)", "+\t\t\ttypesAsString(method.isVarargs(), method.parameters, true)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82f08efc405ed4d5aa5f7aa835323a8e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 220, "methodNumberAfterChange": 227, "signatureBeforeChange": " public void nonStaticAccessToStaticMethod(ASTNode location, MethodBinding method)", "signatureAfterChange": " public void nonStaticAccessToStaticMethod(ASTNode location, MethodBinding method)", "diff": ["-\t\tnew String[] {new String(method.declaringClass.readableName()), new String(method.selector), parametersAsString(method.parameters, false)},", "-\t\tnew String[] {new String(method.declaringClass.shortReadableName()), new String(method.selector), parametersAsString(method.parameters, true)},", "+\t\tnew String[] {new String(method.declaringClass.readableName()), new String(method.selector), typesAsString(method.isVarargs(), method.parameters, false)},", "+\t\tnew String[] {new String(method.declaringClass.shortReadableName()), new String(method.selector), typesAsString(method.isVarargs(), method.parameters, true)},"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a249aa6d15f361e566e0591feb068cee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocAllocationExpression.java", "commitBeforeChange": "3de46f74e60c4a3809d64f36594b156b755e8151", "commitAfterChange": "a278a6d0aa65f732809dc346bd96a708d28563bd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tTypeBinding internalResolveType(Scope scope)", "signatureAfterChange": "  \tTypeBinding internalResolveType(Scope scope)", "diff": ["-\t\t\t\tscope.problemReporter().javadocInvalidConstructorQualification(this.memberStart+1, this.sourceEnd); //, scope.getDeclarationModifiers());", "+\t\t\t\tscope.problemReporter().javadocInvalidMemberTypeQualification(this.memberStart+1, this.sourceEnd, scope.getDeclarationModifiers());", "-\t\t\t\t\tscope.problemReporter().javadocInvalidConstructorQualification(this.memberStart+1, this.sourceEnd); //, scope.getDeclarationModifiers());", "+\t\t\t\t\tscope.problemReporter().javadocInvalidMemberTypeQualification(this.memberStart+1, this.sourceEnd, scope.getDeclarationModifiers());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee2187c7e486a7508dede301dae10448", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocArgumentExpression.java", "commitBeforeChange": "cdead094a9813fdba5ccda0ce2f9f48a99552dbc", "commitAfterChange": "3be4aa0b7d051355f329ce1003f3f4c0f7acfab2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\tconstant = NotAConstant;", "+\t\tthis.constant = NotAConstant;", "-\t\t\t\t\t\tscope.problemReporter().invalidType(typeRef, this.resolvedType);", "+\t\t\t\t\t\tscope.problemReporter().javadocInvalidType(typeRef, this.resolvedType, scope.getModifiers());", "-\t\t\t\t\t\tscope.problemReporter().deprecatedType(this.resolvedType, typeRef);", "+\t\t\t\t\t\tscope.problemReporter().javadocDeprecatedType(this.resolvedType, typeRef, scope.getModifiers());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efd71a5e9d87f8c93bf8d4942897bfab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 207, "methodNumberAfterChange": 214, "signatureBeforeChange": " public void mustUseAStaticMethod(MessageSend messageSend, MethodBinding method)", "signatureAfterChange": " public void mustUseAStaticMethod(MessageSend messageSend, MethodBinding method)", "diff": ["-\t\tnew String[] {new String(method.declaringClass.readableName()), new String(method.selector), parametersAsString(method.parameters, false)},", "-\t\tnew String[] {new String(method.declaringClass.shortReadableName()), new String(method.selector), parametersAsString(method.parameters, true)},", "+\t\tnew String[] {new String(method.declaringClass.readableName()), new String(method.selector), typesAsString(method.isVarargs(), method.parameters, false)},", "+\t\tnew String[] {new String(method.declaringClass.shortReadableName()), new String(method.selector), typesAsString(method.isVarargs(), method.parameters, true)},"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1724e24e4552a7b99153459f8efe361", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 170, "methodNumberAfterChange": 177, "signatureBeforeChange": " public void javadocInvalidConstructor(Statement statement, MethodBinding targetConstructor, int modifiers)", "signatureAfterChange": " public void javadocInvalidConstructor(Statement statement, MethodBinding targetConstructor, int modifiers)", "diff": ["-\t\tnew String[] {new String(targetConstructor.declaringClass.readableName()), parametersAsString(targetConstructor.parameters, false)},", "-\t\tnew String[] {new String(targetConstructor.declaringClass.shortReadableName()), parametersAsString(targetConstructor.parameters, true)},", "+\t\tnew String[] {new String(targetConstructor.declaringClass.readableName()), typesAsString(targetConstructor.isVarargs(), targetConstructor.parameters, false)},", "+\t\tnew String[] {new String(targetConstructor.declaringClass.shortReadableName()), typesAsString(targetConstructor.isVarargs(), targetConstructor.parameters, true)},"]}], "num": 8425}