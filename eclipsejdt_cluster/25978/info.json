{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "36f4ade9b8f1e794c43a9c0bed4e811e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6ca1872ae70bf5a0c0cfb2f945ab830", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AND_AND_Expression.java", "commitBeforeChange": "d7e0c304d172fca497b655ba971da6ca54adad0f", "commitAfterChange": "1f10576ab1258d9b0bb4c8f1a5679f04b107a49a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void generateOptimizedBoolean(BlockScope currentScope, CodeStream codeStream, \t\t\tBranchLabel trueLabel, BranchLabel falseLabel, boolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedBoolean(BlockScope currentScope, CodeStream codeStream, BranchLabel trueLabel, BranchLabel falseLabel, boolean valueRequired)", "diff": ["-\tpublic void generateOptimizedBoolean(BlockScope currentScope, CodeStream codeStream,", "-\t\t\tBranchLabel trueLabel, BranchLabel falseLabel, boolean valueRequired) {", "+\tpublic void generateOptimizedBoolean(BlockScope currentScope, CodeStream codeStream, BranchLabel trueLabel, BranchLabel falseLabel, boolean valueRequired) {", "-\t\t\t\t\tleft.generateOptimizedBoolean(currentScope, codeStream, null,", "-\t\t\t\t\t\t\tinternalFalseLabel, !leftIsConst); ", "+\t\t\t\t\tleft.generateOptimizedBoolean(currentScope, codeStream, null, internalFalseLabel, !leftIsConst); ", "-\t\t\t\t\t\tcodeStream.goto_(falseLabel);", "+\t\t\t\t\t\tif (valueRequired) codeStream.goto_(falseLabel);", "-\t\t\t\t\tright.generateOptimizedBoolean(currentScope, codeStream, null, falseLabel,", "-\t\t\t\t\t\t\tvalueRequired && !rightIsConst);", "+\t\t\t\t\tright.generateOptimizedBoolean(currentScope, codeStream, null, falseLabel, valueRequired && !rightIsConst);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db5a3b34dc9235b02397069ec686fde3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/DoStatement.java", "commitBeforeChange": "8a6b6162ae3ffaa7b5448bfc27d1bab3854207d2", "commitAfterChange": "5df75ce3074574b9ceea64411eeaa18313a445b2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " public void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t}", "-\t// generate condition", "-\tConstant cst = this.condition.optimizedBooleanConstant();", "-\tboolean isConditionOptimizedFalse = cst != Constant.NotAConstant && cst.booleanValue() == false;", "-\tif (isConditionOptimizedFalse){", "-\t\tthis.condition.generateCode(currentScope, codeStream, false);", "-\t} else if (hasContinueLabel) {", "-\t\tthis.condition.generateOptimizedBoolean(", "-\t\t\tcurrentScope,", "-\t\t\tcodeStream,", "-\t\t\tactionLabel,", "-\t\t\tnull,", "-\t\t\ttrue);", "+\t\t// generate condition", "+\t\tConstant cst = this.condition.optimizedBooleanConstant();", "+\t\tboolean isConditionOptimizedFalse = cst != Constant.NotAConstant && cst.booleanValue() == false;", "+\t\tif (isConditionOptimizedFalse){", "+\t\t\tthis.condition.generateCode(currentScope, codeStream, false);", "+\t\t} else {", "+\t\t\tthis.condition.generateOptimizedBoolean(", "+\t\t\t\tcurrentScope,", "+\t\t\t\tcodeStream,", "+\t\t\t\tactionLabel,", "+\t\t\t\tnull,", "+\t\t\t\ttrue);", "+\t\t}"]}], "num": 25978}