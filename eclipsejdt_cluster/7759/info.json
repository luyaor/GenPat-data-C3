{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2bb061e6ced8aeb61d6f30233f63f242", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a16d5a425fe4a9f9fbca7c25ed0c3f38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "e9215020072f2df9a0b47df094d17dfa3ad95402", "commitAfterChange": "2af56d6fe3e00a7c799ea8c6f7aeb1409e4db2f8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic TextEdit format(int kind, String source, IRegion[] regions, int indentationLevel, String lineSeparator)", "signatureAfterChange": " \tpublic TextEdit format(int kind, String source, IRegion[] regions, int indentationLevel, String lineSeparator)", "diff": ["-\t\tthis.codeSnippetParsingUtil = new CodeSnippetParsingUtil();", "-\t\tboolean includeComments =  (kind & F_INCLUDE_COMMENTS) != 0;", "-\t\tswitch(kind & K_MASK) {", "-\t\t\tcase K_CLASS_BODY_DECLARATIONS :", "-\t\t\t\treturn formatClassBodyDeclarations(source, indentationLevel, lineSeparator, regions, includeComments);", "-\t\t\tcase K_COMPILATION_UNIT :", "-\t\t\t\treturn formatCompilationUnit(source, indentationLevel, lineSeparator, regions, includeComments);", "-\t\t\tcase K_EXPRESSION :", "-\t\t\t\treturn formatExpression(source, indentationLevel, lineSeparator, regions, includeComments);", "-\t\t\tcase K_STATEMENTS :", "-\t\t\t\treturn formatStatements(source, indentationLevel, lineSeparator, regions, includeComments);", "-\t\t\tcase K_UNKNOWN :", "-\t\t\t\treturn probeFormatting(source, indentationLevel, lineSeparator, regions, includeComments);", "-\t\t\tcase K_JAVA_DOC :", "-\t\t\tcase K_MULTI_LINE_COMMENT :", "-\t\t\tcase K_SINGLE_LINE_COMMENT :", "-\t\t\t\t//https://bugs.eclipse.org/bugs/show_bug.cgi?id=204091", "+\t\tupdateWorkingOptions(indentationLevel, lineSeparator, kind);", "+", "+\t\tif ((kind & K_COMMENTS_MASK) != 0)", "+\t\t\treturn formatComments(source, kind & K_COMMENTS_MASK, regions);", "+", "+\t\tif (prepareFormattedCode(source, kind) == null)", "+\t\t\treturn this.tokens.isEmpty() ? new MultiTextEdit() : null;", "+", "+\t\tMultiTextEdit result = new MultiTextEdit();", "+\t\tTextEditsBuilder resultBuilder = new TextEditsBuilder(this.sourceString, regions, this.tokenManager,", "+\t\t\t\tthis.workingOptions);", "+\t\tthis.tokenManager.traverse(0, resultBuilder);", "+\t\tfor (TextEdit edit : resultBuilder.getEdits()) {", "+\t\t\tresult.addChild(edit);", "+\t\t}", "+\t\treturn result;", "+\t}", "-\t\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c64d4c64b6a448844f7b1dfd44333800", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "246965b39748e3da2ea49457412592390c45caa5", "commitAfterChange": "b0e753009ffb9bf0d92f75f621fb0d6188adb57e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic TextEdit format(int kind, String source, IRegion[] regions, int indentationLevel, String lineSeparator)", "signatureAfterChange": " \tpublic TextEdit format(int kind, String source, IRegion[] regions, int indentationLevel, String lineSeparator)", "diff": ["-\t\tthis.codeSnippetParsingUtil = new CodeSnippetParsingUtil();", "-\t\tboolean includeComments =  (kind & F_INCLUDE_COMMENTS) != 0;", "-\t\tswitch(kind & K_MASK) {", "-\t\t\tcase K_CLASS_BODY_DECLARATIONS :", "-\t\t\t\treturn formatClassBodyDeclarations(source, indentationLevel, lineSeparator, regions, includeComments);", "-\t\t\tcase K_COMPILATION_UNIT :", "-\t\t\t\treturn formatCompilationUnit(source, indentationLevel, lineSeparator, regions, includeComments);", "-\t\t\tcase K_EXPRESSION :", "-\t\t\t\treturn formatExpression(source, indentationLevel, lineSeparator, regions, includeComments);", "-\t\t\tcase K_STATEMENTS :", "-\t\t\t\treturn formatStatements(source, indentationLevel, lineSeparator, regions, includeComments);", "-\t\t\tcase K_UNKNOWN :", "-\t\t\t\treturn probeFormatting(source, indentationLevel, lineSeparator, regions, includeComments);", "-\t\t\tcase K_JAVA_DOC :", "-\t\t\tcase K_MULTI_LINE_COMMENT :", "-\t\t\tcase K_SINGLE_LINE_COMMENT :", "-\t\t\t\t//https://bugs.eclipse.org/bugs/show_bug.cgi?id=204091", "+\t\tupdateWorkingOptions(indentationLevel, lineSeparator, kind);", "+", "+\t\tif ((kind & K_COMMENTS_MASK) != 0)", "+\t\t\treturn formatComments(source, kind & K_COMMENTS_MASK, regions);", "+", "+\t\tif (prepareFormattedCode(source, kind) == null)", "+\t\t\treturn this.tokens.isEmpty() ? new MultiTextEdit() : null;", "+", "+\t\tMultiTextEdit result = new MultiTextEdit();", "+\t\tTextEditsBuilder resultBuilder = new TextEditsBuilder(this.sourceString, regions, this.tokenManager,", "+\t\t\t\tthis.workingOptions);", "+\t\tthis.tokenManager.traverse(0, resultBuilder);", "+\t\tfor (TextEdit edit : resultBuilder.getEdits()) {", "+\t\t\tresult.addChild(edit);", "+\t\t}", "+\t\treturn result;", "+\t}", "-\t\treturn null;"]}], "num": 7759}