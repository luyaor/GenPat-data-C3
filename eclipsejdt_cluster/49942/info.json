{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a3361d773c38e8ed8be3a260f5b1305f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "121b39ccc961f85da01e2fbadfac7951", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SignatureTests.java", "commitBeforeChange": "03e37ed5506ed50fa30b9f5aa42ff423995a94bd", "commitAfterChange": "4111f058addae7e2d753cc95bd7546b1f787e4c8", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void testGetParameterCount()", "signatureAfterChange": " public void testGetParameterCount()", "diff": ["-\tassertTrue(\"Signature#getParameterCount is not correct1\", Signature.getParameterCount(methodSig) == 3);", "+\tassertEquals(\"Signature#getParameterCount is not correct1\", 3,", "+\t\t\tSignature.getParameterCount(methodSig));", "-\tassertTrue(\"Signature#getParameterCount is not correct3\", Signature.getParameterCount(methodSig) == 3);", "-//\tmethodSig = \"<X:Qlist<Qstring;>;>(Ilist<Qstring;>;Tww;)Qlist<Qxxx;>;^Qexception;^Qerror;\";", "-//\tassertTrue(\"Signature#getParameterCount is not correct4\", Signature.getParameterCount(methodSig) == 3);", "+\tassertEquals(\"Signature#getParameterCount is not correct3\", 3,", "+\t\t\tSignature.getParameterCount(methodSig));", "+\tmethodSig = \"<X:Qlist<Qstring;>;>(IQlist<Qstring;>;Tww;)Qlist<Qxxx;>;^Qexception;^Qerror;\";", "+\tassertEquals(\"Signature#getParameterCount is not correct4\", 3,", "+\t\t\tSignature.getParameterCount(methodSig));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22f6a588394e088f45a81ca805263863", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SignatureTests.java", "commitBeforeChange": "03e37ed5506ed50fa30b9f5aa42ff423995a94bd", "commitAfterChange": "4111f058addae7e2d753cc95bd7546b1f787e4c8", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void testGetTypeParameterBounds()", "signatureAfterChange": " public void testGetTypeParameterBounds()", "diff": ["-\tassertTrue(\"Signature#getTypeParameterBounds is not correct1\", Signature.getTypeParameterBounds(formalTypeParameterSignature).length == 0);", "+\tassertEquals(\"Signature#getTypeParameterBounds is not correct1\", 0,", "+\t\t\tSignature.getTypeParameterBounds(formalTypeParameterSignature).length);", "-\tassertTrue(\"Signature#getTypeParameterBounds is not correct2\", Signature.getTypeParameterBounds(formalTypeParameterSignature).length == 2);", "-\tassertEquals(\"Signature#getTypeParameterBounds is not correct2a\", Signature.getTypeParameterBounds(formalTypeParameterSignature)[0], \"Qi1;\");", "-\tassertEquals(\"Signature#getTypeParameterBounds is not correct2b\", Signature.getTypeParameterBounds(formalTypeParameterSignature)[1], \"Qi2;\");", "+\tassertEquals(\"Signature#getTypeParameterBounds is not correct2\", 2,", "+\t\t\tSignature.getTypeParameterBounds(formalTypeParameterSignature).length);", "+\tassertEquals(\"Signature#getTypeParameterBounds is not correct2a\", \"Qi1;\",", "+\t\t\tSignature.getTypeParameterBounds(formalTypeParameterSignature)[0]);", "+\tassertEquals(\"Signature#getTypeParameterBounds is not correct2b\", \"Qi2;\",", "+\t\t\tSignature.getTypeParameterBounds(formalTypeParameterSignature)[1]);", "-\tassertTrue(\"Signature#getTypeParameterBounds is not correct3\", Signature.getTypeParameterBounds(formalTypeParameterSignature).length == 3);", "-\tassertEquals(\"Signature#getTypeParameterBounds is not correct3a\", Signature.getTypeParameterBounds(formalTypeParameterSignature)[0], \"Qlist<Qstring;>;\");", "-\tassertEquals(\"Signature#getTypeParameterBounds is not correct3b\", Signature.getTypeParameterBounds(formalTypeParameterSignature)[1], \"Qi1;\");", "-\tassertEquals(\"Signature#getTypeParameterBounds is not correct3c\", Signature.getTypeParameterBounds(formalTypeParameterSignature)[2], \"Qi2;\");", "+\tassertEquals(\"Signature#getTypeParameterBounds is not correct3\", 3,", "+\t\t\tSignature.getTypeParameterBounds(formalTypeParameterSignature).length);", "+\tassertEquals(\"Signature#getTypeParameterBounds is not correct3a\", \"Qlist<Qstring;>;\",", "+\t\t\tSignature.getTypeParameterBounds(formalTypeParameterSignature)[0]);", "+\tassertEquals(\"Signature#getTypeParameterBounds is not correct3b\", \"Qi1;\",", "+\t\t\tSignature.getTypeParameterBounds(formalTypeParameterSignature)[1]);", "+\tassertEquals(\"Signature#getTypeParameterBounds is not correct3c\", \"Qi2;\",", "+\t\t\tSignature.getTypeParameterBounds(formalTypeParameterSignature)[2]);", "-\tassertTrue(\"Signature#getTypeParameterBounds is not correct4\", Signature.getTypeParameterBounds(formalTypeParameterSignature).length == 1);", "-\tassertEquals(\"Signature#getTypeParameterBounds is not correct4a\", Signature.getTypeParameterBounds(formalTypeParameterSignature)[0], \"Qi1;\");", "+\tassertEquals(\"Signature#getTypeParameterBounds is not correct4\", 1,", "+\t\t\tSignature.getTypeParameterBounds(formalTypeParameterSignature).length);", "+\tassertEquals(\"Signature#getTypeParameterBounds is not correct4a\", \"Qi1;\",", "+\t\t\tSignature.getTypeParameterBounds(formalTypeParameterSignature)[0]);"]}], "num": 49942}