{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a09aefcc98fd9c7a6c0e8dc1dd91c76e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "150ad9c80633b90edf4eba601db36e68", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "9a8c0b7f51c1a0b9d37b7d38acb4d0261e31390a", "commitAfterChange": "278bd24e5aaae65022c9b0e7c10b22e5ffa034b6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprivate TextEdit formatCompilationUnit(String source, int indentationLevel, String lineSeparator, int offset, int length)", "signatureAfterChange": "  \tprivate TextEdit formatCompilationUnit(String source, int indentationLevel, String lineSeparator, IRegion[] regions)", "diff": ["-\tprivate TextEdit formatCompilationUnit(String source, int indentationLevel, String lineSeparator, int offset, int length) {", "+\tprivate TextEdit formatCompilationUnit(String source, int indentationLevel, String lineSeparator, IRegion[] regions) {", "-\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, this.options, offset, length, this.codeSnippetParsingUtil);", "+\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, this.options, regions, this.codeSnippetParsingUtil);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15e335e41b9d72a96df39c548c60d9d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "12f65faa0a3b984e9751d243a3eab6e6ab078ed7", "commitAfterChange": "36d2cf066100445cbe45dd4cf851204404f7d76f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tprivate TextEdit formatCompilationUnit(String source, int indentationLevel, String lineSeparator, IRegion[] regions)", "signatureAfterChange": "  \tprivate TextEdit formatCompilationUnit(String source, int indentationLevel, String lineSeparator, IRegion[] regions, boolean formatJavadoc)", "diff": ["-\tprivate TextEdit formatCompilationUnit(String source, int indentationLevel, String lineSeparator, IRegion[] regions) {", "+\tprivate TextEdit formatCompilationUnit(String source, int indentationLevel, String lineSeparator, IRegion[] regions, boolean formatJavadoc) {", "-\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, this.options, regions, this.codeSnippetParsingUtil);", "+\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, this.options, regions, this.codeSnippetParsingUtil, formatJavadoc && this.preferences.comment_format_javadoc_comment);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c4f495d596a450bb7fcd26a5f92347b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "9a8c0b7f51c1a0b9d37b7d38acb4d0261e31390a", "commitAfterChange": "278bd24e5aaae65022c9b0e7c10b22e5ffa034b6", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tprivate TextEdit internalFormatExpression(String source, int indentationLevel, String lineSeparator, Expression expression, int offset, int length)", "signatureAfterChange": " \t \tprivate TextEdit internalFormatExpression(String source, int indentationLevel, String lineSeparator, Expression expression, IRegion[] regions)", "diff": ["-\tprivate TextEdit internalFormatExpression(String source, int indentationLevel, String lineSeparator, Expression expression, int offset, int length) {", "+\tprivate TextEdit internalFormatExpression(String source, int indentationLevel, String lineSeparator, Expression expression, IRegion[] regions) {", "-\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, this.options, offset, length, this.codeSnippetParsingUtil);", "+\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, this.options, regions, this.codeSnippetParsingUtil);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b37ebcdf9e3a1ca22e2978e5f282a7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "9a8c0b7f51c1a0b9d37b7d38acb4d0261e31390a", "commitAfterChange": "278bd24e5aaae65022c9b0e7c10b22e5ffa034b6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprivate TextEdit formatComment(int kind, String source, int indentationLevel, String lineSeparator, int offset, int length)", "signatureAfterChange": " \tprivate TextEdit formatComment(int kind, String source, int indentationLevel, String lineSeparator, IRegion[] regions)", "diff": ["-\tprivate TextEdit formatComment(int kind, String source, int indentationLevel, String lineSeparator, int offset, int length) {", "+\tprivate TextEdit formatComment(int kind, String source, int indentationLevel, String lineSeparator, IRegion[] regions) {", "-\t\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, this.options, offset, length, null);", "+\t\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, this.options, regions, null);", "+\t\t\t", "+\t\t\tIRegion coveredRegion = getCoveredRegion(regions);", "+\t\t\tint offset = coveredRegion.getOffset();", "+\t\t\tint length = coveredRegion.getLength();", "+\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c796a3085e49be15d1f0f085c2e2661", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "d82ae848a9c4d7b35f614d484418e3b413534446", "commitAfterChange": "c4725a925ff03cde3fc0735f1b7bd65f4e96815b", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tprivate TextEdit internalFormatExpression(String source, int indentationLevel, String lineSeparator, Expression expression, IRegion[] regions)", "signatureAfterChange": "  \tprivate TextEdit internalFormatExpression(String source, int indentationLevel, String lineSeparator, Expression expression, IRegion[] regions, boolean includeComments)", "diff": ["-\tprivate TextEdit internalFormatExpression(String source, int indentationLevel, String lineSeparator, Expression expression, IRegion[] regions) {", "+\tprivate TextEdit internalFormatExpression(String source, int indentationLevel, String lineSeparator, Expression expression, IRegion[] regions, boolean includeComments) {", "-\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, this.options, regions, this.codeSnippetParsingUtil, false);", "+\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, this.options, regions, this.codeSnippetParsingUtil, includeComments);"]}], "num": 27238}