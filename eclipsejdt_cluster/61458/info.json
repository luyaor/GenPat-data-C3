{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c41c33e0634c4c188ea4c2654a2e1f08", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "836695203013c377ce65210e52efb5d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": " \tpublic void test101()", "signatureAfterChange": " \tpublic void test101()", "diff": ["-\t\t\"----------\\n\" + ", "-\t\t\"1. WARNING in X.java (at line 1)\\n\" + ", "-\t\t\"\tpublic class X <T extends String> {\\n\" + ", "-\t\t\"\t                          ^^^^^^\\n\" + ", "-\t\t\"The type parameter T should not be bounded by the final type String. Final types cannot be further extended\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\"\tX<? extends AX> x = new X<AX<String>>(new AX<String>());\\n\" + ", "-\t\t\"\t  ^^^^^^^^^^^^\\n\" + ", "-\t\t\"Bound mismatch: The type ? extends AX is not a valid substitute for the bounded parameter <T extends String> of the type X<T>\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"3. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\"\tX<? extends AX> x = new X<AX<String>>(new AX<String>());\\n\" + ", "-\t\t\"\t                          ^^\\n\" + ", "-\t\t\"Bound mismatch: The type AX<String> is not a valid substitute for the bounded parameter <T extends String> of the type X<T>\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"4. WARNING in X.java (at line 8)\\n\" + ", "-\t\t\"\tx.t.foo(\\\"SUCCESS\\\");\\n\" + ", "-\t\t\"\t^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\"Type safety: The method foo(Object) belongs to the raw type AX. References to generic type AX<P> should be parameterized\\n\" + ", "-\t\t\"----------\\n\");\t\t", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class X <T extends String> {\\n\" + ", "+\t\t\t\"\t                          ^^^^^^\\n\" + ", "+\t\t\t\"The type parameter T should not be bounded by the final type String. Final types cannot be further extended\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tX<? extends AX> x = new X<AX<String>>(new AX<String>());\\n\" + ", "+\t\t\t\"\t  ^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Bound mismatch: The type ? extends AX is not a valid substitute for the bounded parameter <T extends String> of the type X<T>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tX<? extends AX> x = new X<AX<String>>(new AX<String>());\\n\" + ", "+\t\t\t\"\t            ^^\\n\" + ", "+\t\t\t\"Type safety: AX is a raw type. References to generic type AX<P> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tX<? extends AX> x = new X<AX<String>>(new AX<String>());\\n\" + ", "+\t\t\t\"\t                          ^^\\n\" + ", "+\t\t\t\"Bound mismatch: The type AX<String> is not a valid substitute for the bounded parameter <T extends String> of the type X<T>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tx.t.foo(\\\"SUCCESS\\\");\\n\" + ", "+\t\t\t\"\t^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The method foo(Object) belongs to the raw type AX. References to generic type AX<P> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\");\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af2d8414d71c71b6659d20adde674cd9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "1c0c2bf77ea7eb024038ba5150fcc9eb4dd14084", "commitAfterChange": "1cdb6c1b0fb5ba08d4e282b871474685ab8baf3f", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": " \tpublic void test071()", "signatureAfterChange": " \tpublic void test071()", "diff": ["-\t\t\t\"3. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tObject clone();\\n\" + ", "+\t\t\t\"\t       ^^^^^^^\\n\" + ", "+\t\t\t\"The method clone() of type I should be tagged with @Override since it actually overrides a superclass method\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 3)\\n\" + ", "-\t\t\t\"4. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"5. ERROR in X.java (at line 7)\\n\" + "]}], "num": 61458}