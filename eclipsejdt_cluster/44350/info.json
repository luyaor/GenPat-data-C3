{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bcd84e943ac2e1cd33f2f67d38aefef5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "854c5ca4fd9a009b220a914420d73f8a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedThisReference.java", "commitBeforeChange": "9ea930b8ef0b567a4e08013a97afc6ba878aa860", "commitAfterChange": "b63e8e4c0e47a3750b0c4a9f091dec5ceec8f467", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tTypeBinding type = this.resolvedType = this.qualification.resolveType(scope, true /* check bounds*/);", "+\t\tTypeBinding type = this.qualification.resolveType(scope, true /* check bounds*/);", "-\t\t// X.this is not a raw type as denoting enclosing instance", "-\t\tif (type.isRawType()) {", "-\t\t    RawTypeBinding rawType = (RawTypeBinding) type;", "-\t\t    type = this.resolvedType = rawType.type; // unwrap", "-\t\t}", "+\t\t// X.this is not a param/raw type as denoting enclosing instance", "+\t\tthis.resolvedType = type = type.erasure();", "+", "-\t\t// Its possible to qualify 'this' by the name of the current class", "+\t\t// It is possible to qualify 'this' by the name of the current class"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d125ebdbbcebd3b22c82794d66fbe87", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "af330be1052a8d3b1a31b10596d367fb42f89f79", "commitAfterChange": "b3a6b4ddf9d5bd5365b7e897739a001bb2ff860b", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": " \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, InvocationSite invocationSite, ReferenceBinding receiverType)", "signatureAfterChange": " \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, InvocationSite invocationSite, ReferenceBinding receiverType)", "diff": ["-\t\t\t\t\t\t\tif (original.typeVariables != Binding.NO_TYPE_VARIABLES)", "-\t\t\t\t\t\t\t\toriginal2 = original.computeSubstitutedMethod(original2, environment());", "-\t\t\t\t\t\t\tif (original2 == null || !original.areParametersEqual(original2))", "+\t\t\t\t\t\t\tif (!environment().methodVerifier().doesMethodOverride(original, original2))"]}], "num": 44350}