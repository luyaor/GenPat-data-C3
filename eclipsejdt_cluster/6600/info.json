{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c24011bc694671d252d95e375e75548c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73dabac583abae68de5fa1aa0be86a1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/InMemoryIndex.java", "commitBeforeChange": "147aad43f7900f9d4f22271c9fe4f288f16528d9", "commitAfterChange": "820af9e764943dadd04b7516b2f121c6aaa1d26b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \tprotected WordEntry[] getSortedWordEntries()", "signatureAfterChange": "\r \tprotected WordEntry[] getSortedWordEntries()", "diff": ["-\t\t\tWordEntry[] words= new WordEntry[this.words.size()];\r", "-\t\t\tint numWords= 0;\r", "-\t\t\tObject[] entries= this.words.valueTable;\r", "-\t\t\tfor (int i= entries.length; i-- > 0;)\r", "-\t\t\t\tif (entries[i] != null)\r", "-\t\t\t\t\twords[numWords++]= (WordEntry) entries[i];\r", "+\t\t\tWordEntry[] words= this.words.asArray();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0e7345ac20e9d61cd12c24525e0f3e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LocalVariableBinding.java", "commitBeforeChange": "5cd024d52141117881e2f62e4aa34624606418cf", "commitAfterChange": "a75f0756b3cdda16ae0347da0cb2609171946934", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic AnnotationBinding[] getAnnotations()", "signatureAfterChange": "  \tpublic AnnotationBinding[] getAnnotations()", "diff": ["-\t\tAnnotationBinding[] annotations = sourceType.retrieveAnnotations(this);", "-\t\t\t\t\tint length = annotationNodes.length;", "-\t\t\t\t\tASTNode.resolveAnnotations(this.declaringScope, annotationNodes, this);", "-\t\t\t\t\tannotations = new AnnotationBinding[length];", "-\t\t\t\t\tfor (int i = 0; i < length; i++)", "-\t\t\t\t\t\tannotations[i] = new AnnotationBinding(annotationNodes[i]);", "-\t\t\t\t\tsetAnnotations(annotations, this.declaringScope);", "+\t\t\t\t\tASTNode.resolveAnnotations(this.declaringScope, annotationNodes, this, true);", "-\t\treturn annotations;", "+\t\treturn sourceType.retrieveAnnotations(this);"]}], "num": 6600}