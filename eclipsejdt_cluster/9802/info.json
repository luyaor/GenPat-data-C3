{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bfb141aea22d0317e259cc7e873fba26", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77015194c12254fb7e256edfdb25310d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "78098de24c545f715ba2d1751d0ca9e6c5c70cdd", "commitAfterChange": "b455d99806c18178f9d152ed826cde0ff5c786f3", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " private IJavaElement createMethodHandle(IType type, String methodName, String[] parameterTypeSignatures)", "signatureAfterChange": " private IJavaElement createMethodHandle(IType type, String methodName, String[] parameterTypeSignatures)", "diff": ["-\tIJavaElement handle = type.getMethod(methodName, parameterTypeSignatures);", "-\tInteger occurenceCount = (Integer) this.allHandlesOccurences.get(handle);", "-\tif (occurenceCount == null) {", "-\t\toccurenceCount = new Integer(1);", "-\t} else {", "-\t\t// there are duplicate for this method, find right one", "-\t\tint count = occurenceCount.intValue();", "-\t\ttry {", "-\t\t\tIMethod[] methods = type.getMethods();", "-\t\t\tint length = methods.length;", "-\t\t\tfor (int i=0; i<length; i++) {", "-\t\t\t\tif (methods[i].equals(handle)) {", "-\t\t\t\t\thandle = methods[i+count];", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t} catch (JavaModelException e) {", "-\t\t\t// ignore", "+\tIMethod methodHandle = type.getMethod(methodName, parameterTypeSignatures);", "+\tif (methodHandle instanceof SourceMethod) {", "+\t\twhile (this.methodHandles.contains(methodHandle)) {", "+\t\t\t((SourceMethod) methodHandle).occurrenceCount++;", "-\t\toccurenceCount = new Integer(count+1);", "-\tthis.allHandlesOccurences.put(handle, occurenceCount);", "-\treturn handle;", "+\tthis.methodHandles.add(methodHandle);", "+\treturn methodHandle;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98ebd283382375524018c82f2ee54770", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "    public void resolve()", "signatureAfterChange": "    public void resolve()", "diff": ["+\t\t// this.maxFieldCount might already be set", "+\t\tint localMaxFieldCount = 0;", "-\t\t// field count from enclosing and supertypes should be included in maxFieldCount,", "-\t\t// to make field-ids unique among all fields in scope.", "-\t\t// 1.: enclosing:", "-\t\tTypeBinding original = sourceType.original();", "-\t\tint fieldAnalysisOffset = 0;", "-\t\tif (original instanceof NestedTypeBinding) {", "-\t\t\t// note: local types have no enclosingType in the AST but only in the binding:", "-\t\t\tfieldAnalysisOffset = ((NestedTypeBinding)original).enclosingType.cumulativeFieldCount;", "-\t\t}", "-\t\t// 2.: supers:", "-\t\tReferenceBinding superClassBinding = sourceType.superclass;", "-\t\twhile (superClassBinding != null) {", "-\t\t\tFieldBinding[] unResolvedFields = superClassBinding.unResolvedFields();", "-\t\t\tif (unResolvedFields != null) {", "-\t\t\t\tfor (int i=unResolvedFields.length-1; i>=0; i--) {", "- \t\t\t\t\t// if the field is an initializer we do not want to update the count ", "-\t\t\t\t\tswitch (unResolvedFields[i].kind()) {", "-\t\t\t\t\t\tcase AbstractVariableDeclaration.FIELD:", "-\t\t\t\t\t\tcase AbstractVariableDeclaration.ENUM_CONSTANT:", "-\t\t\t\t\t\t\tfieldAnalysisOffset++;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tfieldAnalysisOffset += findFieldCountFromSuperInterfaces(superClassBinding.superInterfaces());", "-\t\t\tsuperClassBinding = superClassBinding.superclass();", "-\t\t}", "-\t\tReferenceBinding[] superInterfacesBinding = sourceType.superInterfaces;", "-\t\tfieldAnalysisOffset += findFieldCountFromSuperInterfaces(superInterfacesBinding);", "-\t\tsourceType.cumulativeFieldCount += fieldAnalysisOffset;", "-\t\tsourceType.fieldAnalysisOffset = fieldAnalysisOffset;", "-\t\tthis.maxFieldCount = sourceType.cumulativeFieldCount;", "-", "+\t\t\t\t\t\tlocalMaxFieldCount++;", "+\t\t}", "+\t\tif (this.maxFieldCount < localMaxFieldCount) {", "+\t\t\tthis.maxFieldCount = localMaxFieldCount;", "-}"]}], "num": 9802}