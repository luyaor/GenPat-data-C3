{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a87189683772553efafa1b785af7038", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9632b077eee6fe949c9d001362f7c5b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModel.java", "commitBeforeChange": "3758ce6a10bd01302b15da1982aa821d553e3aa3", "commitAfterChange": "3f52c731c12e40c6d36b09a1af089b5451926fb5", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": "\r public static Object getTarget(IContainer container, IPath path, boolean checkResourceExistence)", "signatureAfterChange": "\r public static Object getTarget(IContainer container, IPath path, boolean checkResourceExistence)", "diff": ["-\t\r", "-\tString extension;\r", "-\tif (JavaModelManager.ZIP_ACCESS_VERBOSE && (extension = path.getFileExtension()) != null \r", "-\t\t&& (extension.toLowerCase().equals(\"zip\") || extension.toLowerCase().equals(\"jar\"))) { //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\t\t\r", "-\t\tSystem.out.println(\"Getting target for \" + path.toString() + \" checkResourceExistence=\" + checkResourceExistence); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t}\r", "-\tif (!checkResourceExistence ||externalFile.exists()) return externalFile;\r", "+\tif (!checkResourceExistence) {\r", "+\t\treturn externalFile;\r", "+\t} else if (existingExternalFiles.contains(externalFile)) {\r", "+\t\treturn externalFile;\r", "+\t} else {\r", "+\t\tif (JavaModelManager.ZIP_ACCESS_VERBOSE) {\r", "+\t\t\tSystem.out.println(\"[JavaModel.getTarget(...)] Checking existence of \" + path.toString()); //$NON-NLS-1$\r", "+\t\t}\r", "+\t\tif (externalFile.exists()) {\r", "+\t\t\t// cache external file\r", "+\t\t\texistingExternalFiles.add(externalFile);\r", "+\t\t\treturn externalFile;\r", "+\t\t}\r", "+\t}\r", "+\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cadc7720d1002ac2bda81e74578de781", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModel.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public static Object getTarget(IContainer container, IPath path, boolean checkResourceExistence)", "signatureAfterChange": " public static Object getTarget(IPath path, boolean checkResourceExistence)", "diff": ["-public static Object getTarget(IContainer container, IPath path, boolean checkResourceExistence) {", "-", "-\tif (path == null) return null;", "-\t", "-\t// lookup - inside the container", "-\tif (path.getDevice() == null) { // container relative paths should not contain a device ", "-\t\t\t\t\t\t\t\t\t\t\t\t// (see http://dev.eclipse.org/bugs/show_bug.cgi?id=18684)", "-\t\t\t\t\t\t\t\t\t\t\t\t// (case of a workspace rooted at d:\\ )", "-\t\tIResource resource = container.findMember(path);", "-\t\tif (resource != null){", "-\t\t\tif (!checkResourceExistence ||resource.exists()) return resource;", "-\t\t\treturn null;", "-\t\t}", "-\t}", "-\t", "-\t// if path is relative, it cannot be an external path", "-\t// (see http://dev.eclipse.org/bugs/show_bug.cgi?id=22517)", "-\tif (!path.isAbsolute()) return null; ", "-", "-\t// lookup - outside the container", "-\treturn getTargetAsExternalFile(path, checkResourceExistence);\t", "+public static Object getTarget(IPath path, boolean checkResourceExistence) {", "+\tObject target = getWorkspaceTarget(path); // Implicitly checks resource existence", "+\tif (target != null)", "+\t\treturn target;", "+\treturn getExternalTarget(path, checkResourceExistence);"]}], "num": 45311}