{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "95c5c1ae2e07c71756fbc09065a9714c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b07ac1e8382f5e3ecdbc43f54e82569", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "d8a456bd9b26260c97b05c5b9053ba80ab69b578", "commitAfterChange": "a460dab1d90a50493c5778c6266a2505ebe8bca6", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 81, "signatureBeforeChange": " \tprotected IClasspathEntry[] readClasspathFile(boolean createMarker, boolean logProblems)", "signatureAfterChange": " \tprotected IClasspathEntry[] readClasspathFile(boolean createMarker, boolean logProblems)", "diff": ["-\t\t\tIPath projectPath = getProject().getFullPath();", "-\t\t\t\t\tElement cpeElement = (Element) node;", "-\t", "-\t\t\t\t\tString cpeElementKind = cpeElement.getAttribute(\"kind\"); //$NON-NLS-1$", "-\t\t\t\t\tString pathStr = cpeElement.getAttribute(\"path\"); //$NON-NLS-1$", "-\t\t\t\t\t// ensure path is absolute", "-\t\t\t\t\tIPath path = new Path(pathStr);", "-\t\t\t\t\tint kind = kindFromString(cpeElementKind);", "-\t\t\t\t\tif (kind != IClasspathEntry.CPE_VARIABLE && kind != IClasspathEntry.CPE_CONTAINER && !path.isAbsolute()) {", "-\t\t\t\t\t\tpath = projectPath.append(path);", "-\t\t\t\t\t}", "-\t\t\t\t\t// source attachment info (optional)", "-\t\t\t\t\tString sourceAttachmentPathStr = cpeElement.getAttribute(\"sourcepath\");\t//$NON-NLS-1$", "-\t\t\t\t\tIPath sourceAttachmentPath =", "-\t\t\t\t\t\tsourceAttachmentPathStr.equals(\"\") ? null : new Path(sourceAttachmentPathStr); //$NON-NLS-1$", "-\t\t\t\t\tString sourceAttachmentRootPathStr = cpeElement.getAttribute(\"rootpath\"); //$NON-NLS-1$", "-\t\t\t\t\tIPath sourceAttachmentRootPath =", "-\t\t\t\t\t\tsourceAttachmentRootPathStr.equals(\"\") //$NON-NLS-1$", "-\t\t\t\t\t\t\t? null", "-\t\t\t\t\t\t\t: new Path(sourceAttachmentRootPathStr);", "-\t\t\t\t\t", "-\t\t\t\t\t// exported flag (optional)", "-\t\t\t\t\tboolean isExported = cpeElement.getAttribute(\"exported\").equals(\"true\"); //$NON-NLS-1$ //$NON-NLS-2$", "-", "-\t\t\t\t\t// exclusion patterns (optional)", "-\t\t\t\t\tString exclusion = cpeElement.getAttribute(\"excluding\"); //$NON-NLS-1$ ", "-\t\t\t\t\tIPath[] exclusionPatterns = ClasspathEntry.NO_EXCLUSION_PATTERNS;", "-\t\t\t\t\tif (!exclusion.equals(\"\")) { //$NON-NLS-1$ ", "-\t\t\t\t\t\tchar[][] patterns = CharOperation.splitOn('|', exclusion.toCharArray());", "-\t\t\t\t\t\tint patternCount;", "-\t\t\t\t\t\tif ((patternCount  = patterns.length) > 0) {", "-\t\t\t\t\t\t\texclusionPatterns = new IPath[patternCount];", "-\t\t\t\t\t\t\tfor (int j = 0; j < patterns.length; j++){", "-\t\t\t\t\t\t\t\texclusionPatterns[j] = new Path(new String(patterns[j]));", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\t", "-\t\t\t\t\t// recreate the CP entry", "-\t\t\t\t\tswitch (kind) {", "-\t\t\t", "-\t\t\t\t\t\tcase IClasspathEntry.CPE_PROJECT :", "-\t\t\t\t\t\t\tpaths.add(JavaCore.newProjectEntry(path, isExported));", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t", "-\t\t\t\t\t\tcase IClasspathEntry.CPE_LIBRARY :", "-\t\t\t\t\t\t\tpaths.add(JavaCore.newLibraryEntry(", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpath,", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsourceAttachmentPath,", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsourceAttachmentRootPath,", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisExported));", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t", "-\t\t\t\t\t\tcase IClasspathEntry.CPE_SOURCE :", "-\t\t\t\t\t\t\t// must be an entry in this project or specify another project", "-\t\t\t\t\t\t\tString projSegment = path.segment(0);", "-\t\t\t\t\t\t\tif (projSegment != null && projSegment.equals(getElementName())) {", "-\t\t\t\t\t\t\t\t// this project", "-\t\t\t\t\t\t\t\tpaths.add(JavaCore.newSourceEntry(path, exclusionPatterns));", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t// another project", "-\t\t\t\t\t\t\t\tpaths.add(JavaCore.newProjectEntry(path, isExported));", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t", "-\t\t\t\t\t\tcase IClasspathEntry.CPE_VARIABLE :", "-\t\t\t\t\t\t\tpaths.add(JavaCore.newVariableEntry(", "-\t\t\t\t\t\t\t\t\tpath,", "-\t\t\t\t\t\t\t\t\tsourceAttachmentPath,", "-\t\t\t\t\t\t\t\t\tsourceAttachmentRootPath, ", "-\t\t\t\t\t\t\t\t\tisExported));", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t", "-\t\t\t\t\t\tcase IClasspathEntry.CPE_CONTAINER :", "-\t\t\t\t\t\t\tpaths.add(JavaCore.newContainerEntry(", "-\t\t\t\t\t\t\t\t\tpath,", "-\t\t\t\t\t\t\t\t\tisExported));", "-\t\t\t\t\t\t\tbreak;", "-", "-\t\t\t\t\t\tcase ClasspathEntry.K_OUTPUT :", "-\t\t\t\t\t\t\tif (!path.isAbsolute()) return null;", "-\t\t\t\t\t\t\tpaths.add(new ClasspathEntry(", "-\t\t\t\t\t\t\t\t\tClasspathEntry.K_OUTPUT,", "-\t\t\t\t\t\t\t\t\tIClasspathEntry.CPE_LIBRARY,", "-\t\t\t\t\t\t\t\t\tpath,", "-\t\t\t\t\t\t\t\t\tClasspathEntry.NO_EXCLUSION_PATTERNS, ", "-\t\t\t\t\t\t\t\t\tnull, // source attachment", "-\t\t\t\t\t\t\t\t\tnull, // source attachment root", "-\t\t\t\t\t\t\t\t\tfalse));", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t", "-\t\t\t\t\t\tdefault:", "-\t\t\t\t\t\t\tthrow new Assert.AssertionFailedException(Util.bind(\"classpath.unknownKind\", cpeElementKind)); //$NON-NLS-1$", "-\t\t\t\t\t}", "+\t\t\t\t\tIClasspathEntry entry = ClasspathEntry.elementDecode((Element)node, this);", "+\t\t\t\t\tif (entry != null) paths.add(entry);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de2f8dd2671168c2b44fe0534e6ad909", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistOptions.java", "commitBeforeChange": "cc758bfd339f8a87c20acc3346f061d63795c18c", "commitAfterChange": "2bc92b74226ce6025d1c26404f4960477e265708", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic AssistOptions(Map settings)", "signatureAfterChange": " \tpublic AssistOptions(Map settings)", "diff": ["-\t\t// filter options which are related to the assist component", "-\t\tIterator entries = settings.entrySet().iterator();", "-\t\twhile (entries.hasNext()) {", "-\t\t\tMap.Entry entry = (Map.Entry)entries.next();", "-\t\t\tif (!(entry.getKey() instanceof String))", "-\t\t\t\tcontinue;", "-\t\t\tif (!(entry.getValue() instanceof String))", "-\t\t\t\tcontinue;", "-\t\t\tString optionID = (String) entry.getKey();", "-\t\t\tString optionValue = (String) entry.getValue();", "+\t\tset(settings);", "+\t}", "-\t\t\tif (optionID.equals(OPTION_PerformVisibilityCheck)) {", "-\t\t\t\tif (optionValue.equals(ENABLED)) {", "-\t\t\t\t\tthis.checkVisibility = true;", "-\t\t\t\t} else", "-\t\t\t\t\tif (optionValue.equals(DISABLED)) {", "-\t\t\t\t\t\tthis.checkVisibility = false;", "-\t\t\t\t\t}", "-\t\t\t\tcontinue;", "-\t\t\t} else if (optionID.equals(OPTION_ForceImplicitQualification)) {", "-\t\t\t\tif (optionValue.equals(ENABLED)) {", "-\t\t\t\t\tthis.forceImplicitQualification = true;", "-\t\t\t\t} else", "-\t\t\t\t\tif (optionValue.equals(DISABLED)) {", "-\t\t\t\t\t\tthis.forceImplicitQualification = false;", "-\t\t\t\t\t}", "-\t\t\t\tcontinue;", "-\t\t\t} else if(optionID.equals(OPTION_FieldPrefixes)){", "-\t\t\t\tif (optionValue.length() == 0) {", "-\t\t\t\t} else {", "-\t\t\t\t\tthis.fieldPrefixes = CharOperation.splitAndTrimOn(',', optionValue.toCharArray());", "-\t\t\t\tcontinue;", "-\t\t\t} else if(optionID.equals(OPTION_StaticFieldPrefixes)){", "-\t\t\t\tif (optionValue.length() == 0) {", "-\t\t\t\t} else {", "-\t\t\t\t\tthis.staticFieldPrefixes = CharOperation.splitAndTrimOn(',', optionValue.toCharArray());", "-\t\t\t\tcontinue;", "-\t\t\t} else if(optionID.equals(OPTION_LocalPrefixes)){", "-\t\t\t\tif (optionValue.length() == 0) {", "-\t\t\t\t} else {", "-\t\t\t\t\tthis.localPrefixes = CharOperation.splitAndTrimOn(',', optionValue.toCharArray());", "-\t\t\t\tcontinue;", "-\t\t\t} else if(optionID.equals(OPTION_ArgumentPrefixes)){", "-\t\t\t\tif (optionValue.length() == 0) {", "-\t\t\t\t} else {", "-\t\t\t\t\tthis.argumentPrefixes = CharOperation.splitAndTrimOn(',', optionValue.toCharArray());", "-\t\t\t\tcontinue;", "-\t\t\t} else if(optionID.equals(OPTION_FieldSuffixes)){", "-\t\t\t\tif (optionValue.length() == 0) {", "-\t\t\t\t} else {", "-\t\t\t\t\tthis.fieldSuffixes = CharOperation.splitAndTrimOn(',', optionValue.toCharArray());", "-\t\t\t\tcontinue;", "-\t\t\t} else if(optionID.equals(OPTION_StaticFieldSuffixes)){", "-\t\t\t\tif (optionValue.length() == 0) {", "-\t\t\t\t} else {", "-\t\t\t\t\tthis.staticFieldSuffixes = CharOperation.splitAndTrimOn(',', optionValue.toCharArray());", "-\t\t\t\tcontinue;", "-\t\t\t} else if(optionID.equals(OPTION_LocalSuffixes)){", "-\t\t\t\tif (optionValue.length() == 0) {", "-\t\t\t\t} else {", "-\t\t\t\t\tthis.localSuffixes = CharOperation.splitAndTrimOn(',', optionValue.toCharArray());", "-\t\t\t\tcontinue;", "-\t\t\t} else if(optionID.equals(OPTION_ArgumentSuffixes)){", "-\t\t\t\tif (optionValue.length() == 0) {", "-\t\t\t\t} else {", "-\t\t\t\t\tthis.argumentSuffixes = CharOperation.splitAndTrimOn(',', optionValue.toCharArray());", "-\t\t\t\tcontinue;"]}], "num": 24342}