{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c35d299b3a1c52ab86056f69ff42870e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e956f09061df0bad4a947d0b5ee788b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "9200dfcebb10ee7ea4dee94a111c339b6652d53f", "commitAfterChange": "87311dbca895b8fec29b894c95fd1dc13225e0e2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate AbstractMethodDeclaration convert(SourceMethod methodHandle, SourceMethodElementInfo methodInfo, CompilationResult compilationResult) throws JavaModelException", "signatureAfterChange": " \tprivate AbstractMethodDeclaration convert(SourceMethod methodHandle, SourceMethodElementInfo methodInfo, CompilationResult compilationResult) throws JavaModelException", "diff": ["+\t\t\t\tSourceAnnotationMethodInfo annotationMethodInfo = (SourceAnnotationMethodInfo) methodInfo;", "+\t\t\t\tboolean hasDefaultValue = annotationMethodInfo.defaultValueStart != -1 || annotationMethodInfo.defaultValueEnd != -1;", "-\t\t\t\t\tchar[] defaultValueSource = ((SourceAnnotationMethodInfo) methodInfo).getDefaultValueSource(getSource());", "-\t\t\t\t\tif (defaultValueSource != null) {", "+\t\t\t\t\tif (hasDefaultValue) {", "+\t\t\t\t\t\tchar[] defaultValueSource = CharOperation.subarray(getSource(), annotationMethodInfo.defaultValueStart, annotationMethodInfo.defaultValueEnd+1);", "-\t\t\t\t\t\t\tmodifiers |= ClassFileConstants.AccAnnotationDefault;", "+\t\t\t\tif (hasDefaultValue)", "+\t\t\t\t\tmodifiers |= ClassFileConstants.AccAnnotationDefault;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce4477d70b8c66c659cd8dfd93487925", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayInitializer.java", "commitBeforeChange": "a51f0328f1978f4c547fe994573879b0bcceba88", "commitAfterChange": "cbe22d350fa314e6e5df169cf670cab9bb8c2a20", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\tboolean analyseResources = currentScope.compilerOptions().analyseResourceLeaks;", "+\t\t\tCompilerOptions compilerOptions = currentScope.compilerOptions();", "+\t\t\tboolean analyseResources = compilerOptions.analyseResourceLeaks;", "+\t\t\tboolean evalNullTypeAnnotations = compilerOptions.sourceLevel >= ClassFileConstants.JDK1_8 ", "+\t\t\t\t\t\t\t\t\t\t\t\t&& compilerOptions.isAnnotationBasedNullAnalysisEnabled;", "+\t\t\t\tif (evalNullTypeAnnotations) {", "+\t\t\t\t\tcheckAgainstNullTypeAnnotation(currentScope, this.binding.elementsType(), this.expressions[i], flowContext, flowInfo);", "+\t\t\t\t}"]}], "num": 61063}