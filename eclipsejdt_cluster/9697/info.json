{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a3790258fe93d9288619232360b9385f", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e52d5596ad11996195def25891aa41e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferencePattern.java", "commitBeforeChange": "a1b8b888d8c8c040023fcd2856f96f5ad6c69b3e", "commitAfterChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r private int matchLevel(ImportReference importRef, boolean resolve)", "signatureAfterChange": "\r private boolean matches(ImportReference importRef, boolean resolve)", "diff": ["+ */\r", "+private boolean matches(ImportReference importRef, boolean resolve) {\r", "+\tif (importRef.onDemand) {\r", "+\t\treturn this.matches(importRef.tokens);\r", "+\t} else {\r", "+\t\tint length = importRef.tokens.length - 1;\r", "+\t\tchar[][] tokens = new char[length][];\r", "+\t\tSystem.arraycopy(importRef.tokens, 0, tokens, 0, length);\r", "+\t\treturn this.matches(tokens);\r", "+\t}\r", "+}\r", "- */\r", "-private int matchLevel(ImportReference importRef, boolean resolve) {\r", "-\tif (importRef.onDemand) {\r", "-\t\tif (this.matches(importRef.tokens)) {\r", "-\t\t\treturn ACCURATE_MATCH;\r", "-\t\t} else {\r", "-\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t}\r", "-\t} else {\r", "-\t\tint length = importRef.tokens.length - 1;\r", "-\t\tchar[][] tokens = new char[length][];\r", "-\t\tSystem.arraycopy(importRef.tokens, 0, tokens, 0, length);\r", "-\t\tif (this.matches(tokens)) {\r", "-\t\t\treturn ACCURATE_MATCH;\r", "-\t\t} else {\r", "-\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t}\r", "-\t}\r", "-}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9adca99aacab0c9eab96596839a9e96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferencePattern.java", "commitBeforeChange": "46418d248f89a29f49a77d154cdbfa57c408b256", "commitAfterChange": "c85433e27f0fa74bfe8e06c38c1c02c51b5599d7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r private int matchLevel(ImportReference importRef, boolean resolve)", "signatureAfterChange": "\r private boolean matches(ImportReference importRef, boolean resolve)", "diff": ["+ */\r", "+private boolean matches(ImportReference importRef, boolean resolve) {\r", "+\tif (importRef.onDemand) {\r", "+\t\treturn this.matches(importRef.tokens);\r", "+\t} else {\r", "+\t\tint length = importRef.tokens.length - 1;\r", "+\t\tchar[][] tokens = new char[length][];\r", "+\t\tSystem.arraycopy(importRef.tokens, 0, tokens, 0, length);\r", "+\t\treturn this.matches(tokens);\r", "+\t}\r", "+}\r", "- */\r", "-private int matchLevel(ImportReference importRef, boolean resolve) {\r", "-\tif (importRef.onDemand) {\r", "-\t\tif (this.matches(importRef.tokens)) {\r", "-\t\t\treturn ACCURATE_MATCH;\r", "-\t\t} else {\r", "-\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t}\r", "-\t} else {\r", "-\t\tint length = importRef.tokens.length - 1;\r", "-\t\tchar[][] tokens = new char[length][];\r", "-\t\tSystem.arraycopy(importRef.tokens, 0, tokens, 0, length);\r", "-\t\tif (this.matches(tokens)) {\r", "-\t\t\treturn ACCURATE_MATCH;\r", "-\t\t} else {\r", "-\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t}\r", "-\t}\r", "-}\r"]}], "num": 9697}