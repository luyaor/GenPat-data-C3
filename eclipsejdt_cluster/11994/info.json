{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a40da33a4be0210848b726b6a388a0b2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "148e0dc85c0491d9014ac56e22b70a19", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "e67d1dc6830648c83fdb0e0b83b59925424638d8", "commitAfterChange": "4817a4bde9db799e7a793068d64037f59bfa521f", "methodNumberBeforeChange": 141, "methodNumberAfterChange": 141, "signatureBeforeChange": " \tprotected void setModifiers(SingleVariableDeclaration variableDecl, Argument argument)", "signatureAfterChange": " \tprotected void setModifiers(SingleVariableDeclaration variableDecl, Argument argument)", "diff": ["-\t\t\t\t\t\tswitchToken:", "-\t\t\t\t\t\t\t\t\t// argument may have synthetic annotations, skip them:", "-\t\t\t\t\t\t\t\t\torg.eclipse.jdt.internal.compiler.ast.Annotation annotation;", "-\t\t\t\t\t\t\t\t\tdo {", "-\t\t\t\t\t\t\t\t\t\tif (indexInAnnotations == annotations.length)", "-\t\t\t\t\t\t\t\t\t\t\tbreak switchToken;", "-\t\t\t\t\t\t\t\t\t\tannotation = annotations[indexInAnnotations++];", "-\t\t\t\t\t\t\t\t\t} while ((annotation.bits & org.eclipse.jdt.internal.compiler.ast.ASTNode.IsSynthetic) != 0);", "+\t\t\t\t\t\t\t\t\torg.eclipse.jdt.internal.compiler.ast.Annotation annotation = annotations[indexInAnnotations++];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4562b695781acd9ad469665ec86c4685", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "e67d1dc6830648c83fdb0e0b83b59925424638d8", "commitAfterChange": "4817a4bde9db799e7a793068d64037f59bfa521f", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 135, "signatureBeforeChange": " \tprotected void setModifiers(BodyDeclaration bodyDeclaration, org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations, int modifiersEnd)", "signatureAfterChange": " \tprotected void setModifiers(BodyDeclaration bodyDeclaration, org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations, int modifiersEnd)", "diff": ["-\t\t\t\tswitchToken:", "-\t\t\t\t\t\t\t// method may have synthetic annotations, skip them:", "-\t\t\t\t\t\t\torg.eclipse.jdt.internal.compiler.ast.Annotation annotation;", "-\t\t\t\t\t\t\tdo {", "-\t\t\t\t\t\t\t\tif (indexInAnnotations == annotations.length)", "-\t\t\t\t\t\t\t\t\tbreak switchToken;", "-\t\t\t\t\t\t\t\tannotation = annotations[indexInAnnotations++];", "-\t\t\t\t\t\t\t} while ((annotation.bits & org.eclipse.jdt.internal.compiler.ast.ASTNode.IsSynthetic) != 0);", "+\t\t\t\t\t\t\torg.eclipse.jdt.internal.compiler.ast.Annotation annotation = annotations[indexInAnnotations++];"]}], "num": 11994}