{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d1e07ba580d3053f7eaa8773cf4d629a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47686ee95b807c8417bd0bc11ba50f19", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "3614fb7a931da6f7d6b963e79da43a1a287be280", "commitAfterChange": "f35ac795e031f468ed2702736c7462517694be67", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t\t\tpublic char[] getContents()", "signatureAfterChange": " \t\tpublic char[] getContents()", "diff": ["-\t\tnew org.eclipse.jdt.internal.compiler.env.ICompilationUnit() {", "-\t\t\tpublic char[] getContents() {", "-\t\t\t\treturn contents;", "-\t\t\t}", "+\t\tprivate char[] cachedContents;", "+\t\tpublic char[] getContents() {", "+\t\t\tif (this.cachedContents == null)", "+\t\t\t\tthis.cachedContents = CompilationUnit.this.getContents();", "+\t\t\treturn this.cachedContents;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a88979538e1801e18f6a511293f44d8b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "3614fb7a931da6f7d6b963e79da43a1a287be280", "commitAfterChange": "f35ac795e031f468ed2702736c7462517694be67", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 49, "signatureBeforeChange": " public char[] getContents()", "signatureAfterChange": " public char[] getContents()", "diff": ["+\t\tIFile file = (IFile) getResource();", "+\t\t// Get encoding from file", "+\t\tString encoding;", "-\t\t\treturn Util.getResourceContentsAsCharArray((IFile) getResource());", "+\t\t\tencoding = file.getCharset();", "+\t\t} catch(CoreException ce) {", "+\t\t\t// do not use any encoding", "+\t\t\tencoding = null;", "+\t\t}", "+\t\ttry {", "+\t\t\treturn Util.getResourceContentsAsCharArray(file, encoding);", "+\t\t\tif (JavaModelManager.getJavaModelManager().abortOnMissingSource.get() == Boolean.TRUE) {", "+\t\t\t\tIOException ioException =", "+\t\t\t\t\te.getJavaModelStatus().getCode() == IJavaModelStatusConstants.IO_EXCEPTION ? ", "+\t\t\t\t\t\t(IOException)e.getException() : ", "+\t\t\t\t\t\tnew IOException(e.getMessage());", "+\t\t\t\tthrow new AbortCompilationUnit(null, ioException, encoding);", "+\t\t\t} else {", "+\t\t\t\tUtil.log(e, Messages.bind(Messages.file_notFound, file.getFullPath().toString()));", "+\t\t\t}", "-\tif (contents == null) // see https://bugs.eclipse.org/bugs/show_bug.cgi?id=129814", "+\tif (contents == null) { // see https://bugs.eclipse.org/bugs/show_bug.cgi?id=129814", "+\t\tif (JavaModelManager.getJavaModelManager().abortOnMissingSource.get() == Boolean.TRUE) {", "+\t\t\tIOException ioException = new IOException(Messages.buffer_closed);", "+\t\t\tIFile file = (IFile) getResource();", "+\t\t\t// Get encoding from file", "+\t\t\tString encoding;", "+\t\t\ttry {", "+\t\t\t\tencoding = file.getCharset();", "+\t\t\t} catch(CoreException ce) {", "+\t\t\t\t// do not use any encoding", "+\t\t\t\tencoding = null;", "+\t\t\t}", "+\t\t\tthrow new AbortCompilationUnit(null, ioException, encoding);", "+\t\t}", "+\t}"]}], "num": 15861}