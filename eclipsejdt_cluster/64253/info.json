{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "827bc4f168b59daddaae1886d30d188d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cda0866a3e85389c911a9cd826ee934", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/NullAnnotationMatching.java", "commitBeforeChange": "2cc3eedf97567eb10fbd2185cfb7c5012b127add", "commitAfterChange": "9f431ffaeff623f7af807c93e73853c08afe96f4", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprotected static boolean areSameTypes(TypeBinding requiredType, TypeBinding providedType)", "signatureAfterChange": " \tprotected static boolean areSameTypes(TypeBinding requiredType, TypeBinding providedType)", "diff": ["-\t\tif (TypeBinding.notEquals(requiredType, providedType))", "+\t\tif (TypeBinding.notEquals(requiredType, providedType)) {", "+\t\t\tif (requiredType instanceof CaptureBinding) {", "+\t\t\t\t// when providing the lower bound of the required type where definitely fine:", "+\t\t\t\tTypeBinding lowerBound = ((CaptureBinding)requiredType).lowerBound;", "+\t\t\t\tif (lowerBound != null && areSameTypes(lowerBound, providedType))", "+\t\t\t\t\treturn true;", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e1506129bf6261f652ab4e432e5b5af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/NullAnnotationMatching.java", "commitBeforeChange": "b3e17a909a1b31bd9a62f4bc41b8e8da13b23038", "commitAfterChange": "7d530ea80eaf0c8a945cfb41d1521a9832dec42f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprotected static boolean areSameTypes(TypeBinding requiredType, TypeBinding providedType, TypeBinding providedSubstitute)", "signatureAfterChange": " \tprotected static boolean areSameTypes(TypeBinding requiredType, TypeBinding providedType, TypeBinding providedSubstitute)", "diff": ["-\t/** Are both types identical wrt the unannotated type and any null type annotations? Only unstructured types are considered. */", "+\t/** Are both types identical wrt the unannotated type and any null type annotations? Only unstructured types and captures are considered. */", "-\t\t\t\t// when providing the lower bound of the required type where definitely fine:", "+\t\t\t\t// when providing exactly the lower bound of the required type we're definitely fine:", "+\t\t\t} else if (providedType instanceof CaptureBinding) {", "+\t\t\t\t// when requiring exactly the upper bound of the provided type we're fine, too:", "+\t\t\t\tTypeBinding upperBound = ((CaptureBinding)providedType).upperBound();", "+\t\t\t\tif (upperBound != null && areSameTypes(requiredType, upperBound, providedSubstitute))", "+\t\t\t\t\treturn true;"]}], "num": 64253}