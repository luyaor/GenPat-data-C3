{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "47e855089c4c0285df9e8cff83635fd8", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26545f7239788b6ac005c6da48373dd5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LocalVariableBinding.java", "commitBeforeChange": "5f2d3bb5e60ed5385a17683111c5f94f6d59a54d", "commitAfterChange": "c6d8653f7b02b7c96240bcfc39273c0c2437a2e9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic LocalVariableBinding(char[] name, TypeBinding type, int modifiers, boolean isArgument)", "signatureAfterChange": " \tpublic LocalVariableBinding(char[] name, TypeBinding type, int modifiers, boolean isArgument)", "diff": ["-\t\tif (this.isArgument = isArgument)", "+\t\tthis.isArgument = isArgument;", "+\t\tif (isArgument)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6df5cf9981eda1a07f3b6b7fa417d97f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 137, "methodNumberAfterChange": 211, "signatureBeforeChange": " protected void consumePackageDeclarationName()", "signatureAfterChange": " protected void consumePackageDeclarationName()", "diff": ["-\t\tlength); ", "-\tthis.compilationUnit.currentPackage = ", "-\t\timpt = new ImportReference(tokens, positions, true, AccDefault); ", "+\t\tlength);", "+\t", "+\timpt = new ImportReference(tokens, positions, true, AccDefault);", "+\tthis.compilationUnit.currentPackage = impt; ", "-\t//endPosition is just before the ;", "+\t//this.endPosition is just before the ;", "+", "+\t// recovery", "+\tif (this.currentElement != null){", "+\t\tthis.lastCheckPoint = impt.declarationSourceEnd+1;", "+\t\tthis.restartRecovery = true; // used to avoid branching back into the regular automaton\t\t", "+\t}\t", "+}"]}], "num": 42571}