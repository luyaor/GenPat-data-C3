{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b72a9e7726b006a9966937e4ae8e768d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35959ddf18e569c07f10a3ba2b8258e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaConventionTests.java", "commitBeforeChange": "20f9880068ffc8b9ca5e4df40a1417c5832ce46b", "commitAfterChange": "0fb012af3c6557520ab00415c58833602b027192", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void testPackageFragmentRootOverlap() throws Exception", "signatureAfterChange": " public void testPackageFragmentRootOverlap() throws Exception", "diff": ["-\t\tthis.copy(new java.io.File(getExternalJCLPath()), new java.io.File(getWorkspaceRoot().getLocation().toOSString() + java.io.File.separator + \"P1\" + java.io.File.separator + \"jclMin.jar\"));", "+\t\tthis.copy(new java.io.File(getExternalJCLPathString()), new java.io.File(getWorkspaceRoot().getLocation().toOSString() + java.io.File.separator + \"P1\" + java.io.File.separator + \"jclMin.jar\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2475a01b4565c1e8ab49a9909571bef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ModifyingResourceTests.java", "commitBeforeChange": "807b33cf50fdb479db403880e28eb0989e0fbdba", "commitAfterChange": "ec8ef2b0e48215b6eaf284990dd1417e7ae7aeb1", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " protected IClassFile createClassFile(String libPath, String classFileRelativePath, String contents) throws CoreException", "signatureAfterChange": " protected IClassFile createClassFile(String libPath, String classFileRelativePath, String contents) throws CoreException", "diff": ["-\tUtil.compile(new String[] {sourcePath, contents}, javaProject.getOptions(true), getFolder(libPath).getLocation().toOSString());", "+\tString libOSPath = new Path(libPath).segmentCount() > 1 ? getFolder(libPath).getLocation().toOSString() : getProject(libPath).getLocation().toOSString();", "+\tUtil.compile(new String[] {sourcePath, contents}, javaProject.getOptions(true), libOSPath);"]}], "num": 35314}