{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "78ff7a06b744eea4be8236579a2f752a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80aad133c462342dee2ca61c9300ef6b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "b61821098b3e91f47b6be870d0461734b9ea7274", "commitAfterChange": "b18b012adcc471e2280a6e20faa4d2a33f1db69a", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic static IClasspathContainer getClasspathContainer(final IPath containerPath, final IJavaProject project) throws JavaModelException", "signatureAfterChange": " \tpublic static IClasspathContainer getClasspathContainer(final IPath containerPath, final IJavaProject project) throws JavaModelException", "diff": ["+\t\t\t\t} catch (RuntimeException e) {", "+\t\t\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE) {", "+\t\t\t\t\t\te.printStackTrace();", "+\t\t\t\t\t}", "+\t\t\t\t\tthrow e;", "+\t\t\t\t} catch (Error e) {", "+\t\t\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE) {", "+\t\t\t\t\t\te.printStackTrace();", "+\t\t\t\t\t}", "+\t\t\t\t\tthrow e;", "-\t\t\t\t\tif (!ok) JavaModelManager.getJavaModelManager().containerPut(project, containerPath, null); // flush cache", "+\t\t\t\t\tif (!ok) {", "+\t\t\t\t\t\tJavaModelManager.getJavaModelManager().containerPut(project, containerPath, null); // flush cache", "+\t\t\t\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE) {", "+\t\t\t\t\t\t\tUtil.verbose(", "+\t\t\t\t\t\t\t\t\"CPContainer INIT - FAILED\\n\" + //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\"\tproject: \" + project.getElementName() + '\\n' + //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\"\tcontainer path: \" + containerPath + '\\n' + //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\"\tinitializer: \" + initializer); //$NON-NLS-1$", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9aec99d28ef78a3309fdc6280ad73a92", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CopyResourceElementsOperation.java", "commitBeforeChange": "739f46dc80f05018247a11479ac4224752f3b7da", "commitAfterChange": "b87b4725d2e28b5cdeb71175856b8b7535e04544", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprivate void processPackageFragmentResource(PackageFragment source, PackageFragmentRoot root, String newName) throws JavaModelException", "signatureAfterChange": " \tprivate void processPackageFragmentResource(PackageFragment source, PackageFragmentRoot root, String newName) throws JavaModelException", "diff": ["-\t\t\t\t\t\tupdatePackageStatement(astCU, newFragName, getDocument(cu));", "+\t\t\t\t\t\tAST ast = astCU.getAST();", "+\t\t\t\t\t\tASTRewrite rewrite = ASTRewrite.create(ast);", "+\t\t\t\t\t\tupdatePackageStatement(astCU, newFragName, rewrite);", "+\t\t\t\t\t\tIDocument document = getDocument(cu);", "+\t\t\t\t\t\tTextEdit edits = rewrite.rewriteAST(document, null);", "+\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\tedits.apply(document);", "+\t\t\t\t\t\t} catch (BadLocationException e) {", "+\t\t\t\t\t\t\tthrow new JavaModelException(e, IJavaModelStatusConstants.INVALID_CONTENTS);", "+\t\t\t\t\t\t}\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8ba145e177224bbab447badc302dbd0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CopyPackageFragmentRootOperation.java", "commitBeforeChange": "f802d6fc991463cb62d45c1ee5e011116f9ae063", "commitAfterChange": "7dfdcc33c89bb2a137f9c84963dd6ab9ff74a661", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprotected IClasspathEntry copy(IClasspathEntry entry) throws JavaModelException", "signatureAfterChange": " \tprotected IClasspathEntry copy(IClasspathEntry entry) throws JavaModelException", "diff": ["-\t\t\t\treturn JavaCore.newLibraryEntry(this.destination, entry.getSourceAttachmentPath(), entry.getSourceAttachmentRootPath(), entry.isExported());", "+\t\t\t\ttry {", "+\t\t\t\t\treturn JavaCore.newLibraryEntry(this.destination, entry.getSourceAttachmentPath(), entry.getSourceAttachmentRootPath(), entry.isExported());", "+\t\t\t\t} catch (Assert.AssertionFailedException e) {", "+\t\t\t\t\tIJavaModelStatus status = new JavaModelStatus(IJavaModelStatusConstants.INVALID_PATH, e.getMessage());", "+\t\t\t\t\tthrow new JavaModelException(status);", "+\t\t\t\t}", "-\t\t\t\treturn JavaCore.newVariableEntry(entry.getPath(), entry.getSourceAttachmentPath(), entry.getSourceAttachmentRootPath(), entry.isExported());", "+\t\t\t\ttry {", "+\t\t\t\t\treturn JavaCore.newVariableEntry(entry.getPath(), entry.getSourceAttachmentPath(), entry.getSourceAttachmentRootPath(), entry.isExported());", "+\t\t\t\t} catch (Assert.AssertionFailedException e) {", "+\t\t\t\t\tIJavaModelStatus status = new JavaModelStatus(IJavaModelStatusConstants.INVALID_PATH, e.getMessage());", "+\t\t\t\t\tthrow new JavaModelException(status);", "+\t\t\t\t}"]}], "num": 62834}