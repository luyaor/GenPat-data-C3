{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1ccc9f03814699cc5bc0d8b72912fff6", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f24e24a3fbab242784720698b86db1f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "e0a0631e6ad0dd184a0c6f7c90e330e7c7d93f89", "commitAfterChange": "d88d614055e9f2e19d665c38a6f8afb7405f3375", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic static char[][] getJavaLikeExtensions()", "signatureAfterChange": " \tpublic static char[][] getJavaLikeExtensions()", "diff": ["-\t\t\tJAVA_LIKE_EXTENSIONS = new char[][] {SuffixConstants.SUFFIX_java, SuffixConstants.SUFFIX_JAVA};", "+\t\t\t\t", "+\t\t\tPlugin jdtCorePlugin = JavaCore.getPlugin();", "+\t\t\tif (jdtCorePlugin == null) return null;", "+\t", "+\t\t\tArrayList fileExtensionsList = new ArrayList(5);", "+\t\t\tfileExtensionsList.add(SuffixConstants.SUFFIX_java);", "+\t\t\tIExtensionPoint extension = Platform.getExtensionRegistry().getExtensionPoint(JavaCore.PLUGIN_ID, JavaModelManager.EXTRA_JAVA_LIKE_FILE_EXTENSIONS_EXTPOINT_ID);", "+\t\t\tif (extension != null) {", "+\t\t\t\tIExtension[] extensions =  extension.getExtensions();", "+\t\t\t\tfor(int i = 0; i < extensions.length; i++){", "+\t\t\t\t\tIConfigurationElement [] configElements = extensions[i].getConfigurationElements();", "+\t\t\t\t\tfor(int j = 0; j < configElements.length; j++){", "+\t\t\t\t\t\tString fileExtensionAttribute = configElements[j].getAttribute(\"extension\"); //$NON-NLS-1$", "+\t\t\t\t\t\tif (fileExtensionAttribute != null) fileExtensionsList.add(('.' + fileExtensionAttribute).toCharArray());", "+\t\t\t\t\t}", "+\t\t\t\t}\t", "+\t\t\t}", "+\t\t\tJAVA_LIKE_EXTENSIONS = new char[fileExtensionsList.size()][];", "+\t\t\tfileExtensionsList.toArray(JAVA_LIKE_EXTENSIONS);", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e96c7a723a185010b786fe16b85904f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "309cc52115820f9c0f1ca2e2829a2befbed6d295", "commitAfterChange": "9fa0a487f3691f345e804a37bed163a5e6c7a73b", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic static String getClasspathVariableDeprecationMessage(String variableName)", "signatureAfterChange": " \tpublic static String getClasspathVariableDeprecationMessage(String variableName)", "diff": ["-\t    return (String) JavaModelManager.getJavaModelManager().deprecatedVariables.get(variableName);", "+\t    JavaModelManager manager = JavaModelManager.getJavaModelManager();", "+", "+\t\t// Returns the stored deprecation message", "+\t\tString message = (String) manager.deprecatedVariables.get(variableName);", "+\t\tif (message != null) {", "+\t\t    return message;", "+\t\t}", "+\t    ", "+\t    // If the variable has been already initialized, then there's no deprecation message", "+\t\tIPath variablePath = manager.variableGet(variableName);", "+\t\tif (variablePath != null && variablePath != JavaModelManager.VARIABLE_INITIALIZATION_IN_PROGRESS) {", "+\t\t\treturn null;", "+\t\t}", "+", "+\t\t// Search for extension point to get the possible deprecation message", "+\t\tPlugin jdtCorePlugin = JavaCore.getPlugin();", "+\t\tif (jdtCorePlugin == null) return null;", "+", "+\t\tIExtensionPoint extension = Platform.getExtensionRegistry().getExtensionPoint(JavaCore.PLUGIN_ID, JavaModelManager.CPVARIABLE_INITIALIZER_EXTPOINT_ID);", "+\t\tif (extension != null) {", "+\t\t\tIExtension[] extensions =  extension.getExtensions();", "+\t\t\tfor(int i = 0; i < extensions.length; i++){", "+\t\t\t\tIConfigurationElement [] configElements = extensions[i].getConfigurationElements();", "+\t\t\t\tfor(int j = 0; j < configElements.length; j++){", "+\t\t\t\t\tIConfigurationElement configElement = configElements[j];", "+\t\t\t\t\tString varAttribute = configElement.getAttribute(\"variable\"); //$NON-NLS-1$", "+\t\t\t\t\tif (variableName.equals(varAttribute)) {", "+\t\t\t\t\t\tString deprecatedAttribute = configElement.getAttribute(\"deprecated\"); //$NON-NLS-1$", "+\t\t\t\t\t\tif (deprecatedAttribute != null) {", "+\t\t\t\t\t\t\treturn deprecatedAttribute;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\treturn null;"]}], "num": 60216}