{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d4e887ac626331e89b8998540756abe3", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "717ab57022eaf44405d64ea371cf1f7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorLocator.java", "commitBeforeChange": "21c2c8ab182b7aa411b8e7bf4277aee52240c980", "commitAfterChange": "f512a9071a69431983c5a97730f23f8ae82e0f5d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException", "diff": ["+\tif (reference instanceof FieldDeclaration) { // enum declaration", "+\t\tFieldDeclaration enumConstant  = (FieldDeclaration) reference;", "+\t\tif (enumConstant.initialization instanceof QualifiedAllocationExpression) {", "+\t\t\tlocator.reportAccurateEnumConstructorReference(match, enumConstant, (QualifiedAllocationExpression) enumConstant.initialization);", "+\t\t\treturn;", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95caf556dd611951145f0e588a43f260", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "ce4dcdda36d145f85633203e671aabd032ebd393", "commitAfterChange": "b60aac81ebd86849e9f3995f202b266825efdd72", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public final boolean canBeSeenBy(ReferenceBinding receiverType, SourceTypeBinding invocationType)", "signatureAfterChange": "  public final boolean canBeSeenBy(ReferenceBinding receiverType, SourceTypeBinding invocationType)", "diff": ["-\t\tif (!(receiverType == this || receiverType == enclosingType())) return false;", "+\t\treceiverCheck: {", "+\t\t\tif (!(receiverType == this || receiverType == enclosingType())) {", "+\t\t\t\t// special tolerance for type variable direct bounds", "+\t\t\t\tif (receiverType.isTypeVariable()) {", "+\t\t\t\t\tTypeVariableBinding typeVariable = (TypeVariableBinding) receiverType;", "+\t\t\t\t\tif (typeVariable.isErasureBoundTo(this.erasure()) || typeVariable.isErasureBoundTo(enclosingType().erasure())) {", "+\t\t\t\t\t\tbreak receiverCheck;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t}", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98824b7bd0c5d14a7386654252d82ee0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleTypeReference.java", "commitBeforeChange": "b15d555969226382f7ca55d85fc45725a266fc8b", "commitAfterChange": "ea2c66d41813ffe0a73e9227d41cf335eedf7fb6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprotected TypeBinding getTypeBinding(Scope scope)", "signatureAfterChange": " \tprotected TypeBinding getTypeBinding(Scope scope)", "diff": ["+\t\t", "+\t\tif (this.resolvedType instanceof TypeVariableBinding) {", "+\t\t\tTypeVariableBinding typeVariable = (TypeVariableBinding) this.resolvedType;", "+\t\t\tif (typeVariable.declaringElement instanceof SourceTypeBinding) {", "+\t\t\t\tscope.tagAsAccessingEnclosingInstanceStateOf((ReferenceBinding) typeVariable.declaringElement, true /* type variable access */);", "+\t\t\t}", "+\t\t}"]}], "num": 46503}