{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "37b0f80de00ac72e98edfefcbdb4a4b2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2fa36369baa30368cc98dcf2fb74973", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImplicitNullAnnotationVerifier.java", "commitBeforeChange": "699f7fbae3c0c490fd8a048eefa69e38ba0aed7a", "commitAfterChange": "132fd2e863d712144f01b19d7de00f006508d11a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tvoid checkNullSpecInheritance(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod,  \t\t\tboolean hasNonNullDefault, boolean shouldComplain, \t\t\tMethodBinding inheritedMethod, Scope scope, InheritedNonNullnessInfo[] inheritedNonNullnessInfos)", "signatureAfterChange": " \tvoid checkNullSpecInheritance(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod,  \t\t\tboolean hasNonNullDefault, boolean shouldComplain, \t\t\tMethodBinding inheritedMethod, Scope scope, InheritedNonNullnessInfo[] inheritedNonNullnessInfos)", "diff": ["-\t\t\t\t\t\t\tif (currentMethod.parameterNonNullness == null)", "-\t\t\t\t\t\t\t\tcurrentMethod.parameterNonNullness = new Boolean[length];", "-\t\t\t\t\t\t\tcurrentMethod.parameterNonNullness[i] = inheritedNonNullNess;", "+\t\t\t\t\t\t\trecordArgNonNullness(currentMethod, length, i, currentArgument, inheritedNonNullNess);", "-\t\t\t\t\tif (currentMethod.parameterNonNullness == null)", "-\t\t\t\t\t\tcurrentMethod.parameterNonNullness = new Boolean[length];", "-\t\t\t\t\tcurrentMethod.parameterNonNullness[i] = (currentNonNullNess = Boolean.TRUE);", "+\t\t\t\t\tcurrentNonNullNess = Boolean.TRUE;", "+\t\t\t\t\trecordArgNonNullness(currentMethod, length, i, currentArgument, Boolean.TRUE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe71deeb3238abdba20c45504fa8c8fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImplicitNullAnnotationVerifier.java", "commitBeforeChange": "bf3327534492f80b8d79e6948262e6cef5664121", "commitAfterChange": "ebdb898d09acf8b4e1c34a1c88424811730e87b9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tvoid checkNullSpecInheritance(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod,  \t\t\tboolean hasNonNullDefault, boolean shouldComplain, \t\t\tMethodBinding inheritedMethod, Scope scope, InheritedNonNullnessInfo[] inheritedNonNullnessInfos)", "signatureAfterChange": " \tvoid checkNullSpecInheritance(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod,  \t\t\tboolean hasNonNullDefault, boolean shouldComplain, \t\t\tMethodBinding inheritedMethod, Scope scope, InheritedNonNullnessInfo[] inheritedNonNullnessInfos)", "diff": ["-\t\t\t\t\t\t\tif (currentMethod.parameterNonNullness == null)", "-\t\t\t\t\t\t\t\tcurrentMethod.parameterNonNullness = new Boolean[length];", "-\t\t\t\t\t\t\tcurrentMethod.parameterNonNullness[i] = inheritedNonNullNess;", "+\t\t\t\t\t\t\trecordArgNonNullness(currentMethod, length, i, currentArgument, inheritedNonNullNess);", "-\t\t\t\t\tif (currentMethod.parameterNonNullness == null)", "-\t\t\t\t\t\tcurrentMethod.parameterNonNullness = new Boolean[length];", "-\t\t\t\t\tcurrentMethod.parameterNonNullness[i] = (currentNonNullNess = Boolean.TRUE);", "+\t\t\t\t\tcurrentNonNullNess = Boolean.TRUE;", "+\t\t\t\t\trecordArgNonNullness(currentMethod, length, i, currentArgument, Boolean.TRUE);"]}], "num": 9640}