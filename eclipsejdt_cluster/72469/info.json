{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d23026e6b3fba6752f6d05c8151e54bf", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bc6e61e603fc5b1b98c11b93930d8ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBuilder.java", "commitBeforeChange": "ad2da02858ca7c8babcaa54d1755f5d5dc7c4cca", "commitAfterChange": "2800b00fd8a32c02dd22b73112db63e4fdf348f6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic HierarchyBuilder(TypeHierarchy hierarchy) throws JavaModelException", "signatureAfterChange": " \t \tpublic HierarchyBuilder(TypeHierarchy hierarchy) throws JavaModelException", "diff": ["-\t\tSearchableEnvironment searchableEnvironment = project.newSearchableNameEnvironment(unitsToLookInside);", "-\t\tthis.nameLookup = searchableEnvironment.nameLookup;", "-\t\tthis.hierarchyResolver =", "-\t\t\tnew HierarchyResolver(", "-\t\t\t\tsearchableEnvironment,", "-\t\t\t\tproject.getOptions(true),", "-\t\t\t\tthis,", "-\t\t\t\tnew DefaultProblemFactory());", "+\t\tif (project != null) {", "+\t\t\tSearchableEnvironment searchableEnvironment = project.newSearchableNameEnvironment(unitsToLookInside);", "+\t\t\tthis.nameLookup = searchableEnvironment.nameLookup;", "+\t\t\tthis.hierarchyResolver =", "+\t\t\t\tnew HierarchyResolver(", "+\t\t\t\t\tsearchableEnvironment,", "+\t\t\t\t\tproject.getOptions(true),", "+\t\t\t\t\tthis,", "+\t\t\t\t\tnew DefaultProblemFactory());", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1357f989ff240ced3be3737dbe00eba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedHierarchyBuilder.java", "commitBeforeChange": "265fce71e12d88a397c49e9793a330fd01dcb78a", "commitAfterChange": "132f5b2e16f0365968d7fa2c2d5a0e7261bfb001", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " private void createTypeHierarchyBasedOnRegion(HashMap allOpenablesInRegion, IProgressMonitor monitor)", "signatureAfterChange": " private void createTypeHierarchyBasedOnRegion(HashMap allOpenablesInRegion, IProgressMonitor monitor)", "diff": ["-\tif (size != 0) {", "-\t\tthis.infoToHandle = new HashMap(size);", "+\tif (size == 0) {", "+\t\tif (monitor != null) monitor.done();", "+\t\treturn;", "-\t", "+\t\t", "+\tthis.infoToHandle = new HashMap(size);", "-\t\tArrayList allOpenables = (ArrayList) allOpenablesInRegion.get(javaProjects.next());", "+\t\tJavaProject project = (JavaProject) javaProjects.next();", "+\t\tArrayList allOpenables = (ArrayList) allOpenablesInRegion.get(project);", "-\t\t\tif (size > 0) {", "-\t\t\t\tthis.hierarchyResolver.resolve(openables, null, monitor);", "-\t\t\t}", "+\t\t\tSearchableEnvironment searchableEnvironment = project.newSearchableNameEnvironment(this.hierarchy.workingCopies);", "+\t\t\tthis.nameLookup = searchableEnvironment.nameLookup;", "+\t\t\tthis.hierarchyResolver.resolve(openables, null, monitor);", "+\t\t} catch (JavaModelException e) {", "+\t\t\t// project doesn't exit: ignore"]}], "num": 72469}