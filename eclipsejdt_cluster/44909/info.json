{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3ca54c351fed2c44e082e8136ad1293a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e6f256bcb284dfdaff1c71f2f1f8aa6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/TextEditsBuilder.java", "commitBeforeChange": "ea5c9cc312f4b4f8b75e3a6a2f95be1c2b2c1422", "commitAfterChange": "1d27cfb65a8550e3dd44f890da53c4bdcdcccdbf", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tprivate void bufferIndent(Token token, int index)", "signatureAfterChange": "  \tprivate void bufferIndent(Token token, int index)", "diff": ["-\t\t\tif (wrapPolicy != null && wrapPolicy.isForced) {", "-\t\t\t\tint extraIndent = wrapPolicy.extraIndent;", "+\t\t\tif (wrapPolicy != null && wrapPolicy.wrapMode == WrapMode.FORCED) {", "+\t\t\t\tint parentIndex = wrapPolicy.wrapParentIndex;", "+\t\t\t\tint parentAlign = 0;", "+\t\t\t\tint lineStart = this.tm.findFirstTokenInLine(parentIndex);", "+\t\t\t\tfor (int i = parentIndex; i >= lineStart; i--) {", "+\t\t\t\t\tparentAlign = this.tm.get(i).getAlign();", "+\t\t\t\t\tif (parentAlign > 0)", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t}", "+", "+\t\t\t\tint extraIndent = parentAlign == 0 ? wrapPolicy.extraIndent : (token.getIndent() - parentAlign);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7f66873873ff09a439a1e65c409ca1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/linewrap/WrapPreparator.java", "commitBeforeChange": "ea5c9cc312f4b4f8b75e3a6a2f95be1c2b2c1422", "commitAfterChange": "1d27cfb65a8550e3dd44f890da53c4bdcdcccdbf", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tprivate void forceContinuousWrapping(ASTNode node, int parentIndex)", "signatureAfterChange": " \tprivate void forceContinuousWrapping(ASTNode node, int parentIndex)", "diff": ["+\t\tint parentIndent = this.tm.get(parentIndex).getIndent();", "+\t\tint indentChange = -parentIndent;", "+\t\tint lineStart = this.tm.findFirstTokenInLine(parentIndex);", "+\t\tfor (int i = parentIndex; i >= lineStart; i--) {", "+\t\t\tint align = this.tm.get(i).getAlign();", "+\t\t\tif (align > 0) {", "+\t\t\t\tindentChange = -2 * parentIndent + align;", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t}", "+", "+\t\tToken previous = null;", "-\t\tToken wrapParent = this.tm.get(parentIndex);", "-\t\tToken previous = null;", "-\t\t\t\tint indent = (token.getIndent() - wrapParent.getIndent());", "-\t\t\t\ttoken.setWrapPolicy(new WrapPolicy(indent, parentIndex, true));", "+\t\t\t\tint extraIndent = token.getIndent() + indentChange;", "+\t\t\t\ttoken.setWrapPolicy(new WrapPolicy(WrapMode.FORCED, parentIndex, extraIndent));", "+\t\t\t\ttoken.setIndent(parentIndent + extraIndent);"]}], "num": 44909}