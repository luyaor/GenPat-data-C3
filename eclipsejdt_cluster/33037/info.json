{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0c971da3526a7eef1589779eacf37dde", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0af8da3f6cd1689b3a5cab7caf3ce855", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "3aa835135283a2acadb61b0aae182c129f17ffab", "commitAfterChange": "a9c15bae1087a65c1bc60140ceb7a5a5416fd8a8", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "\r public void parseCompilationUnit(\r \tICompilationUnit unit, \r \tboolean needReferenceInfo)", "signatureAfterChange": "\r public void parseCompilationUnit(\r \tICompilationUnit unit, \r \tboolean needReferenceInfo)", "diff": ["-\r", "-\t\tdiet = !needReferenceInfo;\r", "+/*\t\tdiet = !needReferenceInfo;\r", "-\t\tparse(unit, compilationUnitResult);\r", "+\t\tparse(unit, compilationUnitResult);\t\t\r", "+*/\t\tdiet = true;\r", "+\t\treportReferenceInfo = needReferenceInfo;\r", "+\t\tCompilationResult compilationUnitResult = new CompilationResult(unit, 0, 0);\r", "+\t\tCompilationUnitDeclaration parsedUnit = parse(unit, compilationUnitResult);\r", "+\t\tint initialStart = this.scanner.initialPosition;\r", "+\t\tint initialEnd = this.scanner.eofPosition;\r", "+\t\tif (needReferenceInfo){\r", "+\t\t\tdiet = false;\r", "+\t\t\tthis.getMethodBodies(parsedUnit);\r", "+\t\t}\r", "+\t\tthis.scanner.resetTo(initialStart, initialEnd);\r", "+\t\tnotifySourceElementRequestor(parsedUnit);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dda0da4500ae1e754284ff6a2e0a463", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "8c242dc6f6e2b64fb542a74a9715bc899e29ca50", "commitAfterChange": "0f90ba228b8f3ba905fd955aeb78fb5cde7daa01", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "\r public void parseCompilationUnit(\r \tICompilationUnit unit, \r \tboolean needReferenceInfo)", "signatureAfterChange": "\r public void parseCompilationUnit(\r \tICompilationUnit unit, \r \tboolean needReferenceInfo)", "diff": ["-\r", "-\t\tdiet = !needReferenceInfo;\r", "+/*\t\tdiet = !needReferenceInfo;\r", "-\t\tparse(unit, compilationUnitResult);\r", "+\t\tparse(unit, compilationUnitResult);\t\t\r", "+*/\t\tdiet = true;\r", "+\t\treportReferenceInfo = needReferenceInfo;\r", "+\t\tCompilationResult compilationUnitResult = new CompilationResult(unit, 0, 0);\r", "+\t\tCompilationUnitDeclaration parsedUnit = parse(unit, compilationUnitResult);\r", "+\t\tint initialStart = this.scanner.initialPosition;\r", "+\t\tint initialEnd = this.scanner.eofPosition;\r", "+\t\tif (needReferenceInfo){\r", "+\t\t\tdiet = false;\r", "+\t\t\tthis.getMethodBodies(parsedUnit);\r", "+\t\t}\r", "+\t\tthis.scanner.resetTo(initialStart, initialEnd);\r", "+\t\tnotifySourceElementRequestor(parsedUnit);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b36fa46c2069e9eda89ba38215527883", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "165d2ee0a4a374ec3dbb0f3df780db24664ac692", "commitAfterChange": "146dc3b7afcca724ac2ba30b2cbb382c047a5a77", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprivate Object parseArguments(Object receiver) throws InvalidInputException", "signatureAfterChange": " \tprivate Object parseArguments(Object receiver) throws InvalidInputException", "diff": ["-\t\t\t// Read possible array declaration", "+\t\t\t// Read possible additional type info", "+\t\t\tboolean isVarargs = false;", "+\t\t\t\t// array declaration", "+\t\t\t} else if (readToken() == TerminalTokens.TokenNameELLIPSIS) {", "+\t\t\t\t// ellipsis declaration", "+\t\t\t\tint dimStart = this.scanner.getCurrentTokenStartPosition();", "+\t\t\t\tdimPositions[dim++] = (((long) dimStart) << 32) + this.scanner.getCurrentTokenEndPosition();", "+\t\t\t\tconsumeToken();", "+\t\t\t\tisVarargs = true;", "-\t\t\t\tObject argument = createArgumentReference(name, dim, typeRef, dimPositions, argNamePos);", "+\t\t\t\tObject argument = createArgumentReference(name, dim, isVarargs, typeRef, dimPositions, argNamePos);", "-\t\t\t\tObject argument = createArgumentReference(name, dim, typeRef, dimPositions, argNamePos);", "+\t\t\t\tObject argument = createArgumentReference(name, dim, isVarargs, typeRef, dimPositions, argNamePos);"]}], "num": 33037}