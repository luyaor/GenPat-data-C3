{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "69a5d80d7a44c89dac3e6f12068d4f04", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c4758004b0e0da968598429d2f125bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/NameEnvironment.java", "commitBeforeChange": "68da60f848d452f075f2d3f68dd3b898ded50b7e", "commitAfterChange": "fc5bc15684e4fc00c95c132f20614d4cd26b5e8c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \r private NameEnvironmentAnswer findClass(String qualifiedTypeName, char[] typeName)", "signatureAfterChange": "\r \r private NameEnvironmentAnswer findClass(String qualifiedTypeName, char[] typeName)", "diff": ["+\t\tString mainTypeName = qualifiedTypeName;\r", "+\t\tint index = mainTypeName.indexOf('$');\r", "+\t\tif (index > 0)\r", "+\t\t\tmainTypeName = mainTypeName.substring(0, index);\r", "-\t\t\tif (qualifiedTypeName.equals(initialTypeNames[i])) {\r", "+\t\t\tif (mainTypeName.equals(initialTypeNames[i])) {\r", "-\t\t\t\t\tthrow new AbortCompilation(true, new AbortIncrementalBuildException(qualifiedTypeName));\r", "+\t\t\t\t\tthrow new AbortCompilation(true, new AbortIncrementalBuildException(mainTypeName));\r", "-\t\t\tString qSourceFileName = qualifiedTypeName + \".java\"; //$NON-NLS-1$\r", "+\t\t\tString mainTypeName = qualifiedTypeName;\r", "+\t\t\tint index = mainTypeName.indexOf('$');\r", "+\t\t\tif (index > 0)\r", "+\t\t\t\tmainTypeName = mainTypeName.substring(0, index);\r", "+\t\t\tString qSourceFileName = mainTypeName + \".java\"; //$NON-NLS-1$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6c587d90b90052a461637d7d26ad7ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " void add(JavaProject javaProject, IPath pathToAdd, int includeMask, HashSet visitedProjects, IClasspathEntry referringEntry) throws JavaModelException", "signatureAfterChange": " void add(JavaProject javaProject, IPath pathToAdd, int includeMask, HashSet visitedProjects, IClasspathEntry referringEntry) throws JavaModelException", "diff": ["+\t\t\t\t\t\t\t\tObject target = JavaModel.getTarget(path, false/*don't check existence*/);", "+\t\t\t\t\t\t\t\tif (target instanceof IFolder) // case of an external folder", "+\t\t\t\t\t\t\t\t\tpath = ((IFolder) target).getFullPath();", "-\t\t\t\t\t\t\t\taddEnclosingProjectOrJar(path);", "+\t\t\t\t\t\t\t\taddEnclosingProjectOrJar(entry.getPath());", "+\t\t\t\t\t\t\tObject target = JavaModel.getTarget(path, false/*don't check existence*/);", "+\t\t\t\t\t\t\tif (target instanceof IFolder) // case of an external folder", "+\t\t\t\t\t\t\t\tpath = ((IFolder) target).getFullPath();", "-\t\t\t\t\t\t\taddEnclosingProjectOrJar(path);", "+\t\t\t\t\t\t\taddEnclosingProjectOrJar(entry.getPath());", "-\t\t\t\t\t\tadd((JavaProject) model.getJavaProject(entry.getPath().lastSegment()), null, includeMask, visitedProjects, cpEntry);", "+\t\t\t\t\t\tadd((JavaProject) model.getJavaProject(path.lastSegment()), null, includeMask, visitedProjects, cpEntry);"]}], "num": 25660}