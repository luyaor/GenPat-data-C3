{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5c57b8d50f6965a8f07b88067a795098", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "079b1b90ceb61b6010ddf3c306bbd2c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "4a42ce44b4dbdac7dfa261ef1a39fce0de95d7be", "commitAfterChange": "51fbd8e4f6294604d20aa6227743a8c8abfdc166", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \r protected void findSourceFiles(IResourceDelta sourceDelta, int segmentCount) throws CoreException", "signatureAfterChange": "\r \r protected void findSourceFiles(IResourceDelta sourceDelta, int segmentCount) throws CoreException", "diff": ["-\t\t\t\t\tIPath addedPackagePath = location.removeFirstSegments(segmentCount).makeRelative();\r", "+\t\t\t\t\tIPath addedPackagePath = location.removeFirstSegments(segmentCount).makeRelative().setDevice(null);\r", "-\t\t\t\t\tIPath removedPackagePath = location.removeFirstSegments(segmentCount).makeRelative();\r", "+\t\t\t\t\tIPath removedPackagePath = location.removeFirstSegments(segmentCount).makeRelative().setDevice(null);\r", "-\t\t\t\tIPath typePath = location.removeFirstSegments(segmentCount).removeFileExtension().makeRelative();\r", "+\t\t\t\tIPath typePath = location.removeFirstSegments(segmentCount).removeFileExtension().makeRelative().setDevice(null);\r", "-\t\t\t\t\t\t\tSystem.out.println(\"Compile this added source file \" + location); //$NON-NLS-1$\r", "+\t\t\t\t\t\t\tSystem.out.println(\"Compile this added source file \" + sourceLocation); //$NON-NLS-1$\r", "-\t\t\t\t\t\tString typeName = typePath.setDevice(null).toString();\r", "+\t\t\t\t\t\tString typeName = typePath.toString();\r", "-\t\t\t\t\t\t\t\tSystem.out.println(\"Add dependents of added source file \" + typePath); //$NON-NLS-1$\r", "+\t\t\t\t\t\t\t\tSystem.out.println(\"Add dependents of added source file \" + typeName); //$NON-NLS-1$\r", "-\t\t\t\t\t\t\tSystem.out.println(\"Compile this changed source file \" + location); //$NON-NLS-1$\r", "+\t\t\t\t\t\t\tSystem.out.println(\"Compile this changed source file \" + sourceLocation); //$NON-NLS-1$\r", "-\t\t\t\t\t\ttypeNames.add(typePath.setDevice(null).toString());\r", "+\t\t\t\t\t\ttypeNames.add(typePath.toString());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f06c968e4bdb762d76045713f88109bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/IfStatement.java", "commitBeforeChange": "949f1bbe84622faa807866412d26a5bdb0f64fe4", "commitAfterChange": "ecd2d9d0e14c2688e43c7c452930452fe7a77cc0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\tif (this.thenStatement == null) {", "-\t\t\tthenFlowInfo = flowInfo.initsWhenTrue();", "+\t\tif (isConditionOptimizedFalse) {", "+\t\t\t//thenFlowInfo = conditionInfo.initsWhenTrue().copy().setReachMode(FlowInfo.CHECK_POT_INIT_FAKE_REACHABLE);", "+\t\t\tthenFlowInfo = flowInfo.initsWhenTrue().copy().setReachMode(FlowInfo.UNREACHABLE); // revert", "+\t\t\t", "-\t\t\tif (isConditionOptimizedFalse) thenFlowInfo.setReachMode(FlowInfo.CHECK_POT_INIT_FAKE_REACHABLE);", "-", "+\t\t}", "+\t\tif (this.thenStatement != null) {", "-\t\tif (this.elseStatement == null) {", "-\t\t\telseFlowInfo = flowInfo.initsWhenFalse();", "+\t\tif (isConditionOptimizedTrue) {", "+\t\t\t//elseFlowInfo = conditionInfo.initsWhenFalse().copy().setReachMode(FlowInfo.CHECK_POT_INIT_FAKE_REACHABLE);", "+\t\t\telseFlowInfo = flowInfo.initsWhenFalse().copy().setReachMode(FlowInfo.UNREACHABLE); // revert", "-\t\t\tif (isConditionOptimizedTrue) elseFlowInfo.setReachMode(FlowInfo.CHECK_POT_INIT_FAKE_REACHABLE);", "-", "+\t\t}", "+\t\tif (this.elseStatement != null) {", "-\t\t\t\tmergedInfo = elseFlowInfo.setReachMode(FlowInfo.FAKE_REACHABLE);", "+\t\t\t\tmergedInfo = elseFlowInfo.setReachMode(FlowInfo.UNREACHABLE);", "-\t\t\t\tmergedInfo = thenFlowInfo.setReachMode(FlowInfo.FAKE_REACHABLE);", "+\t\t\t\tmergedInfo = thenFlowInfo.setReachMode(FlowInfo.UNREACHABLE);"]}], "num": 6882}