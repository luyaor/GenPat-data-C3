{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bd60569eca6a342706a558db0423c81f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "510a30ddfaf4161b2bcb9e5f01f64a63", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Javadoc.java", "commitBeforeChange": "da3abb814c31b6e1c2d43312de494af316e19273", "commitAfterChange": "8af0e3d96f10bb27360a77bbd330487cf3fdc8dd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void resolve(ClassScope classScope)", "signatureAfterChange": " \tpublic void resolve(ClassScope classScope)", "diff": ["-\t\t\t", "-\t\t\t// Resolve reference", "-\t\t\tthis.references[i].resolveType(classScope);", "-", "-\t\t\t// Some unbound field reference might be changed to message send", "-\t\t\t// see bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=51911", "-\t\t\tif (this.references[i] instanceof JavadocFieldReference) {", "-\t\t\t\tJavadocFieldReference fieldRef = (JavadocFieldReference) this.references[i];", "-\t\t\t\tif (fieldRef.receiverType != null && fieldRef.binding == null) { // binding was reset in case of valid method reference", "-\t\t\t\t\t// TODO (frederic) post 3.0 - avoid new instanciation of Compiler AST node", "-\t\t\t\t\tJavadocMessageSend msgSend = new JavadocMessageSend(fieldRef.token, fieldRef.nameSourcePosition);", "-\t\t\t\t\tmsgSend.receiver = fieldRef.receiver;", "-\t\t\t\t\tmsgSend.receiverType = fieldRef.receiverType;", "-\t\t\t\t\tmsgSend.qualifyingType = fieldRef.receiverType;", "-\t\t\t\t\tmsgSend.superAccess = classScope.enclosingSourceType().isCompatibleWith(msgSend.receiverType);", "-\t\t\t\t\tmsgSend.binding = classScope.findMethod((ReferenceBinding)msgSend.receiverType, msgSend.selector, new TypeBinding[0], msgSend);", "-\t\t\t\t\tthis.references[i] = msgSend;", "-\t\t\t\t}", "-\t\t\t}", "+\t\t\tresolveReference(this.references[i], classScope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb360aaaabedc167ef349268b4323d4a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Javadoc.java", "commitBeforeChange": "da3abb814c31b6e1c2d43312de494af316e19273", "commitAfterChange": "8af0e3d96f10bb27360a77bbd330487cf3fdc8dd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void resolve(MethodScope methScope)", "signatureAfterChange": " \tpublic void resolve(MethodScope methScope)", "diff": ["-\t\t\tthis.references[i].resolveType(methScope);", "+\t\t\tresolveReference(this.references[i], methScope);", "-\t\t\t// Some unbound field reference might be changed to message send", "-\t\t\t// see bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=51911", "-\t\t\tif (this.references[i] instanceof JavadocFieldReference) {", "-\t\t\t\tJavadocFieldReference fieldRef = (JavadocFieldReference) this.references[i];", "-\t\t\t\tif (fieldRef.receiverType != null && fieldRef.binding == null) { // binding was reset in case of valid method reference", "-\t\t\t\t\t// TODO (frederic) post 3.0 - avoid new instanciation of Compiler AST node", "-\t\t\t\t\tJavadocMessageSend msgSend = new JavadocMessageSend(fieldRef.token, fieldRef.nameSourcePosition);", "-\t\t\t\t\tmsgSend.receiver = fieldRef.receiver;", "-\t\t\t\t\tmsgSend.receiverType = fieldRef.receiverType;", "-\t\t\t\t\tmsgSend.qualifyingType = fieldRef.receiverType;", "-\t\t\t\t\tmsgSend.superAccess = methScope.enclosingSourceType().isCompatibleWith(msgSend.receiverType);", "-\t\t\t\t\tmsgSend.binding = methScope.findMethod((ReferenceBinding)msgSend.receiverType, msgSend.selector, new TypeBinding[0], msgSend);", "-\t\t\t\t\tthis.references[i] = msgSend;", "-\t\t\t\t}", "-\t\t\t}", "-"]}], "num": 71216}