{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c1343a3b93a9fca48e94ce11d05410db", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6943ccc41a2d0431b58f6abe85578e0e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "acbc84bdd187bdb6c7f4afd96c97bfaa149e3ef9", "commitAfterChange": "145cdc80e51d24de5d028aaae697a72b8bec0900", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "signatureAfterChange": "  \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "diff": ["-\t\tchar[] tagName = getTagName(previousPosition, currentPosition);", "-\t\tif (tagName == null) return false;", "+\t    if (currentPosition != this.scanner.startPosition) {", "+\t\t\tthis.tagSourceStart = previousPosition;", "+\t\t\tthis.tagSourceEnd = currentPosition;", "+\t\t\tif (this.reportProblems) this.sourceParser.problemReporter().javadocInvalidTag(this.tagSourceStart, this.tagSourceEnd);", "+\t\t\treturn false;", "+\t\t}", "+\t\tif (this.index >= this.scanner.eofPosition) {", "+\t\t\tthis.tagSourceStart = previousPosition;", "+\t\t\tthis.tagSourceEnd = this.tokenPreviousPosition;", "+\t\t\tif (this.reportProblems) this.sourceParser.problemReporter().javadocInvalidTag(this.tagSourceStart, this.tagSourceEnd);", "+\t\t\treturn false;", "+\t\t}", "+\t\tthis.tagSourceStart = this.scanner.getCurrentTokenStartPosition();", "+\t\tthis.tagSourceEnd = this.scanner.getCurrentTokenEndPosition();", "+\t\tchar[] tagName = this.scanner.getCurrentIdentifierSource();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae6853cc96231c499c0c02e0dca44517", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "b70c37ecf76f05e7ae76a32ba47dec687904996c", "commitAfterChange": "991f76a3733441af275e22b3c172d2ee3c84bb0e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "signatureAfterChange": "  \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "diff": ["-\t\t\t\t\t\tif (this.sourceLevel >= ClassFileConstants.JDK1_5 && length == TAG_VALUE_LENGTH && CharOperation.equals(TAG_VALUE, tagName)) {", "+\t\t\t\t\t\tif (length == TAG_VALUE_LENGTH && CharOperation.equals(TAG_VALUE, tagName)) {", "-\t\t\t\t\t\t\tif (this.inlineTagStarted) {", "-\t\t\t\t\t\t\t\tvalid = parseReference();", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tvalid = false;", "-\t\t\t\t\t\t\t\tif (this.reportProblems) {", "-\t\t\t\t\t\t\t\t\tthis.sourceParser.problemReporter().javadocUnexpectedTag(this.tagSourceStart, this.tagSourceEnd);", "+\t\t\t\t\t\t\tif (this.sourceLevel >= ClassFileConstants.JDK1_5) {", "+\t\t\t\t\t\t\t\tif (this.inlineTagStarted) {", "+\t\t\t\t\t\t\t\t\tvalid = parseReference();", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tvalid = false;", "+\t\t\t\t\t\t\t\t\tif (this.reportProblems) this.sourceParser.problemReporter().javadocUnexpectedTag(this.tagSourceStart, this.tagSourceEnd);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (this.validValuePositions == -1) {", "+\t\t\t\t\t\t\t\tif (this.invalidValuePositions != -1) {", "+\t\t\t\t\t\t\t\t\tif (this.reportProblems) this.sourceParser.problemReporter().javadocDuplicatedTag(tagName, (int) (this.invalidValuePositions>>>32), (int) this.invalidValuePositions);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tif (valid) {", "+\t\t\t\t\t\t\t\t\tthis.validValuePositions = (((long) this.tagSourceStart) << 32) + this.tagSourceEnd;", "+\t\t\t\t\t\t\t\t\tthis.invalidValuePositions = -1;", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tthis.invalidValuePositions = (((long) this.tagSourceStart) << 32) + this.tagSourceEnd;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tif (this.reportProblems) this.sourceParser.problemReporter().javadocDuplicatedTag(tagName, this.tagSourceStart, this.tagSourceEnd);"]}], "num": 72913}