{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "efe92b188dbdbf8d6e03dc09bef12dcb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "877b6543ba89ab77cf71c8ab6b06bb5f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " protected IJavaElement createHandle(FieldDeclaration fieldDeclaration, TypeDeclaration typeDeclaration, IJavaElement parent)", "signatureAfterChange": " protected IJavaElement createHandle(FieldDeclaration fieldDeclaration, TypeDeclaration typeDeclaration, IJavaElement parent)", "diff": ["-\tif (fieldDeclaration.isField())", "-\t\treturn ((IType) parent).getField(new String(fieldDeclaration.name));", "-", "+\tswitch (fieldDeclaration.getKind()) {", "+\t\tcase AbstractVariableDeclaration.FIELD :", "+\t\tcase AbstractVariableDeclaration.ENUM_CONSTANT :", "+\t\t\treturn ((IType) parent).getField(new String(fieldDeclaration.name));", "+\t}", "-\t\tif (!fields[i].isField()) {", "+\t\tif (fields[i].getKind() == AbstractVariableDeclaration.INITIALIZER) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f42ce1a7703cb487359225e6dc1b3edc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprivate void buildFields()", "signatureAfterChange": " \t \tprivate void buildFields()", "diff": ["-\t\tfor (int i = 0; i < size; i++)", "-\t\t\tif (fields[i].isField())", "-\t\t\t\tcount++;", "+\t\tfor (int i = 0; i < size; i++) {", "+\t\t\tswitch (fields[i].getKind()) {", "+\t\t\t\tcase AbstractVariableDeclaration.FIELD:", "+\t\t\t\tcase AbstractVariableDeclaration.ENUM_CONSTANT:", "+\t\t\t\t\tcount++;", "+\t\t\t}", "+\t\t}", "-\t\t\tif (!field.isField()) {", "+\t\t\tif (field.getKind() == AbstractVariableDeclaration.INITIALIZER) {"]}], "num": 32844}