{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a10a89478897eab3a64b1f838e50f898", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b8ca72bcf2313c9fec5f826f7950a4a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 77, "signatureBeforeChange": "   \tprivate void rewriteReturnType(MethodDeclaration node, boolean isConstructor, boolean isConstructorChange)", "signatureAfterChange": "  \tprivate void rewriteReturnType(MethodDeclaration node, boolean isConstructor, boolean isConstructorChange)", "diff": ["-", "-\t\t// weakness in the AST: return type always exists, even if missing in source", "-\t\tASTNode originalReturnType= (ASTNode) getOriginalValue(node, MethodDeclaration.RETURN_TYPE_PROPERTY);", "+\t\tChildPropertyDescriptor property= (node.getAST().apiLevel() == AST.JLS2) ? MethodDeclaration.RETURN_TYPE_PROPERTY : MethodDeclaration.RETURN_TYPE2_PROPERTY;", "+", "+\t\t// weakness in the AST: return type can exist, even if missing in source", "+\t\tASTNode originalReturnType= (ASTNode) getOriginalValue(node, property);", "-\t\t\trewriteRequiredNode(node, MethodDeclaration.RETURN_TYPE_PROPERTY);", "+\t\t\trewriteRequiredNode(node, property);", "-\t\tASTNode newReturnType= (ASTNode) getNewValue(node, MethodDeclaration.RETURN_TYPE_PROPERTY);", "+\t\tASTNode newReturnType= (ASTNode) getNewValue(node, property);", "-\t\t\t\tTextEditGroup editGroup= getEditGroup(node, MethodDeclaration.RETURN_TYPE_PROPERTY);", "+\t\t\t\tTextEditGroup editGroup= getEditGroup(node, property);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97bb12eb14ac69c61a4cd3ed068f9cf7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "c870f031a98c81ecd7c6b67e75c9e69323537096", "commitAfterChange": "5b2be5e77960f7aa4dfe7d5eb915a5439f635d3a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " void faultInImports()", "signatureAfterChange": " void faultInImports()", "diff": ["-\t\t\t\tif (importBinding instanceof ProblemFieldBinding && importBinding.problemId() == ProblemReasons.Ambiguous) {", "+\t\t\t\tif (importBinding.problemId() == ProblemReasons.Ambiguous) {", "-\t\t\t\tif (importReference.isTypeUseDeprecated(referenceBinding, this))", "-\t\t\t\t\tproblemReporter().deprecatedType(referenceBinding, importReference);", "+\t\t\t\tReferenceBinding typeToCheck = referenceBinding.problemId() == ProblemReasons.Ambiguous", "+\t\t\t\t\t? ((ProblemReferenceBinding) referenceBinding).closestMatch", "+\t\t\t\t\t: referenceBinding;", "+\t\t\t\tif (importReference.isTypeUseDeprecated(typeToCheck, this))", "+\t\t\t\t\tproblemReporter().deprecatedType(typeToCheck, importReference);"]}], "num": 47586}