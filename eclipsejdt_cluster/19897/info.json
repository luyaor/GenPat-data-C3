{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1a82c137222605ced8fc28e7469ed5fe", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f689d95b9704596842043c73765dd4b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "65014b9edcd64bc51154fcb1b47074eec77a5977", "commitAfterChange": "7109b1b8695adc90efc89b381fbef11f66adc5d7", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " \tpublic void test0044() throws JavaModelException", "signatureAfterChange": " \tpublic void test0044() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Wrong isConstructor\", false, methodBinding.isConstructor());", "-\t\tassertEquals(\"Wrong isDefaultConstructor\", false, methodBinding.isDefaultConstructor());", "-\t\tassertEquals(\"Wrong isDeprecated\", false, methodBinding.isDeprecated());", "-\t\tassertEquals(\"Wrong isGenericMethod\", true, methodBinding.isGenericMethod());", "-\t\tassertEquals(\"Wrong isParameterizedMethod\", false, methodBinding.isParameterizedMethod());", "-\t\tassertEquals(\"Wrong isRawMethod\", false, methodBinding.isRawMethod());", "-\t\tassertEquals(\"Wrong isSynthetic\", false, methodBinding.isSynthetic());", "-\t\tassertEquals(\"Wrong isVarargs\", false, methodBinding.isVarargs());", "+\t\tassertFalse(\"Wrong isConstructor\", methodBinding.isConstructor());", "+\t\tassertFalse(\"Wrong isDefaultConstructor\", methodBinding.isDefaultConstructor());", "+\t\tassertFalse(\"Wrong isDeprecated\", methodBinding.isDeprecated());", "+\t\tassertTrue(\"Wrong isGenericMethod\", methodBinding.isGenericMethod());", "+\t\tassertFalse(\"Wrong isParameterizedMethod\", methodBinding.isParameterizedMethod());", "+\t\tassertFalse(\"Wrong isRawMethod\", methodBinding.isRawMethod());", "+\t\tassertFalse(\"Wrong isSynthetic\", methodBinding.isSynthetic());", "+\t\tassertFalse(\"Wrong isVarargs\", methodBinding.isVarargs());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52510cb6f3ed09d0ee294d59f4f203ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter18Test.java", "commitBeforeChange": "827bc8f09eb6be33972723284a202745477c7656", "commitAfterChange": "481255841603dcf6f5f9da59c807742b7a8cedc1", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic void testBug412726() throws JavaModelException", "signatureAfterChange": " \tpublic void testBug412726() throws JavaModelException", "diff": ["+\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=428526", "-\t\tassertTrue(\"Not a functional interface\", typeBinding.isFunctionalInterface());", "+\t\tassertEquals(\"Incorrect method\", typeBinding.getDeclaredMethods()[0], typeBinding.getFunctionalInterfaceMethod());", "-\t\tassertFalse(\"A Functional interface\", typeBinding.isFunctionalInterface());", "+\t\tassertNull(typeBinding.getFunctionalInterfaceMethod());", "-\t\tassertFalse(\"A Functional interface\", typeBinding.isFunctionalInterface());", "+\t\tassertNull(typeBinding.getFunctionalInterfaceMethod());", "-\t\tassertTrue(\"A Functional interface\", typeBinding.isFunctionalInterface());", "+\t\tIMethodBinding functionalInterfaceMethod = typeBinding.getFunctionalInterfaceMethod();", "+\t\tassertNotNull(functionalInterfaceMethod);", "+\t\tassertEquals(\"Incorrect method\", \"public abstract void bar() \", functionalInterfaceMethod.toString());", "+\t\tassertEquals(typeBinding, functionalInterfaceMethod.getDeclaringClass());", "-\t\tassertFalse(\"A Functional interface\", typeBinding.isFunctionalInterface());", "+\t\tassertNull(typeBinding.getFunctionalInterfaceMethod());"]}], "num": 19897}