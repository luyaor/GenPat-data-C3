{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5a886ea0456689554fbbeaa035c7b969", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c7eb211660858b6ea9968a04def2e27", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tfinal private boolean isDefinitelyNull(int position)", "signatureAfterChange": "  final public boolean isProtectedNonNull(LocalVariableBinding local)", "diff": ["+", "+final public boolean isProtectedNonNull(LocalVariableBinding local) {", "+\tif ((this.tagBits & NULL_FLAG_MASK) == 0 ||", "+\t\t\t(local.type.tagBits & TagBits.IsBaseType) != 0) {", "+\t\treturn false;", "+\t}", "+\tint position;", "+\tif ((position = local.id + this.maxFieldCount) < BitCacheSize) {", "+\t\t// use bits", "+\t\treturn (this.nullAssignmentStatusBit1 &", "+\t\t\t\tthis.nullAssignmentStatusBit2 & (1L << position)) != 0;", "+\t}", "+\t// use extra vector", "+\tif (this.extra == null) {", "+\t\treturn false; // if vector not yet allocated, then not initialized", "+\t}", "+\tint vectorIndex;", "+\tif ((vectorIndex = (position / BitCacheSize) - 1) >= ", "+\t\tthis.extra[0].length) {", "+\t\treturn false; // if not enough room in vector, then not initialized", "+\t}", "+\treturn (this.extra[4][vectorIndex] & ", "+\t\t\tthis.extra[5][vectorIndex] & ", "+\t\t\t(1L << (position % BitCacheSize))) != 0;", "+}", "-\t */", "-\tfinal private boolean isDefinitelyNull(int position) {", "-\t\t", "-\t\t// Dependant of CodeStream.isDefinitelyAssigned(..)", "-\t\t// id is zero-based", "-\t\tif (position < BitCacheSize) {", "-\t\t\treturn (definiteNulls & (1L << position)) != 0; // use bits", "-\t\t}", "-\t\t// use extra vector", "-\t\tif (extraDefiniteNulls == null)", "-\t\t\treturn false; // if vector not yet allocated, then not initialized", "-\t\tint vectorIndex;", "-\t\tif ((vectorIndex = (position / BitCacheSize) - 1) >= extraDefiniteNulls.length)", "-\t\t\treturn false; // if not enough room in vector, then not initialized ", "-\t\treturn ((extraDefiniteNulls[vectorIndex]) & (1L << (position % BitCacheSize))) != 0;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa4316e6ab7fb04cecca212e8fcb30f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tfinal private boolean isDefinitelyNonNull(int position)", "signatureAfterChange": "  final public boolean isProtectedNull(LocalVariableBinding local)", "diff": ["+", "+final public boolean isProtectedNull(LocalVariableBinding local) {", "+\tif ((this.tagBits & NULL_FLAG_MASK) == 0 || ", "+\t\t\t(local.type.tagBits & TagBits.IsBaseType) != 0) {", "+\t\treturn false;", "+\t}", "+\tint position;", "+\tif ((position = local.id + this.maxFieldCount) < BitCacheSize) {", "+\t\t// use bits", "+\t\treturn (~this.nullAssignmentStatusBit1 &", "+\t\t\t\tthis.nullAssignmentStatusBit2 & (1L << position)) != 0;", "+\t}", "+\t// use extra vector", "+\tif (this.extra == null) {", "+\t\treturn false; // if vector not yet allocated, then not initialized", "+\t}", "+\tint vectorIndex;", "+\tif ((vectorIndex = (position / BitCacheSize) - 1) >= ", "+\t\t\tthis.extra[0].length) {", "+\t\treturn false; // if not enough room in vector, then not initialized", "+\t}", "+\treturn (~this.extra[4][vectorIndex] & ", "+\t\t\tthis.extra[5][vectorIndex] &", "+\t\t\t(1L << (position % BitCacheSize))) != 0;", "+}", "-\t */", "-\tfinal private boolean isDefinitelyNonNull(int position) {", "-\t\t", "-\t\t// Dependant of CodeStream.isDefinitelyAssigned(..)", "-\t\t// id is zero-based", "-\t\tif (position < BitCacheSize) {", "-\t\t\treturn (definiteNonNulls & (1L << position)) != 0; // use bits", "-\t\t}", "-\t\t// use extra vector", "-\t\tif (extraDefiniteNonNulls == null)", "-\t\t\treturn false; // if vector not yet allocated, then not initialized", "-\t\tint vectorIndex;", "-\t\tif ((vectorIndex = (position / BitCacheSize) - 1) >= extraDefiniteNonNulls.length)", "-\t\t\treturn false; // if not enough room in vector, then not initialized ", "-\t\treturn ((extraDefiniteNonNulls[vectorIndex]) & (1L << (position % BitCacheSize))) != 0;", "-\t}"]}], "num": 38915}