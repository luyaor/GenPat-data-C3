{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "52b282fe5984ceaa663c4aae73718495", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "913fb515ca22318f54f6c5bf8ab603bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "a8ae4c61c3fd8e7af5944aa40683b300c7cbf9e8", "commitAfterChange": "06d5ad0c6e4971f283c2f47bfc7f9df941ae34e8", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  \tprivate ConstraintFormula[] typeArgumentEqualityConstraints(TypeBinding s, TypeBinding t, boolean isSoft)", "signatureAfterChange": "  \tprivate ConstraintFormula[] typeArgumentEqualityConstraints(TypeBinding s, TypeBinding t, boolean isSoft)", "diff": ["-\t\tList/*<ConstraintFormula>*/ result = new ArrayList(); ", "+\t\tList<ConstraintTypeFormula> result = new ArrayList<ConstraintTypeFormula>(); ", "-\t\t\treturn (ConstraintFormula[])result.toArray(new ConstraintFormula[result.size()]);", "+\t\t\treturn result.toArray(new ConstraintFormula[result.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb8e5d7bb8332414049ca7ed9887952e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "54f3e7caaa3150d871f7d11c1e610492c84f6dde", "commitAfterChange": "f700051affab74804180d3a8bb296f6cabd751a0", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  \tprivate ConstraintFormula[] typeArgumentEqualityConstraints(TypeBinding s, TypeBinding t, boolean isSoft)", "signatureAfterChange": "  \tprivate ConstraintTypeFormula[] typeArgumentEqualityConstraints(TypeBinding s, TypeBinding t, boolean isSoft)", "diff": ["-\tprivate ConstraintFormula[] typeArgumentEqualityConstraints(TypeBinding s, TypeBinding t, boolean isSoft) {", "+\tprivate ConstraintTypeFormula[] typeArgumentEqualityConstraints(TypeBinding s, TypeBinding t, boolean isSoft) {", "-\t\t\treturn result.toArray(new ConstraintFormula[result.size()]);", "+\t\t\treturn result.toArray(new ConstraintTypeFormula[result.size()]);"]}], "num": 21593}