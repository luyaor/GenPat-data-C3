{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "79b4eb7bc252db19a9dc87ea1da74d74", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "507ab8d3ede7d628475008d4ae3b067b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "8db4906e6220f222d10f8f23475147fcad83b2f9", "commitAfterChange": "94200ed39d00137579089415688a6cedf88ddec1", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t \tpublic ReferenceExpression resolveExpressionExpecting(TypeBinding targetType, Scope scope, InferenceContext18 inferenceContext)", "signatureAfterChange": " \t \tpublic ReferenceExpression resolveExpressionExpecting(TypeBinding targetType, Scope scope, InferenceContext18 inferenceContext)", "diff": ["-\t\t\treturn (n == k || n == k + 1) ? this : null;", "+\t\t\t", "+\t\t\tif (!this.haveReceiver && this.isMethodReference() && !this.exactMethodBinding.isStatic()) {", "+\t\t\t\tk++;", "+\t\t\t}", "+\t\t\treturn (n == k) ? this : null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80d7014c54dbb3601c94edb26f36b2b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "3168f520c145ac4dd47d54a812acd1c888ed8ea9", "commitAfterChange": "f200f8d976d56839e6f0d721d690d85cc3afbb03", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\tif (use18specifics && isPolyExpression()) {", "+\t\t\tif (this.expectedType == null)", "+\t\t\t\treturn new PolyTypeBinding(this);", "+\t\t\treturn this.resolvedType = this.expectedType;", "+\t\t}"]}], "num": 38758}