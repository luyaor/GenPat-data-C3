{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f675f608ff8ef0f44114c9293b91dc35", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4acc2c71a57fc7c8f0c195e85e931daf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/OrPattern.java", "commitBeforeChange": "7d7e44bec5cc73af8a58c1959acd433a7f2c6ded", "commitAfterChange": "c9e042ca313baf5eded9aef49e3870dc5764fbfc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic OrPattern(SearchPattern leftPattern, SearchPattern rightPattern)", "signatureAfterChange": "  \tpublic OrPattern(SearchPattern leftPattern, SearchPattern rightPattern)", "diff": ["-\t\t((InternalSearchPattern)this).kind = OR_PATTERN;", "-\t\t((InternalSearchPattern)this).mustResolve = ((InternalSearchPattern) leftPattern).mustResolve || ((InternalSearchPattern) rightPattern).mustResolve;", "+\t\tthis.kind = OR_PATTERN;", "+\t\tthis.mustResolve = leftPattern.mustResolve || rightPattern.mustResolve;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ab9197f6ab36ac5e5e4938cd9e261f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetAllocationExpression.java", "commitBeforeChange": "e6f197651cbdf07261298d2395f1290ce2dfe4c1", "commitAfterChange": "5a485cb39d1ee33622141cf426fac71c4bf93ded", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void generateCode( \tBlockScope currentScope,  \tCodeStream codeStream,  \tboolean valueRequired)", "signatureAfterChange": " public void generateCode( \tBlockScope currentScope,  \tCodeStream codeStream,  \tboolean valueRequired)", "diff": ["-\t\t((CodeSnippetCodeStream) codeStream).generateEmulationForConstructor(currentScope, this.codegenBinding);", "+\t\tcodeStream.generateEmulationForConstructor(currentScope, this.codegenBinding);", "-\t\t\t\t\t((CodeSnippetCodeStream)codeStream).generateObjectWrapperForType(this.codegenBinding.parameters[i]);", "+\t\t\t\t\tcodeStream.generateBoxingConversion(this.codegenBinding.parameters[i].id);", "-\t\t((CodeSnippetCodeStream) codeStream).invokeJavaLangReflectConstructorNewInstance();", "+\t\tcodeStream.invokeJavaLangReflectConstructorNewInstance();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e004c4c1dc5d11d25abb5ab4863197a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "84721977f318065445b04a4a72863a1fb6d0ab9a", "commitAfterChange": "25e018dd1bef83ecf1f969da34694894736e0c56", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic void internalAnalyseCode(FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " \tpublic void internalAnalyseCode(FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\t\t\t\t((Clinit)method).analyseCode(", "+\t\t\t\t\t\tmethod.analyseCode(", "-\t\t\t\t\t\t((ConstructorDeclaration)method).analyseCode(scope, initializerContext, constructorInfo.copy());", "+\t\t\t\t\t\tmethod.analyseCode(scope, initializerContext, constructorInfo.copy());", "-\t\t\t\t\t((MethodDeclaration)method).analyseCode(scope, null, flowInfo.copy());", "+\t\t\t\t\tmethod.analyseCode(scope, null, flowInfo.copy());"]}], "num": 71665}