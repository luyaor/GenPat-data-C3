{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "650904727d81a97ef007683364a06e00", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1036f0c2cbf40c20c33ef508ea5a6e70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocAllocationExpression.java", "commitBeforeChange": "e51fafc624bd4d420e9b8edd29a75dbb131c6fdc", "commitAfterChange": "f40bb68ce877b39e7fa8b3c9def938c4d0ca9994", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["+\t\tSourceTypeBinding sourceTypeBinding = scope.enclosingSourceType();", "-\t\t\tSourceTypeBinding sourceTypeBinding = scope.enclosingSourceType();", "+\t\t\tif (this.resolvedType == null) {", "+\t\t\t\treturn null;", "+\t\t\t}", "+\t\t\tthis.superAccess = sourceTypeBinding.isCompatibleWith(this.resolvedType);", "-\t\tif (this.resolvedType == null)", "-\t\t\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8dc840a1bec2afdba537e13cb3c801e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SwitchStatement.java", "commitBeforeChange": "99a320ba218a453cde9430d003d516f8202cd4ca", "commitAfterChange": "bc5d9b450540dde0f4417c6b10a04ec18aa90f94", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\t\tBlockScope currentScope, \t\t\tFlowContext flowContext, \t\t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\t\tBlockScope currentScope, \t\t\tFlowContext flowContext, \t\t\tFlowInfo flowInfo)", "diff": ["+\t\t\tfinal TypeBinding resolvedTypeBinding = this.expression.resolvedType;", "+\t\t\tif (caseCount > 0 && resolvedTypeBinding.isEnum()) {", "+\t\t\t\tfinal SourceTypeBinding sourceTypeBinding = this.scope.classScope().referenceContext.binding;", "+\t\t\t\tthis.synthetic = sourceTypeBinding.addSyntheticMethodForSwitchEnum(resolvedTypeBinding);", "+\t\t\t}"]}], "num": 58495}