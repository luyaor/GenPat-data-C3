{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "77e562d93a82871be82e6bc5c4f7e54f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27d301a62b2af705aa94fc5961f22ee6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "21b06b1f77b7fda7b2358e6e2d335e77a6ac8125", "commitAfterChange": "b397fbf1ef2684ee73e7617091ec4c7be38fc011", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 47, "signatureBeforeChange": " \tpublic void setGeneratedSourceFolderName( String s )", "signatureAfterChange": " \tprivate void setGenratedSourceFolderName(String newName)", "diff": ["+\t */", "+\tprivate void setGenratedSourceFolderName(String newName){", "+\t\tassert !AptConfig.isEnabled(_aptProject.getJavaProject()) :", "+\t\t\t \"APT is enabled for \" + _aptProject.getJavaProject().getElementName(); //$NON-NLS-1$", "+\t\tif( newName == null || newName.length() == 0 )", "+\t\t\tthrow new IllegalStateException(\"[\" + newName + \"] not a valid name for generated source folder \");  //$NON-NLS-1$//$NON-NLS-2$", "+\t\tsynchronized (this) {", "+\t\t\t_generatedSourceFolderName = newName;", "+\t\t}", "+\t}", "-\tpublic void setGeneratedSourceFolderName( String s ) ", "-\t\tif ( s == null || s.length() == 0 || s.equals( getGeneratedSourceFolderName() ) )", "-\t\tfinal IFolder srcFolder;", "-\t\t\t_generatedSourceFolderName = s;", "-\t\t\t// save _generatedSrcFolder off to avoid race conditions"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8bda62f939053746f88015350fdac4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "6cb413dbd992ad73f847d7b4e14e78f1406fa2fc", "commitAfterChange": "8659b871eae5c2008485cfb120ce2c8f8ecbfe04", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void generatedFileDeleted( IFile generatedFile,  IProgressMonitor progressMonitor ) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic void addGeneratedFileDependency(IFile parentFile, IFile generatedFile)", "diff": ["+\t */", "+\tpublic void addGeneratedFileDependency(IFile parentFile, IFile generatedFile)", "+\t\taddBuiltFileToMaps(parentFile, generatedFile);", "+\t}", "-\tpublic void generatedFileDeleted( IFile generatedFile,  IProgressMonitor progressMonitor )", "-\t\tthrows JavaModelException", "-\t\tSet<IFile> parentFiles;", "-\t\tsynchronized( this )", "-\t\t{", "-\t\t\tparentFiles = _generatedFile2ParentFiles.get( generatedFile );", "-\t\t\tif ( parentFiles == null || parentFiles.isEmpty() )", "-\t\t\t\treturn;", "-\t\t\t", "-\t\t\t// make a copy to prevent race conditions", "-\t\t\tparentFiles = new HashSet<IFile>( parentFiles );", "-\t\t", "-\t\tfor ( IFile parentFile : parentFiles )", "-\t\t{", "-\t\t\tremoveFromWorkingCopyMaps( generatedFile, parentFile );", "-\t\t\tremoveFromFileMaps( generatedFile, parentFile );", "-\t\t}"]}], "num": 52564}