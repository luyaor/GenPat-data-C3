{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ee42adc133002984d4fdde2f65c6148e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06f7e42731900efea583603e39982b1e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedResourceChangeListener.java", "commitBeforeChange": "3c755125fb6d43834cd7c6dfb58024a6d397b566", "commitAfterChange": "790443c8ea7a17aa25cb0c35c01196da99d52e04", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t\tpublic boolean visit(IResourceDelta delta) throws CoreException", "signatureAfterChange": " \t\tpublic boolean visit(IResourceDelta delta) throws CoreException", "diff": ["-\t\t\t\t\t\tgfm.generatedSourceFolderDeleted(_removedProjects.contains(project));", "-\t\t\t\t\t\t_addGenFolderTo.add(project);", "+\t\t\t\t\t\tif( !_removedProjects.contains(project) ){\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tgfm.generatedSourceFolderDeleted();", "+\t\t\t\t\t\t\t_addGenFolderTo.add(project);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\t// if the project is already closed or in the process of being", "+\t\t\t\t\t\t// deleted, will ignore this deletion since we cannot correct ", "+\t\t\t\t\t\t// the classpath anyways.", "-\t\t\t\tif( proj.isOpen() && proj.exists() && proj.hasNature(JavaCore.NATURE_ID) ){", "+\t\t\t\tif( canUpdate(proj) ){", "-\t\t\t\t}", "+\t\t\t\t}\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f77956d9bd07b3b0cabaf581ec34adaa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "98fa84ee39c41fd289fab405c645f226d27b7c68", "commitAfterChange": "f85e940f5bc47c34840682e379f1da2263835e88", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "  \tprivate void validateClasspaths(IResourceDelta delta, HashSet affectedProjects)", "signatureAfterChange": "  \tprivate void validateClasspaths(IResourceDelta delta, HashSet affectedProjects)", "diff": ["-\t\t\t\t\t\t\t// project opened or closed: remember  project and its dependents", "-\t\t\t\t\t\t\taffectedProjects.add(project.getFullPath());", "+\t\t\t\t\t\t\t// project opened or closed", "+\t\t\t\t\t\t\taffectedProjects.add(project.getFullPath());", "-\t\t\t\t\t\t\tif (wasJavaProject && !isJavaProject) {", "-\t\t\t\t\t\t\t\t// project no longer has Java nature, discard Java related obsolete markers", "+\t\t\t\t\t\t\tif (wasJavaProject  != isJavaProject) {", "+\t\t\t\t\t\t\t\t// project gained or lost Java nature", "-\t\t\t\t\t\t\t\tthis.state.addClasspathValidation(javaProject); ", "-", "+\t\t\t\t\t\t\t\tthis.state.addClasspathValidation(javaProject); // add/remove classpath markers", "-\t\t\t\t\t\t\t} if (isJavaProject) {", "-\t\t\t\t\t\t\t\t// check if all entries exist", "-\t\t\t\t\t\t\t\tJavaProject javaProject = (JavaProject)JavaCore.create(project);", "-\t\t\t\t\t\t\t\tthis.state.addClasspathValidation(javaProject); ", "-\t\t\t\t\t\t} else if (isJavaProject) {", "-\t\t\t\t\t\t\t// check if all entries exist", "-\t\t\t\t\t\t\tJavaProject javaProject = (JavaProject)JavaCore.create(project);", "-\t\t\t\t\t\t\tthis.state.addClasspathValidation(javaProject); ", "-\t\t\t\t\taffectedProjects.add(file.getProject().getFullPath());", "-\t\t\t\t\tthis.state.addClasspathValidation(javaProject); ", "+\t\t\t\t\tthis.state.addClasspathValidation(javaProject);", "+\t\t\t\t\taffectedProjects.add(file.getProject().getFullPath());"]}], "num": 11987}