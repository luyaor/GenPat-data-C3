{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "677e49926b9d508134c79483ae88f1d8", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e2150cf776267446dd91482812d2726", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "67da1da15e9afbcd33679f07597c706e7915cf4a", "commitAfterChange": "027fccb2c17e0f0d2b28705c6704af10fc8ce0aa", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 25, "signatureBeforeChange": " protected void consumeToken(int token)", "signatureAfterChange": " protected void consumeToken(int token)", "diff": ["-\tif ((this.inMethodStack[this.inMethodPtr] || this.inFieldInitializationStack[this.inFieldInitializationPtr]) && token == TokenNameLPAREN) {", "-\t\tswitch (this.previousToken) {", "-\t\t\tcase TokenNameIdentifier:", "-\t\t\t\tthis.pushOnSelectorStack(this.identifierPtr);", "+\tif (isInsideMethod() || isInsideFieldInitialization()) {", "+\t\tswitch (token) {", "+\t\t\tcase TokenNameLPAREN :", "+\t\t\t\tswitch (this.previousToken) {", "+\t\t\t\t\tcase TokenNameIdentifier:", "+\t\t\t\t\t\tthis.pushOnElementStack(K_SELECTOR, this.identifierPtr);", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase TokenNamethis: // explicit constructor invocation, eg. this(1, 2)", "+\t\t\t\t\t\tthis.pushOnElementStack(K_SELECTOR, THIS_CONSTRUCTOR);", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase TokenNamesuper: // explicit constructor invocation, eg. super(1, 2)", "+\t\t\t\t\t\tthis.pushOnElementStack(K_SELECTOR, SUPER_CONSTRUCTOR);", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t}", "-\t\t\tcase TokenNamethis: // explicit constructor invocation, eg. this(1, 2)", "-\t\t\t\tthis.pushOnSelectorStack(THIS_CONSTRUCTOR);", "-\t\t\t\tbreak;", "-\t\t\tcase TokenNamesuper: // explicit constructor invocation, eg. super(1, 2)", "-\t\t\t\tthis.pushOnSelectorStack(SUPER_CONSTRUCTOR);", "+\t\t}", "+\t} else {", "+\t\tswitch (token) {", "+\t\t\tcase TokenNameLBRACE :", "+\t\t\t\tpopElement(K_TYPE_DELIMITER);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffe94e4f8906586fd59d829a20683597", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "67da1da15e9afbcd33679f07597c706e7915cf4a", "commitAfterChange": "027fccb2c17e0f0d2b28705c6704af10fc8ce0aa", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " private boolean checkClassInstanceCreation()", "signatureAfterChange": " private boolean checkClassInstanceCreation()", "diff": ["-\tif (this.betweenNewAndLeftBraket) {", "+\tif (topKnownElementKind(COMPLETION_OR_ASSIST_PARSER) == K_BETWEEN_NEW_AND_LEFT_BRACKET) {", "-\t\tif(this.throwBracketDepth != -1 && this.throwBracketDepth == this.bracketDepth) {", "-\t\t\tthis.nextTypeReferenceIsException = true;\t", "+\t\tTypeReference type;", "+\t\tif (topKnownElementKind(COMPLETION_OR_ASSIST_PARSER, 1) == K_INSIDE_THROW_STATEMENT", "+\t\t\t&& topKnownElementInfo(COMPLETION_OR_ASSIST_PARSER, 1) == this.bracketDepth) {", "+\t\t\tpushOnElementStack(K_NEXT_TYPEREF_IS_EXCEPTION);", "+\t\t\ttype = getTypeReference(0);", "+\t\t\tpopElement(K_NEXT_TYPEREF_IS_EXCEPTION);", "+\t\t} else {", "+\t\t\ttype = getTypeReference(0);", "-\t\tTypeReference type = getTypeReference(0);", "-\t\tthis.nextTypeReferenceIsException = false;"]}], "num": 43004}