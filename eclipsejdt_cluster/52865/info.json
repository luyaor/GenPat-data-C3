{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "168989ee84944bb46caaba71773c524e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "768bed14c66c9cd2c5c6d0ca2f0ff2a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "a05a975af5c0bba95d0d398d2bd3a368d9cd616f", "commitAfterChange": "3a562aaf09f9f323b583086b80b4683378886606", "methodNumberBeforeChange": 210, "methodNumberAfterChange": 210, "signatureBeforeChange": " final public void ldc(float constant)", "signatureAfterChange": " final public void ldc(float constant)", "diff": ["-\t\ttry {", "-\t\t\tposition++;", "-\t\t\tbCodeStream[classFileOffset++] = OPC_ldc_w;", "-\t\t} catch (IndexOutOfBoundsException e) {", "-\t\t\tresizeByteArray(OPC_ldc_w);", "+\t\tif (classFileOffset + 2 >= bCodeStream.length) {", "+\t\t\tresizeByteArray();", "+\t\tposition++;", "+\t\tbCodeStream[classFileOffset++] = OPC_ldc_w;", "-\t\ttry {", "-\t\t\tposition++;", "-\t\t\tbCodeStream[classFileOffset++] = OPC_ldc;", "-\t\t} catch (IndexOutOfBoundsException e) {", "-\t\t\tresizeByteArray(OPC_ldc);", "+\t\tif (classFileOffset + 1 >= bCodeStream.length) {", "+\t\t\tresizeByteArray();", "-\t\twriteUnsignedByte(index);", "+\t\tposition += 2;", "+\t\tbCodeStream[classFileOffset++] = OPC_ldc;", "+\t\tbCodeStream[classFileOffset++] = (byte) index;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee3660efe852d1267f380a7f75a72ce2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "a05a975af5c0bba95d0d398d2bd3a368d9cd616f", "commitAfterChange": "3a562aaf09f9f323b583086b80b4683378886606", "methodNumberBeforeChange": 211, "methodNumberAfterChange": 211, "signatureBeforeChange": " final public void ldc(int constant)", "signatureAfterChange": " final public void ldc(int constant)", "diff": ["-\t\ttry {", "-\t\t\tposition++;", "-\t\t\tbCodeStream[classFileOffset++] = OPC_ldc_w;", "-\t\t} catch (IndexOutOfBoundsException e) {", "-\t\t\tresizeByteArray(OPC_ldc_w);", "+\t\tif (classFileOffset + 2 >= bCodeStream.length) {", "+\t\t\tresizeByteArray();", "+\t\tposition++;", "+\t\tbCodeStream[classFileOffset++] = OPC_ldc_w;", "-\t\ttry {", "-\t\t\tposition++;", "-\t\t\tbCodeStream[classFileOffset++] = OPC_ldc;", "-\t\t} catch (IndexOutOfBoundsException e) {", "-\t\t\tresizeByteArray(OPC_ldc);", "+\t\tif (classFileOffset + 1 >= bCodeStream.length) {", "+\t\t\tresizeByteArray();", "-\t\twriteUnsignedByte(index);", "+\t\tposition += 2;", "+\t\tbCodeStream[classFileOffset++] = OPC_ldc;", "+\t\tbCodeStream[classFileOffset++] = (byte) index;"]}], "num": 52865}