{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "466bd1b3ccc41587a8bb0f2c9825578f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d923f77aae71f2e903c9e4f1123fb09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "368e7b2744bb4a520a4dfc9ab8183508aa7c626d", "commitAfterChange": "93b70485a331557e06c4f378f7086f6e4f12616a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprotected void handleInternalException( \t\tAbortCompilation abortException, \t\tCompilationUnitDeclaration unit)", "signatureAfterChange": " \tprotected void handleInternalException( \t\tAbortCompilation abortException, \t\tCompilationUnitDeclaration unit)", "diff": ["-\t\t\t/* distant problem which could not be reported back there */", "-\t\t\tif (abortException.problemId != 0) {", "-\t\t\t\tresult", "-\t\t\t\t\t.record(", "-\t\t\t\t\t\tproblemReporter", "-\t\t\t\t\t\t.createProblem(", "-\t\t\t\t\t\t\tresult.getFileName(),", "-\t\t\t\t\t\t\tabortException.problemId,", "-\t\t\t\t\t\t\tabortException.problemArguments,", "-\t\t\t\t\t\t\tabortException.messageArguments,", "-\t\t\t\t\t\t\tError, // severity", "-\t\t\t\t\t\t\t0, // source start", "-\t\t\t\t\t\t\t0, // source end", "-\t\t\t\t\t\t\t0, // line number\t\t", "-\t\t\t\t\t\t\tunit,", "-\t\t\t\t\t\t\tresult),", "-\t\t\t\t\t\tunit);\t\t\t\t", "+\t\t\t/* distant problem which could not be reported back there? */", "+\t\t\tif (abortException.problem != null) {", "+\t\t\t\trecordDistantProblem: {", "+\t\t\t\t\tIProblem distantProblem = abortException.problem;", "+\t\t\t\t\tIProblem[] knownProblems = result.problems;", "+\t\t\t\t\tfor (int i = 0; i < result.problemCount; i++) {", "+\t\t\t\t\t\tif (knownProblems[i] == distantProblem) { // already recorded", "+\t\t\t\t\t\t\tbreak recordDistantProblem;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tif (distantProblem instanceof DefaultProblem) { // fixup filename TODO (philippe) should improve API to make this official", "+\t\t\t\t\t\t((DefaultProblem) distantProblem).setOriginatingFileName(result.getFileName());", "+\t\t\t\t\t}", "+\t\t\t\t\tresult\t.record(distantProblem, unit);", "+\t\t\t\t}", "-\t\t\t/*", "-\t\t\tif (abortException.problemId != 0){ ", "-\t\t\t\tIProblem problem =", "-\t\t\t\t\tproblemReporter.createProblem(", "-\t\t\t\t\t\t\"???\".toCharArray(),", "-\t\t\t\t\t\tabortException.problemId, ", "-\t\t\t\t\t\tabortException.problemArguments, ", "-\t\t\t\t\t\tError, // severity", "-\t\t\t\t\t\t0, // source start", "-\t\t\t\t\t\t0, // source end", "-\t\t\t\t\t\t0); // line number", "-\t\t\t\tSystem.out.println(problem.getMessage());", "-\t\t\t}", "-\t\t\t*/"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfe45c6f4b88bc75306d9613c865fb7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "f8406402dab63bd844517051ef5aaa1b160d2392", "commitAfterChange": "5bd6b9d7331a9e7fe82d427994d62e0af1821389", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t\tpublic CategorizedProblem createProblem( \t\t\tchar[] originatingFileName, \t\t\tint problemId, \t\t\tString[] problemArguments, \t\t\tString[] messageArguments, \t\t\tint severity, \t\t\tint start, \t\t\tint end, \t\t\tint lineNumber, \t\t\tint columnNumber)", "signatureAfterChange": "  \t\tpublic CategorizedProblem createProblem( \t\t\tchar[] originatingFileName, \t\t\tint problemId, \t\t\tString[] problemArguments, \t\t\tString[] messageArguments, \t\t\tint severity, \t\t\tint start, \t\t\tint end, \t\t\tint lineNumber, \t\t\tint columnNumber)", "diff": ["-\t\t\tif (this.checkProblems && !this.hasProblems) {", "-\t\t\t\tif (id == IProblem.UsingDeprecatedType) {", "-\t\t\t\t\tthis.hasProblems =", "-\t\t\t\t\t\tCompletionEngine.this.options.checkDeprecation;", "-\t\t\t\t} else if (id == IProblem.NotVisibleType) {", "-\t\t\t\t\tthis.hasProblems =", "-\t\t\t\t\t\tCompletionEngine.this.options.checkVisibility;", "-\t\t\t\t} else if (id == IProblem.ForbiddenReference) {", "-\t\t\t\t\tthis.hasProblems =", "-\t\t\t\t\t\tCompletionEngine.this.options.checkForbiddenReference;", "-\t\t\t\t} else if (id == IProblem.DiscouragedReference) {", "-\t\t\t\t\tthis.hasProblems =", "-\t\t\t\t\t\tCompletionEngine.this.options.checkDiscouragedReference;", "-\t\t\t\t} else {", "-\t\t\t\t\tthis.hasProblems = true;", "+\t\t\tif (this.checkProblems && !this.hasForbiddenProblems) {", "+\t\t\t\tswitch (id) {", "+\t\t\t\t\tcase IProblem.UsingDeprecatedType:", "+\t\t\t\t\t\tthis.hasForbiddenProblems =", "+\t\t\t\t\t\t\tCompletionEngine.this.options.checkDeprecation;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase IProblem.NotVisibleType:", "+\t\t\t\t\t\tthis.hasForbiddenProblems =", "+\t\t\t\t\t\t\tCompletionEngine.this.options.checkVisibility;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase IProblem.ForbiddenReference:", "+\t\t\t\t\t\tthis.hasForbiddenProblems =", "+\t\t\t\t\t\t\tCompletionEngine.this.options.checkForbiddenReference;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase IProblem.DiscouragedReference:", "+\t\t\t\t\t\tthis.hasForbiddenProblems =", "+\t\t\t\t\t\t\tCompletionEngine.this.options.checkDiscouragedReference;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tdefault:", "+\t\t\t\t\t\tif ((severity & ProblemSeverities.Optional) != 0) {", "+\t\t\t\t\t\t\tthis.hasAllowedProblems = true;", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tthis.hasForbiddenProblems = true;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\t", "+\t\t\t\t\t\tbreak;", "+\t\t}"]}], "num": 25420}