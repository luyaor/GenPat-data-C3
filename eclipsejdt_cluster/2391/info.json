{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "07885489db3671f87d7f43eb8fa4af20", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37f7876919154e3a581b0359912f4a2c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTVisitorTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 215, "methodNumberAfterChange": 256, "signatureBeforeChange": " \tpublic void testVariableDeclarationStatement()", "signatureAfterChange": " \tpublic void testVariableDeclarationStatement()", "diff": ["+\t\tif (ast.apiLevel() >= AST.LEVEL_3_0) {", "+\t\t\tx1.modifiers().add(MOD1);", "+\t\t\tx1.modifiers().add(MOD2);", "+\t\t}", "-\t\tassertTrue(result.equals(\"[(sVD\"+T1S+W1S+W2S+\"sVD)]\")); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "+\t\t\tassertTrue(result.equals(\"[(sVD\"+T1S+W1S+W2S+\"sVD)]\")); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t} else {", "+\t\t\tassertTrue(result.equals(\"[(sVD\"+MOD1S+MOD2S+T1S+W1S+W2S+\"sVD)]\")); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "989b586a19913c02f60a548c708775b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTVisitorTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 214, "methodNumberAfterChange": 255, "signatureBeforeChange": " \tpublic void testVariableDeclarationExpression()", "signatureAfterChange": " \tpublic void testVariableDeclarationExpression()", "diff": ["+\t\tif (ast.apiLevel() >= AST.LEVEL_3_0) {", "+\t\t\tx1.modifiers().add(MOD1);", "+\t\t\tx1.modifiers().add(MOD2);", "+\t\t}", "-\t\tassertTrue(result.equals(\"[(eVD\"+T1S+W1S+W2S+\"eVD)]\")); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "+\t\t\tassertTrue(result.equals(\"[(eVD\"+T1S+W1S+W2S+\"eVD)]\")); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t} else {", "+\t\t\tassertTrue(result.equals(\"[(eVD\"+MOD1S+MOD2S+T1S+W1S+W2S+\"eVD)]\")); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c31bfde80ad1c49b8a7c9f6dbb9ecfb2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTVisitorTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 181, "methodNumberAfterChange": 215, "signatureBeforeChange": " \tpublic void testInitializer()", "signatureAfterChange": " \tpublic void testInitializer()", "diff": ["+\t\tif (ast.apiLevel() >= AST.LEVEL_3_0) {", "+\t\t\tx1.modifiers().add(MOD1);", "+\t\t\tx1.modifiers().add(MOD2);", "+\t\t}", "-\t\tassertTrue(result.equals(\"[(IN\"+JD1S+B1S+\"IN)]\")); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "+\t\t\tassertTrue(result.equals(\"[(IN\"+JD1S+B1S+\"IN)]\")); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t} else {", "+\t\t\tassertTrue(result.equals(\"[(IN\"+JD1S+MOD1S+MOD2S+B1S+\"IN)]\")); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7fa7ebe0d32b37fc1005ba0db8fb542", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTVisitorTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 192, "methodNumberAfterChange": 233, "signatureBeforeChange": " \tpublic void testPackageDeclaration()", "signatureAfterChange": " \tpublic void testPackageDeclaration()", "diff": ["+\t\tif (ast.apiLevel() >= AST.LEVEL_3_0) {", "+\t\t\tx1.annotations().add(ANO1);", "+\t\t\tx1.annotations().add(ANO2);", "+\t\t}", "-\t\tassertTrue(result.equals(\"[(PD\"+N1S+\"PD)]\")); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "+\t\t\tassertTrue(result.equals(\"[(PD\"+N1S+\"PD)]\")); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t} else {", "+\t\t\tassertTrue(result.equals(\"[(PD\"+ANO1S+ANO2S+N1S+\"PD)]\")); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e401e92b3b75bccc801d842f1f7d1990", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTVisitorTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 175, "methodNumberAfterChange": 208, "signatureBeforeChange": " \tpublic void testFieldDeclaration()", "signatureAfterChange": " \tpublic void testFieldDeclaration()", "diff": ["+\t\tif (ast.apiLevel() >= AST.LEVEL_3_0) {", "+\t\t\tx1.modifiers().add(MOD1);", "+\t\t\tx1.modifiers().add(MOD2);", "+\t\t}", "-\t\tassertTrue(result.equals(\"[(FD\"+JD1S+T1S+W1S+W2S+\"FD)]\")); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "+\t\t\tassertTrue(result.equals(\"[(FD\"+JD1S+T1S+W1S+W2S+\"FD)]\")); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t} else {", "+\t\t\tassertTrue(result.equals(\"[(FD\"+JD1S+MOD1S+MOD2S+T1S+W1S+W2S+\"FD)]\")); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t}"]}], "num": 2391}