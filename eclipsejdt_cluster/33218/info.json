{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fea3d3f267d095a64caffcfe2f603b69", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18d5a52a3f1932cb2b6f1ffe8470b062", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "f595c3df6cbb40a33fa3de2980da6860a9a3730f", "commitAfterChange": "665fa70c145e3460af8c3efab89c50489feb17d0", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": " \tpublic static void setOptions(Hashtable newOptions)", "signatureAfterChange": " \tpublic static void setOptions(Hashtable newOptions)", "diff": ["-\t\t", "-\t\ttry {", "-\t\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "-\t\t\tIEclipsePreferences defaultPreferences = manager.getDefaultPreferences();", "-\t\t\tIEclipsePreferences instancePreferences = manager.getInstancePreferences();", "-", "-\t\t\tif (newOptions == null){", "-\t\t\t\tinstancePreferences.clear();", "-\t\t\t} else {", "-\t\t\t\tEnumeration keys = newOptions.keys();", "-\t\t\t\twhile (keys.hasMoreElements()){", "-\t\t\t\t\tString key = (String)keys.nextElement();", "-\t\t\t\t\tif (!JavaModelManager.getJavaModelManager().optionNames.contains(key)) continue; // unrecognized option", "-\t\t\t\t\tif (key.equals(CORE_ENCODING)) continue; // skipped, contributed by resource prefs", "-\t\t\t\t\tString value = (String)newOptions.get(key);", "-\t\t\t\t\tString defaultValue = defaultPreferences.get(key, null);", "-\t\t\t\t\tif (defaultValue != null && defaultValue.equals(value)) {", "-\t\t\t\t\t\tinstancePreferences.remove(key);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tinstancePreferences.put(key, value);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-", "-\t\t\t// persist options", "-\t\t\tinstancePreferences.flush();", "-\t\t\t", "-\t\t\t// update cache", "-\t\t\toptionsCache = newOptions==null ? null : new Hashtable(newOptions);", "-\t\t} catch (BackingStoreException e) {", "-\t\t\t// ignore", "-\t\t}", "+\t\tJavaModelManager.getJavaModelManager().setOptions(newOptions);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67890a312071d25d0116529400b6fcd2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 63, "signatureBeforeChange": " \tpublic static void setOptions(Hashtable newOptions)", "signatureAfterChange": " \tpublic static void setOptions(Hashtable newOptions)", "diff": ["-\t\t// see #initializeDefaultPluginPreferences() for changing default settings", "-\t\tPreferences preferences = getPlugin().getPluginPreferences();", "+\t\ttry {", "+\t\t\tIEclipsePreferences defaultPreferences = getDefaultPreferences();", "+\t\t\tIEclipsePreferences instancePreferences = getInstancePreferences();", "-\t\tif (newOptions == null){", "-\t\t\tnewOptions = JavaCore.getDefaultOptions();", "-\t\t}", "-\t\tEnumeration keys = newOptions.keys();", "-\t\twhile (keys.hasMoreElements()){", "-\t\t\tString key = (String)keys.nextElement();", "-\t\t\tif (!JavaModelManager.getJavaModelManager().optionNames.contains(key)) continue; // unrecognized option", "-\t\t\tif (key.equals(CORE_ENCODING)) continue; // skipped, contributed by resource prefs", "-\t\t\tString value = (String)newOptions.get(key);", "-\t\t\tpreferences.setValue(key, value);", "-\t\t}", "+\t\t\tif (newOptions == null){", "+\t\t\t\tinstancePreferences.clear();", "+\t\t\t} else {", "+\t\t\t\tEnumeration keys = newOptions.keys();", "+\t\t\t\twhile (keys.hasMoreElements()){", "+\t\t\t\t\tString key = (String)keys.nextElement();", "+\t\t\t\t\tif (!JavaModelManager.getJavaModelManager().optionNames.contains(key)) continue; // unrecognized option", "+\t\t\t\t\tif (key.equals(CORE_ENCODING)) continue; // skipped, contributed by resource prefs", "+\t\t\t\t\tString value = (String)newOptions.get(key);", "+\t\t\t\t\tString defaultValue = defaultPreferences.get(key, null);", "+\t\t\t\t\tif (defaultValue != null && defaultValue.equals(value)) {", "+\t\t\t\t\t\tinstancePreferences.remove(key);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tinstancePreferences.put(key, value);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "-\t\t// persist options", "-\t\tgetPlugin().savePluginPreferences();", "+\t\t\t// persist options", "+\t\t\tinstancePreferences.flush();", "+\t\t} catch (BackingStoreException e) {", "+\t\t\t// fails silently", "+\t\t}"]}], "num": 33218}