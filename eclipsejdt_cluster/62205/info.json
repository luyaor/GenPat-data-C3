{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d81f516198f402a757c45a6a200f95ec", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37d0b9748695052c090e38a6e9424ce3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceTests.java", "commitBeforeChange": "3916c67b0128c74e08a07f109332d68e11705964", "commitAfterChange": "db24d1d0025b319685ad3bf80253e7a07fb708a2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprivate void setUpFullSourceWorkspace() throws IOException, CoreException", "signatureAfterChange": " \tprivate void setUpFullSourceWorkspace() throws IOException, CoreException", "diff": ["-", "-\t\t// Get projects in workspace (save projects creation on local boxes...)", "+\t\t", "+\t\t// Get wksp info", "-\t\tIProject[] projects = workspaceRoot.getProjects();", "-\t\tint projectsLength = projects.length;", "+\t\tString targetWorkspacePath = workspaceRoot.getLocation().toFile().getCanonicalPath();", "-\t\t// If no projects then unzip file", "-\t\tif (projectsLength == 0) {", "-\t\t\tprojects = createFullSourceWorkspace();", "-\t\t\tprojectsLength = projects.length;", "+\t\t// Get projects directories", "+\t\tFile wkspDir = new File(targetWorkspacePath);", "+\t\tFullSourceProjectsFilter filter = new FullSourceProjectsFilter();", "+\t\tFile[] directories = wkspDir.listFiles(filter);", "+\t\tlong start = System.currentTimeMillis();", "+\t\tint dirLength = directories.length;", "+\t\tif (dirLength != 62) {", "+\t\t\tString fullSourceZipPath = getPluginDirectoryPath() + File.separator + \"full-source-R3_0.zip\";", "+\t\t\tSystem.out.println(\"Unzipping \"+fullSourceZipPath);", "+\t\t\tSystem.out.print(\"\tin \"+targetWorkspacePath+\"...\");", "+\t\t\tUtil.unzip(fullSourceZipPath, targetWorkspacePath);", "+\t\t\tSystem.out.println(\" done in \"+(System.currentTimeMillis()-start)+\"ms.\");", "-\t\tfor (int i = 0; i < projectsLength; i++) {", "-\t\t\tENV.addProject(projects[i]);", "+\t\tSystem.out.print(\"Create and open projects in environment...\");", "+\t\tstart = System.currentTimeMillis();", "+\t\tfor (int i = 0; i < dirLength; i++) {", "+\t\t\tString dirName = directories[i].getName();", "+\t\t\tIProject project = workspaceRoot.getProject(dirName);", "+\t\t\tif (project.exists()) {", "+\t\t\t\tENV.addProject(project);", "+\t\t\t} else {", "+\t\t\t\tENV.addProject(dirName);", "+\t\t\t}", "+\t\tSystem.out.println(\"(\"+(System.currentTimeMillis()-start)+\"ms)\");", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "803af9775934f074dfdc72592d3da992", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "695a67720795724edf63110535f6cee8bf864a73", "commitAfterChange": "af73ce6125bda1c56ea682bc25396c8af7246489", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": " \tpublic void setupExternalJCL() throws IOException", "signatureAfterChange": " \tpublic void setupExternalJCL(String jclName) throws IOException", "diff": ["-\t */", "-\tpublic void setupExternalJCL() throws IOException {", "-\t\tif (EXTERNAL_JAR_DIR_PATH != null) return;", "-\t\tEXTERNAL_JAR_DIR_PATH = getWorkspaceRoot().getLocation().toFile().getParentFile().getCanonicalPath();", "-\t\tsetupExternalJCL(\"jclMin\");", "-\t\tsetupExternalJCL(\"jclMin1.5\");", "-\t}", "+\t\tif (EXTERNAL_JAR_DIR_PATH == null)", "+\t\t\tEXTERNAL_JAR_DIR_PATH = getWorkspaceRoot().getLocation().toFile().getParentFile().getCanonicalPath();"]}], "num": 62205}