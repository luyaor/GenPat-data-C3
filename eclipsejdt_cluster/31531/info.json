{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b970c8b33aaca44fd5b9939f87f0b281", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e23db29d578338eec8b1e389f38480f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "015c66459c41ce714c2afab061dda99760bcb04e", "commitAfterChange": "cc1df04d2a7670c32d491fa2cc726f1c92c0a8b6", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tprivate void removeMissingFactoryJars(IJavaProject jproj, Map<FactoryContainer, Attributes> containers)", "signatureAfterChange": " \tprivate void removeProjectFromResourceMap(IJavaProject jproj)", "diff": ["-\tprivate void removeMissingFactoryJars(IJavaProject jproj, Map<FactoryContainer, Attributes> containers) {", "-\t\tIterator<Entry<FactoryContainer, Attributes>> i = containers.entrySet().iterator(); ", "+\tprivate void removeProjectFromResourceMap(IJavaProject jproj) {", "+\t\tIterator<Entry<String, Set<IJavaProject>>> i = _container2Project.entrySet().iterator();", "-\t\t\tFactoryContainer fc = i.next().getKey();", "-\t\t\tif (fc instanceof JarFactoryContainer) {", "-\t\t\t\tFile file = ((JarFactoryContainer)fc).getJarFile();", "-\t\t\t\tif (!file.exists()) {", "-\t\t\t\t\t// Remove the jar from the list", "-\t\t\t\t\ti.remove();", "-\t\t\t\t\t// Add a marker", "-\t\t\t\t\treportMissingFactoryJar( file.toString(), jproj );", "-\t\t\t\t}", "+\t\t\tEntry<String, Set<IJavaProject>> e = i.next();", "+\t\t\tSet<IJavaProject> s = e.getValue();", "+\t\t\ts.remove(jproj);", "+\t\t\t// Remove any resulting orphaned resources.", "+\t\t\tif (s.isEmpty()) {", "+\t\t\t\ti.remove();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "538483b09bca91afc3cdcef37c35091e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "9ea1cdb7f6499dc7c1092eeaa0da392a32816565", "commitAfterChange": "fb03590c09a39a7f190240bf883ad18bc23e5222", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprivate void removeProjectFromResourceMap(IJavaProject jproj)", "signatureAfterChange": " \tprivate void removeProjectFromResourceMap(IJavaProject jproj)", "diff": ["-\t\tIterator<Entry<String, Set<IJavaProject>>> i = _container2Project.entrySet().iterator();", "-\t\twhile (i.hasNext()) {", "-\t\t\tEntry<String, Set<IJavaProject>> e = i.next();", "-\t\t\tSet<IJavaProject> s = e.getValue();", "-\t\t\ts.remove(jproj);", "-\t\t\t// Remove any resulting orphaned resources.", "-\t\t\tif (s.isEmpty()) {", "-\t\t\t\ti.remove();", "+\t\tsynchronized (cacheMutex) {", "+\t\t\tIterator<Entry<String, Set<IJavaProject>>> i = _container2Project.entrySet().iterator();", "+\t\t\twhile (i.hasNext()) {", "+\t\t\t\tEntry<String, Set<IJavaProject>> e = i.next();", "+\t\t\t\tSet<IJavaProject> s = e.getValue();", "+\t\t\t\ts.remove(jproj);", "+\t\t\t\t// Remove any resulting orphaned resources.", "+\t\t\t\tif (s.isEmpty()) {", "+\t\t\t\t\ti.remove();", "+\t\t\t\t}"]}], "num": 31531}