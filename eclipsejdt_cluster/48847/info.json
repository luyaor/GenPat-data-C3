{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c018492f669a51b7968ea910d662346", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "743ea1735a8ab25f8dc68b65757ecf5b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "82e38714e3cc40f0c2983bf6e0392b987ccce94e", "commitAfterChange": "6f52e55dfcdb3767d3e0659e7f3cf8875e7f6b50", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 116, "signatureBeforeChange": "  \tpublic void ensureSpaceBeforeReplace(ASTNode node, ChildPropertyDescriptor desc, int offset, int numTokenBefore)", "signatureAfterChange": " \t \tpublic void ensureSpaceBeforeReplace(ASTNode node)", "diff": ["-", "-\tpublic void ensureSpaceBeforeReplace(ASTNode node, ChildPropertyDescriptor desc, int offset, int numTokenBefore) {", "-\t\t// bug 103970", "-\t\tif (getChangeKind(node, desc) == RewriteEvent.REPLACED) {", "-\t\t\ttry {", "-\t\t\t\twhile (numTokenBefore > 0) {", "-\t\t\t\t\toffset= getScanner().getNextEndOffset(offset, true);", "-\t\t\t\t\tnumTokenBefore--;", "+\t", "+\tpublic void ensureSpaceBeforeReplace(ASTNode node) {", "+\t\tif (this.beforeRequiredSpaceIndex  == -1) return;", "+\t\t", "+\t\tList events = this.eventStore.getChangedPropertieEvents(node);", "+\t\t", "+\t\tfor (Iterator iterator = events.iterator(); iterator.hasNext();) {", "+\t\t\tRewriteEvent event = (RewriteEvent) iterator.next();", "+\t\t\tif (event.getChangeKind() == RewriteEvent.REPLACED && event.getOriginalValue() instanceof ASTNode) {", "+\t\t\t\tif (this.beforeRequiredSpaceIndex  == getExtendedOffset((ASTNode) event.getOriginalValue())) {", "+\t\t\t\t\tdoTextInsert(this.beforeRequiredSpaceIndex , String.valueOf(' '), getEditGroup(event));", "+\t\t\t\t\tthis.beforeRequiredSpaceIndex  = -1;", "+\t\t\t\t\treturn;", "-    \t\t\tif (offset == getExtendedOffset((ASTNode) getOriginalValue(node, desc))) {", "-\t\t\t\t\tdoTextInsert(offset, String.valueOf(' '), getEditGroup(node, desc));", "-\t\t\t\t}", "-\t\t\t} catch (CoreException e) {", "-\t\t\t\thandleException(e);", "+\t\t", "+\t\tif (this.beforeRequiredSpaceIndex  < getExtendedOffset(node)) {", "+\t\t\tthis.beforeRequiredSpaceIndex  = -1;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd632cdec6bff0d710b28e4c4eca73b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "5c0f68ddd1527675afe0c57b85dbce4648406e27", "commitAfterChange": "6eb00f6ee457a8f73a0eac0bfee00e20c1d881ff", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": " \t \tprivate void rewriteModifiers2(ASTNode node, ChildListPropertyDescriptor property, int pos)", "signatureAfterChange": " \t \tprivate int rewriteModifiers2(ASTNode node, ChildListPropertyDescriptor property, int pos)", "diff": ["-\tprivate void rewriteModifiers2(ASTNode node, ChildListPropertyDescriptor property, int pos) {", "+\tprivate int rewriteModifiers2(ASTNode node, ChildListPropertyDescriptor property, int pos) {", "-\t\t\tdoVisit(node, property, pos);", "-\t\t\treturn;", "+\t\t\treturn doVisit(node, property, pos);", "-", "-\t\tint endPos= rewriteNodeList(node, property, pos, \"\", \" \"); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\tif (isAllOfKind(children, RewriteEvent.INSERTED)) {", "-\t\t\tdoTextInsert(endPos, \" \", getEditGroup(children[children.length - 1])); //$NON-NLS-1$", "-\t\t} else if (isAllOfKind(children, RewriteEvent.REMOVED)) {", "+\t\tboolean isAllInsert= isAllOfKind(children, RewriteEvent.INSERTED);", "+\t\tboolean isAllRemove= isAllOfKind(children, RewriteEvent.REMOVED);", "+\t\tif (isAllInsert || isAllRemove) {", "+\t\t\t// update pos", "-\t\t\t\tint nextPos= getScanner().getNextStartOffset(endPos, false);", "-\t\t\t\tdoTextRemove(endPos, nextPos - endPos, getEditGroup(children[children.length - 1]));", "+\t\t\t\tpos= getScanner().getNextStartOffset(pos, false);", "+\t\tint endPos= rewriteNodeList(node, property, pos, \"\", \" \"); //$NON-NLS-1$ //$NON-NLS-2$", "+", "+\t\tif (isAllInsert) {", "+\t\t\tdoTextInsert(endPos, \" \", getEditGroup(children[children.length - 1])); //$NON-NLS-1$", "+\t\t} else if (isAllRemove) {", "+\t\t\ttry {", "+\t\t\t\tint nextPos= getScanner().getNextStartOffset(endPos, false);", "+\t\t\t\tdoTextRemove(endPos, nextPos - endPos, getEditGroup(children[children.length - 1]));", "+\t\t\t\treturn nextPos;", "+\t\t\t} catch (CoreException e) {", "+\t\t\t\thandleException(e);", "+\t\t\t}", "+\t\t}", "+\t\treturn endPos;"]}], "num": 48847}