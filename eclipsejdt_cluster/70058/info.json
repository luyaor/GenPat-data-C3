{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "559657d7638af3ebeca7af931137fee5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "137067a5b6484949eb4cd21199e9c0a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "8fea12e4bfaf9512e2895dd3e38d29d36df0b0d7", "commitAfterChange": "44745746fe14ee21b76846ff0560d4bd8139889c", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": " public void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " public void configure(String[] argv) throws InvalidInputException", "diff": ["-\tboolean useEnableJavadoc = false;", "-\t\t\t\t\t\thandleWarningToken(token, isEnabling, useEnableJavadoc);", "+\t\t\t\t\t\thandleWarningToken(token, isEnabling);", "-\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\tCompilerOptions.OPTION_DocCommentSupport,", "-\t\t\t\t\t\tCompilerOptions.ENABLED);", "-\t\t\t\t\tuseEnableJavadoc = true;", "+\t\t\t\t\tthis.enableJavadocOn = true;", "+\t", "+\t// set DocCommentSupport, with appropriate side effects on defaults if ", "+\t// javadoc is not enabled", "+\tif (this.enableJavadocOn) {", "+\t\tthis.options.put(", "+\t\t\tCompilerOptions.OPTION_DocCommentSupport,", "+\t\t\tCompilerOptions.ENABLED);", "+\t} else if (this.warnJavadocOn || this.warnAllJavadocOn) {", "+\t\tthis.options.put(", "+\t\t\tCompilerOptions.OPTION_DocCommentSupport,", "+\t\t\tCompilerOptions.ENABLED);", "+\t\t// override defaults: references that are embedded in javadoc are ignored", "+\t\t// from the perspective of parameters and thrown exceptions usage", "+\t\tthis.options.put(", "+\t\t\tCompilerOptions.OPTION_ReportUnusedParameterIncludeDocCommentReference,", "+\t\t\tCompilerOptions.DISABLED);", "+\t\tthis.options.put(", "+\t\t\tCompilerOptions.OPTION_ReportUnusedDeclaredThrownExceptionIncludeDocCommentReference,", "+\t\t\tCompilerOptions.DISABLED);", "+\t}", "+\t// configure warnings for javadoc contents", "+\tif (this.warnJavadocOn || this.warnAllJavadocOn) {", "+\t\tthis.options.put(", "+\t\t\tCompilerOptions.OPTION_ReportInvalidJavadoc,", "+\t\t\tCompilerOptions.WARNING);", "+\t\tthis.options.put(", "+\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTags,", "+\t\t\tCompilerOptions.ENABLED);", "+\t\tthis.options.put(", "+\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTagsDeprecatedRef,", "+\t\t\tCompilerOptions.ENABLED);", "+\t\tthis.options.put(", "+\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTagsNotVisibleRef,", "+\t\t\tCompilerOptions.ENABLED);", "+\t\tthis.options.put(", "+\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTags,", "+\t\t\tCompilerOptions.WARNING);", "+\t\tthis.options.put(", "+\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTagsVisibility,", "+\t\t\tCompilerOptions.PRIVATE);", "+\t}", "+\tif (this.warnAllJavadocOn) {", "+\t\tthis.options.put(", "+\t\t\tCompilerOptions.OPTION_ReportMissingJavadocComments,", "+\t\t\tCompilerOptions.WARNING);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17cc8a3da26aaedc62d5a0b807439b38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "5d2e6e466ee272d62f273fff98dd2423f77bd2f3", "commitAfterChange": "e702e6a53e23b4f475e9578e987e56b628fcf8d7", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " protected void handleWarningToken(String token, boolean isEnabling, boolean useEnableJavadoc) throws InvalidInputException", "signatureAfterChange": " protected void handleWarningToken(String token, boolean isEnabling, boolean useEnableJavadoc) throws InvalidInputException", "diff": ["-\t\tthis.options.put(", "-\t\t\tCompilerOptions.OPTION_ReportNullReference,", "-\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\tif (isEnabling) {", "+\t\t\tthis.options.put(CompilerOptions.OPTION_ReportNullReference,", "+\t\t\t\t\tCompilerOptions.WARNING);", "+\t\t\tthis.options.put(CompilerOptions.OPTION_ReportPotentialNullReference,", "+\t\t\t\t\tCompilerOptions.WARNING);", "+\t\t\tthis.options.put(CompilerOptions.OPTION_ReportRedundantNullCheck,", "+\t\t\t\t\tCompilerOptions.WARNING);", "+\t\t} else {", "+\t\t\tthis.options.put(CompilerOptions.OPTION_ReportNullReference,", "+\t\t\t\t\tCompilerOptions.IGNORE);", "+\t\t\tthis.options.put(CompilerOptions.OPTION_ReportPotentialNullReference,", "+\t\t\t\t\tCompilerOptions.IGNORE);", "+\t\t\tthis.options.put(CompilerOptions.OPTION_ReportRedundantNullCheck,", "+\t\t\t\t\tCompilerOptions.IGNORE);", "+\t\t}", "+\t} else if (token.equals(\"nullDereference\")) { //$NON-NLS-1$", "+\t\tif (isEnabling) {", "+\t\t\tthis.options.put(CompilerOptions.OPTION_ReportNullReference,", "+\t\t\t\t\tCompilerOptions.WARNING);", "+\t\t} else {", "+\t\t\tthis.options.put(CompilerOptions.OPTION_ReportNullReference,", "+\t\t\t\t\tCompilerOptions.IGNORE);", "+\t\t\tthis.options.put(CompilerOptions.OPTION_ReportPotentialNullReference,", "+\t\t\t\t\tCompilerOptions.IGNORE);", "+\t\t\tthis.options.put(CompilerOptions.OPTION_ReportRedundantNullCheck,", "+\t\t\t\t\tCompilerOptions.IGNORE);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e7c3c78bfc6f3d713423dab4dcb8e8b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "cdead094a9813fdba5ccda0ce2f9f48a99552dbc", "commitAfterChange": "3be4aa0b7d051355f329ce1003f3f4c0f7acfab2", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["+\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTags,", "+\t\t\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTagsVisibility,", "+\t\t\t\t\t\t\tisEnabling ? CompilerOptions.PRIVATE : CompilerOptions.PUBLIC);", "+\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTags,", "+\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTagsVisibility,", "+\t\t\t\t\t\t\tisEnabling ? CompilerOptions.PRIVATE : CompilerOptions.PUBLIC);", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadoc,", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTags,", "+\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTagsVisibility,", "+\t\t\t\t\t\t\tisEnabling ? CompilerOptions.PRIVATE : CompilerOptions.PUBLIC);", "+\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTags,", "+\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTagsVisibility,", "+\t\t\t\t\t\t\tisEnabling ? CompilerOptions.PRIVATE : CompilerOptions.PUBLIC);", "+\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocComments,", "+\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);"]}], "num": 70058}