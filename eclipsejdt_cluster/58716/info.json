{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bedd9734c89c746c17ee8e0f95302dd8", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a4c5363cda1820441ffdcaa0075d8a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "db9994e6bbc68b36b6835d66f1e05a3b040360e2", "commitAfterChange": "01c814e6bd45b7fbd49eec3a490338a17c21d9fb", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " public TypeBinding createAnnotatedType(TypeBinding type, AnnotationBinding[] newbies)", "signatureAfterChange": " public TypeBinding createAnnotatedType(TypeBinding type, AnnotationBinding[] newbies)", "diff": ["-\t", "-\tTypeBinding annotatedType = this.typeSystem.getAnnotatedType(type, new AnnotationBinding [][] { newbies });", "-\tannotatedType.tagBits |= type.tagBits & TagBits.AnnotationNullMASK; // carry over any synthesized null bits e.g new Object() unless the annotation binding themselves are synthesized.", "-\treturn annotatedType;", "+\treturn this.typeSystem.getAnnotatedType(type, new AnnotationBinding [][] { newbies });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38c8460831a9e7be4443ca6a5750e9d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "c022117ae297b8e49ebfae03d96fef748f42ac8e", "commitAfterChange": "ebc9c60cbf042dbff885780aaed16ba6d625eadc", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic IType findType(String packageName, String typeQualifiedName) throws JavaModelException", "signatureAfterChange": " \tpublic IType findType(String packageName, String typeQualifiedName) throws JavaModelException", "diff": ["-\t\tIType type =  this.getNameLookup().findType(", "-\t\t\ttypeQualifiedName, ", "-\t\t\tpackageName,", "-\t\t\tfalse,", "-\t\t\tNameLookup.ACCEPT_CLASSES | NameLookup.ACCEPT_INTERFACES);", "-\t\tif (type == null)", "-\t\t\ttype = findSecondaryType(packageName, typeQualifiedName);", "-\t\treturn type;", "-\t}", "+\t\treturn ", "+\t\t\tthis.getNameLookup().findType(", "+\t\t\t\ttypeQualifiedName, ", "+\t\t\t\tpackageName,", "+\t\t\t\tfalse,", "+\t\t\t\tNameLookup.ACCEPT_CLASSES | NameLookup.ACCEPT_INTERFACES);", "+\t}\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf0dcb0f4e290af221fd99014bf5b8e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodScope.java", "commitBeforeChange": "baba91778491837a84be9560b81c83086d98c36e", "commitAfterChange": "57b083b793c3b8c2d5620895f00ff1c58e226e44", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public ProblemReporter problemReporter()", "signatureAfterChange": " public ProblemReporter problemReporter()", "diff": ["-\tMethodScope outerMethodScope;", "-\tif ((outerMethodScope = outerMostMethodScope()) == this) {", "-\t\tProblemReporter problemReporter = referenceCompilationUnit().problemReporter;", "-\t\tproblemReporter.referenceContext = this.referenceContext;", "-\t\treturn problemReporter;", "-\t}", "-\treturn outerMethodScope.problemReporter();", "+\tProblemReporter problemReporter = referenceCompilationUnit().problemReporter;", "+\tproblemReporter.referenceContext = this.referenceContext;", "+\treturn problemReporter;"]}], "num": 58716}