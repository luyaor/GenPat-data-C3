{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f4da0bc90f8a4897c46d93a6ae00d3d3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06ea98e4a1f3a10f221ad6cf1a2ddbab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "20a3b07578a2ebec2d9a0569764e78af37761eaf", "commitAfterChange": "c052d66dbc2732414cdaf446e79eec5da0743843", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 105, "signatureBeforeChange": " public void testSuppressWarnings2() throws JavaModelException", "signatureAfterChange": " public void testSuppressWarnings2() throws JavaModelException", "diff": ["-\t\tWorkingCopyOwner owner = new WorkingCopyOwner() {};", "-\t        \"public interface List<E> {\\n\" + ", "+\t        \"public interface List<E> {\\n\" +", "-\t\t\towner,", "-\t\t\tfalse/*don't compute problems*/);", "-\t\tsetUp15WorkingCopy(\"/Reconciler15/src/X.java\", owner);", "+\t\t\tthis.wcOwner", "+\t\t);", "+\t\tsetUp15WorkingCopy(\"/Reconciler15/src/X.java\", this.wcOwner);", "-            \"import java.util.List;\\n\" + ", "-            \"\\n\" + ", "-            \"public class X {\\n\" + ", "-            \"    void foo(List list) {\\n\" + ", "-            \"        List<String> ls1 = list;\\n\" + ", "-            \"    }\\n\" + ", "-            \"    @SuppressWarnings(\\\"unchecked\\\")\\n\" + ", "-            \"    void bar(List list) {\\n\" + ", "-            \"        List<String> ls2 = list;\\n\" + ", "-            \"    }\\n\" + ", "+            \"import java.util.List;\\n\" +", "+            \"\\n\" +", "+            \"public class X {\\n\" +", "+            \"    void foo(List list) {\\n\" +", "+            \"        List<String> ls1 = list;\\n\" +", "+            \"    }\\n\" +", "+            \"    @SuppressWarnings(\\\"unchecked\\\")\\n\" +", "+            \"    void bar(List list) {\\n\" +", "+            \"        List<String> ls2 = list;\\n\" +", "+            \"    }\\n\" +", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in /Reconciler15/src/X.java (at line 5)\\n\" + ", "-\t\t\t\"\tList<String> ls1 = list;\\n\" + ", "-\t\t\t\"\t                   ^^^^\\n\" + ", "-\t\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<String>\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in /Reconciler15/src/X.java (at line 11)\\n\" + ", "-\t\t\t\"\tZork z;\\n\" + ", "-\t\t\t\"\t^^^^\\n\" + ", "-\t\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. WARNING in /Reconciler15/src/X.java (at line 5)\\n\" +", "+\t\t\t\"\tList<String> ls1 = list;\\n\" +", "+\t\t\t\"\t                   ^^^^\\n\" +", "+\t\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<String>\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"2. ERROR in /Reconciler15/src/X.java (at line 11)\\n\" +", "+\t\t\t\"\tZork z;\\n\" +", "+\t\t\t\"\t^^^^\\n\" +", "+\t\t\t\"Zork cannot be resolved to a type\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "740d983d2eeacbfea2bea79becf13b6a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "b10f8d4f3527574b21957e7469aa67665ffef2eb", "commitAfterChange": "6f5f3bf992d083afd859f24e5d289721d20e35e8", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 70, "signatureBeforeChange": " public void testSuppressWarnings1() throws JavaModelException", "signatureAfterChange": " public void testSuppressWarnings4() throws JavaModelException", "diff": ["-public void testSuppressWarnings1() throws JavaModelException {", "-\t        \"/** @deprecated */\\n\" + ", "+ */", "+public void testSuppressWarnings4() throws JavaModelException {", "+\tICompilationUnit otherCopy = null;", "+\ttry {", "+\t\tWorkingCopyOwner owner = new WorkingCopyOwner() {};", "+\t\totherCopy = getWorkingCopy(", "+\t\t\t\"/Reconciler15/src/X.java\",", "+\t        \"/** @deprecated */\\n\" + ", "+\t        \"public class X {\\n\" + ", "+\t        \"   void foo(){}\\n\" +", "+\t        \"}\\n\",", "+\t\t\towner,", "+\t\t\tfalse/*don't compute problems*/);", "+\t\tsetUp15WorkingCopy(\"/Reconciler15/src/Y.java\", owner);", "+\t\tsetWorkingCopyContents(", "+\t        \"public class Y extends X {\\n\" + ", "+\t        \"  @SuppressWarnings(\\\"all\\\")\\n\" +", "+\t        \"   void foo(){ super.foo(); }\\n\" +", "+\t        \"   Zork z;\\n\" +", "+\t        \"}\\n\"", "+\t\t);", "+\t\tthis.workingCopy.reconcile(ICompilationUnit.NO_AST, false, null, null);", "+\t\tassertProblems(", "+\t\t\t\"Unexpected problems\",", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in /Reconciler15/src/Y.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class Y extends X {\\n\" + ", "+\t\t\t\"\t             ^\\n\" + ", "+\t\t\t\"The constructor X() is deprecated\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in /Reconciler15/src/Y.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class Y extends X {\\n\" + ", "+\t\t\t\"\t                       ^\\n\" + ", "+\t\t\t\"The type X is deprecated\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in /Reconciler15/src/Y.java (at line 4)\\n\" + ", "+\t\t\t\"\tZork z;\\n\" + ", "+\t\t\t\"\t^^^^\\n\" + ", "+\t\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\t\"----------\\n\");", "+\t} finally {", "+\t\tif (otherCopy != null)", "+\t\t\totherCopy.discardWorkingCopy();", "+\t}", "+}"]}], "num": 25477}