{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "743a5ac1a20ac5f8d9b88a2ded47a8b5", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca8cfac2555afafc4b2ca5695701f21a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "a9d9ef126afa0b02402ec922ee1b18941ed8396d", "commitAfterChange": "5270f34deea951955a9cf260a036c733a8732c28", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": " \tpublic boolean visit(ForStatement forStatement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(ForStatement forStatement, BlockScope scope)", "diff": ["-        final int line = scribe.line;", "-        this.scribe.printNextToken(TerminalTokens.TokenNameLPAREN, this.preferences.insert_space_before_for_paren);", "+\t    final int line = scribe.line;", "+\t    this.scribe.printNextToken(TerminalTokens.TokenNameLPAREN, this.preferences.insert_space_before_for_paren);", "-\t\tif (this.preferences.insert_space_after_semicolon_in_for) {", "-\t\t\tthis.scribe.space();", "-\t\t}", "+\t\t\tif (this.preferences.insert_space_after_semicolon_in_for) {", "+\t\t\t\tthis.scribe.space();", "+\t\t\t}", "-\t\tif (this.preferences.insert_space_after_semicolon_in_for) {", "-\t\t\tthis.scribe.space();", "-\t\t}", "+\t\t\tif (this.preferences.insert_space_after_semicolon_in_for) {", "+\t\t\t\tthis.scribe.space();", "+\t\t\t}", "-                formatLeftCurlyBrace(line, this.preferences.block_brace_position);", "+\t            formatLeftCurlyBrace(line, this.preferences.block_brace_position);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e72324f645e2fa35fc8be2b47b8c2919", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/State.java", "commitBeforeChange": "e60903fe9d1be9609e2d7018794b66ab39d77839", "commitAfterChange": "1cff9f79be5fd6fcc760af55214bca85f6dbdfe8", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  void write(DataOutputStream out) throws IOException", "signatureAfterChange": "  void write(DataOutputStream out) throws IOException", "diff": ["- * int\t\t\tbuild number", "- * int\t\t\tlast structural build number", "+ * int\t\t\t\tbuild number", "+ * int\t\t\t\tlast structural build number", "- * int\t\t\tid", "+ * int\t\t\t\tid", "- * int\t\t\tid", "+ * int\t\t\t\tid", "-\t\t\t\tout.writeByte(3);", "-\t\t\t\tout.writeUTF(jar.relativePathname);", "-\t\t\t} else {", "-\t\t\t\tout.writeByte(4);", "+\t\t\t\tout.writeByte(3); // external jar", "+\t\t\t} else {", "+\t\t\t\tout.writeByte(4); // project relative jar", "+\t\t\t\tout.writeUTF(jar.relativePathname);", "- * int\t\t\tlast structural build number", "+ * int\t\t\t\tlast structural build number", "- * int\t\t\tinterned locator id", "+ * int\t\t\t\tinterned locator id"]}], "num": 20553}