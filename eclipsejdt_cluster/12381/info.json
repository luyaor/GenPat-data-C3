{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9fddf6029b2dc035a159da643b39e571", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba525c4ad969acc64bf3162c9f39dd5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationLocator.java", "commitBeforeChange": "11d9bc69677fa9c8e3ad183264b865451dc15a16", "commitAfterChange": "0aef5635cdda5f8b487e6520930c462feef51cd5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void match(TypeDeclaration node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(TypeDeclaration node, MatchingNodeSet nodeSet)", "diff": ["-//public void match(Reference node, MatchingNodeSet nodeSet) - SKIP IT", "-public void match(TypeDeclaration node, MatchingNodeSet nodeSet) {", "+//public int match(Reference node, MatchingNodeSet nodeSet) - SKIP IT", "+public int match(TypeDeclaration node, MatchingNodeSet nodeSet) {", "-\t\tnodeSet.addMatch(node, this.pattern.mustResolve ? POSSIBLE_MATCH : ACCURATE_MATCH);", "+\t\treturn nodeSet.addMatch(node, this.pattern.mustResolve ? POSSIBLE_MATCH : ACCURATE_MATCH);", "+", "+\treturn IMPOSSIBLE_MATCH;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd02c6fafc7bb08b66d9ed2cd76a6c8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorLocator.java", "commitBeforeChange": "11d9bc69677fa9c8e3ad183264b865451dc15a16", "commitAfterChange": "0aef5635cdda5f8b487e6520930c462feef51cd5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void match(TypeDeclaration node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(TypeDeclaration node, MatchingNodeSet nodeSet)", "diff": ["-//public void match(Reference node, MatchingNodeSet nodeSet) - SKIP IT", "-public void match(TypeDeclaration node, MatchingNodeSet nodeSet) {", "-\tif (!this.pattern.findReferences) return;", "+//public int match(Reference node, MatchingNodeSet nodeSet) - SKIP IT", "+public int match(TypeDeclaration node, MatchingNodeSet nodeSet) {", "+\tif (!this.pattern.findReferences) return IMPOSSIBLE_MATCH;", "-\tnodeSet.addMatch(node, this.pattern.mustResolve ? POSSIBLE_MATCH : ACCURATE_MATCH);", "+\treturn nodeSet.addMatch(node, this.pattern.mustResolve ? POSSIBLE_MATCH : ACCURATE_MATCH);"]}], "num": 12381}