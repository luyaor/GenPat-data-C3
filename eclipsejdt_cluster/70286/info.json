{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "91112f061c146494f9f62264b8eea986", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "928dbfbc5fba465e10622d1cf5eb9bb5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TryStatementTest.java", "commitBeforeChange": "830277de86eee08c18b5e0da495c01b96cccdad2", "commitAfterChange": "a874c20c38675a0faf72bfd6c0cb69354f6ff3fb", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " public void test048()", "signatureAfterChange": " public void test048()", "diff": ["-\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "-\t\t\t\"  void foo();\\n\" + ", "-\t\t\t\"     0  aload_0 [this]\\n\" + ", "-\t\t\t\"     1  invokevirtual X.bool() : boolean [17]\\n\" + ", "-\t\t\t\"     4  ifeq 9\\n\" + ", "-\t\t\t\"     7  return\\n\" + ", "-\t\t\t\"     8  astore_1\\n\" + ", "-\t\t\t\"     9  return\\n\" + ", "-\t\t\t\"      Exception Table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 7] -> 8 when : java.lang.Exception\\n\" + ", "-\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\"        [pc: 0, line: 5]\\n\" + ", "-\t\t\t\"        [pc: 7, line: 6]\\n\" + ", "-\t\t\t\"        [pc: 8, line: 8]\\n\" + ", "-\t\t\t\"        [pc: 9, line: 10]\\n\" + ", "-\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 10] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"  // Method descriptor #22 ()I\\n\" + ", "-\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "-\t\t\t\"  int foo2();\\n\" + ", "-\t\t\t\"     0  aload_0 [this]\\n\" + ", "-\t\t\t\"     1  invokevirtual X.bool() : boolean [17]\\n\" + ", "-\t\t\t\"     4  ifeq 10\\n\" + ", "-\t\t\t\"     7  iconst_0\\n\" + ", "-\t\t\t\"     8  ireturn\\n\" + ", "-\t\t\t\"     9  astore_1\\n\" + ", "-\t\t\t\"    10  iconst_1\\n\" + ", "-\t\t\t\"    11  ireturn\\n\" + ", "-\t\t\t\"      Exception Table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 7] -> 9 when : java.lang.Exception\\n\" + ", "-\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\"        [pc: 0, line: 13]\\n\" + ", "-\t\t\t\"        [pc: 7, line: 14]\\n\" + ", "-\t\t\t\"        [pc: 9, line: 16]\\n\" + ", "-\t\t\t\"        [pc: 10, line: 18]\\n\" + ", "-\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 12] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"  // Method descriptor #24 ()J\\n\" + ", "-\t\t\t\"  // Stack: 2, Locals: 2\\n\" + ", "-\t\t\t\"  long foo3();\\n\" + ", "-\t\t\t\"    0  lconst_0\\n\" + ", "-\t\t\t\"    1  lreturn\\n\" + ", "-\t\t\t\"    2  astore_1\\n\" + ", "-\t\t\t\"    3  lconst_1\\n\" + ", "-\t\t\t\"    4  lreturn\\n\" + ", "-\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\"        [pc: 0, line: 23]\\n\" + ", "-\t\t\t\"        [pc: 2, line: 25]\\n\" + ", "-\t\t\t\"        [pc: 3, line: 27]\\n\" + ", "-\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"  // Method descriptor #26 ()F\\n\" + ", "-\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "-\t\t\t\"  float foo4();\\n\" + ", "-\t\t\t\"     0  iconst_0\\n\" + ", "-\t\t\t\"     1  istore_1 [i]\\n\" + ", "-\t\t\t\"     2  aload_0 [this]\\n\" + ", "-\t\t\t\"     3  invokevirtual X.bool() : boolean [17]\\n\" + ", "-\t\t\t\"     6  ifeq 12\\n\" + ", "-\t\t\t\"     9  fconst_0\\n\" + ", "-\t\t\t\"    10  freturn\\n\" + ", "-\t\t\t\"    11  astore_1\\n\" + ", "-\t\t\t\"    12  fconst_1\\n\" + ", "-\t\t\t\"    13  freturn\\n\" + ", "-\t\t\t\"      Exception Table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 9] -> 11 when : java.lang.Exception\\n\" + ", "-\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\"        [pc: 0, line: 31]\\n\" + ", "-\t\t\t\"        [pc: 9, line: 32]\\n\" + ", "-\t\t\t\"        [pc: 11, line: 34]\\n\" + ", "-\t\t\t\"        [pc: 12, line: 36]\\n\" + ", "-\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 14] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"        [pc: 2, pc: 11] local: i index: 1 type: int\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"  // Method descriptor #30 ()D\\n\" + ", "-\t\t\t\"  // Stack: 2, Locals: 1\\n\" + ", "-\t\t\t\"  double bar();\\n\" + ", "-\t\t\t\"     0  aload_0 [this]\\n\" + ", "-\t\t\t\"     1  invokevirtual X.bool() : boolean [17]\\n\" + ", "-\t\t\t\"     4  ifeq 16\\n\" + ", "-\t\t\t\"     7  aload_0 [this]\\n\" + ", "-\t\t\t\"     8  invokevirtual X.bool() : boolean [17]\\n\" + ", "-\t\t\t\"    11  ifeq 31\\n\" + ", "-\t\t\t\"    14  dconst_0\\n\" + ", "-\t\t\t\"    15  dreturn\\n\" + ", "-\t\t\t\"    16  aload_0 [this]\\n\" + ", "-\t\t\t\"    17  invokevirtual X.bool() : boolean [17]\\n\" + ", "-\t\t\t\"    20  ifeq 31\\n\" + ", "-\t\t\t\"    23  new java.lang.NullPointerException [31]\\n\" + ", "-\t\t\t\"    26  dup\\n\" + ", "-\t\t\t\"    27  invokespecial java.lang.NullPointerException() [33]\\n\" + ", "-\t\t\t\"    30  athrow\\n\" + ", "-\t\t\t\"    31  dconst_1\\n\" + ", "-\t\t\t\"    32  dreturn\\n\" + ", "-\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\"        [pc: 0, line: 39]\\n\" + ", "-\t\t\t\"        [pc: 7, line: 40]\\n\" + ", "-\t\t\t\"        [pc: 14, line: 41]\\n\" + ", "-\t\t\t\"        [pc: 16, line: 43]\\n\" + ", "-\t\t\t\"        [pc: 23, line: 44]\\n\" + ", "-\t\t\t\"        [pc: 31, line: 47]\\n\" + ", "-\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 33] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"  // Method descriptor #35 (I)V\\n\" + ", "-\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "-\t\t\t\"  void baz(int i);\\n\" + ", "-\t\t\t\"     0  aload_0 [this]\\n\" + ", "-\t\t\t\"     1  invokevirtual X.bool() : boolean [17]\\n\" + ", "-\t\t\t\"     4  ifeq 32\\n\" + ", "-\t\t\t\"     7  iload_1 [i]\\n\" + ", "-\t\t\t\"     8  tableswitch default: 29\\n\" + ", "-\t\t\t\"          case 0: 28\\n\" + ", "-\t\t\t\"    28  return\\n\" + ", "-\t\t\t\"    29  goto 37\\n\" + ", "-\t\t\t\"    32  aload_0 [this]\\n\" + ", "-\t\t\t\"    33  invokevirtual X.bool() : boolean [17]\\n\" + ", "-\t\t\t\"    36  pop\\n\" + ", "-\t\t\t\"    37  return\\n\" + ", "-\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\"        [pc: 0, line: 50]\\n\" + ", "-\t\t\t\"        [pc: 7, line: 51]\\n\" + ", "-\t\t\t\"        [pc: 28, line: 52]\\n\" + ", "-\t\t\t\"        [pc: 29, line: 53]\\n\" + ", "-\t\t\t\"        [pc: 32, line: 56]\\n\" + ", "-\t\t\t\"        [pc: 37, line: 58]\\n\" + ", "-\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 38] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 38] local: i index: 1 type: int\\n\"", "+\t\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "+\t\t\t\t\"  void foo();\\n\" + ", "+\t\t\t\t\"     0  aload_0 [this]\\n\" + ", "+\t\t\t\t\"     1  invokevirtual X.bool() : boolean [17]\\n\" + ", "+\t\t\t\t\"     4  ifeq 9\\n\" + ", "+\t\t\t\t\"     7  return\\n\" + ", "+\t\t\t\t\"     8  astore_1\\n\" + ", "+\t\t\t\t\"     9  return\\n\" + ", "+\t\t\t\t\"      Exception Table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 7] -> 8 when : java.lang.Exception\\n\" + ", "+\t\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\t\"        [pc: 0, line: 5]\\n\" + ", "+\t\t\t\t\"        [pc: 7, line: 6]\\n\" + ", "+\t\t\t\t\"        [pc: 8, line: 8]\\n\" + ", "+\t\t\t\t\"        [pc: 9, line: 10]\\n\" + ", "+\t\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 10] local: this index: 0 type: X\\n\" + ", "+\t\t\t\t\"  \\n\" + ", "+\t\t\t\t\"  // Method descriptor #22 ()I\\n\" + ", "+\t\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "+\t\t\t\t\"  int foo2();\\n\" + ", "+\t\t\t\t\"     0  aload_0 [this]\\n\" + ", "+\t\t\t\t\"     1  invokevirtual X.bool() : boolean [17]\\n\" + ", "+\t\t\t\t\"     4  ifeq 10\\n\" + ", "+\t\t\t\t\"     7  iconst_0\\n\" + ", "+\t\t\t\t\"     8  ireturn\\n\" + ", "+\t\t\t\t\"     9  astore_1\\n\" + ", "+\t\t\t\t\"    10  iconst_1\\n\" + ", "+\t\t\t\t\"    11  ireturn\\n\" + ", "+\t\t\t\t\"      Exception Table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 7] -> 9 when : java.lang.Exception\\n\" + ", "+\t\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\t\"        [pc: 0, line: 13]\\n\" + ", "+\t\t\t\t\"        [pc: 7, line: 14]\\n\" + ", "+\t\t\t\t\"        [pc: 9, line: 16]\\n\" + ", "+\t\t\t\t\"        [pc: 10, line: 18]\\n\" + ", "+\t\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 12] local: this index: 0 type: X\\n\" + ", "+\t\t\t\t\"  \\n\" + ", "+\t\t\t\t\"  // Method descriptor #24 ()J\\n\" + ", "+\t\t\t\t\"  // Stack: 2, Locals: 1\\n\" + ", "+\t\t\t\t\"  long foo3();\\n\" + ", "+\t\t\t\t\"    0  lconst_0\\n\" + ", "+\t\t\t\t\"    1  lreturn\\n\" + ", "+\t\t\t\t\"    2  lconst_1\\n\" + ", "+\t\t\t\t\"    3  lreturn\\n\" + ", "+\t\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\t\"        [pc: 0, line: 23]\\n\" + ", "+\t\t\t\t\"        [pc: 2, line: 27]\\n\" + ", "+\t\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 4] local: this index: 0 type: X\\n\" + ", "+\t\t\t\t\"  \\n\" + ", "+\t\t\t\t\"  // Method descriptor #26 ()F\\n\" + ", "+\t\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "+\t\t\t\t\"  float foo4();\\n\" + ", "+\t\t\t\t\"     0  iconst_0\\n\" + ", "+\t\t\t\t\"     1  istore_1 [i]\\n\" + ", "+\t\t\t\t\"     2  aload_0 [this]\\n\" + ", "+\t\t\t\t\"     3  invokevirtual X.bool() : boolean [17]\\n\" + ", "+\t\t\t\t\"     6  ifeq 12\\n\" + ", "+\t\t\t\t\"     9  fconst_0\\n\" + ", "+\t\t\t\t\"    10  freturn\\n\" + ", "+\t\t\t\t\"    11  astore_1\\n\" + ", "+\t\t\t\t\"    12  fconst_1\\n\" + ", "+\t\t\t\t\"    13  freturn\\n\" + ", "+\t\t\t\t\"      Exception Table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 9] -> 11 when : java.lang.Exception\\n\" + ", "+\t\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\t\"        [pc: 0, line: 31]\\n\" + ", "+\t\t\t\t\"        [pc: 9, line: 32]\\n\" + ", "+\t\t\t\t\"        [pc: 11, line: 34]\\n\" + ", "+\t\t\t\t\"        [pc: 12, line: 36]\\n\" + ", "+\t\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 14] local: this index: 0 type: X\\n\" + ", "+\t\t\t\t\"        [pc: 2, pc: 11] local: i index: 1 type: int\\n\" + ", "+\t\t\t\t\"  \\n\" + ", "+\t\t\t\t\"  // Method descriptor #30 ()D\\n\" + ", "+\t\t\t\t\"  // Stack: 2, Locals: 1\\n\" + ", "+\t\t\t\t\"  double bar();\\n\" + ", "+\t\t\t\t\"     0  aload_0 [this]\\n\" + ", "+\t\t\t\t\"     1  invokevirtual X.bool() : boolean [17]\\n\" + ", "+\t\t\t\t\"     4  ifeq 16\\n\" + ", "+\t\t\t\t\"     7  aload_0 [this]\\n\" + ", "+\t\t\t\t\"     8  invokevirtual X.bool() : boolean [17]\\n\" + ", "+\t\t\t\t\"    11  ifeq 31\\n\" + ", "+\t\t\t\t\"    14  dconst_0\\n\" + ", "+\t\t\t\t\"    15  dreturn\\n\" + ", "+\t\t\t\t\"    16  aload_0 [this]\\n\" + ", "+\t\t\t\t\"    17  invokevirtual X.bool() : boolean [17]\\n\" + ", "+\t\t\t\t\"    20  ifeq 31\\n\" + ", "+\t\t\t\t\"    23  new java.lang.NullPointerException [31]\\n\" + ", "+\t\t\t\t\"    26  dup\\n\" + ", "+\t\t\t\t\"    27  invokespecial java.lang.NullPointerException() [33]\\n\" + ", "+\t\t\t\t\"    30  athrow\\n\" + ", "+\t\t\t\t\"    31  dconst_1\\n\" + ", "+\t\t\t\t\"    32  dreturn\\n\" + ", "+\t\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\t\"        [pc: 0, line: 39]\\n\" + ", "+\t\t\t\t\"        [pc: 7, line: 40]\\n\" + ", "+\t\t\t\t\"        [pc: 14, line: 41]\\n\" + ", "+\t\t\t\t\"        [pc: 16, line: 43]\\n\" + ", "+\t\t\t\t\"        [pc: 23, line: 44]\\n\" + ", "+\t\t\t\t\"        [pc: 31, line: 47]\\n\" + ", "+\t\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 33] local: this index: 0 type: X\\n\" + ", "+\t\t\t\t\"  \\n\" + ", "+\t\t\t\t\"  // Method descriptor #35 (I)V\\n\" + ", "+\t\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "+\t\t\t\t\"  void baz(int i);\\n\" + ", "+\t\t\t\t\"     0  aload_0 [this]\\n\" + ", "+\t\t\t\t\"     1  invokevirtual X.bool() : boolean [17]\\n\" + ", "+\t\t\t\t\"     4  ifeq 32\\n\" + ", "+\t\t\t\t\"     7  iload_1 [i]\\n\" + ", "+\t\t\t\t\"     8  tableswitch default: 29\\n\" + ", "+\t\t\t\t\"          case 0: 28\\n\" + ", "+\t\t\t\t\"    28  return\\n\" + ", "+\t\t\t\t\"    29  goto 37\\n\" + ", "+\t\t\t\t\"    32  aload_0 [this]\\n\" + ", "+\t\t\t\t\"    33  invokevirtual X.bool() : boolean [17]\\n\" + ", "+\t\t\t\t\"    36  pop\\n\" + ", "+\t\t\t\t\"    37  return\\n\" + ", "+\t\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\t\"        [pc: 0, line: 50]\\n\" + ", "+\t\t\t\t\"        [pc: 7, line: 51]\\n\" + ", "+\t\t\t\t\"        [pc: 28, line: 52]\\n\" + ", "+\t\t\t\t\"        [pc: 29, line: 53]\\n\" + ", "+\t\t\t\t\"        [pc: 32, line: 56]\\n\" + ", "+\t\t\t\t\"        [pc: 37, line: 58]\\n\" + ", "+\t\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 38] local: this index: 0 type: X\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 38] local: i index: 1 type: int\\n\"", "-\t\t\t\"      Stack map table: number of frames 3\\n\" + ", "-\t\t\t\"        [pc: 7, same]\\n\" + ", "+\t\t\t\"      Stack map table: number of frames 2\\n\" + ", "-\t\t\t\"  // Stack: 2, Locals: 2\\n\" + ", "+\t\t\t\"  // Stack: 2, Locals: 1\\n\" + ", "-\t\t\t\"    2  astore_1\\n\" + ", "-\t\t\t\"    3  lconst_1\\n\" + ", "-\t\t\t\"    4  lreturn\\n\" + ", "+\t\t\t\"    2  lconst_1\\n\" + ", "+\t\t\t\"    3  lreturn\\n\" + ", "-\t\t\t\"        [pc: 2, line: 25]\\n\" + ", "-\t\t\t\"        [pc: 3, line: 27]\\n\" + ", "+\t\t\t\"        [pc: 2, line: 27]\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"      Stack map table: number of frames 3\\n\" + ", "-\t\t\t\"        [pc: 0, same]\\n\" + ", "-\t\t\t\"        [pc: 2, same_locals_1_stack_item, stack: {java.lang.Exception}]\\n\" + ", "-\t\t\t\"        [pc: 3, same]\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 4] local: this index: 0 type: X\\n\" + ", "+\t\t\t\"      Stack map table: number of frames 1\\n\" + ", "+\t\t\t\"        [pc: 2, same]\\n\" + ", "-\t\t\t\"      Stack map table: number of frames 3\\n\" + ", "-\t\t\t\"        [pc: 9, append: {int}]\\n\" + ", "-\t\t\t\"        [pc: 11, full, stack: {java.lang.Exception}, locals: {X}]\\n\" + ", "+\t\t\t\"      Stack map table: number of frames 2\\n\" + ", "+\t\t\t\"        [pc: 11, same_locals_1_stack_item, stack: {java.lang.Exception}]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edba6fb598de4b1eaff4110a7d99de34", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/XLargeTest.java", "commitBeforeChange": "a430dcf4a558e1c36680a36ef4af1ace851e14d2", "commitAfterChange": "dce0303da6d0cbf1d565391873636c507bd68d3f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public void test003()", "signatureAfterChange": "  public void test003()", "diff": ["-\t\t\t\"    \tSystem.out.println(x);\\n\" +"]}], "num": 70286}