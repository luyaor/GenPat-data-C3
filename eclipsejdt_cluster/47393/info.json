{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8fb58d0a35da6f96bcae08fd429f5b83", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "780492e05a1eabcb34951d282e3b3730", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "ab7733a54402b64bb328ef9a7aa36d933deb8ac7", "commitAfterChange": "7ed8fb3f335f5407b01a590a0c668733ebc19aa6", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean recurseInContainers)", "signatureAfterChange": " \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean recurseInContainers)", "diff": ["-\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.illegalContainerPath\", entryPathMsg, projectName));\t\t\t\t\t //$NON-NLS-1$", "+\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_illegalContainerPath, new String[] {entryPathMsg, projectName}));\t\t\t\t\t ", "-\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.illegalVariablePath\", entryPathMsg, projectName));\t\t\t\t\t //$NON-NLS-1$", "+\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_illegalVariablePath, new String[] {entryPathMsg, projectName}));\t\t\t\t\t ", "-\t\t\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.unboundSourceAttachment\", new String [] {sourceAttachment.toString(), path.toString(), projectName})); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundSourceAttachment, new String [] {sourceAttachment.toString(), path.toString(), projectName})); ", "-\t\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.illegalLibraryArchive\", entryPathMsg, projectName)); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_illegalLibraryArchive, new String[] {entryPathMsg, projectName})); ", "-\t\t\t\t\t\t\t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.unboundSourceAttachment\", new String [] {sourceAttachment.toString(), path.toString(), projectName})); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundSourceAttachment, new String [] {sourceAttachment.toString(), path.toString(), projectName})); ", "-\t\t\t\t\t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.illegalExternalFolder\", path.toOSString(), projectName)); //$NON-NLS-1$", "+\t\t\t\t\t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_illegalExternalFolder, new String[] {path.toOSString(), projectName})); ", "-\t\t\t\t\t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.illegalLibraryArchive\", path.toOSString(), projectName)); //$NON-NLS-1$", "+\t\t\t\t\t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_illegalLibraryArchive, (new String[] {path.toOSString(), projectName}))); ", "-\t\t\t\t\t\t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.unboundSourceAttachment\", new String [] {sourceAttachment.toString(), path.toOSString(), projectName})); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundSourceAttachment, new String [] {sourceAttachment.toString(), path.toOSString(), projectName})); ", "-\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.unboundLibrary\", path.toOSString(), projectName)); //$NON-NLS-1$", "+\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundLibrary, new String[] {path.toOSString(), projectName})); ", "-\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.unboundLibrary\", entryPathMsg, projectName)); //$NON-NLS-1$", "+\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundLibrary, new String[] {entryPathMsg, projectName})); ", "-\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.illegalLibraryPath\", entryPathMsg, projectName)); //$NON-NLS-1$", "+\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_illegalLibraryPath, new String[] {entryPathMsg, projectName})); ", "-\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.unboundProject\", path.segment(0), projectName)); //$NON-NLS-1$", "+\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundProject, new String[] {path.segment(0), projectName})); ", "-\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.closedProject\", path.segment(0))); //$NON-NLS-1$", "+\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_closedProject, new String[] {path.segment(0)})); ", "-\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.unboundProject\", path.segment(0), projectName)); //$NON-NLS-1$", "+\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundProject, new String[] {path.segment(0), projectName})); ", "-\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.illegalProjectPath\", path.segment(0), projectName)); //$NON-NLS-1$", "+\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_illegalProjectPath, new String[] {path.segment(0), projectName})); ", "-\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.unboundSourceFolder\", entryPathMsg, projectName)); //$NON-NLS-1$", "+\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_unboundSourceFolder, new String[] {entryPathMsg, projectName})); ", "-\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.illegalSourceFolderPath\", entryPathMsg, projectName)); //$NON-NLS-1$", "+\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_illegalSourceFolderPath, new String[] {entryPathMsg, projectName})); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fffc1ab85dbaca342766cbfd485a7e35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/HandleFactory.java", "commitBeforeChange": "1e77fadf417c78089a8bce12d01b049277ef0c41", "commitAfterChange": "caf3736c8c3269393f7e0bedb9e633769506e2e8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic Openable createOpenable(String resourcePath, IJavaSearchScope scope)", "signatureAfterChange": " \tpublic Openable createOpenable(String resourcePath, IJavaSearchScope scope)", "diff": ["-\t\t\t\tthis.packageHandles= new HashMap(5);", "+\t\t\t\tthis.packageHandles= new HashtableOfArrayToObject(5);", "-\t\t\tint lastSlash= classFilePath.lastIndexOf('/');", "-\t\t\tString packageName= lastSlash > -1 ? classFilePath.substring(0, lastSlash).replace('/', '.') : IPackageFragment.DEFAULT_PACKAGE_NAME;", "-\t\t\tIPackageFragment pkgFragment= (IPackageFragment) this.packageHandles.get(packageName);", "-\t\t\tif (pkgFragment == null) {", "-\t\t\t\tpkgFragment= this.lastPkgFragmentRoot.getPackageFragment(packageName);", "-\t\t\t\tthis.packageHandles.put(packageName, pkgFragment);", "+\t\t\tString[] simpleNames = new Path(classFilePath).segments();", "+\t\t\tString[] pkgName;", "+\t\t\tint length = simpleNames.length-1;", "+\t\t\tif (length > 0) {", "+\t\t\t\tpkgName = new String[length];", "+\t\t\t\tSystem.arraycopy(simpleNames, 0, pkgName, 0, length);", "+\t\t\t} else {", "+\t\t\t\tpkgName = CharOperation.NO_STRINGS;", "-\t\t\tIClassFile classFile= pkgFragment.getClassFile(classFilePath.substring(lastSlash + 1));", "+\t\t\tIPackageFragment pkgFragment= (IPackageFragment) this.packageHandles.get(pkgName);", "+\t\t\tif (pkgFragment == null) {", "+\t\t\t\tpkgFragment= ((PackageFragmentRoot) this.lastPkgFragmentRoot).getPackageFragment(pkgName);", "+\t\t\t\tthis.packageHandles.put(pkgName, pkgFragment);", "+\t\t\t}", "+\t\t\tIClassFile classFile= pkgFragment.getClassFile(simpleNames[length]);", "-\t\t\tint length = -1;", "+\t\t\tint rootPathLength = -1;", "-\t\t\t\t\t&& (length = this.lastPkgFragmentRootPath.length()) > 0", "-\t\t\t\t\t&& resourcePath.charAt(length) == '/')) {", "+\t\t\t\t\t&& (rootPathLength = this.lastPkgFragmentRootPath.length()) > 0", "+\t\t\t\t\t&& resourcePath.charAt(rootPathLength) == '/')) {", "-\t\t\t\tthis.lastPkgFragmentRoot= root;", "-\t\t\t\tthis.lastPkgFragmentRootPath= this.lastPkgFragmentRoot.getPath().toString();", "-\t\t\t\tthis.packageHandles= new HashMap(5);", "+\t\t\t\tthis.lastPkgFragmentRoot = root;", "+\t\t\t\tthis.lastPkgFragmentRootPath = this.lastPkgFragmentRoot.getPath().toString();", "+\t\t\t\tthis.packageHandles = new HashtableOfArrayToObject(5);", "-\t\t\tint lastSlash= resourcePath.lastIndexOf(IPath.SEPARATOR);", "-\t\t\tString packageName= lastSlash > (length= this.lastPkgFragmentRootPath.length()) ? resourcePath.substring(length + 1, lastSlash).replace(IPath.SEPARATOR, '.') : IPackageFragment.DEFAULT_PACKAGE_NAME;", "-\t\t\tIPackageFragment pkgFragment= (IPackageFragment) this.packageHandles.get(packageName);", "-\t\t\tif (pkgFragment == null) {", "-\t\t\t\tpkgFragment= this.lastPkgFragmentRoot.getPackageFragment(packageName);", "-\t\t\t\tthis.packageHandles.put(packageName, pkgFragment);", "+\t\t\tresourcePath = resourcePath.substring(this.lastPkgFragmentRootPath.length() + 1);", "+\t\t\tString[] simpleNames = new Path(resourcePath).segments();", "+\t\t\tString[] pkgName;", "+\t\t\tint length = simpleNames.length-1;", "+\t\t\tif (length > 0) {", "+\t\t\t\tpkgName = new String[length];", "+\t\t\t\tSystem.arraycopy(simpleNames, 0, pkgName, 0, length);", "+\t\t\t} else {", "+\t\t\t\tpkgName = CharOperation.NO_STRINGS;", "-\t\t\tString simpleName= resourcePath.substring(lastSlash + 1);", "+\t\t\tIPackageFragment pkgFragment= (IPackageFragment) this.packageHandles.get(pkgName);", "+\t\t\tif (pkgFragment == null) {", "+\t\t\t\tpkgFragment= ((PackageFragmentRoot) this.lastPkgFragmentRoot).getPackageFragment(pkgName);", "+\t\t\t\tthis.packageHandles.put(pkgName, pkgFragment);", "+\t\t\t}", "+\t\t\tString simpleName= simpleNames[length];"]}], "num": 47393}