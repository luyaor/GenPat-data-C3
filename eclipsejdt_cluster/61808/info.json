{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "16b55fa8374cc96f24d6e226ed3e83be", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1df484fca4de5cc3a5b1d465e7b936c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/batch/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationProcessorManager.java", "commitBeforeChange": "2d17c3f3748f5061b72ef32975e0ca27c9d144b7", "commitAfterChange": "e5a2719fd3070db36626a31ae631e601cad79bf0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic List<ICompilationUnit> getNewUnits()", "signatureAfterChange": "  \t@Override \tpublic ICompilationUnit[] getNewUnits()", "diff": ["-\tpublic List<ICompilationUnit> getNewUnits() {", "-\t\treturn this.addedUnits;", "+\t@Override", "+\tpublic ICompilationUnit[] getNewUnits() {", "+\t\tICompilationUnit[] result = new ICompilationUnit[this.addedUnits.size()];", "+\t\tthis.addedUnits.toArray(result);", "+\t\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4ea1e3ab76507d150f3c65619b944f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "37207b2312332e7eb9b138e12e2db23f9f9da53e", "commitAfterChange": "1829731a70d63f049379e6ceb23edadc61e7b589", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " private void createMethods(IBinaryMethod[] iMethods, long sourceLevel, char[][][] missingTypeNames)", "signatureAfterChange": " private IBinaryMethod[] createMethods(IBinaryMethod[] iMethods, long sourceLevel, char[][][] missingTypeNames)", "diff": ["-private void createMethods(IBinaryMethod[] iMethods, long sourceLevel, char[][][] missingTypeNames) {", "+private IBinaryMethod[] createMethods(IBinaryMethod[] iMethods, long sourceLevel, char[][][] missingTypeNames) {", "-\t\treturn;", "+\t\treturn NO_BINARY_METHODS;", "+\t\treturn iMethods;", "+\t\tIBinaryMethod[] mappedBinaryMethods = new IBinaryMethod[total];", "+\t\t\t\tmappedBinaryMethods[index] = iMethods[i];", "+\t\treturn mappedBinaryMethods;"]}], "num": 61808}