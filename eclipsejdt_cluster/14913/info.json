{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f1ff409bb7e3e3b1e8e863b047074c2", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ef2c150f9aff2d1e8fef567c72ec023", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "b89ad18e17834e64930a830c92b5e2241f9a8b44", "commitAfterChange": "d9605208e25375e966739effbd053a969138c830", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void test008()", "signatureAfterChange": " public void test008()", "diff": ["+\tString expectedCompilerLog = (this.complianceLevel == ClassFileConstants.JDK1_6)?", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tvoid dup() {} \\n\" + ", "+\t\t\t\"\t     ^^^^^\\n\" + ", "+\t\t\t\"Duplicate method dup() in type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tvoid values() {} \\n\" + ", "+\t\t\t\"\t     ^^^^^^^^\\n\" + ", "+\t\t\t\"The enum X already defines the method values() implicitly\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tvoid dup() {} \\n\" + ", "+\t\t\t\"\t     ^^^^^\\n\" + ", "+\t\t\t\"Duplicate method dup() in type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tvoid values() {} \\n\" + ", "+\t\t\t\"\t     ^^^^^^^^\\n\" + ", "+\t\t\t\"The enum X already defines the method values() implicitly\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\t\"\tMissing dup() {} \\n\" + ", "+\t\t\t\"\t^^^^^^^\\n\" + ", "+\t\t\t\"Missing cannot be resolved to a type\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"\tMissing dup() {} \\n\" + ", "+\t\t\t\"\t        ^^^^^\\n\" + ", "+\t\t\t\"Duplicate method dup() in type X\\n\" + ", "+\t\t\t\"----------\\n\":", "+\t\t\t\t\"----------\\n\" +", "+\t\t\t\t\"1. ERROR in X.java (at line 7)\\n\" +", "+\t\t\t\t\"\tvoid dup() {} \\n\" +", "+\t\t\t\t\"\t     ^^^^^\\n\" +", "+\t\t\t\t\"Duplicate method dup() in type X\\n\" +", "+\t\t\t\t\"----------\\n\" +", "+\t\t\t\t\"2. ERROR in X.java (at line 8)\\n\" +", "+\t\t\t\t\"\tvoid values() {} \\n\" +", "+\t\t\t\t\"\t     ^^^^^^^^\\n\" +", "+\t\t\t\t\"The enum X already defines the method values() implicitly\\n\" +", "+\t\t\t\t\"----------\\n\" +", "+\t\t\t\t\"3. ERROR in X.java (at line 9)\\n\" +", "+\t\t\t\t\"\tvoid dup() {} \\n\" +", "+\t\t\t\t\"\t     ^^^^^\\n\" +", "+\t\t\t\t\"Duplicate method dup() in type X\\n\" +", "+\t\t\t\t\"----------\\n\" +", "+\t\t\t\t\"4. ERROR in X.java (at line 10)\\n\" +", "+\t\t\t\t\"\tvoid values() {} \\n\" +", "+\t\t\t\t\"\t     ^^^^^^^^\\n\" +", "+\t\t\t\t\"The enum X already defines the method values() implicitly\\n\" +", "+\t\t\t\t\"----------\\n\" +", "+\t\t\t\t\"5. ERROR in X.java (at line 11)\\n\" +", "+\t\t\t\t\"\tMissing dup() {} \\n\" +", "+\t\t\t\t\"\t^^^^^^^\\n\" +", "+\t\t\t\t\"Missing cannot be resolved to a type\\n\" +", "+\t\t\t\t\"----------\\n\" +", "+\t\t\t\t\"6. ERROR in X.java (at line 11)\\n\" +", "+\t\t\t\t\"\tMissing dup() {} \\n\" +", "+\t\t\t\t\"\t        ^^^^^\\n\" +", "+\t\t\t\t\"Duplicate method dup() in type X\\n\" +", "+\t\t\t\t\"----------\\n\";", "-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 7)\\n\" +", "-\t\t\"\tvoid dup() {} \\n\" +", "-\t\t\"\t     ^^^^^\\n\" +", "-\t\t\"Duplicate method dup() in type X\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. ERROR in X.java (at line 8)\\n\" +", "-\t\t\"\tvoid values() {} \\n\" +", "-\t\t\"\t     ^^^^^^^^\\n\" +", "-\t\t\"The enum X already defines the method values() implicitly\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"3. ERROR in X.java (at line 9)\\n\" +", "-\t\t\"\tvoid dup() {} \\n\" +", "-\t\t\"\t     ^^^^^\\n\" +", "-\t\t\"Duplicate method dup() in type X\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"4. ERROR in X.java (at line 10)\\n\" +", "-\t\t\"\tvoid values() {} \\n\" +", "-\t\t\"\t     ^^^^^^^^\\n\" +", "-\t\t\"The enum X already defines the method values() implicitly\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"5. ERROR in X.java (at line 11)\\n\" +", "-\t\t\"\tMissing dup() {} \\n\" +", "-\t\t\"\t^^^^^^^\\n\" +", "-\t\t\"Missing cannot be resolved to a type\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"6. ERROR in X.java (at line 11)\\n\" +", "-\t\t\"\tMissing dup() {} \\n\" +", "-\t\t\"\t        ^^^^^\\n\" +", "-\t\t\"Duplicate method dup() in type X\\n\" +", "-\t\t\"----------\\n\");", "+\t\texpectedCompilerLog);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "657ab63665563555f8aa99366ba1087e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b89ad18e17834e64930a830c92b5e2241f9a8b44", "commitAfterChange": "d9605208e25375e966739effbd053a969138c830", "methodNumberBeforeChange": 252, "methodNumberAfterChange": 252, "signatureBeforeChange": " \tpublic void test0243()", "signatureAfterChange": " \tpublic void test0243()", "diff": ["+\t\tString expectedCompilerLog = (this.complianceLevel == ClassFileConstants.JDK1_6)?", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. WARNING in SubTypes.java (at line 5)\\n\" + ", "+\t\t\t\t\"\t@Override public X foo() { return new X(); }\\n\" + ", "+\t\t\t\t\"\t                   ^^^^^\\n\" + ", "+\t\t\t\t\"Duplicate method foo() in type B\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in SubTypes.java (at line 5)\\n\" + ", "+\t\t\t\t\"\t@Override public X foo() { return new X(); }\\n\" + ", "+\t\t\t\t\"\t                   ^^^^^\\n\" + ", "+\t\t\t\t\"Name clash: The method foo() of type B has the same erasure as foo() of type X but does not override it\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. ERROR in SubTypes.java (at line 5)\\n\" + ", "+\t\t\t\t\"\t@Override public X foo() { return new X(); }\\n\" + ", "+\t\t\t\t\"\t                   ^^^^^\\n\" + ", "+\t\t\t\t\"Name clash: The method foo() of type B has the same erasure as foo() of type X but does not override it\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"4. ERROR in SubTypes.java (at line 5)\\n\" + ", "+\t\t\t\t\"\t@Override public X foo() { return new X(); }\\n\" + ", "+\t\t\t\t\"\t                   ^^^^^\\n\" + ", "+\t\t\t\t\"The method foo() of type B must override or implement a supertype method\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"5. WARNING in SubTypes.java (at line 6)\\n\" + ", "+\t\t\t\t\"\t@Override public B foo() { return this; }\\n\" + ", "+\t\t\t\t\"\t                   ^^^^^\\n\" + ", "+\t\t\t\t\"Duplicate method foo() in type B\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"6. ERROR in SubTypes.java (at line 9)\\n\" + ", "+\t\t\t\t\"\t@Override public X foo() { return new X(); }\\n\" + ", "+\t\t\t\t\"\t                 ^\\n\" + ", "+\t\t\t\t\"The return type is incompatible with A.foo()\\n\" + ", "+\t\t\t\t\"----------\\n\":", "+\t\t\t\t\t\"----------\\n\" +", "+\t\t\t\t\t\"1. ERROR in SubTypes.java (at line 5)\\n\" +", "+\t\t\t\t\t\"\t@Override public X foo() { return new X(); }\\n\" +", "+\t\t\t\t\t\"\t                   ^^^^^\\n\" +", "+\t\t\t\t\t\"Duplicate method foo() in type B\\n\" +", "+\t\t\t\t\t\"----------\\n\" +", "+\t\t\t\t\t\"2. ERROR in SubTypes.java (at line 6)\\n\" +", "+\t\t\t\t\t\"\t@Override public B foo() { return this; }\\n\" +", "+\t\t\t\t\t\"\t                   ^^^^^\\n\" +", "+\t\t\t\t\t\"Duplicate method foo() in type B\\n\" +", "+\t\t\t\t\t\"----------\\n\" +", "+\t\t\t\t\t\"3. ERROR in SubTypes.java (at line 9)\\n\" +", "+\t\t\t\t\t\"\t@Override public X foo() { return new X(); }\\n\" +", "+\t\t\t\t\t\"\t                 ^\\n\" +", "+\t\t\t\t\t\"The return type is incompatible with A.foo()\\n\" +", "+\t\t\t\t\t\"----------\\n\";", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. ERROR in SubTypes.java (at line 5)\\n\" +", "-\t\t\t\"\t@Override public X foo() { return new X(); }\\n\" +", "-\t\t\t\"\t                   ^^^^^\\n\" +", "-\t\t\t\"Duplicate method foo() in type B\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"2. ERROR in SubTypes.java (at line 6)\\n\" +", "-\t\t\t\"\t@Override public B foo() { return this; }\\n\" +", "-\t\t\t\"\t                   ^^^^^\\n\" +", "-\t\t\t\"Duplicate method foo() in type B\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"3. ERROR in SubTypes.java (at line 9)\\n\" +", "-\t\t\t\"\t@Override public X foo() { return new X(); }\\n\" +", "-\t\t\t\"\t                 ^\\n\" +", "-\t\t\t\"The return type is incompatible with A.foo()\\n\" +", "-\t\t\t\"----------\\n\");", "+\t\t\texpectedCompilerLog);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93d33585c376452d0471a9c7bc67fd14", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "b89ad18e17834e64930a830c92b5e2241f9a8b44", "commitAfterChange": "d9605208e25375e966739effbd053a969138c830", "methodNumberBeforeChange": 165, "methodNumberAfterChange": 165, "signatureBeforeChange": " \tpublic void test050e()", "signatureAfterChange": " \tpublic void test050e()", "diff": ["+\t\tString expectedCompilerLog = (this.complianceLevel == ClassFileConstants.JDK1_6)?", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. WARNING in X.java (at line 2)\\n\" + ", "+\t\t\t\t\"\t<N extends B> N a(A<String> s) { return null; }\\n\" + ", "+\t\t\t\t\"\t                ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Method a(A<String>) has the same erasure a(A<T>) as another method in type X\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\t\"\t<N> Object a(A<Number> n) { return null; }\\n\" + ", "+\t\t\t\t\"\t           ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Method a(A<Number>) has the same erasure a(A<T>) as another method in type X\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\t\t\"\t<N extends B> void b(A<String> s) {}\\n\" + ", "+\t\t\t\t\"\t                   ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Method b(A<String>) has the same erasure b(A<T>) as another method in type X\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"4. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\t\"\t<N extends B> B b(A<Number> n) { return null; }\\n\" + ", "+\t\t\t\t\"\t                ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Method b(A<Number>) has the same erasure b(A<T>) as another method in type X\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"5. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\tvoid c(A<String> s) {}\\n\" + ", "+\t\t\t\t\"\t     ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Method c(A<String>) has the same erasure c(A<T>) as another method in type X\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"6. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\t\"\tB c(A<Number> n) { return null; }\\n\" + ", "+\t\t\t\t\"\t  ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Method c(A<Number>) has the same erasure c(A<T>) as another method in type X\\n\" + ", "+\t\t\t\t\"----------\\n\":", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\t\t\"\t<N extends B> N a(A<String> s) { return null; }\\n\" + ", "+\t\t\t\t\t\"\t                ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\t\"Method a(A<String>) has the same erasure a(A<T>) as another method in type X\\n\" + ", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"2. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\t\t\"\t<N> Object a(A<Number> n) { return null; }\\n\" + ", "+\t\t\t\t\t\"\t           ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\t\"Method a(A<Number>) has the same erasure a(A<T>) as another method in type X\\n\" + ", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"3. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\t\t\"\t<N extends B> void b(A<String> s) {}\\n\" + ", "+\t\t\t\t\t\"\t                   ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\t\"Method b(A<String>) has the same erasure b(A<T>) as another method in type X\\n\" + ", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"4. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\t\t\"\t<N extends B> B b(A<Number> n) { return null; }\\n\" + ", "+\t\t\t\t\t\"\t                ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\t\"Method b(A<Number>) has the same erasure b(A<T>) as another method in type X\\n\" + ", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"5. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\t\t\"\tvoid c(A<String> s) {}\\n\" + ", "+\t\t\t\t\t\"\t     ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\t\"Method c(A<String>) has the same erasure c(A<T>) as another method in type X\\n\" + ", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"6. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\t\t\"\tB c(A<Number> n) { return null; }\\n\" + ", "+\t\t\t\t\t\"\t  ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\t\"Method c(A<Number>) has the same erasure c(A<T>) as another method in type X\\n\" + ", "+\t\t\t\t\t\"----------\\n\";", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "-\t\t\t\"\t<N extends B> N a(A<String> s) { return null; }\\n\" + ", "-\t\t\t\"\t                ^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Method a(A<String>) has the same erasure a(A<T>) as another method in type X\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 3)\\n\" + ", "-\t\t\t\"\t<N> Object a(A<Number> n) { return null; }\\n\" + ", "-\t\t\t\"\t           ^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Method a(A<Number>) has the same erasure a(A<T>) as another method in type X\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\"\t<N extends B> void b(A<String> s) {}\\n\" + ", "-\t\t\t\"\t                   ^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Method b(A<String>) has the same erasure b(A<T>) as another method in type X\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\t\"\t<N extends B> B b(A<Number> n) { return null; }\\n\" + ", "-\t\t\t\"\t                ^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Method b(A<Number>) has the same erasure b(A<T>) as another method in type X\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"5. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\t\"\tvoid c(A<String> s) {}\\n\" + ", "-\t\t\t\"\t     ^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Method c(A<String>) has the same erasure c(A<T>) as another method in type X\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"6. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\t\"\tB c(A<Number> n) { return null; }\\n\" + ", "-\t\t\t\"\t  ^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Method c(A<Number>) has the same erasure c(A<T>) as another method in type X\\n\" + ", "-\t\t\t\"----------\\n\"", "+\t\t\texpectedCompilerLog"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a04b9186abea6ad4929fc5ccdd117880", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "b89ad18e17834e64930a830c92b5e2241f9a8b44", "commitAfterChange": "d9605208e25375e966739effbd053a969138c830", "methodNumberBeforeChange": 189, "methodNumberAfterChange": 189, "signatureBeforeChange": " \tpublic void test058a()", "signatureAfterChange": " \tpublic void test058a()", "diff": ["+\t\tString expectedCompilerLog = (this.complianceLevel == ClassFileConstants.JDK1_6)?", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\t\"\tnew X<Object>().foo(\\\"X\\\");\\n\" + ", "+\t\t\t\t\"\t                ^^^\\n\" + ", "+\t\t\t\t\"The method foo(String) is ambiguous for the type X<Object>\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\t\"\tnew X<Object>().foo2(\\\"X\\\");\\n\" + ", "+\t\t\t\t\"\t                ^^^^\\n\" + ", "+\t\t\t\t\"The method foo2(String) is ambiguous for the type X<Object>\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\t<T> T foo(T t) {return null;}\\n\" + ", "+\t\t\t\t\"\t      ^^^^^^^^\\n\" + ", "+\t\t\t\t\"Method foo(T) has the same erasure foo(Object) as another method in type X<A>\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"4. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\t\"\tvoid foo(A a) {}\\n\" + ", "+\t\t\t\t\"\t     ^^^^^^^^\\n\" + ", "+\t\t\t\t\"Method foo(A) has the same erasure foo(Object) as another method in type X<A>\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"5. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\t\"\t<T> T foo2(T t) {return null;}\\n\" + ", "+\t\t\t\t\"\t      ^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Method foo2(T) has the same erasure foo2(Object) as another method in type X<A>\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"6. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\t\"\t<T> void foo2(A a) {}\\n\" + ", "+\t\t\t\t\"\t         ^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Method foo2(A) has the same erasure foo2(Object) as another method in type X<A>\\n\" + ", "+\t\t\t\t\"----------\\n\":", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\t\t\"\t<T> T foo(T t) {return null;}\\n\" + ", "+\t\t\t\t\t\"\t      ^^^^^^^^\\n\" + ", "+\t\t\t\t\t\"Method foo(T) has the same erasure foo(Object) as another method in type X<A>\\n\" + ", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"2. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\t\t\"\tvoid foo(A a) {}\\n\" + ", "+\t\t\t\t\t\"\t     ^^^^^^^^\\n\" + ", "+\t\t\t\t\t\"Method foo(A) has the same erasure foo(Object) as another method in type X<A>\\n\" + ", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"3. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\t\t\"\t<T> T foo2(T t) {return null;}\\n\" + ", "+\t\t\t\t\t\"\t      ^^^^^^^^^\\n\" + ", "+\t\t\t\t\t\"Method foo2(T) has the same erasure foo2(Object) as another method in type X<A>\\n\" + ", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"4. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\t\t\"\t<T> void foo2(A a) {}\\n\" + ", "+\t\t\t\t\t\"\t         ^^^^^^^^^\\n\" + ", "+\t\t\t\t\t\"Method foo2(A) has the same erasure foo2(Object) as another method in type X<A>\\n\" + ", "+\t\t\t\t\t\"----------\\n\";", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\t\"\t<T> T foo(T t) {return null;}\\n\" + ", "-\t\t\t\"\t      ^^^^^^^^\\n\" + ", "-\t\t\t\"Method foo(T) has the same erasure foo(Object) as another method in type X<A>\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\t\"\tvoid foo(A a) {}\\n\" + ", "-\t\t\t\"\t     ^^^^^^^^\\n\" + ", "-\t\t\t\"Method foo(A) has the same erasure foo(Object) as another method in type X<A>\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 8)\\n\" + ", "-\t\t\t\"\t<T> T foo2(T t) {return null;}\\n\" + ", "-\t\t\t\"\t      ^^^^^^^^^\\n\" + ", "-\t\t\t\"Method foo2(T) has the same erasure foo2(Object) as another method in type X<A>\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. ERROR in X.java (at line 9)\\n\" + ", "-\t\t\t\"\t<T> void foo2(A a) {}\\n\" + ", "-\t\t\t\"\t         ^^^^^^^^^\\n\" + ", "-\t\t\t\"Method foo2(A) has the same erasure foo2(Object) as another method in type X<A>\\n\" + ", "-\t\t\t\"----------\\n\"", "+\t\t\texpectedCompilerLog"]}], "num": 14913}