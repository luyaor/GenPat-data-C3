{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5d98043911499c4dc9e3d787513f3307", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4520885eed92f86182b5f75fb5b80f8e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " \t \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\tif ((left.constant != NotAConstant) && (left.constant.typeID() == T_boolean)) {", "+\t\t\tif ((left.constant != Constant.NotAConstant) && (left.constant.typeID() == T_boolean)) {", "-\t\t\tif ((right.constant != NotAConstant) && (right.constant.typeID() == T_boolean)) {", "+\t\t\tif ((right.constant != Constant.NotAConstant) && (right.constant.typeID() == T_boolean)) {", "-\t\t\tif ((left.constant != NotAConstant) && (left.constant.typeID() == T_boolean)) {", "+\t\t\tif ((left.constant != Constant.NotAConstant) && (left.constant.typeID() == T_boolean)) {", "-\t\t\tif ((right.constant != NotAConstant) && (right.constant.typeID() == T_boolean)) {", "+\t\t\tif ((right.constant != Constant.NotAConstant) && (right.constant.typeID() == T_boolean)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b84a59147529aefa5195525b9464f19", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Javadoc.java", "commitBeforeChange": "5e23ed7edfe961d34bd26ee29fb9ade957409733", "commitAfterChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprivate void resolveReference(Expression reference, Scope scope)", "signatureAfterChange": " \t \tprivate void resolveReference(Expression reference, Scope scope)", "diff": ["-\t\t\t\tif (fieldRef.tagValue == AbstractCommentParser.TAG_VALUE_VALUE) {", "+\t\t\t\tif (fieldRef.tagValue == JavadocTagConstants.TAG_VALUE_VALUE) {", "-\t\t\t\tif (fieldRef.tagValue == AbstractCommentParser.TAG_VALUE_VALUE && !fieldRef.binding.isStatic()) {", "+\t\t\t\tif (fieldRef.tagValue == JavadocTagConstants.TAG_VALUE_VALUE && !fieldRef.binding.isStatic()) {", "-\t\t\tif (msgSend.tagValue == AbstractCommentParser.TAG_VALUE_VALUE) { // cannot refer to method for @value tag", "+\t\t\tif (msgSend.tagValue == JavadocTagConstants.TAG_VALUE_VALUE) { // cannot refer to method for @value tag", "-\t\t\tif (alloc.tagValue == AbstractCommentParser.TAG_VALUE_VALUE) { // cannot refer to method for @value tag", "+\t\t\tif (alloc.tagValue == JavadocTagConstants.TAG_VALUE_VALUE) { // cannot refer to method for @value tag"]}], "num": 72425}