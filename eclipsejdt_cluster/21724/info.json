{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "29b1a644f0d41575696adce3ef1dfbaa", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "119ecc9663b33f1b1f4bb90fcac82708", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FinallyFlowContext.java", "commitBeforeChange": "6959c7be7767b62f5fa53e20bd2cfda242ece473", "commitAfterChange": "a13c822f6e072c300a8032fb994879857c034ca1", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void recordUnboxing(Scope scope, Expression expression, FlowInfo flowInfo)", "signatureAfterChange": " public void recordUnboxing(Scope scope, Expression expression, int nullStatus, FlowInfo flowInfo)", "diff": ["-public void recordUnboxing(Scope scope, Expression expression, FlowInfo flowInfo) {", "-\t// defer checking:", "-\trecordNullReference(null, expression, IN_UNBOXING);", "+public void recordUnboxing(Scope scope, Expression expression, int nullStatus, FlowInfo flowInfo) {", "+\tif (nullStatus == FlowInfo.NULL)", "+\t\tsuper.recordUnboxing(scope, expression, nullStatus, flowInfo);", "+\telse // defer checking:", "+\t\trecordNullReference(null, expression, IN_UNBOXING);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43135ef1572c071132fa99f47fdbccf3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "6959c7be7767b62f5fa53e20bd2cfda242ece473", "commitAfterChange": "a13c822f6e072c300a8032fb994879857c034ca1", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void recordUnboxing(Scope scope, Expression expression, FlowInfo flowInfo)", "signatureAfterChange": " public void recordUnboxing(Scope scope, Expression expression, int nullStatus, FlowInfo flowInfo)", "diff": ["-public void recordUnboxing(Scope scope, Expression expression, FlowInfo flowInfo) {", "-\t// defer checking:", "-\trecordNullReference(null, expression, IN_UNBOXING);", "+public void recordUnboxing(Scope scope, Expression expression, int nullStatus, FlowInfo flowInfo) {", "+\tif (nullStatus == FlowInfo.NULL)", "+\t\tsuper.recordUnboxing(scope, expression, nullStatus, flowInfo);", "+\telse // defer checking:", "+\t\trecordNullReference(null, expression, IN_UNBOXING);"]}], "num": 21724}