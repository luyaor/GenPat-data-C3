{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "53d3655373591db673dc73d227598627", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e222dee625b263223947ff5b286a626", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "d8f7412a7e197e30b6fcc17db5eeaf7d2638563c", "commitAfterChange": "b80780a7f472c2384c681f831c578ec77037e0cb", "methodNumberBeforeChange": 308, "methodNumberAfterChange": 308, "signatureBeforeChange": " public void unsafeRawInvocation(ASTNode location, TypeBinding receiverType, MethodBinding method)", "signatureAfterChange": " public void unsafeRawInvocation(ASTNode location, MethodBinding rawMethod)", "diff": ["-public void unsafeRawInvocation(ASTNode location, TypeBinding receiverType, MethodBinding method) {", "-    if (method.isConstructor()) {", "+public void unsafeRawInvocation(ASTNode location, MethodBinding rawMethod) {", "+    if (rawMethod.isConstructor()) {", "-\t\t\t\tnew String(receiverType.readableName()),", "-\t\t\t\ttypesAsString(method.original().isVarargs(), method.original().parameters, false),", "-\t\t\t\tnew String(receiverType.erasure().readableName()),", "+\t\t\t\tnew String(rawMethod.declaringClass.readableName()),", "+\t\t\t\ttypesAsString(rawMethod.original().isVarargs(), rawMethod.parameters, false),", "+\t\t\t\tnew String(rawMethod.declaringClass.erasure().readableName()),", "-\t\t\t\tnew String(receiverType.shortReadableName()),", "-\t\t\t\ttypesAsString(method.original().isVarargs(), method.original().parameters, true),", "-\t\t\t\tnew String(receiverType.erasure().shortReadableName()),", "+\t\t\t\tnew String(rawMethod.declaringClass.shortReadableName()),", "+\t\t\t\ttypesAsString(rawMethod.original().isVarargs(), rawMethod.parameters, true),", "+\t\t\t\tnew String(rawMethod.declaringClass.erasure().shortReadableName()),", "-\t\t\t\tnew String(method.selector),", "-\t\t\t\ttypesAsString(method.original().isVarargs(), method.original().parameters, false),", "-\t\t\t\tnew String(receiverType.readableName()),", "-\t\t\t\tnew String(receiverType.erasure().readableName()),", "+\t\t\t\tnew String(rawMethod.selector),", "+\t\t\t\ttypesAsString(rawMethod.original().isVarargs(), rawMethod.parameters, false),", "+\t\t\t\tnew String(rawMethod.declaringClass.readableName()),", "+\t\t\t\tnew String(rawMethod.declaringClass.erasure().readableName()),", "-\t\t\t\tnew String(method.selector),", "-\t\t\t\ttypesAsString(method.original().isVarargs(), method.original().parameters, true),", "-\t\t\t\tnew String(receiverType.shortReadableName()),", "-\t\t\t\tnew String(receiverType.erasure().shortReadableName()),", "+\t\t\t\tnew String(rawMethod.selector),", "+\t\t\t\ttypesAsString(rawMethod.original().isVarargs(), rawMethod.parameters, true),", "+\t\t\t\tnew String(rawMethod.declaringClass.shortReadableName()),", "+\t\t\t\tnew String(rawMethod.declaringClass.erasure().shortReadableName()),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4ce6e32f09c8a960785e5024c9ecdc3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "20306af2785b6993ef03f5b59102e1d76672145c", "commitAfterChange": "288301050e750c96e441bffa1d7a0c7b5ea96099", "methodNumberBeforeChange": 384, "methodNumberAfterChange": 384, "signatureBeforeChange": " public void varargsArgumentNeedCast(MethodBinding method, TypeBinding argumentType, InvocationSite location)", "signatureAfterChange": " public void varargsArgumentNeedCast(MethodBinding method, TypeBinding argumentType, InvocationSite location)", "diff": ["-\tTypeBinding lastParam = method.parameters[method.parameters.length-1];", "+\tif (this.options.getSeverity(CompilerOptions.VarargsArgumentNeedCast) == ProblemSeverities.Ignore) return;", "+\tArrayBinding varargsType = (ArrayBinding)method.parameters[method.parameters.length-1];", "-\t\t\tnew String[] {new String(argumentType.readableName()), new String(lastParam.readableName()), new String(method.declaringClass.readableName()), typesAsString(method.isVarargs(), method.parameters, false), },", "-\t\t\tnew String[] {new String(argumentType.shortReadableName()), new String(lastParam.shortReadableName()), new String(method.declaringClass.shortReadableName()), typesAsString(method.isVarargs(), method.parameters, true), },", "+\t\t\tnew String[] {", "+\t\t\t\t\tnew String(argumentType.readableName()), ", "+\t\t\t\t\tnew String(varargsType.readableName()), ", "+\t\t\t\t\tnew String(method.declaringClass.readableName()), ", "+\t\t\t\t\ttypesAsString(method.isVarargs(), method.parameters, false), ", "+\t\t\t\t\tnew String(varargsType.elementsType().readableName()), ", "+\t\t\t},", "+\t\t\tnew String[] {", "+\t\t\t\t\tnew String(argumentType.shortReadableName()), ", "+\t\t\t\t\tnew String(varargsType.shortReadableName()), ", "+\t\t\t\t\tnew String(method.declaringClass.shortReadableName()), ", "+\t\t\t\t\ttypesAsString(method.isVarargs(), method.parameters, true), ", "+\t\t\t\t\tnew String(varargsType.elementsType().shortReadableName()), ", "+\t\t\t},", "-\t\t\tnew String[] { new String(argumentType.readableName()), new String(lastParam.readableName()), new String(method.selector), typesAsString(method.isVarargs(), method.parameters, false), new String(method.declaringClass.readableName()), },", "-\t\t\tnew String[] { new String(argumentType.shortReadableName()), new String(lastParam.shortReadableName()), new String(method.selector), typesAsString(method.isVarargs(), method.parameters, true), new String(method.declaringClass.shortReadableName()), },", "+\t\t\tnew String[] { ", "+\t\t\t\t\tnew String(argumentType.readableName()), ", "+\t\t\t\t\tnew String(varargsType.readableName()), ", "+\t\t\t\t\tnew String(method.selector), ", "+\t\t\t\t\ttypesAsString(method.isVarargs(), method.parameters, false), ", "+\t\t\t\t\tnew String(method.declaringClass.readableName()), ", "+\t\t\t\t\tnew String(varargsType.elementsType().readableName()), ", "+\t\t\t},", "+\t\t\tnew String[] { ", "+\t\t\t\t\tnew String(argumentType.shortReadableName()), ", "+\t\t\t\t\tnew String(varargsType.shortReadableName()), ", "+\t\t\t\t\tnew String(method.selector), typesAsString(method.isVarargs(), method.parameters, true), ", "+\t\t\t\t\tnew String(method.declaringClass.shortReadableName()), ", "+\t\t\t\t\tnew String(varargsType.elementsType().shortReadableName()), ", "+\t\t\t},"]}], "num": 3032}