{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "70e537f0f341b5331de8529d7e3a5b96", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b3e7b03564ba68bafedbc3256cc19d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "a69ec5abfba2adcf10fe50b7c7be7bc087bd47c7", "commitAfterChange": "d374bfa7e21a5d23d3c735ffc8f5182f471c68aa", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void selectType(ISourceType sourceType, char[] typeName, ISourceType[] topLevelTypes, boolean searchInEnvironment)", "signatureAfterChange": " \tpublic void selectType(ISourceType sourceType, char[] typeName, ISourceType[] topLevelTypes, boolean searchInEnvironment)", "diff": ["-\t\t\t\tchar[] packageName = sourceType.getPackageName();", "-\t\t\t\tchar[] sourceTypeName = sourceType.getQualifiedName();", "-\t\t\t\t// the fully qualified name without the package name", "-\t\t\t\tif (packageName != null) {", "-\t\t\t\t\t// remove the package name if necessary", "-\t\t\t\t\tsourceTypeName =", "-\t\t\t\t\t\tCharOperation.subarray(", "-\t\t\t\t\t\t\tsourceType.getQualifiedName(),", "-\t\t\t\t\t\t\tpackageName.length + 1,", "-\t\t\t\t\t\t\tsourceTypeName.length);", "-\t\t\t\t}", "-\t\t\t\tTypeDeclaration typeDecl =", "-\t\t\t\t\tparsedUnit.declarationOfType(CharOperation.splitOn('.', sourceTypeName));", "+\t\t\t\tif (!(sourceType instanceof SourceTypeElementInfo)) return;", "+\t\t\t\tIType typeHandle = ((SourceTypeElementInfo)sourceType).getHandle();", "+\t\t\t\tTypeDeclaration typeDecl = findDeclarationOfType(typeHandle, parsedUnit);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea36ae200bb6dc89ff4113985d9c4c67", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "d46e1ccbb023e74ad098bcb90a01352d0818cdd9", "commitAfterChange": "35ead0e7ce432d7626acb0525e202b29c00f7865", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic void selectType(ISourceType sourceType, char[] typeName, ISourceType[] topLevelTypes, boolean searchInEnvironment)", "signatureAfterChange": " \tpublic void selectType(ISourceType sourceType, char[] typeName, SourceTypeElementInfo[] topLevelTypes, boolean searchInEnvironment)", "diff": ["-\tpublic void selectType(ISourceType sourceType, char[] typeName, ISourceType[] topLevelTypes, boolean searchInEnvironment) {", "+\tpublic void selectType(ISourceType sourceType, char[] typeName, SourceTypeElementInfo[] topLevelTypes, boolean searchInEnvironment) {", "+\t\t\tif (!(sourceType instanceof SourceTypeElementInfo)) return;", "+\t\t\tSourceType typeHandle = (SourceType) ((SourceTypeElementInfo)sourceType).getHandle();", "-\t\t\t\tSourceTypeConverter.buildCompilationUnit(", "+\t\t\t\tElementInfoConverter.buildCompilationUnit(", "-\t\t\t\t\t\t// no need for field and methods", "-\t\t\t\t\t\tSourceTypeConverter.MEMBER_TYPE, // need member types", "-\t\t\t\t\t\t// no need for field initialization", "+\t\t\t\t\t\ttypeHandle.isAnonymous() || typeHandle.isLocal(),", "-\t\t\t\tif (!(sourceType instanceof SourceTypeElementInfo)) return;", "-\t\t\t\tIType typeHandle = ((SourceTypeElementInfo)sourceType).getHandle();"]}], "num": 48338}