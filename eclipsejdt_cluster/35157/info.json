{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "94ad670208a9791932025c039179c0ea", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53391501ae9ebb5194d92021d7dd7bff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " \tpublic IClasspathEntry[] getExpandedClasspath(boolean ignoreUnresolvedVariable)\tthrows JavaModelException", "signatureAfterChange": " \tpublic IClasspathEntry[] getExpandedClasspath()\tthrows JavaModelException", "diff": ["-\tpublic IClasspathEntry[] getExpandedClasspath(boolean ignoreUnresolvedVariable)\tthrows JavaModelException {", "+\tpublic IClasspathEntry[] getExpandedClasspath()\tthrows JavaModelException {", "-\t\t\treturn getExpandedClasspath(ignoreUnresolvedVariable, false/*don't create markers*/, null, null);", "-\t}", "+\t\t\tObjectVector accumulatedEntries = new ObjectVector();\t\t", "+\t\t\tcomputeExpandedClasspath(null, new HashSet(5), accumulatedEntries);", "+\t\t\t", "+\t\t\tIClasspathEntry[] expandedPath = new IClasspathEntry[accumulatedEntries.size()];", "+\t\t\taccumulatedEntries.copyInto(expandedPath);", "+\t\t\t", "+\t\t\treturn expandedPath;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4ac9ef9b38c4199a6d0ac71211664a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "a262b5af4032b43a755aa27634102b39ece22487", "commitAfterChange": "f23b5454f1ff57141b5d3b54b81fb753a1898b7e", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "\r \tpublic IClasspathEntry[] getExpandedClasspath(\r \t\tboolean ignoreUnresolvedVariable,\r \t\tboolean generateMarkerOnError)\tthrows JavaModelException", "signatureAfterChange": "\r \tpublic IClasspathEntry[] getExpandedClasspath(\r \t\tboolean ignoreUnresolvedVariable,\r \t\tboolean generateMarkerOnError)\tthrows JavaModelException", "diff": ["+\t\t// expanded path is cached on its info\r", "+//\t\tIClasspathEntry[] infoPath = getJavaProjectElementInfo().lastExpandedClasspath;\r", "+//\t\tif (infoPath != null) return infoPath;\r", "+\t\t\r", "-\t\tIClasspathEntry[] result = new IClasspathEntry[accumulatedEntries.size()];\r", "-\t\taccumulatedEntries.copyInto(result);\r", "-\t\treturn result;\r", "+\t\tIClasspathEntry[] expandedPath = new IClasspathEntry[accumulatedEntries.size()];\r", "+\t\taccumulatedEntries.copyInto(expandedPath);\r", "+\t\t\r", "+//\t\tgetJavaProjectElementInfo().lastExpandedClasspath = expandedPath;\r", "+\t\treturn expandedPath;\r"]}], "num": 35157}