{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e5e30a67d0361935d7867ab40525f1de", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f99e8753589ce707579dbf8e23f8729", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "454c09645419e42e424c8ed7d147ba861f3f0f93", "commitAfterChange": "9d8ef2fe9a94d29d41ecb29dff07f3d9ede1a855", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tprotected void updateCycleMarkers(IClasspathEntry[] newResolvedPath)", "signatureAfterChange": " \tprotected void updateCycleMarkersIfNecessary(IClasspathEntry[] newResolvedPath)", "diff": ["-\tprotected void updateCycleMarkers(IClasspathEntry[] newResolvedPath) {", "-\t\t", "+\tprotected void updateCycleMarkersIfNecessary(IClasspathEntry[] newResolvedPath) {", "+", "+\t\tif (!this.needCycleCheck) return;", "-\t\t\tJavaProject.updateAllCycleMarkers();", "+\t\t\tpostAction(", "+\t\t\t\tnew IPostAction() {", "+\t\t\t\t\tpublic String getID() {", "+\t\t\t\t\t\treturn \"updateCycleMarkers\";  //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t\tpublic void run() throws JavaModelException {", "+\t\t\t\t\t\tJavaProject.updateAllCycleMarkers();", "+\t\t\t\t\t}", "+\t\t\t\t},", "+\t\t\t\tREMOVEALL_APPEND);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a9144e919bcbbbda47007962b99d71b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "505b0db16406f11df3227a34e8e784faefbd6e90", "commitAfterChange": "09731db443a17aa3c4de981e4334f98fc716832d", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tprotected void updateAffectedProjects(IPath prerequisiteProjectPath)", "signatureAfterChange": " \tprotected void updateAffectedProjects(IPath prerequisiteProjectPath)", "diff": ["+\t\t// remove all update classpath post actions for this project", "+\t\tremoveAllPostAction(prerequisiteProjectPath.toString());", "+\t\t", "-\t\t\t\t\tJavaProject affectedProject = (JavaProject) projects[i];", "+\t\t\t\t\tfinal JavaProject affectedProject = (JavaProject) projects[i];", "-\t\t\t\t\t\t\taffectedProject.setRawClasspath(", "-\t\t\t\t\t\t\t\tUpdateClasspath, ", "-\t\t\t\t\t\t\t\tSetClasspathOperation.ReuseOutputLocation, ", "-\t\t\t\t\t\t\t\tthis.fMonitor, ", "-\t\t\t\t\t\t\t\tthis.canChangeResource,  ", "-\t\t\t\t\t\t\t\taffectedProject.getResolvedClasspath(true), ", "-\t\t\t\t\t\t\t\tfalse, // updating only - no validation", "-\t\t\t\t\t\t\t\tfalse); // updating only - no need to save", "+\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tpostAction(new IPostAction() {", "+\t\t\t\t\t\t\t\t\tpublic String getID() {", "+\t\t\t\t\t\t\t\t\t\treturn affectedProject.getPath().toString();", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tpublic void run() throws JavaModelException {", "+\t\t\t\t\t\t\t\t\t\taffectedProject.setRawClasspath(", "+\t\t\t\t\t\t\t\t\t\t\tUpdateClasspath, ", "+\t\t\t\t\t\t\t\t\t\t\tSetClasspathOperation.ReuseOutputLocation, ", "+\t\t\t\t\t\t\t\t\t\t\tSetClasspathOperation.this.fMonitor, ", "+\t\t\t\t\t\t\t\t\t\t\tSetClasspathOperation.this.canChangeResource,  ", "+\t\t\t\t\t\t\t\t\t\t\taffectedProject.getResolvedClasspath(true), ", "+\t\t\t\t\t\t\t\t\t\t\tfalse, // updating only - no validation", "+\t\t\t\t\t\t\t\t\t\t\tfalse); // updating only - no need to save", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t},", "+\t\t\t\t\t\t\t\tREMOVEALL_APPEND);"]}], "num": 26096}