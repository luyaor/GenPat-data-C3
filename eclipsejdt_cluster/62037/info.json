{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c43fff6c2a32fe75c2b3eda3baeb5b58", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fb4163c7e4068021095960fc6c2b19f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayReference.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void generateCompoundAssignment( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tExpression expression, \t\tint operator, \t\tint assignmentImplicitConversion, \t\tboolean valueRequired)", "signatureAfterChange": "  \tpublic void generateCompoundAssignment( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tExpression expression, \t\tint operator, \t\tint assignmentImplicitConversion, \t\tboolean valueRequired)", "diff": ["-\t\t\t\t&& ((CastExpression)receiver).innermostCastedExpression().resolvedType == NullBinding){", "+\t\t\t\t&& ((CastExpression)receiver).innermostCastedExpression().resolvedType == TypeBinding.NULL){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e466190f0a48a747f799594f1785f8c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayReference.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void generateAssignment( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tAssignment assignment, \t\tboolean valueRequired)", "signatureAfterChange": "  \tpublic void generateAssignment( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tAssignment assignment, \t\tboolean valueRequired)", "diff": ["-\t\t\t\t&& ((CastExpression)receiver).innermostCastedExpression().resolvedType == NullBinding){", "+\t\t\t\t&& ((CastExpression)receiver).innermostCastedExpression().resolvedType == TypeBinding.NULL){"]}], "num": 62037}