{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a0556ac6a7a133c0f80d51bba5b64c4", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0560051ca1684f395b8b724241edd901", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/ScannerHelper.java", "commitBeforeChange": "bb83bb6bb9594ac07e759b1e208acbe513439625", "commitAfterChange": "63a2bd4c74ebb3556af5997ff509e8a50b9888ad", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public static boolean isJavaIdentifierPart(char high, char low)", "signatureAfterChange": " public static boolean isJavaIdentifierPart(char c)", "diff": ["-", "+public static boolean isJavaIdentifierPart(char c) {", "+\tif (c < MAX_OBVIOUS) {", "+\t\treturn (ScannerHelper.OBVIOUS_IDENT_CHAR_NATURES[c] & (ScannerHelper.C_UPPER_LETTER | ScannerHelper.C_LOWER_LETTER | ScannerHelper.C_IDENT_PART | ScannerHelper.C_DIGIT)) != 0;", "+\t}", "+\treturn Character.isJavaIdentifierPart(c);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1508bb91ad6b5b1d57633e161b3d5fd4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "91510ee1ea5206403f95c9b316aaa14af70c8d8e", "commitAfterChange": "a53e05883d2e536e6d912a85c946fd372aae0f56", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 36, "signatureBeforeChange": "  public JavaSearchMatch newReferenceMatch( \t\tint referenceType, \t\tIJavaElement enclosingElement, \t\tint accuracy, \t\tint sourceStart,   \t\tint sourceEnd)", "signatureAfterChange": "  public JavaSearchMatch newTypeReferenceMatch( \t\tIJavaElement enclosingElement, \t\tint accuracy, \t\tint sourceStart,   \t\tint sourceEnd, \t\tASTNode reference)", "diff": ["-public JavaSearchMatch newReferenceMatch(", "-\t\tint referenceType,", "-\t\tint sourceEnd) {", "-\tswitch (referenceType) {", "-\t\tcase IJavaElement.PACKAGE_FRAGMENT:", "-\t\t\treturn new PackageReferenceMatch(enclosingElement, accuracy, sourceStart, sourceEnd, participant, resource);", "-\t\tcase IJavaElement.TYPE:", "-\t\t\treturn new TypeReferenceMatch(enclosingElement, accuracy, sourceStart, sourceEnd, participant, resource);", "-\t\t//case IJavaElement.FIELD:", "-\t\t\t// handled by newFieldReferenceMatch", "-\t\tcase IJavaElement.METHOD:", "-\t\t\treturn new MethodReferenceMatch(enclosingElement, accuracy, sourceStart, sourceEnd, participant, resource);", "-\t\tcase IJavaElement.LOCAL_VARIABLE:", "-\t\t\treturn new LocalVariableReferenceMatch(enclosingElement, accuracy, sourceStart, sourceEnd, participant, resource);", "-\t\tdefault:", "-\t\t\treturn null;", "-\t}", "+", "+public JavaSearchMatch newTypeReferenceMatch(", "+\t\tIJavaElement enclosingElement,", "+\t\tint accuracy,", "+\t\tint sourceStart,  ", "+\t\tint sourceEnd,", "+\t\tASTNode reference) {", "+\tSearchParticipant participant = getParticipant(); ", "+\tIResource resource = this.currentPossibleMatch.resource;", "+\tboolean insideDocComment = ", "+\t\treference instanceof JavadocArrayQualifiedTypeReference", "+\t\t|| reference instanceof JavadocArraySingleTypeReference", "+\t\t|| reference instanceof JavadocQualifiedTypeReference", "+\t\t|| reference instanceof JavadocSingleNameReference", "+\t\t|| reference instanceof JavadocSingleTypeReference;", "+\treturn new TypeReferenceMatch(enclosingElement, accuracy, sourceStart, sourceEnd, insideDocComment, participant, resource);", "+}"]}], "num": 143}