{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9ee7d1e0d6e8e7f7e4f722fed8cef080", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "647a515e8807537d58055048f3a5a60f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateTypeMemberOperation.java", "commitBeforeChange": "90d481edc9060cc498a8f085b08186108312e37b", "commitAfterChange": "f3a3c06f6e68ab7680c250209b9759ac3d56fec6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": " public IJavaModelStatus verify()", "signatureAfterChange": " public IJavaModelStatus verify()", "diff": ["-\tIJavaElement parent = getParentElement(); // non-null since check was done in supper", "-\tMember localContext;", "-\tif (parent instanceof Member && (localContext = ((Member)parent).getOuterMostLocalContext()) != null && localContext != parent) {", "-\t\t// JDOM doesn't support source manipulation in local/anonymous types", "-\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_ELEMENT_TYPES, parent);", "-\t}", "-\tif (fSource == null) {", "+\tif (this.source == null) {", "-\t\t\tdeprecatedGenerateElementDOM();", "+\t\t\tICompilationUnit cu = getCompilationUnit();", "+\t\t\tgenerateElementAST(null, getDocument(cu), cu);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80b59252c671b1a4bc66a5639c498dd7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": " \t \tprivate BlockScope lookupScope(ASTNode node)", "signatureAfterChange": " \t \tprivate BlockScope lookupScope(ASTNode node)", "diff": ["-\t\t\t} else if (currentNode instanceof EnumDeclaration) {", "-\t\t\t\torg.eclipse.jdt.internal.compiler.ast.EnumDeclaration enumDecl = (org.eclipse.jdt.internal.compiler.ast.EnumDeclaration) this.ast.getBindingResolver().getCorrespondingNode(currentNode);", "-\t\t\t\tif ((initializer.getModifiers() & Modifier.STATIC) != 0) {", "-\t\t\t\t\treturn enumDecl.staticInitializerScope;", "-\t\t\t\t} else {", "-\t\t\t\t\treturn enumDecl.initializerScope;", "-\t\t\t\t}", "-\t\t\t\torg.eclipse.jdt.internal.compiler.ast.EnumDeclaration enumDecl = (org.eclipse.jdt.internal.compiler.ast.EnumDeclaration) this.ast.getBindingResolver().getCorrespondingNode(currentNode);", "+\t\t\t\torg.eclipse.jdt.internal.compiler.ast.TypeDeclaration enumDecl = (org.eclipse.jdt.internal.compiler.ast.TypeDeclaration) this.ast.getBindingResolver().getCorrespondingNode(currentNode);"]}], "num": 59126}