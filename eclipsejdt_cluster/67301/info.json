{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "335f81c56f704d359f2fcf14acd9eb32", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31af155248f3efb871f72e518ca48a66", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessingState.java", "commitBeforeChange": "5266b947a41bc87e33ca243d2f06d621c5b35d8c", "commitAfterChange": "5b0c62f0c85cc7c393266b52408d3bd3c14d0ef5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void initializeRoots()", "signatureAfterChange": " \t \tpublic void initializeRoots()", "diff": ["-\t\t\t\t\t\tQualifiedName qName = new QualifiedName(JavaCore.PLUGIN_ID, \"sourceattachment: \" + path.toOSString()); //$NON-NLS-1$;", "-\t\t\t\t\t\t\tpropertyString = ResourcesPlugin.getWorkspace().getRoot().getPersistentProperty(qName);", "-\t\t\t\t\t\t} catch (CoreException e) {", "-\t\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t\t\tpropertyString = Util.getSourceAttachmentProperty(path);", "+\t\t\t\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t\t\t\te.printStackTrace();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b9e635a7a66668254a0852ef63ddd95", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/OR_OR_Expression.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\tFlowInfo rightInfo = leftInfo.initsWhenFalse().unconditionalInits().copy();", "+\t\tFlowInfo rightInfo = leftInfo.initsWhenFalse().unconditionalCopy();", "-\t\tFlowInfo falseMergedInfo = rightInfo.initsWhenFalse().copy();", "-\t\trightInfo.setReachMode(previousMode); // reset after falseMergedInfo got extracted", "-", "-\t\t\t\t\tleftInfo.initsWhenTrue().copy().unconditionalInits().mergedWith(", "-\t\t\t\t\t\trightInfo.initsWhenTrue().copy().unconditionalInits()),", "-\t\t\t\t\tfalseMergedInfo);", "+\t\t\t\t\tleftInfo.initsWhenTrue().unconditionalInits().mergedWith(", "+\t\t\t\t\t\trightInfo.safeInitsWhenTrue().setReachMode(previousMode).unconditionalInits()),", "+\t\t\t\t\trightInfo.initsWhenFalse());"]}], "num": 67301}