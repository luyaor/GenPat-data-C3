{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "60f8b9f78cc5d84285a90e778b83bd29", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04b6528c9553b034424dd628cabed711", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 423, "methodNumberAfterChange": 423, "signatureBeforeChange": " \tpublic void test0412a()", "signatureAfterChange": " \tpublic void test0412a()", "diff": ["+\t\t\tthis.complianceLevel < ClassFileConstants.JDK1_7 ?", "-\t\t\t\"Type safety : A generic array of List<String> is created for a varargs parameter\\n\" +", "+\t\t\t\"Type safety: A generic array of List<String> is created for a varargs parameter\\n\" +", "-\t\t\t\"----------\\n\");", "+\t\t\t\"----------\\n\" : ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\t\t\"\tpublic static <T> T first(T... args) {\\n\" + ", "+\t\t\t\t\"\t                               ^^^^\\n\" + ", "+\t\t\t\t\"Type safety: Potential heap pollution via varargs parameter args\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\t\"\tList<String> ls = first(); \\n\" + ", "+\t\t\t\t\"\t                  ^^^^^^^\\n\" + ", "+\t\t\t\t\"Type safety: A generic array of List<String> is created for a varargs parameter\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. ERROR in X.java (at line 16)\\n\" + ", "+\t\t\t\t\"\tZork z;\\n\" + ", "+\t\t\t\t\"\t^^^^\\n\" + ", "+\t\t\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6976f0a41465e58ffd0b3551f575a5bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 975, "methodNumberAfterChange": 975, "signatureBeforeChange": " public void test0951()", "signatureAfterChange": " public void test0951()", "diff": ["+\t\tthis.complianceLevel < ClassFileConstants.JDK1_7 ?", "-\t\t\"----------\\n\");", "+\t\t\"----------\\n\" :", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tpublic <T> Iterable<T> m(T[]... ts) {\\n\" + ", "+\t\t\t\"\t                                ^^\\n\" + ", "+\t\t\t\"Type safety: Potential heap pollution via varargs parameter ts\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tpublic <T> void m3(Iterable<T>... ts) {\\n\" + ", "+\t\t\t\"\t                                  ^^\\n\" + ", "+\t\t\t\"Type safety: Potential heap pollution via varargs parameter ts\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 14)\\n\" + ", "+\t\t\t\"\tZork z;\\n\" + ", "+\t\t\t\"\t^^^^\\n\" + ", "+\t\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\t\"----------\\n\");"]}], "num": 40204}