{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a551549900d10ee01b64400ddade8e85", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "591cb28cb97e95a147d39917561a16e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "0574a8adbdf81e334e9d9100de29641afab2bba5", "commitAfterChange": "7186c730d487753734b0547672e890b50fededb4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": "   \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\t\t} else { // cf. MessageSend.generateCode()", "+\t\t} else { // cf. MessageSend.generateCode()'s call to CodeStream.getConstantPoolDeclaringClass. We have extracted the relevant portions sans side effect here. ", "-\t\t\t\tTypeBinding declaringClass = CodeStream.getConstantPoolDeclaringClass(currentScope, this.binding, this.lhs.resolvedType, false);", "-\t\t\t\tif (declaringClass instanceof ReferenceBinding)", "-\t\t\t\t\tthis.binding.declaringClass = (ReferenceBinding) declaringClass;", "+\t\t\t\tif (TypeBinding.notEquals(this.binding.declaringClass, this.lhs.resolvedType.erasure())) {", "+\t\t\t\t\tif (!this.binding.declaringClass.canBeSeenBy(currentScope)) {", "+\t\t\t\t\t\tthis.binding = new MethodBinding(this.binding, (ReferenceBinding) this.lhs.resolvedType.erasure());", "+\t\t\t\t\t}", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6a479c51e61178239550d9eddf98bcf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "8da497be802fa99e80a3f90a1137af05842698d7", "commitAfterChange": "4a2b4555c72745b195a5db2cb0624ba6878ccc93", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": "   \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\t\t\tTypeBinding declaringClass = CodeStream.getConstantPoolDeclaringClass(currentScope, this.binding, this.lhs.resolvedType, false);", "-\t\t\tif (declaringClass instanceof ReferenceBinding)", "-\t\t\t\tthis.binding.declaringClass = (ReferenceBinding) declaringClass;", "+\t\t\tif (this.binding != null && isMethodReference()) {", "+\t\t\t\tTypeBinding declaringClass = CodeStream.getConstantPoolDeclaringClass(currentScope, this.binding, this.lhs.resolvedType, false);", "+\t\t\t\tif (declaringClass instanceof ReferenceBinding)", "+\t\t\t\t\tthis.binding.declaringClass = (ReferenceBinding) declaringClass;", "+\t\t\t}"]}], "num": 67737}