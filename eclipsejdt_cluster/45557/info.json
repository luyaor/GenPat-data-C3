{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "679d38067107e50dc2f0f811d10a6f02", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17292f1f8bc91a211de0c518a670cf59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBinding.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public TypeBinding findSuperTypeWithSameErasure(TypeBinding otherType)", "signatureAfterChange": " public TypeBinding findSuperTypeWithSameErasure(TypeBinding otherType)", "diff": ["-\t\t    // do not allow type variables to match with erasures for free", "-\t\t    if (!otherType.isTypeVariable()) otherType = otherType.erasure();", "-\t\t    if (this == otherType || (!isTypeVariable() && erasure() == otherType)) return this;", "+\t\t    // do not allow type variables/intersection types to match with erasures for free", "+\t\t    if (!otherType.isTypeVariable() && !otherType.isIntersectionType()) otherType = otherType.erasure();", "+\t\t    if (this == otherType || (!isTypeVariable() && !isIntersectionType() && erasure() == otherType)) return this;", "-\t\t\t\t\tif (currentType == otherType || (!currentType.isTypeVariable() && currentType.erasure() == otherType)) return currentType;", "+\t\t\t\t\tif (currentType == otherType || (!currentType.isTypeVariable() && !currentType.isIntersectionType() && currentType.erasure() == otherType)) return currentType;", "-\t\t\t\tif (currentType == otherType || (!currentType.isTypeVariable() && currentType.erasure() == otherType))", "+\t\t\t\tif (currentType == otherType || (!currentType.isTypeVariable() && !currentType.isIntersectionType() && currentType.erasure() == otherType))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98b8b0fc51d8022df1ed6bc553d2130a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetQualifiedNameReference.java", "commitBeforeChange": "99cffc8541c4397656cecbf3b21b77793b2ea53d", "commitAfterChange": "aa4253c9d75f585e150861dffb012512a44c1145", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r public TypeBinding getOtherFieldBindings(BlockScope scope)", "signatureAfterChange": "\r public TypeBinding getOtherFieldBindings(BlockScope scope)", "diff": ["+\t\t\t\t&& !delegateThis.type.isArrayType()\t\t\t\r", "+\t\t\t\t\t&& !type.isArrayType()\t\t\t\t\r", "+\t\t\t\t\t&& !type.isArrayType()\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b81c307342c9435402599ef57358fbe1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "9c479e8055cbe93318686e778cf375ba226b61bc", "commitAfterChange": "82c71159e4a76fe2b085325a61ccc12c857c6a1f", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " \tprotected TypeBinding[] minimalErasedCandidates(TypeBinding[] types, Map allInvocations)", "signatureAfterChange": " \tprotected TypeBinding[] minimalErasedCandidates(TypeBinding[] types, Map allInvocations)", "diff": ["-\t\t\tTypeBinding firstErasure = firstType.isTypeVariable() ? firstType : firstType.erasure();", "+\t\t\tTypeBinding firstErasure = (firstType.isTypeVariable() && !firstType.isCapture()) ? firstType : firstType.erasure();", "-\t\t\t\t\tTypeBinding itsInterfaceErasure = itsInterface.isTypeVariable() ? itsInterface : itsInterface.erasure();", "+\t\t\t\t\tTypeBinding itsInterfaceErasure = (itsInterface.isTypeVariable() && !itsInterface.isCapture()) ? itsInterface : itsInterface.erasure();", "-\t\t\t\t\tTypeBinding itsSuperclassErasure = itsSuperclass.isTypeVariable() ? itsSuperclass : itsSuperclass.erasure();", "+\t\t\t\t\tTypeBinding itsSuperclassErasure = (itsSuperclass.isTypeVariable() && !itsSuperclass.isCapture()) ? itsSuperclass : itsSuperclass.erasure();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbe1b1024b9383e9ad23110cddd102ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public ReferenceBinding findSuperTypeErasingTo(int wellKnownErasureID, boolean erasureIsClass)", "signatureAfterChange": " public ReferenceBinding findSuperTypeErasingTo(int wellKnownErasureID, boolean erasureIsClass)", "diff": ["-    if (this.id == wellKnownErasureID || (!isTypeVariable() && erasure().id == wellKnownErasureID)) return this;", "+    if (this.id == wellKnownErasureID || (!isTypeVariable() && !isIntersectionType()  && erasure().id == wellKnownErasureID)) return this;", "-\t\t\tif (currentType.id == wellKnownErasureID || (!currentType.isTypeVariable() && currentType.erasure().id == wellKnownErasureID))", "+\t\t\tif (currentType.id == wellKnownErasureID || (!currentType.isTypeVariable() && !currentType.isIntersectionType() && currentType.erasure().id == wellKnownErasureID))", "-\t\tif (itsInterfaces != Binding.NO_SUPERINTERFACES) {", "+\t\t// be resilient to unitialized interfaces (144976)", "+\t\tif (itsInterfaces != null && itsInterfaces != Binding.NO_SUPERINTERFACES) { // null check for extra resilience (144976)", "-\t\tif (currentType.id == wellKnownErasureID || (!currentType.isTypeVariable() && currentType.erasure().id == wellKnownErasureID))", "+\t\tif (currentType.id == wellKnownErasureID || (!currentType.isTypeVariable() && !currentType.isIntersectionType() && currentType.erasure().id == wellKnownErasureID))", "-\t\tif (itsInterfaces != Binding.NO_SUPERINTERFACES) {", "+\t\tif (itsInterfaces != null && itsInterfaces != Binding.NO_SUPERINTERFACES) {"]}], "num": 45557}