{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ceddd55eb4387264845617c5d20548fb", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b0c6831460a43264efc4ad328c81c96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LocalTypeBinding.java", "commitBeforeChange": "a8a3dc803188a8f412e8e9727c27a357015eb102", "commitAfterChange": "ebee92b09c2df43d9d4f2bbbd891d81bc1d00c76", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public LocalTypeBinding(ClassScope scope, SourceTypeBinding enclosingType, CaseStatement switchCase)", "signatureAfterChange": " \t public LocalTypeBinding(ClassScope scope, SourceTypeBinding enclosingType, CaseStatement switchCase)", "diff": ["+\tMethodScope methodScope = scope.enclosingMethodScope();", "+\tAbstractMethodDeclaration declaration = methodScope.referenceMethod();", "+\tif (declaration != null) {", "+\t\tthis.enclosingMethod = declaration.binding;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c985820c1b803c77c3af834434a46414", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "b18d6adb25f48ecf7c7eab00f32abaea5a8b60ae", "commitAfterChange": "92554e04c2e222921db725ed0779cc4ef54e89f9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic static MethodBinding computeCompatibleMethod18(MethodBinding originalMethod, TypeBinding[] arguments, final Scope scope, InvocationSite invocationSite)", "signatureAfterChange": "  \tpublic static MethodBinding computeCompatibleMethod18(MethodBinding originalMethod, TypeBinding[] arguments, final Scope scope, InvocationSite invocationSite)", "diff": ["+\t\tLookupEnvironment environment = scope.environment();", "+\t\tInferenceContext18 previousContext = environment.currentInferenceContext;", "+\t\tif (previousContext == null)", "+\t\t\tenvironment.currentInferenceContext = infCtx18;", "+\t\t} finally {", "+\t\t\tenvironment.currentInferenceContext = previousContext;"]}], "num": 19215}