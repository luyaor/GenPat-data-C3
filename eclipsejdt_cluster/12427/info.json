{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5963e0d5cc5679de55475e6e192d8523", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d64ad21e0a847197ab440a7c16a4fa2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "00b719c0d7c4b5271c818d210d84b349bc0324e3", "commitAfterChange": "f90ca993824b1d0e38aec24edba147ca4e8ec0d1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\t", "+\t\tif (valueIfTrue instanceof CastExpression) {", "+\t\t\tvalueIfTrue.bits |= IgnoreNeedForCastCheckMASK; // will check later on", "+\t\t}", "+\t\tif (valueIfFalse instanceof CastExpression) {", "+\t\t\tvalueIfFalse.bits |= IgnoreNeedForCastCheckMASK; // will check later on", "+\t\t}", "-\t\t\t\t&& (valueIfFalseType == IntBinding", "-\t\t\t\t\t&& valueIfFalse.isConstantValueOfTypeAssignableToType(valueIfFalseType, valueIfTrueType))) {", "+\t\t\t\t\t&& (valueIfFalseType == IntBinding", "+\t\t\t\t\t\t&& valueIfFalse.isConstantValueOfTypeAssignableToType(valueIfFalseType, valueIfTrueType))) {", "-\t\t\t\t|| valueIfFalseType == ShortBinding", "-\t\t\t\t|| valueIfFalseType == CharBinding)", "-\t\t\t\t&& (valueIfTrueType == IntBinding", "-\t\t\t\t\t&& valueIfTrue.isConstantValueOfTypeAssignableToType(valueIfTrueType, valueIfFalseType))) {", "+\t\t\t\t\t|| valueIfFalseType == ShortBinding", "+\t\t\t\t\t|| valueIfFalseType == CharBinding)", "+\t\t\t\t\t&& (valueIfTrueType == IntBinding", "+\t\t\t\t\t\t&& valueIfTrue.isConstantValueOfTypeAssignableToType(valueIfTrueType, valueIfFalseType))) {", "-\t\t\t\t&& BaseTypeBinding.isNarrowing(valueIfFalseType.id, T_int)) {", "+\t\t\t\t\t&& BaseTypeBinding.isNarrowing(valueIfFalseType.id, T_int)) {", "-\t\t\t\t&& BaseTypeBinding.isNarrowing(valueIfFalseType.id, T_long)) {", "+\t\t\t\t\t&& BaseTypeBinding.isNarrowing(valueIfFalseType.id, T_long)) {", "-\t\t\t\t&& BaseTypeBinding.isNarrowing(valueIfFalseType.id, T_float)) {", "+\t\t\t\t\t&& BaseTypeBinding.isNarrowing(valueIfFalseType.id, T_float)) {", "-\t\t\t|| (valueIfFalseType.isBaseType() && valueIfFalseType != NullBinding)) {", "+\t\t\t\t|| (valueIfFalseType.isBaseType() && valueIfFalseType != NullBinding)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97d00013541fead1b1c325a3e5bd2714", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/IfStatement.java", "commitBeforeChange": "3c24f3c5868942545b866a06aea7ff0e6d501ace", "commitAfterChange": "c52bf9c9641831c37e7ba4fe251dcc6debca74a5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic IfStatement( \t\tExpression condition, \t\tStatement thenStatement, \t\tStatement elseStatement, \t\tint s, \t\tint e)", "signatureAfterChange": "  \tpublic IfStatement( \t\tExpression condition, \t\tStatement thenStatement, \t\tStatement elseStatement, \t\tint s, \t\tint e)", "diff": ["+\t\t// remember useful empty statement", "+\t\tif (thenStatement instanceof EmptyStatement) thenStatement.bits |= IsUsefulEmptyStatementMASK;", "+\t\t// remember useful empty statement", "+\t\tif (elseStatement instanceof EmptyStatement) elseStatement.bits |= IsUsefulEmptyStatementMASK;"]}], "num": 12427}