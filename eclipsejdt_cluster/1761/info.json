{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f1d7e8150b5b91d8949af698bc7052a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04af03245268c7b695738dffbf9df5a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/util/AptConfig.java", "commitBeforeChange": "0820eec9945610037c75b7f3c6bc13a32acbc80c", "commitAfterChange": "4fb4651d7a5f975649614980f56a713ca0cbf39d", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tprivate static Map<String,String> getOptions(IJavaProject jproject)", "signatureAfterChange": " \tprivate static Map<String,String> getOptions(IJavaProject jproject)", "diff": ["-\t\tif (null != options) {", "+\t\tif (options != null) {", "-\t\tif (jproject != null) {", "-\t\t\t_optionsMaps.put(project, options);", "-\t\t\t// Load project values into the map", "-\t\t\tProjectScope projScope = new ProjectScope(project);", "-\t\t\tIScopeContext[] contexts = new IScopeContext[] { projScope };", "-\t\t\tfor (String optionName : AptPreferenceConstants.OPTION_NAMES) {", "-\t\t\t\tString val = service.getString(AptPlugin.PLUGIN_ID, optionName, null, contexts);", "-\t\t\t\tif (val != null) {", "-\t\t\t\t\toptions.put(optionName, val);", "-\t\t\t\t}", "+\t\t", "+\t\t_optionsMaps.put(project, options);", "+\t\t// Load project values into the map", "+\t\tProjectScope projScope = new ProjectScope(project);", "+\t\tIScopeContext[] contexts = new IScopeContext[] { projScope };", "+\t\tfor (String optionName : AptPreferenceConstants.OPTION_NAMES) {", "+\t\t\tString val = service.getString(", "+\t\t\t\t\tAptPlugin.PLUGIN_ID, ", "+\t\t\t\t\toptionName, ", "+\t\t\t\t\tAptPreferenceConstants.DEFAULT_OPTIONS_MAP.get(optionName), ", "+\t\t\t\t\tcontexts);", "+\t\t\tif (val != null) {", "+\t\t\t\toptions.put(optionName, val);", "-\t\t\t// Add change listener for this project, so we can update the map later on", "-\t\t\tIEclipsePreferences projPrefs = projScope.getNode(AptPlugin.PLUGIN_ID);", "-\t\t\tChangeListener listener = new ChangeListener(project);", "-\t\t\tprojPrefs.addPreferenceChangeListener(listener);", "-\t\t\t((IEclipsePreferences)projPrefs.parent()).addNodeChangeListener(listener);", "-            AptPlugin.getPlugin().getPluginPreferences().addPropertyChangeListener(listener);", "+\t\t// Add change listener for this project, so we can update the map later on", "+\t\tIEclipsePreferences projPrefs = projScope.getNode(AptPlugin.PLUGIN_ID);", "+\t\tChangeListener listener = new ChangeListener(project);", "+\t\tprojPrefs.addPreferenceChangeListener(listener);", "+\t\t((IEclipsePreferences)projPrefs.parent()).addNodeChangeListener(listener);", "+        AptPlugin.getPlugin().getPluginPreferences().addPropertyChangeListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ea50aaf8be2b0f1337c0f9d02a49d6b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/util/AptConfig.java", "commitBeforeChange": "22c227d686d26416b5bac8312b280d00559f2a1f", "commitAfterChange": "5d72659fefa872e5d517acd0d145d5320aaef46b", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprivate static Map getOptions(IJavaProject jproject)", "signatureAfterChange": " \tprivate static Map getOptions(IJavaProject jproject)", "diff": ["-\t\tMap options = _optionsMaps.get(jproject);", "+\t\tIProject project = jproject.getProject();", "+\t\tassert(null != project);", "+\t\tMap options = _optionsMaps.get(project);", "-\t\t\tIScopeContext projContext = new ProjectScope(jproject.getProject());", "-\t\t\tIScopeContext[] contexts = new IScopeContext[] { projContext };", "+\t\t\t_optionsMaps.put(project, options);", "+\t\t\t// Load project values into the map", "+\t\t\tProjectScope projScope = new ProjectScope(project);", "+\t\t\tIScopeContext[] contexts = new IScopeContext[] { projScope };", "-\t\t}", "-\t\telse {", "-\t\t\t// TODO: do we need to handle this case?", "-\t\t\treturn null;", "+\t\t\t// Add change listener for this project, so we can update the map later on", "+\t\t\tIEclipsePreferences projPrefs = projScope.getNode(AptPlugin.PLUGIN_ID);", "+\t\t\tChangeListener listener = new ChangeListener(project);", "+\t\t\tprojPrefs.addPreferenceChangeListener(listener);", "+\t\t\t((IEclipsePreferences)projPrefs.parent()).addNodeChangeListener(listener);"]}], "num": 1761}