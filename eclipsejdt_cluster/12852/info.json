{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "16769ef8dadbdf292d9791c0613a1d98", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a58812da59d4a9dc5dd1ef2dbce0371", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedMethodBinding.java", "commitBeforeChange": "3e0c5ac9aa92d53701e5df6b2f9163aef4500b8d", "commitAfterChange": "5499d7ab628f0d031c84d349d565b52915f502cb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic static ParameterizedMethodBinding instantiateGetClass(TypeBinding receiverType, MethodBinding originalMethod, Scope scope)", "signatureAfterChange": " \tpublic static ParameterizedMethodBinding instantiateGetClass(TypeBinding receiverType, MethodBinding originalMethod, Scope scope)", "diff": ["+\t\tif (environment.usesNullTypeAnnotations())", "+\t\t\trawType = environment.createAnnotatedType(rawType, new AnnotationBinding[] { environment.getNonNullAnnotation() });", "+\t\tif (environment.globalOptions.isAnnotationBasedNullAnalysisEnabled) {", "+\t\t\tif (environment.usesNullTypeAnnotations())", "+\t\t\t\tmethod.returnType = environment.createAnnotatedType(method.returnType, new AnnotationBinding[] { environment.getNonNullAnnotation() });", "+\t\t\telse", "+\t\t\t\tmethod.tagBits |= TagBits.AnnotationNonNull;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "679a0f952db0a39f1e0fc1f82ab08e79", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SyntheticMethodBinding.java", "commitBeforeChange": "31d25259b58c3c4c3c062013eb31d95cf4a9f389", "commitAfterChange": "09a76541b486383f4df376aea0572442ead3939f", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tpublic void markNonNull(LookupEnvironment environment)", "signatureAfterChange": "  \tpublic void markNonNull(LookupEnvironment environment)", "diff": ["+\t\tmarkNonNull(this, this.purpose, environment);", "+\t}", "-\t    switch (this.purpose) {", "-\t\t\t\t\tTypeBinding elementType = ((ArrayBinding)this.returnType).leafComponentType();", "-\t\t\t\t\tthis.returnType = environment.createArrayType(elementType, 1, new AnnotationBinding[]{ nonNullAnnotation, null });", "-\t\t\t\t\tthis.tagBits |= TagBits.AnnotationNonNull;", "-\t\t\t\t\tthis.returnType = environment.createAnnotatedType(this.returnType, new AnnotationBinding[]{ environment.getNonNullAnnotation() });", "-\t\t\t\t\tthis.tagBits |= TagBits.AnnotationNonNull;"]}], "num": 12852}