{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eea4dc4ca13f7054106a87aebcd5ad9b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33fe2443787dc7965e918386e0a907fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "46418d248f89a29f49a77d154cdbfa57c408b256", "commitAfterChange": "c85433e27f0fa74bfe8e06c38c1c02c51b5599d7", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "\r \tpublic ISourceRange mapSource(\r \t\tIType type,\r \t\tchar[] contents,\r \t\tIJavaElement searchedElement)", "signatureAfterChange": "\r public ISourceRange mapSource(IType type, char[] contents, IJavaElement searchedElement)", "diff": ["-\t */\r", "-\tpublic ISourceRange mapSource(\r", "-\t\tIType type,\r", "-\t\tchar[] contents,\r", "-\t\tIJavaElement searchedElement) {\r", "-\t\tfType = (BinaryType) type;\r", "+ */\r", "+public ISourceRange mapSource(IType type, char[] contents, IJavaElement searchedElement) {\r", "+\tfType= (BinaryType)type;\r", "-\t\tthis.importsTable.remove(fType);\r", "-\t\tthis.importsCounterTable.remove(fType);\r", "-\t\tthis.searchedElement = searchedElement;\r", "-\t\tthis.types = new IType[1];\r", "-\t\tthis.typeDeclarationStarts = new int[1];\r", "-\t\tthis.typeNameRanges = new SourceRange[1];\r", "+\tthis.searchedElement = searchedElement;\r", "+\tthis.types = new IType[1];\r", "+\tthis.typeDeclarationStarts = new int[1];\r", "+\tthis.typeNameRanges = new SourceRange[1];\r", "+\tthis.typeDepth = -1;\r", "+\r", "+\tHashtable oldSourceRanges = (Hashtable)fSourceRanges.clone();\r", "+\ttry {\r", "+\t\tIProblemFactory factory= new DefaultProblemFactory();\r", "+\t\tSourceElementParser parser = new SourceElementParser(this, factory);\r", "+\t\tparser.parseCompilationUnit(new BasicCompilationUnit(contents, type.getElementName() + \".java\"/*nonNLS*/), false);\r", "+\t\tif (searchedElement != null) {\r", "+\t\t\tISourceRange range = this.getNameRange(searchedElement);\r", "+\t\t\treturn range;\r", "+\t\t} else {\r", "+\t\t\treturn null;\r", "+\t\t}\r", "+\t} finally {\r", "+\t\tif (searchedElement != null) {\r", "+\t\t\tfSourceRanges = oldSourceRanges;\r", "+\t\t}\r", "+\t\tfType= null;\r", "+\t\tthis.searchedElement = null;\r", "+\t\tthis.types = null;\r", "+\t\tthis.typeDeclarationStarts = null;\r", "+\t\tthis.typeNameRanges = null;\r", "-\r", "-\t\tHashtable oldSourceRanges = (Hashtable) fSourceRanges.clone();\r", "-\t\ttry {\r", "-\t\t\tIProblemFactory factory = new DefaultProblemFactory();\r", "-\t\t\tSourceElementParser parser = new SourceElementParser(this, factory);\r", "-\t\t\tparser.parseCompilationUnit(\r", "-\t\t\t\tnew BasicCompilationUnit(contents, type.getElementName() + \".java\" ), //$NON-NLS-1$\r", "-\t\t\t\tfalse);\r", "-\t\t\tif (searchedElement != null) {\r", "-\t\t\t\tISourceRange range = this.getNameRange(searchedElement);\r", "-\t\t\t\treturn range;\r", "-\t\t\t} else {\r", "-\t\t\t\treturn null;\r", "-\t\t\t}\r", "-\t\t} finally {\r", "-\t\t\tif (searchedElement != null) {\r", "-\t\t\t\tfSourceRanges = oldSourceRanges;\r", "-\t\t\t}\r", "-\t\t\tfType = null;\r", "-\t\t\tthis.searchedElement = null;\r", "-\t\t\tthis.types = null;\r", "-\t\t\tthis.typeDeclarationStarts = null;\r", "-\t\t\tthis.typeNameRanges = null;\r", "-\t\t\tthis.typeDepth = -1;\r", "-\t\t}\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec22c9ae8f03d0c911ff746f1c3ebbbe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "a1b8b888d8c8c040023fcd2856f96f5ad6c69b3e", "commitAfterChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "\r \tpublic ISourceRange mapSource(\r \t\tIType type,\r \t\tchar[] contents,\r \t\tIJavaElement searchedElement)", "signatureAfterChange": "\r public ISourceRange mapSource(IType type, char[] contents, IJavaElement searchedElement)", "diff": ["-\t */\r", "-\tpublic ISourceRange mapSource(\r", "-\t\tIType type,\r", "-\t\tchar[] contents,\r", "-\t\tIJavaElement searchedElement) {\r", "-\t\tfType = (BinaryType) type;\r", "+ */\r", "+public ISourceRange mapSource(IType type, char[] contents, IJavaElement searchedElement) {\r", "+\tfType= (BinaryType)type;\r", "-\t\tthis.importsTable.remove(fType);\r", "-\t\tthis.importsCounterTable.remove(fType);\r", "-\t\tthis.searchedElement = searchedElement;\r", "-\t\tthis.types = new IType[1];\r", "-\t\tthis.typeDeclarationStarts = new int[1];\r", "-\t\tthis.typeNameRanges = new SourceRange[1];\r", "+\tthis.searchedElement = searchedElement;\r", "+\tthis.types = new IType[1];\r", "+\tthis.typeDeclarationStarts = new int[1];\r", "+\tthis.typeNameRanges = new SourceRange[1];\r", "+\tthis.typeDepth = -1;\r", "+\r", "+\tHashtable oldSourceRanges = (Hashtable)fSourceRanges.clone();\r", "+\ttry {\r", "+\t\tIProblemFactory factory= new DefaultProblemFactory();\r", "+\t\tSourceElementParser parser = new SourceElementParser(this, factory);\r", "+\t\tparser.parseCompilationUnit(new BasicCompilationUnit(contents, type.getElementName() + \".java\"/*nonNLS*/), false);\r", "+\t\tif (searchedElement != null) {\r", "+\t\t\tISourceRange range = this.getNameRange(searchedElement);\r", "+\t\t\treturn range;\r", "+\t\t} else {\r", "+\t\t\treturn null;\r", "+\t\t}\r", "+\t} finally {\r", "+\t\tif (searchedElement != null) {\r", "+\t\t\tfSourceRanges = oldSourceRanges;\r", "+\t\t}\r", "+\t\tfType= null;\r", "+\t\tthis.searchedElement = null;\r", "+\t\tthis.types = null;\r", "+\t\tthis.typeDeclarationStarts = null;\r", "+\t\tthis.typeNameRanges = null;\r", "-\r", "-\t\tHashtable oldSourceRanges = (Hashtable) fSourceRanges.clone();\r", "-\t\ttry {\r", "-\t\t\tIProblemFactory factory = new DefaultProblemFactory();\r", "-\t\t\tSourceElementParser parser = new SourceElementParser(this, factory);\r", "-\t\t\tparser.parseCompilationUnit(\r", "-\t\t\t\tnew BasicCompilationUnit(contents, type.getElementName() + \".java\" ), //$NON-NLS-1$\r", "-\t\t\t\tfalse);\r", "-\t\t\tif (searchedElement != null) {\r", "-\t\t\t\tISourceRange range = this.getNameRange(searchedElement);\r", "-\t\t\t\treturn range;\r", "-\t\t\t} else {\r", "-\t\t\t\treturn null;\r", "-\t\t\t}\r", "-\t\t} finally {\r", "-\t\t\tif (searchedElement != null) {\r", "-\t\t\t\tfSourceRanges = oldSourceRanges;\r", "-\t\t\t}\r", "-\t\t\tfType = null;\r", "-\t\t\tthis.searchedElement = null;\r", "-\t\t\tthis.types = null;\r", "-\t\t\tthis.typeDeclarationStarts = null;\r", "-\t\t\tthis.typeNameRanges = null;\r", "-\t\t\tthis.typeDepth = -1;\r", "-\t\t}\r", "+}\r"]}], "num": 65195}