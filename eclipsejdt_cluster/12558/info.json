{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "23de6fdafa4064494588bc7196c3d1c2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5953bc7ba6d0b9b1a3a4c496192338b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/UtilTest.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": " public void test72()", "signatureAfterChange": " public void test72()", "diff": ["-\tassertCamelCase(\"HMa\", \"HashMap\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"HMa\", \"HtmlMapper\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"HMa\", \"HashMapEntry\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"HaMa\", \"HashMap\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"HaMa\", \"HtmlMapper\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"HaMa\", \"HashMapEntry\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"HashMa\", \"HashMap\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"HashMa\", \"HtmlMapper\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"HashMa\", \"HashMapEntry\", false /*no prefix match*/, false /* should not match */);", "+\tassertCamelCase(\"HMa\", \"HashMap\", true /*same count of parts expected*/, true /* should match */);", "+\tassertCamelCase(\"HMa\", \"HtmlMapper\", true /*same count of parts expected*/, true /* should match */);", "+\tassertCamelCase(\"HMa\", \"HashMapEntry\", true /*same count of parts expected*/, false /* should not match */);", "+\tassertCamelCase(\"HaMa\", \"HashMap\", true /*same count of parts expected*/, true /* should match */);", "+\tassertCamelCase(\"HaMa\", \"HtmlMapper\", true /*same count of parts expected*/, false /* should not match */);", "+\tassertCamelCase(\"HaMa\", \"HashMapEntry\", true /*same count of parts expected*/, false /* should not match */);", "+\tassertCamelCase(\"HashMa\", \"HashMap\", true /*same count of parts expected*/, true /* should match */);", "+\tassertCamelCase(\"HashMa\", \"HtmlMapper\", true /*same count of parts expected*/, false /* should not match */);", "+\tassertCamelCase(\"HashMa\", \"HashMapEntry\", true /*same count of parts expected*/, false /* should not match */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c5603bd0a7f70814f73016413b716dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/RootManipulationsTests.java", "commitBeforeChange": "75c11b9993cee3cc0c66baeb87390d3f47878de0", "commitAfterChange": "bf1e6d69eab09fcc8966c652a3845b7198223fbb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void testCopySourceFolder4() throws CoreException", "signatureAfterChange": " public void testCopySourceFolder4() throws CoreException", "diff": ["-\t\t\t\"src\\n\" + ", "-\t\t\t\"src1\\n\" + ", "-\t\t\t\"src2\",", "+\t\t\t\"src [in P2]\\n\" + ", "+\t\t\t\"src1 [in P2]\\n\" + ", "+\t\t\t\"src2 [in P2]\",", "-\t\t\t\"src\\n\" + ", "-\t\t\t\"src1\\n\" + ", "-\t\t\t\"src3\\n\" + ", "-\t\t\t\"src2\",", "+\t\t\t\"src [in P2]\\n\" + ", "+\t\t\t\"src1 [in P2]\\n\" + ", "+\t\t\t\"src3 [in P2]\\n\" + ", "+\t\t\t\"src2 [in P2]\",", "-\t\t\t\"src\\n\" + ", "-\t\t\t\"src1\\n\" + ", "-\t\t\t\"src3\\n\" + ", "-\t\t\t\"src2\\n\" +", "-\t\t\t\"src4\",", "+\t\t\t\"src [in P2]\\n\" + ", "+\t\t\t\"src1 [in P2]\\n\" + ", "+\t\t\t\"src3 [in P2]\\n\" + ", "+\t\t\t\"src2 [in P2]\\n\" + ", "+\t\t\t\"src4 [in P2]\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "813d9ef564e7f65a12c7313cf0ce3f97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterBugsTests.java", "commitBeforeChange": "1e5960a8e1d6d5a1af8d629bddab71c46e5ed5a1", "commitAfterChange": "0d665ff7724ca0a2df27fa238eee0ddf6c106c65", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void testBug027079d2() throws JavaModelException", "signatureAfterChange": " public void testBug027079d2() throws JavaModelException", "diff": ["-\t\t\"public class X04b {\\r\\n\" + ", "-\t\t\"\\r\\n\" + ", "-\t\t\"/* disable-formatter */\\r\\n\" + ", "-\t\t\"void     foo(    )      {\t\\r\\n\" + ", "-\t\t\"\t\t\t\t//      unformatted       comment  \t  \\r\\n\" + ", "-\t\t\"}\\r\\n\" + ", "-\t\t\"/* enable-formatter */\\r\\n\" + ", "-\t\t\"\tvoid bar() {\\r\\n\" + ", "-\t\t\"\t\t// formatted comment\\r\\n\" + ", "-\t\t\"\t}\\r\\n\" + ", "-\t\t\"}\\r\\n\",", "+\t\t\"public class X04b {\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"/* disable-formatter */\\n\" + ", "+\t\t\"void     foo(    )      {\t\\n\" + ", "+\t\t\"\t\t\t\t//      unformatted       comment  \t  \\n\" + ", "+\t\t\"}\\n\" + ", "+\t\t\"/* enable-formatter */\\n\" + ", "+\t\t\"\tvoid bar() {\\n\" + ", "+\t\t\"\t\t// formatted comment\\n\" + ", "+\t\t\"\t}\\n\" + ", "+\t\t\"}\\n\",", "-\t\t\"\\r\\n\",", "+\t\t\"\\n\","]}], "num": 12558}