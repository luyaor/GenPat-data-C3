{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3820cf2a3dcb66fed4fa4b63725e36fd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0608deef87e1c279a291afa0c1f23ab5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "d2d42dc68198e20f3f5cc7326a07cced2c751eb5", "commitAfterChange": "add5c6babb13b20df1267306ec710a4efca88a4d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \r public static final boolean convertToTypeFromTypeValue(int left , int right, Constant cst)", "signatureAfterChange": "\r \r public static final boolean isConstantValueRepresentable(Constant constant, int constantTypeID, int targetTypeID)", "diff": ["-public static final boolean convertToTypeFromTypeValue(int left , int right, Constant cst){\r", "-\t//true if there is no loose of information while casting.\r", "-\t//right is constant's type.id\r", "+public static final boolean isConstantValueRepresentable(Constant constant, int constantTypeID, int targetTypeID){\r", "+\t//true if there is no loss of precision while casting.\r", "+\t// constantTypeID == constant.typeID\r", "-\t//a faster solution would be to use combinaison of \r", "-\t//some range.........????\r", "-\r", "-\r", "-\t/*\r", "-\torg.eclipse.jdt.internal.compiler.util.Constant cst ;\r", "-\tcst = org.eclipse.jdt.internal.compiler.util.Constant.fromValue((float)898565456.0) ;\r", "-\torg.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.convertToTypeFromTypeValue(\r", "-\torg.eclipse.jdt.internal.compiler.ast.TypeReference.T_int,\r", "-\torg.eclipse.jdt.internal.compiler.ast.TypeReference.T_float,\r", "-\tcst)\r", "-\t*/\r", "-\t\r", "-\tif (left == right) return true ;\r", "-\tswitch(left){\r", "+\tif (targetTypeID == constantTypeID) return true ;\r", "+\tswitch(targetTypeID){\r", "-\t\t\t\tswitch (right) {\r", "+\t\t\t\tswitch (constantTypeID) {\r", "-\t\t\t\t\tcase T_double : return cst.doubleValue() \t== cst.charValue() ;\r", "-\t\t\t\t\tcase T_float  : return cst.floatValue() \t== cst.charValue() ;\r", "-\t\t\t\t\tcase T_int    : return cst.intValue() \t== cst.charValue() ;\r", "-\t\t\t\t\tcase T_short  : return cst.shortValue() \t== cst.charValue() ;\r", "-\t\t\t\t\tcase T_byte   : return cst.byteValue() \t== cst.charValue() ;\r", "-\t\t\t\t\tcase T_long   : return cst.longValue() \t== cst.charValue() ;\r", "+\t\t\t\t\tcase T_double : return constant.doubleValue() == constant.charValue() ;\r", "+\t\t\t\t\tcase T_float  : return constant.floatValue() == constant.charValue() ;\r", "+\t\t\t\t\tcase T_int    : return constant.intValue() == constant.charValue() ;\r", "+\t\t\t\t\tcase T_short  : return constant.shortValue() == constant.charValue() ;\r", "+\t\t\t\t\tcase T_byte   : return constant.byteValue() == constant.charValue() ;\r", "+\t\t\t\t\tcase T_long   : return constant.longValue() == constant.charValue() ;\r", "-\t\t\t\tswitch (right) {\r", "-\t\t\t\t\tcase T_char\t: return cst.charValue() \t== cst.floatValue() ;\r", "-\t\t\t\t\tcase T_double : return cst.doubleValue() \t== cst.floatValue() ;\r", "+\t\t\t\tswitch (constantTypeID) {\r", "+\t\t\t\t\tcase T_char\t: return constant.charValue() == constant.floatValue() ;\r", "+\t\t\t\t\tcase T_double : return constant.doubleValue() == constant.floatValue() ;\r", "-\t\t\t\t\tcase T_int    : return cst.intValue() \t== cst.floatValue() ;\r", "-\t\t\t\t\tcase T_short  : return cst.shortValue() \t== cst.floatValue() ;\r", "-\t\t\t\t\tcase T_byte   : return cst.byteValue() \t== cst.floatValue() ;\r", "-\t\t\t\t\tcase T_long   : return cst.longValue() \t== cst.floatValue() ;\r", "+\t\t\t\t\tcase T_int    : return constant.intValue() == constant.floatValue() ;\r", "+\t\t\t\t\tcase T_short  : return constant.shortValue() == constant.floatValue() ;\r", "+\t\t\t\t\tcase T_byte   : return constant.byteValue() == constant.floatValue() ;\r", "+\t\t\t\t\tcase T_long   : return constant.longValue() == constant.floatValue() ;\r", "-\t\t\t\tswitch (right) {\r", "-\t\t\t\t\tcase T_char\t: return cst.charValue() \t== cst.doubleValue() ;\r", "+\t\t\t\tswitch (constantTypeID) {\r", "+\t\t\t\t\tcase T_char\t: return constant.charValue() == constant.doubleValue() ;\r", "-\t\t\t\t\tcase T_float  : return cst.floatValue() \t== cst.doubleValue() ;\r", "-\t\t\t\t\tcase T_int    : return cst.intValue() \t== cst.doubleValue() ;\r", "-\t\t\t\t\tcase T_short  : return cst.shortValue() \t== cst.doubleValue() ;\r", "-\t\t\t\t\tcase T_byte   : return cst.byteValue() \t== cst.doubleValue() ;\r", "-\t\t\t\t\tcase T_long   : return cst.longValue() \t== cst.doubleValue() ;\r", "+\t\t\t\t\tcase T_float  : return constant.floatValue()\t== constant.doubleValue() ;\r", "+\t\t\t\t\tcase T_int    : return constant.intValue() == constant.doubleValue() ;\r", "+\t\t\t\t\tcase T_short  : return constant.shortValue() == constant.doubleValue() ;\r", "+\t\t\t\t\tcase T_byte   : return constant.byteValue() == constant.doubleValue() ;\r", "+\t\t\t\t\tcase T_long   : return constant.longValue() == constant.doubleValue() ;\r", "-\t\t\t\tswitch (right) {\r", "-\t\t\t\t\tcase T_char\t: return cst.charValue() \t== cst.byteValue() ;\r", "-\t\t\t\t\tcase T_double : return cst.doubleValue() \t== cst.byteValue() ;\r", "-\t\t\t\t\tcase T_float  : return cst.floatValue() \t== cst.byteValue() ;\r", "-\t\t\t\t\tcase T_int    : return cst.intValue() \t== cst.byteValue() ;\r", "-\t\t\t\t\tcase T_short  : return cst.shortValue() \t== cst.byteValue() ;\r", "+\t\t\t\tswitch (constantTypeID) {\r", "+\t\t\t\t\tcase T_char\t: return constant.charValue() == constant.byteValue() ;\r", "+\t\t\t\t\tcase T_double : return constant.doubleValue() == constant.byteValue() ;\r", "+\t\t\t\t\tcase T_float  : return constant.floatValue() == constant.byteValue() ;\r", "+\t\t\t\t\tcase T_int    : return constant.intValue() == constant.byteValue() ;\r", "+\t\t\t\t\tcase T_short  : return constant.shortValue() == constant.byteValue() ;\r", "-\t\t\t\t\tcase T_long   : return cst.longValue() \t== cst.byteValue() ;\r", "+\t\t\t\t\tcase T_long   : return constant.longValue() == constant.byteValue() ;\r", "-\t\t\t\tswitch (right) {\r", "-\t\t\t\t\tcase T_char\t: return cst.charValue() \t== cst.shortValue() ;\r", "-\t\t\t\t\tcase T_double : return cst.doubleValue() \t== cst.shortValue() ;\r", "-\t\t\t\t\tcase T_float  : return cst.floatValue() \t== cst.shortValue() ;\r", "-\t\t\t\t\tcase T_int    : return cst.intValue() \t== cst.shortValue() ;\r", "+\t\t\t\tswitch (constantTypeID) {\r", "+\t\t\t\t\tcase T_char\t: return constant.charValue() == constant.shortValue() ;\r", "+\t\t\t\t\tcase T_double : return constant.doubleValue() == constant.shortValue() ;\r", "+\t\t\t\t\tcase T_float  : return constant.floatValue() == constant.shortValue() ;\r", "+\t\t\t\t\tcase T_int    : return constant.intValue() == constant.shortValue() ;\r", "-\t\t\t\t\tcase T_byte   : return cst.byteValue() \t== cst.shortValue() ;\r", "-\t\t\t\t\tcase T_long   : return cst.longValue() \t== cst.shortValue() ;\r", "+\t\t\t\t\tcase T_byte   : return constant.byteValue() == constant.shortValue() ;\r", "+\t\t\t\t\tcase T_long   : return constant.longValue() == constant.shortValue() ;\r", "-\t\t\t\tswitch (right) {\r", "-\t\t\t\t\tcase T_char\t: return cst.charValue() \t== cst.intValue() ;\r", "-\t\t\t\t\tcase T_double : return cst.doubleValue() \t== cst.intValue() ;\r", "-\t\t\t\t\tcase T_float  : return cst.floatValue() \t== cst.intValue() ;\r", "+\t\t\t\tswitch (constantTypeID) {\r", "+\t\t\t\t\tcase T_char\t: return constant.charValue() == constant.intValue() ;\r", "+\t\t\t\t\tcase T_double : return constant.doubleValue() == constant.intValue() ;\r", "+\t\t\t\t\tcase T_float  : return constant.floatValue() == constant.intValue() ;\r", "-\t\t\t\t\tcase T_short  : return cst.shortValue() \t== cst.intValue() ;\r", "-\t\t\t\t\tcase T_byte   : return cst.byteValue() \t== cst.intValue() ;\r", "-\t\t\t\t\tcase T_long   : return cst.longValue() \t== cst.intValue() ;\r", "+\t\t\t\t\tcase T_short  : return constant.shortValue() == constant.intValue() ;\r", "+\t\t\t\t\tcase T_byte   : return constant.byteValue() == constant.intValue() ;\r", "+\t\t\t\t\tcase T_long   : return constant.longValue() == constant.intValue() ;\r", "-\t\t\t\tswitch (right) {\r", "-\t\t\t\t\tcase T_char\t: return cst.charValue() \t== cst.longValue() ;\r", "-\t\t\t\t\tcase T_double : return cst.doubleValue() \t== cst.longValue() ;\r", "-\t\t\t\t\tcase T_float  : return cst.floatValue() \t== cst.longValue() ;\r", "-\t\t\t\t\tcase T_int    : return cst.intValue() \t== cst.longValue() ;\r", "-\t\t\t\t\tcase T_short  : return cst.shortValue() \t== cst.longValue() ;\r", "-\t\t\t\t\tcase T_byte   : return cst.byteValue() \t== cst.longValue() ;\r", "+\t\t\t\tswitch (constantTypeID) {\r", "+\t\t\t\t\tcase T_char\t: return constant.charValue() == constant.longValue() ;\r", "+\t\t\t\t\tcase T_double : return constant.doubleValue() == constant.longValue() ;\r", "+\t\t\t\t\tcase T_float  : return constant.floatValue() == constant.longValue() ;\r", "+\t\t\t\t\tcase T_int    : return constant.intValue() == constant.longValue() ;\r", "+\t\t\t\t\tcase T_short  : return constant.shortValue() == constant.longValue() ;\r", "+\t\t\t\t\tcase T_byte   : return constant.byteValue() == constant.longValue() ;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0313899fee0cf96890a4974c21d8494", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/UtilTest.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": " public void test70() throws CoreException", "signatureAfterChange": " public void test70() throws CoreException", "diff": ["-\tassertCamelCase(\"IDE3\", \"IDocumentExtension\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"IDE3\", \"IDocumentExtension2\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"IDE3\", \"IDocumentExtension3\", false /*no prefix match*/, true /* should match */);", "-\tassertCamelCase(\"IDE3\", \"IDocumentExtension135\", false /*no prefix match*/, true /* should match */);", "-\tassertCamelCase(\"IDE3\", \"IDocumentExtension315\", false /*no prefix match*/, true /* should match */);", "-\tassertCamelCase(\"IDPE3\", \"IDocumentProviderExtension\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"IDPE3\", \"IDocumentProviderExtension2\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"IDPE3\", \"IDocumentProviderExtension4\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"IDPE3\", \"IDocumentProviderExtension3\", false /*no prefix match*/, true /* should match */);", "-\tassertCamelCase(\"IDPE3\", \"IDocumentProviderExtension5\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"IDPE3\", \"IDocumentProviderExtension54321\", false /*no prefix match*/, true /* should match */);", "-\tassertCamelCase(\"IDPE3\", \"IDocumentProviderExtension12345\", false /*no prefix match*/, true /* should match */);", "-\tassertCamelCase(\"IPL3\", \"IPerspectiveListener\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"IPL3\", \"IPerspectiveListener2\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"IPL3\", \"IPerspectiveListener3\", false /*no prefix match*/, true /* should match */);", "-\tassertCamelCase(\"IPS2\", \"IPropertySource\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"IPS2\", \"IPropertySource2\", false /*no prefix match*/, true /* should match */);", "-\tassertCamelCase(\"IWWPD2\", \"IWorkbenchWindowPulldownDelegate\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"IWWPD2\", \"IWorkbenchWindowPulldownDelegate2\", false /*no prefix match*/, true /* should match */);", "-\tassertCamelCase(\"UTF16DSS\", \"UTF16DocumentScannerSupport\", false /*no prefix match*/, true /* should match */);", "-\tassertCamelCase(\"UTF16DSS\", \"UTF1DocScannerSupport\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"UTF16DSS\", \"UTF6DocScannerSupport\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"UTF16DSS\", \"UTFDocScannerSupport\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"UTF1DSS\", \"UTF16DocumentScannerSupport\", false /*no prefix match*/, true /* should match */);", "-\tassertCamelCase(\"UTF1DSS\", \"UTF1DocScannerSupport\", false /*no prefix match*/, true /* should match */);", "-\tassertCamelCase(\"UTF1DSS\", \"UTF6DocScannerSupport\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"UTF1DSS\", \"UTFDocScannerSupport\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"UTF6DSS\", \"UTF16DocumentScannerSupport\", false /*no prefix match*/, true /* should match */);", "-\tassertCamelCase(\"UTF6DSS\", \"UTF1DocScannerSupport\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"UTF6DSS\", \"UTF6DocScannerSupport\", false /*no prefix match*/, true /* should match */);", "-\tassertCamelCase(\"UTF6DSS\", \"UTFDocScannerSupport\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"UTFDSS\", \"UTF16DocumentScannerSupport\", false /*no prefix match*/, true /* should match */);", "-\tassertCamelCase(\"UTFDSS\", \"UTF1DocScannerSupport\", false /*no prefix match*/, true /* should match */);", "-\tassertCamelCase(\"UTFDSS\", \"UTF6DocScannerSupport\", false /*no prefix match*/, true /* should match */);", "-\tassertCamelCase(\"UTFDSS\", \"UTFDocScannerSupport\", false /*no prefix match*/, true /* should match */);", "+\tassertCamelCase(\"IDE3\", \"IDocumentExtension\", true /*same part count*/, false /* should not match */);", "+\tassertCamelCase(\"IDE3\", \"IDocumentExtension2\", true /*same part count*/, false /* should not match */);", "+\tassertCamelCase(\"IDE3\", \"IDocumentExtension3\", true /*same part count*/, true /* should match */);", "+\tassertCamelCase(\"IDE3\", \"IDocumentExtension135\", true /*same part count*/, true /* should match */);", "+\tassertCamelCase(\"IDE3\", \"IDocumentExtension315\", true /*same part count*/, true /* should match */);", "+\tassertCamelCase(\"IDPE3\", \"IDocumentProviderExtension\", true /*same part count*/, false /* should not match */);", "+\tassertCamelCase(\"IDPE3\", \"IDocumentProviderExtension2\", true /*same part count*/, false /* should not match */);", "+\tassertCamelCase(\"IDPE3\", \"IDocumentProviderExtension4\", true /*same part count*/, false /* should not match */);", "+\tassertCamelCase(\"IDPE3\", \"IDocumentProviderExtension3\", true /*same part count*/, true /* should match */);", "+\tassertCamelCase(\"IDPE3\", \"IDocumentProviderExtension5\", true /*same part count*/, false /* should not match */);", "+\tassertCamelCase(\"IDPE3\", \"IDocumentProviderExtension54321\", true /*same part count*/, true /* should match */);", "+\tassertCamelCase(\"IDPE3\", \"IDocumentProviderExtension12345\", true /*same part count*/, true /* should match */);", "+\tassertCamelCase(\"IPL3\", \"IPerspectiveListener\", true /*same part count*/, false /* should not match */);", "+\tassertCamelCase(\"IPL3\", \"IPerspectiveListener2\", true /*same part count*/, false /* should not match */);", "+\tassertCamelCase(\"IPL3\", \"IPerspectiveListener3\", true /*same part count*/, true /* should match */);", "+\tassertCamelCase(\"IPS2\", \"IPropertySource\", true /*same part count*/, false /* should not match */);", "+\tassertCamelCase(\"IPS2\", \"IPropertySource2\", true /*same part count*/, true /* should match */);", "+\tassertCamelCase(\"IWWPD2\", \"IWorkbenchWindowPulldownDelegate\", true /*same part count*/, false /* should not match */);", "+\tassertCamelCase(\"IWWPD2\", \"IWorkbenchWindowPulldownDelegate2\", true /*same part count*/, true /* should match */);", "+\tassertCamelCase(\"UTF16DSS\", \"UTF16DocumentScannerSupport\", true /*same part count*/, true /* should match */);", "+\tassertCamelCase(\"UTF16DSS\", \"UTF1DocScannerSupport\", true /*same part count*/, false /* should not match */);", "+\tassertCamelCase(\"UTF16DSS\", \"UTF6DocScannerSupport\", true /*same part count*/, false /* should not match */);", "+\tassertCamelCase(\"UTF16DSS\", \"UTFDocScannerSupport\", true /*same part count*/, false /* should not match */);", "+\tassertCamelCase(\"UTF1DSS\", \"UTF16DocumentScannerSupport\", true /*same part count*/, true /* should match */);", "+\tassertCamelCase(\"UTF1DSS\", \"UTF1DocScannerSupport\", true /*same part count*/, true /* should match */);", "+\tassertCamelCase(\"UTF1DSS\", \"UTF6DocScannerSupport\", true /*same part count*/, false /* should not match */);", "+\tassertCamelCase(\"UTF1DSS\", \"UTFDocScannerSupport\", true /*same part count*/, false /* should not match */);", "+\tassertCamelCase(\"UTF6DSS\", \"UTF16DocumentScannerSupport\", true /*same part count*/, true /* should match */);", "+\tassertCamelCase(\"UTF6DSS\", \"UTF1DocScannerSupport\", true /*same part count*/, false /* should not match */);", "+\tassertCamelCase(\"UTF6DSS\", \"UTF6DocScannerSupport\", true /*same part count*/, true /* should match */);", "+\tassertCamelCase(\"UTF6DSS\", \"UTFDocScannerSupport\", true /*same part count*/, false /* should not match */);", "+\tassertCamelCase(\"UTFDSS\", \"UTF16DocumentScannerSupport\", true /*same part count*/, true /* should match */);", "+\tassertCamelCase(\"UTFDSS\", \"UTF1DocScannerSupport\", true /*same part count*/, true /* should match */);", "+\tassertCamelCase(\"UTFDSS\", \"UTF6DocScannerSupport\", true /*same part count*/, true /* should match */);", "+\tassertCamelCase(\"UTFDSS\", \"UTFDocScannerSupport\", true /*same part count*/, true /* should match */);"]}], "num": 34497}