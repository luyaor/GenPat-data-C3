{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "04c8daa7f692c4b1306cc421134c8f4e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "803a69c6c8c1bacedfb793411e09e366", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "49221e1dedf80843e710093d67caabba63367062", "commitAfterChange": "26bd6002dbcadf28eb844a4d87a4d9f705c01741", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tprivate void findMemberTypes( \t\tchar[] typeName, \t\tReferenceBinding[] memberTypes, \t\tObjectVector typesFound, \t\tReferenceBinding receiverType, \t\tSourceTypeBinding invocationType, \t\tboolean staticOnly, \t\tboolean staticFieldsAndMethodOnly, \t\tboolean fromStaticImport, \t\tboolean checkQualification, \t\tScope scope)", "signatureAfterChange": " \tprivate void findMemberTypes( \t\tchar[] typeName, \t\tReferenceBinding[] memberTypes, \t\tObjectVector typesFound, \t\tReferenceBinding receiverType, \t\tSourceTypeBinding invocationType, \t\tboolean staticOnly, \t\tboolean staticFieldsAndMethodOnly, \t\tboolean fromStaticImport, \t\tboolean checkQualification, \t\tScope scope)", "diff": ["-\t\t\tif (memberType.isClass()) {", "+\t\t\tif (memberType.isAnnotationType()) {", "+\t\t\t\trelevance += computeRelevanceForAnnotation();", "+\t\t\t\trelevance += computeRelevanceForAnnotationTarget(memberType);", "+\t\t\t} else if (memberType.isClass()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a148f6b5842408054b3da58dd742b8bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "11c24986fc925cfc43f4c88e72e0daee39a1576b", "commitAfterChange": "55350d5af8386833b94a470ab6a0d389ee3fc665", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tprivate void findConstructors( \t\tReferenceBinding currentType, \t\tTypeBinding[] argTypes, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tboolean forAnonymousType)", "signatureAfterChange": " \tprivate void findConstructors( \t\tReferenceBinding currentType, \t\tTypeBinding[] argTypes, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tboolean forAnonymousType)", "diff": ["-\t", "+\t\t\t\t\t", "+\t\t\t\t\tboolean hasRestrictedAccess = false;", "+//\t\t\t\t\tboolean hasRestrictedAccess = constructor.declaringClass.hasRestrictedAccess();", "+//\t\t\t\t\tif(this.options.checkRestrictions && hasRestrictedAccess) continue next;", "+\t\t\t\t\t", "+\t\t\t\t\t\trelevance += computeRelevanceForRestrictions(hasRestrictedAccess);", "+\t\t\t\t\t\trelevance += computeRelevanceForRestrictions(hasRestrictedAccess);"]}], "num": 43090}