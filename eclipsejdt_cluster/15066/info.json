{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "09851d2569937ec6ed9dff32ad726f41", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "179197e69dee367cbc55d91e0b7ea3f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "976283265acccc4408306834f2f927413343ea11", "commitAfterChange": "5b30149a3fc87b0c2999cd960bbbaa7634db73e9", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "signatureAfterChange": "  \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "diff": ["-\t\t\t\tif (!this.inlineTagStarted && length == TAG_AUTHOR_LENGTH && CharOperation.equals(TAG_AUTHOR, tagName, 0, length)) {", "+\t\t\t\tif (length == TAG_AUTHOR_LENGTH && CharOperation.equals(TAG_AUTHOR, tagName, 0, length)) {", "-\t\t\t\tif (!this.inlineTagStarted && length == TAG_CATEGORY_LENGTH && CharOperation.equals(TAG_CATEGORY, tagName, 0, length)) {", "+\t\t\t\tif (length == TAG_CATEGORY_LENGTH && CharOperation.equals(TAG_CATEGORY, tagName, 0, length)) {", "-\t\t\t\t\tvalid = parseIdentifierTag(false); // TODO (frederic) reconsider parameter value when @category will be significant in spec", "+\t\t\t\t\tif (!this.inlineTagStarted) {", "+\t\t\t\t\t\tvalid = parseIdentifierTag(false); // TODO (frederic) reconsider parameter value when @category will be significant in spec", "+\t\t\t\t\t}", "-\t\t\t\tif (!this.inlineTagStarted && length == TAG_DEPRECATED_LENGTH && CharOperation.equals(TAG_DEPRECATED, tagName, 0, length)) {", "+\t\t\t\tif (length == TAG_DEPRECATED_LENGTH && CharOperation.equals(TAG_DEPRECATED, tagName, 0, length)) {", "-\t\t\t\tif (!this.inlineTagStarted && length == TAG_EXCEPTION_LENGTH && CharOperation.equals(TAG_EXCEPTION, tagName, 0, length)) {", "+\t\t\t\tif (length == TAG_EXCEPTION_LENGTH && CharOperation.equals(TAG_EXCEPTION, tagName, 0, length)) {", "-\t\t\t\t\tvalid = parseThrows();", "+\t\t\t\t\tif (!this.inlineTagStarted) {", "+\t\t\t\t\t\tvalid = parseThrows();", "+\t\t\t\t\t}", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\t// bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=53290", "-\t\t\t\t\t\t// Cannot have @link outside inline comment", "-\t\t\t\t\t\tvalid = false;", "-\t\t\t\t\t\tif (this.reportProblems) {", "-\t\t\t\t\t\t\tthis.sourceParser.problemReporter().javadocUnexpectedTag(this.tagSourceStart, this.tagSourceEnd);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tvalid = false;", "-\t\t\t\t\t\tif (this.reportProblems) {", "-\t\t\t\t\t\t\tthis.sourceParser.problemReporter().javadocUnexpectedTag(this.tagSourceStart, this.tagSourceEnd);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "+\t\t\t\t\t} ", "-\t\t\t\tif (!this.inlineTagStarted && length == TAG_PARAM_LENGTH && CharOperation.equals(TAG_PARAM, tagName, 0, length)) {", "+\t\t\t\tif (length == TAG_PARAM_LENGTH && CharOperation.equals(TAG_PARAM, tagName, 0, length)) {", "-\t\t\t\t\tvalid = parseParam();", "+\t\t\t\t\tif (!this.inlineTagStarted) {", "+\t\t\t\t\t\tvalid = parseParam();", "+\t\t\t\t\t}", "-\t\t\t\tif (!this.inlineTagStarted && length == TAG_RETURN_LENGTH && CharOperation.equals(TAG_RETURN, tagName, 0, length)) {", "+\t\t\t\tif (length == TAG_RETURN_LENGTH && CharOperation.equals(TAG_RETURN, tagName, 0, length)) {", "-\t\t\t\t\tvalid = parseReturn();", "+\t\t\t\t\tif (!this.inlineTagStarted) {", "+\t\t\t\t\t\tvalid = parseReturn();", "+\t\t\t\t\t}", "-\t\t\t\tif (!this.inlineTagStarted) {", "-\t\t\t\t\tif (length == TAG_SEE_LENGTH && CharOperation.equals(TAG_SEE, tagName, 0, length)) {", "-\t\t\t\t\t\tthis.tagValue = TAG_SEE_VALUE;", "+\t\t\t\tif (length == TAG_SEE_LENGTH && CharOperation.equals(TAG_SEE, tagName, 0, length)) {", "+\t\t\t\t\tthis.tagValue = TAG_SEE_VALUE;", "+\t\t\t\t\tif (!this.inlineTagStarted) {", "-\t\t\t\t\t} else if (length == TAG_SERIAL_LENGTH && CharOperation.equals(TAG_SERIAL, tagName, 0, length)) {", "-\t\t\t\t\t\tthis.tagValue = TAG_SERIAL_VALUE;", "-\t\t\t\t\t\tthis.tagWaitingForDescription = this.tagValue;", "-\t\t\t\t\t} else if (length == TAG_SERIAL_DATA_LENGTH && CharOperation.equals(TAG_SERIAL_DATA, tagName, 0, length)) {", "-\t\t\t\t\t\tthis.tagValue = TAG_SERIAL_DATA_VALUE;", "-\t\t\t\t\t\tthis.tagWaitingForDescription = this.tagValue;", "-\t\t\t\t\t} else if (length == TAG_SERIAL_FIELD_LENGTH && CharOperation.equals(TAG_SERIAL_FIELD, tagName, 0, length)) {", "-\t\t\t\t\t\tthis.tagValue = TAG_SERIAL_FIELD_VALUE;", "-\t\t\t\t\t\tthis.tagWaitingForDescription = this.tagValue;", "-\t\t\t\t\t} else if (length == TAG_SINCE_LENGTH && CharOperation.equals(TAG_SINCE, tagName, 0, length)) {", "-\t\t\t\t\t\tthis.tagValue = TAG_SINCE_VALUE;", "-\t\t\t\t\t\tthis.tagWaitingForDescription = this.tagValue;", "-\t\t\t\t\t}\t\t\t\t\t", "-\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t} else if (length == TAG_SERIAL_LENGTH && CharOperation.equals(TAG_SERIAL, tagName, 0, length)) {", "+\t\t\t\t\tthis.tagValue = TAG_SERIAL_VALUE;", "+\t\t\t\t\tthis.tagWaitingForDescription = this.tagValue;", "+\t\t\t\t} else if (length == TAG_SERIAL_DATA_LENGTH && CharOperation.equals(TAG_SERIAL_DATA, tagName, 0, length)) {", "+\t\t\t\t\tthis.tagValue = TAG_SERIAL_DATA_VALUE;", "+\t\t\t\t\tthis.tagWaitingForDescription = this.tagValue;", "+\t\t\t\t} else if (length == TAG_SERIAL_FIELD_LENGTH && CharOperation.equals(TAG_SERIAL_FIELD, tagName, 0, length)) {", "+\t\t\t\t\tthis.tagValue = TAG_SERIAL_FIELD_VALUE;", "+\t\t\t\t\tthis.tagWaitingForDescription = this.tagValue;", "+\t\t\t\t} else if (length == TAG_SINCE_LENGTH && CharOperation.equals(TAG_SINCE, tagName, 0, length)) {", "+\t\t\t\t\tthis.tagValue = TAG_SINCE_VALUE;", "+\t\t\t\t\tthis.tagWaitingForDescription = this.tagValue;", "+\t\t\t\t}\t\t\t\t\t", "-\t\t\t\tif (!this.inlineTagStarted && length == TAG_THROWS_LENGTH && CharOperation.equals(TAG_THROWS, tagName, 0, length)) {", "+\t\t\t\tif (length == TAG_THROWS_LENGTH && CharOperation.equals(TAG_THROWS, tagName, 0, length)) {", "-\t\t\t\t\tvalid = parseThrows();", "+\t\t\t\t\tif (!this.inlineTagStarted) {", "+\t\t\t\t\t\tvalid = parseThrows();", "+\t\t\t\t\t}", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tvalid = false;", "-\t\t\t\t\t\t\tif (this.reportProblems) this.sourceParser.problemReporter().javadocUnexpectedTag(this.tagSourceStart, this.tagSourceEnd);", "-\t\t\t\t} else if (!this.inlineTagStarted && length == TAG_VERSION_LENGTH && CharOperation.equals(TAG_VERSION, tagName, 0, length)) {", "+\t\t\t\t} else if (length == TAG_VERSION_LENGTH && CharOperation.equals(TAG_VERSION, tagName, 0, length)) {", "-\t\tif (this.tagValue != TAG_OTHERS_VALUE && !this.inlineTagStarted) {", "-\t\t\tthis.lastBlockTagValue = this.tagValue;", "-\t\t}", "-\t\tif (this.inlineTagStarted && this.reportProblems", "-\t\t\t\t&& (this.tagValue >= JAVADOC_TAG_TYPE.length || JAVADOC_TAG_TYPE[this.tagValue] != TAG_TYPE_INLINE)) {", "-\t\t\t\tthis.sourceParser.problemReporter().javadocUnexpectedTag(this.tagSourceStart, this.tagSourceEnd);", "+\t\tif (this.tagValue != TAG_OTHERS_VALUE) {", "+\t\t\tif (!this.inlineTagStarted) {", "+\t\t\t\tthis.lastBlockTagValue = this.tagValue;", "+\t\t\t}", "+\t\t\t// see bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=267833", "+\t\t\t// Report a problem if a block tag is being used in the context of an inline tag and vice versa.", "+\t\t\tif ((this.inlineTagStarted && JAVADOC_TAG_TYPE[this.tagValue] == TAG_TYPE_BLOCK)", "+\t\t\t\t\t|| (!this.inlineTagStarted && JAVADOC_TAG_TYPE[this.tagValue] == TAG_TYPE_INLINE)) {", "+\t\t\t\tvalid = false;", "+\t\t\t\tthis.tagValue = TAG_OTHERS_VALUE;", "+\t\t\t\tthis.tagWaitingForDescription = NO_TAG_VALUE;", "+\t\t\t\tif (this.reportProblems) {", "+\t\t\t\t\tthis.sourceParser.problemReporter().javadocUnexpectedTag(this.tagSourceStart, this.tagSourceEnd);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d7ad3ad9907cf3d467786521990357d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "5d36ded47d2c78d72658a7417caa4c325d7b6276", "commitAfterChange": "3cc4e50fbf99512fc65836c0bf762a6c1ae261f2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "signatureAfterChange": "  \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "diff": ["-\t\t\t\tif (length == TAG_AUTHOR_LENGTH && CharOperation.equals(TAG_AUTHOR, tagName, 0, length)) {", "+\t\t\t\tif (!this.inlineTagStarted && length == TAG_AUTHOR_LENGTH && CharOperation.equals(TAG_AUTHOR, tagName, 0, length)) {", "-\t\t\t\tif (length == TAG_CATEGORY_LENGTH && CharOperation.equals(TAG_CATEGORY, tagName, 0, length)) {", "+\t\t\t\tif (!this.inlineTagStarted && length == TAG_CATEGORY_LENGTH && CharOperation.equals(TAG_CATEGORY, tagName, 0, length)) {", "-\t\t\t\tif (length == TAG_DEPRECATED_LENGTH && CharOperation.equals(TAG_DEPRECATED, tagName, 0, length)) {", "+\t\t\t\tif (!this.inlineTagStarted && length == TAG_DEPRECATED_LENGTH && CharOperation.equals(TAG_DEPRECATED, tagName, 0, length)) {", "-\t\t\t\tif (length == TAG_EXCEPTION_LENGTH && CharOperation.equals(TAG_EXCEPTION, tagName, 0, length)) {", "+\t\t\t\tif (!this.inlineTagStarted && length == TAG_EXCEPTION_LENGTH && CharOperation.equals(TAG_EXCEPTION, tagName, 0, length)) {", "-\t\t\t\tif (length == TAG_PARAM_LENGTH && CharOperation.equals(TAG_PARAM, tagName, 0, length)) {", "+\t\t\t\tif (!this.inlineTagStarted && length == TAG_PARAM_LENGTH && CharOperation.equals(TAG_PARAM, tagName, 0, length)) {", "-\t\t\t\tif (length == TAG_RETURN_LENGTH && CharOperation.equals(TAG_RETURN, tagName, 0, length)) {", "+\t\t\t\tif (!this.inlineTagStarted && length == TAG_RETURN_LENGTH && CharOperation.equals(TAG_RETURN, tagName, 0, length)) {", "-\t\t\t\tif (length == TAG_SEE_LENGTH && CharOperation.equals(TAG_SEE, tagName, 0, length)) {", "-\t\t\t\t\tif (this.inlineTagStarted) {", "-\t\t\t\t\t\t// bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=53290", "-\t\t\t\t\t\t// Cannot have @see inside inline comment", "-\t\t\t\t\t\tvalid = false;", "-\t\t\t\t\t\tif (this.reportProblems) {", "-\t\t\t\t\t\t\tthis.sourceParser.problemReporter().javadocUnexpectedTag(this.tagSourceStart, this.tagSourceEnd);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else {", "+\t\t\t\tif (!this.inlineTagStarted) {", "+\t\t\t\t\tif (length == TAG_SEE_LENGTH && CharOperation.equals(TAG_SEE, tagName, 0, length)) {", "-\t\t\t\t\t}", "-\t\t\t\t} else if (length == TAG_SERIAL_LENGTH && CharOperation.equals(TAG_SERIAL, tagName, 0, length)) {", "-\t\t\t\t\tthis.tagValue = TAG_SERIAL_VALUE;", "-\t\t\t\t\tthis.tagWaitingForDescription = this.tagValue;", "-\t\t\t\t} else if (length == TAG_SERIAL_DATA_LENGTH && CharOperation.equals(TAG_SERIAL_DATA, tagName, 0, length)) {", "-\t\t\t\t\tthis.tagValue = TAG_SERIAL_DATA_VALUE;", "-\t\t\t\t\tthis.tagWaitingForDescription = this.tagValue;", "-\t\t\t\t} else if (length == TAG_SERIAL_FIELD_LENGTH && CharOperation.equals(TAG_SERIAL_FIELD, tagName, 0, length)) {", "-\t\t\t\t\tthis.tagValue = TAG_SERIAL_FIELD_VALUE;", "-\t\t\t\t\tthis.tagWaitingForDescription = this.tagValue;", "-\t\t\t\t} else if (length == TAG_SINCE_LENGTH && CharOperation.equals(TAG_SINCE, tagName, 0, length)) {", "-\t\t\t\t\tthis.tagValue = TAG_SINCE_VALUE;", "-\t\t\t\t\tthis.tagWaitingForDescription = this.tagValue;", "+\t\t\t\t\t} else if (length == TAG_SERIAL_LENGTH && CharOperation.equals(TAG_SERIAL, tagName, 0, length)) {", "+\t\t\t\t\t\tthis.tagValue = TAG_SERIAL_VALUE;", "+\t\t\t\t\t\tthis.tagWaitingForDescription = this.tagValue;", "+\t\t\t\t\t} else if (length == TAG_SERIAL_DATA_LENGTH && CharOperation.equals(TAG_SERIAL_DATA, tagName, 0, length)) {", "+\t\t\t\t\t\tthis.tagValue = TAG_SERIAL_DATA_VALUE;", "+\t\t\t\t\t\tthis.tagWaitingForDescription = this.tagValue;", "+\t\t\t\t\t} else if (length == TAG_SERIAL_FIELD_LENGTH && CharOperation.equals(TAG_SERIAL_FIELD, tagName, 0, length)) {", "+\t\t\t\t\t\tthis.tagValue = TAG_SERIAL_FIELD_VALUE;", "+\t\t\t\t\t\tthis.tagWaitingForDescription = this.tagValue;", "+\t\t\t\t\t} else if (length == TAG_SINCE_LENGTH && CharOperation.equals(TAG_SINCE, tagName, 0, length)) {", "+\t\t\t\t\t\tthis.tagValue = TAG_SINCE_VALUE;", "+\t\t\t\t\t\tthis.tagWaitingForDescription = this.tagValue;", "+\t\t\t\t\t}\t\t\t\t\t", "-\t\t\t\tif (length == TAG_THROWS_LENGTH && CharOperation.equals(TAG_THROWS, tagName, 0, length)) {", "+\t\t\t\tif (!this.inlineTagStarted && length == TAG_THROWS_LENGTH && CharOperation.equals(TAG_THROWS, tagName, 0, length)) {", "-\t\t\t\t} else if (length == TAG_VERSION_LENGTH && CharOperation.equals(TAG_VERSION, tagName, 0, length)) {", "+\t\t\t\t} else if (!this.inlineTagStarted && length == TAG_VERSION_LENGTH && CharOperation.equals(TAG_VERSION, tagName, 0, length)) {", "+\t\tif (this.inlineTagStarted && this.reportProblems", "+\t\t\t\t&& (this.tagValue >= JAVADOC_TAG_TYPE.length || JAVADOC_TAG_TYPE[this.tagValue] != TAG_TYPE_INLINE)) {", "+\t\t\t\tthis.sourceParser.problemReporter().javadocUnexpectedTag(this.tagSourceStart, this.tagSourceEnd);", "+\t\t}"]}], "num": 15066}