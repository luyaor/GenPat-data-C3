{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0a02fbb97cc03faeca8a74c67345f7bb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35ed76a4fa9cad451756166c181ff893", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "f8406402dab63bd844517051ef5aaa1b160d2392", "commitAfterChange": "5bd6b9d7331a9e7fe82d427994d62e0af1821389", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 57, "signatureBeforeChange": " \tprivate void findLocalMethods( \t\tchar[] methodName, \t\tTypeBinding[] typeArgTypes, \t\tTypeBinding[] argTypes, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds)", "signatureAfterChange": " \tprivate void findLocalMethods( \t\tchar[] methodName, \t\tTypeBinding[] typeArgTypes, \t\tTypeBinding[] argTypes, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems)", "diff": ["-\t\tint[] missingElementsEnds) {", "+\t\tint[] missingElementsEnds,", "+\t\tboolean missingElementsHaveProblems) {", "+\t\t\t}", "+\t\t\tif (missingElements != null) {", "+\t\t\t\trelevance += computeRelevanceForMissingElements(missingElementsHaveProblems);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f6bb1fa9b66e45169b1bace693c3d97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "f8406402dab63bd844517051ef5aaa1b160d2392", "commitAfterChange": "5bd6b9d7331a9e7fe82d427994d62e0af1821389", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tprivate void findFields( \t\tchar[] fieldName, \t\tFieldBinding[] fields, \t\tScope scope, \t\tObjectVector fieldsFound, \t\tObjectVector localsFound, \t\tboolean onlyStaticFields, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds)", "signatureAfterChange": " \tprivate void findFields( \t\tchar[] fieldName, \t\tFieldBinding[] fields, \t\tScope scope, \t\tObjectVector fieldsFound, \t\tObjectVector localsFound, \t\tboolean onlyStaticFields, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems)", "diff": ["-\t\tint[] missingElementsEnds) {", "+\t\tint[] missingElementsEnds,", "+\t\tboolean missingElementsHaveProblems) {", "+\t\t\tif (missingElements != null) {", "+\t\t\t\trelevance += computeRelevanceForMissingElements(missingElementsHaveProblems);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "956b2d7637bcb0a87d140f5586af3d8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/BinaryIndexer.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprivate char[][] decodeParameterTypes(char[] signature) throws ClassFormatException", "signatureAfterChange": " \tprivate char[][] decodeParameterTypes(char[] signature, boolean firstIsSynthetic) throws ClassFormatException", "diff": ["-\tprivate char[][] decodeParameterTypes(char[] signature) throws ClassFormatException {", "+\tprivate char[][] decodeParameterTypes(char[] signature, boolean firstIsSynthetic) throws ClassFormatException {", "-\t\t\t\t\tparameterTypes[parameterTypesCounter++] = replace('/','.',CharOperation.subarray(signature, i + 1, indexOfSemiColon));", "-\t\t\t\t\tif (arrayDim > 0)", "-\t\t\t\t\t\tconvertToArrayType(parameterTypes, parameterTypesCounter-1, arrayDim);", "+\t\t\t\t\tif (firstIsSynthetic && parameterTypesCounter == 0) {", "+\t\t\t\t\t\t// skip first synthetic parameter", "+\t\t\t\t\t\tfirstIsSynthetic = false;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tparameterTypes[parameterTypesCounter++] = replace('/','.',CharOperation.subarray(signature, i + 1, indexOfSemiColon));", "+\t\t\t\t\t\tif (arrayDim > 0)", "+\t\t\t\t\t\t\tconvertToArrayType(parameterTypes, parameterTypesCounter-1, arrayDim);", "+\t\t\t\t\t}"]}], "num": 36839}