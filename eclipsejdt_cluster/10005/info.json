{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3964cee57bb5a68c25b0b490585564fc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48ad57885c31d078f6dac2c1f4e53aa7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "f5ba3eda07b1ea41890a7ce793b9da47e6b4d63e", "commitAfterChange": "af33a2b5d21704fd80790ca573818492aac6d737", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t\tpublic String toString()", "signatureAfterChange": " \t\tpublic String toString()", "diff": ["-\t\t\t\tbuffer.append(this.project.toString());", "+\t\t\t\tbuffer.append(this.project.getElementName());", "+\t\t\t}", "+\t\t\tbuffer.append(\"\\npath=\"); //$NON-NLS-1$", "+\t\t\tif (this.rootPath == null) {", "+\t\t\t\tbuffer.append(\"null\"); //$NON-NLS-1$", "+\t\t\t} else {", "+\t\t\t\tbuffer.append(this.rootPath.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52d4aaf01526689dece540df8262d64d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForeachStatement.java", "commitBeforeChange": "83b88f3849bc3529944cb5ada76e610acc101ab1", "commitAfterChange": "7eed8178809b3804cdae88d40ff2d9114bc0d206", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\t\t\t\tcodeStream.arrayAt(this.arrayElementTypeID);", "+\t\t\t\t\tcodeStream.arrayAt(this.collectionElementType.id);", "-\t\t\t\t\t\tcodeStream.checkcast(this.elementVariable.binding.type);", "+\t\t\t\t\t\tif (this.elementVariableImplicitWidening != -1) {", "+\t\t\t\t\t\t\tcodeStream.checkcast(this.collectionElementType);", "+\t\t\t\t\t\t\tcodeStream.generateImplicitConversion(this.elementVariableImplicitWidening);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tcodeStream.checkcast(this.elementVariable.binding.type);", "+\t\t\t\t\t\t}"]}], "num": 10005}