{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f39bf546872de7145182ec11f199b4fc", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92a4d5d8c086deec281365f7e657f343", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "a170a70f9fd89b9996c94f318397ff4dca1db782", "commitAfterChange": "25c55f5a3b95044fb71ce56ee0bb0a797b58daa1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate int internalBoundCheck(Substitution substitution, TypeBinding argumentType, Scope scope)", "signatureAfterChange": " \tprivate int internalBoundCheck(Substitution substitution, TypeBinding argumentType, Scope scope)", "diff": ["-\t    long nullTagBits = this.tagBits & TagBits.AnnotationNullMASK;", "+\t    long nullTagBits = NullAnnotationMatching.validNullTagBits(this.tagBits);", "-\t    \tlong argBits = argumentType.tagBits & TagBits.AnnotationNullMASK;", "+\t    \tlong argBits = NullAnnotationMatching.validNullTagBits(argumentType.tagBits);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a59650d22021e55ea21b61f1659cc46d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "7ba9ff29fe6b05ec0a2f58eaa1f5d3e68bb11101", "commitAfterChange": "427a01e331e57852efc472cca3a8360bd121fda9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate int internalBoundCheck(Substitution substitution, TypeBinding argumentType, Scope scope)", "signatureAfterChange": " \tprivate int internalBoundCheck(Substitution substitution, TypeBinding argumentType, Scope scope)", "diff": ["+\t    \t}", "+\t    }", "+\t    long nullTagBits = this.tagBits & TagBits.AnnotationNullMASK;", "+\t    if (nullTagBits != 0) {", "+\t    \tlong argBits = argumentType.tagBits & TagBits.AnnotationNullMASK;", "+\t    \tif (argBits != nullTagBits) {", "+//\t    \t\tSystem.err.println(\"TODO(stephan): issue proper error: bound conflict at \"+String.valueOf(this.declaringElement.readableName()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec1c9fb9b2a2d4c07d8419cc1e882c3c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/BinaryIndexer.java", "commitBeforeChange": "9af5f94a7f34f8aa21c824cf527428efe92e4a78", "commitAfterChange": "072a3ce9f66b8b6daf9a8d85418a569f07a2c2a3", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic void indexDocument()", "signatureAfterChange": " \tpublic void indexDocument()", "diff": ["+\t\t\t\t\ttagBits = method.getTagBits() & TagBits.AllStandardAnnotationsMask;", "+\t\t\t\t\tif (tagBits != 0) {", "+\t\t\t\t\t\taddBinaryStandardAnnotations(tagBits);", "+\t\t\t\t\t}", "+\t\t\t\t\ttagBits = field.getTagBits() & TagBits.AllStandardAnnotationsMask;", "+\t\t\t\t\tif (tagBits != 0) {", "+\t\t\t\t\t\taddBinaryStandardAnnotations(tagBits);", "+\t\t\t\t\t}"]}], "num": 31469}