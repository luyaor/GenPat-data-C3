{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9fe6e298cab42d6d49d8ddd3b9dcecdf", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2de61bbb763ed38c2c2350dd78ab279c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "4a42ce44b4dbdac7dfa261ef1a39fce0de95d7be", "commitAfterChange": "51fbd8e4f6294604d20aa6227743a8c8abfdc166", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \r protected AbstractImageBuilder(JavaBuilder javaBuilder)", "signatureAfterChange": "\r \r protected AbstractImageBuilder(JavaBuilder javaBuilder)", "diff": ["-\tint index = sourceFolders.length;\r", "-\tthis.hasSeparateOutputFolder = index > 0; // skip it if it doesn't have any source folders\r", "-\twhile (this.hasSeparateOutputFolder && --index >= 0)\r", "-\t\tthis.hasSeparateOutputFolder = !outputPath.equals(sourceFolders[index].getFullPath());\r", "+\tint index = sourceFolders.length;\r", "+\tif (index == 0) {\r", "+\t\t// handle case of the last source folder is removed... so no source folders exist but the output folder must still be scrubbed\r", "+\t\tthis.hasSeparateOutputFolder = !outputPath.equals(javaBuilder.currentProject.getFullPath());\r", "+\t} else {\r", "+\t\tthis.hasSeparateOutputFolder = true;\r", "+\t\twhile (this.hasSeparateOutputFolder && --index >= 0)\r", "+\t\t\tthis.hasSeparateOutputFolder = !outputPath.equals(sourceFolders[index].getFullPath());\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1e314c96060a28960ab7f7aa08b3925", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/AbstractImageBuilder.java", "commitBeforeChange": "c1a4eec7badf25da1ca6cc1d039b5627888514b8", "commitAfterChange": "2d75cef028da9a8fe8c9804711f5a598b2019a3c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \r protected AbstractImageBuilder(JavaBuilder javaBuilder)", "signatureAfterChange": "\r \r protected AbstractImageBuilder(JavaBuilder javaBuilder)", "diff": ["+\tint index = sourceFolders.length;\r", "+\tthis.hasSeparateOutputFolder = index > 0; // skip it if it doesn't have any source folders\r", "-\tthis.hasSeparateOutputFolder = !outputPath.equals(javaBuilder.currentProject.getFullPath());\r", "-\tfor (int i = 0, length = sourceFolders.length; hasSeparateOutputFolder && i < length; i++)\r", "-\t\tthis.hasSeparateOutputFolder = !outputPath.equals(sourceFolders[i].getFullPath());\r", "+\twhile (this.hasSeparateOutputFolder && --index >= 0)\r", "+\t\tthis.hasSeparateOutputFolder = !outputPath.equals(sourceFolders[index].getFullPath());\r"]}], "num": 9721}