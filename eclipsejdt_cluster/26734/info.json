{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1a7ca7dc09fec192e83dc93b5c9d41e4", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d2e1ece5cd2b87484d4bc833825dbaa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic void internalAnalyseCode(FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " \tprivate void internalAnalyseCode(FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tpublic void internalAnalyseCode(FlowContext flowContext, FlowInfo flowInfo) {", "+\tprivate void internalAnalyseCode(FlowContext flowContext, FlowInfo flowInfo) {", "-\t\tFlowInfo nonStaticFieldInfo = flowInfo.copy().unconditionalInits().discardFieldInitializations();", "-\t\tFlowInfo staticFieldInfo = flowInfo.copy().unconditionalInits().discardFieldInitializations();", "+\t\tFlowInfo nonStaticFieldInfo = flowInfo.unconditionalFieldLessCopy();", "+\t\tFlowInfo staticFieldInfo = flowInfo.unconditionalFieldLessCopy();", "-\t\t\t\t\tif (!staticFieldInfo.isReachable())", "+\t\t\t\t\tif ((staticFieldInfo.tagBits & FlowInfo.UNREACHABLE) != 0)", "-\t\t\t\t\tif (!nonStaticFieldInfo.isReachable())", "+\t\t\t\t\tif ((nonStaticFieldInfo.tagBits & FlowInfo.UNREACHABLE) != 0)", "-\t\t\tUnconditionalFlowInfo outerInfo = flowInfo.copy().unconditionalInits().discardFieldInitializations();", "+\t\t\tUnconditionalFlowInfo outerInfo = flowInfo.unconditionalFieldLessCopy();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "898831380201d97726a988f8fb6fb793", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/IfStatement.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\tflowInfo = condition.analyseCode(currentScope, flowContext, flowInfo);", "+\t\tFlowInfo conditionFlowInfo =", "+\t\t\tcondition.analyseCode(currentScope, flowContext, flowInfo);", "-\t\tFlowInfo thenFlowInfo = flowInfo.initsWhenTrue().copy();", "+\t\tFlowInfo thenFlowInfo = conditionFlowInfo.safeInitsWhenTrue();", "-\t\tFlowInfo elseFlowInfo = flowInfo.initsWhenFalse().copy();", "+\t\tFlowInfo elseFlowInfo = conditionFlowInfo.initsWhenFalse();", "-\t\tthis.condition.checkNullComparison(currentScope, flowContext, flowInfo, thenFlowInfo, elseFlowInfo);", "-\t\tthis.thenExit =  !thenFlowInfo.isReachable();", "+\t\tthis.thenExit = (thenFlowInfo.tagBits & FlowInfo.UNREACHABLE) != 0;", "-\t\t\t\tthenFlowInfo, ", "-\t\t\t\tisConditionOptimizedTrue, ", "-\t\t\t\telseFlowInfo, ", "-\t\t\t\tisConditionOptimizedFalse,", "-\t\t\t\ttrue /*if(true){ return; }  fake-reachable(); */);", "+\t\t\tthenFlowInfo, ", "+\t\t\tisConditionOptimizedTrue, ", "+\t\t\telseFlowInfo, ", "+\t\t\tisConditionOptimizedFalse,", "+\t\t\ttrue /*if(true){ return; }  fake-reachable(); */);"]}], "num": 26734}