{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c1ddec5704ca96ea781333923960714", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa932b666d534308daedc862983f2e7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Token.java", "commitBeforeChange": "80f6342a7f709a2d6fe0cf3f1274abc00b566ec7", "commitAfterChange": "c554caa948bbe051a5aeee635338c74832d8067f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic static Token fromCurrent(Scanner scanner, int currentToken)", "signatureAfterChange": "  \tpublic static Token fromCurrent(Scanner scanner, int currentToken)", "diff": ["-\t\t\tString source = scanner.getCurrentTokenString();", "-\t\t\tfor (int i = source.length() - 1; i > 0; i--) {", "-\t\t\t\tchar c = source.charAt(i);", "+\t\t\twhile(end >= start) {", "+\t\t\t\tchar c = scanner.source[end];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f48113ca40a0e40bd90c134c7e2591fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 45, "signatureBeforeChange": " public static char[] getReturnType(char[] methodSignature) throws IllegalArgumentException", "signatureAfterChange": " public static char[] getReturnType(char[] methodSignature) throws IllegalArgumentException", "diff": ["-\tint i = CharOperation.lastIndexOf(C_PARAM_END, methodSignature);", "-\tif (i == -1) {", "+\tint paren = CharOperation.lastIndexOf(C_PARAM_END, methodSignature);", "+\tif (paren == -1) {", "-\t// ignore any thrown exceptions", "-\tint j = CharOperation.indexOf('^', methodSignature);", "-\tint last = (j == -1 ? methodSignature.length : j);", "-\treturn CharOperation.subarray(methodSignature, i + 1, last);", "+\t// there could be thrown exceptions behind, thus scan one type exactly", "+\tint last = scanTypeSignature(methodSignature, paren+1);", "+\treturn CharOperation.subarray(methodSignature, paren + 1, last+1);"]}], "num": 6119}