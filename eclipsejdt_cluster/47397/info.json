{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a4eb91521a3ec9c4432ac062eaff55d6", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43aae6ec91c96cedd5ab516ff36e5f5b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "70416b46b1375461a92d89ffa1cb077778dc6e86", "commitAfterChange": "0c53505dd9d8f221929a96f99e04ff55bfc4fc05", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tprivate ClassFileReader classFileReader(IType type)", "signatureAfterChange": " \tpublic  ClassFileReader classFileReader(IType type)", "diff": ["+\t}", "+\tpublic  ClassFileReader classFileReader(IType type) {", "+\t\tIClassFile classFile = type.getClassFile(); ", "+\t\tif (((IOpenable)classFile).isOpen()) {", "+\t\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "+\t\t\tsynchronized(manager){", "+\t\t\t\treturn (ClassFileReader)manager.getInfo(type);", "+\t\t\t}", "+\t\t} else {", "+\t\t\tIPackageFragment pkg = type.getPackageFragment();", "+\t\t\tIPackageFragmentRoot root = (IPackageFragmentRoot)pkg.getParent();", "+\t\t\ttry {", "+\t\t\t\tif (root.isArchive()) {", "+\t\t\t\t\tIPath zipPath = root.isExternal() ? root.getPath() : root.getResource().getLocation();", "+\t\t\t\t\tif (zipPath == null) return null; // location is null", "+\t\t\t\t\tZipFile zipFile = null;", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tif (JavaModelManager.ZIP_ACCESS_VERBOSE) {", "+\t\t\t\t\t\t\tSystem.out.println(\"(\" + Thread.currentThread() + \") [MatchLocator.classFileReader()] Creating ZipFile on \" + zipPath); //$NON-NLS-1$\t//$NON-NLS-2$", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\t// TODO: (jerome) should use JavaModelManager.getZipFile(...) instead", "+\t\t\t\t\t\tzipFile = new ZipFile(zipPath.toOSString());", "+\t\t\t\t\t\tchar[] pkgPath = pkg.getElementName().toCharArray();", "+\t\t\t\t\t\tCharOperation.replace(pkgPath, '.', '/');", "+\t\t\t\t\t\tchar[] classFileName = classFile.getElementName().toCharArray();", "+\t\t\t\t\t\tchar[] path = pkgPath.length == 0 ? classFileName : CharOperation.concat(pkgPath, classFileName, '/');", "+\t\t\t\t\t\treturn ClassFileReader.read(zipFile, new String(path));", "+\t\t\t\t\t} finally {", "+\t\t\t\t\t\tif (zipFile != null) {", "+\t\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\t\tzipFile.close();", "+\t\t\t\t\t\t\t} catch (IOException e) {", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\treturn ClassFileReader.read(type.getPath().toOSString());", "+\t\t\t\t}", "+\t\t\t} catch (ClassFormatException e) {", "+\t\t\t\treturn null;", "+\t\t\t} catch (IOException e) {", "+\t\t\t\treturn null;", "+\t\t\t}", "-", "-\tprivate ClassFileReader classFileReader(IType type) {", "-\t\tIClassFile classFile = type.getClassFile(); ", "-\t\tif (((IOpenable)classFile).isOpen()) {", "-\t\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "-\t\t\tsynchronized(manager){", "-\t\t\t\treturn (ClassFileReader)manager.getInfo(type);", "-\t\t\t}", "-\t\t} else {", "-\t\t\tIPackageFragment pkg = type.getPackageFragment();", "-\t\t\tIPackageFragmentRoot root = (IPackageFragmentRoot)pkg.getParent();", "-\t\t\ttry {", "-\t\t\t\tif (root.isArchive()) {", "-\t\t\t\t\tIPath zipPath = root.isExternal() ? root.getPath() : root.getResource().getLocation();", "-\t\t\t\t\tif (zipPath == null) return null; // location is null", "-\t\t\t\t\tZipFile zipFile = null;", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\tif (JavaModelManager.ZIP_ACCESS_VERBOSE) {", "-\t\t\t\t\t\t\tSystem.out.println(\"(\" + Thread.currentThread() + \") [MatchLocator.classFileReader()] Creating ZipFile on \" + zipPath); //$NON-NLS-1$\t//$NON-NLS-2$", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tzipFile = new ZipFile(zipPath.toOSString());", "-\t\t\t\t\t\tchar[] pkgPath = pkg.getElementName().toCharArray();", "-\t\t\t\t\t\tCharOperation.replace(pkgPath, '.', '/');", "-\t\t\t\t\t\tchar[] classFileName = classFile.getElementName().toCharArray();", "-\t\t\t\t\t\tchar[] path = pkgPath.length == 0 ? classFileName : CharOperation.concat(pkgPath, classFileName, '/');", "-\t\t\t\t\t\treturn ClassFileReader.read(zipFile, new String(path));", "-\t\t\t\t\t} finally {", "-\t\t\t\t\t\tif (zipFile != null) {", "-\t\t\t\t\t\t\ttry {", "-\t\t\t\t\t\t\t\tzipFile.close();", "-\t\t\t\t\t\t\t} catch (IOException e) {", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t} else {", "-\t\t\t\t\treturn ClassFileReader.read(type.getPath().toOSString());", "-\t\t\t\t}", "-\t\t\t} catch (ClassFormatException e) {", "-\t\t\t\treturn null;", "-\t\t\t} catch (IOException e) {", "-\t\t\t\treturn null;", "-\t\t\t}", "-\t\t}", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5452a8c99a2b5ec9217d8094b18a8d59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "d4a90dd90535197bda12b521c603853c2f8eb60c", "commitAfterChange": "d473849794f95ce2b5cbae060ffe683ee81ff056", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 5, "signatureBeforeChange": " protected  ClassFileReader classFileReader(IType type)", "signatureAfterChange": "  public static ClassFileReader classFileReader(IType type)", "diff": ["+", "+public static ClassFileReader classFileReader(IType type) {", "+\tIClassFile classFile = type.getClassFile(); ", "+\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "+\tif (classFile.isOpen())", "+\t\treturn (ClassFileReader) manager.getInfo(type);", "+", "+\tIPackageFragment pkg = type.getPackageFragment();", "+\tIPackageFragmentRoot root = (IPackageFragmentRoot)pkg.getParent();", "+\ttry {", "+\t\tif (!root.isArchive())", "+\t\t\treturn ClassFileReader.read(type.getPath().toOSString());", "+", "+\t\tIPath zipPath = root.isExternal() ? root.getPath() : root.getResource().getLocation();", "+\t\tif (zipPath == null) return null; // location is null", "+\t\tZipFile zipFile = null;", "+\t\ttry {", "+\t\t\tif (JavaModelManager.ZIP_ACCESS_VERBOSE)", "+\t\t\t\tSystem.out.println(\"(\" + Thread.currentThread() + \") [MatchLocator.classFileReader()] Creating ZipFile on \" + zipPath); //$NON-NLS-1$\t//$NON-NLS-2$", "+\t\t\tzipFile = manager.getZipFile(zipPath);", "+\t\t\tchar[] pkgPath = pkg.getElementName().toCharArray();", "+\t\t\tCharOperation.replace(pkgPath, '.', '/');", "+\t\t\tchar[] classFileName = classFile.getElementName().toCharArray();", "+\t\t\tchar[] path = pkgPath.length == 0 ? classFileName : CharOperation.concat(pkgPath, classFileName, '/');", "+\t\t\treturn ClassFileReader.read(zipFile, new String(path));", "+\t\t} finally {", "+\t\t\tmanager.closeZipFile(zipFile);", "+\t\t}", "+\t} catch (ClassFormatException e) {", "+\t\t// invalid class file: return null", "+\t} catch (CoreException e) {", "+\t\t// cannot read class file: return null", "+\t} catch (IOException e) {", "+\t\t// cannot read class file: return null", "+\t}", "+\treturn null;", "+}", "-}", "-protected  ClassFileReader classFileReader(IType type) {", "-\tIClassFile classFile = type.getClassFile(); ", "-\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "-\tif (classFile.isOpen())", "-\t\treturn (ClassFileReader) manager.getInfo(type);", "-", "-\tIPackageFragment pkg = type.getPackageFragment();", "-\tIPackageFragmentRoot root = (IPackageFragmentRoot)pkg.getParent();", "-\ttry {", "-\t\tif (!root.isArchive())", "-\t\t\treturn ClassFileReader.read(type.getPath().toOSString());", "-", "-\t\tIPath zipPath = root.isExternal() ? root.getPath() : root.getResource().getLocation();", "-\t\tif (zipPath == null) return null; // location is null", "-\t\tZipFile zipFile = null;", "-\t\ttry {", "-\t\t\tif (JavaModelManager.ZIP_ACCESS_VERBOSE)", "-\t\t\t\tSystem.out.println(\"(\" + Thread.currentThread() + \") [MatchLocator.classFileReader()] Creating ZipFile on \" + zipPath); //$NON-NLS-1$\t//$NON-NLS-2$", "-\t\t\tzipFile = manager.getZipFile(zipPath);", "-\t\t\tchar[] pkgPath = pkg.getElementName().toCharArray();", "-\t\t\tCharOperation.replace(pkgPath, '.', '/');", "-\t\t\tchar[] classFileName = classFile.getElementName().toCharArray();", "-\t\t\tchar[] path = pkgPath.length == 0 ? classFileName : CharOperation.concat(pkgPath, classFileName, '/');", "-\t\t\treturn ClassFileReader.read(zipFile, new String(path));", "-\t\t} finally {", "-\t\t\tmanager.closeZipFile(zipFile);", "-\t\t}", "-\t} catch (ClassFormatException e) {", "-\t\t// invalid class file: return null", "-\t} catch (CoreException e) {", "-\t\t// cannot read class file: return null", "-\t} catch (IOException e) {", "-\t\t// cannot read class file: return null", "-\t}", "-\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8481f6df9705a4104d16d419c2d4e999", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "0271031e5844c32df2646c3a81a2c00b29e7d251", "commitAfterChange": "14c82497ad7236bee9eedf2d9ff4867e4a47ff21", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic  ClassFileReader classFileReader(IType type)", "signatureAfterChange": " protected  ClassFileReader classFileReader(IType type)", "diff": ["-\t}", "-\tpublic  ClassFileReader classFileReader(IType type) {", "-\t\tIClassFile classFile = type.getClassFile(); ", "-\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "-\t\tif (classFile.isOpen()) {", "-\t\t\treturn (ClassFileReader)manager.getInfo(type);", "-\t\t} else {", "-\t\t\tIPackageFragment pkg = type.getPackageFragment();", "-\t\t\tIPackageFragmentRoot root = (IPackageFragmentRoot)pkg.getParent();", "-\t\t\ttry {", "-\t\t\t\tif (root.isArchive()) {", "-\t\t\t\t\tIPath zipPath = root.isExternal() ? root.getPath() : root.getResource().getLocation();", "-\t\t\t\t\tif (zipPath == null) return null; // location is null", "-\t\t\t\t\tZipFile zipFile = null;", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\tif (JavaModelManager.ZIP_ACCESS_VERBOSE) {", "-\t\t\t\t\t\t\tSystem.out.println(\"(\" + Thread.currentThread() + \") [MatchLocator.classFileReader()] Creating ZipFile on \" + zipPath); //$NON-NLS-1$\t//$NON-NLS-2$", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tzipFile = manager.getZipFile(zipPath);", "-\t\t\t\t\t\tchar[] pkgPath = pkg.getElementName().toCharArray();", "-\t\t\t\t\t\tCharOperation.replace(pkgPath, '.', '/');", "-\t\t\t\t\t\tchar[] classFileName = classFile.getElementName().toCharArray();", "-\t\t\t\t\t\tchar[] path = pkgPath.length == 0 ? classFileName : CharOperation.concat(pkgPath, classFileName, '/');", "-\t\t\t\t\t\treturn ClassFileReader.read(zipFile, new String(path));", "-\t\t\t\t\t} finally {", "-\t\t\t\t\t\tmanager.closeZipFile(zipFile);", "-\t\t\t\t\t}", "-\t\t\t\t} else {", "-\t\t\t\t\treturn ClassFileReader.read(type.getPath().toOSString());", "-\t\t\t\t}", "-\t\t\t} catch (ClassFormatException e) {", "-\t\t\t\treturn null;", "-\t\t\t} catch (CoreException e) {", "-\t\t\t\treturn null;", "-\t\t\t} catch (IOException e) {", "-\t\t\t\treturn null;", "-\t\t\t}", "-\t\t}", "-\t}", "+}", "+protected  ClassFileReader classFileReader(IType type) {", "+\tIClassFile classFile = type.getClassFile(); ", "+\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "+\tif (classFile.isOpen())", "+\t\treturn (ClassFileReader) manager.getInfo(type);", "+", "+\tIPackageFragment pkg = type.getPackageFragment();", "+\tIPackageFragmentRoot root = (IPackageFragmentRoot)pkg.getParent();", "+\ttry {", "+\t\tif (!root.isArchive())", "+\t\t\treturn ClassFileReader.read(type.getPath().toOSString());", "+", "+\t\tIPath zipPath = root.isExternal() ? root.getPath() : root.getResource().getLocation();", "+\t\tif (zipPath == null) return null; // location is null", "+\t\tZipFile zipFile = null;", "+\t\ttry {", "+\t\t\tif (JavaModelManager.ZIP_ACCESS_VERBOSE)", "+\t\t\t\tSystem.out.println(\"(\" + Thread.currentThread() + \") [MatchLocator.classFileReader()] Creating ZipFile on \" + zipPath); //$NON-NLS-1$\t//$NON-NLS-2$", "+\t\t\tzipFile = manager.getZipFile(zipPath);", "+\t\t\tchar[] pkgPath = pkg.getElementName().toCharArray();", "+\t\t\tCharOperation.replace(pkgPath, '.', '/');", "+\t\t\tchar[] classFileName = classFile.getElementName().toCharArray();", "+\t\t\tchar[] path = pkgPath.length == 0 ? classFileName : CharOperation.concat(pkgPath, classFileName, '/');", "+\t\t\treturn ClassFileReader.read(zipFile, new String(path));", "+\t\t} finally {", "+\t\t\tmanager.closeZipFile(zipFile);", "+\t\t}", "+\t} catch (ClassFormatException e) {", "+\t} catch (CoreException e) {", "+\t} catch (IOException e) {", "+\t}", "+\treturn null;", "+}"]}], "num": 47397}