{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a0ae542b2dccd526653deaacac652195", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11a33fb73188512068b339558f5d1784", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompilationUnitTests.java", "commitBeforeChange": "97b330eb505dfca0980041926ec66a0261a5be5c", "commitAfterChange": "d3580136581144eb64c8a6ff7ec886b58a1ec764", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void testIsBasedOn() throws JavaModelException", "signatureAfterChange": " public void testHasResourceChanged() throws JavaModelException", "diff": ["-public void testIsBasedOn() throws JavaModelException {", "+public void testHasResourceChanged() throws JavaModelException {", "-\t\t\"A compilation unit should not be based on any resource\", ", "-\t\t!this.cu.isBasedOn(this.cu.getUnderlyingResource()));", "+\t\t\"A compilation unit's resource should not have changed\", ", "+\t\t!this.cu.hasResourceChanged());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6337cca2b46d8e3fd8295050c3e40c0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "72d60854091bd7e8a5aafafdfea62cc297a3eb41", "commitAfterChange": "44bbf980266fcc715be62062c1d7009f2bf80c63", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["+\tif (this.pattern.shouldExtendSelection()) {", "+\t\t// SEARCH_15 do not report import ref for generic patterns...", "+\t\treturn;", "+\t}", "-\t\t\tif (resolveLevelForType(this.pattern.simpleName, this.pattern.qualification, typeBinding) == ACCURATE_MATCH) {", "+\t\t\tif (resolveLevelForType(typeBinding) == ACCURATE_MATCH) {"]}], "num": 49819}