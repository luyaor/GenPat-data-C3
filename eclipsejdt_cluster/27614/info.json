{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4bab2e63ee0aa30f54b9e81575ee02d0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b8e3c2f69f55f3cb2dca8a189e3292c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JarPackageFragment.java", "commitBeforeChange": "80f13f589612d3209f47e541aabe6ab2c65adcfb", "commitAfterChange": "368ef540dc656f1299283391a6f5a5b30ecfed90", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " void computeNonJavaResources(String[] resNames, JarPackageFragmentInfo info, String zipName)", "signatureAfterChange": " void computeNonJavaResources(String[] resNames, JarPackageFragmentInfo info, String zipName)", "diff": ["+\tint index = 0;\r", "-\t\tres[i] = new JarEntryFile(resNames[i], zipName);\r", "+\t\tString resName = resNames[i];\r", "+\t\t// consider that a .java file is not a non-java resource (see bug 12246 Packages view shows .class and .java files when JAR has source)\r", "+\t\tif (!resName.toLowerCase().endsWith(\".java\")) { //$NON-NLS-1$\r", "+\t\t\tres[index++] = new JarEntryFile(resName, zipName);\r", "+\t\t}\r", "+\tif (index != max) {\r", "+\t\tSystem.arraycopy(res, 0, res = new Object[index], 0, index);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dca49109e8d3a6d3d6006e19d69228be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/IndexSelector.java", "commitBeforeChange": "bd673e70d2edbc0e521113de6223a36ce39b9f38", "commitAfterChange": "f39ebdc35f9d09bb9c2d74130f4d665ebd4bf2dc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public IIndex[] getIndexes()", "signatureAfterChange": " public IIndex[] getIndexes()", "diff": ["+\tint count = 0;", "-\t\tindexes[i] = indexManager.getIndex(indexKeys[i], true /*reuse index file*/, false /*do not create if none*/);", "+\t\tIIndex index = indexManager.getIndex(indexKeys[i], true /*reuse index file*/, false /*do not create if none*/);", "+\t\tif (index != null) indexes[count++] = index; // only consider indexes which are ready yet", "+\t}", "+\tif (count != length) {", "+\t\tSystem.arraycopy(indexes, 0, indexes=new IIndex[count], 0, count);"]}], "num": 27614}