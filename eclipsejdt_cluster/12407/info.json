{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c0858648f02802c6e14422e8e126a16", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ba20f1cf644a38677a48e1c9d658882", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "8c6ad3fe2dd29ea00f37ac08f341aac0916d74a9", "commitAfterChange": "276014c18848146cc6552e5a1fe5550063270548", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " public void correlateTrackingVarsIfElse(FlowInfo thenFlowInfo, FlowInfo elseFlowInfo)", "signatureAfterChange": " public void correlateTrackingVarsIfElse(FlowInfo thenFlowInfo, FlowInfo elseFlowInfo)", "diff": ["-\t\tfor (int i=0; i<this.trackingVariables.size(); i++) {", "+\t\tint trackVarCount = this.trackingVariables.size();", "+\t\tfor (int i=0; i<trackVarCount; i++) {", "+\t\t\telse {", "+\t\t\t\tif (thenFlowInfo == FlowInfo.DEAD_END || elseFlowInfo == FlowInfo.DEAD_END)", "+\t\t\t\t\tcontinue; // short cut", "+", "+\t\t\t\tfor (int j=i+1; j<trackVarCount; j++) {", "+\t\t\t\t\tFakedTrackingVariable var2 = ((FakedTrackingVariable) this.trackingVariables.get(j));", "+\t\t\t\t\tif (trackingVar.originalBinding == var2.originalBinding) {", "+\t\t\t\t\t\t// two tracking variables for the same original, merge info from both branches now:", "+\t\t\t\t\t\tboolean var1SeenInThen = thenFlowInfo.hasNullInfoFor(trackingVar.binding);", "+\t\t\t\t\t\tboolean var1SeenInElse = elseFlowInfo.hasNullInfoFor(trackingVar.binding);", "+\t\t\t\t\t\tboolean var2SeenInThen = thenFlowInfo.hasNullInfoFor(var2.binding);", "+\t\t\t\t\t\tboolean var2SeenInElse = elseFlowInfo.hasNullInfoFor(var2.binding);", "+\t\t\t\t\t\tint newStatus;", "+\t\t\t\t\t\tif (!var1SeenInThen && var1SeenInElse && var2SeenInThen && !var2SeenInElse) {", "+\t\t\t\t\t\t\tnewStatus = FlowInfo.mergeNullStatus(thenFlowInfo.nullStatus(var2.binding), elseFlowInfo.nullStatus(trackingVar.binding));", "+\t\t\t\t\t\t} else if (var1SeenInThen && !var1SeenInElse && !var2SeenInThen && var2SeenInElse) {", "+\t\t\t\t\t\t\tnewStatus = FlowInfo.mergeNullStatus(thenFlowInfo.nullStatus(trackingVar.binding), elseFlowInfo.nullStatus(var2.binding)); ", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tthenFlowInfo.markNullStatus(trackingVar.binding, newStatus);", "+\t\t\t\t\t\telseFlowInfo.markNullStatus(trackingVar.binding, newStatus);", "+\t\t\t\t\t\ttrackingVar.originalBinding.closeTracker = trackingVar; // avoid further use of var2", "+\t\t\t\t\t\tthenFlowInfo.markNullStatus(var2.binding, FlowInfo.NON_NULL);", "+\t\t\t\t\t\telseFlowInfo.markNullStatus(var2.binding, FlowInfo.NON_NULL);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74294c4933dc2ad679c628671b2df856", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "e14a67b89e92e257eae6e75fc0c7b3046b4c9f63", "commitAfterChange": "909d290bd029fb6f505219cc6f64089f759548bb", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " public void correlateTrackingVarsIfElse(FlowInfo thenFlowInfo, FlowInfo elseFlowInfo)", "signatureAfterChange": " public void correlateTrackingVarsIfElse(FlowInfo thenFlowInfo, FlowInfo elseFlowInfo)", "diff": ["-\t\tfor (int i=0; i<this.trackingVariables.size(); i++) {", "+\t\tint trackVarCount = this.trackingVariables.size();", "+\t\tfor (int i=0; i<trackVarCount; i++) {", "+\t\t\telse {", "+\t\t\t\tif (thenFlowInfo == FlowInfo.DEAD_END || elseFlowInfo == FlowInfo.DEAD_END)", "+\t\t\t\t\tcontinue; // short cut", "+", "+\t\t\t\tfor (int j=i+1; j<trackVarCount; j++) {", "+\t\t\t\t\tFakedTrackingVariable var2 = ((FakedTrackingVariable) this.trackingVariables.get(j));", "+\t\t\t\t\tif (trackingVar.originalBinding == var2.originalBinding) {", "+\t\t\t\t\t\t// two tracking variables for the same original, merge info from both branches now:", "+\t\t\t\t\t\tboolean var1SeenInThen = thenFlowInfo.hasNullInfoFor(trackingVar.binding);", "+\t\t\t\t\t\tboolean var1SeenInElse = elseFlowInfo.hasNullInfoFor(trackingVar.binding);", "+\t\t\t\t\t\tboolean var2SeenInThen = thenFlowInfo.hasNullInfoFor(var2.binding);", "+\t\t\t\t\t\tboolean var2SeenInElse = elseFlowInfo.hasNullInfoFor(var2.binding);", "+\t\t\t\t\t\tint newStatus;", "+\t\t\t\t\t\tif (!var1SeenInThen && var1SeenInElse && var2SeenInThen && !var2SeenInElse) {", "+\t\t\t\t\t\t\tnewStatus = FlowInfo.mergeNullStatus(thenFlowInfo.nullStatus(var2.binding), elseFlowInfo.nullStatus(trackingVar.binding));", "+\t\t\t\t\t\t} else if (var1SeenInThen && !var1SeenInElse && !var2SeenInThen && var2SeenInElse) {", "+\t\t\t\t\t\t\tnewStatus = FlowInfo.mergeNullStatus(thenFlowInfo.nullStatus(trackingVar.binding), elseFlowInfo.nullStatus(var2.binding)); ", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tthenFlowInfo.markNullStatus(trackingVar.binding, newStatus);", "+\t\t\t\t\t\telseFlowInfo.markNullStatus(trackingVar.binding, newStatus);", "+\t\t\t\t\t\ttrackingVar.originalBinding.closeTracker = trackingVar; // avoid further use of var2", "+\t\t\t\t\t\tthenFlowInfo.markNullStatus(var2.binding, FlowInfo.NON_NULL);", "+\t\t\t\t\t\telseFlowInfo.markNullStatus(var2.binding, FlowInfo.NON_NULL);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 12407}