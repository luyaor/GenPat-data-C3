{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6984d98f463f0eb334be469d39d9a96f", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69e6e7be0d7d4d490e18e0183c9db6f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodReferencePattern.java", "commitBeforeChange": "7e5cc03e445550d3cbc10c611218c79332074276", "commitAfterChange": "c57706d05dc3654769cca2053ff9cb20fb0a6664", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r public int matchLevel(Binding binding, MessageSend messageSend)", "signatureAfterChange": "\r protected boolean matches(AstNode node, boolean resolve)", "diff": ["+protected boolean matches(AstNode node, boolean resolve) {\r", "+\tif (!(node instanceof MessageSend)) return false;\r", "- */\r", "-public int matchLevel(Binding binding, MessageSend messageSend) {\r", "-\tif (binding == null) return INACCURATE_MATCH;\r", "-\tif (!(binding instanceof MethodBinding)) return IMPOSSIBLE_MATCH;\r", "-\tint level;\r", "-\r", "-\tMethodBinding method = (MethodBinding)binding;\r", "-\r", "-\tif (this.selector != null && !this.matchesName(this.selector, method.selector))\r", "-\t\treturn IMPOSSIBLE_MATCH;\r", "+\tif (this.selector != null && !this.matchesName(this.selector, messageSend.selector))\r", "+\t\treturn false;\r", "+\tMethodBinding binding = messageSend.binding;\r", "-\t\t\t(!isVirtualInvoke(method, messageSend) ? method.declaringClass : (ReferenceBinding)messageSend.receiverType);\r", "-\tif (this.isVirtualInvoke(method, messageSend)) {\r", "-\t\tlevel = this.matchLevelAsSubtype(receiverType, this.declaringSimpleName, this.declaringQualification);\r", "-\t\tif (level == IMPOSSIBLE_MATCH) {\r", "-\t\t\tlevel = this.matchLevelForType(this.allSuperDeclaringTypeNames, receiverType);\r", "-\t\t\tif (level == IMPOSSIBLE_MATCH) {\r", "-\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t\t(!isVirtualInvoke(messageSend) ? binding.declaringClass : (ReferenceBinding)messageSend.receiverType);\r", "+\tif (resolve && receiverType != null) {\r", "+\t\tif (this.isVirtualInvoke(messageSend)) {\r", "+\t\t\tif (!this.matchesAsSubtype(receiverType, this.declaringSimpleName, this.declaringQualification)\r", "+\t\t\t\t&& !this.matchesType(this.allSuperDeclaringTypeNames, receiverType)) {\r", "+\t\t\t\t\treturn false;\r", "+\t\t} else {\r", "+\t\t\tif (!this.matchesType(this.declaringSimpleName, this.declaringQualification, receiverType))\r", "+\t\t\t\treturn false;\r", "-\t} else {\r", "-\t\tlevel = this.matchLevelForType(this.declaringSimpleName, this.declaringQualification, receiverType);\r", "-\t\tif (level == IMPOSSIBLE_MATCH) return IMPOSSIBLE_MATCH;\r", "-\tint newLevel = this.matchLevelForType(this.returnSimpleName, this.returnQualification, method.returnType);\r", "-\tswitch (newLevel) {\r", "-\t\tcase IMPOSSIBLE_MATCH:\r", "-\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\tcase ACCURATE_MATCH: // keep previous level\r", "-\t\t\tbreak;\r", "-\t\tdefault: // ie. INACCURATE_MATCH\r", "-\t\t\tlevel = newLevel;\r", "-\t\t\tbreak;\r", "+\tif (resolve && binding != null) {\r", "+\t\tif (!this.matchesType(this.returnSimpleName, this.returnQualification, binding.returnType))\r", "+\t\t\treturn false;\r", "-\t\tif (method.parameters == null) {\r", "-\t\t\tlevel = INACCURATE_MATCH;\r", "-\t\t} else {\r", "-\t\t\tint parameterCount = method.parameters.length;\r", "-\t\t\tif (parameterCount != argumentCount) return IMPOSSIBLE_MATCH;\r", "+\t\tint parameterCount = messageSend.arguments == null ? 0 : messageSend.arguments.length;\r", "+\t\tif (parameterCount != argumentCount)\r", "+\t\t\treturn false;\r", "+\r", "+\t\tif (resolve && binding != null) {\r", "-\t\t\t\tnewLevel = this.matchLevelForType(type, qualification, method.parameters[i]);\r", "-\t\t\t\tswitch (newLevel) {\r", "-\t\t\t\t\tcase IMPOSSIBLE_MATCH:\r", "-\t\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t\t\tcase ACCURATE_MATCH: // keep previous level\r", "-\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\tdefault: // ie. INACCURATE_MATCH\r", "-\t\t\t\t\t\tlevel = newLevel;\r", "-\t\t\t\t\t\tbreak;\r", "-\t\t\t\t}\r", "+\t\t\t\tif (!this.matchesType(type, qualification, binding.parameters[i]))\r", "+\t\t\t\t\treturn false;\r", "-\treturn level;\r", "+\treturn true;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1e0dad12ca9f74959c7a5d3e5dae30d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodReferencePattern.java", "commitBeforeChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "commitAfterChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r public int matchLevel(Binding binding, MessageSend messageSend)", "signatureAfterChange": "\r protected boolean matches(AstNode node, boolean resolve)", "diff": ["+protected boolean matches(AstNode node, boolean resolve) {\r", "+\tif (!(node instanceof MessageSend)) return false;\r", "- */\r", "-public int matchLevel(Binding binding, MessageSend messageSend) {\r", "-\tif (binding == null) return INACCURATE_MATCH;\r", "-\tif (!(binding instanceof MethodBinding)) return IMPOSSIBLE_MATCH;\r", "-\tint level;\r", "-\r", "-\tMethodBinding method = (MethodBinding)binding;\r", "-\r", "-\tif (this.selector != null && !this.matchesName(this.selector, method.selector))\r", "-\t\treturn IMPOSSIBLE_MATCH;\r", "+\tif (this.selector != null && !this.matchesName(this.selector, messageSend.selector))\r", "+\t\treturn false;\r", "+\tMethodBinding binding = messageSend.binding;\r", "-\t\t\t(!isVirtualInvoke(method, messageSend) ? method.declaringClass : (ReferenceBinding)messageSend.receiverType);\r", "-\tif (this.isVirtualInvoke(method, messageSend)) {\r", "-\t\tlevel = this.matchLevelAsSubtype(receiverType, this.declaringSimpleName, this.declaringQualification);\r", "-\t\tif (level == IMPOSSIBLE_MATCH) {\r", "-\t\t\tlevel = this.matchLevelForType(this.allSuperDeclaringTypeNames, receiverType);\r", "-\t\t\tif (level == IMPOSSIBLE_MATCH) {\r", "-\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t\t(!isVirtualInvoke(messageSend) ? binding.declaringClass : (ReferenceBinding)messageSend.receiverType);\r", "+\tif (resolve && receiverType != null) {\r", "+\t\tif (this.isVirtualInvoke(messageSend)) {\r", "+\t\t\tif (!this.matchesAsSubtype(receiverType, this.declaringSimpleName, this.declaringQualification)\r", "+\t\t\t\t&& !this.matchesType(this.allSuperDeclaringTypeNames, receiverType)) {\r", "+\t\t\t\t\treturn false;\r", "+\t\t} else {\r", "+\t\t\tif (!this.matchesType(this.declaringSimpleName, this.declaringQualification, receiverType))\r", "+\t\t\t\treturn false;\r", "-\t} else {\r", "-\t\tlevel = this.matchLevelForType(this.declaringSimpleName, this.declaringQualification, receiverType);\r", "-\t\tif (level == IMPOSSIBLE_MATCH) return IMPOSSIBLE_MATCH;\r", "-\tint newLevel = this.matchLevelForType(this.returnSimpleName, this.returnQualification, method.returnType);\r", "-\tswitch (newLevel) {\r", "-\t\tcase IMPOSSIBLE_MATCH:\r", "-\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\tcase ACCURATE_MATCH: // keep previous level\r", "-\t\t\tbreak;\r", "-\t\tdefault: // ie. INACCURATE_MATCH\r", "-\t\t\tlevel = newLevel;\r", "-\t\t\tbreak;\r", "+\tif (resolve && binding != null) {\r", "+\t\tif (!this.matchesType(this.returnSimpleName, this.returnQualification, binding.returnType))\r", "+\t\t\treturn false;\r", "-\t\tif (method.parameters == null) {\r", "-\t\t\tlevel = INACCURATE_MATCH;\r", "-\t\t} else {\r", "-\t\t\tint parameterCount = method.parameters.length;\r", "-\t\t\tif (parameterCount != argumentCount) return IMPOSSIBLE_MATCH;\r", "+\t\tint parameterCount = messageSend.arguments == null ? 0 : messageSend.arguments.length;\r", "+\t\tif (parameterCount != argumentCount)\r", "+\t\t\treturn false;\r", "+\r", "+\t\tif (resolve && binding != null) {\r", "-\t\t\t\tnewLevel = this.matchLevelForType(type, qualification, method.parameters[i]);\r", "-\t\t\t\tswitch (newLevel) {\r", "-\t\t\t\t\tcase IMPOSSIBLE_MATCH:\r", "-\t\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t\t\tcase ACCURATE_MATCH: // keep previous level\r", "-\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\tdefault: // ie. INACCURATE_MATCH\r", "-\t\t\t\t\t\tlevel = newLevel;\r", "-\t\t\t\t\t\tbreak;\r", "-\t\t\t\t}\r", "+\t\t\t\tif (!this.matchesType(type, qualification, binding.parameters[i]))\r", "+\t\t\t\t\treturn false;\r", "-\treturn level;\r", "+\treturn true;\r", "+}\r"]}], "num": 8518}