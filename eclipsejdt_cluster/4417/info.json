{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eddc7be4a6328af6872fa186c194ccfd", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77d67d80300eb1b6d03e606ec7d1994b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "f2d453b40b80a7b4342f872cb4a2ceb30cb26035", "commitAfterChange": "ff67eddd91980875c818d1dd4c9e986c8fe296a7", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "signatureAfterChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "diff": ["-\t\t\tfindTypesAndPackages(this.completionToken, scope);", "+\t\t\tfindTypesAndPackages(this.completionToken, scope, new ObjectVector());", "-\t\t\tfindTypesAndPackages(this.completionToken, scope.parent);", "+\t\t\tfindTypesAndPackages(this.completionToken, scope.parent, new ObjectVector());", "-\t\t\t\tfindTypesAndPackages(this.completionToken, scope);", "+\t\t\t\tfindTypesAndPackages(this.completionToken, scope, new ObjectVector());", "-\t\t\t\tfindTypesAndPackages(this.completionToken, scope);", "+\t\t\t\tfindTypesAndPackages(this.completionToken, scope, new ObjectVector());", "-\t\t\t\t\tfindTypesAndPackages(this.completionToken, scope);", "+\t\t\t\t\tObjectVector typesFound = new ObjectVector();", "+\t\t\t\t\tif (this.assistNodeIsException && astNodeParent instanceof TryStatement) {", "+\t\t\t\t\t\tfindExceptionFromTryStatement(", "+\t\t\t\t\t\t\t\tthis.completionToken,", "+\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\tscope.enclosingSourceType(),", "+\t\t\t\t\t\t\t\t(BlockScope)scope,", "+\t\t\t\t\t\t\t\ttypesFound);", "+\t\t\t\t\t}", "+\t\t\t\t\tfindTypesAndPackages(this.completionToken, scope, typesFound);", "+\t\t\t\t\t", "+\t\t\t\t\tObjectVector typesFound = new ObjectVector();", "+\t\t\t\t\t", "+\t\t\t\t\tif (this.assistNodeIsException && astNodeParent instanceof TryStatement) {", "+\t\t\t\t\t\tfindExceptionFromTryStatement(", "+\t\t\t\t\t\t\t\tthis.completionToken,", "+\t\t\t\t\t\t\t\t(ReferenceBinding)qualifiedBinding,", "+\t\t\t\t\t\t\t\tscope.enclosingSourceType(),", "+\t\t\t\t\t\t\t\t(BlockScope)scope,", "+\t\t\t\t\t\t\t\ttypesFound);", "+\t\t\t\t\t}", "+\t\t\t\t\t", "-\t\t\t\t\t\tnew ObjectVector());", "+\t\t\t\t\t\ttypesFound);", "+\t\t\t\t", "+\t\t\t\tObjectVector typesFound = new ObjectVector();", "+\t\t\t\tif (this.assistNodeIsException && astNodeParent instanceof TryStatement) {", "+\t\t\t\t\tfindExceptionFromTryStatement(", "+\t\t\t\t\t\t\tthis.completionToken,", "+\t\t\t\t\t\t\t(ReferenceBinding)qualifiedBinding,", "+\t\t\t\t\t\t\tscope.enclosingSourceType(),", "+\t\t\t\t\t\t\t(BlockScope)scope,", "+\t\t\t\t\t\t\ttypesFound);", "+\t\t\t\t}", "+\t\t\t\t", "-\t\t\t\t\tnew ObjectVector());", "+\t\t\t\t\ttypesFound);", "-\t\t\t\tfindTypesAndPackages(this.completionToken, scope);", "+\t\t\t\tfindTypesAndPackages(this.completionToken, scope, new ObjectVector());", "-\t\t\t\t\t\tfindTypesAndPackages(this.completionToken, scope);", "+\t\t\t\t\t\tfindTypesAndPackages(this.completionToken, scope, new ObjectVector());", "-\t\t\t\t\t\tfindTypesAndPackages(this.completionToken, scope);", "+\t\t\t\t\t\tfindTypesAndPackages(this.completionToken, scope, new ObjectVector());", "-\t\t\t\tfindTypesAndPackages(this.completionToken, scope);", "+\t\t\t\tfindTypesAndPackages(this.completionToken, scope, new ObjectVector());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9472c7722f2d515a53db160a51c3c209", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "69322cef043ef54194e3a32f347e151e0e2870a4", "commitAfterChange": "7d0859ec775b8e65d22913e093fcc433c8eb0ab1", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "signatureAfterChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "diff": ["-\t\t\t\t\tfindParameterizedType((TypeReference)astNodeParent);", "+\t\t\t\t\tfindParameterizedType((TypeReference)astNodeParent, scope);", "-\t\t\t\tfindTypesAndSubpackages(this.completionToken, (PackageBinding) qualifiedBinding);", "+\t\t\t\tfindTypesAndSubpackages(this.completionToken, (PackageBinding) qualifiedBinding, scope);", "-\t\t\t\tfindTypesAndSubpackages(this.completionToken, (PackageBinding) qualifiedBinding);", "+\t\t\t\tfindTypesAndSubpackages(this.completionToken, (PackageBinding) qualifiedBinding, scope);", "-\t\t\t\t\tfindTypesAndSubpackages(this.completionToken, (PackageBinding) qualifiedBinding);", "+\t\t\t\t\tfindTypesAndSubpackages(this.completionToken, (PackageBinding) qualifiedBinding, scope);", "-\t\t\t\t\tfindAnnotationReference(annotation.type);", "+\t\t\t\t\tfindAnnotationReference(annotation.type, scope);", "-\t\t\t\t\tfindTypesAndSubpackages(this.completionToken, (PackageBinding) qualifiedBinding);", "+\t\t\t\t\tfindTypesAndSubpackages(this.completionToken, (PackageBinding) qualifiedBinding, scope);"]}], "num": 4417}