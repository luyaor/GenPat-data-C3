{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4cfe36bfa235579b2a7e82376cdc37c5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6590a63a44719cf267e3242d32de5488", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 123, "signatureBeforeChange": " \tpublic boolean visit(SingleVariableDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(SingleVariableDeclaration node)", "diff": ["-\t\t", "-\t\trewriteModifiers(node, SingleVariableDeclaration.MODIFIERS_PROPERTY, node.getStartPosition());", "+\t\tint pos= node.getStartPosition();", "+\t\tif (node.getAST().apiLevel() == AST.JLS2) {", "+\t\t\trewriteModifiers(node, SingleVariableDeclaration.MODIFIERS_PROPERTY, pos);", "+\t\t} else {", "+\t\t\trewriteModifiers2(node, SingleVariableDeclaration.MODIFIERS2_PROPERTY, pos);", "+\t\t}", "-\t\tint pos= rewriteRequiredNode(node, SingleVariableDeclaration.NAME_PROPERTY);", "+\t\tif (node.getAST().apiLevel() >= AST.JLS3) {", "+\t\t\tif (isChanged(node, SingleVariableDeclaration.VARARGS_PROPERTY)) {", "+\t\t\t\tAssert.isTrue(false, \"Modifications of property \" + SingleVariableDeclaration.VARARGS_PROPERTY + \" not supported yet\");  //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t}", "+\t\t}", "+\t\t", "+\t\tpos= rewriteRequiredNode(node, SingleVariableDeclaration.NAME_PROPERTY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "701709a1ced63097167ec0ba88903ed6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "a8c43fb1703bc9585d371b45c5bc751b66052e18", "commitAfterChange": "40ace06b6f9aaa2f71ebf049ffa37ed745fa6ef3", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 102, "signatureBeforeChange": " \tpublic boolean visit(IfStatement node)", "signatureAfterChange": " \tpublic boolean visit(IfStatement node)", "diff": ["-\t\t\t\t\tpos= rewriteBodyNode(node, IfStatement.THEN_STATEMENT_PROPERTY, pos, endPos, indent, fFormatter.IF_BLOCK_NO_ELSE); ", "+\t\t\t\t\tpos= rewriteBodyNode(node, IfStatement.THEN_STATEMENT_PROPERTY, pos, endPos, indent, this.formatter.IF_BLOCK_NO_ELSE); ", "-\t\t\t\t\tpos= rewriteBodyNode(node, IfStatement.THEN_STATEMENT_PROPERTY, pos, endPos, indent, fFormatter.IF_BLOCK_WITH_ELSE); ", "+\t\t\t\t\tpos= rewriteBodyNode(node, IfStatement.THEN_STATEMENT_PROPERTY, pos, endPos, indent, this.formatter.IF_BLOCK_WITH_ELSE); ", "-\t\t\t\trewriteBodyNode(node, IfStatement.ELSE_STATEMENT_PROPERTY, pos, -1, indent, fFormatter.ELSE_AFTER_BLOCK);", "+\t\t\t\trewriteBodyNode(node, IfStatement.ELSE_STATEMENT_PROPERTY, pos, -1, indent, this.formatter.ELSE_AFTER_BLOCK);", "-\t\t\t\trewriteBodyNode(node, IfStatement.ELSE_STATEMENT_PROPERTY, pos, -1, indent, fFormatter.ELSE_AFTER_STATEMENT);", "+\t\t\t\trewriteBodyNode(node, IfStatement.ELSE_STATEMENT_PROPERTY, pos, -1, indent, this.formatter.ELSE_AFTER_STATEMENT);"]}], "num": 11588}