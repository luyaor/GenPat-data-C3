{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "737a6091c71562c40d96b8e6e7e924ca", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccd14be3e833ca0f665e273ca88a6728", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "4dd777707c2803e1e51e44f3ccb37074b166c552", "commitAfterChange": "bb0062c9650742fadc1d35f4bf3fa1b174bd1969", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void match(Expression node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public void match(MessageSend node, MatchingNodeSet nodeSet)", "diff": ["-public void match(Expression node, MatchingNodeSet nodeSet) { // interested in MessageSend", "-\tif (!this.pattern.findReferences) return;", "-\tif (!(node instanceof MessageSend)) return;", "-", "-\tMessageSend messageSend = (MessageSend) node;", "-\tif (!matchesName(this.pattern.selector, messageSend.selector)) return;", "-\tif (this.pattern.parameterSimpleNames != null) {", "-\t\tint length = this.pattern.parameterSimpleNames.length;", "-\t\tAstNode[] args = messageSend.arguments;", "-\t\tint argsLength = args == null ? 0 : args.length;", "-\t\tif (length != argsLength) return;", "-\t}", "-", "-\tnodeSet.addMatch(node, this.pattern.mustResolve ? POTENTIAL_MATCH : ACCURATE_MATCH);", "-}", "+}", "+public void match(MessageSend node, MatchingNodeSet nodeSet) {", "+\tif (!this.pattern.findReferences) return;", "+", "+\tif (!matchesName(this.pattern.selector, node.selector)) return;", "+\tif (this.pattern.parameterSimpleNames != null) {", "+\t\tint length = this.pattern.parameterSimpleNames.length;", "+\t\tAstNode[] args = node.arguments;", "+\t\tint argsLength = args == null ? 0 : args.length;", "+\t\tif (length != argsLength) return;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec68037da6bede1c4a082981359800d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorLocator.java", "commitBeforeChange": "5e6cea593f4be5a13a34ce02970d8b34d029a673", "commitAfterChange": "0473b4fed0787a43089ff37104916db5b418eb5b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public int match(TypeDeclaration node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(FieldDeclaration field, MatchingNodeSet nodeSet)", "diff": ["+public int match(FieldDeclaration field, MatchingNodeSet nodeSet) {", "+\tif (!this.pattern.findReferences) return IMPOSSIBLE_MATCH;", "+\t// look only for enum constant", "+\tif (field.type != null || !(field.initialization instanceof AllocationExpression)) return IMPOSSIBLE_MATCH;", "+", "+\tAllocationExpression allocation = (AllocationExpression) field.initialization;", "+\tif (field.binding != null && field.binding.declaringClass != null) {", "+\t\tif (this.pattern.declaringSimpleName != null && !matchesName(this.pattern.declaringSimpleName, field.binding.declaringClass.sourceName()))", "+\t\t\treturn IMPOSSIBLE_MATCH;", "+\t}", "+", "+\tif (this.pattern.parameterSimpleNames != null) {", "+\t\tint length = this.pattern.parameterSimpleNames.length;", "+\t\tExpression[] args = allocation.arguments;", "+\t\tint argsLength = args == null ? 0 : args.length;", "+\t\tif (length != argsLength) return IMPOSSIBLE_MATCH;", "+\t}", "+", "+\treturn nodeSet.addMatch(field, ((InternalSearchPattern)this.pattern).mustResolve ? POSSIBLE_MATCH : ACCURATE_MATCH);", "+}"]}], "num": 28804}