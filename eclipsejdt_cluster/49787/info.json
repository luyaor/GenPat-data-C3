{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c97d2773c59e73ff74313e7bd1fdd5df", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40dff4ee6c2a060b56e55e9eb38248ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "6ce98b5ce9339887af5b930f74df93d6b74d481c", "commitAfterChange": "640820d78ee0410cf9fcb57eb9fe8c2d56063905", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private int adaptEdit(OptimizedReplaceEdit[] sortedEdits, int start, int regionStart, int regionEnd)", "signatureAfterChange": "     private int adaptEdit(OptimizedReplaceEdit[] sortedEdits, int start, int regionStart, int regionEnd)", "diff": ["-    \t\t\t\tint ch = edit.replacement.charAt(nrLength);", "-    \t\t\t\tloop: while (nrLength < rLength) {", "-\t    \t\t\t\tswitch (ch) {", "-\t    \t\t\t\t\tcase ' ':", "-\t    \t\t\t\t\tcase '\\t':", "-\t    \t\t\t\t\t\tnrLength++;", "-\t    \t\t\t\t\t\tbreak;", "-\t    \t\t\t\t\tdefault:", "-\t    \t\t\t\t\t\tbreak loop;", "+    \t\t\t\tif (nrLength < rLength) {", "+\t    \t\t\t\tint ch = edit.replacement.charAt(nrLength);", "+\t    \t\t\t\tloop: while (nrLength < rLength) {", "+\t\t    \t\t\t\tswitch (ch) {", "+\t\t    \t\t\t\t\tcase ' ':", "+\t\t    \t\t\t\t\tcase '\\t':", "+\t\t    \t\t\t\t\t\tnrLength++;", "+\t\t    \t\t\t\t\t\tbreak;", "+\t\t    \t\t\t\t\tdefault:", "+\t\t    \t\t\t\t\t\tbreak loop;", "+\t\t    \t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b14c37ca7f374c606fa41610d99d9f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "b87d35812b101296bb4ba9a7686e261bcb057a01", "commitAfterChange": "c42247da660bcfab8e817bd9dcc03bba195edcbf", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private int adaptEdit(OptimizedReplaceEdit[] sortedEdits, int start, int regionStart, int regionEnd)", "signatureAfterChange": "     private int adaptEdit(OptimizedReplaceEdit[] sortedEdits, int start, int regionStart, int regionEnd)", "diff": ["-\t\t\t\t\t    \t\twhile (idx < length) {", "+\t\t\t\t\t    \t\tloop: while (idx < length) {", "-\t\t\t\t\t    \t\t\tif (ch == '\\n') {", "-\t\t\t\t\t    \t\t\t\tlinesCount--;", "-\t\t\t\t\t    \t\t\t\tif (linesCount == 0) {", "-\t\t\t\t\t    \t\t\t\t\tidx++;", "+\t\t\t\t\t    \t\t\tswitch (ch) {", "+\t\t\t\t\t    \t\t\t\tcase '\\n':", "+\t\t\t\t\t\t    \t\t\t\tlinesCount--;", "+\t\t\t\t\t\t    \t\t\t\tif (linesCount == 0) {", "+\t\t\t\t\t\t    \t\t\t\t\tidx++;", "+\t\t\t\t\t\t    \t\t\t\t\tbreak loop;", "+\t\t\t\t\t\t    \t\t\t\t}", "+\t\t\t\t\t\t    \t\t\t\tbreak;", "+\t\t\t\t\t    \t\t\t\tcase '\\r':", "+\t\t\t\t\t    \t\t\t\tcase ' ':", "+\t\t\t\t\t    \t\t\t\tcase '\\t':", "-\t\t\t\t\t    \t\t\t\t}", "-\t\t\t\t\t    \t\t\t}", "-\t\t\t\t\t    \t\t\telse if (ch != '\\r') {", "-\t\t\t\t\t    \t\t\t\tbreak;", "+\t\t\t\t\t    \t\t\t\tdefault:", "+\t\t\t\t\t    \t\t\t\t\tbreak loop;"]}], "num": 49787}