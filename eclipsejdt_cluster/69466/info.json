{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dc16279decdd4fdff7f49eaef8e0748a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a3afe649cb4e8d5a5c41c64f6972ce1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/FieldBinding.java", "commitBeforeChange": "4abea618a97f7448bb60346688abfa260a9da222", "commitAfterChange": "a9ee87c83d7d756655063cf50477aa2c78c21e73", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public long getAnnotationTagBits()", "signatureAfterChange": " public long getAnnotationTagBits()", "diff": ["-\t\tif (fieldDecl != null)", "-\t\t\tASTNode.resolveAnnotations(isStatic() ? typeDecl.staticInitializerScope : typeDecl.initializerScope, fieldDecl.annotations, originalField);", "+\t\tif (fieldDecl != null) {", "+\t\t\tMethodScope initializationScope = isStatic() ? typeDecl.staticInitializerScope : typeDecl.initializerScope;", "+\t\t\tFieldBinding previousField = initializationScope.initializedField;", "+\t\t\tint previousFieldID = initializationScope.lastVisibleFieldID;\t\t\t", "+\t\t\ttry {", "+\t\t\t\tinitializationScope.initializedField = originalField;", "+\t\t\t\tinitializationScope.lastVisibleFieldID = originalField.id;", "+\t\t\t\tASTNode.resolveAnnotations(initializationScope, fieldDecl.annotations, originalField);", "+\t\t\t} finally {", "+\t\t\t\tinitializationScope.initializedField = previousField;", "+\t\t\t\tinitializationScope.lastVisibleFieldID = previousFieldID;", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac9f186c3cb08e94bef3b6563b6d1263", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SimpleName.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void setIdentifier(String identifier)", "signatureAfterChange": " \tpublic void setIdentifier(String identifier)", "diff": ["-\t\tchar[] source = identifier.toCharArray();", "-\t\tscanner.setSource(source);", "-\t\tfinal int length = source.length;", "-\t\tscanner.resetTo(0, length - 1);", "+\t\tlong sourceLevel = scanner.sourceLevel;", "+\t\tlong complianceLevel = scanner.complianceLevel;", "+", "-\t\t\tint tokenType = scanner.scanIdentifier();", "-\t\t\tif (tokenType != TerminalTokens.TokenNameIdentifier) {", "+\t\t\tscanner.sourceLevel = ClassFileConstants.JDK1_3;", "+\t\t\tscanner.complianceLevel = ClassFileConstants.JDK1_5;", "+\t\t\tchar[] source = identifier.toCharArray();", "+\t\t\tscanner.setSource(source);", "+\t\t\tfinal int length = source.length;", "+\t\t\tscanner.resetTo(0, length - 1);", "+\t\t\ttry {", "+\t\t\t\tint tokenType = scanner.scanIdentifier();", "+\t\t\t\tif (tokenType != TerminalTokens.TokenNameIdentifier) {", "+\t\t\t\t\tthrow new IllegalArgumentException();", "+\t\t\t\t}", "+\t\t\t\tif (scanner.currentPosition != length) {", "+\t\t\t\t\t// this is the case when there is only one identifier see 87849", "+\t\t\t\t\tthrow new IllegalArgumentException();", "+\t\t\t\t}", "+\t\t\t} catch(InvalidInputException e) {", "-\t\t\tif (scanner.currentPosition != length) {", "-\t\t\t\t// this is the case when there is only one identifier see 87849", "-\t\t\t\tthrow new IllegalArgumentException();", "-\t\t\t}", "-\t\t} catch(InvalidInputException e) {", "-\t\t\tthrow new IllegalArgumentException();", "+\t\t} finally {", "+\t\t\tthis.ast.scanner.sourceLevel = sourceLevel;", "+\t\t\tthis.ast.scanner.complianceLevel = complianceLevel;"]}], "num": 69466}