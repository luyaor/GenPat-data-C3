{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ee484d5a597c323af166f30f7792396a", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4419bab8b6027b9e9d1ef8d4d58387f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferencePattern.java", "commitBeforeChange": "7e5cc03e445550d3cbc10c611218c79332074276", "commitAfterChange": "c57706d05dc3654769cca2053ff9cb20fb0a6664", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r private int matchLevel(ImportReference importRef, boolean resolve)", "signatureAfterChange": "\r private boolean matches(ImportReference importRef, boolean resolve)", "diff": ["+ */\r", "+private boolean matches(ImportReference importRef, boolean resolve) {\r", "+\tif (importRef.onDemand) {\r", "+\t\treturn this.matches(importRef.tokens);\r", "+\t} else {\r", "+\t\tint length = importRef.tokens.length - 1;\r", "+\t\tchar[][] tokens = new char[length][];\r", "+\t\tSystem.arraycopy(importRef.tokens, 0, tokens, 0, length);\r", "+\t\treturn this.matches(tokens);\r", "+\t}\r", "+}\r", "- */\r", "-private int matchLevel(ImportReference importRef, boolean resolve) {\r", "-\tif (importRef.onDemand) {\r", "-\t\tif (this.matches(importRef.tokens)) {\r", "-\t\t\treturn ACCURATE_MATCH;\r", "-\t\t} else {\r", "-\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t}\r", "-\t} else {\r", "-\t\tint length = importRef.tokens.length - 1;\r", "-\t\tchar[][] tokens = new char[length][];\r", "-\t\tSystem.arraycopy(importRef.tokens, 0, tokens, 0, length);\r", "-\t\tif (this.matches(tokens)) {\r", "-\t\t\treturn ACCURATE_MATCH;\r", "-\t\t} else {\r", "-\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t}\r", "-\t}\r", "-}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84aa4204b9351cdd9a28ea786b0e8079", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferencePattern.java", "commitBeforeChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "commitAfterChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r private int matchLevel(ImportReference importRef, boolean resolve)", "signatureAfterChange": "\r private boolean matches(ImportReference importRef, boolean resolve)", "diff": ["+ */\r", "+private boolean matches(ImportReference importRef, boolean resolve) {\r", "+\tif (importRef.onDemand) {\r", "+\t\treturn this.matches(importRef.tokens);\r", "+\t} else {\r", "+\t\tint length = importRef.tokens.length - 1;\r", "+\t\tchar[][] tokens = new char[length][];\r", "+\t\tSystem.arraycopy(importRef.tokens, 0, tokens, 0, length);\r", "+\t\treturn this.matches(tokens);\r", "+\t}\r", "+}\r", "- */\r", "-private int matchLevel(ImportReference importRef, boolean resolve) {\r", "-\tif (importRef.onDemand) {\r", "-\t\tif (this.matches(importRef.tokens)) {\r", "-\t\t\treturn ACCURATE_MATCH;\r", "-\t\t} else {\r", "-\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t}\r", "-\t} else {\r", "-\t\tint length = importRef.tokens.length - 1;\r", "-\t\tchar[][] tokens = new char[length][];\r", "-\t\tSystem.arraycopy(importRef.tokens, 0, tokens, 0, length);\r", "-\t\tif (this.matches(tokens)) {\r", "-\t\t\treturn ACCURATE_MATCH;\r", "-\t\t} else {\r", "-\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t}\r", "-\t}\r", "-}\r"]}], "num": 41927}