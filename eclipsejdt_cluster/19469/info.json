{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "683ed1abfed306d43dfe41b5d5dfd864", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4309a0cdf6455f73b6754422215729dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "bb035342af3e77c43a12431c380fb2a6fe6ec67e", "commitAfterChange": "d9aabee2fc6180b2ed4f4131332dc5a46cc37a0d", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "  \tpublic Statement convert(org.eclipse.jdt.internal.compiler.ast.Statement statement)", "signatureAfterChange": "  \tpublic Statement convert(org.eclipse.jdt.internal.compiler.ast.Statement statement)", "diff": ["-\t\tif (statement instanceof Break) {", "-\t\t\treturn convert((Break) statement);", "+\t\tif (statement instanceof org.eclipse.jdt.internal.compiler.ast.BreakStatement) {", "+\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.BreakStatement) statement);", "-\t\tif (statement instanceof Continue) {", "-\t\t\treturn convert((Continue) statement);", "+\t\tif (statement instanceof org.eclipse.jdt.internal.compiler.ast.ContinueStatement) {", "+\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.ContinueStatement) statement);", "-\t\tif (statement instanceof Case) {", "-\t\t\treturn convert((Case) statement);", "+\t\tif (statement instanceof org.eclipse.jdt.internal.compiler.ast.CaseStatement) {", "+\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.CaseStatement) statement);", "-\t\tif (statement instanceof DefaultCase) {", "-\t\t\treturn convert((DefaultCase) statement);", "+\t\tif (statement instanceof org.eclipse.jdt.internal.compiler.ast.DefaultCaseStatement) {", "+\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.DefaultCaseStatement) statement);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c142956a5dcdb7b834274e093a49c7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 72, "signatureBeforeChange": " \t \tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.Reference reference)", "signatureAfterChange": " \t \tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.Reference reference)", "diff": ["-\t", "-\tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.Reference reference) {", "-\t\tif (reference instanceof org.eclipse.jdt.internal.compiler.ast.NameReference) {", "-\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.NameReference) reference);", "-\t\t}", "-\t\tif (reference instanceof org.eclipse.jdt.internal.compiler.ast.ThisReference) {", "-\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.ThisReference) reference);", "-\t\t}", "-\t\tif (reference instanceof org.eclipse.jdt.internal.compiler.ast.ArrayReference) {", "-\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.ArrayReference) reference);", "-\t\t}", "-\t\tif (reference instanceof org.eclipse.jdt.internal.compiler.ast.FieldReference) {", "-\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.FieldReference) reference);", "-\t\t}", "-\t\tthrow new IllegalArgumentException(\"Not yet implemented: convert(\" + reference.getClass() + \")\");//$NON-NLS-1$//$NON-NLS-2$", "-\t}", "+\t", "+\tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.Reference reference) {", "+\t\tif (reference instanceof org.eclipse.jdt.internal.compiler.ast.NameReference) {", "+\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.NameReference) reference);", "+\t\t}", "+\t\tif (reference instanceof org.eclipse.jdt.internal.compiler.ast.ThisReference) {", "+\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.ThisReference) reference);", "+\t\t}", "+\t\tif (reference instanceof org.eclipse.jdt.internal.compiler.ast.ArrayReference) {", "+\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.ArrayReference) reference);", "+\t\t}", "+\t\tif (reference instanceof org.eclipse.jdt.internal.compiler.ast.FieldReference) {", "+\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.FieldReference) reference);", "+\t\t}", "+\t\treturn null; // cannot be reached", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcd0c7fdbfbb94eaab01f4f7f08a348f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 61, "signatureBeforeChange": " \t\t\t\t\t\t \tpublic Name convert(org.eclipse.jdt.internal.compiler.ast.NameReference reference)", "signatureAfterChange": "  \tpublic Name convert(org.eclipse.jdt.internal.compiler.ast.NameReference reference)", "diff": ["-\t\t\t\t\t\t", "-\tpublic Name convert(org.eclipse.jdt.internal.compiler.ast.NameReference reference) {", "-\t\tif (reference instanceof org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference) {", "-\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference) reference);", "-\t\t}", "-\t\tif (reference instanceof org.eclipse.jdt.internal.compiler.ast.SingleNameReference) {", "-\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.SingleNameReference) reference);", "-\t\t}", "-\t\tthrow new IllegalArgumentException(\"Not yet implemented: convert(\" + reference.getClass() + \")\");//$NON-NLS-1$//$NON-NLS-2$", "-\t}\t", "+", "+\tpublic Name convert(org.eclipse.jdt.internal.compiler.ast.NameReference reference) {", "+\t\tif (reference instanceof org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference) {", "+\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference) reference);", "+\t\t} else {", "+\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.SingleNameReference) reference);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecd704c2fd635643f54dc41a07c2cdb1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \t \tpublic Expression convert(Reference reference)", "signatureAfterChange": " \t \tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.Reference reference)", "diff": ["-\tpublic Expression convert(Reference reference) {", "-\t\tif (reference instanceof NameReference) {", "-\t\t\treturn convert((NameReference) reference);", "+\tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.Reference reference) {", "+\t\tif (reference instanceof org.eclipse.jdt.internal.compiler.ast.NameReference) {", "+\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.NameReference) reference);", "-\t\tif (reference instanceof ThisReference) {", "-\t\t\treturn convert((ThisReference) reference);", "+\t\tif (reference instanceof org.eclipse.jdt.internal.compiler.ast.ThisReference) {", "+\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.ThisReference) reference);", "-\t\tif (reference instanceof ArrayReference) {", "-\t\t\treturn convert((ArrayReference) reference);", "+\t\tif (reference instanceof org.eclipse.jdt.internal.compiler.ast.ArrayReference) {", "+\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.ArrayReference) reference);", "-\t\tif (reference instanceof FieldReference) {", "-\t\t\treturn convert((FieldReference) reference);", "+\t\tif (reference instanceof org.eclipse.jdt.internal.compiler.ast.FieldReference) {", "+\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.FieldReference) reference);"]}], "num": 19469}