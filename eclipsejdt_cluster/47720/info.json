{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e6fe0e6a45c980e213b51f3787a43ebf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16a34f12c5d1a639f4d98762853bb0d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "15119daf817db1018e77a6fda243b1a0915bea1f", "commitAfterChange": "46f57536ed8e2bfbe5a9484e153647c7c5b9cb5d", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tprivate void acceptTypes()", "signatureAfterChange": " \t \tprivate void acceptTypes()", "diff": ["-\t\t\t\tchar[] completionName = CharOperation.concat(fullyQualifiedName, new char[] { ';' });", "+\t\t\t\tchar[] completionName;", "+\t\t\t\t", "+\t\t\t\tif(this.resolvingStaticImports) {", "+\t\t\t\t\tif(enclosingTypeNames == null || enclosingTypeNames.length == 0) {", "+\t\t\t\t\t\tcompletionName = CharOperation.concat(fullyQualifiedName, new char[] { '.' });", "+\t\t\t\t\t} else if ((modifiers & IConstants.AccStatic) == 0) {", "+\t\t\t\t\t\tcontinue next;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tcompletionName = CharOperation.concat(fullyQualifiedName, new char[] { ';' });", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\tcompletionName = CharOperation.concat(fullyQualifiedName, new char[] { ';' });", "+\t\t\t\t}", "-\t\t\t\trelevance += computeRelevanceForCaseMatching(this.completionToken, fullyQualifiedName);", "+\t\t\t\tif(insideQualifiedReference) {", "+\t\t\t\t\trelevance += computeRelevanceForCaseMatching(this.completionToken, fullyQualifiedName);", "+\t\t\t\t} else {", "+\t\t\t\t\trelevance += computeRelevanceForCaseMatching(this.completionToken, simpleTypeName);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b33291aaf359a79bc8261dc77dc24cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "eda0d2ebba486b7670a29ef73a4bc1f60b2dd48f", "commitAfterChange": "334d154ee7a7468d74205b6124c3abdc73bd30b6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic String toString()", "signatureAfterChange": "  \tpublic String toString()", "diff": ["+\t\tif ((errorThreshold & ToDo) != 0){", "+\t\t\tbuf.append(\"\\n-TODO task: ERROR\"); //$NON-NLS-1$", "+\t\t} else {", "+\t\t\tif ((warningThreshold & ToDo) != 0){", "+\t\t\t\tbuf.append(\"\\n-TODO task: WARNING\"); //$NON-NLS-1$", "+\t\t\t} else {", "+\t\t\t\tbuf.append(\"\\n-TODO task: IGNORE\"); //$NON-NLS-1$", "+\t\t\t}", "+\t\t}", "+\t\tbuf.append(\"\\n-TODO tag : \" + (this.toDoTag == null ? \"<null>\" : new String(this.toDoTag))); //$NON-NLS-1$", "+\t\tbuf.append(\"\\n-report deprecation inside deprecated code : \" + (reportDeprecationInsideDeprecatedCode ? \"ENABLED\" : \"DISABLED\")); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ace9157f5a1f3219a844eb8a5923259d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "b18b012adcc471e2280a6e20faa4d2a33f1db69a", "commitAfterChange": "5bb01926d23a6cf003d0d521691c391ac08b77a7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate final void decodeModifiersForMethod(StringBuffer buffer, int accessFlags)", "signatureAfterChange": "  \tprivate final void decodeModifiersForMethod(StringBuffer buffer, int accessFlags)", "diff": ["+\t\tif ((accessFlags & IModifierConstants.ACC_BRIDGE) != 0) {", "+\t\t\tif (!firstModifier) {", "+\t\t\t\tbuffer.append(Util.bind(\"disassembler.space\")); //$NON-NLS-1$", "+\t\t\t}", "+\t\t\tif (firstModifier) {", "+\t\t\t\tfirstModifier = false;", "+\t\t\t}", "+\t\t\tbuffer.append(\"bridge\"); //$NON-NLS-1$", "+\t\t}\t\t", "+\t\tif ((accessFlags & IModifierConstants.ACC_VARARGS) != 0) {", "+\t\t\tif (!firstModifier) {", "+\t\t\t\tbuffer.append(Util.bind(\"disassembler.space\")); //$NON-NLS-1$", "+\t\t\t}", "+\t\t\tif (firstModifier) {", "+\t\t\t\tfirstModifier = false;", "+\t\t\t}", "+\t\t\tbuffer.append(\"varargs\"); //$NON-NLS-1$", "+\t\t}"]}], "num": 47720}