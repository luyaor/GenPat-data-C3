{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "78d402eaccf7b652ce72d27286df3657", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47820402b48f12c2b68f43d115985127", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 309, "methodNumberAfterChange": 309, "signatureBeforeChange": " public void test297()", "signatureAfterChange": " public void test297()", "diff": ["+\t", "+\tString expectedErrors = ", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in A.java (at line 15)\\n\" + ", "+\t\t\"\treturn i == i;\\n\" + ", "+\t\t\"\t       ^^^^^^\\n\" + ", "+\t\t\"Comparing identical expressions\\n\" + ", "+\t\t\"----------\\n\";", "+", "+\tif (this.complianceLevel >= ClassFileConstants.JDK1_7) {", "+\t\texpectedErrors =", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in A.java (at line 10)\\n\" + ", "+\t\t\t\"\tpublic final Object build(Class<? super Object>... objects) {\\n\" + ", "+\t\t\t\"\t                                                   ^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Potential heap pollution via varargs parameter objects\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in A.java (at line 15)\\n\" + ", "+\t\t\t\"\treturn i == i;\\n\" + ", "+\t\t\t\"\t       ^^^^^^\\n\" + ", "+\t\t\t\"Comparing identical expressions\\n\" + ", "+\t\t\t\"----------\\n\";", "+\t}", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in A.java (at line 15)\\n\" + ", "-\t\t\t\"\treturn i == i;\\n\" + ", "-\t\t\t\"\t       ^^^^^^\\n\" + ", "-\t\t\t\"Comparing identical expressions\\n\" + ", "-\t\t\t\"----------\\n\",", "+\t\t\texpectedErrors,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b056501b0f826cf07c33d0477bd432c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "f200f8d976d56839e6f0d721d690d85cc3afbb03", "commitAfterChange": "0b27e1fc307c28641d0d95f2d81ae5062cecb103", "methodNumberBeforeChange": 1159, "methodNumberAfterChange": 1159, "signatureBeforeChange": " public void test1129()", "signatureAfterChange": " public void test1129()", "diff": ["+\t\tthis.complianceLevel < ClassFileConstants.JDK1_8 ?", "-\t\t\"----------\\n\");", "+\t\t\"----------\\n\" :", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 18)\\n\" + ", "+\t\t\t\"\tString s = b ? arg1 : arg2;\\n\" + ", "+\t\t\t\"\t               ^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from IX<String> to String\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 18)\\n\" + ", "+\t\t\t\"\tString s = b ? arg1 : arg2;\\n\" + ", "+\t\t\t\"\t                      ^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from IX<capture#1-of ? extends Object> to String\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 21)\\n\" + ", "+\t\t\t\"\tString s = b ? arg1 : arg2;\\n\" + ", "+\t\t\t\"\t               ^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from Arg1 to String\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 21)\\n\" + ", "+\t\t\t\"\tString s = b ? arg1 : arg2;\\n\" + ", "+\t\t\t\"\t                      ^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from Arg2 to String\\n\" + ", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d841cd8931f413b3751e317276253189", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "3307a3b21f8472cc998512e9e4cd5afdd4f17b52", "commitAfterChange": "b155f47580a90f694a899aae6d06a1ff29f450b8", "methodNumberBeforeChange": 823, "methodNumberAfterChange": 823, "signatureBeforeChange": " public void test0803()", "signatureAfterChange": " public void test0803()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 13)\\n\" +", "-\t\t\"\treturn true ? superList : superList;\\n\" +", "-\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Type mismatch: cannot convert from ArrayList<capture#3-of ? extends Object> to ArrayList<? super A>\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\"\treturn true ? list : list;\\n\" + ", "+\t\t\"\t                     ^^^^\\n\" + ", "+\t\t\"Dead code\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 13)\\n\" + ", "+\t\t\"\treturn true ? superList : superList;\\n\" + ", "+\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type mismatch: cannot convert from ArrayList<capture#3-of ? extends Object> to ArrayList<? super A>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. WARNING in X.java (at line 17)\\n\" + ", "+\t\t\"\treturn true ? extendsList : extendsList;\\n\" + ", "+\t\t\"\t                            ^^^^^^^^^^^\\n\" + ", "+\t\t\"Dead code\\n\" + "]}], "num": 25049}