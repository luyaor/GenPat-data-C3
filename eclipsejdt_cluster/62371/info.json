{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "985ef213e4f353033dec0bc314160ecd", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "072ff37f67754b3b2cd5e8d1f660b3d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "86397dfc80023f615cc88c0705b2ada916e6efb2", "commitAfterChange": "24624a25f60573230ed7652730faedca15fd4d8b", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 120, "signatureBeforeChange": " \tpublic ICompilationUnit getWorkingCopy(String path, String source, WorkingCopyOwner owner, IProblemRequestor problemRequestor) throws JavaModelException", "signatureAfterChange": " \tpublic ICompilationUnit getWorkingCopy(String path, String source, WorkingCopyOwner owner, IProblemRequestor problemRequestor) throws JavaModelException", "diff": ["-\t\tICompilationUnit workingCopy = getCompilationUnit(path).getWorkingCopy(owner, problemRequestor, null/*no progress monitor*/);", "+\t\tICompilationUnit workingCopy = getCompilationUnit(path);", "+\t\tif (owner != null)", "+\t\t\tworkingCopy = workingCopy.getWorkingCopy(owner, problemRequestor, null/*no progress monitor*/);", "+\t\telse", "+\t\t\tworkingCopy.becomeWorkingCopy(problemRequestor, null/*no progress monitor*/);", "+\t\tif (problemRequestor instanceof ProblemRequestor)", "+\t\t\t((ProblemRequestor) problemRequestor).initialize(source.toCharArray());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "223a9661ec1d7137e07a8b7b97210462", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/StringOperation.java", "commitBeforeChange": "62acea3260f4f00bef914855d231d5ca0b875fd6", "commitAfterChange": "a68053c2948ee889fd2391b7d830587638604892", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public static final int[] getCamelCaseMatchingRegions(String pattern, int patternStart, int patternEnd, String name, int nameStart, int nameEnd, boolean samePartCount)", "signatureAfterChange": " public static final int[] getCamelCaseMatchingRegions(String pattern, int patternStart, int patternEnd, String name, int nameStart, int nameEnd, boolean samePartCount)", "diff": ["-\t\tif ((ScannerHelper.OBVIOUS_IDENT_CHAR_NATURES[pattern.charAt(i)] & (ScannerHelper.C_UPPER_LETTER | ScannerHelper.C_DIGIT)) != 0) {", "+\t\tfinal char ch = pattern.charAt(i);", "+\t\tif (ch < ScannerHelper.MAX_OBVIOUS) {", "+\t\t\tif ((ScannerHelper.OBVIOUS_IDENT_CHAR_NATURES[ch] & (ScannerHelper.C_UPPER_LETTER | ScannerHelper.C_DIGIT)) != 0) {", "+\t\t\t\tparts++;", "+\t\t\t}", "+\t\t} else if (Character.isJavaIdentifierPart(ch) && (Character.isUpperCase(ch) || Character.isDigit(ch))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "512b0a6ece456c16053de36f8627ce02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/GetSourceTests.java", "commitBeforeChange": "23d1f03b5721ce2de9c0b6bda12e344c2ac468ba", "commitAfterChange": "966ae4bbaf97367f3fc38a9b2c2261f477021842", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tprivate String getNameSource(String cuSource, IMember member) throws JavaModelException", "signatureAfterChange": " \t \tprivate String getNameSource(String cuSource, IJavaElement element) throws JavaModelException", "diff": ["-\tprivate String getNameSource(String cuSource, IMember member) throws JavaModelException {", "-\t\tISourceRange nameRange = member.getNameRange();", "+\tprivate String getNameSource(String cuSource, IJavaElement element) throws JavaModelException {", "+\t\tISourceRange nameRange = element instanceof ITypeParameter ? ((ITypeParameter) element).getNameRange() : ((IMember) element).getNameRange();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6581886ad9fb0d7b45a4883cfc4ae9cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "6bbe71e24e5d5d76445f30e5351f63286e328fac", "commitAfterChange": "ea585ca8104de943bd71824eec2c8a9d4d408df2", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \tprivate void disassemble(IMethodParametersAttribute methodParametersAttribute, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "signatureAfterChange": "  \tprivate void disassemble(IMethodParametersAttribute methodParametersAttribute, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "diff": ["-\t\t\tbuffer.append(methodParametersAttribute.getParameterName(i));", "+\t\t\tchar [] parameterName = methodParametersAttribute.getParameterName(i);", "+\t\t\tif (parameterName == null)", "+\t\t\t\tparameterName = CharOperation.concat(Messages.disassembler_parametername.toCharArray(), Integer.toString(i).toCharArray());", "+\t\t\tbuffer.append(parameterName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65d28da3742ded6b820c044764b8610b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ModifyingResourceTests.java", "commitBeforeChange": "a805526500142ec1d4ab7fec59769960c805a864", "commitAfterChange": "102fb5f6c13760d0dae83fafd896ad3d9c94006d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " protected IPackageFragment getPackage(String path)", "signatureAfterChange": " protected IPackageFragment getPackage(String path)", "diff": ["-\tif (path.indexOf('/') != -1) {", "-\t\treturn (IPackageFragment)JavaCore.create(this.getFolder(path));", "+\tif (path.indexOf('/', 1) != -1) { // if path as more than one segment", "+\t\tIJavaElement element = JavaCore.create(this.getFolder(path));", "+\t\tif (element instanceof IPackageFragmentRoot) {", "+\t\t\treturn ((IPackageFragmentRoot)element).getPackageFragment(\"\");", "+\t\t} else {", "+\t\t\treturn (IPackageFragment)element;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5906d9c72db827b1d95d4bfa663078f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "f1d83e37dc72ba6d2676594fd1c64161817b3d74", "commitAfterChange": "50c8fc7c21507137e2b63d15c742a120cb954eef", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public synchronized void resetAll()", "signatureAfterChange": "     public synchronized void resetAll()", "diff": ["+    \t// Need to close the iterative classloaders", "+    \tfor (ClassLoader cl : _project2IterativeClassloaders.values()) {", "+    \t\tif (cl instanceof JarClassLoader) {", "+    \t\t\t((JarClassLoader)cl).close();", "+    \t\t}", "+    \t}", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a93326e15742a8372400d7e5e33528e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "5c2fa534b3da997c68c8a8428fa68767a0e6e936", "commitAfterChange": "1e17c9b14d7583b5c8ac33824ed705b25b4cdcaa", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public char[] computeConstantPoolName(LocalTypeBinding localType)", "signatureAfterChange": " public char[] computeConstantPoolName(LocalTypeBinding localType)", "diff": ["+\t\t\tif (isCompliant15) {", "+\t\t\t\t// from 1.5 on, use immediately enclosing type name", "+\t\t\t\tcandidateName = CharOperation.concat(", "+\t\t\t\t\tlocalType.enclosingType.constantPoolName(),", "+\t\t\t\t\tString.valueOf(index+1).toCharArray(),", "+\t\t\t\t\t'$');", "+\t\t\t} else {", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efb966e736d12c40ad0bd7337aa04d78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "a9567e58ade978b67e4f2db4ee5fe35bc3c0d3fe", "commitAfterChange": "0b6f06d77f121375ae3494c8c329aad2cfc0a1a4", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 120, "signatureBeforeChange": " protected void setPaths(ArrayList bootclasspaths, \t\tString sourcepathClasspathArg, \t\tArrayList sourcepathClasspaths, \t\tArrayList classpaths, \t\tArrayList extdirsClasspaths, \t\tArrayList endorsedDirClasspaths, \t\tString customEncoding)", "signatureAfterChange": " protected void setPaths(ArrayList bootclasspaths, \t\tString sourcepathClasspathArg, \t\tArrayList sourcepathClasspaths, \t\tArrayList classpaths, \t\tArrayList extdirsClasspaths, \t\tArrayList endorsedDirClasspaths, \t\tString customEncoding)", "diff": ["+", "+\tif (this.annotationPath != null) {", "+\t\tfor (FileSystem.Classpath cp : this.checkedClasspaths) {", "+\t\t\tif (cp instanceof ClasspathJar)", "+\t\t\t\t((ClasspathJar) cp).annotationPath = this.annotationPath;", "+\t\t}", "+\t}"]}], "num": 62371}