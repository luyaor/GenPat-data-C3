{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3e2b04bf1380febdde0484bee3fa4297", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09f7a8a6d631331a26aa9745f288b36c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "5fbb7a295fe51a8ea6177a5aeab11cf819ed3177", "commitAfterChange": "cb36eca9d9b9093df77fd23643572b1315c79e4d", "methodNumberBeforeChange": 1478, "methodNumberAfterChange": 1478, "signatureBeforeChange": " public void test1447()", "signatureAfterChange": " public void test1447()", "diff": ["+//https://bugs.eclipse.org/bugs/show_bug.cgi?id=263633", "+    this.runConformTest(", "+            new String[] {", "+                    \"X.java\",", "+        \t\t\t\"public abstract class X implements Visitable {\\n\" + ", "+        \t\t\t\"\tpublic <T, U extends Visitor<T>> T accept(U v) {\\n\" + ", "+        \t\t\t\"\t\treturn null;\\n\" + ", "+        \t\t\t\"\t}\\n\" + ", "+        \t\t\t\"\tpublic <T, U extends Visitor<T>> T accept2(U v) {\\n\" + ", "+        \t\t\t\"\t\tif (v == null)\\n\" + ", "+        \t\t\t\"\t\t\treturn this.accept(v);\\n\" + ", "+        \t\t\t\"\t\telse \\n\" + ", "+        \t\t\t\"\t\t\treturn this.<T, U> accept(v);\\n\" + ", "+        \t\t\t\"\t}\\n\" + ", "+        \t\t\t\"}\\n\" + ", "+        \t\t\t\"interface Visitable {\\n\" + ", "+        \t\t\t\"\t<T, U extends Visitor<T>> T accept(U v);\\n\" + ", "+        \t\t\t\"}\\n\" + ", "+        \t\t\t\"interface Visitor<T> {\\n\" + ", "+        \t\t\t\"}\\n\",", "+       \t\t},", "+            \"\"", "+    );", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a86ee686e43ccd3fee87ffba68a7d45", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/comment/JavaDocTestCase.java", "commitBeforeChange": "d82ae848a9c4d7b35f614d484418e3b413534446", "commitAfterChange": "c4725a925ff03cde3fc0735f1b7bd65f4e96815b", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " \tpublic void test109605()", "signatureAfterChange": " \tpublic void test109605()", "diff": ["-\t\t\t\t(DefaultCodeFormatter.ENABLE_NEW_COMMENTS_FORMAT ? \" * \" +  DELIMITER : \"\") +", "+\t\t\t\t\" * \" +  DELIMITER +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67a932d8a86cb370e2780fba4aaf2b0f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "cdc11c6e72240b1766f8f5810b1fb669da307c66", "commitAfterChange": "b4bd621d9d0ae940b676be9ef06c098999d70b35", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \t\t public void _test027()", "signatureAfterChange": " \t\t public void test027()", "diff": ["-public void _test027(){", "-\t\t\tthis.runNegativeTest(", "-\t\t\t\tnew String[] {", "-\t\t\t\t\t\"X.java\",", "-\t\t\t\t\t\"/** */\\n\" + ", "-\t\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\t\"\tOK1 ok1;\\n\" + ", "-\t\t\t\t\t\"\tOK2 ok2;\\n\" + ", "-\t\t\t\t\t\"\tWarn warn;\\n\" + ", "-\t\t\t\t\t\"\tKO ko;\\n\" + ", "-\t\t\t        \"\tZork z;\\n\" + ", "-\t\t\t\t\t\"}\",", "-\t\t\t\t\t\"OK1.java\",", "-\t\t\t\t\t\"/** */\\n\" + ", "-\t\t\t\t\t\"public class OK1 {\\n\" + ", "-\t\t\t\t\t\"\t// empty\\n\" + ", "-\t\t\t\t\t\"}\",", "-\t\t\t\t\t\"OK2.java\",", "-\t\t\t\t\t\"/** */\\n\" + ", "-\t\t\t\t\t\"public class OK2 {\\n\" + ", "-\t\t\t\t\t\"\t// empty\\n\" + ", "-\t\t\t\t\t\"}\",", "-\t\t\t\t\t\"p1/Warn.java\",", "-\t\t\t\t\t\"/** */\\n\" + ", "-\t\t\t\t\t\"public class Warn {\\n\" + ", "-\t\t\t\t\t\"\t// empty\\n\" + ", "-\t\t\t\t\t\"}\",", "-\t\t\t\t\t\"KO.java\",", "-\t\t\t\t\t\"/** */\\n\" + ", "-\t\t\t\t\t\"public class KO {\\n\" + ", "-\t\t\t\t\t\"\t// empty\\n\" + ", "-\t\t\t\t\t\"}\",", "-\t\t\t\t},", "-\t\t        \"\\\"\" + OUTPUT_DIR +  File.separator + \"X.java\\\"\"", "-\t\t        + \" -1.5 -g -preserveAllLocals\"", "-\t\t        + \" -cp \\\"\" + OUTPUT_DIR + \"[+OK2\" + File.pathSeparator + \"-KO]\" + File.pathSeparator", "-\t\t        + OUTPUT_DIR + File.separator + \"p1[~Warn]\\\"\"", "-\t\t        + \" -verbose -warn:+deprecation,syntheticAccess,uselessTypeCheck,unsafe,finalBound,unusedLocal\"", "-\t\t        + \" -proceedOnError -referenceInfo -d \\\"\" + OUTPUT_DIR + \"\\\"\",", "-\t\t        \"[5 .class files generated]\\n\", ", "-\t\t        \"----------\\n\" + ", "-\t\t        \"1. WARNING in ---OUTPUT_DIR_PLACEHOLDER---\" + File.separator + \"X.java\\n\" + ", "-\t\t        \" (at line 5)\\n\" + ", "-\t\t        \"\tWarn warn;\\n\" + ", "-\t\t        \"\t^^^^\\n\" + ", "-\t\t        \"Discouraged access: Warn\\n\" + ", "-\t\t        \"----------\\n\" + ", "-\t\t        \"----------\\n\" + ", "-\t\t        \"2. WARNING in ---OUTPUT_DIR_PLACEHOLDER---\" + File.separator + \"X.java\\n\" + ", "-\t\t        \" (at line 6)\\n\" + ", "-\t\t        \"\tKO ko;\\n\" + ", "-\t\t        \"\t^^\\n\" + ", "-\t\t        \"Access restriction: KO\\n\" + ", "-\t\t        \"----------\\n\" + ", "-\t\t        \"----------\\n\" + ", "-\t\t        \"3. ERROR in ---OUTPUT_DIR_PLACEHOLDER---\" + File.separator + \"X.java\\n\" + ", "-\t\t        \" (at line 7)\\n\" + ", "-\t\t        \"\tZork z;\\n\" + ", "-\t\t        \"\t^^^^\\n\" + ", "-\t\t        \"Zork cannot be resolved to a type\\n\" + ", "-\t\t        \"----------\\n\" + ", "-\t\t        \"3 problems (1 error, 2 warnings)\",", "-\t\t        true);", "-\t\t}", "+public void test027(){", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"/** */\\n\" + ", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"\tOK1 ok1;\\n\" + ", "+\t\t\t\"\tOK2 ok2;\\n\" + ", "+\t\t\t\"\tWarn warn;\\n\" + ", "+\t\t\t\"\tKO ko;\\n\" + ", "+\t        \"\tZork z;\\n\" + ", "+\t\t\t\"}\",", "+\t\t\t\"OK1.java\",", "+\t\t\t\"/** */\\n\" + ", "+\t\t\t\"public class OK1 {\\n\" + ", "+\t\t\t\"\t// empty\\n\" + ", "+\t\t\t\"}\",", "+\t\t\t\"OK2.java\",", "+\t\t\t\"/** */\\n\" + ", "+\t\t\t\"public class OK2 {\\n\" + ", "+\t\t\t\"\t// empty\\n\" + ", "+\t\t\t\"}\",", "+\t\t\t\"p1/Warn.java\",", "+\t\t\t\"/** */\\n\" + ", "+\t\t\t\"public class Warn {\\n\" + ", "+\t\t\t\"\t// empty\\n\" + ", "+\t\t\t\"}\",", "+\t\t\t\"KO.java\",", "+\t\t\t\"/** */\\n\" + ", "+\t\t\t\"public class KO {\\n\" + ", "+\t\t\t\"\t// empty\\n\" + ", "+\t\t\t\"}\",", "+\t\t},", "+        \"\\\"\" + OUTPUT_DIR +  File.separator + \"X.java\\\"\"", "+        + \" -1.5 -g -preserveAllLocals\"", "+        + \" -cp \\\"\" + OUTPUT_DIR + \"[+OK2\" + File.pathSeparator + \"-KO]\" + File.pathSeparator", "+        + OUTPUT_DIR + File.separator + \"p1[~Warn]\\\"\"", "+        + \" -verbose -warn:+deprecation,syntheticAccess,uselessTypeCheck,unsafe,finalBound,unusedLocal\"", "+        + \" -proceedOnError -referenceInfo -d \\\"\" + OUTPUT_DIR + \"\\\"\",", "+        \"[5 .class files generated]\\n\", ", "+        \"----------\\n\" + ", "+        \"1. WARNING in ---OUTPUT_DIR_PLACEHOLDER---\" + File.separator + \"X.java\\n\" + ", "+        \" (at line 5)\\n\" + ", "+        \"\tWarn warn;\\n\" + ", "+        \"\t^^^^\\n\" + ", "+        \"Discouraged access: Warn\\n\" + ", "+        \"----------\\n\" + ", "+        \"2. WARNING in ---OUTPUT_DIR_PLACEHOLDER---\" + File.separator + \"X.java\\n\" + ", "+        \" (at line 6)\\n\" + ", "+        \"\tKO ko;\\n\" + ", "+        \"\t^^\\n\" + ", "+        \"Access restriction: KO\\n\" + ", "+        \"----------\\n\" + ", "+        \"3. ERROR in ---OUTPUT_DIR_PLACEHOLDER---\" + File.separator + \"X.java\\n\" + ", "+        \" (at line 7)\\n\" + ", "+        \"\tZork z;\\n\" + ", "+        \"\t^^^^\\n\" + ", "+        \"Zork cannot be resolved to a type\\n\" + ", "+        \"----------\\n\" + ", "+        \"3 problems (1 error, 2 warnings)\",", "+        true);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7446a340a241e8185354f7b21db4ff0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeTypeAnnotationTest.java", "commitBeforeChange": "a209f427039b5b4db27a67f609cb706801ba28e5", "commitAfterChange": "712689471fd4116d08552bca059239228ce897f6", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "\r \tpublic void test036() throws Exception", "signatureAfterChange": "\r \tpublic void test036() throws Exception", "diff": ["-\t\t\"1. WARNING in X.java (at line 3)\\n\" + \r", "+\t\t\"1. ERROR in X.java (at line 3)\\n\" + \r", "-\t\t\"2. WARNING in X.java (at line 3)\\n\" + \r", "+\t\t\"2. ERROR in X.java (at line 3)\\n\" + \r", "-\t\t\"3. WARNING in X.java (at line 3)\\n\" + \r", "+\t\t\"3. ERROR in X.java (at line 3)\\n\" + \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e35623d490bb955352845caf3e455bdf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/DietRecoveryTest.java", "commitBeforeChange": "82743b33822fbb1e8747641a56800f2dd66cbc54", "commitAfterChange": "ab734870d680bdde73d51371df0336cce36fb2b0", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "  public void test62()", "signatureAfterChange": "  public void test62()", "diff": ["-\t\t\"      ;;\\n\" + "]}], "num": 15172}