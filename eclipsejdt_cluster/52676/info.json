{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "714f1c948d2f071582145df4042d76c0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2070a02cdbf92e0d911bcac7b7f883b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompilationUnitTests.java", "commitBeforeChange": "fa78e4ce6e57928678189feff94d4c736b9ff2c4", "commitAfterChange": "0f248db43070dcf1bc4390d09f1d6625c113fc80", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 5, "signatureBeforeChange": "  private ICompilationUnit workingCopy(String source) throws JavaModelException", "signatureAfterChange": "  private ICompilationUnit createWorkingCopy(String source) throws JavaModelException", "diff": ["+", "+private ICompilationUnit createWorkingCopy(String source) throws JavaModelException {", "+\tthis.workingCopy = getCompilationUnit(\"/P/src/p/Y.java\").getWorkingCopy(new WorkingCopyOwner(){}, null, null);", "+\tthis.workingCopy.getBuffer().setContents(source);", "+\tthis.workingCopy.makeConsistent(null);", "+\treturn workingCopy;", "-", "-private ICompilationUnit workingCopy(String source) throws JavaModelException {", "-\tICompilationUnit workingCopy = getCompilationUnit(\"/P/src/p/Y.java\").getWorkingCopy(new WorkingCopyOwner(){}, null, null);", "-\tworkingCopy.getBuffer().setContents(source);", "-\tworkingCopy.makeConsistent(null);", "-\treturn workingCopy;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0688236a94d666118f74367e15b15ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "844b891620178c0b92403d6108fad8dcdac272df", "commitAfterChange": "f4f81968c0fa49af0ebd2fc1f35fb9113776c823", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tpublic void testGetWorkingCopy1() throws CoreException", "signatureAfterChange": " \tpublic void testGetWorkingCopy1() throws CoreException", "diff": ["-\t\tICompilationUnit workingCopy = null;", "-\t\t\tworkingCopy = cu.getWorkingCopy(owner, null, null);", "+\t\t\tthis.workingCopy = cu.getWorkingCopy(owner, null, null);", "-\t\t\tassertEquals(\"Unexpected working copy\", workingCopy, cu.getWorkingCopy(owner, null, null));", "+\t\t\tassertEquals(\"Unexpected working copy\", this.workingCopy, cu.getWorkingCopy(owner, null, null));", "-\t\t\tif (workingCopy != null) {", "+\t\t\tif (this.workingCopy != null) {", "-\t\t\t\twhile (workingCopy.isWorkingCopy() && max-- > 0) {", "-\t\t\t\t\tworkingCopy.discardWorkingCopy();", "+\t\t\t\twhile (this.workingCopy.isWorkingCopy() && max-- > 0) {", "+\t\t\t\t\tthis.workingCopy.discardWorkingCopy();"]}], "num": 52676}