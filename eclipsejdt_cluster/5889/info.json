{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b92883705c1d4ed7ba0166e61ec312ae", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b92959c6ff714de57cc59b1379ef17c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForeachStatement.java", "commitBeforeChange": "3307a3b21f8472cc998512e9e4cd5afdd4f17b52", "commitAfterChange": "b155f47580a90f694a899aae6d06a1ff29f450b8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tpublic FlowInfo analyseCode(", "-\t\tBlockScope currentScope,", "-\t\tFlowContext flowContext,", "-\t\tFlowInfo flowInfo) {", "+\tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo) {", "+\t\tint initialComplaintLevel = (flowInfo.reachMode() & FlowInfo.UNREACHABLE) != 0 ? Statement.COMPLAINED_FAKE_REACHABLE : Statement.NOT_COMPLAINED;", "-\t\tflowInfo = this.elementVariable.analyseCode(this.scope, flowContext, flowInfo);", "+\t\tflowInfo = this.elementVariable.analyseCode(this.scope, flowContext, flowInfo);\t\t", "-\t\t\tif (!this.action.complainIfUnreachable(actionInfo, this.scope, false)) {", "-\t\t\t\tactionInfo = this.action.", "-\t\t\t\t\tanalyseCode(this.scope, loopingContext, actionInfo).", "-\t\t\t\t\tunconditionalCopy();", "+\t\t\tif (this.action.complainIfUnreachable(actionInfo, this.scope, initialComplaintLevel) < Statement.COMPLAINED_UNREACHABLE) {", "+\t\t\t\tactionInfo = this.action.analyseCode(this.scope, loopingContext, actionInfo).unconditionalCopy();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2d0a462a2edb88b848d5e950135576a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForStatement.java", "commitBeforeChange": "3307a3b21f8472cc998512e9e4cd5afdd4f17b52", "commitAfterChange": "b155f47580a90f694a899aae6d06a1ff29f450b8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tpublic FlowInfo analyseCode(", "-\t\tBlockScope currentScope,", "-\t\tFlowContext flowContext,", "-\t\tFlowInfo flowInfo) {", "-", "+\tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo) {", "+\t\tint initialComplaintLevel = (flowInfo.reachMode() & FlowInfo.UNREACHABLE) != 0 ? Statement.COMPLAINED_FAKE_REACHABLE : Statement.NOT_COMPLAINED;", "-", "+\t\t", "-\t\t\tif (!this.action.complainIfUnreachable(actionInfo, this.scope, false)) {", "-\t\t\t\tactionInfo = this.action.analyseCode(this.scope, loopingContext, actionInfo).", "-\t\t\t\t\tunconditionalInits();", "+\t\t\tif (this.action.complainIfUnreachable(actionInfo, this.scope, initialComplaintLevel) < Statement.COMPLAINED_UNREACHABLE) {", "+\t\t\t\tactionInfo = this.action.analyseCode(this.scope, loopingContext, actionInfo).unconditionalInits();", "-\t\t}", "-\t\telse {", "+\t\t} else {", "+\t\t\tif (this.increments != null) {", "+\t\t\t\tif (initialComplaintLevel == Statement.NOT_COMPLAINED) {", "+\t\t\t\t\tcurrentScope.problemReporter().fakeReachable(this.increments[0]);", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 5889}