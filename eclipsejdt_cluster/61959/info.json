{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5c892519d2d6da3e9894a114755cf548", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "858b94bf0b629f554c957414b3ca3b5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 148, "methodNumberAfterChange": 148, "signatureBeforeChange": "              public void test144()", "signatureAfterChange": "              public void test144()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "-\t\t\t\"\tZork z;\\n\" + ", "-\t\t\t\"\t^^^^\\n\" + ", "-\t\t\t\"Zork cannot be resolved to a type\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. WARNING in X.java (at line 34)\\n\" + ", "-\t\t\t\"\tList<Exception> problems= new TestIntrospector(EverythingWrong.class).validateTestMethods();\\n\" + ", "-\t\t\t\"\t                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<Exception>\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 38)\\n\" + ", "-\t\t\t\"\tpublic static junit.framework.Test suite() {\\n\" + ", "-\t\t\t\"\t              ^^^^^\\n\" + ", "-\t\t\t\"junit cannot be resolved to a type\\n\" + ", "-\t\t\t\"----------\\n\");", "+            \"----------\\n\" + ", "+    \t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+    \t\t\"\tZork z;\\n\" + ", "+    \t\t\"\t^^^^\\n\" + ", "+    \t\t\"Zork cannot be resolved to a type\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"2. WARNING in X.java (at line 34)\\n\" + ", "+    \t\t\"\tList<Exception> problems= new TestIntrospector(EverythingWrong.class).validateTestMethods();\\n\" + ", "+    \t\t\"\t                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+    \t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<Exception>\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"3. ERROR in X.java (at line 38)\\n\" + ", "+    \t\t\"\tpublic static junit.framework.Test suite() {\\n\" + ", "+    \t\t\"\t              ^^^^^\\n\" + ", "+    \t\t\"junit cannot be resolved to a type\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"4. WARNING in X.java (at line 50)\\n\" + ", "+    \t\t\"\tTestIntrospector(Class c) {}\\n\" + ", "+    \t\t\"\t                 ^^^^^\\n\" + ", "+    \t\t\"Type safety: Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"5. WARNING in X.java (at line 51)\\n\" + ", "+    \t\t\"\tList validateTestMethods() { return null; }\\n\" + ", "+    \t\t\"\t^^^^\\n\" + ", "+    \t\t\"Type safety: List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+    \t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed1dde90f95e604575abf1f2f971e1b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9713cc0fc86fbe0881ff90c5290328149c35cbdc", "commitAfterChange": "236485921f70a82e4283431ca8763bf21e25e459", "methodNumberBeforeChange": 1355, "methodNumberAfterChange": 1355, "signatureBeforeChange": " public void _test1324()", "signatureAfterChange": " public void test1324()", "diff": ["-public void _test1324() {", "+public void test1324() {", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. WARNING in X.java (at line 6)\\n\" +", "-\t\t\t\"\tx.doStuff(Bob.class, new Thingy());\\n\" +", "-\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Type safety: Unchecked invocation doStuff(Class<Bob>, Thingy<Bob>) of the generic method doStuff(Class<T>, Thingy<T>) of type X\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"2. WARNING in X.java (at line 6)\\n\" +", "-\t\t\t\"\tx.doStuff(Bob.class, new Thingy());\\n\" +", "-\t\t\t\"\t                     ^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Type safety: The expression of type Thingy needs unchecked conversion to conform to Thingy<T>\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"3. WARNING in X.java (at line 6)\\n\" +", "-\t\t\t\"\tx.doStuff(Bob.class, new Thingy());\\n\" +", "-\t\t\t\"\t                         ^^^^^^\\n\" +", "-\t\t\t\"Thingy is a raw type. References to generic type Thingy<T> should be parameterized\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"4. ERROR in X.java (at line 8)\\n\" +", "-\t\t\t\"\tZork z;\\n\" +", "-\t\t\t\"\t^^^^\\n\" +", "-\t\t\t\"Zork cannot be resolved to a type\\n\" +", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tx.doStuff(Bob.class, new Thingy());\\n\" + ", "+\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Unchecked invocation doStuff(Class<Bob>, Thingy) of the generic method doStuff(Class<T>, Thingy<T>) of type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tx.doStuff(Bob.class, new Thingy());\\n\" + ", "+\t\t\t\"\t                     ^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The expression of type Thingy needs unchecked conversion to conform to Thingy<Bob>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tx.doStuff(Bob.class, new Thingy());\\n\" + ", "+\t\t\t\"\t                         ^^^^^^\\n\" + ", "+\t\t\t\"Thingy is a raw type. References to generic type Thingy<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tZork z;\\n\" + ", "+\t\t\t\"\t^^^^\\n\" + ", "+\t\t\t\"Zork cannot be resolved to a type\\n\" + "]}], "num": 61959}