{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4af36b0d166bc258ad4daedb4c6e1853", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dad5c8336050ecd8bab4fd0668ef068", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "1bdf253b6c3e0502956ffbd356aa7f9c70660509", "commitAfterChange": "79857ed757b181d48665a94a07c64e0c91436988", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \t \tpublic void test0027() throws JavaModelException", "signatureAfterChange": " \t \tpublic void test0027() throws JavaModelException", "diff": ["+\t\tIVariableBinding binding = enumConstantDeclaration.resolveVariable();", "+\t\tassertNotNull(\"No binding\", binding);", "+\t\tassertEquals(\"Wrong name\", \"PENNY\", binding.getName());", "+\t\tbinding = enumConstantDeclaration.resolveVariable();", "+\t\tassertNotNull(\"No binding\", binding);", "+\t\tassertEquals(\"Wrong name\", \"NICKEL\", binding.getName());", "+\t\tbinding = enumConstantDeclaration.resolveVariable();", "+\t\tassertNotNull(\"No binding\", binding);", "+\t\tassertEquals(\"Wrong name\", \"DIME\", binding.getName());", "+\t\tbinding = enumConstantDeclaration.resolveVariable();", "+\t\tassertNotNull(\"No binding\", binding);", "+\t\tassertEquals(\"Wrong name\", \"QUARTER\", binding.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20911dc73045998240f47fb05d59af44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "5ee2151c41af9ff855348a169dff9645033b3177", "commitAfterChange": "44dd3fd78d480cf979c77fad7d9bdc1e1fe0ad4d", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \t \tpublic void test0027() throws JavaModelException", "signatureAfterChange": " \t \tpublic void test0027() throws JavaModelException", "diff": ["+\t\tIMethodBinding methodBinding = enumConstantDeclaration.resolveConstructorBinding();", "+\t\tassertNotNull(\"No binding\", methodBinding);", "+\t\tassertTrue(\"Not a constructor\", methodBinding.isConstructor());", "+\t\tmethodBinding = enumConstantDeclaration.resolveConstructorBinding();", "+\t\tassertNotNull(\"No binding\", methodBinding);", "+\t\tassertTrue(\"Not a constructor\", methodBinding.isConstructor());", "+\t\tmethodBinding = enumConstantDeclaration.resolveConstructorBinding();", "+\t\tassertNotNull(\"No binding\", methodBinding);", "+\t\tassertTrue(\"Not a constructor\", methodBinding.isConstructor());", "+\t\tmethodBinding = enumConstantDeclaration.resolveConstructorBinding();", "+\t\tassertNotNull(\"No binding\", methodBinding);"]}], "num": 62597}