{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a74796ffb8b48e23fdd9181af4ffa095", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17bf9e302b2f45846978a10282a7315a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/util/ExternalAnnotationUtil.java", "commitBeforeChange": "26de20ae619c91a55a35147a34aba32ab3111d61", "commitAfterChange": "6aa15157c4a89778b30fbac85a8e1c76029da034", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tstatic void annotateMember(String typeName, IFile file, String selector, String originalSignature, String annotatedSignature, \t\t\t\t\t\t\t\t\t\tint updatePosition, MergeStrategy mergeStrategy, IProgressMonitor monitor) \t\t\tthrows CoreException, IOException", "signatureAfterChange": "  \tstatic void annotateMember(String typeName, IFile file, String selector, String originalSignature, String annotatedSignature, \t\t\t\t\t\t\t\t\t\tint updatePosition, MergeStrategy mergeStrategy, IProgressMonitor monitor) \t\t\tthrows CoreException, IOException, IllegalArgumentException", "diff": ["-\t\t\tthrows CoreException, IOException", "+\t\t\tthrows CoreException, IOException, IllegalArgumentException", "+\t\t\t\t\t\tif (line == null) {", "+\t\t\t\t\t\t\tbreak; // found only the selector at EOF, append right here, ignoring 'pending'", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tString nextLine = reader.readLine();", "-\t\t\t\t\t\t\tif (nextLine == null)", "-\t\t\t\t\t\t\t\tnextLine = line; // no annotated line yet, use unannotated line instead", "-\t\t\t\t\t\t\tif (nextLine.startsWith(\" \")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\tString annotationLine = reader.readLine();", "+\t\t\t\t\t\t\tString nextLine = null;", "+\t\t\t\t\t\t\tif (annotationLine == null || annotationLine.isEmpty() || !annotationLine.startsWith(\" \")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tnextLine = annotationLine; // push back, since not a signature line", "+\t\t\t\t\t\t\t\tannotationLine = line; // no annotated line yet, use unannotated line instead", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (annotationLine.startsWith(\" \")) { //$NON-NLS-1$", "-\t\t\t\t\t\t\t\t\t\t\tannotatedSignature = addAnnotationsTo(annotatedSignature, nextLine.trim(), mergeStrategy);", "+\t\t\t\t\t\t\t\t\t\t\tannotatedSignature = addAnnotationsTo(annotatedSignature, annotationLine.trim(), mergeStrategy);", "-\t\t\t\t\t\t\t\t\t\t\tannotatedSignature = updateMethodReturnType(annotatedSignature, nextLine.trim(), mergeStrategy);", "+\t\t\t\t\t\t\t\t\t\t\tannotatedSignature = updateMethodReturnType(annotatedSignature, annotationLine.trim(), mergeStrategy);", "-\t\t\t\t\t\t\t\t\t\t\tannotatedSignature = updateParameterType(annotatedSignature, updatePosition, nextLine.trim(), mergeStrategy);", "+\t\t\t\t\t\t\t\t\t\t\tannotatedSignature = updateParameterType(annotatedSignature, updatePosition, annotationLine.trim(), mergeStrategy);", "-\t\t\t\t\t\t\t\tnextLine = null; // discard old annotated signature (may have been merged above)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "387d1180df5da16b809cedea407a55e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "7eeebb70e2ff491ab9bcb9989009c102bc6dce17", "commitAfterChange": "922a8f2234ba62b5ea80c3fa8e1983d8481a3bfb", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " \t \tprivate boolean hasClasspathCycle(IClasspathEntry[] preferredClasspath, HashSet visited, IWorkspaceRoot workspaceRoot)", "signatureAfterChange": " \t \tprivate boolean hasClasspathCycle(IClasspathEntry[] preferredClasspath, HashSet visited, IWorkspaceRoot workspaceRoot)", "diff": ["-\t\t\t\t\tString projectName = entry.getPath().lastSegment();", "-\t\t\t\t\tif (!visited.add(projectName)) return true;", "-\t\t\t\t\tJavaProject project = (JavaProject)JavaCore.create(workspaceRoot.getProject(projectName));", "-\t\t\t\t\tif (project.hasClasspathCycle(null, visited, workspaceRoot)) return true;", "-\t\t\t\t\tvisited.remove(projectName);", "+\t\t\t\t\tIPath entryPath = entry.getPath();", "+\t\t\t\t\tIResource member = workspaceRoot.findMember(entryPath);", "+\t\t\t\t\tif (member != null && member.getType() == IResource.PROJECT){", "+\t\t\t\t\t\tString projectName = entryPath.lastSegment();", "+\t\t\t\t\t\tif (!visited.add(projectName)) return true;", "+\t\t\t\t\t\tJavaProject project = (JavaProject)JavaCore.create((IProject)member);", "+\t\t\t\t\t\tif (project.hasClasspathCycle(null, visited, workspaceRoot)) return true;", "+\t\t\t\t\t\tvisited.remove(projectName);", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "825b5f5c9332a21370754a2da0f19ccb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "d03a83de0fe5be0e8f8f09b8efe99101b67367a2", "commitAfterChange": "e583360467dd665e6a3741180b503b0c70aed18f", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t\tpublic void propertyChange(Preferences.PropertyChangeEvent event)", "signatureAfterChange": " \t\tpublic void propertyChange(Preferences.PropertyChangeEvent event)", "diff": ["-\t\t\t\t// update path cache", "-\t\t\t\tif (newValue == null || newValue.equals(CP_ENTRY_IGNORE)) {", "-\t\t\t\t\tVariables.remove(varName);", "-\t\t\t\t} else {", "+\t\t\t\tif (newValue != null && !(newValue = newValue.trim()).equals(CP_ENTRY_IGNORE)) {", "+\t\t\t\t} else {", "+\t\t\t\t\tVariables.remove(varName);", "-\t\t\t\t// update path cache", "-\t\t\t\trecreatePersistedContainer(propertyName, ((String)event.getNewValue()).trim(), false);", "+\t\t\t\tString newValue = (String)event.getNewValue();", "+\t\t\t\tif (newValue != null && !(newValue = newValue.trim()).equals(CP_ENTRY_IGNORE)) {", "+\t\t\t\t\trecreatePersistedContainer(propertyName, newValue, false);", "+\t\t\t\t}"]}], "num": 33038}