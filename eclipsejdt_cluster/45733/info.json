{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "05252c843945a4a1f30674028a906966", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0651f1b1fc844a82b63912e2787bd7fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/compiler/tool/Options.java", "commitBeforeChange": "1ec2b7315a64873d3fc6e56224b5e7356a454733", "commitAfterChange": "d239bd5948c1f3fdf8bc0b77924d220fefde31ce", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic static int processOptions(String option)", "signatureAfterChange": "  \tpublic static int processOptions(String option)", "diff": ["-\t\tif (\"-log\".equals(option)) {//$NON-NLS-1$", "+\t\tif (ZERO_ARGUMENT_OPTIONS.contains(option)) {", "+\t\t\treturn 0;", "+\t\t}", "+\t\tif (ONE_ARGUMENT_OPTIONS.contains(option)) {", "-\t\t}", "-\t\tif (\"-repeat\".equals(option)) {//$NON-NLS-1$", "-\t\t\treturn 1;", "-\t\t}", "-\t\tif (\"-maxProblems\".equals(option)) {//$NON-NLS-1$", "-\t\t\treturn 1;", "-\t\t}", "-\t\tif (\"-source\".equals(option)) {//$NON-NLS-1$", "-\t\t\treturn 1;", "-\t\t}", "-\t\tif (\"-encoding\".equals(option)) {//$NON-NLS-1$", "-\t\t\treturn 1;", "-\t\t}", "-\t\tif (\"-1.3\".equals(option)) {//$NON-NLS-1$", "-\t\t\treturn 0;", "-\t\t}", "-\t\tif (\"-1.4\".equals(option)) {//$NON-NLS-1$", "-\t\t\treturn 0;", "-\t\t}", "-\t\tif (\"-1.5\".equals(option) || \"5\".equals(option) || \"-5.0\".equals(option)) {//$NON-NLS-1$//$NON-NLS-2$//$NON-NLS-3$", "-\t\t\treturn 0;", "-\t\t}", "-\t\tif (\"-1.6\".equals(option) || \"6\".equals(option) || \"-6.0\".equals(option)) {//$NON-NLS-1$//$NON-NLS-2$//$NON-NLS-3$", "-\t\t\treturn 0;", "-\t\t}", "-\t\tif (\"-d\".equals(option)) {//$NON-NLS-1$", "-\t\t\treturn 1;", "-\t\t}", "-\t\tif (\"-classpath\".equals(option)//$NON-NLS-1$", "-\t\t\t\t|| \"-cp\".equals(option)) {//$NON-NLS-1$", "-\t\t\treturn 1;", "-\t\t}", "-\t\tif (\"-bootclasspath\".equals(option)) {//$NON-NLS-1$", "-\t\t\treturn 1;", "-\t\t}", "-\t\tif (\"-sourcepath\".equals(option)) {//$NON-NLS-1$", "-\t\t\treturn 1;", "-\t\t}", "-\t\tif (\"-extdirs\".equals(option)) {//$NON-NLS-1$", "-\t\t\treturn 1;", "-\t\t}", "-\t\tif (\"-endorseddirs\".equals(option)) {//$NON-NLS-1$", "-\t\t\treturn 1;", "-\t\t}", "-\t\tif (\"progress\".equals(option)) {//$NON-NLS-1$", "-\t\t\treturn 0;", "-\t\t}", "-\t\tif (\"-proceedOnError\".equals(option)) {//$NON-NLS-1$", "-\t\t\treturn 0;", "-\t\t}", "-\t\tif (\"-time\".equals(option)) {//$NON-NLS-1$", "-\t\t\treturn 0;", "-\t\t}", "-\t\tif (\"-v\".equals(option) || \"-version\".equals(option)) {//$NON-NLS-1$//$NON-NLS-2$", "-\t\t\treturn 0;", "-\t\t}", "-\t\tif (\"-showversion\".equals(option)) {//$NON-NLS-1$", "-\t\t\treturn 0;", "-\t\t}", "-\t\tif (\"-deprecation\".equals(option)) {//$NON-NLS-1$", "-\t\t\treturn 0;", "-\t\t}", "-\t\tif (\"-help\".equals(option) || \"-?\".equals(option)) {//$NON-NLS-1$//$NON-NLS-2$", "-\t\t\treturn 0;", "-\t\t}", "-\t\tif (\"-help:warn\".equals(option) || \"-?:warn\".equals(option)) {//$NON-NLS-1$//$NON-NLS-2$", "-\t\t\treturn 0;", "-\t\t}", "-\t\tif (\"-noExit\".equals(option)) {//$NON-NLS-1$", "-\t\t\treturn 0;", "-\t\t}", "-\t\tif (\"-verbose\".equals(option)) {//$NON-NLS-1$", "-\t\t\treturn 0;", "-\t\t}", "-\t\tif (\"-referenceInfo\".equals(option)) {//$NON-NLS-1$", "-\t\t\treturn 0;", "-\t\t}", "-\t\tif (\"-inlineJSR\".equals(option)) {//$NON-NLS-1$", "-\t\t\treturn 0;", "-\t\t\tif (length == 2) {", "-\t\t\t\treturn 0;", "-\t\t\t}", "-\t\t\t\tif (length == 7 && option.equals(\"-g:none\"))//$NON-NLS-1$", "-\t\t\t\t\treturn 0;", "-\t\tif (\"-nowarn\".equals(option)) {//$NON-NLS-1$", "-\t\t\treturn 0;", "-\t\t}", "-\t\t\tif (length == 10 && option.equals(\"-warn:none\")) { //$NON-NLS-1$", "-\t\t\t\treturn 0;", "-\t\t\t}", "-\t\tif (\"-target\".equals(option)) {//$NON-NLS-1$", "-\t\t\treturn 1;", "-\t\t}", "-\t\tif (\"-preserveAllLocals\".equals(option)) {//$NON-NLS-1$", "-\t\t\treturn 0;", "-\t\t}", "-\t\tif (\"-enableJavadoc\".equals(option)) {//$NON-NLS-1$", "-\t\t\treturn 0;", "-\t\t}", "-\t\tif (\"-Xemacs\".equals(option)) {//$NON-NLS-1$", "-\t\t\treturn 0;", "-\t\t}", "-\t\tif (\"-X\".equals(option)) {//$NON-NLS-1$", "-\t\t\treturn 0;", "-\t\t}", "-\t\tif (\"-J\".equals(option)) {//$NON-NLS-1$", "-\t\t\treturn 0;", "-\t\t}", "-\t\tif (\"-O\".equals(option)) {//$NON-NLS-1$", "+\t\tif (option.startsWith(\"-J\") || option.startsWith(\"-X\")) {//$NON-NLS-1$//$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdaaa863e146742be49f984737f3eb60", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "1924cfa5e4209a8742be0104afe1beaad86d0922", "commitAfterChange": "dfe897878a3115c90160783084107f96dcd301be", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic CompilerOptions(CompilerOptions options)", "signatureAfterChange": " \tpublic static long warningTokenToIrritant(String warningToken)", "diff": ["-\t */", "-\tpublic CompilerOptions(CompilerOptions options) {", "-\t\tthis.errorThreshold = options.errorThreshold;", "-\t\tthis.warningThreshold = options.warningThreshold;", "-\t\tthis.produceDebugAttributes = options.produceDebugAttributes;", "-\t\tthis.complianceLevel = options.complianceLevel;", "-\t\tthis.sourceLevel = options.sourceLevel;", "-\t\tthis.targetJDK = options.targetJDK;", "-\t\tthis.isPrivateConstructorAccessChangingVisibility = options.isPrivateConstructorAccessChangingVisibility;", "-\t\tthis.defaultEncoding = options.defaultEncoding;", "-\t\tthis.verbose = options.verbose;", "-\t\tthis.produceReferenceInfo = options.produceReferenceInfo;", "-\t\tthis.preserveAllLocalVariables = options.preserveAllLocalVariables;", "-\t\tthis.parseLiteralExpressionsAsConstants = options.parseLiteralExpressionsAsConstants;", "-\t\tthis.maxProblemsPerUnit = options.maxProblemsPerUnit;", "-\t\tthis.taskTags = options.taskTags;", "-\t\tthis.taskPriorites = options.taskPriorites;", "-\t\tthis.isTaskCaseSensitive = options.isTaskCaseSensitive;", "-\t\tthis.reportDeprecationInsideDeprecatedCode = options.reportDeprecationInsideDeprecatedCode;", "-\t\tthis.reportDeprecationWhenOverridingDeprecatedMethod = options.reportDeprecationWhenOverridingDeprecatedMethod;", "-\t\tthis.reportUnusedParameterWhenImplementingAbstract = options.reportUnusedParameterWhenImplementingAbstract;", "-\t\tthis.reportUnusedParameterWhenOverridingConcrete = options.reportUnusedParameterWhenOverridingConcrete;", "-\t\tthis.reportUnusedDeclaredThrownExceptionWhenOverriding = options.reportUnusedDeclaredThrownExceptionWhenOverriding;", "-\t\tthis.reportSpecialParameterHidingField = options.reportSpecialParameterHidingField;", "-\t\tthis.reportInvalidJavadocTagsVisibility = options.reportInvalidJavadocTagsVisibility;", "-\t\tthis.reportInvalidJavadocTags = options.reportInvalidJavadocTags;", "-\t\tthis.reportInvalidJavadocTagsDeprecatedRef = options.reportInvalidJavadocTagsDeprecatedRef;", "-\t\tthis.reportInvalidJavadocTagsNotVisibleRef = options.reportInvalidJavadocTagsNotVisibleRef;", "-\t\tthis.reportMissingJavadocTagsVisibility = options.reportMissingJavadocTagsVisibility;", "-\t\tthis.reportMissingJavadocTagsOverriding = options.reportMissingJavadocTagsOverriding;", "-\t\tthis.reportMissingJavadocCommentsVisibility = options.reportMissingJavadocCommentsVisibility; ", "-\t\tthis.reportMissingJavadocCommentsOverriding = options.reportMissingJavadocCommentsOverriding;", "-\t\tthis.inlineJsrBytecode = options.inlineJsrBytecode;", "-\t\tthis.docCommentSupport = options.docCommentSupport;", "-\t}", "+\t}", "+\tpublic static long warningTokenToIrritant(String warningToken) {", "+\t\tif (warningToken == null || warningToken.length() == 0) return 0;", "+\t\tswitch (warningToken.charAt(0)) {", "+\t\t\tcase 'a' :", "+\t\t\t\tif (\"all\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn 0xFFFFFFFFFFFFFFFFl; // suppress all warnings", "+\t\t\t\tif (\"assertIdentifier\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn AssertUsedAsAnIdentifier;", "+\t\t\t\tbreak;", "+\t\t\tcase 'b' :", "+\t\t\t\tif (\"boxing\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn Autoboxing;", "+\t\t\t\tbreak;", "+\t\t\tcase 'c' :", "+\t\t\t\tif (\"constructorName\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn MethodWithConstructorName;", "+\t\t\t\tif (\"conditionAssign\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn AccidentalBooleanAssign;", "+\t\t\t\tif (\"charConcat\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn NoImplicitStringConversion;", "+\t\t\t\tbreak;", "+\t\t\tcase 'd' :", "+\t\t\t\tif (\"deprecation\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn UsingDeprecatedAPI;", "+\t\t\t\tif (\"dep-ann\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn MissingDeprecatedAnnotation;", "+\t\t\t\tbreak;", "+\t\t\tcase 'e' :", "+\t\t\t\tif (\"emptyBlock\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn EmptyStatement | UndocumentedEmptyBlock;", "+\t\t\t\tif (\"enumIdentifier\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn EnumUsedAsAnIdentifier;", "+\t\t\t\tif (\"enumSwitch\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn IncompleteEnumSwitch;", "+\t\t\t\tbreak;", "+\t\t\tcase 'f' :", "+\t\t\t\tif (\"fieldHiding\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn FieldHiding;", "+\t\t\t\tif (\"finally\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn FinallyBlockNotCompleting;", "+\t\t\t\tif (\"finalBound\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn FinalParameterBound;", "+\t\t\t\tbreak;", "+\t\t\tcase 'i' :", "+\t\t\t\tif (\"intfNonInherited\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn IncompatibleNonInheritedInterfaceMethod;", "+\t\t\t\tif (\"indirectStatic\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn IndirectStaticAccess;", "+\t\t\t\tif (\"intfAnnotation\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn AnnotationSuperInterface;", "+\t\t\t\tbreak;", "+\t\t\tcase 'j' :", "+\t\t\t\tif (\"javadoc\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn MissingJavadocComments | MissingJavadocTags | InvalidJavadoc;", "+\t\t\t\tbreak;", "+\t\t\tcase 'l' :", "+\t\t\t\tif (\"localHiding\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn LocalVariableHiding;", "+\t\t\t\tbreak;", "+\t\t\tcase 'm' :", "+\t\t\t\tif (\"maskedCatchBlock\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn MaskedCatchBlock;", "+\t\t\t\tbreak;", "+\t\t\tcase 'n' :", "+\t\t\t\tif (\"nls\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn AssertUsedAsAnIdentifier;", "+\t\t\t\tif (\"noEffectAssign\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn NoEffectAssignment;", "+\t\t\t\tif (\"null\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn NullReference;", "+\t\t\t\tbreak;", "+\t\t\tcase 'o' :", "+\t\t\t\tif (\"over-ann\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn MissingOverrideAnnotation;", "+\t\t\t\tbreak;", "+\t\t\tcase 'p' :", "+\t\t\t\tif (\"pkgDefaultMethod\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn OverriddenPackageDefaultMethod;", "+\t\t\t\tbreak;", "+\t\t\tcase 'r' :", "+\t\t\t\tif (\"restricted\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn ForbiddenReference | DiscouragedReference;", "+\t\t\t\tbreak;", "+\t\t\tcase 's' :", "+\t\t\t\tif (\"syntheticAccess\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn AccessEmulation;", "+\t\t\t\tif (\"staticReceiver\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn NonStaticAccessToStatic;", "+\t\t\t\tif (\"serial\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn MissingSerialVersion;", "+\t\t\t\tbreak;", "+\t\t\tcase 't' :", "+\t\t\t\tif (\"typeHiding\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn TypeParameterHiding;", "+\t\t\t\tbreak;", "+\t\t\tcase 'u' :", "+\t\t\t\tif (\"unusedLocal\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn UnusedLocalVariable;", "+\t\t\t\tif (\"unusedArgument\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn UnusedArgument;", "+\t\t\t\tif (\"unchecked\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn UncheckedTypeOperation;", "+\t\t\t\tif (\"unusedImport\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn UnusedImport;", "+\t\t\t\tif (\"unusedPrivate\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn UnusedPrivateMember;", "+\t\t\t\tif (\"unqualifiedField\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn UnqualifiedFieldAccess;", "+\t\t\t\tif (\"unusedThrown\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn UnusedDeclaredThrownException;", "+\t\t\t\tif (\"uselessTypeCheck\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn UnnecessaryTypeCheck;", "+\t\t\t\tif (\"unnecessaryElse\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn UnnecessaryElse;", "+\t\t\t\tbreak;", "+\t\t\tcase 'v' :", "+\t\t\t\tif (\"varargs\".equals(warningToken)) //$NON-NLS-1$", "+\t\t\t\t\treturn VarargsArgumentNeedCast;", "+\t\t\t\tbreak;", "+\t\t}", "+\t\treturn 0;", "+\t}"]}], "num": 45733}