{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2f2e08827598fcf612bc60426ce2c109", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d3f763419688e3e936bb1fe393c5db1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "commitAfterChange": "6422cf28e195cf583d84cd9a0d044425ae0a797f", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " protected void consumeArrayCreationExpressionWithoutInitializer()", "signatureAfterChange": " protected void consumeArrayCreationExpressionWithoutInitializer()", "diff": ["-\tArrayAllocationExpression aae = new ArrayAllocationExpression();", "-\taae.type = getTypeReference(0);", "+\tArrayAllocationExpression arrayAllocation = new ArrayAllocationExpression();", "+\tarrayAllocation.type = getTypeReference(0);", "+\tarrayAllocation.type.bits |= ASTNode.IgnoreRawTypeCheck; // no need to worry about raw type usage\t", "-\t\taae.dimensions = new Expression[length],", "+\t\tarrayAllocation.dimensions = new Expression[length],", "-\taae.sourceStart = this.intStack[this.intPtr--];", "-\tif (aae.initializer == null) {", "-\t\taae.sourceEnd = this.endPosition;", "+\tarrayAllocation.sourceStart = this.intStack[this.intPtr--];", "+\tif (arrayAllocation.initializer == null) {", "+\t\tarrayAllocation.sourceEnd = this.endPosition;", "-\t\taae.sourceEnd = aae.initializer.sourceEnd ;", "+\t\tarrayAllocation.sourceEnd = arrayAllocation.initializer.sourceEnd ;", "-\tpushOnExpressionStack(aae);", "+\tpushOnExpressionStack(arrayAllocation);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7c816b7b6ba0b6093031ffe173c55a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "commitAfterChange": "6422cf28e195cf583d84cd9a0d044425ae0a797f", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " protected void consumeArrayCreationExpressionWithInitializer()", "signatureAfterChange": " protected void consumeArrayCreationExpressionWithInitializer()", "diff": ["-\tArrayAllocationExpression aae = new ArrayAllocationExpression();", "+\tArrayAllocationExpression arrayAllocation = new ArrayAllocationExpression();", "-\taae.initializer = (ArrayInitializer) this.expressionStack[this.expressionPtr--];", "+\tarrayAllocation.initializer = (ArrayInitializer) this.expressionStack[this.expressionPtr--];", "-\taae.type = getTypeReference(0);", "+\tarrayAllocation.type = getTypeReference(0);", "+\tarrayAllocation.type.bits |= ASTNode.IgnoreRawTypeCheck; // no need to worry about raw type usage", "-\t\taae.dimensions = new Expression[length],", "+\t\tarrayAllocation.dimensions = new Expression[length],", "-\taae.sourceStart = this.intStack[this.intPtr--];", "-\tif (aae.initializer == null) {", "-\t\taae.sourceEnd = this.endPosition;", "+\tarrayAllocation.sourceStart = this.intStack[this.intPtr--];", "+\tif (arrayAllocation.initializer == null) {", "+\t\tarrayAllocation.sourceEnd = this.endPosition;", "-\t\taae.sourceEnd = aae.initializer.sourceEnd ;", "+\t\tarrayAllocation.sourceEnd = arrayAllocation.initializer.sourceEnd ;", "-\tpushOnExpressionStack(aae);", "+\tpushOnExpressionStack(arrayAllocation);"]}], "num": 2544}