{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a2edb100a439a12ddc04f3034f238497", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ab4c7290724a7255729dcee2df991c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "df04cb9bfcfec194a3c1180d0af18a4bd840680a", "commitAfterChange": "e5cb0c7d733b4b140216dc60d7657a3d63f3d951", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " \t \tpublic ForStatement convert(org.eclipse.jdt.internal.compiler.ast.ForStatement statement)", "signatureAfterChange": " \t \tpublic ForStatement convert(org.eclipse.jdt.internal.compiler.ast.ForStatement statement)", "diff": ["+\t\t\tEmptyStatement emptyStatement = this.ast.newEmptyStatement();", "+\t\t\tint start = retrieveStartingSemiColonPosition(statement.sourceStart, compilationUnitSource.length);", "+\t\t\tint end = retrieveEndingSemiColonPosition(start, compilationUnitSource.length);", "+\t\t\temptyStatement.setSourceRange(start, end - start + 1);", "+\t\t\tforStatement.setBody(emptyStatement);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9e1b0fa7d4282ee9bc3176d53ebbf19", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "df04cb9bfcfec194a3c1180d0af18a4bd840680a", "commitAfterChange": "e5cb0c7d733b4b140216dc60d7657a3d63f3d951", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": " \t \tpublic WhileStatement convert(org.eclipse.jdt.internal.compiler.ast.WhileStatement statement)", "signatureAfterChange": " \t \tpublic WhileStatement convert(org.eclipse.jdt.internal.compiler.ast.WhileStatement statement)", "diff": ["+\t\t} else {", "+\t\t\tEmptyStatement emptyStatement = this.ast.newEmptyStatement();", "+\t\t\tretrieveSemiColonPosition(whileStatement);", "+\t\t\tint start = retrieveStartingSemiColonPosition(statement.sourceStart, compilationUnitSource.length);", "+\t\t\tint end = retrieveEndingSemiColonPosition(start, compilationUnitSource.length);", "+\t\t\temptyStatement.setSourceRange(start, end - start + 1);", "+\t\t\twhileStatement.setBody(emptyStatement);"]}], "num": 8344}