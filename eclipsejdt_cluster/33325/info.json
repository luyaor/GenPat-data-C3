{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d312b531958ea2df63fd03209f34171a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cb1e4c043b50ba2c8f649c673ddc1bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "94e87775403a1be90933921189758fda2ba4fb6c", "commitAfterChange": "bd01e05f0477a2d168d72337205595e4fa08ba90", "methodNumberBeforeChange": 881, "methodNumberAfterChange": 881, "signatureBeforeChange": " public void _test875()", "signatureAfterChange": " public void test875()", "diff": ["-public void _test875() {", "+public void test875() {", "-\t\t\"should be: 1-type mismatch 2-unchecked cast\");", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\"\tprivate static final Map<Class<? extends DatabaseObject>, Class<? extends ObjectFormUI>> uiMap = new HashMap<Class<? extends DatabaseObject>, Class<? extends ObjectFormUI>>();\\n\" + ", "+\t\t\"\t                                                                          ^^^^^^^^^^^^\\n\" + ", "+\t\t\"X.ObjectFormUI is a raw type. References to generic type X.ObjectFormUI<T> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\"\tprivate static final Map<Class<? extends DatabaseObject>, Class<? extends ObjectFormUI>> uiMap = new HashMap<Class<? extends DatabaseObject>, Class<? extends ObjectFormUI>>();\\n\" + ", "+\t\t\"\t                                                                                                                                                              ^^^^^^^^^^^^\\n\" + ", "+\t\t\"X.ObjectFormUI is a raw type. References to generic type X.ObjectFormUI<T> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\"\treturn null != null \\n\" + ", "+\t\t\"\t\t\t? uiMap.get(persistentClass)\\n\" + ", "+\t\t\"\t\t\t: (Class<? extends ObjectFormUI<T>>) uiMap.get(persistentClass);\\n\" + ", "+\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type mismatch: cannot convert from Class<capture-of ? extends X.ObjectFormUI> to Class<? extends X.ObjectFormUI<T>>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. WARNING in X.java (at line 12)\\n\" + ", "+\t\t\"\t: (Class<? extends ObjectFormUI<T>>) uiMap.get(persistentClass);\\n\" + ", "+\t\t\"\t  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: The cast from Class<capture-of ? extends X.ObjectFormUI> to Class<? extends X.ObjectFormUI<T>> is actually checking against the erased type Class\\n\" + ", "+\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf407fde5d236ed359e0d5cf44959785", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "bef60d1fb53f507f903d66ac6e04e719aa5b50f4", "commitAfterChange": "3b418eaef41604a68c97dae4dd32fddcb839b515", "methodNumberBeforeChange": 1209, "methodNumberAfterChange": 1209, "signatureBeforeChange": " public void _test1181()", "signatureAfterChange": " public void test1181()", "diff": ["-public void _test1181() {", "+public void test1181() {", "-\t\t\"should not see errors like: R cannot be resolved to a type\");", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\"\tpublic static <S, T extends Comparable<S>, R extends S & T> R max(T arg1, S arg2) {\\n\" + ", "+\t\t\"\t                                                         ^\\n\" + ", "+\t\t\"Cannot specify any additional bound T when first bound is a type parameter\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\"\tpublic static <S, T extends Comparable<S>, R extends S & T> R max(T arg1, S arg2) {\\n\" + ", "+\t\t\"\t                                                              ^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Method max(T, S) has the same erasure max(Comparable<T>, Object) as another method in type X\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\"\treturn (R) ((arg1.compareTo(arg2) > 0) ? arg1 : arg2);\\n\" + ", "+\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: Unchecked cast from Object to R\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"\tpublic static <T extends Comparable<S>, S, R extends S & Comparable<S>> R max(T arg1, S arg2) {\\n\" + ", "+\t\t\"\t                                                         ^^^^^^^^^^\\n\" + ", "+\t\t\"Cannot specify any additional bound Comparable<S> when first bound is a type parameter\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"\tpublic static <T extends Comparable<S>, S, R extends S & Comparable<S>> R max(T arg1, S arg2) {\\n\" + ", "+\t\t\"\t                                                                          ^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Method max(T, S) has the same erasure max(Comparable<T>, Object) as another method in type X\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"6. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\"\treturn (R) ((arg1.compareTo(arg2) > 0) ? arg1 : arg2);\\n\" + ", "+\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: Unchecked cast from Object to R\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"7. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\"\treturn (R) ((arg1.compareTo(arg2) > 0) ? arg1 : arg2);\\n\" + ", "+\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: Unchecked cast from Object to R\\n\" + ", "+\t\t\"----------\\n\");"]}], "num": 33325}