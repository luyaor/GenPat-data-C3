{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f7949657eb758fa076b77baefb868d27", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed228299c15720f1fd3d8ddcf84a80df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/InfixExpression.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tpublic Expression getLeftOperand()", "signatureAfterChange": "  \tpublic Expression getLeftOperand()", "diff": ["-\t\tif (leftOperand  == null) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetLeftOperand(new SimpleName(getAST()));", "-\t\t\tgetAST().setModificationCount(count);", "+\t\tif (this.leftOperand  == null) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.leftOperand= new SimpleName(this.ast);", "+\t\t\tpostLazyInit(this.leftOperand, LEFT_OPERAND_PROPERTY);", "-\t\treturn leftOperand;", "+\t\treturn this.leftOperand;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efe3a76e5bc42f45f102d41808b0ea7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/InstanceofExpression.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Expression getLeftOperand()", "signatureAfterChange": "  \tpublic Expression getLeftOperand()", "diff": ["-\t\tif (leftOperand  == null) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetLeftOperand(new SimpleName(getAST()));", "-\t\t\tgetAST().setModificationCount(count);", "+\t\tif (this.leftOperand  == null) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.leftOperand= new SimpleName(this.ast);", "+\t\t\tpostLazyInit(this.leftOperand, LEFT_OPERAND_PROPERTY);", "-\t\treturn leftOperand;", "+\t\treturn this.leftOperand;"]}], "num": 53559}