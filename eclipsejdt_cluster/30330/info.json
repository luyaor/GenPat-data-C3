{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "14b8d516a25bc3a3bcd34d4610eae108", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d5cbaf7510d88516a4afdc45fce2567", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/Util.java", "commitBeforeChange": "98c08ded096494364ca74f948e8f494b3f447e89", "commitAfterChange": "423cede7ef9cde15030dc54ef2266be4ddcc9112", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public static void createJar(String[] pathsAndContents, String jarPath, String compliance) throws IOException", "signatureAfterChange": " public static void createJar(String[] pathsAndContents, String[] extraPathsAndContents, Map options, String jarPath) throws IOException", "diff": ["+}", "+public static void createJar(String[] pathsAndContents, String[] extraPathsAndContents, Map options, String jarPath) throws IOException {", "+\tif (pathsAndContents != null) {", "+\t\tcompile(pathsAndContents, options, classesPath);", "+\t}", "+\tfor (int i = 0, l = extraPathsAndContents == null ? 0 : extraPathsAndContents.length; i < l; /* inc in loop */) {", "+\t\tFile  outputFile = new File(classesPath, extraPathsAndContents[i++]);", "+\t\toutputFile.getParentFile().mkdirs();", "+\t\tUtil.writeToFile(extraPathsAndContents[i++], outputFile.getAbsolutePath());", "+\t}", "-public static void createJar(String[] pathsAndContents, String jarPath, String compliance) throws IOException {", "-    createJar(pathsAndContents, getCompileOptions(compliance), jarPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea81873c0a5acef0198fb78a063ce0de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/Util.java", "commitBeforeChange": "795236662f4c72deb433448a946f4a36cebbebd0", "commitAfterChange": "b74a7b82d9221b86893a88ea5453e92534ffe51b", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  public static void createJar(String[] pathsAndContents, String[] extraPathsAndContents, Map options, String[] classpath, String jarPath) throws IOException", "signatureAfterChange": "  public static void createJar(String[] pathsAndContents, String[] extraPathsAndContents, Map options, String[] classpath, String jarPath) throws IOException", "diff": ["-\tfor (int i = 0, l = extraPathsAndContents == null ? 0 : extraPathsAndContents.length; i < l; /* inc in loop */) {", "-\t\tFile  outputFile = new File(classesPath, extraPathsAndContents[i++]);", "-\t\toutputFile.getParentFile().mkdirs();", "-\t\tUtil.writeToFile(extraPathsAndContents[i++], outputFile.getAbsolutePath());", "+\tif (extraPathsAndContents != null) {", "+\t\tfor (int i = 0, l = extraPathsAndContents == null ? 0 : extraPathsAndContents.length; i < l; /* inc in loop */) {", "+\t\t\tFile  outputFile = new File(classesPath, extraPathsAndContents[i++]);", "+\t\t\toutputFile.getParentFile().mkdirs();", "+\t\t\tUtil.writeToFile(extraPathsAndContents[i++], outputFile.getAbsolutePath());", "+\t\t}"]}], "num": 30330}