{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7657f17c42c7324f8e43841f884c9a03", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf70885f178bbeca56cd1b8944ecc6ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "a2b79174755a16aced5104d3df93df716516d670", "commitAfterChange": "f2fb5e44531d4df5da9264367df0b14b50434c61", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public ReferenceBinding[] superInterfaces()", "signatureAfterChange": "     public ReferenceBinding[] superInterfaces()", "diff": ["-\t\t\t\tif (this.bound.isInterface()) {", "-\t\t\t\t\treturn new ReferenceBinding[]{ (ReferenceBinding)this.bound };", "-\t\t\t\t} else {", "-\t\t\t\t\treturn NoSuperInterfaces;", "-\t\t\t\t}", "+\t\t\t\tif (this.bound.isInterface())", "+\t\t\t\t\treturn new ReferenceBinding[] {(ReferenceBinding) this.bound};", "+\t\t\t\treturn NoSuperInterfaces;", "+\t\t\t// TODO (philippe) if we fall thru, we'll answer null but no one will expect it", "+\t\t\t// return NoSuperInterfaces;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e45606d1dc0736009f08908a8b181321", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "531ac5eb1dd13f76ffce0d422944e3df6d2efe00", "commitAfterChange": "9c36b271d1af09082a243f1e102b685a99548689", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic int boundsCount()", "signatureAfterChange": "  \tpublic int boundsCount()", "diff": ["-\t\tif (this.firstBound == null) {", "+\t\tif (this.firstBound == null)", "-\t\t} else if (TypeBinding.equalsEquals(this.firstBound, this.superclass)) {", "-\t\t\treturn this.superInterfaces.length + 1;", "-\t\t} else {", "-\t\t\treturn this.superInterfaces.length;", "-\t\t}", "+\t\tif (this.firstBound.isInterface())", "+\t\t\treturn this.superInterfaces.length; // only interface bounds", "+\t\treturn this.superInterfaces.length + 1; // class or array type isn't contained in superInterfaces"]}], "num": 7114}