{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8c10bf2a669f1543e7eadc24f0940efb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22f6a588394e088f45a81ca805263863", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SignatureTests.java", "commitBeforeChange": "03e37ed5506ed50fa30b9f5aa42ff423995a94bd", "commitAfterChange": "4111f058addae7e2d753cc95bd7546b1f787e4c8", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void testGetTypeParameterBounds()", "signatureAfterChange": " public void testGetTypeParameterBounds()", "diff": ["-\tassertTrue(\"Signature#getTypeParameterBounds is not correct1\", Signature.getTypeParameterBounds(formalTypeParameterSignature).length == 0);", "+\tassertEquals(\"Signature#getTypeParameterBounds is not correct1\", 0,", "+\t\t\tSignature.getTypeParameterBounds(formalTypeParameterSignature).length);", "-\tassertTrue(\"Signature#getTypeParameterBounds is not correct2\", Signature.getTypeParameterBounds(formalTypeParameterSignature).length == 2);", "-\tassertEquals(\"Signature#getTypeParameterBounds is not correct2a\", Signature.getTypeParameterBounds(formalTypeParameterSignature)[0], \"Qi1;\");", "-\tassertEquals(\"Signature#getTypeParameterBounds is not correct2b\", Signature.getTypeParameterBounds(formalTypeParameterSignature)[1], \"Qi2;\");", "+\tassertEquals(\"Signature#getTypeParameterBounds is not correct2\", 2,", "+\t\t\tSignature.getTypeParameterBounds(formalTypeParameterSignature).length);", "+\tassertEquals(\"Signature#getTypeParameterBounds is not correct2a\", \"Qi1;\",", "+\t\t\tSignature.getTypeParameterBounds(formalTypeParameterSignature)[0]);", "+\tassertEquals(\"Signature#getTypeParameterBounds is not correct2b\", \"Qi2;\",", "+\t\t\tSignature.getTypeParameterBounds(formalTypeParameterSignature)[1]);", "-\tassertTrue(\"Signature#getTypeParameterBounds is not correct3\", Signature.getTypeParameterBounds(formalTypeParameterSignature).length == 3);", "-\tassertEquals(\"Signature#getTypeParameterBounds is not correct3a\", Signature.getTypeParameterBounds(formalTypeParameterSignature)[0], \"Qlist<Qstring;>;\");", "-\tassertEquals(\"Signature#getTypeParameterBounds is not correct3b\", Signature.getTypeParameterBounds(formalTypeParameterSignature)[1], \"Qi1;\");", "-\tassertEquals(\"Signature#getTypeParameterBounds is not correct3c\", Signature.getTypeParameterBounds(formalTypeParameterSignature)[2], \"Qi2;\");", "+\tassertEquals(\"Signature#getTypeParameterBounds is not correct3\", 3,", "+\t\t\tSignature.getTypeParameterBounds(formalTypeParameterSignature).length);", "+\tassertEquals(\"Signature#getTypeParameterBounds is not correct3a\", \"Qlist<Qstring;>;\",", "+\t\t\tSignature.getTypeParameterBounds(formalTypeParameterSignature)[0]);", "+\tassertEquals(\"Signature#getTypeParameterBounds is not correct3b\", \"Qi1;\",", "+\t\t\tSignature.getTypeParameterBounds(formalTypeParameterSignature)[1]);", "+\tassertEquals(\"Signature#getTypeParameterBounds is not correct3c\", \"Qi2;\",", "+\t\t\tSignature.getTypeParameterBounds(formalTypeParameterSignature)[2]);", "-\tassertTrue(\"Signature#getTypeParameterBounds is not correct4\", Signature.getTypeParameterBounds(formalTypeParameterSignature).length == 1);", "-\tassertEquals(\"Signature#getTypeParameterBounds is not correct4a\", Signature.getTypeParameterBounds(formalTypeParameterSignature)[0], \"Qi1;\");", "+\tassertEquals(\"Signature#getTypeParameterBounds is not correct4\", 1,", "+\t\t\tSignature.getTypeParameterBounds(formalTypeParameterSignature).length);", "+\tassertEquals(\"Signature#getTypeParameterBounds is not correct4a\", \"Qi1;\",", "+\t\t\tSignature.getTypeParameterBounds(formalTypeParameterSignature)[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a236c614d2277bc8517079ddd4864e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SignatureTests.java", "commitBeforeChange": "67974a3eb30390e309a10071d1a2b488bc4237aa", "commitAfterChange": "84eea0a0b501eccff0f4627ea142c6395d390a8d", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void testGetInterfaceBounds()", "signatureAfterChange": " public void testGetTypeParameterBounds()", "diff": ["+public void testGetTypeParameterBounds() {", "+\tassertTrue(\"Signature#getTypeParameterBounds is not correct1\", Signature.getTypeParameterBounds(formalTypeParameterSignature).length == 0);", "+\tassertTrue(\"Signature#getTypeParameterBounds is not correct2\", Signature.getTypeParameterBounds(formalTypeParameterSignature).length == 2);", "+\tassertEquals(\"Signature#getTypeParameterBounds is not correct2a\", Signature.getTypeParameterBounds(formalTypeParameterSignature)[0], \"Qi1;\");", "+\tassertEquals(\"Signature#getTypeParameterBounds is not correct2b\", Signature.getTypeParameterBounds(formalTypeParameterSignature)[1], \"Qi2;\");", "+\tassertTrue(\"Signature#getTypeParameterBounds is not correct3\", Signature.getTypeParameterBounds(formalTypeParameterSignature).length == 3);", "+\tassertEquals(\"Signature#getTypeParameterBounds is not correct3a\", Signature.getTypeParameterBounds(formalTypeParameterSignature)[0], \"Qlist<Qstring;>;\");", "+\tassertEquals(\"Signature#getTypeParameterBounds is not correct3b\", Signature.getTypeParameterBounds(formalTypeParameterSignature)[1], \"Qi1;\");", "+\tassertEquals(\"Signature#getTypeParameterBounds is not correct3c\", Signature.getTypeParameterBounds(formalTypeParameterSignature)[2], \"Qi2;\");", "+\tformalTypeParameterSignature = \"Hello:Qi1;\";", "+\tassertTrue(\"Signature#getTypeParameterBounds is not correct4\", Signature.getTypeParameterBounds(formalTypeParameterSignature).length == 1);", "+\tassertEquals(\"Signature#getTypeParameterBounds is not correct4a\", Signature.getTypeParameterBounds(formalTypeParameterSignature)[0], \"Qi1;\");", "- */", "-public void testGetInterfaceBounds() {", "-\t// tests with 1.5-specific elements", "-\tString formalTypeParameterSignature = \"Hello:\";", "-\tassertTrue(\"Signature#getInterfaceBounds is not correct1\", Signature.getInterfaceBounds(formalTypeParameterSignature).length == 0);", "-\tformalTypeParameterSignature = \"Hello::Qi1;:Qi2;\";", "-\tassertTrue(\"Signature#getInterfaceBounds is not correct2\", Signature.getInterfaceBounds(formalTypeParameterSignature).length == 2);", "-\tassertEquals(\"Signature#getInterfaceBounds is not correct2a\", Signature.getInterfaceBounds(formalTypeParameterSignature)[0], \"Qi1;\");", "-\tassertEquals(\"Signature#getInterfaceBounds is not correct2b\", Signature.getInterfaceBounds(formalTypeParameterSignature)[1], \"Qi2;\");", "-\tformalTypeParameterSignature = \"Hello:Qlist<Qstring;>;:Qi1;:Qi2;\";", "-\tassertTrue(\"Signature#getInterfaceBounds is not correct3\", Signature.getInterfaceBounds(formalTypeParameterSignature).length == 2);", "-\tassertEquals(\"Signature#getInterfaceBounds is not correct3a\", Signature.getInterfaceBounds(formalTypeParameterSignature)[0], \"Qi1;\");", "-\tassertEquals(\"Signature#getInterfaceBounds is not correct3b\", Signature.getInterfaceBounds(formalTypeParameterSignature)[1], \"Qi2;\");", "-\ttry {", "-\t\tSignature.getInterfaceBounds(\"\");", "-\t\tassertTrue(\"Signature#getInterfaceBounds is not correct: exception\", false);", "+\t\tSignature.getTypeParameterBounds(\"\");", "+\t\tassertTrue(\"Signature#getTypeParameterBounds is not correct: exception\", false);"]}], "num": 20284}