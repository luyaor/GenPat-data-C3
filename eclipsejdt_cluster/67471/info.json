{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d6fa919db101f11c1e0c3a85a710bc87", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "149134707e1d911eedd1d007e1a9f1ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "2a2935d5ba546500d563cc08921b53e5b286cdf8", "commitAfterChange": "2d9dc5098273e0e95832d81d735d2d77249738ef", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic IType findType(String typeName, String packageName, boolean partialMatch, int acceptFlags)", "signatureAfterChange": " \tpublic IType findType(String typeName, String packageName, boolean partialMatch, int acceptFlags)", "diff": ["+", "+\t\t// Look for concerned package fragments", "-\t\tfor (int i= 0, length= packages.length; i < length; i++) {", "-\t\t\tIType type= findType(typeName, packages[i], partialMatch, acceptFlags);", "-\t\t\tif (type != null)", "+\t\t// Try to find type in package fragments list", "+\t\tIType type = null;", "+\t\tint length= packages.length;", "+\t\tIJavaProject project = null;", "+\t\tfor (int i= 0; i < length; i++) {", "+\t\t\ttype = findType(typeName, packages[i], partialMatch, acceptFlags);", "+\t\t\tif (type != null) {", "+\t\t\t}", "+\t\t\tif (project == null) {", "+\t\t\t\tproject = packages[i].getJavaProject();", "+\t\t\t}", "-\t\treturn null;", "-\t}", "+", "+\t\t// If type was not found, try to find it as secondary in source folders", "+\t\tif (project != null) {", "+\t\t\ttype = findSecondaryType(packageName, typeName, project);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4260d11fce9721f3cfde86db7a562534", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "0df9f1687f9162f2dcdfeec3aed4b01b8d385a19", "commitAfterChange": "ce0f19288bc3747a9c0cb27b6996f5589afb99d1", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic IType findType(String name, IPackageFragment pkg, boolean partialMatch, int acceptFlags, boolean considerSecondaryTypes)", "signatureAfterChange": " \tpublic IType findType(String name, IPackageFragment pkg, boolean partialMatch, int acceptFlags, boolean waitForIndices, boolean considerSecondaryTypes)", "diff": ["-\tpublic IType findType(String name, IPackageFragment pkg, boolean partialMatch, int acceptFlags, boolean considerSecondaryTypes) {", "-\t\tIType type = findType(name, pkg, partialMatch, acceptFlags);", "+\tpublic IType findType(String name, IPackageFragment pkg, boolean partialMatch, int acceptFlags, boolean waitForIndices, boolean considerSecondaryTypes) {", "+\t\tif (pkg == null)", "+\t\t\treturn null;", "+", "+\t\tSingleTypeRequestor typeRequestor = new SingleTypeRequestor();", "+\t\tseekTypes(name, pkg, partialMatch, acceptFlags, typeRequestor, considerSecondaryTypes);", "+\t\tIType type = typeRequestor.getType();", "+", "-\t\t\ttype = findSecondaryType(pkg.getElementName(), name, pkg.getJavaProject(), false, null);", "+\t\t\ttype = findSecondaryType(pkg.getElementName(), name, pkg.getJavaProject(), waitForIndices, null);"]}], "num": 67471}