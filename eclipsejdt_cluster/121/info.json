{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bd1f7c56fb217bdd088b91f75ab3840a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "193a3ea108156e5863a6a5d4208f4b6e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "b194948ba50d941338edfde90b53618594f5f418", "commitAfterChange": "3a5401b27a838fcf33757f0b2ef8214fd68d66ea", "methodNumberBeforeChange": 144, "methodNumberAfterChange": 144, "signatureBeforeChange": " \tprotected int[] retrieveEndOfElementTypeNamePosition(int start, int end)", "signatureAfterChange": " \tprotected int[] retrieveEndOfElementTypeNamePosition(int start, int end)", "diff": ["-\t\tboolean isAnnotation = false;", "-\t\t\t\t\tcase TerminalTokens.TokenNameAT:", "-\t\t\t\t\t\tisAnnotation = true;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tif (isAnnotation) {", "-\t\t\t\t\t\t\tisAnnotation = false;", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\t//$FALL-THROUGH$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a23d109491e2eefc5cc9a930ddce1f21", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "54bfec2a779f774d0ec94918b11965f709f8eea7", "commitAfterChange": "07b0f1c60d56e715370df7f24af276bdb1cfa324", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": " public org.eclipse.jdt.core.dom.CompilationUnit reconcile( \tint astLevel, \tboolean forceProblemDetection, \tWorkingCopyOwner workingCopyOwner, \tIProgressMonitor monitor) \tthrows JavaModelException", "signatureAfterChange": " public org.eclipse.jdt.core.dom.CompilationUnit reconcile( \tint astLevel, \tboolean forceProblemDetection, \tWorkingCopyOwner workingCopyOwner, \tIProgressMonitor monitor) \tthrows JavaModelException", "diff": ["-\tboolean createAST = false;", "-\tswitch(astLevel) {", "-\t\tcase JLS2_INTERNAL :", "-\t\tcase AST.JLS3 :", "-\t\t\t// client asking for level 2 or level 3 ASTs; these are supported", "-\t\t\tcreateAST = true;", "-\t\t\tbreak;", "-\t\tdefault:", "-\t\t\t// client asking for no AST (0) or unknown ast level", "-\t\t\t// either way, request denied", "-\t\t\tcreateAST = false;", "-\t}", "-\tReconcileWorkingCopyOperation op = new ReconcileWorkingCopyOperation(this, createAST, astLevel, forceProblemDetection, workingCopyOwner);", "+\tReconcileWorkingCopyOperation op = new ReconcileWorkingCopyOperation(this, astLevel, forceProblemDetection, workingCopyOwner);"]}], "num": 121}