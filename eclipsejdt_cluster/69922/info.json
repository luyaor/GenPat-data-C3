{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a2ed4181646bcfcf72427e225b76ed43", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31970702e26b9118939f5b72f0d552e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "c223ae053787e6c843ac82068147df20215c916b", "commitAfterChange": "0211ebf94321d48ca7e59da13d2b4b3ea6399b61", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void annotationValueMustBeArrayInitializer(Expression value)", "signatureAfterChange": " public void annotationValueMustBeArrayInitializer(TypeBinding annotationType, char[] name, Expression value)", "diff": ["-public void annotationValueMustBeArrayInitializer(Expression value) {", "+public void annotationValueMustBeArrayInitializer(TypeBinding annotationType, char[] name, Expression value) {", "+\tString str = new String(name);", "-\t\t\tIProblem.AnnotationValueMustBeArrayInitializer,", "-\t\t\tNoArgument,", "-\t\t\tNoArgument,", "-\t\t\tvalue.sourceStart,", "-\t\t\tvalue.sourceEnd);", "+    \tIProblem.AnnotationValueMustBeArrayInitializer,", "+\t\tnew String[] { new String(annotationType.readableName()), str },", "+\t\tnew String[] { new String(annotationType.shortReadableName()), str},", "+    \tvalue.sourceStart,", "+    \tvalue.sourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33d270e7818b68f6d2423a7bec5100be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void bytecodeExceeds64KLimit(AbstractMethodDeclaration location)", "signatureAfterChange": " public void bytecodeExceeds64KLimit(AbstractMethodDeclaration location)", "diff": ["+}", "-\tString[] arguments = new String[] {new String(location.selector), parametersAsString(location.binding)};", "-\t\t\targuments,", "-\t\t\targuments,", "+\t\t\tnew String[] {new String(location.selector), parametersAsString(location.binding.parameters, false)},", "+\t\t\tnew String[] {new String(location.selector), parametersAsString(location.binding.parameters, true)},", "-\t\t\targuments,", "-\t\t\targuments,", "+\t\t\tnew String[] {new String(location.selector), parametersAsString(location.binding.parameters, false)},", "+\t\t\tnew String[] {new String(location.selector), parametersAsString(location.binding.parameters, true)},"]}], "num": 69922}