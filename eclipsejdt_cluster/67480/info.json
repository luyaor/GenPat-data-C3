{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0d16e4b0a4d5f2df834facc81355e2df", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "604c5fde20b8ebd00d9edd6f534d3588", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "eb8ff17bc6a4c089f6c00a5badad5718fa28cd79", "commitAfterChange": "d3e6029f226e57b7734384693084bdc4781449fa", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " \t \tpublic void setAutoBuilding(boolean value)", "signatureAfterChange": " \t \tpublic void setAutoBuilding(boolean value)", "diff": ["-\t\tIWorkspace w = getWorkspace();", "-\t\tIWorkspaceDescription d = w.getDescription();", "-\t\td.setAutoBuilding(value);", "+\t\ttry {", "+\t\t\tIWorkspace w = getWorkspace();", "+\t\t\tIWorkspaceDescription d = w.getDescription();", "+\t\t\td.setAutoBuilding(value);", "+\t\t\tw.setDescription(d);", "+\t\t} catch (CoreException e) {", "+\t\t\te.printStackTrace();", "+\t\t\tcheckAssertion(\"CoreException\", false); //$NON-NLS-1$", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "954c96bcee47fd8e72fd7f15b3b1be7a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "82e38714e3cc40f0c2983bf6e0392b987ccce94e", "commitAfterChange": "6f52e55dfcdb3767d3e0659e7f3cf8875e7f6b50", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " \tpublic boolean visit(AssertStatement node)", "signatureAfterChange": " \tpublic boolean visit(AssertStatement node)", "diff": ["-\t\tif (!hasChildrenChanges(node)) {", "-\t\t\treturn doVisitUnchangedChildren(node);", "+\t\ttry {", "+\t\t\tthis.beforeRequiredSpaceIndex = getScanner().getNextEndOffset(node.getStartPosition(), true);", "+\t\t\t", "+\t\t\tif (!hasChildrenChanges(node)) {", "+\t\t\t\treturn doVisitUnchangedChildren(node);", "+\t\t\t}", "+\t\t\t", "+\t\t\tensureSpaceBeforeReplace(node);", "+\t\t\t", "+\t\t\tint offset= rewriteRequiredNode(node, AssertStatement.EXPRESSION_PROPERTY);", "+\t\t\trewriteNode(node, AssertStatement.MESSAGE_PROPERTY, offset, ASTRewriteFormatter.ASSERT_COMMENT);", "+\t\t} catch (CoreException e) {", "+\t\t\thandleException(e);", "-", "-\t\tensureSpaceBeforeReplace(node, AssertStatement.EXPRESSION_PROPERTY, node.getStartPosition(), 1);", "-\t\tint offset= rewriteRequiredNode(node, AssertStatement.EXPRESSION_PROPERTY);", "-\t\trewriteNode(node, AssertStatement.MESSAGE_PROPERTY, offset, ASTRewriteFormatter.ASSERT_COMMENT);"]}], "num": 67480}