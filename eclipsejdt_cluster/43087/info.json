{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2a94398ecf982dfc1f388245e788d995", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c0a8da1b51d7339d8e87c6817d52a76", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.java", "commitBeforeChange": "a53da0027d2af09b928dca6fa330419b46afa0ca", "commitAfterChange": "792caf681810140ce615d98d3abfdde62639719c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void resolve(BlockScope scope)", "signatureAfterChange": " \tpublic void resolve(BlockScope scope)", "diff": ["-\t\tscope.validateNullAnnotation(this.binding.tagBits, this.type, this.annotations);", "+\t\tif (!scope.validateNullAnnotation(this.binding.tagBits, this.type, this.annotations))", "+\t\t\tthis.binding.tagBits &= ~TagBits.AnnotationNullMASK;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "852df1099ef9175e2caac7c4ba710d91", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "6aa15157c4a89778b30fbac85a8e1c76029da034", "commitAfterChange": "d40b3c41bcebac07f42f1f11c9b679087cfd1515", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \tprivate static TypeBinding mergeAnnotationsIntoType(BlockScope scope, AnnotationBinding[] se8Annotations, long se8nullBits, Annotation se8NullAnnotation, \t\t\tTypeReference typeRef, TypeBinding existingType)", "signatureAfterChange": "  \tprivate static TypeBinding mergeAnnotationsIntoType(BlockScope scope, AnnotationBinding[] se8Annotations, long se8nullBits, Annotation se8NullAnnotation, \t\t\tTypeReference typeRef, TypeBinding existingType)", "diff": ["+\t\t\t\tse8nullBits = 0;", "+\t\tif (se8nullBits != 0 && oldLeafType.isBaseType()) {", "+\t\t\tscope.problemReporter().illegalAnnotationForBaseType(typeRef, new Annotation[] { se8NullAnnotation }, se8nullBits);", "+\t\t\treturn existingType;", "+\t\t}"]}], "num": 43087}