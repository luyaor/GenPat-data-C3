{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "47e4737a434c3bc85eb7fec2594997f9", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37af3fb1badfdf38e6d3f25ba8b8074a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "c99e3bd7df24eb7b0133eb18cfef3f12a0f60a4d", "commitAfterChange": "639c767e46ba1affc29fe53d2703bf4af137793b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic Compiler( \t\t\tINameEnvironment environment, \t\t\tIErrorHandlingPolicy policy, \t\t\tMap settings, \t\t\tfinal ICompilerRequestor requestor, \t\t\tIProblemFactory problemFactory, \t\t\tboolean statementsRecovery)", "signatureAfterChange": " \tpublic Compiler( \t\tINameEnvironment environment, \t\tIErrorHandlingPolicy policy, \t\tCompilerOptions options, \t\tfinal ICompilerRequestor requestor, \t\tIProblemFactory problemFactory)", "diff": ["-\t\t\tINameEnvironment environment,", "-\t\t\tIErrorHandlingPolicy policy,", "-\t\t\tMap settings,", "-\t\t\tfinal ICompilerRequestor requestor,", "-\t\t\tIProblemFactory problemFactory,", "-\t\t\tboolean statementsRecovery) {", "-\t\tthis(environment, policy, settings,\trequestor, problemFactory, ", "-\t\t\t\tnull, false, false, false, statementsRecovery); // all defaults", "+\t\tINameEnvironment environment,", "+\t\tIErrorHandlingPolicy policy,", "+\t\tCompilerOptions options,", "+\t\tfinal ICompilerRequestor requestor,", "+\t\tIProblemFactory problemFactory) {", "+\t\tthis(environment, policy, options, requestor, problemFactory, null); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7542a6f6ac335e20b5074ab08b94812", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "c99e3bd7df24eb7b0133eb18cfef3f12a0f60a4d", "commitAfterChange": "639c767e46ba1affc29fe53d2703bf4af137793b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic CompilationUnitResolver( \t\tINameEnvironment environment, \t\tIErrorHandlingPolicy policy, \t\tMap settings, \t\tICompilerRequestor requestor, \t\tIProblemFactory problemFactory, \t\tboolean statementsRecovery, \t\tIProgressMonitor monitor)", "signatureAfterChange": " \tpublic CompilationUnitResolver( \t\tINameEnvironment environment, \t\tIErrorHandlingPolicy policy, \t\tCompilerOptions compilerOptions, \t\tICompilerRequestor requestor, \t\tIProblemFactory problemFactory, \t\tIProgressMonitor monitor)", "diff": ["-\t\tMap settings,", "+\t\tCompilerOptions compilerOptions,", "-\t\tboolean statementsRecovery,", "-\t\tsuper(environment, policy, settings, requestor, problemFactory, false, true/*store annotations in the bindings*/, statementsRecovery);", "+\t\tsuper(environment, policy, compilerOptions, requestor, problemFactory);"]}], "num": 26610}