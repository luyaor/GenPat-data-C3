{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3ec579eb898c71d547af9d0ac89b20ea", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "604ebd0b61a09341a2a88a9a50bd5388", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/src/org/eclipse/jdt/compiler/apt/tests/MessagerTests.java", "commitBeforeChange": "7c18a9763024ad321fbd37c2e6b52a79b1b2fb7c", "commitAfterChange": "42f7a750991845ea38763c1731c7ef38a727c093", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void testMessagerWithEclipseCompiler() throws IOException", "signatureAfterChange": " \tpublic void testMessagerWithEclipseCompiler() throws IOException", "diff": ["-\t\tassertEquals(\"Wrong number of reported errors\", 4, diagnosticListener.errors);", "+\t\tassertEquals(\"Wrong number of reported errors\", 5, diagnosticListener.count);", "+\t\t@SuppressWarnings(\"unchecked\")", "+\t\tDiagnostic<JavaFileObject> diag = (Diagnostic<JavaFileObject>) diagnosticListener.getErrorAt(2);", "+\t\tJavaFileObject fileObject = diag.getSource();", "+\t\tCharSequence content = fileObject.getCharContent(true);", "+\t\tString marker = content.subSequence((int) diag.getStartPosition(), (int) diag.getEndPosition() + 1).toString();", "+\t\tassertEquals(\"Wrong error postion\", \"@Nested\", marker);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8e1fac67ba28f44ac9171b65627e61c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "38ba25f168c7acf635d77bba5aaaeec79c36b17a", "commitAfterChange": "ec02b9dda2c87a39ab62083bd3e65fe902c5bf37", "methodNumberBeforeChange": 236, "methodNumberAfterChange": 236, "signatureBeforeChange": " \tpublic void test0222() throws JavaModelException", "signatureAfterChange": " \tpublic void test0222() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Wrong size\", 1, statements.size());", "+\t\tassertEquals(\"Wrong size\", 2, statements.size());", "+\t\tStatement statement = (Statement) statements.get(1);", "+\t\tassertEquals(\"Not an enhanced for statement\", ASTNode.ENHANCED_FOR_STATEMENT, statement.getNodeType());", "+\t\tEnhancedForStatement forStatement = (EnhancedForStatement) statement;", "+\t\tExpression expression = forStatement.getExpression();", "+\t\tassertNotNull(\"No expression\", expression);", "+\t\tassertEquals(\"Not a method invocation\", ASTNode.METHOD_INVOCATION, expression.getNodeType());", "+\t\t"]}], "num": 11411}