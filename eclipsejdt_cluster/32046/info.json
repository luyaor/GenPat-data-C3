{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f4f592801cfbcf39ee8d4f3ee8d1746", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1216f31213f90c6364a1faca011015dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " protected void addNewEntry(ArrayList paths, String currentClasspathName, \t\tArrayList currentRuleSpecs, String customEncoding, \t\tString destPath, boolean isSourceOnly, \t\tboolean rejectDestinationPathOnJars) throws InvalidInputException", "signatureAfterChange": " protected void addNewEntry(ArrayList paths, String currentClasspathName, \t\tArrayList currentRuleSpecs, String customEncoding, \t\tString destPath, boolean isSourceOnly, \t\tboolean rejectDestinationPathOnJars) throws InvalidInputException", "diff": ["-\t\t\t(currentClasspathName.endsWith(\".jar\") || //$NON-NLS-1$", "-\t\t\t\tcurrentClasspathName.endsWith(\".zip\"))) { //$NON-NLS-1$", "+\t\t\tUtil.isPotentialZipArchive(currentClasspathName)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39cfda2efebec8486cd9e8ff76d3900e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/FileSystem.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public static Classpath getClasspath(String classpathName, String encoding, \t\tboolean isSourceOnly, AccessRuleSet accessRuleSet, \t\tString destinationPath)", "signatureAfterChange": " public static Classpath getClasspath(String classpathName, String encoding, \t\tboolean isSourceOnly, AccessRuleSet accessRuleSet, \t\tString destinationPath)", "diff": ["-\t\tString lowercaseClasspathName = classpathName.toLowerCase();", "-\t\tif (lowercaseClasspathName.endsWith(SUFFIX_STRING_jar)", "-\t\t\t\t|| lowercaseClasspathName.endsWith(SUFFIX_STRING_zip)) {", "+\t\tif (Util.isPotentialZipArchive(classpathName)) {"]}], "num": 32046}