{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d76cde641360b0c1b9d6a11ba9ecc72d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "565a3bd2afb37c15f090620fdf00c3fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 110, "signatureBeforeChange": " \tpublic void _test0118_while()", "signatureAfterChange": " public void test0408_while()", "diff": ["-\t// TODO (maxime) fix", "-\tpublic void _test0118_while() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\"\t\t Object o = null,\\n\" + ", "-\t\t\t\t\"\t\t        u = new Object(),\\n\" + ", "-\t\t\t\t\"\t\t        v = new Object();\\n\" + ", "-\t\t\t\t\"\t\t while (o == null) {\\n\" +", "-\t\t\t\t\"\t\t   if (v == null) {\\n\" +", "-\t\t\t\t\"\t\t     o = new Object();\\n\" +", "-\t\t\t\t\"\t\t   };\\n\" +", "-\t\t\t\t\"\t\t   if (u == null) {\\n\" +", "-\t\t\t\t\"\t\t     v = null;\\n\" +", "-\t\t\t\t\"\t\t   };\\n\" +", "-\t\t\t\t\"\t\t   u = null;\\n\" +", "-\t\t\t\t\"\t\t }\\n\" +", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"\"  ", "-\t\t);", "-\t}", "+// null analysis", "+public void test0408_while() {", "+\tthis.runConformTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\"    Object o = null,\\n\" + ", "+\t\t\t\"           u = new Object(),\\n\" + ", "+\t\t\t\"           v = new Object();\\n\" + ", "+\t\t\t\"    while (o == null) {\\n\" +", "+\t\t\t\"      if (v == null) {\\n\" +", "+\t\t\t\"        o = new Object();\\n\" +", "+\t\t\t\"      };\\n\" +", "+\t\t\t\"      if (u == null) {\\n\" +", "+\t\t\t\"        v = null;\\n\" +", "+\t\t\t\"      };\\n\" +", "+\t\t\t\"      u = null;\\n\" +", "+\t\t\t\"    }\\n\" +", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71c449c2dd4c1b349113a6f324249294", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 207, "signatureBeforeChange": " \tpublic void test0239_for()", "signatureAfterChange": " public void test0719_for()", "diff": ["-\t// origin: AssignmentTest#test019", "-\tpublic void test0239_for() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t public static final char[] foo(char[] a, char c1, char c2) {\\n\" + ", "-\t\t\t\t\"\t\tchar[] r = null;\\n\" + ", "-\t\t\t\t\"\t\tfor (int i = 0, length = a.length; i < length; i++) {\\n\" + ", "-\t\t\t\t\"\t\t\tchar c = a[i];\\n\" + ", "-\t\t\t\t\"\t\t\tif (c == c1) {\\n\" + ", "-\t\t\t\t\"\t\t\t\tif (r == null) {\\n\" + ", "-\t\t\t\t\"\t\t\t\t\tr = new char[length];\\n\" + ", "-\t\t\t\t\"\t\t\t\t}\\n\" + ", "-\t\t\t\t\"\t\t\t\tr[i] = c2;\\n\" + ", "-\t\t\t\t\"\t\t\t} else if (r != null) {\\n\" + ", "-\t\t\t\t\"\t\t\t\tr[i] = c;\\n\" + ", "-\t\t\t\t\"\t\t\t}\\n\" + ", "-\t\t\t\t\"\t\t}\\n\" + ", "-\t\t\t\t\"\t\tif (r == null) return a;\\n\" + ", "-\t\t\t\t\"\t\treturn r;\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t},", "-\t}", "+// origin: AssignmentTest#test019", "+public void test0719_for() {", "+\tthis.runConformTest(", "+\t\tnew String[] {", "+\t\t\t    \"X.java\",", "+\t\t\t    \"public class X {\\n\" + ", "+\t\t\t    \"  public static final char[] foo(char[] a, char c1, char c2) {\\n\" + ", "+\t\t\t    \"   char[] r = null;\\n\" + ", "+\t\t\t    \"   for (int i = 0, length = a.length; i < length; i++) {\\n\" + ", "+\t\t\t    \"     char c = a[i];\\n\" + ", "+\t\t\t    \"     if (c == c1) {\\n\" + ", "+\t\t\t    \"       if (r == null) {\\n\" + ", "+\t\t\t    \"         r = new char[length];\\n\" + ", "+\t\t\t    \"       }\\n\" + ", "+\t\t\t    \"       r[i] = c2;\\n\" + ", "+\t\t\t    \"     } else if (r != null) {\\n\" + ", "+\t\t\t    \"       r[i] = c;\\n\" + ", "+\t\t\t    \"     }\\n\" + ", "+\t\t\t    \"   }\\n\" + ", "+\t\t\t    \"   if (r == null) return a;\\n\" + ", "+\t\t\t    \"   return r;\\n\" + ", "+\t\t\t    \" }\\n\" + ", "+\t\t\t    \"}\\n\"},", "+\t\t\"\");", "+}"]}], "num": 71494}