{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "18259faa1cecb0f2f3b709552a8f0dc6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2235a19c520770f9c494db1fb97fa125", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/ElementInfoConverter.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate TypeDeclaration convert(SourceTypeElementInfo sourceType, CompilationResult compilationResult)", "signatureAfterChange": " \tprivate TypeDeclaration convert(SourceTypeElementInfo sourceType, CompilationResult compilationResult)", "diff": ["-\t\tTypeDeclaration type;", "-\t\tboolean isAnonymous = false;", "+\t\tTypeDeclaration type = new TypeDeclaration(compilationResult);", "-\t\t\t\t\ttype = new AnonymousLocalTypeDeclaration(compilationResult);", "-\t\t\t\t\tisAnonymous = true;", "-\t\t\t\t} else if (typeHandle.isLocal()) {", "-\t\t\t\t\ttype = new LocalTypeDeclaration(compilationResult);", "+\t\t\t\t\ttype.name = TypeDeclaration.ANONYMOUS_EMPTY_NAME;", "+\t\t\t\t\ttype.bits |= ASTNode.AnonymousAndLocalMask;", "-\t\t\t\t\ttype = new TypeDeclaration(compilationResult);", "+\t\t\t\t\tif (typeHandle.isLocal()) {", "+\t\t\t\t\t\ttype.bits |= ASTNode.IsLocalTypeMASK;", "+\t\t\t\t\t}", "-\t\t\t\ttype = new TypeDeclaration(compilationResult);", "+\t\t\t\t// could not figure, assume toplevel", "-\t\t\ttype = new MemberTypeDeclaration(compilationResult);", "+\t\t\ttype.bits |= ASTNode.IsMemberTypeMASK;", "-\t\tif (!isAnonymous) {", "+\t\tif ((type.bits & ASTNode.IsAnonymousTypeMASK) == 0) {", "-\t\t} else {", "-\t\t\ttype.name = AnonymousLocalTypeDeclaration.ANONYMOUS_EMPTY_NAME;", "-\t\ttype.memberTypes = new MemberTypeDeclaration[sourceMemberTypeCount];", "+\t\ttype.memberTypes = new TypeDeclaration[sourceMemberTypeCount];", "-\t\t\ttype.memberTypes[i] =", "-\t\t\t\t(MemberTypeDeclaration) convert((SourceTypeElementInfo)sourceMemberTypes[i], compilationResult);", "+\t\t\ttype.memberTypes[i] = convert((SourceTypeElementInfo)sourceMemberTypes[i], compilationResult);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28f0402359727904d45625c7a86574fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/ElementInfoConverter.java", "commitBeforeChange": "44cc03459f9020b4da0ebdb14fa0624b7d8dfc4d", "commitAfterChange": "57799a8beed7490f3a4382e24299a6b44ffe4faf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate TypeDeclaration convert( \t\tISourceType sourceType, \t\tCompilationResult compilationResult)", "signatureAfterChange": " \tprivate TypeDeclaration convert( \t\tSourceTypeElementInfo sourceType, \t\tCompilationResult compilationResult)", "diff": ["-\t\tISourceType sourceType,", "+\t\tSourceTypeElementInfo sourceType,", "-\t\t \tif (sourceType instanceof SourceTypeElementInfo) {", "-\t\t\t\tIType typeHandle = ((SourceTypeElementInfo)sourceType).getHandle();", "-\t\t\t\ttry {", "-\t\t\t\t\tif (typeHandle.isAnonymous()) {", "-\t\t\t\t\t\ttype = new AnonymousLocalTypeDeclaration(compilationResult);", "-\t\t\t\t\t\tisAnonymous = true;", "-\t\t\t\t\t} else if (typeHandle.isLocal()) {", "-\t\t\t\t\t\ttype = new LocalTypeDeclaration(compilationResult);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\ttype = new TypeDeclaration(compilationResult);", "-\t\t\t\t\t}", "-\t\t\t\t} catch (JavaModelException e) {", "+\t\t\tIType typeHandle = ((SourceTypeElementInfo)sourceType).getHandle();", "+\t\t\ttry {", "+\t\t\t\tif (typeHandle.isAnonymous()) {", "+\t\t\t\t\ttype = new AnonymousLocalTypeDeclaration(compilationResult);", "+\t\t\t\t\tisAnonymous = true;", "+\t\t\t\t} else if (typeHandle.isLocal()) {", "+\t\t\t\t\ttype = new LocalTypeDeclaration(compilationResult);", "+\t\t\t\t} else {", "-\t\t \t} else {", "-\t\t \t\ttype = new TypeDeclaration(compilationResult);", "-\t\t \t}", "+\t\t\t} catch (JavaModelException e) {", "+\t\t\t\ttype = new TypeDeclaration(compilationResult);", "+\t\t\t}", "-\t\t\t\t(MemberTypeDeclaration) convert(sourceMemberTypes[i], compilationResult);", "+\t\t\t\t(MemberTypeDeclaration) convert((SourceTypeElementInfo)sourceMemberTypes[i], compilationResult);", "-\t\t\ttype.fields[i] = convert(sourceFields[i], type, compilationResult);", "+\t\t\ttype.fields[i] = convert((SourceFieldElementInfo)sourceFields[i], type, compilationResult);", "-\t\t\tAbstractMethodDeclaration method =convert(sourceMethods[i], compilationResult);", "+\t\t\tAbstractMethodDeclaration method =convert((SourceMethodElementInfo)sourceMethods[i], compilationResult);"]}], "num": 13242}