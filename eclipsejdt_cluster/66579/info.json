{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e8280f65798efd5f31638fdf91728d2d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ed4c875c2441b2cb2779e8bc119bcb4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayQualifiedTypeReference.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic TypeBinding getTypeBinding(Scope scope)", "signatureAfterChange": "\t \t \tprotected TypeBinding getTypeBinding(Scope scope)", "diff": ["-\tpublic TypeBinding getTypeBinding(Scope scope) {", "+\tprotected TypeBinding getTypeBinding(Scope scope) {", "-\t\treturn scope.createArray(scope.getType(tokens), dimensions);", "+\t\ttry {", "+\t\t\tTypeBinding leafComponentType = scope.getType(this.tokens, this.tokens.length);", "+\t\t\tif (leafComponentType.isParameterizedType()) {", "+\t\t\t    scope.problemReporter().illegalArrayOfParameterizedType(leafComponentType, this);", "+\t\t\t}", "+\t\t\treturn scope.createArrayType(leafComponentType, dimensions);", "+\t\t} catch (AbortCompilation e) {", "+\t\t\te.updateContext(this, scope.referenceCompilationUnit().compilationResult);", "+\t\t\tthrow e;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ea2980a912c1b7c5db71b007af4bbc5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedTypeReference.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic TypeBinding getTypeBinding(Scope scope)", "signatureAfterChange": " \t \tprotected TypeBinding getTypeBinding(Scope scope)", "diff": ["-\tpublic TypeBinding getTypeBinding(Scope scope) {", "+\tprotected TypeBinding getTypeBinding(Scope scope) {", "-\t\treturn scope.getType(tokens);", "+\t\ttry {", "+\t\t\treturn scope.getType(this.tokens, this.tokens.length);", "+\t\t} catch (AbortCompilation e) {", "+\t\t\te.updateContext(this, scope.referenceCompilationUnit().compilationResult);", "+\t\t\tthrow e;", "+\t\t}"]}], "num": 66579}