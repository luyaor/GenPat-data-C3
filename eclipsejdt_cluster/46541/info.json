{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "88ef400d4188b5dbf1e8916f91279cf7", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a0e3ce0f0fac9585e518b23da9bce70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "dbdde44f24ace4ee47bccce2cfe484eeeb8013f3", "commitAfterChange": "33bcc97ba28fd6319a8c922b4f8d989e4aab5311", "methodNumberBeforeChange": 565, "methodNumberAfterChange": 565, "signatureBeforeChange": " public void nullityMismatchingTypeAnnotation(Expression expression, TypeBinding providedType, TypeBinding requiredType, NullAnnotationMatching status)", "signatureAfterChange": " public void nullityMismatchingTypeAnnotation(Expression expression, TypeBinding providedType, TypeBinding requiredType, NullAnnotationMatching status)", "diff": ["-\tif (providedType.id == TypeIds.T_null) {", "+\t// try to improve nonnull vs. null:", "+\tif (providedType.id == TypeIds.T_null || status.nullStatus == FlowInfo.NULL) {", "-\tString[] arguments ;", "+\t// try to improve nonnull vs. nullable:", "+\tif (status.isPotentiallyNullMismatch()", "+\t\t\t&& (requiredType.tagBits & TagBits.AnnotationNonNull) != 0 ", "+\t\t\t&& (providedType.tagBits & TagBits.AnnotationNullable) == 0)", "+\t{", "+\t\tnullityMismatchPotentiallyNull(expression, requiredType, this.options.nonNullAnnotationName);", "+\t\treturn;", "+\t}", "+\tString[] arguments;", "-\tif (status.superTypeHint != null) {", "+\tif (status.superTypeHint != null && requiredType.isParameterizedType()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddb35e6c8f12c02d6a5d6882a10a46b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "c7e61e314902d7cf48e71c1a1c0437bb40107c2e", "commitAfterChange": "8a1621e802c664e59aba36b8a87f59ae57902e37", "methodNumberBeforeChange": 503, "methodNumberAfterChange": 509, "signatureBeforeChange": "  public void nullityMismatch(Expression expression, TypeBinding providedType, TypeBinding requiredType, int nullStatus, char[][] annotationName)", "signatureAfterChange": "  public void nullityMismatch(Expression expression, TypeBinding providedType, TypeBinding requiredType, int nullStatus, char[][] annotationName)", "diff": ["+\tif (expression instanceof MessageSend) {", "+\t\tif ((((MessageSend) expression).binding.tagBits & TagBits.AnnotationNullable) != 0) {", "+\t\t\tnullityMismatchSpecdNullable(expression, requiredType, this.options.nonNullAnnotationName);", "+\t\t\treturn;", "+\t\t}", "+\t}", "-\tnullityMismatchIsUnknown(expression, providedType, requiredType, annotationName);", "+\tif (this.options.sourceLevel < ClassFileConstants.JDK1_8)", "+\t\tnullityMismatchIsUnknown(expression, providedType, requiredType, annotationName);", "+\telse", "+\t\tnullityMismatchingTypeAnnotation(expression, providedType, requiredType, 2/*unchecked*/);"]}], "num": 46541}