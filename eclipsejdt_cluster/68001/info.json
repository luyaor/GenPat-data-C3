{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c887ecb621e41b8fe0995804b5efdfc5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e6cd7ec3d1f4eb7999a9be629b0dca3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " \tfinal Binding getTypeOrPackage(char[] name, int mask, boolean needResolve)", "signatureAfterChange": " \tfinal Binding getTypeOrPackage(char[] name, int mask, boolean needResolve)", "diff": ["-\t\t\t\t\t\t\tif (foundType != null && foundType != localType)", "+\t\t\t\t\t\t\tif (foundType != null && TypeBinding.notEquals(foundType, localType))", "-\t\t\t\t\t\t\t\t\tif (sourceType == memberType.enclosingType() || inheritedHasPrecedence) {", "+\t\t\t\t\t\t\t\t\tif (TypeBinding.equalsEquals(sourceType, memberType.enclosingType()) || inheritedHasPrecedence) {", "-\t\t\t\t\t\t\t\t\t\tif (foundType.isValidBinding() && foundType != memberType)", "+\t\t\t\t\t\t\t\t\t\tif (foundType.isValidBinding() && TypeBinding.notEquals(foundType, memberType))", "-\t\t\t\t\t\t\tif (foundType != null && foundType != sourceType && foundType.problemId() != ProblemReasons.NotVisible)", "+\t\t\t\t\t\t\tif (foundType != null && TypeBinding.notEquals(foundType, sourceType) && foundType.problemId() != ProblemReasons.NotVisible)", "-\t\t\t\t\t\tif (temp != type && temp != null) {", "+\t\t\t\t\t\tif (TypeBinding.notEquals(temp, type) && temp != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b81105552a8f9ad56dce7488c62ee683", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "82adc87bce1ed4088802638154568eeec8ab8e88", "commitAfterChange": "b1c69f20f23ddb575225e5b5cb5d470714f41aad", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \t \tprivate ConstraintTypeFormula combineSameSubSuper(TypeBound boundS, TypeBound boundT)", "signatureAfterChange": " \t \tprivate ConstraintTypeFormula combineSameSubSuper(TypeBound boundS, TypeBound boundT)", "diff": ["-\t\tif (alpha == boundT.left) //$IDENTITY-COMPARISON$ InferenceVariable", "+\t\tif (TypeBinding.equalsEquals(alpha,boundT.left))", "-\t\tif (alpha == boundT.right) //$IDENTITY-COMPARISON$ InferenceVariable", "+\t\tif (TypeBinding.equalsEquals(alpha, boundT.right))", "-\t\t\tif (alpha == boundT.left) //$IDENTITY-COMPARISON$ InferenceVariable", "+\t\t\tif (TypeBinding.equalsEquals(alpha, boundT.left))", "-\t\t\tif (alpha == boundT.right) //$IDENTITY-COMPARISON$ InferenceVariable", "+\t\t\tif (TypeBinding.equalsEquals(alpha, boundT.right))", "-\t\t\tTypeBinding left = (alpha == boundT.left) ? u : boundT.left; //$IDENTITY-COMPARISON$ InferenceVariable", "+\t\t\tTypeBinding left = (TypeBinding.equalsEquals(alpha, boundT.left)) ? u : boundT.left;"]}], "num": 68001}