{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9572e6302a19c4040f87d1084548f246", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ca0d78b69215e45e46776cd841f89ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "5cdd74ffbe2d421e3dae9c00346cd61d59a4698a", "commitAfterChange": "94cf6b4f7af3fd80bbff88619e21ee7974889ee5", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \t   \tpublic void resolve()", "signatureAfterChange": " \t   \tpublic void resolve()", "diff": ["-\t\t\t", "+\t\t\t// check @Deprecated annotation", "+\t\t\tif ((sourceType.getAnnotationTagBits() & TagBits.AnnotationDeprecated) == 0", "+\t\t\t\t\t&& (sourceType.modifiers & ClassFileConstants.AccDeprecated) != 0 ", "+\t\t\t\t\t&& scope.compilerOptions().sourceLevel >= ClassFileConstants.JDK1_5) {", "+\t\t\t\tscope.problemReporter().missingDeprecatedAnnotationForType(this);", "+\t\t\t}\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cc9e9275be3a1f89ca1dc3104b01406", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration.java", "commitBeforeChange": "5cdd74ffbe2d421e3dae9c00346cd61d59a4698a", "commitAfterChange": "94cf6b4f7af3fd80bbff88619e21ee7974889ee5", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  \tpublic void resolve(ClassScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(ClassScope upperScope)", "diff": ["+\t\t\t// check @Deprecated annotation presence", "+\t\t\tif (this.binding != null", "+\t\t\t\t\t&& (this.binding.getAnnotationTagBits() & TagBits.AnnotationDeprecated) == 0", "+\t\t\t\t\t&& (this.binding.modifiers & ClassFileConstants.AccDeprecated) != 0", "+\t\t\t\t\t&& this.scope.compilerOptions().sourceLevel >= ClassFileConstants.JDK1_5) {", "+\t\t\t\tthis.scope.problemReporter().missingDeprecatedAnnotationForMethod(this);", "+\t\t\t}\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d7e124615f5c86a23624762fa6d94a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MethodDeclaration.java", "commitBeforeChange": "1c0c2bf77ea7eb024038ba5150fcc9eb4dd14084", "commitAfterChange": "1cdb6c1b0fb5ba08d4e282b871474685ab8baf3f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void resolveStatements()", "signatureAfterChange": "  \tpublic void resolveStatements()", "diff": ["-\t\tif (this.binding != null ", "-\t\t\t\t&& (this.binding.tagBits & TagBits.AnnotationOverride) != 0", "-\t\t\t\t&& (this.binding.modifiers & AccOverriding) == 0) {", "-\t\t\tscope.problemReporter().methodMustOverride(this);", "+\t\tif (this.binding != null) {", "+\t\t\t// claims to override, and doesn't actually do so", "+\t\t\tif ((this.binding.tagBits & TagBits.AnnotationOverride) != 0 && (this.binding.modifiers & AccOverriding) == 0) {", "+\t\t\t\tscope.problemReporter().methodMustOverride(this);", "+\t\t\t}", "+\t\t\t// actually overrides, but did not claim to do so", "+\t\t\tif ((this.binding.tagBits & TagBits.AnnotationOverride) == 0 ", "+\t\t\t\t\t&& (this.binding.modifiers & AccOverriding) != 0", "+\t\t\t\t\t&& scope.environment().options.sourceLevel >= JDK1_5) {", "+\t\t\t\tscope.problemReporter().missingOverrideAnnotation(this);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84e9fe89036c6803cd644ed5a10c3c83", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldDeclaration.java", "commitBeforeChange": "5cdd74ffbe2d421e3dae9c00346cd61d59a4698a", "commitAfterChange": "94cf6b4f7af3fd80bbff88619e21ee7974889ee5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void resolve(MethodScope initializationScope)", "signatureAfterChange": "  \tpublic void resolve(MethodScope initializationScope)", "diff": ["-\t\t\t\t", "+\t\t\t\t// check @Deprecated annotation presence", "+\t\t\t\tif ((this.binding.getAnnotationTagBits() & TagBits.AnnotationDeprecated) == 0", "+\t\t\t\t\t\t&& (this.binding.modifiers & ClassFileConstants.AccDeprecated) != 0", "+\t\t\t\t\t\t&& initializationScope.compilerOptions().sourceLevel >= ClassFileConstants.JDK1_5) {", "+\t\t\t\t\tinitializationScope.problemReporter().missingDeprecatedAnnotationForField(this);", "+\t\t\t\t}\t\t\t\t\t\t"]}], "num": 4435}