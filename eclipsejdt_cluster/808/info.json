{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6a3914106b91071a95fbafc720e35861", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1613d69377c22e3376b5197a0ec37a71", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "9eebf1ea4bcdee9b513b93db2be706618693af15", "commitAfterChange": "e686f52588b3553d0b0ba4d48f2d54683dd7a4fd", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tprivate void findLocalMethods( \t\tchar[] methodName, \t\tTypeBinding[] argTypes, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall)", "signatureAfterChange": " \tprivate void findLocalMethods( \t\tchar[] methodName, \t\tTypeBinding[] argTypes, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall)", "diff": ["-\t\t\tif (expectedTypesPtr > -1 && method.returnType == BaseTypes.VoidBinding) continue next;", "+\t\t\t//TODO (david) perhaps the relevance of a void method must be lesser than other methods", "+\t\t\t//if (expectedTypesPtr > -1 && method.returnType == BaseTypes.VoidBinding) continue next;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cecae369a34b5bf0e9288a8a5894b1e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "ee21804c76d9045cca608d4ec10309d0029147ac", "commitAfterChange": "99e07d53808f4ab46236fb1590bb1242ac8c2a03", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tprivate void findLocalMethods( \t\tchar[] methodName, \t\tTypeBinding[] argTypes, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall)", "signatureAfterChange": " \tprivate void findLocalMethods( \t\tchar[] methodName, \t\tTypeBinding[] argTypes, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall)", "diff": ["-\t\t\t//\t\tif (noVoidReturnType && method.returnType == BaseTypes.VoidBinding) continue next;", "+\t\t\tif (expectedTypesPtr > -1 && method.returnType == BaseTypes.VoidBinding) continue next;", "+\t\t\t"]}], "num": 808}