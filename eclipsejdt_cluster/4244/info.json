{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d8fe2abaa340900be6c8f74006d531d2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "164ba52965455e188c303ca8f5858307", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "ecc7144cc9e86bed808e10ad4935bef0a2b31920", "commitAfterChange": "b92415dcd9dbdd80683f8bce8eb6ab82a2c55614", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprivate static SearchPattern createTypePattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "signatureAfterChange": " \tprivate static SearchPattern createTypePattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "diff": ["-\t\t\t\treturn new QualifiedTypeDeclarationPattern(qualificationChars, typeChars, TYPE_SUFFIX, matchRule);", "+\t\t\t\treturn new QualifiedTypeDeclarationPattern(qualificationChars, typeChars, IIndexConstants.TYPE_SUFFIX, matchRule);", "-\t\t\t\t\tnew QualifiedTypeDeclarationPattern(qualificationChars, typeChars, TYPE_SUFFIX, matchRule),// cannot search for explicit member types", "+\t\t\t\t\tnew QualifiedTypeDeclarationPattern(qualificationChars, typeChars, IIndexConstants.TYPE_SUFFIX, matchRule),// cannot search for explicit member types"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c636e71f828eec4856e82baed189d02f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "59ef64b6878c0cb93ca98a4324eecb50f2d5a305", "commitAfterChange": "01c4f4c85f9d9b5a524080e1c9f6656869c4a876", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprivate static SearchPattern createTypePattern(String patternString, int limitTo, int matchRule)", "signatureAfterChange": " \tprivate static SearchPattern createTypePattern(String patternString, int limitTo, int matchRule, char indexSuffix)", "diff": ["-\tprivate static SearchPattern createTypePattern(String patternString, int limitTo, int matchRule) {", "+\tprivate static SearchPattern createTypePattern(String patternString, int limitTo, int matchRule, char indexSuffix) {", "-\t\t\t\treturn new QualifiedTypeDeclarationPattern(qualificationChars, typeChars, IIndexConstants.TYPE_SUFFIX, matchRule);", "+\t\t\t\treturn new QualifiedTypeDeclarationPattern(qualificationChars, typeChars, indexSuffix, matchRule);", "-\t\t\t\t\tnew QualifiedTypeDeclarationPattern(qualificationChars, typeChars, IIndexConstants.TYPE_SUFFIX, matchRule),// cannot search for explicit member types", "+\t\t\t\t\tnew QualifiedTypeDeclarationPattern(qualificationChars, typeChars, indexSuffix, matchRule),// cannot search for explicit member types"]}], "num": 4244}