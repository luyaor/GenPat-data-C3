{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9470fdba921402a11fddd9356f370fc7", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "715665b08bf2b54bedb1c4511f7e776b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "ec36c5b556303647a122217dbc357a0c1ccafd42", "commitAfterChange": "a25cead90931bbc9548552bec95aa6f79a389aa3", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  protected void storeTasksFor(SourceFile sourceFile, IProblem[] tasks) throws CoreException", "signatureAfterChange": "  protected void storeTasksFor(SourceFile sourceFile, CategorizedProblem[] tasks) throws CoreException", "diff": ["-protected void storeTasksFor(SourceFile sourceFile, IProblem[] tasks) throws CoreException {", "+protected void storeTasksFor(SourceFile sourceFile, CategorizedProblem[] tasks) throws CoreException {", "-\t\tIProblem task = tasks[i];", "+\t\tCategorizedProblem task = tasks[i];", "+\t\t\tString[] extraAttributeNames = task.getExtraMarkerAttributeNames();", "+\t\t\tint extraLength = extraAttributeNames == null ? 0 : extraAttributeNames.length;", "+\t\t\tif (extraLength > 0) {", "+\t\t\t\tmarker.setAttributes(extraAttributeNames, task.getExtraMarkerAttributeValues());", "+\t\t\t}\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f7b9de70876a0c1192d9e3bd6565109", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "ec36c5b556303647a122217dbc357a0c1ccafd42", "commitAfterChange": "a25cead90931bbc9548552bec95aa6f79a389aa3", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " protected void storeProblemsFor(SourceFile sourceFile, IProblem[] problems) throws CoreException", "signatureAfterChange": " protected void storeProblemsFor(SourceFile sourceFile, CategorizedProblem[] problems) throws CoreException", "diff": ["-protected void storeProblemsFor(SourceFile sourceFile, IProblem[] problems) throws CoreException {", "+protected void storeProblemsFor(SourceFile sourceFile, CategorizedProblem[] problems) throws CoreException {", "-\t\tIProblem problem = problems[i];", "+\t\tCategorizedProblem problem = problems[i];", "+//\t\t\tTODO need to ask problem for its marker type, once they are fully managed (clean/flush) ", "+\t\t\t//IMarker marker = resource.createMarker(problem.getMarkerType());", "+\t\t\t", "+\t\t\t// standard attributes", "-\t\t\t\t\tnew Integer(ProblemReporter.getProblemCategory(id)), // category ID", "+\t\t\t\t\tnew Integer(problem.getCategoryID()), // category ID", "+\t\t\t// optional extra attributes", "+\t\t\tString[] extraAttributeNames = problem.getExtraMarkerAttributeNames();", "+\t\t\tint extraLength = extraAttributeNames == null ? 0 : extraAttributeNames.length;", "+\t\t\tif (extraLength > 0) {", "+\t\t\t\tmarker.setAttributes(extraAttributeNames, problem.getExtraMarkerAttributeValues());", "+\t\t\t}", "-", "-/* Do NOT want to populate the Java Model just to find the matching Java element.", "- * Also cannot query compilation units located in folders with invalid package", "- * names such as 'a/b.c.d/e'.", "-", "-\t\t// compute a user-friendly location", "-\t\tIJavaElement element = JavaCore.create(resource);", "-\t\tif (element instanceof org.eclipse.jdt.core.ICompilationUnit) { // try to find a finer grain element", "-\t\t\torg.eclipse.jdt.core.ICompilationUnit unit = (org.eclipse.jdt.core.ICompilationUnit) element;", "-\t\t\tIJavaElement fragment = unit.getElementAt(problem.getSourceStart());", "-\t\t\tif (fragment != null) element = fragment;", "-\t\t}", "-\t\tString location = null;", "-\t\tif (element instanceof JavaElement)", "-\t\t\tlocation = ((JavaElement) element).readableName();", "-\t\tif (location != null)", "-\t\t\tmarker.setAttribute(IMarker.LOCATION, location);", "-*/", "-"]}], "num": 28824}