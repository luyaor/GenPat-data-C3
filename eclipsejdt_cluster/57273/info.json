{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b6701d49ec32a3007c066d6af74d7de8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70595077b08fa6a74e1b7a80e0ae3742", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "a6b76fc7d7890cbbcb2fc001b8031466dd0ad995", "commitAfterChange": "8c05bff0d88a6a537ed2accc1c62c5430e927aee", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public final void addLocalType(TypeDeclaration localType)", "signatureAfterChange": " public final void addLocalType(TypeDeclaration localType)", "diff": ["-\t// check that the localType does not conflict with an enclosing type", "-\tReferenceBinding type = enclosingSourceType();", "-\tdo {", "-\t\tif (CharOperation.equals(type.sourceName, localType.name)) {", "-\t\t\tproblemReporter().hidingEnclosingType(localType);", "-\t\t\treturn;", "-\t\t}", "-\t\ttype = type.enclosingType();", "-\t} while (type != null);", "-", "-\t// check that the localType does not conflict with another sibling local type", "-\tScope scope = this;", "-\tdo {", "-\t\tif (((BlockScope) scope).findLocalType(localType.name) != null) {", "-\t\t\tproblemReporter().duplicateNestedType(localType);", "-\t\t\treturn;", "-\t\t}", "-\t} while ((scope = scope.parent) instanceof BlockScope);", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92830ab5b8bd8416fe4833dcfab4f3c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "4aa9bc6aa2cb666fb0721f9b95f7c7e969829a0c", "commitAfterChange": "39745a85705361f7e5b8ca890f80a07d85799adc", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r void recordTypeReference(TypeBinding type)", "signatureAfterChange": "\r void recordTypeReference(TypeBinding type)", "diff": ["-\t\tReferenceBinding actualtype = (ReferenceBinding) type;\r", "-\t\trecordReference(actualtype.compoundName);\r", "-\t\tif (actualtype.enclosingType() != null)\r", "-\t\t\trecordTypeReference(actualtype.enclosingType());\r", "-\t\tif (actualtype.superclass() != null)\r", "-\t\t\trecordTypeReference(actualtype.superclass());\r", "-\t\tReferenceBinding[] interfaces = actualtype.superInterfaces();\r", "+\t\tReferenceBinding actualType = (ReferenceBinding) type;\r", "+\t\trecordReference(actualType.isNestedType()\r", "+\t\t\t? CharOperation.splitOn('.', actualType.readableName())\r", "+\t\t\t: actualType.compoundName);\r", "+\t\tif (actualType.enclosingType() != null)\r", "+\t\t\trecordTypeReference(actualType.enclosingType());\r", "+\t\tif (actualType.superclass() != null)\r", "+\t\t\trecordTypeReference(actualType.superclass());\r", "+\t\tReferenceBinding[] interfaces = actualType.superInterfaces();\r"]}], "num": 57273}