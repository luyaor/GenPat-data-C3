{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dabd1ac95af206d35efd3d0c83f9158e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c5368038023e705c4f5080e1c1dfc6a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 131, "signatureBeforeChange": " \tprivate int retrieveRightBracketPosition(int start, int end)", "signatureAfterChange": " \tprotected int retrieveRightBracketPosition(int start, int end)", "diff": ["-\t */", "-\tprivate int retrieveRightBracketPosition(int start, int end) {", "-\t\tthis.scanner.resetTo(start, end);", "-\t\ttry {", "-\t\t\tint token;", "-\t\t\twhile ((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF) {", "-\t\t\t\tswitch(token) {", "-\t\t\t\t\tcase TerminalTokens.TokenNameRBRACKET:", "-\t\t\t\t\t\treturn this.scanner.currentPosition - 1;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t} catch(InvalidInputException e) {", "-\t\t\t// ignore", "-\t\t}", "-\t\treturn -1;", "-\t}", "+\t */", "+\tprotected int retrieveRightBracketPosition(int start, int end) {", "+\t\tthis.scanner.resetTo(start, end);", "+\t\ttry {", "+\t\t\tint token;", "+\t\t\twhile ((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF) {", "+\t\t\t\tswitch(token) {", "+\t\t\t\t\tcase TerminalTokens.TokenNameRBRACKET:", "+\t\t\t\t\t\treturn this.scanner.currentPosition - 1;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} catch(InvalidInputException e) {", "+\t\t\t// ignore", "+\t\t}", "+\t\treturn -1;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a6caa1350f367387b8a5cbfad32cc39", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 125, "signatureBeforeChange": "  \tprivate void retrieveIdentifierAndSetPositions(int start, int end, Name name)", "signatureAfterChange": "  \tprotected void retrieveIdentifierAndSetPositions(int start, int end, Name name)", "diff": ["-", "-\tprivate void retrieveIdentifierAndSetPositions(int start, int end, Name name) {", "-\t\tthis.scanner.resetTo(start, end);", "-\t\tint token;", "-\t\ttry {", "-\t\t\twhile((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF)  {", "-\t\t\t\tif (token == TerminalTokens.TokenNameIdentifier) {", "-\t\t\t\t\tint startName = this.scanner.startPosition;", "-\t\t\t\t\tint endName = this.scanner.currentPosition - 1;", "-\t\t\t\t\tname.setSourceRange(startName, endName - startName + 1);", "-\t\t\t\t\treturn;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t} catch(InvalidInputException e) {", "-\t\t\t// ignore", "-\t\t}", "-\t}", "+", "+\tprotected void retrieveIdentifierAndSetPositions(int start, int end, Name name) {", "+\t\tthis.scanner.resetTo(start, end);", "+\t\tint token;", "+\t\ttry {", "+\t\t\twhile((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF)  {", "+\t\t\t\tif (token == TerminalTokens.TokenNameIdentifier) {", "+\t\t\t\t\tint startName = this.scanner.startPosition;", "+\t\t\t\t\tint endName = this.scanner.currentPosition - 1;", "+\t\t\t\t\tname.setSourceRange(startName, endName - startName + 1);", "+\t\t\t\t\treturn;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} catch(InvalidInputException e) {", "+\t\t\t// ignore", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8762bec8aadd5fe5f032ad73ee83f453", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 123, "signatureBeforeChange": " \tprivate int retrieveEndOfRightParenthesisPosition(int start, int end)", "signatureAfterChange": " \tprotected int retrieveEndOfRightParenthesisPosition(int start, int end)", "diff": ["-\t */", "-\tprivate int retrieveEndOfRightParenthesisPosition(int start, int end) {", "-\t\tthis.scanner.resetTo(start, end);", "-\t\ttry {", "-\t\t\tint token;", "-\t\t\twhile ((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF) {", "-\t\t\t\tswitch(token) {", "-\t\t\t\t\tcase TerminalTokens.TokenNameRPAREN:", "-\t\t\t\t\t\treturn this.scanner.currentPosition;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t} catch(InvalidInputException e) {", "-\t\t\t// ignore", "-\t\t}", "-\t\treturn -1;", "-\t}", "+\t */", "+\tprotected int retrieveEndOfRightParenthesisPosition(int start, int end) {", "+\t\tthis.scanner.resetTo(start, end);", "+\t\ttry {", "+\t\t\tint token;", "+\t\t\twhile ((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF) {", "+\t\t\t\tswitch(token) {", "+\t\t\t\t\tcase TerminalTokens.TokenNameRPAREN:", "+\t\t\t\t\t\treturn this.scanner.currentPosition;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} catch(InvalidInputException e) {", "+\t\t\t// ignore", "+\t\t}", "+\t\treturn -1;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a83bd49536f65e64659e92cc7a3dcaaa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "f316b069838038f8089cd2fbc2dd1992644b54d4", "commitAfterChange": "0eaa2ed8772f78cbf0083fde09091e98f1f6a2b1", "methodNumberBeforeChange": 142, "methodNumberAfterChange": 151, "signatureBeforeChange": " \tprotected int retrieveEndBlockPosition(int start, int end)", "signatureAfterChange": " \t \tprotected int retrieveProperRightBracketPosition(int bracketNumber, int start)", "diff": ["-\t */", "-\tprotected int retrieveEndBlockPosition(int start, int end) {", "-\t\tthis.scanner.resetTo(start, end);", "-\t\tint count = 0;", "-\t\ttry {", "-\t\t\tint token;", "-\t\t\twhile ((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF) {", "-\t\t\t\tswitch(token) {", "-\t\t\t\t\tcase TerminalTokens.TokenNameLBRACE://110", "-\t\t\t\t\t\tcount++;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase TerminalTokens.TokenNameRBRACE://95", "-\t\t\t\t\t\tcount--;", "-\t\t\t\t\t\tif (count == 0) {", "-\t\t\t\t\t\t\treturn this.scanner.currentPosition - 1;", "-\t\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t} catch(InvalidInputException e) {", "-\t\t\t// ignore", "-\t\t}", "-\t\treturn -1;", "-\t}", "+\t", "+\tprotected int retrieveProperRightBracketPosition(int bracketNumber, int start) {", "+\t\treturn retrieveProperRightBracketPosition(bracketNumber, start, this.compilationUnitSourceLength);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfc86be3367626e2163b9ee32e6628cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 128, "signatureBeforeChange": "  \tprivate int retrieveProperRightBracketPosition(int bracketNumber, int start, int end)", "signatureAfterChange": "  \tprotected int retrieveProperRightBracketPosition(int bracketNumber, int start, int end)", "diff": ["-", "-\tprivate int retrieveProperRightBracketPosition(int bracketNumber, int start, int end) {", "-\t\tthis.scanner.resetTo(start, end);", "-\t\ttry {", "-\t\t\tint token, count = 0;", "-\t\t\twhile ((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF) {", "-\t\t\t\tswitch(token) {", "-\t\t\t\t\tcase TerminalTokens.TokenNameRBRACKET:", "-\t\t\t\t\t\tcount++;", "-\t\t\t\t\t\tif (count == bracketNumber) {", "-\t\t\t\t\t\t\treturn this.scanner.currentPosition - 1;", "-\t\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t} catch(InvalidInputException e) {", "-\t\t\t// ignore", "-\t\t}", "-\t\treturn -1;", "-\t}", "+", "+\tprotected int retrieveProperRightBracketPosition(int bracketNumber, int start, int end) {", "+\t\tthis.scanner.resetTo(start, end);", "+\t\ttry {", "+\t\t\tint token, count = 0;", "+\t\t\twhile ((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF) {", "+\t\t\t\tswitch(token) {", "+\t\t\t\t\tcase TerminalTokens.TokenNameRBRACKET:", "+\t\t\t\t\t\tcount++;", "+\t\t\t\t\t\tif (count == bracketNumber) {", "+\t\t\t\t\t\t\treturn this.scanner.currentPosition - 1;", "+\t\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} catch(InvalidInputException e) {", "+\t\t\t// ignore", "+\t\t}", "+\t\treturn -1;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbfc4318c40d41fd086e23a64f7520c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 119, "signatureBeforeChange": " \tprivate int retrieveEndBlockPosition(int start, int end)", "signatureAfterChange": " \tprotected int retrieveEndBlockPosition(int start, int end)", "diff": ["-\t */", "-\tprivate int retrieveEndBlockPosition(int start, int end) {", "-\t\tthis.scanner.resetTo(start, end);", "-\t\tint count = 0;", "-\t\ttry {", "-\t\t\tint token;", "-\t\t\twhile ((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF) {", "-\t\t\t\tswitch(token) {", "-\t\t\t\t\tcase TerminalTokens.TokenNameLBRACE://110", "-\t\t\t\t\t\tcount++;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase TerminalTokens.TokenNameRBRACE://95", "-\t\t\t\t\t\tcount--;", "-\t\t\t\t\t\tif (count == 0) {", "-\t\t\t\t\t\t\treturn this.scanner.currentPosition - 1;", "-\t\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t} catch(InvalidInputException e) {", "-\t\t\t// ignore", "-\t\t}", "-\t\treturn -1;", "-\t}", "+\t */", "+\tprotected int retrieveEndBlockPosition(int start, int end) {", "+\t\tthis.scanner.resetTo(start, end);", "+\t\tint count = 0;", "+\t\ttry {", "+\t\t\tint token;", "+\t\t\twhile ((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF) {", "+\t\t\t\tswitch(token) {", "+\t\t\t\t\tcase TerminalTokens.TokenNameLBRACE://110", "+\t\t\t\t\t\tcount++;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase TerminalTokens.TokenNameRBRACE://95", "+\t\t\t\t\t\tcount--;", "+\t\t\t\t\t\tif (count == 0) {", "+\t\t\t\t\t\t\treturn this.scanner.currentPosition - 1;", "+\t\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} catch(InvalidInputException e) {", "+\t\t\t// ignore", "+\t\t}", "+\t\treturn -1;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc1206cff878b3faba629bf8c303407b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 126, "signatureBeforeChange": " \tprivate int retrieveIdentifierEndPosition(int start, int end)", "signatureAfterChange": " \tprotected int retrieveIdentifierEndPosition(int start, int end)", "diff": ["-\t */", "-\tprivate int retrieveIdentifierEndPosition(int start, int end) {", "-\t\tthis.scanner.resetTo(start, end);", "-\t\ttry {", "-\t\t\tint token;", "-\t\t\twhile ((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF) {", "-\t\t\t\tswitch(token) {", "-\t\t\t\t\tcase TerminalTokens.TokenNameIdentifier://110", "-\t\t\t\t\t\treturn this.scanner.getCurrentTokenEndPosition();", "-\t\t\t\t}", "-\t\t\t}", "-\t\t} catch(InvalidInputException e) {", "-\t\t\t// ignore", "-\t\t}", "-\t\treturn -1;", "-\t}\t", "+\t */", "+\tprotected int retrieveIdentifierEndPosition(int start, int end) {", "+\t\tthis.scanner.resetTo(start, end);", "+\t\ttry {", "+\t\t\tint token;", "+\t\t\twhile ((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF) {", "+\t\t\t\tswitch(token) {", "+\t\t\t\t\tcase TerminalTokens.TokenNameIdentifier://110", "+\t\t\t\t\t\treturn this.scanner.getCurrentTokenEndPosition();", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} catch(InvalidInputException e) {", "+\t\t\t// ignore", "+\t\t}", "+\t\treturn -1;", "+\t}\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe2c8d4149cc9116fe05fcf189a83a44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 118, "signatureBeforeChange": " \tprivate void retrieveColonPosition(ASTNode node)", "signatureAfterChange": " \tprotected void retrieveColonPosition(ASTNode node)", "diff": ["-\t */", "-\tprivate void retrieveColonPosition(ASTNode node) {", "-\t\tint start = node.getStartPosition();", "-\t\tint length = node.getLength();", "-\t\tint end = start + length;", "-\t\tthis.scanner.resetTo(end, this.compilationUnitSource.length);", "-\t\ttry {", "-\t\t\tint token;", "-\t\t\twhile ((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF) {", "-\t\t\t\tswitch(token) {", "-\t\t\t\t\tcase TerminalTokens.TokenNameCOLON:", "-\t\t\t\t\t\tnode.setSourceRange(start, this.scanner.currentPosition - start);", "-\t\t\t\t\t\treturn;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t} catch(InvalidInputException e) {", "-\t\t\t// ignore", "-\t\t}", "-\t}", "+\t */", "+\tprotected void retrieveColonPosition(ASTNode node) {", "+\t\tint start = node.getStartPosition();", "+\t\tint length = node.getLength();", "+\t\tint end = start + length;", "+\t\tthis.scanner.resetTo(end, this.compilationUnitSource.length);", "+\t\ttry {", "+\t\t\tint token;", "+\t\t\twhile ((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF) {", "+\t\t\t\tswitch(token) {", "+\t\t\t\t\tcase TerminalTokens.TokenNameCOLON:", "+\t\t\t\t\t\tnode.setSourceRange(start, this.scanner.currentPosition - start);", "+\t\t\t\t\t\treturn;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} catch(InvalidInputException e) {", "+\t\t\t// ignore", "+\t\t}", "+\t}"]}], "num": 59295}