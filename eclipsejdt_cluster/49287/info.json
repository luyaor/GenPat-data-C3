{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0e0e3d93adc45d41e2cc3a44b8d4c73c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50087a05f46937684960fefc782e6cbd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "5103cbbe93dc06e237ba05a89fd826d834ad4e54", "commitAfterChange": "36f7c1e916ce794f19c8c7bfc5e63afd70aa3df0", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 71, "signatureBeforeChange": " \tpublic boolean visit( \t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\tCompilationUnitScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\tCompilationUnitScope scope)", "diff": ["+\t\t\tint savedNumberOfLineToPreserve = this.preferences.number_of_empty_lines_to_preserve;", "-\t\t\t\timports[0].traverse(this, scope);", "-\t\t\t\tint savedNumberOfLineToPreserve = this.preferences.number_of_empty_lines_to_preserve;", "-\t\t\t\tthis.preferences.number_of_empty_lines_to_preserve = this.preferences.blank_lines_between_import_groups;", "-    \t\t\tfor (int i = 1; i < importLength; i++) {", "-    \t\t\t\timports[i].traverse(this, scope);", "+\t\t\t\tformat(imports[0], false);", "+    \t\t\tfor (int i = 1; i < importLength - 1; i++) {", "+    \t\t\t\tformat(imports[i], false);", "+    \t\t\tformat(imports[importLength - 1], true);", "-\t\t\t\timports[0].traverse(this, scope);", "+\t\t\t\tformat(imports[0], true);", "+\t\t\tthis.preferences.number_of_empty_lines_to_preserve = savedNumberOfLineToPreserve;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b039d0e45f45d26637262b181dbed92", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "6dbf227f3909a5c9be3f2b1942d08bb2a333adf5", "commitAfterChange": "1007c186f9f6b762c7a99cc47620c05dbb87ab5f", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " \tpublic boolean visit( \t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\tCompilationUnitScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\tCompilationUnitScope scope)", "diff": ["-\t\t\tfor (int i = 0; i < importLength; i++) {", "-\t\t\t\timports[i].traverse(this, scope);", "-\t\t\t}\t\t\t", "+\t\t\tif (importLength != 1) {", "+\t\t\t\timports[0].traverse(this, scope);", "+\t\t\t\tint savedNumberOfLineToPreserve = this.preferences.number_of_empty_lines_to_preserve;", "+\t\t\t\tthis.preferences.number_of_empty_lines_to_preserve = this.preferences.blank_lines_between_import_groups;", "+    \t\t\tfor (int i = 1; i < importLength; i++) {", "+    \t\t\t\timports[i].traverse(this, scope);", "+    \t\t\t}", "+    \t\t\tthis.preferences.number_of_empty_lines_to_preserve = savedNumberOfLineToPreserve;", "+\t\t\t} else {", "+\t\t\t\timports[0].traverse(this, scope);", "+\t\t\t}"]}], "num": 49287}