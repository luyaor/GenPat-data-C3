{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2a30598ce345dce000fb49bda2283009", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ab8a12d675a1abc4cbf98b5ff6577fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "2db4687c5ebe2314a792e1cf48c59a51fac14008", "commitAfterChange": "dd1d5ebdbd32c006b28750af907d2fbaba3a454e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void checkTaskTag(int commentStart, int commentEnd) throws InvalidInputException", "signatureAfterChange": " public void checkTaskTag(int commentStart, int commentEnd) throws InvalidInputException", "diff": ["-\t\t\t\tif (isJavaIdentifierStart(tag[0])) {", "-\t\t\t\t\tif (isJavaIdentifierPart(previous)) {", "+\t\t\t\tif (Character.isJavaIdentifierStart(tag[0])) {", "+\t\t\t\t\tif (Character.isJavaIdentifierPart(previous)) {", "-\t\t\t\tif (i+tagLength < commentEnd && isJavaIdentifierPart(src[i+tagLength-1])) {", "-\t\t\t\t\tif (isJavaIdentifierPart(src[i + tagLength]))", "+\t\t\t\tif (i+tagLength < commentEnd && Character.isJavaIdentifierPart(src[i+tagLength-1])) {", "+\t\t\t\t\tif (Character.isJavaIdentifierPart(src[i + tagLength]))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7394ce2cb6059bc6911fe9d6776faf84", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "2db4687c5ebe2314a792e1cf48c59a51fac14008", "commitAfterChange": "dd1d5ebdbd32c006b28750af907d2fbaba3a454e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void checkTaskTag(int commentStart, int commentEnd) throws InvalidInputException", "signatureAfterChange": " public void checkTaskTag(int commentStart, int commentEnd) throws InvalidInputException", "diff": ["-\t\t\t\tif (isJavaIdentifierStart(tag[0])) {", "-\t\t\t\t\tif (isJavaIdentifierPart(previous)) {", "+\t\t\t\tif (Character.isJavaIdentifierStart(tag[0])) {", "+\t\t\t\t\tif (Character.isJavaIdentifierPart(previous)) {", "-\t\t\t\tif (i+tagLength < commentEnd && isJavaIdentifierPart(src[i+tagLength-1])) {", "-\t\t\t\t\tif (isJavaIdentifierPart(src[i + tagLength]))", "+\t\t\t\tif (i+tagLength < commentEnd && Character.isJavaIdentifierPart(src[i+tagLength-1])) {", "+\t\t\t\t\tif (Character.isJavaIdentifierPart(src[i + tagLength]))"]}], "num": 35104}