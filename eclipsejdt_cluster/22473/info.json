{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "becf4308b0438fd422fbc2492c45b38a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "421c56631ea760881a7bece08ba36b95", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/Engine.java", "commitBeforeChange": "02c268a4d3cda9d82648fb2a27d6f6a49334a9c9", "commitAfterChange": "445188c88d04c21eb75ec390fedf8ca63140d7dd", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tprivate ASTNode parseBlockStatements( \t\tTypeDeclaration type, \t\tCompilationUnitDeclaration unit, \t\tint position)", "signatureAfterChange": "  \tprivate ASTNode parseBlockStatements( \t\tTypeDeclaration type, \t\tCompilationUnitDeclaration unit, \t\tint position)", "diff": ["+\t\t\t\t", "+\t\t\t\tif(method.isDefaultConstructor())", "+\t\t\t\t\tcontinue;", "+\t\t\t\t", "+\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "590a902801e1a32e0ca90135f15a5f72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "e1454516411e21c76afb7797ea67208e4fc9c49d", "commitAfterChange": "85e7f681aa7d70ec863df3c9b4c8ff252b7d94c0", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic MethodBinding getExactMethod(char[] selector, TypeBinding[] argumentTypes, CompilationUnitScope refScope)", "signatureAfterChange": " \tpublic MethodBinding getExactMethod(char[] selector, TypeBinding[] argumentTypes, CompilationUnitScope refScope)", "diff": ["-\t\tif (match != null) return match;", "+\t\tif (match != null) {", "+\t\t\t// TODO (kent) tag method in verifier if it overrides a method which can cause an anonymous error", "+\t\t\tif (match.hasSubstitutedParameters()) return null; // cannot be picked up as an exact match", "+\t\t\treturn match;", "+\t\t}"]}], "num": 22473}