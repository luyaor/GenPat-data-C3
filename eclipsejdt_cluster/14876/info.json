{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "81f4f27b0f69cdf1c315a53c697663e7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a28f35d2862f06a0429360fc7ab64ddf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "837346ba964bb0d4b1f43b6b3500ddc7ecfbb966", "commitAfterChange": "f5a6b32f5440a6dc40e1353ed6c94f89e64c1de3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " private void buildMoreCompletionContext(Expression expression)", "signatureAfterChange": " private void buildMoreCompletionContext(Expression expression)", "diff": ["-\t\t\t\t", "-\t\t\tcurrentElement = currentElement.add(statement, 0);", "+\t\t\t", "+\t\t\tcurrentElement = currentElement.add(statement, 0);", "-\t\t\t\t", "-\t\t\tcurrentElement = currentElement.add(statement, 0);", "+\t\t\t", "+\t\t\tcurrentElement = currentElement.add(statement, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e94bd61f75d203e6f17ab22225f73933", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodScope.java", "commitBeforeChange": "36af4ca0b413cc401b0bc4442925b5f641f8df7a", "commitAfterChange": "15070dfb720141f260eff9f86b3742c51648d5f0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void computeLocalVariablePositions(int initOffset, CodeStream codeStream)", "signatureAfterChange": " \tpublic void computeLocalVariablePositions(int initOffset, CodeStream codeStream)", "diff": ["-\t\t\t// check for too many arguments/local variables", "-\t\t\tif (this.offset > 0xFF) { // no more than 255 words of arguments", "-\t\t\t\tthis.problemReporter().noMoreAvailableSpaceForArgument(local, local.declaration);", "-\t\t\t}", "-", "+\t\t\t}", "+\t\t\t// check for too many arguments/local variables", "+\t\t\tif (this.offset > 0xFF) { // no more than 255 words of arguments", "+\t\t\t\tthis.problemReporter().noMoreAvailableSpaceForArgument(local, local.declaration);", "-\t\t\t\tif (this.offset > 0xFF) { // no more than 255 words of arguments", "-\t\t\t\t\tthis.problemReporter().noMoreAvailableSpaceForArgument(argument, (AstNode)this.referenceContext); ", "-\t\t\t\t}", "+\t\t\t\tif (this.offset > 0xFF) { // no more than 255 words of arguments", "+\t\t\t\t\tthis.problemReporter().noMoreAvailableSpaceForArgument(argument, (AstNode)this.referenceContext); ", "+\t\t\t\t}"]}], "num": 14876}