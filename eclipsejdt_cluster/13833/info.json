{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5aff054fc73abcac21a83b490ed021d5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dcbfe565de11fa43bdfabaac81b332c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "e8318218be917238c7f3ce1175e32d65aa1ee06f", "commitAfterChange": "5f326c0ac22507f8c85192a8307f736a5ad543dd", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tif ((receiverType.tagBits & TagBits.HasWildcard) != 0) {", "-\t\t    scope.problemReporter().cannotInstantiateWithWildcards(type, (ParameterizedTypeBinding)receiverType);", "-\t\t    return this.resolvedType = receiverType;", "-\t\t}\t\t\t\t", "+//\t\tif ((receiverType.tagBits & TagBits.HasWildcard) != 0) {", "+//\t\t    scope.problemReporter().cannotInstantiateWithWildcards(type, (ParameterizedTypeBinding)receiverType);", "+//\t\t    return this.resolvedType = receiverType;", "+//\t\t}\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cc3c11864336f0109fe9212f6836931", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Reference.java", "commitBeforeChange": "c7e61e314902d7cf48e71c1a1c0437bb40107c2e", "commitAfterChange": "8a1621e802c664e59aba36b8a87f59ae57902e37", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  protected boolean checkNullableFieldDereference(Scope scope, FieldBinding field, long sourcePosition)", "signatureAfterChange": "  protected boolean checkNullableFieldDereference(Scope scope, FieldBinding field, long sourcePosition)", "diff": ["-\tif ((field.tagBits & TagBits.AnnotationNullable) != 0) {", "-\t\tscope.problemReporter().nullableFieldDereference(field, sourcePosition);", "-\t\treturn true;", "-\t}", "+\t// preference to type annotations if we have any", "+\tif ((field.tagBits & TagBits.AnnotationNullable) != 0) {", "+\t\tscope.problemReporter().nullableFieldDereference(field, sourcePosition);", "+\t\treturn true;", "+\t}"]}], "num": 13833}