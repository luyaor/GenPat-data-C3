{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "02accafb1407c9ad4a0faf4873bfe8d5", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42fa04dd8ce8a481a92d54de8b154911", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/annotations/valueconversion/ValueConversionProcessor.java", "commitBeforeChange": "a6fb7155fd890e70fc93ff099a2bfa78beffa3e9", "commitAfterChange": "dade23c0ca1cb5b996dfae1d1cfc189d06d41a6f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tprivate void assertValueTypeMatch(final String name, final Object value, final Class expectedType)", "signatureAfterChange": " \t \tprivate void assertValueTypeMatch( \t\t\tfinal String name,  \t\t\tfinal Object actualValue,  \t\t\tfinal Class expectedType, \t\t\tfinal Object expectedValue)", "diff": ["-\t", "-\tprivate void assertValueTypeMatch(final String name, final Object value, final Class expectedType)", "-\t{", "-\t\tTestCase.assertEquals(", "-\t\t\t\t\"value type mismatch for member \" + name,  //$NON-NLS-1$", "-\t\t\t\texpectedType, ", "-\t\t\t\tvalue.getClass());", "-\t}", "+\t", "+\tprivate void assertValueTypeMatch(", "+\t\t\tfinal String name, ", "+\t\t\tfinal Object actualValue, ", "+\t\t\tfinal Class expectedType,", "+\t\t\tfinal Object expectedValue)", "+\t{", "+\t\tif( actualValue != null && expectedType != actualValue.getClass() ){", "+\t\t\tfinal Messager msgr = _env.getMessager(); ", "+\t\t\tmsgr.printError(\"type mismatch for memeber \" + name + ", "+\t\t\t\t\t\" expected \" + expectedType.getName() + \" but got \" + actualValue.getClass().getName());", "+\t\t}", "+\t\telse if( !expectedValue.equals(actualValue) ){", "+\t\t\tfinal Messager msgr = _env.getMessager(); ", "+\t\t\tmsgr.printError(\"value mismatch for memeber \" + name + ", "+\t\t\t\t\t\" expected \" + expectedValue + \" but got \" + actualValue);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1f19b70fd943db247cf5ecb8c3feb35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/annotations/valueconversion/ValueConversionProcessor.java", "commitBeforeChange": "a6fb7155fd890e70fc93ff099a2bfa78beffa3e9", "commitAfterChange": "dade23c0ca1cb5b996dfae1d1cfc189d06d41a6f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t\t\t \t \t@SuppressWarnings(\"unused\" \tprivate void assertArrayValueTypeMatch(final String name, final Object value, final Class expectedElementType)", "signatureAfterChange": " \t \tprivate void assertArrayValueTypeMatch( \t\t\tfinal String name,  \t\t\tfinal List<AnnotationValue> actualValues,  \t\t\tfinal Class expectedElementType, \t\t\tfinal Object[] expectedValues)", "diff": ["-\t", "-\t@SuppressWarnings(\"unused\") //$NON-NLS-1$", "-\tprivate void assertArrayValueTypeMatch(final String name, final Object value, final Class expectedElementType)", "-\t\tTestCase.assertEquals(", "-\t\t\t\t\"annotation value type mismatch\",  //$NON-NLS-1$", "-\t\t\t\tList.class.getName(), ", "-\t\t\t\tvalue.getClass().getName());", "-\t\t@SuppressWarnings(\"unchecked\") //$NON-NLS-1$", "-\t\tfinal List<AnnotationValue> values = (List<AnnotationValue>)value;", "-\t\tfor( AnnotationValue av : values )", "-\t\t\tassertValueTypeMatch(name, av.getValue(), expectedElementType );", "+\t", "+\tprivate void assertArrayValueTypeMatch(", "+\t\t\tfinal String name, ", "+\t\t\tfinal List<AnnotationValue> actualValues, ", "+\t\t\tfinal Class expectedElementType,", "+\t\t\tfinal Object[] expectedValues)", "+\t{\t", "+\t\tint i=0;", "+\t\tfor( AnnotationValue av : actualValues ){", "+\t\t\tassertValueTypeMatch(name, av.getValue(), expectedElementType, expectedValues[i] );", "+\t\t\ti++;", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7feab131c539bb0ae0b1d5a2d58dd0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/annotations/BaseProcessor.java", "commitBeforeChange": "01d995488d5e309c6b243da146c63894a6df881d", "commitAfterChange": "13bbdd97c6c86aba0f70693f850c3de86bece79b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprotected void assertEqual(final String expected, final String actual, final String message)", "signatureAfterChange": " \t \tprotected void assertEqual(final Object expected, final Object actual, final String message)", "diff": ["+\tprotected void assertEqual(final Object expected, final Object actual, final String message) {", "+\t\tif( expected == null ){", "+\t\t\tfinal Messager msgr = _env.getMessager();", "+\t\t\tmsgr.printError(message + \" actual: \" + actual );", "+\t\t}", "+\t\telse if( actual == null ){", "+\t\t\tfinal Messager msgr = _env.getMessager();", "+\t\t\tmsgr.printError(message + \"expected \" + expected );", "+\t\t}", "+\t\telse if( !expected.equals(actual) ){", "+\t\t\tfinal Messager msgr = _env.getMessager();", "+\t\t\tmsgr.printError(message + \" expected: \" + expected + \" actual: \" + actual );", "+\t\t}", "+\t}"]}], "num": 46605}