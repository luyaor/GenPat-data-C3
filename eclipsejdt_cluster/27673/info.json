{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c6ef6ddc0cb31b481e0661b2d385b9d3", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46ff26ce75a0fb6fb16ce6296b1cd662", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeTypeAnnotationTest.java", "commitBeforeChange": "dd3bff4d99a5193497eb7e3c0e1bc46a32b7c36a", "commitAfterChange": "cc1c110e9641a2cecfab702ac9383376aefe030a", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "\r \tpublic void test036() throws Exception", "signatureAfterChange": "\r \tpublic void test036() throws Exception", "diff": ["-\t\t\"\t                       ^^^^^^^^^\\n\" + \r", "-\t\t\"Only annotation types that explicitly specify TYPE_USE as a possible target element type can be applied here\\n\" + \r", "-\t\t\"----------\\n\" + \r", "-\t\t\"3. ERROR in X.java (at line 3)\\n\" + \r", "-\t\t\"\tSystem.out.println(int @NonEmpty [] [] @NonEmpty @Empty [] [] @NonEmpty[].class); // illegal!\\n\" + \r", "-\t\t\"4. ERROR in X.java (at line 3)\\n\" + \r", "-\t\t\"\tSystem.out.println(int @NonEmpty [] [] @NonEmpty @Empty [] [] @NonEmpty[].class); // illegal!\\n\" + \r", "-\t\t\"\t                                       ^^^^^^^^^\\n\" + \r", "-\t\t\"Only annotation types that explicitly specify TYPE_USE as a possible target element type can be applied here\\n\" + \r", "-\t\t\"----------\\n\" + \r", "-\t\t\"5. ERROR in X.java (at line 3)\\n\" + \r", "-\t\t\"\tSystem.out.println(int @NonEmpty [] [] @NonEmpty @Empty [] [] @NonEmpty[].class); // illegal!\\n\" + \r", "-\t\t\"\t                                                 ^^^^^^\\n\" + \r", "-\t\t\"Only annotation types that explicitly specify TYPE_USE as a possible target element type can be applied here\\n\" + \r", "-\t\t\"----------\\n\" + \r", "-\t\t\"6. ERROR in X.java (at line 3)\\n\" + \r", "+\t\t\"3. ERROR in X.java (at line 3)\\n\" + \r", "-\t\t\"7. ERROR in X.java (at line 3)\\n\" + \r", "-\t\t\"\tSystem.out.println(int @NonEmpty [] [] @NonEmpty @Empty [] [] @NonEmpty[].class); // illegal!\\n\" + \r", "-\t\t\"\t                                                              ^^^^^^^^^\\n\" + \r", "-\t\t\"Only annotation types that explicitly specify TYPE_USE as a possible target element type can be applied here\\n\" + \r", "-\t\t\"----------\\n\" + \r", "-\t\t\"8. ERROR in X.java (at line 4)\\n\" + \r", "+\t\t\"4. ERROR in X.java (at line 4)\\n\" + \r", "-\t\t\"9. ERROR in X.java (at line 4)\\n\" + \r", "-\t\t\"\tSystem.out.println(X @NonEmpty [] [] @NonEmpty @Empty [] [] @NonEmpty[].class); // illegal!\\n\" + \r", "-\t\t\"\t                     ^^^^^^^^^\\n\" + \r", "-\t\t\"Only annotation types that explicitly specify TYPE_USE as a possible target element type can be applied here\\n\" + \r", "-\t\t\"----------\\n\" + \r", "-\t\t\"10. ERROR in X.java (at line 4)\\n\" + \r", "+\t\t\"5. ERROR in X.java (at line 4)\\n\" + \r", "-\t\t\"11. ERROR in X.java (at line 4)\\n\" + \r", "-\t\t\"\tSystem.out.println(X @NonEmpty [] [] @NonEmpty @Empty [] [] @NonEmpty[].class); // illegal!\\n\" + \r", "-\t\t\"\t                                     ^^^^^^^^^\\n\" + \r", "-\t\t\"Only annotation types that explicitly specify TYPE_USE as a possible target element type can be applied here\\n\" + \r", "-\t\t\"----------\\n\" + \r", "-\t\t\"12. ERROR in X.java (at line 4)\\n\" + \r", "-\t\t\"\tSystem.out.println(X @NonEmpty [] [] @NonEmpty @Empty [] [] @NonEmpty[].class); // illegal!\\n\" + \r", "-\t\t\"\t                                               ^^^^^^\\n\" + \r", "-\t\t\"Only annotation types that explicitly specify TYPE_USE as a possible target element type can be applied here\\n\" + \r", "-\t\t\"----------\\n\" + \r", "-\t\t\"13. ERROR in X.java (at line 4)\\n\" + \r", "+\t\t\"6. ERROR in X.java (at line 4)\\n\" + \r", "-\t\t\"----------\\n\" + \r", "-\t\t\"14. ERROR in X.java (at line 4)\\n\" + \r", "-\t\t\"\tSystem.out.println(X @NonEmpty [] [] @NonEmpty @Empty [] [] @NonEmpty[].class); // illegal!\\n\" + \r", "-\t\t\"\t                                                            ^^^^^^^^^\\n\" + \r", "-\t\t\"Only annotation types that explicitly specify TYPE_USE as a possible target element type can be applied here\\n\" + \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3d6e02c754f74175122597ec2a4f3cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TryStatementTest.java", "commitBeforeChange": "830277de86eee08c18b5e0da495c01b96cccdad2", "commitAfterChange": "a874c20c38675a0faf72bfd6c0cb69354f6ff3fb", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " public void test044()", "signatureAfterChange": " public void test044()", "diff": ["-\t\t\texpectedOutput = \"  // Method descriptor #19 ()Ljava/lang/Object;\\n\" + ", "-\t\t\t\"  // Stack: 2, Locals: 2\\n\" + ", "-\t\t\t\"  static java.lang.Object foo();\\n\" + ", "-\t\t\t\"     0  getstatic java.lang.System.out : java.io.PrintStream [22]\\n\" + ", "-\t\t\t\"     3  ldc <String \\\"SUCCESS\\\"> [28]\\n\" + ", "-\t\t\t\"     5  invokevirtual java.io.PrintStream.println(java.lang.String) : void [30]\\n\" + ", "-\t\t\t\"     8  aconst_null\\n\" + ", "-\t\t\t\"     9  areturn\\n\" + ", "-\t\t\t\"    10  astore_0 [e]\\n\" + ", "-\t\t\t\"    11  goto 0\\n\" + ", "-\t\t\t\"    14  astore_1\\n\" + ", "-\t\t\t\"    15  getstatic java.lang.System.out : java.io.PrintStream [22]\\n\" + ", "-\t\t\t\"    18  ldc <String \\\"SUCCESS\\\"> [28]\\n\" + ", "-\t\t\t\"    20  invokevirtual java.io.PrintStream.println(java.lang.String) : void [30]\\n\" + ", "-\t\t\t\"    23  aload_1\\n\" + ", "-\t\t\t\"    24  athrow\\n\" + ", "-\t\t\t\"      Exception Table:\\n\" + ", "-\t\t\t\"        [pc: 10, pc: 14] -> 14 when : any\\n\" + ", "-\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\"        [pc: 0, line: 11]\\n\" + ", "-\t\t\t\"        [pc: 8, line: 7]\\n\" + ", "-\t\t\t\"        [pc: 10, line: 8]\\n\" + ", "-\t\t\t\"        [pc: 11, line: 9]\\n\" + ", "-\t\t\t\"        [pc: 14, line: 10]\\n\" + ", "-\t\t\t\"        [pc: 15, line: 11]\\n\" + ", "-\t\t\t\"        [pc: 23, line: 12]\\n\" + ", "-\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\"        [pc: 11, pc: 14] local: e index: 0 type: java.lang.Exception\\n\";", "+\t\t\texpectedOutput =", "+\t\t\t\t\"  // Method descriptor #19 ()Ljava/lang/Object;\\n\" + ", "+\t\t\t\t\"  // Stack: 2, Locals: 0\\n\" + ", "+\t\t\t\t\"  static java.lang.Object foo();\\n\" + ", "+\t\t\t\t\"     0  getstatic java.lang.System.out : java.io.PrintStream [22]\\n\" + ", "+\t\t\t\t\"     3  ldc <String \\\"SUCCESS\\\"> [28]\\n\" + ", "+\t\t\t\t\"     5  invokevirtual java.io.PrintStream.println(java.lang.String) : void [30]\\n\" + ", "+\t\t\t\t\"     8  aconst_null\\n\" + ", "+\t\t\t\t\"     9  areturn\\n\" + ", "+\t\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\t\"        [pc: 0, line: 11]\\n\" + ", "+\t\t\t\t\"        [pc: 8, line: 7]\\n\";", "-\t\t\t\"  // Stack: 2, Locals: 2\\n\" + ", "+\t\t\t\"  // Stack: 2, Locals: 0\\n\" + ", "-\t\t\t\"    10  astore_0 [e]\\n\" + ", "-\t\t\t\"    11  getstatic java.lang.System.out : java.io.PrintStream [22]\\n\" + ", "-\t\t\t\"    14  ldc <String \\\"SUCCESS\\\"> [28]\\n\" + ", "-\t\t\t\"    16  invokevirtual java.io.PrintStream.println(java.lang.String) : void [30]\\n\" + ", "-\t\t\t\"    19  aconst_null\\n\" + ", "-\t\t\t\"    20  areturn\\n\" + ", "-\t\t\t\"    21  astore_1\\n\" + ", "-\t\t\t\"    22  getstatic java.lang.System.out : java.io.PrintStream [22]\\n\" + ", "-\t\t\t\"    25  ldc <String \\\"SUCCESS\\\"> [28]\\n\" + ", "-\t\t\t\"    27  invokevirtual java.io.PrintStream.println(java.lang.String) : void [30]\\n\" + ", "-\t\t\t\"    30  aload_1\\n\" + ", "-\t\t\t\"    31  athrow\\n\" + ", "-\t\t\t\"      Exception Table:\\n\" + ", "-\t\t\t\"        [pc: 10, pc: 11] -> 21 when : any\\n\" + ", "-\t\t\t\"        [pc: 8, line: 7]\\n\" + ", "-\t\t\t\"        [pc: 10, line: 8]\\n\" + ", "-\t\t\t\"        [pc: 11, line: 11]\\n\" + ", "-\t\t\t\"        [pc: 19, line: 9]\\n\" + ", "-\t\t\t\"        [pc: 21, line: 10]\\n\" + ", "-\t\t\t\"        [pc: 22, line: 11]\\n\" + ", "-\t\t\t\"        [pc: 30, line: 12]\\n\" + ", "-\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\"        [pc: 11, pc: 21] local: e index: 0 type: java.lang.Exception\\n\" + ", "-\t\t\t\"      Stack map table: number of frames 2\\n\" + ", "-\t\t\t\"        [pc: 10, same_locals_1_stack_item, stack: {java.lang.Exception}]\\n\" + ", "-\t\t\t\"        [pc: 21, same_locals_1_stack_item, stack: {java.lang.Throwable}]\\n\";", "+\t\t\t\"        [pc: 8, line: 7]\\n\";"]}], "num": 27673}