{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b7d972a0a8c54e2e70d3d5ecd89ed3c6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "494b229ca85d0d475dd768f7c34477bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  protected void consumeAssignment()", "signatureAfterChange": "  protected void consumeAssignment()", "diff": ["-\tint op = intStack[intPtr--] ; //<--the encoded operator", "+\tint op = this.intStack[this.intPtr--] ; //<--the encoded operator", "-\texpressionPtr -- ; expressionLengthPtr -- ;", "-\texpressionStack[expressionPtr] =", "+\tthis.expressionPtr -- ; this.expressionLengthPtr -- ;", "+\tthis.expressionStack[this.expressionPtr] =", "-\t\t\t\texpressionStack[expressionPtr] ,", "-\t\t\t\texpressionStack[expressionPtr+1], ", "+\t\t\t\tthis.expressionStack[this.expressionPtr] ,", "+\t\t\t\tthis.expressionStack[this.expressionPtr+1], ", "-\t\t\t\tscanner.startPosition - 1)\t:", "+\t\t\t\tthis.scanner.startPosition - 1)\t:", "-\t\t\t\texpressionStack[expressionPtr] ,", "-\t\t\t\texpressionStack[expressionPtr+1],", "-\t\t\t\tscanner.startPosition - 1);", "+\t\t\t\tthis.expressionStack[this.expressionPtr] ,", "+\t\t\t\tthis.expressionStack[this.expressionPtr+1],", "+\t\t\t\tthis.scanner.startPosition - 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8b9c57082fe5996bc044c2e804ee68e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 185, "methodNumberAfterChange": 185, "signatureBeforeChange": " protected void consumeUnaryExpression(int op)", "signatureAfterChange": " protected void consumeUnaryExpression(int op)", "diff": ["-\tExpression r, exp = expressionStack[expressionPtr];", "+\tExpression r, exp = this.expressionStack[this.expressionPtr];", "-\t\t\tr = expressionStack[expressionPtr] = new IntLiteralMinValue();", "+\t\t\tr = this.expressionStack[this.expressionPtr] = new IntLiteralMinValue();", "-\t\t\t\tr = expressionStack[expressionPtr] = new LongLiteralMinValue();", "+\t\t\t\tr = this.expressionStack[this.expressionPtr] = new LongLiteralMinValue();", "-\t\t\t\tr = expressionStack[expressionPtr] = new UnaryExpression(exp, op);", "+\t\t\t\tr = this.expressionStack[this.expressionPtr] = new UnaryExpression(exp, op);", "-\t\tr = expressionStack[expressionPtr] = new UnaryExpression(exp, op);", "+\t\tr = this.expressionStack[this.expressionPtr] = new UnaryExpression(exp, op);", "-\tr.sourceStart = intStack[intPtr--];", "+\tr.sourceStart = this.intStack[this.intPtr--];"]}], "num": 24587}