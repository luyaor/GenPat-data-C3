{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "084a5e226703dcaa461ade988926d5ad", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23b5dfd05c6e22b96231ea0b35810ae7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CopyElementsOperation.java", "commitBeforeChange": "b6eb3741928f7f60040cd62cb39c2031ea7f1375", "commitAfterChange": "045fcd6169ea322b1f182f37db0e04a62252f1e0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " private String getSourceFor(IJavaElement element) throws JavaModelException", "signatureAfterChange": " private String getSourceFor(IJavaElement element) throws JavaModelException", "diff": ["-\t\tIDOMCompilationUnit domCU = new DOMFactory().createCompilationUnit(cuSource, cu.getElementName());", "-\t\tIDOMNode node = ((JavaElement)element).findNode(domCU);", "-\t\tsource = new String(node.getCharacters());", "+\t\tString cuName = cu.getElementName();", "+\t\tsource = computeSourceForElement(element, cuSource, cuName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42efd9231efcfde14ddabaa036626c5f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "888495667591cfcd01c2ab6bfb5f765a394f5692", "commitAfterChange": "e02e0982842551ac15d0e2a44536d74251fdb4d1", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tprotected Object openWhenClosed(Object info, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tprotected Object openWhenClosed(Object info, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\t\t// close any buffer that was opened for the openable parent", "-\t\t\t\tIterator iterator = newElements.keySet().iterator();", "-\t\t\t\twhile (iterator.hasNext()) {", "-\t\t\t\t\tIJavaElement element = (IJavaElement)iterator.next();", "-\t\t\t\t\tif (element instanceof Openable) {", "-\t\t\t\t\t\t((Openable)element).closeBuffer();", "-\t\t\t\t\t}", "-\t\t\t\t}", "+\t\t\t\t// close the buffer that was opened for the openable parent", "+\t\t\t    // close only the openable's buffer (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=62854)", "+\t\t\t    Openable openable = (Openable) getOpenable();", "+\t\t\t    if (newElements.containsKey(openable)) {", "+\t\t\t        openable.closeBuffer();", "+\t\t\t    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "629773be4c526b16b3d747f932d1a838", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "f2d39aa25493d372eb044b624dbbd72fed5a98c6", "commitAfterChange": "201a4d7535850d71f8963e39324858c8555e83ea", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " \tpublic static void run(IWorkspaceRunnable action, IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tpublic static void run(IWorkspaceRunnable action, IProgressMonitor monitor) throws CoreException", "diff": ["+\t\trun(action, ResourcesPlugin.getWorkspace().getRoot(), monitor);", "+\t}", "-\t\t\tworkspace.run(new BatchOperation(action), monitor);", "-\t}"]}], "num": 59980}