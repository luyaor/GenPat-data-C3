{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "06d8b99e06edcc7cb566419c9b1e6154", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cbccfb96f7852634b2803ec3ce200a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyNotInClasspathTests.java", "commitBeforeChange": "f412bf1f12d172ee129fe88edc5edc3e752232ac", "commitAfterChange": "b200ac7d7ee292ea3a174fc5a4e53520cc708094", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void testIsOnClasspath() throws CoreException", "signatureAfterChange": " public void testIsOnClasspath() throws CoreException", "diff": ["-\t\tIFile file = this.createFile(\"/P1/src/junit/test/X.java\", source);", "+\t\tIFile file = this.createFile(\"/SimpleProject/src/junit/test/X.java\", source);", "-\t\tassertTrue(\"working copy shouldn't be on classpath (1/2)\", workingCopy.getJavaProject().isOnClasspath(workingCopy));", "-\t\tMap options = workingCopy.getJavaProject().getOptions(true); // bug 31799", "-\t\tassertTrue(\"working copy should still not be on classpath (2/2)\", workingCopy.getJavaProject().isOnClasspath(workingCopy));", "+\t\ttry {", "+\t\t\tworkingCopy.getJavaProject().isOnClasspath(workingCopy);", "+\t\t\t// shouldn't reach that far, since isOnClasspath should throw an exception (not present)", "+\t\t\tassertTrue(\"working copy shouldn't answer to isOnClasspath (1/2)\", false);", "+\t\t} catch(JavaModelException e) {", "+\t\t}", "+\t\tworkingCopy.getJavaProject().getOptions(true); // bug 31799", "+\t\ttry {", "+\t\t\tworkingCopy.getJavaProject().isOnClasspath(workingCopy);", "+\t\t\t// shouldn't reach that far, since isOnClasspath should throw an exception (not present)", "+\t\t\tassertTrue(\"working copy should dstill not answer to isOnClasspath (2/2)\", false);", "+\t\t} catch(JavaModelException e) {", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22fa2f4646cfe948810b51316e2bdc10", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/RootManipulationsTests.java", "commitBeforeChange": "3896c928f2181f18f6740dee0a59c7ad2e4c256d", "commitAfterChange": "bb2aa8fa4883217f6f859ee7f082135cad7ea6d9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected void populate(StringBuffer buffer, IJavaElement element, int indent) throws CoreException", "signatureAfterChange": " protected void populate(StringBuffer buffer, IJavaElement element, int indent) throws CoreException", "diff": ["-\tIJavaElement[] children = parent.getChildren();", "-\tfor (int i = 0, length = children.length; i < length; i++) {", "-\t\tpopulate(buffer, children[i], indent+1);", "+\tIJavaElement[] children = null;", "+\ttry {", "+\t\tchildren = parent.getChildren();", "+\t} catch (JavaModelException e) {", "+\tif (children != null) {", "+\t\tfor (int i = 0, length = children.length; i < length; i++) {", "+\t\t\tpopulate(buffer, children[i], indent+1);", "+\t\t}", "+\t}", "+\t", "-\tif (element instanceof IJavaProject) {", "-\t\tnonJavaResources = ((IJavaProject)element).getNonJavaResources();", "-\t} else if (element instanceof IPackageFragmentRoot) {", "-\t\tnonJavaResources = ((IPackageFragmentRoot)element).getNonJavaResources();", "-\t} else if (element instanceof IPackageFragment) {", "-\t\tnonJavaResources = ((IPackageFragment)element).getNonJavaResources();", "+\ttry {", "+\t\tif (element instanceof IJavaProject) {", "+\t\t\tnonJavaResources = ((IJavaProject)element).getNonJavaResources();", "+\t\t} else if (element instanceof IPackageFragmentRoot) {", "+\t\t\tnonJavaResources = ((IPackageFragmentRoot)element).getNonJavaResources();", "+\t\t} else if (element instanceof IPackageFragment) {", "+\t\t\tnonJavaResources = ((IPackageFragment)element).getNonJavaResources();", "+\t\t}", "+\t} catch (JavaModelException e) {"]}], "num": 16631}