{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "de6c7f965df55a1fca47d8951f7d4441", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35d4f4fc74fa1b0eda6aedf592ac24eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "a738cdbf5d0b40e078d2ec76d22bcb613279cff6", "commitAfterChange": "b41120aee6f499b9a774d71aea9151d984f245c5", "methodNumberBeforeChange": 202, "methodNumberAfterChange": 202, "signatureBeforeChange": "  \tprotected void setUpProjectCompliance(IJavaProject javaProject, String compliance) throws JavaModelException, IOException", "signatureAfterChange": "  \tprotected void setUpProjectCompliance(IJavaProject javaProject, String compliance) throws JavaModelException, IOException", "diff": ["-\t\tString version = CompilerOptions.VERSION_1_4;", "-\t\tString jclLibString = null;", "-\t\tString newJclLibString = null;", "-\t\tString newJclSrcString = null;", "-\t\tswitch (compliance.charAt(2)) {", "-\t\t\tcase '6':", "-\t\t\t\tversion = CompilerOptions.VERSION_1_6;", "-\t\t\t\tif (version.equals(javaProject.getOption(CompilerOptions.OPTION_Compliance, false))) {", "-\t\t\t\t\treturn;", "-\t\t\t\t}", "-\t\t\t\tjclLibString = \"JCL_LIB\";", "-\t\t\t\tnewJclLibString = \"JCL15_LIB\";", "-\t\t\t\tnewJclSrcString = \"JCL15_SRC\";", "-\t\t\t\tbreak;", "-\t\t\tcase '5':", "-\t\t\t\tversion = CompilerOptions.VERSION_1_5;", "-\t\t\t\tif (version.equals(javaProject.getOption(CompilerOptions.OPTION_Compliance, false))) {", "-\t\t\t\t\treturn;", "-\t\t\t\t}", "-\t\t\t\tjclLibString = \"JCL_LIB\";", "-\t\t\t\tnewJclLibString = \"JCL15_LIB\";", "-\t\t\t\tnewJclSrcString = \"JCL15_SRC\";", "-\t\t\t\tbreak;", "-\t\t\tcase '3':", "-\t\t\t\tversion = CompilerOptions.VERSION_1_3;", "-\t\t\tdefault:", "-\t\t\t\tif (version.equals(javaProject.getOption(CompilerOptions.OPTION_Compliance, false))) {", "-\t\t\t\t\treturn;", "-\t\t\t\t}", "-\t\t\t\tjclLibString = \"JCL15_LIB\";", "-\t\t\t\tnewJclLibString = \"JCL_LIB\";", "-\t\t\t\tnewJclSrcString = \"JCL_SRC\";", "-\t\t\t\tbreak;", "+\t\tString version = compliance; // assume that the values of CompilerOptions.VERSION_* are used", "+\t\tif (version.equals(javaProject.getOption(CompilerOptions.OPTION_Compliance, false))) {", "+\t\t\treturn;", "+\t\t}", "+\t\tString jclLibString;", "+\t\tString newJclLibString;", "+\t\tString newJclSrcString;", "+\t\tif (compliance.charAt(2) > '4') {", "+\t\t\tjclLibString = \"JCL_LIB\";", "+\t\t\tnewJclLibString = \"JCL15_LIB\";", "+\t\t\tnewJclSrcString = \"JCL15_SRC\";", "+\t\t} else {", "+\t\t\tjclLibString = \"JCL15_LIB\";", "+\t\t\tnewJclLibString = \"JCL_LIB\";", "+\t\t\tnewJclSrcString = \"JCL_SRC\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1531b6e1339c5e51937940e024a94c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/diagnose/DiagnoseParser.java", "commitBeforeChange": "94834929c4a0c0b77e8b90f18eeb6517873b69ab", "commitAfterChange": "8622e99cc18e0c0ae6c600de97be8d909f3d7ad6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate static char[] displayEscapeCharacters(char[] tokenSource, int start, int end)", "signatureAfterChange": "  \tprivate static char[] displayEscapeCharacters(char[] tokenSource, int start, int end)", "diff": ["-\t\t\tswitch (c) {", "-                case '\\r' :", "-                    tokenSourceBuffer.append(\"\\\\r\"); //$NON-NLS-1$", "-                    break;", "-                case '\\n' :", "-                    tokenSourceBuffer.append(\"\\\\n\"); //$NON-NLS-1$", "-                    break;", "-                case '\\b' :", "-                    tokenSourceBuffer.append(\"\\\\b\"); //$NON-NLS-1$", "-                    break;", "-                case '\\t' :", "-                    tokenSourceBuffer.append(\"\\t\"); //$NON-NLS-1$", "-                    break;", "-                case '\\f' :", "-                    tokenSourceBuffer.append(\"\\\\f\"); //$NON-NLS-1$", "-                    break;", "-                case '\\\"' :", "-                    tokenSourceBuffer.append(\"\\\\\\\"\"); //$NON-NLS-1$", "-                    break;", "-                case '\\'' :", "-                    tokenSourceBuffer.append(\"\\\\'\"); //$NON-NLS-1$", "-                    break;", "-                case '\\\\' :", "-                    tokenSourceBuffer.append(\"\\\\\\\\\"); //$NON-NLS-1$", "-                    break;", "-                default :", "-                    tokenSourceBuffer.append(c);", "-            }", "+\t\t\tUtil.appendEscapedChar(tokenSourceBuffer, c, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "defa74a928b497dcf6151dc99faf10a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/StringLiteral.java", "commitBeforeChange": "94834929c4a0c0b77e8b90f18eeb6517873b69ab", "commitAfterChange": "8622e99cc18e0c0ae6c600de97be8d909f3d7ad6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "signatureAfterChange": "  \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "diff": ["-\t\t\tswitch (this.source[i]) {", "-\t\t\t\tcase '\\b' :", "-\t\t\t\t\toutput.append(\"\\\\b\"); //$NON-NLS-1$", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase '\\t' :", "-\t\t\t\t\toutput.append(\"\\\\t\"); //$NON-NLS-1$", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase '\\n' :", "-\t\t\t\t\toutput.append(\"\\\\n\"); //$NON-NLS-1$", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase '\\f' :", "-\t\t\t\t\toutput.append(\"\\\\f\"); //$NON-NLS-1$", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase '\\r' :", "-\t\t\t\t\toutput.append(\"\\\\r\"); //$NON-NLS-1$", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase '\\\"' :", "-\t\t\t\t\toutput.append(\"\\\\\\\"\"); //$NON-NLS-1$", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase '\\'' :", "-\t\t\t\t\toutput.append(\"\\\\'\"); //$NON-NLS-1$", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase '\\\\' : //take care not to display the escape as a potential real char", "-\t\t\t\t\toutput.append(\"\\\\\\\\\"); //$NON-NLS-1$", "-\t\t\t\t\tbreak;", "-\t\t\t\tdefault :", "-\t\t\t\t\toutput.append(this.source[i]);", "-\t\t\t}", "+\t\t\tUtil.appendEscapedChar(output, this.source[i], true);"]}], "num": 6527}