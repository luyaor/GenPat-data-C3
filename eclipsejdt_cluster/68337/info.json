{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0781b8176f8ac8df211e047b5b91cdd2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1140b244ffeac29e3f8a72b48a26fb14", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "9b15ff7de4b2f6eb12f4b11f86ececfa16b41cb0", "commitAfterChange": "6d2e01044d066ed204db988bb2b4dbb10be5b0ff", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "  \tpublic void traverse(MethodBinding methodBinding, int maxLocals, byte[] bytecodes, int codeOffset, int codeLength, ArrayList frames, boolean isClinit)", "signatureAfterChange": "  \tpublic void traverse(MethodBinding methodBinding, int maxLocals, byte[] bytecodes, int codeOffset, int codeLength, ArrayList frames, boolean isClinit)", "diff": ["-\t\t\tint opcode = u1At(bytecodes, 0, pc);", "+\t\t\tbyte opcode = (byte) u1At(bytecodes, 0, pc);", "+\t\t\t\t\tframe.addStackItem(TypeBinding.INT);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.addStackItem(TypeBinding.INT);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.addStackItem(TypeBinding.INT);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.addStackItem(TypeBinding.INT);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.addStackItem(TypeBinding.INT);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.addStackItem(TypeBinding.INT);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.addStackItem(TypeBinding.LONG);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.addStackItem(TypeBinding.FLOAT);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.addStackItem(TypeBinding.FLOAT);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.addStackItem(TypeBinding.DOUBLE);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.addStackItem(TypeBinding.INT);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.addStackItem(TypeBinding.INT);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.addStackItem(TypeBinding.INT);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.addStackItem(TypeBinding.LONG);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.addStackItem(TypeBinding.LONG);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.addStackItem(TypeBinding.LONG);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.addStackItem(TypeBinding.FLOAT);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.addStackItem(TypeBinding.FLOAT);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.addStackItem(TypeBinding.FLOAT);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.addStackItem(TypeBinding.DOUBLE);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.addStackItem(TypeBinding.DOUBLE);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.addStackItem(TypeBinding.DOUBLE);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc += 2;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc += 2;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc += 2;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_istore_0:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_istore_1:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_istore_2:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_istore_3:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_lstore_0:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_lstore_1:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_lstore_2:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_lstore_3:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_fstore_0:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_fstore_1:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_fstore_2:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_fstore_3:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_dstore_0:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_dstore_1:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_dstore_2:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_dstore_3:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "-\t\t\t\tcase Opcodes.OPC_istore_0:", "-\t\t\t\tcase Opcodes.OPC_istore_1:", "-\t\t\t\tcase Opcodes.OPC_istore_2:", "-\t\t\t\tcase Opcodes.OPC_istore_3:", "-\t\t\t\tcase Opcodes.OPC_lstore_0:", "-\t\t\t\tcase Opcodes.OPC_lstore_1:", "-\t\t\t\tcase Opcodes.OPC_lstore_2:", "-\t\t\t\tcase Opcodes.OPC_lstore_3:", "-\t\t\t\tcase Opcodes.OPC_fstore_0:", "-\t\t\t\tcase Opcodes.OPC_fstore_1:", "-\t\t\t\tcase Opcodes.OPC_fstore_2:", "-\t\t\t\tcase Opcodes.OPC_fstore_3:", "-\t\t\t\tcase Opcodes.OPC_dstore_0:", "-\t\t\t\tcase Opcodes.OPC_dstore_1:", "-\t\t\t\tcase Opcodes.OPC_dstore_2:", "-\t\t\t\tcase Opcodes.OPC_dstore_3:", "-\t\t\t\tcase Opcodes.OPC_pop:", "+\t\t\t\t\tframe.numberOfStackItems-=3;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems-=3;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems-=3;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems-=3;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems-=3;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems-=3;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems-=3;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_pop:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\tcase Opcodes.OPC_iadd:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_ladd:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_fadd:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_dadd:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_isub:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_lsub:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_fsub:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_dsub:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_imul:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_lmul:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_fmul:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_dmul:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_idiv:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_ldiv:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_fdiv:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_ddiv:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_irem:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_lrem:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_frem:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_drem:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "-\t\t\t\tcase Opcodes.OPC_iadd:", "-\t\t\t\tcase Opcodes.OPC_ladd:", "-\t\t\t\tcase Opcodes.OPC_fadd:", "-\t\t\t\tcase Opcodes.OPC_dadd:", "-\t\t\t\tcase Opcodes.OPC_isub:", "-\t\t\t\tcase Opcodes.OPC_lsub:", "-\t\t\t\tcase Opcodes.OPC_fsub:", "-\t\t\t\tcase Opcodes.OPC_dsub:", "-\t\t\t\tcase Opcodes.OPC_imul:", "-\t\t\t\tcase Opcodes.OPC_lmul:", "-\t\t\t\tcase Opcodes.OPC_fmul:", "-\t\t\t\tcase Opcodes.OPC_dmul:", "-\t\t\t\tcase Opcodes.OPC_idiv:", "-\t\t\t\tcase Opcodes.OPC_ldiv:", "-\t\t\t\tcase Opcodes.OPC_fdiv:", "-\t\t\t\tcase Opcodes.OPC_ddiv:", "-\t\t\t\tcase Opcodes.OPC_irem:", "-\t\t\t\tcase Opcodes.OPC_lrem:", "-\t\t\t\tcase Opcodes.OPC_frem:", "-\t\t\t\tcase Opcodes.OPC_drem:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "-\t\t\t\tcase Opcodes.OPC_f2l:", "-\t\t\t\tcase Opcodes.OPC_d2l:", "-\t\t\t\tcase Opcodes.OPC_l2f:", "-\t\t\t\tcase Opcodes.OPC_d2f:", "-\t\t\t\tcase Opcodes.OPC_l2d:", "-\t\t\t\tcase Opcodes.OPC_f2d:", "+\t\t\t\t\tframe.stackItems[frame.numberOfStackItems - 1] = new VerificationTypeInfo(TypeBinding.INT);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_l2f:", "+\t\t\t\t\tframe.stackItems[frame.numberOfStackItems - 1] = new VerificationTypeInfo(TypeBinding.FLOAT);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_l2d:", "+\t\t\t\t\tframe.stackItems[frame.numberOfStackItems - 1] = new VerificationTypeInfo(TypeBinding.DOUBLE);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.stackItems[frame.numberOfStackItems - 1] = new VerificationTypeInfo(TypeBinding.INT);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_f2l:", "+\t\t\t\t\tframe.stackItems[frame.numberOfStackItems - 1] = new VerificationTypeInfo(TypeBinding.LONG);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_f2d:", "+\t\t\t\t\tframe.stackItems[frame.numberOfStackItems - 1] = new VerificationTypeInfo(TypeBinding.DOUBLE);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_d2l:", "+\t\t\t\t\tframe.stackItems[frame.numberOfStackItems - 1] = new VerificationTypeInfo(TypeBinding.LONG);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_d2f:", "+\t\t\t\t\tframe.stackItems[frame.numberOfStackItems - 1] = new VerificationTypeInfo(TypeBinding.FLOAT);", "+\t\t\t\t\tframe.numberOfStackItems-=2;", "+\t\t\t\t\tframe.addStackItem(TypeBinding.INT);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems-=2;", "+\t\t\t\t\tframe.addStackItem(TypeBinding.INT);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems-=2;", "+\t\t\t\t\tframe.addStackItem(TypeBinding.INT);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems-=2;", "+\t\t\t\t\tframe.addStackItem(TypeBinding.INT);", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "-\t\t\t\tcase Opcodes.OPC_ifne:", "-\t\t\t\tcase Opcodes.OPC_iflt:", "-\t\t\t\tcase Opcodes.OPC_ifge:", "-\t\t\t\tcase Opcodes.OPC_ifgt:", "-\t\t\t\tcase Opcodes.OPC_ifle:", "-\t\t\t\tcase Opcodes.OPC_ifnull:", "-\t\t\t\tcase Opcodes.OPC_ifnonnull:", "-\t\t\t\t\tbreak;\t\t\t\t\t", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_ifne:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc += 3;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_iflt:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc += 3;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_ifge:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc += 3;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_ifgt:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc += 3;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_ifle:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc += 3;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems -= 2;", "+\t\t\t\t\tpc += 3;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems -= 2;", "+\t\t\t\t\tpc += 3;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems -= 2;", "+\t\t\t\t\tpc += 3;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems -= 2;", "+\t\t\t\t\tpc += 3;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems -= 2;", "+\t\t\t\t\tpc += 3;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems -= 2;", "+\t\t\t\t\tpc += 3;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems -= 2;", "+\t\t\t\t\tpc += 3;", "+\t\t\t\t\tbreak;", "-\t\t\t\t\tbreak;\t\t\t\t\t", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_athrow:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "-\t\t\t\tcase Opcodes.OPC_athrow:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc++;", "+\t\t\t\t\tbreak;", "-\t\t\t\t\topcode = u1At(bytecodes, 1, pc);", "+\t\t\t\t\topcode = (byte) u1At(bytecodes, 1, pc);", "-\t\t\t\t\t\t\tcase Opcodes.OPC_aaload :", "+\t\t\t\t\t\t\tcase Opcodes.OPC_lload :", "+\t\t\t\tcase Opcodes.OPC_ifnull:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc += 3;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Opcodes.OPC_ifnonnull:", "+\t\t\t\t\tframe.numberOfStackItems--;", "+\t\t\t\t\tpc += 3;", "+\t\t\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7151e08a0f18b06071649d66541a8ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/antadapter/org/eclipse/jdt/core/JDTCompilerAdapter.java", "commitBeforeChange": "09c3ccccb89d804a9183abefd56185d0d7837bc3", "commitAfterChange": "6c8a21e16cbda0092cdd37cfe45b5e7adb8a3039", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \t \tprotected Commandline setupJavacCommand() throws BuildException", "signatureAfterChange": " \t \t \tprotected Commandline setupJavacCommand() throws BuildException", "diff": ["+\t\tthis.customDefaultOptions = new HashMap();", "-\t\t\t\t\tcmd.createArgument().setValue(\"-g:none\"); //$NON-NLS-1$", "+\t\t\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_LocalVariableAttribute, CompilerOptions.DO_NOT_GENERATE);", "+\t\t\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_LineNumberAttribute, CompilerOptions.DO_NOT_GENERATE);", "+\t\t\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_SourceFileAttribute , CompilerOptions.DO_NOT_GENERATE);", "-\t\t\t\t\tcmd.createArgument().setValue(\"-g:\" + debugLevel); //$NON-NLS-1$", "+\t\t\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_LocalVariableAttribute, CompilerOptions.DO_NOT_GENERATE);", "+\t\t\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_LineNumberAttribute, CompilerOptions.DO_NOT_GENERATE);", "+\t\t\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_SourceFileAttribute , CompilerOptions.DO_NOT_GENERATE);", "+\t\t\t\t\tif (debugLevel.indexOf(\"vars\") != -1) {//$NON-NLS-1$", "+\t\t\t\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_LocalVariableAttribute, CompilerOptions.GENERATE);", "+\t\t\t\t\t}", "+\t\t\t\t\tif (debugLevel.indexOf(\"lines\") != -1) {//$NON-NLS-1$", "+\t\t\t\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_LineNumberAttribute, CompilerOptions.GENERATE);", "+\t\t\t\t\t}", "+\t\t\t\t\tif (debugLevel.indexOf(\"source\") != -1) {//$NON-NLS-1$", "+\t\t\t\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_SourceFileAttribute , CompilerOptions.GENERATE);", "+\t\t\t\t\t}", "-\t\t\t\tcmd.createArgument().setValue(\"-g\"); //$NON-NLS-1$", "+\t\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_LocalVariableAttribute, CompilerOptions.GENERATE);", "+\t\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_LineNumberAttribute, CompilerOptions.GENERATE);", "+\t\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_SourceFileAttribute , CompilerOptions.GENERATE);", "-            cmd.createArgument().setValue(\"-g:none\"); //$NON-NLS-1$", "+\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_LocalVariableAttribute, CompilerOptions.DO_NOT_GENERATE);", "+\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_LineNumberAttribute, CompilerOptions.DO_NOT_GENERATE);", "+\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_SourceFileAttribute , CompilerOptions.DO_NOT_GENERATE);", "-\t   \tif (compilerArgs == null) {", "-\t\t\t/*", "-\t\t\t * Handle the nowarn option. If none, then we generate all warnings.", "-\t\t\t */", "-\t\t\tif (this.attributes.getNowarn()) {", "-\t\t\t\tif (this.deprecation) {", "-\t\t\t\t\tcmd.createArgument().setValue(\"-warn:allDeprecation\"); //$NON-NLS-1$", "-\t\t\t\t} else {", "-\t\t\t\t\tcmd.createArgument().setValue(\"-nowarn\"); //$NON-NLS-1$", "-\t\t\t\t}", "-\t\t\t} else if (this.deprecation) {", "-\t\t\t\tcmd.createArgument().setValue(\"-warn:allDeprecation,constructorName,packageDefaultMethod,maskedCatchBlocks,unusedImports,staticReceiver\"); //$NON-NLS-1$", "-\t\t\t} else {", "-\t\t\t\tcmd.createArgument().setValue(\"-warn:constructorName,packageDefaultMethod,maskedCatchBlocks,unusedImports,staticReceiver\"); //$NON-NLS-1$", "+        // disable all warnings by default", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportMethodWithConstructorName, CompilerOptions.IGNORE); ", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportOverridingPackageDefaultMethod, CompilerOptions.IGNORE); ", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportDeprecation, CompilerOptions.IGNORE); ", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportDeprecationInDeprecatedCode, CompilerOptions.DISABLED); ", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportDeprecationWhenOverridingDeprecatedMethod, CompilerOptions.DISABLED); ", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportHiddenCatchBlock, CompilerOptions.IGNORE); ", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportUnusedLocal, CompilerOptions.IGNORE); ", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportUnusedParameter, CompilerOptions.IGNORE); ", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportUnusedImport, CompilerOptions.IGNORE); ", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportSyntheticAccessEmulation, CompilerOptions.IGNORE); ", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportNoEffectAssignment, CompilerOptions.IGNORE); ", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportNonExternalizedStringLiteral, CompilerOptions.IGNORE); ", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportNoImplicitStringConversion, CompilerOptions.IGNORE); ", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportNonStaticAccessToStatic, CompilerOptions.IGNORE); ", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportIndirectStaticAccess, CompilerOptions.IGNORE); ", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportIncompatibleNonInheritedInterfaceMethod, CompilerOptions.IGNORE); ", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportUnusedPrivateMember, CompilerOptions.IGNORE); ", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportLocalVariableHiding, CompilerOptions.IGNORE); ", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportFieldHiding, CompilerOptions.IGNORE); ", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportPossibleAccidentalBooleanAssignment, CompilerOptions.IGNORE); ", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportEmptyStatement, CompilerOptions.IGNORE); ", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportAssertIdentifier, CompilerOptions.IGNORE); ", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportUndocumentedEmptyBlock, CompilerOptions.IGNORE); ", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportUnnecessaryTypeCheck, CompilerOptions.IGNORE); ", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportUnnecessaryElse, CompilerOptions.IGNORE); ", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportInvalidJavadoc, CompilerOptions.IGNORE);", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportInvalidJavadocTagsVisibility, CompilerOptions.PUBLIC);", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportInvalidJavadocTags, CompilerOptions.DISABLED);", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportMissingJavadocTags, CompilerOptions.IGNORE);", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportMissingJavadocTagsVisibility, CompilerOptions.PUBLIC);", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportMissingJavadocTagsOverriding, CompilerOptions.DISABLED);", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportMissingJavadocComments, CompilerOptions.IGNORE);", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportMissingJavadocCommentsVisibility, CompilerOptions.PUBLIC);", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportMissingJavadocCommentsOverriding, CompilerOptions.DISABLED);", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportFinallyBlockNotCompletingNormally, CompilerOptions.IGNORE);", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportUnusedDeclaredThrownException, CompilerOptions.IGNORE);", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportUnusedDeclaredThrownExceptionWhenOverriding, CompilerOptions.DISABLED); ", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportUnqualifiedFieldAccess, CompilerOptions.IGNORE);", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportUnsafeTypeOperation, CompilerOptions.IGNORE);", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportFinalParameterBound, CompilerOptions.IGNORE);", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportMissingSerialVersion, CompilerOptions.IGNORE);", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportUnusedParameterWhenImplementingAbstract, CompilerOptions.DISABLED); ", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportUnusedParameterWhenOverridingConcrete, CompilerOptions.DISABLED); ", "+\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportSpecialParameterHidingField, CompilerOptions.DISABLED); ", "+", "+\t\t/*", "+\t\t * Handle the nowarn option. If none, then we generate all warnings.", "+\t\t */", "+\t\tif (this.attributes.getNowarn()) {", "+\t\t\tif (this.deprecation) {", "+\t\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportDeprecation, CompilerOptions.WARNING); ", "+\t\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportDeprecationInDeprecatedCode, CompilerOptions.ENABLED); ", "+\t\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportDeprecationWhenOverridingDeprecatedMethod, CompilerOptions.ENABLED); ", "-    \t} else {", "-\t\t\t/*", "-\t\t\t * Handle the nowarn option. If none, then we generate all warnings.", "-\t\t\t */", "-\t\t\tif (this.attributes.getNowarn()) {", "-\t\t\t\tif (this.deprecation) {", "-\t\t\t\t\tcmd.createArgument().setValue(\"-warn:allDeprecation\"); //$NON-NLS-1$", "-\t\t\t\t} else {", "-\t\t\t\t\tcmd.createArgument().setValue(\"-nowarn\"); //$NON-NLS-1$", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tif (this.deprecation) {", "-\t\t\t\t\tcmd.createArgument().setValue(\"-warn:+allDeprecation\"); //$NON-NLS-1$", "-\t\t\t\t} else {", "-\t\t\t\t\tcmd.createArgument().setValue(\"-warn:-allDeprecation,deprecation\"); //$NON-NLS-1$", "-\t\t\t\t}", "-\t\t\t\tif (compilerArgs.length == 0) {", "-\t\t\t\t\tcmd.createArgument().setValue(\"-warn:+constructorName,packageDefaultMethod,maskedCatchBlocks,unusedImports,staticReceiver\"); //$NON-NLS-1$", "-\t\t\t\t}", "-\t\t\t}", "-\t        /*", "-\t\t\t * Add extra argument on the command line", "-\t\t\t */", "-\t\t\tif (compilerArgs.length != 0) {", "-\t\t        cmd.addArguments(compilerArgs);", "-\t\t\t}", "-\t   \t}", "+\t\t\t// no warnings", "+\t\t} else if (this.deprecation) {", "+\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportDeprecation, CompilerOptions.WARNING); ", "+\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportDeprecationInDeprecatedCode, CompilerOptions.ENABLED); ", "+\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportDeprecationWhenOverridingDeprecatedMethod, CompilerOptions.ENABLED); ", "+\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportMethodWithConstructorName, CompilerOptions.WARNING);", "+\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportOverridingPackageDefaultMethod, CompilerOptions.WARNING);", "+\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportHiddenCatchBlock, CompilerOptions.WARNING);", "+\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportUnusedImport, CompilerOptions.WARNING);", "+\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportNonStaticAccessToStatic, CompilerOptions.WARNING);", "+\t\t} else {", "+\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportMethodWithConstructorName, CompilerOptions.WARNING);", "+\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportOverridingPackageDefaultMethod, CompilerOptions.WARNING);", "+\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportHiddenCatchBlock, CompilerOptions.WARNING);", "+\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportUnusedImport, CompilerOptions.WARNING);", "+\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_ReportNonStaticAccessToStatic, CompilerOptions.WARNING);", "+\t\t}", "-\t\t\tcmd.createArgument().setValue(\"-target\"); //$NON-NLS-1$", "-\t\t\tcmd.createArgument().setValue(this.target);", "+\t\t\tif (this.target.equals(\"1.1\")) { //$NON-NLS-1$", "+\t\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_1);", "+\t\t\t} else if (this.target.equals(\"1.2\")) { //$NON-NLS-1$", "+\t\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_2);", "+\t\t\t} else if (this.target.equals(\"1.3\")) { //$NON-NLS-1$", "+\t\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_3);", "+\t\t\t} else if (this.target.equals(\"1.4\")) { //$NON-NLS-1$", "+\t\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_4);", "+\t\t\t} else if (this.target.equals(\"1.5\")) { //$NON-NLS-1$", "+\t\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_5);", "+\t\t\t} else {", "+\t            this.attributes.log(AntAdapterMessages.getString(\"ant.jdtadapter.info.unknownTarget\", this.target), Project.MSG_WARN); //$NON-NLS-1$", "+\t\t\t}", "-            cmd.createArgument().setValue(\"-source\"); //$NON-NLS-1$", "-            cmd.createArgument().setValue(source);", "+        \tif (source.equals(\"1.3\")) { //$NON-NLS-1$", "+\t\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_3);", "+\t\t\t} else if (source.equals(\"1.4\")) { //$NON-NLS-1$", "+\t\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_4);", "+\t\t\t} else if (source.equals(\"1.5\")) { //$NON-NLS-1$", "+\t\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_5);", "+\t\t\t} else {", "+\t            this.attributes.log(AntAdapterMessages.getString(\"ant.jdtadapter.info.unknownSource\", source), Project.MSG_WARN); //$NON-NLS-1$", "+\t\t\t}", "-\t\t\t|| JavaEnvUtils.getJavaVersion().equals(JavaEnvUtils.JAVA_1_1)", "-\t\t\t|| JavaEnvUtils.getJavaVersion().equals(JavaEnvUtils.JAVA_1_2)", "-\t\t\t|| JavaEnvUtils.getJavaVersion().equals(JavaEnvUtils.JAVA_1_3)) {", "-\t\t\tcmd.createArgument().setValue(\"-1.3\"); //$NON-NLS-1$", "+\t\t\t\t|| JavaEnvUtils.getJavaVersion().equals(JavaEnvUtils.JAVA_1_1)", "+\t\t\t\t|| JavaEnvUtils.getJavaVersion().equals(JavaEnvUtils.JAVA_1_2)", "+\t\t\t\t|| JavaEnvUtils.getJavaVersion().equals(JavaEnvUtils.JAVA_1_3)) {", "+\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_3);", "-\t\t\t\tcmd.createArgument().setValue(\"-1.3\"); //$NON-NLS-1$", "+\t\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_3);", "-\t\t\t\tcmd.createArgument().setValue(\"-1.4\"); //$NON-NLS-1$", "+\t\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_4);", "-\t\t\tcmd.createArgument().setValue(\"-1.5\"); //$NON-NLS-1$", "+\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_5);", "-            this.attributes.log(AntAdapterMessages.getString(\"ant.jdtadapter.info.unknownVrsion\"), Project.MSG_WARN); //$NON-NLS-1$", "+            this.attributes.log(AntAdapterMessages.getString(\"ant.jdtadapter.info.unknownVmVersion\", JavaEnvUtils.getJavaVersion()), Project.MSG_WARN); //$NON-NLS-1$", "+\t\tif (compilerArgs != null) {", "+\t        /*", "+\t\t\t * Add extra argument on the command line", "+\t\t\t */", "+\t\t\tif (compilerArgs.length != 0) {", "+\t\t        cmd.addArguments(compilerArgs);", "+\t\t\t}", "+\t   \t}"]}], "num": 68337}