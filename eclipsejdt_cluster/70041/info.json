{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1605c0a3cbde22b78f7aea4498e452b4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "093c9d0e706797ec18822653a546b81b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor2.java", "commitBeforeChange": "c9b530e01318c4f59e9e7828de1da4c97f8fe89e", "commitAfterChange": "69656daba7331091b482d7c6b3e675c144730396", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  \tpublic boolean visit(Assignment node)", "signatureAfterChange": "  \tpublic boolean visit(Assignment node)", "diff": ["-\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameEQUAL, this.preferences.insert_space_before_assignment_operator);", "+\t\tAssignment.Operator operator = node.getOperator();", "+\t\tif (operator == Assignment.Operator.ASSIGN) {", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameEQUAL, this.preferences.insert_space_before_assignment_operator);", "+\t\t} else if (operator == Assignment.Operator.MINUS_ASSIGN) {", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameMINUS_EQUAL, this.preferences.insert_space_before_assignment_operator);", "+\t\t} else if (operator == Assignment.Operator.PLUS_ASSIGN) {", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNamePLUS_EQUAL, this.preferences.insert_space_before_assignment_operator);", "+\t\t} else if (operator == Assignment.Operator.TIMES_ASSIGN) {", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameMULTIPLY_EQUAL, this.preferences.insert_space_before_assignment_operator);", "+\t\t} else if (operator == Assignment.Operator.DIVIDE_ASSIGN) {", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameDIVIDE_EQUAL, this.preferences.insert_space_before_assignment_operator);", "+\t\t} else if (operator == Assignment.Operator.REMAINDER_ASSIGN) {", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameREMAINDER_EQUAL, this.preferences.insert_space_before_assignment_operator);", "+\t\t} else if (operator == Assignment.Operator.LEFT_SHIFT_ASSIGN) {", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLEFT_SHIFT_EQUAL, this.preferences.insert_space_before_assignment_operator);", "+\t\t} else if (operator == Assignment.Operator.RIGHT_SHIFT_SIGNED_ASSIGN) {", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRIGHT_SHIFT_EQUAL, this.preferences.insert_space_before_assignment_operator);", "+\t\t} else if (operator == Assignment.Operator.RIGHT_SHIFT_UNSIGNED_ASSIGN) {", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameUNSIGNED_RIGHT_SHIFT_EQUAL, this.preferences.insert_space_before_assignment_operator);", "+\t\t} else if (operator == Assignment.Operator.BIT_AND_ASSIGN) {", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameAND_EQUAL, this.preferences.insert_space_before_assignment_operator);", "+\t\t} else if (operator == Assignment.Operator.BIT_OR_ASSIGN) {", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameOR_EQUAL, this.preferences.insert_space_before_assignment_operator);", "+\t\t} else {", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameXOR_EQUAL, this.preferences.insert_space_before_assignment_operator);", "+\t\t} "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1df7e9c4c27cd58d55e54768984844fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tpublic boolean visit(ArrayInitializer arrayInitializer, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(ArrayInitializer arrayInitializer, BlockScope scope)", "diff": ["-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameLBRACE, this.preferences.insert_space_before_opening_brace_in_array_initializer);", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLBRACE, this.preferences.insert_space_before_opening_brace_in_array_initializer);", "-\t\t\t\t\t\t\"expressions\",//$NON-NLS-1$", "+\t\t\t\t\t\t\"array_initializer\",//$NON-NLS-1$", "-\t\t\t\t\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_array_initializer);", "+\t\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_array_initializer);", "-\t\t\t\t\t\t\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_array_initializer);", "+\t\t\t\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_array_initializer);", "-\t\t\t\tfor (int i = 1; i < expressionsLength; i++) {", "-\t\t\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_array_initializer);", "-\t\t\t\t\tif (this.preferences.insert_space_after_comma_in_array_initializer) {", "-\t\t\t\t\t\tthis.scribe.space();", "+\t\t\t\tif (expressionsLength == 1) {", "+\t\t\t\t\tif (isComma()) {", "+\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_array_initializer);", "-\t\t\t\t\texpressions[i].traverse(this, scope);", "-\t\t\t\t\tif (i == expressionsLength - 1) {", "-\t\t\t\t\t\tif (isComma()) {", "-\t\t\t\t\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_array_initializer);", "+\t\t\t\t} else {", "+\t\t\t\t\tfor (int i = 1; i < expressionsLength; i++) {", "+\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_array_initializer);", "+\t\t\t\t\t\tif (this.preferences.insert_space_after_comma_in_array_initializer) {", "+\t\t\t\t\t\t\tthis.scribe.space();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\texpressions[i].traverse(this, scope);", "+\t\t\t\t\t\tif (i == expressionsLength - 1) {", "+\t\t\t\t\t\t\tif (isComma()) {", "+\t\t\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_array_initializer);", "+\t\t\t\t\t\t\t}", "-\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameRBRACE, this.preferences.insert_space_before_closing_brace_in_array_initializer, true); ", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACE, this.preferences.insert_space_before_closing_brace_in_array_initializer, true); ", "-\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameRBRACE, this.preferences.insert_space_between_empty_array_initializer, true);", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACE, this.preferences.insert_space_between_empty_array_initializer, true);"]}], "num": 70041}