{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "757d6e8739d9dcfe45bb8c5ef2aaedaa", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a750a00f726b3910242016658edc387", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "4136248cb1581d6af7c774a979b9c48c11440c8d", "commitAfterChange": "442dd8a935e1c62f80c182f45106d33d72b0162e", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tprivate void formatClassBodyDeclarations(AstNode[] nodes)", "signatureAfterChange": " \tprivate void formatClassBodyDeclarations(AstNode[] nodes)", "diff": ["+\t\tAstNode[] mergedNodes = computeMergedMemberDeclarations(nodes);", "-\t\t\t\tfor (int i = startIndex, max = nodes.length; i < max; i++) {", "-\t\t\t\t\tAstNode member = nodes[i];", "+\t\t\t\tfor (int i = startIndex, max = mergedNodes.length; i < max; i++) {", "+\t\t\t\t\tAstNode member = mergedNodes[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44313e68c557e6e22b7f8a32a8c3c7a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/PackageBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic IAnnotationBinding[] getAnnotations()", "signatureAfterChange": "  \tpublic IAnnotationBinding[] getAnnotations()", "diff": ["+\t\t\t\t\t\t\tchar[][][] missingTypeNames = type.getMissingTypeNames();", "-\t\t\t\t\t\t\t\tBinaryTypeBinding.createAnnotations(binaryAnnotations, this.binding.environment);", "+\t\t\t\t\t\t\t\tBinaryTypeBinding.createAnnotations(binaryAnnotations, this.binding.environment, missingTypeNames);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51ac92593e8be42be8c33f10df3add01", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "f18746495477338a9b83fca4f673d973bc3b28e9", "commitAfterChange": "b7c75d5af8ed9aa46f28be9d8bc08449dc25dc4e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tprivate String getFileNamesForPrinting(final ProcessorEnvImpl processorEnv)", "signatureAfterChange": " \tprivate static String getFileNamesForPrinting(final ProcessorEnvImpl processorEnv)", "diff": ["-\tprivate String getFileNamesForPrinting(final ProcessorEnvImpl processorEnv){", "+\tprivate static String getFileNamesForPrinting(final ProcessorEnvImpl processorEnv){", "-\t\tfinal int len = _filesToProcess.length;", "+\t\tfinal IFile[] files = processorEnv.getFiles();", "+\t\tfinal int len = files.length;", "-\t\t\treturn _filesToProcess[0].getName();", "+\t\t\treturn files[0].getName();", "-\t\t\tfor (IFile file : _filesToProcess) {", "+\t\t\tfor (IFile file : files) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d770a456938cbee3ec8e703fbd46b6f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "4a06f985eb8145cfb3f28d93f5654d7e0884471c", "commitAfterChange": "bab8c1ec36ec06523bed5e0a8337045ff2bd7676", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " protected void acceptSourceMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames)", "signatureAfterChange": " protected void acceptSourceMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames)", "diff": ["-\t\t\tif (!simpleName.equals(new String(parameterTypeNames[p]))) {", "+\t\t\tchar[] simpleParameterName = CharOperation.lastSegment(parameterTypeNames[p], '.');", "+\t\t\tif (!simpleName.equals(new String(simpleParameterName))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d25e75088183ef04bd92c098219d92f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "066f1fe71d5d139e5a681c9aeece89fa867b71b7", "commitAfterChange": "39951c3ce9f26380d44e65dd4f0a9c708c89c0d1", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " private void toString(StringBuffer buffer, IType type, int indent, boolean ascendant)", "signatureAfterChange": " private void toString(StringBuffer buffer, IType type, int indent, boolean ascendant)", "diff": ["-\tfor (int i= 0; i < types.length; i++) {", "+\tIJavaElement[] sortedTypes = Util.sortCopy(types);", "+\tfor (int i= 0; i < sortedTypes.length; i++) {", "-\t\tJavaElement element = (JavaElement)types[i];", "+\t\tJavaElement element = (JavaElement)sortedTypes[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f68e892d565ac43c754b40d9a919ffb9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ElementsImpl.java", "commitBeforeChange": "1ef655dc80be94aa11cbdec5e78267f6c837c4b8", "commitAfterChange": "95432d5123ca3b468759ddfcb1f2df3ed053a31b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \t@Override \tpublic PackageElement getPackageElement(CharSequence name)", "signatureAfterChange": "  \t@Override \tpublic PackageElement getPackageElement(CharSequence name)", "diff": ["-\t\tPackageBinding packageBinding = le.getTopLevelPackage(name.toString().toCharArray());", "+\t\tchar[] packageName = name.toString().toCharArray();", "+\t\tPackageBinding packageBinding = le.createPackage(CharOperation.splitOn('.', packageName));"]}], "num": 20065}