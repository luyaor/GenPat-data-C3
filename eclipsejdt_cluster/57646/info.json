{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f6910c80becff344329235754021e75a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04a1098de600044e218df870210917e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "c59be425cf25326239f4ea61082e801292bcf9ab", "commitAfterChange": "d6fb9802bac486c7e71b20d321f123bc000bd933", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public static String createArraySignature(String typeSignature, int arrayCount)", "signatureAfterChange": "\r public static String createArraySignature(String typeSignature, int arrayCount)", "diff": ["-\tif (arrayCount == 0) return typeSignature;\r", "-\tStringBuffer sb = new StringBuffer(typeSignature.length() + arrayCount);\r", "-\tfor (int i = 0; i < arrayCount; ++i) {\r", "-\t\tsb.append(C_ARRAY);\r", "+\treturn new String(createArraySignature(typeSignature.toCharArray(), arrayCount));\r", "+}\r", "-\tsb.append(typeSignature);\r", "-\treturn sb.toString();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "628ffc956abc08dbbb4ea2842f315bf4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/AptConfigurationBlock.java", "commitBeforeChange": "c4c0df5e4aeb7d3e8571312c597020a7d0812327", "commitAfterChange": "6fea7eafdd413dccff31028f8da1f1ac6859e6fe", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tprivate IStatus validateGenSrcDir()", "signatureAfterChange": " \tprivate IStatus validateGenSrcDir()", "diff": ["-\t\t// TODO: this check should be delegated to a validation routine in apt.core.", "-\t\tPath path = null;", "-\t\tif (dirName != null) {", "-\t\t\tpath= new Path(dirName);", "-\t\t}", "-\t\tif (path == null || ", "-\t\t\t\tpath.isAbsolute() || ", "-\t\t\t\tpath.isEmpty() || ", "-\t\t\t\t!path.isValidPath(dirName) ||", "-\t\t\t\t!dirName.trim().equals(dirName)) {", "+\t\tif (!AptConfig.validateGenSrcDir(fJProj, dirName)) {", "-\t\t// TODO: how can we tell whether dirName points to a \"normal\" src directory?"]}], "num": 57646}