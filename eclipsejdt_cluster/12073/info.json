{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2b5982f83095c8871b71ca09cd4d3425", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7704697f674a237bcced1a36379d1d8b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "b2a1a7d064fd5695fce4ad30f84d3e52d57db8d6", "commitAfterChange": "58d495f741112fe1313f49af60925198c18bb8e1", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 33, "signatureBeforeChange": " \t\tpublic void logTiming(long time, long lineCount)", "signatureAfterChange": " \t\tpublic void logTiming(CompilerStats compilerStats)", "diff": ["-\t\tpublic void logTiming(long time, long lineCount) {", "+\t\tpublic void logTiming(CompilerStats compilerStats) {", "+\t\t\tlong time = compilerStats.elapsedTime();", "+\t\t\tlong lineCount = compilerStats.lineCount;", "-\t\t\t\tthis.printlnOut(this.main.bind(", "-\t\t\t\t\t\"compile.instantTime\", //$NON-NLS-1$", "-\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\tString.valueOf(lineCount),", "-\t\t\t\t\t\tString.valueOf(time),", "-\t\t\t\t\t\tString.valueOf(((int) (lineCount * 10000.0 / time)) / 10.0) }));", "+\t\t\t\tthis.printlnOut(", "+\t\t\t\t\tthis.main.bind(\"compile.instantTime\", //$NON-NLS-1$", "+\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\tString.valueOf(lineCount),", "+\t\t\t\t\t\t\tString.valueOf(time),", "+\t\t\t\t\t\t\tString.valueOf(((int) (lineCount * 10000.0 / time)) / 10.0),", "+\t\t\t\t\t\t}));", "-\t\t\t\tthis.printlnOut(this.main.bind(\"compile.totalTime\", String.valueOf(time))); //$NON-NLS-1$", "+\t\t\t\tthis.printlnOut(", "+\t\t\t\t\tthis.main.bind(\"compile.totalTime\", //$NON-NLS-1$", "+\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\tString.valueOf(time),", "+\t\t\t\t\t\t})); ", "+\t\t\t}", "+\t\t\tif ((this.main.timing & Main.TIMING_DETAILED) != 0) {", "+\t\t\t\tlong readTime = compilerStats.sourceInputTime + compilerStats.binaryInputTime;", "+\t\t\t\tthis.printlnOut(", "+\t\t\t\t\t\tthis.main.bind(\"compile.detailedTime\", //$NON-NLS-1$", "+\t\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\t\tString.valueOf(compilerStats.parseTime),", "+\t\t\t\t\t\t\t\tString.valueOf(((int) (compilerStats.parseTime * 1000.0 / time)) / 10.0),", "+\t\t\t\t\t\t\t\tString.valueOf(compilerStats.resolveTime),", "+\t\t\t\t\t\t\t\tString.valueOf(((int) (compilerStats.resolveTime * 1000.0 / time)) / 10.0),", "+\t\t\t\t\t\t\t\tString.valueOf(compilerStats.analyzeTime),", "+\t\t\t\t\t\t\t\tString.valueOf(((int) (compilerStats.analyzeTime * 1000.0 / time)) / 10.0),", "+\t\t\t\t\t\t\t\tString.valueOf(compilerStats.generateTime),", "+\t\t\t\t\t\t\t\tString.valueOf(((int) (compilerStats.generateTime * 1000.0 / time)) / 10.0),", "+\t\t\t\t\t\t\t}));", "+\t\t\t\tthis.printlnOut(", "+\t\t\t\t\t\tthis.main.bind(\"compile.ioTime\", //$NON-NLS-1$", "+\t\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\t\tString.valueOf(readTime),", "+\t\t\t\t\t\t\t\tString.valueOf(((int) (readTime * 1000.0 / time)) / 10.0),", "+\t\t\t\t\t\t\t\tString.valueOf(compilerStats.outputTime),", "+\t\t\t\t\t\t\t\tString.valueOf(((int) (compilerStats.outputTime * 1000.0 / time)) / 10.0),", "+\t\t\t\t\t\t\t}));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf6a2f4dfd67879e3dad4e5b8ea49f69", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 166, "methodNumberAfterChange": 170, "signatureBeforeChange": " public void incorrectSwitchType(Expression expression, TypeBinding testType)", "signatureAfterChange": " public void incorrectSwitchType(Expression expression, TypeBinding testType)", "diff": ["-\tthis.handle(", "-\t\tIProblem.IncorrectSwitchType,", "-\t\tnew String[] {new String(testType.readableName())},", "-\t\tnew String[] {new String(testType.shortReadableName())},", "-\t\texpression.sourceStart,", "-\t\texpression.sourceEnd);", "+\tif (this.options.sourceLevel < ClassFileConstants.JDK1_7) {", "+\t\tif (testType.id == TypeIds.T_JavaLangString) {", "+\t\t\tthis.handle(", "+\t\t\t\t\tIProblem.SwitchOnStringsNotBelow17,", "+\t\t\t\t\tnew String[] {new String(testType.readableName())},", "+\t\t\t\t\tnew String[] {new String(testType.shortReadableName())},", "+\t\t\t\t\texpression.sourceStart,", "+\t\t\t\t\texpression.sourceEnd);", "+\t\t} else {", "+\t\t\tthis.handle(", "+\t\t\t\tIProblem.IncorrectSwitchType,", "+\t\t\t\tnew String[] {new String(testType.readableName())},", "+\t\t\t\tnew String[] {new String(testType.shortReadableName())},", "+\t\t\t\texpression.sourceStart,", "+\t\t\t\texpression.sourceEnd);", "+\t\t}", "+\t} else {", "+\t\tthis.handle(", "+\t\t\t\tIProblem.IncorrectSwitchType17,", "+\t\t\t\tnew String[] {new String(testType.readableName())},", "+\t\t\t\tnew String[] {new String(testType.shortReadableName())},", "+\t\t\t\texpression.sourceStart,", "+\t\t\t\texpression.sourceEnd);", "+\t}"]}], "num": 12073}