{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cb4e30fae5d9e67f41a426530e4453d6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c394775d0046124782520811f5a6ec2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "b8f9116e058ff109e3943db933379c84a64ecfdc", "commitAfterChange": "b5f5f93dde4e439dc96f53e74d57c1059230610e", "methodNumberBeforeChange": 142, "methodNumberAfterChange": 142, "signatureBeforeChange": " \tpublic boolean visit(TagElement node)", "signatureAfterChange": " \tpublic boolean visit(TagElement node)", "diff": ["-\t\tif (isChanged(node, TagElement.FRAGMENTS_PROPERTY)) {", "-\t\t\t// eval position after opening parent", "-\t\t\ttry {", "-\t\t\t\tint startOffset= getScanner().getTokenEndOffset(ITerminalSymbols.TokenNameIdentifier, node.getStartPosition());", "-\t\t\t\trewriteNodeList(node, TagElement.FRAGMENTS_PROPERTY, startOffset, \" \", \", \"); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t} catch (CoreException e) {", "-\t\t\t\thandleException(e);", "+\t\t", "+\t\tint changeKind= getChangeKind(node, TagElement.TAG_NAME_PROPERTY);", "+\t\tswitch (changeKind) {", "+\t\t\tcase RewriteEvent.INSERTED: {", "+\t\t\t    String newTagName= '@' + (String) getNewValue(node, TagElement.TAG_NAME_PROPERTY);", "+\t\t\t\tdoTextInsert(node.getStartPosition(), newTagName, getEditGroup(node, TagElement.TAG_NAME_PROPERTY));", "+\t\t\t\tbreak;", "+\t\t\tcase RewriteEvent.REMOVED: {", "+\t\t\t    String oldTag= (String) getOriginalValue(node, TagElement.TAG_NAME_PROPERTY);", "+\t\t\t    int tagEnd= findTagNameStart(node)  + oldTag.length();", "+\t\t\t    doTextRemove(node.getStartPosition(), tagEnd - node.getStartPosition(), getEditGroup(node, TagElement.TAG_NAME_PROPERTY));", "+\t\t\t    break;", "+\t\t\t}", "+\t\t\tcase RewriteEvent.REPLACED: {", "+\t\t\t    String newTagName= (String) getNewValue(node, TagElement.TAG_NAME_PROPERTY);", "+\t\t    \tString oldTag= (String) getOriginalValue(node, TagElement.TAG_NAME_PROPERTY);", "+\t\t    \tint tagStart= findTagNameStart(node);", "+\t\t    \tdoTextReplace(tagStart, oldTag.length(), newTagName, getEditGroup(node, TagElement.TAG_NAME_PROPERTY));", "+\t\t\t    break;", "+\t\t\t}", "+\t\t}", "+\t\t\t\t", "+\t\tif (isChanged(node, TagElement.FRAGMENTS_PROPERTY)) {", "+\t\t\t// eval position after name", "+\t\t\tint startOffset= node.getStartPosition();", "+            String oldTag= (String) getOriginalValue(node, TagElement.TAG_NAME_PROPERTY);", "+            if (oldTag != null) {", "+                startOffset= findTagNameStart(node) + oldTag.length();", "+            }", "+            ", "+            rewriteNodeList(node, TagElement.FRAGMENTS_PROPERTY, startOffset, \" \", \" \");  //$NON-NLS-1$//$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c611223ca2eddaf522e56f250afb1f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "e497289bc003a7408d142ab6e19e1ca9f528eed2", "commitAfterChange": "64adb94de0734c7d5adfd2cb11839ed3d3641dfc", "methodNumberBeforeChange": 148, "methodNumberAfterChange": 148, "signatureBeforeChange": " \tpublic boolean visit(TagElement node)", "signatureAfterChange": " \tpublic boolean visit(TagElement node)", "diff": ["-\t\t\t    String newTagName= '@' + (String) getNewValue(node, TagElement.TAG_NAME_PROPERTY);", "+\t\t\t    String newTagName= (String) getNewValue(node, TagElement.TAG_NAME_PROPERTY);", "-\t\t\t    String oldTag= (String) getOriginalValue(node, TagElement.TAG_NAME_PROPERTY);", "-\t\t\t    int tagEnd= findTagNameStart(node)  + oldTag.length();", "-\t\t\t    doTextRemove(node.getStartPosition(), tagEnd - node.getStartPosition(), getEditGroup(node, TagElement.TAG_NAME_PROPERTY));", "+\t\t\t    doTextRemove(node.getStartPosition(), findTagNameEnd(node) - node.getStartPosition(), getEditGroup(node, TagElement.TAG_NAME_PROPERTY));", "-\t\t    \tString oldTag= (String) getOriginalValue(node, TagElement.TAG_NAME_PROPERTY);", "-\t\t    \tint tagStart= findTagNameStart(node);", "-\t\t    \tdoTextReplace(tagStart, oldTag.length(), newTagName, getEditGroup(node, TagElement.TAG_NAME_PROPERTY));", "+\t\t    \tdoTextReplace(node.getStartPosition(), findTagNameEnd(node) - node.getStartPosition(), newTagName, getEditGroup(node, TagElement.TAG_NAME_PROPERTY));", "-\t\t\tint startOffset= node.getStartPosition();", "-            String oldTag= (String) getOriginalValue(node, TagElement.TAG_NAME_PROPERTY);", "-            if (oldTag != null) {", "-                startOffset= findTagNameStart(node) + oldTag.length();", "-            }", "-            ", "-            rewriteNodeList(node, TagElement.FRAGMENTS_PROPERTY, startOffset, \" \", \" \");  //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\tint endOffset= findTagNameEnd(node);", "+            rewriteNodeList(node, TagElement.FRAGMENTS_PROPERTY, endOffset, \" \", \" \");  //$NON-NLS-1$//$NON-NLS-2$"]}], "num": 36107}