{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ebfb124807531464038b3911c89e177", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03888303ec6619bad3bb96db1b3d64bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "74d118e989117eba0163f0f707314197db0891af", "commitAfterChange": "43cdae5117454d896e9e9cf435f63b0b509e3a4c", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 134, "signatureBeforeChange": " public void testBug392245_tmp_warning()", "signatureAfterChange": " public void testDefault06_bin()", "diff": ["-public void testBug392245_tmp_warning() {", "-\trunNegativeTestWithLibs(", "-\t\tnew String[] {", "-\t\t\t\"X.java\",", "-\t\t\t\"import org.eclipse.jdt.annotation.*;\\n\" +", "-\t\t\t\"@NonNullByDefault(DefaultLocation.TYPE_ARGUMENT)\\n\" +", "-\t\t\t\"public class X {\\n\" +", "-\t\t\t\"\tvoid m(Object o) {}\\n\" +", "-\t\t\t\"\tvoid test() {\\n\" +", "-\t\t\t\"\t\tm(null); // ERR\\n\" + // since @NonNullByDefault is still interpreted as all or nothing", "-\t\t\t\"\t}\\n\" +", "-\t\t\t\"}\\n\"", "-\t\t},", "-\t\t\"----------\\n\" + ", "-\t\t\"1. WARNING in X.java (at line 2)\\n\" + ", "-\t\t\"\t@NonNullByDefault(DefaultLocation.TYPE_ARGUMENT)\\n\" + ", "-\t\t\"\t                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\"Arguments controling the details of the nullness default are not yet evaluated by the analysis.\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\"\tm(null); // ERR\\n\" + ", "-\t\t\"\t  ^^^^\\n\" + ", "-\t\t\"Null type mismatch: required \\'@NonNull Object\\' but the provided value is null\\n\" + ", "-\t\t\"----------\\n\");", "-}", "+// apply default to type parameter - inner class", "+public void testDefault06_bin() {", "+\trunConformTestWithLibs(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"import org.eclipse.jdt.annotation.*;\\n\" +", "+\t\t\t\"@NonNullByDefault(DefaultLocation.TYPE_PARAMETER)\\n\" +", "+\t\t\t\"public class X {\\n\" +", "+\t\t\t\"\tstatic class Inner<T> {\\n\" +", "+\t\t\t\"\t\tT process(T t) {\\n\" +", "+\t\t\t\"\t\t\treturn t;\\n\" +", "+\t\t\t\" \t\t}\\n\" +", "+\t\t\t\"\t}\\n\" +", "+\t\t\t\"}\\n\"", "+\t\t},", "+\t\tgetCompilerOptions(),", "+\t\t\"\");", "+\trunNegativeTestWithLibs(", "+\t\tnew String[] {", "+\t\t\t\"Y.java\",", "+\t\t\t\"import org.eclipse.jdt.annotation.*;\\n\" +", "+\t\t\t\"public class Y {\\n\" +", "+\t\t\t\"\tvoid test(X.Inner<Number> inum) {\\n\" +", "+\t\t\t\"\t\t@NonNull Number nnn = inum.process(null); // ERR on argument\\n\" +", "+\t\t\t\"\t}\\n\" +", "+\t\t\t\"}\\n\"", "+\t\t},", "+\t\tgetCompilerOptions(),", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in Y.java (at line 4)\\n\" + ", "+\t\t\"\t@NonNull Number nnn = inum.process(null); // ERR on argument\\n\" + ", "+\t\t\"\t                                   ^^^^\\n\" + ", "+\t\t\"Null type mismatch: required \\'@NonNull Number\\' but the provided value is null\\n\" + ", "+\t\t\"----------\\n\");}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfe1b3766ed96c8cea4d86851282c1d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "b70a8ef15d3ecb3f80cac545a48011ae8c1f5f45", "commitAfterChange": "78062f651ed5392b1800a53eac72f4f25be7d9fe", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 134, "signatureBeforeChange": " public void testDefault06()", "signatureAfterChange": "\r public void testDefault06()", "diff": ["-// apply default to type parameter - inner class", "-public void testDefault06() {", "-\trunNegativeTestWithLibs(", "-\t\tnew String[] {", "-\t\t\t\"X.java\",", "-\t\t\t\"import org.eclipse.jdt.annotation.*;\\n\" +", "-\t\t\t\"@NonNullByDefault(DefaultLocation.TYPE_PARAMETER)\\n\" +", "-\t\t\t\"public class X {\\n\" +", "-\t\t\t\"\tclass Inner<T> {\\n\" +", "-\t\t\t\"\t\tT process(T t) {\\n\" +", "-\t\t\t\"\t\t\t@NonNull T t2 = t; // OK\\n\" +", "-\t\t\t\"\t\t\treturn null; // ERR\\n\" +", "-\t\t\t\" \t\t}\\n\" +", "-\t\t\t\"\t}\\n\" +", "-\t\t\t\"\tvoid test(Inner<Number> inum) {\\n\" +", "-\t\t\t\"\t\t@NonNull Number nnn = inum.process(null); // ERR on argument\\n\" +", "-\t\t\t\"\t}\\n\" +", "-\t\t\t\"}\\n\"", "-\t\t},", "-\t\tgetCompilerOptions(),", "-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\"\treturn null; // ERR\\n\" + ", "-\t\t\"\t       ^^^^\\n\" + ", "-\t\t\"Null type mismatch: required \\'@NonNull T\\' but the provided value is null\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 11)\\n\" + ", "-\t\t\"\t@NonNull Number nnn = inum.process(null); // ERR on argument\\n\" + ", "-\t\t\"\t                                   ^^^^\\n\" + ", "-\t\t\"Null type mismatch: required \\'@NonNull Number\\' but the provided value is null\\n\" + ", "-\t\t\"----------\\n\");", "-}", "+// apply default to type parameter - inner class\r", "+public void testDefault06() {\r", "+\trunNegativeTestWithLibs(\r", "+\t\tnew String[] {\r", "+\t\t\t\"X.java\",\r", "+\t\t\t\"import org.eclipse.jdt.annotation.*;\\n\" +\r", "+\t\t\t\"@NonNullByDefault(DefaultLocation.TYPE_PARAMETER)\\n\" +\r", "+\t\t\t\"public class X {\\n\" +\r", "+\t\t\t\"\tclass Inner<T> {\\n\" +\r", "+\t\t\t\"\t\tT process(T t) {\\n\" +\r", "+\t\t\t\"\t\t\t@NonNull T t2 = t; // OK\\n\" +\r", "+\t\t\t\"\t\t\treturn null; // ERR\\n\" +\r", "+\t\t\t\" \t\t}\\n\" +\r", "+\t\t\t\"\t}\\n\" +\r", "+\t\t\t\"\tvoid test(Inner<Number> inum) {\\n\" +\r", "+\t\t\t\"\t\t@NonNull Number nnn = inum.process(null); // ERR on argument\\n\" +\r", "+\t\t\t\"\t}\\n\" +\r", "+\t\t\t\"}\\n\"\r", "+\t\t},\r", "+\t\tgetCompilerOptions(),\r", "+\t\t\"----------\\n\" + \r", "+\t\t\"1. ERROR in X.java (at line 7)\\n\" + \r", "+\t\t\"\treturn null; // ERR\\n\" + \r", "+\t\t\"\t       ^^^^\\n\" + \r", "+\t\t\"Null type mismatch: required \\'@NonNull T\\' but the provided value is null\\n\" + \r", "+\t\t\"----------\\n\" + \r", "+\t\t\"2. ERROR in X.java (at line 10)\\n\" + \r", "+\t\t\"\tvoid test(Inner<Number> inum) {\\n\" + \r", "+\t\t\"\t                ^^^^^^\\n\" + \r", "+\t\t\"Null constraint mismatch: The type \\'Number\\' is not a valid substitute for the type parameter \\'@NonNull T\\'\\n\" + \r", "+\t\t\"----------\\n\" + \r", "+\t\t\"3. ERROR in X.java (at line 11)\\n\" + \r", "+\t\t\"\t@NonNull Number nnn = inum.process(null); // ERR on argument\\n\" + \r", "+\t\t\"\t                                   ^^^^\\n\" + \r", "+\t\t\"Null type mismatch: required \\'@NonNull Number\\' but the provided value is null\\n\" + \r", "+\t\t\"----------\\n\");\r", "+}\r"]}], "num": 54901}