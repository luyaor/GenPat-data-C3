{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "721c60b5c3f184fa478ba343135293a7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a9902de78c9bdd08bf59c10f8a4da76", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": "  \tprivate Scope computeForbiddenBindings(ASTNode astNode, ASTNode astNodeParent, Scope scope)", "signatureAfterChange": "  \tprivate Scope computeForbiddenBindings(ASTNode astNode, ASTNode astNodeParent, Scope scope)", "diff": ["-\t\tthis.forbbidenBindingsFilter = NONE;", "-\t\t\t}", "-\t\t} else {", "-\t\t\tif (astNodeParent != null && astNodeParent instanceof TryStatement) {", "-\t\t\t\tboolean isException = false;", "-\t\t\t\tif (astNode instanceof CompletionOnSingleTypeReference) {", "-\t\t\t\t\tisException = ((CompletionOnSingleTypeReference)astNode).isException();", "-\t\t\t\t} else if (astNode instanceof CompletionOnQualifiedTypeReference) {", "-\t\t\t\t\tisException = ((CompletionOnQualifiedTypeReference)astNode).isException();", "-\t\t\t\t} else if (astNode instanceof CompletionOnParameterizedQualifiedTypeReference) {", "-\t\t\t\t\tisException = ((CompletionOnParameterizedQualifiedTypeReference)astNode).isException();", "-\t\t\t\t}", "-\t\t\t\tif (isException) {", "-\t\t\t\t\tArgument[] catchArguments = ((TryStatement) astNodeParent).catchArguments;", "-\t\t\t\t\tint length = catchArguments == null ? 0 : catchArguments.length;", "-\t\t\t\t\tfor (int i = 0; i < length; i++) {", "-\t\t\t\t\t\tTypeBinding caughtException = catchArguments[i].type.resolvedType;", "-\t\t\t\t\t\tif (caughtException != null) {", "-\t\t\t\t\t\t\taddForbiddenBindings(caughtException);", "-\t\t\t\t\t\t\tthis.knownTypes.put(CharOperation.concat(caughtException.qualifiedPackageName(), caughtException.qualifiedSourceName(), '.'), KNOWN_TYPE_WITH_KNOWN_CONSTRUCTORS);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tthis.forbbidenBindingsFilter = SUBTYPE;", "-\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "980b31fcd06bd019c925c59c9527a0cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "f2d453b40b80a7b4342f872cb4a2ceb30cb26035", "commitAfterChange": "ff67eddd91980875c818d1dd4c9e986c8fe296a7", "methodNumberBeforeChange": 124, "methodNumberAfterChange": 127, "signatureBeforeChange": "  \tprivate Scope computeForbiddenBindings(ASTNode astNode, ASTNode astNodeParent, Scope scope)", "signatureAfterChange": "  \tprivate Scope computeForbiddenBindings(ASTNode astNode, ASTNode astNodeParent, Scope scope)", "diff": ["+\t\tthis.forbbidenBindingsFilter = NONE;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} else {", "+\t\t\tif (astNodeParent != null && astNodeParent instanceof TryStatement) {", "+\t\t\t\tboolean isException = false;", "+\t\t\t\tif (astNode instanceof CompletionOnSingleTypeReference) {", "+\t\t\t\t\tisException = ((CompletionOnSingleTypeReference)astNode).isException();", "+\t\t\t\t} else if (astNode instanceof CompletionOnQualifiedTypeReference) {", "+\t\t\t\t\tisException = ((CompletionOnQualifiedTypeReference)astNode).isException();", "+\t\t\t\t} else if (astNode instanceof CompletionOnParameterizedQualifiedTypeReference) {", "+\t\t\t\t\tisException = ((CompletionOnParameterizedQualifiedTypeReference)astNode).isException();", "+\t\t\t\t}", "+\t\t\t\tif (isException) {", "+\t\t\t\t\tArgument[] catchArguments = ((TryStatement) astNodeParent).catchArguments;", "+\t\t\t\t\tint length = catchArguments == null ? 0 : catchArguments.length;", "+\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\tTypeBinding caughtException = catchArguments[i].type.resolvedType;", "+\t\t\t\t\t\tif (caughtException != null) {", "+\t\t\t\t\t\t\tthis.addForbiddenBindings(caughtException);", "+\t\t\t\t\t\t\tthis.knownTypes.put(CharOperation.concat(caughtException.qualifiedPackageName(), caughtException.qualifiedSourceName(), '.'), this);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tthis.forbbidenBindingsFilter = SUBTYPE;"]}], "num": 72697}