{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "515eb9d88f9c9d3af193252ae967b286", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "119eb78db40eea73f46389b111e5fd44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "00cabdb6b90ee48364f71e75a5da5edca1e7837c", "commitAfterChange": "fcccc4dd1377e549112e0bdc9a74b0eb625c6ab2", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "  \tprivate void printBlockComment(int currentTokenStartPosition, int currentTokenEndPosition)", "signatureAfterChange": "  \tprivate void printBlockComment(int currentTokenStartPosition, int currentTokenEndPosition)", "diff": ["+", "+\t\t// Compute indentation", "+\t\tint firstColumn = this.column;", "+\t\tint indentLevel = this.indentationLevel;", "+\t\tint indentations = this.numberOfIndentations;", "+\t\tthis.indentationLevel = getNextIndentationLevel(firstColumn);", "+\t\tthis.numberOfIndentations = this.indentationLevel % this.indentationSize;", "+", "+\t\t\t\t\t\t\t\tnewLine = false;", "-    \t\tif (scannerLine == firstLine) hastTextOnFirstLine = true;", "+    \t\tif (!hastTextOnFirstLine && scannerLine == firstLine) {", "+    \t\t\thastTextOnFirstLine = true;", "+    \t\t\tthis.column++;", "+    \t\t}", "+\t\tthis.indentationLevel = indentLevel;", "+\t\tthis.numberOfIndentations = indentations;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "121f7df31f9a2f08bf118ca4671f3edb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "3cbc5a17035fd93e630a5ce3a447371924b2eaec", "commitAfterChange": "2fbac062d3f933d7974166e3d20ea9843fdd9750", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tprivate String getPreserveEmptyLines(int count)", "signatureAfterChange": " \tprivate String getPreserveEmptyLines(int count)", "diff": ["-\t\t\t\t\tint currentColumn = getCurrentIndentation(this.scanner.currentPosition);", "+\t\t\t\t\tint currentIndentation = getCurrentColumn(this.scanner.currentPosition) - 1;", "-\t\t\t\t\tif (this.indentationLevel < currentColumn) {", "-\t\t\t\t\t\tthis.indentationLevel = currentColumn;", "+\t\t\t\t\tif (this.indentationLevel < currentIndentation) {", "+\t\t\t\t\t\tthis.indentationLevel = currentIndentation;", "-\t\t\t\t\t\tSystem.out.println(\" - current column = \"+currentColumn); //$NON-NLS-1$", "+\t\t\t\t\t\tSystem.out.println(\" - current column = \"+(currentIndentation+1)); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f3bef57caf6151023091cadd874b7c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "9119c5301e420afe7dc5c32f48df3623b2b07010", "commitAfterChange": "1cd36da9dd049ac527dcab1976c08155d6c121b9", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \t \tprivate void printCommentLine(char[] s)", "signatureAfterChange": " \t \tprivate void printCommentLine(char[] s)", "diff": ["-\t\t\t\t\tthis.indentationLevel = this.currentAlignment.breakIndentationLevel;", "+\t\t\t\t\tthis.indentationLevel = Math.max(this.indentationLevel, this.currentAlignment.breakIndentationLevel);", "-\t\t\t\t\tthis.indentationLevel = this.memberAlignment.breakIndentationLevel;", "+\t\t\t\t\tthis.indentationLevel = Math.max(this.indentationLevel, this.memberAlignment.breakIndentationLevel);", "-\t\t\t\tthis.indentationLevel = this.currentAlignment.breakIndentationLevel;", "+\t\t\t\tthis.indentationLevel = Math.max(this.indentationLevel, this.currentAlignment.breakIndentationLevel);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99e2c4b7bc886889cb64d6c5e1c96843", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "8d903d0ba6af519462e797d9a7ec8393e31c70b2", "commitAfterChange": "7784cb2e8f17bfa5f33db4c9a4c52ad92916d78e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic Alignment createAlignment(String name, int mode, int tieBreakRule, int count, int sourceRestart)", "signatureAfterChange": " \t \tpublic Alignment createAlignment(String name, int mode, int tieBreakRule, int count, int sourceRestart)", "diff": ["+\t\t// adjust break indentation", "+\t\tif (this.currentAlignment != null) {", "+\t\t\tAlignment current = this.currentAlignment;", "+\t\t\twhile (current.enclosing != null) {", "+\t\t\t\tcurrent = current.enclosing;", "+\t\t\t}", "+\t\t\tswitch(current.chunkKind) {", "+\t\t\t\tcase Alignment.CHUNK_METHOD :", "+\t\t\t\tcase Alignment.CHUNK_TYPE :", "+\t\t\t\t\talignment.breakIndentationLevel = this.indentationLevel + (this.useTab ? 1 : this.tabSize);", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Alignment.CHUNK_FIELD :", "+\t\t\t\t\talignment.breakIndentationLevel = current.originalIndentationLevel + (this.useTab ? 1 : this.tabSize);", "+\t\t\t\t\tbreak;", "+\t\t\t}", "+\t\t}"]}], "num": 29639}