{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b8e41a89e57d1960307178fd4a35182e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "793beb17ca4d539db470585653e9b76c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "9c69d8563911aa9f6df8f556adf1ceee2ecffd81", "commitAfterChange": "a3376443e7433851c1c9a2be37ee8e7113265608", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": "\r \t\r \tprivate void propagateErrors(CompilationUnit unit, IProblem[] problems, int problemLength)", "signatureAfterChange": "\r \t\r \tprivate void propagateErrors(CompilationUnit unit, IProblem[] problems, int problemLength)", "diff": ["-\t\tASTErrorPropagator errorPropagator = new ASTErrorPropagator(resizeProblems);\r", "-\t\tunit.accept(errorPropagator);\r", "+\t\tASTSyntaxErrorPropagator syntaxErrorPropagator = new ASTSyntaxErrorPropagator(resizeProblems);\r", "+\t\tunit.accept(syntaxErrorPropagator);\r", "+\t\t// store the messages error on the compulation unit\r", "+\t\tMessage[] messages = new Message[problemLength];\r", "+\t\tfor (int i = 0; i < problemLength; i++) {\r", "+\t\t\tIProblem problem = problems[i];\r", "+\t\t\tmessages[i] = new Message(problem.getMessage(), problem.getSourceStart());\r", "+\t\t}\r", "+\t\tunit.setMessages(messages);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b462bffb36031bcc432462f7951276cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "b57e7c981fa856dab0b4c4311954db8941eed35a", "commitAfterChange": "511760debb72b546c64ecd1cd34ab8f6595aeb12", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void checkExternalArchiveChanges(IJavaElement[] refreshedElements, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic void checkExternalArchiveChanges(IJavaElement[] refreshedElements, IProgressMonitor monitor) throws JavaModelException", "diff": ["-", "+\t", "-", "+\t", "-", "+\t", "-", "+\t", "-", "+\t", "-", "+\t", "+\t\t\t\t", "+\t\t\t\t// force classpath marker refresh of affected projects", "+\t\t\t\tJavaModel.flushExternalFileCache();", "+\t\t\t\tIJavaElementDelta[] projectDeltas = fCurrentDelta.getAffectedChildren();", "+\t\t\t\tfor (int i = 0, length = projectDeltas.length; i < length; i++) {", "+\t\t\t\t\tIJavaElementDelta delta = projectDeltas[i];", "+\t\t\t\t\t((JavaProject)delta.getElement()).getResolvedClasspath(", "+\t\t\t\t\t\ttrue, // ignoreUnresolvedEntry", "+\t\t\t\t\t\ttrue); // generateMarkerOnError", "+\t\t\t\t}\t\t"]}], "num": 14795}