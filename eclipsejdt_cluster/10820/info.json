{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b43abec3d4da59d1649f9fef4714251", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07da01bd80da6a1d4f0439d01f79ace6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/LambdaExpressionsTest.java", "commitBeforeChange": "3256aef43e2296affdbf86e21f8cafdaa866161a", "commitAfterChange": "f357f309273e0bfe8345ff708d18fa83c6a34931", "methodNumberBeforeChange": 163, "methodNumberAfterChange": 163, "signatureBeforeChange": " public void test430766a()", "signatureAfterChange": " public void test430766a()", "diff": ["-\t\t\t\"\t                                             ^^^^^^^^^\\n\" + ", "-\t\t\t\"The method nullsLast(Comparator<? super T>) in the type Comparator is not applicable for the arguments (Person::<Runnable>isRunnable)\\n\" + ", "+\t\t\t\"\t                        ^^^^^^^^^\\n\" + ", "+\t\t\t\"The method comparing(Function<? super T,? extends U>) in the type Comparator is not applicable for the arguments (Comparator<Object>)\\n\" + ", "+\t\t\t\"\t                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from Comparator<Object> to Function<? super T,? extends U>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 21)\\n\" + ", "+\t\t\t\"\tpersons.sort(Comparator.comparing(Comparator.nullsLast(Person::<Runnable>isRunnable)));\\n\" + ", "-\t\t\t\"The type X.Person does not define isRunnable(T, T) that is applicable here\\n\" + ", "+\t\t\t\"The type X.Person does not define isRunnable(Object, Object) that is applicable here\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b780ff6d9a1dbc3c0023598203cc2de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "2ddc36d9802fe92e03ac6931b2247b95e00b263a", "commitAfterChange": "2090b5298a9eb5bc7687aac3bc306c4718d688bb", "methodNumberBeforeChange": 748, "methodNumberAfterChange": 748, "signatureBeforeChange": " public void test743()", "signatureAfterChange": " public void test743()", "diff": ["-\t\t\"1. ERROR in X.java (at line 16)\\n\" + ", "-\t\t\"\treturn this;//3\\n\" + ", "-\t\t\"\t       ^^^^\\n\" + ", "-\t\t\"Type mismatch: cannot convert from TestGeneric3<A>.Nested<B> to TestGeneric3<B>.Nested<B>\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 15)\\n\" + ", "+\t\t\"\t@Override public Nested<B> getNested3() { // sub\\n\" + ", "+\t\t\"\t                           ^^^^^^^^^^^^\\n\" + ", "+\t\t\"The return type is incompatible with TestGeneric3<B>.getNested3()\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 15)\\n\" + ", "+\t\t\"\t@Override public Nested<B> getNested3() { // sub\\n\" + ", "+\t\t\"\t                           ^^^^^^^^^^^^\\n\" + ", "+\t\t\"The method getNested3() of type TestGeneric3<A>.Nested<B> must override a superclass method\\n\" + ", "+\t\t\"----------\\n\");", "+}"]}], "num": 10820}