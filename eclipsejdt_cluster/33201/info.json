{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "660e305ed2732d7e9e1738179f450b85", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f61ce7857ba1d09e1e05286fce9395e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "e2422311047b85902980920dda1eeedf124d520c", "commitAfterChange": "c107fdebcaaafcbea0a28f68e9b229afba9f7c4f", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " boolean isSubstituteParameterSubsignature(MethodBinding method, MethodBinding substituteMethod)", "signatureAfterChange": " boolean isSubstituteParameterSubsignature(MethodBinding method, MethodBinding substituteMethod)", "diff": ["+\t\tif (method.typeVariables != Binding.NO_TYPE_VARIABLES)", "+\t\t\treturn !((ParameterizedGenericMethodBinding) substituteMethod).isRaw;", "-\t\treturn ! (hasGenericParameter(method) && method.typeVariables == Binding.NO_TYPE_VARIABLES);", "+\t\treturn !hasGenericParameter(method);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80cd04f0d41682d70eb175c440c1b7fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/AnnotationValueImpl.java", "commitBeforeChange": "afeec6e98298a3fee7e4fc33bbdcecb405bc1466", "commitAfterChange": "0c9fb87884972e83c7f78543403ac376b274d8ea", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t@Override \tpublic Object getValue()", "signatureAfterChange": "  \t@Override \tpublic Object getValue()", "diff": ["-\t\tif (_value instanceof Constant) {", "-\t\t\tif (_value instanceof StringConstant) {", "-\t\t\t\treturn ((StringConstant)_value).stringValue();", "-\t\t\t}", "+\t\tif (_value instanceof StringConstant) {", "+\t\t\treturn ((StringConstant)_value).stringValue();", "+\t\t}", "+\t\telse if (_value instanceof IntConstant) {", "+\t\t\treturn ((IntConstant)_value).intValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6a97f962e0089377571f4397414e5c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "c458ad2d505b6f4a7e2ec3bba3954504b01472bd", "commitAfterChange": "f802d6fc991463cb62d45c1ee5e011116f9ae063", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic static IJavaElement determineIfOnClasspath( \t\tIResource resource, \t\tIJavaProject project)", "signatureAfterChange": " \tpublic static IJavaElement determineIfOnClasspath( \t\tIResource resource, \t\tIJavaProject project)", "diff": ["-\t\t\t\t} else if (rootPath.isPrefixOf(resourcePath) && !Util.isExcluded(resource, ((ClasspathEntry)entry).fullExclusionPatternChars())) {", "-\t\t\t\t\t// given we have a resource child of the root, it cannot be a JAR pkg root", "-\t\t\t\t\tIPackageFragmentRoot root = ((JavaProject) project).getFolderPackageFragmentRoot(rootPath);", "-\t\t\t\t\tif (root == null) return null;", "-\t\t\t\t\tIPath pkgPath = resourcePath.removeFirstSegments(rootPath.segmentCount());", "-", "-\t\t\t\t\tif (resource.getType() == IResource.FILE) {", "-\t\t\t\t\t\t// if the resource is a file, then remove the last segment which", "-\t\t\t\t\t\t// is the file name in the package", "-\t\t\t\t\t\tpkgPath = pkgPath.removeLastSegments(1);", "+\t\t\t\t} else if (rootPath.isPrefixOf(resourcePath)) {", "+\t\t\t\t\t// allow creation of package fragment if it contains a .java file that is included", "+\t\t\t\t\tif (!Util.isExcluded(resource, ((ClasspathEntry)entry).fullInclusionPatternChars(), ((ClasspathEntry)entry).fullExclusionPatternChars())) {", "+\t\t\t\t\t\t// given we have a resource child of the root, it cannot be a JAR pkg root", "+\t\t\t\t\t\tIPackageFragmentRoot root = ((JavaProject) project).getFolderPackageFragmentRoot(rootPath);", "+\t\t\t\t\t\tif (root == null) return null;", "+\t\t\t\t\t\tIPath pkgPath = resourcePath.removeFirstSegments(rootPath.segmentCount());", "+\t", "+\t\t\t\t\t\tif (resource.getType() == IResource.FILE) {", "+\t\t\t\t\t\t\t// if the resource is a file, then remove the last segment which", "+\t\t\t\t\t\t\t// is the file name in the package", "+\t\t\t\t\t\t\tpkgPath = pkgPath.removeLastSegments(1);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tString pkgName = Util.packageName(pkgPath);", "+\t\t\t\t\t\tif (pkgName == null || JavaConventions.validatePackageName(pkgName).getSeverity() == IStatus.ERROR) {", "+\t\t\t\t\t\t\treturn null;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\treturn root.getPackageFragment(pkgName);", "-\t\t\t\t\tString pkgName = Util.packageName(pkgPath);", "-\t\t\t\t\tif (pkgName == null || JavaConventions.validatePackageName(pkgName).getSeverity() == IStatus.ERROR) {", "-\t\t\t\t\t\treturn null;", "-\t\t\t\t\t}", "-\t\t\t\t\treturn root.getPackageFragment(pkgName);"]}], "num": 33201}