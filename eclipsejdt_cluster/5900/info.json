{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7181f3c1e3c3a94104bd84fbf2e27abc", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e9dd40656b888384af558b29543309f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "ee73272992444a9c8e6586ce5a37f5dc6d6e8bd9", "commitAfterChange": "f598d68e65d421b1e902e4d71831d57a9b4e73ab", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 63, "signatureBeforeChange": " \tpublic void testJavadoc013() throws JavaModelException", "signatureAfterChange": " \tpublic void test019b() throws JavaModelException", "diff": ["-\tpublic void testJavadoc013() throws JavaModelException {", "+\t}", "+\tpublic void test019b() throws JavaModelException {", "+\t\tverifyMapper(\"test019b\", 8, new int[] {1,3,4,-1});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d23cb4092feab418d034f0ad41392e88", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/diagnose/DiagnoseParser.java", "commitBeforeChange": "5fa6afe954089094ae8cca4de90fd35757e48b64", "commitAfterChange": "ae67359ba1af0f32a3cb74678feaffc1673aa2c9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic DiagnoseParser(Parser parser, boolean isDiet, int firstToken)", "signatureAfterChange": "  \tpublic DiagnoseParser(Parser parser, boolean isDiet, int firstToken)", "diff": ["-\t\t\tthis.lexStream = new LexStream(BUFF_SIZE, scanner, intervalToSkip[0], intervalToSkip[1], firstToken, init, eof);", "+\t\t\tthis.lexStream = new LexStream(BUFF_SIZE, scanner, intervalToSkip[0], intervalToSkip[1], intervalToSkip[2], firstToken, init, eof);", "-\t\t\tthis.lexStream = new LexStream(BUFF_SIZE, scanner, new int[0], new int[0], firstToken, init, eof);", "+\t\t\tthis.lexStream = new LexStream(BUFF_SIZE, scanner, new int[0], new int[0], new int[0], firstToken, init, eof);"]}], "num": 5900}