{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3a2f2bb1a3d3d57d0019196067e518be", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "141d390b3b7710fd96dd881022032ede", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "d5b7e480bcefa88000f87f4e00b21f497f2bba90", "commitAfterChange": "d4c834daaadbd8c680a6fcccd31170f229344d7e", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "   public void testCompletionSameSuperClass() throws JavaModelException", "signatureAfterChange": "   public void testCompletionSameSuperClass() throws JavaModelException", "diff": ["-\t\t\"element:bar    completion:bar    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE)+\"\\n\"+", "-\t\t\"element:bar    completion:bar()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE)+\"\\n\"+", "+\t\t\"element:bar    completion:bar    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED)+\"\\n\"+", "+\t\t\"element:bar    completion:bar()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED)+\"\\n\"+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae0225e76bd351aa131cc182de0b765b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/TypesUtil.java", "commitBeforeChange": "7a78fb676bbe308e1a83016a002ccaabe9c6d716", "commitAfterChange": "ec85ff03c5c75e463df0a3475c7aacc7f94ca4a3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public com.sun.mirror.type.DeclaredType getDeclaredType(DeclaredType containing, TypeDeclaration decl, TypeMirror... typeArgs)", "signatureAfterChange": "      public com.sun.mirror.type.DeclaredType getDeclaredType(DeclaredType containing, TypeDeclaration decl, TypeMirror... typeArgs)", "diff": ["-\t\t\tif( numTypeParams != numArgs )", "-\t\t\t\tthrow new IllegalArgumentException(\"type, \" + memberBinding + \", require \" + numTypeParams + \" type arguments \" + //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\t\t// if no argument then a raw type will be created, otherwise it's an error when the ", "+\t\t\t// number of type parameter and arguments don't agree.", "+\t\t\tif( numTypeParams != numArgs && numArgs != 0 )", "+\t\t\t\tthrow new IllegalArgumentException(\"type, \" + memberBinding.getQualifiedName() + \", require \" + numTypeParams + \" type arguments \" + //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$"]}], "num": 21679}