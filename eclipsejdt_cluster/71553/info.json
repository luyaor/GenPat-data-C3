{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a7537174a42532cf8c8d40c1d7f35d49", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12b8bf6cc7d8cbb4192931d2b795ee78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern.java", "commitBeforeChange": "85d0674dd0e6d922e478aeda2d253d1fb43a355f", "commitAfterChange": "fafcdf65b0c3a745faa71bb4c09eecf57763eaaa", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \t\r public TypeReferencePattern(\r \tchar[] qualification,\r \tchar[] simpleName,\r \tint matchMode, \r \tboolean isCaseSensitive)", "signatureAfterChange": "\r \t\r public TypeReferencePattern(\r \tchar[] qualification,\r \tchar[] simpleName,\r \tint matchMode, \r \tboolean isCaseSensitive)", "diff": ["-\t\tthis.segments = CharOperation.splitOn('.', qualification);\r", "+\t\tthis.segments = qualification == null ? ONE_STAR_CHAR : CharOperation.splitOn('.', qualification);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14e8c1abdf798f4e1283d26781945517", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "58ba492c8e0c6e34b9a48e34cafaf53299996276", "commitAfterChange": "fc80b59c2dcc7007375a1d80f4526a514afc8b16", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static char[] qualifiedSourceName(TypeBinding binding)", "signatureAfterChange": " public static char[] qualifiedSourceName(TypeBinding binding)", "diff": ["-\treturn binding.qualifiedSourceName();", "+\treturn binding != null ? binding.qualifiedSourceName() : null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16004f24bfb7caf938113702e9248a3c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "d3432881419f057ba041557b162e4f05f5019457", "commitAfterChange": "c978cd9a4b8a047123bdee75ac1f721797bdf05a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public FormatterMassiveRegressionTests(File[] files)", "signatureAfterChange": " public FormatterMassiveRegressionTests(File[] files)", "diff": ["-\tsuper(\"testClean\");", "+\tsuper(files == null ? \"testDeleteOutputDir\" : \"testMakeReferences\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1be5877ebef0ad04434d8747c54df4a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/FactoryPathUtil.java", "commitBeforeChange": "52597fb7db7ddfe8d0d19142d700054ae1d908a1", "commitAfterChange": "507b7c588c3d9e37d413e01422694a869f403f8f", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic static void setFactoryPath(IJavaProject jproj, FactoryPath path)  \t\t\tthrows CoreException", "signatureAfterChange": "  \tpublic static void setFactoryPath(IJavaProject jproj, FactoryPath path)  \t\t\tthrows CoreException", "diff": ["-\t\tMap<FactoryContainer, FactoryPath.Attributes> map = path.getAllContainers();", "+\t\tMap<FactoryContainer, FactoryPath.Attributes> map = (path != null) ?", "+\t\t\t\tpath.getAllContainers() : null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ee71424a7ef345f86389547a305f983", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/AnnotationMirrorImpl.java", "commitBeforeChange": "e25e05f313fe0e8cf47abe127e89db464a1d8bc4", "commitAfterChange": "83931270dafcffd4fac0c86baa5fcbf9d052b698", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \t@Override \tpublic boolean equals(Object obj)", "signatureAfterChange": " \t \t@Override \tpublic boolean equals(Object obj)", "diff": ["-\t\treturn obj.equals(this); // obj could be wrapped by a proxy.", "+\t\treturn obj == null ? false : obj.equals(this); // obj could be wrapped by a proxy."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3210f4d6df48061538ed1dceda035271", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "207ee9452fd93bac118ef54e81b9d1aad5d49a34", "commitAfterChange": "7480a7a028b761dd989d906922ba7da2f58b3ecc", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic void printNewLines(int linesNumber)", "signatureAfterChange": " \tpublic void printNewLines(int linesNumber)", "diff": ["-\t\tfinal int realNewLineNumber = linesNumber - lastNumberOfNewLines + 1;", "+\t\tfinal int realNewLineNumber = lastNumberOfNewLines != 0 ? linesNumber - lastNumberOfNewLines + 1 : linesNumber;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "623ca4f6f904ca852c61e10b238e46a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypeMirrorImpl.java", "commitBeforeChange": "70293ebfba1aa3d3dce9544e23e757d77487db91", "commitAfterChange": "2e4e63b9ed8aad7925bed1f9109d7e2d1a341f45", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic <A extends Annotation> A getAnnotation(Class<A> annotationType)", "signatureAfterChange": "  \tpublic <A extends Annotation> A getAnnotation(Class<A> annotationType)", "diff": ["-\t\treturn _env.getFactory().getAnnotation(getAnnotationBindings(), annotationType);", "+\t\treturn _env == null ? null : _env.getFactory().getAnnotation(getAnnotationBindings(), annotationType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d76aa478d95376805395d7487bee7dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/BatchASTCreationTests.java", "commitBeforeChange": "c117a64cdf0af5bb1016a70197fdaaecfa29c6f9", "commitAfterChange": "f27e1412cdba4e953d571d1998376687a4c5af71", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t\tpublic void acceptBinding(String key, IBinding binding)", "signatureAfterChange": " \t\tpublic void acceptBinding(String key, IBinding binding)", "diff": ["-\t\t\tthis.foundKey = binding.getKey();", "+\t\t\tthis.foundKey = binding == null ? null : binding.getKey();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "992c22182068a18e6211324e95ce840a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "4ddf5e5a7987609b09f16b0fd4949c71ce365f19", "commitAfterChange": "6395d4813214216cf562485023b762e3cb0a416c", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public String toString()", "signatureAfterChange": " public String toString()", "diff": ["-\treturn \"JavaBuilder for \" + currentProject.getName(); //$NON-NLS-1$", "+\treturn currentProject == null", "+\t\t? \"JavaBuilder for unknown project\" //$NON-NLS-1$", "+\t\t: \"JavaBuilder for \" + currentProject.getName(); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c48cbf418d9a3137547261aa191a5f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "eb4ff23c38228c4d00e0da694ac7e98ede6240d8", "commitAfterChange": "85fdee7dd19538da3ffbc3959a79cffbaddd43f9", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " void checkInheritedMethods(MethodBinding[] methods, int length)", "signatureAfterChange": " void checkInheritedMethods(MethodBinding[] methods, int length)", "diff": ["-\tint[] overriddenInheritedMethods = findOverriddenInheritedMethods(methods, length);", "+\tint[] overriddenInheritedMethods = length > 1 ? findOverriddenInheritedMethods(methods, length) : null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa41447a04be80851a4be4c14a1a2c0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "a1fa0960e8bf8c2d86b0b4556cf5470457cb514c", "commitAfterChange": "0ea38f06cd1227fc139bddac2eec897cb8fbed35", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void appendTypeParameters(StringBuffer buffer, ITypeBinding[] typeParameters)", "signatureAfterChange": "  \tpublic void appendTypeParameters(StringBuffer buffer, ITypeBinding[] typeParameters)", "diff": ["-\t\t\t\t\tbuffer.append(':');", "+\t\t\t\t\tbuffer.append(j == 0 ? ':' : '&');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5f21325aaab652ce191bee3f436fa26", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "eb4ff23c38228c4d00e0da694ac7e98ede6240d8", "commitAfterChange": "85fdee7dd19538da3ffbc3959a79cffbaddd43f9", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " void checkAgainstInheritedMethods(MethodBinding currentMethod, MethodBinding[] methods, int length, MethodBinding[] allInheritedMethods)", "signatureAfterChange": " void checkAgainstInheritedMethods(MethodBinding currentMethod, MethodBinding[] methods, int length, MethodBinding[] allInheritedMethods)", "diff": ["-\tint[] overriddenInheritedMethods = findOverriddenInheritedMethods(methods, length);", "+\tint[] overriddenInheritedMethods = length > 1 ? findOverriddenInheritedMethods(methods, length) : null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7fc8fd391b5fa3d5d1679a1696002e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "af6229e1f4eaf7439cdd509f508e69eff4ec6844", "commitAfterChange": "7730019127bc3900db63640d79d3086b55d5a420", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  protected void recordNullReference(LocalVariableBinding local, \tASTNode expression, int checkType, FlowInfo nullInfo)", "signatureAfterChange": "  protected void recordNullReference(LocalVariableBinding local, \tASTNode expression, int checkType, FlowInfo nullInfo)", "diff": ["-\tthis.nullInfos[this.nullCount++] = nullInfo.unconditionalCopy();", "+\tthis.nullInfos[this.nullCount++] = nullInfo != null ? nullInfo.unconditionalCopy() : null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8ad78e5bf94f9de456cd4dade270e10", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "4288e832571d2fa8be5c6db434392e46984ab571", "commitAfterChange": "31ed34e0a037856b8e3e3c1c78d05a0a783d81f2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public static String createTypeSignature(String typeName, boolean isResolved)", "signatureAfterChange": " public static String createTypeSignature(String typeName, boolean isResolved)", "diff": ["-\treturn createTypeSignature(typeName.toCharArray(), isResolved);", "+\treturn createTypeSignature(typeName == null ? null : typeName.toCharArray(), isResolved);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa4d21fc4764020fc3bec4f677b8ba3c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypeMirrorImpl.java", "commitBeforeChange": "70293ebfba1aa3d3dce9544e23e757d77487db91", "commitAfterChange": "2e4e63b9ed8aad7925bed1f9109d7e2d1a341f45", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic List<? extends AnnotationMirror> getAnnotationMirrors()", "signatureAfterChange": "  \tpublic List<? extends AnnotationMirror> getAnnotationMirrors()", "diff": ["-\t\treturn _env.getFactory().getAnnotationMirrors(getAnnotationBindings());", "+\t\treturn _env == null ? Factory.EMPTY_ANNOTATION_MIRRORS : ", "+\t\t\t\t\t\t\t\t_env.getFactory().getAnnotationMirrors(getAnnotationBindings());"]}], "num": 71553}