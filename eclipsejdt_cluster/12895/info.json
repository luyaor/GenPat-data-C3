{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "11b2664d5b9810584344d5c1866f5749", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14bd6ab1dc1c3031032df46cd7d4b34e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsTests.java", "commitBeforeChange": "27612a777df418501ffa9535c686f7fa1f1cc84e", "commitAfterChange": "df0ced66f14be6d828e0c07bdfbf827df2636039", "methodNumberBeforeChange": 157, "methodNumberAfterChange": 157, "signatureBeforeChange": " public void _testBlockComments13() throws JavaModelException", "signatureAfterChange": " public void testBlockComments13() throws JavaModelException", "diff": ["-// TODO (frederic) This one fail since 3.3 => the new comment formatter is not involved", "-public void _testBlockComments13() throws JavaModelException {", "-\tformatUnit(\"comments.block\", \"X13.java\");", "+public void testBlockComments13() throws JavaModelException {", "+\tString source =", "+\t\t\"package test.comments.block;\\r\\n\" + ", "+\t\t\"\\r\\n\" + ", "+\t\t\"public class X13 {\\r\\n\" + ", "+\t\t\"\\r\\n\" + ", "+\t\t\"protected void handleWarningToken(String token, boolean isEnabling) {\\r\\n\" + ", "+\t\t\"\tif (token.equals(\\\"pkgDefaultMethod___\\\") || token.equals(\\\"packageDefaultMethod___\\\")/*backward compatible*/ ) { //$NON-NLS-1$ //$NON-NLS-2$\\r\\n\" + ", "+\t\t\"\t}\\r\\n\" + ", "+\t\t\"}\\r\\n\" + ", "+\t\t\"}\\r\\n\";", "+\t// Difference with old formatter:", "+\t// 1) split comment block starts one tab before to avoid possible words over the max line length", "+\t//\t\tnote that in this peculiar this was not necessary as even the first word is over the max line length!", "+\tformatSource(source,", "+\t\t\"package test.comments.block;\\r\\n\" + ", "+\t\t\"\\r\\n\" + ", "+\t\t\"public class X13 {\\r\\n\" + ", "+\t\t\"\\r\\n\" + ", "+\t\t\"\tprotected void handleWarningToken(String token, boolean isEnabling) {\\r\\n\" + ", "+\t\t\"\t\tif (token.equals(\\\"pkgDefaultMethod___\\\") || token.equals(\\\"packageDefaultMethod___\\\")/*\\r\\n\" + ", "+\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t * backward\\r\\n\" + ", "+\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t * compatible\\r\\n\" + ", "+\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t */) { //$NON-NLS-1$ //$NON-NLS-2$\\r\\n\" + ", "+\t\t\"\t\t}\\r\\n\" + ", "+\t\t\"\t}\\r\\n\" + ", "+\t\t\"}\\r\\n\",", "+\t\tfalse /* do not repeat */", "+\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "216a3995d7bd4cc3e5c5d06c11883fb0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "6f916f305af8f54fb52235c12575658f091cf8e0", "commitAfterChange": "fa65feb310f9ea22a2bdb7f7d7e5c0ae561e02fa", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void _test003()", "signatureAfterChange": " \tpublic void test003()", "diff": ["-\t// TODO (kent) reenable once addressed", "-\tpublic void _test003() {", "+\tpublic void test003() {", "-\t\t\t\"invalid circular reference to annotation\");", "-\t}\t\t", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in Foo.java (at line 2)\\n\" + ", "+\t\t\t\"\tBar value();\\n\" + ", "+\t\t\t\"\t^^^\\n\" + ", "+\t\t\t\"Cycle detected: a cycle exists in between annotation attributes of Foo and Bar\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in Foo.java (at line 6)\\n\" + ", "+\t\t\t\"\tFoo value();\\n\" + ", "+\t\t\t\"\t^^^\\n\" + ", "+\t\t\t\"Cycle detected: a cycle exists in between annotation attributes of Bar and Foo\\n\" + ", "+\t\t\t\"----------\\n\");", "+\t    // https://bugs.eclipse.org/bugs/show_bug.cgi?id=85538", "+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"@interface Nested {\\n\" + ", "+\t\t\t\t\"\tString name() default \\\"Hans\\\";\\n\" +", "+\t\t\t\t\"\tN2 nest();\\n\" +", "+\t\t\t\t\"}\\n\" +", "+\t\t\t\t\"@interface N2 {\\n\" + ", "+\t\t\t\t\"\tNested n2() default @Nested(name=\\\"Haus\\\", nest= @N2);\\n\" +", "+\t\t\t\t\"}\\n\"", "+\t\t\t},", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tN2 nest();\\n\" + ", "+\t\t\t\"\t^^\\n\" + ", "+\t\t\t\"Cycle detected: a cycle exists in between annotation attributes of Nested and N2\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tNested n2() default @Nested(name=\\\"Haus\\\", nest= @N2);\\n\" + ", "+\t\t\t\"\t^^^^^^\\n\" + ", "+\t\t\t\"Cycle detected: a cycle exists in between annotation attributes of N2 and Nested\\n\" + ", "+\t\t\t\"----------\\n\");", "+\t}"]}], "num": 12895}