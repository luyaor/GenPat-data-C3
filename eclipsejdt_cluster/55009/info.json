{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5fe1c4400c35d357093495b9a82b9ab4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d4391f4639559af214f76a36fcbc3c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " protected int matchNameValue(char[] pattern, char[] name)", "signatureAfterChange": " protected int matchNameValue(char[] pattern, char[] name)", "diff": ["-\tif (this.isCamelCase) {", "-\t\tif (matchFirstChar && CharOperation.camelCaseMatch(pattern, name, (this.matchMode & SearchPattern.R_PREFIX_MATCH) != 0)) {", "-\t\t\treturn POSSIBLE_MATCH;", "-\t\t}", "-\t\tif (this.isCaseSensitive) return IMPOSSIBLE_MATCH;", "-\t}", "+", "+", "+", "+\t\t\tbreak;", "+", "+\t\tcase SearchPattern.R_CAMELCASE_MATCH:", "+\t\t\tif (CharOperation.camelCaseMatch(pattern, name, false)) {", "+\t\t\t\treturn POSSIBLE_MATCH;", "+\t\t\t}", "+\t\t\t// only test case insensitive as CamelCase same part count already verified prefix case sensitive", "+\t\t\tif (!this.isCaseSensitive && CharOperation.prefixEquals(pattern, name, false)) {", "+\t\t\t\treturn POSSIBLE_MATCH;", "+\t\t\t}", "+\t\t\tbreak;", "+", "+\t\tcase SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH:", "+\t\t\tif (CharOperation.camelCaseMatch(pattern, name, true)) {", "+\t\t\t\treturn POSSIBLE_MATCH;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f911669448c9fa2af369ac277f73a39b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  protected int matchLevel(ImportReference importRef)", "signatureAfterChange": "  protected int matchLevel(ImportReference importRef)", "diff": ["-\t\tif (this.isCamelCase) {", "-\t\t\tif (matchFirstChar && CharOperation.camelCaseMatch(qualifiedPattern, qualifiedTypeName, (this.matchMode & SearchPattern.R_PREFIX_MATCH) != 0)) {", "-\t\t\t\treturn POSSIBLE_MATCH;", "-\t\t\t}", "-\t\t\tif (this.isCaseSensitive) return IMPOSSIBLE_MATCH;", "-\t\t}", "+\t\t\tcase SearchPattern.R_CAMELCASE_MATCH:", "+\t\t\t\tif (matchFirstChar && CharOperation.camelCaseMatch(qualifiedPattern, qualifiedTypeName, false)) {", "+\t\t\t\t\treturn POSSIBLE_MATCH;", "+\t\t\t\t}", "+\t\t\t\t// only test case insensitive as CamelCase already verified prefix case sensitive", "+\t\t\t\tif (!this.isCaseSensitive && CharOperation.prefixEquals(qualifiedPattern, qualifiedTypeName, false)) {", "+\t\t\t\t\treturn POSSIBLE_MATCH;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH:", "+\t\t\t\tif (matchFirstChar && CharOperation.camelCaseMatch(qualifiedPattern, qualifiedTypeName, true)) {", "+\t\t\t\t\treturn POSSIBLE_MATCH;", "+\t\t\t\t}", "+\t\t\t\tbreak;"]}], "num": 55009}