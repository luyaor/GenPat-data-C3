{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d8c08822fc609c7c722db1084a511c2f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63db503de617233a36957fe83970159a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CaptureBinding.java", "commitBeforeChange": "db8326c8bf5f71d5857a001444f9a6b78ff12f0a", "commitAfterChange": "35479e92cf76ddb81a077e36ac9bcdd2a30c6978", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void initializeBounds(Scope scope, ParameterizedTypeBinding capturedParameterizedType)", "signatureAfterChange": " \tpublic void initializeBounds(Scope scope, ParameterizedTypeBinding capturedParameterizedType)", "diff": ["-\t\t\t\t\t\tsubstitutedVariableInterfaces[0] =  (ReferenceBinding) capturedWildcardBound;", "-\t\t\t\t\t\tthis.setSuperInterfaces(Scope.greaterLowerBound(substitutedVariableInterfaces));", "+\t\t\t\t\t\t// to properly support glb, perform capture *after* glb, so restart from the original bound:", "+\t\t\t\t\t\tsubstitutedVariableInterfaces[0] =  (ReferenceBinding) originalWildcardBound;", "+\t\t\t\t\t\tReferenceBinding[] glb = Scope.greaterLowerBound(substitutedVariableInterfaces);", "+\t\t\t\t\t\tif (glb != null) {", "+\t\t\t\t\t\t\tfor (int i = 0; i < glb.length; i++)", "+\t\t\t\t\t\t\t\tglb[i] = (ReferenceBinding) glb[i].capture(scope, this.position);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tthis.setSuperInterfaces(glb);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe08f4fc72e3345a2f982045e21da7a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CaptureBinding.java", "commitBeforeChange": "415d064959a9f683a1c0ba0bfd3f74f46911b97e", "commitAfterChange": "7de12fcc4142eb90ed2bed2f3f3346145c2a87fc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void initializeBounds(Scope scope, ParameterizedTypeBinding capturedParameterizedType)", "signatureAfterChange": " \tpublic void initializeBounds(Scope scope, ParameterizedTypeBinding capturedParameterizedType)", "diff": ["-\t\t\t\t\t\t// to properly support glb, perform capture *after* glb, so restart from the original bound:", "-\t\t\t\t\t\tsubstitutedVariableInterfaces[0] =  (ReferenceBinding) originalWildcardBound;", "-\t\t\t\t\t\tReferenceBinding[] glb = Scope.greaterLowerBound(substitutedVariableInterfaces);", "-\t\t\t\t\t\tif (glb != null) {", "-\t\t\t\t\t\t\tfor (int i = 0; i < glb.length; i++)", "-\t\t\t\t\t\t\t\tglb[i] = (ReferenceBinding) glb[i].capture(scope, this.position);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tthis.setSuperInterfaces(glb);", "+\t\t\t\t\t\tsubstitutedVariableInterfaces[0] =  (ReferenceBinding) capturedWildcardBound;", "+\t\t\t\t\t\tthis.setSuperInterfaces(Scope.greaterLowerBound(substitutedVariableInterfaces));"]}], "num": 39026}