{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "50f3aca92537255634f290fb88eeaa89", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edc7677d3ed76ab6b80fee920dd0c044", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "8e09a020c985a5c59c2f77650ea0c690b64e1566", "commitAfterChange": "ac2c3539b72e65a4a4e0b168769da151e63c5ff1", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprotected Object createSingleNameReference()", "signatureAfterChange": " \tprotected boolean pushParamName()", "diff": ["-\t */", "-\tprotected Object createSingleNameReference() {", "-\t\tJavadocSingleNameReference nameRef = new JavadocSingleNameReference(this.scanner.getCurrentIdentifierSource(),", "-\t\t\t\tthis.scanner.getCurrentTokenStartPosition(),", "-\t\t\t\tthis.scanner.getCurrentTokenEndPosition());", "-\t\tnameRef.tagSourceStart = this.tagSourceStart;", "-\t\tnameRef.tagSourceEnd = this.tagSourceEnd;", "-\t\treturn nameRef;", "-\t}", "+\t */", "+\tprotected boolean pushParamName() {", "+\t\t// Create name reference", "+\t\tJavadocSingleNameReference nameRef = new JavadocSingleNameReference(this.scanner.getCurrentIdentifierSource(),", "+\t\t\t\tthis.scanner.getCurrentTokenStartPosition(),", "+\t\t\t\tthis.scanner.getCurrentTokenEndPosition());", "+\t\tnameRef.tagSourceStart = this.tagSourceStart;", "+\t\tnameRef.tagSourceEnd = this.tagSourceEnd;", "+\t\t// Push ref on stack", "+\t\tif (this.astLengthPtr == -1) { // First push", "+\t\t\tpushOnAstStack(nameRef, true);", "+\t\t} else {", "+\t\t\t// Verify that no @throws has been declared before", "+\t\t\tfor (int i=THROWS_TAG_EXPECTED_ORDER; i<=this.astLengthPtr; i+=ORDERED_TAGS_NUMBER) {", "+\t\t\t\tif (this.astLengthStack[i] != 0) {", "+\t\t\t\t\tif (this.sourceParser != null) this.sourceParser.problemReporter().javadocUnexpectedTag(this.tagSourceStart, this.tagSourceEnd);", "+\t\t\t\t\treturn false;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tswitch (this.astLengthPtr % ORDERED_TAGS_NUMBER) {", "+\t\t\t\tcase PARAM_TAG_EXPECTED_ORDER :", "+\t\t\t\t\t// previous push was a @param tag => push another param name", "+\t\t\t\t\tpushOnAstStack(nameRef, false);", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase SEE_TAG_EXPECTED_ORDER :", "+\t\t\t\t\t// previous push was a @see tag => push new param name", "+\t\t\t\t\tpushOnAstStack(nameRef, true);", "+\t\t\t\t\tbreak;", "+\t\t\t\tdefault:", "+\t\t\t\t\treturn false;", "+\t\t\t}", "+\t\t}", "+\t\treturn true;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbbded1af9f7b5b0033706836028db60", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "6defd2b79520062f5150164ded77c2d030acc168", "commitAfterChange": "d351702f3561d64a024c15ffbed0faad48ce2838", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprotected boolean pushParamName()", "signatureAfterChange": " \tprotected boolean pushParamName(boolean isTypeParam)", "diff": ["-\tprotected boolean pushParamName() {", "-\t\t// Create name reference", "-\t\tJavadocSingleNameReference nameRef = new JavadocSingleNameReference(this.scanner.getCurrentIdentifierSource(),", "-\t\t\t\tthis.scanner.getCurrentTokenStartPosition(),", "-\t\t\t\tthis.scanner.getCurrentTokenEndPosition());", "-\t\tnameRef.tagSourceStart = this.tagSourceStart;", "-\t\tnameRef.tagSourceEnd = this.tagSourceEnd;", "+\tprotected boolean pushParamName(boolean isTypeParam) {", "+\t\t// Create param reference", "+\t\tASTNode nameRef = null;", "+\t\tif (isTypeParam) {", "+\t\t\tJavadocSingleTypeReference ref = new JavadocSingleTypeReference(this.identifierStack[0],", "+\t\t\t\tthis.identifierPositionStack[0],", "+\t\t\t\tthis.tagSourceStart,", "+\t\t\t\tthis.tagSourceEnd);", "+\t\t\tnameRef = ref;", "+\t\t} else {", "+\t\t\tJavadocSingleNameReference ref = new JavadocSingleNameReference(this.identifierStack[0],", "+\t\t\t\tthis.identifierPositionStack[0],", "+\t\t\t\tthis.tagSourceStart,", "+\t\t\t\tthis.tagSourceEnd);", "+\t\t\tnameRef = ref;", "+\t\t}", "-\t\t\tfor (int i=THROWS_TAG_EXPECTED_ORDER; i<=this.astLengthPtr; i+=ORDERED_TAGS_NUMBER) {", "-\t\t\t\tif (this.astLengthStack[i] != 0) {", "-\t\t\t\t\tif (this.sourceParser != null) this.sourceParser.problemReporter().javadocUnexpectedTag(this.tagSourceStart, this.tagSourceEnd);", "-\t\t\t\t\t// bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=51600", "-\t\t\t\t\t// store invalid param references in specific array", "-\t\t\t\t\tif (this.invalidParamReferencesPtr == -1l) {", "-\t\t\t\t\t\tthis.invalidParamReferencesStack = new JavadocSingleNameReference[10];", "+\t\t\tif (!isTypeParam) { // do not verify for type parameters as @throws may be invalid tag (when declared in class)", "+\t\t\t\tfor (int i=THROWS_TAG_EXPECTED_ORDER; i<=this.astLengthPtr; i+=ORDERED_TAGS_NUMBER) {", "+\t\t\t\t\tif (this.astLengthStack[i] != 0) {", "+\t\t\t\t\t\tif (this.sourceParser != null) this.sourceParser.problemReporter().javadocUnexpectedTag(this.tagSourceStart, this.tagSourceEnd);", "+\t\t\t\t\t\t// bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=51600", "+\t\t\t\t\t\t// store invalid param references in specific array", "+\t\t\t\t\t\tif (this.invalidParamReferencesPtr == -1l) {", "+\t\t\t\t\t\t\tthis.invalidParamReferencesStack = new JavadocSingleNameReference[10];", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tint stackLength = this.invalidParamReferencesStack.length;", "+\t\t\t\t\t\tif (++this.invalidParamReferencesPtr >= stackLength) {", "+\t\t\t\t\t\t\tSystem.arraycopy(", "+\t\t\t\t\t\t\t\tthis.invalidParamReferencesStack, 0,", "+\t\t\t\t\t\t\t\tthis.invalidParamReferencesStack = new JavadocSingleNameReference[stackLength + AstStackIncrement], 0,", "+\t\t\t\t\t\t\t\tstackLength);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tthis.invalidParamReferencesStack[this.invalidParamReferencesPtr] = nameRef;", "+\t\t\t\t\t\treturn false;", "-\t\t\t\t\tint stackLength = this.invalidParamReferencesStack.length;", "-\t\t\t\t\tif (++this.invalidParamReferencesPtr >= stackLength) {", "-\t\t\t\t\t\tSystem.arraycopy(", "-\t\t\t\t\t\t\tthis.invalidParamReferencesStack, 0,", "-\t\t\t\t\t\t\tthis.invalidParamReferencesStack = new JavadocSingleNameReference[stackLength + AstStackIncrement], 0,", "-\t\t\t\t\t\t\tstackLength);", "-\t\t\t\t\t}", "-\t\t\t\t\tthis.invalidParamReferencesStack[this.invalidParamReferencesPtr] = nameRef;", "-\t\t\t\t\treturn false;"]}], "num": 54929}