{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bdfc9aa37f32554d3b996bc14ad18497", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba61f2362371ed574a65f8e5d2b24a83", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "1dbf45ade1eaa8473579771e92825a7887776253", "commitAfterChange": "0fb8e6d8cd5771230b88c7189dc0d95f3a5da0e3", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tpublic void testBug51226() throws JavaModelException", "signatureAfterChange": " \tpublic void testBug51226() throws JavaModelException", "diff": ["-\t\t\tString fileName = units[i].getElementName();", "-\t\t\tassertEquals(fileName+\": Wrong number of problems\", 0, unit.getProblems().length); //$NON-NLS-1$", "-\t\t\tassertEquals(fileName+\": Wrong number of comments\", 1, unit.getCommentTable().length);", "+\t\t\tassertEquals(this.prefix+\"Wrong number of problems\", 0, unit.getProblems().length); //$NON-NLS-1$", "+\t\t\tassertEquals(this.prefix+\"Wrong number of comments\", 1, unit.getCommentTable().length);", "-\t\t\tassertTrue(fileName+\": Comment should be a Javadoc one\", comment.isDocComment());", "+\t\t\tassertTrue(this.prefix+\"Comment should be a Javadoc one\", comment.isDocComment());", "-\t\t\tassertEquals(fileName+\": Wrong number of tags\", 1, docComment.tags().size());", "+\t\t\tassertEquals(this.prefix+\"Wrong number of tags\", 1, docComment.tags().size());", "-\t\t\tassertNull(fileName+\": Wrong type of tag [\"+tagElement+\"]\", tagElement.getTagName());", "-\t\t\tassertEquals(fileName+\": Wrong number of fragments in tag [\"+tagElement+\"]\", 1, tagElement.fragments().size());", "+\t\t\tassertNull(this.prefix+\"Wrong type of tag [\"+tagElement+\"]\", tagElement.getTagName());", "+\t\t\tassertEquals(this.prefix+\"Wrong number of fragments in tag [\"+tagElement+\"]\", 1, tagElement.fragments().size());", "-\t\t\tassertEquals(fileName+\": Invalid type for fragment [\"+fragment+\"]\", ASTNode.TEXT_ELEMENT, fragment.getNodeType());", "+\t\t\tassertEquals(this.prefix+\"Invalid type for fragment [\"+fragment+\"]\", ASTNode.TEXT_ELEMENT, fragment.getNodeType());", "-\t\t\tassertEquals(fileName+\": Invalid content for text element \", \"Test\", textElement.getText());", "+\t\t\tassertEquals(this.prefix+\"Invalid content for text element \", \"Test\", textElement.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f857bd66325895bbc8d17ef75769bec7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "ee73272992444a9c8e6586ce5a37f5dc6d6e8bd9", "commitAfterChange": "f598d68e65d421b1e902e4d71831d57a9b4e73ab", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 66, "signatureBeforeChange": " \tpublic void testBug51226() throws JavaModelException", "signatureAfterChange": " \tpublic void testBug51226() throws JavaModelException", "diff": ["-\t\t\tassertEquals(this.prefix+\"Wrong number of problems\", 0, unit.getProblems().length); //$NON-NLS-1$", "-\t\t\tassertEquals(this.prefix+\"Wrong number of comments\", 1, unit.getCommentTable().length);", "-\t\t\tComment comment = unit.getCommentTable()[0];", "-\t\t\tassertTrue(this.prefix+\"Comment should be a Javadoc one\", comment.isDocComment());", "+\t\t\tassumeEquals(this.prefix+\"Wrong number of problems\", 0, unit.getProblems().length); //$NON-NLS-1$", "+\t\t\tassumeEquals(this.prefix+\"Wrong number of comments\", 1, unit.getCommentList().size());", "+\t\t\tComment comment = (Comment) unit.getCommentList().get(0);", "+\t\t\tassumeTrue(this.prefix+\"Comment should be a Javadoc one\", comment.isDocComment());", "-\t\t\tassertEquals(this.prefix+\"Wrong number of tags\", 1, docComment.tags().size());", "+\t\t\tassumeEquals(this.prefix+\"Wrong number of tags\", 1, docComment.tags().size());", "-\t\t\tassertNull(this.prefix+\"Wrong type of tag [\"+tagElement+\"]\", tagElement.getTagName());", "-\t\t\tassertEquals(this.prefix+\"Wrong number of fragments in tag [\"+tagElement+\"]\", 1, tagElement.fragments().size());", "+\t\t\tassumeNull(this.prefix+\"Wrong type of tag [\"+tagElement+\"]\", tagElement.getTagName());", "+\t\t\tassumeEquals(this.prefix+\"Wrong number of fragments in tag [\"+tagElement+\"]\", 1, tagElement.fragments().size());", "-\t\t\tassertEquals(this.prefix+\"Invalid type for fragment [\"+fragment+\"]\", ASTNode.TEXT_ELEMENT, fragment.getNodeType());", "+\t\t\tassumeEquals(this.prefix+\"Invalid type for fragment [\"+fragment+\"]\", ASTNode.TEXT_ELEMENT, fragment.getNodeType());", "-\t\t\tassertEquals(this.prefix+\"Invalid content for text element \", \"Test\", textElement.getText());", "+\t\t\tassumeEquals(this.prefix+\"Invalid content for text element \", \"Test\", textElement.getText());"]}], "num": 45201}