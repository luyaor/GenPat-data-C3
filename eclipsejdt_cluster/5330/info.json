{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fcbf6296db1ba7f465d973c310befefe", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64c42c25216b45ee8d5f8eae8dc3444b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "5c5b92cd29e487fabbf1e984ae3344944851e9b7", "commitAfterChange": "d4c371a1d5a37d3364d0e834a4122f2f818fd8b5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tSourceTypeBinding buildType(SourceTypeBinding enclosingType, PackageBinding packageBinding, AccessRestriction accessRestriction)", "signatureAfterChange": " \t \tSourceTypeBinding buildType(SourceTypeBinding enclosingType, PackageBinding packageBinding, AccessRestriction accessRestriction)", "diff": ["-\t\t\tif (existingType != null)", "-\t\t\t\t// report the error against the parent - its still safe to answer the member type", "-\t\t\t\tthis.parent.problemReporter().duplicateNestedType(referenceContext);", "+\t\t\tif (existingType != null) {", "+\t\t\t\tif (existingType instanceof UnresolvedReferenceBinding) {", "+\t\t\t\t\t// its possible that a BinaryType referenced the member type before its enclosing source type was built", "+\t\t\t\t\t// so just replace the unresolved type with a new member type", "+\t\t\t\t} else {", "+\t\t\t\t\t// report the error against the parent - its still safe to answer the member type", "+\t\t\t\t\tthis.parent.problemReporter().duplicateNestedType(referenceContext);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82eff2bf9eba909c77eac581bd5a1fec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "9ddd0ab81604fc00c4bfde805aa85e252720c9dc", "commitAfterChange": "5cb77df465dd531494d262adf732c936288e98ee", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " void buildTypeBindings()", "signatureAfterChange": " void buildTypeBindings()", "diff": ["-\t\tif (expectedPackageName != null && !CharOperation.equals(currentPackageName, expectedPackageName)) {", "-\t\t\tproblemReporter().packageIsNotExpectedPackage(referenceContext);", "+\t\tif (expectedPackageName != null ", "+\t\t\t\t&& !CharOperation.equals(currentPackageName, expectedPackageName)) {", "+", "+\t\t\t// only report if the unit isn't structurally empty", "+\t\t\tif (referenceContext.currentPackage != null ", "+\t\t\t\t\t|| referenceContext.types != null ", "+\t\t\t\t\t|| referenceContext.imports != null) {", "+\t\t\t\tproblemReporter().packageIsNotExpectedPackage(referenceContext);", "+\t\t\t}"]}], "num": 5330}