{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4452517d07f5f87241e6b267b8526483", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1861a76db8789a2bb4638b21a5eafe0e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/TargetSourceRangeComputer.java", "commitBeforeChange": "7183d81a2458b7a9ecc9004f74bf12b52ac2eafc", "commitAfterChange": "54eb6fa8730358fcf98285db139cf9edbd02f92a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic SourceRange computeSourceRange(ASTNode node)", "signatureAfterChange": " \tpublic SourceRange computeSourceRange(ASTNode node)", "diff": ["-\t\tCompilationUnit cu = (CompilationUnit) node.getRoot();", "-\t\treturn new SourceRange(", "-\t\t\t\tcu.getExtendedStartPosition(node),", "-\t\t\t\tcu.getExtendedLength(node));", "+\t\tASTNode root= node.getRoot();", "+\t\tif (root instanceof CompilationUnit) {", "+\t\t\tCompilationUnit cu= (CompilationUnit) root;", "+\t\t\treturn new SourceRange(cu.getExtendedStartPosition(node), cu.getExtendedLength(node));", "+\t\t}", "+\t\treturn new SourceRange(node.getStartPosition(), node.getLength());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c63ab6bd594371473046d7996607e3e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ClassInstanceCreation.java", "commitBeforeChange": "8ddd224fb46a93d2d42c51b540573c4ff473b8c5", "commitAfterChange": "185794a74ce9e7c2b47a4b8dbd2f41e89a7a469e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 13, "signatureBeforeChange": " \r \tpublic List bodyDeclarations()", "signatureAfterChange": " \r \tpublic List bodyDeclarations()", "diff": ["-\t\treturn bodyDeclarations;\r", "+\t\t// temporary\r", "+\t\tAnonymousClassDeclaration x = getAnonymousClassDeclaration();\r", "+\t\tif (x != null) {\r", "+\t\t\treturn x.bodyDeclarations();\r", "+\t\t} else {\r", "+\t\t\treturn new ArrayList(0);\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0bfbbae91eca5d5766669f9ac4a1ac6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/ParticipantBuildTests.java", "commitBeforeChange": "530677eaedb480550fa104a8b4977fa836eba025", "commitAfterChange": "2c63e7a0f1896e949119ff36744d33a6da53b86f", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \tpublic void _testDefaultValue() throws JavaModelException", "signatureAfterChange": "  \tpublic void testDefaultValue() throws JavaModelException", "diff": ["-\tpublic void _testDefaultValue() throws JavaModelException {", "+\tpublic void testDefaultValue() throws JavaModelException {", "-\t\t\t\t\t\t\t\t\t\tString defaultString = (String) annotationMethods[m].getDefaultValue();", "+\t\t\t\t\t\t\t\t\t\tObject defaultValue = annotationMethods[m].getDefaultValue();", "+\t\t\t\t\t\t\t\t\t\tassertTrue(\"Wrong class\", defaultValue instanceof IVariableBinding);", "+\t\t\t\t\t\t\t\t\t\tIVariableBinding variableBinding = (IVariableBinding) defaultValue;", "+\t\t\t\t\t\t\t\t\t\tString defaultString = variableBinding.getName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac49cf15b4d459bec6590fbadeeb7176", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaModelException.java", "commitBeforeChange": "25bee693161afc3e4f8a13c9ec2792610c1ba510", "commitAfterChange": "921f949a0e5dc802cf0168c26af5339acdc851e1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public IJavaModelStatus getJavaModelStatus()", "signatureAfterChange": "\r public IJavaModelStatus getJavaModelStatus()", "diff": ["-\treturn (IJavaModelStatus) getStatus();\r", "+\tIStatus status = this.getStatus();\r", "+\tif (status instanceof IJavaModelStatus) {\r", "+\t\treturn (IJavaModelStatus)status;\r", "+\t} else {\r", "+\t\t// A regular IStatus is created only in the case of a CoreException.\r", "+\t\t// See bug 13492 Should handle JavaModelExceptions that contains CoreException more gracefully  \r", "+\t\treturn new JavaModelStatus(this.nestedCoreException);\r", "+\t}\r"]}], "num": 17415}