{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "91cae91b89bda1b8898849e3a8599094", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45a6f6809f903883a37c1ac021ed5fda", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/InternalNamingConventions.java", "commitBeforeChange": "442e537ccb6b39c7edc9c47a4881c13fd272b778", "commitAfterChange": "4c189e9ace1b80058cb5ffdc73af183713ebd908", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprivate static void suggestNames( \t\tchar[] packageName, \t\tchar[] qualifiedTypeName, \t\tint dim, \t\tchar[][] prefixes, \t\tchar[][] suffixes, \t\tchar[][] excludedNames, \t\tScanner nameScanner, \t\tINamingRequestor requestor)", "signatureAfterChange": " \t \tprivate static void suggestNames( \t\tchar[] packageName, \t\tchar[] qualifiedTypeName, \t\tint dim, \t\tchar[][] prefixes, \t\tchar[][] suffixes, \t\tchar[][] excludedNames, \t\tScanner nameScanner, \t\tINamingRequestor requestor)", "diff": ["-\t\t\t\t\tSystem.arraycopy(tempName, 0, tempName = new char[length + 2], 0, length);", "-\t\t\t\t\ttempName[length] = 'e';", "-\t\t\t\t\ttempName[length+1] = 's';", "+\t\t\t\t\tif(tempName.length > 1 && tempName[length-2] == 's') {", "+\t\t\t\t\t\tSystem.arraycopy(tempName, 0, tempName = new char[length + 2], 0, length);", "+\t\t\t\t\t\ttempName[length] = 'e';", "+\t\t\t\t\t\ttempName[length+1] = 's';", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c05b135bacea6f61a5c7350e132ee37c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "0c050a9e41e2d9f51004e54259260763cb09b54a", "commitAfterChange": "1209010fd2d01b73be2d5ddcc68dee954a4dfb12", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "\r \t\r \tprivate char[][] computeNames(char[] sourceName)", "signatureAfterChange": "\r \t\r \tprivate char[][] computeNames(char[] sourceName, boolean forArray)", "diff": ["-\tprivate char[][] computeNames(char[] sourceName){\r", "+\tprivate char[][] computeNames(char[] sourceName, boolean forArray){\r", "+\t\t\t\t\t\r", "+\t\t\t\t\tif(forArray) {\r", "+\t\t\t\t\t\tint length = name.length;\r", "+\t\t\t\t\t\tSystem.arraycopy(name, 0, name = new char[length + 1], 0, length);\r", "+\t\t\t\t\t\tname[length] = 's';\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\t\r"]}], "num": 7636}