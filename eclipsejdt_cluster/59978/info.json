{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5bd49263c19b366df1f085073a66f81c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2f55172fe544ce44337f74578679a94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DocCommentParser.java", "commitBeforeChange": "82e3492687fb385a8a9ba6c56e1f6d491dc8d79a", "commitAfterChange": "0b30f6ac807cc8aa14a5978d1dd305dd71baedda", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tprotected Object createMethodReference(Object receiver, List arguments) throws InvalidInputException", "signatureAfterChange": " \tprotected Object createMethodReference(Object receiver, List arguments) throws InvalidInputException", "diff": ["-\t\t\tint length = ((int) this.identifierPositionStack[0]) - start + 1;", "-\t\t\tmethodName.setSourceRange(start, length);", "+\t\t\tint end = (int) this.identifierPositionStack[0];", "+\t\t\tmethodName.setSourceRange(start, end - start + 1);", "-\t\t\t\tmethodRef.setSourceRange(this.memberStart, length);", "+\t\t\t\tstart = this.memberStart;", "+\t\t\t\tmethodRef.setSourceRange(start, end - start + 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7cfa7de10c8b9717b538cac6e7c0cbe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DocCommentParser.java", "commitBeforeChange": "82e3492687fb385a8a9ba6c56e1f6d491dc8d79a", "commitAfterChange": "0b30f6ac807cc8aa14a5978d1dd305dd71baedda", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprotected Object createFieldReference(Object receiver) throws InvalidInputException", "signatureAfterChange": " \tprotected Object createFieldReference(Object receiver) throws InvalidInputException", "diff": ["-\t\t\tint length = ((int) this.identifierPositionStack[0]) - start + 1;", "-\t\t\tfieldName.setSourceRange(start, length);", "+\t\t\tint end = (int) this.identifierPositionStack[0];", "+\t\t\tfieldName.setSourceRange(start, end - start + 1);", "-\t\t\t\tfieldRef.setSourceRange(this.memberStart, length);", "+\t\t\t\tstart = this.memberStart;", "+\t\t\t\tfieldRef.setSourceRange(start, end - start + 1);", "-\t\t\t\tint end = fieldName.getStartPosition()+fieldName.getLength()-1;", "-\t\t\t\tfieldRef.setSourceRange(typeRef.getStartPosition(), end-typeRef.getStartPosition()+1);", "+\t\t\t\tstart = typeRef.getStartPosition();", "+\t\t\t\tend = fieldName.getStartPosition()+fieldName.getLength()-1;", "+\t\t\t\tfieldRef.setSourceRange(start, end-start+1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f704697364fdd062485c0a29ad949ab2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "b9a4c3ae4281f05c3b4134f99d8dfa8f916b7dc5", "commitAfterChange": "a78c0329209754b92951374045016b50e9bc4f38", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t\t \tpublic MethodDeclaration convert(AbstractMethodDeclaration methodDeclaration)", "signatureAfterChange": " \t\t \tpublic MethodDeclaration convert(AbstractMethodDeclaration methodDeclaration)", "diff": ["-\t\tmethodName.setSourceRange(methodDeclaration.sourceStart, methodDeclaration.sourceEnd - methodDeclaration.sourceStart + 1);", "+\t\tint start = methodDeclaration.sourceStart;", "+\t\tint end = retrieveIdentifierEndPosition(start, methodDeclaration.sourceEnd);", "+\t\tmethodName.setSourceRange(start, end - start + 1);", "-\t\t\tint start = retrieveStartBlockPosition(methodDeclaration.sourceStart, declarationSourceEnd);", "-\t\t\tint end = retrieveEndBlockPosition(methodDeclaration.sourceStart, this.compilationUnitSource.length);", "+\t\t\tstart = retrieveStartBlockPosition(methodDeclaration.sourceStart, declarationSourceEnd);", "+\t\t\tend = retrieveEndBlockPosition(methodDeclaration.sourceStart, this.compilationUnitSource.length);", "-\t\t\tint start = retrieveStartBlockPosition(methodDeclaration.sourceStart, declarationSourceEnd);", "-\t\t\tint end = retrieveEndBlockPosition(methodDeclaration.sourceStart, this.compilationUnitSource.length);", "+\t\t\tstart = retrieveStartBlockPosition(methodDeclaration.sourceStart, declarationSourceEnd);", "+\t\t\tend = retrieveEndBlockPosition(methodDeclaration.sourceStart, this.compilationUnitSource.length);"]}], "num": 59978}