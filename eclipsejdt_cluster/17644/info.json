{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "780e64c5a277d317312a104121006ca2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a44e489cd749eb40bb22902056d59bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 27, "signatureBeforeChange": " \t \tpublic void printCommentLine(char[] s, int start)", "signatureAfterChange": " \t \tprivate void printCommentLine(char[] s)", "diff": ["-\tpublic void printCommentLine(char[] s, int start) {", "-\t\tint length = s.length;", "-\t\tint index;", "-\t\tloop: for (index = length - 1; index >= 0; index--) {", "-\t\t\tswitch(s[index]) {", "+\tprivate void printCommentLine(char[] s) {", "+\t\tint currentTokenStartPosition = this.scanner.getCurrentTokenStartPosition();", "+\t\tint currentTokenEndPosition = this.scanner.getCurrentTokenEndPosition() + 1;", "+", "+\t\tthis.scanner.resetTo(currentTokenStartPosition, currentTokenEndPosition - 1);", "+\t\tint currentCharacter;", "+\t\tint start = currentTokenStartPosition;", "+\t\tint nextCharacterStart = currentTokenStartPosition;", "+\t\tprintIndentationIfNecessary();", "+\t\tint previousStart = currentTokenStartPosition;", "+", "+\t\tloop: while (nextCharacterStart <= currentTokenEndPosition && (currentCharacter = this.scanner.getNextChar()) != -1) {", "+\t\t\tnextCharacterStart = this.scanner.currentPosition;", "+", "+\t\t\tswitch(currentCharacter) {", "+\t\t\t\t\tstart = previousStart;", "+\t\t\t\t\tbreak loop;", "-\t\t\t\t\tbreak;", "-\t\t\t\tdefault:", "+\t\t\t\t\tstart = previousStart;", "+\t\t\tpreviousStart = nextCharacterStart;", "-\t\tprintIndentationIfNecessary();", "-\t\tif (this.positionsToMap != null) {", "-\t\t\tmapPositions(start, this.buffer.length(), s.length);", "+\t\tif (start != currentTokenStartPosition) {", "+\t\t\taddReplaceEdit(start, currentTokenEndPosition - 1, lineSeparator);", "-\t\tthis.buffer", "-\t\t\t.append(s, 0, index + 1)", "-\t\t\t.append(lineSeparator);", "+\t\t// realign to the proper value", "-\t\t\tthis.indentationLevel = this.currentAlignment.breakIndentationLevel;", "-\t\t}", "-\t}", "+\t\t\tif (this.memberAlignment != null) {", "+\t\t\t\t// select the last alignment", "+\t\t\t\tif (this.currentAlignment.location.inputOffset > this.memberAlignment.location.inputOffset) {", "+\t\t\t\t\tthis.indentationLevel = this.currentAlignment.breakIndentationLevel;", "+\t\t\t\t\tthis.indentationLevel = this.memberAlignment.breakIndentationLevel;", "+\t\t\t} else {", "+\t\t\t\tthis.indentationLevel = this.currentAlignment.breakIndentationLevel;", "+\t\tthis.scanner.resetTo(currentTokenEndPosition, this.scannerEndPosition - 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a33dbd982cb3d7ae664c1b398b3e02c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java", "commitBeforeChange": "43c947b648b5a1fa1fb7d4f5ce5b7cea1d4fa7a2", "commitAfterChange": "eee151556fa5628da58c297d3e841df408f33c62", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tint storeLeadingComments(ASTNode node, int previousEnd, Scanner scanner)", "signatureAfterChange": " \tint storeLeadingComments(ASTNode node, int previousEnd)", "diff": ["-\tint storeLeadingComments(ASTNode node, int previousEnd, Scanner scanner) {", "+\tint storeLeadingComments(ASTNode node, int previousEnd) {", "-\t\tint previousEndLine = scanner.getLineNumber(previousEnd);", "-\t\tint nodeStartLine = scanner.getLineNumber(nodeStart);", "+\t\tint previousEndLine = this.scanner.getLineNumber(previousEnd);", "+\t\tint nodeStartLine = this.scanner.getLineNumber(nodeStart);", "-\t\tint idx = getCommentIndex(this.commentIndex, nodeStart, -1);", "+\t\tint idx = getCommentIndex(0, nodeStart, -1);", "-\t\t\tint commentLine = scanner.getLineNumber(commentStart);", "+\t\t\tint commentLine = this.scanner.getLineNumber(commentStart);", "-\t\t\t\tscanner.resetTo(end+1, previousStart);", "+\t\t\t\tthis.scanner.resetTo(end+1, previousStart);", "-\t\t\t\t\tint token = scanner.getNextToken();", "-\t\t\t\t\tif (token != TerminalTokens.TokenNameWHITESPACE || scanner.currentPosition != previousStart) {", "+\t\t\t\t\tint token = this.scanner.getNextToken();", "+\t\t\t\t\tif (token != TerminalTokens.TokenNameWHITESPACE || this.scanner.currentPosition != previousStart) {", "-\t\t\t\tchar[] gap = scanner.getCurrentIdentifierSource();", "+\t\t\t\tchar[] gap = this.scanner.getCurrentIdentifierSource();", "-\t\t\t\tscanner.resetTo(previousEnd, commentStart);", "+\t\t\t\tthis.scanner.resetTo(previousEnd, commentStart);", "-\t\t\t\t\twhile (scanner.currentPosition != commentStart) {", "-\t\t\t\t\t\tif (scanner.getNextToken() != TerminalTokens.TokenNameWHITESPACE) {", "-\t\t\t\t\t\t\tlastTokenEnd =  scanner.getCurrentTokenEndPosition();", "+\t\t\t\t\twhile (this.scanner.currentPosition != commentStart) {", "+\t\t\t\t\t\tif (this.scanner.getNextToken() != TerminalTokens.TokenNameWHITESPACE) {", "+\t\t\t\t\t\t\tlastTokenEnd =  this.scanner.getCurrentTokenEndPosition();", "-\t\t\t\tint lastTokenLine = scanner.getLineNumber(lastTokenEnd);", "+\t\t\t\tint lastTokenLine = this.scanner.getLineNumber(lastTokenEnd);", "-\t\t\t\twhile (startIdx<length && lastTokenLine == scanner.getLineNumber(this.comments[startIdx].getStartPosition()) && nodeStartLine != lastTokenLine) {", "+\t\t\t\twhile (startIdx<length && lastTokenLine == this.scanner.getLineNumber(this.comments[startIdx].getStartPosition()) && nodeStartLine != lastTokenLine) {", "-\t\t\t\tthis.commentIndex = endIdx;"]}], "num": 17644}