{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "802bbc597d7c13c8aaa2e1c8e172ae73", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0648249e4a5d4aed18254b07cfc670c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Annotation.java", "commitBeforeChange": "0bb31250e6dfa81e101547a2ec18bc13a11477d7", "commitAfterChange": "09c8d2f925a57bbf1511d8664e73fc036c4e20a7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t", "+", "+\t\tboolean initializeCompilerAnnotation = true; // scope.compilerOptions().storeAnnotations;", "-\t\t\tthis.compilerAnnotation = new AnnotationBinding(this);", "+\t\t\tif (initializeCompilerAnnotation)", "+\t\t\t\tthis.compilerAnnotation = new AnnotationBinding(this);", "-\t\t\tthis.compilerAnnotation = new AnnotationBinding(this);", "+\t\t\tif (initializeCompilerAnnotation)", "+\t\t\t\tthis.compilerAnnotation = new AnnotationBinding(this);", "-\t\tthis.compilerAnnotation = new AnnotationBinding(this);", "+\t\tif (initializeCompilerAnnotation)", "+\t\t\tthis.compilerAnnotation = new AnnotationBinding(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ef3db5918a26fab33da09a7ff673fef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope upperScope)", "diff": ["+\t\t\tboolean catchHasError = false;", "-\t\t\t\tif ((argumentTypes[i] = catchArguments[i].resolveForCatch(catchScope)) == null)", "-\t\t\t\t\treturn;", "+\t\t\t\tif ((argumentTypes[i] = catchArguments[i].resolveForCatch(catchScope)) == null) {", "+\t\t\t\t\tcatchHasError = true;", "+\t\t\t\t}", "-", "+\t\t\tif (catchHasError) {", "+\t\t\t\treturn;", "+\t\t\t}"]}], "num": 64742}