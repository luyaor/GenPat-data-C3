{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8788eb0ee6d1c76d4c64ea0d9d413b1a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e96c502bf7da032abcd5f7b7d073d43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "80a36bf53ae731edac012c99749b4fd073634fd5", "commitAfterChange": "775667d78092a7c5a2c35b021921f25b4037d7f4", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " protected void reportMatching(CompilationUnitDeclaration unit, boolean mustResolve) throws CoreException", "signatureAfterChange": " protected void reportMatching(CompilationUnitDeclaration unit, boolean mustResolve) throws CoreException", "diff": ["-\t\t\t\t\t? unit.scope.compilationUnitScope().getImport(CharOperation.subarray(importRef.tokens, 0, importRef.tokens.length), true)", "-\t\t\t\t\t: unit.scope.compilationUnitScope().getImport(importRef.tokens, false);", "+\t\t\t\t\t? unit.scope.compilationUnitScope().getImport(CharOperation.subarray(importRef.tokens, 0, importRef.tokens.length), true, importRef.isStatic())", "+\t\t\t\t\t: unit.scope.compilationUnitScope().getImport(importRef.tokens, false, importRef.isStatic());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bdf5257fd2578c0e45716be9175d860", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "b1ce5a863ad0a541f80dd0793ff207f1e4ecf677", "commitAfterChange": "72d60854091bd7e8a5aafafdfea62cc297a3eb41", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 60, "signatureBeforeChange": " protected void reportMatching(CompilationUnitDeclaration unit, boolean mustResolve) throws CoreException", "signatureAfterChange": " protected void reportMatching(CompilationUnitDeclaration unit, boolean mustResolve) throws CoreException", "diff": ["+\t\tthis.unitScope = unit.scope.compilationUnitScope();", "+\t\tthis.patternLocator.unitScope = this.unitScope;", "-\t\t\t\t\t? unit.scope.compilationUnitScope().getImport(CharOperation.subarray(importRef.tokens, 0, importRef.tokens.length), true, importRef.isStatic())", "-\t\t\t\t\t: unit.scope.compilationUnitScope().getImport(importRef.tokens, false, importRef.isStatic());", "+\t\t\t\t\t? unitScope.getImport(CharOperation.subarray(importRef.tokens, 0, importRef.tokens.length), true, importRef.isStatic())", "+\t\t\t\t\t: unitScope.getImport(importRef.tokens, false, importRef.isStatic());", "+\t} else {", "+\t\tthis.unitScope = null;", "+\t\tthis.patternLocator.unitScope = null;"]}], "num": 5567}