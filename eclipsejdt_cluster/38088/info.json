{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "93efabaf92b143da222bab3f2299c662", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66039982f090ff9284bd19f4d82621b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "6d4fe8b897d9f85de3c7e4f3c65c2b0dfb35f1ed", "commitAfterChange": "e99876c3df14b077c8fdb45729d7e80e1c7f1686", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": "  \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, InvocationSite invocationSite, ReferenceBinding receiverType)", "signatureAfterChange": "  \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, InvocationSite invocationSite, ReferenceBinding receiverType)", "diff": ["-\t\t\t\t\t\tif (current != original) {", "+\t\t\t\t\t\tif (current.hasSubstitutedParameters() || original.typeVariables != Binding.NO_TYPE_VARIABLES) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7580ba6c4cfaefc516a0a92a3b36a2d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "a5577117cb4a612450eddce3c0b20eb90f21cb89", "commitAfterChange": "8c631374d51cd9cce66092e187c2523badcba90a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t\tpublic void logException(Exception e)", "signatureAfterChange": " \t\tpublic void logException(Exception e)", "diff": ["-\t\t\tif ((this.tagBits & XML) != 0) {", "+\t\t\tif ((this.tagBits & Logger.XML) != 0) {", "-\t\t\t\tthis.parameters.put(MESSAGE, message);", "-\t\t\t\tthis.parameters.put(CLASS, e.getClass());", "-\t\t\t\tthis.printTag(EXCEPTION, this.parameters, true, true);", "+\t\t\t\tthis.parameters.put(Logger.MESSAGE, message);", "+\t\t\t\tthis.parameters.put(Logger.CLASS, e.getClass());", "+\t\t\t\tthis.printTag(Logger.EXCEPTION, this.parameters, true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f83dbc063c2aaf715cd63bac6fc7c8f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "2a24da854cab81b3e14f5a439f9a6b762b3ebc0a", "commitAfterChange": "60e097c0e5cf4a2c998f74536cf889c93554ea9d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprivate static APTResult runAPT( \t\t\tfinal List<AnnotationProcessorFactory> factories, \t\t\tfinal ProcessorEnvImpl processorEnv)", "signatureAfterChange": " \t \tprivate static APTResult runAPT( \t\t\tfinal List<AnnotationProcessorFactory> factories, \t\t\tfinal ProcessorEnvImpl processorEnv)", "diff": ["-\t\t\t\tif ( DEBUG ) trace( \"runAPT: leaving early because there are no factories\");", "+\t\t\t\tif ( AptPlugin.DEBUG ) trace( \"runAPT: leaving early because there are no factories\");", "-\t\t\t\tif ( DEBUG ) trace( \"runAPT: leaving early because file doesn't exist\");", "+\t\t\t\tif ( AptPlugin.DEBUG ) trace( \"runAPT: leaving early because file doesn't exist\");", "-\t\t\t\tif ( DEBUG ) trace ( \"runAPT:  leaving early because annotationDecls is empty\" );", "+\t\t\t\tif ( AptPlugin.DEBUG ) trace ( \"runAPT:  leaving early because annotationDecls is empty\" );", "-\t\t\t\t\t\tif ( DEBUG ) trace( \"runAPT: invoking processor \" + processor.getClass().getName() );", "+\t\t\t\t\t\tif ( AptPlugin.DEBUG ) trace( \"runAPT: invoking processor \" + processor.getClass().getName() );"]}], "num": 38088}