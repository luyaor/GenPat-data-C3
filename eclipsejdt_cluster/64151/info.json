{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bf33abc8e8445288836d918940f98713", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56560bb2464a97ae7c14093d61564469", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterBugsTests.java", "commitBeforeChange": "c62ecfd031507c11ea236866605fedd6f3a952c5", "commitAfterChange": "ded73445e8c5cf2db0a4abcc53e1680f02ae6cf7", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 335, "signatureBeforeChange": " public void testBug286601i1()", "signatureAfterChange": " public void testBug330313_b286601_06()", "diff": ["-}", "-public void testBug286601i1() {", "-\tthis.formatterPrefs.join_wrapped_lines = false;", "-\tthis.formatterPrefs.alignment_for_expressions_in_array_initializer = DefaultCodeFormatterConstants.WRAP_ONE_PER_LINE;", "-\tsetUpBracesPreferences(DefaultCodeFormatterConstants.NEXT_LINE);", "-\tString source =", "-\t\t\"package massive;\\n\" +", "-\t\t\"\\n\" +", "-\t\t\"public class X06a {\\n\" +", "-\t\t\"\\n\" +", "-\t\t\"    \\n\" +", "-\t\t\"    // Table to merge access modes for condition statements (e.g branch[x] || branch[y]). \\n\" +", "-\t\t\"    private static final String[][] ACCESS_MODE_CONDITIONAL_TABLE= {\\n\" +", "-\t\t\"    /* Comment 1 */\\n\" +", "-\t\t\"    /* Comment 2 */ { \\\"1234567890123456789012345678901234567890\\\", \\\"1234567890123456789012345678901234567890\\\" },\\n\" +", "-\t\t\"    /* Comment 3 */ { \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZ______________\\\", \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZ______________\\\" },\\n\" +", "-\t\t\"    };\\n\" +", "-\t\t\"\\n\" +", "-\t\t\"}\\n\";", "-\tformatSource(source,", "-\t\t\"package massive;\\n\" +", "-\t\t\"\\n\" +", "-\t\t\"public class X06a\\n\" +", "-\t\t\"{\\n\" +", "-\t\t\"\\n\" +", "-\t\t\"\t// Table to merge access modes for condition statements (e.g branch[x] ||\\n\" +", "-\t\t\"\t// branch[y]).\\n\" +", "-\t\t\"\tprivate static final String[][] ACCESS_MODE_CONDITIONAL_TABLE =\\n\" +", "-\t\t\"\t{\\n\" +", "-\t\t\"\t\t/* Comment 1 */\\n\" +", "-\t\t\"\t\t/* Comment 2 */{ \\\"1234567890123456789012345678901234567890\\\", \\\"1234567890123456789012345678901234567890\\\" },\\n\" +", "-\t\t\"\t\t/* Comment 3 */{ \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZ______________\\\", \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZ______________\\\" },\\n\" +", "-\t\t\"\t};\\n\" +", "-\t\t\"\\n\" +", "-\t\t\"}\\n\"", "-\t);", "-}", "+}", "+public void testBug330313_b286601_06() {", "+\tthis.formatterPrefs.join_wrapped_lines = false;", "+\tthis.formatterPrefs.alignment_for_expressions_in_array_initializer = Alignment.M_ONE_PER_LINE_SPLIT;", "+\tsetUpBracesPreferences(DefaultCodeFormatterConstants.NEXT_LINE);", "+\tString source =", "+\t\t\"package b286601;\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"public class X06 {\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"    \\n\" + ", "+\t\t\"    // Table to merge access modes for condition statements (e.g branch[x] || branch[y]). \\n\" + ", "+\t\t\"    static final String[][] ACCESS_MODE_CONDITIONAL_TABLE= {\\n\" + ", "+\t\t\"    /* Comment 1 */\\n\" + ", "+\t\t\"    /* Comment 2 */ { \\\"UNUSED\\\",          \\\"READ_POTENTIAL\\\",  \\\"READ_POTENTIAL\\\",  \\\"WRITE_POTENTIAL\\\", \\\"WRITE_POTENTIAL\\\", \\\"UNKNOWN\\\" },\\n\" + ", "+\t\t\"    /* Comment 3 */ { \\\"READ_POTENTIAL\\\",  \\\"READ\\\",            \\\"READ_POTENTIAL\\\",  \\\"UNKNOWN\\\",         \\\"UNKNOWN\\\",         \\\"UNKNOWN\\\" },\\n\" + ", "+\t\t\"    };\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"}\\n\";", "+\tformatSource(source,", "+\t\t\"package b286601;\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"public class X06\\n\" + ", "+\t\t\"{\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"\t// Table to merge access modes for condition statements (e.g branch[x] ||\\n\" + ", "+\t\t\"\t// branch[y]).\\n\" + ", "+\t\t\"\tstatic final String[][] ACCESS_MODE_CONDITIONAL_TABLE =\\n\" + ", "+\t\t\"\t{\\n\" + ", "+\t\t\"\t\t\t/* Comment 1 */\\n\" + ", "+\t\t\"\t\t\t/* Comment 2 */{\\n\" + ", "+\t\t\"\t\t\t\t\t\\\"UNUSED\\\",\\n\" + ", "+\t\t\"\t\t\t\t\t\\\"READ_POTENTIAL\\\",\\n\" + ", "+\t\t\"\t\t\t\t\t\\\"READ_POTENTIAL\\\",\\n\" + ", "+\t\t\"\t\t\t\t\t\\\"WRITE_POTENTIAL\\\",\\n\" + ", "+\t\t\"\t\t\t\t\t\\\"WRITE_POTENTIAL\\\",\\n\" + ", "+\t\t\"\t\t\t\t\t\\\"UNKNOWN\\\" },\\n\" + ", "+\t\t\"\t\t\t/* Comment 3 */{\\n\" + ", "+\t\t\"\t\t\t\t\t\\\"READ_POTENTIAL\\\",\\n\" + ", "+\t\t\"\t\t\t\t\t\\\"READ\\\",\\n\" + ", "+\t\t\"\t\t\t\t\t\\\"READ_POTENTIAL\\\",\\n\" + ", "+\t\t\"\t\t\t\t\t\\\"UNKNOWN\\\",\\n\" + ", "+\t\t\"\t\t\t\t\t\\\"UNKNOWN\\\",\\n\" + ", "+\t\t\"\t\t\t\t\t\\\"UNKNOWN\\\" },\\n\" + ", "+\t\t\"\t};\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"}\\n\"", "+\t);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f89c0d49b63eed112d8bea7bbf3ce128", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterBugsTests.java", "commitBeforeChange": "c62ecfd031507c11ea236866605fedd6f3a952c5", "commitAfterChange": "ded73445e8c5cf2db0a4abcc53e1680f02ae6cf7", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 334, "signatureBeforeChange": " public void testBug286601j2()", "signatureAfterChange": " public void testBug330313_b286601_05()", "diff": ["-}", "-public void testBug286601j2() {", "-\tthis.formatterPrefs.join_wrapped_lines = false;", "-\tthis.formatterPrefs.tab_char = DefaultCodeFormatterOptions.SPACE;", "-\tthis.formatterPrefs.alignment_for_expressions_in_array_initializer = DefaultCodeFormatterConstants.WRAP_ONE_PER_LINE;", "-\tsetUpBracesPreferences(DefaultCodeFormatterConstants.NEXT_LINE);", "-\tString source =", "-\t\t\"package massive;\\n\" +", "-\t\t\"\\n\" +", "-\t\t\"public class X06b {\\n\" +", "-\t\t\"\\n\" +", "-\t\t\"    \\n\" +", "-\t\t\"    // Table to merge access modes for condition statements (e.g branch[x] || branch[y]). \\n\" +", "-\t\t\"    private static final String[][] ACCESS_MODE_CONDITIONAL_TABLE= {\\n\" +", "-\t\t\"    { \\\"1234567890123456789012345678901234567890\\\", \\\"1234567890123456789012345678901234567890\\\" },\\n\" +", "-\t\t\"    { \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZ______________\\\", \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZ______________\\\" },\\n\" +", "-\t\t\"    };\\n\" +", "-\t\t\"\\n\" +", "-\t\t\"}\\n\";", "-\tformatSource(source,", "-\t\t\"package massive;\\n\" +", "-\t\t\"\\n\" +", "-\t\t\"public class X06b\\n\" +", "-\t\t\"{\\n\" +", "-\t\t\"\\n\" +", "-\t\t\"    // Table to merge access modes for condition statements (e.g branch[x] ||\\n\" +", "-\t\t\"    // branch[y]).\\n\" +", "-\t\t\"    private static final String[][] ACCESS_MODE_CONDITIONAL_TABLE =\\n\" +", "-\t\t\"    {\\n\" +", "-\t\t\"     { \\\"1234567890123456789012345678901234567890\\\", \\\"1234567890123456789012345678901234567890\\\" },\\n\" +", "-\t\t\"     { \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZ______________\\\", \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZ______________\\\" },\\n\" +", "-\t\t\"    };\\n\" +", "-\t\t\"\\n\" +", "-\t\t\"}\\n\"", "-\t);", "-}", "+}", "+public void testBug330313_b286601_05() {", "+\tthis.formatterPrefs.join_wrapped_lines = false;", "+\tthis.formatterPrefs.alignment_for_expressions_in_array_initializer = Alignment.M_ONE_PER_LINE_SPLIT;", "+\tsetUpBracesPreferences(DefaultCodeFormatterConstants.NEXT_LINE);", "+\tString source =", "+\t\t\"package b286601;\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"public class X05 {\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"    \\n\" + ", "+\t\t\"    // Table to merge access modes for condition statements (e.g branch[x] || branch[y]). \\n\" + ", "+\t\t\"    static final String[][] ACCESS_MODE_CONDITIONAL_TABLE= {\\n\" + ", "+\t\t\"    { \\\"UNUSED\\\",          \\\"READ_POTENTIAL\\\",  \\\"READ_POTENTIAL\\\",  \\\"WRITE_POTENTIAL\\\", \\\"WRITE_POTENTIAL\\\", \\\"UNKNOWN\\\" },\\n\" + ", "+\t\t\"    { \\\"READ_POTENTIAL\\\",  \\\"READ\\\",            \\\"READ_POTENTIAL\\\",  \\\"UNKNOWN\\\",         \\\"UNKNOWN\\\",         \\\"UNKNOWN\\\" },\\n\" + ", "+\t\t\"    };\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"}\\n\";", "+\tformatSource(source,", "+\t\t\"package b286601;\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"public class X05\\n\" + ", "+\t\t\"{\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"\t// Table to merge access modes for condition statements (e.g branch[x] ||\\n\" + ", "+\t\t\"\t// branch[y]).\\n\" + ", "+\t\t\"\tstatic final String[][] ACCESS_MODE_CONDITIONAL_TABLE =\\n\" + ", "+\t\t\"\t{\\n\" + ", "+\t\t\"\t\t\t{\\n\" + ", "+\t\t\"\t\t\t\t\t\\\"UNUSED\\\",\\n\" + ", "+\t\t\"\t\t\t\t\t\\\"READ_POTENTIAL\\\",\\n\" + ", "+\t\t\"\t\t\t\t\t\\\"READ_POTENTIAL\\\",\\n\" + ", "+\t\t\"\t\t\t\t\t\\\"WRITE_POTENTIAL\\\",\\n\" + ", "+\t\t\"\t\t\t\t\t\\\"WRITE_POTENTIAL\\\",\\n\" + ", "+\t\t\"\t\t\t\t\t\\\"UNKNOWN\\\" },\\n\" + ", "+\t\t\"\t\t\t{\\n\" + ", "+\t\t\"\t\t\t\t\t\\\"READ_POTENTIAL\\\",\\n\" + ", "+\t\t\"\t\t\t\t\t\\\"READ\\\",\\n\" + ", "+\t\t\"\t\t\t\t\t\\\"READ_POTENTIAL\\\",\\n\" + ", "+\t\t\"\t\t\t\t\t\\\"UNKNOWN\\\",\\n\" + ", "+\t\t\"\t\t\t\t\t\\\"UNKNOWN\\\",\\n\" + ", "+\t\t\"\t\t\t\t\t\\\"UNKNOWN\\\" },\\n\" + ", "+\t\t\"\t};\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"}\\n\"", "+\t);", "+}"]}], "num": 64151}