{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f3fb3b55f9f2a3931dc4f8c5356698a1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14b9eedf7ec11fdd8f5f9335ad34d185", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/FormatJavadocReference.java", "commitBeforeChange": "00cabdb6b90ee48364f71e75a5da5edca1e7837c", "commitAfterChange": "fcccc4dd1377e549112e0bdc9a74b0eb625c6ab2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public String toString()", "signatureAfterChange": "  protected void toString(StringBuffer buffer)", "diff": ["-public String toString() {", "-\tStringBuffer buffer = new StringBuffer(\"[FJRef] - at offset: \");\t//$NON-NLS-1$", "-\tbuffer.append(this.sourceStart);", "-\tbuffer.append(\" end position: \");\t//$NON-NLS-1$", "-\tbuffer.append(this.sourceEnd);", "-\tbuffer.append('\\n');", "-\treturn buffer.toString();", "+protected void toString(StringBuffer buffer) {", "+\tbuffer.append(\"ref\");\t//$NON-NLS-1$", "+\tsuper.toString(buffer);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a0f4a373e099aeb714361c607ed4ea6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/src/org/eclipse/jdt/compiler/apt/tests/MessagerTests.java", "commitBeforeChange": "121da1ed9487cd06624131be60f7fed861a83829", "commitAfterChange": "65bcf10af454142ab48b1720e5cae843f9f8de26", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate String internalTestMessager(JavaCompiler compiler) throws IOException", "signatureAfterChange": " \tprivate void internalTestMessager(JavaCompiler compiler, DiagnosticListener<? super JavaFileObject> diagnosticListener) throws IOException", "diff": ["-\tprivate String internalTestMessager(JavaCompiler compiler) throws IOException {", "+\tprivate void internalTestMessager(JavaCompiler compiler, DiagnosticListener<? super JavaFileObject> diagnosticListener) throws IOException {", "+\t\toptions.add(\"-nowarn\");", "-\t\t// Invoke processing by compiling the targets.model resources", "-\t\tStringWriter errors = new StringWriter();", "-\t\tboolean success = BatchTestUtils.compileTreeWithErrors(compiler, options, targetFolder, errors);", "+\t\t// Invoke processing by compiling the targets.errors resources", "+\t\tboolean success = BatchTestUtils.compileTreeWithErrors(compiler, options, targetFolder, diagnosticListener);", "-\t\tassertTrue(\"errors should not be empty\", errors.getBuffer().length() != 0);", "-\t\t", "-\t\t//System.out.println(errors.getBuffer().toString());", "-\t\t", "-\t\treturn errors.getBuffer().toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c4c18675df287f10f9a8556bae34aa6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "30f95fb4ebb82c4f1cdb1fd9e5630fe8b392b9dd", "commitAfterChange": "79595bc8e3c8f30e8c21788264b1a2858fc4a5c5", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public String getHandleMemento()", "signatureAfterChange": " protected void getHandleMemento(StringBuffer buff)", "diff": ["-public String getHandleMemento(){", "+protected void getHandleMemento(StringBuffer buff) {", "-\tStringBuffer buff= new StringBuffer(((JavaElement)getParent()).getHandleMemento());", "+\t((JavaElement)getParent()).getHandleMemento(buff);", "-\tif (this.occurrenceCount > 1) {", "-\t\tbuff.append(JEM_COUNT);", "-\t\tbuff.append(this.occurrenceCount);", "-\t}", "-\treturn buff.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9f317c64f6b42af9c6624d2b55489d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "30f95fb4ebb82c4f1cdb1fd9e5630fe8b392b9dd", "commitAfterChange": "79595bc8e3c8f30e8c21788264b1a2858fc4a5c5", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic String getHandleMemento()", "signatureAfterChange": " \tpublic String getHandleMemento()", "diff": ["-\t\tStringBuffer buff= new StringBuffer(((JavaElement)getParent()).getHandleMemento());", "+\t\tStringBuffer buff = new StringBuffer();", "+\t\tgetHandleMemento(buff);", "+\t\treturn buff.toString();", "+\t}", "-\t\tif (this.occurrenceCount > 1) {", "-\t\t\tbuff.append(JEM_COUNT);", "-\t\t\tbuff.append(this.occurrenceCount);", "-\t\t}", "-\t\treturn buff.toString();"]}], "num": 31004}