{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3e66a5a8481ea0b2c854053d23ed8044", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b99e0839e2b334a3947f427c781eef8f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "99f0734d8a1b71a7d7c72970a0e6d86dd16a74bf", "commitAfterChange": "0660a80b4f83507ec084149491c197acba246b67", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 272, "signatureBeforeChange": " private int fieldSourceEnd(FieldBinding field, ASTNode node)", "signatureAfterChange": " private int nodeSourceEnd(Binding field, ASTNode node, int index)", "diff": ["-}", "-private int fieldSourceEnd(FieldBinding field, ASTNode node) {", "-\tif (node instanceof QualifiedNameReference) {", "-\t\tQualifiedNameReference ref = (QualifiedNameReference) node;", "-\t\tif (ref.binding == field) {", "-\t\t\treturn (int) (ref.sourcePositions[ref.indexOfFirstFieldBinding-1]);", "-\t\t}", "-\t\tFieldBinding[] otherFields = ref.otherBindings;", "-\t\tif (otherFields != null) {", "-\t\t\tint offset = ref.indexOfFirstFieldBinding == 1 ? 1 : ref.indexOfFirstFieldBinding - 1;", "-\t\t\tfor (int i = 0, length = otherFields.length; i < length; i++) {", "-\t\t\t\tif (otherFields[i] == field)", "-\t\t\t\t\treturn (int) (ref.sourcePositions[i + offset]);", "-\t\t\t}", "-\t\t}", "-\t}\t", "-\treturn node.sourceEnd;", "-}", "+}", "+private int nodeSourceEnd(Binding field, ASTNode node, int index) {", "+\tif (node instanceof QualifiedNameReference) {", "+\t\tQualifiedNameReference ref = (QualifiedNameReference) node;", "+\t\tif (ref.binding == field) {", "+\t\t\treturn (int) (ref.sourcePositions[ref.indexOfFirstFieldBinding-1]);", "+\t\t}", "+\t\tFieldBinding[] otherFields = ref.otherBindings;", "+\t\tif (otherFields != null) {", "+\t\t\tint offset = ref.indexOfFirstFieldBinding == 1 ? 1 : ref.indexOfFirstFieldBinding - 1;", "+\t\t\tfor (int i = 0, length = otherFields.length; i < length; i++) {", "+\t\t\t\tif (otherFields[i] == field)", "+\t\t\t\t\treturn (int) (ref.sourcePositions[i + offset]);", "+\t\t\t}", "+\t\t}", "+\t} else if (node instanceof ParameterizedQualifiedTypeReference) {", "+\t\tParameterizedQualifiedTypeReference reference = (ParameterizedQualifiedTypeReference) node;", "+\t\tif (index < reference.sourcePositions.length) {", "+\t\t\treturn (int) reference.sourcePositions[index];", "+\t\t}", "+\t}", "+\treturn node.sourceEnd;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da2be61d6b829880860b330dc1259804", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "99f0734d8a1b71a7d7c72970a0e6d86dd16a74bf", "commitAfterChange": "0660a80b4f83507ec084149491c197acba246b67", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 273, "signatureBeforeChange": " private int fieldSourceStart(FieldBinding field, ASTNode node)", "signatureAfterChange": " private int nodeSourceStart(Binding field, ASTNode node)", "diff": ["-}", "-private int fieldSourceStart(FieldBinding field, ASTNode node) {", "-\tif (node instanceof FieldReference) {", "-\t\tFieldReference fieldReference = (FieldReference) node;", "-\t\treturn (int) (fieldReference.nameSourcePosition >> 32);", "-\t} else \tif (node instanceof QualifiedNameReference) {", "-\t\tQualifiedNameReference ref = (QualifiedNameReference) node;", "-\t\tif (ref.binding == field) {", "-\t\t\treturn (int) (ref.sourcePositions[ref.indexOfFirstFieldBinding-1] >> 32);", "-\t\t}", "-\t\tFieldBinding[] otherFields = ref.otherBindings;", "-\t\tif (otherFields != null) {", "-\t\t\tint offset = ref.indexOfFirstFieldBinding == 1 ? 1 : ref.indexOfFirstFieldBinding - 1;", "-\t\t\tfor (int i = 0, length = otherFields.length; i < length; i++) {", "-\t\t\t\tif (otherFields[i] == field)", "-\t\t\t\t\treturn (int) (ref.sourcePositions[i + offset] >> 32);", "-\t\t\t}", "-\t\t}", "-\t}", "-", "-\treturn node.sourceStart;", "+}", "+private int nodeSourceStart(Binding field, ASTNode node) {", "+\tif (node instanceof FieldReference) {", "+\t\tFieldReference fieldReference = (FieldReference) node;", "+\t\treturn (int) (fieldReference.nameSourcePosition >> 32);", "+\t} else \tif (node instanceof QualifiedNameReference) {", "+\t\tQualifiedNameReference ref = (QualifiedNameReference) node;", "+\t\tif (ref.binding == field) {", "+\t\t\treturn (int) (ref.sourcePositions[ref.indexOfFirstFieldBinding-1] >> 32);", "+\t\t}", "+\t\tFieldBinding[] otherFields = ref.otherBindings;", "+\t\tif (otherFields != null) {", "+\t\t\tint offset = ref.indexOfFirstFieldBinding == 1 ? 1 : ref.indexOfFirstFieldBinding - 1;", "+\t\t\tfor (int i = 0, length = otherFields.length; i < length; i++) {", "+\t\t\t\tif (otherFields[i] == field)", "+\t\t\t\t\treturn (int) (ref.sourcePositions[i + offset] >> 32);", "+\t\t\t}", "+\t\t}", "+\t} else if (node instanceof ParameterizedQualifiedTypeReference) {", "+\t\tParameterizedQualifiedTypeReference reference = (ParameterizedQualifiedTypeReference) node;", "+\t\treturn (int) (reference.sourcePositions[0]>>>32);", "+\t}", "+", "+\treturn node.sourceStart;", "+}"]}], "num": 5741}