{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dfea0a102e18784de2e92e9b878c1e21", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02dbd8fed562f125d2901f43c24edbb8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedTypeReference.java", "commitBeforeChange": "3f9b2702aadc089f4c8c974ce4ca64b7f4615a56", "commitAfterChange": "e97d82484fd6d9bc0cb59f136b7bb983f66201ac", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprotected TypeBinding getTypeBinding(Scope scope)", "signatureAfterChange": "  \tprotected TypeBinding getTypeBinding(Scope scope)", "diff": ["-\t\t\tqualifiedType = this.resolvedType.isGenericType()", "-\t\t\t\t? scope.environment().createRawType((ReferenceBinding)this.resolvedType, qualifiedType)", "-\t\t\t\t: (ReferenceBinding) this.resolvedType;", "+\t\t\tReferenceBinding currentType = (ReferenceBinding) this.resolvedType;", "+\t\t\tif (currentType.isGenericType()) {", "+\t\t\t\tqualifiedType = scope.environment().createRawType(currentType, qualifiedType);", "+\t\t\t} else {", "+\t\t\t\tqualifiedType = (qualifiedType != null && (qualifiedType.isRawType() || qualifiedType.isParameterizedType()))", "+\t\t\t\t\t\t\t\t\t\t? scope.createParameterizedType(currentType, null, qualifiedType)", "+\t\t\t\t\t\t\t\t\t\t: currentType;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20db75696a137a6ef7d71739a3a89719", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedTypeReference.java", "commitBeforeChange": "e91a703eab271e6e509fa0880cd2ccbbc83f4ff3", "commitAfterChange": "f50fc8c9189dc4d436a8fe80d2776d88a2efa8bc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprotected TypeBinding getTypeBinding(Scope scope)", "signatureAfterChange": "  \tprotected TypeBinding getTypeBinding(Scope scope)", "diff": ["-\t\t\tif (currentType.isGenericType()) {", "-\t\t\t\tqualifiedType = scope.environment().createRawType(currentType, qualifiedType);", "-\t\t\t} else if (qualifiedType != null) {", "+\t\t\tif (qualifiedType != null) {", "-\t\t\t\tif ((rawQualified = qualifiedType.isRawType()) && !currentType.isStatic()) {", "+\t\t\t\tif (currentType.isGenericType()) {", "+\t\t\t\t\tqualifiedType = scope.environment().createRawType(currentType, qualifiedType);", "+\t\t\t\t} else if ((rawQualified = qualifiedType.isRawType()) && !currentType.isStatic()) {", "-\t\t\t\tqualifiedType = currentType;", "+\t\t\t\tqualifiedType = currentType.isGenericType() ? (ReferenceBinding)scope.environment().convertToRawType(currentType) : currentType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88c74278d9d721ba4ac539be0b76b95b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "ac1c76084ee063c5f1c73b186747579a24f2cc96", "commitAfterChange": "a4cdcc787e229b912c4cd3f7bf733e5e5b08d021", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tpublic final Binding getTypeOrPackage(char[][] compoundName)", "signatureAfterChange": " \tpublic final Binding getTypeOrPackage(char[][] compoundName)", "diff": ["-\t\tReferenceBinding qualifiedType = null;", "-", "-\t\tif (typeBinding.isGenericType()) {", "-\t\t\tqualifiedType = this.environment().createRawType(typeBinding, qualifiedType);", "-\t\t} else if (qualifiedType != null) {", "-\t\t\tboolean rawQualified;", "-\t\t\tif ((rawQualified = qualifiedType.isRawType()) && !typeBinding.isStatic()) {", "-\t\t\t\tqualifiedType = this.environment().createRawType((ReferenceBinding)typeBinding.erasure(), qualifiedType);", "-\t\t\t} else if (rawQualified || qualifiedType.isParameterizedType()) {", "-\t\t\t\tqualifiedType = this.environment().createParameterizedType((ReferenceBinding)typeBinding.erasure(), null, qualifiedType);", "-\t\t\t} else {", "-\t\t\t\tqualifiedType = typeBinding;", "-\t\t\t}", "-\t\t} else {", "-\t\t\tqualifiedType = typeBinding;", "-\t\t}", "+\t\tReferenceBinding qualifiedType = (ReferenceBinding) this.environment().convertToRawType(typeBinding);"]}], "num": 67792}