{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "66a675c2fa7fc8e65492db39f61d1ae0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9777e9987ec6943aedfe43d8ad54f1e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "9aa35310054d8c288c0c0d2f757429dc5fcced39", "commitAfterChange": "41f092015c73f4913b3c6ef2c39e376db5e0606c", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic String format(String string, int[] positions, AstNode[] nodes)", "signatureAfterChange": " \tpublic String format(String string, int[] positions, AstNode[] nodes)", "diff": ["-\t\t\tStringBuffer buffer = new StringBuffer(this.scribe.formattedSource());", "-\t\t\tbuffer.append(compilationUnitSource, this.scribe.scanner.getCurrentTokenEndPosition(), this.scribe.scannerEndPosition - this.scribe.scanner.getCurrentTokenEndPosition());", "-\t\t\tif (DEBUG) {", "-\t\t\t\tSystem.out.println(\"COULD NOT FORMAT \\n\" + this.scribe.scanner); //$NON-NLS-1$", "-\t\t\t\tSystem.out.println(this.scribe);", "-\t\t\t}", "-\t\t\treturn buffer.toString();", "+\t\t\treturn failedToFormat(compilationUnitSource);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4dd11e973cdc41d51e942f49e6bc91f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "874e2c41609c64af417834df9af2e898d8dcf37a", "commitAfterChange": "4977ef90a9cbab898d33f6e3ba736939d7ac7a85", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 41, "signatureBeforeChange": " public FieldBinding resolveTypeFor(FieldBinding field)", "signatureAfterChange": " public FieldBinding resolveTypeFor(FieldBinding field)", "diff": ["-", "-\t\t\t\t// apply null default:", "-\t\t\t\tLookupEnvironment environment = this.scope.environment();", "-\t\t\t\tTypeBinding defaultNullnessAnnotationBinding = null;", "-\t\t\t\tif (environment.globalOptions.isAnnotationBasedNullAnalysisEnabled) {", "-\t\t\t\t\tinitializeNullDefault();", "-\t\t\t\t\tdefaultNullnessAnnotationBinding = findDefaultNullness(this.scope, environment);", "-\t\t\t\t\tif (defaultNullnessAnnotationBinding != null && defaultNullnessAnnotationBinding.id == TypeIds.T_ConfiguredAnnotationNonNull) {", "-\t\t\t\t\t\tfield.fillInDefaultNonNullness(defaultNullnessAnnotationBinding, fieldDecl, initializationScope);", "-\t\t\t\t\t}", "-\t\t\t\t\t// validate null annotation:", "-\t\t\t\t\tthis.scope.validateNullAnnotation(field.tagBits, fieldDecl.type, fieldDecl.annotations);", "-\t\t\t\t}"]}], "num": 40158}