{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6dc982ed492ae47c14e848358673bd4f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50c09db097ebf03c19c1a456316451bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodPattern.java", "commitBeforeChange": "a446855af1d75ce4a9db853f60a76eb10d11782d", "commitAfterChange": "b39119968c7f32d55ae4a97790cb0a2d7d32153a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public int matchLevel(AstNode node, boolean resolve)", "signatureAfterChange": " public int matchLevel(AstNode node, boolean resolve)", "diff": ["+\tboolean checkTypeReferences = false;", "+\t\tcheckTypeReferences = true;", "-\t\tif (length != argsLength) {", "-\t\t\treturn IMPOSSIBLE_MATCH;", "-\t\t} else {", "-\t\t\tfor (int i = 0; i < length; i++) {", "-\t\t\t\tAstNode arg = args[i];", "-\t\t\t\tif (arg instanceof Argument) {", "-\t\t\t\t\tTypeReference argType = ((Argument)arg).type;", "-\t\t\t\t\tchar[][] argTypeName = argType.getTypeName();", "-\t\t\t\t\tchar[] sourceName = toArrayName(", "-\t\t\t\t\t\targTypeName[argTypeName.length-1], ", "-\t\t\t\t\t\targType.dimensions());", "-\t\t\t\t\tif (!matchesName(this.parameterSimpleNames[i], sourceName))", "-\t\t\t\t\t\treturn IMPOSSIBLE_MATCH;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "+\t\tif (length != argsLength) return IMPOSSIBLE_MATCH;", "+", "+\t\tif (checkTypeReferences)", "+\t\t\tfor (int i = 0; i < argsLength; i++)", "+\t\t\t\tif (!matchesTypeReference(this.parameterSimpleNames[i], ((Argument) args[i]).type))", "+\t\t\t\t\treturn IMPOSSIBLE_MATCH;", "-\tif (methodReturnType != null) {", "-\t\tchar[][] methodReturnTypeName = methodReturnType.getTypeName();", "-\t\tchar[] sourceName = toArrayName(", "-\t\t\tmethodReturnTypeName[methodReturnTypeName.length-1], ", "-\t\t\tmethodReturnType.dimensions());", "-\t\tif (!matchesName(this.returnSimpleName, sourceName))", "-\t\t\treturn IMPOSSIBLE_MATCH;", "-\t}", "+\tif (methodReturnType != null && !matchesTypeReference(this.returnSimpleName, methodReturnType))", "+\t\treturn IMPOSSIBLE_MATCH;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6795ea28b6ba6789dcf78ede209618fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "11d9bc69677fa9c8e3ad183264b865451dc15a16", "commitAfterChange": "0aef5635cdda5f8b487e6520930c462feef51cd5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void match(MethodDeclaration node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(MethodDeclaration node, MatchingNodeSet nodeSet)", "diff": ["-//public void match(FieldDeclaration node, MatchingNodeSet nodeSet) - SKIP IT", "-public void match(MethodDeclaration node, MatchingNodeSet nodeSet) {", "-\tif (!this.pattern.findDeclarations) return;", "+//public int match(FieldDeclaration node, MatchingNodeSet nodeSet) - SKIP IT", "+public int match(MethodDeclaration node, MatchingNodeSet nodeSet) {", "+\tif (!this.pattern.findDeclarations) return IMPOSSIBLE_MATCH;", "-\tif (!matchesName(this.pattern.selector, node.selector)) return;", "+\tif (!matchesName(this.pattern.selector, node.selector)) return IMPOSSIBLE_MATCH;", "-\t\tif (length != argsLength) return;", "+\t\tif (length != argsLength) return IMPOSSIBLE_MATCH;", "-\t\t\tif (!matchesTypeReference(this.pattern.parameterSimpleNames[i], ((Argument) args[i]).type)) return;", "+\t\t\tif (!matchesTypeReference(this.pattern.parameterSimpleNames[i], ((Argument) args[i]).type)) return IMPOSSIBLE_MATCH;", "-\tif (!matchesTypeReference(this.pattern.returnSimpleName, node.returnType)) return;", "+\tif (!matchesTypeReference(this.pattern.returnSimpleName, node.returnType)) return IMPOSSIBLE_MATCH;", "-\tnodeSet.addMatch(node, this.pattern.mustResolve ? POSSIBLE_MATCH : ACCURATE_MATCH);", "+\treturn nodeSet.addMatch(node, this.pattern.mustResolve ? POSSIBLE_MATCH : ACCURATE_MATCH);"]}], "num": 58722}