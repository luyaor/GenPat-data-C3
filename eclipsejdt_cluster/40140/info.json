{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fbac439cac4cdc0aefe0862ef1c17d8e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2170c4f8d6337f181823d5df3331b07d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionParser.java", "commitBeforeChange": "9fbdd9d4c931ec38118284981c5ef9abf0d36d38", "commitAfterChange": "d5d86df0121fb5c2bb6df3f92578f1379c6e5fff", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected void attachOrphanCompletionNode()", "signatureAfterChange": " protected void attachOrphanCompletionNode()", "diff": ["-\t\tStatement statement = (Statement)wrapWithExplicitConstructorCallIfNeeded(orphan);", "-\t\tcurrentElement = currentElement.add(statement, 0);", "+\t\tif (orphan instanceof Expression) {", "+\t\t\tbuildMoreCompletionContext((Expression)orphan);", "+\t\t} else {", "+\t\t\tStatement statement = (Statement) orphan;", "+\t\t\tcurrentElement = currentElement.add(statement, 0);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd96212f705dce2dcc915f8f43fe586c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionParser.java", "commitBeforeChange": "f338c86815ffb4c165b8024ba4f28cade0b2b75f", "commitAfterChange": "a98d7d87df415161ba75f53acbdbe8d316ea160c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected void attachOrphanCompletionNode()", "signatureAfterChange": " protected void attachOrphanCompletionNode()", "diff": ["-\t\t\tStatement statement = (Statement) orphan;", "-\t\t\tthis.currentElement = this.currentElement.add(statement, 0);", "+\t\t\tif (lastIndexOfElement(K_LAMBDA_EXPRESSION_DELIMITER) < 0) { // lambdas are recovered up to the containing expression statement and will carry along the assist node anyways.", "+\t\t\t\tStatement statement = (Statement) orphan;", "+\t\t\t\tthis.currentElement = this.currentElement.add(statement, 0);", "+\t\t\t}"]}], "num": 40140}