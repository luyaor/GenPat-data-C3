{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f9457f68aa04f80baf9e122ffb3bf3d9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "690a2ef4643141b87200f85c62467555", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "afec7d4a120ad9d3de76bf79cb0366f8fe30669d", "commitAfterChange": "57c6d386f529d0e8572acc77526ab668fb7c3818", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic UnconditionalFlowInfo addPotentialInitializationsFrom(UnconditionalFlowInfo otherInits)", "signatureAfterChange": " \t \tpublic FlowInfo addPotentialInitializationsFrom(FlowInfo otherInits)", "diff": ["-\tpublic UnconditionalFlowInfo addPotentialInitializationsFrom(UnconditionalFlowInfo otherInits) {", "+\tpublic FlowInfo addPotentialInitializationsFrom(FlowInfo otherInits) {", "-\t\treturn unconditionalInits().addPotentialInitializationsFrom(otherInits);", "+\t\tthis.initsWhenTrue.addPotentialInitializationsFrom(otherInits);", "+\t\tthis.initsWhenFalse.addPotentialInitializationsFrom(otherInits);", "+\t\treturn this;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d1a8294888587f64e3be8fcc19be119", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "e31a3d332f7041212032bc8ecaf89b88f9f4b3f9", "commitAfterChange": "3191fdf4ab3026eda23ddff8ec464afdaeed80aa", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "\r public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\t\t\t\t\t\t\t.addPotentialInitializationsFrom(tryInfo.unconditionalInits());\r", "-\t\t\t//*/\r", "-\t\t\t// SMART ANALYSIS (see 1FBPLCY)\r", "-\t\t\t//FlowInfo catchInfo = handlingContext.initsOnException(caughtExceptionTypes[i]);\r", "-\t\t\t\r", "+\t\t\t\t\t\t\t\t\t.addPotentialInitializationsFrom(tryInfo.unconditionalInits())\r", "+\t\t\t\t\t\t\t\t\t.addPotentialInitializationsFrom(handlingContext.initsOnReturn);\r", "+\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae11a4a11cd68f62bbe9ab60e137a898", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "afec7d4a120ad9d3de76bf79cb0366f8fe30669d", "commitAfterChange": "57c6d386f529d0e8572acc77526ab668fb7c3818", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic UnconditionalFlowInfo addInitializationsFrom(UnconditionalFlowInfo otherInits)", "signatureAfterChange": " \t \tpublic FlowInfo addInitializationsFrom(FlowInfo otherInits)", "diff": ["-\tpublic UnconditionalFlowInfo addInitializationsFrom(UnconditionalFlowInfo otherInits) {", "+\tpublic FlowInfo addInitializationsFrom(FlowInfo otherInits) {", "-\t\treturn unconditionalInits().addInitializationsFrom(otherInits);", "+\t\tthis.initsWhenTrue.addInitializationsFrom(otherInits);", "+\t\tthis.initsWhenFalse.addInitializationsFrom(otherInits);", "+\t\treturn this;"]}], "num": 11716}