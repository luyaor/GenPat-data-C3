{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f3e21d2f1981ee8e8d1c5778badde053", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fc25da0295ff3ee860a57bf40ed7a23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "1987bebfc0499fe07d643a641d2e74ff184f5cc7", "commitAfterChange": "2b6b723d87be49aecbb1b89e893d389af560ea10", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic void completeCodeAttribute(int codeAttributeOffset)", "signatureAfterChange": " \tpublic void completeCodeAttribute(int codeAttributeOffset)", "diff": ["-\t\t\tthis.codeStream.methodDeclaration.scope.problemReporter().bytecodeExceeds64KLimit(", "-\t\t\t\tthis.codeStream.methodDeclaration);", "+\t\t\tif (this.codeStream.methodDeclaration != null) {", "+\t\t\t\tthis.codeStream.methodDeclaration.scope.problemReporter().bytecodeExceeds64KLimit(this.codeStream.methodDeclaration);", "+\t\t\t} else {", "+\t\t\t\tthis.codeStream.lambdaExpression.scope.problemReporter().bytecodeExceeds64KLimit(this.codeStream.lambdaExpression);", "+\t\t\t}", "-\t\t\t\t\tthis.codeStream.methodDeclaration.scope.problemReporter().abortDueToInternalError(", "-\t\t\t\t\t\t\tMessages.bind(Messages.abort_invalidExceptionAttribute, new String(this.codeStream.methodDeclaration.selector)),", "-\t\t\t\t\t\t\tthis.codeStream.methodDeclaration);", "+\t\t\t\t\tif (this.codeStream.methodDeclaration != null) {", "+\t\t\t\t\t\tthis.codeStream.methodDeclaration.scope.problemReporter().abortDueToInternalError(", "+\t\t\t\t\t\t\t\tMessages.bind(Messages.abort_invalidExceptionAttribute, new String(this.codeStream.methodDeclaration.selector)),", "+\t\t\t\t\t\t\t\tthis.codeStream.methodDeclaration);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tthis.codeStream.lambdaExpression.scope.problemReporter().abortDueToInternalError(", "+\t\t\t\t\t\t\t\tMessages.bind(Messages.abort_invalidExceptionAttribute, new String(this.codeStream.lambdaExpression.binding.selector)),", "+\t\t\t\t\t\t\t\tthis.codeStream.lambdaExpression);", "+\t\t\t\t\t}", "-\t\t\tfinal boolean methodDeclarationIsStatic = this.codeStream.methodDeclaration.isStatic();", "+\t\t\tfinal boolean methodDeclarationIsStatic = this.codeStream.methodDeclaration != null ? this.codeStream.methodDeclaration.isStatic() : this.codeStream.lambdaExpression.binding.isStatic();", "-\t\t\t\t\tthis.codeStream.methodDeclaration.binding,", "+\t\t\t\t\tthis.codeStream.methodDeclaration != null ? this.codeStream.methodDeclaration.binding : this.codeStream.lambdaExpression.binding,", "-\t\t\t\t\tthis.codeStream.methodDeclaration.binding,", "+\t\t\t\t\tthis.codeStream.methodDeclaration != null ? this.codeStream.methodDeclaration.binding : this.codeStream.lambdaExpression.binding,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd867d97f4f41612ea849cce34d0bf57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " public MethodBinding resolveTypesFor(MethodBinding method)", "signatureAfterChange": " public MethodBinding resolveTypesFor(MethodBinding method)", "diff": ["+", "+\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=337799", "+\tif (this.scope.compilerOptions().sourceLevel >= ClassFileConstants.JDK1_7) {", "+\t\tif ((method.tagBits & TagBits.AnnotationSafeVarargs) != 0) {", "+\t\t\tif (!method.isVarargs()) {", "+\t\t\t\tmethodDecl.scope.problemReporter().safeVarargsOnFixedArityMethod(method);", "+\t\t\t} else if (!method.isStatic() && !method.isFinal() && !method.isConstructor()) {", "+\t\t\t\tmethodDecl.scope.problemReporter().safeVarargsOnNonFinalInstanceMethod(method);", "+\t\t\t}", "+\t\t} else if (method.parameters != null && method.parameters.length > 0 && method.isVarargs()) { // https://bugs.eclipse.org/bugs/show_bug.cgi?id=337795", "+\t\t\tif (!method.parameters[method.parameters.length - 1].isReifiable()) {", "+\t\t\t\tmethodDecl.scope.problemReporter().possibleHeapPollutionFromVararg(methodDecl.arguments[methodDecl.arguments.length - 1]);", "+\t\t\t}", "+\t\t}", "+\t}", "+"]}], "num": 49403}