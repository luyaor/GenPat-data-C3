{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "765b017988ec14423e5a8222793de6bf", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "048afbff50442f83950dbf2c894e638c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "7f9e7745cf3f1c024406269afc8bec9564b2443c", "commitAfterChange": "f71ae6e6dfede90c4056a2e033197a9212bd23a2", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void acceptClass(char[] packageName, char[] className, int modifiers, AccessRestriction accessRestriction)", "signatureAfterChange": " \tpublic void acceptClass(char[] packageName, char[] className, int modifiers, AccessRestriction accessRestriction)", "diff": ["-\t\tif(this.options.checkRestrictions && accessRestriction != null) return;", "+\t\tint accessibility = IAccessRule.K_ACCESSIBLE;", "+\t\tif(accessRestriction != null) {", "+\t\t\tswitch (accessRestriction.getProblemId()) {", "+\t\t\t\tcase IProblem.ForbiddenReference:", "+\t\t\t\t\tif(this.options.checkForbiddenReference) return;", "+\t\t\t\t\taccessibility = IAccessRule.K_NON_ACCESSIBLE;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase IProblem.DiscouragedReference:", "+\t\t\t\t\tif(this.options.checkDiscouragedReference) return;", "+\t\t\t\t\taccessibility = IAccessRule.K_DISCOURAGED;", "+\t\t\t\t\tbreak;", "+\t\t\t}", "+\t\t}", "-\t\trelevance += computeRelevanceForRestrictions(accessRestriction != null);", "+\t\trelevance += computeRelevanceForRestrictions(accessibility);", "+\t\t\tproposal.setAccessibility(accessibility);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fad166dbc403eb18f5fba1dcf89eafe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "7f9e7745cf3f1c024406269afc8bec9564b2443c", "commitAfterChange": "f71ae6e6dfede90c4056a2e033197a9212bd23a2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void acceptEnum(char[] packageName, char[] enumName, int modifiers, AccessRestriction accessRestriction)", "signatureAfterChange": " \tpublic void acceptEnum(char[] packageName, char[] enumName, int modifiers, AccessRestriction accessRestriction)", "diff": ["-\t\tif(this.options.checkRestrictions && accessRestriction != null) return;", "+\t\tint accessibility = IAccessRule.K_ACCESSIBLE;", "+\t\tif(accessRestriction != null) {", "+\t\t\tswitch (accessRestriction.getProblemId()) {", "+\t\t\t\tcase IProblem.ForbiddenReference:", "+\t\t\t\t\tif(this.options.checkForbiddenReference) return;", "+\t\t\t\t\taccessibility = IAccessRule.K_NON_ACCESSIBLE;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase IProblem.DiscouragedReference:", "+\t\t\t\t\tif(this.options.checkDiscouragedReference) return;", "+\t\t\t\t\taccessibility = IAccessRule.K_DISCOURAGED;", "+\t\t\t\t\tbreak;", "+\t\t\t}", "+\t\t}", "-\t\trelevance += computeRelevanceForRestrictions(accessRestriction != null);", "+\t\trelevance += computeRelevanceForRestrictions(accessibility);", "+\t\t\tproposal.setAccessibility(accessibility);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3420993321ba99271482aa661df252e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "7f9e7745cf3f1c024406269afc8bec9564b2443c", "commitAfterChange": "f71ae6e6dfede90c4056a2e033197a9212bd23a2", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void acceptInterface( \t\tchar[] packageName, \t\tchar[] interfaceName, \t\tint modifiers, \t\tAccessRestriction accessRestriction)", "signatureAfterChange": " \tpublic void acceptInterface( \t\tchar[] packageName, \t\tchar[] interfaceName, \t\tint modifiers, \t\tAccessRestriction accessRestriction)", "diff": ["-\t\tif(this.options.checkRestrictions && accessRestriction != null) return;", "+\t\tint accessibility = IAccessRule.K_ACCESSIBLE;", "+\t\tif(accessRestriction != null) {", "+\t\t\tswitch (accessRestriction.getProblemId()) {", "+\t\t\t\tcase IProblem.ForbiddenReference:", "+\t\t\t\t\tif(this.options.checkForbiddenReference) return;", "+\t\t\t\t\taccessibility = IAccessRule.K_NON_ACCESSIBLE;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase IProblem.DiscouragedReference:", "+\t\t\t\t\tif(this.options.checkDiscouragedReference) return;", "+\t\t\t\t\taccessibility = IAccessRule.K_DISCOURAGED;", "+\t\t\t\t\tbreak;", "+\t\t\t}", "+\t\t}", "-\t\trelevance += computeRelevanceForRestrictions(accessRestriction != null);", "+\t\trelevance += computeRelevanceForRestrictions(accessibility);", "+\t\t\tproposal.setAccessibility(accessibility);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f806af174e48f0a85b6de0ec80d41e8e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "7f9e7745cf3f1c024406269afc8bec9564b2443c", "commitAfterChange": "f71ae6e6dfede90c4056a2e033197a9212bd23a2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void acceptAnnotation( \t\tchar[] packageName, \t\tchar[] annotationName, \t\tint modifiers, \t\tAccessRestriction accessRestriction)", "signatureAfterChange": " \tpublic void acceptAnnotation( \t\tchar[] packageName, \t\tchar[] annotationName, \t\tint modifiers, \t\tAccessRestriction accessRestriction)", "diff": ["-\t\tif(this.options.checkRestrictions && accessRestriction != null) return;", "+\t\tint accessibility = IAccessRule.K_ACCESSIBLE;", "+\t\tif(accessRestriction != null) {", "+\t\t\tswitch (accessRestriction.getProblemId()) {", "+\t\t\t\tcase IProblem.ForbiddenReference:", "+\t\t\t\t\tif(this.options.checkForbiddenReference) return;", "+\t\t\t\t\taccessibility = IAccessRule.K_NON_ACCESSIBLE;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase IProblem.DiscouragedReference:", "+\t\t\t\t\tif(this.options.checkDiscouragedReference) return;", "+\t\t\t\t\taccessibility = IAccessRule.K_DISCOURAGED;", "+\t\t\t\t\tbreak;", "+\t\t\t}", "+\t\t}", "-\t\trelevance += computeRelevanceForRestrictions(accessRestriction != null);", "+\t\trelevance += computeRelevanceForRestrictions(accessibility);", "+\t\t\tproposal.setAccessibility(accessibility);"]}], "num": 5392}