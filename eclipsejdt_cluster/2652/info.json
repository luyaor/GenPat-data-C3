{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f142cb9aeb7424c22c0ba5624b4bd74", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93e6d2aceeac255ceaeb84fbbf4f3331", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "e489533002c2a8aea30eadfa50c303ea4823e94d", "commitAfterChange": "31362234b943750140a7714a1b76106b136f08fa", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "  \tprivate int rewriteOptionalQualifier(ASTNode parent, StructuralPropertyDescriptor property, int startPos)", "signatureAfterChange": "  \tprivate int rewriteOptionalQualifier(ASTNode parent, StructuralPropertyDescriptor property, int startPos)", "diff": ["-\t\t\t\t\t\tint dotEnd= getScanner().getTokenEndOffset(ITerminalSymbols.TokenNameDOT, node.getStartPosition() + node.getLength());", "+\t\t\t\t\t\tint dotEnd= getScanner().getTokenEndOffset(TerminalTokens.TokenNameDOT, node.getStartPosition() + node.getLength());", "-\t\t\t\t\t\treturn getScanner().getTokenEndOffset(ITerminalSymbols.TokenNameDOT, offset + length);", "+\t\t\t\t\t\treturn getScanner().getTokenEndOffset(TerminalTokens.TokenNameDOT, offset + length);", "-\t\t\treturn getScanner().getTokenEndOffset(ITerminalSymbols.TokenNameDOT, pos);", "+\t\t\treturn getScanner().getTokenEndOffset(TerminalTokens.TokenNameDOT, pos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0d3148aa83bc9d73f1f341acb19a927", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "12ab85e88163bdc5e704b08dc22b1dcffd911363", "commitAfterChange": "ba623d582045575b43eee2b86be165ff58225746", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " \t \tprivate int rewriteOptionalQualifier(ASTNode parent, StructuralPropertyDescriptor property, int startPos)", "signatureAfterChange": " \t \tprivate int rewriteOptionalQualifier(ASTNode parent, StructuralPropertyDescriptor property, int startPos)", "diff": ["-\t\t\t\t\treturn offset + length;", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\treturn getScanner().getTokenEndOffset(ITerminalSymbols.TokenNameDOT, offset + length);", "+\t\t\t\t\t} catch (CoreException e) {", "+\t\t\t\t\t\thandleException(e);", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "-\t\treturn doVisit(parent, property, startPos);", "+\t\tObject node= getOriginalValue(parent, property);", "+\t\tif (node == null) {", "+\t\t\treturn startPos;", "+\t\t}", "+\t\tint pos= doVisit((ASTNode) node);", "+\t\ttry {", "+\t\t\treturn getScanner().getTokenEndOffset(ITerminalSymbols.TokenNameDOT, pos);", "+\t\t} catch (CoreException e) {", "+\t\t\thandleException(e);", "+\t\t}", "+\t\treturn pos;"]}], "num": 2652}