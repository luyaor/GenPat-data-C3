{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "802f8ea76ac0bd8137521363d4f8403f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10b2cf6ac82c784af3d1c34fc0d1c53f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "9713cc0fc86fbe0881ff90c5290328149c35cbdc", "commitAfterChange": "236485921f70a82e4283431ca8763bf21e25e459", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate static ParameterizedGenericMethodBinding inferFromArgumentTypes(Scope scope, MethodBinding originalMethod, TypeBinding[] arguments, TypeBinding[] parameters, InferenceContext inferenceContext)", "signatureAfterChange": " \tprivate static ParameterizedGenericMethodBinding inferFromArgumentTypes(Scope scope, MethodBinding originalMethod, TypeBinding[] arguments, TypeBinding[] parameters, InferenceContext inferenceContext)", "diff": ["-", "-\t\t}", "-\t\tif (inferenceContext.status == InferenceContext.RAW_SUBSTITUTION) {", "-\t\t\t// raw generic method inferred", "-\t\t\treturn scope.environment().createParameterizedGenericMethod(originalMethod, (RawTypeBinding)null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5919434a6c2d7cb173df016c27aea37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "985bbf877eb7f0470a093f3a8cf5e47ddbe7045f", "commitAfterChange": "6d56fa2ff304c66dffb3921f7844c0b14acec01a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\t \tpublic static MethodBinding computeCompatibleMethod(MethodBinding originalMethod, TypeBinding[] arguments, Scope scope, InvocationSite invocationSite)", "signatureAfterChange": "\t \tpublic static MethodBinding computeCompatibleMethod(MethodBinding originalMethod, TypeBinding[] arguments, Scope scope, InvocationSite invocationSite)", "diff": ["-\t\t\t\tmethodSubstitute = new ParameterizedGenericMethodBinding(originalMethod, substitutes, scope.environment());", "+\t\t\t\tmethodSubstitute = scope.environment().createParameterizedGenericMethod(originalMethod, substitutes);"]}], "num": 894}