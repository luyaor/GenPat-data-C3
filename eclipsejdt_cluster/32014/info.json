{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "99c50cb6f1977066f539bd171fbe9e24", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c20e79a11ac796e3da0150d99983d18", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "830277de86eee08c18b5e0da495c01b96cccdad2", "commitAfterChange": "a874c20c38675a0faf72bfd6c0cb69354f6ff3fb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 0, "signatureBeforeChange": " public void anewarray(TypeBinding typeBinding)", "signatureAfterChange": "  \t\tpublic ExceptionMarker(int pc, char[] constantPoolName)", "diff": ["+\t\tpublic ExceptionMarker(int pc, char[] constantPoolName) {", "+\t\t\tthis.pc = pc;", "+\t\t\tthis.constantPoolName = constantPoolName;", "+\t\t}", "-}", "-public void anewarray(TypeBinding typeBinding) {", "-    super.anewarray(typeBinding);", "-    char[] constantPoolName = typeBinding.constantPoolName();", "-    int length = constantPoolName.length;", "-    System.arraycopy(constantPoolName, 0, (constantPoolName = new char[length + 3]), 2, length);", "-    constantPoolName[0] = '[';", "-    constantPoolName[1] = 'L';", "-    constantPoolName[length + 2] = ';';", "-    int numberOfStackItems = this.currentFrame.numberOfStackItems;", "-    if (numberOfStackItems >= 1) {", "-        this.currentFrame.stackItems[numberOfStackItems - 1] = new VerificationTypeInfo(typeBinding.id, constantPoolName);", "-    }", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73fc4ad5af5a79f653d56ab02903e94f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "1a8cfd60f35f9eb233d4395676551d0101e49aa3", "commitAfterChange": "acbc84bdd187bdb6c7f4afd96c97bfaa149e3ef9", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tprotected boolean verifyEndLine(int textPosition)", "signatureAfterChange": " \tprotected boolean verifyEndLine(int textPosition)", "diff": ["-\t\tboolean isDomParser = (this.kind & DOM_PARSER) != 0;", "-\t\tboolean isFormatterParser = (this.kind & FORMATTER_COMMENT_PARSER) != 0;", "+\t\tboolean domParser = (this.kind & DOM_PARSER) != 0;", "-\t\t\t\tif (isDomParser || isFormatterParser) {", "+\t\t\t\tif (domParser) {", "-\t\tint spacePos = this.index;", "-\t\tchar previousChar = ch;", "-\t\t\t\t\tif (isDomParser || isFormatterParser) {", "+\t\t\t\t\tif (domParser) {", "-\t\t\t\t\t\tint textEndPosition = previousPosition;", "-\t\t\t\t\t\tif (isFormatterParser && ScannerHelper.isWhitespace(previousChar)) {", "-\t\t\t\t\t\t\ttextEndPosition = spacePos;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tpushText(textPosition, textEndPosition);", "+\t\t\t\t\t\tpushText(textPosition, previousPosition);", "-\t\t\t\t\tif (isFormatterParser && previousChar != ch && !ScannerHelper.isWhitespace(previousChar)) {", "-\t\t\t\t\t\tthis.spacePosition = previousPosition;", "-\t\t\t\t\t}", "-\t\t\t\t\t\tif (isDomParser || isFormatterParser) {", "+\t\t\t\t\t\tif (domParser) {", "-\t\t\t\t\t\t\tint textEndPosition = this.starPosition;", "-\t\t\t\t\t\t\tif (isFormatterParser && ScannerHelper.isWhitespace(previousChar)) {", "-\t\t\t\t\t\t\t\ttextEndPosition = this.spacePosition;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tpushText(textPosition, textEndPosition);", "+\t\t\t\t\t\t\tpushText(textPosition, this.starPosition);", "-\t\t\tpreviousChar = ch;"]}], "num": 32014}