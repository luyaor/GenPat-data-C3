{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c8bf3eb22bbe97bb4ef7681a5736577", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b769cf1055dc42826e64ee143d6386b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "6205c492a6916e42c0b6ad15256bff7dcf1e4392", "commitAfterChange": "b04fa38e63115847cc85f9f1e22d8acc9344f334", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tpublic void selectType(char[] typeName, IType context) throws JavaModelException", "signatureAfterChange": " \tpublic void selectType(char[] typeName, IType context) throws JavaModelException", "diff": ["-\t\t\t\t\tif (context.isLambda() && context.getParent() != null) {", "+\t\t\t\t\twhile (context.isLambda() && context.getParent() != null) {", "+\t\t\t\t\t\t// It is easier to find the first enclosing proper type than the corresponding ", "+\t\t\t\t\t\t// lambda expression ast to add the selection node to."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c379931878e19e0ac567ec966235cde5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImplicitNullAnnotationVerifier.java", "commitBeforeChange": "66c82b264558eb722aa3e6c34563bf73fc4b8723", "commitAfterChange": "bff41248922cdba6bbf08965185c706ed31fb008", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tvoid checkNullSpecInheritance(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod,  \t\t\tboolean hasNonNullDefault, boolean shouldComplain, \t\t\tMethodBinding inheritedMethod, Scope scope, InheritedNonNullnessInfo[] inheritedNonNullnessInfos)", "signatureAfterChange": " \tvoid checkNullSpecInheritance(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod,  \t\t\tboolean hasNonNullDefault, boolean shouldComplain, \t\t\tMethodBinding inheritedMethod, Scope scope, InheritedNonNullnessInfo[] inheritedNonNullnessInfos)", "diff": ["-\t\t\t\t\t\t\tapplyReturnNullBits(currentMethod, inheritedNullnessBits, this.environment);", "+\t\t\t\t\t\t\tapplyReturnNullBits(currentMethod, inheritedNullnessBits);", "-\t\t\t\t\tapplyReturnNullBits(currentMethod, currentNullnessBits, this.environment);", "+\t\t\t\t\tapplyReturnNullBits(currentMethod, currentNullnessBits);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f093c80baa710f1cd28f6973835599fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "f9968462ad3e78057baba9747e91f7b6e3ea59e1", "commitAfterChange": "1f65e2f1d1142c8be683dea8425f1840c9121137", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " void checkMethods()", "signatureAfterChange": " void checkMethods()", "diff": ["-\t\t\t\t\t\tif (doesMethodOverride(currentMethod, inheritedMethod)) {", "+\t\t\t\t\t\tif (isParameterSubsignature(currentMethod, inheritedMethod)) {", "-\t\t\t\t\tif (doesMethodOverride(inheritedMethod, otherInheritedMethod)) {", "+\t\t\t\t\tif (isParameterSubsignature(inheritedMethod, otherInheritedMethod)) {"]}], "num": 52237}