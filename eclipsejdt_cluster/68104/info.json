{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a7a39eb9e2c19bf0b43ec3f99632281e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2094f3ff233f70d76af5b9112d550539", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ClasspathSourceDirectory.java", "commitBeforeChange": "7757a5934fde86433c9c42221d6117d1b7f29e23", "commitAfterChange": "0bbfe267fb7eaaa77628088e8cdbd841ddb40de5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public NameEnvironmentAnswer findClass(String sourceFileName, String qualifiedPackageName, String qualifiedSourceFileName)", "signatureAfterChange": "   public NameEnvironmentAnswer findClass(String sourceFileName, String qualifiedPackageName, String qualifiedSourceFileName)", "diff": ["-\treturn new NameEnvironmentAnswer(new CompilationUnit(null, fullSourcePath, this.encoding));", "+\tIPath path = new Path(qualifiedSourceFileName);", "+\tIFile file = this.sourceFolder.getFile(path);", "+\tString fileEncoding = this.encoding;", "+\ttry {", "+\t\tfileEncoding = file.getCharset();", "+\t}", "+\tcatch (CoreException ce) {", "+\t\t// let use default encoding", "+\t}", "+//\treturn new NameEnvironmentAnswer(new CompilationUnit(null, fullSourcePath, this.encoding));", "+\treturn new NameEnvironmentAnswer(new CompilationUnit(null, fullSourcePath, fileEncoding));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca0c7783c0cddbea556f59b1c24e6d59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ClasspathSourceDirectory.java", "commitBeforeChange": "2f0c7ec523954b9442b914a192aeb84937c76666", "commitAfterChange": "e1ce38065823480549fe152214755fa58b2884e3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public NameEnvironmentAnswer findClass(String sourceFileWithoutExtension, String qualifiedPackageName, String qualifiedSourceFileWithoutExtension)", "signatureAfterChange": "   public NameEnvironmentAnswer findClass(String sourceFileWithoutExtension, String qualifiedPackageName, String qualifiedSourceFileWithoutExtension)", "diff": ["-\t\tString fullSourcePath = this.sourceLocation + qualifiedSourceFileName;", "-\t\tString fileEncoding = this.encoding;", "-\t\ttry {", "-\t\t\tfileEncoding = file.getCharset();", "-\t\t}", "-\t\tcatch (CoreException ce) {", "-\t\t\t// let use default encoding", "-\t\t}", "-\t\treturn new NameEnvironmentAnswer(new CompilationUnit(null, fullSourcePath, fileEncoding), null /* no access restriction */);", "+\t\treturn new NameEnvironmentAnswer(new ResourceCompilationUnit(file), null /* no access restriction */);"]}], "num": 68104}