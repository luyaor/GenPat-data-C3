{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9e3833aabf55e099e2c950c5cc10605b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15f6e3bdd083a7c71a6c87f82f102309", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/NullAnnotationMatching.java", "commitBeforeChange": "dbdde44f24ace4ee47bccce2cfe484eeeb8013f3", "commitAfterChange": "33bcc97ba28fd6319a8c922b4f8d989e4aab5311", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static int checkAssignment(BlockScope currentScope, FlowContext flowContext, \t\t\t\t\t\t\t\t\t   VariableBinding var, FlowInfo flowInfo, int nullStatus, Expression expression, TypeBinding providedType)", "signatureAfterChange": " \tpublic static int checkAssignment(BlockScope currentScope, FlowContext flowContext, \t\t\t\t\t\t\t\t\t   VariableBinding var, FlowInfo flowInfo, int nullStatus, Expression expression, TypeBinding providedType)", "diff": ["-\t\t\tif (annotationStatus.isDefiniteMismatch()) {", "-\t\t\t\tcurrentScope.problemReporter().nullityMismatchingTypeAnnotation(expression, providedType, var.type, annotationStatus);", "-\t\t\t\thasReported = true;", "-\t\t\t} else if (annotationStatus.isUnchecked()) {", "-\t\t\t\tflowContext.recordNullityMismatch(currentScope, expression, providedType, var.type, flowInfo, nullStatus);", "+\t\t\tif (annotationStatus.isAnyMismatch()) {", "+\t\t\t\tflowContext.recordNullityMismatch(currentScope, expression, providedType, var.type, flowInfo, nullStatus, annotationStatus);", "-\t\t\t\tflowContext.recordNullityMismatch(currentScope, expression, providedType, var.type, flowInfo, nullStatus);", "+\t\t\t\tflowContext.recordNullityMismatch(currentScope, expression, providedType, var.type, flowInfo, nullStatus, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc89a2abfdb65228ccb955de6e480d7a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "d5b9ab15bb3f769b7e2ac485fe6da55027818828", "commitAfterChange": "e98478cd38caef5e23457b8b0fdc364bf2846afc", "methodNumberBeforeChange": 114, "methodNumberAfterChange": 114, "signatureBeforeChange": " protected void consumeInterfaceMemberDeclarationsopt()", "signatureAfterChange": " protected void consumeInterfaceMemberDeclarationsopt()", "diff": ["-", "-\t// Flag invalid orphan javadoc comments", "-\tcheckAnnotation();", "-\tif (this.annotation != null) {", "-\t\tthis.problemReporter().annotationUnexpectedTag(this.annotation.sourceStart, this.annotation.sourceEnd);", "-\t\tthis.annotation = null;", "-\t}"]}], "num": 67734}