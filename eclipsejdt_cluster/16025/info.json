{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1b7ea3ab9dc440c292abc7173c2949af", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05b3ac4b51208a2d4e072ca7a9f9199c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "eed892a50112eed6a825c858f4a58d30116515e1", "commitAfterChange": "7ddc4b260e670fb201c88011d7d43ecdc9d12a4c", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tprivate void resolve(ICompilationUnit[] compilationUnits, String[] bindingKeys, ASTRequestor astRequestor, int apiLevel, Map compilerOptions, WorkingCopyOwner owner, IProgressMonitor monitor)", "signatureAfterChange": "  \tprivate void resolve(ICompilationUnit[] compilationUnits, String[] bindingKeys, ASTRequestor astRequestor, int apiLevel, Map compilerOptions, WorkingCopyOwner owner, IProgressMonitor monitor)", "diff": ["-\t\t\t\t\t\tBindingResolver resolver = new DefaultBindingResolver(unit.scope, owner, this.bindingTables, this);", "+\t\t\t\t\t\tBindingResolver resolver = new DefaultBindingResolver(unit.scope, owner, this.bindingTables);", "-\t\t\t\t\t\t\tDefaultBindingResolver resolver = new DefaultBindingResolver(unit.scope, owner, this.bindingTables, this);", "+\t\t\t\t\t\t\tDefaultBindingResolver resolver = new DefaultBindingResolver(unit.scope, owner, this.bindingTables);", "-\t\t\tDefaultBindingResolver resolver = new DefaultBindingResolver(null, owner, this.bindingTables, this);", "+\t\t\tDefaultBindingResolver resolver = new DefaultBindingResolver(this.lookupEnvironment, owner, this.bindingTables);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3780f25165c2e131dfe2a89d95768405", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "0de5167791884524f72d9d44c10f0e243af65d00", "commitAfterChange": "07ab76f69fbeeb2f2fd54cdf3d01ee69344b9ae0", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 30, "signatureBeforeChange": "  \tprivate void reportBinding(Object key, ASTRequestor astRequestor, WorkingCopyOwner owner, CompilationUnitDeclaration unit)", "signatureAfterChange": "  \tprivate void reportBinding(Object key, ASTRequestor astRequestor, WorkingCopyOwner owner, CompilationUnitDeclaration unit)", "diff": ["-\t\t\tDefaultBindingResolver resolver = new DefaultBindingResolver(unit.scope, owner, this.bindingTables, false);", "+\t\t\tDefaultBindingResolver resolver = new DefaultBindingResolver(unit.scope, owner, this.bindingTables, false, this.fromJavaProject);", "+\t\t\tAnnotationBinding annotationBinding = keyResolver.getAnnotationBinding();", "+\t\t\tIBinding binding;", "+\t\t\tif (annotationBinding != null) {", "+\t\t\t\tbinding = resolver.getAnnotationInstance(annotationBinding);", "+\t\t\t} else {", "+\t\t\t\tbinding = resolver.getBinding(compilerBinding);", "+\t\t\t}", "+\t\t\tif (binding != null)", "+\t\t\t\tastRequestor.acceptBinding(keyResolver.getKey(), binding);", "+\t\t}", "+\t}"]}], "num": 16025}