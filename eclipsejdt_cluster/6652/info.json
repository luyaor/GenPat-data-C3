{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f92c08530889971df87cdfcaa3e57d23", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b81761b84f6c1227017c658ed549978", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 63, "signatureBeforeChange": " \tpublic boolean visit( \t\tConstructorDeclaration constructorDeclaration, \t\tClassScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tConstructorDeclaration constructorDeclaration, \t\tClassScope scope)", "diff": ["-\t\tif (constructorDeclaration.modifiers != NO_MODIFIERS) {", "-\t\t\tthis.scribe.printModifiers();", "-\t\t} else {", "-\t\t\tthis.scribe.printComment();", "-\t\t}\t\t\t", "+\t\tthis.scribe.printModifiers();", "+\t\tthis.scribe.space();", "-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameIdentifier, true); ", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameIdentifier, true); ", "-\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameRBRACE);", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACE);", "-\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83ccbe03aa64848576cc46858c3bdaa8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \tpublic void formatMethodArguments( \t\t\tAbstractMethodDeclaration methodDeclaration,  \t\t\tboolean spaceBeforeOpenParen,  \t\t\tboolean spaceBetweenEmptyArgument, \t\t\tboolean spaceBeforeClosingParen,  \t\t\tboolean spaceBeforeFirstArgument,  \t\t\tboolean spaceBeforeComma,  \t\t\tboolean spaceAfterComma)", "signatureAfterChange": "  \tpublic void formatMethodArguments( \t\t\tAbstractMethodDeclaration methodDeclaration,  \t\t\tboolean spaceBeforeOpenParen,  \t\t\tboolean spaceBetweenEmptyArgument, \t\t\tboolean spaceBeforeClosingParen,  \t\t\tboolean spaceBeforeFirstArgument,  \t\t\tboolean spaceBeforeComma,  \t\t\tboolean spaceAfterComma)", "diff": ["-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameLPAREN, spaceBeforeOpenParen); ", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLPAREN, spaceBeforeOpenParen); ", "-\t\t\t\t\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameCOMMA, spaceBeforeComma);", "+\t\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameCOMMA, spaceBeforeComma);", "-\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameRPAREN, spaceBeforeClosingParen); ", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, spaceBeforeClosingParen); ", "-\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameRPAREN, spaceBetweenEmptyArgument); ", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, spaceBetweenEmptyArgument); "]}], "num": 6652}