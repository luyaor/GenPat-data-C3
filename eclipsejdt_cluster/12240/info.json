{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "475017b1c8cfaa76cd8a4c59354fa9ee", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3971ef3ef5f1cea56603110642a5ec05", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/internal/compiler/tool/EclipseFileManager.java", "commitBeforeChange": "f6d7e4c8ebdaaf8a904962804a027a09edc0c0d3", "commitAfterChange": "30e98d6cc084dfe1b207ffb7493b2de7b6cec8c4", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tIterable<? extends File> getDefaultBootclasspath()", "signatureAfterChange": "  \tIterable<? extends File> getDefaultBootclasspath()", "diff": ["-\t\tArrayList<File> files = new ArrayList<File>();", "+\t\tList<File> files = new ArrayList<>();", "-\t\t/*", "-\t\t * Handle >= JDK 1.6", "-\t\t */", "-\t\tString javaHome = System.getProperty(\"java.home\"); //$NON-NLS-1$", "-\t\tFile javaHomeFile = null;", "-\t\tif (javaHome != null) {", "-\t\t\tjavaHomeFile = new File(javaHome);", "-\t\t\tif (!javaHomeFile.exists())", "-\t\t\t\tjavaHomeFile = null;", "+\t\tfor (String fileName : org.eclipse.jdt.internal.compiler.util.Util.collectFilesNames()) {", "+\t\t\tfiles.add(new File(fileName));", "-", "-\t\taddFilesFrom(javaHomeFile, \"java.endorsed.dirs\", \"/lib/endorsed\", files);//$NON-NLS-1$//$NON-NLS-2$", "-\t\tif (javaHomeFile != null) {", "-\t\t\tFile[] directoriesToCheck = null;", "-\t\t\tif (System.getProperty(\"os.name\").startsWith(\"Mac\")) {//$NON-NLS-1$//$NON-NLS-2$", "-\t\t\t\tdirectoriesToCheck = new File[] { new File(javaHomeFile, \"../Classes\"), //$NON-NLS-1$", "-\t\t\t\t};", "-\t\t\t} else {", "-\t\t\t\tdirectoriesToCheck = new File[] { new File(javaHomeFile, \"lib\") //$NON-NLS-1$", "-\t\t\t\t};", "-\t\t\t}", "-\t\t\tFile[][] jars = Main.getLibrariesFiles(directoriesToCheck);", "-\t\t\taddFiles(jars, files);", "-\t\t}", "-\t\taddFilesFrom(javaHomeFile, \"java.ext.dirs\", \"/lib/ext\", files);//$NON-NLS-1$//$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea304bf5131ea32ceda5ed113b4cff7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/util/EclipseFileManager.java", "commitBeforeChange": "f6d7e4c8ebdaaf8a904962804a027a09edc0c0d3", "commitAfterChange": "30e98d6cc084dfe1b207ffb7493b2de7b6cec8c4", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tIterable<? extends File> getDefaultBootclasspath()", "signatureAfterChange": "  \tIterable<? extends File> getDefaultBootclasspath()", "diff": ["-\t\tArrayList<File> files = new ArrayList<File>();", "+\t\tList<File> files = new ArrayList<>();", "-\t\t/*", "-\t\t * Handle >= JDK 1.6", "-\t\t */", "-\t\tString javaHome = System.getProperty(\"java.home\"); //$NON-NLS-1$", "-\t\tFile javaHomeFile = null;", "-\t\tif (javaHome != null) {", "-\t\t\tjavaHomeFile = new File(javaHome);", "-\t\t\tif (!javaHomeFile.exists())", "-\t\t\t\tjavaHomeFile = null;", "+\t\tfor (String fileName : org.eclipse.jdt.internal.compiler.util.Util.collectFilesNames()) {", "+\t\t\tfiles.add(new File(fileName));", "-", "-\t\taddFilesFrom(javaHomeFile, \"java.endorsed.dirs\", \"/lib/endorsed\", files);//$NON-NLS-1$//$NON-NLS-2$", "-\t\tif (javaHomeFile != null) {", "-\t\t\tFile[] directoriesToCheck = null;", "-\t\t\tString libs = System.getProperty(\"os.name\").startsWith(\"Mac\") && jdkLevel == ClassFileConstants.JDK1_6 ? \"../Classes\" : \"lib\";//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$", "-\t\t\tdirectoriesToCheck = new File[] { new File(javaHomeFile, libs)};", "-\t\t\tFile[][] jars = Main.getLibrariesFiles(directoriesToCheck);", "-\t\t\taddFiles(jars, files);", "-\t\t}", "-\t\taddFilesFrom(javaHomeFile, \"java.ext.dirs\", \"/lib/ext\", files);//$NON-NLS-1$//$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1fbd5a93048fbee97a476f84a4f01c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "fd7e77b1028e0329fddccf6687c9e432c8c52d0f", "commitAfterChange": "9c653a028dfbebc6cebd61d6611b7e78a7c4de1c", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-\t \t if (bootclasspaths.size() == 0) {", "+\t \tfinal File javaHome = getJavaHome();", "+\t\tif (bootclasspaths.size() == 0) {", "-\t\t \t if (getJavaHome() != null) {", "-\t\t\t\tFile[] directoriesToCheck = new File[] { ", "-\t\t\t\t\t\tnew File(getJavaHome(), \"lib\") //$NON-NLS-1$", "-\t\t\t\t\t\t};", "+\t\t \t if (javaHome != null) {", "+\t\t\t\tFile[] directoriesToCheck = null;", "+\t\t\t\tif (System.getProperty(\"os.name\").startsWith(\"Mac\")) {//$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t\t\tdirectoriesToCheck = new File[] {", "+\t\t\t\t\t\tnew File(javaHome, \"../Classes\"), //$NON-NLS-1$", "+\t\t\t\t\t};", "+\t\t\t\t} else {", "+\t\t\t\t\tdirectoriesToCheck = new File[] { ", "+\t\t\t\t\t\tnew File(javaHome, \"lib\") //$NON-NLS-1$", "+\t\t\t\t\t};", "+\t\t\t\t}", "-\t\t\t\textdirsNames.add(getJavaHome().getAbsolutePath() + \"/lib/ext\"); //$NON-NLS-1$", "+\t\t\t\textdirsNames.add(javaHome.getAbsolutePath() + \"/lib/ext\"); //$NON-NLS-1$"]}], "num": 12240}