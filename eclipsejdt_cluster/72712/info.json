{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "06109890366d94489b49d37c4642aed1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1055ea737b4daeffcb656489d4b8e950", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "314be86a62cb23e4add94210ca0a317454243e7c", "commitAfterChange": "4f3f39945f1ee27fc0ddd600cc6447ef1dfcd7a8", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 50, "signatureBeforeChange": "  private void scanMethodForNullAnnotation(IBinaryMethod method, MethodBinding methodBinding, ITypeAnnotationWalker externalAnnotationWalker)", "signatureAfterChange": "  private void scanMethodForNullAnnotation(IBinaryMethod method, MethodBinding methodBinding, ITypeAnnotationWalker externalAnnotationWalker)", "diff": ["-\t\t\tchar[][] typeName = CharOperation.splitOn('/', annotationTypeName, 1, annotationTypeName.length-1); // cut of leading 'L' and trailing ';'", "+\t\t\tchar[][] typeName = signature2qualifiedTypeName(annotationTypeName);", "-\t\t\t\t\t\tchar[][] typeName = CharOperation.splitOn('/', annotationTypeName, 1, annotationTypeName.length-1); // cut of leading 'L' and trailing ';'", "+\t\t\t\t\t\tchar[][] typeName = signature2qualifiedTypeName(annotationTypeName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48c09e44eb13a22777c57bd86b66dbe3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/UtilTest.java", "commitBeforeChange": "059424facf2daa3b3bdf94b9d6b6a2ca427f043f", "commitAfterChange": "4b5062599ea5f6d5d2aaa7c7068d9e4017337374", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 41, "signatureBeforeChange": " public void test39()", "signatureAfterChange": " public void test39()", "diff": ["-\t\tCharOperation.pathMatch(\"**/CVS/*\".toCharArray(), \"CVS/Repository\".toCharArray(), true, '/'));", "+\t\tcheckPathMatch(\"**/CVS/*\".toCharArray(), \"CVS/Repository\".toCharArray(), true));", "-\t\tCharOperation.pathMatch(\"**/CVS/*\".toCharArray(), \"org/apache/CVS/Entries\".toCharArray(), true, '/'));", "+\t\tcheckPathMatch(\"**/CVS/*\".toCharArray(), \"org/apache/CVS/Entries\".toCharArray(), true));", "-\t\tCharOperation.pathMatch(\"**/CVS/*\".toCharArray(), \"org/apache/jakarta/tools/ant/CVS/Entries\".toCharArray(), true, '/'));", "+\t\tcheckPathMatch(\"**/CVS/*\".toCharArray(), \"org/apache/jakarta/tools/ant/CVS/Entries\".toCharArray(), true));", "-\t\t!CharOperation.pathMatch(\"**/CVS/*\".toCharArray(), \"org/apache/CVS/foo/bar/Entries\".toCharArray(), true, '/'));", "+\t\t!checkPathMatch(\"**/CVS/*\".toCharArray(), \"org/apache/CVS/foo/bar/Entries\".toCharArray(), true));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5249017011796fcb9cde6d6b8711439d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/UtilTest.java", "commitBeforeChange": "059424facf2daa3b3bdf94b9d6b6a2ca427f043f", "commitAfterChange": "4b5062599ea5f6d5d2aaa7c7068d9e4017337374", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 61, "signatureBeforeChange": " public void test60()", "signatureAfterChange": " public void test60()", "diff": ["-\t\t!CharOperation.pathMatch(\"/P/src\".toCharArray(), \"/P/src/X\".toCharArray(), true, '/'));", "+\t\t!checkPathMatch(\"/P/src\".toCharArray(), \"/P/src/X\".toCharArray(), true));", "-\t\t!CharOperation.pathMatch(\"/P/**/src\".toCharArray(), \"/P/src/X\".toCharArray(), true, '/'));", "+\t\t!checkPathMatch(\"/P/**/src\".toCharArray(), \"/P/src/X\".toCharArray(), true));", "-\t\tCharOperation.pathMatch(\"/P/src\".toCharArray(), \"/P/src\".toCharArray(), true, '/'));", "+\t\tcheckPathMatch(\"/P/src\".toCharArray(), \"/P/src\".toCharArray(), true));", "-\t\t!CharOperation.pathMatch(\"A.java\".toCharArray(), \"/P/src/A.java\".toCharArray(), true, '/'));\t\t", "+\t\t!checkPathMatch(\"A.java\".toCharArray(), \"/P/src/A.java\".toCharArray(), true));\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "622477caa7ffad7fe8f265ec39dc3414", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  void checkMethods()", "signatureAfterChange": "  void checkMethods()", "diff": ["-\t\tMethodBinding[] matchingInherited = new MethodBinding[inherited.length];", "-\t\tMethodBinding[] foundMatch = new MethodBinding[inherited.length]; // null is no match, otherwise value is matching currentMethod", "+\t\tMethodBinding[] matchingInherited = new MethodBinding[inheritedLength];", "+\t\tMethodBinding[] foundMatch = new MethodBinding[inheritedLength]; // null is no match, otherwise value is matching currentMethod", "-\t\t\t\t\tif (inheritedMethod.declaringClass != otherInheritedMethod.declaringClass", "-\t\t\t\t\t\t&& isSubstituteParameterSubsignature(inheritedMethod, otherInheritedMethod)) {", "+\t\t\t\t\tif (isSubstituteParameterSubsignature(inheritedMethod, otherInheritedMethod)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9833d094d50021500e60b5735429cdb2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/UtilTest.java", "commitBeforeChange": "059424facf2daa3b3bdf94b9d6b6a2ca427f043f", "commitAfterChange": "4b5062599ea5f6d5d2aaa7c7068d9e4017337374", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 44, "signatureBeforeChange": " public void test42()", "signatureAfterChange": " public void test42()", "diff": ["-\t\tCharOperation.pathMatch(\"**/test/**\".toCharArray(), \"org/apache/test/CVS/Entries\".toCharArray(), true, '/'));", "+\t\tcheckPathMatch(\"**/test/**\".toCharArray(), \"org/apache/test/CVS/Entries\".toCharArray(), true));", "-\t\tCharOperation.pathMatch(\"**/test/**\".toCharArray(), \"test\".toCharArray(), true, '/'));", "+\t\tcheckPathMatch(\"**/test/**\".toCharArray(), \"test\".toCharArray(), true));", "-\t\tCharOperation.pathMatch(\"**/test/**\".toCharArray(), \"a/test\".toCharArray(), true, '/'));", "+\t\tcheckPathMatch(\"**/test/**\".toCharArray(), \"a/test\".toCharArray(), true));", "-\t\tCharOperation.pathMatch(\"**/test/**\".toCharArray(), \"test/a.java\".toCharArray(), true, '/'));", "+\t\tcheckPathMatch(\"**/test/**\".toCharArray(), \"test/a.java\".toCharArray(), true));", "-\t\t!CharOperation.pathMatch(\"**/test/**\".toCharArray(), \"org/apache/test.java\".toCharArray(), true, '/'));", "+\t\t!checkPathMatch(\"**/test/**\".toCharArray(), \"org/apache/test.java\".toCharArray(), true));"]}], "num": 72712}