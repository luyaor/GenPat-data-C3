{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2b0dfbe84429675f699e9f18bf1d4c6e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "321e2ab0a5663b1459f5688997b42537", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "aaa43eec904e27741de5c55121881f4c0383d53f", "commitAfterChange": "0ffd32ee08cd2dc832efa1134a050b16b350c66a", "methodNumberBeforeChange": 901, "methodNumberAfterChange": 901, "signatureBeforeChange": " public void _test0881()", "signatureAfterChange": " public void test0881()", "diff": ["-public void _test0881() {", "+public void test0881() {", "-\t\t\"Cannot cast from List<Object> to String\\n\" + ", "+\t\t\"Cannot cast from List<List<U>> to String\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\"\tString s = (String) Foo.foo();\\n\" + ", "+\t\t\"\t                        ^^^\\n\" + ", "+\t\t\"Bound mismatch: The generic method foo() of type Foo is not applicable for the arguments (). The inferred type List<List<U>> is not a valid substitute for the bounded parameter <U extends List<U>>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b9645642adc3a9227350abd455b17f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "875cc8d42787c90738d8dc077a25eb401e9e38f9", "commitAfterChange": "adfd584faf146517cb3e86f9f2b585f2851a3630", "methodNumberBeforeChange": 387, "methodNumberAfterChange": 387, "signatureBeforeChange": "\t \tpublic void _test385()", "signatureAfterChange": "  \tpublic void test385()", "diff": ["- */\t", "-\tpublic void _test385() { // 77496", "+\tpublic void test385() { // 77496", "-\t\t\t\"1. ERROR in X.java (at line 4)\\r\\n\" + ", "-\t\t\t\"\tpublic List<String> getList() { return null; }\\r\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tpublic List<String> getList() { return null; }\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tclass C extends B implements IDoubles {\\n\" + ", "+\t\t\t\"\t      ^\\n\" + ", "+\t\t\t\"The return type is incompatible with IDoubles.getList(), B.getList()\\n\" + ", "+\t\t\t/*", "+\t\t\tX.java:3: A is not abstract and does not override abstract method getList() in IDoubles", "+\t\t\tclass A implements IDoubles {", "+\t\t\t^", "+\t\t\tX.java:4: getList() in A cannot implement getList() in IDoubles; attempting to use incompatible return type", "+\t\t\tfound   : java.util.List<java.lang.String>", "+\t\t\trequired: java.util.List<java.lang.Double>", "+\t\t\t\tpublic List<String> getList() { return null; }", "+\t\t\t                            ^", "+\t\t\tX.java:9: C is not abstract and does not override abstract method getList() in IDoubles", "+\t\t\tclass C extends B implements IDoubles {", "+\t\t\t */\t"]}], "num": 65082}