{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eeea9eab7c1e378dc284534f407aef40", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d986c04285d7cd9861f911d33c54d277", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/BinaryIndexer.java", "commitBeforeChange": "8ef2e19ed4ad065a565f0c2b4b16065aa807e82f", "commitAfterChange": "dcb480eb89f55d2bede123ef7bb95483fcdff321", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprivate void extractReferenceFromConstantPool(byte[] contents, ClassFileReader reader) throws ClassFormatException", "signatureAfterChange": " \tprivate void extractReferenceFromConstantPool(byte[] contents, ClassFileReader reader) throws ClassFormatException", "diff": ["-\t\t\t\t\t// add a type reference ", "-\t\t\t\t\tname = replace('/', '.', extractClassReference(constantPoolOffsets, reader, i)); // so that it looks like java.lang.String", "+\t\t\t\t\t// add a type reference", "+\t\t\t\t\tname = extractClassReference(constantPoolOffsets, reader, i);", "+\t\t\t\t\tif (name.length > 0 && name[0] == '[')", "+\t\t\t\t\t\tbreak; // skip over array references", "+\t\t\t\t\tname = replace('/', '.', name); // so that it looks like java.lang.String"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee3f5c5a51aaa963471e9ee81551601f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 258, "methodNumberAfterChange": 261, "signatureBeforeChange": " public void recordPositionsFrom(int startPC, int sourcePos)", "signatureAfterChange": " public void recordPositionsFrom(int startPC, int sourcePos)", "diff": ["-\t\t\t\t\t} else {", "+\t\t\t\t\t} else if (insertionIndex < 1 || pcToSourceMap[insertionIndex - 1] != newLine) {", "-\t\t\t\t}", "-\t\t\t\tif (position != lastEntryPC) { // no bytecode since last entry pc", "+\t\t\t\t} else if (position != lastEntryPC) { // no bytecode since last entry pc"]}], "num": 22071}