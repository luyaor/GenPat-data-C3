{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "27db9bf72c35d3189b7866d103c24b5a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26828da33d167ba141fad409a423a3c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "0660a80b4f83507ec084149491c197acba246b67", "commitAfterChange": "593a2bfc58d2fd5243ade8b5af13c44714cac2ea", "methodNumberBeforeChange": 468, "methodNumberAfterChange": 468, "signatureBeforeChange": " \tpublic void test0463()", "signatureAfterChange": " \tpublic void test0463()", "diff": ["-\t\t\t\"2. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tSet[] sets = new Set[10];\\n\" + ", "+\t\t\t\"\t^^^\\n\" + ", "+\t\t\t\"Set is a raw type. References to generic type Set<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 6)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ac920bc41a2164979f64ff46b5a1956", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "01b4ca7b386e2151e72abd0b2f1c2ecda16f856e", "commitAfterChange": "a2a25daab3f792071cba7e3d51c3d2abf00c6c2a", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " public void test042()", "signatureAfterChange": " public void test042()", "diff": ["-\t\t\t\"2. ERROR in X.java (at line 14)\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\t\"\tG g1 = (F x) -> {\\n\" + ", "+\t\t\t\"\t        ^\\n\" + ", "+\t\t\t\"F cannot be resolved to a type\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 14)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "612255408fb6e25de208ab36007feb0d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "75fd26922e4c1a3951587500ef0d4c4aec9b93ba", "commitAfterChange": "ec933200149b0beb2aa7f1482e62f6a573c5bd61", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " public void test048()", "signatureAfterChange": " public void test048()", "diff": ["-        \"----------\\n\" +", "-\t\t\"1. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/Y.java (at line 4)\\n\" +", "-\t\t\"\tp.X x;\\n\" +", "-\t\t\"\t^^^\\n\" +", "-\t\t\"Discouraged access: The type X is not accessible due to restriction on classpath entry ---OUTPUT_DIR_PLACEHOLDER---\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"1 problem (1 warning)\",", "+        \"----------\\n\" + ", "+        \"1. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/Y.java (at line 2)\\n\" + ", "+        \"\t@SuppressWarnings(\\\"deprecation\\\")\\n\" + ", "+        \"\t                  ^^^^^^^^^^^^^\\n\" + ", "+        \"Unnecessary @SuppressWarnings(\\\"deprecation\\\")\\n\" + ", "+        \"----------\\n\" + ", "+        \"2. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/Y.java (at line 4)\\n\" + ", "+        \"\tp.X x;\\n\" + ", "+        \"\t^^^\\n\" + ", "+        \"Discouraged access: The type X is not accessible due to restriction on classpath entry ---OUTPUT_DIR_PLACEHOLDER---\\n\" + ", "+        \"----------\\n\" + ", "+        \"2 problems (2 warnings)\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8698e71b9ce0e141de9fc1b0d7fee45e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "2eab698c606e3b17217602bbc99837242c743a5a", "commitAfterChange": "6d141275326cf4caf65ec5dca68b565e2e9b1360", "methodNumberBeforeChange": 376, "methodNumberAfterChange": 376, "signatureBeforeChange": "  public void test1017()", "signatureAfterChange": "  public void test1017()", "diff": ["-\t\t\"1. ERROR in X.java (at line 8)\\n\" +", "+\t\t\"1. ERROR in X.java (at line 7)\\n\" +", "+\t\t\"\tif (x == null) {\\n\" +", "+\t\t\"\t    ^\\n\" +", "+\t\t\"Redundant null check: The variable x can only be null at this location\\n\" +", "+\t\t\"----------\\n\" +", "+\t\t\"2. ERROR in X.java (at line 8)\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fab96c2117391407f7dd6d2f1b08440", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "3dca78ae937ad139f018c4ddaaa87c3fe26600ed", "commitAfterChange": "10a59ab8fb6256e59e155c071a356402964eb736", "methodNumberBeforeChange": 182, "methodNumberAfterChange": 182, "signatureBeforeChange": " public void test402219b()", "signatureAfterChange": " public void test402219b()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 13)\\n\" + ", "-\t\t\t\"\tZork z;\\n\" + ", "-\t\t\t\"\t^^^^\\n\" + ", "-\t\t\t\"Zork cannot be resolved to a type\\n\" + ", "-\t\t\t\"----------\\n\");", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\t\t\"\tnew X().goo((p1, p2) -> p1 + p2);\\n\" + ", "+\t\t\t\t\"\t        ^^^\\n\" + ", "+\t\t\t\t\"The method goo(I) is ambiguous for the type X\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 13)\\n\" + ", "+\t\t\t\t\"\tZork z;\\n\" + ", "+\t\t\t\t\"\t^^^^\\n\" + ", "+\t\t\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a1a86b095c46fb6106893dd6b55c3a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_5.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": " public void test088()", "signatureAfterChange": " public void test088()", "diff": ["-\t\t\"4. WARNING in p\\\\X.java (at line 39)\\n\" + ", "+\t\t\"4. WARNING in p\\\\X.java (at line 31)\\n\" + ", "+\t\t\"\tClass c = b.getClass();\\n\" + ", "+\t\t\"\t^^^^^\\n\" + ", "+\t\t\"Type safety: Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. WARNING in p\\\\X.java (at line 39)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f86ce0259a03115d15f574465c6a8ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "199c84f2cae998bf19dec5ba0cb5f860d990b3fa", "commitAfterChange": "f38491fd234d2a2b50ab4a08bb29f67687e71ddc", "methodNumberBeforeChange": 233, "methodNumberAfterChange": 233, "signatureBeforeChange": " \tpublic void test0225()", "signatureAfterChange": " \tpublic void test0225()", "diff": ["-\t\t\t\"2. WARNING in X.java (at line 19)\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 13)\\n\" + ", "+\t\t\t\"\t} catch (T t) {\\n\" + ", "+\t\t\t\"\t           ^\\n\" + ", "+\t\t\t\"The parameter t is hiding another local variable defined in an enclosing type scope\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 19)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3545e026fe0ca1ed60e103ff68dade6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 736, "methodNumberAfterChange": 736, "signatureBeforeChange": " public void test730()", "signatureAfterChange": " public void test730()", "diff": ["-\t\t\"2. WARNING in X.java (at line 14)\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\"\tprivate SuperInterface< ? extends SuperInterface> x = null;\\n\" + ", "+\t\t\"\t                                  ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: X.SuperInterface is a raw type. References to generic type X.SuperInterface<A> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. WARNING in X.java (at line 14)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a453670c2f7ce9a17140686a4bdf44f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericsRegressionTest_1_8.java", "commitBeforeChange": "3256aef43e2296affdbf86e21f8cafdaa866161a", "commitAfterChange": "f357f309273e0bfe8345ff708d18fa83c6a34931", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " public void testBug425493()", "signatureAfterChange": " public void testBug425493()", "diff": ["-\t\t\"2. ERROR in Test.java (at line 5)\\n\" + ", "+\t\t\"2. ERROR in Test.java (at line 3)\\n\" + ", "+\t\t\"\taddAttribute(java.util.Objects.requireNonNull(attribute, \\\"\\\"),\\n\" + ", "+\t\t\"\t             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type mismatch: cannot convert from Test.Attribute<capture#1-of ?> to Test.Attribute<T>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in Test.java (at line 5)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa217f029309391c8ed9d75953cf970d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "8afeb60d84d0d78caa38869e22c86e8ec44f1e1a", "commitAfterChange": "7448554fa33480f89acc6d99ed13a0f48d1aacc6", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": " \tpublic void test071()", "signatureAfterChange": "\t  \tpublic void test071()", "diff": ["-\t// check annotation type cannot override any supertype method", "-\t\t\t\"3. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tObject clone();\\n\" + ", "+\t\t\t\"\t       ^^^^^^^\\n\" + ", "+\t\t\t\"The annotation type I cannot override the method Object.clone()\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 7)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8543507e09c73155dc97dea8f07a3b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericsRegressionTest_1_8.java", "commitBeforeChange": "1a542c460a449efbae14d1057ba233825602248d", "commitAfterChange": "1ddc6abfe5d6cd8ad8c71d5100cfa53f4e84487a", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": " public void testBug427164()", "signatureAfterChange": " public void testBug427164()", "diff": ["-\t\t\"1. ERROR in NNLambda.java (at line 13)\\n\" + ", "+\t\t\"1. ERROR in NNLambda.java (at line 1)\\n\" + ", "+\t\t\"\tprintem((i) -> {\\n\" + ", "+\t\t\"\t^^^^^^^\\n\" + ", "+\t\t\"The method printem(FInter, INP) in the type NNLambda is not applicable for the arguments (FInter, String)\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in NNLambda.java (at line 13)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bea5da1d1d347d67d367219feb6ab033", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GrammarCoverageTests308.java", "commitBeforeChange": "b524a2e75280a0f2690531c4f00fea7a6004673b", "commitAfterChange": "7e90cfc843b0651b2df6811a5c412b5db3d07d3e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void test005() throws Exception", "signatureAfterChange": " \tpublic void test005() throws Exception", "diff": ["-\t\t\t\t\t\"@java.lang.annotation.Target (java.lang.annotation.ElementType.TYPE_USE)\\n\" +", "+\t\t\t\t\t\"@java.lang.annotation.Target (java.lang.annotation.ElementType.TYPE_PARAMETER)\\n\" +", "-\t\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\t\"\tint x(@Marker int ... p) { return 10; };\\n\" + ", "+\t\t\t\t\"\t      ^^^^^^^\\n\" + ", "+\t\t\t\t\"The annotation @Marker is disallowed for this location\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 3)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d405ed3ac141961f761feaf1b364f785", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GrammarCoverageTests308.java", "commitBeforeChange": "b524a2e75280a0f2690531c4f00fea7a6004673b", "commitAfterChange": "7e90cfc843b0651b2df6811a5c412b5db3d07d3e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void test004() throws Exception", "signatureAfterChange": " \tpublic void test004() throws Exception", "diff": ["-\t\t\t\t\t\"@java.lang.annotation.Target (java.lang.annotation.ElementType.TYPE_USE)\\n\" +", "+\t\t\t\t\t\"@java.lang.annotation.Target (java.lang.annotation.ElementType.TYPE_PARAMETER)\\n\" +", "-\t\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\t\"\tint x(@Marker int p) { return 10; };\\n\" + ", "+\t\t\t\t\"\t      ^^^^^^^\\n\" + ", "+\t\t\t\t\"The annotation @Marker is disallowed for this location\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 3)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d50c8a7b0a1c906347bf579948c65263", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "fdc0ea90e0bcaa4652c77c5db9dcb7e58b2dda67", "commitAfterChange": "ee44380e8d52a97dffe90bb61e33a1e5ccfb30e8", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 117, "signatureBeforeChange": " public void _test429387()", "signatureAfterChange": " public void test429387()", "diff": ["-public void _test429387() {", "+public void test429387() {", "-\t\t\"4. ERROR in X.java (at line 12)\\n\" + ", "+\t\t\"4. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\"\tBiFunction<Stream<T>, ToIntFunction<BT>, IntStream> func = (Stream<T> t, ToIntFunction<BT, IS> m) -> t.flatmmapToInt(m);\\n\" + ", "+\t\t\"\t                                                                                                                     ^\\n\" + ", "+\t\t\"m cannot be resolved to a variable\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. ERROR in X.java (at line 12)\\n\" + ", "-\t\t\"----------\\n\"", "-\t);", "+\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db137f72ac446e37ea184141c9fd3fbf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "3dca78ae937ad139f018c4ddaaa87c3fe26600ed", "commitAfterChange": "10a59ab8fb6256e59e155c071a356402964eb736", "methodNumberBeforeChange": 180, "methodNumberAfterChange": 180, "signatureBeforeChange": " public void test402219()", "signatureAfterChange": " public void test402219()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 13)\\n\" + ", "-\t\t\t\"\tZork z;\\n\" + ", "-\t\t\t\"\t^^^^\\n\" + ", "-\t\t\t\"Zork cannot be resolved to a type\\n\" + ", "-\t\t\t\"----------\\n\");", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\t\t\"\tnew X().goo((p1, p2) -> p1 = p1 + p2);\\n\" + ", "+\t\t\t\t\"\t        ^^^\\n\" + ", "+\t\t\t\t\"The method goo(I) is ambiguous for the type X\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 13)\\n\" + ", "+\t\t\t\t\"\tZork z;\\n\" + ", "+\t\t\t\t\"\t^^^^\\n\" + ", "+\t\t\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3487fd36618f468bd810225e7daa8d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "8c030d505f30b0cafedd9f4204a10256b97739b1", "commitAfterChange": "7ad108ea3de2b7d68d2737f4428379110b97b811", "methodNumberBeforeChange": 376, "methodNumberAfterChange": 376, "signatureBeforeChange": "  public void test1017()", "signatureAfterChange": "  public void test1017()", "diff": ["-\t\t\"1. ERROR in X.java (at line 8)\\n\" +", "+\t\t\"1. ERROR in X.java (at line 7)\\n\" +", "+\t\t\"\tif (x == null) {\\n\" +", "+\t\t\"\t    ^\\n\" +", "+\t\t\"Redundant null check: The variable x can only be null at this location\\n\" +", "+\t\t\"----------\\n\" +", "+\t\t\"2. ERROR in X.java (at line 8)\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f177a30ea0103f28ba96d5f31c48b438", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 281, "methodNumberAfterChange": 281, "signatureBeforeChange": " \tpublic void test277()", "signatureAfterChange": " \tpublic void test277()", "diff": ["-\t\t\t\"2. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tpublic void useList(List l) {\\n\" + ", "+\t\t\t\"\t                    ^^^^\\n\" + ", "+\t\t\t\"Type safety: List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 7)\\n\" + "]}], "num": 26769}