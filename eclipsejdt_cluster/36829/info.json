{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "31d783729d1a476add95ced6e65b8c5f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "705233a78cd29559e7c4dd3453566f41", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_4.java", "commitBeforeChange": "13991702fc2c3e2b678aa9ef22a4a03b29ad808b", "commitAfterChange": "3a8b2107b944f5a4646c23d5049199496436bc6e", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tpublic void testBug83127d()", "signatureAfterChange": " \tpublic void testBug83127d()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in Unrelated1.java (at line 1)\\n\" + ", "-\t\t\t\"\tpublic class Unrelated1<E extends Number> {\\n\" + ", "-\t\t\t\"\t                        ^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in Test.java (at line 2)\\n\" + ", "-\t\t\t\"\t* @see Unrelated1#add(E)\\n\" + ", "-\t\t\t\"\t                      ^\\n\" + ", "-\t\t\t\"Javadoc: E cannot be resolved to a type\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in Test.java (at line 3)\\n\" + ", "-\t\t\t\"\t* @see Unrelated1#Unrelated1(E)\\n\" + ", "-\t\t\t\"\t                             ^\\n\" + ", "-\t\t\t\"Javadoc: E cannot be resolved to a type\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. ERROR in Test.java (at line 8)\\n\" + ", "-\t\t\t\"\tpublic class Test<T>{\\n\" + ", "-\t\t\t\"\t                  ^\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. ERROR in Test.java (at line 15)\\n\" + ", "-\t\t\t\"\tclass Sub<E extends Number> extends Test<E> {\\n\" + ", "-\t\t\t\"\t          ^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"5. ERROR in Test.java (at line 15)\\n\" + ", "-\t\t\t\"\tclass Sub<E extends Number> extends Test<E> {\\n\" + ", "-\t\t\t\"\t                                         ^\\n\" + ", "-\t\t\t\"Syntax error, parameterized types are only available if source level is 1.5\\n\" + ", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in Unrelated1.java (at line 1)\\n\" +", "+\t\t\t\"\tpublic class Unrelated1<E extends Number> {\\n\" +", "+\t\t\t\"\t                        ^^^^^^^^^^^^^^^^\\n\" +", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"2. ERROR in Unrelated1.java (at line 2)\\n\" +", "+\t\t\t\"\tpublic Unrelated1(E e) {}\\n\" +", "+\t\t\t\"\t                  ^\\n\" +", "+\t\t\t\"E cannot be resolved to a type\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"3. ERROR in Unrelated1.java (at line 3)\\n\" +", "+\t\t\t\"\tpublic boolean add(E e) { return false; }\\n\" +", "+\t\t\t\"\t                   ^\\n\" +", "+\t\t\t\"E cannot be resolved to a type\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in Test.java (at line 2)\\n\" +", "+\t\t\t\"\t* @see Unrelated1#add(E)\\n\" +", "+\t\t\t\"\t                      ^\\n\" +", "+\t\t\t\"Javadoc: E cannot be resolved to a type\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"2. ERROR in Test.java (at line 3)\\n\" +", "+\t\t\t\"\t* @see Unrelated1#Unrelated1(E)\\n\" +", "+\t\t\t\"\t                             ^\\n\" +", "+\t\t\t\"Javadoc: E cannot be resolved to a type\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"3. ERROR in Test.java (at line 8)\\n\" +", "+\t\t\t\"\tpublic class Test<T>{\\n\" +", "+\t\t\t\"\t                  ^\\n\" +", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"4. ERROR in Test.java (at line 9)\\n\" +", "+\t\t\t\"\tTest(T t) {}\\n\" +", "+\t\t\t\"\t     ^\\n\" +", "+\t\t\t\"T cannot be resolved to a type\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"5. ERROR in Test.java (at line 10)\\n\" +", "+\t\t\t\"\tpublic boolean add(T t) {\\n\" +", "+\t\t\t\"\t                   ^\\n\" +", "+\t\t\t\"T cannot be resolved to a type\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"6. ERROR in Test.java (at line 15)\\n\" +", "+\t\t\t\"\tclass Sub<E extends Number> extends Test<E> {\\n\" +", "+\t\t\t\"\t          ^^^^^^^^^^^^^^^^\\n\" +", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"7. ERROR in Test.java (at line 15)\\n\" +", "+\t\t\t\"\tclass Sub<E extends Number> extends Test<E> {\\n\" +", "+\t\t\t\"\t                                         ^\\n\" +", "+\t\t\t\"Syntax error, parameterized types are only available if source level is 1.5\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"8. ERROR in Test.java (at line 15)\\n\" +", "+\t\t\t\"\tclass Sub<E extends Number> extends Test<E> {\\n\" +", "+\t\t\t\"\t                                         ^\\n\" +", "+\t\t\t\"E cannot be resolved to a type\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"9. ERROR in Test.java (at line 16)\\n\" +", "+\t\t\t\"\tSub (E e) {super(null);}\\n\" +", "+\t\t\t\"\t     ^\\n\" +", "+\t\t\t\"E cannot be resolved to a type\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"10. ERROR in Test.java (at line 16)\\n\" +", "+\t\t\t\"\tSub (E e) {super(null);}\\n\" +", "+\t\t\t\"\t           ^^^^^^^^^^^^\\n\" +", "+\t\t\t\"The constructor Test(T) refers to the missing type T\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"11. ERROR in Test.java (at line 17)\\n\" +", "+\t\t\t\"\tpublic boolean add(E e) {\\n\" +", "+\t\t\t\"\t                   ^\\n\" +", "+\t\t\t\"E cannot be resolved to a type\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a61ebdf7c13fde07705c415637302023", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_3.java", "commitBeforeChange": "13991702fc2c3e2b678aa9ef22a4a03b29ad808b", "commitAfterChange": "3a8b2107b944f5a4646c23d5049199496436bc6e", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tpublic void testBug83127d()", "signatureAfterChange": " \tpublic void testBug83127d()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in Unrelated1.java (at line 1)\\n\" + ", "-\t\t\t\"\tpublic class Unrelated1<E extends Number> {\\n\" + ", "-\t\t\t\"\t                        ^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in Test.java (at line 2)\\n\" + ", "-\t\t\t\"\t* @see Unrelated1#add(E)\\n\" + ", "-\t\t\t\"\t                      ^\\n\" + ", "-\t\t\t\"Javadoc: E cannot be resolved to a type\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in Test.java (at line 3)\\n\" + ", "-\t\t\t\"\t* @see Unrelated1#Unrelated1(E)\\n\" + ", "-\t\t\t\"\t                             ^\\n\" + ", "-\t\t\t\"Javadoc: E cannot be resolved to a type\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. ERROR in Test.java (at line 8)\\n\" + ", "-\t\t\t\"\tpublic class Test<T>{\\n\" + ", "-\t\t\t\"\t                  ^\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. ERROR in Test.java (at line 15)\\n\" + ", "-\t\t\t\"\tclass Sub<E extends Number> extends Test<E> {\\n\" + ", "-\t\t\t\"\t          ^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"5. ERROR in Test.java (at line 15)\\n\" + ", "-\t\t\t\"\tclass Sub<E extends Number> extends Test<E> {\\n\" + ", "-\t\t\t\"\t                                         ^\\n\" + ", "-\t\t\t\"Syntax error, parameterized types are only available if source level is 1.5\\n\" + ", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in Unrelated1.java (at line 1)\\n\" +", "+\t\t\t\"\tpublic class Unrelated1<E extends Number> {\\n\" +", "+\t\t\t\"\t                        ^^^^^^^^^^^^^^^^\\n\" +", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"2. ERROR in Unrelated1.java (at line 2)\\n\" +", "+\t\t\t\"\tpublic Unrelated1(E e) {}\\n\" +", "+\t\t\t\"\t                  ^\\n\" +", "+\t\t\t\"E cannot be resolved to a type\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"3. ERROR in Unrelated1.java (at line 3)\\n\" +", "+\t\t\t\"\tpublic boolean add(E e) { return false; }\\n\" +", "+\t\t\t\"\t                   ^\\n\" +", "+\t\t\t\"E cannot be resolved to a type\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in Test.java (at line 2)\\n\" +", "+\t\t\t\"\t* @see Unrelated1#add(E)\\n\" +", "+\t\t\t\"\t                      ^\\n\" +", "+\t\t\t\"Javadoc: E cannot be resolved to a type\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"2. ERROR in Test.java (at line 3)\\n\" +", "+\t\t\t\"\t* @see Unrelated1#Unrelated1(E)\\n\" +", "+\t\t\t\"\t                             ^\\n\" +", "+\t\t\t\"Javadoc: E cannot be resolved to a type\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"3. ERROR in Test.java (at line 8)\\n\" +", "+\t\t\t\"\tpublic class Test<T>{\\n\" +", "+\t\t\t\"\t                  ^\\n\" +", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"4. ERROR in Test.java (at line 9)\\n\" +", "+\t\t\t\"\tTest(T t) {}\\n\" +", "+\t\t\t\"\t     ^\\n\" +", "+\t\t\t\"T cannot be resolved to a type\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"5. ERROR in Test.java (at line 10)\\n\" +", "+\t\t\t\"\tpublic boolean add(T t) {\\n\" +", "+\t\t\t\"\t                   ^\\n\" +", "+\t\t\t\"T cannot be resolved to a type\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"6. ERROR in Test.java (at line 15)\\n\" +", "+\t\t\t\"\tclass Sub<E extends Number> extends Test<E> {\\n\" +", "+\t\t\t\"\t          ^^^^^^^^^^^^^^^^\\n\" +", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"7. ERROR in Test.java (at line 15)\\n\" +", "+\t\t\t\"\tclass Sub<E extends Number> extends Test<E> {\\n\" +", "+\t\t\t\"\t                                         ^\\n\" +", "+\t\t\t\"Syntax error, parameterized types are only available if source level is 1.5\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"8. ERROR in Test.java (at line 15)\\n\" +", "+\t\t\t\"\tclass Sub<E extends Number> extends Test<E> {\\n\" +", "+\t\t\t\"\t                                         ^\\n\" +", "+\t\t\t\"E cannot be resolved to a type\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"9. ERROR in Test.java (at line 16)\\n\" +", "+\t\t\t\"\tSub (E e) {super(null);}\\n\" +", "+\t\t\t\"\t     ^\\n\" +", "+\t\t\t\"E cannot be resolved to a type\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"10. ERROR in Test.java (at line 16)\\n\" +", "+\t\t\t\"\tSub (E e) {super(null);}\\n\" +", "+\t\t\t\"\t           ^^^^^^^^^^^^\\n\" +", "+\t\t\t\"The constructor Test(T) refers to the missing type T\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"11. ERROR in Test.java (at line 17)\\n\" +", "+\t\t\t\"\tpublic boolean add(E e) {\\n\" +", "+\t\t\t\"\t                   ^\\n\" +", "+\t\t\t\"E cannot be resolved to a type\\n\" +"]}], "num": 36829}