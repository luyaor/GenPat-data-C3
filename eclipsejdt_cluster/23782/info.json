{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "60c8c365a937ba83c0b4bb0bc112c2d5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1976cfb1567fd6ed8be22ba80b631284", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "972c7f1c4d5a8249e6cf0bbf33078118344b368a", "commitAfterChange": "9dd546ec0d84bb4ff147ae28c2586a5ed0820cc6", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 30, "signatureBeforeChange": " public int getNextToken() throws InvalidInputException", "signatureAfterChange": "  public int getNextToken() throws InvalidInputException", "diff": ["+", "+\tint token;", "+\tif (this.nextToken != TokenNameNotAToken) {", "+\t\ttoken = this.nextToken;", "+\t\tthis.nextToken = TokenNameNotAToken;", "+\t} else {", "+\t\ttoken = getNextToken0();", "+\t}", "+\tif (this.scanningJava8Plus && this.shouldDisambiguate) {", "+\t\tif (token == TokenNameLPAREN) {", "+\t\t\tif(atLambdaParameterList()) {", "+\t\t\t\tthis.nextToken = token;", "+\t\t\t\treturn TokenNameBeginLambda;", "+\t\t\t}", "+\t\t} else if (token == TokenNameLESS) {", "+\t\t\tif (atReferenceExpression()) {", "+\t\t\t\tthis.nextToken = token;", "+\t\t\t\treturn TokenNameBeginTypeArguments;", "+\t\t\t}", "+\t\t}", "+\t}", "+\treturn token;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74f43e1b7769dd4549c1e20e6452a609", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionScanner.java", "commitBeforeChange": "5bd6b9d7331a9e7fe82d427994d62e0af1821389", "commitAfterChange": "a49b0379fae683770f815e7e32d76b4ebea892ec", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " public int getNextToken() throws InvalidInputException", "signatureAfterChange": " public int getNextToken() throws InvalidInputException", "diff": ["+\tint nextToken = this.getNextToken0();", "+\tif (this.record) {", "+\t\tswitch (nextToken) {", "+\t\t\tcase TokenNameIdentifier:", "+\t\t\t\tif (this.currentToken != TokenNameDOT) {", "+\t\t\t\t\tchar[] identifier = this.getCurrentIdentifierSource();", "+\t\t\t\t\tif (!Character.isUpperCase(identifier[0]) && ", "+\t\t\t\t\t\t\tCharOperation.prefixEquals(this.prefix, identifier, true)) {", "+\t\t\t\t\t\tthis.addPotentialName(identifier, this.startPosition);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase TokenNameLPAREN :", "+\t\t\tcase TokenNameLBRACE :", "+\t\t\t\tif (this.currentToken == TokenNameIdentifier) {", "+\t\t\t\t\tthis.removePotentialNamesAt(this.currentTokenStart);", "+\t\t\t\t\t", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t}", "+\t}", "+\tthis.currentToken = nextToken;", "+\tthis.currentTokenStart = this.startPosition;", "+\treturn nextToken;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf08a97752b73a44bf1d23ecb0ad257b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "c53e368d261f2341743baa1024157841e94f1882", "commitAfterChange": "c0fbf538c56e049473d6298631299cfef92195c1", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 30, "signatureBeforeChange": " public int getNextToken() throws InvalidInputException", "signatureAfterChange": "  public int getNextToken() throws InvalidInputException", "diff": ["+", "+\tint token;", "+\tif (this.nextToken != TokenNameNotAToken) {", "+\t\ttoken = this.nextToken;", "+\t\tthis.nextToken = TokenNameNotAToken;", "+\t} else {", "+\t\ttoken = getNextToken0();", "+\t}", "+\tif (this.scanningJava8Plus && this.shouldDisambiguate) {", "+\t\tif (token == TokenNameLPAREN) {", "+\t\t\tif(atLambdaParameterList()) {", "+\t\t\t\tthis.nextToken = token;", "+\t\t\t\treturn TokenNameBeginLambda;", "+\t\t\t}", "+\t\t} else if (token == TokenNameLESS) {", "+\t\t\tif (atReferenceExpression()) {", "+\t\t\t\tthis.nextToken = token;", "+\t\t\t\treturn TokenNameBeginTypeArguments;", "+\t\t\t}", "+\t\t}", "+\t}", "+\treturn token;", "+}"]}], "num": 23782}