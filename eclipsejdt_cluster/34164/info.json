{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7566bd14483372398754b90aaa9b3237", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "834df3936bb4bc77e92547b612b30ece", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaWorkspaceScope.java", "commitBeforeChange": "af60458069f14dd1b42612d075df4c51d6608d2d", "commitAfterChange": "22d76cb44cc4a2aa3afa5a732ef27b4f46c352c3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public IPath[] enclosingProjectsAndJars()", "signatureAfterChange": " public IPath[] enclosingProjectsAndJars()", "diff": ["-\t\tSet paths = new HashSet(projects.length * 2);", "+\t\t// use a linked set to preserve the order during search: see bug 348507", "+\t\tSet paths = new LinkedHashSet(projects.length * 2);", "+\t\t}", "+", "+\t\t// add the project source paths first in a separate loop above", "+\t\t// to ensure source files always get higher precedence during search.", "+\t\t// see bug 348507", "+", "+\t\tfor (int i = 0, length = projects.length; i < length; i++) {", "+\t\t\tJavaProject javaProject = (JavaProject) projects[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b315c62616c0f3e3beb2d65fc2fe1a10", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "55faaf3dfc47830873dee6e41f09fe7164caaea8", "commitAfterChange": "8165ce534efddbff7578af3af8689c03385c50b5", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tprotected boolean connectTypeVariables(TypeParameter[] typeParameters, boolean checkForErasedCandidateCollisions)", "signatureAfterChange": " \tprotected boolean connectTypeVariables(TypeParameter[] typeParameters, boolean checkForErasedCandidateCollisions)", "diff": ["-\t\tnextVariable: for (int i = 0, paramLength = typeParameters.length; i < paramLength; i++) {", "+\t\t// preinitializing each type variable", "+\t\tfor (int i = 0, paramLength = typeParameters.length; i < paramLength; i++) {", "-", "+\t\t}", "+\t\tnextVariable: for (int i = 0, paramLength = typeParameters.length; i < paramLength; i++) {", "+\t\t\tTypeParameter typeParameter = typeParameters[i];", "+\t\t\tTypeVariableBinding typeVariable = typeParameter.binding;"]}], "num": 34164}