{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "31d8e9bfd0506f7f430207a50e51830c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29d969fbefeb9e9294b124a30b28e76f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "b990e8e256f352022e2abad7a2d2f30c0852cd13", "commitAfterChange": "db95f6e7f64d46ca98735be27b19e379532b1f18", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic ReferenceBinding findMemberType(char[] typeName, ReferenceBinding enclosingType)", "signatureAfterChange": " \tpublic ReferenceBinding findMemberType(char[] typeName, ReferenceBinding enclosingType)", "diff": ["-\t\t\t\tif (currentType.isHierarchyBeingConnected())", "+\t\t\t\tReferenceBinding sourceType = currentType.isParameterizedType()", "+\t\t\t\t\t? ((ParameterizedTypeBinding) enclosingType).type", "+\t\t\t\t\t: currentType;", "+\t\t\t\tif (sourceType.isHierarchyBeingConnected())", "-\t\t\t\t((SourceTypeBinding) currentType).scope.connectTypeHierarchy();", "+\t\t\t\t((SourceTypeBinding) sourceType).scope.connectTypeHierarchy();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bb46b13c71c4898e3b19dd290637411", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "c0c378ef26bd8331cbc4eaed145d9bcfe4bd3ce5", "commitAfterChange": "07419ad64aa4c0dace87382c5b2c36e54491592b", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " \tfinal Binding getTypeOrPackage(char[] name, int mask)", "signatureAfterChange": " \tfinal Binding getTypeOrPackage(char[] name, int mask)", "diff": ["-\t\t\t\t\t\tif (sourceType.isHierarchyBeingConnected()) {", "-\t\t\t\t\t\t\t// type variables take precedence over the source type, ex. class X <X> extends X == class X <Y> extends Y ", "+\t\t\t\t\t\tif (scope == this && sourceType.isHierarchyBeingConnected()) {", "+\t\t\t\t\t\t\t// type variables take precedence over the source type, ex. class X <X> extends X == class X <Y> extends Y", "+\t\t\t\t\t\t\t// but not when we step out to the enclosing type"]}], "num": 71037}