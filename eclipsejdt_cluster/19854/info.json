{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "08d7102f34afbbeec91e282706b72445", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bd395be2849190967776a8a6d0a7074", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AmbiguousMethodTest.java", "commitBeforeChange": "c31c921d319cbf1346e5bfb26cf42ff15297484d", "commitAfterChange": "2becf6dcab514ae8708935b2b42eed94f2bad821", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void test010a()", "signatureAfterChange": " public void test010a()", "diff": ["-\t\t\"1. ERROR in X.java (at line 4)\\r\\n\" +", "-\t\t\"\tstatic <L1 extends Listener & ErrorListener> Object createParser(L1 l) { return null; }\\r\\n\" +", "-\t\t\"\t                                                    ^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Method createParser(L1) has the same erasure createParser(X.Listener) as another method in type X\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. ERROR in X.java (at line 5)\\r\\n\" +", "+\t\t\"1. ERROR in X.java (at line 5)\\r\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"3. ERROR in X.java (at line 8)\\r\\n\" +", "-\t\t\"\tcreateParser(new A());\\r\\n\" +", "-\t\t\"\t^^^^^^^^^^^^\\n\" +", "-\t\t\"The method createParser(A) is undefined for the type X\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af6e39cc2f4af249a4ffef49bfe6d20b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AmbiguousMethodTest.java", "commitBeforeChange": "484bb49f20ab3dfdc1bd0aad8e6eff3ac06b3aff", "commitAfterChange": "cfd501694f5288c5b2d25d4e0376aabc070087d8", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void test010a()", "signatureAfterChange": " public void test010a()", "diff": ["-\t\t\"1. ERROR in X.java (at line 5)\\r\\n\" +", "-\t\t\"\tstatic <L2 extends ErrorListener & Listener> Object createParser(L2 l) { return null; }\\r\\n\" +", "+\t\t\"1. ERROR in X.java (at line 4)\\n\" +", "+\t\t\"\tstatic <L1 extends Listener & ErrorListener> Object createParser(L1 l) { return null; }\\n\" +", "+\t\t\"\t                                                    ^^^^^^^^^^^^^^^^^^\\n\" +", "+\t\t\"Method createParser(L1) has the same erasure createParser(X.Listener) as another method in type X\\n\" +", "+\t\t\"----------\\n\" +", "+\t\t\"2. ERROR in X.java (at line 5)\\n\" +", "+\t\t\"\tstatic <L2 extends ErrorListener & Listener> Object createParser(L2 l) { return null; }\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2a9176623ba443ae5a3642736cb265e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AmbiguousMethodTest.java", "commitBeforeChange": "778e64a3c8e6903c625067607c9068d73d8cd5e5", "commitAfterChange": "e12812c02c749e710a55fe1f28fa9764f0ac6bd5", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void test010a()", "signatureAfterChange": " public void test010a()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 4)\\n\" +", "-\t\t\"\tstatic <L1 extends Listener & ErrorListener> Object createParser(L1 l) { return null; }\\n\" +", "-\t\t\"\t                                                    ^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Method createParser(L1) has the same erasure createParser(X.Listener) as another method in type X\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. ERROR in X.java (at line 5)\\n\" +", "-\t\t\"\tstatic <L2 extends ErrorListener & Listener> Object createParser(L2 l) { return null; }\\n\" +", "-\t\t\"\t                                                    ^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Method createParser(L2) has the same erasure createParser(X.ErrorListener) as another method in type X\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\"\tcreateParser(new A());\\n\" + ", "+\t\t\"\t^^^^^^^^^^^^\\n\" + ", "+\t\t\"The method createParser(A) is ambiguous for the type X\\n\" + ", "+// javac 7 randomly picks which ever method is second"]}], "num": 19854}