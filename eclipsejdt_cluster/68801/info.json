{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ffbd90d65fd2b1a88a0893021c895dc7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55965414c233fd609944eb7491681cdd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MultiTypeDeclarationPattern.java", "commitBeforeChange": "e85ef31dfa86374477953b5334cffc5119f2feae", "commitAfterChange": "8a1e311af393ccdbbaab4d3836c703deb332d624", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public MultiTypeDeclarationPattern( \tchar[][] qualifications, \tchar[][] simpleNames, \tchar typeSuffix, \tint matchRule)", "signatureAfterChange": "  public MultiTypeDeclarationPattern( \tchar[][] qualifications, \tchar[][] simpleNames, \tchar typeSuffix, \tint matchRule)", "diff": ["-\tif (simpleNames == null) {", "-\t\tthis.simpleNames = CharOperation.NO_CHAR_CHAR;", "-\t} else if ((isCaseSensitive() || isCamelCase()) ) {", "-\t\tthis.simpleNames = simpleNames;", "-\t} else {", "-\t\tint length = simpleNames.length;", "-\t\tthis.simpleNames = new char[length][];", "-\t\tfor (int i = 0; i < length; i++)", "-\t\t\tthis.simpleNames[i] = CharOperation.toLowerCase(simpleNames[i]);", "+\t// null simple names are allowed (should return all names)", "+\tif (simpleNames != null) {", "+\t\tif ((isCaseSensitive() || isCamelCase()) ) {", "+\t\t\tthis.simpleNames = simpleNames;", "+\t\t} else {", "+\t\t\tint length = simpleNames.length;", "+\t\t\tthis.simpleNames = new char[length][];", "+\t\t\tfor (int i = 0; i < length; i++)", "+\t\t\t\tthis.simpleNames[i] = CharOperation.toLowerCase(simpleNames[i]);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61e27d6ee36bff443c6926a2d0f002d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorPattern.java", "commitBeforeChange": "ad99e8346223888eb2f8e2613d918829f95fd2b2", "commitAfterChange": "7c65ba31905e387e2902b13fe71f33b55f069273", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public EntryResult[] queryIn(Index index) throws IOException", "signatureAfterChange": " public EntryResult[] queryIn(Index index) throws IOException", "diff": ["-\t\t\tif (this.parameterCount >= 0 && !this.varargs)", "-\t\t\t\tkey = createIndexKey(this.declaringSimpleName == null ? ONE_STAR : this.declaringSimpleName, this.parameterCount);", "-\t\t\telse if (this.declaringSimpleName != null && this.declaringSimpleName[this.declaringSimpleName.length - 1] != '*')", "+\t\t\tif (this.parameterCount >= 0 && !this.varargs) {", "+\t\t\t\tkey = CharOperation.concat(createIndexKey(this.declaringSimpleName == null ? ONE_STAR : this.declaringSimpleName, this.parameterCount), ONE_STAR);", "+\t\t\t} else if (this.declaringSimpleName != null && this.declaringSimpleName[this.declaringSimpleName.length - 1] != '*') {", "-\t\t\tkey = CharOperation.concat(key, ONE_STAR);", "+\t\t\t} else if (key != null){", "+\t\t\t\tkey = CharOperation.concat(key, ONE_STAR);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8587f5d081ceb6e2750c5251947f5bc4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "7ff0d09aa487a0631f946435eaa975868c23d1f5", "commitAfterChange": "39e213fa6f67cec1c2c3ab80a64ac8dcf4d5cf90", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " static char[] simpleName(char[] className)", "signatureAfterChange": " static String simpleName(char[] className)", "diff": ["-/* package */ static char[] simpleName(char[] className) {", "+/* package */ static String simpleName(char[] className) {", "-\tclassName = unqualifiedName(className);", "-\tint count = 0;", "-\tint lastPosition = className.length - 1;", "-\tfor (int i = lastPosition; i > -1; i--) {", "-\t\tif (className[i] == '$' && (i != lastPosition)) {", "-\t\t\tchar[] name = new char[count];", "-\t\t\tSystem.arraycopy(className, i + 1, name, 0, count);", "-\t\t\tif (Character.isDigit(name[0])) {", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t\treturn name;", "-\t\t}", "-\t\tcount++;", "-\t}", "-\treturn className;", "+\tString simpleName = new String(unqualifiedName(className));", "+\tint lastDollar = simpleName.lastIndexOf('$');", "+\tif (lastDollar != -1) ", "+\t\treturn Util.localTypeName(simpleName, lastDollar, simpleName.length());", "+\telse", "+\t\treturn simpleName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95c76220278f6a2dce705115b04790e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/State.java", "commitBeforeChange": "c4112ab397da10b85cbb2a3f081c4c91ed7c7975", "commitAfterChange": "2077df1da6fa132fd5beb7d042b102e760cf8cbf", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  static State read(IProject project, DataInputStream in) throws IOException", "signatureAfterChange": "  static State read(IProject project, DataInputStream in) throws IOException", "diff": ["+\tchar[][] internedRootNames = ReferenceCollection.internSimpleNames(readNames(in), false);", "-\t\t\t\tcollection = new AdditionalTypeCollection(additionalTypeNames, qualifiedNames, simpleNames);", "+\t\t\t\tchar[][] rootNames = new char[in.readInt()][];", "+\t\t\t\tfor (int j = 0, m = rootNames.length; j < m; j++)", "+\t\t\t\t\trootNames[j] = internedRootNames[in.readInt()];", "+\t\t\t\tcollection = new AdditionalTypeCollection(additionalTypeNames, qualifiedNames, simpleNames, rootNames);", "-\t\t\t\tcollection = new ReferenceCollection(qNames, sNames);", "+\t\t\t\tchar[][] rNames = new char[in.readInt()][];", "+\t\t\t\tfor (int j = 0, m = rNames.length; j < m; j++)", "+\t\t\t\t\trNames[j] = internedRootNames[in.readInt()];", "+\t\t\t\tcollection = new ReferenceCollection(qNames, sNames, rNames);"]}], "num": 68801}