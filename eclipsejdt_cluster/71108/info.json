{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9fe56e2dc530c6af73f26997a6ddadd0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12012685902284dc3ea65537556b9cb3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExpressionFormula.java", "commitBeforeChange": "6024db2244852bf1a14f4a11a2132399927fa015", "commitAfterChange": "8238d4886dd5cc2d15b3226c07195562e9c81134", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tstatic boolean inferPolyInvocationType(InferenceContext18 inferenceContext, InvocationSite invocationSite, TypeBinding targetType, MethodBinding method)  \t\t\t\tthrows InferenceFailureException", "signatureAfterChange": "  \tstatic boolean inferPolyInvocationType(InferenceContext18 inferenceContext, InvocationSite invocationSite, TypeBinding targetType, MethodBinding method)  \t\t\t\tthrows InferenceFailureException", "diff": ["-\t\t\t\t} else if (targetType.isBaseType()) {", "+\t\t\t\t} else if (targetType.isNormalBaseType()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "223ba0838f34ccb17ef8d9e64d423802", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ClassLiteralAccess.java", "commitBeforeChange": "06e4a5efa4ac79a81431ad2110bd08f2ba1b98a7", "commitAfterChange": "07f05fcff8d0859cd95213fdd9e90f32b4be6e10", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\t\t&& !sourceType.isBaseType()", "+\t\t\t\t&& !targetType.isBaseType()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68fd54fd3b1560b4145120c1146b17f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExpressionFormula.java", "commitBeforeChange": "d1facd69b9dc2127e7162415007081afa0f4348b", "commitAfterChange": "a31fc41a761266e1336ef1dbd295debe293f4d81", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tstatic boolean inferPolyInvocationType(InferenceContext18 inferenceContext, InvocationSite invocationSite, TypeBinding targetType, MethodBinding method)  \t\t\t\tthrows InferenceFailureException", "signatureAfterChange": "  \tstatic boolean inferPolyInvocationType(InferenceContext18 inferenceContext, InvocationSite invocationSite, TypeBinding targetType, MethodBinding method)  \t\t\t\tthrows InferenceFailureException", "diff": ["-\t\t\t\t} else if (targetType.isNormalBaseType()) {", "+\t\t\t\t} else if (targetType.isPrimitiveType()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d801f0ef01192ad8a17cdb90f58261b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "f04ece296fd310c7128763881e0de1dc641168a3", "commitAfterChange": "9a9af4e642a47932f3bfeeec13330339dcc48de3", "methodNumberBeforeChange": 210, "methodNumberAfterChange": 210, "signatureBeforeChange": "  \tprivate String returnConstantClassName(IConstantPoolEntry constantClass)", "signatureAfterChange": "  \tprivate String returnConstantClassName(IConstantPoolEntry constantClass)", "diff": ["-\t\t} else if ((mode & ClassFileBytesDisassembler.COMPACT) != 0) {", "+\t\t} else if (isCompact()) {"]}], "num": 71108}