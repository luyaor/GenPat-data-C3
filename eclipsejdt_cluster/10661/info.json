{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "00007c31950a3a2a3ff9da1994586742", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2b0b706680ab84ff77905eef9dce02e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "49c7e567a30e3d9cc1c4880ba35031661d2a5415", "commitAfterChange": "c9d2c7d4276b8b0f65a3b8bbfa4009e8632940f9", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 68, "signatureBeforeChange": "  \tprivate int printJavadocHtmlTag(FormatJavadocText text, FormatJavadocBlock block)", "signatureAfterChange": "  \tprivate int printJavadocHtmlTag(FormatJavadocText text, FormatJavadocBlock block)", "diff": ["-\t\tboolean textOnNewLine = (text == block.nodes[0] && ((block.isParamTag() && this.formatter.preferences.comment_insert_new_line_for_parameter) || !block.hasTextOnTagLine())) || text.linesBefore > 0;", "+\t\tboolean textOnNewLine = (text == block.nodes[0] && ((!block.isInlined() && block.isParamTag() && this.formatter.preferences.comment_insert_new_line_for_parameter) || !block.hasTextOnTagLine())) || text.linesBefore > 0;", "-//\t\t\t\t\t\tthis.column += buffer.length();", "-//\t\t\t\t\t\t\t\tbuffer.append(' ');", "-//\t\t\t\t\t\t\t\tthis.column++;", "-\t\t\t\t\tboolean needIndentation = buffer.length() == 0 && textOnNewLine;", "+\t\t\t\t\tboolean needIndentation = textOnNewLine;", "-//\t\t\t\t\t\tif (wasHtmlTag || idx==0 || (idx==max && ((text.htmlIndexes[max] & JAVADOC_TAGS_ID_MASK) == htmlTagID))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d19b43d7b327175acdb226d0f77b0404", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "917603919e9d38772fd63709feb3bbda7696f523", "commitAfterChange": "fca5fd453024a315e76f840acd34b846e15423bf", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 69, "signatureBeforeChange": "  \tprivate void printJavadocText(FormatJavadocText text, FormatJavadocBlock block)", "signatureAfterChange": "  \tprivate void printJavadocText(FormatJavadocText text, FormatJavadocBlock block)", "diff": ["-\t\tboolean textOnNewLine = text == block.nodes[0] && block.isParamTag() && (this.formatter.preferences.comment_insert_new_line_for_parameter || !block.hasTextOnTagLine());", "+\t\tboolean textOnNewLine = (text == block.nodes[0] && block.isParamTag() && (this.formatter.preferences.comment_insert_new_line_for_parameter || !block.hasTextOnTagLine())) || text.linesBefore > 0;", "-\t\tfor (int i=0, max=text.separatorsPtr; i<=max ; i++) {", "+\t\tfor (int idx=0, max=text.separatorsPtr; idx<=max ; idx++) {", "-\t\t\tint end = (int) (text.separators[i] >>> 32);", "+\t\t\tint end = (int) (text.separators[idx] >>> 32);", "-\t\t\tprintJavadocTextLine(buffer, nextStart, end, block, i==0 /*first text?*/, needIndentation, false /*not an html tag*/);", "+\t\t\tif (idx > 0) {", "+\t\t\t\tif (!needIndentation && (text.htmlIndexes[idx-1] & JAVADOC_TAGS_ID_MASK) == JAVADOC_SEPARATOR_TAGS_ID) {", "+\t\t\t\t\tneedIndentation = true;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tprintJavadocTextLine(buffer, nextStart, end, block, idx==0 /*first text?*/, needIndentation, false /*not an html tag*/);", "-\t\t\tnextStart = (int) text.separators[i];", "+\t\t\tnextStart = (int) text.separators[idx];"]}], "num": 10661}