{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "42c73cba7e8929a7d5a334b47c7b22b0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f3f04da4199f27ef918ea47e62ec85e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "7548eaaea6e1259875e63eaf19dcd9a6bb7fd118", "commitAfterChange": "3d5aa7d7eabaf3445aad76f168f1c9da2ba34591", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void add(IJavaElement element) throws JavaModelException", "signatureAfterChange": "  private boolean encloses(String scopePath, String path, int index)", "diff": ["-//\tadd(element, element.getJavaProject());", "-\tadd(element, null);", "-}", "+", "+private boolean encloses(String scopePath, String path, int index) {", "+\tif (this.pathWithSubFolders[index]) {", "+\t\tif (path.startsWith(scopePath)) {", "+\t\t\treturn true;", "+\t\t}", "+\t} else {", "+\t\t// if not looking at subfolders, this scope encloses the given path ", "+\t\t// if this path is a direct child of the scope's ressource", "+\t\t// or if this path is the scope's resource (see bug 13919 Declaration for package not found if scope is not project)", "+\t\tif (path.startsWith(scopePath) ", "+\t\t\t&& ((scopePath.length() == path.lastIndexOf('/'))", "+\t\t\t\t|| (scopePath.length() == path.length()))) {", "+\t\t\treturn true;", "+\t\t}", "+\t}", "+\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73fb46f22454e6fb89c7115577683c89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "b93b2e5ee810828af567a17ee40637de4d4f391c", "commitAfterChange": "55b49e203db8f67181c35e400b24e8c52469c754", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r private boolean encloses(IPath path)", "signatureAfterChange": "\r private boolean encloses(IPath path)", "diff": ["+\t\t\t// if not looking at subfolders, this scope encloses the given path \r", "+\t\t\t// if this path is a direct child of the scope's ressource\r", "+\t\t\t// or if this path is the scope's resource (see bug 13919 Declaration for package not found if scope is not project)\r", "-\t\t\t\t&& (scopePath.segmentCount() == path.segmentCount() - 1)) {\r", "+\t\t\t\t&& ((scopePath.segmentCount() == path.segmentCount() - 1)\r", "+\t\t\t\t\t|| (scopePath.segmentCount() == path.segmentCount()))) {\r"]}], "num": 55560}