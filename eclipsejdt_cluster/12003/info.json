{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f6041220dee776ca3717e2c6ee92f8cb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48901e8c88af571b25b683bb28115476", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorLocator.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public int match(Expression node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(Expression node, MatchingNodeSet nodeSet)", "diff": ["-\tif (this.pattern.parameterSimpleNames != null && (!this.pattern.varargs || ((node.bits & ASTNode.InsideJavadoc) != 0))) {", "-\t\tint length = this.pattern.parameterSimpleNames.length;", "-\t\tExpression[] args = allocation.arguments;", "-\t\tint argsLength = args == null ? 0 : args.length;", "-\t\tif (length != argsLength) return IMPOSSIBLE_MATCH;", "-\t}", "+\tif (!matchParametersCount(node, allocation.arguments)) return IMPOSSIBLE_MATCH;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bea3917e661e0b90323d27116ceacf95", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorLocator.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public int match(ASTNode node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(ASTNode node, MatchingNodeSet nodeSet)", "diff": ["-\tif (this.pattern.parameterSimpleNames != null && (!this.pattern.varargs || ((node.bits & ASTNode.InsideJavadoc) != 0))) {", "-\t\tint length = this.pattern.parameterSimpleNames.length;", "-\t\tExpression[] args = ((ExplicitConstructorCall) node).arguments;", "-\t\tint argsLength = args == null ? 0 : args.length;", "-\t\tif (length != argsLength) return IMPOSSIBLE_MATCH;", "-\t}", "+\tif (!matchParametersCount(node, ((ExplicitConstructorCall) node).arguments)) return IMPOSSIBLE_MATCH;"]}], "num": 12003}