{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dca7d5b628f4173f1559074c5c08da6b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "759e044d271a3359d038c9d56c7eae4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/InternalNamingConventions.java", "commitBeforeChange": "7aacb15554a9c6406d505856924e9f9ea2758365", "commitAfterChange": "9f851707e9bbb361d7fe12af2d5fcf659372084c", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic static void suggestVariableNames( \t\t\tint variableKind, \t\t\tint baseNameKind, \t\t\tchar[] baseName, \t\t\tIJavaProject javaProject, \t\t\tint dim, \t\t\tchar[] internalPrefix, \t\t\tchar[][] excluded, \t\t\tboolean evaluateDefault, \t\t\tINamingRequestor requestor)", "signatureAfterChange": "  \tpublic static void suggestVariableNames( \t\t\tint variableKind, \t\t\tint baseNameKind, \t\t\tchar[] baseName, \t\t\tIJavaProject javaProject, \t\t\tint dim, \t\t\tchar[] internalPrefix, \t\t\tchar[][] excluded, \t\t\tboolean evaluateDefault, \t\t\tINamingRequestor requestor)", "diff": ["-\t\t\t\ttempNames = computeNonBaseTypeNames(baseName, isConstantField);", "+\t\t\t\ttempNames = computeNonBaseTypeNames(baseName, isConstantField, false);", "-\t\t\ttempNames = new char[][]{baseName};", "+\t\t\ttempNames = computeNonBaseTypeNames(baseName, isConstantField, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c209b05614dc528a845fab4867588508", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "3614fb7a931da6f7d6b963e79da43a1a287be280", "commitAfterChange": "f35ac795e031f468ed2702736c7462517694be67", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static CompilationUnit convertCompilationUnit( \t\tint level, \t\torg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration compilationUnitDeclaration, \t\tchar[] source, \t\tMap options, \t\tboolean isResolved, \t\torg.eclipse.jdt.internal.core.CompilationUnit workingCopy, \t\tint reconcileFlags, \t\tIProgressMonitor monitor)", "signatureAfterChange": " \tpublic static CompilationUnit convertCompilationUnit( \t\tint level, \t\torg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration compilationUnitDeclaration, \t\tMap options, \t\tboolean isResolved, \t\torg.eclipse.jdt.internal.core.CompilationUnit workingCopy, \t\tint reconcileFlags, \t\tIProgressMonitor monitor)", "diff": ["-\t\tchar[] source,", "-\t\tCompilationUnit unit = converter.convert(compilationUnitDeclaration, source);", "+\t\tCompilationUnit unit = converter.convert(compilationUnitDeclaration, workingCopy.getContents());"]}], "num": 9164}