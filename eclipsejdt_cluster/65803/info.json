{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6428d424c85f7f5f1b36f4ee8c7d56d5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b76981a32d31e176652b65cafbc7416", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "c98abd1679793c741445024ae2ee115b37f6fe95", "commitAfterChange": "b2ee2f0e0ad1c5d61d4417df1a17fc01d93cc41f", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  \tpublic void formatStatements(BlockScope scope, final Statement[] statements)", "signatureAfterChange": "  \tpublic void formatStatements(BlockScope scope, final Statement[] statements)", "diff": ["-\t\t\t\tif (i < (statementsLength - 1)) {", "-\t\t\t\t\t/*", "-\t\t\t\t\t * We need to check that the next statement is a local declaration", "-\t\t\t\t\t */", "-\t\t\t\t\tif (statements[i + 1] instanceof EmptyStatement) {", "-\t\t\t\t\t\tthis.scribe.printTrailingCommentForEmptyStatement();", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tthis.scribe.printTrailingComment();", "-\t\t\t\t\t}", "-\t\t\t\t} else {", "-\t\t\t\t\tthis.scribe.printTrailingComment();", "-\t\t\t\t}\t\t", "+\t\t\t\tthis.scribe.printTrailingComment();", "-\t\t\t} else if (i < (statementsLength - 1)) {", "-\t\t\t\t/*", "-\t\t\t\t * We need to check that the next statement is a local declaration", "-\t\t\t\t */", "-\t\t\t\tif (statements[i + 1] instanceof EmptyStatement) {", "-\t\t\t\t\tthis.scribe.printTrailingCommentForEmptyStatement();", "-\t\t\t\t} else {", "-\t\t\t\t\tthis.scribe.printTrailingComment();", "-\t\t\t\t}", "+\t\t\tthis.scribe.printNewLine();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c96daa7609de2de3d63190b6cad2c984", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "c98abd1679793c741445024ae2ee115b37f6fe95", "commitAfterChange": "b2ee2f0e0ad1c5d61d4417df1a17fc01d93cc41f", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": " \tpublic boolean visit(SwitchStatement switchStatement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(SwitchStatement switchStatement, BlockScope scope)", "diff": ["-\t\tformatOpeningBrace(switch_brace, this.preferences.insert_space_before_switch_open_brace, true);", "+\t\tformatOpeningBrace(switch_brace, this.preferences.insert_space_before_switch_open_brace);", "+\t\tthis.scribe.printNewLine();", "-\t\t\t\t\tthis.scribe.printTrailingComment();", "-\t\t\t\t\tif (i < (statementsLength - 1)) {", "-\t\t\t\t\t\t/*", "-\t\t\t\t\t\t * We need to check that the next statement is a local declaration", "-\t\t\t\t\t\t */", "-\t\t\t\t\t\tif (statements[i + 1] instanceof EmptyStatement) {", "-\t\t\t\t\t\t\tthis.scribe.printTrailingCommentForEmptyStatement();", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tthis.scribe.printTrailingComment();", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tthis.scribe.printTrailingComment();", "-\t\t\t\t\t}\t\t\t\t\t", "+\t\t\t\t\tthis.scribe.printTrailingComment();", "-\t\t\t\t} else if (i < (statementsLength - 1)) {", "-\t\t\t\t\t/* ", "-\t\t\t\t\t * We need to check that the next statement is a local declaration", "-\t\t\t\t\t */", "-\t\t\t\t\tif (statements[i + 1] instanceof EmptyStatement) {", "-\t\t\t\t\t\tthis.scribe.printTrailingCommentForEmptyStatement();", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tthis.scribe.printTrailingComment();", "-\t\t\t\t\t}", "+\t\t\t\tthis.scribe.printNewLine();"]}], "num": 65803}