{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c9dee30fe8bde3b40c70c2a3b88058b3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a93518b098548827075fd2cc7a16962", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "489bd6f4fff60ffd577633f636fc992ac578a001", "commitAfterChange": "a9a6659f6e9383ba6c2ef999e9385837a38140d0", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  protected boolean findSourceFiles(IResourceDelta delta) throws CoreException", "signatureAfterChange": "  protected boolean findSourceFiles(IResourceDelta delta) throws CoreException", "diff": ["+\t\tif (this.makeOutputFolderConsistent && md.hasIndependentOutputFolder && !visited.contains(md.binaryFolder)) {", "+\t\t\t// even a project which acts as its own source folder can have an independent/nested output folder", "+\t\t\tvisited.add(md.binaryFolder);", "+\t\t\tIResourceDelta binaryDelta = delta.findMember(md.binaryFolder.getProjectRelativePath());", "+\t\t\tif (binaryDelta != null) {", "+\t\t\t\tint segmentCount = binaryDelta.getFullPath().segmentCount();", "+\t\t\t\tIResourceDelta[] children = binaryDelta.getAffectedChildren();", "+\t\t\t\tfor (int j = 0, m = children.length; j < m; j++)", "+\t\t\t\t\tif (!checkForClassFileChanges(children[j], md, segmentCount))", "+\t\t\t\t\t\treturn false;", "+\t\t\t}", "+\t\t}", "-\t\t\tif (this.makeOutputFolderConsistent && md.hasIndependentOutputFolder && !visited.contains(md.binaryFolder)) {", "-\t\t\t\tvisited.add(md.binaryFolder);", "-\t\t\t\tIResourceDelta binaryDelta = delta.findMember(md.binaryFolder.getProjectRelativePath());", "-\t\t\t\tif (binaryDelta != null) {", "-\t\t\t\t\tint segmentCount = binaryDelta.getFullPath().segmentCount();", "-\t\t\t\t\tIResourceDelta[] children = binaryDelta.getAffectedChildren();", "-\t\t\t\t\tfor (int j = 0, m = children.length; j < m; j++)", "-\t\t\t\t\t\tif (!checkForClassFileChanges(children[j], md, segmentCount))", "-\t\t\t\t\t\t\treturn false;", "-\t\t\t\t}", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cba47cafbe35954c317386e21709bb2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/Label.java", "commitBeforeChange": "6fbfbbf1166c6937983f36f8f1fde989d8cc6db9", "commitAfterChange": "0c8ad3a5909a5d0c85d107049bd92d83518c3caf", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r public void place()", "signatureAfterChange": "\r public void place()", "diff": ["-\t\t\t\t\t\t\t\tif (local.initializationPCs[((local.initializationCount - 1) << 1)] == oldPosition) {\r", "-\t\t\t\t\t\t\t\t\tlocal.initializationPCs[((local.initializationCount - 1) << 1)] = position;\r", "-\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tif (local.initializationPCs[(local.initializationCount - 1) << 1] == oldPosition) {\r", "+\t\t\t\t\t\t\t\tlocal.initializationPCs[(local.initializationCount - 1) << 1] = position;\r", "+\t\t\t\t\t\t\t}\r"]}], "num": 15448}