{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6409fdd12cb5532cdd982cb13ff43f3e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d44f63009e6f763fe21ec8a7a5f43a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "a1786a43c2c86a8c78f8e49de58ef6c055a9299d", "commitAfterChange": "409121a5eb3d3ef99ff5c31121bd10011631e82f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprivate void checkAndSetModifiersForField(FieldBinding fieldBinding, FieldDeclaration fieldDecl)", "signatureAfterChange": " \tprivate void checkAndSetModifiersForField(FieldBinding fieldBinding, FieldDeclaration fieldDecl)", "diff": ["-\t\t\tfinal int IMPLICIT_MODIFIERS = ClassFileConstants.AccPublic | ClassFileConstants.AccStatic | ClassFileConstants.AccFinal | ClassFileConstants.AccEnum;", "+\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=267670. Force all enumerators to be marked", "+\t\t\t// as used locally. We are unable to track the usage of these reliably as they could be used", "+\t\t\t// in non obvious ways via the synthesized methods values() and valueOf(String) or by using ", "+\t\t\t// Enum.valueOf(Class<T>, String).", "+\t\t\tfinal int IMPLICIT_MODIFIERS = ClassFileConstants.AccPublic | ClassFileConstants.AccStatic | ClassFileConstants.AccFinal | ClassFileConstants.AccEnum | ExtraCompilerModifiers.AccLocallyUsed;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a93c76656fd5e89b27409d363ca1b97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SyntheticMethodBinding.java", "commitBeforeChange": "fd7de82f6da7ed292619b2fd7babad1ecc33c07d", "commitAfterChange": "9b07605b74dfd3ac5271b7960b546733093468c9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic SyntheticMethodBinding(MethodBinding overridenMethodToBridge, MethodBinding targetMethod, SourceTypeBinding declaringClass)", "signatureAfterChange": " \tpublic SyntheticMethodBinding(MethodBinding overridenMethodToBridge, MethodBinding targetMethod, SourceTypeBinding declaringClass)", "diff": ["-\t    this.modifiers = (overridenMethodToBridge.modifiers | ClassFileConstants.AccBridge | ClassFileConstants.AccSynthetic) & ~(ClassFileConstants.AccAbstract | ClassFileConstants.AccNative | ExtraCompilerModifiers.AccGenericSignature);", "+\t    // also use the modifiers from the target method, as opposed to inherited one (147690)", "+\t    this.modifiers = (targetMethod.modifiers | ClassFileConstants.AccBridge | ClassFileConstants.AccSynthetic) & ~(ClassFileConstants.AccAbstract | ClassFileConstants.AccNative | ExtraCompilerModifiers.AccGenericSignature);"]}], "num": 11806}