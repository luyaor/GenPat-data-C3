{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ac4bfc062a783b9ebc287dd9f80f445", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4fa6eec704d2d778a07527e94770c19", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ArrayBinding.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public ArrayBinding(TypeBinding type, int dimensions)", "signatureAfterChange": " \t public ArrayBinding(TypeBinding type, int dimensions, LookupEnvironment environment)", "diff": ["-public ArrayBinding(TypeBinding type, int dimensions) {", "+\t", "+public ArrayBinding(TypeBinding type, int dimensions, LookupEnvironment environment) {", "+\tthis.environment = environment;", "+\tif (type instanceof UnresolvedReferenceBinding)", "+\t\t((UnresolvedReferenceBinding) type).addWrapper(this);", "+\telse", "+    \tthis.tagBits |= type.tagBits & (HasTypeVariable | HasWildcard);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9cdcd8f00e7fa42032beee778dc8637", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBinding.java", "commitBeforeChange": "9cb34cb2974e62239b06b5ed3e6a721edfba3a21", "commitAfterChange": "8ea3733ceae7c22e4ddb546c96d5313b2b0833d4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t public TypeBinding(TypeBinding prototype)", "signatureAfterChange": " \t public TypeBinding(TypeBinding prototype)", "diff": ["-public TypeBinding(TypeBinding prototype) {  // faithfully copy all instance state - clone operation should specialize/override suitably.", "+public TypeBinding(TypeBinding prototype) {  // faithfully copy most instance state - clone operation should specialize/override suitably.", "-\tthis.tagBits = prototype.tagBits;", "+\tthis.tagBits = prototype.tagBits & ~TagBits.AnnotationNullMASK;"]}], "num": 10122}