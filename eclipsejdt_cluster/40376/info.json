{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "47e41091b63ab9dab0d738537fdba433", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a7662894c92cf29e53f1e08d553ccd1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "85fe43540d2fa2b41e90fbadb73dc3c8d856ecfb", "commitAfterChange": "e60ca02f81acc7600a43413bd7fb7c0779ae6a52", "methodNumberBeforeChange": 594, "methodNumberAfterChange": 594, "signatureBeforeChange": " \tpublic void test590()", "signatureAfterChange": " \tpublic void test590()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 9)\\n\" + ", "-\t\t\t\"\tClass<? super Number> superSup2 = ext.getSuperclass();\\n\" + ", "-\t\t\t\"\t                      ^^^^^^^^^\\n\" + ", "-\t\t\t\"Type mismatch: cannot convert from Class<capture-of ? super capture-of ? extends Number> to Class<? super Number>\\n\" + ", "-\t\t\t\"----------\\n\");", "+            \"----------\\n\" + ", "+    \t\t\"1. ERROR in X.java (at line 9)\\n\" + ", "+    \t\t\"\tClass<? super Number> superSup2 = ext.getSuperclass();\\n\" + ", "+    \t\t\"\t                                  ^^^^^^^^^^^^^^^^^^^\\n\" + ", "+    \t\t\"Type mismatch: cannot convert from Class<capture-of ? super capture-of ? extends Number> to Class<? super Number>\\n\" + ", "+    \t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd86fed0f0bb3fe106f460c1def4c3bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "070c89861c117098b82b25282c7c2d65a320aff5", "commitAfterChange": "b990e8e256f352022e2abad7a2d2f30c0852cd13", "methodNumberBeforeChange": 594, "methodNumberAfterChange": 594, "signatureBeforeChange": " \tpublic void test0589()", "signatureAfterChange": " \tpublic void test0589()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\t\"\ttarget.addAll(source);\\n\" + ", "-\t\t\t\"\t       ^^^^^^\\n\" + ", "-\t\t\t\"The method addAll(Collection<? extends capture-of ? extends Number>) in the type List<capture-of ? extends Number> is not applicable for the arguments (List<capture-of ? extends Number>)\\n\" + ", "-\t\t\t\"----------\\n\");", "+    \t\t\"----------\\n\" + ", "+    \t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "+    \t\t\"\ttarget.addAll(source);\\n\" + ", "+    \t\t\"\t       ^^^^^^\\n\" + ", "+    \t\t\"The method addAll(Collection<? extends capture#1-of ? extends Number>) in the type List<capture#1-of ? extends Number> is not applicable for the arguments (List<capture#2-of ? extends Number>)\\n\" + ", "+    \t\t\"----------\\n\");"]}], "num": 40376}