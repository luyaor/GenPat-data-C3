{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0ce6d97d172aadf6c620d973be535d4d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b927c4a884e529abd8af02a0a91eea3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "b5c8750a0ee496ea162f56c86aa0c17734837d78", "commitAfterChange": "4a527830b1c1be247e88d2c75fe787e73bc4e15a", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean recurseInContainers)", "signatureAfterChange": " \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean recurseInContainers)", "diff": ["-\t\t\t\t\t\tIClasspathContainer container = JavaCore.getClasspathContainer(path, project);", "+\t\t\t\t\t\tIClasspathContainer container = JavaModelManager.getJavaModelManager().getClasspathContainer(path, project);", "+\t\t\t\t\t\t} else if (container == JavaModelManager.CONTAINER_INITIALIZATION_IN_PROGRESS) {", "+\t\t\t\t\t\t\t// don't create a marker if initialization is in progress (case of cp initialization batching)", "+\t\t\t\t\t\t\treturn JavaModelStatus.VERIFIED_OK;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45402350225518b615ed54db5c21a329", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "456a9f3b7455cac6c32942b642d4acda1211f58c", "commitAfterChange": "0d304f8f25b2ffcd773dd2e7aa815f3d37ed4747", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic boolean compile(String[] argv)", "signatureAfterChange": " \tpublic boolean compile(String[] argv)", "diff": ["-\t\t\tthis.err.flush();", "+    \t\t\tthis.out.flush();", "+\t\t\t\tthis.err.flush();", "+\t\t\t\tif (this.log != null) {", "+\t\t\t\t\tthis.err.close();", "+\t\t\t\t}\t\t\t"]}], "num": 3152}