{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0431a051044820a7eb6f47490c9fefba", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0019f70d15cc46defd5e7816e313e198", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "f9a29367ea8f3c4c9489072b937e0b301d28ae36", "commitAfterChange": "a4f4cf398b9c048885f33786fe40b8704243b93a", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": " public void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\t\t\t\t\tSyntheticArgumentBinding syntheticEnclosingInstanceArgument = nestedEnclosing.getSyntheticArgument(nestedEnclosing.enclosingType(), true);", "+\t\t\t\t\tSyntheticArgumentBinding syntheticEnclosingInstanceArgument = nestedEnclosing.getSyntheticArgument(nestedEnclosing.enclosingType(), true, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01ff39691a8b0358a8f5b935d04e9174", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "0a2a15035b645ba08167c116bcd8da21a65ff803", "commitAfterChange": "d1d9c4b9d41b5dee6585f38ec44b96973779f261", "methodNumberBeforeChange": 125, "methodNumberAfterChange": 125, "signatureBeforeChange": " \tpublic boolean visit( \t\tSynchronizedStatement synchronizedStatement, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tSynchronizedStatement synchronizedStatement, \t\tBlockScope scope)", "diff": ["-\t\tformatLeftCurlyBrace(line, this.preferences.brace_position_for_block);", "+\t\tformatLeftCurlyBrace(line, this.preferences.brace_position_for_block, true /* print comment */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04174f987a35e82c0b5355e470495e6b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "ded354ea9af9c645b73bb24272f1a729a3f65c1d", "commitAfterChange": "44723e61ae3fc2a2afb5e1d791388b9fbcf829c1", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " protected void parseBodies(TypeDeclaration type, CompilationUnitDeclaration unit)", "signatureAfterChange": " protected void parseBodies(TypeDeclaration type, CompilationUnitDeclaration unit)", "diff": ["-\t\t\t\t\tthis.parse(constructorDeclaration, unit);", "+\t\t\t\t\tthis.parse(constructorDeclaration, unit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04bdb1dcd1d7d0ea5d1557d3bb7658cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionJavadocParser.java", "commitBeforeChange": "087e6de2afedbbee83d144644ff5d64d0e2d6ea4", "commitAfterChange": "f2d453b40b80a7b4342f872cb4a2ceb30cb26035", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tprivate char[][][] possibleTags(char[] prefix, boolean newLine)", "signatureAfterChange": " \tprivate char[][][] possibleTags(char[] prefix, boolean newLine)", "diff": ["-\t\t\t\tif (CharOperation.prefixEquals(prefix, possibleTags[k][i])) {", "+\t\t\t\tif (CharOperation.prefixEquals(prefix, possibleTags[k][i], false)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0526119740598629dde70c7415a6b3e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "7aa41fe639eb46a740b35e612973cada9ba8267f", "commitAfterChange": "7ec8f457fa5afa1822c5c5a2c51b29731a82c4ce", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \t\t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t\t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\ttype = scope.environment().convertToRawType(type);", "+\t\t\t\t\ttype = scope.environment().convertToRawType(type, false /*do not force conversion of enclosing types*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0527c3ff5eae2e2e933462dfab2a91ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "ee446c21d0aaa4f4c4b0513ad11960ed53ccba7d", "commitAfterChange": "271be052e104f1beefee4cd78039eca6ee6adb4f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void select( \t\tICompilationUnit sourceUnit, \t\tint selectionSourceStart, \t\tint selectionSourceEnd)", "signatureAfterChange": " \tpublic void select( \t\tICompilationUnit sourceUnit, \t\tint selectionSourceStart, \t\tint selectionSourceEnd)", "diff": ["-\t\t\treset();", "+\t\t\treset(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05dbcb1e3a3c702b3f0e0ecfb03fb0f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "5028738b115a56f3f04beb6089ff2c05854751f1", "commitAfterChange": "836ae67c2add920e65fb3c96c91d70ef75edbb79", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": " public void reconcile(boolean forceProblemDetection, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public void reconcile(boolean forceProblemDetection, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\treconcile(forceProblemDetection, null/*use primary owner*/, monitor);", "+\treconcile(false/*don't create AST*/, forceProblemDetection, null/*use primary owner*/, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0624d3714e397e5a9fec001b39dd8777", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "84e2da9db5b8e3d6a6df97b0f7ad6795dd65a9ad", "commitAfterChange": "6d9cea6072b91b492f8661608c9d01337562ebef", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tpublic static void checkProjectPropertyFileUpdate(\r \t\tIResourceDelta delta,\r \t\tIJavaElement parent)", "signatureAfterChange": "\r \tpublic static void checkProjectPropertyFileUpdate(\r \t\tIResourceDelta delta,\r \t\tIJavaElement parent)", "diff": ["-\t\t\t\t\t\t\t\t\tproject.saveClasspath();\r", "+\t\t\t\t\t\t\t\t\tproject.saveClasspath(false);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0625e03362a66d8b5a157b45a8f097e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "20607cc9da90bd1294c224d1eff6327bec9954ac", "commitAfterChange": "11dd8a99a088c0f8f708fce4ca2ab2a6381f554a", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": " public void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\t\t\t\t\tSyntheticArgumentBinding syntheticEnclosingInstanceArgument = nestedEnclosing.getSyntheticArgument(nestedEnclosing.enclosingType(), true);", "+\t\t\t\t\tSyntheticArgumentBinding syntheticEnclosingInstanceArgument = nestedEnclosing.getSyntheticArgument(nestedEnclosing.enclosingType(), true, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "073fa66ce9972965eb959e0f75f87a55", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "f673a1d9c7172b796dd31cfa78dd0dad32318c9f", "commitAfterChange": "bd2b202132c8d4bb0e104bd05827a1b9231c9dc5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void addGeneratedFileDependency(IFile parentFile, IFile generatedFile)", "signatureAfterChange": " \tpublic void addGeneratedFileDependency(IFile parentFile, IFile generatedFile)", "diff": ["-\t\taddBuiltFileToMaps(parentFile, generatedFile);", "+\t\taddBuiltFileToMaps(parentFile, generatedFile, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0746142fea2d484002697c5748885b14", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "d82bab5c3bc5a3dc0c32d13db0378bcec919d784", "commitAfterChange": "8d68c9962442e5181cbad94c9202c0f79b424840", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " public String toString()", "signatureAfterChange": " public String toString()", "diff": ["-\tbuffer.append(this.focusType == null ? \"<NONE>\" : ((JavaElement)this.focusType).toStringWithAncestors()); //$NON-NLS-1$", "+\tbuffer.append(this.focusType == null ? \"<NONE>\" : ((JavaElement)this.focusType).toStringWithAncestors(false/*don't show key*/)); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07560d6bbe7c2c6f0c1afb856edc3564", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "7aa41fe639eb46a740b35e612973cada9ba8267f", "commitAfterChange": "7ec8f457fa5afa1822c5c5a2c51b29731a82c4ce", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic ParameterizedGenericMethodBinding(MethodBinding originalMethod, RawTypeBinding rawType, LookupEnvironment environment)", "signatureAfterChange": " \tpublic ParameterizedGenericMethodBinding(MethodBinding originalMethod, RawTypeBinding rawType, LookupEnvironment environment)", "diff": ["-\t\t\trawArguments[i] =  environment.convertToRawType(originalVariables[i].erasure());", "+\t\t\trawArguments[i] =  environment.convertToRawType(originalVariables[i].erasure(), false /*do not force conversion of enclosing types*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "078d94c1deb3475c299f83d900a4fb47", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "df26c679ec361eae61785b6b440639645b574764", "commitAfterChange": "7e822612c4ed17c5f501a36859d0f7cd7f1c210d", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tprivate boolean createExternalArchiveDelta(HashSet refreshedElements, IProgressMonitor monitor)", "signatureAfterChange": " \tprivate boolean createExternalArchiveDelta(HashSet refreshedElements, IProgressMonitor monitor)", "diff": ["-\t\t\t\t\t\t\t\t\tthis.manager.indexManager.indexLibrary(entryPath, project.getProject(), ((ClasspathEntry)entries[j]).getLibraryIndexLocation());", "+\t\t\t\t\t\t\t\t\tthis.manager.indexManager.indexLibrary(entryPath, project.getProject(), ((ClasspathEntry)entries[j]).getLibraryIndexLocation(), true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08ced9a1d9cbc461e2557bffdbf5ffea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "277b33164a7aa6b44e8af80cbf75c89be37ef9e5", "commitAfterChange": "bca01eadc82a3abb71100149fcbedb07d33a04ad", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " public void testBug408230h() throws CoreException", "signatureAfterChange": " public void testBug408230h() throws CoreException", "diff": ["-\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\");", "+\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\", true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08d53f696e9d17ec60a9fe120bca899b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "1f4efb41a52f8c33e561047da4304f9fe9e90dc9", "commitAfterChange": "44b2c87051c4d9bbf37b4cf649be500c54102bf7", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tvoid encodeAccessRules(XMLWriter writer, boolean indent, boolean newLine)", "signatureAfterChange": " \t \tvoid encodeAccessRules(XMLWriter writer, boolean indent, boolean newLine)", "diff": ["-\t\twriter.endTag(TAG_ACCESS_RULES, indent);", "+\t\twriter.endTag(TAG_ACCESS_RULES, indent, true/*insert new line*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "091b404f7af2b6cbf282902ca4834825", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "702c62fec0923d7526ca23efea5c1bb4f5a2ef27", "commitAfterChange": "48a78bfcb529886e24e5f62b1bc56f7d3678e46a", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \t \tpublic boolean isCompatibleWith(TypeBinding targetType, final Scope skope)", "signatureAfterChange": " \t \tpublic boolean isCompatibleWith(TypeBinding targetType, final Scope skope)", "diff": ["-\t\t\tcopy = cachedResolvedCopy(targetType, argumentsTypeElided()); // if argument types are elided, we don't care for result expressions against *this* target, any valid target is OK.", "+\t\t\tcopy = cachedResolvedCopy(targetType, argumentsTypeElided(), false); // if argument types are elided, we don't care for result expressions against *this* target, any valid target is OK."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a33f86daf90d9baa300b489d2e2c009", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "a127c18eb2e0be7f3c68a60246b08a9a69e7be5d", "commitAfterChange": "771a62c1c5090742b5612a8958d0207ca0f557cc", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprivate AnnotationTypeDeclaration convertToAnnotationDeclaration(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDeclaration)", "signatureAfterChange": "  \tprivate AnnotationTypeDeclaration convertToAnnotationDeclaration(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDeclaration)", "diff": ["-\t\tbuildBodyDeclarations(typeDeclaration, typeDecl);", "+\t\tbuildBodyDeclarations(typeDeclaration, typeDecl, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d28369df166e5801e951435387c4159", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "9850e4ae951b6df5bc8bfe162d8a3e3e67beff62", "commitAfterChange": "e9ca95978aca2a442bfecfb8ac281f372092486a", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic void _astore(int pc, int index)", "signatureAfterChange": " \tpublic void _astore(int pc, int index)", "diff": ["-\t\t\tgetLocalVariableName(pc, index)", "+\t\t\tgetLocalVariableName(pc, index, true)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d38623cd71a6177efaa9229f2cb68fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetCompiler.java", "commitBeforeChange": "e7b1ea867718ceec3cf08d3cf2170026c991b041", "commitAfterChange": "ba0154713ba7d434aa2e47b80fd55a84048c10dc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic CodeSnippetCompiler( \t\tINameEnvironment environment, \t\tIErrorHandlingPolicy policy, \t\tMap settings, \t\tICompilerRequestor requestor, \t\tIProblemFactory problemFactory, \t\tEvaluationContext evaluationContext, \t\tint codeSnippetStart, \t\tint codeSnippetEnd)", "signatureAfterChange": " \tpublic CodeSnippetCompiler( \t\tINameEnvironment environment, \t\tIErrorHandlingPolicy policy, \t\tMap settings, \t\tICompilerRequestor requestor, \t\tIProblemFactory problemFactory, \t\tEvaluationContext evaluationContext, \t\tint codeSnippetStart, \t\tint codeSnippetEnd)", "diff": ["-\t\tsuper(environment, policy, settings, requestor, problemFactory);", "+\t\tsuper(environment, policy, settings, requestor, problemFactory, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dbd5dac91ae967931042bec3ed25baf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "3df203dd14216a5a05c7609bcd2dd61cc345cbe4", "commitAfterChange": "220df3e54541b1d486d18b098bb99954035d7238", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tpublic void resourceChanged(IResourceChangeEvent event)", "signatureAfterChange": " \tpublic void resourceChanged(IResourceChangeEvent event)", "diff": ["-\t\t\t\t\t        folderChanges[i].updateExternalFoldersIfNecessary(null);", "+\t\t\t\t\t        folderChanges[i].updateExternalFoldersIfNecessary(false/*do not refresh since we are not in the thread that added the external folder to the classpath*/, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ed84db3ed54cc3df830617187997af9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/FileSystem.java", "commitBeforeChange": "639f95fb93a85f023afe828b77bfc8cd4dbf811c", "commitAfterChange": "8a3cbdf1db434ade029724481c4ce0338046043a", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": " public NameEnvironmentAnswer findType(char[] typeName, char[][] packageName)", "signatureAfterChange": " public NameEnvironmentAnswer findType(char[] typeName, char[][] packageName)", "diff": ["-\t\t\ttypeName);", "+\t\t\ttypeName,", "+\t\t\tfalse);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ee472ef566b768348e38507dce0617f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTestsRequestor2.java", "commitBeforeChange": "2c86ed00820c78be99f0cceda1ffc7f485f46f9e", "commitAfterChange": "fcf34323849ee5aaf15434ece715a6b80e91cc94", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic CompletionTestsRequestor2(boolean showParamterNames)", "signatureAfterChange": " \tpublic CompletionTestsRequestor2(boolean showParamterNames)", "diff": ["-\t\tthis(showParamterNames, false);", "+\t\tthis(showParamterNames, false, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f2cd137ffebba0db1e7e0c0adbf901e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/PatternSearchJob.java", "commitBeforeChange": "8eff811a28d835d940585e1dd6e43b7e81d9c25c", "commitAfterChange": "ecd6b6b03e84e16fa2ef3316475695c9990930d4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic PatternSearchJob( \t\tSearchPattern pattern, \t\tIJavaSearchScope scope, \t\tint detailLevel, \t\tIIndexSearchRequestor requestor, \t\tIndexManager indexManager)", "signatureAfterChange": " \t \tpublic PatternSearchJob( \t\tSearchPattern pattern, \t\tIJavaSearchScope scope, \t\tint detailLevel, \t\tIIndexSearchRequestor requestor, \t\tIndexManager indexManager)", "diff": ["+\t\t\tfalse,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "104024103acffec26019b5bb930e0071", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "277b33164a7aa6b44e8af80cbf75c89be37ef9e5", "commitAfterChange": "bca01eadc82a3abb71100149fcbedb07d33a04ad", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " public void testBug408230m() throws CoreException", "signatureAfterChange": " public void testBug408230m() throws CoreException", "diff": ["-\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\");", "+\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\", true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "108b6f27cd0f8782baedfe6825bc2d56", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "a72edc01c485c4064e3d57e37fb2a83dee49bcbb", "commitAfterChange": "a38c3a952b9f1c16654f932630a90dbfe2266049", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tprotected void runNegativeTest( \t\tString[] testFiles,  \t\tString expectedProblemLog,  \t\tString[] classLib, \t\tboolean shouldFlushOutputDirectory,  \t\tMap customOptions,  \t\tboolean generateOutput, \t\tboolean showCategory, \t\tboolean showWarningToken)", "signatureAfterChange": " \tprotected void runNegativeTest( \t\tString[] testFiles,  \t\tString expectedProblemLog,  \t\tString[] classLib, \t\tboolean shouldFlushOutputDirectory,  \t\tMap customOptions,  \t\tboolean generateOutput, \t\tboolean showCategory, \t\tboolean showWarningToken)", "diff": ["-\t\t  false  /* do not skip javac for this peculiar test */);", "+\t\t  false  /* do not skip javac for this peculiar test */,", "+\t\t  false  /* do not perform statements recovery */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13d4e6b33ad097488697eaa7253c6563", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "074b3920fbbf6bc6abc175d15b77618012b39aae", "commitAfterChange": "4c2eb0154d00e6d430e37f1ab9bc6931c8defe10", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tprotected void assertElementEquals(String message, String expected, IJavaElement element)", "signatureAfterChange": " \tprotected void assertElementEquals(String message, String expected, IJavaElement element)", "diff": ["-\t\tString actual = element == null ? \"<null>\" : ((JavaElement) element).toStringWithAncestors();", "+\t\tString actual = element == null ? \"<null>\" : ((JavaElement) element).toStringWithAncestors(false/*don't show key*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13f57d826ffd4ea2e004fcd247524ae3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "628e9c4648e198faf112f84ab4f79974c542dba4", "commitAfterChange": "a5c3db41a58c8521d5f8f73e141ab57108cd47bc", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " \tpublic boolean visit(Block block, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(Block block, BlockScope scope)", "diff": ["-\t\t\tformatStatements(scope, statements);", "+\t\t\tformatStatements(scope, statements, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "140f277d87aeeedefab15121344614db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "949f7ff963982d916af4e2dc9ddc48e80c60a709", "commitAfterChange": "c03fbb9dc405940ef811d324736383994da52c1b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r private IBinaryType getBinaryTypeInfo(IFile file) throws JavaModelException", "signatureAfterChange": "\r private IBinaryType getBinaryTypeInfo(IFile file) throws JavaModelException", "diff": ["-\t\t\t\tinfo = ClassFileReader.read(zip, entryName);\r", "+\t\t\t\tinfo = ClassFileReader.read(zip, entryName, true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "148419949c656c7c00272b18bad528e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "cb586d1ec75e8da71f4da23a7a5eb911d6960b1c", "commitAfterChange": "543f951d6390669f9bed8c637d9d6aef509af249", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "signatureAfterChange": "  public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "diff": ["-\t\t\t\t\tenclosingTypeAt((this.bits & ASTNode.DepthMASK) >> ASTNode.DepthSHIFT)).addSyntheticMethod(codegenField, isReadAccess);", "+\t\t\t\t\tenclosingTypeAt((this.bits & ASTNode.DepthMASK) >> ASTNode.DepthSHIFT)).addSyntheticMethod(codegenField, isReadAccess, false /*not super access*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14e406d1116caf1de88ce6b0b6c0c871", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "569ea51c58561efd4d8aa7df4dbd08c4ce6f4fbf", "commitAfterChange": "af652d9d40e3e30a14ccbd2056144782592afc53", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tprivate TypeBinding resolveTypeForQualifiedAllocationExpression(BlockScope scope)", "signatureAfterChange": " \t \tprivate TypeBinding resolveTypeForQualifiedAllocationExpression(BlockScope scope)", "diff": ["-\t\t\t\t\tthis.binding = scope.findMethod(referenceReceiver, TypeConstants.INIT, pseudoArgs, this);", "+\t\t\t\t\tthis.binding = scope.findMethod(referenceReceiver, TypeConstants.INIT, pseudoArgs, this, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1516ccc8f00e12cb0afbcfd1513479f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.java", "commitBeforeChange": "1302cba8a2d9e7deb014096a0cf438c7f031d8f4", "commitAfterChange": "629f19b9848dc98d62568a3c9b1db94e81597d7a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void resolve(BlockScope scope)", "signatureAfterChange": " \t \tpublic void resolve(BlockScope scope)", "diff": ["-\t\tTypeBinding variableType = type.resolveType(scope);", "+\t\tTypeBinding variableType = type.resolveType(scope, true /* check bounds*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15709838faad7399d30c4bdf034b833f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "0123af92e87cd6973f84900ca6492fde5723608b", "commitAfterChange": "7c94615c7f1a34c1f25e73121dcbe10e789a0e6c", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": " \t  \tpublic void test0094() throws JavaModelException", "signatureAfterChange": " \t  \tpublic void test0094() throws JavaModelException", "diff": ["-\t\t\t\tworkingCopy);", "+\t\t\t\tworkingCopy,", "+\t\t\t\tfalse);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "162aad197f9f894fc01e1e402869e6dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/OutputFolderTests.java", "commitBeforeChange": "8e8e663712dd5d3efa5b3a52e06d79d66d0dbf06", "commitAfterChange": "eb5fe9a9319b819d64960c44d91e2995208510e4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void testInvalidOutput() throws JavaModelException", "signatureAfterChange": " \tpublic void testInvalidOutput() throws JavaModelException", "diff": ["-\t\tmanager.removePerProjectInfo(project);", "+\t\tmanager.removePerProjectInfo(project, true /* remove external jar files indexes and timestamps*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16d242f0215c17510009201f209c97b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTestsRequestor2.java", "commitBeforeChange": "b11449e69404728ca4b19e3cce8d08756ffe4f52", "commitAfterChange": "f6fa3be1145d6296c15fb372e60410ee5b7af8f2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic CompletionTestsRequestor2()", "signatureAfterChange": "  \tpublic CompletionTestsRequestor2()", "diff": ["-\t\tthis(false);", "+\t\tthis(false, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16fef16375a8331eadaaf97888628859", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "074b3920fbbf6bc6abc175d15b77618012b39aae", "commitAfterChange": "4c2eb0154d00e6d430e37f1ab9bc6931c8defe10", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tpublic Object toStringInfo(int tab, StringBuffer buffer)", "signatureAfterChange": " \tpublic Object toStringInfo(int tab, StringBuffer buffer)", "diff": ["-\t\tthis.toStringInfo(tab, buffer, info);", "+\t\tthis.toStringInfo(tab, buffer, info, true/*show resolved info*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17004fda9a3698eb2fe132c2a6f9037d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "2325884dde9438b06c0c79c1dfd33a091d106072", "commitAfterChange": "1826d0fe5b887e907f5db40f2da4d23b5ef1c8d6", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": " \t \tprivate void connectTypeHierarchyWithoutMembers()", "signatureAfterChange": " \t \tprivate void connectTypeHierarchyWithoutMembers()", "diff": ["-\t\tnoProblems &= connectTypeVariables(referenceContext.typeParameters);", "+\t\tnoProblems &= connectTypeVariables(referenceContext.typeParameters, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17186113a6c7e602993adb6f7e1b0aef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "917603919e9d38772fd63709feb3bbda7696f523", "commitAfterChange": "fca5fd453024a315e76f840acd34b846e15423bf", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": " \tpublic boolean visit(MarkerAnnotation annotation, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(MarkerAnnotation annotation, BlockScope scope)", "diff": ["-\t\tthis.scribe.printQualifiedReference(annotation.sourceEnd);", "+\t\tthis.scribe.printQualifiedReference(annotation.sourceEnd, false/*do not expect parenthesis*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "174e16b0e3a7b3b36750aa689c4a1fe2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "3efacb4c0e7ac2e42c4e43c21798bc7d222547ef", "commitAfterChange": "6ced618abda6388e93adbeddacd810115cd52b10", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 128, "signatureBeforeChange": " \tpublic void resolveClasspath(PerProjectInfo perProjectInfo, boolean usePreviousSession) throws JavaModelException", "signatureAfterChange": " \tpublic void resolveClasspath(PerProjectInfo perProjectInfo, boolean usePreviousSession) throws JavaModelException", "diff": ["-\t\t\tResolvedClasspath result = resolveClasspath(rawClasspath, usePreviousSession);", "+\t\t\tResolvedClasspath result = resolveClasspath(rawClasspath, usePreviousSession, true/*resolve chained libraries*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17c8bf5f4e16c458be4e1adc9d70fa20", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "0a2a15035b645ba08167c116bcd8da21a65ff803", "commitAfterChange": "d1d9c4b9d41b5dee6585f38ec44b96973779f261", "methodNumberBeforeChange": 129, "methodNumberAfterChange": 129, "signatureBeforeChange": " \tpublic boolean visit(TryStatement tryStatement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(TryStatement tryStatement, BlockScope scope)", "diff": ["-\t\t\t\tformatLeftCurlyBrace(line, this.preferences.brace_position_for_block);", "+\t\t\t\tformatLeftCurlyBrace(line, this.preferences.brace_position_for_block, true /* print comment */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19e58d61c43f401792f26df30504c389", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "d0f6b932bd2521f678bde4cdb96cb1190442e2f1", "commitAfterChange": "84bbf5d10f91b2c7f38d4b1250126f235793a08e", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": " \tpublic boolean visit(TypeDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(TypeDeclaration node)", "diff": ["-\t\t\tpos= rewriteOptionalTypeParameters(node, TypeDeclaration.TYPE_PARAMETERS_PROPERTY, pos, \"\", false); //$NON-NLS-1$", "+\t\t\tpos= rewriteOptionalTypeParameters(node, TypeDeclaration.TYPE_PARAMETERS_PROPERTY, pos, \"\", false, true); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a06a2dcd3981c11f0f544cb21bf56ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocAllocationExpression.java", "commitBeforeChange": "58aaea35ae4c64a4ecebe06d6b1ab1679e04698a", "commitAfterChange": "d5df66f62f879926d0ab37840f8644f7133a2a54", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": "  \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\tif (isMethodUseDeprecated(this.binding, scope)) {", "+\t\tif (isMethodUseDeprecated(this.binding, scope, true)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a8bf743b6d59127dbbe5578ed495345", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "277b33164a7aa6b44e8af80cbf75c89be37ef9e5", "commitAfterChange": "bca01eadc82a3abb71100149fcbedb07d33a04ad", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " public void testBug408230e() throws CoreException", "signatureAfterChange": " public void testBug408230e() throws CoreException", "diff": ["-\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\");", "+\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\", true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b5316c87c996b659a9ddd59de0269f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Wildcard.java", "commitBeforeChange": "1302cba8a2d9e7deb014096a0cf438c7f031d8f4", "commitAfterChange": "629f19b9848dc98d62568a3c9b1db94e81597d7a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding genericType, int rank)", "signatureAfterChange": " \t \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding genericType, int rank)", "diff": ["-\t       \t\t: this.bound.resolveType((BlockScope)scope);", "+\t       \t\t: this.bound.resolveType((BlockScope)scope, true /* check bounds*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c35f55e7b44b81e04eaccf4a48eacad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "569ea51c58561efd4d8aa7df4dbd08c4ce6f4fbf", "commitAfterChange": "af652d9d40e3e30a14ccbd2056144782592afc53", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tpublic MethodBinding getImplicitMethod(char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding getImplicitMethod(char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t\t\t\t\t\t\tmethodBinding = classScope.findMethod(receiverType, selector, argumentTypes, invocationSite);", "+\t\t\t\t\t\t\tmethodBinding = classScope.findMethod(receiverType, selector, argumentTypes, invocationSite, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c6ff318a4769d2dd78bddfe493d85f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "a8a55ef8028ddd96daf4473daaec157ec40ab668", "commitAfterChange": "2c2d8aa7ba193d80394867d2f6025d47f27b1f9e", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tpublic void test0437() throws JavaModelException", "signatureAfterChange": " \tpublic void test0437() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(sourceUnit, true);", "+\t\tASTNode result = runConversion(sourceUnit, true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c73e7836ff7403f7194ebad36aacd3b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "628cadf5744ab383e80afb2f9e63de19db722144", "commitAfterChange": "06412e4ebddd7aaa1f5bc2a2fbe06678982f22b4", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tif ((this.codegenBinding = this.binding = scope.getBinding(tokens, bits & RestrictiveFlagMASK, this)).isValidBinding()) {", "+\t\tif ((this.codegenBinding = this.binding = scope.getBinding(tokens, bits & RestrictiveFlagMASK, this, true /*resolve*/)).isValidBinding()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d084d3d33c24b6f0be8e5b712c149d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "8d3c2646ec0224ab936125ae7e1adde5786e1231", "commitAfterChange": "dfa40837336948a1f985e74dddef96333913f44c", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 44, "signatureBeforeChange": "  public AnnotationBinding getNonNullAnnotation()", "signatureAfterChange": "  public AnnotationBinding getNonNullAnnotation()", "diff": ["-\treturn this.nonNullAnnotation = this.typeSystem.getAnnotationType(nonNull);", "+\treturn this.nonNullAnnotation = this.typeSystem.getAnnotationType(nonNull, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d81e0f9bc873683a0f3bd0c0c6efcb0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "5ea0ae6c0d5a6162940bd458d3ead5d427058c35", "commitAfterChange": "2ad69f466c4df4c3e626fb0d9831c536de8ea5c0", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  protected BuildContext[] notifyParticipants(SourceFile[] unitsAboutToCompile)", "signatureAfterChange": "  protected BuildContext[] notifyParticipants(SourceFile[] unitsAboutToCompile)", "diff": ["-\t\t\t\tSourceFile sourceFile = findSourceFile(addedGeneratedFiles[j]);", "+\t\t\t\tSourceFile sourceFile = findSourceFile(addedGeneratedFiles[j], true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fa4fd91246e3c90da29c82d0da14cbb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "f8e06af2d64912de617f742baa744d8cff14ca39", "commitAfterChange": "799bcf90c7e5ed6ce45339b7f5c6f4ecccd1d29c", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \t \tpublic boolean isCompatibleWith(final TypeBinding left, final Scope someScope)", "signatureAfterChange": " \t \tpublic boolean isCompatibleWith(final TypeBinding left, final Scope someScope)", "diff": ["-\t\tfinal MethodBinding sam = left.getSingleAbstractMethod(this.enclosingScope);", "+\t\tfinal MethodBinding sam = left.getSingleAbstractMethod(this.enclosingScope, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20271f4a0841ac1fbec336ba5a1eb1c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BecomeWorkingCopyOperation.java", "commitBeforeChange": "13087273f518893bae9662fee0f01bf280448014", "commitAfterChange": "3dd2d61115a71847147cc1629ac7b4900ba8625e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["-\t\tworkingCopy.openWhenClosed(workingCopy.createElementInfo(), this.progressMonitor);", "+\t\tworkingCopy.openWhenClosed(workingCopy.createElementInfo(), true, this.progressMonitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2072a853ac5fc11c403328243bfa2e2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "f8e06af2d64912de617f742baa744d8cff14ca39", "commitAfterChange": "799bcf90c7e5ed6ce45339b7f5c6f4ecccd1d29c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tpublic boolean isPertinentToApplicability(TypeBinding targetType, MethodBinding candidateMethod)", "signatureAfterChange": " \t \tpublic boolean isPertinentToApplicability(TypeBinding targetType, MethodBinding candidateMethod)", "diff": ["-\t\tfinal MethodBinding sam = targetType.getSingleAbstractMethod(this.enclosingScope); // cached/cheap call.", "+\t\tfinal MethodBinding sam = targetType.getSingleAbstractMethod(this.enclosingScope, true); // cached/cheap call."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20dd4b94f0f283d0dbb20862155bbc4b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": " \tprotected IJavaProject createJavaProject( \t\t\tfinal String projectName, \t\t\tfinal String[] sourceFolders, \t\t\tfinal String[] libraries, \t\t\tfinal String[][] librariesInclusionPatterns, \t\t\tfinal String[][] librariesExclusionPatterns, \t\t\tfinal String[] projects, \t\t\tfinal String[][] projectsInclusionPatterns, \t\t\tfinal String[][] projectsExclusionPatterns, \t\t\tfinal boolean[] exportedProjects, \t\t\tfinal String projectOutput, \t\t\tfinal String[] sourceOutputs, \t\t\tfinal String[][] inclusionPatterns, \t\t\tfinal String[][] exclusionPatterns, \t\t\tfinal String compliance) throws CoreException", "signatureAfterChange": " \tprotected IJavaProject createJavaProject( \t\t\tfinal String projectName, \t\t\tfinal String[] sourceFolders, \t\t\tfinal String[] libraries, \t\t\tfinal String[][] librariesInclusionPatterns, \t\t\tfinal String[][] librariesExclusionPatterns, \t\t\tfinal String[] projects, \t\t\tfinal String[][] projectsInclusionPatterns, \t\t\tfinal String[][] projectsExclusionPatterns, \t\t\tfinal boolean[] exportedProjects, \t\t\tfinal String projectOutput, \t\t\tfinal String[] sourceOutputs, \t\t\tfinal String[][] inclusionPatterns, \t\t\tfinal String[][] exclusionPatterns, \t\t\tfinal String compliance) throws CoreException", "diff": ["-\t\t\tcompliance);", "+\t\t\tcompliance, ", "+\t\t\tfalse/*don't import*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "233fc47df9ad65562c0e7c9f5583f3d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "5028738b115a56f3f04beb6089ff2c05854751f1", "commitAfterChange": "836ae67c2add920e65fb3c96c91d70ef75edbb79", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": " public IMarker[] reconcile() throws JavaModelException", "signatureAfterChange": " public IMarker[] reconcile() throws JavaModelException", "diff": ["-\treconcile(false/*don't force problem detection*/, null/*use primary owner*/, null/*no progress monitor*/);", "+\treconcile(false/*don't create AST*/, false/*don't force problem detection*/, null/*use primary owner*/, null/*no progress monitor*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24d5dc9ba5922c8d6a9644501a20f313", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedQualifiedTypeReference.java", "commitBeforeChange": "1302cba8a2d9e7deb014096a0cf438c7f031d8f4", "commitAfterChange": "629f19b9848dc98d62568a3c9b1db94e81597d7a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\t \tpublic TypeBinding resolveType(ClassScope scope)", "signatureAfterChange": "\t \tpublic TypeBinding resolveType(ClassScope scope)", "diff": ["-\t    return internalResolveType(scope);", "+\t    return internalResolveType(scope, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2549b6039eb209e42c2a37d400bc3151", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "569ea51c58561efd4d8aa7df4dbd08c4ce6f4fbf", "commitAfterChange": "af652d9d40e3e30a14ccbd2056144782592afc53", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic MethodBinding findMethodForArray( \t\tArrayBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding findMethodForArray( \t\tArrayBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "diff": ["-\t\tmethodBinding = findMethod(object, selector, argumentTypes, invocationSite);", "+\t\tmethodBinding = findMethod(object, selector, argumentTypes, invocationSite, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "255dbc94ed3928447044bd86949034dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "a13ea647a4f4bc5437bbde0cf7788256ede6cc96", "commitAfterChange": "1ab17a7eba14d35875267cc7b416da000a14dc1e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic ITypeBinding getTypeDeclaration()", "signatureAfterChange": " \tpublic ITypeBinding getTypeDeclaration()", "diff": ["-\t\treturn this.resolver.getTypeBinding(this.binding.unannotated());", "+\t\treturn this.resolver.getTypeBinding(this.binding.unannotated(false));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "259499f2a2244b93ec35d9f0ff2de218", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForStatement.java", "commitBeforeChange": "f4bdb5d912579981f22fe9e7c4679e93b1a5f059", "commitAfterChange": "a3a09ad256da223aa1f3d2fe29b81e346d09a16c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\tif (!actionInfo.complainIfUnreachable(action, scope)) {", "+\t\t\tif (!actionInfo.complainIfUnreachable(action, scope, false)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "263fc3020ab5fe931274fdee3682838d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "277b33164a7aa6b44e8af80cbf75c89be37ef9e5", "commitAfterChange": "bca01eadc82a3abb71100149fcbedb07d33a04ad", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " public void testBug408230n() throws CoreException", "signatureAfterChange": " public void testBug408230n() throws CoreException", "diff": ["-\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\");", "+\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\", true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2713a03e6ae9b738db00f1d1d4b6312d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "58aaea35ae4c64a4ecebe06d6b1ab1679e04698a", "commitAfterChange": "d5df66f62f879926d0ab37840f8644f7133a2a54", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\tif (isMethodUseDeprecated(binding, scope)) {", "+\t\t\t\tif (isMethodUseDeprecated(binding, scope, true)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27a9304b1b3da5694e36d503de8219bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest.java", "commitBeforeChange": "cc44d533509199a22dee3cb03412b30282a18add", "commitAfterChange": "dee23bd4f5a65ed282a3f4a7e19b637fd72cfc3b", "methodNumberBeforeChange": 236, "methodNumberAfterChange": 236, "signatureBeforeChange": " \tpublic void test0234() throws JavaModelException", "signatureAfterChange": " \tpublic void test0234() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(sourceUnit, true);", "+\t\tASTNode result = runConversion(sourceUnit, true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "280214c81f527c0e712f12a70b50624f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedTypeReference.java", "commitBeforeChange": "7aa41fe639eb46a740b35e612973cada9ba8267f", "commitAfterChange": "7ec8f457fa5afa1822c5c5a2c51b29731a82c4ce", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprotected TypeBinding getTypeBinding(Scope scope)", "signatureAfterChange": " \tprotected TypeBinding getTypeBinding(Scope scope)", "diff": ["-\t\t\t\tqualifiedType = currentType.isGenericType() ? (ReferenceBinding)scope.environment().convertToRawType(currentType) : currentType;", "+\t\t\t\tqualifiedType = currentType.isGenericType() ? (ReferenceBinding)scope.environment().convertToRawType(currentType, false /*do not force conversion of enclosing types*/) : currentType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28e2b711f749c2c936148ff277a9c8a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ExplicitConstructorCall.java", "commitBeforeChange": "569ea51c58561efd4d8aa7df4dbd08c4ce6f4fbf", "commitAfterChange": "af652d9d40e3e30a14ccbd2056144782592afc53", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void resolve(BlockScope scope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope scope)", "diff": ["-\t\t\t\t\tthis.binding = scope.findMethod(receiverType, TypeConstants.INIT, pseudoArgs, this);", "+\t\t\t\t\tthis.binding = scope.findMethod(receiverType, TypeConstants.INIT, pseudoArgs, this, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "294bb45265977f7c222a63d6672e5817", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "349c3b5a850fbdbf23ec6c6153a095f70d61338c", "commitAfterChange": "00a3f3c32948c64188954cac2f1e0a1305db911b", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " \t \tvoid reportUncheckedConversions(BoundSet solution)", "signatureAfterChange": " \t \tvoid reportUncheckedConversions(BoundSet solution)", "diff": ["-\t\t\tSubstitution substitution = getResultSubstitution(solution);", "+\t\t\tSubstitution substitution = getResultSubstitution(solution, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "296968ab8846de4bfb3961dfcc8b53d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetParser.java", "commitBeforeChange": "141285694dc186f382cdc5e23d991883a93f9f68", "commitAfterChange": "bea430fec612168745d91278c4d6f4fccc5c2fd4", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " protected CompilationUnitDeclaration endParse(int act)", "signatureAfterChange": " protected CompilationUnitDeclaration endParse(int act)", "diff": ["-\t\t\t\tconsumeMethodDeclaration(true);", "+\t\t\t\tconsumeMethodDeclaration(true, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "298a077dc75c61f519be4932ce3f290f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldDeclaration.java", "commitBeforeChange": "b32bff89b335f9213e72a23b143872f67ac07452", "commitAfterChange": "25a9dba189bcefd34377713ece67fd65377cdf3c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public void resolve(MethodScope initializationScope)", "signatureAfterChange": "  public void resolve(MethodScope initializationScope)", "diff": ["-\t\t\t\tFieldBinding existingVariable = classScope.findField(declaringType.superclass, this.name, this,  false /*do not resolve hidden field*/);", "+\t\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=318171, find field skipping visibility checks", "+\t\t\t\t// we do the checks below ourselves, using the appropriate conditions for access check of", "+\t\t\t\t// protected members from superclasses.", "+\t\t\t\tFieldBinding existingVariable = classScope.findField(declaringType.superclass, this.name, this,  false /*do not resolve hidden field*/, true /* no visibility checks please */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a1387a36b2333936bd017886c5b9620", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "a8a55ef8028ddd96daf4473daaec157ec40ab668", "commitAfterChange": "2c2d8aa7ba193d80394867d2f6025d47f27b1f9e", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tpublic void test0438() throws JavaModelException", "signatureAfterChange": " \tpublic void test0438() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(sourceUnit, true);", "+\t\tASTNode result = runConversion(sourceUnit, true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2aafa9f2af4835148c69116558de67c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/DocumentElementParser.java", "commitBeforeChange": "e3ab7adcf5341254d66eeef47fc0727dbe42868f", "commitAfterChange": "8915ec2bb74e44419be85002d7c3a4c9f8582635", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 45, "signatureBeforeChange": " public void parseCompilationUnit(ICompilationUnit unit)", "signatureAfterChange": " public void parseCompilationUnit(ICompilationUnit unit)", "diff": ["-\t\tinitialize();", "+\t\tinitialize(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b11c84056ecc6914145caa1a7df9558", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "277b33164a7aa6b44e8af80cbf75c89be37ef9e5", "commitAfterChange": "bca01eadc82a3abb71100149fcbedb07d33a04ad", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " public void testBug408230c() throws CoreException", "signatureAfterChange": " public void testBug408230c() throws CoreException", "diff": ["-\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\");", "+\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\", true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b2392e6678c44e4a8d85b1afe6a01ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "0a2a15035b645ba08167c116bcd8da21a65ff803", "commitAfterChange": "d1d9c4b9d41b5dee6585f38ec44b96973779f261", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \tprivate void format(TypeDeclaration typeDeclaration)", "signatureAfterChange": "  \tprivate void format(TypeDeclaration typeDeclaration)", "diff": ["-\t\tformatLeftCurlyBrace(line, class_declaration_brace);", "+\t\tformatLeftCurlyBrace(line, class_declaration_brace, true /* print comment */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b544e64a485ec53d3790b2ee073ffce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "b7d91a4ace425a962b1ac3da0dae84d5a57e2dd8", "commitAfterChange": "44d7b9d76f15463c98336fd969fee6876229526a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "signatureAfterChange": "  \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "diff": ["-\t\t\t\t\t\t\tvalid = parseIdentifierTag();", "+\t\t\t\t\t\t\tvalid = parseIdentifierTag(false); // TODO (frederic) reconsider parameter value when @category will be significant in spec"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c4fc6d43e27c37cf2b2b1dd80366732", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "8cb541445a60df0cc8244f7bb091d1f12632b37f", "commitAfterChange": "7cb036f969007a8d8602358c2ef2fc801f7c2a88", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \t \tprotected void seekTypesInTopLevelType(String prefix, int firstDot, IType topLevelType, IJavaElementRequestor requestor, int acceptFlags)", "signatureAfterChange": " \t \tprotected void seekTypesInTopLevelType(String prefix, int firstDot, IType topLevelType, IJavaElementRequestor requestor, int acceptFlags)", "diff": ["-\t\t\tif (acceptType(topLevelType, acceptFlags))", "+\t\t\tif (acceptType(topLevelType, acceptFlags, true/*a source type*/))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c56923496d45b6a78e2f52ce4604af2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "9d71feb0c4dc07666b87c11c763ba1f67e99952a", "commitAfterChange": "de0a9fa3c1e69490ad1268e62e8c28d4b0e12f21", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \r protected IProject[] build(int kind, Map ignored, IProgressMonitor monitor) throws CoreException", "signatureAfterChange": "\r \r protected IProject[] build(int kind, Map ignored, IProgressMonitor monitor) throws CoreException", "diff": ["-\tIProject[] requiredProjects = getRequiredProjects();\r", "+\tIProject[] requiredProjects = getRequiredProjects(true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e69133393bce6a4dd5f58c50c88c090", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "4c05b51e282281d245149ac856aed4eb689aee0d", "commitAfterChange": "fcd8f6eb5a6e4ad47715a6f446da38772d56031c", "methodNumberBeforeChange": 123, "methodNumberAfterChange": 123, "signatureBeforeChange": " \tpublic void test0112() throws CoreException", "signatureAfterChange": " \tpublic void test0112() throws CoreException", "diff": ["-\t\t\tthis.workingCopy);", "+\t\t\tthis.workingCopy,", "+\t\t\tfalse);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f1e8d563c76050c3d3c59669e5702ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessingState.java", "commitBeforeChange": "f39e3e40a8fb480e71912552d3976827814676e5", "commitAfterChange": "cae1ac0076053182a150a9a6566741ab9c075217", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprivate HashMap[] getRootInfos(boolean usePreviousSession)", "signatureAfterChange": "  \tprivate HashMap[] getRootInfos(boolean usePreviousSession)", "diff": ["-\t\t\t\t\tproject.resolveClasspath(perProjectInfo, true/*use previous session values*/);", "+\t\t\t\t\tproject.resolveClasspath(perProjectInfo, true/*use previous session values*/, false/*don't add classpath change*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2faae96b9ddde272beacfe8ddbc50428", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "e3ab7adcf5341254d66eeef47fc0727dbe42868f", "commitAfterChange": "8915ec2bb74e44419be85002d7c3a4c9f8582635", "methodNumberBeforeChange": 374, "methodNumberAfterChange": 374, "signatureBeforeChange": "  public CompilationUnitDeclaration parse( \tICompilationUnit sourceUnit,  \tCompilationResult compilationResult, \tint start, \tint end)", "signatureAfterChange": "  public CompilationUnitDeclaration parse( \tICompilationUnit sourceUnit,  \tCompilationResult compilationResult, \tint start, \tint end)", "diff": ["-\t\tinitialize();", "+\t\tinitialize(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fd53807d89bb067655470c90aa065e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "f673a1d9c7172b796dd31cfa78dd0dad32318c9f", "commitAfterChange": "bd2b202132c8d4bb0e104bd05827a1b9231c9dc5", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic FileGenerationResult generateFileDuringBuild(List<IFile> parentFiles, String typeName, String contents, \t\t\tboolean clearDuringReconcile, IProgressMonitor progressMonitor) throws CoreException", "signatureAfterChange": " \tpublic FileGenerationResult generateFileDuringBuild(List<IFile> parentFiles, String typeName, String contents, \t\t\tboolean clearDuringReconcile, IProgressMonitor progressMonitor) throws CoreException", "diff": ["-\t\t\t\t\taddBuiltFileToMaps(parentFile, file);", "+\t\t\t\t\taddBuiltFileToMaps(parentFile, file, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "304ac173956c00cef60a3f263dc0c3ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "ddd808d168fb534eabceec59ee71a1ab6bb9aa2f", "commitAfterChange": "152c9f5bc26833df7f866102ab1cb2e2da100205", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " protected IType resolveType(char[] packageName, char[] typeName, int acceptFlags)", "signatureAfterChange": " protected IType resolveType(char[] packageName, char[] typeName, int acceptFlags)", "diff": ["-\t\t\ttype= this.nameLookup.findType(new String(typeName), pkgs[i], false, acceptFlags);", "+\t\t\ttype= this.nameLookup.findType(new String(typeName), pkgs[i], false, acceptFlags, true/*consider secondary types*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30d405537ee5e1c9d5f73bb3e3f259ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "e40a14518c878498ad39595017fa5c41fd3a84fd", "commitAfterChange": "0db36dd259a6320ea4c536f5dd076aa73d4d8836", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tprivate ICompilationUnit getCachedWorkingCopy( ICompilationUnit parentCompilationUnit, String typeName ) \t\tthrows CoreException", "signatureAfterChange": " \tprivate ICompilationUnit getCachedWorkingCopy( ICompilationUnit parentCompilationUnit, String typeName ) \t\tthrows CoreException", "diff": ["-\t\tIFile derivedFile = getIFileForTypeName( typeName, parentCompilationUnit.getJavaProject(), null /*progressMonitor*/ );", "+\t\tIFile derivedFile = getIFileForTypeName( typeName, parentCompilationUnit.getJavaProject(), false, null /*progressMonitor*/ );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31042f4ca03599891b68b3e24039bf8a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedSingleTypeReference.java", "commitBeforeChange": "1302cba8a2d9e7deb014096a0cf438c7f031d8f4", "commitAfterChange": "629f19b9848dc98d62568a3c9b1db94e81597d7a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\t  \tpublic TypeBinding resolveType(ClassScope scope)", "signatureAfterChange": "\t  \tpublic TypeBinding resolveType(ClassScope scope)", "diff": ["-\t    return internalResolveType(scope, null);", "+\t    return internalResolveType(scope, null, false /*no bounds check in classScope*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31f63978008d59a9d0ff5f536381d842", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "b308074bc5b31f3a5857e47f87565296fbba4a15", "commitAfterChange": "d36a5b020e7b8fc57d912810db0ffb9dd045eb9a", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprotected void handleInternalException( \t\tThrowable internalException, \t\tCompilationUnitDeclaration unit, \t\tCompilationResult result)", "signatureAfterChange": " \tprotected void handleInternalException( \t\tThrowable internalException, \t\tCompilationUnitDeclaration unit, \t\tCompilationResult result)", "diff": ["-\t\t\t\t\tunit);", "+\t\t\t\t\tunit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3222204345fcc42509ed6f45a1b01ca5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTestsRequestor.java", "commitBeforeChange": "c7acc8c3c53a2a553d77237c9dda5cf9d52f46e8", "commitAfterChange": "8ca1150fb7e309aea26ee7066805b8fa23096c4f", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  public String getResults()", "signatureAfterChange": "  public String getResults()", "diff": ["-\treturn getResults(true);", "+\treturn getResults(true, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3223a73660b80c6e77596205e3d601f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "b862c893c26e8ad45efc26cefb89d9ed8b8bc795", "commitAfterChange": "a41dabb1394f93c450316730395779f5d0c3b158", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " \t \tprivate void findKeywordsForMember(char[] token, int modifiers)", "signatureAfterChange": " \t \tprivate void findKeywordsForMember(char[] token, int modifiers)", "diff": ["-\t\tfindKeywords(token, keywords, false);", "+\t\tfindKeywords(token, keywords, false, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "326eb6beed05dedbb5839284f1880c00", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Argument.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic TypeBinding resolveForCatch(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveForCatch(BlockScope scope)", "diff": ["-\t\tresolveAnnotations(scope, this.annotations, this.binding);", "+\t\tresolveAnnotations(scope, this.annotations, this.binding, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32774d01488f17008aa076fb25eb9005", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ClassLiteralAccess.java", "commitBeforeChange": "1302cba8a2d9e7deb014096a0cf438c7f031d8f4", "commitAfterChange": "629f19b9848dc98d62568a3c9b1db94e81597d7a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tif ((targetType = type.resolveType(scope)) == null)", "+\t\tif ((targetType = type.resolveType(scope, true /* check bounds*/)) == null)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32d4ab16c7e4788162914f4b50c37dbb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryType.java", "commitBeforeChange": "13087273f518893bae9662fee0f01bf280448014", "commitAfterChange": "3dd2d61115a71847147cc1629ac7b4900ba8625e", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public Object getElementInfo(IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public Object getElementInfo(IProgressMonitor monitor) throws JavaModelException", "diff": ["-\treturn openWhenClosed(createElementInfo(), monitor);", "+\treturn openWhenClosed(createElementInfo(), false, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32dbd4cb198a3f9c2a1b3e7d7d82f6c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "7336215b569e42bf0d7946c272b0da8ff71d12fb", "commitAfterChange": "e29082e6108e43f171cfe9fae0a56914a1f2ec3e", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " \t \tprivate void completionOnKeyword(ASTNode astNode)", "signatureAfterChange": " \t \tprivate void completionOnKeyword(ASTNode astNode)", "diff": ["-\t\t\tfindKeywords(keyword.getToken(), keyword.getPossibleKeywords(), keyword.canCompleteEmptyToken(), false);", "+\t\t\tfindKeywords(keyword.getToken(), keyword.getPossibleKeywords(), keyword.canCompleteEmptyToken(), false, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3316f4dc5ef30efe296bb8b7d3c43e77", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/ThrownExceptionFinder.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic boolean visit(TryStatement tryStatement, BlockScope scope)", "signatureAfterChange": "  \tpublic boolean visit(TryStatement tryStatement, BlockScope scope)", "diff": ["-\t\tremoveCaughtExceptions(tryStatement);", "+\t\tremoveCaughtExceptions(tryStatement, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33241691899f606df4288a75a6faf5af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public BinaryTypeBinding cacheBinaryType(IBinaryType binaryType, boolean needFieldsAndMethods, AccessRestriction accessRestriction)", "signatureAfterChange": " public BinaryTypeBinding cacheBinaryType(IBinaryType binaryType, boolean needFieldsAndMethods, AccessRestriction accessRestriction)", "diff": ["-", "-\t\treturn createBinaryTypeFrom(binaryType, computePackageFrom(compoundName), needFieldsAndMethods, accessRestriction);", "+\t\treturn createBinaryTypeFrom(binaryType, computePackageFrom(compoundName, false /* valid pkg */), needFieldsAndMethods, accessRestriction);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3382a08b7326a4416efa6cbb6b36c670", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "9850e4ae951b6df5bc8bfe162d8a3e3e67beff62", "commitAfterChange": "e9ca95978aca2a442bfecfb8ac281f372092486a", "methodNumberBeforeChange": 169, "methodNumberAfterChange": 170, "signatureBeforeChange": " \tpublic void _lload(int pc, int index)", "signatureAfterChange": " \tpublic void _lload(int pc, int index)", "diff": ["-\t\t\tgetLocalVariableName(pc, index)", "+\t\t\tgetLocalVariableName(pc, index, true)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "338bb635fb1984468b31343ace3e0f75", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor2.java", "commitBeforeChange": "74d059b3fbdc00070c70bee76509a44ccad7fb4d", "commitAfterChange": "31d2b0bac7c9b032f1ad8765fd4577eaff8d79fd", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \tpublic boolean visit(AnnotationTypeDeclaration node)", "signatureAfterChange": "  \tpublic boolean visit(AnnotationTypeDeclaration node)", "diff": ["-\t\tformatTypeMembers(bodyDeclarations);", "+\t\tformatTypeMembers(bodyDeclarations, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33c071a92a5ab09e730b3c1b84a0ebf5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "cbfd067641796f6985a0e5364caf12dd4a6d8906", "commitAfterChange": "aeba2c4302e0eda57cf037e76e7dd42f94a39592", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void accept(ICompilationUnit sourceUnit)", "signatureAfterChange": " public void accept(ICompilationUnit sourceUnit)", "diff": ["-\t\tlookupEnvironment.completeTypeBindings(parsedUnit);", "+\t\tlookupEnvironment.completeTypeBindings(parsedUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "341ce57d0a1626be5aa7f9dd445caf5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "277b33164a7aa6b44e8af80cbf75c89be37ef9e5", "commitAfterChange": "bca01eadc82a3abb71100149fcbedb07d33a04ad", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " public void testBug408230g() throws CoreException", "signatureAfterChange": " public void testBug408230g() throws CoreException", "diff": ["-\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\");", "+\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\", true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "343c16739ad42fca8ce6c43d00ebf803", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "ee446c21d0aaa4f4c4b0513ad11960ed53ccba7d", "commitAfterChange": "271be052e104f1beefee4cd78039eca6ee6adb4f", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 130, "signatureBeforeChange": "  \tprotected void reset()", "signatureAfterChange": "  \tprotected void reset()", "diff": ["-\t\tsuper.reset();", "+\t\tsuper.reset(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "350c605995fff16cb179b9b471da454d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/AbstractASTTests.java", "commitBeforeChange": "a8a55ef8028ddd96daf4473daaec157ec40ab668", "commitAfterChange": "2c2d8aa7ba193d80394867d2f6025d47f27b1f9e", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tprotected ASTNode buildAST(String newContents, ICompilationUnit cu, boolean reportErrors) throws JavaModelException", "signatureAfterChange": " \tprotected ASTNode buildAST(String newContents, ICompilationUnit cu, boolean reportErrors) throws JavaModelException", "diff": ["-\t\treturn buildAST(newContents, cu, reportErrors, false/*no statement recovery*/);", "+\t\treturn buildAST(newContents, cu, reportErrors, false/*no statement recovery*/, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35112825c584e01ea8ebb3a47e438655", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 162, "methodNumberAfterChange": 162, "signatureBeforeChange": " public void testNoResourceChange04() throws CoreException", "signatureAfterChange": " public void testNoResourceChange04() throws CoreException", "diff": ["-\t\t\t\"\tsrc2[*]: {ADDED TO CLASSPATH}\"", "+\t\t\t\"\tsrc2[*]: {ADDED TO CLASSPATH}\",", "+\t\t\tfalse/*don't wait for resource delta*/"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "354599ceaaafdf8bfcf85f6f31a2a108", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetParser.java", "commitBeforeChange": "11ac720cf12c89391a32ed5e56750070174f7f3f", "commitAfterChange": "c35f48a470f9475e0b73c6c14c2a26ca2378ab58", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " protected boolean resumeOnSyntaxError()", "signatureAfterChange": " protected boolean resumeOnSyntaxError()", "diff": ["-\tgoForExpression();", "+\tgoForExpression(true /* record line separators */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "357ea4dbbe80d33cec60f461f1a7b390", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "4c05b51e282281d245149ac856aed4eb689aee0d", "commitAfterChange": "fcd8f6eb5a6e4ad47715a6f446da38772d56031c", "methodNumberBeforeChange": 124, "methodNumberAfterChange": 124, "signatureBeforeChange": " \tpublic void test0113() throws CoreException", "signatureAfterChange": " \tpublic void test0113() throws CoreException", "diff": ["-\t\t\tthis.workingCopy);", "+\t\t\tthis.workingCopy,", "+\t\t\tfalse);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35ad4db1db199910b45a2ca8f4602b7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocArgumentExpression.java", "commitBeforeChange": "7aa41fe639eb46a740b35e612973cada9ba8267f", "commitAfterChange": "7ec8f457fa5afa1822c5c5a2c51b29731a82c4ce", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\t\t\treturn this.resolvedType = scope.environment().convertToRawType(this.resolvedType);", "+\t\t\t\treturn this.resolvedType = scope.environment().convertToRawType(this.resolvedType,  true /*force the conversion of enclosing types*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37fb0f8ce6cb60ff5910a5389cc5d93e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "8ca87c5a032913e70d4537adbae6b35e391e0098", "commitAfterChange": "562a56d2522ead61508ddb21bd357b12e8996480", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void resolve(IGenericType suppliedType)", "signatureAfterChange": " public void resolve(IGenericType suppliedType)", "diff": ["-\t\t\tBinaryTypeBinding binaryTypeBinding = this.lookupEnvironment.cacheBinaryType((IBinaryType) suppliedType, null /*no access restriction*/);", "+\t\t\tBinaryTypeBinding binaryTypeBinding = this.lookupEnvironment.cacheBinaryType((IBinaryType) suppliedType, false/*don't need field and method (bug 125067)*/, null /*no access restriction*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37fb1553a47ebf2bdb95acb7621d53da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "1ccf66a95b26a0aeddc10724cf5b8ad317c21cf5", "commitAfterChange": "d31ea46df4824e2532a8beef91e753f25208cbae", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic static CompilationUnitDeclaration resolve( \t\tchar[] source, \t\tString unitName, \t\tIJavaProject javaProject, \t\tIAbstractSyntaxTreeVisitor visitor) \t\tthrows JavaModelException", "signatureAfterChange": "  \tpublic static CompilationUnitDeclaration resolve( \t\tchar[] source, \t\tString unitName, \t\tIJavaProject javaProject, \t\tIAbstractSyntaxTreeVisitor visitor) \t\tthrows JavaModelException", "diff": ["-\t\t\t\t\tnew BasicCompilationUnit(source, expectedPackageName, unitName, encoding));", "+\t\t\t\t\tnew BasicCompilationUnit(source, expectedPackageName, unitName, encoding),", "+\t\t\t\t\ttrue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ab1088a8fb8c50c7b57765be375147d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor2.java", "commitBeforeChange": "74d059b3fbdc00070c70bee76509a44ccad7fb4d", "commitAfterChange": "31d2b0bac7c9b032f1ad8765fd4577eaff8d79fd", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 92, "signatureBeforeChange": "  \tpublic boolean visit(WhileStatement node)", "signatureAfterChange": "  \tpublic boolean visit(WhileStatement node)", "diff": ["-\t\tformatAction(line, node.getBody());", "+\t\tformatAction(line, node.getBody(),false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3acbd4dcc3fb1e033647f5b63d0ef89c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "41dd795c862e06f6f8c0a69203da8ac4a4f0da5d", "commitAfterChange": "13a2bff8811ff586bab60fddd157d395e6533570", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "signatureAfterChange": " public FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "diff": ["-\t\t\t\t\tcurrentScope.problemReporter().cannotAssignToFinalField(fieldBinding, this);", "+\t\t\t\t\tcurrentScope.problemReporter().cannotAssignToFinalField(fieldBinding, this, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3adc4fc10abb069d3e429bdd7dac37a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "3efacb4c0e7ac2e42c4e43c21798bc7d222547ef", "commitAfterChange": "6ced618abda6388e93adbeddacd810115cd52b10", "methodNumberBeforeChange": 125, "methodNumberAfterChange": 125, "signatureBeforeChange": " \tpublic IClasspathEntry[] resolveClasspath(IClasspathEntry[] rawClasspath) throws JavaModelException", "signatureAfterChange": " \tpublic IClasspathEntry[] resolveClasspath(IClasspathEntry[] rawClasspath) throws JavaModelException", "diff": ["-\t\treturn resolveClasspath(rawClasspath, false/*don't use previous session*/).resolvedClasspath;", "+\t\treturn resolveClasspath(rawClasspath, false/*don't use previous session*/, true/*resolve chained libraries*/).resolvedClasspath;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ae7cda1e07b58aa87386f8efc318b0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "7aa41fe639eb46a740b35e612973cada9ba8267f", "commitAfterChange": "7ec8f457fa5afa1822c5c5a2c51b29731a82c4ce", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public ReferenceBinding convertToParameterizedType(ReferenceBinding originalType)", "signatureAfterChange": " public ReferenceBinding convertToParameterizedType(ReferenceBinding originalType)", "diff": ["-\t\t\t\t? (ReferenceBinding) convertToRawType(originalEnclosingType) ", "+\t\t\t\t? (ReferenceBinding) convertToRawType(originalEnclosingType, false /*do not force conversion of enclosing types*/) "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b3ce14229b087e69cb7797a3d216384", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "4c05b51e282281d245149ac856aed4eb689aee0d", "commitAfterChange": "fcd8f6eb5a6e4ad47715a6f446da38772d56031c", "methodNumberBeforeChange": 204, "methodNumberAfterChange": 204, "signatureBeforeChange": " \tpublic void test0190() throws CoreException, IOException", "signatureAfterChange": " \tpublic void test0190() throws CoreException, IOException", "diff": ["-    \t\t\tthis.workingCopy);", "+    \t\t\tthis.workingCopy,", "+    \t\t\tfalse);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3be8d7defbdcad8079a781c79a42f747", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatch.java", "commitBeforeChange": "372799d5bd955eabbf1069fe0bbf8aba8ea8af85", "commitAfterChange": "baf433f0226e8b9036b18a28d560e5a42cb8b949", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static APTResult runAPTDuringReconcile( \t\t\tfinal List<AnnotationProcessorFactory> factories, \t\t\tICompilationUnit compilationUnit, IJavaProject javaProj)", "signatureAfterChange": " \tpublic static APTResult runAPTDuringReconcile( \t\t\tfinal List<AnnotationProcessorFactory> factories, \t\t\tICompilationUnit compilationUnit, IJavaProject javaProj)", "diff": ["-\t\treturn runAPT( factories, javaProj, null, compilationUnit );", "+\t\treturn runAPT( factories, javaProj, null, compilationUnit, false /* does not matter*/ );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c481098a01ddf9813e472545068c3c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsBugsTest.java", "commitBeforeChange": "635645f64cc3986d85427716b6b1431b69a73db1", "commitAfterChange": "52bf936fc576c8beae0884d140c2c4a36e852ace", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void _testBug228652()", "signatureAfterChange": " public void _testBug228652()", "diff": ["-\tformatSource(input, expected, CodeFormatter.K_COMPILATION_UNIT | CodeFormatter.F_INCLUDE_COMMENTS, 0, false, 62, 19, null);", "+\tformatSource(input, expected, CodeFormatter.K_COMPILATION_UNIT | CodeFormatter.F_INCLUDE_COMMENTS, 0, false, 62, 19, null, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d7d10bec659edf70be98dbf85c83191", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExceptionFormula.java", "commitBeforeChange": "f8e06af2d64912de617f742baa744d8cff14ca39", "commitAfterChange": "799bcf90c7e5ed6ce45339b7f5c6f4ecccd1d29c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic Object reduce(InferenceContext18 inferenceContext)", "signatureAfterChange": " \t \tpublic Object reduce(InferenceContext18 inferenceContext)", "diff": ["-\t\t\tMethodBinding sam = this.right.getSingleAbstractMethod(scope);", "+\t\t\tMethodBinding sam = this.right.getSingleAbstractMethod(scope, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d91df1a829e4f764bdfd3b81beb7016", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocAllocationExpression.java", "commitBeforeChange": "1302cba8a2d9e7deb014096a0cf438c7f031d8f4", "commitAfterChange": "629f19b9848dc98d62568a3c9b1db94e81597d7a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\t\tthis.resolvedType = this.type.resolveType((BlockScope)scope);", "+\t\t\tthis.resolvedType = this.type.resolveType((BlockScope)scope, true /* check bounds*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3de55a396752657aab602f2e78d3c748", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/ReferenceCollection.java", "commitBeforeChange": "8264e11928da121957d70dadd3c6bf92a042c6d3", "commitAfterChange": "53c01b1adab482ab7f920989323f3cac2f399cfd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  protected ReferenceCollection(char[][][] qualifiedNameReferences, char[][] simpleNameReferences, char[][] rootReferences)", "signatureAfterChange": "  protected ReferenceCollection(char[][][] qualifiedNameReferences, char[][] simpleNameReferences, char[][] rootReferences)", "diff": ["-\tthis.qualifiedNameReferences = internQualifiedNames(qualifiedNameReferences);", "+\tthis.qualifiedNameReferences = internQualifiedNames(qualifiedNameReferences, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ef64a860e478d76a115ede9eefda22a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/NameEnvironmentWithProgress.java", "commitBeforeChange": "1798df591429fc6a5448f8a074f2d563846bcebb", "commitAfterChange": "e8a92b10517fc0e6b59559ac009096fb50176b96", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic NameEnvironmentWithProgress(Classpath[] paths, String[] initialFileNames, IProgressMonitor monitor)", "signatureAfterChange": " \t \tpublic NameEnvironmentWithProgress(Classpath[] paths, String[] initialFileNames, IProgressMonitor monitor)", "diff": ["-\t\tsuper(paths, initialFileNames);", "+\t\tsuper(paths, initialFileNames, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ff21a77283e26c25e0db251715cc9a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingComparator.java", "commitBeforeChange": "9357aeb22ce7f7b62f42472f1ba9defaa31953c5", "commitAfterChange": "2beca67c12b6708d00577783b2092953170491c0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tstatic boolean isEqual(Binding declaringElement, Binding declaringElement2)", "signatureAfterChange": " \tstatic boolean isEqual(Binding declaringElement, Binding declaringElement2)", "diff": ["-\t\t\t\t\t(org.eclipse.jdt.internal.compiler.lookup.TypeBinding) declaringElement2);", "+\t\t\t\t\t(org.eclipse.jdt.internal.compiler.lookup.TypeBinding) declaringElement2,", "+\t\t\t\t\tfalse);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ffa719720f51b6285a870aec36a4684", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceType.java", "commitBeforeChange": "33ff4c39221515c361c048ca8d82ab0842128f68", "commitAfterChange": "52c3e11bebfd77bae8ba05a3cddf1245a594b7b7", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "\r \r  public String[][] resolveType(String typeName) throws JavaModelException", "signatureAfterChange": "\r \r  public String[][] resolveType(String typeName) throws JavaModelException", "diff": ["-\tengine.selectType(info, typeName.toCharArray());\r", "+\tengine.selectType(info, typeName.toCharArray(), false);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "413f81dc9e05668f1c44fca7dbfb8f8f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetScope.java", "commitBeforeChange": "628cadf5744ab383e80afb2f9e63de19db722144", "commitAfterChange": "06412e4ebddd7aaa1f5bc2a2fbe06678982f22b4", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public Binding getBinding(char[][] compoundName, int mask, InvocationSite invocationSite, ReferenceBinding receiverType)", "signatureAfterChange": "  public Binding getBinding(char[][] compoundName, int mask, InvocationSite invocationSite, ReferenceBinding receiverType)", "diff": ["-\tBinding binding = getBinding(compoundName[0], mask | TYPE | PACKAGE, invocationSite);", "+\tBinding binding = getBinding(compoundName[0], mask | TYPE | PACKAGE, invocationSite, true /*resolve*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4177874bcb48a5ca2a50ce942914e566", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ExternalFoldersManager.java", "commitBeforeChange": "706d05b886f888f588421e058e652ee36abfc780", "commitAfterChange": "1e5960a8e1d6d5a1af8d629bddab71c46e5ed5a1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic IFolder createLinkFolder(IPath externalFolderPath, boolean refreshIfExistAlready, IProgressMonitor monitor) throws CoreException", "signatureAfterChange": "  \tpublic IFolder createLinkFolder(IPath externalFolderPath, boolean refreshIfExistAlready, IProgressMonitor monitor) throws CoreException", "diff": ["-\t\tIFolder result = addFolder(externalFolderPath, externalFoldersProject);", "+\t\tIFolder result = addFolder(externalFolderPath, externalFoldersProject, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41a61621df3fc08c839aa7329fff9fcf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "a127c18eb2e0be7f3c68a60246b08a9a69e7be5d", "commitAfterChange": "771a62c1c5090742b5612a8958d0207ca0f557cc", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 131, "signatureBeforeChange": " \tpublic void test0512() throws JavaModelException", "signatureAfterChange": " \tpublic void test0512() throws JavaModelException", "diff": ["-\t\tcheckSourceRange(declaration, \"public A();\", source);", "+\t\tcheckSourceRange(declaration, \"public A();\", source, true /*expectMalformed*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41d9a2690787f9b8cad1ffa34ffe9cab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/State.java", "commitBeforeChange": "8264e11928da121957d70dadd3c6bf92a042c6d3", "commitAfterChange": "53c01b1adab482ab7f920989323f3cac2f399cfd", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  static State read(IProject project, DataInputStream in) throws IOException", "signatureAfterChange": "  static State read(IProject project, DataInputStream in) throws IOException", "diff": ["-\tinternedQualifiedNames = ReferenceCollection.internQualifiedNames(internedQualifiedNames);", "+\tinternedQualifiedNames = ReferenceCollection.internQualifiedNames(internedQualifiedNames, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41f4fbe57e6ffc7844df26a76e7a5726", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "7aa41fe639eb46a740b35e612973cada9ba8267f", "commitAfterChange": "7ec8f457fa5afa1822c5c5a2c51b29731a82c4ce", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \t \tpublic void consumeParameterizedType(char[] simpleTypeName, boolean isRaw)", "signatureAfterChange": " \t \tpublic void consumeParameterizedType(char[] simpleTypeName, boolean isRaw)", "diff": ["-\t\t\tif (enclosing != null) enclosing = (ReferenceBinding) this.environment.convertToRawType(enclosing);", "+\t\t\tif (enclosing != null) enclosing = (ReferenceBinding) this.environment.convertToRawType(enclosing, false /*do not force conversion of enclosing types*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4483cfeb9e04e472b8bc67926a419060", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingTest.java", "commitBeforeChange": "988b834a35e1571af05adddd8db1ce5aaa1f0ff0", "commitAfterChange": "c90773ded969a955dbf869e7d3cd599898423a64", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprotected CompilationUnit createAST(ICompilationUnit cu)", "signatureAfterChange": "  \tprotected CompilationUnit createAST(ICompilationUnit cu)", "diff": ["-\t\treturn createAST(this.apiLevel, cu, false);", "+\t\treturn createAST(this.apiLevel, cu, false, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44f2b668f14734edbfadf466d15f6e82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "a8a55ef8028ddd96daf4473daaec157ec40ab668", "commitAfterChange": "2c2d8aa7ba193d80394867d2f6025d47f27b1f9e", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic void test0426() throws JavaModelException", "signatureAfterChange": " \tpublic void test0426() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(sourceUnit, true);", "+\t\tASTNode result = runConversion(sourceUnit, true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "459791709eb41de6b8b2562c7e1a5cb3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "569ea51c58561efd4d8aa7df4dbd08c4ce6f4fbf", "commitAfterChange": "af652d9d40e3e30a14ccbd2056144782592afc53", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\t\t: scope.findMethod((ReferenceBinding) this.actualReceiverType, this.selector, pseudoArgs, this);", "+\t\t\t\t\t\t: scope.findMethod((ReferenceBinding) this.actualReceiverType, this.selector, pseudoArgs, this, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45f200524f546e11afb7b418dad7bfa2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorLocator.java", "commitBeforeChange": "78430308e7d45c151f6732314055fefd33935867", "commitAfterChange": "09172f867e942cb3ef446efb08f91a91e2817ecb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public int resolveLevel(AstNode node)", "signatureAfterChange": " public int resolveLevel(AstNode node)", "diff": ["-\t\treturn resolveLevel((ConstructorDeclaration) node);", "+\t\treturn resolveLevel((ConstructorDeclaration) node, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46e7e4bbef393f93a21f289c05243b96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SyntheticArgumentBinding.java", "commitBeforeChange": "f790750ec986a60ef92ab62210a60e7bfe7f2a9e", "commitAfterChange": "5acc9f38696ecf93bf41e3ef5e2738b55bfe04e9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r public SyntheticArgumentBinding(ReferenceBinding enclosingType)", "signatureAfterChange": "\r public SyntheticArgumentBinding(ReferenceBinding enclosingType)", "diff": ["-\t\tAccFinal);\r", "+\t\tAccFinal,\r", "+\t\ttrue);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47480f1514bdd320bd69ec99af21fa61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "074b3920fbbf6bc6abc175d15b77618012b39aae", "commitAfterChange": "4c2eb0154d00e6d430e37f1ab9bc6931c8defe10", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tpublic String toDebugString()", "signatureAfterChange": " \tpublic String toDebugString()", "diff": ["-\t\tthis.toStringInfo(0, buffer, NO_INFO);", "+\t\tthis.toStringInfo(0, buffer, NO_INFO, true/*show resolved info*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "480806c440ba05dc4d0ac613afbae93d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "122aaead4e358f6ebb2c21aa961cc53294d2209d", "commitAfterChange": "dad14e26b600f99744a420507cc556dc0f0ff73b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic IType findType(String name, boolean partialMatch, int acceptFlags)", "signatureAfterChange": " \tpublic IType findType(String name, boolean partialMatch, int acceptFlags)", "diff": ["-\t\treturn findType(name, partialMatch, acceptFlags, true, null);", "+\t\treturn findType(name, partialMatch, acceptFlags, true/*consider secondary types*/, true/*wait for indexes*/, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49624c84674f7c0228895562aa895f6a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/WhileStatement.java", "commitBeforeChange": "f4bdb5d912579981f22fe9e7c4679e93b1a5f059", "commitAfterChange": "a3a09ad256da223aa1f3d2fe29b81e346d09a16c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\tif (!actionInfo.complainIfUnreachable(action, currentScope)) {", "+\t\t\tif (!actionInfo.complainIfUnreachable(action, currentScope, false)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49b4b5b61daee7eaba99a63eea67ec9f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ReconcileWorkingCopyOperation.java", "commitBeforeChange": "a7a4bb422b80975020031dc2489c1287582f5bac", "commitAfterChange": "a90f0807d0eec8879b31dc133746e8ac20dd17d7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["-\t\t\t\t\t\t\t\tthis.ast = AST.convertCompilationUnit(this.astLevel, unit, contents, options, this.progressMonitor);", "+\t\t\t\t\t\t\t\tthis.ast = AST.convertCompilationUnit(this.astLevel, unit, contents, options, true/*isResolved*/, this.progressMonitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b5c0e3debaa8ccdf321203aceef8ebb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/OrPattern.java", "commitBeforeChange": "8538fc408d08fb084c1462f6b94d5674f6422ccd", "commitAfterChange": "393bdec9ec7581654b4aa4ee60edc770ef37cb11", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " protected void matchReportReference(AstNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(AstNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\tSearchPattern closestPattern = findClosestPattern(reference);", "+\tSearchPattern closestPattern = findClosestPattern(reference, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b83c41c6ad1e213f62e418157f245bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "14d627dce82d56cfd2be03743c28c7ac3736df42", "commitAfterChange": "98d42611e634b1db50f18796da74a25e56b7b155", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tprivate IJavaElementDelta processResourceDelta(IResourceDelta changes)", "signatureAfterChange": " \tprivate IJavaElementDelta processResourceDelta(IResourceDelta changes)", "diff": ["-\t\t\tthis.state.initializeRoots();", "+\t\t\tthis.state.initializeRoots(false/*not initiAfterLoad*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4babb535df3f089f58e44a264c577404", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "f8e06af2d64912de617f742baa744d8cff14ca39", "commitAfterChange": "799bcf90c7e5ed6ce45339b7f5c6f4ecccd1d29c", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \tpublic boolean isCompatibleWith(TypeBinding left, Scope scope)", "signatureAfterChange": "  \tpublic boolean isCompatibleWith(TypeBinding left, Scope scope)", "diff": ["-\t\tfinal MethodBinding sam = left.getSingleAbstractMethod(this.enclosingScope);", "+\t\tfinal MethodBinding sam = left.getSingleAbstractMethod(this.enclosingScope, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bae79bf9577993c6a61afe6ef62d7e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "a13ea647a4f4bc5437bbde0cf7788256ede6cc96", "commitAfterChange": "1ab17a7eba14d35875267cc7b416da000a14dc1e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t\tpublic void setInstantiation(TypeBinding type, InferenceVariable variable, LookupEnvironment environment)", "signatureAfterChange": " \t\tpublic void setInstantiation(TypeBinding type, InferenceVariable variable, LookupEnvironment environment)", "diff": ["-\t\t\t\t\t\ttype = environment.createAnnotatedType(type.unannotated(), annot);", "+\t\t\t\t\t\ttype = environment.createAnnotatedType(type.unannotated(true), annot);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c31ef31189287eb0d7791a3e2b3c8fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "cff902ed861deb5cff157c45c8eb21f377de7ae3", "commitAfterChange": "54adf8874a2139df84e504710c736c699ecdc8bd", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic static AnnotationBinding [] resolveAnnotations(BlockScope scope, Annotation[] sourceAnnotations, Binding recipient, boolean copySE8AnnotationsToType)", "signatureAfterChange": " \tpublic static AnnotationBinding [] resolveAnnotations(BlockScope scope, Annotation[] sourceAnnotations, Binding recipient, boolean copySE8AnnotationsToType)", "diff": ["-\t\t\tcopySE8AnnotationsToType(scope, recipient, sourceAnnotations);", "+\t\t\tcopySE8AnnotationsToType(scope, recipient, sourceAnnotations, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c827e58cb503ebd30e9ff58f499e42b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "f681e9c0c3cc6c59d4593a72e3527dde2cae7215", "commitAfterChange": "1b6c294391226cfde58f43f4cff9ad65bab6672e", "methodNumberBeforeChange": 307, "methodNumberAfterChange": 307, "signatureBeforeChange": " \tpublic void test0306()", "signatureAfterChange": " \tpublic void test0306()", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3, source, \"Object.java\", project); //$NON-NLS-1$", "+\t\tASTNode result = runConversion(AST.JLS3, source, \"Object.java\", project, true); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cb53999c193200a945e1691835d5ec4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "1ca61ba390ea54fcabd09223853d7a3d6816c249", "commitAfterChange": "5663a1e0521003a6152962cf3fce8cc9ca6a4647", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tpublic boolean visit(Argument argument, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(Argument argument, BlockScope scope)", "diff": ["-\t\t\tAnnotation [][] annotationsOnDimensions = argumentType.getAnnotationsOnDimensions();", "+\t\t\tAnnotation [][] annotationsOnDimensions = argumentType.getAnnotationsOnDimensions(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d38abd579539beb8352ad5671a437a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "ec8697c65ab295bcea2d232a64ce4cee1ee12142", "commitAfterChange": "380f51fb07b01d50fdf783879a49310c31bf8dde", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "  \tprivate LambdaExpression cachedResolvedCopy(TypeBinding targetType, boolean anyTargetOk, boolean requireExceptionAnalysis, InferenceContext18 context)", "signatureAfterChange": "  \tprivate LambdaExpression cachedResolvedCopy(TypeBinding targetType, boolean anyTargetOk, boolean requireExceptionAnalysis, InferenceContext18 context)", "diff": ["-\t\t\t\tTypeBinding type = copy.resolveType(this.enclosingScope);", "+\t\t\t\tTypeBinding type = copy.resolveType(this.enclosingScope, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d805b96e05460e0c583ad38f2f67a6c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "26ae2fb0b104f35c8ff6905d5a4d6e38ab8aa8e4", "commitAfterChange": "87c97e046bfd0082db22afde07881f33a4558114", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic static IBinding[] resolve( \t\tfinal IJavaElement[] elements, \t\tint apiLevel, \t\tMap compilerOptions, \t\tIJavaProject javaProject, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor)", "signatureAfterChange": " \tpublic static IBinding[] resolve( \t\tfinal IJavaElement[] elements, \t\tint apiLevel, \t\tMap compilerOptions, \t\tIJavaProject javaProject, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor)", "diff": ["-\t\t\t\t\tString key = ((BinaryMember) element).getKey();", "+\t\t\t\t\tString key = ((BinaryMember) element).getKey(true/*open to get resolved info*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e3da02f14f604dca15a94b1601cfea5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "140d5208fae36b92de255acde8dd7fe538818d2b", "commitAfterChange": "14842eb62da3e660c575d5193079230a000aa781", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \tpublic static void performPreBuildCheck(\r \t\tIResourceDelta delta,\r \t\tIJavaElement parent)", "signatureAfterChange": "\r \tpublic static void performPreBuildCheck(\r \t\tIResourceDelta delta,\r \t\tIJavaElement parent)", "diff": ["-\t\t\t\t\t\t\t\t\t\tproject.setRawClasspath(fileEntries, outputLocation, null, true, false, project.getExpandedClasspath(true));\r", "+\t\t\t\t\t\t\t\t\t\tproject.setRawClasspath(fileEntries, outputLocation, null, true, false, project.getExpandedClasspath(true), true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f2e10fc4603eeddcb05589c4b25cfdc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "8d3c2646ec0224ab936125ae7e1adde5786e1231", "commitAfterChange": "dfa40837336948a1f985e74dddef96333913f44c", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 42, "signatureBeforeChange": "  public AnnotationBinding getNullableAnnotation()", "signatureAfterChange": "  public AnnotationBinding getNullableAnnotation()", "diff": ["-\treturn this.nullableAnnotation = this.typeSystem.getAnnotationType(nullable);", "+\treturn this.nullableAnnotation = this.typeSystem.getAnnotationType(nullable, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "502d8d098f9bcef7cfcb76b579483656", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "7065da01531bf4c318c59206b62aa1503a948abe", "commitAfterChange": "0d303c13e0085d7aef9947e46f37c617f206a066", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void selectType(ISourceType sourceType, char[] typeName, ISourceType[] topLevelTypes, boolean searchInEnvironment)", "signatureAfterChange": " \tpublic void selectType(ISourceType sourceType, char[] typeName, ISourceType[] topLevelTypes, boolean searchInEnvironment)", "diff": ["-\t\t\t\tSourceTypeConverter", "-\t\t\t\t\t.buildCompilationUnit(", "+\t\t\t\tSourceTypeConverter.buildCompilationUnit(", "-\t\t\t\t\t\tfalse,", "-\t\t\t// don't need field and methods", "-\t\t\ttrue, // by default get member types", "-\t\t\tthis.parser.problemReporter(), result);", "+\t\t\t\t\t\tfalse, // no need for field and methods", "+\t\t\t\t\t\ttrue, // need member types", "+\t\t\t\t\t\tfalse, // no need for field initialization", "+\t\t\t\t\t\tthis.parser.problemReporter(), ", "+\t\t\t\t\t\tresult);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50ed0942ff827290a607fa35663f283c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "4c05b51e282281d245149ac856aed4eb689aee0d", "commitAfterChange": "fcd8f6eb5a6e4ad47715a6f446da38772d56031c", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " \tpublic void test0062() throws JavaModelException", "signatureAfterChange": " \tpublic void test0062() throws JavaModelException", "diff": ["-\t\t\tthis.workingCopy);", "+\t\t\tthis.workingCopy,", "+\t\t\tfalse);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51237d58117238df18a72fe881597df0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "5ea0ae6c0d5a6162940bd458d3ead5d427058c35", "commitAfterChange": "2ad69f466c4df4c3e626fb0d9831c536de8ea5c0", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public ICompilationUnit fromIFile(IFile file)", "signatureAfterChange": " public ICompilationUnit fromIFile(IFile file)", "diff": ["-\treturn findSourceFile(file);", "+\treturn findSourceFile(file, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5163619cdaa23b1970227092dabf619b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "f8e06af2d64912de617f742baa744d8cff14ca39", "commitAfterChange": "799bcf90c7e5ed6ce45339b7f5c6f4ecccd1d29c", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "  public boolean isFunctionalInterface(Scope scope)", "signatureAfterChange": "  public boolean isFunctionalInterface(Scope scope)", "diff": ["-\treturn isInterface() && (method = getSingleAbstractMethod(scope)) != null && method.isValidBinding();", "+\treturn isInterface() && (method = getSingleAbstractMethod(scope, true)) != null && method.isValidBinding();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "519fa35a950e6c9e5c8914d0ba0b40fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LabelFlowContext.java", "commitBeforeChange": "2eab698c606e3b17217602bbc99837242c743a5a", "commitAfterChange": "6d141275326cf4caf65ec5dca68b565e2e9b1360", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public LabelFlowContext(FlowContext parent, ASTNode associatedNode, char[] labelName, BranchLabel breakLabel, BlockScope scope)", "signatureAfterChange": "  public LabelFlowContext(FlowContext parent, ASTNode associatedNode, char[] labelName, BranchLabel breakLabel, BlockScope scope)", "diff": ["-\tsuper(parent, associatedNode, breakLabel);", "+\tsuper(parent, associatedNode, breakLabel, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52ad58d25ab8dccc4e997a4f198e4de0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "71ab6b3956db9fea4a8f81e891e05ac4d44d96d9", "commitAfterChange": "6720ac2482e494a3ed8f387ef6b8945b6d3454d0", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "\r public Object[] getCompatibleEmulationPath(ReferenceBinding targetEnclosingType)", "signatureAfterChange": "\r public Object[] getCompatibleEmulationPath(ReferenceBinding targetEnclosingType)", "diff": ["-\t\t\tpath[0] = sourceType.getSyntheticField((SourceTypeBinding)currentType, this);\r", "+\t\t\tpath[0] = sourceType.getSyntheticField((SourceTypeBinding)currentType, this, false);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5375a881b07c70db721f9d9d40d00aeb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionOnSingleNameReference.java", "commitBeforeChange": "628cadf5744ab383e80afb2f9e63de19db722144", "commitAfterChange": "06412e4ebddd7aaa1f5bc2a2fbe06678982f22b4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\tbinding = scope.getBinding(token, VARIABLE | TYPE | PACKAGE, this);", "+\tbinding = scope.getBinding(token, VARIABLE | TYPE | PACKAGE, this, true /*resolve*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53e554f885d9229f6d11b6103d4213fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "cff902ed861deb5cff157c45c8eb21f377de7ae3", "commitAfterChange": "54adf8874a2139df84e504710c736c699ecdc8bd", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " public MethodBinding resolveTypesFor(MethodBinding method)", "signatureAfterChange": " public MethodBinding resolveTypesFor(MethodBinding method)", "diff": ["-\t\t\t\t\t\tASTNode.copySE8AnnotationsToType(methodDecl.scope, method, methodDecl.annotations);", "+\t\t\t\t\t\tASTNode.copySE8AnnotationsToType(methodDecl.scope, method, methodDecl.annotations, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "561d99b2ab317d6252ec6edacfe7dabd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "74d118e989117eba0163f0f707314197db0891af", "commitAfterChange": "43cdae5117454d896e9e9cf435f63b0b509e3a4c", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  private MethodBinding createMethod(IBinaryMethod method, long sourceLevel, char[][][] missingTypeNames)", "signatureAfterChange": "  private MethodBinding createMethod(IBinaryMethod method, long sourceLevel, char[][][] missingTypeNames)", "diff": ["-\t\t\tisAnnotationType() ? convertMemberValue(method.getDefaultValue(), this.environment, missingTypeNames) : null,", "+\t\t\tisAnnotationType() ? convertMemberValue(method.getDefaultValue(), this.environment, missingTypeNames, true) : null,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58a3f140f04af228715de921e006e0fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "58aaea35ae4c64a4ecebe06d6b1ab1679e04698a", "commitAfterChange": "d5df66f62f879926d0ab37840f8644f7133a2a54", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tif (isMethodUseDeprecated(binding, scope))", "+\t\tif (isMethodUseDeprecated(binding, scope, true))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c8e67cba65efe958415676cdf014394", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor2.java", "commitBeforeChange": "74d059b3fbdc00070c70bee76509a44ccad7fb4d", "commitAfterChange": "31d2b0bac7c9b032f1ad8765fd4577eaff8d79fd", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 46, "signatureBeforeChange": "  \tpublic boolean visit(EnumConstantDeclaration node)", "signatureAfterChange": "  \tpublic boolean visit(EnumConstantDeclaration node)", "diff": ["-\t\t\tformatTypeMembers(bodyDeclarations);", "+\t\t\tformatTypeMembers(bodyDeclarations, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d0c91a8a05a008c1dcdb6e3d131c766", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExpressionFormula.java", "commitBeforeChange": "f8e06af2d64912de617f742baa744d8cff14ca39", "commitAfterChange": "799bcf90c7e5ed6ce45339b7f5c6f4ecccd1d29c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tprivate Object reduceReferenceExpressionCompatibility(ReferenceExpression reference, InferenceContext18 inferenceContext)", "signatureAfterChange": "  \tprivate Object reduceReferenceExpressionCompatibility(ReferenceExpression reference, InferenceContext18 inferenceContext)", "diff": ["-\t\tMethodBinding functionType = t.getSingleAbstractMethod(inferenceContext.scope);", "+\t\tMethodBinding functionType = t.getSingleAbstractMethod(inferenceContext.scope, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d29fca82a3c61bf94f6c5b704326254", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "d0f6b932bd2521f678bde4cdb96cb1190442e2f1", "commitAfterChange": "84bbf5d10f91b2c7f38d4b1250126f235793a08e", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": " \tpublic boolean visit(ClassInstanceCreation node)", "signatureAfterChange": " \tpublic boolean visit(ClassInstanceCreation node)", "diff": ["-\t\t\t\t\trewriteOptionalTypeParameters(node, ClassInstanceCreation.TYPE_ARGUMENTS_PROPERTY, pos, \" \", true); //$NON-NLS-1$", "+\t\t\t\t\trewriteOptionalTypeParameters(node, ClassInstanceCreation.TYPE_ARGUMENTS_PROPERTY, pos, \" \", true, true); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5da414a94d3e79bd48f940684f95bcc3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorLocator.java", "commitBeforeChange": "78430308e7d45c151f6732314055fefd33935867", "commitAfterChange": "09172f867e942cb3ef446efb08f91a91e2817ecb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " protected int resolveLevel(TypeDeclaration type)", "signatureAfterChange": " protected int resolveLevel(TypeDeclaration type)", "diff": ["-\t\t\t\treturn resolveLevel((ConstructorDeclaration) method);", "+\t\t\t\treturn resolveLevel((ConstructorDeclaration) method, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dcbb6beea08ee1ec380c227c1e455ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "48e449a88ed4eefd5f8296dac2a0baf220bc173a", "commitAfterChange": "0d4007eb15023a950a5e732906ce998c79797847", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \t \tprivate void findKeywordsForMember(char[] token, int modifiers)", "signatureAfterChange": " \t \tprivate void findKeywordsForMember(char[] token, int modifiers)", "diff": ["-\t\tfindKeywords(token, keywords);", "+\t\tfindKeywords(token, keywords, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ea6b8b5090313a09a1677532dc9f1cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedQualifiedTypeReference.java", "commitBeforeChange": "7aa41fe639eb46a740b35e612973cada9ba8267f", "commitAfterChange": "7ec8f457fa5afa1822c5c5a2c51b29731a82c4ce", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope, boolean checkBounds)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope, boolean checkBounds)", "diff": ["-\t\t\t\t\t\t? (ReferenceBinding) scope.environment().convertToRawType(qualifiedType)", "+\t\t\t\t\t\t? (ReferenceBinding) scope.environment().convertToRawType(qualifiedType, false /*do not force conversion of enclosing types*/)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f23dc669a605d546a2b5a79db9c4c80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "ddd808d168fb534eabceec59ee71a1ab6bb9aa2f", "commitAfterChange": "152c9f5bc26833df7f866102ab1cb2e2da100205", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " protected IType resolveTypeByLocation(char[] packageName, char[] typeName, int acceptFlags, int start, int end)", "signatureAfterChange": " protected IType resolveTypeByLocation(char[] packageName, char[] typeName, int acceptFlags, int start, int end)", "diff": ["-\t\t\ttype= this.nameLookup.findType(new String(typeName), pkgs[i], false, acceptFlags);", "+\t\t\ttype= this.nameLookup.findType(new String(typeName), pkgs[i], false, acceptFlags, true/*consider secondary types*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fa5ab316248d45b6f4626a45be9356f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "5c94036938fe400e122792407c5c35d8914790e5", "commitAfterChange": "e002812d8385bfcab83bbcee92fbb80489aadeb5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void addAttributes()", "signatureAfterChange": " \tpublic void addAttributes()", "diff": ["-\t\t\t\t\tattributesNumber += generateRuntimeAnnotations(annotations);", "+\t\t\t\t\tattributesNumber += generateRuntimeAnnotations(annotations, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "624010d8af7f36d05dbd380945db9574", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "55c747d0a8aaf13e7d70753235bf6ee4885d2fa8", "commitAfterChange": "f72032f192993f6a000c445c6ab6a878ffda160a", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "\r \r \tprivate void findMessageSends(\r \t\tchar[] token,\r \t\tTypeBinding[] argTypes,\r \t\tScope scope,\r \t\tInvocationSite invocationSite)", "signatureAfterChange": "\r \tprivate void findMessageSends(\r \t\tchar[] token,\r \t\tTypeBinding[] argTypes,\r \t\tScope scope,\r \t\tInvocationSite invocationSite)", "diff": ["-\r", "+\t\t\t\t\t\tfalse,\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6243dcb76f32ff7f400115c6b88bd42a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/src/org/eclipse/jdt/compiler/apt/tests/BatchTestUtils.java", "commitBeforeChange": "8a17153af69ddcddcc6ac5bd94649f0b523f5b72", "commitAfterChange": "a6fddb558f09852d0df8b3655125e6a25d3ce37b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static boolean compileTreeWithErrors( \t\t\tJavaCompiler compiler, \t\t\tList<String> options, \t\t\tFile targetFolder, \t\t\tDiagnosticListener<? super JavaFileObject> diagnosticListener)", "signatureAfterChange": " \tpublic static boolean compileTreeWithErrors( \t\t\tJavaCompiler compiler, \t\t\tList<String> options, \t\t\tFile targetFolder, \t\t\tDiagnosticListener<? super JavaFileObject> diagnosticListener)", "diff": ["-\t\treturn compileTreeWithErrors(compiler, options, targetFolder, diagnosticListener, false);", "+\t\treturn compileTreeWithErrors(compiler, options, targetFolder, diagnosticListener, false, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62581ef509c35f8709ac4bca751bd1cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "27d95cfb6022c24feca5946c5f35f2eff59fa35f", "commitAfterChange": "d0dcc261bbc84b46b7aa75e7443364ced0210580", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tpublic boolean visit(Argument argument, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(Argument argument, BlockScope scope)", "diff": ["-\t\t\tthis.scribe.printModifiers(argument.annotations, this);", "+\t\t\tthis.scribe.printModifiers(argument.annotations, this, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62d458475dde9124b86e30e82a09d5a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "a127c18eb2e0be7f3c68a60246b08a9a69e7be5d", "commitAfterChange": "771a62c1c5090742b5612a8958d0207ca0f557cc", "methodNumberBeforeChange": 213, "methodNumberAfterChange": 213, "signatureBeforeChange": " \tpublic void test0580() throws JavaModelException", "signatureAfterChange": " \tpublic void test0580() throws JavaModelException", "diff": ["-\t\t\tcheckSourceRange(fieldDeclaration, \"d String[][]\", source.toCharArray());", "+\t\t\tcheckSourceRange(fieldDeclaration, \"d String[][]\", source.toCharArray(), true/*expectMalformed*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62eb647b86a4efa0f0981e67b7a3f324", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "1302cba8a2d9e7deb014096a0cf438c7f031d8f4", "commitAfterChange": "629f19b9848dc98d62568a3c9b1db94e81597d7a", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " private FieldBinding resolveTypeFor(FieldBinding field)", "signatureAfterChange": " private FieldBinding resolveTypeFor(FieldBinding field)", "diff": ["-\t\t\t\t\t\t: fieldDecl.type.resolveType(initializationScope);", "+\t\t\t\t\t\t: fieldDecl.type.resolveType(initializationScope, true /* check bounds*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "640a1a2eac052ad1535e8894f0f1be13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "0534618c17c0b5f6c361eb5acf9c22731255984f", "commitAfterChange": "d85ef445439a7932d1fe7c7dafa9bf16e2d2dd51", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tprivate TextEdit formatStatements(String source, int indentationLevel, String lineSeparator, int offset, int length)", "signatureAfterChange": "  \tprivate TextEdit formatStatements(String source, int indentationLevel, String lineSeparator, int offset, int length)", "diff": ["-\t\tConstructorDeclaration constructorDeclaration = this.codeSnippetParsingUtil.parseStatements(source.toCharArray(), getDefaultCompilerOptions(), true);", "+\t\tConstructorDeclaration constructorDeclaration = this.codeSnippetParsingUtil.parseStatements(source.toCharArray(), getDefaultCompilerOptions(), true, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6411d8fa47934cb2e064a3075fe093a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "7336215b569e42bf0d7946c272b0da8ff71d12fb", "commitAfterChange": "e29082e6108e43f171cfe9fae0a56914a1f2ec3e", "methodNumberBeforeChange": 172, "methodNumberAfterChange": 172, "signatureBeforeChange": " \tprotected void findMembers( \t\t\tchar[] token, \t\t\tReferenceBinding receiverType, \t\t\tScope scope, \t\t\tInvocationSite invocationSite, \t\t\tboolean isInsideAnnotationAttribute, \t\t\tBinding[] missingElements, \t\t\tint[] missingElementsStarts, \t\t\tint[] missingElementsEnds, \t\t\tboolean missingElementsHaveProblems)", "signatureAfterChange": " \tprotected void findMembers( \t\t\tchar[] token, \t\t\tReferenceBinding receiverType, \t\t\tScope scope, \t\t\tInvocationSite invocationSite, \t\t\tboolean isInsideAnnotationAttribute, \t\t\tBinding[] missingElements, \t\t\tint[] missingElementsStarts, \t\t\tint[] missingElementsEnds, \t\t\tboolean missingElementsHaveProblems)", "diff": ["-\t\t\t\tfindKeywords(token, new char[][]{Keywords.THIS}, false, true);", "+\t\t\t\tfindKeywords(token, new char[][]{Keywords.THIS}, false, true, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "653f6bb320f1113335e6a15eb74928b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "7ad33f26eedd4780b8e7bafe9288f3217000d5fd", "commitAfterChange": "011b2686c2cb0787dd0d6632931ecc153c5a5666", "methodNumberBeforeChange": 129, "methodNumberAfterChange": 129, "signatureBeforeChange": " \tpublic boolean visit(SuperConstructorInvocation node)", "signatureAfterChange": " \tpublic boolean visit(SuperConstructorInvocation node)", "diff": ["-\t\t\tpos= rewriteOptionalTypeParameters(node, SuperConstructorInvocation.TYPE_ARGUMENTS_PROPERTY, pos, \"\"); //$NON-NLS-1$", "+\t\t\tpos= rewriteOptionalTypeParameters(node, SuperConstructorInvocation.TYPE_ARGUMENTS_PROPERTY, pos, \"\", false); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65fb52f3f65f6b0c3cbd2919040d9a21", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "9850e4ae951b6df5bc8bfe162d8a3e3e67beff62", "commitAfterChange": "e9ca95978aca2a442bfecfb8ac281f372092486a", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 42, "signatureBeforeChange": " \tpublic void _dload(int pc, int index)", "signatureAfterChange": " \tpublic void _dload(int pc, int index)", "diff": ["-\t\t\tgetLocalVariableName(pc, index)", "+\t\t\tgetLocalVariableName(pc, index, true)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6622ee202e8580699aba49632158398e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/NonNullDefaultAwareTypeAnnotationWalker.java", "commitBeforeChange": "b1c69f20f23ddb575225e5b5cb5d470714f41aad", "commitAfterChange": "63231f253dc3aaae18caf57a7f77da85f8cefe96", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic NonNullDefaultAwareTypeAnnotationWalker(int defaultNullness, LookupEnvironment environment)", "signatureAfterChange": " \tpublic NonNullDefaultAwareTypeAnnotationWalker(int defaultNullness, LookupEnvironment environment)", "diff": ["-\t\tthis(defaultNullness, getNonNullAnnotation(environment), false);", "+\t\tthis(defaultNullness, getNonNullAnnotation(environment), false, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "664a6ebd5716df6771898d2999fb21f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/TypeConverter.java", "commitBeforeChange": "a7538ae82dbd33b3f26dec50ae8ce6f249c7a04f", "commitAfterChange": "f0ca1f9e3571a6c8cc7bcfc8fee3982374c51194", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprotected TypeReference createTypeReference( \t\tchar[] typeName, \t\tint start, \t\tint end)", "signatureAfterChange": " \tprotected TypeReference createTypeReference( \t\tchar[] typeName, \t\tint start, \t\tint end)", "diff": ["+\t */", "+\tprotected TypeReference createTypeReference(", "+\t\tchar[] typeName,", "+\t\tint start,", "-\t\treturn decodeType(typeName, length, start, end);", "+\t\treturn decodeType(typeName, length, start, end, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66d5bd843a201901320f601d69625d29", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "4c05b51e282281d245149ac856aed4eb689aee0d", "commitAfterChange": "fcd8f6eb5a6e4ad47715a6f446da38772d56031c", "methodNumberBeforeChange": 188, "methodNumberAfterChange": 188, "signatureBeforeChange": " \tpublic void test0174() throws JavaModelException", "signatureAfterChange": " \tpublic void test0174() throws JavaModelException", "diff": ["-    \t\t\tthis.workingCopy);", "+    \t\t\tthis.workingCopy,", "+    \t\t\tfalse);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "670dcaca393b2cfeca5e3c53bbfac1c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Argument.java", "commitBeforeChange": "1302cba8a2d9e7deb014096a0cf438c7f031d8f4", "commitAfterChange": "629f19b9848dc98d62568a3c9b1db94e81597d7a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\t  \tpublic TypeBinding resolveForCatch(BlockScope scope)", "signatureAfterChange": "\t  \tpublic TypeBinding resolveForCatch(BlockScope scope)", "diff": ["-\t\tTypeBinding exceptionType = this.type.resolveType(scope);", "+\t\tTypeBinding exceptionType = this.type.resolveType(scope, true /* check bounds*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "675373800395242072541c8e028755ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedMethodBinding.java", "commitBeforeChange": "7aa41fe639eb46a740b35e612973cada9ba8267f", "commitAfterChange": "7ec8f457fa5afa1822c5c5a2c51b29731a82c4ce", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic static ParameterizedMethodBinding instantiateGetClass(TypeBinding receiverType, MethodBinding originalMethod, Scope scope)", "signatureAfterChange": " \tpublic static ParameterizedMethodBinding instantiateGetClass(TypeBinding receiverType, MethodBinding originalMethod, Scope scope)", "diff": ["-\t\tTypeBinding rawType = environment.convertToRawType(receiverType.erasure());", "+\t\tTypeBinding rawType = environment.convertToRawType(receiverType.erasure(), false /*do not force conversion of enclosing types*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "684057eef248add15e71a52bd4d8d9f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "9850e4ae951b6df5bc8bfe162d8a3e3e67beff62", "commitAfterChange": "e9ca95978aca2a442bfecfb8ac281f372092486a", "methodNumberBeforeChange": 145, "methodNumberAfterChange": 146, "signatureBeforeChange": " \tpublic void _istore(int pc, int index)", "signatureAfterChange": " \tpublic void _istore(int pc, int index)", "diff": ["-\t\t\tgetLocalVariableName(pc, index)", "+\t\t\tgetLocalVariableName(pc, index, true)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ab826f9264ccc67b11571b77c914c61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/AbstractASTTests.java", "commitBeforeChange": "c7f93383695f4482b2417d3ba29b9fc43b4d2b82", "commitAfterChange": "78489a1112068ad791184216a4e6b3439ea59739", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tprotected IBinding[] resolveBindings(String contents, ICompilationUnit cu) throws JavaModelException", "signatureAfterChange": " \tprotected IBinding[] resolveBindings(String contents, ICompilationUnit cu) throws JavaModelException", "diff": ["-\t\tASTNode[] nodes = buildASTs(contents, cu);", "+\t\tASTNode[] nodes = buildASTs(contents, cu, false /* do not report errors */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b45f91323638b4f2f6dda14f676807c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/CodeSnippetParsingUtil.java", "commitBeforeChange": "0bd771375c18b7c83a5adef74657e35cf2c86ff3", "commitAfterChange": "5882e29154dfffe57fe4183f714dc74947e8e98d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic ASTNode[] parseClassBodyDeclarations(char[] source, Map settings, boolean recordParsingInformation)", "signatureAfterChange": "  \tpublic ASTNode[] parseClassBodyDeclarations(char[] source, Map settings, boolean recordParsingInformation)", "diff": ["-\t\treturn parseClassBodyDeclarations(source, 0, source.length, settings, recordParsingInformation);", "+\t\treturn parseClassBodyDeclarations(source, 0, source.length, settings, recordParsingInformation, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c111eac614c1a8187f4ef31f45896db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "11ac720cf12c89391a32ed5e56750070174f7f3f", "commitAfterChange": "c35f48a470f9475e0b73c6c14c2a26ca2378ab58", "methodNumberBeforeChange": 427, "methodNumberAfterChange": 427, "signatureBeforeChange": "  public void parse( \tFieldDeclaration field, \tTypeDeclaration type, \tCompilationUnitDeclaration unit, \tchar[] initializationSource)", "signatureAfterChange": "  public void parse( \tFieldDeclaration field, \tTypeDeclaration type, \tCompilationUnitDeclaration unit, \tchar[] initializationSource)", "diff": ["-\tgoForExpression();", "+\tgoForExpression(true /* record line separators */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c6565563cabbfa1a66b59bce3638501", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "628cadf5744ab383e80afb2f9e63de19db722144", "commitAfterChange": "06412e4ebddd7aaa1f5bc2a2fbe06678982f22b4", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tprotected IVariableBinding getVariableBinding(org.eclipse.jdt.internal.compiler.lookup.VariableBinding variableBinding)", "signatureAfterChange": " \tprotected IVariableBinding getVariableBinding(org.eclipse.jdt.internal.compiler.lookup.VariableBinding variableBinding)", "diff": ["-\t\t\t\t\t\t\tFieldBinding exactBinding = declaringClass.getField(problemFieldBinding.name);", "+\t\t\t\t\t\t\tFieldBinding exactBinding = declaringClass.getField(problemFieldBinding.name, true /*resolve*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c8a1b684b4d0939d47a707e508b83a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "0a2a15035b645ba08167c116bcd8da21a65ff803", "commitAfterChange": "d1d9c4b9d41b5dee6585f38ec44b96973779f261", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": " \tpublic boolean visit(DoStatement doStatement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(DoStatement doStatement, BlockScope scope)", "diff": ["-\t\t\t\tformatLeftCurlyBrace(line, this.preferences.brace_position_for_block);", "+\t\t\t\tformatLeftCurlyBrace(line, this.preferences.brace_position_for_block, true /* print comment */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ca9ed9228c7d4009cc1967178fb3646", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SyntheticArgumentBinding.java", "commitBeforeChange": "f790750ec986a60ef92ab62210a60e7bfe7f2a9e", "commitAfterChange": "5acc9f38696ecf93bf41e3ef5e2738b55bfe04e9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public SyntheticArgumentBinding(LocalVariableBinding actualOuterLocalVariable)", "signatureAfterChange": "\r public SyntheticArgumentBinding(LocalVariableBinding actualOuterLocalVariable)", "diff": ["-\t\tAccFinal);\r", "+\t\tAccFinal,\r", "+\t\ttrue);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cc8a03ef4345788951012cdf0ac45c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor2.java", "commitBeforeChange": "74d059b3fbdc00070c70bee76509a44ccad7fb4d", "commitAfterChange": "31d2b0bac7c9b032f1ad8765fd4577eaff8d79fd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic TextEdit format(String string, AbstractTypeDeclaration typeDeclaration)", "signatureAfterChange": " \tpublic TextEdit format(String string, AbstractTypeDeclaration typeDeclaration)", "diff": ["-\t\t\tformatTypeMembers(typeDeclaration.bodyDeclarations());", "+\t\t\tformatTypeMembers(typeDeclaration.bodyDeclarations(), false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6db3bb39a664d5a6553e5dc47c539625", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsTests.java", "commitBeforeChange": "635645f64cc3986d85427716b6b1431b69a73db1", "commitAfterChange": "52bf936fc576c8beae0884d140c2c4a36e852ace", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  void formatSource(String source, String formattedOutput)", "signatureAfterChange": "  void formatSource(String source, String formattedOutput)", "diff": ["-\tformatSource(source, formattedOutput, CodeFormatter.K_COMPILATION_UNIT | CodeFormatter.F_INCLUDE_COMMENTS, 0);", "+\tformatSource(source, formattedOutput, CodeFormatter.K_COMPILATION_UNIT | CodeFormatter.F_INCLUDE_COMMENTS, 0, true /*repeat formatting twice*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dfe1034ae07853fad0da6c928f619db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "f97912416c5f4661289c43d63ee763608220be3f", "commitAfterChange": "e5efe07482ca39d7bb013c10359ef31d2cc33138", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tprotected boolean parseIdentifierTag(boolean report)", "signatureAfterChange": " \tprotected boolean parseIdentifierTag(boolean report)", "diff": ["-\t\t\t\tpushIdentifier(true);", "+\t\t\t\tpushIdentifier(true, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e88d538f90c2205afe632aed63b0855", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetScope.java", "commitBeforeChange": "569ea51c58561efd4d8aa7df4dbd08c4ce6f4fbf", "commitAfterChange": "af652d9d40e3e30a14ccbd2056144782592afc53", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  public MethodBinding getImplicitMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": "  public MethodBinding getImplicitMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t\tmethodBinding = findMethod(receiverType, selector, argumentTypes, invocationSite);", "+\t\tmethodBinding = findMethod(receiverType, selector, argumentTypes, invocationSite, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6eb6dc8cf5ce0b6e0d379c9917f76fa6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "4c05b51e282281d245149ac856aed4eb689aee0d", "commitAfterChange": "fcd8f6eb5a6e4ad47715a6f446da38772d56031c", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " \tpublic void test0066() throws JavaModelException", "signatureAfterChange": " \tpublic void test0066() throws JavaModelException", "diff": ["-\t\t\tthis.workingCopy);", "+\t\t\tthis.workingCopy,", "+\t\t\tfalse);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f785d99a6dd2255fff0a0b61213512a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "f97912416c5f4661289c43d63ee763608220be3f", "commitAfterChange": "e5efe07482ca39d7bb013c10359ef31d2cc33138", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprotected Object parseMember(Object receiver) throws InvalidInputException", "signatureAfterChange": " \tprotected Object parseMember(Object receiver) throws InvalidInputException", "diff": ["-\t\t\tpushIdentifier(true);", "+\t\t\tpushIdentifier(true, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7152304e1823aab19e7b35b80deb63b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "7ad33f26eedd4780b8e7bafe9288f3217000d5fd", "commitAfterChange": "011b2686c2cb0787dd0d6632931ecc153c5a5666", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " \tpublic boolean visit(MethodDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(MethodDeclaration node)", "diff": ["-\t\t\tpos= rewriteOptionalTypeParameters(node, MethodDeclaration.TYPE_PARAMETERS_PROPERTY, pos, \" \"); //$NON-NLS-1$", "+\t\t\tpos= rewriteOptionalTypeParameters(node, MethodDeclaration.TYPE_PARAMETERS_PROPERTY, pos, \" \", true); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7204d017c5a825363bd28c17af7e7da7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "702c62fec0923d7526ca23efea5c1bb4f5a2ef27", "commitAfterChange": "48a78bfcb529886e24e5f62b1bc56f7d3678e46a", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "  \tpublic boolean sIsMoreSpecific(TypeBinding s, TypeBinding t, Scope skope)", "signatureAfterChange": "  \tpublic boolean sIsMoreSpecific(TypeBinding s, TypeBinding t, Scope skope)", "diff": ["-\t\tLambdaExpression copy = cachedResolvedCopy(s, true /* any resolved copy is good */);", "+\t\tLambdaExpression copy = cachedResolvedCopy(s, true /* any resolved copy is good */, false); // we expect a cached copy - otherwise control won't reach here."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7258732b8b19740be4472f54e97231f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "9850e4ae951b6df5bc8bfe162d8a3e3e67beff62", "commitAfterChange": "e9ca95978aca2a442bfecfb8ac281f372092486a", "methodNumberBeforeChange": 182, "methodNumberAfterChange": 183, "signatureBeforeChange": " \tpublic void _lstore(int pc, int index)", "signatureAfterChange": " \tpublic void _lstore(int pc, int index)", "diff": ["-\t\t\tgetLocalVariableName(pc, index)", "+\t\t\tgetLocalVariableName(pc, index, true)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72add3f8dd427c8a71d065adb1fb540d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "0d443fa5c000050b34b1ab0f8b4f19687a29cb9f", "commitAfterChange": "b5492bbb71b5576b2e480e9a10fcae6aa5e1e0b6", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void addProblemConstructor( \t\tAbstractMethodDeclaration method, \t\tMethodBinding methodBinding, \t\tIProblem[] problems)", "signatureAfterChange": " \tpublic void addProblemConstructor( \t\tAbstractMethodDeclaration method, \t\tMethodBinding methodBinding, \t\tIProblem[] problems)", "diff": ["-\t\tint attributeNumber = generateMethodInfoAttribute(methodBinding);", "+\t\tint attributeNumber = generateMethodInfoAttribute(methodBinding, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72fda5873f442b91d9adfa18ec840e13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "45cd785ca01e28e4f113609eb753cae5cd16f91a", "commitAfterChange": "21c2c8ab182b7aa411b8e7bf4277aee52240c980", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": " \tpublic static void setClasspathVariables( \t\tString[] variableNames, \t\tIPath[] paths, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic static void setClasspathVariables( \t\tString[] variableNames, \t\tIPath[] paths, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "diff": ["-\t\tJavaModelManager.getJavaModelManager().updateVariableValues(variableNames, paths, monitor);", "+\t\tJavaModelManager.getJavaModelManager().updateVariableValues(variableNames, paths, true/*update preferences*/, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7393fbad33accae33d6271fb24871a07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExpressionFormula.java", "commitBeforeChange": "f8e06af2d64912de617f742baa744d8cff14ca39", "commitAfterChange": "799bcf90c7e5ed6ce45339b7f5c6f4ecccd1d29c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic Object reduce(InferenceContext18 inferenceContext) throws InferenceFailureException", "signatureAfterChange": "  \tpublic Object reduce(InferenceContext18 inferenceContext) throws InferenceFailureException", "diff": ["-\t\t\t\tMethodBinding functionType = t.getSingleAbstractMethod(scope);", "+\t\t\t\tMethodBinding functionType = t.getSingleAbstractMethod(scope, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "752315f743ffa00773afa2dc15e45ef3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "a127c18eb2e0be7f3c68a60246b08a9a69e7be5d", "commitAfterChange": "771a62c1c5090742b5612a8958d0207ca0f557cc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprotected void buildBodyDeclarations(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration enumDeclaration2, EnumDeclaration enumDeclaration)", "signatureAfterChange": "  \tprotected void buildBodyDeclarations(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration enumDeclaration2, EnumDeclaration enumDeclaration)", "diff": ["-\t\t\t\t\t\tenumDeclaration.bodyDeclarations().add(convert(nextMethodDeclaration));", "+\t\t\t\t\t\tenumDeclaration.bodyDeclarations().add(convert(false, nextMethodDeclaration));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75e82e47f63d5d0f33fda87497aa5f8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "aa23b2a14c48eb2e68c0b76ca03ad3cd13f67188", "commitAfterChange": "97ecea4988b025b105080d33f2f05e43659a9d0a", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " protected void findMethodBinding(BlockScope scope, TypeBinding[] argumentTypes)", "signatureAfterChange": " protected void findMethodBinding(BlockScope scope, TypeBinding[] argumentTypes)", "diff": ["-\t\tif (scope.parameterCompatibilityLevel(this.binding, finalArgumentTypes, false) == Scope.NOT_COMPATIBLE)", "+\t\tif (scope.parameterCompatibilityLevel(this.binding, finalArgumentTypes, false, false) == Scope.NOT_COMPATIBLE)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76a117b2c7c61d07cd9afb0bf4b1ad6e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "d0f6b932bd2521f678bde4cdb96cb1190442e2f1", "commitAfterChange": "84bbf5d10f91b2c7f38d4b1250126f235793a08e", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 130, "signatureBeforeChange": " \tpublic boolean visit(SuperMethodInvocation node)", "signatureAfterChange": " \tpublic boolean visit(SuperMethodInvocation node)", "diff": ["-\t\t\t\t\trewriteOptionalTypeParameters(node, SuperMethodInvocation.TYPE_ARGUMENTS_PROPERTY, pos, \"\", false); //$NON-NLS-1$", "+\t\t\t\t\trewriteOptionalTypeParameters(node, SuperMethodInvocation.TYPE_ARGUMENTS_PROPERTY, pos, \"\", false, false); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76a5037d2ec2a21957c5149c6ee026a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "54e21838d5d72a577ad5b83bd2ddcc9c60b93259", "commitAfterChange": "72465f40b09586b7077dc16c43e2ab23727eff60", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprotected void updateAffectedProjects(IPath prerequisiteProjectPath)", "signatureAfterChange": " \tprotected void updateAffectedProjects(IPath prerequisiteProjectPath)", "diff": ["-\t\t\t\t\t\t\t\tfalse); // updating only - no validation", "+\t\t\t\t\t\t\t\tfalse, // updating only - no validation", "+\t\t\t\t\t\t\t\tfalse); // updating only - no need to save"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77281976cfab4b4d57c97e298a41d479", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "0df9f1687f9162f2dcdfeec3aed4b01b8d385a19", "commitAfterChange": "ce0f19288bc3747a9c0cb27b6996f5589afb99d1", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " protected IType lookupType(ReferenceBinding typeBinding)", "signatureAfterChange": " protected IType lookupType(ReferenceBinding typeBinding)", "diff": ["-\t\t\tIType type = this.nameLookup.findType(typeName, pkgs[i],  false,  acceptFlag, true/*consider secondary types*/);", "+\t\t\tIType type = this.nameLookup.findType(typeName, pkgs[i],  false,  acceptFlag, false, true/*consider secondary types*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7761590e9a20ba41a145b26cfb50ed67", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterRecoveryTest.java", "commitBeforeChange": "5daa85176eeb6c050d87a4b7fb3642fbff63325e", "commitAfterChange": "d4d7f9bf434c822e7818dfb358fa83468e120df6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tpublic void test0003() throws JavaModelException", "signatureAfterChange": " \t \tpublic void test0003() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3, this.workingCopies[0], true);", "+\t\tASTNode result = runConversion(AST.JLS3, this.workingCopies[0], true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "781a0189f1bb83bd78fefb7fadd2062a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "b47007cd56be56e518f691f00411ed594be67102", "commitAfterChange": "eaa2c28fb9983936f1f852ef695044ad44499aa5", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " protected TypeReference copyDims(TypeReference typeRef, int dim)", "signatureAfterChange": " protected TypeReference copyDims(TypeReference typeRef, int dim)", "diff": ["-\t\tthis.matchSet.addTrustedMatch(result);", "+\t\tthis.matchSet.addTrustedMatch(result, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7987ed38a54462af4e9bd04d8a98b8ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "d0f6b932bd2521f678bde4cdb96cb1190442e2f1", "commitAfterChange": "84bbf5d10f91b2c7f38d4b1250126f235793a08e", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 115, "signatureBeforeChange": " \tpublic boolean visit(MethodInvocation node)", "signatureAfterChange": " \tpublic boolean visit(MethodInvocation node)", "diff": ["-\t\t\tpos= rewriteOptionalTypeParameters(node, MethodInvocation.TYPE_ARGUMENTS_PROPERTY, pos, \"\", false); //$NON-NLS-1$", "+\t\t\tpos= rewriteOptionalTypeParameters(node, MethodInvocation.TYPE_ARGUMENTS_PROPERTY, pos, \"\", false, false); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79c97498b7ac69cc6388cdf21c8fc248", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Javadoc.java", "commitBeforeChange": "569ea51c58561efd4d8aa7df4dbd08c4ce6f4fbf", "commitAfterChange": "af652d9d40e3e30a14ccbd2056144782592afc53", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tprivate void resolveReference(Expression reference, Scope scope)", "signatureAfterChange": "  \tprivate void resolveReference(Expression reference, Scope scope)", "diff": ["-\t\t\t\t\t\tfieldRef.methodBinding = scope.findMethod(resolvedType, fieldRef.token, Binding.NO_TYPES, fieldRef);", "+\t\t\t\t\t\tfieldRef.methodBinding = scope.findMethod(resolvedType, fieldRef.token, Binding.NO_TYPES, fieldRef, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79f1002b2609cd1376ad9e7e92cacd9f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "0a2a15035b645ba08167c116bcd8da21a65ff803", "commitAfterChange": "d1d9c4b9d41b5dee6585f38ec44b96973779f261", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": " \tpublic boolean visit(IfStatement ifStatement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(IfStatement ifStatement, BlockScope scope)", "diff": ["-\t\t\t\t\tformatLeftCurlyBrace(line, this.preferences.brace_position_for_block);", "+\t\t\t\t\tformatLeftCurlyBrace(line, this.preferences.brace_position_for_block, true /* print comment */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a628612ed4e5149870e3cd45cb7653e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "0d443fa5c000050b34b1ab0f8b4f19687a29cb9f", "commitAfterChange": "b5492bbb71b5576b2e480e9a10fcae6aa5e1e0b6", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic void addProblemMethod( \t\tAbstractMethodDeclaration method, \t\tMethodBinding methodBinding, \t\tIProblem[] problems)", "signatureAfterChange": " \tpublic void addProblemMethod( \t\tAbstractMethodDeclaration method, \t\tMethodBinding methodBinding, \t\tIProblem[] problems)", "diff": ["-\t\tint attributeNumber = generateMethodInfoAttribute(methodBinding);", "+\t\tint attributeNumber = generateMethodInfoAttribute(methodBinding, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a80c30efe29e0620c481a68ccb1a01c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "4c05b51e282281d245149ac856aed4eb689aee0d", "commitAfterChange": "fcd8f6eb5a6e4ad47715a6f446da38772d56031c", "methodNumberBeforeChange": 207, "methodNumberAfterChange": 207, "signatureBeforeChange": " \tpublic void test0193() throws JavaModelException", "signatureAfterChange": " \tpublic void test0193() throws JavaModelException", "diff": ["-    \t\t\tthis.workingCopy);", "+    \t\t\tthis.workingCopy,", "+    \t\t\tfalse);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bc2d614000942d834f44f8d40111441", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "9fa4ee2d52d7a35a0c57f8c4b875f0f155754f75", "commitAfterChange": "330462fa1b1e3cc7e6b257e0a0f3470535bf4f54", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " protected int refineAccuracy(int accuracy, ParameterizedTypeBinding parameterizedBinding, char[][][] patternTypeArguments, MatchLocator locator)", "signatureAfterChange": " protected int refineAccuracy(int accuracy, ParameterizedTypeBinding parameterizedBinding, char[][][] patternTypeArguments, MatchLocator locator)", "diff": ["-\treturn refineAccuracy(accuracy, parameterizedBinding, patternTypeArguments, 0, locator);", "+\treturn refineAccuracy(accuracy, parameterizedBinding, patternTypeArguments, false, 0, locator);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c2537aefd0389415c6331eb95ae9227", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "569ea51c58561efd4d8aa7df4dbd08c4ce6f4fbf", "commitAfterChange": "af652d9d40e3e30a14ccbd2056144782592afc53", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\tthis.binding = scope.findMethod((ReferenceBinding) this.resolvedType, TypeConstants.INIT, pseudoArgs, this);", "+\t\t\t\tthis.binding = scope.findMethod((ReferenceBinding) this.resolvedType, TypeConstants.INIT, pseudoArgs, this, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c3201ceb1ff15ade5854769c0637d40", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "f5733c2118cce9570c584a3c84480228a3b7fc00", "commitAfterChange": "2325884dde9438b06c0c79c1dfd33a091d106072", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " private MethodBinding resolveTypesFor(MethodBinding method)", "signatureAfterChange": " private MethodBinding resolveTypesFor(MethodBinding method)", "diff": ["-\t\tmethodDecl.scope.connectTypeVariables(typeParameters);", "+\t\tmethodDecl.scope.connectTypeVariables(typeParameters, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e6b9fe2bc9cf35b9958d6bb6e4b3b9c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "7aa41fe639eb46a740b35e612973cada9ba8267f", "commitAfterChange": "7ec8f457fa5afa1822c5c5a2c51b29731a82c4ce", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public Binding getBinding(char[][] compoundName, int mask, InvocationSite invocationSite, boolean needResolve)", "signatureAfterChange": " public Binding getBinding(char[][] compoundName, int mask, InvocationSite invocationSite, boolean needResolve)", "diff": ["-\tbinding = environment().convertToRawType(referenceBinding);", "+\tbinding = environment().convertToRawType(referenceBinding, false /*do not force conversion of enclosing types*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e7a49fb64fad89dd758138a001d14df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleTypeReference.java", "commitBeforeChange": "7aa41fe639eb46a740b35e612973cada9ba8267f", "commitAfterChange": "7ec8f457fa5afa1822c5c5a2c51b29731a82c4ce", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic TypeBinding resolveTypeEnclosing(BlockScope scope, ReferenceBinding enclosingType)", "signatureAfterChange": "  \tpublic TypeBinding resolveTypeEnclosing(BlockScope scope, ReferenceBinding enclosingType)", "diff": ["-\t\tmemberType = scope.environment().convertToRawType(memberType);", "+\t\tmemberType = scope.environment().convertToRawType(memberType, false /*do not force conversion of enclosing types*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e850876a1cef7b83c9d46ae5bd3d053", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeReference.java", "commitBeforeChange": "7aa41fe639eb46a740b35e612973cada9ba8267f", "commitAfterChange": "7ec8f457fa5afa1822c5c5a2c51b29731a82c4ce", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public TypeBinding resolveType(ClassScope scope)", "signatureAfterChange": " public TypeBinding resolveType(ClassScope scope)", "diff": ["-\ttype = scope.environment().convertToRawType(type);", "+\ttype = scope.environment().convertToRawType(type, false /*do not force conversion of enclosing types*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e940b5ea16dff29ae23a3cf29ec4664", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Argument.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic TypeBinding createBinding(MethodScope scope, TypeBinding typeBinding)", "signatureAfterChange": "  \tpublic TypeBinding createBinding(MethodScope scope, TypeBinding typeBinding)", "diff": ["-\t\tresolveAnnotations(scope, this.annotations, this.binding);", "+\t\tresolveAnnotations(scope, this.annotations, this.binding, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f1a1f3b0afc13c45a484c6f0bc83fd9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsBugsTest.java", "commitBeforeChange": "635645f64cc3986d85427716b6b1431b69a73db1", "commitAfterChange": "52bf936fc576c8beae0884d140c2c4a36e852ace", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " public void testBug234336() throws JavaModelException", "signatureAfterChange": " public void testBug234336() throws JavaModelException", "diff": ["-\t\t1 /* indentation level */", "+\t\t1, /* indentation level */", "+\t\ttrue /* formatting twice */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8111e5b591371eff633eb5325b3f9653", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "9850e4ae951b6df5bc8bfe162d8a3e3e67beff62", "commitAfterChange": "e9ca95978aca2a442bfecfb8ac281f372092486a", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 84, "signatureBeforeChange": " \tpublic void _fstore(int pc, int index)", "signatureAfterChange": " \tpublic void _fstore(int pc, int index)", "diff": ["-\t\t\tgetLocalVariableName(pc, index)", "+\t\t\tgetLocalVariableName(pc, index, true)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81945f951126574ad2364381c279ad19", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "a8a55ef8028ddd96daf4473daaec157ec40ab668", "commitAfterChange": "2c2d8aa7ba193d80394867d2f6025d47f27b1f9e", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " \tpublic void test0439() throws JavaModelException", "signatureAfterChange": " \tpublic void test0439() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(sourceUnit, true);", "+\t\tASTNode result = runConversion(sourceUnit, true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81ef371c871bd5f93e7b1198fb170909", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "917603919e9d38772fd63709feb3bbda7696f523", "commitAfterChange": "fca5fd453024a315e76f840acd34b846e15423bf", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": " \tpublic boolean visit(MarkerAnnotation annotation, ClassScope scope)", "signatureAfterChange": " \tpublic boolean visit(MarkerAnnotation annotation, ClassScope scope)", "diff": ["-\t\tthis.scribe.printQualifiedReference(annotation.sourceEnd);", "+\t\tthis.scribe.printQualifiedReference(annotation.sourceEnd, false/*do not expect parenthesis*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "823f2f6a46a6f8eff80588c29421b785", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "70823bcdc247c361af65329f86a126cf9616a2fa", "commitAfterChange": "1bd4bf4c4dea2f86129d0f613a3da00767d07bfb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void testClasspathCorruption() throws CoreException", "signatureAfterChange": " public void testClasspathCorruption() throws CoreException", "diff": ["-\t\tJavaModelManager.PerProjectInfo perProjectInfo = JavaModelManager.getJavaModelManager().getPerProjectInfo(p1.getProject());", "+\t\tJavaModelManager.PerProjectInfo perProjectInfo = JavaModelManager.getJavaModelManager().getPerProjectInfo(p1.getProject(), true/*create if missing*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8452ce584ae08db0e31ff063ee32f8e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "4c05b51e282281d245149ac856aed4eb689aee0d", "commitAfterChange": "fcd8f6eb5a6e4ad47715a6f446da38772d56031c", "methodNumberBeforeChange": 190, "methodNumberAfterChange": 190, "signatureBeforeChange": " \tpublic void test0176() throws JavaModelException", "signatureAfterChange": " \tpublic void test0176() throws JavaModelException", "diff": ["-    \t\t\tthis.workingCopy);", "+    \t\t\tthis.workingCopy,", "+    \t\t\tfalse);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "846cb4b3a0096153e3ec3aa423edfba5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "74d118e989117eba0163f0f707314197db0891af", "commitAfterChange": "43cdae5117454d896e9e9cf435f63b0b509e3a4c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  static AnnotationBinding createAnnotation(IBinaryAnnotation annotationInfo, LookupEnvironment env, char[][][] missingTypeNames)", "signatureAfterChange": "  static AnnotationBinding createAnnotation(IBinaryAnnotation annotationInfo, LookupEnvironment env, char[][][] missingTypeNames)", "diff": ["-\t\tpairs[i] = new ElementValuePair(binaryPairs[i].getName(), convertMemberValue(binaryPairs[i].getValue(), env, missingTypeNames), null);", "+\t\tpairs[i] = new ElementValuePair(binaryPairs[i].getName(), convertMemberValue(binaryPairs[i].getValue(), env, missingTypeNames, false), null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84da1cfeb17f8ca672867f7e1a17d14d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/src/org/eclipse/jdt/compiler/apt/tests/Java8ElementsTests.java", "commitBeforeChange": "a1b73ab4292b1a5c4bee65eb3b80141d6400d5c6", "commitAfterChange": "0baf29c6e5669fd5c3e5f5cbc326d201ccdc5b3c", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": " \tprivate void internalTest(JavaCompiler compiler, String processor, String testMethod, String testClass, String resourceArea) throws IOException", "signatureAfterChange": " \tprivate void internalTest(JavaCompiler compiler, String processor, String testMethod, String testClass, String resourceArea) throws IOException", "diff": ["-\t\tBatchTestUtils.compileTree(compiler, options, targetFolder);", "+\t\tBatchTestUtils.compileTree(compiler, options, targetFolder, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85526641c7e43cbb64d3b33199c6123d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocAllocationExpression.java", "commitBeforeChange": "7aa41fe639eb46a740b35e612973cada9ba8267f", "commitAfterChange": "7ec8f457fa5afa1822c5c5a2c51b29731a82c4ce", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tTypeBinding internalResolveType(Scope scope)", "signatureAfterChange": "  \tTypeBinding internalResolveType(Scope scope)", "diff": ["-\t\tthis.resolvedType = scope.environment().convertToRawType(this.type.resolvedType);", "+\t\tthis.resolvedType = scope.environment().convertToRawType(this.type.resolvedType,  true /*force the conversion of enclosing types*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85792bddf7cb764b0c6ebc332a3b0420", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "d08ba3b4270a5e6046224f478b8fa1b3112cdb6f", "commitAfterChange": "167e0a563c0934d033fb860086f34607180326b0", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "\t \t \tpublic static ClassFileReader newClassFileReader(IResource resource) throws CoreException, ClassFormatException, IOException", "signatureAfterChange": "\t \t \tpublic static ClassFileReader newClassFileReader(IResource resource) throws CoreException, ClassFormatException, IOException", "diff": ["-\t\t\tin = ((IFile) resource).getContents();", "+\t\t\tin = ((IFile) resource).getContents(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "859fe06ceca33305710799bd94d02f5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "0df9f1687f9162f2dcdfeec3aed4b01b8d385a19", "commitAfterChange": "ce0f19288bc3747a9c0cb27b6996f5589afb99d1", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " protected IType resolveType(char[] packageName, char[] typeName, int acceptFlags)", "signatureAfterChange": " protected IType resolveType(char[] packageName, char[] typeName, int acceptFlags)", "diff": ["-\t\t\ttype= this.nameLookup.findType(new String(typeName), pkgs[i], false, acceptFlags, true/*consider secondary types*/);", "+\t\t\ttype= this.nameLookup.findType(new String(typeName), pkgs[i], false, acceptFlags, false, true/*consider secondary types*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85f8c29ab927a17d02a1f2551f356335", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "1ca61ba390ea54fcabd09223853d7a3d6816c249", "commitAfterChange": "5663a1e0521003a6152962cf3fce8cc9ca6a4647", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": "  \tprotected void setExtraAnnotatedDimensions(int start, int end, TypeReference type, final List extraAnnotatedDimensions, int extraDimension)", "signatureAfterChange": "  \tprotected void setExtraAnnotatedDimensions(int start, int end, TypeReference type, final List extraAnnotatedDimensions, int extraDimension)", "diff": ["-\t\t\torg.eclipse.jdt.internal.compiler.ast.Annotation[][] annotationsOnDims = type.getAnnotationsOnDimensions();", "+\t\t\torg.eclipse.jdt.internal.compiler.ast.Annotation[][] annotationsOnDims = type.getAnnotationsOnDimensions(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86470280de82af8d4d310a42d603612d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " \tpublic final TypeBinding getType(char[] name)", "signatureAfterChange": " \tpublic final TypeBinding getType(char[] name)", "diff": ["-\t\treturn (ReferenceBinding) getTypeOrPackage(name, Binding.TYPE);", "+\t\treturn (ReferenceBinding) getTypeOrPackage(name, Binding.TYPE, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8651d77e282ec0b3f0bdf831274c01b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "d7c990d50da3096d1d0c829cba02221aeda7589f", "commitAfterChange": "924bb53fdc2b8abef6daacf4b8eb0fd3e9ce7fd5", "methodNumberBeforeChange": 206, "methodNumberAfterChange": 206, "signatureBeforeChange": " \tpublic void test0192() throws JavaModelException", "signatureAfterChange": " \tpublic void test0192() throws JavaModelException", "diff": ["-\t   \tIBinding[] bindings = resolveBindings(contents, this.workingCopy);", "+\t   \tIBinding[] bindings = resolveBindings(contents, this.workingCopy, false/*don't report errors*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86c3921e116d4cb3a57c71bb405132d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "8d3c2646ec0224ab936125ae7e1adde5786e1231", "commitAfterChange": "dfa40837336948a1f985e74dddef96333913f44c", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public AnnotationBinding createAnnotation(ReferenceBinding annotationType, ElementValuePair[] pairs)", "signatureAfterChange": " public AnnotationBinding createAnnotation(ReferenceBinding annotationType, ElementValuePair[] pairs)", "diff": ["- */", "+*/", "-\treturn this.typeSystem.getAnnotationType(annotationType);", "+\treturn this.typeSystem.getAnnotationType(annotationType, true);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86fa48262e3cdd15e6724a0c5c8603e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ModelUpdater.java", "commitBeforeChange": "eb5fe9a9319b819d64960c44d91e2995208510e4", "commitAfterChange": "f13fdcb2784e02f7feccade63189561cf467d9fb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprotected void elementRemoved(Openable element)", "signatureAfterChange": " \tprotected void elementRemoved(Openable element)", "diff": ["-\t\t\t\tmanager.removePerProjectInfo(javaProject);", "+\t\t\t\tmanager.removePerProjectInfo(javaProject, true /* remove external jar files indexes and timestamps*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "873925ca56bc80f4e584db58177b61b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "d57293f4f12e1bef48b48f8eb4effbb7e4554bd3", "commitAfterChange": "80133b35a6b0bcde494737060ceebe86e07b8204", "methodNumberBeforeChange": 259, "methodNumberAfterChange": 260, "signatureBeforeChange": " protected void consumePrimaryNoNewArrayPrimitiveArrayType()", "signatureAfterChange": " protected void consumePrimaryNoNewArrayPrimitiveArrayType()", "diff": ["-\trejectIllegalTypeAnnotations(cla.type);", "+\trejectIllegalTypeAnnotations(cla.type, true /* tolerate annotations on dimensions for bug compatibility for now */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88f8f5b498913632cdf0736d85a88156", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "5ef1cc56a5d4ebd967cc5c7e76265ab37a605575", "commitAfterChange": "f5476e05b46ec9b70e1bb26b071f29e4868379b5", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tpublic static IClasspathEntry newProjectEntry( \t\t\tIPath path,  \t\t\tIPath[] accessibleFiles,  \t\t\tIPath[] nonAccessibleFiles,  \t\t\tboolean isExported)", "signatureAfterChange": " \tpublic static IClasspathEntry newProjectEntry( \t\t\tIPath path,  \t\t\tIPath[] accessibleFiles,  \t\t\tIPath[] nonAccessibleFiles,  \t\t\tboolean isExported)", "diff": ["+\t// TODO (jerome) remove before 3.1 M6", "-\t\treturn newProjectEntry(path, accessibleFiles, nonAccessibleFiles, ClasspathEntry.NO_EXTRA_ATTRIBUTES, isExported);", "+\t\treturn newProjectEntry(path, accessibleFiles, nonAccessibleFiles, true/*default is to combine access restrictions*/, ClasspathEntry.NO_EXTRA_ATTRIBUTES, isExported);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89bded14ee79e35adb91662012feb011", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest.java", "commitBeforeChange": "f681e9c0c3cc6c59d4593a72e3527dde2cae7215", "commitAfterChange": "1b6c294391226cfde58f43f4cff9ad65bab6672e", "methodNumberBeforeChange": 308, "methodNumberAfterChange": 308, "signatureBeforeChange": " \tpublic void test0306()", "signatureAfterChange": " \tpublic void test0306()", "diff": ["-\t\tASTNode result = runConversion(source, \"Object.java\", project); //$NON-NLS-1$", "+\t\tASTNode result = runConversion(source, \"Object.java\", project, true); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89f2c587dc176af3491e264c81d4b1e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "8641f54de2fbb396358e8ce74c8966d612b3bcdf", "commitAfterChange": "7f7fe7a0ba4a6e12c0bff10c900a5fe01a5f59ed", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic void selectType(ISourceType sourceType, char[] typeName, SourceTypeElementInfo[] topLevelTypes, boolean searchInEnvironment)", "signatureAfterChange": " \tpublic void selectType(ISourceType sourceType, char[] typeName, SourceTypeElementInfo[] topLevelTypes, boolean searchInEnvironment)", "diff": ["-\t\t\t\t\tthis.nameEnvironment.findTypes(typeName, false, this);", "+\t\t\t\t\tthis.nameEnvironment.findTypes(typeName, false, false,this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8acf0c10f67919997a6b9d02513712d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "277b33164a7aa6b44e8af80cbf75c89be37ef9e5", "commitAfterChange": "bca01eadc82a3abb71100149fcbedb07d33a04ad", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " public void testBug408230i() throws CoreException", "signatureAfterChange": " public void testBug408230i() throws CoreException", "diff": ["-\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\");", "+\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\", true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b5ee05e6b449165bb809b275f3462c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "a127c18eb2e0be7f3c68a60246b08a9a69e7be5d", "commitAfterChange": "771a62c1c5090742b5612a8958d0207ca0f557cc", "methodNumberBeforeChange": 123, "methodNumberAfterChange": 123, "signatureBeforeChange": " \tpublic void test0504() throws JavaModelException", "signatureAfterChange": " \tpublic void test0504() throws JavaModelException", "diff": ["-\t\tcheckSourceRange(declaration, \"public method(final int parameter);\", source);", "+\t\tcheckSourceRange(declaration, \"public method(final int parameter);\", source, true/*expectMalformed*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8baa247a63442aa19a4282d7192741bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "4c05b51e282281d245149ac856aed4eb689aee0d", "commitAfterChange": "fcd8f6eb5a6e4ad47715a6f446da38772d56031c", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 130, "signatureBeforeChange": " \tpublic void test0119() throws CoreException", "signatureAfterChange": " \tpublic void test0119() throws CoreException", "diff": ["-\t\t\tthis.workingCopy);", "+\t\t\tthis.workingCopy,", "+\t\t\tfalse);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8babe2cb3fe092a6976c85fdf9b66dbb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "7065da01531bf4c318c59206b62aa1503a948abe", "commitAfterChange": "0d303c13e0085d7aef9947e46f37c617f206a066", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  public void resolve(IGenericType[] suppliedTypes, ICompilationUnit[] sourceUnits)", "signatureAfterChange": "  public void resolve(IGenericType[] suppliedTypes, ICompilationUnit[] sourceUnits)", "diff": ["-\t\t\t\tunits[i] = SourceTypeConverter.buildCompilationUnit(new ISourceType[]{topLevelType}, false, true, lookupEnvironment.problemReporter, result);", "+\t\t\t\tunits[i] = ", "+\t\t\t\t\tSourceTypeConverter.buildCompilationUnit(", "+\t\t\t\t\t\tnew ISourceType[]{topLevelType}, ", "+\t\t\t\t\t\tfalse, // no need for field and methods", "+\t\t\t\t\t\ttrue, // need member types", "+\t\t\t\t\t\tfalse, // no need for field initialization", "+\t\t\t\t\t\tlookupEnvironment.problemReporter, ", "+\t\t\t\t\t\tresult);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c902280c4a1832ee223ffadf69d2a14", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/BatchImageBuilder.java", "commitBeforeChange": "674abcbfdf2c43bf14e65ea6f159909a170aba7f", "commitAfterChange": "cc7978cf3a57be1b542037d3f952d1a752c687f8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void build()", "signatureAfterChange": "  public void build()", "diff": ["-\t\tcleanOutputFolders();", "+\t\tcleanOutputFolders(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cffabef2b5166f81428a19b530b91cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "1302cba8a2d9e7deb014096a0cf438c7f031d8f4", "commitAfterChange": "629f19b9848dc98d62568a3c9b1db94e81597d7a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\tif ((this.genericTypeArguments[i] = this.typeArguments[i].resolveType(scope)) == null) {", "+\t\t\tif ((this.genericTypeArguments[i] = this.typeArguments[i].resolveType(scope, true /* check bounds*/)) == null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d1c21cef5dfa51c826afa7ba491aeed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedSingleTypeReference.java", "commitBeforeChange": "7aa41fe639eb46a740b35e612973cada9ba8267f", "commitAfterChange": "7ec8f457fa5afa1822c5c5a2c51b29731a82c4ce", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds)", "diff": ["-\t\t\t\t\t? (ReferenceBinding) scope.environment().convertToRawType(enclosingType)", "+\t\t\t\t\t? (ReferenceBinding) scope.environment().convertToRawType(enclosingType, false /*do not force conversion of enclosing types*/)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d38db590b4c6240cc00c12b2e138f0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/ReferenceCollection.java", "commitBeforeChange": "8264e11928da121957d70dadd3c6bf92a042c6d3", "commitAfterChange": "53c01b1adab482ab7f920989323f3cac2f399cfd", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public static char[][][] internQualifiedNames(StringSet qualifiedStrings)", "signatureAfterChange": "  public static char[][][] internQualifiedNames(StringSet qualifiedStrings)", "diff": ["-\treturn internQualifiedNames(result);", "+\treturn internQualifiedNames(result, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d3ad73c4635f4b44ace8089a4526114", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsTests.java", "commitBeforeChange": "635645f64cc3986d85427716b6b1431b69a73db1", "commitAfterChange": "52bf936fc576c8beae0884d140c2c4a36e852ace", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "  void formatUnit(String packageName, String unitName, int kind, int indentationLevel, boolean checkNull, int offset, int length, String lineSeparator) throws JavaModelException", "signatureAfterChange": "  void formatUnit(String packageName, String unitName, int kind, int indentationLevel, boolean checkNull, int offset, int length, String lineSeparator) throws JavaModelException", "diff": ["-\tformatSource(this.workingCopies[0].getSource(), outputSource, kind, indentationLevel, checkNull, offset, length, lineSeparator);", "+\tformatSource(this.workingCopies[0].getSource(), outputSource, kind, indentationLevel, checkNull, offset, length, lineSeparator, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8df1ad480535b0e4bf5b7cd35bc4f547", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "4c05b51e282281d245149ac856aed4eb689aee0d", "commitAfterChange": "fcd8f6eb5a6e4ad47715a6f446da38772d56031c", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " \tpublic void test0060() throws JavaModelException", "signatureAfterChange": " \tpublic void test0060() throws JavaModelException", "diff": ["-\t\t\tthis.workingCopy);", "+\t\t\tthis.workingCopy,", "+\t\t\tfalse);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e027af4e68897a146e76ef302b27c9e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "7cc08fd6458164ad4911bfd35d3157c5667751d0", "commitAfterChange": "d790a2ca8d6b4d448bd19ba6c16b13d5ab5db43f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic static void validateCycles(Map preferredClasspaths) throws JavaModelException", "signatureAfterChange": " \tpublic static void validateCycles(Map preferredClasspaths) throws JavaModelException", "diff": ["-\t\t\t\t\tproject.flushClasspathProblemMarkers(true, false);", "+\t\t\t\t\tproject.flushClasspathProblemMarkers(true, false, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e04057160f9e310c38a17af19f7dd94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "7aa41fe639eb46a740b35e612973cada9ba8267f", "commitAfterChange": "7ec8f457fa5afa1822c5c5a2c51b29731a82c4ce", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tpublic final Binding getTypeOrPackage(char[][] compoundName)", "signatureAfterChange": " \tpublic final Binding getTypeOrPackage(char[][] compoundName)", "diff": ["-\t\tReferenceBinding qualifiedType = (ReferenceBinding) this.environment().convertToRawType(typeBinding);", "+\t\tReferenceBinding qualifiedType = (ReferenceBinding) this.environment().convertToRawType(typeBinding, false /*do not force conversion of enclosing types*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ee84e8293372527fb86cdc5be9f7232", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest.java", "commitBeforeChange": "a8a55ef8028ddd96daf4473daaec157ec40ab668", "commitAfterChange": "2c2d8aa7ba193d80394867d2f6025d47f27b1f9e", "methodNumberBeforeChange": 297, "methodNumberAfterChange": 297, "signatureBeforeChange": " \tpublic void test0295() throws JavaModelException", "signatureAfterChange": " \tpublic void test0295() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(sourceUnit, true);", "+\t\tASTNode result = runConversion(sourceUnit, true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f3b3986276e1e8f784a06c20b52c9d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "0a2a15035b645ba08167c116bcd8da21a65ff803", "commitAfterChange": "d1d9c4b9d41b5dee6585f38ec44b96973779f261", "methodNumberBeforeChange": 136, "methodNumberAfterChange": 136, "signatureBeforeChange": " \tpublic boolean visit(WhileStatement whileStatement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(WhileStatement whileStatement, BlockScope scope)", "diff": ["-                formatLeftCurlyBrace(line, this.preferences.brace_position_for_block);", "+                formatLeftCurlyBrace(line, this.preferences.brace_position_for_block, true /* print comment */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f5aa19577452e28d800a74d3d85422a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "917603919e9d38772fd63709feb3bbda7696f523", "commitAfterChange": "fca5fd453024a315e76f840acd34b846e15423bf", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 117, "signatureBeforeChange": " \tpublic boolean visit(SingleMemberAnnotation annotation, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(SingleMemberAnnotation annotation, BlockScope scope)", "diff": ["-\t\tthis.scribe.printQualifiedReference(annotation.sourceEnd);", "+\t\tthis.scribe.printQualifiedReference(annotation.sourceEnd, false/*do not expect parenthesis*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "903c5802ee10339fb18a2fc616244311", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "\r \tpublic static IClasspathEntry getResolvedClasspathEntry(IClasspathEntry entry)", "signatureAfterChange": "\r public static IClasspathEntry getResolvedClasspathEntry(IClasspathEntry entry)", "diff": ["-\t */\r", "-\tpublic static IClasspathEntry getResolvedClasspathEntry(IClasspathEntry entry) {\r", "+ */\r", "+public static IClasspathEntry getResolvedClasspathEntry(IClasspathEntry entry) {\r", "-\t\tif (entry.getEntryKind() != IClasspathEntry.CPE_VARIABLE)\r", "-\t\t\treturn entry;\r", "+\tif (entry.getEntryKind() != IClasspathEntry.CPE_VARIABLE) return entry;\r", "-\t\tIWorkspaceRoot workspaceRoot = ResourcesPlugin.getWorkspace().getRoot();\r", "-\t\tIPath resolvedPath = JavaCore.getResolvedVariablePath(entry.getPath());\r", "-\t\tif (resolvedPath == null)\r", "-\t\t\treturn null;\r", "+\tIWorkspaceRoot workspaceRoot = ResourcesPlugin.getWorkspace().getRoot();\r", "+\tIPath resolvedPath = JavaCore.getResolvedVariablePath(entry.getPath());\r", "+\tif (resolvedPath == null) return null;\r", "-\t\tObject target = JavaModel.getTarget(workspaceRoot, resolvedPath);\r", "-\t\tif (target == null)\r", "-\t\t\treturn null;\r", "+\tObject target = JavaModel.getTarget(workspaceRoot, resolvedPath, false);\r", "+\tif (target == null) return null;\r", "-\t\t// inside the workspace\r", "-\t\tif (target instanceof IResource) {\r", "-\t\t\tIResource resolvedResource = (IResource) target;\r", "-\t\t\tif (resolvedResource != null) {\r", "-\t\t\t\tswitch (resolvedResource.getType()) {\r", "-\t\t\t\t\tcase IResource.PROJECT :\r", "-\t\t\t\t\t\treturn JavaCore.newProjectEntry(resolvedPath); // internal project\r", "-\t\t\t\t\tcase IResource.FILE :\r", "-\t\t\t\t\t\tString extension = resolvedResource.getFileExtension();\r", "-\t\t\t\t\t\tif (\"jar\".equalsIgnoreCase(extension)\r", "-\t\t\t\t\t\t\t|| \"zip\".equalsIgnoreCase(extension)) { // internal binary archive\r", "-\t\t\t\t\t\t\treturn JavaCore.newLibraryEntry(\r", "+\t// inside the workspace\r", "+\tif (target instanceof IResource){\t\r", "+\t\tIResource resolvedResource = (IResource) target;\r", "+\t\tif (resolvedResource != null){\r", "+\t\t\tswitch(resolvedResource.getType()){\r", "+\t\t\t\tcase IResource.PROJECT :\r", "+\t\t\t\t\treturn JavaCore.newProjectEntry(resolvedPath); // internal project\r", "+\t\t\t\tcase IResource.FILE :\r", "+\t\t\t\t\tString extension = resolvedResource.getFileExtension();\r", "+\t\t\t\t\tif (\"jar\"/*nonNLS*/.equalsIgnoreCase(extension) || \"zip\"/*nonNLS*/.equalsIgnoreCase(extension)){ // internal binary archive\r", "+\t\t\t\t\t\treturn JavaCore.newLibraryEntry( \r", "-\t\t\t\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentRootPath()));\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\tcase IResource.FOLDER : // internal binary folder\r", "-\t\t\t\t\t\treturn JavaCore.newLibraryEntry(\r", "+\t\t\t\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentRootPath())); \r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\tcase IResource.FOLDER :\t// internal binary folder\r", "+\t\t\t\t\treturn JavaCore.newLibraryEntry( \r", "-\t\t\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentRootPath()));\r", "-\t\t\t\t}\r", "+\t\t\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentRootPath())); \r", "-\t\t// outside the workspace\r", "-\t\tif (target instanceof File) {\r", "-\t\t\tFile externalFile = (File) target;\r", "-\t\t\tif (externalFile.isFile()) {\r", "-\t\t\t\tString fileName = externalFile.getName().toLowerCase();\r", "-\t\t\t\tif (fileName.endsWith(\".jar\")\r", "-\t\t\t\t\t|| fileName.endsWith(\".zip\")) { // external binary archive\r", "-\t\t\t\t\treturn JavaCore.newLibraryEntry(\r", "+\t}\r", "+\t// outside the workspace\r", "+\tif (target instanceof File){\r", "+\t\tFile externalFile = (File) target;\r", "+\t\tif (externalFile.isFile()){\r", "+\t\t\tString fileName = externalFile.getName().toLowerCase();\r", "+\t\t\tif (fileName.endsWith(\".jar\"/*nonNLS*/) || fileName.endsWith(\".zip\"/*nonNLS*/)){ // external binary archive\r", "+\t\t\t\treturn JavaCore.newLibraryEntry( \r", "-\t\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentRootPath()));\r", "-\t\t\t\t}\r", "-\t\t\t} else { // external binary folder\r", "-\t\t\t\treturn JavaCore.newLibraryEntry(\r", "-\t\t\t\t\tresolvedPath,\r", "-\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentPath()),\r", "-\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentRootPath()));\r", "+\t\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentRootPath())); \r", "+\t\t} else { // external binary folder\r", "+\t\t\treturn JavaCore.newLibraryEntry( \r", "+\t\t\t\t\t\tresolvedPath,\r", "+\t\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentPath()),\r", "+\t\t\t\t\t\tgetResolvedVariablePath(entry.getSourceAttachmentRootPath())); \r", "-\t\treturn null;\r", "+\treturn null;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90864add2de2d2846391ab4650ff516e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FunctionalExpression.java", "commitBeforeChange": "f8e06af2d64912de617f742baa744d8cff14ca39", "commitAfterChange": "799bcf90c7e5ed6ce45339b7f5c6f4ecccd1d29c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic TypeBinding invocationTargetType()", "signatureAfterChange": "  \tpublic TypeBinding invocationTargetType()", "diff": ["-\t\tMethodBinding sam = this.expectedType.getSingleAbstractMethod(this.enclosingScope);", "+\t\tMethodBinding sam = this.expectedType.getSingleAbstractMethod(this.enclosingScope, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90986b724260f12ef60f9bd6117ed75c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "a13ea647a4f4bc5437bbde0cf7788256ede6cc96", "commitAfterChange": "1ab17a7eba14d35875267cc7b416da000a14dc1e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t\tprivate void useNullHints(long nullHints, TypeBinding[] boundTypes, LookupEnvironment environment)", "signatureAfterChange": " \t\tprivate void useNullHints(long nullHints, TypeBinding[] boundTypes, LookupEnvironment environment)", "diff": ["-\t\t\t\t\tboundTypes[i] = boundTypes[i].unannotated();", "+\t\t\t\t\tboundTypes[i] = boundTypes[i].unannotated(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "916b86476c6f9d35b7f3c1c13a2590eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/IndexSelector.java", "commitBeforeChange": "dfd8d4647bad1465cda928961972e854fc071249", "commitAfterChange": "31c3266cfb06f3143b63cd3aca05524ef5cd1755", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r private void computeIndexes()", "signatureAfterChange": "\r private void computeIndexes()", "diff": ["-\t\t\tIIndex index = this.indexManager.getIndex(path, false);\r", "+\t\t\tIIndex index = this.indexManager.getIndex(path, true /*reuse index file*/, false /*do not create if none*/);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "917fc4eba951ff9a37ff74a0b0342782", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTestsRequestor2.java", "commitBeforeChange": "d597818a031f7015e22f49924a18cb275669d0f8", "commitAfterChange": "29e51ef33f78527537698d6cc7519e1be984f28d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic CompletionTestsRequestor2(boolean showParamNames, boolean showUniqueKeys, boolean showPositions, boolean shortContext, boolean showMissingTypes, boolean showTokenPositions)", "signatureAfterChange": " \tpublic CompletionTestsRequestor2(boolean showParamNames, boolean showUniqueKeys, boolean showPositions, boolean shortContext, boolean showMissingTypes, boolean showTokenPositions)", "diff": ["-\t\tthis(false, showParamNames, showUniqueKeys, showPositions, shortContext, showMissingTypes, showTokenPositions);", "+\t\tthis(false, showParamNames, showUniqueKeys, showPositions, shortContext, showMissingTypes, showTokenPositions, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91c818349e4c7794d5246afa4f9dd7c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/WorkingCopy.java", "commitBeforeChange": "8c242dc6f6e2b64fb542a74a9715bc899e29ca50", "commitAfterChange": "0f90ba228b8f3ba905fd955aeb78fb5cde7daa01", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r public void reconcile(IProblemRequestor problemRequestor) throws JavaModelException", "signatureAfterChange": "\r public void reconcile(IProblemRequestor problemRequestor) throws JavaModelException", "diff": ["-\tthis.makeConsistent(problemRequestor, null);\r", "+\tthis.makeConsistent(problemRequestor, true, null);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9213dacec7b3d6fe05b1050b259863a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/Tests.java", "commitBeforeChange": "e37796f522b7bb4721626cf54f6fb6424b32950c", "commitAfterChange": "cb73a34d3fbf60bb435ba470954bcb213328d377", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tprotected void expectingSpecificProblemFor(IPath root, Problem problem)", "signatureAfterChange": " \tprotected void expectingSpecificProblemFor(IPath root, Problem problem)", "diff": ["-\t\texpectingSpecificProblemsFor(root, new Problem[] { problem });", "+\t\texpectingSpecificProblemsFor(root, new Problem[] { problem }, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "921b6170743406491800dbd3f6345e99", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "0df9f1687f9162f2dcdfeec3aed4b01b8d385a19", "commitAfterChange": "ce0f19288bc3747a9c0cb27b6996f5589afb99d1", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic IType findType(String name, IPackageFragment pkg, boolean partialMatch, int acceptFlags)", "signatureAfterChange": " \tpublic IType findType(String name, IPackageFragment pkg, boolean partialMatch, int acceptFlags)", "diff": ["-\t\tseekTypes(name, pkg, partialMatch, acceptFlags, typeRequestor);", "+\t\tseekTypes(name, pkg, partialMatch, acceptFlags, typeRequestor, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9289f60a4cc29f7724a3da366f2e0ac6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "8cb541445a60df0cc8244f7bb091d1f12632b37f", "commitAfterChange": "7cb036f969007a8d8602358c2ef2fc801f7c2a88", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprotected void seekTypesInType(String prefix, int firstDot, IType type, IJavaElementRequestor requestor, int acceptFlags)", "signatureAfterChange": " \tprotected void seekTypesInType(String prefix, int firstDot, IType type, IJavaElementRequestor requestor, int acceptFlags)", "diff": ["-\t\t\t\t\tif (acceptType(memberType, acceptFlags)) ", "+\t\t\t\t\tif (acceptType(memberType, acceptFlags, true/*a source type*/)) "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92dd971a9f1fffe083ea2c0792ccd178", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "9850e4ae951b6df5bc8bfe162d8a3e3e67beff62", "commitAfterChange": "e9ca95978aca2a442bfecfb8ac281f372092486a", "methodNumberBeforeChange": 123, "methodNumberAfterChange": 124, "signatureBeforeChange": " \tpublic void _iinc(int pc, int index, int _const)", "signatureAfterChange": " \tpublic void _iinc(int pc, int index, int _const)", "diff": ["-\t\t\tgetLocalVariableName(pc, index)", "+\t\t\tgetLocalVariableName(pc, index, false)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92e28d465c281b3c319b92dae16de314", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedSingleTypeReference.java", "commitBeforeChange": "1302cba8a2d9e7deb014096a0cf438c7f031d8f4", "commitAfterChange": "629f19b9848dc98d62568a3c9b1db94e81597d7a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\t \t \tpublic TypeBinding resolveTypeEnclosing(BlockScope scope, ReferenceBinding enclosingType)", "signatureAfterChange": "\t \t \tpublic TypeBinding resolveTypeEnclosing(BlockScope scope, ReferenceBinding enclosingType)", "diff": ["-\t    return internalResolveType(scope, enclosingType);", "+\t    return internalResolveType(scope, enclosingType, true/*check bounds*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "941d699766c39a6536d03568943e45ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "a13ea647a4f4bc5437bbde0cf7788256ede6cc96", "commitAfterChange": "1ab17a7eba14d35875267cc7b416da000a14dc1e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tvoid validateNullAnnotations()", "signatureAfterChange": " \tvoid validateNullAnnotations()", "diff": ["-\t\t\t\t\tthis.binding.returnType = this.binding.returnType.unannotated();", "+\t\t\t\t\tthis.binding.returnType = this.binding.returnType.unannotated(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "943c45e4840867d2cd9a5af532175dd2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/src/org/eclipse/jdt/compiler/apt/tests/BatchTestUtils.java", "commitBeforeChange": "8a17153af69ddcddcc6ac5bd94649f0b523f5b72", "commitAfterChange": "a6fddb558f09852d0df8b3655125e6a25d3ce37b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static void compileOneClass(JavaCompiler compiler, List<String> options, File inputFile, boolean useJLS8Processors)", "signatureAfterChange": " \tpublic static void compileOneClass(JavaCompiler compiler, List<String> options, File inputFile, boolean useJLS8Processors)", "diff": ["-\t\taddProcessorPaths(options, useJLS8Processors);", "+\t\taddProcessorPaths(options, useJLS8Processors, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96fbe45aa508f32500307043b24f9b9b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "58aaea35ae4c64a4ecebe06d6b1ab1679e04698a", "commitAfterChange": "d5df66f62f879926d0ab37840f8644f7133a2a54", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\tif (isMethodUseDeprecated(binding, scope))", "+\tif (isMethodUseDeprecated(binding, scope, true))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97387741def13fae559f0629d1754e98", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "13087273f518893bae9662fee0f01bf280448014", "commitAfterChange": "3dd2d61115a71847147cc1629ac7b4900ba8625e", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " int internalKind() throws JavaModelException", "signatureAfterChange": " int internalKind() throws JavaModelException", "diff": ["-\t\tinfo = (PackageFragmentRootInfo) openWhenClosed(createElementInfo(), null);", "+\t\tinfo = (PackageFragmentRootInfo) openWhenClosed(createElementInfo(), false, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98a6f14242b3658220a4eb025fa09cf8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "706d05b886f888f588421e058e652ee36abfc780", "commitAfterChange": "1e5960a8e1d6d5a1af8d629bddab71c46e5ed5a1", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 131, "signatureBeforeChange": "  \tprivate void addToResult(IClasspathEntry rawEntry, IClasspathEntry resolvedEntry, ResolvedClasspath result, \t\t\tLinkedHashSet resolvedEntries, ExternalFoldersManager externalFoldersManager, \t\t\tMap oldChainedEntriesMap, boolean addAsChainedEntry)", "signatureAfterChange": "  \tprivate void addToResult(IClasspathEntry rawEntry, IClasspathEntry resolvedEntry, ResolvedClasspath result, \t\t\tLinkedHashSet resolvedEntries, ExternalFoldersManager externalFoldersManager, \t\t\tMap oldChainedEntriesMap, boolean addAsChainedEntry)", "diff": ["-\t\t\texternalFoldersManager.addFolder(resolvedPath); // no-op if not an external folder or if already registered", "+\t\t\texternalFoldersManager.addFolder(resolvedPath, true/*scheduleForCreation*/); // no-op if not an external folder or if already registered"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a6c95fd79a46549c14c0b5694bc69e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "5ea0ae6c0d5a6162940bd458d3ead5d427058c35", "commitAfterChange": "2ad69f466c4df4c3e626fb0d9831c536de8ea5c0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  protected void addAffectedSourceFiles(StringSet qualifiedSet, StringSet simpleSet, StringSet affectedTypes)", "signatureAfterChange": "  protected void addAffectedSourceFiles(StringSet qualifiedSet, StringSet simpleSet, StringSet affectedTypes)", "diff": ["-\t\t\t\tSourceFile sourceFile = findSourceFile(file);", "+\t\t\t\tSourceFile sourceFile = findSourceFile(file, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a8d083804a1c8597c235a091597bc2a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "1ca61ba390ea54fcabd09223853d7a3d6816c249", "commitAfterChange": "5663a1e0521003a6152962cf3fce8cc9ca6a4647", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tprivate void formatDimensions(TypeReference typeReference, int anchor, int count, boolean spaceBeforeAnnotation)", "signatureAfterChange": "  \tprivate void formatDimensions(TypeReference typeReference, int anchor, int count, boolean spaceBeforeAnnotation)", "diff": ["-\t\t\tAnnotation[][] annotationsOnDimensions = typeReference != null ? typeReference.getAnnotationsOnDimensions() : null;", "+\t\t\tAnnotation[][] annotationsOnDimensions = typeReference != null ? typeReference.getAnnotationsOnDimensions(true) : null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c525f679fee6e5ac2ca1ba0bced1f5e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "9850e4ae951b6df5bc8bfe162d8a3e3e67beff62", "commitAfterChange": "e9ca95978aca2a442bfecfb8ac281f372092486a", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 51, "signatureBeforeChange": " \tpublic void _dstore(int pc, int index)", "signatureAfterChange": " \tpublic void _dstore(int pc, int index)", "diff": ["-\t\t\tgetLocalVariableName(pc, index)", "+\t\t\tgetLocalVariableName(pc, index, true)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c74c12381d5ed04c1f99d0b01ddffb2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocQualifiedTypeReference.java", "commitBeforeChange": "1302cba8a2d9e7deb014096a0cf438c7f031d8f4", "commitAfterChange": "629f19b9848dc98d62568a3c9b1db94e81597d7a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic TypeBinding resolveType(ClassScope classScope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(ClassScope classScope)", "diff": ["-\t\treturn internalResolveType(classScope);", "+\t\treturn internalResolveType(classScope, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c8f2eafdcb5b43bbd0d1ba835bb5921", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "a127c18eb2e0be7f3c68a60246b08a9a69e7be5d", "commitAfterChange": "771a62c1c5090742b5612a8958d0207ca0f557cc", "methodNumberBeforeChange": 142, "methodNumberAfterChange": 142, "signatureBeforeChange": "     public void test0129() throws CoreException", "signatureAfterChange": "     public void test0129() throws CoreException", "diff": ["-        checkSourceRange(constructorInvocation, \"x.<String> this();\", source);", "+        checkSourceRange(constructorInvocation, \"x.<String> this();\", source, true/*expectMalformed*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ca70631e8b54df93576eb0212dd2a99", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "4c05b51e282281d245149ac856aed4eb689aee0d", "commitAfterChange": "fcd8f6eb5a6e4ad47715a6f446da38772d56031c", "methodNumberBeforeChange": 202, "methodNumberAfterChange": 202, "signatureBeforeChange": " \tpublic void test0188() throws JavaModelException", "signatureAfterChange": " \tpublic void test0188() throws JavaModelException", "diff": ["-    \t\t\tthis.workingCopy);", "+    \t\t\tthis.workingCopy,", "+    \t\t\tfalse);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cbf72b30ca24a9b92479210d1df7d2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetAllocationExpression.java", "commitBeforeChange": "1302cba8a2d9e7deb014096a0cf438c7f031d8f4", "commitAfterChange": "629f19b9848dc98d62568a3c9b1db94e81597d7a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\tthis.resolvedType = this.type.resolveType(scope); // will check for null after args are resolved", "+\tthis.resolvedType = this.type.resolveType(scope, true /* check bounds*/); // will check for null after args are resolved"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9db87675319f4e8afd07bb6dbacade0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "9d71feb0c4dc07666b87c11c763ba1f67e99952a", "commitAfterChange": "de0a9fa3c1e69490ad1268e62e8c28d4b0e12f21", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r \r private boolean isWorthBuilding() throws CoreException", "signatureAfterChange": "\r \r private boolean isWorthBuilding() throws CoreException", "diff": ["+\t\r", "-\tIProject[] requiredProjects = getRequiredProjects();\r", "+\tIProject[] requiredProjects = getRequiredProjects(false);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dbbfeb3e57ea992ac34d170cc877446", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "9850e4ae951b6df5bc8bfe162d8a3e3e67beff62", "commitAfterChange": "e9ca95978aca2a442bfecfb8ac281f372092486a", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 75, "signatureBeforeChange": " \tpublic void _fload(int pc, int index)", "signatureAfterChange": " \tpublic void _fload(int pc, int index)", "diff": ["-\t\t\tgetLocalVariableName(pc, index)", "+\t\t\tgetLocalVariableName(pc, index, true)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f419a0e6505a6d0ac77be81d401d6c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "e40a14518c878498ad39595017fa5c41fd3a84fd", "commitAfterChange": "0db36dd259a6320ea4c536f5dd076aa73d4d8836", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic synchronized FileGenerationResult generateFileDuringBuild( \t\t\tIFile parentFile, \t\t\tIJavaProject javaProject, \t\t\tString typeName,  \t\t\tString contents,  \t\t\tIProgressMonitor progressMonitor, \t\t\tString charsetName )  \t\tthrows CoreException, UnsupportedEncodingException", "signatureAfterChange": " \tpublic synchronized FileGenerationResult generateFileDuringBuild( \t\t\tIFile parentFile, \t\t\tIJavaProject javaProject, \t\t\tString typeName,  \t\t\tString contents,  \t\t\tIProgressMonitor progressMonitor, \t\t\tString charsetName )  \t\tthrows CoreException, UnsupportedEncodingException", "diff": ["-\t\t\tIFile file = getIFileForTypeName( typeName, javaProject, progressMonitor );", "+\t\t\tIFile file = getIFileForTypeName( typeName, javaProject, true, progressMonitor );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a015b558f4c26fbbd7027c2cabb8198f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/FileSystem.java", "commitBeforeChange": "639f95fb93a85f023afe828b77bfc8cd4dbf811c", "commitAfterChange": "8a3cbdf1db434ade029724481c4ce0338046043a", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": " public NameEnvironmentAnswer findType(char[][] compoundName)", "signatureAfterChange": " public NameEnvironmentAnswer findType(char[][] compoundName)", "diff": ["-\t\t\tcompoundName[compoundName.length - 1]);", "+\t\t\tcompoundName[compoundName.length - 1],", "+\t\t\tfalse);", "+\treturn null;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a04b29fb1436c400cb2778bcebb464af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocMessageSend.java", "commitBeforeChange": "58aaea35ae4c64a4ecebe06d6b1ab1679e04698a", "commitAfterChange": "d5df66f62f879926d0ab37840f8644f7133a2a54", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\tif (isMethodUseDeprecated(this.binding, scope)) {", "+\t\tif (isMethodUseDeprecated(this.binding, scope, true)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1821088a2ca957c3356c2d477ae1a07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "628cadf5744ab383e80afb2f9e63de19db722144", "commitAfterChange": "06412e4ebddd7aaa1f5bc2a2fbe06678982f22b4", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tif ((this.codegenBinding = this.binding = scope.getBinding(token, bits & RestrictiveFlagMASK, this)).isValidBinding()) {", "+\t\tif ((this.codegenBinding = this.binding = scope.getBinding(token, bits & RestrictiveFlagMASK, this, true /*resolve*/)).isValidBinding()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1aeebee3e5eef3bc194ce302fc73b44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "277b33164a7aa6b44e8af80cbf75c89be37ef9e5", "commitAfterChange": "bca01eadc82a3abb71100149fcbedb07d33a04ad", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " public void testBug408230a() throws CoreException", "signatureAfterChange": " public void testBug408230a() throws CoreException", "diff": ["-\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\");", "+\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\", true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2b8eb6292142f2f18f27bc4d8311f4d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "7ad33f26eedd4780b8e7bafe9288f3217000d5fd", "commitAfterChange": "011b2686c2cb0787dd0d6632931ecc153c5a5666", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 131, "signatureBeforeChange": " \tpublic boolean visit(SuperMethodInvocation node)", "signatureAfterChange": " \tpublic boolean visit(SuperMethodInvocation node)", "diff": ["-\t\t\t\t\trewriteOptionalTypeParameters(node, SuperMethodInvocation.TYPE_ARGUMENTS_PROPERTY, pos, \"\"); //$NON-NLS-1$", "+\t\t\t\t\trewriteOptionalTypeParameters(node, SuperMethodInvocation.TYPE_ARGUMENTS_PROPERTY, pos, \"\", false); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a44c52cd5e7d23cc35438e620d493bc8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "0a2a15035b645ba08167c116bcd8da21a65ff803", "commitAfterChange": "d1d9c4b9d41b5dee6585f38ec44b96973779f261", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": " \tpublic boolean visit( \t\tMethodDeclaration methodDeclaration, \t\tClassScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tMethodDeclaration methodDeclaration, \t\tClassScope scope)", "diff": ["-            formatLeftCurlyBrace(line, method_declaration_brace);", "+            formatLeftCurlyBrace(line, method_declaration_brace, false /* do not print comment yet, it will be done on formatOpeningBrace */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6e8b1820a306a53d1919df614489b3d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "7065da01531bf4c318c59206b62aa1503a948abe", "commitAfterChange": "0d303c13e0085d7aef9947e46f37c617f206a066", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void accept(ISourceType[] sourceTypes, PackageBinding packageBinding)", "signatureAfterChange": " public void accept(ISourceType[] sourceTypes, PackageBinding packageBinding)", "diff": ["-\t\tSourceTypeConverter.buildCompilationUnit(new ISourceType[] {sourceType}, false, true, lookupEnvironment.problemReporter, result);", "+\t\tSourceTypeConverter.buildCompilationUnit(", "+\t\t\tnew ISourceType[] {sourceType}, ", "+\t\t\tfalse, // no need for field and methods", "+\t\t\ttrue, // need member types", "+\t\t\tfalse, // no need for field initialization", "+\t\t\tlookupEnvironment.problemReporter, ", "+\t\t\tresult);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8053ccc39227f55e0176b5ac1a2a745", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "13badd688be686ebb5ba17a06b5117d9f7db22e6", "commitAfterChange": "678bd63c535ed58308236db21b34dad57015766d", "methodNumberBeforeChange": 256, "methodNumberAfterChange": 257, "signatureBeforeChange": " protected void consumePrimaryNoNewArrayPrimitiveArrayType()", "signatureAfterChange": " protected void consumePrimaryNoNewArrayPrimitiveArrayType()", "diff": ["-\trejectIllegalTypeAnnotations(cla.type);", "+\trejectIllegalTypeAnnotations(cla.type, true /* tolerate annotations on dimensions for bug compatibility for now */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8d04eec9265a1b11e502c4168e97e5f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/OrPattern.java", "commitBeforeChange": "8538fc408d08fb084c1462f6b94d5674f6422ccd", "commitAfterChange": "393bdec9ec7581654b4aa4ee60edc770ef37cb11", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " protected void matchLevelAndReportImportRef(ImportReference importRef, Binding binding, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchLevelAndReportImportRef(ImportReference importRef, Binding binding, MatchLocator locator) throws CoreException", "diff": ["-\tSearchPattern closestPattern = findClosestPattern(importRef);", "+\tSearchPattern closestPattern = findClosestPattern(importRef, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8d12c77f453d672193fab3c47443320", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "d25d8e2aefb1fe7881a3b669cacd403afc528b1a", "commitAfterChange": "c768bb705d25a055607160ce11d239f196ca5653", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "  protected IProject[] build(int kind, Map ignored, IProgressMonitor monitor) throws CoreException", "signatureAfterChange": "  protected IProject[] build(int kind, Map ignored, IProgressMonitor monitor) throws CoreException", "diff": ["-\t\tkind = initializeBuilder(kind);", "+\t\tkind = initializeBuilder(kind, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8f0809e690dfe83beeba072827cb4e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "277b33164a7aa6b44e8af80cbf75c89be37ef9e5", "commitAfterChange": "bca01eadc82a3abb71100149fcbedb07d33a04ad", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " public void testBug408230f() throws CoreException", "signatureAfterChange": " public void testBug408230f() throws CoreException", "diff": ["-\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\");", "+\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\", true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa30d680d22c71417b737131d50bba89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "4c05b51e282281d245149ac856aed4eb689aee0d", "commitAfterChange": "fcd8f6eb5a6e4ad47715a6f446da38772d56031c", "methodNumberBeforeChange": 203, "methodNumberAfterChange": 203, "signatureBeforeChange": "  \tpublic void test0189() throws CoreException, IOException", "signatureAfterChange": "  \tpublic void test0189() throws CoreException, IOException", "diff": ["-\t\t\t\tthis.workingCopy);", "+\t\t\t\tthis.workingCopy,", "+\t\t\t\tfalse);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa4f1a4a3725d27ffee7edbcf38f9af5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "5c94036938fe400e122792407c5c35d8914790e5", "commitAfterChange": "e002812d8385bfcab83bbcee92fbb80489aadeb5", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " \tpublic int generateMethodInfoAttributes(MethodBinding methodBinding)", "signatureAfterChange": " \tpublic int generateMethodInfoAttributes(MethodBinding methodBinding)", "diff": ["-\t\t\t\t\tattributesNumber += generateRuntimeAnnotations(annotations);", "+\t\t\t\t\tattributesNumber += generateRuntimeAnnotations(annotations, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aaaa61070e6ea78d538e60c5d7864847", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "aa23b2a14c48eb2e68c0b76ca03ad3cd13f67188", "commitAfterChange": "97ecea4988b025b105080d33f2f05e43659a9d0a", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 119, "signatureBeforeChange": "  \tpublic int parameterCompatibilityLevel(MethodBinding method, TypeBinding[] arguments)", "signatureAfterChange": "  \tpublic int parameterCompatibilityLevel(MethodBinding method, TypeBinding[] arguments)", "diff": ["-\t\treturn parameterCompatibilityLevel(method, arguments, false);", "+\t\treturn parameterCompatibilityLevel(method, arguments, false, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abb3258d5131a7c950d31797cd34bbc7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "991fd6e4b6634483ff414608784017adef86e93b", "commitAfterChange": "88f4789ab87b5741bd84f761926c87f3851c7700", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public boolean existsUsingJarTypeCache()", "signatureAfterChange": " public boolean existsUsingJarTypeCache()", "diff": ["-\t\t\tinfo = getJarBinaryTypeInfo((PackageFragment) getParent());", "+\t\t\tinfo = getJarBinaryTypeInfo((PackageFragment) getParent(), true/*fully initialize so as to not keep a reference to the byte array*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abc649aa99234ea2420b082c35dd40b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ChangeClasspathOperation.java", "commitBeforeChange": "f39e3e40a8fb480e71912552d3976827814676e5", "commitAfterChange": "cae1ac0076053182a150a9a6566741ab9c075217", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprotected void classpathChanged(ClasspathChange change) throws JavaModelException", "signatureAfterChange": " \tprotected void classpathChanged(ClasspathChange change) throws JavaModelException", "diff": ["-\t\t\tint result = change.generateDelta(delta);", "+\t\t\tint result = change.generateDelta(delta, true/*add classpath change*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abe826e8848c9c7eb78c6606de12a03b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/RawTypeBinding.java", "commitBeforeChange": "7aa41fe639eb46a740b35e612973cada9ba8267f", "commitAfterChange": "7ec8f457fa5afa1822c5c5a2c51b29731a82c4ce", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\t \t \tprotected void initializeArguments()", "signatureAfterChange": "\t \t \tprotected void initializeArguments()", "diff": ["-\t\t    typeArguments[i] = this.environment.convertToRawType(typeVariables[i].erasure());", "+\t\t    typeArguments[i] = this.environment.convertToRawType(typeVariables[i].erasure(), false /*do not force conversion of enclosing types*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac077e2fcab33f3b0eec2e738571e464", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "d0f6b932bd2521f678bde4cdb96cb1190442e2f1", "commitAfterChange": "84bbf5d10f91b2c7f38d4b1250126f235793a08e", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 128, "signatureBeforeChange": " \tpublic boolean visit(SuperConstructorInvocation node)", "signatureAfterChange": " \tpublic boolean visit(SuperConstructorInvocation node)", "diff": ["-\t\t\tpos= rewriteOptionalTypeParameters(node, SuperConstructorInvocation.TYPE_ARGUMENTS_PROPERTY, pos, \"\", false); //$NON-NLS-1$", "+\t\t\tpos= rewriteOptionalTypeParameters(node, SuperConstructorInvocation.TYPE_ARGUMENTS_PROPERTY, pos, \"\", false, false); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad38430178b68d6f60c6e7f1aa53f951", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "0123af92e87cd6973f84900ca6492fde5723608b", "commitAfterChange": "7c94615c7f1a34c1f25e73121dcbe10e789a0e6c", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": " \tpublic void test0095() throws JavaModelException", "signatureAfterChange": " \tpublic void test0095() throws JavaModelException", "diff": ["-\t\t\t\tworkingCopy);", "+\t\t\t\tworkingCopy,", "+\t\t\t\tfalse);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adca618bb75414cf72541a4c556791a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "7065da01531bf4c318c59206b62aa1503a948abe", "commitAfterChange": "0d303c13e0085d7aef9947e46f37c617f206a066", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  public void resolve(IGenericType suppliedType)", "signatureAfterChange": "  public void resolve(IGenericType suppliedType)", "diff": ["-\t\t\t\tSourceTypeConverter.buildCompilationUnit(new ISourceType[]{topLevelType}, false, true, lookupEnvironment.problemReporter, result);", "+\t\t\t\tSourceTypeConverter.buildCompilationUnit(", "+\t\t\t\t\tnew ISourceType[]{topLevelType}, ", "+\t\t\t\t\tfalse, // no need for field and methods", "+\t\t\t\t\ttrue, // need member types", "+\t\t\t\t\tfalse, // no need for field initialization", "+\t\t\t\t\tlookupEnvironment.problemReporter, ", "+\t\t\t\t\tresult);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae98697b69c1030e9b5d23f79ea134f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/AbstractASTTests.java", "commitBeforeChange": "a8a55ef8028ddd96daf4473daaec157ec40ab668", "commitAfterChange": "2c2d8aa7ba193d80394867d2f6025d47f27b1f9e", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tprotected ASTNode[] buildASTs(String newContents, ICompilationUnit cu, boolean reportErrors) throws JavaModelException", "signatureAfterChange": " \tprotected ASTNode[] buildASTs(String newContents, ICompilationUnit cu, boolean reportErrors) throws JavaModelException", "diff": ["-\t\treturn buildASTs(newContents, cu, reportErrors, false);", "+\t\treturn buildASTs(newContents, cu, reportErrors, false, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aef424b66d4be127fc0cee86e5488085", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "71ab6b3956db9fea4a8f81e891e05ac4d44d96d9", "commitAfterChange": "6720ac2482e494a3ed8f387ef6b8945b6d3454d0", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "\r public Object[] getExactEmulationPath(ReferenceBinding targetEnclosingType)", "signatureAfterChange": "\r public Object[] getExactEmulationPath(ReferenceBinding targetEnclosingType)", "diff": ["-\t\t\tpath[0] = sourceType.getSyntheticField((SourceTypeBinding)currentType, this);\r", "+\t\t\tpath[0] = sourceType.getSyntheticField((SourceTypeBinding)currentType, this, true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afd44b6fe3013f68efe70835e72cd896", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/src/org/eclipse/jdt/compiler/apt/tests/FilerTests.java", "commitBeforeChange": "ff2b96761b3897e8f6c8feeb8c31198c182dd190", "commitAfterChange": "356c2ad24af0440f1263086b9145e07c8eeb9fab", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void testElementWithEclipseCompiler() throws IOException", "signatureAfterChange": " \tpublic void testElementWithEclipseCompiler() throws IOException", "diff": ["-\t\tinternalTestCreateResource(compiler);", "+\t\tinternalTestCreateResource(compiler, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0be8ed91400ef3acfd07748862710e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeNamesCollector.java", "commitBeforeChange": "7065da01531bf4c318c59206b62aa1503a948abe", "commitAfterChange": "0d303c13e0085d7aef9947e46f37c617f206a066", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void accept(ISourceType[] sourceTypes, PackageBinding packageBinding)", "signatureAfterChange": " public void accept(ISourceType[] sourceTypes, PackageBinding packageBinding)", "diff": ["-\t\tSourceTypeConverter.buildCompilationUnit(sourceTypes, false, true, this.locator.lookupEnvironment.problemReporter, result);", "+\t\tSourceTypeConverter.buildCompilationUnit(", "+\t\t\tsourceTypes, ", "+\t\t\tfalse, // no need for field and methods", "+\t\t\ttrue, // need member types", "+\t\t\tfalse, // no need for field initialization", "+\t\t\tthis.locator.lookupEnvironment.problemReporter, ", "+\t\t\tresult);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0e4aac9213fbf25294c6df2b73c10ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "7aa41fe639eb46a740b35e612973cada9ba8267f", "commitAfterChange": "7ec8f457fa5afa1822c5c5a2c51b29731a82c4ce", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " TypeBinding getTypeFromTypeSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType)", "signatureAfterChange": " TypeBinding getTypeFromTypeSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType)", "diff": ["-\t\tactualEnclosing = (ReferenceBinding) convertToRawType(actualEnclosing);", "+\t\tactualEnclosing = (ReferenceBinding) convertToRawType(actualEnclosing, false /*do not force conversion of enclosing types*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1e4b90521cb3d00f3186152b0cb9219", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "a127c18eb2e0be7f3c68a60246b08a9a69e7be5d", "commitAfterChange": "771a62c1c5090742b5612a8958d0207ca0f557cc", "methodNumberBeforeChange": 123, "methodNumberAfterChange": 123, "signatureBeforeChange": " \tpublic void test0504() throws JavaModelException", "signatureAfterChange": " \tpublic void test0504() throws JavaModelException", "diff": ["-\t\tcheckSourceRange(declaration, \"public method(final int parameter);\", source);", "+\t\tcheckSourceRange(declaration, \"public method(final int parameter);\", source, true/*expectMalformed*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1e712499600d612fbbcb30f0599f820", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "2325884dde9438b06c0c79c1dfd33a091d106072", "commitAfterChange": "1826d0fe5b887e907f5db40f2da4d23b5ef1c8d6", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t \tvoid connectTypeHierarchy()", "signatureAfterChange": " \t \tvoid connectTypeHierarchy()", "diff": ["-\t\t\tnoProblems &= connectTypeVariables(referenceContext.typeParameters);", "+\t\t\tnoProblems &= connectTypeVariables(referenceContext.typeParameters, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1fafa4d4faf64edb6cf1798cd0e400e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "9850e4ae951b6df5bc8bfe162d8a3e3e67beff62", "commitAfterChange": "e9ca95978aca2a442bfecfb8ac281f372092486a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void _aload(int pc, int index)", "signatureAfterChange": " \tpublic void _aload(int pc, int index)", "diff": ["-\t\t\tgetLocalVariableName(pc, index)", "+\t\t\tgetLocalVariableName(pc, index, true)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b20d5d0f9b9043a2058a29f79ca03cbc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "40ad9904e939ba54abece52421044021edd6e1c0", "commitAfterChange": "8d45cb26fc5ad244f93e8632d761d46ad4a120cf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\t\tflowInfo = FakedTrackingVariable.markPassedToOutside(currentScope, this.arguments[i], flowInfo);", "+\t\t\t\tflowInfo = FakedTrackingVariable.markPassedToOutside(currentScope, this.arguments[i], flowInfo, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b29fe12055e46273e7835b3fecb9a667", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayAllocationExpression.java", "commitBeforeChange": "1302cba8a2d9e7deb014096a0cf438c7f031d8f4", "commitAfterChange": "629f19b9848dc98d62568a3c9b1db94e81597d7a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tTypeBinding referenceType = type.resolveType(scope);", "+\t\tTypeBinding referenceType = type.resolveType(scope, true /* check bounds*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4a390a07ddd01b62cd5b71f8b278864", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelOperation.java", "commitBeforeChange": "14d627dce82d56cfd2be03743c28c7ac3736df42", "commitAfterChange": "98d42611e634b1db50f18796da74a25e56b7b155", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tpublic void run(IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tpublic void run(IProgressMonitor monitor) throws CoreException", "diff": ["-\t\t\t\t\tJavaModelManager.getDeltaState().initializeRoots();", "+\t\t\t\t\tJavaModelManager.getDeltaState().initializeRoots(false/*not initiAfterLoad*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4b26a894c5c67d34c3cde68dc2bd1a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "7aa41fe639eb46a740b35e612973cada9ba8267f", "commitAfterChange": "7ec8f457fa5afa1822c5c5a2c51b29731a82c4ce", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \t \tpublic void consumeRawType()", "signatureAfterChange": " \t \tpublic void consumeRawType()", "diff": ["-\t\tthis.typeBinding = this.environment.convertToRawType(this.typeBinding);", "+\t\tthis.typeBinding = this.environment.convertToRawType(this.typeBinding, false /*do not force conversion of enclosing types*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4b86b232b1a23229becbf02c06f8027", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Argument.java", "commitBeforeChange": "628cadf5744ab383e80afb2f9e63de19db722144", "commitAfterChange": "06412e4ebddd7aaa1f5bc2a2fbe06678982f22b4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\t  \tpublic TypeBinding resolveForCatch(BlockScope scope)", "signatureAfterChange": "\t  \tpublic TypeBinding resolveForCatch(BlockScope scope)", "diff": ["-\t\tBinding existingVariable = scope.getBinding(name, BindingIds.VARIABLE, this);", "+\t\tBinding existingVariable = scope.getBinding(name, BindingIds.VARIABLE, this, false /*do not resolve hidden field*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b53ad9a0e35d8b3faaf1fbf20a3cda32", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionNodeFound.java", "commitBeforeChange": "1b98b39107e931dc0893df1da7a410cad5cc4745", "commitAfterChange": "9635fd418f2d5b55fe3d3dc4ccb7797a5daf3a53", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": " public CompletionNodeFound(ASTNode astNode, Scope scope)", "signatureAfterChange": " public CompletionNodeFound(ASTNode astNode, Scope scope)", "diff": ["-\tthis(astNode, null, scope);", "+\tthis(astNode, null, scope, false);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b55d91e5813d96a5737e53f5d7282a8a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "917603919e9d38772fd63709feb3bbda7696f523", "commitAfterChange": "fca5fd453024a315e76f840acd34b846e15423bf", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": " \tpublic boolean visit(NormalAnnotation annotation, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(NormalAnnotation annotation, BlockScope scope)", "diff": ["-\t\tthis.scribe.printQualifiedReference(annotation.sourceEnd);", "+\t\tthis.scribe.printQualifiedReference(annotation.sourceEnd, false/*do not expect parenthesis*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b86fb0221141adf66f9f87f7d0f24e40", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "5c94036938fe400e122792407c5c35d8914790e5", "commitAfterChange": "e002812d8385bfcab83bbcee92fbb80489aadeb5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprivate int addFieldAttributes(FieldBinding fieldBinding, int fieldAttributeOffset)", "signatureAfterChange": "  \tprivate int addFieldAttributes(FieldBinding fieldBinding, int fieldAttributeOffset)", "diff": ["-\t\t\t\t\tattributesNumber += generateRuntimeAnnotations(annotations);", "+\t\t\t\t\tattributesNumber += generateRuntimeAnnotations(annotations, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b90c72d7fd3993d10391ffd949e7da2c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetAllocationExpression.java", "commitBeforeChange": "58aaea35ae4c64a4ecebe06d6b1ab1679e04698a", "commitAfterChange": "d5df66f62f879926d0ab37840f8644f7133a2a54", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\tif (isMethodUseDeprecated(this.binding, scope)) {", "+\tif (isMethodUseDeprecated(this.binding, scope, true)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b97678223f25243e61254cca959a3f15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "f681e9c0c3cc6c59d4593a72e3527dde2cae7215", "commitAfterChange": "1b6c294391226cfde58f43f4cff9ad65bab6672e", "methodNumberBeforeChange": 169, "methodNumberAfterChange": 169, "signatureBeforeChange": " \tpublic void test0540()", "signatureAfterChange": " \tpublic void test0540()", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3, source, \"Test.java\", project, options); //$NON-NLS-1$", "+\t\tASTNode result = runConversion(AST.JLS3, source, \"Test.java\", project, options, true); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba7bcd1fa43f36393d7a7554af99ca57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/InstanceOfExpression.java", "commitBeforeChange": "1302cba8a2d9e7deb014096a0cf438c7f031d8f4", "commitAfterChange": "629f19b9848dc98d62568a3c9b1db94e81597d7a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tTypeBinding checkedType = type.resolveType(scope);", "+\t\tTypeBinding checkedType = type.resolveType(scope, true /* check bounds*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bacfc39d434379814fe3a28824142067", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "4e8e5a98cf0190fbfa5945ebb361f51b261ba210", "commitAfterChange": "d245300e4e786a6fa7e5da9bef5c249b7208c09a", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 72, "signatureBeforeChange": " \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, InvocationSite invocationSite)", "signatureAfterChange": " \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, InvocationSite invocationSite)", "diff": ["-\t\t\t\tMethodBinding compatibleMethod = computeCompatibleMethod(visible[j], method.parameters, invocationSite);", "+\t\t\t\tMethodBinding compatibleMethod = computeCompatibleMethod(visible[j], method.parameters, invocationSite, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bae952796d540812ee35e659e8a28343", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "7ad33f26eedd4780b8e7bafe9288f3217000d5fd", "commitAfterChange": "011b2686c2cb0787dd0d6632931ecc153c5a5666", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": " \tpublic boolean visit(ClassInstanceCreation node)", "signatureAfterChange": " \tpublic boolean visit(ClassInstanceCreation node)", "diff": ["-\t\t\t\t\trewriteOptionalTypeParameters(node, ClassInstanceCreation.TYPE_ARGUMENTS_PROPERTY, pos, \" \"); //$NON-NLS-1$", "+\t\t\t\t\trewriteOptionalTypeParameters(node, ClassInstanceCreation.TYPE_ARGUMENTS_PROPERTY, pos, \" \", true); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb3af5fea7377aab7cfbe3764aa71402", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeReference.java", "commitBeforeChange": "7aa41fe639eb46a740b35e612973cada9ba8267f", "commitAfterChange": "7ec8f457fa5afa1822c5c5a2c51b29731a82c4ce", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope, boolean checkBounds)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope, boolean checkBounds)", "diff": ["-\ttype = scope.environment().convertToRawType(type);", "+\ttype = scope.environment().convertToRawType(type, false /*do not force conversion of enclosing types*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbead6c81ebb4633aa5f284e619214eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/TokenManager.java", "commitBeforeChange": "b2b8c809039544e3b7857112d3dba58d84cc4820", "commitAfterChange": "8f8bb370f097d2a34f004c1d0b29e00cd828b5b6", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  \tpublic int findFirstTokenInLine(int startIndex)", "signatureAfterChange": "  \tpublic int findFirstTokenInLine(int startIndex)", "diff": ["-\t\treturn findFirstTokenInLine(startIndex, false);", "+\t\treturn findFirstTokenInLine(startIndex, false, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc6523ce67f623b962d64112105df319", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "a127c18eb2e0be7f3c68a60246b08a9a69e7be5d", "commitAfterChange": "771a62c1c5090742b5612a8958d0207ca0f557cc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprotected void buildBodyDeclarations(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration expression, AnonymousClassDeclaration anonymousClassDeclaration)", "signatureAfterChange": "  \tprotected void buildBodyDeclarations(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration expression, AnonymousClassDeclaration anonymousClassDeclaration)", "diff": ["-\t\t\t\t\t\tanonymousClassDeclaration.bodyDeclarations().add(convert(nextMethodDeclaration));", "+\t\t\t\t\t\tanonymousClassDeclaration.bodyDeclarations().add(convert(false, nextMethodDeclaration));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bce8f8c85f29602aafe6063eab9c7eee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/ReferenceCollection.java", "commitBeforeChange": "4aa9bc6aa2cb666fb0721f9b95f7c7e969829a0c", "commitAfterChange": "39745a85705361f7e5b8ca890f80a07d85799adc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \r static char[][][] internQualifiedNames(ArrayList qualifiedStrings)", "signatureAfterChange": "\r \r static char[][][] internQualifiedNames(ArrayList qualifiedStrings)", "diff": ["-\treturn internQualifiedNames(result);\r", "+\treturn internQualifiedNames(result, true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd7a69b8e89cedf3f17911b9aa50dcab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionOnQualifiedAllocationExpression.java", "commitBeforeChange": "1302cba8a2d9e7deb014096a0cf438c7f031d8f4", "commitAfterChange": "629f19b9848dc98d62568a3c9b1db94e81597d7a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tthis.resolvedType = type.resolveType(scope);", "+\t\tthis.resolvedType = type.resolveType(scope, true /* check bounds*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bed89fc037d5731df2eaddd8514e880f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetMessageSend.java", "commitBeforeChange": "58aaea35ae4c64a4ecebe06d6b1ab1679e04698a", "commitAfterChange": "d5df66f62f879926d0ab37840f8644f7133a2a54", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\tif (isMethodUseDeprecated(binding, scope))", "+\tif (isMethodUseDeprecated(binding, scope, true))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf283149c94c7d38bcd4f67b02916dce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/NameEnvironment.java", "commitBeforeChange": "9becbe4387893cedf30134ca14ae8f69cc31e891", "commitAfterChange": "29ea2d08ed937df586222f4dea9b4941a37c0ee6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public static ClasspathLocation[] computeLocations(\r \tIWorkspaceRoot workspaceRoot,\r \tIJavaProject javaProject,\r \tString outputFolderLocation,\r \tArrayList sourceFolders,\r \tSimpleLookupTable prereqOutputFolders) throws JavaModelException", "signatureAfterChange": "\r public static ClasspathLocation[] computeLocations(\r \tIWorkspaceRoot workspaceRoot,\r \tIJavaProject javaProject,\r \tString outputFolderLocation,\r \tArrayList sourceFolders,\r \tSimpleLookupTable prereqOutputFolders) throws JavaModelException", "diff": ["-\tIClasspathEntry[] classpathEntries = ((JavaProject) javaProject).getExpandedClasspath(true);\r", "+\tIClasspathEntry[] classpathEntries = ((JavaProject) javaProject).getExpandedClasspath(true, true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfbf4a538a7862e84b18af4b61a5aba5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "0a2a15035b645ba08167c116bcd8da21a65ff803", "commitAfterChange": "d1d9c4b9d41b5dee6585f38ec44b96973779f261", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 110, "signatureBeforeChange": " \tpublic boolean visit( \t\tQualifiedAllocationExpression qualifiedAllocationExpression, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tQualifiedAllocationExpression qualifiedAllocationExpression, \t\tBlockScope scope)", "diff": ["-\t\t\tformatLeftCurlyBrace(line, this.preferences.brace_position_for_anonymous_type_declaration);", "+\t\t\tformatLeftCurlyBrace(line, this.preferences.brace_position_for_anonymous_type_declaration, false /* do not print comment yet, it will be done on formatAnonymousTypeDeclaration */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfedc64a2de17f9407a1431955f897c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetVariablesOperation.java", "commitBeforeChange": "ac0a475647873438b56b92aa8eacf680f1956087", "commitAfterChange": "29260aba0d4733f1052800912bd8371c1e6637a1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": "  \tprotected void executeOperation() throws JavaModelException", "diff": ["-\t\t\t\t\t\tclasspathChanged(classpathChange);", "+\t\t\t\t\t\tclasspathChanged(classpathChange, true/*refresh if external linked folder already exists*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c02dc158204745ce2b20ab78a800e9f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "7aa41fe639eb46a740b35e612973cada9ba8267f", "commitAfterChange": "7ec8f457fa5afa1822c5c5a2c51b29731a82c4ce", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\ttype = scope.environment().convertToRawType(type);", "+\t\t\t\ttype = scope.environment().convertToRawType(type, false /*do not force conversion of enclosing types*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c177903bef784f3565c308cc591e9e36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/WorkingCopy.java", "commitBeforeChange": "3aa835135283a2acadb61b0aae182c129f17ffab", "commitAfterChange": "a9c15bae1087a65c1bc60140ceb7a5a5416fd8a8", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r public void reconcile(IProblemRequestor problemRequestor) throws JavaModelException", "signatureAfterChange": "\r public void reconcile(IProblemRequestor problemRequestor) throws JavaModelException", "diff": ["-\tthis.makeConsistent(problemRequestor, null);\r", "+\tthis.makeConsistent(problemRequestor, true, null);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1ad8617bc6e56747f2500448c3241eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/SubTypeSearchJob.java", "commitBeforeChange": "8eff811a28d835d940585e1dd6e43b7e81d9c25c", "commitAfterChange": "ecd6b6b03e84e16fa2ef3316475695c9990930d4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public SubTypeSearchJob(SearchPattern pattern, IJavaSearchScope scope, IJavaElement focus, int detailLevel, IIndexSearchRequestor requestor, IndexManager indexManager)", "signatureAfterChange": " public SubTypeSearchJob(SearchPattern pattern, IJavaSearchScope scope, IJavaElement focus, int detailLevel, IIndexSearchRequestor requestor, IndexManager indexManager)", "diff": ["-\tsuper(pattern, scope, focus, detailLevel, requestor, indexManager);", "+\tsuper(", "+\t\tpattern, ", "+\t\tscope, ", "+\t\tfocus, ", "+\t\tfalse/*not a polymorphic search*/, ", "+\t\tdetailLevel, ", "+\t\trequestor, ", "+\t\tindexManager);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c204231f31a818e74c63ff62c4a4464a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "a127c18eb2e0be7f3c68a60246b08a9a69e7be5d", "commitAfterChange": "771a62c1c5090742b5612a8958d0207ca0f557cc", "methodNumberBeforeChange": 276, "methodNumberAfterChange": 276, "signatureBeforeChange": " \tpublic void test0631() throws JavaModelException", "signatureAfterChange": " \tpublic void test0631() throws JavaModelException", "diff": ["-\t\tcheckSourceRange(fragment, \"s =  {\\\"\\\",,,\", source);", "+\t\tcheckSourceRange(fragment, \"s =  {\\\"\\\",,,\", source, true/*expectMalformed*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c206780c8ec74ba90484cdfd5dee71ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/NamingConventions.java", "commitBeforeChange": "9f851707e9bbb361d7fe12af2d5fcf659372084c", "commitAfterChange": "a069ec3e155df34e1c3faf73c5e321c7b4b692f7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic static String getBaseName( \t\t\tint variableKind, \t\t\tString variableName, \t\t\tIJavaProject javaProject)", "signatureAfterChange": " \tpublic static String getBaseName( \t\t\tint variableKind, \t\t\tString variableName, \t\t\tIJavaProject javaProject)", "diff": ["-\t\treturn String.valueOf(InternalNamingConventions.getBaseName(variableKind, javaProject, variableName.toCharArray()));", "+\t\treturn String.valueOf(InternalNamingConventions.getBaseName(variableKind, javaProject, variableName.toCharArray(), true));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c218c67e802303e68efebbdd822c0606", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "47e88d0335bbb81b7bc00bc5460ee9a54afeb8fd", "commitAfterChange": "c61ba8a09dc9c83fb9681276880af852ba1fdf7c", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "\r \tpublic void setRawClasspath(\r \t\tIClasspathEntry[] entries,\r \t\tIProgressMonitor monitor)\r \t\tthrows JavaModelException", "signatureAfterChange": "\r \tpublic void setRawClasspath(\r \t\tIClasspathEntry[] entries,\r \t\tIProgressMonitor monitor)\r \t\tthrows JavaModelException", "diff": ["-\t\tsetRawClasspath(entries, monitor, true, getExpandedClasspath(true));\r", "+\t\tsetRawClasspath(entries, monitor, true, true, getExpandedClasspath(true));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c310da0922b19549a089c103ae5f81c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "a127c18eb2e0be7f3c68a60246b08a9a69e7be5d", "commitAfterChange": "771a62c1c5090742b5612a8958d0207ca0f557cc", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic TypeDeclaration convert(org.eclipse.jdt.internal.compiler.ast.ASTNode[] nodes)", "signatureAfterChange": " \tpublic TypeDeclaration convert(org.eclipse.jdt.internal.compiler.ast.ASTNode[] nodes)", "diff": ["-\t\t\t\t\ttypeDecl.bodyDeclarations().add(convert(nextMethodDeclaration));", "+\t\t\t\t\ttypeDecl.bodyDeclarations().add(convert(false, nextMethodDeclaration));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c32459b33c3ef852f5e348c04698baaa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "364abd1fe47d562f576cb6b54a083094e0671f23", "commitAfterChange": "1b555425db41a9eb4fba300521a43b3ff494a42f", "methodNumberBeforeChange": 550, "methodNumberAfterChange": 550, "signatureBeforeChange": "  public void contradictoryNullAnnotationsInferred(MethodBinding inferredMethod, ASTNode location)", "signatureAfterChange": "  public void contradictoryNullAnnotationsInferred(MethodBinding inferredMethod, ASTNode location)", "diff": ["-\tcontradictoryNullAnnotationsInferred(inferredMethod, location.sourceStart, location.sourceEnd);", "+\tcontradictoryNullAnnotationsInferred(inferredMethod, location.sourceStart, location.sourceEnd, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4cc2d8182c30242509a4a41b301d2ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "569ea51c58561efd4d8aa7df4dbd08c4ce6f4fbf", "commitAfterChange": "af652d9d40e3e30a14ccbd2056144782592afc53", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 60, "signatureBeforeChange": "  \tpublic MethodBinding getMethod(TypeBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": "  \tpublic MethodBinding getMethod(TypeBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t\t\tmethodBinding = findMethod(currentType, selector, argumentTypes, invocationSite);", "+\t\t\tmethodBinding = findMethod(currentType, selector, argumentTypes, invocationSite, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c513c53ec0b5bac92c079a7beb84d837", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "0a2a15035b645ba08167c116bcd8da21a65ff803", "commitAfterChange": "d1d9c4b9d41b5dee6585f38ec44b96973779f261", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " \tpublic boolean visit( \t\tConstructorDeclaration constructorDeclaration, \t\tClassScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tConstructorDeclaration constructorDeclaration, \t\tClassScope scope)", "diff": ["-\t\t\tformatLeftCurlyBrace(line, constructor_declaration_brace);", "+\t\t\tformatLeftCurlyBrace(line, constructor_declaration_brace, false /* do not print comment yet, it will be done on formatOpeningBrace */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c58e7ae4b3a2adfe5528dc8684dcc077", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "0534618c17c0b5f6c361eb5acf9c22731255984f", "commitAfterChange": "d85ef445439a7932d1fe7c7dafa9bf16e2d2dd51", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tprivate TextEdit probeFormatting(String source, int indentationLevel, String lineSeparator, int offset, int length)", "signatureAfterChange": "  \tprivate TextEdit probeFormatting(String source, int indentationLevel, String lineSeparator, int offset, int length)", "diff": ["-\t\tConstructorDeclaration constructorDeclaration = this.codeSnippetParsingUtil.parseStatements(source.toCharArray(), getDefaultCompilerOptions(), true);", "+\t\tConstructorDeclaration constructorDeclaration = this.codeSnippetParsingUtil.parseStatements(source.toCharArray(), getDefaultCompilerOptions(), true, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5d37035a1605ae98090fb9aef1faaaf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "d82bab5c3bc5a3dc0c32d13db0378bcec919d784", "commitAfterChange": "8d68c9962442e5181cbad94c9202c0f79b424840", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " private void toString(StringBuffer buffer, IType type, int indent, boolean ascendant)", "signatureAfterChange": " private void toString(StringBuffer buffer, IType type, int indent, boolean ascendant)", "diff": ["-\t\tbuffer.append(element.toStringWithAncestors());", "+\t\tbuffer.append(element.toStringWithAncestors(false/*don't show key*/));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6941c88b271414ef1155ad3de0fb12a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "48e449a88ed4eefd5f8296dac2a0baf220bc173a", "commitAfterChange": "0d4007eb15023a950a5e732906ce998c79797847", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " \t \tprivate void findTypesAndPackages(char[] token, Scope scope)", "signatureAfterChange": " \t \tprivate void findTypesAndPackages(char[] token, Scope scope)", "diff": ["-\t\t\t\tfindKeywords(token, baseTypes);", "+\t\t\t\tfindKeywords(token, baseTypes, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6eadab7b5e42085c2cd1ac3d075310c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "122aaead4e358f6ebb2c21aa961cc53294d2209d", "commitAfterChange": "dad14e26b600f99744a420507cc556dc0f0ff73b", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tIType findType(String fullyQualifiedName, NameLookup lookup, boolean considerSecondaryTypes, IProgressMonitor progressMonitor) throws JavaModelException", "signatureAfterChange": " \tIType findType(String fullyQualifiedName, NameLookup lookup, boolean considerSecondaryTypes, IProgressMonitor progressMonitor) throws JavaModelException", "diff": ["+\t\t\ttrue, /* wait for indexes (only if consider secondary types)*/"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c75a9d4c298a8e887e20d5c823819907", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeReference.java", "commitBeforeChange": "1302cba8a2d9e7deb014096a0cf438c7f031d8f4", "commitAfterChange": "629f19b9848dc98d62568a3c9b1db94e81597d7a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "  public TypeBinding resolveTypeArgument(BlockScope blockScope, ReferenceBinding genericType, int rank)", "signatureAfterChange": "  public TypeBinding resolveTypeArgument(BlockScope blockScope, ReferenceBinding genericType, int rank)", "diff": ["-    return resolveType(blockScope);", "+    return resolveType(blockScope, true /* check bounds*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c846592019a60ab243211938d5e43a1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "d0f6b932bd2521f678bde4cdb96cb1190442e2f1", "commitAfterChange": "84bbf5d10f91b2c7f38d4b1250126f235793a08e", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": " \tpublic boolean visit(ConstructorInvocation node)", "signatureAfterChange": " \tpublic boolean visit(ConstructorInvocation node)", "diff": ["-\t\t\tpos= rewriteOptionalTypeParameters(node, ConstructorInvocation.TYPE_ARGUMENTS_PROPERTY, pos, \"\", false); //$NON-NLS-1$", "+\t\t\tpos= rewriteOptionalTypeParameters(node, ConstructorInvocation.TYPE_ARGUMENTS_PROPERTY, pos, \"\", false, false); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9d23b3cd7f0c7a553bc106a2f1a8028", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/CodeSnippetParsingUtil.java", "commitBeforeChange": "11ac720cf12c89391a32ed5e56750070174f7f3f", "commitAfterChange": "c35f48a470f9475e0b73c6c14c2a26ca2378ab58", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic Expression parseExpression(char[] source, int offset, int length, Map settings, boolean recordParsingInformation)", "signatureAfterChange": "  \tpublic Expression parseExpression(char[] source, int offset, int length, Map settings, boolean recordParsingInformation)", "diff": ["-\t\tExpression result = parser.parseExpression(source, offset, length, unit);", "+\t\tExpression result = parser.parseExpression(source, offset, length, unit, true /* record line separators */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cab2231640f2b46e66584ae202b3b721", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "1d9b32f1fc0ff13e678c538bda5bd19589acf043", "commitAfterChange": "677c4b39a30069207f57550aec27ea9d04477c82", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": " public void reconcile(boolean forceProblemDetection, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public void reconcile(boolean forceProblemDetection, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\treconcile(NO_AST, forceProblemDetection, null/*use primary owner*/, monitor);", "+\treconcile(NO_AST, forceProblemDetection, false, null/*use primary owner*/, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cacdcc2d71548d16a07a1c6494528cff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "277b33164a7aa6b44e8af80cbf75c89be37ef9e5", "commitAfterChange": "bca01eadc82a3abb71100149fcbedb07d33a04ad", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void setUpSuite() throws Exception", "signatureAfterChange": " public void setUpSuite() throws Exception", "diff": ["-\tsetUpJavaProject(\"Resolve\", \"1.8\");", "+\tsetUpJavaProject(\"Resolve\", \"1.8\", true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cafba4b6d75a7c3e3471cf54379787aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "ddd808d168fb534eabceec59ee71a1ab6bb9aa2f", "commitAfterChange": "152c9f5bc26833df7f866102ab1cb2e2da100205", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " protected IType lookupType(ReferenceBinding typeBinding)", "signatureAfterChange": " protected IType lookupType(ReferenceBinding typeBinding)", "diff": ["-\t\tIType type = this.nameLookup.findType(typeName, pkgs[i],  false,  acceptFlag);", "+\t\tIType type = this.nameLookup.findType(typeName, pkgs[i],  false,  acceptFlag, true/*consider secondary types*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb0a06ab5b3c7f295ddc4f85b7c1aad2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "628cadf5744ab383e80afb2f9e63de19db722144", "commitAfterChange": "06412e4ebddd7aaa1f5bc2a2fbe06678982f22b4", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic FieldBinding getField( \t\tTypeBinding receiverType, \t\tchar[] fieldName, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \tpublic FieldBinding getField( \t\tTypeBinding receiverType, \t\tchar[] fieldName, \t\tInvocationSite invocationSite)", "diff": ["-\t\tFieldBinding field = findField(receiverType, fieldName, invocationSite);", "+\t\tFieldBinding field = findField(receiverType, fieldName, invocationSite, true /*resolve*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb911c736c62fd3ba963b4eac3364305", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "d7c990d50da3096d1d0c829cba02221aeda7589f", "commitAfterChange": "924bb53fdc2b8abef6daacf4b8eb0fd3e9ce7fd5", "methodNumberBeforeChange": 211, "methodNumberAfterChange": 211, "signatureBeforeChange": " \tpublic void test0197() throws CoreException", "signatureAfterChange": " \tpublic void test0197() throws CoreException", "diff": ["-\t\t   \tIBinding[] bindings = resolveBindings(contents, this.workingCopy);", "+\t\t   \tIBinding[] bindings = resolveBindings(contents, this.workingCopy, false/*don't report errors*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc3702ced09654361b00f5edafedb9b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "13087273f518893bae9662fee0f01bf280448014", "commitAfterChange": "3dd2d61115a71847147cc1629ac7b4900ba8625e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic Object getElementInfo(IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic Object getElementInfo(IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\treturn openWhenClosed(createElementInfo(), monitor);", "+\t\treturn openWhenClosed(createElementInfo(), false, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccd26f78c49530e5337dc48ba84023d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/NamingConventions.java", "commitBeforeChange": "9f851707e9bbb361d7fe12af2d5fcf659372084c", "commitAfterChange": "a069ec3e155df34e1c3faf73c5e321c7b4b692f7", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic static char[] suggestSetterName(IJavaProject project, char[] fieldName, int modifiers, boolean isBoolean, char[][] excludedNames)", "signatureAfterChange": " \tpublic static char[] suggestSetterName(IJavaProject project, char[] fieldName, int modifiers, boolean isBoolean, char[][] excludedNames)", "diff": ["-\t\t\tchar[] name = InternalNamingConventions.getBaseName(getFieldVariableKind(modifiers), project, fieldName);", "+\t\t\tchar[] name = InternalNamingConventions.getBaseName(getFieldVariableKind(modifiers), project, fieldName, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccd8c4e07b8060c26ef9b6ee77838b0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "7aa41fe639eb46a740b35e612973cada9ba8267f", "commitAfterChange": "7ec8f457fa5afa1822c5c5a2c51b29731a82c4ce", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " private Binding findImport(char[][] compoundName, int length)", "signatureAfterChange": " private Binding findImport(char[][] compoundName, int length)", "diff": ["-\t\ttype = (ReferenceBinding)environment.convertToRawType(type); // type imports are necessarily raw for all except last", "+\t\ttype = (ReferenceBinding)environment.convertToRawType(type, false /*do not force conversion of enclosing types*/); // type imports are necessarily raw for all except last"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccee30d0a55e263e35fa9e872cdc53b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "277b33164a7aa6b44e8af80cbf75c89be37ef9e5", "commitAfterChange": "bca01eadc82a3abb71100149fcbedb07d33a04ad", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " public void testBug408230d() throws CoreException", "signatureAfterChange": " public void testBug408230d() throws CoreException", "diff": ["-\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\");", "+\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\", true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd01792a96ac61070a375e89f65747ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "45cd785ca01e28e4f113609eb753cae5cd16f91a", "commitAfterChange": "21c2c8ab182b7aa411b8e7bf4277aee52240c980", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " \tpublic static void removeClasspathVariable( \t\tString variableName, \t\tIProgressMonitor monitor)", "signatureAfterChange": " \tpublic static void removeClasspathVariable( \t\tString variableName, \t\tIProgressMonitor monitor)", "diff": ["-\t\t\tJavaModelManager.getJavaModelManager().updateVariableValues(new String[]{ variableName}, new IPath[]{ null }, monitor);", "+\t\t\tJavaModelManager.getJavaModelManager().updateVariableValues(new String[]{ variableName}, new IPath[]{ null }, true/*update preferences*/, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce60eeee15e3c13cb50119488ebe9385", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "1ccf66a95b26a0aeddc10724cf5b8ad317c21cf5", "commitAfterChange": "d31ea46df4824e2532a8beef91e753f25208cbae", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic static CompilationUnitDeclaration resolve( \t\tICompilationUnit unitElement, \t\tIAbstractSyntaxTreeVisitor visitor) \t\tthrows JavaModelException", "signatureAfterChange": "  \tpublic static CompilationUnitDeclaration resolve( \t\tICompilationUnit unitElement, \t\tIAbstractSyntaxTreeVisitor visitor) \t\tthrows JavaModelException", "diff": ["-\t\t\t\t\t\tencoding));", "+\t\t\t\t\t\tencoding),", "+\t\t\t\t\ttrue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce9dcef7094581a49e1c8288efc9af9f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "7ad33f26eedd4780b8e7bafe9288f3217000d5fd", "commitAfterChange": "011b2686c2cb0787dd0d6632931ecc153c5a5666", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 116, "signatureBeforeChange": " \tpublic boolean visit(MethodInvocation node)", "signatureAfterChange": " \tpublic boolean visit(MethodInvocation node)", "diff": ["-\t\t\tpos= rewriteOptionalTypeParameters(node, MethodInvocation.TYPE_ARGUMENTS_PROPERTY, pos, \"\"); //$NON-NLS-1$", "+\t\t\tpos= rewriteOptionalTypeParameters(node, MethodInvocation.TYPE_ARGUMENTS_PROPERTY, pos, \"\", false); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ceab352ade593ef364edf6567587dddb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "a127c18eb2e0be7f3c68a60246b08a9a69e7be5d", "commitAfterChange": "771a62c1c5090742b5612a8958d0207ca0f557cc", "methodNumberBeforeChange": 124, "methodNumberAfterChange": 124, "signatureBeforeChange": " \tpublic void test0505() throws JavaModelException", "signatureAfterChange": " \tpublic void test0505() throws JavaModelException", "diff": ["-\t\tcheckSourceRange(declaration, \"public method(final int parameter) {     }\", source);", "+\t\tcheckSourceRange(declaration, \"public method(final int parameter) {     }\", source, true/*expectMalformed*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d06d66305b0d091982e94483714dbc8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "083b2c1b1ee5dda1ed44dee87f75d3006cc056c9", "commitAfterChange": "576df9e6dd9d0250a6c004ddb85431e8407887aa", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void setUpSuite() throws Exception", "signatureAfterChange": " public void setUpSuite() throws Exception", "diff": ["-\tinitDirectories(this.inputDir, this.profiles);", "+\tinitDirectories(this.inputDir, this.profiles, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d13a1514ba7050b12cd30530a1787364", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ChangeClasspathOperation.java", "commitBeforeChange": "3df203dd14216a5a05c7609bcd2dd61cc345cbe4", "commitAfterChange": "220df3e54541b1d486d18b098bb99954035d7238", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprotected void classpathChanged(JavaProject project) throws JavaModelException", "signatureAfterChange": " \tprotected void classpathChanged(JavaProject project) throws JavaModelException", "diff": ["-\t\t\tnew ExternalFolderChange(project, change.oldResolvedClasspath).updateExternalFoldersIfNecessary(null);", "+\t\t\tnew ExternalFolderChange(project, change.oldResolvedClasspath).updateExternalFoldersIfNecessary(true/*refresh if external linked folder already exists*/, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d143c6d84a72eeb9c9ad5a45af2c2453", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LabelFlowContext.java", "commitBeforeChange": "8c030d505f30b0cafedd9f4204a10256b97739b1", "commitAfterChange": "7ad108ea3de2b7d68d2737f4428379110b97b811", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public LabelFlowContext(FlowContext parent, ASTNode associatedNode, char[] labelName, BranchLabel breakLabel, BlockScope scope)", "signatureAfterChange": "  public LabelFlowContext(FlowContext parent, ASTNode associatedNode, char[] labelName, BranchLabel breakLabel, BlockScope scope)", "diff": ["-\tsuper(parent, associatedNode, breakLabel);", "+\tsuper(parent, associatedNode, breakLabel, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2cc67db073969577997257661b04562", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeNamesCollector.java", "commitBeforeChange": "717f84953083995f7c95c1317f187e0f6b181c5f", "commitAfterChange": "79931f08b8f1d408880612e4b98c0fe056a9e572", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r private String[] getPathsOfDeclaringType()", "signatureAfterChange": "\r private String[] getPathsOfDeclaringType()", "diff": ["-\t\tIJavaSearchScope scope = SearchEngine.createJavaSearchScope(new IJavaElement[] {project});\r", "+\t\tIJavaSearchScope scope = SearchEngine.createJavaSearchScope(new IJavaElement[] {project}, false);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4cf3ceca3f3ace67698e52415cd07de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/src/org/eclipse/jdt/compiler/apt/tests/FilerTests.java", "commitBeforeChange": "ff2b96761b3897e8f6c8feeb8c31198c182dd190", "commitAfterChange": "356c2ad24af0440f1263086b9145e07c8eeb9fab", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic void testElementWithSystemCompiler() throws IOException", "signatureAfterChange": " \tpublic void testElementWithSystemCompiler() throws IOException", "diff": ["-\t\tinternalTestCreateResource(compiler);", "+\t\tinternalTestCreateResource(compiler, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d62213c1b7670eb6f41ed03ed14b5ddb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "a127c18eb2e0be7f3c68a60246b08a9a69e7be5d", "commitAfterChange": "771a62c1c5090742b5612a8958d0207ca0f557cc", "methodNumberBeforeChange": 124, "methodNumberAfterChange": 124, "signatureBeforeChange": " \tpublic void test0505() throws JavaModelException", "signatureAfterChange": " \tpublic void test0505() throws JavaModelException", "diff": ["-\t\tcheckSourceRange(declaration, \"public method(final int parameter) {     }\", source);", "+\t\tcheckSourceRange(declaration, \"public method(final int parameter) {     }\", source, true/*expectMalformed*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7088c82915cd48abce9d5c9b577361b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "a13ea647a4f4bc5437bbde0cf7788256ede6cc96", "commitAfterChange": "1ab17a7eba14d35875267cc7b416da000a14dc1e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t\tTypeBinding combineAndUseNullHints(TypeBinding type, long nullHints, LookupEnvironment environment)", "signatureAfterChange": " \t\tTypeBinding combineAndUseNullHints(TypeBinding type, long nullHints, LookupEnvironment environment)", "diff": ["-\t\t\t\treturn type.unannotated();", "+\t\t\t\treturn type.unannotated(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8683e21e8d4c3873a881d1b891c1618", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "d6dc74869d8c303dbb7a6d8b327d8b104cd5865b", "commitAfterChange": "76a8025d64f3e2797e6f2fc43657ddca227a53e7", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tpublic LambdaExpression resolveExpressionExpecting(TypeBinding targetType, Scope skope)", "signatureAfterChange": " \tpublic LambdaExpression resolveExpressionExpecting(TypeBinding targetType, Scope skope)", "diff": ["-\t\t\tcopy = cachedResolvedCopy(targetType);", "+\t\t\tcopy = cachedResolvedCopy(targetType, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9bb81e7d4d12767a9d559c87436ca4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/FileSystem.java", "commitBeforeChange": "26246adf380e69c31de951eed4c0173edaa96dd1", "commitAfterChange": "2c076bc353a2d83c198fbf8764d9fb723677890e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \r public FileSystem(String[] classpathNames, String[] initialFileNames, String encoding)", "signatureAfterChange": "\r \r public FileSystem(String[] classpathNames, String[] initialFileNames, String encoding)", "diff": ["-\t\t\t\tclasspaths[i] = this.getClasspathJar(file); // will throw an IOException if file does not exist\r", "+\t\t\t\tclasspaths[i] = this.getClasspathJar(file, true); // will throw an IOException if file does not exist\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da6b593f4b8d82f668f563158d6ce0f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "0a2a15035b645ba08167c116bcd8da21a65ff803", "commitAfterChange": "d1d9c4b9d41b5dee6585f38ec44b96973779f261", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": " \tpublic boolean visit(FieldDeclaration enumConstant, MethodScope scope)", "signatureAfterChange": " \tpublic boolean visit(FieldDeclaration enumConstant, MethodScope scope)", "diff": ["-\t        formatLeftCurlyBrace(line, enum_constant_brace);", "+\t        formatLeftCurlyBrace(line, enum_constant_brace, false /* do not print comment yet, it will be done on formatTypeOpeningBraceForEnumConstant */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dab87750fe912cbe61f5c6861886c3f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionNodeFound.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public SelectionNodeFound()", "signatureAfterChange": " public SelectionNodeFound()", "diff": ["-\tthis(null); // we found a problem in the selection node", "+\tthis(null, false); // we found a problem in the selection node"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db37a71c193718f8120f450ff5dd924f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor2.java", "commitBeforeChange": "74d059b3fbdc00070c70bee76509a44ccad7fb4d", "commitAfterChange": "31d2b0bac7c9b032f1ad8765fd4577eaff8d79fd", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 45, "signatureBeforeChange": "  \tpublic boolean visit(EnhancedForStatement node)", "signatureAfterChange": "  \tpublic boolean visit(EnhancedForStatement node)", "diff": ["-\t\tformatAction(line, node.getBody());", "+\t\tformatAction(line, node.getBody(), false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbb51c6d91d6b858776313a21673a305", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "cb586d1ec75e8da71f4da23a7a5eb911d6960b1c", "commitAfterChange": "543f951d6390669f9bed8c637d9d6aef509af249", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public Object[] getEmulationPath(ReferenceBinding targetEnclosingType, boolean onlyExactMatch, boolean denyEnclosingArgInConstructorCall)", "signatureAfterChange": " public Object[] getEmulationPath(ReferenceBinding targetEnclosingType, boolean onlyExactMatch, boolean denyEnclosingArgInConstructorCall)", "diff": ["-\t\t\tpath[count++] = ((SourceTypeBinding) syntheticField.declaringClass).addSyntheticMethod(syntheticField, true);", "+\t\t\tpath[count++] = ((SourceTypeBinding) syntheticField.declaringClass).addSyntheticMethod(syntheticField, true/*read*/, false /*not super access*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc1d5effe46ef7f3628666f75054f8bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/AbstractASTTests.java", "commitBeforeChange": "a8a55ef8028ddd96daf4473daaec157ec40ab668", "commitAfterChange": "2c2d8aa7ba193d80394867d2f6025d47f27b1f9e", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": "  \tprotected ASTNode buildAST(String newContents, ICompilationUnit cu, boolean reportErrors, boolean enableStatementRecovery) throws JavaModelException", "signatureAfterChange": "\t  \tprotected ASTNode buildAST(String newContents, ICompilationUnit cu, boolean reportErrors, boolean enableStatementRecovery) throws JavaModelException", "diff": ["+", "-\t\tASTNode[] nodes = buildASTs(newContents, cu, reportErrors, enableStatementRecovery);", "+\t\tASTNode[] nodes = buildASTs(newContents, cu, reportErrors, enableStatementRecovery, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc8bc768d9298264560eed12327b1129", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetMessageSend.java", "commitBeforeChange": "569ea51c58561efd4d8aa7df4dbd08c4ce6f4fbf", "commitAfterChange": "af652d9d40e3e30a14ccbd2056144782592afc53", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\tthis.binding = scope.findMethod((ReferenceBinding)this.actualReceiverType, this.selector, new TypeBinding[]{}, this);", "+\t\t\t\tthis.binding = scope.findMethod((ReferenceBinding)this.actualReceiverType, this.selector, new TypeBinding[]{}, this, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcbda25846875eb0300c4336647f860e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "d6dc74869d8c303dbb7a6d8b327d8b104cd5865b", "commitAfterChange": "76a8025d64f3e2797e6f2fc43657ddca227a53e7", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "  \tpublic boolean sIsMoreSpecific(TypeBinding s, TypeBinding t, Scope skope)", "signatureAfterChange": "  \tpublic boolean sIsMoreSpecific(TypeBinding s, TypeBinding t, Scope skope)", "diff": ["-\t\tLambdaExpression copy = cachedResolvedCopy(s);", "+\t\tLambdaExpression copy = cachedResolvedCopy(s, true /* any resolved copy is good */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dceaa4950ecc886e1f82b3a2b4b40470", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "9850e4ae951b6df5bc8bfe162d8a3e3e67beff62", "commitAfterChange": "e9ca95978aca2a442bfecfb8ac281f372092486a", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 129, "signatureBeforeChange": " \tpublic void _iload(int pc, int index)", "signatureAfterChange": " \tpublic void _iload(int pc, int index)", "diff": ["-\t\t\tgetLocalVariableName(pc, index)", "+\t\t\tgetLocalVariableName(pc, index, true)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcf2666878bc3e5635dea927b2fd8e45", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetScope.java", "commitBeforeChange": "569ea51c58561efd4d8aa7df4dbd08c4ce6f4fbf", "commitAfterChange": "af652d9d40e3e30a14ccbd2056144782592afc53", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public MethodBinding findMethodForArray(ArrayBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": " public MethodBinding findMethodForArray(ArrayBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\tmethodBinding = findMethod(object, selector, argumentTypes, invocationSite);", "+\tmethodBinding = findMethod(object, selector, argumentTypes, invocationSite, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd187a9d7b3e1b48f57a7b5bf2197b30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/NamingConventions.java", "commitBeforeChange": "9f851707e9bbb361d7fe12af2d5fcf659372084c", "commitAfterChange": "a069ec3e155df34e1c3faf73c5e321c7b4b692f7", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic static char[] suggestGetterName(IJavaProject project, char[] fieldName, int modifiers, boolean isBoolean, char[][] excludedNames)", "signatureAfterChange": " \tpublic static char[] suggestGetterName(IJavaProject project, char[] fieldName, int modifiers, boolean isBoolean, char[][] excludedNames)", "diff": ["-\t\t\tchar[] name = InternalNamingConventions.getBaseName(getFieldVariableKind(modifiers), project, fieldName);", "+\t\t\tchar[] name = InternalNamingConventions.getBaseName(getFieldVariableKind(modifiers), project, fieldName, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd452e47876626f3e890a26e53bfb53c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedThisReference.java", "commitBeforeChange": "1302cba8a2d9e7deb014096a0cf438c7f031d8f4", "commitAfterChange": "629f19b9848dc98d62568a3c9b1db94e81597d7a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tTypeBinding type = this.resolvedType = this.qualification.resolveType(scope);", "+\t\tTypeBinding type = this.resolvedType = this.qualification.resolveType(scope, true /* check bounds*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd8e7542abbf5ba2e5d407e914365426", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceJavadocParser.java", "commitBeforeChange": "b7d91a4ace425a962b1ac3da0dae84d5a57e2dd8", "commitAfterChange": "44d7b9d76f15463c98336fd969fee6876229526a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected void parseSimpleTag()", "signatureAfterChange": " protected void parseSimpleTag()", "diff": ["-\t\t\t\t\t\tparseIdentifierTag();", "+\t\t\t\t\t\tparseIdentifierTag(false); // Do not report missing identifier"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd92b3c02dd27e82bc0f87b397fd4abf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "48e449a88ed4eefd5f8296dac2a0baf220bc173a", "commitAfterChange": "0d4007eb15023a950a5e732906ce998c79797847", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic void complete(ICompilationUnit sourceUnit, int completionPosition, int pos)", "signatureAfterChange": " \tpublic void complete(ICompilationUnit sourceUnit, int completionPosition, int pos)", "diff": ["-\t\t\t\t\t\t\t\tfindKeywords(keyword.getToken(), keyword.getPossibleKeywords());", "+\t\t\t\t\t\t\t\tfindKeywords(keyword.getToken(), keyword.getPossibleKeywords(), false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddc950c2659015e8c0a7771afc82f7a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "a8a55ef8028ddd96daf4473daaec157ec40ab668", "commitAfterChange": "2c2d8aa7ba193d80394867d2f6025d47f27b1f9e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void test0413() throws JavaModelException", "signatureAfterChange": " \tpublic void test0413() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(sourceUnit, true);", "+\t\tASTNode result = runConversion(sourceUnit, true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddd76990d1913933b72c9a999f21c1be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "0df9f1687f9162f2dcdfeec3aed4b01b8d385a19", "commitAfterChange": "ce0f19288bc3747a9c0cb27b6996f5589afb99d1", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " protected IType resolveTypeByLocation(char[] packageName, char[] typeName, int acceptFlags, int start, int end)", "signatureAfterChange": " protected IType resolveTypeByLocation(char[] packageName, char[] typeName, int acceptFlags, int start, int end)", "diff": ["-\t\t\ttype= this.nameLookup.findType(new String(typeName), pkgs[i], false, acceptFlags, true/*consider secondary types*/);", "+\t\t\ttype= this.nameLookup.findType(new String(typeName), pkgs[i], false, acceptFlags, false, true/*consider secondary types*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de33f48f2623822ed5b1583fb9f8d1ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor2.java", "commitBeforeChange": "74d059b3fbdc00070c70bee76509a44ccad7fb4d", "commitAfterChange": "31d2b0bac7c9b032f1ad8765fd4577eaff8d79fd", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "  \tpublic boolean visit(AnonymousClassDeclaration node)", "signatureAfterChange": "  \tpublic boolean visit(AnonymousClassDeclaration node)", "diff": ["-\t\tformatTypeMembers(bodyDeclarations);", "+\t\tformatTypeMembers(bodyDeclarations, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de92dfcdc084be3c016aa366905354f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterRecoveryTest.java", "commitBeforeChange": "5daa85176eeb6c050d87a4b7fb3642fbff63325e", "commitAfterChange": "d4d7f9bf434c822e7818dfb358fa83468e120df6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic void test0002() throws JavaModelException", "signatureAfterChange": " \t \tpublic void test0002() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3, this.workingCopies[0], true);", "+\t\tASTNode result = runConversion(AST.JLS3, this.workingCopies[0], true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e059849db966ec52999a3d6dfc95413f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "75b36a9ed5cd2da7220cbd26b35e54ceed421c30", "commitAfterChange": "dcdb11f13a905cc2d9eed5c3bf38034e243f753b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \r public void selectType(ISourceType sourceType, char[] typeName)", "signatureAfterChange": "\r \r public void selectType(ISourceType sourceType, char[] typeName)", "diff": ["-\t\t\tSourceTypeConverter.buildCompilationUnit(\r", "-\t\t\t\touterType,\r", "+\t\t\tSourceTypeConverter.buildCompilationUnit(  \r", "+\t\t\t\touterType, \r", "+\t\t\t\ttrue, // by default get member types\r", "-\t\t\t\tresult);\r", "+\t\t\t\tresult); \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e07368e0eb4d774a08aca198d30f8266", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "1f4efb41a52f8c33e561047da4304f9fe9e90dc9", "commitAfterChange": "44b2c87051c4d9bbf37b4cf649be500c54102bf7", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tvoid encodeExtraAttributes(XMLWriter writer, boolean indent, boolean newLine)", "signatureAfterChange": " \t \tvoid encodeExtraAttributes(XMLWriter writer, boolean indent, boolean newLine)", "diff": ["-\t\twriter.endTag(TAG_ATTRIBUTES, indent);", "+\t\twriter.endTag(TAG_ATTRIBUTES, indent, true/*insert new line*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2f24eac8526572bab9aa579c7a80520", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "277b33164a7aa6b44e8af80cbf75c89be37ef9e5", "commitAfterChange": "bca01eadc82a3abb71100149fcbedb07d33a04ad", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " public void testBug408230l() throws CoreException", "signatureAfterChange": " public void testBug408230l() throws CoreException", "diff": ["-\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\");", "+\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\", true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e41f8c704d8c7617d169352db4ce17a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterRecoveryTest.java", "commitBeforeChange": "5daa85176eeb6c050d87a4b7fb3642fbff63325e", "commitAfterChange": "d4d7f9bf434c822e7818dfb358fa83468e120df6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void test0004() throws JavaModelException", "signatureAfterChange": " \tpublic void test0004() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3, this.workingCopies[0], true);", "+\t\tASTNode result = runConversion(AST.JLS3, this.workingCopies[0], true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e447d6b82cc80222d6b296a0aec5df21", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "e7b1ea867718ceec3cf08d3cf2170026c991b041", "commitAfterChange": "ba0154713ba7d434aa2e47b80fd55a84048c10dc", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " public void makeConsistent(IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public void makeConsistent(IProgressMonitor monitor) throws JavaModelException", "diff": ["-\tmakeConsistent(NO_AST, false/*don't resolve bindings*/, null/*don't collect problems but report them*/, monitor);", "+\tmakeConsistent(NO_AST, false/*don't resolve bindings*/, false /* don't perform statements recovery */, null/*don't collect problems but report them*/, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e48a82ddc321297a9e63f48bc588f0a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "f681e9c0c3cc6c59d4593a72e3527dde2cae7215", "commitAfterChange": "1b6c294391226cfde58f43f4cff9ad65bab6672e", "methodNumberBeforeChange": 169, "methodNumberAfterChange": 169, "signatureBeforeChange": " \tpublic void test0540()", "signatureAfterChange": " \tpublic void test0540()", "diff": ["-\t\tASTNode result = runConversion(source, \"Test.java\", project, options); //$NON-NLS-1$", "+\t\tASTNode result = runConversion(source, \"Test.java\", project, options, true); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4a0c17a62933baff5cf9f748ffc28ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic void selectType(ISourceType sourceType, char[] typeName, SourceTypeElementInfo[] topLevelTypes, boolean searchInEnvironment)", "signatureAfterChange": " \tpublic void selectType(ISourceType sourceType, char[] typeName, SourceTypeElementInfo[] topLevelTypes, boolean searchInEnvironment)", "diff": ["-\t\t\t\t\tthis.nameEnvironment.findTypes(typeName, this);", "+\t\t\t\t\tthis.nameEnvironment.findTypes(typeName, false, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e56558c9842bb8b4bfd73d28aa71b8ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "8cb541445a60df0cc8244f7bb091d1f12632b37f", "commitAfterChange": "7cb036f969007a8d8602358c2ef2fc801f7c2a88", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprotected void seekTypesInBinaryPackage(String name, IPackageFragment pkg, boolean partialMatch, int acceptFlags, IJavaElementRequestor requestor)", "signatureAfterChange": " \tprotected void seekTypesInBinaryPackage(String name, IPackageFragment pkg, boolean partialMatch, int acceptFlags, IJavaElementRequestor requestor)", "diff": ["-\t\t\t\t\tif (nameMatches(unqualifiedName, type, partialMatch) && acceptType(type, acceptFlags))", "+\t\t\t\t\tif (nameMatches(unqualifiedName, type, partialMatch) && acceptType(type, acceptFlags, false/*not a source type*/))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e663fd9046abf072318a48eaf7bb5b72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/TypeConverter.java", "commitBeforeChange": "149c538751123b079a5874a00aba83297561ab5c", "commitAfterChange": "7bd675acf4007077bf6bd84b82139719c7a8ca75", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprotected TypeReference createTypeReference( \t\tchar[] typeName, \t\tint start, \t\tint end)", "signatureAfterChange": " \tprotected TypeReference createTypeReference( \t\tchar[] typeName, \t\tint start, \t\tint end)", "diff": ["+\t */", "+\tprotected TypeReference createTypeReference(", "+\t\tchar[] typeName,", "+\t\tint start,", "-\t\treturn decodeType(typeName, length, start, end);", "+\t\treturn decodeType(typeName, length, start, end, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8992d52ba6765e9f357d2afe99974db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "3256aef43e2296affdbf86e21f8cafdaa866161a", "commitAfterChange": "f357f309273e0bfe8345ff708d18fa83c6a34931", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic BoundSet inferInvocationType(BoundSet b1, TypeBinding expectedType, InvocationSite invocationSite, MethodBinding method) \t\t\tthrows InferenceFailureException", "signatureAfterChange": " \tpublic BoundSet inferInvocationType(BoundSet b1, TypeBinding expectedType, InvocationSite invocationSite, MethodBinding method) \t\t\tthrows InferenceFailureException", "diff": ["-\t\t\tif (!addConstraintsToC(this.invocationArguments, c, method, this.inferenceKind))", "+\t\t\tif (!addConstraintsToC(this.invocationArguments, c, method, this.inferenceKind, false))", "-\t\t\t// 5. bullet: determine B3 from C", "+\t\t\t// 5. bullet: determine B4 from C"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8b5ed9d22deca535bddceac2a9f3fd7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTestsRequestor2.java", "commitBeforeChange": "542ce5451500fe1306b92aaa9a7c04d8d83f7f3f", "commitAfterChange": "9cbf7e62288f060b33b2dc1c1d579dae84747012", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic CompletionTestsRequestor2(boolean showParamNames, boolean showUniqueKeys, boolean showPositions)", "signatureAfterChange": " \tpublic CompletionTestsRequestor2(boolean showParamNames, boolean showUniqueKeys, boolean showPositions)", "diff": ["-\t\tthis(showParamNames, showUniqueKeys, showPositions, true);", "+\t\tthis(showParamNames, showUniqueKeys, showPositions, true, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8fb9588261e87480405b2d42c3a4b78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "d8a456bd9b26260c97b05c5b9053ba80ab69b578", "commitAfterChange": "a460dab1d90a50493c5778c6266a2505ebe8bca6", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprotected void updateAffectedProjects(IPath prerequisiteProjectPath)", "signatureAfterChange": " \tprotected void updateAffectedProjects(IPath prerequisiteProjectPath)", "diff": ["+\t\t\t\t\t\t\t\ttrue, // dummy value since ReuseOutputLocation is used"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea7e0be0e564cacc779ddd92869a89e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "5ea0ae6c0d5a6162940bd458d3ead5d427058c35", "commitAfterChange": "2ad69f466c4df4c3e626fb0d9831c536de8ea5c0", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  protected void processAnnotationResults(CompilationParticipantResult[] results)", "signatureAfterChange": "  protected void processAnnotationResults(CompilationParticipantResult[] results)", "diff": ["-\t\t\t\tSourceFile sourceFile = findSourceFile(addedGeneratedFiles[j]);", "+\t\t\t\tSourceFile sourceFile = findSourceFile(addedGeneratedFiles[j], true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eabe4f6d59a5cd6434eb96369c3bc2e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "1d9b32f1fc0ff13e678c538bda5bd19589acf043", "commitAfterChange": "677c4b39a30069207f57550aec27ea9d04477c82", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": " public IMarker[] reconcile() throws JavaModelException", "signatureAfterChange": " public IMarker[] reconcile() throws JavaModelException", "diff": ["-\treconcile(NO_AST, false/*don't force problem detection*/, null/*use primary owner*/, null/*no progress monitor*/);", "+\treconcile(NO_AST, false/*don't force problem detection*/, false, null/*use primary owner*/, null/*no progress monitor*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaf200576b2d9cff3fa18c616f6e6f3a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "277b33164a7aa6b44e8af80cbf75c89be37ef9e5", "commitAfterChange": "bca01eadc82a3abb71100149fcbedb07d33a04ad", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " public void testBug408230k() throws CoreException", "signatureAfterChange": " public void testBug408230k() throws CoreException", "diff": ["-\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\");", "+\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\", true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb271f2eac4b1b331324db8fef224ef6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitVisitor.java", "commitBeforeChange": "e7b1ea867718ceec3cf08d3cf2170026c991b041", "commitAfterChange": "ba0154713ba7d434aa2e47b80fd55a84048c10dc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic CompilationUnitVisitor( \t\tINameEnvironment environment, \t\tIErrorHandlingPolicy policy, \t\tMap settings, \t\tICompilerRequestor requestor, \t\tIProblemFactory problemFactory)", "signatureAfterChange": " \tpublic CompilationUnitVisitor( \t\tINameEnvironment environment, \t\tIErrorHandlingPolicy policy, \t\tMap settings, \t\tICompilerRequestor requestor, \t\tIProblemFactory problemFactory)", "diff": ["-\t\tsuper(environment, policy, settings, requestor, problemFactory);", "+\t\tsuper(environment, policy, settings, requestor, problemFactory, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb46c1a01491084ae3d4229133e4e886", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "8ca87c5a032913e70d4537adbae6b35e391e0098", "commitAfterChange": "562a56d2522ead61508ddb21bd357b12e8996480", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void resolve(Openable[] openables, HashSet localTypes, IProgressMonitor monitor)", "signatureAfterChange": " public void resolve(Openable[] openables, HashSet localTypes, IProgressMonitor monitor)", "diff": ["-\t\t\t\t\t\tBinaryTypeBinding binaryTypeBinding = this.lookupEnvironment.cacheBinaryType(binaryType, null /*no access restriction*/);", "+\t\t\t\t\t\tBinaryTypeBinding binaryTypeBinding = this.lookupEnvironment.cacheBinaryType(binaryType, false/*don't need field and method (bug 125067)*/, null /*no access restriction*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eba8f711839ce1b24b2b4f575a33aa76", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "4c05b51e282281d245149ac856aed4eb689aee0d", "commitAfterChange": "fcd8f6eb5a6e4ad47715a6f446da38772d56031c", "methodNumberBeforeChange": 208, "methodNumberAfterChange": 208, "signatureBeforeChange": " \tpublic void test0194() throws JavaModelException", "signatureAfterChange": " \tpublic void test0194() throws JavaModelException", "diff": ["-    \t\t\tthis.workingCopy);", "+    \t\t\tthis.workingCopy,", "+    \t\t\tfalse);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec6181a2a9ef77b02498a3e71dba0014", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "0a2a15035b645ba08167c116bcd8da21a65ff803", "commitAfterChange": "d1d9c4b9d41b5dee6585f38ec44b96973779f261", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": " \tpublic boolean visit(ForeachStatement forStatement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(ForeachStatement forStatement, BlockScope scope)", "diff": ["-\t            formatLeftCurlyBrace(line, this.preferences.brace_position_for_block);", "+\t            formatLeftCurlyBrace(line, this.preferences.brace_position_for_block, true /* print comment */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecdfdfd29e14c9c5e56ecf6718cdc8c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "f39e3e40a8fb480e71912552d3976827814676e5", "commitAfterChange": "cae1ac0076053182a150a9a6566741ab9c075217", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tpublic void resourceChanged(IResourceChangeEvent event)", "signatureAfterChange": " \tpublic void resourceChanged(IResourceChangeEvent event)", "diff": ["-\t\t\t\t\t\t\t\t\tint result = change.generateDelta(javaDelta);", "+\t\t\t\t\t\t\t\t\tint result = change.generateDelta(javaDelta, false/*don't add classpath change*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed485f1f756db167e5c84e14d4d0df59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "7ad33f26eedd4780b8e7bafe9288f3217000d5fd", "commitAfterChange": "011b2686c2cb0787dd0d6632931ecc153c5a5666", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": " \tpublic boolean visit(ConstructorInvocation node)", "signatureAfterChange": " \tpublic boolean visit(ConstructorInvocation node)", "diff": ["-\t\t\tpos= rewriteOptionalTypeParameters(node, ConstructorInvocation.TYPE_ARGUMENTS_PROPERTY, pos, \"\"); //$NON-NLS-1$", "+\t\t\tpos= rewriteOptionalTypeParameters(node, ConstructorInvocation.TYPE_ARGUMENTS_PROPERTY, pos, \"\", false); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0240300f8adff9f8193639cb6372b0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "7aa41fe639eb46a740b35e612973cada9ba8267f", "commitAfterChange": "7ec8f457fa5afa1822c5c5a2c51b29731a82c4ce", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprivate boolean connectEnumSuperclass()", "signatureAfterChange": " \tprivate boolean connectEnumSuperclass()", "diff": ["-\t\tParameterizedTypeBinding  superType = environment().createParameterizedType(rootEnumType, new TypeBinding[]{ environment().convertToRawType(sourceType) } , null);", "+\t\tParameterizedTypeBinding  superType = environment().createParameterizedType(rootEnumType, new TypeBinding[]{ environment().convertToRawType(sourceType, false /*do not force conversion of enclosing types*/) } , null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0ad37a1440617afc24bf39de5f802a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "ee446c21d0aaa4f4c4b0513ad11960ed53ccba7d", "commitAfterChange": "271be052e104f1beefee4cd78039eca6ee6adb4f", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic void selectType(char[] typeName, IType context) throws JavaModelException", "signatureAfterChange": " \tpublic void selectType(char[] typeName, IType context) throws JavaModelException", "diff": ["-\t\t\treset();", "+\t\t\treset(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0bd032d617c1a33a80cb51148ffc8c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.java", "commitBeforeChange": "628cadf5744ab383e80afb2f9e63de19db722144", "commitAfterChange": "06412e4ebddd7aaa1f5bc2a2fbe06678982f22b4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void resolve(BlockScope scope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope scope)", "diff": ["-\t\tBinding existingVariable = scope.getBinding(name, BindingIds.VARIABLE, this);", "+\t\t", "+\t\tBinding existingVariable = scope.getBinding(name, BindingIds.VARIABLE, this, false /*do not resolve hidden field*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0cc7f98728b10b2549afc8d819a5594", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "083b2c1b1ee5dda1ed44dee87f75d3006cc056c9", "commitAfterChange": "576df9e6dd9d0250a6c004ddb85431e8407887aa", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  protected static Test suite(File inputDir, String profile, Map directories)", "signatureAfterChange": "  protected static Test suite(File inputDir, String profile, Map directories)", "diff": ["-\t\tinitDirectories(inputDir, profiles);", "+\t\tinitDirectories(inputDir, profiles, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1988bb3984fab5f0574066323d59af5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ExplicitConstructorCall.java", "commitBeforeChange": "1302cba8a2d9e7deb014096a0cf438c7f031d8f4", "commitAfterChange": "629f19b9848dc98d62568a3c9b1db94e81597d7a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tpublic void resolve(BlockScope scope)", "signatureAfterChange": " \t \tpublic void resolve(BlockScope scope)", "diff": ["-\t\t\t\t\tif ((this.genericTypeArguments[i] = this.typeArguments[i].resolveType(scope)) == null) {", "+\t\t\t\t\tif ((this.genericTypeArguments[i] = this.typeArguments[i].resolveType(scope, true /* check bounds*/)) == null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f19973518180c7c830f5c3aa54357561", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AnnotationArgument.java", "commitBeforeChange": "628cadf5744ab383e80afb2f9e63de19db722144", "commitAfterChange": "06412e4ebddd7aaa1f5bc2a2fbe06678982f22b4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void resolve(BlockScope scope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope scope)", "diff": ["-\t\tBinding existingVariable = scope.getBinding(name, BindingIds.VARIABLE, this);", "+\t\tBinding existingVariable = scope.getBinding(name, BindingIds.VARIABLE, this, true /*resolve*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1a0b6f028647ce71ace94bafad03ce2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "074b3920fbbf6bc6abc175d15b77618012b39aae", "commitAfterChange": "4c2eb0154d00e6d430e37f1ab9bc6931c8defe10", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 51, "signatureBeforeChange": " \tprotected void toStringAncestors(StringBuffer buffer)", "signatureAfterChange": " \tprotected void toStringAncestors(StringBuffer buffer)", "diff": ["-\t\t\tparentElement.toStringInfo(0, buffer, NO_INFO);", "+\t\t\tparentElement.toStringInfo(0, buffer, NO_INFO, false/*don't show resolved info*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f239a43d7ebf2d616f48b3093454feea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "3e46d275b92d309fd1fe675f261b23afc851c7bf", "commitAfterChange": "829046a361301380cac04e3af6844e4acd156d61", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprotected void handleInternalException( \t\tThrowable internalException, \t\tCompilationUnitDeclaration unit, \t\tCompilationResult result)", "signatureAfterChange": " \tprotected void handleInternalException( \t\tThrowable internalException, \t\tCompilationUnitDeclaration unit, \t\tCompilationResult result)", "diff": ["-\t\t\t\t\tunit);", "+\t\t\t\t\tunit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f39151650060d2f07a9e19e241453395", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "7aa41fe639eb46a740b35e612973cada9ba8267f", "commitAfterChange": "7ec8f457fa5afa1822c5c5a2c51b29731a82c4ce", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " private FieldBinding resolveTypeFor(FieldBinding field)", "signatureAfterChange": " private FieldBinding resolveTypeFor(FieldBinding field)", "diff": ["-\t\t\t\t\t\t? initializationScope.environment().convertToRawType(this) // enum constant is implicitly of declaring enum type", "+\t\t\t\t\t\t? initializationScope.environment().convertToRawType(this, false /*do not force conversion of enclosing types*/) // enum constant is implicitly of declaring enum type"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4694bf5c8daa1bdccfd96d94ce3a813", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DiscardWorkingCopyOperation.java", "commitBeforeChange": "eb5fe9a9319b819d64960c44d91e2995208510e4", "commitAfterChange": "f13fdcb2784e02f7feccade63189561cf467d9fb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["-\t\t\t\tmanager.removePerProjectInfo((JavaProject) javaProject);", "+\t\t\t\tmanager.removePerProjectInfo((JavaProject) javaProject, true /* remove external jar files indexes and timestamps*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f62bf91eecd539fdbb0681a2f09b73e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/src/org/eclipse/jdt/compiler/apt/tests/BatchTestUtils.java", "commitBeforeChange": "8a17153af69ddcddcc6ac5bd94649f0b523f5b72", "commitAfterChange": "a6fddb558f09852d0df8b3655125e6a25d3ce37b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic static void compileTree(JavaCompiler compiler, List<String> options, \t\t\tFile targetFolder, boolean useJLS8Processors, \t\t\tDiagnosticListener<? super JavaFileObject> listener)", "signatureAfterChange": "  \tpublic static void compileTree(JavaCompiler compiler, List<String> options, \t\t\tFile targetFolder, boolean useJLS8Processors, \t\t\tDiagnosticListener<? super JavaFileObject> listener)", "diff": ["-\t\taddProcessorPaths(options, useJLS8Processors);", "+\t\taddProcessorPaths(options, useJLS8Processors, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6d6e2fce789e867f221a8b1f088042d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "26ae2fb0b104f35c8ff6905d5a4d6e38ab8aa8e4", "commitAfterChange": "87c97e046bfd0082db22afde07881f33a4558114", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tpublic void consumeLocalType(char[] uniqueKey)", "signatureAfterChange": " \t \tpublic void consumeLocalType(char[] uniqueKey)", "diff": ["- \t\t\tif (CharOperation.equals(uniqueKey, localTypeBindings[i].computeUniqueKey())) {", "+ \t\t\tif (CharOperation.equals(uniqueKey, localTypeBindings[i].computeUniqueKey(false/*without access flags*/))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f70e8872b271a84395a16d6413e7c2a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/ReferenceCollection.java", "commitBeforeChange": "4aa9bc6aa2cb666fb0721f9b95f7c7e969829a0c", "commitAfterChange": "39745a85705361f7e5b8ca890f80a07d85799adc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \r static char[][] internSimpleNames(ArrayList simpleStrings)", "signatureAfterChange": "\r \r static char[][] internSimpleNames(ArrayList simpleStrings)", "diff": ["-\treturn internSimpleNames(result);\r", "+\treturn internSimpleNames(result, true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f732cfa4f015f71be2e9b367f4ca6362", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "277b33164a7aa6b44e8af80cbf75c89be37ef9e5", "commitAfterChange": "bca01eadc82a3abb71100149fcbedb07d33a04ad", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " public void testBug408230b() throws CoreException", "signatureAfterChange": " public void testBug408230b() throws CoreException", "diff": ["-\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\");", "+\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\", true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f75e9840526169c0b4b573a78ecd820e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/Engine.java", "commitBeforeChange": "de8634c6596eba9d498f21b3f06a4d952c468878", "commitAfterChange": "ed3ff9a36eb2db48659e462eacb164d15ad7a872", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tprotected boolean mustQualifyType( \t\tchar[] packageName, \t\tchar[] typeName, \t\tchar[] enclosingTypeNames, \t\tint modifiers)", "signatureAfterChange": " \t \tprotected boolean mustQualifyType( \t\tchar[] packageName, \t\tchar[] typeName, \t\tchar[] enclosingTypeNames, \t\tint modifiers)", "diff": ["-\t\t\t\t\t\t\t\t\tNameLookup.ACCEPT_ALL) != null) {", "+\t\t\t\t\t\t\t\t\tNameLookup.ACCEPT_ALL,", "+\t\t\t\t\t\t\t\t\tfalse/*don't check restrictions*/) != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f978ef74a3f9851506f93e2d718f7fe8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "47e88d0335bbb81b7bc00bc5460ee9a54afeb8fd", "commitAfterChange": "c61ba8a09dc9c83fb9681276880af852ba1fdf7c", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "\r \tprivate static void updateVariableValue(\r \t\tString variableName,\r \t\tIPath path,\r \t\tIProgressMonitor monitor)\r \t\tthrows JavaModelException", "signatureAfterChange": "\r \tprivate static void updateVariableValue(\r \t\tString variableName,\r \t\tIPath path,\r \t\tIProgressMonitor monitor)\r \t\tthrows JavaModelException", "diff": ["+\t\t\t\t\t\t\ttrue,\r", "-\t\t\t\t\t// force build if in auto build mode\r", "-\t\t\t\t\t (IClasspathEntry[]) affectedProjects.get(project));\r", "+\t\t\t\t\t\t\t// force build if in auto build mode\r", "+\t\t\t\t\t\t\t(IClasspathEntry[]) affectedProjects.get(project));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9c282d2f48b8e53c6275df825350974", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "277b33164a7aa6b44e8af80cbf75c89be37ef9e5", "commitAfterChange": "bca01eadc82a3abb71100149fcbedb07d33a04ad", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " public void testBug408230j() throws CoreException", "signatureAfterChange": " public void testBug408230j() throws CoreException", "diff": ["-\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\");", "+\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\", true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fafd81c393b2f4f6bae5114fe6f3a305", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "a127c18eb2e0be7f3c68a60246b08a9a69e7be5d", "commitAfterChange": "771a62c1c5090742b5612a8958d0207ca0f557cc", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 131, "signatureBeforeChange": " \tpublic void test0512() throws JavaModelException", "signatureAfterChange": " \tpublic void test0512() throws JavaModelException", "diff": ["-\t\tcheckSourceRange(declaration, \"public A();\", source);", "+\t\tcheckSourceRange(declaration, \"public A();\", source, true/*expectMalformed*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb2082312c0a563e57a4e5d3bc3d670b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "30748a6c6dfe6f7060b223cad8c061c5c1b6cae9", "commitAfterChange": "1a0dc0ac3e33cbb594dc3b8ca78970e5922d2a33", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tprivate void updateClasspath() throws JavaModelException", "signatureAfterChange": "  \tprivate void updateClasspath() throws JavaModelException", "diff": ["-\t\t\tthis.newResolvedPath = project.getResolvedClasspath(true, this.canChangeResources);", "+\t\t\tthis.newResolvedPath = project.getResolvedClasspath(true, this.canChangeResources, false/*don't returnResolutionInProgress*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcb084011daff81c87ab15da715416c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTModelBridgeTests.java", "commitBeforeChange": "a8a55ef8028ddd96daf4473daaec157ec40ab668", "commitAfterChange": "2c2d8aa7ba193d80394867d2f6025d47f27b1f9e", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": " \tpublic void testMethod10() throws CoreException", "signatureAfterChange": " \tpublic void testMethod10() throws CoreException", "diff": ["-\t\t\tASTNode node = buildAST(null/*use existing contents*/, cu, false/*don't report errors*/, true/*statement recovery*/);", "+\t\t\tASTNode node = buildAST(null/*use existing contents*/, cu, false/*don't report errors*/, true/*statement recovery*/, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fce79b5bc99312af47b0faa30b256086", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterRecoveryTest.java", "commitBeforeChange": "5daa85176eeb6c050d87a4b7fb3642fbff63325e", "commitAfterChange": "d4d7f9bf434c822e7818dfb358fa83468e120df6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void test0001() throws JavaModelException", "signatureAfterChange": " \t \tpublic void test0001() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3, this.workingCopies[0], true);", "+\t\tASTNode result = runConversion(AST.JLS3, this.workingCopies[0], true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcf21e9df9b803b98da001a3b60cd69f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "30748a6c6dfe6f7060b223cad8c061c5c1b6cae9", "commitAfterChange": "1a0dc0ac3e33cbb594dc3b8ca78970e5922d2a33", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\t\t\t \tprivate void computeExpandedClasspath( \t\tJavaProject initialProject,  \t\tboolean ignoreUnresolvedVariable, \t\tboolean generateMarkerOnError, \t\tHashSet rootIDs, \t\tObjectVector accumulatedEntries, \t\tMap preferredClasspaths, \t\tMap preferredOutputs) throws JavaModelException", "signatureAfterChange": "\t\t\t \tprivate void computeExpandedClasspath( \t\tJavaProject initialProject,  \t\tboolean ignoreUnresolvedVariable, \t\tboolean generateMarkerOnError, \t\tHashSet rootIDs, \t\tObjectVector accumulatedEntries, \t\tMap preferredClasspaths, \t\tMap preferredOutputs) throws JavaModelException", "diff": ["-\t\t\t\t: getResolvedClasspath(ignoreUnresolvedVariable, generateMarkerOnError);", "+\t\t\t\t: getResolvedClasspath(ignoreUnresolvedVariable, generateMarkerOnError, false/*don't returnResolutionInProgress*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe25ae92e4fde81cce16ae6d51196ed6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "0790094c582259a11cb5775cf9802758597e2f7f", "commitAfterChange": "8631fe374a0c007fcac770c2d9427a82a5e04a3d", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tprivate boolean createExternalArchiveDelta(HashSet refreshedElements, IProgressMonitor monitor)", "signatureAfterChange": " \tprivate boolean createExternalArchiveDelta(HashSet refreshedElements, IProgressMonitor monitor)", "diff": ["-\t\t\t\t\t\t\t\t\tthis.manager.indexManager.indexLibrary(entryPath, project.getProject(), ((ClasspathEntry)entries[j]).getLibraryIndexLocation());", "+\t\t\t\t\t\t\t\t\tthis.manager.indexManager.indexLibrary(entryPath, project.getProject(), ((ClasspathEntry)entries[j]).getLibraryIndexLocation(), true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe3a1c2257e2a92b066db061ff18145c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "a8a55ef8028ddd96daf4473daaec157ec40ab668", "commitAfterChange": "2c2d8aa7ba193d80394867d2f6025d47f27b1f9e", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tpublic void test0436() throws JavaModelException", "signatureAfterChange": " \tpublic void test0436() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(sourceUnit, true);", "+\t\tASTNode result = runConversion(sourceUnit, true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe3cf6f02babf9fa24d012e97a820ba9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Argument.java", "commitBeforeChange": "628cadf5744ab383e80afb2f9e63de19db722144", "commitAfterChange": "06412e4ebddd7aaa1f5bc2a2fbe06678982f22b4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void bind(MethodScope scope, TypeBinding typeBinding, boolean used)", "signatureAfterChange": "  \tpublic void bind(MethodScope scope, TypeBinding typeBinding, boolean used)", "diff": ["-\t\tBinding existingVariable = scope.getBinding(name, BindingIds.VARIABLE, this);", "+\t\tBinding existingVariable = scope.getBinding(name, BindingIds.VARIABLE, this, false /*do not resolve hidden field*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffc5d7dfc3234a8928bb36174144153f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "ac0a475647873438b56b92aa8eacf680f1956087", "commitAfterChange": "29260aba0d4733f1052800912bd8371c1e6637a1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["-\t\t\tclasspathChanged(classpathChange);", "+\t\t\tclasspathChanged(classpathChange, true/*refresh if external linked folder already exists*/);"]}], "num": 33581}