{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "93e4581bc9dde521b2076ed81e1a35fb", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f1b32ef49f1bb8a13c7a27d54f0cc18", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/runtime/LocalVMLauncher.java", "commitBeforeChange": "bc1023a3db35de5f11d5861f411b9a4de78ba0ab", "commitAfterChange": "bb9caf310cba60ea26e86d0cc9ab1b54feb67156", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public static LocalVMLauncher getLauncher()", "signatureAfterChange": " public static LocalVMLauncher getLauncher()", "diff": ["-\t} else {", "-\t\tFile file = new File(Util.getJREDirectory() + \"/lib/rt.jar\");", "-\t\tif (file.exists()) {", "-\t\t\treturn new StandardVMLauncher();", "-\t\t} else {", "-\t\t\tif (\"IBM J9SE VM\".equals(vmName)) {", "-\t\t\t\treturn new SideCarJ9VMLauncher();", "-\t\t\t} else {", "-\t\t\t\treturn new SideCarVMLauncher();", "-\t\t\t}", "-\t\t}", "+\tFile file = new File(Util.getJREDirectory() + \"/lib/rt.jar\");", "+\tif (file.exists()) {", "+\t\treturn new StandardVMLauncher();", "+\t}", "+\tif (\"IBM J9SE VM\".equals(vmName)) {", "+\t\treturn new SideCarJ9VMLauncher();", "+\t}", "+\treturn new SideCarVMLauncher();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35538dc8d3109a8921d77e4e35e6a09c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/WorkingCopy.java", "commitBeforeChange": "803ba016f131f4ec30746b0086adac5a909a8608", "commitAfterChange": "795246d8edc252b417c1fce229af2991829481c9", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " protected void openParent(IProgressMonitor pm) throws JavaModelException", "signatureAfterChange": " protected void openParent(IProgressMonitor pm) throws JavaModelException", "diff": ["-\ttry {", "-\t\tsuper.openParent(pm);", "-\t} catch(JavaModelException e){", "-\t\t// allow parent to not exist for working copies defined outside classpath", "-\t\tif (!e.isDoesNotExist()){ ", "-\t\t\tthrow e;", "+\tif (FIX_BUG25184) {", "+\t\ttry {", "+\t\t\tsuper.openParent(pm);", "+\t\t} catch(JavaModelException e){", "+\t\t\t// allow parent to not exist for working copies defined outside classpath", "+\t\t\tif (!e.isDoesNotExist()){ ", "+\t\t\t\tthrow e;", "+\t\t\t}", "+\t} else {", "+\t\tsuper.openParent(pm);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69e2ae6bb05072a13b3c200d3d1be54f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "45788628c132b714783c5985d5117e2a6f5b3e5b", "commitAfterChange": "ed230d7da6ab9728129283fd00e6cd341cfcf50b", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " public IImportDeclaration[] getImports() throws JavaModelException", "signatureAfterChange": " public IImportDeclaration[] getImports() throws JavaModelException", "diff": ["-\tIImportContainer container= getImportContainer();", "-\tif (container.exists()) {", "+\ttry {", "+\t\tIImportContainer container= getImportContainer();", "-\t} else if (!exists()) {", "-\t\t\tthrow newNotPresentException();", "-\t} else {", "-\t\treturn new IImportDeclaration[0];", "+\t} catch (JavaModelException e) {", "+\t\tIJavaElement[] elements;", "+\t\tif (e.isDoesNotExist()", "+\t\t\t\t&& (elements = e.getJavaModelStatus().getElements()).length > 0", "+\t\t\t\t&& elements[0] == this)", "+\t\t\tthrow e;", "+\t\treturn NO_IMPORTS;", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d140dd4e0fcacd64055a475ee4187d5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "4e65c4119dadcaa4c5efef86f1373d469b137c02", "commitAfterChange": "028fabba816eeb0fd840dacac7e8e60f3c3758c8", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": " protected void openParent(Object childInfo, HashMap newElements, IProgressMonitor pm) throws JavaModelException", "signatureAfterChange": " protected void openParent(Object childInfo, HashMap newElements, IProgressMonitor pm) throws JavaModelException", "diff": ["- */", "-\ttry {", "+\tif (!isWorkingCopy())", "-\t} catch(JavaModelException e){", "-\t\t// allow parent to not exist for working copies defined outside classpath", "-\t\tif (!isWorkingCopy() && !e.isDoesNotExist()){ ", "-\t\t\tthrow e;", "-\t\t}", "-\t}", "+\t// don't open parent for a working copy to speed up the first becomeWorkingCopy", "+\t// (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=89411)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e86f48b43e137683882c53175181c02c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ReconcileWorkingCopyOperation.java", "commitBeforeChange": "6700083354b893930a425843fb7de84c2bf92a0b", "commitAfterChange": "16d2f227c83166edb0478b06ddca92e3871fed38", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic org.eclipse.jdt.core.dom.CompilationUnit makeConsistent(CompilationUnit workingCopy, IProblemRequestor problemRequestor) throws JavaModelException", "signatureAfterChange": " \tpublic org.eclipse.jdt.core.dom.CompilationUnit makeConsistent(CompilationUnit workingCopy, IProblemRequestor problemRequestor) throws JavaModelException", "diff": ["+\t\t\t    } catch (JavaModelException e) {", "+\t\t\t    \tif (JavaProject.hasJavaNature(workingCopy.getJavaProject().getProject()))", "+\t\t\t    \t\tthrow e;", "+\t\t\t    \t// else JavaProject has lost its nature (or most likely was closed/deleted) while reconciling -> ignore", "+\t\t\t    \t// (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=100919)"]}], "num": 40926}