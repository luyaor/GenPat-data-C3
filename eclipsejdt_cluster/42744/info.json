{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "333e01b444c4a8b4d60b85c6d44119a8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11393db92769e9a61974151d1361fe47", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "955478e6d2220d787f88d27b5ca186d67f088e58", "commitAfterChange": "997a25bfb062d5e13ab988c44d8a015d4710ad9a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic static Test buildTestSuite(Class evaluationTestClass, String suiteName)", "signatureAfterChange": "  \tpublic static Test buildTestSuite(Class evaluationTestClass, String suiteName)", "diff": ["-\t\t\t\t\tif (testsPrefix == null && testsNames == null && testsNumbers == null && testsRange == null) {", "+\t\t\t\t\tif (TESTS_PREFIX == null && TESTS_NAMES == null && TESTS_NUMBERS == null && TESTS_SEARCH == null) {", "-\t\t\t\t\tif (testsPrefix == null || methName.startsWith(testsPrefix)) {", "-\t\t\t\t\t\tint numStart = testsPrefix==null ? 4 /* test */ : testsPrefix.length();", "+\t\t\t\t\tif (TESTS_PREFIX == null || methName.startsWith(TESTS_PREFIX)) {", "+\t\t\t\t\t\tint numStart = TESTS_PREFIX==null ? 4 /* test */ : TESTS_PREFIX.length();", "-\t\t\t\t\t\tif (testsNames != null) {", "-\t\t\t\t\t\t\tfor (int i = 0, imax= testsNames.length; i<imax; i++) {", "-\t\t\t\t\t\t\t\tif (testsNames[i].equals(methName) || testsNames[i].equals(methName.substring(numStart))) {", "+\t\t\t\t\t\tif (TESTS_NAMES != null) {", "+\t\t\t\t\t\t\tfor (int i = 0, imax= TESTS_NAMES.length; i<imax; i++) {", "+\t\t\t\t\t\t\t\tif (TESTS_NAMES[i].equals(methName) || TESTS_NAMES[i].equals(methName.substring(numStart))) {", "-\t\t\t\t\t\t\t\t\tif (testsNumbers != null && !tests.contains(methName)) {", "-\t\t\t\t\t\t\t\t\t\tfor (int i = 0; i < testsNumbers.length; i++) {", "-\t\t\t\t\t\t\t\t\t\t\tif (testsNumbers[i] == num) {", "+\t\t\t\t\t\t\t\t\tif (TESTS_NUMBERS != null && !tests.contains(methName)) {", "+\t\t\t\t\t\t\t\t\t\tfor (int i = 0; i < TESTS_NUMBERS.length; i++) {", "+\t\t\t\t\t\t\t\t\t\t\tif (TESTS_NUMBERS[i] == num) {", "-\t\t\t\t\t\t\t\t\tif (testsRange != null && testsRange.length == 2 && !tests.contains(methName)) {", "-\t\t\t\t\t\t\t\t\t\tif ((testsRange[0]==-1 || num>=testsRange[0]) && (testsRange[1]==-1 || num<=testsRange[1])) {", "+\t\t\t\t\t\t\t\t\tif (TESTS_SEARCH != null && TESTS_SEARCH.length == 2 && !tests.contains(methName)) {", "+\t\t\t\t\t\t\t\t\t\tif ((TESTS_SEARCH[0]==-1 || num>=TESTS_SEARCH[0]) && (TESTS_SEARCH[1]==-1 || num<=TESTS_SEARCH[1])) {", "-\t\t\t\t\t\tif (testsNames==null && testsNumbers==null && testsRange==null) {", "+\t\t\t\t\t\tif (TESTS_NAMES==null && TESTS_NUMBERS==null && TESTS_SEARCH==null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dafe2610a84e514147e4b8acbc46044", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "8861b8acfd87086e544117143aef10af0195095f", "commitAfterChange": "e6a8418fa053d90159e93cddfdeaf1bb437e9155", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic boolean compile(String[] argv)", "signatureAfterChange": " \tpublic boolean compile(String[] argv)", "diff": ["-\t\t\t\t\tout.print(Main.bind(\"progress.compiling\")); //$NON-NLS-1$", "+\t\t\t\t\tout.println(Main.bind(\"progress.compiling\")); //$NON-NLS-1$", "-\t\t\t\t\t\t\tout.print(Main.bind(\"compile.oneProblem\")); //$NON-NLS-1$", "+\t\t\t\t\t\t\terr.print(Main.bind(\"compile.oneProblem\")); //$NON-NLS-1$", "-\t\t\t\t\t\t\tout.print(", "+\t\t\t\t\t\t\terr.print(", "-\t\t\t\t\t\tout.print(\" (\"); //$NON-NLS-1$", "+\t\t\t\t\t\terr.print(\" (\"); //$NON-NLS-1$", "-\t\t\t\t\t\t\t\tout.print(Main.bind(\"compile.oneError\")); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\terr.print(Main.bind(\"compile.oneError\")); //$NON-NLS-1$", "-\t\t\t\t\t\t\t\tout.print(", "+\t\t\t\t\t\t\t\terr.print(", "-\t\t\t\t\t\t\t\tout.print(\", \"); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\terr.print(\", \"); //$NON-NLS-1$", "-\t\t\t\t\t\t\t\tout.print(Main.bind(\"compile.oneWarning\")); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\terr.print(Main.bind(\"compile.oneWarning\")); //$NON-NLS-1$", "-\t\t\t\t\t\t\t\tout.print(", "+\t\t\t\t\t\t\t\terr.print(", "-\t\t\t\t\t\tout.println(\")\"); //$NON-NLS-1$", "+\t\t\t\t\t\terr.println(\")\"); //$NON-NLS-1$", "-\t\t\t\t\t\t\tout.print(Main.bind(\"compile.oneClassFileGenerated\")); //$NON-NLS-1$", "+\t\t\t\t\t\t\tout.println(Main.bind(\"compile.oneClassFileGenerated\")); //$NON-NLS-1$", "-\t\t\t\t\t\t\tout.print(", "+\t\t\t\t\t\t\tout.println(", "-\t\t\t\t\tSystem.out.println();", "+\t\t\t\t\tout.println();", "+\t\t\t\terr.flush();", "-\t\t\tout.println(e.getMessage());", "-\t\t\tout.println(\"------------------------\"); //$NON-NLS-1$", "+\t\t\terr.println(e.getMessage());", "+\t\t\terr.println(\"------------------------\"); //$NON-NLS-1$", "+\t\t\t\terr.flush();", "-\t\t\t\t\tout.close();", "+\t\t\t\t\terr.close();", "+\t\t\terr.flush();", "-\t\t\t\tout.close();", "+\t\t\t\terr.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0835fdb2811447fdb487a83dbd0caef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "fe25f265c04b05b78a3922c802443d0f290eb28d", "commitAfterChange": "24d226ada8d61f965d94976697c07601e6dce9f7", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic static IClasspathContainer getClasspathContainer(final IPath containerPath, final IJavaProject project) throws JavaModelException", "signatureAfterChange": " \tpublic static IClasspathContainer getClasspathContainer(final IPath containerPath, final IJavaProject project) throws JavaModelException", "diff": ["-\t\t\t\t\tSystem.out.println(\"CPContainer INIT - triggering initialization of: [\"+project.getElementName()+\"] \" + containerPath + \" using initializer: \"+ initializer); //$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$", "-\t\t\t\t\tnew Exception(\"FAKE exception for dumping current CPContainer ([\"+project.getElementName()+\"] \"+ containerPath+ \")INIT invocation stack trace\").printStackTrace(); //$NON-NLS-1$//$NON-NLS-2$//$NON-NLS-3$", "+\t\t\t\t\tUtil.verbose(\"CPContainer INIT - triggering initialization\"); //$NON-NLS-1$", "+\t\t\t\t\tUtil.verbose(\"\tproject: \" + project.getElementName()); //$NON-NLS-1$", "+\t\t\t\t\tUtil.verbose(\"\tcontainer path: \" + containerPath); //$NON-NLS-1$", "+\t\t\t\t\tUtil.verbose(\"\tinitializer: \" + initializer); //$NON-NLS-1$", "+\t\t\t\t\tUtil.verbose(\"\tinvocation stack trace:\"); //$NON-NLS-1$", "+\t\t\t\t\tnew Exception(\"<Fake exception>\").printStackTrace(System.out); //$NON-NLS-1$", "-\t\t\t\t\tSystem.out.print(\"CPContainer INIT - after resolution: [\"+project.getElementName()+\"] \" + containerPath + \" --> \"); //$NON-NLS-2$//$NON-NLS-1$//$NON-NLS-3$", "+\t\t\t\t\tUtil.verbose(\"CPContainer INIT - after resolution\"); //$NON-NLS-1$", "+\t\t\t\t\tUtil.verbose(\"\tproject: \" + project.getElementName()); //$NON-NLS-1$", "+\t\t\t\t\tUtil.verbose(\"\tcontainer path: \" + containerPath); //$NON-NLS-1$", "-\t\t\t\t\t\tSystem.out.print(\"container: \"+container.getDescription()+\" {\"); //$NON-NLS-2$//$NON-NLS-1$", "+\t\t\t\t\t\tUtil.verbose(\"\tcontainer: \"+container.getDescription()+\" {\"); //$NON-NLS-2$//$NON-NLS-1$", "-\t\t\t\t\t\t\t\tif (i > 0) System.out.println(\", \");//$NON-NLS-1$", "-\t\t\t\t\t\t\t\tSystem.out.println(entries[i]);", "+\t\t\t\t\t\t\t\tUtil.verbose(\"\t\t\" + entries[i]); //$NON-NLS-1$", "-\t\t\t\t\t\tSystem.out.println(\"}\");//$NON-NLS-1$", "+\t\t\t\t\t\tUtil.verbose(\"\t}\");//$NON-NLS-1$", "-\t\t\t\t\t\tSystem.out.println(\"{unbound}\");//$NON-NLS-1$", "+\t\t\t\t\t\tUtil.verbose(\"\tcontainer: {unbound}\");//$NON-NLS-1$", "-\t\t\t\t\tSystem.out.println(\"CPContainer INIT - no initializer found for: \"+project.getElementName()+\"] \" + containerPath); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\tUtil.verbose(\"CPContainer INIT - no initializer found\"); //$NON-NLS-1$", "+\t\t\t\t\tUtil.verbose(\"\tproject: \" + project.getElementName()); //$NON-NLS-1$", "+\t\t\t\t\tUtil.verbose(\"\tcontainer path: \" + containerPath); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b457908dc6e08abaf7d303cdebfa0e0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "fe25f265c04b05b78a3922c802443d0f290eb28d", "commitAfterChange": "24d226ada8d61f965d94976697c07601e6dce9f7", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic static IPath getClasspathVariable(final String variableName)", "signatureAfterChange": " \tpublic static IPath getClasspathVariable(final String variableName)", "diff": ["-\t\t\t\tSystem.out.println(\"CPVariable INIT - triggering initialization of: \" + variableName+ \" using initializer: \"+ initializer); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\tnew Exception(\"FAKE exception for dumping current CPVariable (\"+variableName+ \")INIT invocation stack trace\").printStackTrace(); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t\tUtil.verbose(\"CPVariable INIT - triggering initialization\"); //$NON-NLS-1$", "+\t\t\t\tUtil.verbose(\"\tvariable: \" + variableName); //$NON-NLS-1$", "+\t\t\t\tUtil.verbose(\"\tinitializer: \" + initializer); //$NON-NLS-1$", "+\t\t\t\tnew Exception(\"<Fake exception>\").printStackTrace(System.out); //$NON-NLS-1$", "-\t\t\t\t\tSystem.out.println(\"CPVariable INIT - after initialization: \" + variableName + \" --> \" + variablePath); //$NON-NLS-2$//$NON-NLS-1$", "+\t\t\t\t\tUtil.verbose(\"CPVariable INIT - after initialization\"); //$NON-NLS-1$", "+\t\t\t\t\tUtil.verbose(\"\tvariable: \" + variableName); //$NON-NLS-1$", "+\t\t\t\t\tUtil.verbose(\"\tvariable path: \" + variablePath); //$NON-NLS-1$", "-\t\t\t\tSystem.out.println(\"CPVariable INIT - no initializer found for: \" + variableName); //$NON-NLS-1$", "+\t\t\t\tUtil.verbose(\"CPVariable INIT - no initializer found\"); //$NON-NLS-1$", "+\t\t\t\tUtil.verbose(\"\tvariable: \" + variableName); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "beee1c6ff60f69dd5edbeaa14f50ca72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "fe25f265c04b05b78a3922c802443d0f290eb28d", "commitAfterChange": "24d226ada8d61f965d94976697c07601e6dce9f7", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic static ClasspathContainerInitializer getClasspathContainerInitializer(String containerID)", "signatureAfterChange": " \tpublic static ClasspathContainerInitializer getClasspathContainerInitializer(String containerID)", "diff": ["-\t\t\t\t\t\t\tSystem.out.println(\"CPContainer INIT - found initializer: \"+containerID +\" --> \" + configElements[j].getAttribute(\"class\"));//$NON-NLS-3$//$NON-NLS-2$//$NON-NLS-1$", "+\t\t\t\t\t\t\tUtil.verbose(\"CPContainer INIT - found initializer\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\tUtil.verbose(\"\tcontainer ID: \" + containerID); //$NON-NLS-1$", "+\t\t\t\t\t\t\tUtil.verbose(\"\tclass: \" + configElements[j].getAttribute(\"class\")); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t\t\t\t\tSystem.out.println(\"CPContainer INIT - failed to instanciate initializer: \"+containerID +\" --> \" + configElements[j].getAttribute(\"class\"));//$NON-NLS-3$//$NON-NLS-2$//$NON-NLS-1$", "+\t\t\t\t\t\t\t\tUtil.verbose(\"CPContainer INIT - failed to instanciate initializer\", System.err); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tUtil.verbose(\"\tcontainer ID: \" + containerID, System.err); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tUtil.verbose(\"\tclass: \" + configElements[j].getAttribute(\"class\"), System.err); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaf0c0a1221dc8858a6764edd94acbec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "fe25f265c04b05b78a3922c802443d0f290eb28d", "commitAfterChange": "24d226ada8d61f965d94976697c07601e6dce9f7", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " \tpublic static void setClasspathContainer(final IPath containerPath, IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic static void setClasspathContainer(final IPath containerPath, IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\tSystem.out.println(\"CPContainer SET  - setting container: [\"+containerPath+\"] for projects: {\" //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t+ (org.eclipse.jdt.internal.compiler.util.Util.toString(affectedProjects, ", "-\t\t\t\t\t\tnew org.eclipse.jdt.internal.compiler.util.Util.Displayable(){ ", "-\t\t\t\t\t\t\tpublic String displayString(Object o) { return ((IJavaProject) o).getElementName(); }", "-\t\t\t\t\t\t}))", "-\t\t\t\t+ \"} with values: \" //$NON-NLS-1$", "-\t\t\t\t+ (org.eclipse.jdt.internal.compiler.util.Util.toString(respectiveContainers, ", "+\t\t\tUtil.verbose(\"CPContainer SET  - setting container\"); //$NON-NLS-1$", "+\t\t\tUtil.verbose(\"\tcontainer path: \" + containerPath); //$NON-NLS-1$", "+\t\t\tUtil.verbose(", "+\t\t\t\t\"\tprojects: {\" //$NON-NLS-1$", "+\t\t\t\t+ org.eclipse.jdt.internal.compiler.util.Util.toString( ", "+\t\t\t\t\taffectedProjects, ", "+\t\t\t\t\tnew org.eclipse.jdt.internal.compiler.util.Util.Displayable(){ ", "+\t\t\t\t\t\tpublic String displayString(Object o) { return ((IJavaProject) o).getElementName(); }", "+\t\t\t\t\t})", "+\t\t\t\t+ \"}\"); //$NON-NLS-1$", "+\t\t\tUtil.verbose(", "+\t\t\t\t\"\tvalues: {\" //$NON-NLS-1$", "+\t\t\t\t+ org.eclipse.jdt.internal.compiler.util.Util.toString(", "+\t\t\t\t\t\trespectiveContainers, ", "-\t\t\t\t\t\t}))", "-\t\t\t\t\t);", "+\t\t\t\t\t\t})", "+\t\t\t\t+ \"}\"); //$NON-NLS-1$", "-\t\t\t\t\t\t\tSystem.out.println(\"CPContainer INIT - reentering access to project container: [\"+affectedProject.getElementName()+\"] \" + containerPath + \" during its initialization, will see previous value: \"+ previousContainer.getDescription()); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\t\t\t\t\t\tUtil.verbose(\"CPContainer INIT - reentering access to project container during its initialization, will see previous value\"); //$NON-NLS-1$ ", "+\t\t\t\t\t\t\tUtil.verbose(\"\tproject: \" + affectedProject.getElementName()); //$NON-NLS-1$", "+\t\t\t\t\t\t\tUtil.verbose(\"\tcontainer path: \" + containerPath); //$NON-NLS-1$", "+\t\t\t\t\t\t\tUtil.verbose(\"\tprevious value: \" + previousContainer.getDescription()); //$NON-NLS-1$", "-\t\t\t\t\t\t\tSystem.out.println(\"CPContainer SET  - updating affected project: [\"+affectedProject.getElementName()+\"] due to setting container: \" + containerPath); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\t\t\tUtil.verbose(\"CPContainer SET  - updating affected project due to setting container\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\tUtil.verbose(\"\tproject: \" + affectedProject.getElementName()); //$NON-NLS-1$", "+\t\t\t\t\t\t\tUtil.verbose(\"\tcontainer path: \" + containerPath); //$NON-NLS-1$", "-\t\t\t\tSystem.out.println(\"CPContainer SET  - FAILED DUE TO EXCEPTION: \"+containerPath); //$NON-NLS-1$", "+\t\t\t\tUtil.verbose(\"CPContainer SET  - FAILED DUE TO EXCEPTION\", System.err); //$NON-NLS-1$", "+\t\t\t\tUtil.verbose(\"\tcontainer path: \" + containerPath, System.err); //$NON-NLS-1$"]}], "num": 42744}