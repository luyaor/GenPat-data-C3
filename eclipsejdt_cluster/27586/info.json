{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5abf745ccbec2bcabf73bbef7a7df896", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56f6785c98c751c1a334b9bcd224b9d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "7e5cc03e445550d3cbc10c611218c79332074276", "commitAfterChange": "c57706d05dc3654769cca2053ff9cb20fb0a6664", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 21, "signatureBeforeChange": "\r \r \tpublic void reportBinaryMatch(\r \t\tIMember binaryMember,\r \t\tIBinaryType info,\r \t\tint accuracy)\r \t\tthrows CoreException, JavaModelException", "signatureAfterChange": "\r private void reportBinaryMatch(IMember binaryMember, IBinaryType info, int accuracy) throws CoreException, JavaModelException", "diff": ["-\r", "-\tpublic void reportBinaryMatch(\r", "-\t\tIMember binaryMember,\r", "-\t\tIBinaryType info,\r", "-\t\tint accuracy)\r", "-\t\tthrows CoreException, JavaModelException {\r", "-\t\tISourceRange range = binaryMember.getNameRange();\r", "-\t\tif (range.getOffset() == -1) {\r", "-\t\t\tClassFile classFile = (ClassFile) binaryMember.getClassFile();\r", "-\t\t\tSourceMapper mapper = classFile.getSourceMapper();\r", "-\t\t\tif (mapper != null) {\r", "-\t\t\t\tIType type = classFile.getType();\r", "-\t\t\t\tchar[] contents = mapper.findSource(type, info);\r", "-\t\t\t\tif (contents != null) {\r", "-\t\t\t\t\trange = mapper.mapSource(type, contents, binaryMember);\r", "-\t\t\t\t}\r", "+}\r", "+private void reportBinaryMatch(IMember binaryMember, IBinaryType info, int accuracy) throws CoreException, JavaModelException {\r", "+\tISourceRange range = binaryMember.getNameRange();\r", "+\tif (range.getOffset() == -1) {\r", "+\t\tClassFile classFile = (ClassFile)binaryMember.getClassFile();\r", "+\t\tSourceMapper mapper = classFile.getSourceMapper();\r", "+\t\tif (mapper != null) {\r", "+\t\t\tIType type = classFile.getType();\r", "+\t\t\tchar[] contents = mapper.findSource(type, info);\r", "+\t\t\tif (contents != null) {\r", "+\t\t\t\trange = mapper.mapSource(type, contents, binaryMember);\r", "-\t\tint startIndex = range.getOffset();\r", "-\t\tint endIndex = startIndex + range.getLength() - 1;\r", "-\t\tthis.report(startIndex, endIndex, binaryMember, accuracy);\r", "+\tint startIndex = range.getOffset();\r", "+\tint endIndex = startIndex + range.getLength() - 1;\r", "+\tthis.report(startIndex, endIndex, binaryMember, accuracy);\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d4da55c5323443f58ca2af4a36fb4ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "46418d248f89a29f49a77d154cdbfa57c408b256", "commitAfterChange": "c85433e27f0fa74bfe8e06c38c1c02c51b5599d7", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 21, "signatureBeforeChange": "\r \r \tpublic void reportBinaryMatch(\r \t\tIMember binaryMember,\r \t\tIBinaryType info,\r \t\tint accuracy)\r \t\tthrows CoreException, JavaModelException", "signatureAfterChange": "\r private void reportBinaryMatch(IMember binaryMember, IBinaryType info, int accuracy) throws CoreException, JavaModelException", "diff": ["-\r", "-\tpublic void reportBinaryMatch(\r", "-\t\tIMember binaryMember,\r", "-\t\tIBinaryType info,\r", "-\t\tint accuracy)\r", "-\t\tthrows CoreException, JavaModelException {\r", "-\t\tISourceRange range = binaryMember.getNameRange();\r", "-\t\tif (range.getOffset() == -1) {\r", "-\t\t\tClassFile classFile = (ClassFile) binaryMember.getClassFile();\r", "-\t\t\tSourceMapper mapper = classFile.getSourceMapper();\r", "-\t\t\tif (mapper != null) {\r", "-\t\t\t\tIType type = classFile.getType();\r", "-\t\t\t\tchar[] contents = mapper.findSource(type, info);\r", "-\t\t\t\tif (contents != null) {\r", "-\t\t\t\t\trange = mapper.mapSource(type, contents, binaryMember);\r", "-\t\t\t\t}\r", "+}\r", "+private void reportBinaryMatch(IMember binaryMember, IBinaryType info, int accuracy) throws CoreException, JavaModelException {\r", "+\tISourceRange range = binaryMember.getNameRange();\r", "+\tif (range.getOffset() == -1) {\r", "+\t\tClassFile classFile = (ClassFile)binaryMember.getClassFile();\r", "+\t\tSourceMapper mapper = classFile.getSourceMapper();\r", "+\t\tif (mapper != null) {\r", "+\t\t\tIType type = classFile.getType();\r", "+\t\t\tchar[] contents = mapper.findSource(type, info);\r", "+\t\t\tif (contents != null) {\r", "+\t\t\t\trange = mapper.mapSource(type, contents, binaryMember);\r", "-\t\tint startIndex = range.getOffset();\r", "-\t\tint endIndex = startIndex + range.getLength() - 1;\r", "-\t\tthis.report(startIndex, endIndex, binaryMember, accuracy);\r", "+\tint startIndex = range.getOffset();\r", "+\tint endIndex = startIndex + range.getLength() - 1;\r", "+\tthis.report(startIndex, endIndex, binaryMember, accuracy);\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "828518deab0c4b165adf86c9defdf414", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "a1b8b888d8c8c040023fcd2856f96f5ad6c69b3e", "commitAfterChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 21, "signatureBeforeChange": "\r \r \tpublic void reportBinaryMatch(\r \t\tIMember binaryMember,\r \t\tIBinaryType info,\r \t\tint accuracy)\r \t\tthrows CoreException, JavaModelException", "signatureAfterChange": "\r private void reportBinaryMatch(IMember binaryMember, IBinaryType info, int accuracy) throws CoreException, JavaModelException", "diff": ["-\r", "-\tpublic void reportBinaryMatch(\r", "-\t\tIMember binaryMember,\r", "-\t\tIBinaryType info,\r", "-\t\tint accuracy)\r", "-\t\tthrows CoreException, JavaModelException {\r", "-\t\tISourceRange range = binaryMember.getNameRange();\r", "-\t\tif (range.getOffset() == -1) {\r", "-\t\t\tClassFile classFile = (ClassFile) binaryMember.getClassFile();\r", "-\t\t\tSourceMapper mapper = classFile.getSourceMapper();\r", "-\t\t\tif (mapper != null) {\r", "-\t\t\t\tIType type = classFile.getType();\r", "-\t\t\t\tchar[] contents = mapper.findSource(type, info);\r", "-\t\t\t\tif (contents != null) {\r", "-\t\t\t\t\trange = mapper.mapSource(type, contents, binaryMember);\r", "-\t\t\t\t}\r", "+}\r", "+private void reportBinaryMatch(IMember binaryMember, IBinaryType info, int accuracy) throws CoreException, JavaModelException {\r", "+\tISourceRange range = binaryMember.getNameRange();\r", "+\tif (range.getOffset() == -1) {\r", "+\t\tClassFile classFile = (ClassFile)binaryMember.getClassFile();\r", "+\t\tSourceMapper mapper = classFile.getSourceMapper();\r", "+\t\tif (mapper != null) {\r", "+\t\t\tIType type = classFile.getType();\r", "+\t\t\tchar[] contents = mapper.findSource(type, info);\r", "+\t\t\tif (contents != null) {\r", "+\t\t\t\trange = mapper.mapSource(type, contents, binaryMember);\r", "-\t\tint startIndex = range.getOffset();\r", "-\t\tint endIndex = startIndex + range.getLength() - 1;\r", "-\t\tthis.report(startIndex, endIndex, binaryMember, accuracy);\r", "+\tint startIndex = range.getOffset();\r", "+\tint endIndex = startIndex + range.getLength() - 1;\r", "+\tthis.report(startIndex, endIndex, binaryMember, accuracy);\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc8a9af10553437e982e745ee5ddd7ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "commitAfterChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 21, "signatureBeforeChange": "\r \r \tpublic void reportBinaryMatch(\r \t\tIMember binaryMember,\r \t\tIBinaryType info,\r \t\tint accuracy)\r \t\tthrows CoreException, JavaModelException", "signatureAfterChange": "\r private void reportBinaryMatch(IMember binaryMember, IBinaryType info, int accuracy) throws CoreException, JavaModelException", "diff": ["-\r", "-\tpublic void reportBinaryMatch(\r", "-\t\tIMember binaryMember,\r", "-\t\tIBinaryType info,\r", "-\t\tint accuracy)\r", "-\t\tthrows CoreException, JavaModelException {\r", "-\t\tISourceRange range = binaryMember.getNameRange();\r", "-\t\tif (range.getOffset() == -1) {\r", "-\t\t\tClassFile classFile = (ClassFile) binaryMember.getClassFile();\r", "-\t\t\tSourceMapper mapper = classFile.getSourceMapper();\r", "-\t\t\tif (mapper != null) {\r", "-\t\t\t\tIType type = classFile.getType();\r", "-\t\t\t\tchar[] contents = mapper.findSource(type, info);\r", "-\t\t\t\tif (contents != null) {\r", "-\t\t\t\t\trange = mapper.mapSource(type, contents, binaryMember);\r", "-\t\t\t\t}\r", "+}\r", "+private void reportBinaryMatch(IMember binaryMember, IBinaryType info, int accuracy) throws CoreException, JavaModelException {\r", "+\tISourceRange range = binaryMember.getNameRange();\r", "+\tif (range.getOffset() == -1) {\r", "+\t\tClassFile classFile = (ClassFile)binaryMember.getClassFile();\r", "+\t\tSourceMapper mapper = classFile.getSourceMapper();\r", "+\t\tif (mapper != null) {\r", "+\t\t\tIType type = classFile.getType();\r", "+\t\t\tchar[] contents = mapper.findSource(type, info);\r", "+\t\t\tif (contents != null) {\r", "+\t\t\t\trange = mapper.mapSource(type, contents, binaryMember);\r", "-\t\tint startIndex = range.getOffset();\r", "-\t\tint endIndex = startIndex + range.getLength() - 1;\r", "-\t\tthis.report(startIndex, endIndex, binaryMember, accuracy);\r", "+\tint startIndex = range.getOffset();\r", "+\tint endIndex = startIndex + range.getLength() - 1;\r", "+\tthis.report(startIndex, endIndex, binaryMember, accuracy);\r", "+}\r"]}], "num": 27586}