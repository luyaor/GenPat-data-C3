{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7e08d0b7935a4c70650cfb30477d0ee3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59d4c43220a755f8edc60e9d10e63d5b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "3a7eebe0921eeefbdbf1fe4891891b6335310197", "commitAfterChange": "e8aa72d0e85424c76c1185b7518db6803dde6255", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void generateOptimizedBoolean( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tBranchLabel trueLabel, \t\tBranchLabel falseLabel, \t\tboolean valueRequired)", "signatureAfterChange": " public void generateOptimizedBoolean(BlockScope currentScope, CodeStream codeStream, BranchLabel trueLabel, BranchLabel falseLabel, boolean valueRequired)", "diff": ["-\t */", "-\tpublic void generateOptimizedBoolean(", "-\t\tBlockScope currentScope,", "-\t\tCodeStream codeStream,", "-\t\tBranchLabel trueLabel,", "-\t\tBranchLabel falseLabel,", "-\t\tboolean valueRequired) {", "-", "-\t\tif ((constant != Constant.NotAConstant) && (constant.typeID() == T_boolean)) {", "-\t\t\tsuper.generateOptimizedBoolean(", "-\t\t\t\ttrueLabel,", "-\t\t\t\tfalseLabel,", "-\t\t\treturn;", "-\t\t}", "-\t\tswitch ((bits & OperatorMASK) >> OperatorSHIFT) {", "-\t\t\tcase LESS :", "-\t\t\t\tgenerateOptimizedLessThan(", "-\t\t\t\t\tcurrentScope,", "-\t\t\t\t\tcodeStream,", "-\t\t\t\t\ttrueLabel,", "-\t\t\t\t\tfalseLabel,", "-\t\t\t\t\tvalueRequired);", "-\t\t\t\treturn;", "-\t\t\tcase LESS_EQUAL :", "-\t\t\t\tgenerateOptimizedLessThanOrEqual(", "-\t\t\t\t\tcurrentScope,", "-\t\t\t\t\tcodeStream,", "-\t\t\t\t\ttrueLabel,", "-\t\t\t\t\tfalseLabel,", "-\t\t\t\t\tvalueRequired);", "-\t\t\t\treturn;", "-\t\t\tcase GREATER :", "-\t\t\t\tgenerateOptimizedGreaterThan(", "-\t\t\t\t\tcurrentScope,", "-\t\t\t\t\tcodeStream,", "-\t\t\t\t\ttrueLabel,", "-\t\t\t\t\tfalseLabel,", "-\t\t\t\t\tvalueRequired);", "-\t\t\t\treturn;", "-\t\t\tcase GREATER_EQUAL :", "-\t\t\t\tgenerateOptimizedGreaterThanOrEqual(", "-\t\t\t\t\tcurrentScope,", "-\t\t\t\t\tcodeStream,", "-\t\t\t\t\ttrueLabel,", "-\t\t\t\t\tfalseLabel,", "-\t\t\t\t\tvalueRequired);", "-\t\t\t\treturn;", "-\t\t\tcase AND :", "-\t\t\t\tgenerateOptimizedLogicalAnd(", "-\t\t\t\t\tcurrentScope,", "-\t\t\t\t\tcodeStream,", "-\t\t\t\t\ttrueLabel,", "-\t\t\t\t\tfalseLabel,", "-\t\t\t\t\tvalueRequired);", "-\t\t\t\treturn;", "-\t\t\tcase OR :", "-\t\t\t\tgenerateOptimizedLogicalOr(", "-\t\t\t\t\tcurrentScope,", "-\t\t\t\t\tcodeStream,", "-\t\t\t\t\ttrueLabel,", "-\t\t\t\t\tfalseLabel,", "-\t\t\t\t\tvalueRequired);", "-\t\t\t\treturn;", "-\t\t\tcase XOR :", "-\t\t\t\tgenerateOptimizedLogicalXor(", "-\t\t\t\t\tcurrentScope,", "-\t\t\t\t\tcodeStream,", "-\t\t\t\t\ttrueLabel,", "-\t\t\t\t\tfalseLabel,", "-\t\t\t\t\tvalueRequired);", "-\t\t\t\treturn;", "-\t\t}", "+ */", "+public void generateOptimizedBoolean(BlockScope currentScope, CodeStream codeStream, BranchLabel trueLabel, BranchLabel falseLabel, boolean valueRequired) {", "+\tif ((this.constant != Constant.NotAConstant) && (this.constant.typeID() == TypeIds.T_boolean)) {", "+\t\treturn;", "+\tswitch ((this.bits & ASTNode.OperatorMASK) >> ASTNode.OperatorSHIFT) {", "+\t\tcase LESS :", "+\t\t\tgenerateOptimizedLessThan(", "+\t\t\t\tcurrentScope,", "+\t\t\t\tcodeStream,", "+\t\t\t\ttrueLabel,", "+\t\t\t\tfalseLabel,", "+\t\t\t\tvalueRequired);", "+\t\t\treturn;", "+\t\tcase LESS_EQUAL :", "+\t\t\tgenerateOptimizedLessThanOrEqual(", "+\t\t\t\tcurrentScope,", "+\t\t\t\tcodeStream,", "+\t\t\t\ttrueLabel,", "+\t\t\t\tfalseLabel,", "+\t\t\t\tvalueRequired);", "+\t\t\treturn;", "+\t\tcase GREATER :", "+\t\t\tgenerateOptimizedGreaterThan(", "+\t\t\t\tcurrentScope,", "+\t\t\t\tcodeStream,", "+\t\t\t\ttrueLabel,", "+\t\t\t\tfalseLabel,", "+\t\t\t\tvalueRequired);", "+\t\t\treturn;", "+\t\tcase GREATER_EQUAL :", "+\t\t\tgenerateOptimizedGreaterThanOrEqual(", "+\t\t\t\tcurrentScope,", "+\t\t\t\tcodeStream,", "+\t\t\t\ttrueLabel,", "+\t\t\t\tfalseLabel,", "+\t\t\t\tvalueRequired);", "+\t\t\treturn;", "+\t\tcase AND :", "+\t\t\tgenerateOptimizedLogicalAnd(", "+\t\t\t\tcurrentScope,", "+\t\t\t\tcodeStream,", "+\t\t\t\ttrueLabel,", "+\t\t\t\tfalseLabel,", "+\t\t\t\tvalueRequired);", "+\t\t\treturn;", "+\t\tcase OR :", "+\t\t\tgenerateOptimizedLogicalOr(", "+\t\t\t\tcurrentScope,", "+\t\t\t\tcodeStream,", "+\t\t\t\ttrueLabel,", "+\t\t\t\tfalseLabel,", "+\t\t\t\tvalueRequired);", "+\t\t\treturn;", "+\t\tcase XOR :", "+\t\t\tgenerateOptimizedLogicalXor(", "+\t\t\t\tcurrentScope,", "+\t\t\t\tcodeStream,", "+\t\t\t\ttrueLabel,", "+\t\t\t\tfalseLabel,", "+\t\t\t\tvalueRequired);", "+\t\t\treturn;", "+\t}", "+\tsuper.generateOptimizedBoolean(", "+\t\tcurrentScope,", "+\t\tcodeStream,", "+\t\ttrueLabel,", "+\t\tfalseLabel,", "+\t\tvalueRequired);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f33ff37888a0aba1488b6d976eb264da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetToCuMapper.java", "commitBeforeChange": "302df05b099c1ea06faca0b00f806513c7db6904", "commitAfterChange": "c661afbb38268ca6f18a772df813f6c69bb9e17c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " private void buildCUSource()", "signatureAfterChange": " private void buildCUSource()", "diff": ["-\tif (localVarNames != null) {", "-\t\tfor (int i = 0, max = localVarNames.length; i < max; i++) {", "+\tif (this.localVarNames != null) {", "+\t\tfor (int i = 0, max = this.localVarNames.length; i < max; i++) {", "-\t\t\tbuffer.append(localVarTypeNames[i]);", "+\t\t\tbuffer.append(this.localVarTypeNames[i]);", "-\t\t\tbuffer.append(localVarNames[i]);", "+\t\t\tbuffer.append(this.localVarNames[i]);", "-\tstartPosOffset = buffer.length();", "-\tbuffer.append(codeSnippet);", "+\tthis.startPosOffset = buffer.length();", "+\tbuffer.append(this.codeSnippet);"]}], "num": 63782}