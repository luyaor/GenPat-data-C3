{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "82f83092e78122c4c3e9ec45e712441d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47d8cb63a743958e159218d6037f6c47", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ConverterTestSetup.java", "commitBeforeChange": "d216bbf1af464941faf11b346674314a84379230", "commitAfterChange": "ce384dda3ca88a0c642fb27af8bd51d7f5e5bbea", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": " \t \tprotected void assertProblemsSize(CompilationUnit compilationUnit, int expectedSize)", "signatureAfterChange": " \tprotected void assertProblemsSize(CompilationUnit compilationUnit, int expectedSize, String expectedOutput)", "diff": ["+\t}", "+\tprotected void assertProblemsSize(CompilationUnit compilationUnit, int expectedSize, String expectedOutput) {", "-\t\t\tSystem.err.println(\"Wrong number of problems for \" + compilationUnit);", "-\t\t\tfor (int i = 0; i < length; i++) {", "-\t\t\t\tSystem.err.println(problems[i]);", "-\t\t\t}", "+\t\t\tcheckProblemMessages(expectedOutput, problems, length);", "+\t\tcheckProblemMessages(expectedOutput, problems, length);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b328576741b9f5b60753146fea934fb0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "46b62da526fe2a6ffd79b0ba880e83b9b19218e9", "commitAfterChange": "b86d8384eaf8c819d0430387f9f109e2adf4cb49", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  public char[] computeGenericTypeSignature(TypeVariableBinding[] typeVariables)", "signatureAfterChange": "  public char[] computeGenericTypeSignature(TypeVariableBinding[] typeVariables)", "diff": ["-\t    for (int i = 0; i < typeSig.length-1; i++) { // copy all but trailing semicolon", "-\t    \tsig.append(typeSig[i]);", "-\t    }", "+\t    sig.append(typeSig, 0, typeSig.length-1); // copy all but trailing semicolon", "-\t    for (int i = 0; i < typeSig.length-1; i++) { // copy all but trailing semicolon", "-\t    \tsig.append(typeSig[i]);", "-\t    }", "+\t    sig.append(typeSig, 0, typeSig.length-1); // copy all but trailing semicolon"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3a97f5cedfa96803a509690c187e146", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "46b62da526fe2a6ffd79b0ba880e83b9b19218e9", "commitAfterChange": "b86d8384eaf8c819d0430387f9f109e2adf4cb49", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tpublic char[] computeUniqueKey(boolean isLeaf)", "signatureAfterChange": " \t \tpublic char[] computeUniqueKey(boolean isLeaf)", "diff": ["-\t\t    for (int i = 0; i < typeSig.length-1; i++) sig.append(typeSig[i]); // copy all but trailing semicolon", "+\t\t    sig.append(typeSig, 0, typeSig.length-1); // copy all but trailing semicolon", "-\t\t    for (int i = 0; i < typeSig.length-1; i++) sig.append(typeSig[i]); // copy all but trailing semicolon", "+\t\t    sig.append(typeSig, 0, typeSig.length-1); // copy all but trailing semicolon", "-\t\t    for (int i = 0; i < typeSig.length-1; i++) sig.append(typeSig[i]); // copy all but trailing semicolon", "+\t\t    sig.append(typeSig, 0, typeSig.length-1); // copy all but trailing semicolon"]}], "num": 16931}