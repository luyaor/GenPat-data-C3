{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "752c1b7b3200ab059417f17f1f9efc9a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fd87c7c64d1515fe33d8e20c4fcb604", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "14df50722199cd72c578c54d9a05cc83731f2e32", "commitAfterChange": "85c7cff1360bd81398e5c21f0560acd7376e740e", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": " protected void setPaths(ArrayList bootclasspaths, \t\tString sourcepathClasspathArg, \t\tArrayList sourcepathClasspaths, \t\tArrayList classpaths, \t\tArrayList extdirsClasspaths, \t\tArrayList endorsedDirClasspaths, \t\tString customEncoding) throws InvalidInputException", "signatureAfterChange": " protected void setPaths(ArrayList bootclasspaths, \t\tString sourcepathClasspathArg, \t\tArrayList sourcepathClasspaths, \t\tArrayList classpaths, \t\tArrayList extdirsClasspaths, \t\tArrayList endorsedDirClasspaths, \t\tString customEncoding) throws InvalidInputException", "diff": ["-\t\t\t\t} else {", "+\t\t\t\t} else if (token.length() != 0) {", "-\t\t\t\t\t// should not happen - we go on anyway"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "201af5565f3c03f74212f065fbfb4417", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "69b02d68015b1f30ee38d1576a843274517957c7", "commitAfterChange": "c7a9edf536467451ba659d7e03ac6c483c5c0cfe", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void completionIdentifierCheck()", "signatureAfterChange": " public void completionIdentifierCheck()", "diff": ["+\t//if (assistNode != null) return; ", "+\tif (checkKeyword()) return;", "-", "+\t\tif (checkInstanceofKeyword()) return;", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21984c843b17317d4fbd6477baa54786", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/util/ExternalAnnotationUtil.java", "commitBeforeChange": "0747d5e7c6159c917fde8175fc9c67a8bade55fc", "commitAfterChange": "07efa537488d0df9da9dc6880afc536aaccc6b60", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic static IFile getAnnotationFile(IJavaProject project, ITypeBinding type, IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tpublic static IFile getAnnotationFile(IJavaProject project, ITypeBinding type, IProgressMonitor monitor) throws CoreException", "diff": ["+", "-\t\tIFile annotationZip = workspaceRoot.getFile(annotationPath);", "-\t\tif (annotationZip.exists())", "-\t\t\treturn null;", "-\t", "+", "+\t\tif (annotationPath.segmentCount() > 1) {", "+\t\t\tIFile annotationZip = workspaceRoot.getFile(annotationPath);", "+\t\t\tif (annotationZip.exists())", "+\t\t\t\treturn null;", "+\t\t}", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "296e18fb37ad6b0780b4b3f8fa6f3ba4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/WorkingCopy.java", "commitBeforeChange": "4acdc3f9aad85a6fe619f404dbbc54bcddf3ce1f", "commitAfterChange": "c4ab4e0b73940ce1ec2be4b6701e6bacd26266b6", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r protected void openWhenClosed(IProgressMonitor pm, IBuffer buffer) throws JavaModelException", "signatureAfterChange": "\r protected void openWhenClosed(IProgressMonitor pm, IBuffer buffer) throws JavaModelException", "diff": ["-\t\t\tCompilationUnit original = (CompilationUnit) getOriginalElement();\r", "-\t\t\tbuffer.setContents(original.getContents());\r", "+\t\t\tif (buffer.getCharacters() == null){\r", "+\t\t\t\tCompilationUnit original = (CompilationUnit) getOriginalElement();\r", "+\t\t\t\tbuffer.setContents(original.getContents());\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f698ff5be6cb27c49ccf38db479fb3a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableBinding.java", "commitBeforeChange": "73ac4b89b07a19913f32c5be3407713232b8261e", "commitAfterChange": "6309bc7b393d4ea593b349299d066f391f072168", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r \tpublic String getKey()", "signatureAfterChange": "\r \tpublic String getKey()", "diff": ["-\t\t\tbuffer.append(this.getDeclaringClass().getKey());\r", "+\t\t\tif (this.getDeclaringClass() != null) {\r", "+\t\t\t\tbuffer.append(this.getDeclaringClass().getKey());\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34076fccf0f9355c37446d7f130a905c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "e6021d67f030c85737aa105da719e9a09cfc30ed", "commitAfterChange": "47da1e1f50b1360a7b560d74dfe1c60303fec552", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": " private void readStreamBuffer(FileInputStream stream) throws IOException", "signatureAfterChange": " private void readStreamBuffer(InputStream stream) throws IOException", "diff": ["-private void readStreamBuffer(FileInputStream stream) throws IOException {", "+private void readStreamBuffer(InputStream stream) throws IOException {", "-\tif (this.bufferEnd < this.streamBuffer.length)", "-\t\treturn; // we're at the end of the stream - nothing left to read", "+\tif (this.bufferEnd < this.streamBuffer.length) {", "+\t\tif (stream.available() == 0)", "+\t\t\treturn; // we're at the end of the stream - nothing left to read", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "467d9cb4f9373fba24e8ee5e614d6232", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CompoundAssignment.java", "commitBeforeChange": "6c050fdd50da181a73c24a3d84f6766ee118b95b", "commitAfterChange": "f13a5d135f0d6d82ec59c09667ba7900fd57b604", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext,  \t\tFlowInfo flowInfo)", "signatureAfterChange": " \t public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext,  \t\tFlowInfo flowInfo)", "diff": ["-\tlhs.checkNPE(currentScope, flowContext, flowInfo, false /* skip String */);", "+\tif (this.resolvedType.id != T_JavaLangString) {", "+\t\tlhs.checkNPE(currentScope, flowContext, flowInfo);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68c60fc4e135d5f2d202b66fcfa3a199", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "63048f05f8ad7ef929a641d2f1b8bb0eaa24f28d", "commitAfterChange": "0aa7dea4bc76da1cfdaf2ad3978817e9aac1014f", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 47, "signatureBeforeChange": "  \t\tpublic final int rewriteList(ASTNode parent, StructuralPropertyDescriptor property, int offset, String keyword)", "signatureAfterChange": "  \t\tpublic final int rewriteList(ASTNode parent, StructuralPropertyDescriptor property, int offset, String keyword)", "diff": ["-\t\t\t\t\t\tdoTextRemove(currEnd, end - currEnd, editGroup); // remove separator", "+\t\t\t\t\t\tif (mustRemoveSeparator(currPos, i)) {", "+\t\t\t\t\t\t\tdoTextRemove(currEnd, end - currEnd, editGroup); // remove separator", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e11819ac11bf7efb127a36245cca632", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "ffcfe0dac7f476f076089d3cdae600b5982efdfb", "commitAfterChange": "263d5090059fdde1fe0ad777198fe1aa5d325a3a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tprivate void disassemble(IEnclosingMethodAttribute enclosingMethodAttribute, StringBuffer buffer, String lineSeparator, int tabNumber)", "signatureAfterChange": "  \tprivate void disassemble(IEnclosingMethodAttribute enclosingMethodAttribute, StringBuffer buffer, String lineSeparator, int tabNumber)", "diff": ["-\t\t\t.append(enclosingMethodAttribute.getEnclosingClass()) //$NON-NLS-1$", "-\t\t\t.append(\".\")//$NON-NLS-1$", "-\t\t\t.append(enclosingMethodAttribute.getMethodName()) //$NON-NLS-1$", "-\t\t\t.append(enclosingMethodAttribute.getMethodDescriptor()); //$NON-NLS-1$", "+\t\t\t.append(enclosingMethodAttribute.getEnclosingClass()); //$NON-NLS-1$", "+\t\tif (enclosingMethodAttribute.getMethodNameAndTypeIndex() != 0) {", "+\t\t\tbuffer", "+\t\t\t\t.append(\".\")//$NON-NLS-1$", "+\t\t\t\t.append(enclosingMethodAttribute.getMethodName()) //$NON-NLS-1$", "+\t\t\t\t.append(enclosingMethodAttribute.getMethodDescriptor()); //$NON-NLS-1$", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80d0e9cfc4a3398b00b770323378e5a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "c44d89fd5379544a6ddb472a22f014ab5bce19e8", "commitAfterChange": "a7e924b1651a1b9026ccc6590ce8e03365836a1b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " private void buildMoreGenericsCompletionContext(ASTNode node)", "signatureAfterChange": " private void buildMoreGenericsCompletionContext(ASTNode node)", "diff": ["-\t\t\t\t\t\tcurrentElement = currentElement.add((TypeReference)node, 0);", "-\t\t\t\t\t\tbreak nextElement;", "+\t\t\t\t\t\tif(topKnownElementInfo(COMPLETION_OR_ASSIST_PARSER, 1) == 0) {", "+\t\t\t\t\t\t\tcurrentElement = currentElement.add((TypeReference)node, 0);", "+\t\t\t\t\t\t\tbreak nextElement;", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8168679a4976f67d6fedf912f7efdd35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "3817fb9be5d23e5c6f76a434da338233b90b5a46", "commitAfterChange": "8d9f700412e8d76f89db3ccd17a42191a013d35d", "methodNumberBeforeChange": 226, "methodNumberAfterChange": 226, "signatureBeforeChange": " public void multianewarray(TypeBinding typeBinding, int dimensions)", "signatureAfterChange": " public void multianewarray(TypeBinding typeBinding, int dimensions)", "diff": ["-\tsuper.multianewarray(typeBinding, dimensions);", "-\tthis.currentFrame.numberOfStackItems -= dimensions;", "-\tchar[] brackets = new char[dimensions];", "-\tfor (int i = dimensions - 1; i >= 0; i--) brackets[i] = '[';", "-\tchar[] constantPoolName = CharOperation.concat(brackets, typeBinding.constantPoolName());", "-\tthis.currentFrame.addStackItem(new VerificationTypeInfo(typeBinding.id, constantPoolName));\t", "+    super.multianewarray(typeBinding, dimensions);", "+    if (this.currentFrame.numberOfStackItems >= dimensions) {", "+        this.currentFrame.numberOfStackItems -= dimensions;", "+    }", "+    char[] brackets = new char[dimensions];", "+    for (int i = dimensions - 1; i >= 0; i--) brackets[i] = '[';", "+    char[] constantPoolName = CharOperation.concat(brackets, typeBinding.constantPoolName());", "+    this.currentFrame.addStackItem(new VerificationTypeInfo(typeBinding.id, constantPoolName));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89d6f5693f37a0ce5de2b7d4870bd86b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionParser.java", "commitBeforeChange": "f338c86815ffb4c165b8024ba4f28cade0b2b75f", "commitAfterChange": "a98d7d87df415161ba75f53acbdbe8d316ea160c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " private void buildMoreCompletionContext(Expression expression)", "signatureAfterChange": " private void buildMoreCompletionContext(Expression expression)", "diff": ["-\tif(parentNode != null) {", "-\t\tthis.currentElement = this.currentElement.add((Statement)parentNode, 0);", "-\t} else {", "-\t\tthis.currentElement = this.currentElement.add((Statement)wrapWithExplicitConstructorCallIfNeeded(expression), 0);", "-\t\tif(this.lastCheckPoint < expression.sourceEnd) {", "-\t\t\tthis.lastCheckPoint = expression.sourceEnd + 1;", "+\t// Do not add assist node/parent into the recovery system if we are inside a lambda. The lambda will be fully recovered including the containing statement and added.", "+\tif (lastIndexOfElement(K_LAMBDA_EXPRESSION_DELIMITER) < 0) {", "+\t\tif(parentNode != null) {", "+\t\t\tthis.currentElement = this.currentElement.add((Statement)parentNode, 0);", "+\t\t} else {", "+\t\t\tthis.currentElement = this.currentElement.add((Statement)wrapWithExplicitConstructorCallIfNeeded(expression), 0);", "+\t\t\tif(this.lastCheckPoint < expression.sourceEnd) {", "+\t\t\t\tthis.lastCheckPoint = expression.sourceEnd + 1;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1818bf502c95fd1fb1ffd99b99957f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "78310b6881d29e4104dd5ac0bf79c342409c9931", "commitAfterChange": "5ceefbeb66afbd6b6f84ecf2da328f9e9c0ece67", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " private void buildMoreCompletionContext(Expression expression)", "signatureAfterChange": " private void buildMoreCompletionContext(Expression expression)", "diff": ["-", "-\t\t\tthis.assistNodeParent = ((RecoveredField) this.currentElement).fieldDeclaration;", "+\t\t\tif (lastIndexOfElement(K_LAMBDA_EXPRESSION_DELIMITER) <= lastIndexOfElement(K_FIELD_INITIALIZER_DELIMITER))", "+\t\t\t\tthis.assistNodeParent = ((RecoveredField) this.currentElement).fieldDeclaration;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a582a3990e0b93c2ff043c4c7467c76f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "08a5f3739d3f161ff5602d34d40c3a35344da612", "commitAfterChange": "3e22bcf69b6a1a66006e79d283ee6a07ee599f5d", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " protected void consumeMemberValueAsName()", "signatureAfterChange": " protected void consumeMemberValueAsName()", "diff": ["-\t\tthis.restartRecovery = true;", "+\t\tif(this.topKnownElementKind(COMPLETION_OR_ASSIST_PARSER) == K_BETWEEN_ANNOTATION_NAME_AND_RPAREN) {", "+\t\t\tthis.restartRecovery = true;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aaf4d3781af3ae684a947ffe1de46848", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "0534618c17c0b5f6c361eb5acf9c22731255984f", "commitAfterChange": "d85ef445439a7932d1fe7c7dafa9bf16e2d2dd51", "methodNumberBeforeChange": 339, "methodNumberAfterChange": 339, "signatureBeforeChange": " public void undefinedAnnotationValue(TypeBinding annotationType, MemberValuePair memberValuePair)", "signatureAfterChange": " public void undefinedAnnotationValue(TypeBinding annotationType, MemberValuePair memberValuePair)", "diff": ["+\tif(name.length() == 0) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b52ec99ab8d09fef3d5c9c3662e2f8d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "e6021d67f030c85737aa105da719e9a09cfc30ed", "commitAfterChange": "47da1e1f50b1360a7b560d74dfe1c60303fec552", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": " private char[] readStreamChars(FileInputStream stream) throws IOException", "signatureAfterChange": " private char[] readStreamChars(InputStream stream) throws IOException", "diff": ["-private char[] readStreamChars(FileInputStream stream) throws IOException {", "+private char[] readStreamChars(InputStream stream) throws IOException {", "-\t\tif (charsInBuffer > length || this.bufferEnd != this.streamBuffer.length || stream == null)", "+\t\tif (charsInBuffer > length || stream == null  || (this.bufferEnd != this.streamBuffer.length && stream.available() == 0))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd96212f705dce2dcc915f8f43fe586c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionParser.java", "commitBeforeChange": "f338c86815ffb4c165b8024ba4f28cade0b2b75f", "commitAfterChange": "a98d7d87df415161ba75f53acbdbe8d316ea160c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected void attachOrphanCompletionNode()", "signatureAfterChange": " protected void attachOrphanCompletionNode()", "diff": ["-\t\t\tStatement statement = (Statement) orphan;", "-\t\t\tthis.currentElement = this.currentElement.add(statement, 0);", "+\t\t\tif (lastIndexOfElement(K_LAMBDA_EXPRESSION_DELIMITER) < 0) { // lambdas are recovered up to the containing expression statement and will carry along the assist node anyways.", "+\t\t\t\tStatement statement = (Statement) orphan;", "+\t\t\t\tthis.currentElement = this.currentElement.add(statement, 0);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c906d17e2560dcf2551004833e87ab2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "14df50722199cd72c578c54d9a05cc83731f2e32", "commitAfterChange": "85c7cff1360bd81398e5c21f0560acd7376e740e", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": " public void processPathEntries(final int defaultSize, final ArrayList paths,  \t\t\tfinal String currentPath, String customEncoding, boolean isSourceOnly, \t\t\tboolean rejectDestinationPathOnJars) \t\tthrows InvalidInputException", "signatureAfterChange": " public void processPathEntries(final int defaultSize, final ArrayList paths,  \t\t\tfinal String currentPath, String customEncoding, boolean isSourceOnly, \t\t\tboolean rejectDestinationPathOnJars) \t\tthrows InvalidInputException", "diff": ["-\t\t\tthis.logger.logIncorrectClasspath(currentPath);", "+\t\t\tif (currentPath.length() != 0) {", "+\t\t\t\tthis.logger.logIncorrectClasspath(currentPath);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2ca15a1a7cc266bc122bd666c509062", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceType.java", "commitBeforeChange": "5f2456aa4b2b769de40fe8c031c43b1afaff3ffc", "commitAfterChange": "7234934f3efed703cbf030a33d03d36a447aeef6", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 29, "signatureBeforeChange": " public boolean isAnonymous() throws JavaModelException", "signatureAfterChange": " public boolean isAnonymous() throws JavaModelException", "diff": ["-\treturn false; // cannot create source handle onto anonymous types", "+\treturn fName.length() == 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3ea13ca6496c8469d3f826385807991", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "d3cff56673f668a24b7a089481a06ee187a0d439", "commitAfterChange": "d66f0d9453fe54b1298b6b9b5dd08d701a80294d", "methodNumberBeforeChange": 199, "methodNumberAfterChange": 199, "signatureBeforeChange": " public void unusedPrivateType(TypeDeclaration typeDecl)", "signatureAfterChange": " public void unusedPrivateType(TypeDeclaration typeDecl)", "diff": ["+\tif (computeSeverity(IProblem.UnusedPrivateType) == Ignore) return;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3f66167c556d11abed36ebfb8343b6f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModel.java", "commitBeforeChange": "254a144fb8ad02730db7fb5ae51a3f1d563a3301", "commitAfterChange": "e54faf9b6863584db506773e5f99391f62c41c79", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public static Object getTarget(IContainer container, IPath path, boolean checkResourceExistence)", "signatureAfterChange": " public static Object getTarget(IContainer container, IPath path, boolean checkResourceExistence)", "diff": ["-\tIResource resource = container.findMember(path);", "-\tif (resource != null){", "-\t\tif (!checkResourceExistence ||resource.exists()) return resource;", "-\t\treturn null;", "+\tif (path.getDevice() == null) { // container relative paths should not contain a device ", "+\t\t\t\t\t\t\t\t\t\t\t\t// (see http://dev.eclipse.org/bugs/show_bug.cgi?id=18684)", "+\t\t\t\t\t\t\t\t\t\t\t\t// (case of a workspace rooted at d:\\ )", "+\t\tIResource resource = container.findMember(path);", "+\t\tif (resource != null){", "+\t\t\tif (!checkResourceExistence ||resource.exists()) return resource;", "+\t\t\treturn null;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbec4aeb1c0c2b4406b20e8f647ffc5e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/WorkingCopy.java", "commitBeforeChange": "4acdc3f9aad85a6fe619f404dbbc54bcddf3ce1f", "commitAfterChange": "c4ab4e0b73940ce1ec2be4b6701e6bacd26266b6", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r protected IBuffer openBuffer(IProgressMonitor pm) throws JavaModelException", "signatureAfterChange": "\r protected IBuffer openBuffer(IProgressMonitor pm) throws JavaModelException", "diff": ["-\t\t\tCompilationUnit original = (CompilationUnit) getOriginalElement();\r", "-\t\t\tbuffer.setContents(original.getContents());\r", "+\t\t\tif (buffer.getCharacters() == null){\r", "+\t\t\t\tCompilationUnit original = (CompilationUnit) getOriginalElement();\r", "+\t\t\t\tbuffer.setContents(original.getContents());\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3514c0d4a1d2db87061126e3b4a9a6e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "61cc47bcc1f5ecb2d5abafaf137beaf8432dad97", "commitAfterChange": "ddef7455b6d2859e2814f04b379ed85f78251da8", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": " \tpublic void updateVariableValues( \t\tString[] variableNames, \t\tIPath[] variablePaths, \t\tIProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic void updateVariableValues( \t\tString[] variableNames, \t\tIPath[] variablePaths, \t\tIProgressMonitor monitor) throws JavaModelException", "diff": ["+\t\t", "+\t\tif (variablePutIfInitializingWithSameValue(variableNames, variablePaths))", "+\t\t\treturn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec15d658849febf775f32ba425319f8b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "c18a1f0cd073cd9385eb0f9b115e56309b0dfb6b", "commitAfterChange": "89ddd7898bf0ea856c431e0664e094420874372b", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " protected void consumeToken(int token)", "signatureAfterChange": " protected void consumeToken(int token)", "diff": ["-\t\t\tcase TokenNameLBRACE :", "-\t\t\t\tpopElement(K_TYPE_DELIMITER);\t", "+\t\t\tcase TokenNameRBRACE :", "+\t\t\t\tif(topKnownElementKind(ASSIST_PARSER) == K_TYPE_DELIMITER) {", "+\t\t\t\t\tpopElement(K_TYPE_DELIMITER);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f177fb0e15d20b95404d99b903302f73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "5046f0da42323773845d7a3edf39df0b8c6a1944", "commitAfterChange": "80f69cca108e407e297e62382ba04bd29eb1703d", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 32, "signatureBeforeChange": "  \tpublic String encodeClasspathEntry(IClasspathEntry classpathEntry)", "signatureAfterChange": "  \tpublic String encodeClasspathEntry(IClasspathEntry classpathEntry)", "diff": ["-\t\t\t((ClasspathEntry)classpathEntry).elementEncode(xmlWriter, this.project.getFullPath(), true/*indent*/, true/*insert new line*/, null/*not interested in unknown elements*/);", "+\t\t\t((ClasspathEntry)classpathEntry).elementEncode(xmlWriter, this.project.getFullPath(), true/*indent*/, true/*insert new line*/, null/*not interested in unknown elements*/, (classpathEntry.getReferencingEntry() != null));"]}], "num": 11218}