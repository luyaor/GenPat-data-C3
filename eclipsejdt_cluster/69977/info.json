{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9762b0c3d1f1359b8306c21ae2b91fee", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29ab03cca2da07ab470c6aacc46e1813", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "78c62e3a4157070f714848f4de312a55f14f5144", "commitAfterChange": "fb48e11da0ebe84c63fab7b3cb5afd39c0ba6101", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  public WildcardBinding createWildcard(ReferenceBinding genericType, int rank, TypeBinding bound, int kind)", "signatureAfterChange": "  public WildcardBinding createWildcard(ReferenceBinding genericType, int rank, TypeBinding bound, TypeBinding[] otherBounds, int kind)", "diff": ["-public WildcardBinding createWildcard(ReferenceBinding genericType, int rank, TypeBinding bound, int kind) {", "+public WildcardBinding createWildcard(ReferenceBinding genericType, int rank, TypeBinding bound, TypeBinding[] otherBounds, int kind) {", "+\tif (genericType == null) // pseudo wildcard denoting composite bounds for lub computation", "+\t\tgenericType = ReferenceBinding.LUB_GENERIC;", "+\t\t\t    if (cachedType.otherBounds != otherBounds) {", "+\t\t\t    \tint cachedLength = cachedType.otherBounds == null ? 0 : cachedType.otherBounds.length;", "+\t\t\t    \tint length = otherBounds == null ? 0 : otherBounds.length;", "+\t\t\t    \tif (cachedLength != length) continue nextCachedType;", "+\t\t\t    \tfor (int j = 0; j < length; j++) {", "+\t\t\t    \t\tif (cachedType.otherBounds[j] != otherBounds[j]) continue nextCachedType;", "+\t\t\t    \t}", "+\t\t\t    }", "-\tWildcardBinding wildcard = new WildcardBinding(genericType, rank, bound, kind, this);", "+\tWildcardBinding wildcard = new WildcardBinding(genericType, rank, bound, otherBounds, kind, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f78a4421680daec6bd7f1021a2cfc49", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  public WildcardBinding createWildcard(ReferenceBinding genericType, int rank, TypeBinding bound, TypeBinding[] otherBounds, int kind)", "signatureAfterChange": "  public WildcardBinding createWildcard(ReferenceBinding genericType, int rank, TypeBinding bound, TypeBinding[] otherBounds, int boundKind)", "diff": ["-public WildcardBinding createWildcard(ReferenceBinding genericType, int rank, TypeBinding bound, TypeBinding[] otherBounds, int kind) {", "+public WildcardBinding createWildcard(ReferenceBinding genericType, int rank, TypeBinding bound, TypeBinding[] otherBounds, int boundKind) {", "-\t\t\t    if (cachedType.kind != kind) continue nextCachedType;", "+\t\t\t    if (cachedType.boundKind != boundKind) continue nextCachedType;", "-\tWildcardBinding wildcard = new WildcardBinding(genericType, rank, bound, otherBounds, kind, this);", "+\tWildcardBinding wildcard = new WildcardBinding(genericType, rank, bound, otherBounds, boundKind, this);"]}], "num": 69977}