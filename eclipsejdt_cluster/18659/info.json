{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9f038dd42d18c3145a5879817000da2e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5daaf450e4057c84e472101565e4265a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "66243ef5fb157274357717f3c0e6d167f298fb2e", "commitAfterChange": "cdab1e11b134780bc74f7158d7960df3f022d02d", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void resolve(Openable[] openables, HashSet localTypes, IProgressMonitor monitor)", "signatureAfterChange": " public void resolve(Openable[] openables, HashSet localTypes, IProgressMonitor monitor)", "diff": ["-\t\t\t\tIBinaryType binaryType = null;", "-\t\t\t\tif (classFile.isOpen()) {", "-\t\t\t\t\t// create binary type from info", "-\t\t\t\t\tIType type = classFile.getType();", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\tbinaryType = (IBinaryType)((JavaElement)type).getElementInfo();", "-\t\t\t\t\t} catch (JavaModelException e) {", "-\t\t\t\t\t\t// type exists since class file is opened", "-\t\t\t\t\t}", "-\t\t\t\t} else {", "+\t\t\t\tIBinaryType binaryType = (IBinaryType) JavaModelManager.getJavaModelManager().getInfo(classFile.getType());", "+\t\t\t\tif (binaryType == null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "952b2f391739bfc40871d5b7e9b50968", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "b1f709bd1fd47a690112f71bf976691c90f21c2e", "commitAfterChange": "f6e3c703c3b20345b17d160d2135ad84d2da0437", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tprotected void seekTypesInBinaryPackage(String name, IPackageFragment pkg, boolean partialMatch, int acceptFlags, IJavaElementRequestor requestor)", "signatureAfterChange": " \tprotected void seekTypesInBinaryPackage(String name, IPackageFragment pkg, boolean partialMatch, int acceptFlags, IJavaElementRequestor requestor)", "diff": ["-\t\t\t\tIClassFile[] classFiles= null;", "+\t\t\t\tIJavaElement[] classFiles= null;", "-\t\t\t\t\tclassFiles= pkg.getClassFiles();", "+\t\t\t\t\tclassFiles= pkg.getChildren();", "-\t\t\t\t\tIClassFile classFile= classFiles[i];", "+\t\t\t\t\tIJavaElement classFile= classFiles[i];", "-\t\t\t\t\t\tIType type= null;", "-\t\t\t\t\t\ttry {", "-\t\t\t\t\t\t\ttype = classFile.getType();", "-\t\t\t\t\t\t} catch (JavaModelException npe) {", "-\t\t\t\t\t\t\tcontinue; // the classFile is not present", "-\t\t\t\t\t\t}", "+\t\t\t\t\t\tIType type = ((ClassFile) classFile).getType();"]}], "num": 18659}