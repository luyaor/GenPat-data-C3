{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "78cd53c738906bb80d44d6d66019b494", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23b8695b067d12ede515b745b44af62f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayReference.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "   \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tTypeBinding positionType = position.resolveTypeExpecting(scope, IntBinding);", "+\t\tTypeBinding positionType = position.resolveTypeExpecting(scope, TypeBinding.INT);", "-\t\t\tposition.computeConversion(scope, IntBinding, positionType);", "+\t\t\tposition.computeConversion(scope, TypeBinding.INT, positionType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2caebf9a10de1c009e436d0c2f0dfd2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayAllocationExpression.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tif (referenceType == VoidBinding) {", "+\t\tif (referenceType == TypeBinding.VOID) {", "-\t\t\t\tTypeBinding dimensionType = dimensions[i].resolveTypeExpecting(scope, IntBinding);", "+\t\t\t\tTypeBinding dimensionType = dimensions[i].resolveTypeExpecting(scope, TypeBinding.INT);", "-\t\t\t\t\tdimensions[i].computeConversion(scope, IntBinding, dimensionType);", "+\t\t\t\t\tdimensions[i].computeConversion(scope, TypeBinding.INT, dimensionType);"]}], "num": 6450}