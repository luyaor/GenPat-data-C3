{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f7b3e67495b54c8713343134cc3cc895", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ba1f6e39a877680f9e4f7cfcfd1fd77", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "06734c9185cf2920c0b21b4263e30c1ea3cbc085", "commitAfterChange": "753a6a1eefe385cd875ac1931b6199ee406e2292", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic void appendKey(StringBuffer buffer, boolean rawTypeOnly)", "signatureAfterChange": " \tpublic void appendKey(StringBuffer buffer, boolean rawTypeOnly)", "diff": ["-\t\t\t\t\tITypeBinding[] typeParameters = getTypeParameters();", "-\t\t\t\t\tint typeParametersLength = typeParameters.length;", "-\t\t\t\t\tif (typeParametersLength != 0) {", "-\t\t\t\t\t\tbuffer.append('<');", "-\t\t\t\t\t\tfor (int i = 0; i < typeParametersLength; i++) {", "-\t\t\t\t\t\t\tTypeBinding typeParameter = (TypeBinding) typeParameters[i];", "-\t\t\t\t\t\t\ttypeParameter.appendParameterKey(buffer);", "-\t\t\t\t\t\t\tITypeBinding[] bounds = typeParameter.getTypeBounds();", "-\t\t\t\t\t\t\tfor (int j = 0, length = bounds.length; j < length; j++) {", "-\t\t\t\t\t\t\t\tTypeBinding bound = (TypeBinding) bounds[j];", "-\t\t\t\t\t\t\t\tbuffer.append(':');", "-\t\t\t\t\t\t\t\tbound.appendParameterKey(buffer);", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tbuffer.append(',');", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tbuffer.append('>');", "-\t\t\t\t\t}", "-\t\t\t\t\tITypeBinding[] typeArgs = getTypeArguments();", "-\t\t\t\t\tint typeArgsLength = typeArgs.length;", "-\t\t\t\t\tif (typeArgsLength != 0) {", "-\t\t\t\t\t\tbuffer.append('<');", "-\t\t\t\t\t\tfor (int i = 0; i < typeArgsLength; i++) {", "-\t\t\t\t\t\t\tTypeBinding typeArg = (TypeBinding) typeArgs[i];", "-\t\t\t\t\t\t\ttypeArg.appendParameterKey(buffer);", "-\t\t\t\t\t\t\tbuffer.append(',');", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tbuffer.append('>');", "-\t\t\t\t\t}", "+\t\t\t\t\t// only one of the type parameters or type arguments is non-empty at the same time", "+\t\t\t\t\tappendTypeParameters(buffer, getTypeParameters());", "+\t\t\t\t\tappendTypeArguments(buffer, getTypeArguments());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70aeaf30c0ad25ac69c1c62e1aca895b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodBinding.java", "commitBeforeChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "commitAfterChange": "c021c50efca4c234ec58241ed1fc82f6871e98bd", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic String getKey()", "signatureAfterChange": " \tpublic String getKey()", "diff": ["-\t\t\tif (false) {", "-\t\t\t\tthis.key = new String(this.binding.computeUniqueKey());", "-\t\t\t\treturn this.key;", "-\t\t\t}", "-\t\t\t", "-\t\t\tStringBuffer buffer = new StringBuffer();", "-\t\t\tTypeBinding typeBinding = (TypeBinding) getDeclaringClass();", "-\t\t\ttypeBinding.appendKey(buffer);", "-\t\t\tbuffer.append('/');", "-\t\t\tif (!isConstructor()) {", "-\t\t\t\tbuffer.append(getName());", "-\t\t\t}", "-\t\t\tITypeBinding[] parameters = getParameterTypes();", "-\t\t\tbuffer.append('(');", "-\t\t\tfor (int i = 0, max = parameters.length; i < max; i++) {", "-\t\t\t\tTypeBinding parameter = (TypeBinding) parameters[i];", "-\t\t\t\tif (parameter != null) {", "-\t\t\t\t\tparameter.appendParameterKey(buffer);", "-\t\t\t\t\tbuffer.append(',');", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tbuffer.append(')');", "-\t\t\t", "-\t\t\t// only one of the type parameters or type arguments is non-empty at the same time", "-\t\t\ttypeBinding.appendTypeParameters(buffer, getTypeParameters());", "-\t\t\ttypeBinding.appendTypeArguments(buffer, getTypeArguments());", "-\t\t\t", "-\t\t\tthis.key = buffer.toString();", "+\t\t\tthis.key = new String(this.binding.computeUniqueKey());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0176565b7195c097b0ea5e4ad26efdb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodBinding.java", "commitBeforeChange": "06734c9185cf2920c0b21b4263e30c1ea3cbc085", "commitAfterChange": "753a6a1eefe385cd875ac1931b6199ee406e2292", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic String getKey()", "signatureAfterChange": " \tpublic String getKey()", "diff": ["-\t\t\tbuffer.append(getDeclaringClass().getKey());", "+\t\t\tTypeBinding typeBinding = (TypeBinding) getDeclaringClass();", "+\t\t\ttypeBinding.appendKey(buffer);", "-\t\t\tITypeBinding[] types = getTypeParameters();", "-\t\t\tif (types.length > 0) {", "-\t\t\t\tbuffer.append('<');", "-\t\t\t\tfor (int i = 0, max = types.length; i < max; i++) {", "-\t\t\t\t\tTypeBinding typeParameter = (TypeBinding) types[i];", "-\t\t\t\t\ttypeParameter.appendParameterKey(buffer);", "-\t\t\t\t\tITypeBinding[] bounds = typeParameter.getTypeBounds();", "-\t\t\t\t\tfor (int j = 0, length = bounds.length; j < length; j++) {", "-\t\t\t\t\t\tTypeBinding bound = (TypeBinding) bounds[j];", "-\t\t\t\t\t\tbuffer.append(':');", "-\t\t\t\t\t\tbound.appendParameterKey(buffer);", "-\t\t\t\t\t}", "-\t\t\t\t\tbuffer.append(',');", "-\t\t\t\t}", "-\t\t\t\tbuffer.append('>');", "-\t\t\t}", "+\t\t\t", "+\t\t\t// only one of the type parameters or type arguments is non-empty at the same time", "+\t\t\ttypeBinding.appendTypeParameters(buffer, getTypeParameters());", "+\t\t\ttypeBinding.appendTypeArguments(buffer, getTypeArguments());", "+\t\t\t"]}], "num": 64795}