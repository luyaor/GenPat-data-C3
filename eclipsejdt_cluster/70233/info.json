{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "03dd417761b1a28115f4690ad237b8d5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "008c2789b6f9db6d5e5a6d23ff5f1b1b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ThrowStatement.java", "commitBeforeChange": "a1b8b888d8c8c040023fcd2856f96f5ad6c69b3e", "commitAfterChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \r public void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["+ */ \r", "+public void generateCode(BlockScope currentScope, CodeStream codeStream) {\r", "+\r", "+\tif ((bits & IsReachableMASK) == 0) {\r", "+\t\treturn;\r", "+\tint pc = codeStream.position;\r", "+\texception.generateCode(currentScope, codeStream, true);\r", "+\tcodeStream.athrow();\r", "+\tcodeStream.recordPositionsFrom(pc, this);\r", "+\t\r", "+}\r", "-\t */\r", "-\tpublic void generateCode(BlockScope currentScope, CodeStream codeStream) {\r", "-\r", "-\t\tif ((bits & IsReachableMASK) == 0)\r", "-\t\t\treturn;\r", "-\t\tint pc = codeStream.position;\r", "-\t\texception.generateCode(currentScope, codeStream, true);\r", "-\t\tcodeStream.athrow();\r", "-\t\tcodeStream.recordPositionsFrom(pc, this);\r", "-\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dedab3dd4efb7364c421ac3b206571f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "d5c10d2d7223b30bd18f63015dde9c406b66baa7", "commitAfterChange": "c56fc7690c4a43edf61aaf2dd5ccc0b977ebec97", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  protected void openWhenClosed(IProgressMonitor pm) throws JavaModelException", "signatureAfterChange": "  protected void openWhenClosed(IProgressMonitor pm) throws JavaModelException", "diff": ["-\tif (!this.resourceExists() || !this.isOnClasspath()) throw newNotPresentException();", "+\tif (!this.resourceExists() ", "+\t\t\t|| !this.isOnClasspath()) {", "+\t\tthrow newNotPresentException();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48dba77ebdde5665181e70ca3ac5fdc1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ThisReference.java", "commitBeforeChange": "6a44e0777af1a4632e0d20c0e9b92d35d2ad59f3", "commitAfterChange": "2ca339c139c0fe73a5bd2705f66592731098d347", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tif (!this.isImplicitThis() && !checkAccess(scope.methodScope()))", "+\t\tif (!this.isImplicitThis() &&!checkAccess(scope.methodScope())) {", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7500654debf7063e28856b96ba8b1189", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/NewCodeFormatter.java", "commitBeforeChange": "a5c6e1f76d5a6c03c6d1a939c4f8dbefac55cdca", "commitAfterChange": "10f61af06f4d12e71dbad86581b20a4a2b3267b7", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": " \tpublic boolean visit( \t\tSynchronizedStatement synchronizedStatement, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tSynchronizedStatement synchronizedStatement, \t\tBlockScope scope)", "diff": ["-\t\tif (this.preferences.insert_space_in_synchronized_condition) this.scribe.space();", "+\t\tif (this.preferences.insert_space_in_synchronized_condition) {", "+\t\t\tthis.scribe.space();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "794dd9c233566539b97bb1fbe3b04b5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "aa3a93ccc3206cb1748c8a2362c7163309a5a4d8", "commitAfterChange": "a5c6e1f76d5a6c03c6d1a939c4f8dbefac55cdca", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t\t \tpublic void print(char[] s, boolean considerSpaceIfAny)", "signatureAfterChange": " \t\t \tpublic void print(char[] s, boolean considerSpaceIfAny)", "diff": ["-\t\tif (considerSpaceIfAny) this.space();", "+\t\tif (considerSpaceIfAny) {", "+\t\t\tthis.space();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f72fb6abfb400a34cedc523f8a8228e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "73e6c55b6cebcb032c8128286708483f86167b64", "commitAfterChange": "5326f4925981afee39790c88bc133bd18e542033", "methodNumberBeforeChange": 243, "methodNumberAfterChange": 243, "signatureBeforeChange": "  public CompilationUnitDeclaration parse( \tICompilationUnit sourceUnit,  \tCompilationResult compilationResult, \tint start, \tint end)", "signatureAfterChange": "  public CompilationUnitDeclaration parse( \tICompilationUnit sourceUnit,  \tCompilationResult compilationResult, \tint start, \tint end)", "diff": ["-\t\t\tif (end != -1) this.annotationParser.scanner.resetTo(start, end);", "+\t\t\tif (end != -1) {", "+\t\t\t\tthis.annotationParser.scanner.resetTo(start, end);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d332c07f613561bc7242f9d46a50914c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/NewCodeFormatter.java", "commitBeforeChange": "a5c6e1f76d5a6c03c6d1a939c4f8dbefac55cdca", "commitAfterChange": "10f61af06f4d12e71dbad86581b20a4a2b3267b7", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t \tprivate void format(TypeDeclaration typeDeclaration)", "signatureAfterChange": " \t \tprivate void format(TypeDeclaration typeDeclaration)", "diff": ["-\t\tif (typeDeclaration.modifiers != NO_MODIFIERS) this.scribe.printModifiers();", "-\t\t", "+\t\tif (typeDeclaration.modifiers != NO_MODIFIERS) {", "+\t\t\tthis.scribe.printModifiers();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9761666921561e3f48a06ebd29b514e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetSingleNameReference.java", "commitBeforeChange": "aa3a93ccc3206cb1748c8a2362c7163309a5a4d8", "commitAfterChange": "a5c6e1f76d5a6c03c6d1a939c4f8dbefac55cdca", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void generateReceiver(CodeStream codeStream)", "signatureAfterChange": " public void generateReceiver(CodeStream codeStream)", "diff": ["-\tif (delegateThis != null) codeStream.getfield(delegateThis); // delegated field access", "+\tif (delegateThis != null) {", "+\t\tcodeStream.getfield(delegateThis); // delegated field access", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e04e01499e5876097dba937412fbd48d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "aa3a93ccc3206cb1748c8a2362c7163309a5a4d8", "commitAfterChange": "a5c6e1f76d5a6c03c6d1a939c4f8dbefac55cdca", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \t \tpublic void printNextToken(int[] expectedTokenTypes, boolean considerSpaceIfAny, boolean considerNewLineAfterComment)", "signatureAfterChange": " \t \tpublic void printNextToken(int[] expectedTokenTypes, boolean considerSpaceIfAny, boolean considerNewLineAfterComment)", "diff": ["-\t\t\t\t\tif (i > 0) expectations.append(',');", "+\t\t\t\t\tif (i > 0) {", "+\t\t\t\t\t\texpectations.append(',');", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0f7ed503b18d26c9741ee9fa7f66d94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaSearchTests.java", "commitBeforeChange": "9ee78f50bb7fb9d70095ea7ff2d9f2e27d840c37", "commitAfterChange": "b6410432af18704990f18fa69a09dd7a76e8fb04", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tprotected void search(String patternString, int searchFor, int limitTo, int matchRule, IJavaSearchScope scope, SearchRequestor requestor) throws CoreException", "signatureAfterChange": " \tprotected void search(String patternString, int searchFor, int limitTo, int matchRule, IJavaSearchScope scope, SearchRequestor requestor) throws CoreException", "diff": ["-\t\tif (patternString.indexOf('*') != -1 || patternString.indexOf('?') != -1)", "+\t\tif (patternString.indexOf('*') != -1 || patternString.indexOf('?') != -1) {", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6be00a1313f418a80c61311f34f2c57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "c8d00cbf2814182ef1ce07d7254dc4a8d85157bc", "commitAfterChange": "76285abc2e18a9626166def15ee7d0b4124f0aa5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public int literalIndex(char[] utf8Constant)", "signatureAfterChange": " public int literalIndex(char[] utf8Constant)", "diff": ["-\t\t\t} else", "+\t\t\t} else {", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9ccf2378187ef38a9972e11699d2209", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "e27db11146c4f5d303256c268be6450247be1bd9", "commitAfterChange": "adc7524aebd9a4a97b97fcc571a0ede6619bc1b9", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  private void buildDeltas(SimpleLookupTable deltas)", "signatureAfterChange": "  private void buildDeltas(SimpleLookupTable deltas)", "diff": ["-\tif (imageBuilder.build(deltas))", "+\tif (imageBuilder.build(deltas)) {", "-\telse {", "+\t} else {"]}], "num": 70233}