{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dcb4033cf7716d2d45fcca66b2899ccb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a00df87a0a22e538a1f6832f27c8c4fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "d95feda7fc2f9a6563596c0e4c31ae322f705773", "commitAfterChange": "8477130b01f048bfc1fd1f484a88902aeefb2f38", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": "  public void duplicateInheritedMethods(SourceTypeBinding type, MethodBinding inheritedMethod1, MethodBinding inheritedMethod2)", "signatureAfterChange": "  public void duplicateInheritedMethods(SourceTypeBinding type, MethodBinding inheritedMethod1, MethodBinding inheritedMethod2, boolean isJava8)", "diff": ["-public void duplicateInheritedMethods(SourceTypeBinding type, MethodBinding inheritedMethod1, MethodBinding inheritedMethod2) {", "+public void duplicateInheritedMethods(SourceTypeBinding type, MethodBinding inheritedMethod1, MethodBinding inheritedMethod2, boolean isJava8) {", "-\t\tint problemID = (inheritedMethod1.isDefaultMethod() && inheritedMethod2.isDefaultMethod())", "-\t\t\t\t? IProblem.DuplicateInheritedDefaultMethods", "-\t\t\t\t: IProblem.DuplicateInheritedMethods;", "+\t\tint problemID = IProblem.DuplicateInheritedMethods;", "+\t\tif (inheritedMethod1.isDefaultMethod() && inheritedMethod2.isDefaultMethod()) {", "+\t\t\tif (isJava8)", "+\t\t\t\tproblemID = IProblem.DuplicateInheritedDefaultMethods;", "+\t\t\telse", "+\t\t\t\treturn; // don't report this error at 1.7-", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b38ee9256b6530a6dd97d57a1efa10c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/ProjectBinaryOutput.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r \tpublic void scrubOutput()", "signatureAfterChange": "\r public void scrubOutput()", "diff": ["-\t */\r", "-\tpublic void scrubOutput() {\r", "-\r", "-\t\tIJavaProject projectElement = JavaCore.create(this.project);\r", "-\t\tIClasspathEntry[] entries;\r", "-\t\ttry {\r", "-\t\t\tentries = projectElement.getResolvedClasspath(true);\r", "-\t\t} catch (JavaModelException e) {\r", "-\t\t\tthrow this.dc.internalException(e);\r", "-\t\t}\r", "-\r", "-\t\t/* detect whether the binary ouput coincidates with source folder */\r", "-\t\tboolean flushAllOutput = false;\r", "-\t\tfor (int i = 0, length = entries.length; i < length; i++) {\r", "-\t\t\tIClasspathEntry entry = entries[i];\r", "-\t\t\tif ((entry.getEntryKind() == IClasspathEntry.CPE_SOURCE)) {\r", "-\t\t\t\tif (!this.outputPath.equals(entry.getPath())) {\r", "-\t\t\t\t\tflushAllOutput = true; // output is distinct - flush all\r", "-\t\t\t\t}\r", "-\t\tif (flushAllOutput) {\r", "+ */\r", "+public void scrubOutput() {\r", "+\r", "+\tIJavaProject projectElement = JavaCore.create(this.project);\r", "+\tIClasspathEntry[] entries;\r", "+\ttry {\r", "+\t\tentries = projectElement.getResolvedClasspath(true);\r", "+\t} catch(JavaModelException e){\r", "+\t\tthrow this.dc.internalException(e);\r", "+\t}\r", "+\r", "+\t/* detect whether the binary ouput coincidates with source folder */\r", "+\tboolean flushAllOutput = true;\r", "+\tboolean hasSource = false;\r", "+\tfor (int i = 0, length = entries.length; i < length; i++) {\r", "+\t\tIClasspathEntry entry = entries[i];\r", "+\t\tif ((entry.getEntryKind() == IClasspathEntry.CPE_SOURCE)) {\r", "+\t\t\thasSource = true;\r", "+\t\t\tif (this.outputPath.equals(entry.getPath())){\r", "+\t\t\t\tflushAllOutput = false; // output coincidates, cannot flush\r", "+\t\t\t\tbreak;\r", "+\t\t\t}\r", "+\t\t}\r", "+\t}\r", "+\tif (hasSource) {\r", "+\t\tif (flushAllOutput){\r", "+}\r"]}], "num": 51542}