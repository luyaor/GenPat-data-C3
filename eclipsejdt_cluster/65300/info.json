{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "561539f910fdf7a599168f8e2660dda7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75c5b27e5dbd3100f71f650447969cc3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "32f757dfe8da946b3f43d9a2940c80a3241b7487", "commitAfterChange": "362a367dfb78f3dcbcec97d2d2301a9c64da2876", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 175, "signatureBeforeChange": " \tpublic void _test053()", "signatureAfterChange": " \tpublic void test053()", "diff": ["-\tpublic void _test053() {", "+\tpublic void test053() {", "-\t\t\t\"1. ERROR in X.java (at line 2)\\r\\n\" + ", "-\t\t\t\"\tvoid test(A a) { B b = a.foo(); }\\r\\n\" + ", "-\t\t\t\"\t                   ^\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 2)\\n\" + ", "+\t\t\t\"\tvoid test(A a) { B b = a.foo(); }\\n\" + ", "+\t\t\t\"\t          ^\\n\" + ", "+\t\t\t\"A is a raw type. References to generic type A<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\"\tvoid test(A a) { B b = a.foo(); }\\n\" + ", "+\t\t\t\"\t                       ^^^^^^^\\n\" + ", "-\t\t\t\"2. WARNING in X.java (at line 2)\\r\\n\" + ", "-\t\t\t\"\tvoid test(A a) { B b = a.foo(); }\\r\\n\" + ", "-\t\t\t\"\t                       ^^^^^^^\\n\" + ", "-\t\t\t\"Type safety: The method foo() belongs to the raw type A. References to generic type A<T> should be parameterized\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 3)\\r\\n\" + ", "-\t\t\t\"\tvoid test2(A<X> a) { B b = a.foo(); }\\r\\n\" + ", "-\t\t\t\"\t                       ^\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tvoid test2(A<X> a) { B b = a.foo(); }\\n\" + ", "+\t\t\t\"\t                           ^^^^^^^\\n\" + ", "-\t\t\t\"4. WARNING in X.java (at line 10)\\r\\n\" + ", "-\t\t\t\"\t@Override B foo() { return null; }\\r\\n\" + ", "-\t\t\t\"\t                 ^\\n\" + ", "-\t\t\t\"Type safety: The return type B for foo() from the type B needs unchecked conversion to conform to A<U> from the type A<T>\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"\t@Override B foo() { return null; }\\n\" + ", "+\t\t\t\"\t          ^\\n\" + ", "+\t\t\t\"Type safety: The return type B for foo() from the type B needs unchecked conversion to conform to A<Object> from the type A<X>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f511519a6d8603de58abfccdc566641e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "4ee57f1aa920ef9dfc0c8991087575befcec8304", "commitAfterChange": "e4723643d8162fae0d7ec03bc461cac8d970e8fd", "methodNumberBeforeChange": 1038, "methodNumberAfterChange": 1038, "signatureBeforeChange": " public void test1013()", "signatureAfterChange": " public void test1013()", "diff": ["-\t\t\t\"\t\tSystem.out.println(\\\"[done]\\\");\\n\" +", "+\t\t\t\"\t\tSystem.out.println(zork);\\n\" +", "-\t\t\"1. WARNING in X.java (at line 14)\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 12)\\n\" + ", "+\t\t\"\tSystem.out.println(zork);\\n\" + ", "+\t\t\"\t                   ^^^^\\n\" + ", "+\t\t\"zork cannot be resolved to a variable\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 14)\\n\" + ", "-\t\t\"2. WARNING in X.java (at line 15)\\n\" + ", "+\t\t\"3. WARNING in X.java (at line 15)\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"3. ERROR in X.java (at line 15)\\n\" + ", "-\t\t\"\tX x = bar1(l1, l2);\\n\" + ", "-\t\t\"\t      ^^^^^^^^^^^^\\n\" + ", "-\t\t\"Type mismatch: cannot convert from Object to X\\n\" + "]}], "num": 65300}