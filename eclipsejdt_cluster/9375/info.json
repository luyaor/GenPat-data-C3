{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a8d4363c07e435b00a542baa2ad281ec", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba5364f055a1b07b4c3ff087d0d2865f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public FieldBinding addSyntheticField(TypeBinding targetType, BlockScope blockScope)", "signatureAfterChange": "  public FieldBinding addSyntheticFieldForClassLiteral(TypeBinding targetType, BlockScope blockScope)", "diff": ["-public FieldBinding addSyntheticField(TypeBinding targetType, BlockScope blockScope) {", "+public FieldBinding addSyntheticFieldForClassLiteral(TypeBinding targetType, BlockScope blockScope) {", "-\t\t\t(\"class$\" + synthetics[CLASS_LITERAL_EMUL].size()).toCharArray(), //$NON-NLS-1$", "+\t\t\tCharOperation.concat(", "+\t\t\t\tTypeConstants.SYNTHETIC_CLASS,", "+\t\t\t\tString.valueOf(synthetics[CLASS_LITERAL_EMUL].size()).toCharArray()),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c156a248194ab90a3b30e0728182d7ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public FieldBinding addSyntheticField(AssertStatement assertStatement, BlockScope blockScope)", "signatureAfterChange": " public FieldBinding addSyntheticFieldForAssert(BlockScope blockScope)", "diff": ["-public FieldBinding addSyntheticField(AssertStatement assertStatement, BlockScope blockScope) {", "+public FieldBinding addSyntheticFieldForAssert(BlockScope blockScope) {", "-\t\t\t\"$assertionsDisabled\".toCharArray(), //$NON-NLS-1$", "+\t\t\tTypeConstants.SYNTHETIC_ASSERT_DISABLED,", "-\t\t\t\t\t\t\"$assertionsDisabled\".toCharArray(), //$NON-NLS-1$", "+\t\t\t\t\t\tTypeConstants.SYNTHETIC_ASSERT_DISABLED,", "+\t\t\t\t\t\t(\"_\" + String.valueOf(index++)).toCharArray()); //$NON-NLS-1$", "+\t\t\t\t\tneedRecheck = true;", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t} while (needRecheck);", "+\treturn synthField;", "+}"]}], "num": 9375}