{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cdd95fdbcc172dfb6b5cb0ac040ab963", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6609194691456572cdb06c7a2e18d46d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/ClasspathDirectory.java", "commitBeforeChange": "68ccb4031ed08b4fe5c4be466185d9f98028d52b", "commitAfterChange": "b97b84a6370469b0432a4c45b3f13c4f7bb62ce7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public NameEnvironmentAnswer findClass(char[] typeName, String qualifiedPackageName, String qualifiedBinaryFileName)", "signatureAfterChange": " public NameEnvironmentAnswer findClass(char[] typeName, String qualifiedPackageName, String qualifiedBinaryFileName)", "diff": ["-\t\t\treturn new NameEnvironmentAnswer(new CompilationUnit(null, fullSourcePath, this.encoding), null/* TODO no access restriction*/);", "-", "+\t\t\treturn new NameEnvironmentAnswer(new CompilationUnit(null,", "+\t\t\t\t\tfullSourcePath, this.encoding),", "+\t\t\t\t\tfetchAccessRestriction(qualifiedBinaryFileName));", "-\t\t\treturn new NameEnvironmentAnswer(new CompilationUnit(null, fullSourcePath, this.encoding), null/* TODO no access restriction*/);", "+\t\t\treturn new NameEnvironmentAnswer(new CompilationUnit(null,", "+\t\t\t\t\tfullSourcePath, this.encoding),", "+\t\t\t\t\tfetchAccessRestriction(qualifiedBinaryFileName));", "-\t\t\tClassFileReader reader = ClassFileReader.read(this.path + qualifiedBinaryFileName);", "-\t\t\tif (reader != null) return new NameEnvironmentAnswer(reader, null/* TODO no access restriction*/);", "-\t\t} catch (Exception e) { ", "+\t\t\tClassFileReader reader = ClassFileReader.read(this.path", "+\t\t\t\t\t+ qualifiedBinaryFileName);", "+\t\t\tif (reader != null)", "+\t\t\t\treturn new NameEnvironmentAnswer(", "+\t\t\t\t\t\treader,", "+\t\t\t\t\t\tfetchAccessRestriction(qualifiedBinaryFileName));", "+\t\t} catch (Exception e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fde95d19957aeff56efe0a372b456e9c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/ClasspathDirectory.java", "commitBeforeChange": "3e28b00b3ff1ea2877f4a4e8b245ac6023e86b59", "commitAfterChange": "52e6fbe49c09ab2aed24d8a25448612c4ab36bce", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public NameEnvironmentAnswer findClass(char[] typeName, String qualifiedPackageName, String qualifiedBinaryFileName)", "signatureAfterChange": " public NameEnvironmentAnswer findClass(char[] typeName, String qualifiedPackageName, String qualifiedBinaryFileName)", "diff": ["-\t\t\treturn new NameEnvironmentAnswer(new CompilationUnit(null, fullSourcePath, this.encoding));", "+\t\t\treturn new NameEnvironmentAnswer(new CompilationUnit(null, fullSourcePath, this.encoding), null/* TODO no access restriction*/);", "-\t\t\treturn new NameEnvironmentAnswer(new CompilationUnit(null, fullSourcePath, this.encoding));", "+\t\t\treturn new NameEnvironmentAnswer(new CompilationUnit(null, fullSourcePath, this.encoding), null/* TODO no access restriction*/);", "-\t\t\tif (reader != null) return new NameEnvironmentAnswer(reader);", "+\t\t\tif (reader != null) return new NameEnvironmentAnswer(reader, null/* TODO no access restriction*/);"]}], "num": 30491}