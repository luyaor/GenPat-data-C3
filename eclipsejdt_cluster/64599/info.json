{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fd4194ea49c982d237e69aa5ce2d3c8b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "112a0875903b680ac831974bbb263a4b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/AbstractCompilerTest.java", "commitBeforeChange": "2452619bb5034f0a0ba9b6e9747cd6db77b2eb53", "commitAfterChange": "8d4f2ebabb0e50507cab6ea5f17acab787cfb10b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static Test suite(String suiteName, Class setupClass, ArrayList testClasses)", "signatureAfterChange": " \tpublic static Test buildAllCompliancesSetupSuite(Class testSuiteClass, Class setupClass, List testClasses)", "diff": ["-\tpublic static Test suite(String suiteName, Class setupClass, ArrayList testClasses) {", "-\t\tTestSuite all = new TestSuite(suiteName);", "+\tpublic static Test buildAllCompliancesSetupSuite(Class testSuiteClass, Class setupClass, List testClasses) {", "+\t\tTestSuite suite = new TestSuite(testSuiteClass.getName());", "-\t\t\tall.addTest(suiteForComplianceLevel(COMPLIANCE_1_3, setupClass, testClasses));", "+\t\t\tsuite.addTest(buildComplianceSetupTestSuite(testClasses, setupClass, COMPLIANCE_1_3));", "-\t\t\tall.addTest(suiteForComplianceLevel(COMPLIANCE_1_4, setupClass, testClasses));", "+\t\t\tsuite.addTest(buildComplianceSetupTestSuite(testClasses, setupClass, COMPLIANCE_1_4));", "-\t\t\tall.addTest(suiteForComplianceLevel(COMPLIANCE_1_5, setupClass, testClasses));", "+\t\t\tsuite.addTest(buildComplianceSetupTestSuite(testClasses, setupClass, COMPLIANCE_1_5));", "-\t\t\tall.addTest(suiteForComplianceLevel(COMPLIANCE_1_6, setupClass, testClasses));", "+\t\t\tsuite.addTest(buildComplianceSetupTestSuite(testClasses, setupClass, COMPLIANCE_1_6));", "-\t\treturn all;", "+\t\treturn suite;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3371fe278e220732673827dd32472f15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/DefaultProblem.java", "commitBeforeChange": "008b2826ad524d7d54b1bfa95e01b08725903d31", "commitAfterChange": "5b1669051247ec5116f15d92b01a9df56f73fca0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic String errorReportSource(ICompilationUnit compilationUnit)", "signatureAfterChange": " \tpublic String errorReportSource(char[] unitSource)", "diff": ["-", "-\tpublic String errorReportSource(ICompilationUnit compilationUnit) {", "+\t//TODO should use StringBuffer.append(char[], int, int) instead of creating subarrays", "+\tpublic String errorReportSource(char[] unitSource) {", "-\t\tchar[] source = compilationUnit.getContents();", "-\t\tint begin = startPosition >= source.length ? source.length - 1 : startPosition;", "+\t\tint begin = startPosition >= unitSource.length ? unitSource.length - 1 : startPosition;", "-\t\tint end = endPosition >= source.length ? source.length - 1 : endPosition;", "+\t\tint end = endPosition >= unitSource.length ? unitSource.length - 1 : endPosition;", "-\t\t\tif ((source[begin - 1] == '\\n') || (source[begin - 1] == '\\r'))", "+\t\t\tif ((unitSource[begin - 1] == '\\n') || (unitSource[begin - 1] == '\\r'))", "-\t\t\tif ((end + 1) >= source.length)", "+\t\t\tif ((end + 1) >= unitSource.length)", "-\t\t\tif ((source[end + 1] == '\\r') || (source[end + 1] == '\\n')) {", "+\t\t\tif ((unitSource[end + 1] == '\\r') || (unitSource[end + 1] == '\\n')) {", "-\t\tSystem.arraycopy(source, begin, extract, 0, extract.length);", "+\t\tSystem.arraycopy(unitSource, begin, extract, 0, extract.length);", "-\t\t\ti <= (endPosition >= source.length ? source.length - 1 : endPosition);", "+\t\t\ti <= (endPosition >= unitSource.length ? unitSource.length - 1 : endPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb6dc20541d8c4a3d2ec01e49229eb87", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/QualifiedTypeDeclarationPattern.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected void decodeIndexEntry(IEntryResult entryResult)", "signatureAfterChange": " public void decodeIndexKey(char[] key)", "diff": ["-protected void decodeIndexEntry(IEntryResult entryResult){", "-\tchar[] word = entryResult.getWord();", "-\tint size = word.length;", "+public void decodeIndexKey(char[] key) {", "+\tint size = key.length;", "-\tthis.decodedClassOrInterface = word[TYPE_DECL_LENGTH];", "-\tint oldSlash = TYPE_DECL_LENGTH + 1;", "-\tint slash = CharOperation.indexOf(SEPARATOR, word, oldSlash + 1);", "+\tthis.classOrInterface = key[0];", "+\tint oldSlash = 1;", "+\tint slash = CharOperation.indexOf(SEPARATOR, key, oldSlash + 1);", "-\t\t: CharOperation.subarray(word, oldSlash+1, slash);", "-\tthis.decodedSimpleName = CharOperation.subarray(word, slash + 1, slash = CharOperation.indexOf(SEPARATOR, word, slash + 1));", "+\t\t: CharOperation.subarray(key, oldSlash+1, slash);", "+\tthis.simpleName = CharOperation.subarray(key, slash + 1, slash = CharOperation.indexOf(SEPARATOR, key, slash + 1));", "-\t\tdecodedEnclosingTypeNames = (slash + 3 == size && word[slash + 1] == ONE_ZERO[0])", "+\t\tdecodedEnclosingTypeNames = (slash + 3 == size && key[slash + 1] == ONE_ZERO[0])", "-\t\t\t: CharOperation.splitOn('/', CharOperation.subarray(word, slash + 1, size - 1));", "+\t\t\t: CharOperation.splitOn('/', CharOperation.subarray(key, slash + 1, size - 1));", "-\tthis.decodedQualification = CharOperation.concatWith(pkgName, decodedEnclosingTypeNames, '.');", "+\tthis.qualification = CharOperation.concatWith(pkgName, decodedEnclosingTypeNames, '.');"]}], "num": 64599}