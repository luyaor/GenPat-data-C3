{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7795b7997e0702c54dba124aa63d0b30", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1400675da59c68824a87610b66b889c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "931e434bb3e4b9f62577b10f8123cfc028893969", "commitAfterChange": "c0b519c3b149b13ea0f307f0d3414359b2cf0639", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void generateAssignment( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tAssignment assignment, \t\tboolean valueRequired)", "signatureAfterChange": "  public void generateAssignment(BlockScope currentScope, CodeStream codeStream, Assignment assignment, boolean valueRequired)", "diff": ["-\tpublic void generateAssignment(", "-\t\tBlockScope currentScope,", "-\t\tCodeStream codeStream,", "-\t\tAssignment assignment,", "-\t\tboolean valueRequired) {", "-\t\t\t", "-\t\tint pc = codeStream.position;", "-\t\tFieldBinding lastFieldBinding = generateReadSequence(currentScope, codeStream);", "-\t\tcodeStream.recordPositionsFrom(pc , this.sourceStart);", "-\t\tassignment.expression.generateCode(currentScope, codeStream, true);", "-\t\tfieldStore(codeStream, lastFieldBinding, syntheticWriteAccessor, valueRequired);", "-\t\t// equivalent to valuesRequired[maxOtherBindings]", "+", "+public void generateAssignment(BlockScope currentScope, CodeStream codeStream, Assignment assignment, boolean valueRequired) {", "+\tint pc = codeStream.position;", "+\tFieldBinding lastFieldBinding = generateReadSequence(currentScope, codeStream);", "+\tcodeStream.recordPositionsFrom(pc , this.sourceStart);", "+\tassignment.expression.generateCode(currentScope, codeStream, true);", "+\tfieldStore(codeStream, lastFieldBinding, this.syntheticWriteAccessor, valueRequired);", "+\t// equivalent to valuesRequired[maxOtherBindings]", "+\tif (valueRequired) {", "+\t\tcodeStream.generateImplicitConversion(assignment.implicitConversion);", "+\t}", "+}", "-\t\t\tcodeStream.generateImplicitConversion(assignment.implicitConversion);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "697a750fcf1a326c90de4532e6a5a620", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayReference.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void generateAssignment( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tAssignment assignment, \t\tboolean valueRequired)", "signatureAfterChange": "  public void generateAssignment(BlockScope currentScope, CodeStream codeStream, Assignment assignment, boolean valueRequired)", "diff": ["-\tpublic void generateAssignment(", "-\t\tBlockScope currentScope,", "-\t\tCodeStream codeStream,", "-\t\tAssignment assignment,", "-\t\tboolean valueRequired) {", "-", "-\t\tint pc = codeStream.position;", "-\t\treceiver.generateCode(currentScope, codeStream, true);", "-\t\tif (receiver instanceof CastExpression\t// ((type[])null)[0]", "-\t\t\t\t&& ((CastExpression)receiver).innermostCastedExpression().resolvedType == TypeBinding.NULL){", "-\t\t\tcodeStream.checkcast(receiver.resolvedType); ", "-\t\t}\t", "-\t\tcodeStream.recordPositionsFrom(pc, this.sourceStart);", "-\t\tposition.generateCode(currentScope, codeStream, true);", "-\t\tassignment.expression.generateCode(currentScope, codeStream, true);", "-\t\tcodeStream.arrayAtPut(this.resolvedType.id, valueRequired);", "-\t\tif (valueRequired) {", "-\t\t\tcodeStream.generateImplicitConversion(assignment.implicitConversion);", "-\t\t}", "+public void generateAssignment(BlockScope currentScope, CodeStream codeStream, Assignment assignment, boolean valueRequired) {", "+\tint pc = codeStream.position;", "+\tthis.receiver.generateCode(currentScope, codeStream, true);", "+\tif (this.receiver instanceof CastExpression\t// ((type[])null)[0]", "+\t\t\t&& ((CastExpression)this.receiver).innermostCastedExpression().resolvedType == TypeBinding.NULL){", "+\t\tcodeStream.checkcast(this.receiver.resolvedType); ", "+\t}\t", "+\tcodeStream.recordPositionsFrom(pc, this.sourceStart);", "+\tthis.position.generateCode(currentScope, codeStream, true);", "+\tassignment.expression.generateCode(currentScope, codeStream, true);", "+\tcodeStream.arrayAtPut(this.resolvedType.id, valueRequired);", "+\tif (valueRequired) {", "+\t\tcodeStream.generateImplicitConversion(assignment.implicitConversion);", "+}"]}], "num": 24729}