{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "52c3aafa3b8dc74040469d64c33d9166", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d296bc5368a1a50e9cf39f162c50f136", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool.tests/src/org/eclipse/jdt/compiler/tool/tests/CompilerInvocationTests.java", "commitBeforeChange": "358c2d9eead1a2ad620bfd0dec02e0a53d937fcb", "commitAfterChange": "b7259e61ad84f1dda95b63bf74b4b4f38727c3a6", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " public void _test022_output_streams() throws IOException", "signatureAfterChange": " public void test022_output_streams() throws IOException", "diff": ["-public void _test022_output_streams() throws IOException {", "+public void test022_output_streams() throws IOException {", "-\t\t\toutBuffer = new ByteArrayOutputStream(),", "-\t\t\terrBuffer = new ByteArrayOutputStream();", "+\toutBuffer = new ByteArrayOutputStream(),", "+\terrBuffer = new ByteArrayOutputStream();", "-\t\tsystemOut = System.out,", "-\t\tsystemErr = System.err;", "+\tsystemOut = System.out,", "+\tsystemErr = System.err;", "-\t\tnull, ", "-\t\tJAVAC_COMPILER.getStandardFileManager(null /* diagnosticListener */, null /* locale */, null /* charset */), ", "-\t\tnew CompilerInvocationDiagnosticListener(new PrintWriter(errBuffer)), ", "-\t\tArrays.asList(\"-v\"), null, null);", "+\t\t\tnull, ", "+\t\t\tJAVAC_COMPILER.getStandardFileManager(null /* diagnosticListener */, null /* locale */, null /* charset */), ", "+\t\t\tnew CompilerInvocationDiagnosticListener(new PrintWriter(errBuffer)), ", "+\t\t\tArrays.asList(\"-v\"), null, null);", "-\tassertTrue(task.call());", "-\tassertTrue(outBuffer.toString().isEmpty());", "-\tassertTrue(errBuffer.toString().startsWith(\"Eclipse Java Compiler\"));", "+\t\tassertTrue(task.call());", "+\t\tassertTrue(outBuffer.toString().isEmpty());", "+\t\tassertTrue(errBuffer.toString().startsWith(\"Eclipse Compiler for Java\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de80d9899de3dc96a202683e75cedd68", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool.tests/src/org/eclipse/jdt/compiler/tool/tests/CompilerInvocationTests.java", "commitBeforeChange": "8ae6a032b744da62a95176b1af816f0bc6d501e7", "commitAfterChange": "e5d1651827919c7582ba9351a3db777b316a27e0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tCompilerInvocationTestsArguments( \t\t\tStandardJavaFileManager standardJavaFileManager,  \t\t\tList<String> options, \t\t\tString[] fileNames)", "signatureAfterChange": " public void _test022_output_streams() throws IOException", "diff": ["-\tString[] fileNames;", "-\tCompilerInvocationTestsArguments(", "-\t\t\tStandardJavaFileManager standardJavaFileManager, ", "-\t\t\tList<String> options,", "-\t\t\tString[] fileNames) {", "-\t\tthis.standardJavaFileManager = standardJavaFileManager;", "-\t\tthis.options = options;", "-\t\tthis.fileNames = fileNames;", "-\t}", "+// https://bugs.eclipse.org/bugs/show_bug.cgi?id=236814", "+public void _test022_output_streams() throws IOException {", "+\tByteArrayOutputStream ", "+\t\t\toutBuffer = new ByteArrayOutputStream(),", "+\t\t\terrBuffer = new ByteArrayOutputStream();", "+\tPrintStream ", "+\t\tsystemOut = System.out,", "+\t\tsystemErr = System.err;", "+\tSystem.setOut(new PrintStream(outBuffer));", "+\tSystem.setErr(new PrintStream(errBuffer));", "+\tCompilationTask task = COMPILER.getTask(", "+\t\tnull, ", "+\t\tJAVAC_COMPILER.getStandardFileManager(null /* diagnosticListener */, null /* locale */, null /* charset */), ", "+\t\tnew CompilerInvocationDiagnosticListener(new PrintWriter(errBuffer)), ", "+\t\tArrays.asList(\"-v\"), null, null);", "+\ttry {", "+\tassertTrue(task.call());", "+\tassertTrue(outBuffer.toString().isEmpty());", "+\tassertTrue(errBuffer.toString().startsWith(\"Eclipse Java Compiler\"));", "+\t} finally {", "+\t\tSystem.setOut(systemOut);", "+\t\tSystem.setErr(systemErr);", "+\t}", "+}"]}], "num": 26359}