{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1404e1479d614d469cd9452c7062047f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08afe55439e7b7684589b56997a1a7b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "74cd39cf6e739108d05e5fe68e013caacb550927", "commitAfterChange": "8d179b274180ed6b0408715a3052c776545ec578", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     void addMessage(IFile resource,         \t\t        int start,      \t\t\t\tint end,                     Severity severity,                      String msg,                      int line,                     String[] arguments)", "signatureAfterChange": "     void addMessage(IFile resource,         \t\t        int start,      \t\t\t\tint end,                     Severity severity,                      String msg,                      int line,                     String[] arguments)", "diff": ["-    \t\treturn;   ", "+    \t\treturn;", "+    \t", "+    \t// Eclipse doesn't support INFO-level IProblems, so we send them to the log instead.", "+    \tif ( _phase != Phase.RECONCILE && severity == Severity.INFO) {", "+    \t\tStringBuilder sb = new StringBuilder();", "+    \t\tsb.append(\"Informational message reported by annotation processor:\\n\"); //$NON-NLS-1$", "+    \t\tsb.append(msg);", "+    \t\tsb.append(\"\\n\"); //$NON-NLS-1$", "+    \t\tif (resource != null) {", "+    \t\t\tsb.append(\"Resource=\"); //$NON-NLS-1$", "+    \t\t\tsb.append(resource.getName());", "+    \t\t\tsb.append(\"; \"); //$NON-NLS-1$", "+    \t\t}", "+    \t\tsb.append(\"starting offset=\"); //$NON-NLS-1$", "+    \t\tsb.append(start);", "+    \t\tsb.append(\"; ending offset=\"); //$NON-NLS-1$", "+    \t\tsb.append(end);", "+    \t\tsb.append(\"; line=\"); //$NON-NLS-1$", "+    \t\tsb.append(line);", "+    \t\tif (arguments != null) {", "+    \t\t\tsb.append(\"; arguments:\"); //$NON-NLS-1$", "+    \t\t\tfor (String s : arguments) {", "+    \t\t\t\tsb.append(\"\\n\"); //$NON-NLS-1$", "+    \t\t\t\tsb.append(s);", "+    \t\t\t}", "+    \t\t}", "+    \t\telse {", "+    \t\t\tsb.append(\"\\n\"); //$NON-NLS-1$", "+    \t\t}", "+    \t\tIStatus status = AptPlugin.createInfoStatus(null, sb.toString());", "+    \t\tAptPlugin.log(status);", "+    \t\treturn;", "+    \t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c9f05157eb83feccfa51fda4b1fa3bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelCache.java", "commitBeforeChange": "10ccd52b581b1d4c41dd3b53901299736343ea5d", "commitAfterChange": "97f3eec8c4b51a2e96520e6a724a68ec7b14f566", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public double openableFillingRatio()", "signatureAfterChange": " public String toStringFillingRation(String prefix)", "diff": ["-public double openableFillingRatio() {", "-\treturn this.openableCache.fillingRatio();", "-}", "+public String toStringFillingRation(String prefix) {", "+\tStringBuffer buffer = new StringBuffer();", "+\tbuffer.append(prefix);", "+\tbuffer.append(\"Project cache: \"); //$NON-NLS-1$", "+\tbuffer.append(NumberFormat.getInstance().format(this.projectCache.fillingRatio()));", "+\tbuffer.append(\"%\\n\"); //$NON-NLS-1$", "+\tbuffer.append(prefix);", "+\tbuffer.append(\"Root cache: \"); //$NON-NLS-1$", "+\tbuffer.append(NumberFormat.getInstance().format(this.rootCache.fillingRatio()));", "+\tbuffer.append(\"%\\n\"); //$NON-NLS-1$", "+\tbuffer.append(prefix);", "+\tbuffer.append(\"Package cache: \"); //$NON-NLS-1$", "+\tbuffer.append(NumberFormat.getInstance().format(this.pkgCache.fillingRatio()));", "+\tbuffer.append(\"%\\n\"); //$NON-NLS-1$", "+\tbuffer.append(prefix);", "+\tbuffer.append(\"Openable cache: \"); //$NON-NLS-1$", "+\tbuffer.append(NumberFormat.getInstance().format(this.openableCache.fillingRatio()));", "+\tbuffer.append(\"%\\n\"); //$NON-NLS-1$", "+\treturn buffer.toString();", "+}"]}], "num": 23245}