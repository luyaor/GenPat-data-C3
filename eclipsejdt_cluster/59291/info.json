{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1dfa80d2c8d38ddd36dd4fff8cf46ae6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e419cb76e5a8e01bd938fa4ff6e1ebb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyTests.java", "commitBeforeChange": "0ce8ad5b0d44dc70bab93f6f64c0b898ece7748d", "commitAfterChange": "42f83db749431568a0412462e46b75fee51080ac", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void testShared1() throws JavaModelException", "signatureAfterChange": " public void testShared1() throws JavaModelException", "diff": ["-\tIJavaElement shared = this.cu.getSharedWorkingCopy(null, null, null);", "+\tWorkingCopyOwner owner = new WorkingCopyOwner() {};", "+\tICompilationUnit shared = this.cu.getWorkingCopy(owner, null, null);", "-\t\tassertTrue(\"Should be an ICompilationUnit\", shared instanceof ICompilationUnit);", "-\t\tassertTrue(\"Primary element should have shared working copy\", this.cu.findSharedWorkingCopy(null) == shared);", "+\t\tassertTrue(\"Should find shared working copy\", this.cu.findWorkingCopy(owner) == shared);", "-\t\tif (shared instanceof ICompilationUnit) {", "-\t\t\t((ICompilationUnit)shared).discardWorkingCopy();", "-\t\t}", "+\t\tshared.discardWorkingCopy();", "-\tassertTrue(\"Primary element should not have shared working copy\", this.cu.findSharedWorkingCopy(null) == null);", "+\tassertTrue(\"Should not find cu with same owner\", this.cu.findWorkingCopy(owner) == null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80bcd29ece61b4eb765a90dd4137bd9c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyTests.java", "commitBeforeChange": "0ce8ad5b0d44dc70bab93f6f64c0b898ece7748d", "commitAfterChange": "42f83db749431568a0412462e46b75fee51080ac", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " public void testShared2() throws JavaModelException", "signatureAfterChange": " public void testShared2() throws JavaModelException", "diff": ["-\tICompilationUnit shared = (ICompilationUnit)this.cu.getSharedWorkingCopy(null, null, null);", "+\tWorkingCopyOwner owner = new WorkingCopyOwner() {};", "+\tICompilationUnit shared = this.cu.getWorkingCopy(owner, null, null);", "-\t\tICompilationUnit shared2 = (ICompilationUnit)this.cu.getSharedWorkingCopy(null, null, null);", "+\t\tICompilationUnit shared2 = this.cu.getWorkingCopy(owner, null, null);", "-\t\t\tassertTrue(\"Primary element should still have shared working copy\", this.cu.findSharedWorkingCopy(null) == shared);", "+\t\t\tassertTrue(\"Should find shared working copy\", this.cu.findWorkingCopy(owner) == shared);", "-\tassertTrue(\"Primary element should not have shared working copy\", this.cu.findSharedWorkingCopy(null) == null);", "+\tassertTrue(\"Should not find cu with same owner\", this.cu.findWorkingCopy(owner) == null);"]}], "num": 59291}