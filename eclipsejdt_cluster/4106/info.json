{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "552c40f44842316c66422217ebdb7341", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "834df3936bb4bc77e92547b612b30ece", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaWorkspaceScope.java", "commitBeforeChange": "af60458069f14dd1b42612d075df4c51d6608d2d", "commitAfterChange": "22d76cb44cc4a2aa3afa5a732ef27b4f46c352c3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public IPath[] enclosingProjectsAndJars()", "signatureAfterChange": " public IPath[] enclosingProjectsAndJars()", "diff": ["-\t\tSet paths = new HashSet(projects.length * 2);", "+\t\t// use a linked set to preserve the order during search: see bug 348507", "+\t\tSet paths = new LinkedHashSet(projects.length * 2);", "+\t\t}", "+", "+\t\t// add the project source paths first in a separate loop above", "+\t\t// to ensure source files always get higher precedence during search.", "+\t\t// see bug 348507", "+", "+\t\tfor (int i = 0, length = projects.length; i < length; i++) {", "+\t\t\tJavaProject javaProject = (JavaProject) projects[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b950368781251d3cdd9ac93c75d8ce8a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/IndexSelector.java", "commitBeforeChange": "af60458069f14dd1b42612d075df4c51d6608d2d", "commitAfterChange": "22d76cb44cc4a2aa3afa5a732ef27b4f46c352c3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " private void initializeIndexLocations()", "signatureAfterChange": " private void initializeIndexLocations()", "diff": ["-\tSimpleSet locations = new SimpleSet();", "+\t// use a linked set to preserve the order during search: see bug 348507", "+\tLinkedHashSet locations = new LinkedHashSet();", "-\tthis.indexLocations = new IPath[locations.elementSize];", "-\tObject[] values = locations.values;", "-\tint count = 0;", "-\tfor (int i = values.length; --i >= 0;)", "-\t\tif (values[i] != null)", "-\t\t\tthis.indexLocations[count++] = (IPath) values[i];", "+\tlocations.remove(null); // Ensure no nulls", "+\tthis.indexLocations = (IPath[]) locations.toArray(new IPath[locations.size()]);"]}], "num": 4106}