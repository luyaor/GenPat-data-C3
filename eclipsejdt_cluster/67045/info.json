{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "734842580afb5b49c017a5929e376f5d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a235da77575ae3139d32ef92fb38d985", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "48e449a88ed4eefd5f8296dac2a0baf220bc173a", "commitAfterChange": "0d4007eb15023a950a5e732906ce998c79797847", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": " protected void consumeWildcard()", "signatureAfterChange": " protected void consumeWildcard()", "diff": ["-\twildcard.kind = Wildcard.EXTENDS;", "-\twildcard.bound = new CompletionOnKeyword1(", "+\tCompletionOnKeyword1 keyword = new CompletionOnKeyword1(", "+\tkeyword.canCompleteEmptyToken = true;", "+\twildcard.kind = Wildcard.EXTENDS;", "+\twildcard.bound = keyword;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee099897d90bdac59915b5d750f6735d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate static boolean checkInvocationArgument(BlockScope scope, Expression argument, TypeBinding parameterType, TypeBinding argumentType, TypeBinding originalParameterType)", "signatureAfterChange": " \tprivate static boolean checkInvocationArgument(BlockScope scope, Expression argument, TypeBinding parameterType, TypeBinding argumentType, TypeBinding originalParameterType)", "diff": ["-\t\t\tif (wildcard.kind != Wildcard.SUPER && wildcard.otherBounds == null) // lub wildcards are tolerated", "+\t\t\tif (wildcard.boundKind != Wildcard.SUPER && wildcard.otherBounds == null) // lub wildcards are tolerated"]}], "num": 67045}