{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "27c62f4869f6a20f30364ce7f718c971", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69c1f1423d5119eb3a7a576f50b70ec7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AutoBoxingTest.java", "commitBeforeChange": "bba2bca88efef9ed01c7e2181bcf1d41e5989888", "commitAfterChange": "bf39b08bac5fe04538b98cd37961d265ad6d7cd8", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \t \tpublic void test032()", "signatureAfterChange": " \t \tpublic void test032()", "diff": ["-\t\t\t\"     0  new #17 java/lang/Integer\\n\" + ", "+\t\t\t\"     0  new java/lang/Integer [17]\\n\" + ", "-\t\t\t\"     5  invokespecial #20 <Method java/lang/Integer.<init>(I)V>\\n\" + ", "-\t\t\t\"     8  new #17 java/lang/Integer\\n\" + ", "+\t\t\t\"     5  invokespecial java/lang/Integer.<init>(I)V [20]\\n\" + ", "+\t\t\t\"     8  new java/lang/Integer [17]\\n\" + ", "-\t\t\t\"    13  invokespecial #20 <Method java/lang/Integer.<init>(I)V>\\n\" + ", "+\t\t\t\"    13  invokespecial java/lang/Integer.<init>(I)V [20]\\n\" + ", "-\t\t\t\"    19  getstatic #26 <Field java/lang/System.out Ljava/io/PrintStream;>\\n\" + ", "-\t\t\t\"    22  invokevirtual #31 <Method java/io/PrintStream.println()V>\\n\" + ", "-\t\t\t\"    25  getstatic #26 <Field java/lang/System.out Ljava/io/PrintStream;>\\n\" + ", "-\t\t\t\"    28  ldc #33 <String \\\"SUCCESS\\\">\\n\" + ", "-\t\t\t\"    30  invokevirtual #37 <Method java/io/PrintStream.print(Ljava/lang/String;)V>\\n\" + ", "+\t\t\t\"    19  getstatic java/lang/System.out Ljava/io/PrintStream; [26]\\n\" + ", "+\t\t\t\"    22  invokevirtual java/io/PrintStream.println()V [31]\\n\" + ", "+\t\t\t\"    25  getstatic java/lang/System.out Ljava/io/PrintStream; [26]\\n\" + ", "+\t\t\t\"    28  ldc <String \\\"SUCCESS\\\"> [33]\\n\" + ", "+\t\t\t\"    30  invokevirtual java/io/PrintStream.print(Ljava/lang/String;)V [37]\\n\" + ", "-\t\tif (actualOutput.indexOf(expectedOutput) == -1) {", "-\t\t\tSystem.out.println(org.eclipse.jdt.core.tests.util.Util.displayString(actualOutput, 2));", "+\t\tint index = actualOutput.indexOf(expectedOutput);", "+\t\tif (index == -1 || expectedOutput.length() == 0) {", "+\t\t\tSystem.out.println(Util.displayString(actualOutput, 3));", "-\t\tassertTrue(\"unexpected bytecode sequence\", actualOutput.indexOf(expectedOutput) != -1);", "+\t\tif (index == -1) {", "+\t\t\tassertEquals(\"Wrong contents\", expectedOutput, actualOutput);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4436b6b44ddfdb49d924445382cb72d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "95a11b9ca0b7fa64ff576e466ecdb0a279ed2783", "commitAfterChange": "4b94aeae3b2f17272ac43325195dd1b4ff823c4d", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " \tpublic void test056()", "signatureAfterChange": " \tpublic void test056()", "diff": ["+\t\tString expectedOutput = ", "+\t\t\t\"// Compiled from X.java (version 1.5 : 49.0, no super bit)\\n\" + ", "+\t\t\t\"// Signature: Ljava/lang/Enum<LX;>;\\n\" + ", "+\t\t\t\"public abstract enum X extends java.lang.Enum {\\n\"; ", "+", "+\t\t\tint index = actualOutput.indexOf(expectedOutput);", "+\t\t\tif (index == -1 || expectedOutput.length() == 0) {", "+\t\t\t\tSystem.out.println(Util.displayString(actualOutput, 3));", "+\t\t\t}", "+\t\t\tif (index == -1) {", "+\t\t\t\tassertEquals(\"Wrong contents\", expectedOutput, actualOutput);", "+\t\t\t}", "-\t\t", "-\t\tString expectedOutput = ", "-\t\t\t\"// Compiled from X.java (version 1.5 : 49.0, no super bit)\\n\" + ", "-\t\t\t\"// Signature: Ljava/lang/Enum<LX;>;\\n\" + ", "-\t\t\t\"public abstract enum X extends java.lang.Enum {\\n\"; ", "-\t\t\t", "-\t\tif (actualOutput.indexOf(expectedOutput) == -1) {", "-\t\t\tSystem.out.println(org.eclipse.jdt.core.tests.util.Util.displayString(actualOutput, 2));", "-\t\t}", "-\t\tassertTrue(\"unexpected bytecode sequence\", actualOutput.indexOf(expectedOutput) != -1);"]}], "num": 28113}