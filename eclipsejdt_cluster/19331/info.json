{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eff2a285717a7f89f251d83993843d79", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1674153ca6e193abb0515b1c4b73bdee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " void computeInheritedMethods(ReferenceBinding superclass, ReferenceBinding[] superInterfaces)", "signatureAfterChange": " void computeInheritedMethods(ReferenceBinding superclass, ReferenceBinding[] superInterfaces)", "diff": ["+\tif (nextPosition == 0) return;", "+\tSimpleSet skip = findSuperinterfaceCollisions(superclass, superInterfaces);", "+\t\t\tif (skip != null && skip.includes(superType)) continue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20c4f8f5e66841cc95f7417b32a2f566", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "79230cd7762a4c67bbe12b2445e22b464f420455", "commitAfterChange": "0e2b95cbd8acd25a30eff4aa5a4e5b34fa13b0c5", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r public void searchAllTypeNames(\r \tIWorkspace workspace,\r \tchar[] packageName, \r \tchar[] typeName,\r \tint matchMode, \r \tboolean isCaseSensitive,\r \tint searchFor, \r \tIJavaSearchScope scope, \r \tfinal ITypeNameRequestor nameRequestor,\r \tint waitingPolicy,\r \tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": "\r public void searchAllTypeNames(\r \tIWorkspace workspace,\r \tchar[] packageName, \r \tchar[] typeName,\r \tint matchMode, \r \tboolean isCaseSensitive,\r \tint searchFor, \r \tIJavaSearchScope scope, \r \tfinal ITypeNameRequestor nameRequestor,\r \tint waitingPolicy,\r \tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\tindexManager.performConcurrentJob(\r", "-\t\tnew PatternSearchJob(pattern, scope, IInfoConstants.NameInfo | IInfoConstants.PathInfo, searchRequestor, indexManager),\r", "-\t\twaitingPolicy,\r", "-\t\tprogressMonitor);\t\r", "+\ttry {\r", "+\t\tif (progressMonitor != null) {\r", "+\t\t\tprogressMonitor.beginTask(Util.bind(\"engine.searching\"), 100); //$NON-NLS-1$\r", "+\t\t}\r", "+\t\tindexManager.performConcurrentJob(\r", "+\t\t\tnew PatternSearchJob(pattern, scope, IInfoConstants.NameInfo | IInfoConstants.PathInfo, searchRequestor, indexManager),\r", "+\t\t\twaitingPolicy,\r", "+\t\t\tprogressMonitor);\t\r", "+\t} finally {\r", "+\t\tif (progressMonitor != null) {\r", "+\t\t\tprogressMonitor.done();\r", "+\t\t}\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "420978a7f326d93a7e90afd170a17384", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeNamesCollector.java", "commitBeforeChange": "4f8b41427e5710e37012dc18560acc142566864b", "commitAfterChange": "474e0db6559546cf5ac1476d3c4eb203e5f714e7", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": " protected void collectSuperTypeNames(ReferenceBinding binding)", "signatureAfterChange": " protected void collectSuperTypeNames(ReferenceBinding binding, char[][] path)", "diff": ["-protected void collectSuperTypeNames(ReferenceBinding binding) {", "+protected void collectSuperTypeNames(ReferenceBinding binding, char[][] path) {", "+\tif (path != null) {", "+\t\tboolean samePackage = addIfSamePackage(superclass.compoundName, path);", "+\t\tif (!samePackage) path = null;", "+\t}", "-\t\tcollectSuperTypeNames(superclass);", "+\t\tcollectSuperTypeNames(superclass, null);", "-\t\t\tcollectSuperTypeNames(interfaceBinding);", "+\t\t\tcollectSuperTypeNames(interfaceBinding, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65ed86877c0a2823d1e2782f1a0f5404", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AddJarFileToIndex.java", "commitBeforeChange": "ce9d82264275b3c4ad926312ca4ca735e225fab4", "commitAfterChange": "3f70f3f99df21def4574d8396aee2d34db8ebf8e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public boolean execute()", "signatureAfterChange": "\r public boolean execute()", "diff": ["+\tIIndex index = null;\r", "-\t\tIIndex index = (IIndex) manager.getIndex(indexedPath, false);\r", "+\t\tindex = (IIndex) manager.getIndex(indexedPath, false);\r", "+\t\t// something wrong happened during indexing this file, so we can get rid of it\r", "+\t\tif (index != null) {\r", "+\t\t\tFile indexFile = index.getIndexFile();\r", "+\t\t\tif (indexFile != null) {\r", "+\t\t\t\tindexFile.delete();\r", "+\t\t\t}\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dab0b6dcff450e83eb404d64acf5c8b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "6f6bc9d0562d23a055ee9e986cf21155795a29ff", "commitAfterChange": "7f289b483e1414e7141e9f94307fbe445e3b1b34", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tprivate String getFileNamesForPrinting()", "signatureAfterChange": " \tprivate String getFileNamesForPrinting(final ProcessorEnvImpl processorEnv)", "diff": ["-\tprivate String getFileNamesForPrinting(){", "+\tprivate String getFileNamesForPrinting(final ProcessorEnvImpl processorEnv){", "+\t\tif( processorEnv != null ){", "+\t\t\tfinal IFile file = processorEnv.getFile();", "+\t\t\tif( file != null )", "+\t\t\t\treturn file.getName();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbbbd2557b70304e32954c6786ef1696", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/internal/compiler/tool/EclipseCompiler.java", "commitBeforeChange": "46ea3b2fef612e233f18c1fb6cfcae1d94121264", "commitAfterChange": "b8315251ffb02e48cefcddb514a7641a6c9516c4", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic CompilationTask getTask(Writer out, \t\t\tJavaFileManager fileManager, \t\t\tDiagnosticListener<? super JavaFileObject> diagnosticListener, \t\t\tIterable<String> options, \t\t\tIterable<String> classes, \t\t\tIterable<? extends JavaFileObject> compilationUnits)", "signatureAfterChange": " \tpublic CompilationTask getTask(Writer out, \t\t\tJavaFileManager fileManager, \t\t\tDiagnosticListener<? super JavaFileObject> diagnosticListener, \t\t\tIterable<String> options, \t\t\tIterable<String> classes, \t\t\tIterable<? extends JavaFileObject> compilationUnits)", "diff": ["-\t\tthis.fileManager = fileManager;", "+\t\tif (fileManager != null) {", "+\t\t\tthis.fileManager = fileManager;", "+\t\t} else {", "+\t\t\tthis.fileManager = this.getStandardFileManager(diagnosticListener, null, null);", "+\t\t}", "-\t\tfor (Iterator<String> iterator = options.iterator(); iterator.hasNext(); ) {", "-\t\t\tfileManager.handleOption(iterator.next(), iterator);", "-\t\t}", "-\t\t", "-\t\tfor (String option : options) {", "-\t\t\tallOptions.add(option);", "+\t\tif (options != null) {", "+    \t\tfor (Iterator<String> iterator = options.iterator(); iterator.hasNext(); ) {", "+    \t\t\tthis.fileManager.handleOption(iterator.next(), iterator);", "+    \t\t}", "+    \t\tfor (String option : options) {", "+    \t\t\tallOptions.add(option);", "+    \t\t}"]}], "num": 19331}