{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef08aa767387af9abfb4e01ed6304c90", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d833930c007abd1ba20e74493f57bf52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/DietRecoveryTest.java", "commitBeforeChange": "e7b1ea867718ceec3cf08d3cf2170026c991b041", "commitAfterChange": "ba0154713ba7d434aa2e47b80fd55a84048c10dc", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "  public void test75()", "signatureAfterChange": "  public void test75()", "diff": ["+\tString expectedDietPlusBodyPlusStatementsRecoveryUnitToString =", "+\t\t\"package ZKentTest;\\n\" + ", "+\t\t\"import java.awt.color.*;\\n\" + ", "+\t\t\"public class A {\\n\" + ", "+\t\t\"  int[] ii;\\n\" + ", "+\t\t\"  public A() {\\n\" + ", "+\t\t\"    super();\\n\" + ", "+\t\t\"  }\\n\" + ", "+\t\t\"  A foo(int i) {\\n\" + ", "+\t\t\"    return this;\\n\" + ", "+\t\t\"  }\\n\" + ", "+\t\t\"  int bar() {\\n\" + ", "+\t\t\"    class Local {\\n\" + ", "+\t\t\"      Local() {\\n\" + ", "+\t\t\"        super();\\n\" + ", "+\t\t\"      }\\n\" + ", "+\t\t\"      int hello() {\\n\" + ", "+\t\t\"        fo = ;\\n\" + ", "+\t\t\"      }\\n\" + ", "+\t\t\"      int world() {\\n\" + ", "+\t\t\"      }\\n\" + ", "+\t\t\"      void foo() {\\n\" + ", "+\t\t\"      }\\n\" + ", "+\t\t\"    }\\n\" + ", "+\t\t\"    int hello;\\n\" + ", "+\t\t\"  }\\n\" + ", "+\t\t\"}\\n\";", "+\t\t", "-\t\texpectedFullUnitToString,\t\t", "-\t\texpectedCompletionDietUnitToString,", "-\t\ttestName);", "+\t\texpectedDietPlusBodyPlusStatementsRecoveryUnitToString,\t\t", "+\t\texpectedFullUnitToString,", "+\t\texpectedCompletionDietUnitToString, testName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5a43fc88413efe4bd088ca205da7c3d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/DietRecoveryTest.java", "commitBeforeChange": "e7b1ea867718ceec3cf08d3cf2170026c991b041", "commitAfterChange": "ba0154713ba7d434aa2e47b80fd55a84048c10dc", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": "  public void test77()", "signatureAfterChange": "  public void test77()", "diff": ["+\tString expectedDietPlusBodyPlusStatementsRecoveryUnitToString = ", "+\t\t\"package p;\\n\" + ", "+\t\t\"import java.lang.*;\\n\" + ", "+\t\t\"class IncompleteHanoi {\\n\" + ", "+\t\t\"  private Post[] posts;\\n\" + ", "+\t\t\"  private int numberOfDisks;\\n\" + ", "+\t\t\"  IncompleteHanoi() {\\n\" + ", "+\t\t\"    super();\\n\" + \t\t", "+\t\t\"  }\\n\" + ", "+\t\t\"  public Hanoi(int numberOfDisks) {\\n\" + ", "+\t\t\"  }\\n\" + ", "+\t\t\"  private void solve(int depth, Post start, Post free, Post end) {\\n\" + ", "+\t\t\"    if ((depth == 1))\\n\" + ", "+\t\t\"        moveDisk(start, end);\\n\" + ", "+\t\t\"    else\\n\" + ", "+\t\t\"        if ((depth > 1))\\n\" + ", "+\t\t\"            {\\n\" + ", "+\t\t\"              sol = ;\\n\" + ", "+\t\t\"            }\\n\" + ", "+\t\t\"        else\\n\" + ", "+\t\t\"            ;\\n\" + ", "+\t\t\"  }\\n\" + ", "+\t\t\"}\\n\";", "+\t\t", "-\t\texpectedFullUnitToString,\t\t", "-\t\texpectedCompletionDietUnitToString,", "-\t\ttestName);", "+\t\texpectedDietPlusBodyPlusStatementsRecoveryUnitToString,\t\t", "+\t\texpectedFullUnitToString,", "+\t\texpectedCompletionDietUnitToString, testName);"]}], "num": 15132}