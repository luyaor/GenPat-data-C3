{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cbad73dc613d9f7cfef1293c0fe438cf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1f19b70fd943db247cf5ecb8c3feb35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/annotations/valueconversion/ValueConversionProcessor.java", "commitBeforeChange": "a6fb7155fd890e70fc93ff099a2bfa78beffa3e9", "commitAfterChange": "dade23c0ca1cb5b996dfae1d1cfc189d06d41a6f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t\t\t \t \t@SuppressWarnings(\"unused\" \tprivate void assertArrayValueTypeMatch(final String name, final Object value, final Class expectedElementType)", "signatureAfterChange": " \t \tprivate void assertArrayValueTypeMatch( \t\t\tfinal String name,  \t\t\tfinal List<AnnotationValue> actualValues,  \t\t\tfinal Class expectedElementType, \t\t\tfinal Object[] expectedValues)", "diff": ["-\t", "-\t@SuppressWarnings(\"unused\") //$NON-NLS-1$", "-\tprivate void assertArrayValueTypeMatch(final String name, final Object value, final Class expectedElementType)", "-\t\tTestCase.assertEquals(", "-\t\t\t\t\"annotation value type mismatch\",  //$NON-NLS-1$", "-\t\t\t\tList.class.getName(), ", "-\t\t\t\tvalue.getClass().getName());", "-\t\t@SuppressWarnings(\"unchecked\") //$NON-NLS-1$", "-\t\tfinal List<AnnotationValue> values = (List<AnnotationValue>)value;", "-\t\tfor( AnnotationValue av : values )", "-\t\t\tassertValueTypeMatch(name, av.getValue(), expectedElementType );", "+\t", "+\tprivate void assertArrayValueTypeMatch(", "+\t\t\tfinal String name, ", "+\t\t\tfinal List<AnnotationValue> actualValues, ", "+\t\t\tfinal Class expectedElementType,", "+\t\t\tfinal Object[] expectedValues)", "+\t{\t", "+\t\tint i=0;", "+\t\tfor( AnnotationValue av : actualValues ){", "+\t\t\tassertValueTypeMatch(name, av.getValue(), expectedElementType, expectedValues[i] );", "+\t\t\ti++;", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce40443f7f8927e066416b5b88b03e1d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator2.java", "commitBeforeChange": "d9032a87dfcb69e19b4c3aae869d4a786d1fb149", "commitAfterChange": "eee6512d26cd1c50a9b02d1b4b78531f507d95fc", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tprivate void locateMatches(JavaProject javaProject) throws JavaModelException", "signatureAfterChange": " \tprivate void locateMatches(JavaProject javaProject, PotentialMatch[] potentialMatches, int start, int length) throws JavaModelException", "diff": ["-\t\t// copy array because elements  from the original are removed below", "+\t}", "+\tprivate void locateMatches(JavaProject javaProject, PotentialMatch[] potentialMatches, int start, int length) throws JavaModelException {", "+\t\t", "+\t\t// copy array because elements  from the original are removed below", "-\t\tSystem.arraycopy(potentialMatches, 0, copy, 0, length);", "+\t\tSystem.arraycopy(potentialMatches, start, copy, 0, length);", "-\t", "+\t\t", "-", "+\t\t", "-\t\t\tthis.createAndResolveBindings(potentialMatches);", "+\t\t\tthis.createAndResolveBindings(potentialMatches, start, length);", "-\t", "+\t\t", "-\t", "+\t\tpotentialMatches = null;", "+\t\t", "-\t\t\t\t\tif (this.options.verbose)", "-\t\t\t\t\t\tSystem.out.println(", "-\t\t\t\t\t\t\tUtil.bind(", "-\t\t\t\t\t\t\t\t\"compilation.process\" , //$NON-NLS-1$", "-\t\t\t\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\t\t\t\tString.valueOf(i + 1),", "-\t\t\t\t\t\t\t\t\tString.valueOf(totalUnits),", "-\t\t\t\t\t\t\t\t\tnew String(unitsToProcess[i].getFileName())}));"]}], "num": 25869}