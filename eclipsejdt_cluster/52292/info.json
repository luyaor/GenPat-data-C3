{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "89b0232eeaeb2b604daffc68a926be31", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48b3e78b634b88b3e09a0e7d68ba306f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PotentialMatch.java", "commitBeforeChange": "d9032a87dfcb69e19b4c3aae869d4a786d1fb149", "commitAfterChange": "eee6512d26cd1c50a9b02d1b4b78531f507d95fc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \tprivate char[] findSource(ClassFile classFile)", "signatureAfterChange": "\r \tprivate String getSourceFileName()", "diff": ["-\tprivate char[] findSource(ClassFile classFile) {\r", "-\t\t\tSourceMapper sourceMapper = classFile.getSourceMapper();\r", "-\t\t\t\tIType type = classFile.getType();\r", "-\t\t\t\tif (classFile.isOpen() && type.getDeclaringType() == null) {\r", "-\t\t\t\t\tsource = sourceMapper.findSource(type);\r", "-\t\t\t\t} else {\r", "-\t\t\t\t\tClassFileReader reader = this.locator.classFileReader(type);\r", "-\t\t\t\t\tif (reader != null) {\r", "-\t\t\t\t\t\tsource = sourceMapper.findSource(type, reader);\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r", "+\t */\r", "+\tprivate String getSourceFileName() {\r", "+\t\tif (this.sourceFileName != null) return this.sourceFileName;\r", "+\t\tthis.sourceFileName = NO_SOURCE_FILE_NAME; \r", "+\t\ttry {\r", "+\t\t\tSourceMapper sourceMapper = this.openable.getSourceMapper();\r", "+\t\t\tif (sourceMapper != null) {\r", "+\t\t\t\tIType type = ((ClassFile)this.openable).getType();\r", "+\t\t\t\tClassFileReader reader = this.locator.classFileReader(type);\r", "+\t\t\t\tif (reader != null) {\r", "+\t\t\t\t\tthis.sourceFileName = sourceMapper.findSourceFileName(type, reader);\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t} catch (JavaModelException e) {\r", "+\t\t}\r", "+\t\treturn this.sourceFileName;\r", "+\t}\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea45230a5a16ade992b5cb78ff7ccc1e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PotentialMatch.java", "commitBeforeChange": "0271031e5844c32df2646c3a81a2c00b29e7d251", "commitAfterChange": "14c82497ad7236bee9eedf2d9ff4867e4a47ff21", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tprivate String getSourceFileName()", "signatureAfterChange": " private String getSourceFileName()", "diff": ["-\t */", "-\tprivate String getSourceFileName() {", "-\t\tif (this.sourceFileName != null) return this.sourceFileName;", "-\t\tthis.sourceFileName = NO_SOURCE_FILE_NAME; ", "-\t\ttry {", "-\t\t\tSourceMapper sourceMapper = this.openable.getSourceMapper();", "-\t\t\tif (sourceMapper != null) {", "-\t\t\t\tIType type = ((ClassFile)this.openable).getType();", "-\t\t\t\tClassFileReader reader = this.locator.classFileReader(type);", "-\t\t\t\tif (reader != null) {", "-\t\t\t\t\tthis.sourceFileName = sourceMapper.findSourceFileName(type, reader);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t} catch (JavaModelException e) {", "-\t\t}", "-\t\treturn this.sourceFileName;", "-\t}\t", "+ */", "+private String getSourceFileName() {", "+\tif (this.sourceFileName != null) return this.sourceFileName;", "+\tthis.sourceFileName = NO_SOURCE_FILE_NAME; ", "+\ttry {", "+\t\tSourceMapper sourceMapper = this.openable.getSourceMapper();", "+\t\tif (sourceMapper != null) {", "+\t\t\tIType type = ((ClassFile) this.openable).getType();", "+\t\t\tClassFileReader reader = this.matchingNodeSet.locator.classFileReader(type);", "+\t\t\tif (reader != null)", "+\t\t\t\tthis.sourceFileName = sourceMapper.findSourceFileName(type, reader);", "+\t\t}", "+\t} catch (JavaModelException e) {", "+\t}", "+\treturn this.sourceFileName;", "+}\t"]}], "num": 52292}