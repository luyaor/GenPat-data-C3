{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e1d373095a84eb3eb30adf8f05be635e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c97943b0db39838d5f691f286d20e97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "82e3492687fb385a8a9ba6c56e1f6d491dc8d79a", "commitAfterChange": "0b30f6ac807cc8aa14a5978d1dd305dd71baedda", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprotected void verifyFragmentsPositions(Javadoc docComment, char[] source)", "signatureAfterChange": " \tprivate void verifyPositions(Javadoc docComment, char[] source)", "diff": ["-\t */", "-\tprotected void verifyFragmentsPositions(Javadoc docComment, char[] source) {", "+\t */", "+\tprivate void verifyPositions(Javadoc docComment, char[] source) {", "+\t\tint start = docComment.getStartPosition();", "+\t\tint end = start+docComment.getLength()-1;", "+\t\tassertTrue(\"Misplaced javadoc start\", source[start++] == '/' && source[start++] == '*' && source[start++] == '*');", "+\t\t// Get first meaningful character", "+\t\tint tagStart = start;", "+\t\t\twhile (source[tagStart] == '*' || Character.isWhitespace(source[tagStart])) {", "+\t\t\t\ttagStart++; // purge non-stored characters", "+\t\t\t}", "+\t\t\tTagElement tagElement = (TagElement) tags.next();", "+\t\t\tassertEquals(\"Tag element has wrong start position\", tagStart, tagElement.getStartPosition());", "+//\t\t\tint tagEnd = tagStart+tagElement.getLength()-1;", "+\t\t\tverifyPositions(tagElement , source);", "+\t\t\ttagStart += tagElement.getLength();", "+\t\twhile (Character.isWhitespace(source[tagStart])) {", "+\t\t\ttagStart++; // purge non-stored characters", "+\t\t}", "+\t\tassertTrue(\"Misplaced javadoc end\", source[tagStart++] == '*' && source[tagStart] == '/');", "+\t\tassertEquals(\"Wrong javadoc length\", tagStart, end);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afce124b34d7baa9273ca21f9ae284d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "35d3c94bac1e2208a31f158b8d7e6058b35282e2", "commitAfterChange": "2b6f2c5ab69f56c08d444fe8672c8fe1596db9c2", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tprivate void verifyPositions(Javadoc docComment, char[] source)", "signatureAfterChange": " \tprivate void verifyPositions(Javadoc docComment, char[] source)", "diff": ["-\t\tboolean stop = this.stopOnFailure;", "-//\t\tthis.stopOnFailure = false;", "+\t\tboolean stop = stopOnFailure;", "+//\t\tstopOnFailure = false;", "-\t\tassumeTrue(this.prefix+\"Misplaced javadoc start at <\"+start+\">: \"+docComment, source[start++] == '/' && source[start++] == '*' && source[start++] == '*');", "+\t\tassumeTrue(prefix+\"Misplaced javadoc start at <\"+start+\">: \"+docComment, source[start++] == '/' && source[start++] == '*' && source[start++] == '*');", "-\t\t\tassumeEquals(this.prefix+\"Wrong start position <\"+teStart+\"> for tag element: \"+tagElement, tagStart, teStart);", "+\t\t\tassumeEquals(prefix+\"Wrong start position <\"+teStart+\"> for tag element: \"+tagElement, tagStart, teStart);", "-\t\tassumeTrue(this.prefix+\"Misplaced javadoc end at <\"+tagStart+'>', source[tagStart-1] == '*' && source[tagStart] == '/');", "-\t\tassumeEquals(this.prefix+\"Wrong javadoc length at <\"+end+\">: \", tagStart, end);", "-\t\tthis.stopOnFailure = stop;", "-\t\tassertTrue(!stop || this.failures.size()==0);", "+\t\tassumeTrue(prefix+\"Misplaced javadoc end at <\"+tagStart+'>', source[tagStart-1] == '*' && source[tagStart] == '/');", "+\t\tassumeEquals(prefix+\"Wrong javadoc length at <\"+end+\">: \", tagStart, end);", "+\t\tstopOnFailure = stop;", "+\t\tassertTrue(!stop || failures.size()==0);"]}], "num": 13971}