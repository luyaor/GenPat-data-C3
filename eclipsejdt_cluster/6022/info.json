{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cb1ec726b4cddb74515cdd07e505e827", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b86b3a9044f7325efe0f1e124ca1588", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Statement.java", "commitBeforeChange": "c6083a2d48fa11ffa1e9554a2f00be6af36feafe", "commitAfterChange": "6dbe2813dd7277bd2252f3441ba09237b6b43790", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " void internalAnalyseOneArgument18(BlockScope currentScope, FlowContext flowContext, TypeBinding expectedType, \t\tExpression argument, FlowInfo flowInfo, int nullStatus, Boolean expectedNonNullness, TypeBinding originalExpected)", "signatureAfterChange": " void internalAnalyseOneArgument18(BlockScope currentScope, FlowContext flowContext, TypeBinding expectedType, \t\tExpression argument, FlowInfo flowInfo, int nullStatus, Boolean expectedNonNullness, TypeBinding originalExpected)", "diff": ["+\t\tif (!expectedType.hasNullTypeAnnotations() && expectedNonNullness == Boolean.TRUE) {", "+\t\t\t// improve problem rendering when using a declaration annotation in a 1.8 setting", "+\t\t\tLookupEnvironment env = currentScope.environment();", "+\t\t\texpectedType = env.createAnnotatedType(expectedType, new AnnotationBinding[] {env.getNonNullAnnotation()});", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9998a6c08e16269d373018589829f33d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/FieldBinding.java", "commitBeforeChange": "5f14a74e57bc6a49a738ad511a79fc61fbe7e00c", "commitAfterChange": "6ca7655344cc04fd2732983b3bef96aa0f451863", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public void fillInDefaultNonNullness(FieldDeclaration sourceField, Scope scope)", "signatureAfterChange": "  public void fillInDefaultNonNullness(FieldDeclaration sourceField, Scope scope)", "diff": ["+\tLookupEnvironment environment = scope.environment();", "-\t\tthis.tagBits |= TagBits.AnnotationNonNull;", "+\t\tif (environment.globalOptions.sourceLevel < ClassFileConstants.JDK1_8)", "+\t\t\tthis.tagBits |= TagBits.AnnotationNonNull;", "+\t\telse", "+\t\t\tthis.type = environment.createAnnotatedType(this.type, new AnnotationBinding[]{environment.getNonNullAnnotation()});"]}], "num": 6022}