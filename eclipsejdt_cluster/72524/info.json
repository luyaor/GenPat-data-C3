{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1433c8a5f126e2ea54d56337264789fc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e728f51accd7e37b196a359bdb8dba1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/AnnotationValueImpl.java", "commitBeforeChange": "4f3cb4506b570faea11a184c16ddcb866109910f", "commitAfterChange": "792a8c6c3e374444dc583ac6a4c04af5f3cf356d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t@Override \tpublic String toString()", "signatureAfterChange": "  \t@Override \tpublic String toString()", "diff": ["-\t\t\treturn \"\\\"\" + _value + \"\\\"\"; //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tString value = (String) _value;", "+\t\t\tStringBuffer sb = new StringBuffer();", "+\t\t\tsb.append('\"');", "+\t\t\tfor (int i = 0; i < value.length(); i++) {", "+\t\t\t\tUtil.appendEscapedChar(sb, value.charAt(i), true);", "+\t\t\t}", "+\t\t\tsb.append('\"');", "+\t\t\treturn sb.toString();", "-\t\t\treturn \"'\" + _value.toString() + \"'\"; //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tStringBuffer sb = new StringBuffer();", "+\t\t\tsb.append('\\'');", "+\t\t\tUtil.appendEscapedChar(sb, ((Character) _value).charValue(), false);", "+\t\t\tsb.append('\\'');", "+\t\t\treturn sb.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb12e02c833cf5dbf652c41e45c00c1d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/AnnotationValueImpl.java", "commitBeforeChange": "4f3cb4506b570faea11a184c16ddcb866109910f", "commitAfterChange": "792a8c6c3e374444dc583ac6a4c04af5f3cf356d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tpublic String toString()", "signatureAfterChange": "  \t@Override \tpublic String toString()", "diff": ["-\t", "+", "+\t@Override", "-\t\t\treturn \"\\\"\" + _value + \"\\\"\"; //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tString value = (String) _value;", "+\t\t\tStringBuffer sb = new StringBuffer();", "+\t\t\tsb.append('\"');", "+\t\t\tfor (int i = 0; i < value.length(); i++) {", "+\t\t\t\tUtil.appendEscapedChar(sb, value.charAt(i), true);", "+\t\t\t}", "+\t\t\tsb.append('\"');", "+\t\t\treturn sb.toString();", "-\t\t\treturn \"'\" + _value.toString() + \"'\"; //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tStringBuffer sb = new StringBuffer();", "+\t\t\tsb.append('\\'');", "+\t\t\tUtil.appendEscapedChar(sb, ((Character) _value).charValue(), false);", "+\t\t\tsb.append('\\'');", "+\t\t\treturn sb.toString();"]}], "num": 72524}