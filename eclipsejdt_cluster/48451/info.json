{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "95b3ed2e88e77cf22cfeb4c9bdc2a4fd", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0446009c2cd4971febd9020fcb1359a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "06e8c1940b7fce6b86315eb81900d27eb1279bce", "commitAfterChange": "91510ee1ea5206403f95c9b316aaa14af70c8d8e", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic boolean visit(ConstructorInvocation node)", "signatureAfterChange": " \tpublic boolean visit(ConstructorInvocation node)", "diff": ["+\t\tif (node.getAST().apiLevel() >= AST.LEVEL_3_0) {", "+\t\t\tif (!node.typeArguments().isEmpty()) {", "+\t\t\t\tthis.buffer.append(\"<\");//$NON-NLS-1$", "+\t\t\t\tfor (Iterator it = node.typeArguments().iterator(); it.hasNext(); ) {", "+\t\t\t\t\tType t = (Type) it.next();", "+\t\t\t\t\tt.accept(this);", "+\t\t\t\t\tif (it.hasNext()) {", "+\t\t\t\t\t\tthis.buffer.append(\",\");//$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tthis.buffer.append(\">\");//$NON-NLS-1$", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0788cbaf261f1443746ac2990f5ab94f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "3388256fa80bf40daffa9f485d2674986c875b82", "commitAfterChange": "7a73f29da5ea73cce41fc54b0fc3ad302149f476", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " \tpublic boolean visit(MethodDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(MethodDeclaration node)", "diff": ["-\t\tif (!node.thrownExceptions().isEmpty()) {", "-\t\t\tthis.buffer.append(\" throws \");//$NON-NLS-1$", "-\t\t\tfor (Iterator it = node.thrownExceptions().iterator(); it.hasNext(); ) {", "-\t\t\t\tName n = (Name) it.next();", "-\t\t\t\tn.accept(this);", "-\t\t\t\tif (it.hasNext()) {", "-\t\t\t\t\tthis.buffer.append(\", \");//$NON-NLS-1$", "-\t\t\t\t}", "+\t\tif (node.getAST().apiLevel() < AST.JLS8) {", "+\t\t\tif (!node.thrownExceptions().isEmpty()) {", "+\t\t\t\tthis.buffer.append(\" throws \");//$NON-NLS-1$", "+\t\t\t\tfor (Iterator it = node.thrownExceptions().iterator(); it.hasNext(); ) {", "+\t\t\t\t\tName n = (Name) it.next();", "+\t\t\t\t\tn.accept(this);", "+\t\t\t\t\tif (it.hasNext()) {", "+\t\t\t\t\t\tthis.buffer.append(\", \");//$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t}\t\t\t\t", "+\t\t\t\tthis.buffer.append(\" \");//$NON-NLS-1$", "+\t\t\t} ", "+\t\t} else {", "+\t\t\tif (!node.thrownExceptionTypes().isEmpty()) {\t\t\t\t", "+\t\t\t\tthis.buffer.append(\" throws \");//$NON-NLS-1$", "+\t\t\t\tfor (Iterator it = node.thrownExceptionTypes().iterator(); it.hasNext(); ) {", "+\t\t\t\t\tType n = (Type) it.next();", "+\t\t\t\t\tn.accept(this);", "+\t\t\t\t\tif (it.hasNext()) {", "+\t\t\t\t\t\tthis.buffer.append(\", \");//$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t}\t", "+\t\t\t\tthis.buffer.append(\" \");//$NON-NLS-1$\t\t\t\t", "-\t\t\tthis.buffer.append(\" \");//$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25950ae47226b24a859857ecf1699c65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "06e8c1940b7fce6b86315eb81900d27eb1279bce", "commitAfterChange": "91510ee1ea5206403f95c9b316aaa14af70c8d8e", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " \tpublic boolean visit(MethodInvocation node)", "signatureAfterChange": " \tpublic boolean visit(MethodInvocation node)", "diff": ["+\t\tif (node.getAST().apiLevel() >= AST.LEVEL_3_0) {", "+\t\t\tif (!node.typeArguments().isEmpty()) {", "+\t\t\t\tthis.buffer.append(\"<\");//$NON-NLS-1$", "+\t\t\t\tfor (Iterator it = node.typeArguments().iterator(); it.hasNext(); ) {", "+\t\t\t\t\tType t = (Type) it.next();", "+\t\t\t\t\tt.accept(this);", "+\t\t\t\t\tif (it.hasNext()) {", "+\t\t\t\t\t\tthis.buffer.append(\",\");//$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tthis.buffer.append(\">\");//$NON-NLS-1$", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "378ee789b774efb42a2e4858673f15f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "06e8c1940b7fce6b86315eb81900d27eb1279bce", "commitAfterChange": "91510ee1ea5206403f95c9b316aaa14af70c8d8e", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " \tpublic boolean visit(SuperMethodInvocation node)", "signatureAfterChange": " \tpublic boolean visit(SuperMethodInvocation node)", "diff": ["+\t\tif (node.getAST().apiLevel() >= AST.LEVEL_3_0) {", "+\t\t\tif (!node.typeArguments().isEmpty()) {", "+\t\t\t\tthis.buffer.append(\"<\");//$NON-NLS-1$", "+\t\t\t\tfor (Iterator it = node.typeArguments().iterator(); it.hasNext(); ) {", "+\t\t\t\t\tType t = (Type) it.next();", "+\t\t\t\t\tt.accept(this);", "+\t\t\t\t\tif (it.hasNext()) {", "+\t\t\t\t\t\tthis.buffer.append(\",\");//$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tthis.buffer.append(\">\");//$NON-NLS-1$", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "421108c13819013788a5c2a1e96cbbf4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "06e8c1940b7fce6b86315eb81900d27eb1279bce", "commitAfterChange": "91510ee1ea5206403f95c9b316aaa14af70c8d8e", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": " \tpublic boolean visit(SuperConstructorInvocation node)", "signatureAfterChange": " \tpublic boolean visit(SuperConstructorInvocation node)", "diff": ["+\t\tif (node.getAST().apiLevel() >= AST.LEVEL_3_0) {", "+\t\t\tif (!node.typeArguments().isEmpty()) {", "+\t\t\t\tthis.buffer.append(\"<\");//$NON-NLS-1$", "+\t\t\t\tfor (Iterator it = node.typeArguments().iterator(); it.hasNext(); ) {", "+\t\t\t\t\tType t = (Type) it.next();", "+\t\t\t\t\tt.accept(this);", "+\t\t\t\t\tif (it.hasNext()) {", "+\t\t\t\t\t\tthis.buffer.append(\",\");//$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tthis.buffer.append(\">\");//$NON-NLS-1$", "+\t\t\t}", "+\t\t}"]}], "num": 48451}