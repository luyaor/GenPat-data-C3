{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "23d2e24d6237efc57fb0139182952594", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30969b4186f59116eeabcb34da47bda7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 224, "methodNumberAfterChange": 13, "signatureBeforeChange": " public final static void initTables() throws java.io.IOException", "signatureAfterChange": " public final static void initTables() throws java.io.IOException", "diff": ["+}", "+public final static void initTables() throws java.io.IOException {", "+", "+\tfinal String prefix = FILEPREFIX;", "+\tint i = 0;", "+\tlhs = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\tchar[] chars = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\tcheck_table = new short[chars.length];", "+\tfor (int c = chars.length; c-- > 0;) {", "+\t\tcheck_table[c] = (short) (chars[c] - 32768);", "+\t}", "+\tasb = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\tasr = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\tnasb = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\tnasr = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\tterminal_index = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\tnon_terminal_index = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\tterm_action = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\t", "+\tscope_prefix = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\tscope_suffix = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\tscope_lhs = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\tscope_state_set = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\tscope_rhs = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\tscope_state = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\tin_symb = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\t", "+\trhs = readByteTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\tterm_check = readByteTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\tscope_la = readByteTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\t", "+\tname = readNameTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\t", "+\trules_compliance = readLongTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\t", "+\treadableName = readReadableNameTable(READABLE_NAMES_FILE_NAME);", "+\t", "+\tbase_action = lhs;", "+}", "-}", "-public final static void initTables() throws java.io.IOException {", "-", "-\tfinal String prefix = FILEPREFIX;", "-\tint i = 0;", "-\tlhs = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\tchar[] chars = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\tcheck_table = new short[chars.length];", "-\tfor (int c = chars.length; c-- > 0;) {", "-\t\tcheck_table[c] = (short) (chars[c] - 32768);", "-\t}", "-\tasb = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\tasr = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\tnasb = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\tnasr = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\tterminal_index = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\tnon_terminal_index = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\tterm_action = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\t", "-\tscope_prefix = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\tscope_suffix = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\tscope_lhs = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\tscope_state_set = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\tscope_rhs = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\tscope_state = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\tin_symb = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\t", "-\trhs = readByteTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\tterm_check = readByteTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\tscope_la = readByteTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\t", "-\tname = readNameTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\treadableName = readReadableNameTable(READABLE_NAMES);", "-\t", "-\tbase_action = lhs;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44e36d3345515e1d818e113a4a6fd70b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "c8e7b4e01df9aa644d2160be3783e770b3cf2574", "commitAfterChange": "ca8ac59322f9a5546de88cf1c276f2947f3dabe2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 11, "signatureBeforeChange": " public final static void buildFilesFromLPG(String dataFilename)\tthrows java.io.IOException", "signatureAfterChange": " public final static void buildFilesFromLPG(String dataFilename)\tthrows java.io.IOException", "diff": ["-\tbuildFileFor(prefix + (++i) + \".rsc\", \"lhs\", tokens, false); //$NON-NLS-2$ //$NON-NLS-1$", "-\tbuildFileFor(prefix + (++i) + \".rsc\", \"check_table\", tokens, true); //$NON-NLS-2$ //$NON-NLS-1$", "-\tbuildFileFor(prefix + (++i) + \".rsc\", \"asb\", tokens, false); //$NON-NLS-2$ //$NON-NLS-1$", "-\tbuildFileFor(prefix + (++i) + \".rsc\", \"asr\", tokens, false); //$NON-NLS-2$ //$NON-NLS-1$", "-\tbuildFileFor(prefix + (++i) + \".rsc\", \"nasb\", tokens, false); //$NON-NLS-2$ //$NON-NLS-1$", "-\tbuildFileFor(prefix + (++i) + \".rsc\", \"nasr\", tokens, false); //$NON-NLS-2$ //$NON-NLS-1$", "-\tbuildFileFor(prefix + (++i) + \".rsc\", \"terminal_index\", tokens, false); //$NON-NLS-2$ //$NON-NLS-1$", "-\tbuildFileFor(prefix + (++i) + \".rsc\", \"non_terminal_index\", tokens, false); //$NON-NLS-2$ //$NON-NLS-1$", "-\tbuildFileFor(prefix + (++i) + \".rsc\", \"term_action\", tokens, false); //$NON-NLS-2$ //$NON-NLS-1$", "+\tbuildFileOfIntFor(prefix + (++i) + \".rsc\", \"lhs\", tokens); //$NON-NLS-2$ //$NON-NLS-1$", "+\tbuildFileOfShortFor(prefix + (++i) + \".rsc\", \"check_table\", tokens); //$NON-NLS-2$ //$NON-NLS-1$", "+\tbuildFileOfIntFor(prefix + (++i) + \".rsc\", \"asb\", tokens); //$NON-NLS-2$ //$NON-NLS-1$", "+\tbuildFileOfIntFor(prefix + (++i) + \".rsc\", \"asr\", tokens); //$NON-NLS-2$ //$NON-NLS-1$", "+\tbuildFileOfIntFor(prefix + (++i) + \".rsc\", \"nasb\", tokens); //$NON-NLS-2$ //$NON-NLS-1$", "+\tbuildFileOfIntFor(prefix + (++i) + \".rsc\", \"nasr\", tokens); //$NON-NLS-2$ //$NON-NLS-1$", "+\tbuildFileOfIntFor(prefix + (++i) + \".rsc\", \"terminal_index\", tokens); //$NON-NLS-2$ //$NON-NLS-1$", "+\tbuildFileOfIntFor(prefix + (++i) + \".rsc\", \"non_terminal_index\", tokens); //$NON-NLS-2$ //$NON-NLS-1$", "+\tbuildFileOfIntFor(prefix + (++i) + \".rsc\", \"term_action\", tokens); //$NON-NLS-2$ //$NON-NLS-1$", "-\tbuildFileFor(prefix + (++i) + \".rsc\", \"scope_prefix\", tokens, false); //$NON-NLS-2$ //$NON-NLS-1$", "-\tbuildFileFor(prefix + (++i) + \".rsc\", \"scope_suffix\", tokens, false); //$NON-NLS-2$ //$NON-NLS-1$", "-\tbuildFileFor(prefix + (++i) + \".rsc\", \"scope_lhs\", tokens, false); //$NON-NLS-2$ //$NON-NLS-1$", "-\tbuildFileFor(prefix + (++i) + \".rsc\", \"scope_state_set\", tokens, false); //$NON-NLS-2$ //$NON-NLS-1$", "-\tbuildFileFor(prefix + (++i) + \".rsc\", \"scope_rhs\", tokens, false); //$NON-NLS-2$ //$NON-NLS-1$", "-\tbuildFileFor(prefix + (++i) + \".rsc\", \"scope_state\", tokens, false); //$NON-NLS-2$ //$NON-NLS-1$", "-\tbuildFileFor(prefix + (++i) + \".rsc\", \"in_symb\", tokens, false); //$NON-NLS-2$ //$NON-NLS-1$", "+\tbuildFileOfIntFor(prefix + (++i) + \".rsc\", \"scope_prefix\", tokens); //$NON-NLS-2$ //$NON-NLS-1$", "+\tbuildFileOfIntFor(prefix + (++i) + \".rsc\", \"scope_suffix\", tokens); //$NON-NLS-2$ //$NON-NLS-1$", "+\tbuildFileOfIntFor(prefix + (++i) + \".rsc\", \"scope_lhs\", tokens); //$NON-NLS-2$ //$NON-NLS-1$", "+\tbuildFileOfIntFor(prefix + (++i) + \".rsc\", \"scope_state_set\", tokens); //$NON-NLS-2$ //$NON-NLS-1$", "+\tbuildFileOfIntFor(prefix + (++i) + \".rsc\", \"scope_rhs\", tokens); //$NON-NLS-2$ //$NON-NLS-1$", "+\tbuildFileOfIntFor(prefix + (++i) + \".rsc\", \"scope_state\", tokens); //$NON-NLS-2$ //$NON-NLS-1$", "+\tbuildFileOfIntFor(prefix + (++i) + \".rsc\", \"in_symb\", tokens); //$NON-NLS-2$ //$NON-NLS-1$", "+\t", "+\tbuildFileOfByteFor(prefix + (++i) + \".rsc\", \"rhs\", tokens); //$NON-NLS-2$ //$NON-NLS-1$", "+\tbuildFileOfByteFor(prefix + (++i) + \".rsc\", \"term_check\", tokens); //$NON-NLS-2$ //$NON-NLS-1$", "+\tbuildFileOfByteFor(prefix + (++i) + \".rsc\", \"scope_la\", tokens); //$NON-NLS-2$ //$NON-NLS-1$", "+\t", "+\tbuildFileForName(prefix + (++i) + \".rsc\", new String(contents));//$NON-NLS-1$"]}], "num": 15320}