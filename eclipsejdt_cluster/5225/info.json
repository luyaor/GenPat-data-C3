{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "492425c2673f8cf963f8f7209f1742f7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c8675e509128c18f17e91245af97562", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/CommentRecorderParser.java", "commitBeforeChange": "f3797939fa5164cd62a3ae51074dba1ccea759ff", "commitAfterChange": "0df341e86846b5d019d9adfde0716c02f828f524", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic int flushCommentsDefinedPriorTo(int position)", "signatureAfterChange": " \tpublic int flushCommentsDefinedPriorTo(int position)", "diff": ["-\t\t\tint immediateCommentEnd = -this.scanner.commentStops[index+1]; //non-javadoc comment end positions are negative", "-\t\t\tif (immediateCommentEnd > 0){ // only tolerating non-javadoc comments", "+\t\t\tint immediateCommentEnd = 0;", "+\t\t\twhile (index<lastCommentIndex && (immediateCommentEnd = -this.scanner.commentStops[index+1])  > 0){ // only tolerating non-javadoc comments (non-javadoc comment end positions are negative)", "-\t\t\t\tif (this.scanner.getLineNumber(position) == this.scanner.getLineNumber(immediateCommentEnd)){", "-\t\t\t\t\tposition = immediateCommentEnd;", "-\t\t\t\t\tvalidCount--; // flush this comment", "-\t\t\t\t\tindex++;", "-\t\t\t\t}", "+\t\t\t\tif (this.scanner.getLineNumber(position) != this.scanner.getLineNumber(immediateCommentEnd)) break;", "+\t\t\t\tposition = immediateCommentEnd;", "+\t\t\t\tvalidCount--; // flush this comment", "+\t\t\t\tindex++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd509ef2ced3d1c455cd1d9a3961ec69", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 197, "methodNumberAfterChange": 197, "signatureBeforeChange": "   public int flushCommentsDefinedPriorTo(int position)", "signatureAfterChange": "   public int flushCommentsDefinedPriorTo(int position)", "diff": ["-\tint lastCommentIndex = scanner.commentPtr;", "+\tint lastCommentIndex = this.scanner.commentPtr;", "-\t\tint commentEnd = scanner.commentStops[index];", "+\t\tint commentEnd = this.scanner.commentStops[index];", "-\t\tint immediateCommentEnd = -scanner.commentStops[index+1]; //non-javadoc comment end positions are negative", "+\t\tint immediateCommentEnd = -this.scanner.commentStops[index+1]; //non-javadoc comment end positions are negative", "-\t\t\tif (scanner.getLineNumber(position) == scanner.getLineNumber(immediateCommentEnd)){", "+\t\t\tif (this.scanner.getLineNumber(position) == this.scanner.getLineNumber(immediateCommentEnd)){", "-\t\tSystem.arraycopy(scanner.commentStarts, index + 1, scanner.commentStarts, 0, validCount);", "-\t\tSystem.arraycopy(scanner.commentStops, index + 1, scanner.commentStops, 0, validCount);\t\t", "+\t\tSystem.arraycopy(this.scanner.commentStarts, index + 1, this.scanner.commentStarts, 0, validCount);", "+\t\tSystem.arraycopy(this.scanner.commentStops, index + 1, this.scanner.commentStops, 0, validCount);\t\t", "-\tscanner.commentPtr = validCount - 1;", "+\tthis.scanner.commentPtr = validCount - 1;"]}], "num": 5225}