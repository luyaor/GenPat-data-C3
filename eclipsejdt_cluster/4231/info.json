{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e0720d6c168119de2f1a4be5804f6d97", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8891fc2d1c5dd28163c69c5294128986", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "160d21b2b94d157fab5dde01db5f3d2d3d807918", "commitAfterChange": "0d8ca64730552aee65d20ec58c4bd840971b7de0", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError) \t\tthrows JavaModelException", "diff": ["-\t\tJavaModelManager.PerProjectInfo perProjectInfo = getJavaModelManager().getPerProjectInfoCheckExistence(fProject);", "+\t\tJavaModelManager manager = getJavaModelManager();", "+\t\tJavaModelManager.PerProjectInfo perProjectInfo = manager.getPerProjectInfoCheckExistence(fProject);", "+\t\t\tif (perProjectInfo.classpath == null // .classpath file could not be read", "+\t\t\t\t&& generateMarkerOnError ", "+\t\t\t\t&& fProject.isAccessible() ", "+\t\t\t\t&& manager.deltaProcessor.hasJavaNature(fProject)) {", "+\t\t\t\t\tthis.createClasspathProblemMarker(", "+\t\t\t\t\t\tUtil.bind(\"classpath.cannotReadClasspathFile\", this.getElementName()), //$NON-NLS-1$", "+\t\t\t\t\t\tIMarker.SEVERITY_ERROR,", "+\t\t\t\t\t\tfalse,\t//  cycle error", "+\t\t\t\t\t\tfalse);\t//\tfile format error", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b167ce9087e8066d666bca21a903549", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "ba7b5322db3ca831ddf2955168e308265a30635f", "commitAfterChange": "b8efcec7d38641bbe45122068ae9249137e0e2fb", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 64, "signatureBeforeChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError) \t\tthrows JavaModelException", "diff": ["-\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "-\t\tJavaModelManager.PerProjectInfo perProjectInfo = manager.getPerProjectInfoCheckExistence(fProject);", "+\t\tJavaModelManager.PerProjectInfo perProjectInfo = getPerProjectInfo();", "-\t\t\tIClasspathEntry[] infoPath = perProjectInfo.lastResolvedClasspath;", "+\t\t\tIClasspathEntry[] infoPath = perProjectInfo.resolvedClasspath;", "-\t\t\tif (perProjectInfo.classpath == null // .classpath file could not be read", "+\t\t\tif (perProjectInfo.rawClasspath == null // .classpath file could not be read", "-\t\t\tperProjectInfo.lastResolvedClasspath = resolvedPath;", "+\t\t\tperProjectInfo.resolvedClasspath = resolvedPath;"]}], "num": 4231}