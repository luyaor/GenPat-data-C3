{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b75859393ac23dc48e3233fcceadd2d7", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae57b3f75869e587b9dc058fe79c0907", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AptCompilationParticipant.java", "commitBeforeChange": "2894ba75386697d7bf484434d073fb6ffaf6cec9", "commitAfterChange": "c5ef0e6fd93c55fc5204e498f5b58ab9f95c6ab7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tprivate CompilationParticipantResult preReconcileNotify( PreReconcileCompilationEvent prce )", "signatureAfterChange": " \t \tpublic void reconcile(ReconcileContext context)", "diff": ["-\tprivate CompilationParticipantResult preReconcileNotify( PreReconcileCompilationEvent prce )", "-\t{", "-\t\tIProblem[] problems = null;", "+\tpublic void reconcile(ReconcileContext context){", "-\t\t{", "-\t\t\torg.eclipse.jdt.core.ICompilationUnit cu = prce.getCompilationUnit();", "-\t\t\tIJavaProject javaProject = prce.getJavaProject();", "-\t\t\t", "-\t\t\t// these are null sometimes.  Not sure why...", "-\t\t\tif ( cu == null || javaProject == null  )", "-\t\t\t\treturn GENERIC_COMPILATION_RESULT;", "+\t\t{\t", "+\t\t\tfinal ICompilationUnit workingCopy = context.getWorkingCopy();", "+\t\t\tif( workingCopy == null ) ", "+\t\t\t\treturn;", "+\t\t\tIJavaProject javaProject = workingCopy.getJavaProject();\t\t\t", "+\t\t\tif( javaProject == null )", "+\t\t\t\treturn;", "+\t\t\tAptProject aptProject = AptPlugin.getAptProject(javaProject);", "-\t\t\tAPTResult result = APTDispatch.runAPTDuringReconcile( factories, cu, javaProject );", "-\t\t\tMap<IFile, List<IProblem>> allproblems = result.getProblems();\t\t\t", "-\t\t\t", "-\t\t\tfinal List<IProblem> problemList = allproblems.get(cu.getResource());", "-\t\t\tif( problemList != null && !problemList.isEmpty())", "-\t\t\t\tproblems = problemList.toArray(new IProblem[problemList.size()]);\t", "+\t\t\tAPTDispatchRunnable.runAPTDuringReconcile(context, aptProject, factories);", "-\t\t\tAptPlugin.log(t, \"Failure processing\"); //$NON-NLS-1$", "+\t\t\tAptPlugin.log(t, \"Failure processing\");  //$NON-NLS-1$", "-\t\treturn new PreReconcileCompilationResult(problems);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df83f2d6c79112cd390ce92b8eb5952a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AptCompilationParticipant.java", "commitBeforeChange": "372799d5bd955eabbf1069fe0bbf8aba8ea8af85", "commitAfterChange": "baf433f0226e8b9036b18a28d560e5a42cb8b949", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t\t \tprivate CompilationParticipantResult preBuildNotify( PreBuildCompilationEvent pbce )", "signatureAfterChange": " \t\t \tprivate CompilationParticipantResult preBuildNotify( PreBuildCompilationEvent pbce )", "diff": ["+", "+\t", "+\t\tList<AnnotationProcessorFactory> factories = _factoryLoader.getFactoriesForProject( javaProject );\t", "+\t", "+\t\tAPTResult result = APTDispatch.runAPTDuringBuild(factories, buildFiles, javaProject, pbce.isFullBuild());", "+\t\tSet<IFile> newFiles = result.getNewFiles();\t\t\t", "+\t\tSet<IFile> deletedFiles = result.getDeletedFiles();", "-\t\tHashSet<IFile> newFiles = new HashSet<IFile>();", "-\t\tHashSet<IFile> deletedFiles = new HashSet<IFile>();", "-\t\tHashMap<IFile, Set<String>> newDependencies = new HashMap<IFile, Set<String>>();", "-\t\tHashMap<IFile, List<IProblem>> problems = new HashMap<IFile, List<IProblem>>(4);", "-\t\tList<AnnotationProcessorFactory> factories = _factoryLoader.getFactoriesForProject( javaProject );", "-\t\tboolean sourcePathChanged = false;", "-\t\tfor ( int i = 0; i < buildFiles.length; i++ )", "-\t\t{", "-\t\t\tAPTResult result = APTDispatch.runAPTDuringBuild( ", "-\t\t\t\t\tfactories, ", "-\t\t\t\t\tbuildFiles[i], ", "-\t\t\t\t\tjavaProject );", "-\t\t\t", "-\t\t\t// see if APT updated a project's source path", "-\t\t\tsourcePathChanged |= result.getSourcePathChanged();", "-\t\t\t", "-\t\t\tnewFiles.addAll( result.getNewFiles() );\t\t\t", "-\t\t\tdeletedFiles.addAll( result.getDeletedFiles() );", "-\t\t\tnewDependencies.put( buildFiles[i], result.getNewDependencies() );\t", "-\t\t\tmergeMaps(result.getProblems(), problems);", "-\t\t}", "+\t\t// see if APT updated a project's source path", "+\t\tboolean sourcePathChanged = result.getSourcePathChanged();", "-\t\treturn new PreBuildCompilationResult( newFiles.toArray( new IFile[ newFiles.size() ] ), deletedFiles.toArray( new IFile[ deletedFiles.size() ] ), newDependencies, problems, sourcePathChanged );", "-\t\t", "+\t\treturn new PreBuildCompilationResult( ", "+\t\t\t\tnewFiles.toArray( new IFile[ newFiles.size() ] ), ", "+\t\t\t\tdeletedFiles.toArray( new IFile[ deletedFiles.size() ] ), ", "+\t\t\t\tresult.getNewDependencies(), ", "+\t\t\t\tresult.getProblems(), ", "+\t\t\t\tsourcePathChanged );"]}], "num": 15091}