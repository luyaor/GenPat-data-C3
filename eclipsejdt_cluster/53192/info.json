{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6aded388f449c69234a2f5e0b6014938", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05cce1be8cdedf6b36d96549597b3d74", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTSyntaxErrorPropagator.java", "commitBeforeChange": "3631cf47f01fc0da1be7732f6c067adbe5bd4214", "commitAfterChange": "bcf1522935dfbdb0bc359777ceee5d7211666ccc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tprivate boolean checkAndTagAsMalformed(ASTNode node)", "signatureAfterChange": "  \tprivate boolean checkAndTagAsMalformed(ASTNode node)", "diff": ["+\t\t\t\tcase IProblem.ParsingErrorInsertTokenBefore :", "+\t\t\t\tcase IProblem.ParsingErrorInsertTokenAfter :", "+\t\t\t\tcase IProblem.ParsingErrorDeleteToken :", "+\t\t\t\tcase IProblem.ParsingErrorDeleteTokens :", "+\t\t\t\tcase IProblem.ParsingErrorMergeTokens :", "+\t\t\t\tcase IProblem.ParsingErrorInvalidToken :", "+\t\t\t\tcase IProblem.ParsingErrorMisplacedConstruct :", "+\t\t\t\tcase IProblem.ParsingErrorReplaceTokens :", "+\t\t\t\tcase IProblem.ParsingErrorNoSuggestionForTokens :", "+\t\t\t\tcase IProblem.ParsingErrorUnexpectedEOF :", "+\t\t\t\tcase IProblem.ParsingErrorInsertToComplete :", "+\t\t\t\tcase IProblem.ParsingErrorInsertToCompleteScope :", "+\t\t\t\tcase IProblem.ParsingErrorInsertToCompletePhrase :", "+\t\t\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ea9f7def232c97943518fe150a49e02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTSyntaxErrorPropagator.java", "commitBeforeChange": "cb73a34d3fbf60bb435ba470954bcb213328d377", "commitAfterChange": "521aa9edc795bda5aa1a4708f3c2bdc417b307c1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tprivate boolean checkAndTagAsMalformed(ASTNode node)", "signatureAfterChange": "  \tprivate boolean checkAndTagAsMalformed(ASTNode node)", "diff": ["-\t\t\t\t\tbreak;", "+\t\t\t\tcase IProblem.EndOfSource :", "+\t\t\t\tcase IProblem.InvalidHexa :", "+\t\t\t\tcase IProblem.InvalidOctal :", "+\t\t\t\tcase IProblem.InvalidCharacterConstant :", "+\t\t\t\tcase IProblem.InvalidEscape :", "+\t\t\t\tcase IProblem.InvalidInput :", "+\t\t\t\tcase IProblem.InvalidUnicodeEscape :", "+\t\t\t\tcase IProblem.InvalidFloat :", "+\t\t\t\tcase IProblem.NullSourceString :", "+\t\t\t\tcase IProblem.UnterminatedString :", "+\t\t\t\tcase IProblem.UnterminatedComment :", "+\t\t\t\tcase IProblem.InvalidDigit :"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37f8e55b5a077c351b514d3f58911e1b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTRecoveryPropagator.java", "commitBeforeChange": "ff1eb602a8aea39b1e15b206441aadf76bfaa984", "commitAfterChange": "dc5ee42cb3e5694c60c3a1f62c20766cb3cb2274", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprotected void endVisitNode(ASTNode node)", "signatureAfterChange": "  \tprotected void endVisitNode(ASTNode node)", "diff": ["-\t\t\tif(this.markIncludedProblems(start, end)) {", "-\t\t\t\tnode.setFlags(node.getFlags() | ASTNode.RECOVERED);", "+\t\t\tswitch (node.getNodeType()) {", "+\t\t\t\tcase ASTNode.ANNOTATION_TYPE_DECLARATION:", "+\t\t\t\tcase ASTNode.COMPILATION_UNIT:", "+\t\t\t\tcase ASTNode.ENUM_DECLARATION:", "+\t\t\t\tcase ASTNode.FIELD_DECLARATION:", "+\t\t\t\tcase ASTNode.IMPORT_DECLARATION:", "+\t\t\t\tcase ASTNode.INITIALIZER:", "+\t\t\t\tcase ASTNode.METHOD_DECLARATION:", "+\t\t\t\tcase ASTNode.PACKAGE_DECLARATION:", "+\t\t\t\tcase ASTNode.TYPE_DECLARATION:", "+\t\t\t\tcase ASTNode.MARKER_ANNOTATION:", "+\t\t\t\tcase ASTNode.NORMAL_ANNOTATION:", "+\t\t\t\tcase ASTNode.SINGLE_MEMBER_ANNOTATION:", "+\t\t\t\tcase ASTNode.BLOCK:", "+\t\t\t\t\tif(this.markIncludedProblems(start, end)) {", "+\t\t\t\t\t\tnode.setFlags(node.getFlags() | ASTNode.RECOVERED);", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b79a19dd0d3fe4a55f740a9331f5540", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "6781b5445d9813f939573ded9d37ee82c9dbbd15", "commitAfterChange": "6989e5bb4ed8f3be37ea69298930332629e9b475", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 54, "signatureBeforeChange": " public int computeSeverity(int problemId)", "signatureAfterChange": " public int computeSeverity(int problemId)", "diff": ["+\t\tcase IProblem.TypeParameterHidingType:", "+\t\t\treturn this.options.getSeverity(CompilerOptions.TypeParameterHiding);", "+\t\t\t", "+\t\tcase IProblem.UnsafeRawGenericMethodInvocation:", "+\t\tcase IProblem.UnsafeRawGenericConstructorInvocation:", "+\t\t\t", "+\t\tcase IProblem.AnnotationTypeUsedAsSuperInterface :", "+\t\t\treturn this.options.getSeverity(CompilerOptions.AnnotationSuperInterface);", "+\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b8249acbc78bd3046d6212a23a98f80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 39, "signatureBeforeChange": " public int computeSeverity(int problemId)", "signatureAfterChange": " public int computeSeverity(int problemId)", "diff": ["+\t\tcase IProblem.UnsafeRawConstructorInvocation:", "+\t\tcase IProblem.UnsafeRawMethodInvocation:", "+\t\tcase IProblem.UnsafeRawExpressionAssignment:", "+\t\tcase IProblem.UnsafeConstructorWithRawArguments:", "+\t\tcase IProblem.UnsafeMethodWithRawArguments:", "+\t\tcase IProblem.UnsafeRawFieldAssignment:", "+\t\tcase IProblem.UnsafeGenericCast:", "+\t\tcase IProblem.UnsafeRawReturnValue:", "+\t\t\treturn this.options.getSeverity(CompilerOptions.UnsafeTypeOperation);", "+\t\t", "+\t\tcase IProblem.FinalBoundForTypeVariable:", "+\t\t    return this.options.getSeverity(CompilerOptions.FinalParameterBound);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d12668930d8cc254f5454b580ea0901", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "6a44e0777af1a4632e0d20c0e9b92d35d2ad59f3", "commitAfterChange": "2ca339c139c0fe73a5bd2705f66592731098d347", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " public int computeSeverity(int problemId)", "signatureAfterChange": " public int computeSeverity(int problemId)", "diff": ["+\t\tcase IProblem.FinallyMustCompleteNormally:", "+\t\t\treturn this.options.getSeverity(CompilerOptions.FinallyBlockNotCompleting);", "+\t\t\t", "+\t\tcase IProblem.UnusedMethodDeclaredThrownException:", "+\t\tcase IProblem.UnusedConstructorDeclaredThrownException:", "+\t\t\treturn this.options.getSeverity(CompilerOptions.UnusedDeclaredThrownException);", "+", "+\t\tcase IProblem.UnqualifiedFieldAccess:", "+\t\t\treturn this.options.getSeverity(CompilerOptions.UnqualifiedFieldAccess);", "+\t\t\t", "+\t\t// all problems detected inside annotations are associated with a generic severity\t\t\t", "+//\t\tif (referenceContext.isProcessingAnnotation()) {", "+//\t\t\treturn this.options.getSeverity(CompilerOptions.AnnotationProblem);", "+//\t\t}", "+\t\t\t", "+\t\t// by default, all other problems are errors."]}], "num": 53192}