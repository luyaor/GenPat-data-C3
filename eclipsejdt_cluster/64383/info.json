{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7cace5bc36aebfd433d21c2cde4fa407", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "501048af9e958429d7a51641928ecf76", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 216, "methodNumberAfterChange": 189, "signatureBeforeChange": " \tpublic void testAutoBoxing01() throws CoreException", "signatureAfterChange": " \tpublic void testAutoBoxing01() throws CoreException", "diff": ["-\t\tICompilationUnit workingCopy = null;", "-\t\ttry {", "-\t\t\tworkingCopy = getWorkingCopy(\"/JavaSearch15/src/p/X.java\",", "-\t\t\t\t\"package p;\\n\" + ", "-\t\t\t\t\"public class Test {\\n\" + ", "-\t\t\t\t\"\tvoid foo(int x) {}\\n\" + ", "-\t\t\t\t\"\tvoid bar() {\\n\" + ", "-\t\t\t\t\"\t\tfoo(new Integer(0));\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"}\\n\"", "-\t\t\t\t);", "-\t\t\tworkingCopy.commitWorkingCopy(true, null);\t// need to commit to index file", "-\t\t\tIJavaSearchScope scope = SearchEngine.createJavaSearchScope(new ICompilationUnit[] { workingCopy });", "-\t\t\tIMethod method = workingCopy.getType(\"Test\").getMethod(\"foo\", new String[] { \"I\" });", "-\t\t\tsearch(method, REFERENCES, scope, this.resultCollector);", "-\t\t\tassertSearchResults(", "-\t\t\t\t\"src/p/X.java void p.Test.bar() [foo(new Integer(0))]\",", "-\t\t\t\tthis.resultCollector);", "-\t\t} catch (JavaModelException jme) {", "-\t\t\tjme.printStackTrace();", "-\t\t}", "-\t\tfinally {", "-\t\t\tif (workingCopy != null)", "-\t\t\t\tworkingCopy.discardWorkingCopy();", "-\t\t}", "+\t\tworkingCopies = new ICompilationUnit[1];", "+\t\tworkingCopies[0] = getWorkingCopy(\"/JavaSearch15/src/p/X.java\",", "+\t\t\t\"package p;\\n\" + ", "+\t\t\t\"public class Test {\\n\" + ", "+\t\t\t\"\tvoid foo(int x) {}\\n\" + ", "+\t\t\t\"\tvoid bar() {\\n\" + ", "+\t\t\t\"\t\tfoo(new Integer(0));\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\\n\"", "+\t\t\t);", "+\t\tIJavaSearchScope scope = SearchEngine.createJavaSearchScope(workingCopies);", "+\t\tIMethod method = workingCopies[0].getType(\"Test\").getMethod(\"foo\", new String[] { \"I\" });", "+\t\tsearch(method, REFERENCES, scope);", "+\t\tassertSearchResults(", "+\t\t\t\"src/p/X.java void p.Test.bar() [foo(new Integer(0))]\",", "+\t\t\tresultCollector);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a35586abfa95431d6c1bb06dabfc500a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void testBug70827() throws CoreException", "signatureAfterChange": " \tpublic void testBug70827() throws CoreException", "diff": ["-\t\tICompilationUnit workingCopy = null;", "-\t\ttry {", "-\t\t\tworkingCopy = getWorkingCopy(\"/JavaSearchBugs/src/b70827/A.java\",", "-\t\t\t\t\"package b70827;\\n\" + ", "-\t\t\t\t\"class A {\\n\" + ", "-\t\t\t\t\"\tprivate void privateMethod() {\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"class Second extends A {\\n\" + ", "-\t\t\t\t\"\tvoid call() {\\n\" + ", "-\t\t\t\t\"\t\tint i= privateMethod();\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\tint privateMethod() {\\n\" + ", "-\t\t\t\t\"\t\treturn 1;\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"}\\n\"", "-\t\t\t\t);", "-\t\t\tIType type = workingCopy.getType(\"A\");", "-\t\t\tIMethod method = type.getMethod(\"privateMethod\", new String[] {});", "-\t\t\tsearch(method, REFERENCES);", "-\t\t\tassertSearchResults(", "-\t\t\t\t\"\"", "+\t\tworkingCopies = new ICompilationUnit[1];", "+\t\tworkingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b70827/A.java\",", "+\t\t\t\"package b70827;\\n\" + ", "+\t\t\t\"class A {\\n\" + ", "+\t\t\t\"\tprivate void privateMethod() {\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"class Second extends A {\\n\" + ", "+\t\t\t\"\tvoid call() {\\n\" + ", "+\t\t\t\"\t\tint i= privateMethod();\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\tint privateMethod() {\\n\" + ", "+\t\t\t\"\t\treturn 1;\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\\n\"", "-\t\t}", "-\t\tfinally {", "-\t\t\tif (workingCopy != null)", "-\t\t\t\tworkingCopy.discardWorkingCopy();", "-\t\t}", "+\t\tIType type = workingCopies[0].getType(\"A\");", "+\t\tIMethod method = type.getMethod(\"privateMethod\", new String[] {});", "+\t\tsearch(method, REFERENCES);", "+\t\tassertSearchResults(", "+\t\t\t\"\"", "+\t\t);"]}], "num": 64383}