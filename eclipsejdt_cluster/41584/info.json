{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3ce15c097700d7a46f08a92ddf37bb4b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81a8b4a3818a516380dc62adaa82b60f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "ec36c5b556303647a122217dbc357a0c1ccafd42", "commitAfterChange": "a25cead90931bbc9548552bec95aa6f79a389aa3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void collectSubstitutes(Scope scope, TypeBinding actualType, Map substitutes, int constraint)", "signatureAfterChange": " \tpublic void collectSubstitutes(Scope scope, TypeBinding actualType, Map substitutes, int constraint)", "diff": ["-\t\tReferenceBinding formalEquivalent, actualEquivalent;", "+\t\tTypeBinding formalEquivalent, actualEquivalent;", "-\t\t        actualEquivalent = ((ReferenceBinding)actualType).findSuperTypeWithSameErasure(this.type);", "+\t\t        actualEquivalent = actualType.findSuperTypeWithSameErasure(this.type);", "-\t\t        actualEquivalent = (ReferenceBinding) actualType;", "+\t\t        actualEquivalent = actualType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e203bbc3da158955485c25a109283fab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "a8ae4c61c3fd8e7af5944aa40683b300c7cbf9e8", "commitAfterChange": "06d5ad0c6e4971f283c2f47bfc7f9df941ae34e8", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "  \tstatic void sortTypes(TypeBinding[] types)", "signatureAfterChange": "  \tstatic void sortTypes(TypeBinding[] types)", "diff": ["-\t\tArrays.sort(types, new Comparator() {", "-\t\t\tpublic int compare(Object o1, Object o2) {", "-\t\t\t\tint i1 = ((TypeBinding)o1).id, i2 = ((TypeBinding)o2).id; ", "+\t\tArrays.sort(types, new Comparator<TypeBinding>() {", "+\t\t\tpublic int compare(TypeBinding o1, TypeBinding o2) {", "+\t\t\t\tint i1 = o1.id, i2 = o2.id; "]}], "num": 41584}