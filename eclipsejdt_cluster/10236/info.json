{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fbb881a8817255086b09e4b94bf29d28", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2981e205e0670baefd30458f03b50617", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9713cc0fc86fbe0881ff90c5290328149c35cbdc", "commitAfterChange": "236485921f70a82e4283431ca8763bf21e25e459", "methodNumberBeforeChange": 524, "methodNumberAfterChange": 524, "signatureBeforeChange": " \tpublic void test0506()", "signatureAfterChange": " \tpublic void test0506()", "diff": ["-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. WARNING in X.java (at line 6)\\n\" +", "-\t\t\t\"\tpublic void test(List list,final Comparator comparator, X x) {\\n\" +", "-\t\t\t\"\t                 ^^^^\\n\" +", "-\t\t\t\"List is a raw type. References to generic type List<E> should be parameterized\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"2. WARNING in X.java (at line 6)\\n\" +", "-\t\t\t\"\tpublic void test(List list,final Comparator comparator, X x) {\\n\" +", "-\t\t\t\"\t                                 ^^^^^^^^^^\\n\" +", "-\t\t\t\"Comparator is a raw type. References to generic type Comparator<T> should be parameterized\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"3. WARNING in X.java (at line 6)\\n\" +", "-\t\t\t\"\tpublic void test(List list,final Comparator comparator, X x) {\\n\" +", "-\t\t\t\"\t                                                        ^\\n\" +", "-\t\t\t\"X is a raw type. References to generic type X<E> should be parameterized\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"4. WARNING in X.java (at line 7)\\n\" +", "-\t\t\t\"\tfoo(list, comparator);\\n\" +", "-\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Type safety: Unchecked invocation foo(List, Comparator) of the generic method foo(List<T>, Comparator<? super T>) of type X<E>\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"5. WARNING in X.java (at line 7)\\n\" +", "-\t\t\t\"\tfoo(list, comparator);\\n\" +", "-\t\t\t\"\t    ^^^^\\n\" +", "-\t\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<T>\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"6. WARNING in X.java (at line 7)\\n\" +", "-\t\t\t\"\tfoo(list, comparator);\\n\" +", "-\t\t\t\"\t          ^^^^^^^^^^\\n\" +", "-\t\t\t\"Type safety: The expression of type Comparator needs unchecked conversion to conform to Comparator<? super T>\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"7. WARNING in X.java (at line 8)\\n\" +", "-\t\t\t\"\tbar(list, comparator);\\n\" +", "-\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Type safety: Unchecked invocation bar(List, Comparator) of the generic method bar(List<T>, Comparator<? super T>) of type X<E>\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"8. WARNING in X.java (at line 8)\\n\" +", "-\t\t\t\"\tbar(list, comparator);\\n\" +", "-\t\t\t\"\t    ^^^^\\n\" +", "-\t\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<T>\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"9. WARNING in X.java (at line 8)\\n\" +", "-\t\t\t\"\tbar(list, comparator);\\n\" +", "-\t\t\t\"\t          ^^^^^^^^^^\\n\" +", "-\t\t\t\"Type safety: The expression of type Comparator needs unchecked conversion to conform to Comparator<? super T>\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"10. WARNING in X.java (at line 10)\\n\" +", "-\t\t\t\"\tx.foo(list, comparator);\\n\" +", "-\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Type safety: The method foo(List, Comparator) belongs to the raw type X. References to generic type X<E> should be parameterized\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"11. WARNING in X.java (at line 11)\\n\" +", "-\t\t\t\"\tx.bar(list, comparator);\\n\" +", "-\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"The static method bar(List, Comparator) from the type X should be accessed in a static way\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"12. WARNING in X.java (at line 11)\\n\" +", "-\t\t\t\"\tx.bar(list, comparator);\\n\" +", "-\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Type safety: Unchecked invocation bar(List, Comparator) of the generic method bar(List<T>, Comparator<? super T>) of type X\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"13. WARNING in X.java (at line 11)\\n\" +", "-\t\t\t\"\tx.bar(list, comparator);\\n\" +", "-\t\t\t\"\t      ^^^^\\n\" +", "-\t\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<T>\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"14. WARNING in X.java (at line 11)\\n\" +", "-\t\t\t\"\tx.bar(list, comparator);\\n\" +", "-\t\t\t\"\t            ^^^^^^^^^^\\n\" +", "-\t\t\t\"Type safety: The expression of type Comparator needs unchecked conversion to conform to Comparator<? super T>\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"15. ERROR in X.java (at line 18)\\n\" +", "-\t\t\t\"\tZork z;\\n\" +", "-\t\t\t\"\t^^^^\\n\" +", "-\t\t\t\"Zork cannot be resolved to a type\\n\" +", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tpublic void test(List list,final Comparator comparator, X x) {\\n\" + ", "+\t\t\t\"\t                 ^^^^\\n\" + ", "+\t\t\t\"List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tpublic void test(List list,final Comparator comparator, X x) {\\n\" + ", "+\t\t\t\"\t                                 ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Comparator is a raw type. References to generic type Comparator<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tpublic void test(List list,final Comparator comparator, X x) {\\n\" + ", "+\t\t\t\"\t                                                        ^\\n\" + ", "+\t\t\t\"X is a raw type. References to generic type X<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tfoo(list, comparator);\\n\" + ", "+\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Unchecked invocation foo(List, Comparator) of the generic method foo(List<T>, Comparator<? super T>) of type X<E>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tfoo(list, comparator);\\n\" + ", "+\t\t\t\"\t    ^^^^\\n\" + ", "+\t\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<Object>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tfoo(list, comparator);\\n\" + ", "+\t\t\t\"\t          ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The expression of type Comparator needs unchecked conversion to conform to Comparator<? super Object>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"7. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tbar(list, comparator);\\n\" + ", "+\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Unchecked invocation bar(List, Comparator) of the generic method bar(List<T>, Comparator<? super T>) of type X<E>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"8. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tbar(list, comparator);\\n\" + ", "+\t\t\t\"\t    ^^^^\\n\" + ", "+\t\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<Object>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"9. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tbar(list, comparator);\\n\" + ", "+\t\t\t\"\t          ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The expression of type Comparator needs unchecked conversion to conform to Comparator<? super Object>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"10. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tx.foo(list, comparator);\\n\" + ", "+\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The method foo(List, Comparator) belongs to the raw type X. References to generic type X<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"11. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"\tx.bar(list, comparator);\\n\" + ", "+\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"The static method bar(List<Object>, Comparator<? super Object>) from the type X should be accessed in a static way\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"12. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"\tx.bar(list, comparator);\\n\" + ", "+\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Unchecked invocation bar(List, Comparator) of the generic method bar(List<T>, Comparator<? super T>) of type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"13. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"\tx.bar(list, comparator);\\n\" + ", "+\t\t\t\"\t      ^^^^\\n\" + ", "+\t\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<Object>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"14. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"\tx.bar(list, comparator);\\n\" + ", "+\t\t\t\"\t            ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The expression of type Comparator needs unchecked conversion to conform to Comparator<? super Object>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"15. ERROR in X.java (at line 18)\\n\" + ", "+\t\t\t\"\tZork z;\\n\" + ", "+\t\t\t\"\t^^^^\\n\" + ", "+\t\t\t\"Zork cannot be resolved to a type\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d948f9a8af531309a2e80bee6b98fd9d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "3307a3b21f8472cc998512e9e4cd5afdd4f17b52", "commitAfterChange": "b155f47580a90f694a899aae6d06a1ff29f450b8", "methodNumberBeforeChange": 1345, "methodNumberAfterChange": 1345, "signatureBeforeChange": " public void test1314()", "signatureAfterChange": " public void test1314()", "diff": ["-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. WARNING in X.java (at line 11)\\n\" +", "-\t\t\t\"\tif (false) return new Y(b);//1\\n\" +", "-\t\t\t\"\t                  ^^^^^^^^\\n\" +", "-\t\t\t\"Type safety: The constructor Y(Object) belongs to the raw type Y. References to generic type Y<K> should be parameterized\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"2. WARNING in X.java (at line 11)\\n\" +", "-\t\t\t\"\tif (false) return new Y(b);//1\\n\" +", "-\t\t\t\"\t                      ^\\n\" +", "-\t\t\t\"Y is a raw type. References to generic type Y<K> should be parameterized\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"3. WARNING in X.java (at line 12)\\n\" +", "-\t\t\t\"\tif (false) return new Y((K) b);//2\\n\" +", "-\t\t\t\"\t                  ^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Type safety: The constructor Y(Object) belongs to the raw type Y. References to generic type Y<K> should be parameterized\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"4. WARNING in X.java (at line 12)\\n\" +", "-\t\t\t\"\tif (false) return new Y((K) b);//2\\n\" +", "-\t\t\t\"\t                      ^\\n\" +", "-\t\t\t\"Y is a raw type. References to generic type Y<K> should be parameterized\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"5. WARNING in X.java (at line 12)\\n\" +", "-\t\t\t\"\tif (false) return new Y((K) b);//2\\n\" +", "-\t\t\t\"\t                        ^^^^^\\n\" +", "-\t\t\t\"Type safety: Unchecked cast from B to K\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"6. WARNING in X.java (at line 12)\\n\" +", "-\t\t\t\"\tif (false) return new Y((K) b);//2\\n\" +", "-\t\t\t\"\t                        ^^^^^\\n\" +", "-\t\t\t\"Unnecessary cast from B to K\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"7. WARNING in X.java (at line 13)\\n\" +", "-\t\t\t\"\treturn new Y((K) (Object) b);//3\\n\" +", "-\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Type safety: The constructor Y(Object) belongs to the raw type Y. References to generic type Y<K> should be parameterized\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"8. WARNING in X.java (at line 13)\\n\" +", "-\t\t\t\"\treturn new Y((K) (Object) b);//3\\n\" +", "-\t\t\t\"\t           ^\\n\" +", "-\t\t\t\"Y is a raw type. References to generic type Y<K> should be parameterized\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"9. WARNING in X.java (at line 13)\\n\" +", "-\t\t\t\"\treturn new Y((K) (Object) b);//3\\n\" +", "-\t\t\t\"\t             ^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Type safety: Unchecked cast from Object to K\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"10. WARNING in X.java (at line 13)\\n\" +", "-\t\t\t\"\treturn new Y((K) (Object) b);//3\\n\" +", "-\t\t\t\"\t             ^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Unnecessary cast from Object to K\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"11. WARNING in X.java (at line 13)\\n\" +", "-\t\t\t\"\treturn new Y((K) (Object) b);//3\\n\" +", "-\t\t\t\"\t                 ^^^^^^^^^^\\n\" +", "-\t\t\t\"Unnecessary cast from B to Object\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"12. ERROR in X.java (at line 16)\\n\" +", "-\t\t\t\"\tif (false) return new Y<K>(b);//4\\n\" +", "-\t\t\t\"\t                  ^^^^^^^^^^^\\n\" +", "-\t\t\t\"The constructor Y<K>(B) is undefined\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"13. WARNING in X.java (at line 17)\\n\" +", "-\t\t\t\"\tif (false) return new Y<K>((K) b);//5\\n\" +", "-\t\t\t\"\t                           ^^^^^\\n\" +", "-\t\t\t\"Type safety: Unchecked cast from B to K\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"14. WARNING in X.java (at line 18)\\n\" +", "-\t\t\t\"\treturn new Y<K>((K) (Object) b);//6\\n\" +", "-\t\t\t\"\t                ^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Type safety: Unchecked cast from Object to K\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"15. WARNING in X.java (at line 18)\\n\" +", "-\t\t\t\"\treturn new Y<K>((K) (Object) b);//6\\n\" +", "-\t\t\t\"\t                    ^^^^^^^^^^\\n\" +", "-\t\t\t\"Unnecessary cast from B to Object\\n\" +", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"\tif (false) return new Y(b);//1\\n\" + ", "+\t\t\t\"\t           ^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Dead code\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"\tif (false) return new Y(b);//1\\n\" + ", "+\t\t\t\"\t                  ^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The constructor Y(Object) belongs to the raw type Y. References to generic type Y<K> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"\tif (false) return new Y(b);//1\\n\" + ", "+\t\t\t\"\t                      ^\\n\" + ", "+\t\t\t\"Y is a raw type. References to generic type Y<K> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 12)\\n\" + ", "+\t\t\t\"\tif (false) return new Y((K) b);//2\\n\" + ", "+\t\t\t\"\t           ^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Dead code\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 12)\\n\" + ", "+\t\t\t\"\tif (false) return new Y((K) b);//2\\n\" + ", "+\t\t\t\"\t                  ^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The constructor Y(Object) belongs to the raw type Y. References to generic type Y<K> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. WARNING in X.java (at line 12)\\n\" + ", "+\t\t\t\"\tif (false) return new Y((K) b);//2\\n\" + ", "+\t\t\t\"\t                      ^\\n\" + ", "+\t\t\t\"Y is a raw type. References to generic type Y<K> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"7. WARNING in X.java (at line 12)\\n\" + ", "+\t\t\t\"\tif (false) return new Y((K) b);//2\\n\" + ", "+\t\t\t\"\t                        ^^^^^\\n\" + ", "+\t\t\t\"Type safety: Unchecked cast from B to K\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"8. WARNING in X.java (at line 12)\\n\" + ", "+\t\t\t\"\tif (false) return new Y((K) b);//2\\n\" + ", "+\t\t\t\"\t                        ^^^^^\\n\" + ", "+\t\t\t\"Unnecessary cast from B to K\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"9. WARNING in X.java (at line 13)\\n\" + ", "+\t\t\t\"\treturn new Y((K) (Object) b);//3\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The constructor Y(Object) belongs to the raw type Y. References to generic type Y<K> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"10. WARNING in X.java (at line 13)\\n\" + ", "+\t\t\t\"\treturn new Y((K) (Object) b);//3\\n\" + ", "+\t\t\t\"\t           ^\\n\" + ", "+\t\t\t\"Y is a raw type. References to generic type Y<K> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"11. WARNING in X.java (at line 13)\\n\" + ", "+\t\t\t\"\treturn new Y((K) (Object) b);//3\\n\" + ", "+\t\t\t\"\t             ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Unchecked cast from Object to K\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"12. WARNING in X.java (at line 13)\\n\" + ", "+\t\t\t\"\treturn new Y((K) (Object) b);//3\\n\" + ", "+\t\t\t\"\t             ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Unnecessary cast from Object to K\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"13. WARNING in X.java (at line 13)\\n\" + ", "+\t\t\t\"\treturn new Y((K) (Object) b);//3\\n\" + ", "+\t\t\t\"\t                 ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Unnecessary cast from B to Object\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"14. ERROR in X.java (at line 16)\\n\" + ", "+\t\t\t\"\tif (false) return new Y<K>(b);//4\\n\" + ", "+\t\t\t\"\t                  ^^^^^^^^^^^\\n\" + ", "+\t\t\t\"The constructor Y<K>(B) is undefined\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"15. WARNING in X.java (at line 17)\\n\" + ", "+\t\t\t\"\tif (false) return new Y<K>((K) b);//5\\n\" + ", "+\t\t\t\"\t                           ^^^^^\\n\" + ", "+\t\t\t\"Type safety: Unchecked cast from B to K\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"16. WARNING in X.java (at line 18)\\n\" + ", "+\t\t\t\"\treturn new Y<K>((K) (Object) b);//6\\n\" + ", "+\t\t\t\"\t                ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Unchecked cast from Object to K\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"17. WARNING in X.java (at line 18)\\n\" + ", "+\t\t\t\"\treturn new Y<K>((K) (Object) b);//6\\n\" + ", "+\t\t\t\"\t                    ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Unnecessary cast from B to Object\\n\" + "]}], "num": 10236}