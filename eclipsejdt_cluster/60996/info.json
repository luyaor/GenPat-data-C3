{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f594e20cfeb562bb4624711f76e723a6", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44b1a9d676873d356f4842ecf23b4e58", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodBinding.java", "commitBeforeChange": "ec8e689e69ce65d5a3f127f9c7126c4bebdd7b60", "commitAfterChange": "c922c60b9bc5fcda7fb9f2a477eba6f8f95a6cf9", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic String getKey()", "signatureAfterChange": " \tpublic String getKey()", "diff": ["-\t\t\tbuffer.append(this.getDeclaringClass().getKey());", "+\t\t\tbuffer.append(getDeclaringClass().getKey());", "-\t\t\tITypeBinding _returnType = getReturnType();", "-\t\t\tif (_returnType != null) {", "-\t\t\t\tif (_returnType.isTypeVariable()) {", "-\t\t\t\t\tbuffer.append(_returnType.getQualifiedName());", "-\t\t\t\t} else if (_returnType.isArray() && _returnType.getElementType().isTypeVariable()) {", "-\t\t\t\t\tint dimensions = _returnType.getDimensions();", "-\t\t\t\t\tbuffer.append(_returnType.getElementType().getQualifiedName());", "-\t\t\t\t\tfor (int i = 0; i < dimensions; i++) {", "-\t\t\t\t\t\tbuffer.append('[').append(']');", "-\t\t\t\t\t}", "-\t\t\t\t} else {", "-\t\t\t\t\tbuffer.append(_returnType.getKey());", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\t\tbuffer.append(this.getName());", "+\t\t\t\tbuffer.append(getName());", "+\t\t\t\t\t\tbuffer.append(',');", "-\t\t\tITypeBinding[] thrownExceptions = getExceptionTypes();", "-\t\t\tfor (int i = 0, max = thrownExceptions.length; i < max; i++) {", "-\t\t\t\tfinal ITypeBinding thrownException = thrownExceptions[i];", "-\t\t\t\tif (thrownException != null) {", "-\t\t\t\t\tif (thrownException.isTypeVariable()) {", "-\t\t\t\t\t\tbuffer.append(thrownException.getQualifiedName());\t\t\t\t\t", "-\t\t\t\t\t} else if (thrownException.isArray() && thrownException.getElementType().isTypeVariable()) {", "-\t\t\t\t\t\tint dimensions = thrownException.getDimensions();", "-\t\t\t\t\t\tbuffer.append(thrownException.getElementType().getQualifiedName());", "-\t\t\t\t\t\tfor (int j = 0; j < dimensions; j++) {", "-\t\t\t\t\t\t\tbuffer.append('[').append(']');", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tbuffer.append(thrownException.getKey());", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba0089ffef7c6dbd75d5f645bc16f1b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodBinding.java", "commitBeforeChange": "c1214b6b7704c3bec1f1750c6983e09a52efaa01", "commitAfterChange": "a5f15775fe7fcb24ae5a0930116a996c10a2359a", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic String getKey()", "signatureAfterChange": " \tpublic String getKey()", "diff": ["-\t\t\t\t\tif (parameter.isTypeVariable()) {", "-\t\t\t\t\t\tbuffer.append(parameter.getQualifiedName());", "-\t\t\t\t\t} else if (parameter.isArray() && parameter.getElementType().isTypeVariable()) {", "-\t\t\t\t\t\tint dimensions = parameter.getDimensions();", "-\t\t\t\t\t\tbuffer.append(parameter.getElementType().getQualifiedName());", "-\t\t\t\t\t\tfor (int j = 0; j < dimensions; j++) {", "-\t\t\t\t\t\t\tbuffer.append('[').append(']');", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tbuffer.append(parameter.getKey());", "-\t\t\t\t\t\tbuffer.append(',');", "-\t\t\t\t\t}", "+\t\t\t\t\taddParameterKey(buffer, parameter);", "+\t\t\t\t\tbuffer.append(',');", "-\t\t\tthis.key = String.valueOf(buffer);", "+\t\t\tITypeBinding[] types = getTypeParameters();", "+\t\t\tif (types.length > 0) {", "+\t\t\t\tbuffer.append('<');", "+\t\t\t\tfor (int i = 0, max = types.length; i < max; i++) {", "+\t\t\t\t\tITypeBinding typeParameter = types[i];", "+\t\t\t\t\taddParameterKey(buffer, typeParameter);", "+\t\t\t\t\tITypeBinding[] bounds = ((TypeBinding) typeParameter).getTypeBounds();", "+\t\t\t\t\tfor (int j = 0, length = bounds.length; j < length; j++) {", "+\t\t\t\t\t\tITypeBinding bound = bounds[j];", "+\t\t\t\t\t\tbuffer.append(':');", "+\t\t\t\t\t\taddParameterKey(buffer, bound);", "+\t\t\t\t\t}", "+\t\t\t\t\tbuffer.append(',');", "+\t\t\t\t}", "+\t\t\t\tbuffer.append('>');", "+\t\t\t}", "+\t\t\tthis.key = buffer.toString();"]}], "num": 60996}