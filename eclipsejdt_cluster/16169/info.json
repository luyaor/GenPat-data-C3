{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "532eb6d3d6c83b3d4cdbbf74e9d70d2c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d51649360a79579202711f9009da1da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/ObjectSet.java", "commitBeforeChange": "4cc090de1135f96a7882b8f0a9810acd1decd77b", "commitAfterChange": "15dcc176c1cb779117be5041b104b995e2e8f412", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r \r \tpublic boolean remove(Object element)", "signatureAfterChange": "\r \r \tpublic boolean remove(Object element)", "diff": ["-\t\t\t\t\r", "-\t\t\t\t// local rehash - find the last matching element with same hashcode\r", "-\t\t\t\t// and move it in place of the current one if any\r", "-\t\t\t\tint next = index, lastMatching = -1;\r", "-\t\t\t\twhile (this.elementTable[next = ((next + 1) % length)] != null && (next != index)) {\r", "-\t\t\t\t\tif (this.elementTable[next].hashCode() == hash){\r", "-\t\t\t\t\t\tlastMatching = next;\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r", "-\t\t\t\tif (lastMatching >= 0){\r", "-\t\t\t\t\tthis.elementTable[index] = this.elementTable[lastMatching];\r", "-\t\t\t\t\tthis.elementTable[lastMatching] = null;\r", "-\t\t\t\t}\r", "+\t\t\t\tthis.rehash();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cda4059c14e9459cb14511f6f20c1d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/WeakHashSet.java", "commitBeforeChange": "b5b6eb0667e59aead99b6e7d50769cb9a26be167", "commitAfterChange": "de22293e139c05757446740dae9a0ac47a2b6c43", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tprivate void cleanupGarbageCollectedValues()", "signatureAfterChange": " \t \tprivate void cleanupGarbageCollectedValues()", "diff": ["-\t\t\t\t\tint sameHash = index + 1;", "-\t\t\t\t\twhile (sameHash < valuesLength && (currentValue = this.values[sameHash]) != null && currentValue.hashCode == hashCode)", "-\t\t\t\t\t\tsameHash = (sameHash + 1) % valuesLength;", "-\t\t\t\t\tthis.values[index] = this.values[sameHash-1];", "-\t\t\t\t\tthis.values[sameHash-1] = null;", "+\t\t\t\t\tint sameHash = index;", "+\t\t\t\t\tint current;", "+\t\t\t\t\twhile ((currentValue = this.values[current = (sameHash + 1) % valuesLength]) != null && currentValue.hashCode == hashCode)", "+\t\t\t\t\t\tsameHash = current;", "+\t\t\t\t\tthis.values[index] = this.values[sameHash];", "+\t\t\t\t\tthis.values[sameHash] = null;"]}], "num": 16169}