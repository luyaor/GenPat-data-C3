{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9bb25365104b354ac73df88ff4c63581", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94ed13663374dff2999a4684348b38f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": " \tpublic void setOptions(Map newOptions)", "signatureAfterChange": " \tpublic void setOptions(Map newOptions)", "diff": ["-\t\t\t\tif (!JavaModelManager.OptionNames.contains(key)) continue; // unrecognized option", "+\t\t\t\t// TODO (frederic) remove when bug 45110 will be fixed", "+\t\t\t\tString newKey = key;", "+\t\t\t\tif (key.equals(JavaCore.OLD_COMPILER_PB_MISSING_ANNOTATION)) {", "+\t\t\t\t\tnewKey = JavaCore.COMPILER_PB_MISSING_JAVADOC;", "+\t\t\t\t}", "+\t\t\t\t// end bug 45110", "+\t\t\t\tif (!JavaModelManager.OptionNames.contains(newKey)) continue; // unrecognized option", "-\t\t\t\tpreferences.setDefault(key, CUSTOM_DEFAULT_OPTION_VALUE); // empty string isn't the default (26251)", "-\t\t\t\tpreferences.setValue(key, value);", "+\t\t\t\tpreferences.setDefault(newKey, CUSTOM_DEFAULT_OPTION_VALUE); // empty string isn't the default (26251)", "+\t\t\t\tpreferences.setValue(newKey, value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d809e39c751e3dd310e6c41581699b52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "6a9c839afeea06e7dd97b023fa9c24def00f0f08", "commitAfterChange": "cf7db1b07f7da2723bd250cc64a7e16bec1c504d", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " ImportBinding[] getDefaultImports()", "signatureAfterChange": " ImportBinding[] getDefaultImports()", "diff": ["-\t// abort if java.lang cannot be found...", "-\tif (importBinding == null || !importBinding.isValidBinding())", "-\t\tproblemReporter().isClassPathCorrect(JAVA_LANG_OBJECT, referenceCompilationUnit());", "+\tif (importBinding == null || !importBinding.isValidBinding()) {", "+\t\t// create a proxy for the missing BinaryType", "+\t\tBinaryTypeBinding missingObject = environment.cacheMissingBinaryType(JAVA_LANG_OBJECT, this.referenceContext);", "+\t\timportBinding = missingObject.fPackage;", "+\t}"]}], "num": 24206}