{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "53dc8b14e3d5956d2e71c094ba70dc5a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "407a228aa1b92e59c82190c74480f340", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "8d0a5299117e5fc84e729116ac52feef1385b968", "commitAfterChange": "527793c3501c0044ba7f65ec00ff957c7a149690", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic boolean equals(Object object)", "signatureAfterChange": " \tpublic boolean equals(Object object)", "diff": ["+\t\t\tif (this.exclusionPatterns == null){", "+\t\t\t\tif (otherEntry.getExclusionPatterns() != null)", "+\t\t\t\t\treturn false;", "+\t\t\t} else {", "+\t\t\t\tint excludeLength = this.exclusionPatterns.length;", "+\t\t\t\tString[] otherExcludes = otherEntry.getExclusionPatterns();", "+\t\t\t\tif (otherExcludes == null || otherExcludes.length != excludeLength)", "+\t\t\t\t\treturn false;", "+\t\t\t\tfor (int i = 0; i < excludeLength; i++){", "+\t\t\t\t\tif (!this.exclusionPatterns[i].equals(otherExcludes[i]))", "+\t\t\t\t\t\treturn false;", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fefdbd4bc51fd3746ce99362dcb22453", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "e3216b16627ead1fc92c7b9c7ba781e891ae2552", "commitAfterChange": "43497388c1b074873dbf4e928e2bdb93bbcc87f9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean equals(Object object)", "signatureAfterChange": " \tpublic boolean equals(Object object)", "diff": ["-\t\t\tif (this.exclusionPatterns == null){", "-\t\t\t\tif (otherEntry.getExclusionPatterns() != null)", "-\t\t\t\t\treturn false;", "-\t\t\t} else {", "+\t\t\tIPath[] otherExcludes = otherEntry.getExclusionPatterns();", "+\t\t\tif (this.exclusionPatterns != otherExcludes){", "-\t\t\t\tIPath[] otherExcludes = otherEntry.getExclusionPatterns();", "-\t\t\t\tif (otherExcludes == null || otherExcludes.length != excludeLength)", "+\t\t\t\tif (otherExcludes.length != excludeLength) "]}], "num": 57975}