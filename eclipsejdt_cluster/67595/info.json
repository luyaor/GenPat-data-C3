{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff5dd807f6d3c51bf7b812b2c82b6a0c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d9b6ee643e061225dcc281d6701e9e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/Index.java", "commitBeforeChange": "5291cd66203d5d42725b1c4b5cba50a5232bc244", "commitAfterChange": "2b3f2bcfda87f98df3bbd3388c18d031ad12e4ff", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public static boolean isMatch(char[] pattern, char[] word, int matchRule)", "signatureAfterChange": "  public static boolean isMatch(char[] pattern, char[] word, int matchRule)", "diff": ["-\t\tif (pattern[0] == word[0] && CharOperation.camelCaseMatch(pattern, word, (matchRule & SearchPattern.R_PREFIX_MATCH) != 0)) {", "+\t\t// prefix is always needed as index key got characters after type simple name", "+\t\t// see bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=201064", "+\t\tif (pattern[0] == word[0] && CharOperation.camelCaseMatch(pattern, word, true/*prefix match*/)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef3195369938ba41cfdbb7146486124f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "01ebf46478e499b6682d2e0eb34536c095d3cff8", "commitAfterChange": "c065b0d569ec3f9c64ce0f4814c700b82af5514f", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " protected void locateMatches(JavaProject javaProject, PossibleMatch[] possibleMatches, int start, int length) throws CoreException", "signatureAfterChange": " protected void locateMatches(JavaProject javaProject, PossibleMatch[] possibleMatches, int start, int length) throws CoreException", "diff": ["-\t\t\t\tif (possibleMatch.similarMatch != null && !possibleMatch.hasContents()) {", "-\t\t\t\t\tpossibleMatches[i] = possibleMatch.similarMatch;", "+\t\t\t\tif (possibleMatch.hasSimilarMatch()) {", "+\t\t\t\t\t// If there is similar match, then also process it", "+\t\t\t\t\t// see bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=211872", "+\t\t\t\t\tpossibleMatches[i] = possibleMatch.getSimilarMatch();"]}], "num": 67595}