{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8d51182d7aec3610697f7f5b48b33f5c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "344bcb5b5095f5fa2ffb324aaa70d205", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/MultiOperation.java", "commitBeforeChange": "8bea847412c36874664a80a329bfe627deff5fa9", "commitAfterChange": "c4145c80a504c8681f4571ff2bd214b778e87107", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprotected void processElements() throws JavaModelException", "signatureAfterChange": " \tprotected void processElements() throws JavaModelException", "diff": ["-\t\tbeginTask(getMainTaskName(), this.elementsToProcess.length);", "-\t\tIJavaModelStatus[] errors = new IJavaModelStatus[3];", "-\t\tint errorsCounter = 0;", "-\t\tfor (int i = 0; i < this.elementsToProcess.length; i++) {", "-\t\t\ttry {", "-\t\t\t\tverify(this.elementsToProcess[i]);", "-\t\t\t\tprocessElement(this.elementsToProcess[i]);", "-\t\t\t} catch (JavaModelException jme) {", "-\t\t\t\tif (errorsCounter == errors.length) {", "-\t\t\t\t\t// resize", "-\t\t\t\t\tSystem.arraycopy(errors, 0, (errors = new IJavaModelStatus[errorsCounter*2]), 0, errorsCounter);", "+\t\ttry {", "+\t\t\tbeginTask(getMainTaskName(), this.elementsToProcess.length);", "+\t\t\tIJavaModelStatus[] errors = new IJavaModelStatus[3];", "+\t\t\tint errorsCounter = 0;", "+\t\t\tfor (int i = 0; i < this.elementsToProcess.length; i++) {", "+\t\t\t\ttry {", "+\t\t\t\t\tverify(this.elementsToProcess[i]);", "+\t\t\t\t\tprocessElement(this.elementsToProcess[i]);", "+\t\t\t\t} catch (JavaModelException jme) {", "+\t\t\t\t\tif (errorsCounter == errors.length) {", "+\t\t\t\t\t\t// resize", "+\t\t\t\t\t\tSystem.arraycopy(errors, 0, (errors = new IJavaModelStatus[errorsCounter*2]), 0, errorsCounter);", "+\t\t\t\t\t}", "+\t\t\t\t\terrors[errorsCounter++] = jme.getJavaModelStatus();", "+\t\t\t\t} finally {", "+\t\t\t\t\tworked(1);", "-\t\t\t\terrors[errorsCounter++] = jme.getJavaModelStatus();", "-\t\t\t} finally {", "-\t\t\t\tworked(1);", "-\t\t}", "-\t\tdone();", "-\t\tif (errorsCounter == 1) {", "-\t\t\tthrow new JavaModelException(errors[0]);", "-\t\t} else if (errorsCounter > 1) {", "-\t\t\tif (errorsCounter != errors.length) {", "-\t\t\t\t// resize", "-\t\t\t\tSystem.arraycopy(errors, 0, (errors = new IJavaModelStatus[errorsCounter]), 0, errorsCounter);", "+\t\t\tif (errorsCounter == 1) {", "+\t\t\t\tthrow new JavaModelException(errors[0]);", "+\t\t\t} else if (errorsCounter > 1) {", "+\t\t\t\tif (errorsCounter != errors.length) {", "+\t\t\t\t\t// resize", "+\t\t\t\t\tSystem.arraycopy(errors, 0, (errors = new IJavaModelStatus[errorsCounter]), 0, errorsCounter);", "+\t\t\t\t}", "+\t\t\t\tthrow new JavaModelException(JavaModelStatus.newMultiStatus(errors));", "-\t\t\tthrow new JavaModelException(JavaModelStatus.newMultiStatus(errors));", "+\t\t} finally {", "+\t\t\tdone();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed0ab1e71564f13d9eb713fae400d97f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "8b43d224642ee7d1b616bb187976b917b924c6e2", "commitAfterChange": "8728875c2badeba6a33c75154be535794f7d1a9c", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \t \tprivate char[][] findEnclosingTypeNames(Scope scope)", "signatureAfterChange": " \t \tprivate char[][] findEnclosingTypeNames(Scope scope)", "diff": ["-\t\t\t\t\tfor (int i = 0; i < classTypeParameters.length; i++) {", "-\t\t\t\t\t\tTypeParameter typeParameter = classTypeParameters[i];", "-\t\t\t\t\t\tif(excludedNameCount == excludedNames.length) {", "-\t\t\t\t\t\t\tSystem.arraycopy(excludedNames, 0, excludedNames = new char[excludedNameCount * 2][], 0, excludedNameCount);", "+\t\t\t\t\tif(classTypeParameters != null) {", "+\t\t\t\t\t\tfor (int i = 0; i < classTypeParameters.length; i++) {", "+\t\t\t\t\t\t\tTypeParameter typeParameter = classTypeParameters[i];", "+\t\t\t\t\t\t\tif(excludedNameCount == excludedNames.length) {", "+\t\t\t\t\t\t\t\tSystem.arraycopy(excludedNames, 0, excludedNames = new char[excludedNameCount * 2][], 0, excludedNameCount);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\texcludedNames[excludedNameCount++] = typeParameter.name;", "-\t\t\t\t\t\texcludedNames[excludedNameCount++] = typeParameter.name;", "-\t\t\t\t\t\tfor (int i = 0; i < methodTypeParameters.length; i++) {", "-\t\t\t\t\t\t\tTypeParameter typeParameter = methodTypeParameters[i];", "-\t\t\t\t\t\t\tif(excludedNameCount == excludedNames.length) {", "-\t\t\t\t\t\t\t\tSystem.arraycopy(excludedNames, 0, excludedNames = new char[excludedNameCount * 2][], 0, excludedNameCount);", "+\t\t\t\t\t\tif(methodTypeParameters != null) {", "+\t\t\t\t\t\t\tfor (int i = 0; i < methodTypeParameters.length; i++) {", "+\t\t\t\t\t\t\t\tTypeParameter typeParameter = methodTypeParameters[i];", "+\t\t\t\t\t\t\t\tif(excludedNameCount == excludedNames.length) {", "+\t\t\t\t\t\t\t\t\tSystem.arraycopy(excludedNames, 0, excludedNames = new char[excludedNameCount * 2][], 0, excludedNameCount);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\texcludedNames[excludedNameCount++] = typeParameter.name;", "-\t\t\t\t\t\t\texcludedNames[excludedNameCount++] = typeParameter.name;"]}], "num": 6907}