{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "de9f9bfb8bc0e403dfe423d62098f5ae", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "432dd0d0506c6cca81782020bff850d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": " \tpublic boolean visit( \t\tExplicitConstructorCall explicitConstructor, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tExplicitConstructorCall explicitConstructor, \t\tBlockScope scope)", "diff": ["-\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLPAREN, this.preferences.insert_space_before_message_send);", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLPAREN, this.preferences.insert_space_before_opening_paren_in_method_invocation);", "-\t\t\tif (this.preferences.insert_space_after_opening_paren_in_message_send) {", "+\t\t\tif (this.preferences.insert_space_after_opening_paren_in_method_invocation) {", "-\t\t\t\t\tthis.preferences.explicit_constructor_arguments_alignment,", "+\t\t\t\t\tthis.preferences.alignment_for_arguments_in_explicit_constructor_call,", "-\t\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_explicitconstructorcall_arguments);", "+\t\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_explicit_constructor_call_arguments);", "-\t\t\t\t\t\tif (i > 0 && this.preferences.insert_space_after_comma_in_explicitconstructorcall_arguments) {", "+\t\t\t\t\t\tif (i > 0 && this.preferences.insert_space_after_comma_in_explicit_constructor_call_arguments) {", "-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_before_closing_paren_in_message_send); ", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_before_closing_paren_in_method_invocation); ", "-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_between_empty_messagesend_arguments); ", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_between_empty_parens_in_method_invocation); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c18be99ad4415533a9b1bf98ca08e429", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor2.java", "commitBeforeChange": "74d059b3fbdc00070c70bee76509a44ccad7fb4d", "commitAfterChange": "31d2b0bac7c9b032f1ad8765fd4577eaff8d79fd", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 86, "signatureBeforeChange": "  \tpublic boolean visit(TypeDeclaration node)", "signatureAfterChange": "  \tpublic boolean visit(TypeDeclaration node)", "diff": ["-        if (node.isInterface()) {", "+        final boolean isInterface = node.isInterface();", "+\t\tif (isInterface) {", "-\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameextends, true);", "-\t\t\t\t\tfor (int i = 0; i < superInterfacesLength; i++) {", "-\t\t\t\t\t\tif (i > 0) {", "-\t\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_superinterfaces);", "-\t\t\t\t\t\t\tthis.scribe.printTrailingComment();", "-\t\t\t\t\t\t\tthis.scribe.alignFragment(interfaceAlignment, i+1);", "-\t\t\t\t\t\t\tif (this.preferences.insert_space_after_comma_in_superinterfaces) {", "-\t\t\t\t\t\t\t\tthis.scribe.space();", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t((Type) superInterfaces.get(i)).accept(this);", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tthis.scribe.alignFragment(interfaceAlignment, i+1);", "+\t\t\t\t\tif (isInterface) {", "+\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameextends, true);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameimplements, true);", "+\t\t\t\t\t}", "+\t\t\t\t\tthis.scribe.alignFragment(interfaceAlignment, 1);", "+\t\t\t\t\tthis.scribe.space();", "+\t\t\t\t\t((Type) superInterfaces.get(0)).accept(this);", "+\t\t\t\t\tfor (int i = 1; i < superInterfacesLength; i++) {", "+\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_superinterfaces);", "+\t\t\t\t\t\tthis.scribe.printTrailingComment();", "+\t\t\t\t\t\tthis.scribe.alignFragment(interfaceAlignment, i+1);", "+\t\t\t\t\t\tif (this.preferences.insert_space_after_comma_in_superinterfaces) {", "-\t\t\t\t\t\t\t((Type) superInterfaces.get(i)).accept(this);", "+\t\t\t\t\t\t((Type) superInterfaces.get(i)).accept(this);", "-\t\tformatTypeMembers(bodyDeclarations);", "+\t\tformatTypeMembers(bodyDeclarations, true);"]}], "num": 45172}