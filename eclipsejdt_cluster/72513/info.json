{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c5218f4a765a4b0bfa1644c1a96c1939", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad724ed98b8e60f3fc69d474acf8cb26", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "fe01542fcd3aa3aadeb3ef9dbecdc34ba5993c8d", "commitAfterChange": "e89bfd441ddc86e7db4459ee29b0092f7959a77e", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 23, "signatureBeforeChange": "  protected void consumeClassHeaderExtends()", "signatureAfterChange": "  protected void consumeClassHeaderExtends()", "diff": ["+", "+protected void consumeClassHeaderExtends() {", "+\tsuper.consumeClassHeaderExtends();", "+\tif ((this.patternFineGrain & IJavaSearchConstants.SUPERTYPE_TYPE_REFERENCE) != 0) {", "+\t\tTypeDeclaration typeDeclaration = (TypeDeclaration) this.astStack[this.astPtr];", "+\t\tthis.patternLocator.match(typeDeclaration.superclass, this.nodeSet);", "+\t}", "+}", "-", "-protected void consumeClassHeaderExtends() {", "-\tthis.typeRefFineGrain |= IJavaSearchConstants.SUPERTYPE_TYPE_REFERENCE;", "-\tsuper.consumeClassHeaderExtends();", "-\tthis.typeRefFineGrain &= ~IJavaSearchConstants.SUPERTYPE_TYPE_REFERENCE;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d90dc8db5525f3e21210d1b1ab4a6853", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "fe01542fcd3aa3aadeb3ef9dbecdc34ba5993c8d", "commitAfterChange": "e89bfd441ddc86e7db4459ee29b0092f7959a77e", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 35, "signatureBeforeChange": "  protected void consumeMethodHeaderName(boolean isAnnotationMethod)", "signatureAfterChange": "  protected void consumeMethodHeaderName(boolean isAnnotationMethod)", "diff": ["+", "+protected void consumeMethodHeaderName(boolean isAnnotationMethod) {", "+\tsuper.consumeMethodHeaderName(isAnnotationMethod);", "+\tif ((this.patternFineGrain & IJavaSearchConstants.RETURN_TYPE_REFERENCE) != 0) {", "+\t\t// when no fine grain flag is set, type reference match is evaluated in getTypeReference(int) method", "+\t\tMethodDeclaration methodDeclaration = (MethodDeclaration) this.astStack[this.astPtr];", "+\t\tthis.patternLocator.match(methodDeclaration.returnType, this.nodeSet);", "+\t}", "+}", "-", "-protected void consumeMethodHeaderName(boolean isAnnotationMethod) {", "-\tthis.typeRefFineGrain |= IJavaSearchConstants.RETURN_TYPE_REFERENCE;", "-\tsuper.consumeMethodHeaderName(isAnnotationMethod);", "-\tthis.typeRefFineGrain &= ~IJavaSearchConstants.RETURN_TYPE_REFERENCE;", "-}"]}], "num": 72513}