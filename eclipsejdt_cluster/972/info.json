{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "896d0868598236a724f1598d88669240", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b927c4a884e529abd8af02a0a91eea3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "b5c8750a0ee496ea162f56c86aa0c17734837d78", "commitAfterChange": "4a527830b1c1be247e88d2c75fe787e73bc4e15a", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean recurseInContainers)", "signatureAfterChange": " \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean recurseInContainers)", "diff": ["-\t\t\t\t\t\tIClasspathContainer container = JavaCore.getClasspathContainer(path, project);", "+\t\t\t\t\t\tIClasspathContainer container = JavaModelManager.getJavaModelManager().getClasspathContainer(path, project);", "+\t\t\t\t\t\t} else if (container == JavaModelManager.CONTAINER_INITIALIZATION_IN_PROGRESS) {", "+\t\t\t\t\t\t\t// don't create a marker if initialization is in progress (case of cp initialization batching)", "+\t\t\t\t\t\t\treturn JavaModelStatus.VERIFIED_OK;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95408d5bf9d1d04212df08230d7a65b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "be6a57f9d676bfd0ccdc79963ab2c8b8c692c4c8", "commitAfterChange": "bae8ac2b0f4b4d5d0db46dde8468bb2c22e17edf", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic static IClasspathContainer getClasspathContainer(IPath containerPath, IJavaProject project) throws JavaModelException", "signatureAfterChange": " \tpublic static IClasspathContainer getClasspathContainer(IPath containerPath, IJavaProject project) throws JavaModelException", "diff": ["-\t\tIClasspathContainer container = JavaModelManager.getJavaModelManager().getClasspathContainer(containerPath, project);", "-\t\tif (container == JavaModelManager.CONTAINER_INITIALIZATION_IN_PROGRESS) return null;", "+\t    JavaModelManager manager = JavaModelManager.getJavaModelManager();", "+\t\tIClasspathContainer container = manager.getClasspathContainer(containerPath, project);", "+\t\tif (container == JavaModelManager.CONTAINER_INITIALIZATION_IN_PROGRESS) {", "+\t\t    return manager.getPreviousSessionContainer(containerPath, project);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abb69f2d49519d9dd3be54828adcf150", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "be6a57f9d676bfd0ccdc79963ab2c8b8c692c4c8", "commitAfterChange": "bae8ac2b0f4b4d5d0db46dde8468bb2c22e17edf", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic static IPath getClasspathVariable(final String variableName)", "signatureAfterChange": " \tpublic static IPath getClasspathVariable(final String variableName)", "diff": ["-\t", "-\t\tIPath variablePath = JavaModelManager.getJavaModelManager().variableGet(variableName);", "-\t\tif (variablePath == JavaModelManager.VARIABLE_INITIALIZATION_IN_PROGRESS) return null; // break cycle", "+", "+\t    JavaModelManager manager = JavaModelManager.getJavaModelManager();", "+\t\tIPath variablePath = manager.variableGet(variableName);", "+\t\tif (variablePath == JavaModelManager.VARIABLE_INITIALIZATION_IN_PROGRESS){", "+\t\t    return manager.getPreviousSessionVariable(variableName);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea3d91e300f9eebde5317f8279e9cdd3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "ea07bf5f313abc361de8bf9f86f0f213eade86cf", "commitAfterChange": "26bbc0f1d79a90c550f0bbb95cc6eeae2aa4e3bf", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": " \tpublic static void setClasspathContainer(IPath containerPath, IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic static void setClasspathContainer(IPath containerPath, IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "diff": ["+\t\tif (affectedProjects.length == 1) {", "+\t\t\tIClasspathContainer container = respectiveContainers[0];", "+\t\t\tif (container != null) {", "+\t\t\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "+\t\t\t\tIJavaProject project = affectedProjects[0];", "+\t\t\t\tIClasspathContainer existingCointainer = manager.containerGet(project, containerPath);", "+\t\t\t\tif (existingCointainer == JavaModelManager.CONTAINER_INITIALIZATION_IN_PROGRESS) {", "+\t\t\t\t\tmanager.containerBeingInitializedPut(project, containerPath, container);", "+\t\t\t\t\treturn;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}"]}], "num": 972}