{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1acefa719d2c8a7e8288dc645acb55f6", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "846a554b7dd5ae70f3e8e92e19cd9870", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/HierarchyScope.java", "commitBeforeChange": "5266b947a41bc87e33ca243d2f06d621c5b35d8c", "commitAfterChange": "5b0c62f0c85cc7c393266b52408d3bd3c14d0ef5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate IPath[] computeProjectsAndJars(IType type) throws JavaModelException", "signatureAfterChange": " \tprivate IPath[] computeProjectsAndJars(IType type) throws JavaModelException", "diff": ["-\t\t\t\tIClasspathEntry[] classpath = project.getResolvedClasspath();", "-\t\t\t\tfor (int j = 0; j < classpath.length; j++) {", "-\t\t\t\t\tif (rootPath.equals(classpath[j].getPath())) {", "-\t\t\t\t\t\t// add the project and its binary pkg fragment roots", "-\t\t\t\t\t\tIPackageFragmentRoot[] roots = project.getAllPackageFragmentRoots();", "-\t\t\t\t\t\tset.add(project.getPath());", "-\t\t\t\t\t\tfor (int k = 0; k < roots.length; k++) {", "-\t\t\t\t\t\t\tIPackageFragmentRoot pkgFragmentRoot = roots[k];", "-\t\t\t\t\t\t\tif (pkgFragmentRoot.getKind() == IPackageFragmentRoot.K_BINARY) {", "-\t\t\t\t\t\t\t\tset.add(pkgFragmentRoot.getPath());", "-\t\t\t\t\t\t\t}", "+\t\t\t\tIClasspathEntry entry = project.getClasspathEntryFor(rootPath);", "+\t\t\t\tif (entry != null) {", "+\t\t\t\t\t// add the project and its binary pkg fragment roots", "+\t\t\t\t\tIPackageFragmentRoot[] roots = project.getAllPackageFragmentRoots();", "+\t\t\t\t\tset.add(project.getPath());", "+\t\t\t\t\tfor (int k = 0; k < roots.length; k++) {", "+\t\t\t\t\t\tIPackageFragmentRoot pkgFragmentRoot = roots[k];", "+\t\t\t\t\t\tif (pkgFragmentRoot.getKind() == IPackageFragmentRoot.K_BINARY) {", "+\t\t\t\t\t\t\tset.add(pkgFragmentRoot.getPath());", "-\t\t\t\t\t\t// add the dependent projects", "-\t\t\t\t\t\tthis.computeDependents(project, set, visited);", "-\t\t\t\t\t\tbreak;", "+\t\t\t\t\t// add the dependent projects", "+\t\t\t\t\tthis.computeDependents(project, set, visited);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f62f39915f3d536d2815e5cd28f58e3d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "bb49ae1f5759ef970a2a314fd9778e459f4c097c", "commitAfterChange": "31d45554331a458304a632ad1dfc3ad3337a9ef2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic ICompilationUnit findCompilationUnit(String qualifiedTypeName)", "signatureAfterChange": " \tpublic ICompilationUnit findCompilationUnit(String qualifiedTypeName)", "diff": ["-\t\tIPackageFragmentRoot[] roots = (IPackageFragmentRoot[]) this.packageFragments.get(pkgName);", "-\t\tif (roots != null) {", "-\t\t\tfor (int i= 0; i < roots.length; i++) {", "-\t\t\t\tPackageFragmentRoot root= (PackageFragmentRoot) roots[i];", "-\t\t\t\tif (!root.isArchive()) {", "-\t\t\t\t\tIPackageFragment pkg = root.getPackageFragment(pkgName);", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\tICompilationUnit[] cus = pkg.getCompilationUnits();", "-\t\t\t\t\t\tfor (int j = 0, length = cus.length; j < length; j++) {", "-\t\t\t\t\t\t\tICompilationUnit cu = cus[j];", "-\t\t\t\t\t\t\tif (Util.equalsIgnoreJavaLikeExtension(cu.getElementName(), cuName))", "-\t\t\t\t\t\t\t\treturn cu;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} catch (JavaModelException e) {", "-\t\t\t\t\t\t// pkg does not exist", "-\t\t\t\t\t\t// -> try next package", "-\t\t\t\t\t}", "+\t\tObject value = this.packageFragments.get(pkgName);", "+\t\tif (value != null) {", "+\t\t\tif (value instanceof PackageFragmentRoot) {", "+\t\t\t\treturn findCompilationUnit(pkgName, cuName, (PackageFragmentRoot) value);", "+\t\t\t} else {", "+\t\t\t\tIPackageFragmentRoot[] roots = (IPackageFragmentRoot[]) value;", "+\t\t\t\tfor (int i= 0; i < roots.length; i++) {", "+\t\t\t\t\tPackageFragmentRoot root= (PackageFragmentRoot) roots[i];", "+\t\t\t\t\tICompilationUnit cu = findCompilationUnit(pkgName, cuName, root);", "+\t\t\t\t\tif (cu != null)", "+\t\t\t\t\t\treturn cu;"]}], "num": 62175}