{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b045a9e4056eda8358c989c173e39ad0", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19b96ce6d2d81d51e1b24e046f549eef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/util/AptConfig.java", "commitBeforeChange": "8eb843ef75292ca86ade9a64a79ec382d0e5f4fa", "commitAfterChange": "bc498b88d907a470b6f3dd533c50f2d8844848a6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static Map<String, String> getProcessorOptions(IJavaProject jproj)", "signatureAfterChange": "     public static Map<String, String> getProcessorOptions(IJavaProject jproj)", "diff": ["+    \tIPath workspaceRootPath = jproj.getProject().getWorkspace().getRoot().getLocation();", "+    \t", "-\t    \t\t\tclasspathSB.append(entry.getPath().toFile().getAbsolutePath());", "+\t    \t\t\tclasspathSB.append(entry.getPath().makeAbsolute().toOSString());", "-    \t\t\t\tsourcepathSB.append(entry.getPath().toFile().getAbsolutePath());", "+    \t\t\t\t// Sourcepath is a bit odd -- it's workspace-relative", "+    \t\t\t\tIPath sourcepath = entry.getPath();", "+    \t\t\t\tsourcepathSB.append(workspaceRootPath.append(sourcepath).toOSString());", "-    \t\toptions.put(\"-s\", getString(jproj, AptPreferenceConstants.APT_GENSRCDIR)); //$NON-NLS-1$", "-    \t\tString binDir = jproj.getOutputLocation().toString();", "-    \t\toptions.put(\"-d\", binDir); //$NON-NLS-1$", "+    \t\t", "+    \t\t// Get absolute path for generated source dir", "+    \t\tIFolder genSrcDir = jproj.getProject().getFolder(getGenSrcDir(jproj));", "+    \t\toptions.put(\"-s\", genSrcDir.getRawLocation().toOSString()); //$NON-NLS-1$", "+    \t\t", "+    \t\t// Absolute path for bin dir as well", "+    \t\tIPath binPath = jproj.getOutputLocation();", "+    \t\tIPath binDir = workspaceRootPath.append(binPath);", "+    \t\toptions.put(\"-d\", binDir.toOSString()); //$NON-NLS-1$", "+    \t\t", "+    \t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20f917eab49f97ebca659905826ec306", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/util/AptConfig.java", "commitBeforeChange": "7a2852034423623a0b78746d6961458a4511c8df", "commitAfterChange": "fe228284fc27f2126f4ffab1f41e7aadc13051c1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static Map<String, String> getProcessorOptions(IJavaProject jproj)", "signatureAfterChange": "     public static Map<String, String> getProcessorOptions(IJavaProject jproj)", "diff": ["+    \tif (jproj == null) {", "+    \t\t// there are no programmatically set options at the workspace level", "+    \t\treturn options;", "+    \t}", "-    \t\toptions.put(\"classpath\",classpathSB.toString()); //$NON-NLS-1$", "-    \t\toptions.put(\"sourcepath\", sourcepathSB.toString()); //$NON-NLS-1$", "+    \t\toptions.put(\"-classpath\",classpathSB.toString()); //$NON-NLS-1$", "+    \t\toptions.put(\"-sourcepath\", sourcepathSB.toString()); //$NON-NLS-1$", "+    \t\toptions.put(\"-s\", getString(jproj, AptPreferenceConstants.APT_GENSRCDIR)); //$NON-NLS-1$", "+    \t\tString binDir = jproj.getOutputLocation().toString();", "+    \t\toptions.put(\"-d\", binDir); //$NON-NLS-1$", "+    \t\tString target = jproj.getOption(JavaCore.COMPILER_CODEGEN_TARGET_PLATFORM, true);", "+    \t\toptions.put(\"-target\", target); //$NON-NLS-1$", "+    \t\tString source = jproj.getOption(JavaCore.COMPILER_SOURCE, true);", "+    \t\toptions.put(\"-source\", source); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e83eb2b3d67222af7d148f3a3eb6a2d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/util/AptConfig.java", "commitBeforeChange": "c4c0df5e4aeb7d3e8571312c597020a7d0812327", "commitAfterChange": "6fea7eafdd413dccff31028f8da1f1ac6859e6fe", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static Map<String, String> getProcessorOptions(IJavaProject jproj)", "signatureAfterChange": "     public static Map<String, String> getProcessorOptions(IJavaProject jproj)", "diff": ["-    \tIPath workspaceRootPath = jproj.getProject().getWorkspace().getRoot().getLocation();", "+    \tIWorkspaceRoot root = jproj.getProject().getWorkspace().getRoot();", "-\t    \t\t\tclasspathSB.append(entry.getPath().makeAbsolute().toOSString());", "+\t    \t\t\tIPath cpPath = entry.getPath();", "+\t    \t\t\t", "+\t    \t\t\tIResource res = root.findMember(cpPath);", "+\t    \t\t\t", "+\t    \t\t\t// If res is null, the path is absolute (it's an external jar)", "+\t    \t\t\tif (res == null) {", "+\t    \t\t\t\tclasspathSB.append(cpPath.toOSString());", "+\t    \t\t\t}", "+\t    \t\t\telse {", "+\t    \t\t\t\t// It's relative", "+\t    \t\t\t\tclasspathSB.append(res.getLocation().toOSString());", "+\t    \t\t\t}", "-    \t\t\t\t\tsourcepathSB.append(File.separatorChar);", "+    \t\t\t\t\tsourcepathSB.append(File.pathSeparatorChar);", "-    \t\t\t\t// Sourcepath is a bit odd -- it's workspace-relative", "-    \t\t\t\tIPath sourcepath = entry.getPath();", "-    \t\t\t\tsourcepathSB.append(workspaceRootPath.append(sourcepath).toOSString());", "+    \t\t\t\t", "+    \t\t\t\tsourcepathSB.append(root.findMember(entry.getPath()).getLocation().toOSString());", "-    \t\toptions.put(\"-classpath\",classpathSB.toString()); //$NON-NLS-1$", "+    \t\toptions.put(\"-classpath\",classpathSB.toString()); //$NON-NLS-1$    \t\t", "-    \t\toptions.put(\"-s\", genSrcDir.getRawLocation().toOSString()); //$NON-NLS-1$", "+    \t\tString genSrcDirString = genSrcDir.getRawLocation().toOSString();", "+    \t\toptions.put(\"-s\", genSrcDirString); //$NON-NLS-1$", "-    \t\tIPath binDir = workspaceRootPath.append(binPath);", "-    \t\toptions.put(\"-d\", binDir.toOSString()); //$NON-NLS-1$", "+    \t\tIResource binPathResource = root.findMember(binPath);", "+    \t\tString binDirString;", "+    \t\tif (binPathResource != null) {", "+    \t\t\tbinDirString = root.findMember(binPath).getLocation().toOSString();", "+    \t\t}", "+    \t\telse {", "+    \t\t\tbinDirString = binPath.toOSString();", "+    \t\t}", "+    \t\toptions.put(\"-d\", binDirString); //$NON-NLS-1$"]}], "num": 39084}