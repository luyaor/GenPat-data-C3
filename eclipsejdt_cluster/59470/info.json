{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "92b8b4528789a267982ec6bc67573df6", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c6728a194bd125048380a977e93b686", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "6376828719de1b35fb16828dd60ac530e949608a", "commitAfterChange": "2a2667223f1903b9c183c60ab8e7003c7b66502a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public BinaryTypeBinding createBinaryTypeFrom(IBinaryType binaryType, PackageBinding packageBinding, boolean needFieldsAndMethods, AccessRestriction accessRestriction)", "signatureAfterChange": " public BinaryTypeBinding createBinaryTypeFrom(IBinaryType binaryType, PackageBinding packageBinding, boolean needFieldsAndMethods, AccessRestriction accessRestriction)", "diff": ["-\t\tthis.updateCaches((UnresolvedReferenceBinding)cachedType, binaryBinding);", "+", "+\t\t((UnresolvedReferenceBinding) cachedType).setResolvedType(binaryBinding, this);", "+", "-\tif (cachedType != null) { // update reference to unresolved binding after having read classfile (knows whether generic for raw conversion)", "-\t\t((UnresolvedReferenceBinding) cachedType).setResolvedType(binaryBinding, this);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcaf5028132e52d8aa3805f9c7b6b8b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public BinaryTypeBinding createBinaryTypeFrom(IBinaryType binaryType, PackageBinding packageBinding, boolean needFieldsAndMethods)", "signatureAfterChange": " public BinaryTypeBinding createBinaryTypeFrom(IBinaryType binaryType, PackageBinding packageBinding, boolean needFieldsAndMethods)", "diff": ["-\t\tUnresolvedReferenceBinding unresolvedType = (UnresolvedReferenceBinding) cachedType;", "-\t\tunresolvedType.resolvedType = binaryBinding;", "-\t\tupdateArrayCache(unresolvedType, binaryBinding);", "+\t\t((UnresolvedReferenceBinding) cachedType).setResolvedType(binaryBinding, this);"]}], "num": 59470}