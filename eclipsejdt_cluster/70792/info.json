{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a5ac3ba2e60572c648ac14577dfbce99", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b659465afca5c473e7219b00d2fc12c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "bdbfa5b74cd31bcdfeab2fc6974ba4e96597b32a", "commitAfterChange": "e74abb558d667117356c6f54df2ab5f4c2e65105", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  \t\tprivate void logProblem(IProblem problem, int localErrorCount, \t\t\tint globalErrorCount, char[] unitSource)", "signatureAfterChange": "  \t\tprivate void logProblem(IProblem problem, int localErrorCount, \t\t\tint globalErrorCount, char[] unitSource)", "diff": ["+\t\t\t\tthis.printlnErr(((DefaultProblem) problem).errorReportSource(unitSource, this.tagBits));", "-\t\t\t}", "-\t\t\ttry {", "-\t\t\t\tthis.printlnErr(((DefaultProblem) problem).errorReportSource(unitSource));", "-\t\t\t\tif ((this.tagBits & EMACS) == 0) this.printlnErr(problem.getMessage());", "-\t\t\t} catch (Exception e) {", "-\t\t\t\tthis.printlnErr(Main.bind(", "-\t\t\t\t\t\"requestor.notRetrieveErrorMessage\", problem.toString())); //$NON-NLS-1$", "-\t\t\t}", "-\t\t\tif ((this.tagBits & EMACS) == 0)", "+\t\t\t\ttry {", "+\t\t\t\t\tthis.printlnErr(((DefaultProblem) problem).errorReportSource(unitSource));", "+\t\t\t\t\tthis.printlnErr(problem.getMessage());", "+\t\t\t\t} catch (Exception e) {", "+\t\t\t\t\tthis.printlnErr(Main.bind(", "+\t\t\t\t\t\t\"requestor.notRetrieveErrorMessage\", problem.toString())); //$NON-NLS-1$", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc483b7e5ff6b5942b887792e16954f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavadocContents.java", "commitBeforeChange": "f65d899807fd9c7da0edbe360af0c6f62b2e812f", "commitAfterChange": "e8dcde7054627e60ae6e2210fd96dea3c0d1010e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tprivate String computeMethodAnchorPrefixEnd(BinaryMethod method) throws JavaModelException", "signatureAfterChange": " \t \tprivate String computeMethodAnchorPrefixEnd(BinaryMethod method) throws JavaModelException", "diff": ["-\t\t\tint depth = 0;", "-\t\t\t\tdepth++;", "-\t\t\t}", "-\t\t\tif (depth != 0) {", "-\t\t\t\t// depth is 1", "-\t\t\t\t\tanchor = anchor.substring(0, indexOfOpeningParen) + anchor.substring(index);", "+\t\t\t\t} else {", "+\t\t\t\t\t// no argument, but a synthetic argument", "+\t\t\t\t\tindex = anchor.indexOf(')', index);", "+\t\t\t\tanchor = anchor.substring(0, indexOfOpeningParen) + anchor.substring(index);"]}], "num": 70792}