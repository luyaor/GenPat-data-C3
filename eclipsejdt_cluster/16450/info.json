{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c28b5dd829a47aeb6b128f588f477d8a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b26c2f5317ca7324b02a44a6cf00c57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "2cf58056e866ff671cad90d5365fdd17bef2e395", "commitAfterChange": "5eaac7ac2a1f933d3823239cdabe42da5dc006f8", "methodNumberBeforeChange": 205, "methodNumberAfterChange": 205, "signatureBeforeChange": " protected void consumeMethodDeclaration(boolean isNotAbstract)", "signatureAfterChange": " protected void consumeMethodDeclaration(boolean isNotAbstract)", "diff": ["-\t\tif ((length = this.astLengthStack[this.astLengthPtr--]) != 0) {", "-\t\t\tSystem.arraycopy(", "-\t\t\t\tthis.astStack,", "-\t\t\t\t(this.astPtr -= length) + 1,", "-\t\t\t\tstatements = new Statement[length],", "-\t\t\t\t0,", "-\t\t\t\tlength);", "+\t\tif (!this.options.ignoreMethodBodies) {", "+\t\t\tif ((length = this.astLengthStack[this.astLengthPtr--]) != 0) {", "+\t\t\t\tSystem.arraycopy(", "+\t\t\t\t\tthis.astStack,", "+\t\t\t\t\t(this.astPtr -= length) + 1,", "+\t\t\t\t\tstatements = new Statement[length],", "+\t\t\t\t\t0,", "+\t\t\t\t\tlength);", "+\t\t\t}", "+\t\t} else {", "+\t\t\tlength = this.astLengthStack[this.astLengthPtr--];", "+\t\t\tthis.astPtr -= length;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c76b241aaaf205a2526a1b52128faaf3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "fe024fd7797ce73b0a83969f685073606863b79e", "commitAfterChange": "124641ac651bbea2bd062a9605817d39b473bf0e", "methodNumberBeforeChange": 206, "methodNumberAfterChange": 206, "signatureBeforeChange": " protected void consumeInterfaceMethodDeclaration(boolean hasSemicolonBody)", "signatureAfterChange": " protected void consumeInterfaceMethodDeclaration(boolean hasSemicolonBody)", "diff": ["+\tint explicitDeclarations = 0;", "+\tStatement[] statements = null;", "-\t\t// retrieve end position of method declarator", "-", "+\t\tthis.intPtr--;", "+\t\t", "+\t\texplicitDeclarations = this.realBlockStack[this.realBlockPtr--];", "+\t\t", "-\t\tthis.realBlockPtr--;", "-\t\t\tthis.astPtr -= length;", "+\t\t\tif (this.options.ignoreMethodBodies) {", "+\t\t\t\tthis.astPtr -= length;", "+\t\t\t} else {", "+\t\t\t\tSystem.arraycopy(", "+\t\t\t\t\tthis.astStack,", "+\t\t\t\t\t(this.astPtr -= length) + 1,", "+\t\t\t\t\tstatements = new Statement[length],", "+\t\t\t\t\t0,", "+\t\t\t\t\tlength);", "+\t\t\t}", "+\tmd.statements = statements;", "+\tmd.explicitDeclarations = explicitDeclarations;"]}], "num": 16450}