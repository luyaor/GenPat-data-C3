{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "35206ee081d46305d3413123608a7a7a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03ae2a1e4d65a21bf2c8da50ed611479", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitVisitor.java", "commitBeforeChange": "2e8c81b48304c9e33747060a2a7fcd8295c64afe", "commitAfterChange": "50125dca81221f803e384aaa4267a637e226f1c2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic static void visit( \t\tICompilationUnit unitElement, \t\tIAbstractSyntaxTreeVisitor visitor) \t\tthrows JavaModelException", "signatureAfterChange": "  \tpublic static void visit( \t\tICompilationUnit unitElement, \t\tIAbstractSyntaxTreeVisitor visitor) \t\tthrows JavaModelException", "diff": ["+\t\tIJavaProject project = unitElement.getJavaProject();", "-\t\t\t\tJavaCore.getOptions(),", "+\t\t\t\tproject.getOptions(true),", "-\t\t\tString encoding = JavaCore.getOption(JavaCore.CORE_ENCODING);", "+\t\t\tString encoding = project.getOption(JavaCore.CORE_ENCODING, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "088b78461858f4cecc83dcf10e0631b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitProblemFinder.java", "commitBeforeChange": "2e8c81b48304c9e33747060a2a7fcd8295c64afe", "commitAfterChange": "50125dca81221f803e384aaa4267a637e226f1c2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic static CompilationUnitDeclaration resolve( \t\tICompilationUnit unitElement,  \t\tIProblemRequestor problemRequestor, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "signatureAfterChange": "  \tpublic static CompilationUnitDeclaration resolve( \t\tICompilationUnit unitElement,  \t\tIProblemRequestor problemRequestor, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "diff": ["+\t\tIJavaProject project = unitElement.getJavaProject();", "-\t\t\t\tJavaCore.getOptions(),", "+\t\t\t\tproject.getOptions(true),", "-\t\t\tString encoding = JavaCore.getOption(JavaCore.CORE_ENCODING);", "+\t\t\tString encoding = project.getOption(JavaCore.CORE_ENCODING, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22bb2085fe97f08ea219d6b4d3e6364d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "50125dca81221f803e384aaa4267a637e226f1c2", "commitAfterChange": "4cd48b026de7e60c67fbe844fd9c5a5b27c059ca", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic static CompilationUnitDeclaration resolve( \t\tICompilationUnit unitElement, \t\tIAbstractSyntaxTreeVisitor visitor) \t\tthrows JavaModelException", "signatureAfterChange": "  \tpublic static CompilationUnitDeclaration resolve( \t\tICompilationUnit unitElement, \t\tIAbstractSyntaxTreeVisitor visitor) \t\tthrows JavaModelException", "diff": ["+\t\tIJavaProject project = unitElement.getJavaProject();", "-\t\t\t\tJavaCore.getOptions(),", "+\t\t\t\tproject.getOptions(true),", "-\t\t\tString encoding = JavaCore.getOption(JavaCore.CORE_ENCODING);", "+\t\t\tString encoding = project.getOption(JavaCore.CORE_ENCODING, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "295e5df3166cc118cff8770acf260079", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/src/org/eclipse/jdt/compiler/apt/tests/BatchDispatchTests.java", "commitBeforeChange": "4f38af3b3961bb6a0ca928b2461195fd32bd6838", "commitAfterChange": "8f159aee9ab3a6d4b3e47a920acbb4b3cca0d988", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprivate void internalTestProcessorArguments(JavaCompiler compiler)", "signatureAfterChange": " \tprivate void internalTestProcessorArguments(JavaCompiler compiler)", "diff": ["-\t\tFile inputFile = TestUtils.copyResource(\"targets/dispatch/HasCheckArgs.java.txt\", BatchTestUtils.getSrcFolderName(), \"HasCheckArgs.java\");", "+\t\tFile targetFolder = TestUtils.concatPath(BatchTestUtils.getSrcFolderName(), \"targets\", \"dispatch\");", "+\t\tFile inputFile = TestUtils.copyResource(\"targets/dispatch/HasCheckArgs.java.txt\", targetFolder, \"HasCheckArgs.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "599555855b64229ee6fc672feba84ea2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/src/org/eclipse/jdt/compiler/apt/tests/BatchDispatchTests.java", "commitBeforeChange": "4f38af3b3961bb6a0ca928b2461195fd32bd6838", "commitAfterChange": "8f159aee9ab3a6d4b3e47a920acbb4b3cca0d988", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void testTwoAnnotations()", "signatureAfterChange": " \tpublic void testTwoAnnotations()", "diff": ["-\t\tFile inputFile = TestUtils.copyResource(\"targets/dispatch/TwoAnnotations.java.txt\", BatchTestUtils.getSrcFolderName(), \"TwoAnnotations.java\");", "+\t\tFile targetFolder = TestUtils.concatPath(BatchTestUtils.getSrcFolderName(), \"targets\", \"dispatch\");", "+\t\tFile inputFile = TestUtils.copyResource(\"targets/dispatch/TwoAnnotations.java.txt\", targetFolder, \"TwoAnnotations.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1e400f9a26b13ad3da529955bc51cf5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/src/org/eclipse/jdt/compiler/apt/tests/BatchDispatchTests.java", "commitBeforeChange": "4f38af3b3961bb6a0ca928b2461195fd32bd6838", "commitAfterChange": "8f159aee9ab3a6d4b3e47a920acbb4b3cca0d988", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tprivate void internalTestGenerateClass(JavaCompiler compiler)", "signatureAfterChange": " \tprivate void internalTestGenerateClass(JavaCompiler compiler)", "diff": ["-\t\tFile inputFile = TestUtils.copyResource(\"targets/dispatch/HasGenClass.java.txt\", BatchTestUtils.getSrcFolderName(), \"HasGenClass.java\");", "+\t\tFile targetFolder = TestUtils.concatPath(BatchTestUtils.getSrcFolderName(), \"targets\", \"dispatch\");", "+\t\tFile inputFile = TestUtils.copyResource(\"targets/dispatch/HasGenClass.java.txt\", targetFolder, \"HasGenClass.java\");", "-\t\t"]}], "num": 7065}