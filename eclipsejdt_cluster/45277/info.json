{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "96b7419cf9fee9a4b9297b106972d970", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7529386f6fec9bcdc7f4f50b48d67997", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTNode.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 37, "signatureBeforeChange": "  \tstatic void checkNewChild(ASTNode node, ASTNode newChild, \t\t\tboolean cycleCheck, Class nodeType)", "signatureAfterChange": "  \tstatic void checkNewChild(ASTNode node, ASTNode newChild, \t\t\tboolean cycleCheck, Class nodeType)", "diff": ["-\t\tAST ast = node.getAST();", "-\t\tif (newChild.getAST() != ast) {", "+\t\tif (newChild.ast != node.ast) {", "-\t\t}", "-\t\t", "+\t\t}\t\t", "-\t\t\tthrow new IllegalArgumentException();", "+\t\t\tthrow new ClassCastException();", "+\t\tif ((newChild.flags & PROTECT) != 0) {", "+\t\t\t// new child node is protected => cannot be parented", "+\t\t\tthrow new IllegalArgumentException(\"AST node cannot be modified\"); //$NON-NLS-1$", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6bfc4c4ac0120c2d425524ab4471dd8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTNode.java", "commitBeforeChange": "c3eab8881b6fc3e1685d73b1b7eb306d121d27b8", "commitAfterChange": "229d357b98e992f52a718cd3edaf494561b71678", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \r \tstatic void checkNewChild(ASTNode node, ASTNode newChild,\r \t\t\tboolean cycleCheck, Class nodeType)", "signatureAfterChange": " \r \tstatic void checkNewChild(ASTNode node, ASTNode newChild,\r \t\t\tboolean cycleCheck, Class nodeType)", "diff": ["-\t\tClass childClass = newChild.getClass();\r", "-//\t\t// FIXME - test is erratic\r", "-//\t\tif (nodeType != null && childClass.isAssignableFrom(nodeType)) {\r", "-//\t\t\t// new child is not of the right type\r", "-//\t\t\tthrow new IllegalArgumentException();\r", "-//\t\t}\r", "+\t\tClass childClass = newChild.getClass();\r", "+\t\tif (nodeType != null && !nodeType.isAssignableFrom(childClass)) {\r", "+\t\t\t// new child is not of the right type\r", "+\t\t\tthrow new IllegalArgumentException();\r", "+\t\t}\r"]}], "num": 45277}