{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c984b394accc204a6803cf27e36a2817", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04ea746b8395ec94ae8e778fa776c819", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/VariableLocator.java", "commitBeforeChange": "cb3a630359a22f7ce6166a489826cbd44a0698c7", "commitAfterChange": "684148daf1ae1fa5c2a3b4e261bbfa56ad328f58", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic int match(Reference node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(Reference node, MatchingNodeSet nodeSet)", "diff": ["-", "-\tpublic int match(Reference node, MatchingNodeSet nodeSet) { // interested in FieldReference, NameReference & its subtypes", "-\t\tif (this.pattern.readAccess)", "-\t\t\treturn matchReference(node, nodeSet, false);", "-\t", "-\t\treturn IMPOSSIBLE_MATCH;", "-\t}", "+}", "+public int match(Reference node, MatchingNodeSet nodeSet) { // interested in NameReference & its subtypes", "+\treturn this.pattern.readAccess", "+\t\t? matchReference(node, nodeSet, false)", "+\t\t: IMPOSSIBLE_MATCH;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d6643827a83aed410c1caf0b92339c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldLocator.java", "commitBeforeChange": "11d9bc69677fa9c8e3ad183264b865451dc15a16", "commitAfterChange": "0aef5635cdda5f8b487e6520930c462feef51cd5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void match(Reference node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(Reference node, MatchingNodeSet nodeSet)", "diff": ["-//public void match(MessageSend node, MatchingNodeSet nodeSet) - SKIP IT", "-public void match(Reference node, MatchingNodeSet nodeSet) { // interested in FieldReference, NameReference & its subtypes", "+//public int match(MessageSend node, MatchingNodeSet nodeSet) - SKIP IT", "+public int match(Reference node, MatchingNodeSet nodeSet) { // interested in FieldReference, NameReference & its subtypes", "-\t\tmatchReference(node, nodeSet, false);", "+\t\treturn matchReference(node, nodeSet, false);", "+", "+\treturn IMPOSSIBLE_MATCH;"]}], "num": 63044}