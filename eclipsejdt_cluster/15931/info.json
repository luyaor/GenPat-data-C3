{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "87b4edf534e9fd262d4045dede22abf0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bccb01d4295b55e97f1737c08acec86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaIndexTests.java", "commitBeforeChange": "8e69d36fa08db2d61d2c40fecd2494cfd19819f5", "commitAfterChange": "3c9fcd486312b0a7ab40ed5ba3b6e46d9bce5dc9", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void _testChangeClasspathForInternalJar() throws CoreException, IOException", "signatureAfterChange": " \tpublic void testChangeClasspathForInternalJar() throws CoreException, IOException", "diff": ["-\tpublic void _testChangeClasspathForInternalJar() throws CoreException, IOException {", "+\tpublic void testChangeClasspathForInternalJar() throws CoreException, IOException {", "+\t\tString fullJarPath = getWorkspacePath() + jarFilePath;", "-\t\t\t\t\t\"}\"}, jarFilePath);", "-\t\t\tJavaIndexer.generateIndexForJar(jarFilePath, indexFilePath);", "+\t\t\t\t\t\"}\"}, fullJarPath);", "+\t\t\tJavaIndexer.generateIndexForJar(fullJarPath, indexFilePath);", "-\t\t\t\t\t\"}\"}, jarFilePath);", "+\t\t\t\t\t\"}\"}, fullJarPath);", "+\t\t\tp.getProject().refreshLocal(1, null);", "-\t\t\tassertSearchResults(\"\\\\P\\\\Test.jar pkg.NewTest\");", "+\t\t\tassertSearchResults(\"Test.jar pkg.NewTest [No source]\");", "-\t\t\tassertSearchResults(\"\\\\P\\\\Test.jar pkg.NewTest\");", "-\t\t\t", "-\t\t\t", "+\t\t\tassertSearchResults(\"Test.jar pkg.NewTest [No source]\");\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bffb9b6695ffac598c8e2fe88a4422af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaIndexTests.java", "commitBeforeChange": "8e69d36fa08db2d61d2c40fecd2494cfd19819f5", "commitAfterChange": "3c9fcd486312b0a7ab40ed5ba3b6e46d9bce5dc9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void _testUseIndexInternalJarAfterRestart() throws IOException, CoreException", "signatureAfterChange": " \tpublic void testUseIndexInternalJarAfterRestart() throws IOException, CoreException", "diff": ["-\tpublic void _testUseIndexInternalJarAfterRestart() throws IOException, CoreException {", "+\tpublic void testUseIndexInternalJarAfterRestart() throws IOException, CoreException {", "+\t\tString fullJarPath = getWorkspacePath() + jarFilePath;", "-\t\t\t\t\t\"}\"}, jarFilePath);", "-\t\t\tJavaIndexer.generateIndexForJar(jarFilePath, indexFilePath);", "+\t\t\t\t\t\"}\"}, fullJarPath);", "+\t\t\tp.getProject().refreshLocal(1, null);", "+\t\t\tJavaIndexer.generateIndexForJar(fullJarPath, indexFilePath);", "-\t\t\tassertSearchResults(\"\\\\P\\\\Test.jar pkg.Test\");", "+\t\t\tassertSearchResults(\"Test.jar pkg.Test [No source]\");", "+\t\t\tjava.io.File indexFile = JavaModelManager.getIndexManager().getIndex(libPath, false, false).getIndexFile();", "+\t\t\tassertEquals(indexFilePath,indexFile.toString());", "-\t\t\tgetJavaModel().refreshExternalArchives(null, null);", "-\t\t\tassertSearchResults(\"\\\\P\\\\Test.jar pkg.Test\");", "+\t\t\tassertSearchResults(\"Test.jar pkg.Test [No source]\");", "-\t\t\tjava.io.File indexFile = JavaModelManager.getIndexManager().getIndex(libPath, false, false).getIndexFile();", "+\t\t\tindexFile = JavaModelManager.getIndexManager().getIndex(libPath, false, false).getIndexFile();"]}], "num": 15931}