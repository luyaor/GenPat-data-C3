{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "16e4e7c7cf1871a85f291e1c1047c51d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e722295d582d555ab9b291409e4911cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprotected void buildBodyDeclarations(org.eclipse.jdt.internal.compiler.ast.EnumDeclaration enumDeclaration2, EnumDeclaration enumDeclaration)", "signatureAfterChange": " \t \tprotected void buildBodyDeclarations(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration enumDeclaration2, EnumDeclaration enumDeclaration)", "diff": ["-\tprotected void buildBodyDeclarations(org.eclipse.jdt.internal.compiler.ast.EnumDeclaration enumDeclaration2, EnumDeclaration enumDeclaration) {", "+\tprotected void buildBodyDeclarations(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration enumDeclaration2, EnumDeclaration enumDeclaration) {", "-\t\torg.eclipse.jdt.internal.compiler.ast.EnumConstant[] enumConstants = enumDeclaration2.enumConstants;", "-\t\tint enumConstantsLength = enumConstants == null ? 0 : enumConstants.length;", "-\t\tint enumConstantsIndex = 0;", "-\t\t\t|| (methodsIndex < methodsLength)", "-\t\t\t|| (enumConstantsIndex < enumConstantsLength)) {", "+\t\t\t|| (methodsIndex < methodsLength)) {", "-\t\t\torg.eclipse.jdt.internal.compiler.ast.EnumConstant nextEnumConstant = null;", "-\t\t\tif (enumConstantsIndex < enumConstantsLength) {", "-\t\t\t\tnextEnumConstant = enumConstants[enumConstantsIndex];", "-\t\t\t\tif (nextEnumConstant.declarationSourceStart < position) {", "-\t\t\t\t\tposition = nextEnumConstant.declarationSourceStart;", "-\t\t\t\t\tnextDeclarationType = 3; // ENUM CONSTANT", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\t\t\tcheckAndAddMultipleFieldDeclaration(fields, fieldsIndex, enumDeclaration.bodyDeclarations());", "+\t\t\t\t\tif (nextFieldDeclaration.getKind() == AbstractVariableDeclaration.ENUM_CONSTANT) {", "+\t\t\t\t\t\tenumDeclaration.enumConstants().add(convert(nextFieldDeclaration));", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tcheckAndAddMultipleFieldDeclaration(fields, fieldsIndex, enumDeclaration.bodyDeclarations());", "+\t\t\t\t\t}", "-\t\t\t\tcase 3 :", "-\t\t\t\t\tenumConstantsIndex++;", "-\t\t\t\t\tenumDeclaration.enumConstants().add(convert(nextEnumConstant));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed6f2f497f0f328c22ef604100e7f10f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "38f73e89bd4606189d7e6d499593d5aa49ab247d", "commitAfterChange": "83b83ec335a27590393034d86f94208edbfcc45a", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " public MethodBinding[] methods()", "signatureAfterChange": " public MethodBinding[] methods()", "diff": ["-\t\t\t\t\t\tboolean equalTypeVarLength = vars.length == vars2.length;", "-\t\t\t\t\t\tif (!equalTypeVars && equalTypeVarLength) {", "-\t\t\t\t\t\t\tLookupEnvironment env = this.scope.environment();", "-\t\t\t\t\t\t\tint varsLength = vars.length;", "-\t\t\t\t\t\t\tnotEqual : for (int v = 0; v < varsLength; v++) {", "-\t\t\t\t\t\t\t\tif (!vars[v].isInterchangeableWith(env, vars2[v])) {", "-\t\t\t\t\t\t\t\t\tequalTypeVars = false;", "-\t\t\t\t\t\t\t\t\tbreak notEqual;", "-\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (!equalTypeVars) {", "+\t\t\t\t\t\t\tMethodBinding temp = method.computeSubstitutedMethod(method2, this.scope.environment());", "+\t\t\t\t\t\t\tif (temp != null) {", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tif (equalTypeVars) {", "-\t\t\t\t\t\t\t\t// must substitute to detect cases like:", "-\t\t\t\t\t\t\t\t//   <T1 extends X<T1>> void dup() {}", "-\t\t\t\t\t\t\t\t//   <T2 extends X<T2>> Object dup() {return null;}", "-\t\t\t\t\t\t\t\tsubMethod = new ParameterizedGenericMethodBinding(method2, vars, env);", "+\t\t\t\t\t\t\t\tsubMethod = temp;"]}], "num": 17828}