{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "328fb42821723f3c7a772f100444714c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be73a66826edd3667967d7f4963cdb5f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tpublic void testBug81084a() throws CoreException, JavaModelException", "signatureAfterChange": " \tpublic void testBug81084a() throws CoreException, JavaModelException", "diff": ["-\t\tICompilationUnit workingCopy = null;", "-\t\ttry {", "-\t\t\tworkingCopy = getWorkingCopy(\"/JavaSearchBugs/src/b81084a/Test.java\",", "-\t\t\t\t\"package b81084a;\\n\" + ", "-\t\t\t\t\"class List<E> {}\\n\" + ", "-\t\t\t\t\"public class Test {\\n\" + ", "-\t\t\t\t\"\tclass Element{}\\n\" + ", "-\t\t\t\t\"\tstatic class Inner {\\n\" + ", "-\t\t\t\t\"\t\tprivate final List<Element> fList1;\\n\" + ", "-\t\t\t\t\"\t\tprivate final List<Test.Element> fList2;\\n\" + ", "-\t\t\t\t\"\t\tpublic Inner(List<Element> list) {\\n\" + ", "-\t\t\t\t\"\t\t\tfList1 = list;\\n\" + ", "-\t\t\t\t\"\t\t\tfList2 = list;\\n\" + ", "-\t\t\t\t\"\t\t}\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"}\\n\"", "-\t\t\t\t);", "-\t\t\tIType type = workingCopy.getType(\"Test\").getType(\"Inner\");", "-\t\t\tIField field1 = type.getField(\"fList1\");", "-\t\t\tsearch(field1, REFERENCES);", "-\t\t\tIField field2 = type.getField(\"fList2\");", "-\t\t\tsearch(field2, REFERENCES);", "-\t\t\tassertSearchResults(", "-\t\t\t\t\"src/b81084a/Test.java b81084a.Test$Inner(List<Element>) [fList1] EXACT_MATCH\\n\" + ", "-\t\t\t\t\"src/b81084a/Test.java b81084a.Test$Inner(List<Element>) [fList2] EXACT_MATCH\",", "-\t\t\t\tthis.resultCollector);", "-\t\t}", "-\t\tfinally {", "-\t\t\tif (workingCopy != null)", "-\t\t\t\tworkingCopy.discardWorkingCopy();", "-\t\t}", "-\t}", "+\t\tworkingCopies = new ICompilationUnit[1];", "+\t\tworkingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b81084a/Test.java\",", "+\t\t\t\"package b81084a;\\n\" + ", "+\t\t\t\"class List<E> {}\\n\" + ", "+\t\t\t\"public class Test {\\n\" + ", "+\t\t\t\"\tclass Element{}\\n\" + ", "+\t\t\t\"\tstatic class Inner {\\n\" + ", "+\t\t\t\"\t\tprivate final List<Element> fList1;\\n\" + ", "+\t\t\t\"\t\tprivate final List<Test.Element> fList2;\\n\" + ", "+\t\t\t\"\t\tpublic Inner(List<Element> list) {\\n\" + ", "+\t\t\t\"\t\t\tfList1 = list;\\n\" + ", "+\t\t\t\"\t\t\tfList2 = list;\\n\" + ", "+\t\t\t\"\t\t}\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\\n\"", "+\t\t\t);", "+\t\tIType type = workingCopies[0].getType(\"Test\").getType(\"Inner\");", "+\t\tIField field1 = type.getField(\"fList1\");", "+\t\tsearch(field1, REFERENCES);", "+\t\tIField field2 = type.getField(\"fList2\");", "+\t\tsearch(field2, REFERENCES);", "+\t\t\t\"src/b81084a/Test.java b81084a.Test$Inner(List<Element>) [fList2] EXACT_MATCH\"", "+\t\t);", "+\t\t// keep working copies for next test", "+\t\tdiscard = false;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5962e802d32911f085794d06d6a3245", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tpublic void testBug81084b() throws CoreException, JavaModelException", "signatureAfterChange": " \tpublic void testBug81084b() throws CoreException, JavaModelException", "diff": ["-\t}", "-\tpublic void testBug81084b() throws CoreException, JavaModelException {", "-\t\tICompilationUnit workingCopy = null;", "-\t\ttry {", "-\t\t\tworkingCopy = getWorkingCopy(\"/JavaSearchBugs/src/b81084b/Test.java\",", "-\t\t\t\t\"package b81084b;\\n\" + ", "-\t\t\t\t\"class List<E> {}\\n\" + ", "-\t\t\t\t\"public class Test {\\n\" + ", "-\t\t\t\t\"\tclass Element{}\\n\" + ", "-\t\t\t\t\"\tstatic class Inner {\\n\" + ", "-\t\t\t\t\"\t\tprivate final List<? extends Element> fListb1;\\n\" + ", "-\t\t\t\t\"\t\tprivate final List<? extends Test.Element> fListb2;\\n\" + ", "-\t\t\t\t\"\t\tpublic Inner(List<Element> list) {\\n\" + ", "-\t\t\t\t\"\t\t\tfListb1 = list;\\n\" + ", "-\t\t\t\t\"\t\t\tfListb2 = list;\\n\" + ", "-\t\t\t\t\"\t\t}\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"}\\n\"", "-\t\t\t\t);", "-\t\t\tIType type = workingCopy.getType(\"Test\").getType(\"Inner\");", "-\t\t\tIField field1 = type.getField(\"fListb1\");", "-\t\t\tsearch(field1, REFERENCES);", "-\t\t\tIField field2 = type.getField(\"fListb2\");", "-\t\t\tsearch(field2, REFERENCES);", "-\t\t\tassertSearchResults(", "-\t\t\t\t\"src/b81084b/Test.java b81084b.Test$Inner(List<Element>) [fListb1] EXACT_MATCH\\n\" + ", "-\t\t\t\t\"src/b81084b/Test.java b81084b.Test$Inner(List<Element>) [fListb2] EXACT_MATCH\",", "-\t\t\t\tthis.resultCollector);", "-\t\t}", "-\t\tfinally {", "-\t\t\tif (workingCopy != null)", "-\t\t\t\tworkingCopy.discardWorkingCopy();", "-\t\t}", "-\t}", "+\t}", "+\tpublic void testBug81084b() throws CoreException, JavaModelException {", "+\t\tworkingCopies = new ICompilationUnit[1];", "+\t\tworkingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b81084b/Test.java\",", "+\t\t\t\"package b81084b;\\n\" + ", "+\t\t\t\"class List<E> {}\\n\" + ", "+\t\t\t\"public class Test {\\n\" + ", "+\t\t\t\"\tclass Element{}\\n\" + ", "+\t\t\t\"\tstatic class Inner {\\n\" + ", "+\t\t\t\"\t\tprivate final List<? extends Element> fListb1;\\n\" + ", "+\t\t\t\"\t\tprivate final List<? extends Test.Element> fListb2;\\n\" + ", "+\t\t\t\"\t\tpublic Inner(List<Element> list) {\\n\" + ", "+\t\t\t\"\t\t\tfListb1 = list;\\n\" + ", "+\t\t\t\"\t\t\tfListb2 = list;\\n\" + ", "+\t\t\t\"\t\t}\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\\n\"", "+\t\t\t);", "+\t\t// search element patterns", "+\t\tIType type = workingCopies[0].getType(\"Test\").getType(\"Inner\");", "+\t\tIField field1 = type.getField(\"fListb1\");", "+\t\tsearch(field1, REFERENCES);", "+\t\tIField field2 = type.getField(\"fListb2\");", "+\t\tsearch(field2, REFERENCES);", "+\t\tassertSearchResults(", "+\t\t\t\"src/b81084b/Test.java b81084b.Test$Inner(List<Element>) [fListb1] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/b81084b/Test.java b81084b.Test$Inner(List<Element>) [fListb2] EXACT_MATCH\"", "+\t\t);"]}], "num": 47768}