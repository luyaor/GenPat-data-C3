{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d8433509e92f9606dba56a4a63e34dea", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53354d33e40baa7d2eb4abd8716f9ebd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "3f665dc08ffa02e27b74efb0940c16f2120a11f8", "commitAfterChange": "307e2de84d078daed3099015a7ac89d980746b6b", "methodNumberBeforeChange": 1112, "methodNumberAfterChange": 1112, "signatureBeforeChange": " public void _test1084()", "signatureAfterChange": " public void test1084()", "diff": ["-public void _test1084() {", "+public void test1084() {", "-\t\t\"ERR\");", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\"\tZ<Y> l2 = (Z<Y>) l1;\\n\" + ", "+\t\t\"\t  ^\\n\" + ", "+\t\t\"Y is a raw type. References to generic type Y<T> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\"\tZ<Y> l2 = (Z<Y>) l1;\\n\" + ", "+\t\t\"\t          ^^^^^^^^^\\n\" + ", "+\t\t\"Cannot cast from Z<Y<?>> to Z<Y>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\"\tZ<Y> l2 = (Z<Y>) l1;\\n\" + ", "+\t\t\"\t             ^\\n\" + ", "+\t\t\"Y is a raw type. References to generic type Y<T> should be parameterized\\n\" + ", "+\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be289e72bfa3478b96ec6de6bff2c4cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/LambdaExpressionsTest.java", "commitBeforeChange": "9d104d945debc84d285485abce2b81da74ac98c5", "commitAfterChange": "55b8138a08d89b11e13e7b2e4131608d674ff549", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " public void _test425152()", "signatureAfterChange": " public void test425152()", "diff": ["-public void _test425152() {", "-\trunNegativeTest(", "+public void test425152() {", "+\trunConformTest(", "-\t\t\t\"X.java\",", "+\t\t\t\"Main.java\",", "-\t\t},", "-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 11)\\n\" + ", "-\t\t\"\tSet<Z> x = foo(Set::new);\\n\" + ", "-\t\t\"\t    ^\\n\" + ", "-\t\t\"Z cannot be resolved to a type\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 11)\\n\" + ", "-\t\t\"\tSet<Z> x = foo(Set::new);\\n\" + ", "-\t\t\"\t           ^^^^^^^^^^^^^\\n\" + ", "-\t\t\"Type mismatch: cannot convert from Collection<Object> to Set<Z>\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"3. ERROR in X.java (at line 11)\\n\" + ", "-\t\t\"\tSet<Z> x = foo(Set::new);\\n\" + ", "-\t\t\"\t               ^^^\\n\" + ", "-\t\t\"Cannot instantiate the type Set\\n\" + ", "-\t\t\"----------\\n\");", "+\t\t});"]}], "num": 7506}