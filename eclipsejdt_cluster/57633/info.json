{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "46826a52e9827f76dd1edccfffba47ca", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "906f22c8720d31f51f210002f2db481b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFileInfo.java", "commitBeforeChange": "35479e92cf76ddb81a077e36ac9bcdd2a30c6978", "commitAfterChange": "0a0c65dd1c0bd06d4f10a0a8165667bb0b6d1700", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " private void generateMethodInfos(IType type, IBinaryType typeInfo, HashMap newElements, ArrayList childrenHandles, ArrayList typeParameterHandles)", "signatureAfterChange": " private void generateMethodInfos(IType type, IBinaryType typeInfo, HashMap newElements, ArrayList childrenHandles, ArrayList typeParameterHandles)", "diff": ["+\t\tfinal boolean isConstructor = methodInfo.isConstructor();", "+\t\tboolean isEnum = false;", "+\t\ttry {", "+\t\t\tisEnum = type.isEnum();", "+\t\t} catch (JavaModelException e) {", "+\t\t\t// ignore", "+\t\t}", "+\t\tString[] pNames = null;", "+\t\t\tif (isEnum && isConstructor) {", "+\t\t\t\tpNames = Signature.getParameterTypes(new String(signature));", "+\t\t\t\tint length = pNames.length - 2;", "+\t\t\t\tSystem.arraycopy(pNames, 2, pNames = new String[length], 0, length);", "+\t\t\t}", "-\t\tfinal boolean isConstructor = methodInfo.isConstructor();", "-\t\tString[] pNames = null;", "-\t\t\tpNames = Signature.getParameterTypes(new String(signature));", "+\t\t\tif (!(isEnum && isConstructor && !useGenericSignature)) {", "+\t\t\t\tpNames = Signature.getParameterTypes(new String(signature));", "+\t\t\t}", "-\t\t\t\tif (type.isEnum()) {", "+\t\t\t\tif (isEnum) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c732e48e8a03e9648e29372c37ce070f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFileInfo.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " private void generateMethodInfos(IType type, IBinaryType typeInfo, HashMap newElements, ArrayList childrenHandles)", "signatureAfterChange": " private void generateMethodInfos(IType type, IBinaryType typeInfo, HashMap newElements, ArrayList childrenHandles)", "diff": ["-\t\tString[] pNames= Signature.getParameterTypes(new String(methodInfo.getMethodDescriptor()));", "+\t\tchar[] signature = methodInfo.getGenericSignature();", "+\t\tif (signature == null) signature = methodInfo.getMethodDescriptor();", "+\t\tString[] pNames = null;", "+\t\ttry {", "+\t\t\tpNames = Signature.getParameterTypes(new String(signature));", "+\t\t} catch (IllegalArgumentException e) {", "+\t\t\t// protect against malformed .class file (e.g. com/sun/crypto/provider/SunJCE_b.class has a 'a' generic signature)", "+\t\t\tsignature = methodInfo.getMethodDescriptor();", "+\t\t\tpNames = Signature.getParameterTypes(new String(signature));", "+\t\t}"]}], "num": 57633}