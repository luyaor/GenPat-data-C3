{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f6e23941cc293bc176bd966f3e4242d6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "148419949c656c7c00272b18bad528e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "cb586d1ec75e8da71f4da23a7a5eb911d6960b1c", "commitAfterChange": "543f951d6390669f9bed8c637d9d6aef509af249", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "signatureAfterChange": "  public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "diff": ["-\t\t\t\t\tenclosingTypeAt((this.bits & ASTNode.DepthMASK) >> ASTNode.DepthSHIFT)).addSyntheticMethod(codegenField, isReadAccess);", "+\t\t\t\t\tenclosingTypeAt((this.bits & ASTNode.DepthMASK) >> ASTNode.DepthSHIFT)).addSyntheticMethod(codegenField, isReadAccess, false /*not super access*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a912a787dd1b081822ed3bb123913da1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "543f951d6390669f9bed8c637d9d6aef509af249", "commitAfterChange": "aac32d052b463fcebfbd1f5deeece1cbb26b197a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-", "-\t\t\tthis.syntheticAccessor = ((SourceTypeBinding)codegenBinding.declaringClass).addSyntheticMethod(codegenBinding, isSuperAccess());", "+\t\t\tthis.syntheticAccessor = ((SourceTypeBinding)codegenBinding.declaringClass).addSyntheticMethod(codegenBinding, false /* not super access there */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbb51c6d91d6b858776313a21673a305", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "cb586d1ec75e8da71f4da23a7a5eb911d6960b1c", "commitAfterChange": "543f951d6390669f9bed8c637d9d6aef509af249", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public Object[] getEmulationPath(ReferenceBinding targetEnclosingType, boolean onlyExactMatch, boolean denyEnclosingArgInConstructorCall)", "signatureAfterChange": " public Object[] getEmulationPath(ReferenceBinding targetEnclosingType, boolean onlyExactMatch, boolean denyEnclosingArgInConstructorCall)", "diff": ["-\t\t\tpath[count++] = ((SourceTypeBinding) syntheticField.declaringClass).addSyntheticMethod(syntheticField, true);", "+\t\t\tpath[count++] = ((SourceTypeBinding) syntheticField.declaringClass).addSyntheticMethod(syntheticField, true/*read*/, false /*not super access*/);"]}], "num": 32774}