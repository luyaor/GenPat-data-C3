{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f2771131734f0045325620b7ed8bdb1", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2ce583d04306e9c62c7f00c5972db68", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests.java", "commitBeforeChange": "34106cbe5c11d866864bb97a52bcf55f920c9662", "commitAfterChange": "f08e2fcfb74b9a513988b6c92b3d0f1c94eb6ecf", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 42, "signatureBeforeChange": " public void testResolveMethodWithIncorrectParameter() throws JavaModelException", "signatureAfterChange": " public void testResolveMethodWithIncorrectParameter() throws JavaModelException", "diff": ["- */", "-public void testResolveMethodWithIncorrectParameter() throws JavaModelException {", "-\tICompilationUnit cu = getCompilationUnit(\"Resolve\", \"src\", \"\", \"ResolveMethodWithIncorrectParameter.java\");", "-\t", "-\tString source = cu.getSource();", "-\t", "-\tint start = source.indexOf(\"foo(\\\"String\");", "-\tint length = \"foo\".length();", "-\t", "-\tIJavaElement[] elements = cu.codeSelect(start, length);", "-\tassertTrue(\"should have one method of 'foo'\",", "-\t\telements.length == 1 &&", "-\t\telements[0].getElementName().equals(\"foo\") &&", "-\t\telements[0] instanceof IMethod);\t\t", "-}", "+ */", "+public void testResolveMethodWithIncorrectParameter() throws JavaModelException {", "+\tICompilationUnit cu = getCompilationUnit(\"Resolve\", \"src\", \"\", \"ResolveMethodWithIncorrectParameter.java\");", "+\t", "+\tString source = cu.getSource();", "+\t", "+\tint start = source.indexOf(\"foo(\\\"String\");", "+\tint length = \"foo\".length();", "+\t", "+\tIJavaElement[] elements = cu.codeSelect(start, length);", "+\tassertElementsEqual(", "+\t\t\"Unexpected elements\",", "+\t\t\"foo [in ResolveMethodWithIncorrectParameter [in ResolveMethodWithIncorrectParameter.java [in <default> [in src [in Resolve]]]]]\",", "+\t\telements", "+\t);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f810c1df1e8ccb79ab832afe1de318c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests.java", "commitBeforeChange": "34106cbe5c11d866864bb97a52bcf55f920c9662", "commitAfterChange": "f08e2fcfb74b9a513988b6c92b3d0f1c94eb6ecf", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 27, "signatureBeforeChange": " public void testResolveField() throws JavaModelException", "signatureAfterChange": " public void testResolveField() throws JavaModelException", "diff": ["- */", "-public void testResolveField() throws JavaModelException {", "-\tICompilationUnit cu = getCompilationUnit(\"Resolve\", \"src\", \"\", \"ResolveField.java\");", "-\t", "-\tString str = cu.getSource();", "-\tString selectAt = \"foo =\";", "-\tString selection = \"foo\";", "-\tint start = str.lastIndexOf(selectAt);", "-\tint length = selection.length();", "-\tIJavaElement[] elements = cu.codeSelect(start, length);", "-\t", "-\tassertTrue(\"should have one field of 'foo'\",", "-\t\t\telements.length == 1 &&", "-\t\t\telements[0].getElementName().equals(\"foo\") &&", "-\t\t\telements[0] instanceof IField);\t", "-}", "+ */", "+public void testResolveField() throws JavaModelException {", "+\tICompilationUnit cu = getCompilationUnit(\"Resolve\", \"src\", \"\", \"ResolveField.java\");", "+\t", "+\tString str = cu.getSource();", "+\tString selectAt = \"foo =\";", "+\tString selection = \"foo\";", "+\tint start = str.lastIndexOf(selectAt);", "+\tint length = selection.length();", "+\tIJavaElement[] elements = cu.codeSelect(start, length);", "+\t", "+\tassertElementsEqual(", "+\t\t\"Unexpected elements\",", "+\t\t\"foo [in ResolveField [in ResolveField.java [in <default> [in src [in Resolve]]]]]\",", "+\t\telements", "+\t);", "+}"]}], "num": 13132}