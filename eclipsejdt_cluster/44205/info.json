{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ea3ecb9c04fcd95ff86aa498fa646ad8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "072194160097b70f97ee395c3cf9cbf0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "2a6fc21e132c7337a2ad9e75a03356551f0e9060", "commitAfterChange": "2f8f6c0c9552d7ebf46ec13ce513e098823a7a4e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic String disassemble(IClassFileReader classFileReader, String lineSeparator)", "signatureAfterChange": " \tpublic String disassemble(IClassFileReader classFileReader, String lineSeparator)", "diff": ["+\t\tif (classFileReader == null) return EMPTY_OUTPUT;", "+\t\t", "+\t\t}", "+\t\tchar[] className = classFileReader.getClassName();", "+\t\tif (className == null) {", "+\t\t\t// incomplete initialization. We cannot go further.", "+\t\t\treturn buffer.toString();", "-\t\tdisassemble(classFileReader.getInnerClassesAttribute(), buffer, lineSeparator, 1);", "+\t\tIInnerClassesAttribute innerClassesAttribute = classFileReader.getInnerClassesAttribute();", "+\t\tif (innerClassesAttribute != null) {", "+\t\t\tdisassemble(innerClassesAttribute, buffer, lineSeparator, 1);", "+\t\t}", "+\t\twriteNewLine(buffer, lineSeparator, 0);", "+\t\tIClassFileAttribute[] attributes = classFileReader.getAttributes();", "+\t\tlength = attributes.length;", "+\t\tif (length != 0) {", "+\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\tIClassFileAttribute attribute = attributes[i];", "+\t\t\t\tif (attribute != innerClassesAttribute", "+\t\t\t\t\t&& attribute != sourceAttribute) {", "+\t\t\t\t\tdisassemble(attribute, buffer, lineSeparator, 0);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}\t\t", "+\t\twriteNewLine(buffer, lineSeparator, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "429b2c635b986b678598864de54e2340", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "e3ab7adcf5341254d66eeef47fc0727dbe42868f", "commitAfterChange": "8915ec2bb74e44419be85002d7c3a4c9f8582635", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tprivate void disassemble(ICodeAttribute codeAttribute, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "signatureAfterChange": " \t \tprivate void disassemble(ICodeAttribute codeAttribute, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "diff": ["-\t\tint exceptionTableLength = codeAttribute.getExceptionTableLength();", "+\t\tfinal int exceptionTableLength = codeAttribute.getExceptionTableLength();", "-\t\t\tIExceptionTableEntry[] exceptionTableEntries = codeAttribute.getExceptionTable();", "+\t\t\tfinal IExceptionTableEntry[] exceptionTableEntries = codeAttribute.getExceptionTable();", "-\t\tILineNumberAttribute lineNumberAttribute = codeAttribute.getLineNumberAttribute();", "-\t\tint lineAttributeLength = lineNumberAttribute == null ? 0 : lineNumberAttribute.getLineNumberTableLength();", "+\t\tfinal ILineNumberAttribute lineNumberAttribute = codeAttribute.getLineNumberAttribute();", "+\t\tfinal int lineAttributeLength = lineNumberAttribute == null ? 0 : lineNumberAttribute.getLineNumberTableLength();", "-\t\tILocalVariableAttribute localVariableAttribute = codeAttribute.getLocalVariableAttribute();", "-\t\tint localVariableAttributeLength = localVariableAttribute == null ? 0 : localVariableAttribute.getLocalVariableTableLength();", "+\t\tfinal ILocalVariableAttribute localVariableAttribute = codeAttribute.getLocalVariableAttribute();", "+\t\tfinal int localVariableAttributeLength = localVariableAttribute == null ? 0 : localVariableAttribute.getLocalVariableTableLength();", "-\t\tILocalVariableTypeTableAttribute localVariableTypeAttribute= getLocalVariableTypeAttribute(codeAttribute);", "-\t\tint localVariableTypeTableLength = localVariableTypeAttribute == null ? 0 : localVariableTypeAttribute.getLocalVariableTypeTableLength();", "+\t\tfinal ILocalVariableTypeTableAttribute localVariableTypeAttribute= (ILocalVariableTypeTableAttribute) getAttribute(IAttributeNamesConstants.LOCAL_VARIABLE_TYPE_TABLE, codeAttribute);", "+\t\tfinal int localVariableTypeTableLength = localVariableTypeAttribute == null ? 0 : localVariableTypeAttribute.getLocalVariableTypeTableLength();", "-\t\t} ", "+\t\t}", "+\t\tfinal int length = codeAttribute.getAttributesCount();", "+\t\tif (length != 0) {", "+\t\t\tIClassFileAttribute[] attributes = codeAttribute.getAttributes();", "+\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\tIClassFileAttribute attribute = attributes[i];", "+\t\t\t\tif (CharOperation.equals(attribute.getAttributeName(), IAttributeNamesConstants.STACK_MAP_TABLE)) {", "+\t\t\t\t\tdisassemble((StackMapTableAttribute) attribute, buffer, lineSeparator, tabNumber + 1);", "+\t\t\t\t} else if (attribute != lineNumberAttribute", "+\t\t\t\t\t\t&& attribute != localVariableAttribute", "+\t\t\t\t\t\t&& attribute != localVariableTypeAttribute) {", "+\t\t\t\t\tdisassemble(attribute, buffer, lineSeparator, tabNumber + 1);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}\t\t"]}], "num": 44205}