{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "026b808c410834ab930fc12f2a6d44d6", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1db74e564a4fb02dd9da4b343cc5b17c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "5c85e7570588f45bc28b317d5381f96243304903", "commitAfterChange": "e3af240dccc65542f2700248f6e576a65441a265", "methodNumberBeforeChange": 325, "methodNumberAfterChange": 325, "signatureBeforeChange": " \tpublic void test323()", "signatureAfterChange": " \tpublic void test323()", "diff": ["-\t\t\t\"Type safety: The expression of raw type G is converted to G<String>. References to generic type G<T> should be parameterized\\n\" + ", "+\t\t\t\"Type safety: The expression of type G is converted to G<String> using a raw conversion. References to generic type G<T> should be parameterized\\n\" + ", "-\t\t\t\"Type safety: The expression of raw type G.Member is converted to G<Thread>.Member. References to generic type G<T>.Member should be parameterized\\n\" + ", "+\t\t\t\"Type safety: The expression of type G.Member is converted to G<Thread>.Member using a raw conversion. References to generic type G<T>.Member should be parameterized\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6e10a3eaf49c38cea521973a95c36b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "5c85e7570588f45bc28b317d5381f96243304903", "commitAfterChange": "e3af240dccc65542f2700248f6e576a65441a265", "methodNumberBeforeChange": 170, "methodNumberAfterChange": 170, "signatureBeforeChange": "\t\t \tpublic void test168()", "signatureAfterChange": "\t\t \tpublic void test168()", "diff": ["-\t\t\t\t\"        AX<String, Thread> a = bar();\\n\" + ", "+\t\t\t\t\"        AX<String, Thread> a = bar();\\n\" + // TODO (philippe) should flag impossible to compute proper substitutes", "-\t\t\t\"\t                   ^\\n\" + // TODO (philippe) should instead flag impossible to compute proper substitutes", "+\t\t\t\"\t                   ^\\n\" + ", "-\t\t\t\"Type safety: The expression of raw type AX is converted to AX<AX<T,T>,U>. References to generic type AX<E,F> should be parameterized\\n\" + ", "+\t\t\t\"Type safety: The expression of type AX is converted to AX<AX<T,T>,U> using a raw conversion. References to generic type AX<E,F> should be parameterized\\n\" + "]}], "num": 39794}