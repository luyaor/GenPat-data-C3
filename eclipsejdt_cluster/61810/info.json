{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "550ebdd1317601a0de46a88490413b92", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68af23b241456bdcb5a262599464cfad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyTests.java", "commitBeforeChange": "847811aba616fe8ef974c21595a3a8f5a0b4a4ab", "commitAfterChange": "4dbfc96b81c8ea986466921f071c4e6377836a2c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void testChangeContentOfReadOnlyCU1() throws CoreException", "signatureAfterChange": " public void testChangeContentOfReadOnlyCU1() throws CoreException", "diff": ["+\tif (!Util.isReadOnlySupported()) {", "+\t\t// Do not test if file system does not support read-only attribute", "+\t\treturn;", "+\t}", "-\tboolean readOnlyFlag = isReadOnly(resource);", "+\tboolean readOnlyFlag = Util.isReadOnly(resource);", "-\t\tsetReadOnly(resource, true);", "+\t\tUtil.setReadOnly(resource, true);", "-\t\tsetReadOnly(resource, readOnlyFlag);", "+\t\tUtil.setReadOnly(resource, readOnlyFlag);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b5fe8e5d15aa3caa1479db93540beab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyTests.java", "commitBeforeChange": "847811aba616fe8ef974c21595a3a8f5a0b4a4ab", "commitAfterChange": "4dbfc96b81c8ea986466921f071c4e6377836a2c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void testChangeContentOfReadOnlyCU2() throws CoreException", "signatureAfterChange": " public void testChangeContentOfReadOnlyCU2() throws CoreException", "diff": ["+\tif (!Util.isReadOnlySupported()) {", "+\t\t// Do not test if file system does not support read-only attribute", "+\t\treturn;", "+\t}", "-\tboolean readOnlyFlag = isReadOnly(resource);", "+\tboolean readOnlyFlag = Util.isReadOnly(resource);", "-\t\tsetReadOnly(resource, true);", "+\t\tUtil.setReadOnly(resource, true);", "-\t\tsetReadOnly(resource, readOnlyFlag);", "+\t\tUtil.setReadOnly(resource, readOnlyFlag);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae82474d12418d75fe74511717b93170", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CopyMoveResourcesTests.java", "commitBeforeChange": "847811aba616fe8ef974c21595a3a8f5a0b4a4ab", "commitAfterChange": "4dbfc96b81c8ea986466921f071c4e6377836a2c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void testCopyCUReadOnly() throws CoreException", "signatureAfterChange": " public void testCopyCUReadOnly() throws CoreException", "diff": ["+\tif (!Util.isReadOnlySupported()) {", "+\t\t// Do not test if file system does not support read-only attribute", "+\t\treturn;", "+\t}", "-\t\tsetReadOnly(file, true);", "+\t\tUtil.setReadOnly(file, true);", "-\t\t\tsetReadOnly(file, false);", "+\t\t\tUtil.setReadOnly(file, false);", "-\t\t\tsetReadOnly(file2, false);", "+\t\t\tUtil.setReadOnly(file2, false);"]}], "num": 61810}