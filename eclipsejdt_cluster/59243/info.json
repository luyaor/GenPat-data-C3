{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f53c634ae537b4530ef4eed0526c520d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37af3fb1badfdf38e6d3f25ba8b8074a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "c99e3bd7df24eb7b0133eb18cfef3f12a0f60a4d", "commitAfterChange": "639c767e46ba1affc29fe53d2703bf4af137793b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic Compiler( \t\t\tINameEnvironment environment, \t\t\tIErrorHandlingPolicy policy, \t\t\tMap settings, \t\t\tfinal ICompilerRequestor requestor, \t\t\tIProblemFactory problemFactory, \t\t\tboolean statementsRecovery)", "signatureAfterChange": " \tpublic Compiler( \t\tINameEnvironment environment, \t\tIErrorHandlingPolicy policy, \t\tCompilerOptions options, \t\tfinal ICompilerRequestor requestor, \t\tIProblemFactory problemFactory)", "diff": ["-\t\t\tINameEnvironment environment,", "-\t\t\tIErrorHandlingPolicy policy,", "-\t\t\tMap settings,", "-\t\t\tfinal ICompilerRequestor requestor,", "-\t\t\tIProblemFactory problemFactory,", "-\t\t\tboolean statementsRecovery) {", "-\t\tthis(environment, policy, settings,\trequestor, problemFactory, ", "-\t\t\t\tnull, false, false, false, statementsRecovery); // all defaults", "+\t\tINameEnvironment environment,", "+\t\tIErrorHandlingPolicy policy,", "+\t\tCompilerOptions options,", "+\t\tfinal ICompilerRequestor requestor,", "+\t\tIProblemFactory problemFactory) {", "+\t\tthis(environment, policy, options, requestor, problemFactory, null); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6274278dacfa2b91eaedad923d92859", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetCompiler.java", "commitBeforeChange": "16486324218fad60934c025811e59187619168a1", "commitAfterChange": "6b27e4ec47f5e8fc929980b6a223bd25dd98d95d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic CodeSnippetCompiler( \t\tINameEnvironment environment, \t\tIErrorHandlingPolicy policy, \t\tCompilerOptions compilerOptions, \t\tICompilerRequestor requestor, \t\tIProblemFactory problemFactory, \t\tEvaluationContext evaluationContext, \t\tint codeSnippetStart, \t\tint codeSnippetEnd)", "signatureAfterChange": " \tpublic CodeSnippetCompiler(     \t\tINameEnvironment environment,     \t\tIErrorHandlingPolicy policy,     \t\tCompilerOptions compilerOptions,     \t\tICompilerRequestor requestor,     \t\tIProblemFactory problemFactory,     \t\tEvaluationContext evaluationContext,     \t\tint codeSnippetStart,     \t\tint codeSnippetEnd)", "diff": ["-\t\tINameEnvironment environment,", "-\t\tIErrorHandlingPolicy policy,", "-\t\tCompilerOptions compilerOptions,", "-\t\tICompilerRequestor requestor,", "-\t\tIProblemFactory problemFactory,", "-\t\tEvaluationContext evaluationContext,", "-\t\tint codeSnippetStart,", "-\t\tint codeSnippetEnd) {", "+    \t\tINameEnvironment environment,", "+    \t\tIErrorHandlingPolicy policy,", "+    \t\tCompilerOptions compilerOptions,", "+    \t\tICompilerRequestor requestor,", "+    \t\tIProblemFactory problemFactory,", "+    \t\tEvaluationContext evaluationContext,", "+    \t\tint codeSnippetStart,", "+    \t\tint codeSnippetEnd) {", "+\t\tthis.codeSnippetStart = codeSnippetStart;", "+\t\tthis.codeSnippetEnd = codeSnippetEnd;", "+\t\tthis.evaluationContext = evaluationContext;"]}], "num": 59243}