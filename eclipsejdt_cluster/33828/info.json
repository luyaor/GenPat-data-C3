{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fd495f7faa466c9e6f4fae3b504beaf9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b18045fd59c9485ab8272f8547273c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "1a0dc0ac3e33cbb594dc3b8ca78970e5922d2a33", "commitAfterChange": "a945fcd8cebafa62249918db0f5904366cbcf37e", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "  \tpublic Expression convert(MessageSend expression)", "signatureAfterChange": "  \tpublic Expression convert(MessageSend expression)", "diff": ["-\t\t\tif (expression.receiver instanceof MessageSend) {", "-\t\t\t\tqualifier = convert((MessageSend) expression.receiver);", "+\t\t\torg.eclipse.jdt.internal.compiler.ast.Expression receiver = expression.receiver;", "+\t\t\tif (receiver instanceof MessageSend) {", "+\t\t\t\tif ((receiver.bits & org.eclipse.jdt.internal.compiler.ast.ASTNode.ParenthesizedMASK) != 0) {", "+\t\t\t\t\tqualifier = convertToParenthesizedExpression(receiver);", "+\t\t\t\t} else {", "+\t\t\t\t\tqualifier = convert((MessageSend) receiver);", "+\t\t\t\t}", "-\t\t\t\tqualifier = convert(expression.receiver);", "+\t\t\t\tqualifier = convert(receiver);", "-\t\t\t\trecordNodes(qualifier, expression.receiver);", "+\t\t\t\trecordNodes(qualifier, receiver);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5290f46e7e907213e9b1ce64178803f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "ef26de670ead73cc3e16060217656a0a8919f1d5", "commitAfterChange": "9579b84ceaab0473eb674994db1f38b5ee7b5115", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \tprotected IJavaElementDelta[] filterRealDeltas(IJavaElementDelta[] deltas)", "signatureAfterChange": "\r \tprotected IJavaElementDelta[] filterRealDeltas(IJavaElementDelta[] deltas)", "diff": ["-\t\tIJavaElementDelta[] realDeltas = new IJavaElementDelta[deltas.length];\r", "+\t\tint length = deltas.length;\r", "+\t\tIJavaElementDelta[] realDeltas = null;\r", "-\t\tfor (int i = 0; i < deltas.length; i++) {\r", "-\t\t\tIJavaElementDelta delta = deltas[i];\r", "+\t\tfor (int i = 0; i < length; i++) {\r", "+\t\t\tJavaElementDelta delta = (JavaElementDelta)deltas[i];\r", "-\t\t\t\t|| delta.getKind() != IJavaElementDelta.CHANGED\r", "+\t\t\t\t|| delta.getKind() == IJavaElementDelta.ADDED\r", "+\t\t\t\t|| delta.getKind() == IJavaElementDelta.REMOVED\r", "-\t\t\t\t|| (delta.getFlags() & IJavaElementDelta.F_OPENED) != 0) {\r", "+\t\t\t\t|| (delta.getFlags() & IJavaElementDelta.F_OPENED) != 0\r", "+\t\t\t\t|| delta.resourceDeltasCounter > 0) {\r", "+\t\t\t\tif (realDeltas == null) {\r", "+\t\t\t\t\trealDeltas = new IJavaElementDelta[length];\r", "+\t\t\t\t}\r", "-\t\tIJavaElementDelta[] result = new IJavaElementDelta[index];\r", "-\t\tif (result.length > 0) {\r", "-\t\t\tSystem.arraycopy(realDeltas, 0, result, 0, result.length);\r", "+\t\tif (index > 0) {\r", "+\t\t\tIJavaElementDelta[] result = new IJavaElementDelta[index];\r", "+\t\t\tSystem.arraycopy(realDeltas, 0, result, 0, index);\r", "+\t\t\treturn result;\r", "+\t\t} else {\r", "+\t\t\treturn NO_DELTA;\r", "-\t\treturn result;\r"]}], "num": 33828}