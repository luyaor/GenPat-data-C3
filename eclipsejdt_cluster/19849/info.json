{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b42d54425908603c19fbe3b11d98d123", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b384ffdc5f293b1bece727169b4ae1b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "f4ae30ee64cb68925e4cce6d6bbe9028d7c3e161", "commitAfterChange": "0123af92e87cd6973f84900ca6492fde5723608b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " private int decodeElementValue(int offset)", "signatureAfterChange": " private int decodeElementValue(int offset)", "diff": ["-\t\t\treadOffset += decodeAnnotation(readOffset);", "+\t\t\treadOffset = decodeAnnotation(readOffset);", "-\t\t\t\treadOffset = decodeElementValueForJavaLangAnnotationTarget(readOffset);", "+\t\t\t\treadOffset = decodeElementValue(readOffset);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "803a69c6c8c1bacedfb793411e09e366", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "49221e1dedf80843e710093d67caabba63367062", "commitAfterChange": "26bd6002dbcadf28eb844a4d87a4d9f705c01741", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tprivate void findMemberTypes( \t\tchar[] typeName, \t\tReferenceBinding[] memberTypes, \t\tObjectVector typesFound, \t\tReferenceBinding receiverType, \t\tSourceTypeBinding invocationType, \t\tboolean staticOnly, \t\tboolean staticFieldsAndMethodOnly, \t\tboolean fromStaticImport, \t\tboolean checkQualification, \t\tScope scope)", "signatureAfterChange": " \tprivate void findMemberTypes( \t\tchar[] typeName, \t\tReferenceBinding[] memberTypes, \t\tObjectVector typesFound, \t\tReferenceBinding receiverType, \t\tSourceTypeBinding invocationType, \t\tboolean staticOnly, \t\tboolean staticFieldsAndMethodOnly, \t\tboolean fromStaticImport, \t\tboolean checkQualification, \t\tScope scope)", "diff": ["-\t\t\tif (memberType.isClass()) {", "+\t\t\tif (memberType.isAnnotationType()) {", "+\t\t\t\trelevance += computeRelevanceForAnnotation();", "+\t\t\t\trelevance += computeRelevanceForAnnotationTarget(memberType);", "+\t\t\t} else if (memberType.isClass()) {"]}], "num": 19849}