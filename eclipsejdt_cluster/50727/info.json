{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "20510d22b6e9e896930cd8392ebb7f49", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b93f17b496718100380f51ddb02f818", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceSearchTests.java", "commitBeforeChange": "27eb09c903e84c44cba8d330978f2df5010fd35c", "commitAfterChange": "1fb602b75e740fee79145d5e2e5fdf04a9fb5ee8", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic void testIndexing() throws CoreException", "signatureAfterChange": " \tpublic void testIndexing() throws CoreException", "diff": ["-\t\t// Measures", "-\t\tint measures = false ? MEASURES_COUNT/2 : 1;", "-\t\tfor (int i=0; i<measures; i++) {", "+\t\t// Remove project previous indexing", "+\t\tINDEX_MANAGER.removeIndexFamily(new Path(\"\"));", "+\t\tINDEX_MANAGER.reset();", "-\t\t\t// Remove project previous indexing", "-\t\t\tINDEX_MANAGER.removeIndexFamily(new Path(\"\"));", "-\t\t\tINDEX_MANAGER.reset();", "+\t\t// Clean memory", "+\t\trunGc();", "-\t\t\t// Clean memory", "-\t\t\trunGc();", "-", "-\t\t\t// Restart brand new indexing", "-\t\t\tINDEX_MANAGER.request(new Measuring(true/*start measuring*/));", "-\t\t\tfor (int j=0, length=ALL_PROJECTS.length; j<length; j++) {", "-\t\t\t\tINDEX_MANAGER.indexAll(ALL_PROJECTS[j].getProject());", "-\t\t\t}", "-\t\t\tAbstractJavaModelTests.waitUntilIndexesReady();", "-", "-\t\t\t// end measure", "-\t\t\tINDEX_MANAGER.request(new Measuring(false /*end measuring*/));", "-\t\t\tAbstractJavaModelTests.waitUntilIndexesReady();", "+\t\t// Restart brand new indexing", "+\t\tINDEX_MANAGER.request(new Measuring(true/*start measuring*/));", "+\t\tfor (int j=0, length=ALL_PROJECTS.length; j<length; j++) {", "+\t\t\tINDEX_MANAGER.indexAll(ALL_PROJECTS[j].getProject());", "+\t\tAbstractJavaModelTests.waitUntilIndexesReady();", "+", "+\t\t// end measure", "+\t\tINDEX_MANAGER.request(new Measuring(false /*end measuring*/));", "+\t\tAbstractJavaModelTests.waitUntilIndexesReady();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e008a24c0cd365c57b5ebc6b9d307e5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor2.java", "commitBeforeChange": "c9b530e01318c4f59e9e7828de1da4c97f8fe89e", "commitAfterChange": "69656daba7331091b482d7c6b3e675c144730396", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  \tpublic boolean visit(ArrayType node)", "signatureAfterChange": "  \tpublic boolean visit(ArrayType node)", "diff": ["-\t\tfinal int dimensions = node.getDimensions();", "-\t\tif (dimensions != 0) {", "-\t\t\tif (this.preferences.insert_space_before_opening_bracket_in_array_type_reference) {", "-\t\t\t\tthis.scribe.space();", "-\t\t\t}", "-\t\t\tfor (int i = 0; i < dimensions; i++) {", "-\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLBRACKET);", "-\t\t\t\tif (this.preferences.insert_space_between_brackets_in_array_type_reference) {", "-\t\t\t\t\tthis.scribe.space();", "-\t\t\t\t}", "-\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET);", "-\t\t\t}", "+\t\tif (this.preferences.insert_space_before_opening_bracket_in_array_type_reference) {", "+\t\t\tthis.scribe.space();", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLBRACKET);", "+\t\tif (this.preferences.insert_space_between_brackets_in_array_type_reference) {", "+\t\t\tthis.scribe.space();", "+\t\t}", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET);"]}], "num": 50727}