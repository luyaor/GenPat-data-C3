{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6dc2a4d7e4ce42ceb6a3c309ef6cb01a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5157fa17e3a8c156234401faf102367e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "afae5ec0c1e6fe82c8553a9480b7bba01ac56f61", "commitAfterChange": "567b9446b3323f99231b5c6438b186ba7014e61e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprivate void complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope)", "signatureAfterChange": "  \tprivate void complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope)", "diff": ["-\t\t\t\t\t\t\t\t\t\tfindKeywords(completionToken, new char[][]{Keywords.THIS});", "+\t\t\t\t\t\t\t\t\t\tif(completionToken.length > 0) {", "+\t\t\t\t\t\t\t\t\t\t\tfindKeywords(completionToken, new char[][]{Keywords.THIS});", "+\t\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\t\tint relevance = computeBaseRelevance();", "+\t\t\t\t\t\t\t\t\t\t\trelevance += computeRelevanceForInterestingProposal();", "+\t\t\t\t\t\t\t\t\t\t\trelevance += computeRelevanceForCaseMatching(completionToken, Keywords.THIS);", "+\t\t\t\t\t\t\t\t\t\t\tnoProposal = false;", "+\t\t\t\t\t\t\t\t\t\t\trequestor.acceptKeyword(Keywords.THIS, startPosition - offset, endPosition - offset,relevance);", "+\t\t\t\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d2b8c3b1c422d4d6972843ec39df681", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "174f89aae07a92e58011875516697182fd7f3ebd", "commitAfterChange": "32d92c75e213c7276019a1d5b0a473480fced46d", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "\r \r \tprivate void findTypesAndPackages(char[] token, Scope scope)", "signatureAfterChange": "\r \r \tprivate void findTypesAndPackages(char[] token, Scope scope)", "diff": ["-\t\t\t\tSourceTypeBinding sourceType = types[i];\r", "+\t\t\t\tSourceTypeBinding sourceType = types[i]; \r", "-\t\t\t\tif (typeLength > sourceType.sourceName.length)\r", "-\t\t\t\t\tcontinue;\r", "+\t\t\t\tif (typeLength > sourceType.sourceName.length)\tcontinue;\r", "+\t\t\t\t\r", "+\t\t\t\tif (!CharOperation.prefixEquals(token, sourceType.sourceName, false))\tcontinue;\r", "-\t\t\t\tif (!CharOperation.prefixEquals(token, sourceType.sourceName, false\r", "-\t\t\t\t\t/* ignore case */\r", "-\t\t\t\t\t))\r", "-\t\t\t\t\tcontinue;\r", "-\r", "-\t\t\t\trequestor.acceptType(\r", "-\t\t\t\t\tsourceType.qualifiedPackageName(),\r", "-\t\t\t\t\tsourceType.sourceName(),\r", "-\t\t\t\t\tsourceType.sourceName(),\r", "-\t\t\t\t\tstartPosition - offset,\r", "-\t\t\t\t\tendPosition - offset);\r", "+\t\t\t\tif (sourceType.isClass()){\r", "+\t\t\t\t\trequestor.acceptClass(\r", "+\t\t\t\t\t\tsourceType.qualifiedPackageName(),\r", "+\t\t\t\t\t\tsourceType.sourceName(),\r", "+\t\t\t\t\t\tsourceType.sourceName(),\r", "+\t\t\t\t\t\tsourceType.modifiers,\r", "+\t\t\t\t\t\tstartPosition - offset, \r", "+\t\t\t\t\t\tendPosition - offset);\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\trequestor.acceptInterface(\r", "+\t\t\t\t\t\tsourceType.qualifiedPackageName(),\r", "+\t\t\t\t\t\tsourceType.sourceName(),\r", "+\t\t\t\t\t\tsourceType.sourceName(),\r", "+\t\t\t\t\t\tsourceType.modifiers,\r", "+\t\t\t\t\t\tstartPosition - offset,\r", "+\t\t\t\t\t\tendPosition - offset);\r", "+\t\t\t\t}\r"]}], "num": 33497}