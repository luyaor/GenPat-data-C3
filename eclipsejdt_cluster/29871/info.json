{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f5e905ac04190efe7e56965eadf5ab83", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ec1268dc8c6a9c8df830d1d04019b16", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "160613f931d3107092c23ec0bbf5c709e81be6c4", "commitAfterChange": "4b4dbca0bb97a8d7d91d56de2e2d0246704ead9c", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 133, "signatureBeforeChange": " \tpublic void _invokespecial(int pc, int index, IConstantPoolEntry constantMethodref)", "signatureAfterChange": " \tpublic void _invokespecial(int pc, int index, IConstantPoolEntry constantMethodref)", "diff": ["-\t\tbuffer", "-\t\t\t.append(Util.bind(\"classformat.invokespecial\", //$NON-NLS-1$", "+\t\tif (isCompact()) {", "+\t\t\tbuffer.append(Util.bind(\"classformat.invokespecial.compact\", //$NON-NLS-1$", "+\t\t\t\tnew String[] {", "+\t\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.INVOKESPECIAL],", "+\t\t\t\t\tInteger.toString(index),", "+\t\t\t\t\tUtil.toString(", "+\t\t\t\t\t\tconstantMethodref.getClassName(),", "+\t\t\t\t\t\tconstantMethodref.getMethodName(),", "+\t\t\t\t\t\tconstantMethodref.getMethodDescriptor(),", "+\t\t\t\t\t\ttrue)", "+\t\t\t\t}));", "+\t\t} else {", "+\t\t\tbuffer.append(Util.bind(\"classformat.invokespecial\", //$NON-NLS-1$", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "498d72e41b9e72e013d631da87cbbf85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "160613f931d3107092c23ec0bbf5c709e81be6c4", "commitAfterChange": "4b4dbca0bb97a8d7d91d56de2e2d0246704ead9c", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 132, "signatureBeforeChange": " \tpublic void _invokeinterface( \t\tint pc, \t\tint index, \t\tbyte nargs, \t\tIConstantPoolEntry constantInterfaceMethodref)", "signatureAfterChange": " \tpublic void _invokeinterface( \t\tint pc, \t\tint index, \t\tbyte nargs, \t\tIConstantPoolEntry constantInterfaceMethodref)", "diff": ["-\t\tbuffer", "-\t\t.append(Util.bind(\"classformat.invokeinterface\", //$NON-NLS-1$", "-\t\t\tnew String[] {", "-\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.INVOKEINTERFACE],", "-\t\t\t\tInteger.toString(index),", "-\t\t\t\tInteger.toString(nargs),", "-\t\t\t\treturnDeclaringClassName(constantInterfaceMethodref),", "-\t\t\t\tnew String(constantInterfaceMethodref.getMethodName()),", "-\t\t\t\tnew String(constantInterfaceMethodref.getMethodDescriptor()),", "-\t\t}));", "+\t\tif (isCompact()) {", "+\t\t\tbuffer.append(Util.bind(\"classformat.invokeinterface.compact\", //$NON-NLS-1$", "+\t\t\t\tnew String[] {", "+\t\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.INVOKEINTERFACE],", "+\t\t\t\t\tInteger.toString(index),", "+\t\t\t\t\tInteger.toString(nargs),", "+\t\t\t\t\tUtil.toString(", "+\t\t\t\t\t\tconstantInterfaceMethodref.getClassName(),", "+\t\t\t\t\t\tconstantInterfaceMethodref.getMethodName(),", "+\t\t\t\t\t\tconstantInterfaceMethodref.getMethodDescriptor(),", "+\t\t\t\t\t\ttrue)", "+\t\t\t\t}));", "+\t\t} else {", "+\t\t\tbuffer.append(Util.bind(\"classformat.invokeinterface\", //$NON-NLS-1$", "+\t\t\t\tnew String[] {", "+\t\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.INVOKEINTERFACE],", "+\t\t\t\t\tInteger.toString(index),", "+\t\t\t\t\tInteger.toString(nargs),", "+\t\t\t\t\treturnDeclaringClassName(constantInterfaceMethodref),", "+\t\t\t\t\tnew String(constantInterfaceMethodref.getMethodName()),", "+\t\t\t\t\tnew String(constantInterfaceMethodref.getMethodDescriptor()),", "+\t\t\t}));", "+\t\t}"]}], "num": 29871}