{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c6b0423632c4d38e19de000b2171442c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c477fa73e0d6eae42d1548d215c68c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ClasspathSourceDirectory.java", "commitBeforeChange": "029a8f257514071d898cccd4122bad881aa576bc", "commitAfterChange": "89f5de86dbcff10e0a2f2dafa846f8c01996e885", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public NameEnvironmentAnswer findClass(String sourceFileWithoutExtension, String qualifiedPackageName, String qualifiedSourceFileWithoutExtension)", "signatureAfterChange": "   public NameEnvironmentAnswer findClass(String sourceFileWithoutExtension, String qualifiedPackageName, String qualifiedSourceFileWithoutExtension)", "diff": ["-\t", "-\tString sourceFolderPath = this.sourceFolder.getFullPath().toString() + IPath.SEPARATOR;", "-\tchar[][] javaLikeExtensions = Util.getJavaLikeExtensions();", "-\tfor (int i = 0, length = javaLikeExtensions.length; i < length; i++) {", "-\t\tString extension = '.' + new String(javaLikeExtensions[i]);", "-\t\tString sourceFileName = sourceFileWithoutExtension + extension;", "-\t\tif (!doesFileExist(sourceFileName, qualifiedPackageName)) continue; // most common case", "-\t", "-\t\tString qualifiedSourceFileName = qualifiedSourceFileWithoutExtension + extension;", "-\t\tif (org.eclipse.jdt.internal.compiler.util.Util.isExcluded((sourceFolderPath + qualifiedSourceFileName).toCharArray(), this.fulInclusionPatternChars, this.fullExclusionPatternChars, false/*not a folder path*/))", "-\t\t\tcontinue;", "-\t\tIPath path = new Path(qualifiedSourceFileName);", "-\t\tIFile file = this.sourceFolder.getFile(path);", "-\t\treturn new NameEnvironmentAnswer(new ResourceCompilationUnit(file), null /* no access restriction */);", "+\tSimpleLookupTable dirTable = directoryTable(qualifiedPackageName);", "+\tif (dirTable != null && dirTable.elementSize > 0) {", "+\t\tIFile file = (IFile) dirTable.get(sourceFileWithoutExtension);", "+\t\tif (file != null) {", "+\t\t\treturn new NameEnvironmentAnswer(new ResourceCompilationUnit(file), null /* no access restriction */);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f844d9f643eced1ed0c4f069306bd6e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ClasspathSourceDirectory.java", "commitBeforeChange": "fe905e29a608f61f2afe181f4c1e4e27bb2b95dc", "commitAfterChange": "53a7cfa9bf2a3a1ade921d716dbdc58a4bfc35d4", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public NameEnvironmentAnswer findClass(String sourceFileName, String qualifiedPackageName, String qualifiedSourceFileName)", "signatureAfterChange": "   public NameEnvironmentAnswer findClass(String sourceFileWithoutExtension, String qualifiedPackageName, String qualifiedSourceFileWithoutExtension)", "diff": ["-public NameEnvironmentAnswer findClass(String sourceFileName, String qualifiedPackageName, String qualifiedSourceFileName) {", "-\tif (!doesFileExist(sourceFileName, qualifiedPackageName)) return null; // most common case", "-", "-\tString fullSourcePath = this.sourceLocation + qualifiedSourceFileName;", "-\tIPath path = new Path(qualifiedSourceFileName);", "-\tIFile file = this.sourceFolder.getFile(path);", "-\tString fileEncoding = this.encoding;", "-\ttry {", "-\t\tfileEncoding = file.getCharset();", "+public NameEnvironmentAnswer findClass(String sourceFileWithoutExtension, String qualifiedPackageName, String qualifiedSourceFileWithoutExtension) {", "+\t", "+\tfor (int i = 0, length = Util.JAVA_LIKE_EXTENSIONS.length; i < length; i++) {", "+\t\tString extension = new String(Util.JAVA_LIKE_EXTENSIONS[i]);", "+\t\tString sourceFileName = sourceFileWithoutExtension + extension;", "+\t\tif (!doesFileExist(sourceFileName, qualifiedPackageName)) continue; // most common case", "+\t", "+\t\tString qualifiedSourceFileName = qualifiedSourceFileWithoutExtension + extension;", "+\t\tString fullSourcePath = this.sourceLocation + qualifiedSourceFileName;", "+\t\tIPath path = new Path(qualifiedSourceFileName);", "+\t\tIFile file = this.sourceFolder.getFile(path);", "+\t\tString fileEncoding = this.encoding;", "+\t\ttry {", "+\t\t\tfileEncoding = file.getCharset();", "+\t\t}", "+\t\tcatch (CoreException ce) {", "+\t\t\t// let use default encoding", "+\t\t}", "+\t\treturn new NameEnvironmentAnswer(new CompilationUnit(null, fullSourcePath, fileEncoding));", "-\tcatch (CoreException ce) {", "-\t\t// let use default encoding", "-\t}", "-\treturn new NameEnvironmentAnswer(new CompilationUnit(null, fullSourcePath, fileEncoding));", "+\treturn null;"]}], "num": 8152}