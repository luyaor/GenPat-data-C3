{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "67d2e0b2316907a9b0fb52cd8f6e3ab8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "403ed8cddd628cd89d0b82e88d9def27", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "e914ff2196f00fd15aeda854332ebec940816655", "commitAfterChange": "5d1bfc5f6d4f971e861e48e257b8f174ae974443", "methodNumberBeforeChange": 211, "methodNumberAfterChange": 210, "signatureBeforeChange": "  \tprivate String returnConstantClassName(IConstantPoolEntry constantClass)", "signatureAfterChange": "  \tprivate String returnConstantClassName(IConstantPoolEntry constantClass)", "diff": ["-\t\tchar[] classInfoName = constantClass.getClassInfoName();", "-\t\treturn returnClassName(classInfoName);", "+\t\tchar[] className = constantClass.getClassInfoName();", "+\t\tif (className.length == 0) {", "+\t\t\treturn EMPTY_CLASS_NAME;", "+\t\t}", "+\t\tswitch(className[0]) {", "+\t\t\tcase '[' :", "+\t\t\t\tStringBuffer classNameBuffer = new StringBuffer();", "+\t\t\t\tUtil.appendTypeSignature(className, 0, classNameBuffer, isCompact());", "+\t\t\t\treturn classNameBuffer.toString();", "+\t\t\tdefault:", "+\t\t\t\treturn returnClassName(className);\t", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4e7363381006e4597968d647e67aac9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "3dc1bc05d190d32f0485aff7f7ba0e75f5ac20a4", "commitAfterChange": "c9c27c9ebff380d212b738c2eaa48c5625675e13", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  protected boolean findSourceFiles(IResourceDelta sourceDelta, ClasspathMultiDirectory md, int segmentCount) throws CoreException", "signatureAfterChange": "  protected boolean findSourceFiles(IResourceDelta sourceDelta, ClasspathMultiDirectory md, int segmentCount) throws CoreException", "diff": ["-\t\t\t\t\t\t// add dependents even when the package thinks it exists to be on the safe side", "-\t\t\t\t\t\tif (JavaBuilder.DEBUG)", "-\t\t\t\t\t\t\tSystem.out.println(\"Found added package \" + addedPackagePath); //$NON-NLS-1$", "-\t\t\t\t\t\taddDependentsOf(addedPackagePath, true);", "+\t\t\t\t\t\t// see if any known source file is from the same package... classpath already includes new package", "+\t\t\t\t\t\tif (sourceLocations.length > 1 && newState.isKnownPackage(addedPackagePath.toString())) {", "+\t\t\t\t\t\t\tif (JavaBuilder.DEBUG)", "+\t\t\t\t\t\t\t\tSystem.out.println(\"Skipped dependents of added package \" + addedPackagePath); //$NON-NLS-1$", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tif (JavaBuilder.DEBUG)", "+\t\t\t\t\t\t\t\tSystem.out.println(\"Found added package \" + addedPackagePath); //$NON-NLS-1$", "+\t\t\t\t\t\t\taddDependentsOf(addedPackagePath, true);", "+\t\t\t\t\t\t}"]}], "num": 39930}