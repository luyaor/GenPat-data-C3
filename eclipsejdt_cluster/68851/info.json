{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b12f94584c978c909a163a2c7a4ef848", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "059610868fa88288a5820fa0397237e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/UnresolvedReferenceBinding.java", "commitBeforeChange": "7ba9ff29fe6b05ec0a2f58eaa1f5d3e68bb11101", "commitAfterChange": "427a01e331e57852efc472cca3a8360bd121fda9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": " ReferenceBinding resolve(LookupEnvironment environment, boolean convertGenericToRawType)", "signatureAfterChange": " ReferenceBinding resolve(LookupEnvironment environment, boolean convertGenericToRawType)", "diff": ["-\t\tif (targetType == this) {", "+\t\tif (targetType == this || targetType == this.original) {", "+\t\t} else if (!(targetType instanceof UnresolvedReferenceBinding)) {", "+\t\t\t// for a clone pre-populated with tagBits wrap the resolved type in an annotated type", "+\t\t\t// (represented by a ParameterizedTypeBinding):", "+\t\t\tlong nullTagBits = this.tagBits & TagBits.AnnotationNullMASK;", "+\t\t\tif (nullTagBits != 0L)", "+\t\t\t\ttargetType = environment.createAnnotatedType(targetType, nullTagBits);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "851c3dfc0a75ec768477420de545b923", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/UnresolvedReferenceBinding.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " ReferenceBinding resolve(LookupEnvironment environment, boolean convertGenericToRawType)", "signatureAfterChange": " ReferenceBinding resolve(LookupEnvironment environment, boolean convertGenericToRawType)", "diff": ["+\tif (this != this.prototype) {", "+\t\tthis.prototype.resolve(environment, convertGenericToRawType);", "+\t\treturn this.resolvedType;", "+\t}", "-\t\tif (targetType == this || targetType == this.original) {", "+\t\tif (targetType == this) {", "-\t\t} else if (!(targetType instanceof UnresolvedReferenceBinding)) {", "-\t\t\t// for a clone pre-populated with tagBits wrap the resolved type in an annotated type", "-\t\t\t// (represented by a ParameterizedTypeBinding):", "-\t\t\tlong nullTagBits = this.tagBits & TagBits.AnnotationNullMASK;", "-\t\t\tif (nullTagBits != 0L)", "-\t\t\t\ttargetType = (ReferenceBinding) environment.createAnnotatedType(targetType, nullTagBits);"]}], "num": 68851}