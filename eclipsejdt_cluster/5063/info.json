{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f15d10f1f7638366169184b60bd9e347", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b21c799fc5f7a731b02c439aac3825a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "ffdd14ea5f0ceece78d1001d8bc0aa539dc6768a", "commitAfterChange": "460eda6681a698a635f7c9b999cd9cdff2451581", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " protected void purgeMethodStatements(TypeDeclaration type, boolean checkEachMethod)", "signatureAfterChange": " protected void purgeMethodStatements(TypeDeclaration type, boolean checkEachMethod)", "diff": ["-\t\t\tfor (int j = 0, k = methods.length; j < k; j++) {", "+\t\t\tfor (int j = 0, length = methods.length; j < length; j++) {", "-\t\t\t\tif (!this.currentPossibleMatch.nodeSet.hasPossibleNodes(method.declarationSourceStart, method.declarationSourceEnd))", "+\t\t\t\tif (!this.currentPossibleMatch.nodeSet.hasPossibleNodes(method.declarationSourceStart, method.declarationSourceEnd)) {", "+\t\t\t\t\tmethod.javadoc = null;", "+\t\t\t\t}", "-\t\t\tfor (int j = 0, k = methods.length; j < k; j++)", "+\t\t\tfor (int j = 0, length = methods.length; j < length; j++) {", "+\t\t\t\tmethods[j].javadoc = null;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd58032852cc032deb3b34c836cde485", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/BuildNotifier.java", "commitBeforeChange": "1146476ca138da09c36a16ea64250a150f60b014", "commitAfterChange": "e3d3c02cc33fd5166184422215f4903c5a405e0f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " protected void updateProblemCounts(IMarker[] oldProblems, IProblem[] newProblems)", "signatureAfterChange": " protected void updateProblemCounts(IMarker[] oldProblems, IProblem[] newProblems)", "diff": ["-\t\tnext : for (int i = 0, newSize = newProblems.length; i < newSize; ++i) {", "+\t\tnext : for (int i = 0, l = newProblems.length; i < l; i++) {", "-\t\t\t\tfor (int j = 0, oldSize = oldProblems.length; j < oldSize; ++j) {", "+\t\t\t\tfor (int j = 0, m = oldProblems.length; j < m; j++) {", "-\t\tnext : for (int i = 0, oldSize = oldProblems.length; i < oldSize; ++i) {", "+\t\tnext : for (int i = 0, l = oldProblems.length; i < l; i++) {", "-\t\t\t\tfor (int j = 0, newSize = newProblems.length; j < newSize; ++j) {", "+\t\t\t\tfor (int j = 0, m = newProblems.length; j < m; j++) {"]}], "num": 5063}