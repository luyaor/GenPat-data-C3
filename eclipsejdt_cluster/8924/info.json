{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4eea1a7ec6a3c7221fa11ef9bacc6a86", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "279e97af3fa33e49c077e0898083bddb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "490cc39003ba5daaddf4fdf25c1c4ad52d071fa8", "commitAfterChange": "63cc2b02a5dc2c73f3b525966213744b7c2edcf0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tprotected Openable createElement(IResource resource, int elementType, IJavaProject project)", "signatureAfterChange": " \tprotected Openable createElement(IResource resource, int elementType, IJavaProject project)", "diff": ["-\t\t\t\t\telement = JavaModelManager.getJavaModelManager().create(resource, project);", "+\t\t\t\t\telement = JavaModelManager.create(resource, project);", "-\t\t\t\t\t\telement = JavaModelManager.getJavaModelManager().create(resource, project);", "+\t\t\t\t\t\telement = JavaModelManager.create(resource, project);", "-\t\t\t\t\telement = element = JavaModelManager.getJavaModelManager().create(resource, project);", "+\t\t\t\t\telement = element = JavaModelManager.create(resource, project);", "-\t\t\t\t\t\telement = JavaModelManager.getJavaModelManager().create(resource, project);", "+\t\t\t\t\t\telement = JavaModelManager.create(resource, project);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2aff8cb950ef831245a9e2df763a83b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "ba7b5322db3ca831ddf2955168e308265a30635f", "commitAfterChange": "b8efcec7d38641bbe45122068ae9249137e0e2fb", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tprotected void setRawClasspath0(IClasspathEntry[] rawEntries) \t\tthrows JavaModelException", "signatureAfterChange": " \t \tpublic JavaModelManager.PerProjectInfo getPerProjectInfo() throws JavaModelException", "diff": ["+\tpublic JavaModelManager.PerProjectInfo getPerProjectInfo() throws JavaModelException {", "+\t\treturn JavaModelManager.getJavaModelManager().getPerProjectInfoCheckExistence(fProject);", "+\t}", "-\t */", "-\tprotected void setRawClasspath0(IClasspathEntry[] rawEntries)", "-\t\tthrows JavaModelException {", "-", "-\t\tJavaModelManager.PerProjectInfo info = JavaModelManager.getJavaModelManager().getPerProjectInfoCheckExistence(fProject);", "-\t", "-\t\tsynchronized (info) {", "-\t\t\tif (rawEntries != null) {", "-\t\t\t\tinfo.classpath = rawEntries;", "-\t\t\t}", "-\t\t\t", "-\t\t\t// clear cache of resolved classpath", "-\t\t\tinfo.lastResolvedClasspath = null;", "-\t\t\tinfo.resolvedPathToRawEntries = null;", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46fba36b8deab6bc09f796b86acd0d08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "454c09645419e42e424c8ed7d147ba861f3f0f93", "commitAfterChange": "9d8ef2fe9a94d29d41ecb29dff07f3d9ede1a855", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError) \t\tthrows JavaModelException", "diff": ["-\t\tJavaModelManager.PerProjectInfo info = getJavaModelManager().getPerProjectInfoCheckExistence(fProject);", "+\t\tJavaModelManager.PerProjectInfo perProjectInfo = getJavaModelManager().getPerProjectInfoCheckExistence(fProject);", "-\t\t\t// resolved path is cached on its info", "-\t\t\tIClasspathEntry[] infoPath = info.lastResolvedClasspath;", "+\t\t\t// resolved path is cached on its perProjectInfo", "+\t\t\tIClasspathEntry[] infoPath = perProjectInfo.lastResolvedClasspath;", "-\t\tinfo.lastResolvedClasspath = resolvedPath;", "+\t\tperProjectInfo.lastResolvedClasspath = resolvedPath;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "670c3a3fd3df63f1562113fd451e5467", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "465181f1f61b658b5c010a5efd2a11b469b6f094", "commitAfterChange": "96da9a04d9ec9dc1f22c7aed0a42a67c5851c653", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError) \t\tthrows JavaModelException", "diff": ["-\t\tJavaProjectElementInfo projectInfo;", "-\t\tif (this.isOpen()){", "-\t\t\tprojectInfo = getJavaProjectElementInfo();", "-\t\t} else {", "-\t\t\t// avoid populating the model for only retrieving the resolved classpath (13395)", "-\t\t\tprojectInfo = null;", "-\t\t}", "+\t\tJavaModelManager.PerProjectInfo info = getJavaModelManager().getPerProjectInfoCheckExistence(fProject);", "-\t\tif (ignoreUnresolvedEntry && !generateMarkerOnError && projectInfo != null){", "+\t\tif (ignoreUnresolvedEntry && !generateMarkerOnError){", "-\t\t\tIClasspathEntry[] infoPath = projectInfo.lastResolvedClasspath;", "+\t\t\tIClasspathEntry[] infoPath = info.lastResolvedClasspath;", "-\t\tif (projectInfo != null){", "-\t\t\tprojectInfo.lastResolvedClasspath = resolvedPath;", "-\t\t}", "+\t\tinfo.lastResolvedClasspath = resolvedPath;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b167ce9087e8066d666bca21a903549", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "ba7b5322db3ca831ddf2955168e308265a30635f", "commitAfterChange": "b8efcec7d38641bbe45122068ae9249137e0e2fb", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 64, "signatureBeforeChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError) \t\tthrows JavaModelException", "diff": ["-\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "-\t\tJavaModelManager.PerProjectInfo perProjectInfo = manager.getPerProjectInfoCheckExistence(fProject);", "+\t\tJavaModelManager.PerProjectInfo perProjectInfo = getPerProjectInfo();", "-\t\t\tIClasspathEntry[] infoPath = perProjectInfo.lastResolvedClasspath;", "+\t\t\tIClasspathEntry[] infoPath = perProjectInfo.resolvedClasspath;", "-\t\t\tif (perProjectInfo.classpath == null // .classpath file could not be read", "+\t\t\tif (perProjectInfo.rawClasspath == null // .classpath file could not be read", "-\t\t\tperProjectInfo.lastResolvedClasspath = resolvedPath;", "+\t\t\tperProjectInfo.resolvedClasspath = resolvedPath;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91a3b4a6f0c5bba00fbf77447ce2c3ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "ba1917d8323b975c43d151520213a593a77dc7c0", "commitAfterChange": "90b8a1490825ac6e9009b801582efb3d76f604dd", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tvoid reconcileClasspathFileUpdate(IResourceDelta delta, IFile file, JavaProject project)", "signatureAfterChange": " \tvoid reconcileClasspathFileUpdate(IResourceDelta delta, IFile file, JavaProject project)", "diff": ["-\t\t\t\t\tJavaModelManager.PerProjectInfo info = project.getJavaModelManager().getPerProjectInfoCheckExistence(project.getProject());", "+\t\t\t\t\tJavaModelManager.PerProjectInfo info = JavaModelManager.getJavaModelManager().getPerProjectInfoCheckExistence(project.getProject());", "-\t\t\t\t\tJavaModelManager.PerProjectInfo info = project.getJavaModelManager().getPerProjectInfoCheckExistence(project.getProject());", "+\t\t\t\t\tJavaModelManager.PerProjectInfo info = JavaModelManager.getJavaModelManager().getPerProjectInfoCheckExistence(project.getProject());"]}], "num": 8924}