{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2df35896b8bf7d1955763cd00c345543", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d8aa90d857667d6c7f44faa6fd65f91", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CompilerInvocationTests.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void test012_compiler_problems_tuning()", "signatureAfterChange": " public void test012_compiler_problems_tuning()", "diff": ["-\t\texpectedProblemAttributes.put(\"NonNullFieldComparisonYieldsFalse\", new ProblemAttributes(JavaCore.COMPILER_PB_REDUNDANT_NULL_CHECK));", "-\t\texpectedProblemAttributes.put(\"NullFieldComparisonYieldsFalse\", new ProblemAttributes(JavaCore.COMPILER_PB_REDUNDANT_NULL_CHECK));", "-\t\texpectedProblemAttributes.put(\"NullFieldInstanceofYieldsFalse\", new ProblemAttributes(JavaCore.COMPILER_PB_REDUNDANT_NULL_CHECK));", "-\t\texpectedProblemAttributes.put(\"NullFieldReference\", new ProblemAttributes(JavaCore.COMPILER_PB_NULL_REFERENCE));", "-\t\texpectedProblemAttributes.put(\"PotentialNullFieldReference\", new ProblemAttributes(JavaCore.COMPILER_PB_POTENTIAL_NULL_REFERENCE));", "-\t\texpectedProblemAttributes.put(\"RedundantFieldNullAssignment\", new ProblemAttributes(JavaCore.COMPILER_PB_REDUNDANT_NULL_CHECK));", "-\t\texpectedProblemAttributes.put(\"RedundantNullCheckOnNonNullField\", new ProblemAttributes(JavaCore.COMPILER_PB_REDUNDANT_NULL_CHECK));", "-\t\texpectedProblemAttributes.put(\"RedundantNullCheckOnNullField\", new ProblemAttributes(JavaCore.COMPILER_PB_REDUNDANT_NULL_CHECK));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6d1e17dd9e4d653a3dca92d7a06ea70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CompilerInvocationTests.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void test012_compiler_problems_tuning()", "signatureAfterChange": " public void test012_compiler_problems_tuning()", "diff": ["+\t\texpectedProblemAttributes.put(\"NonNullFieldComparisonYieldsFalse\", new ProblemAttributes(JavaCore.COMPILER_PB_REDUNDANT_NULL_CHECK));", "+\t\texpectedProblemAttributes.put(\"NullFieldComparisonYieldsFalse\", new ProblemAttributes(JavaCore.COMPILER_PB_REDUNDANT_NULL_CHECK));", "+\t\texpectedProblemAttributes.put(\"NullFieldInstanceofYieldsFalse\", new ProblemAttributes(JavaCore.COMPILER_PB_REDUNDANT_NULL_CHECK));", "+\t\texpectedProblemAttributes.put(\"NullFieldReference\", new ProblemAttributes(JavaCore.COMPILER_PB_NULL_REFERENCE));", "+\t\texpectedProblemAttributes.put(\"PotentialNullFieldReference\", new ProblemAttributes(JavaCore.COMPILER_PB_POTENTIAL_NULL_REFERENCE));", "+\t\texpectedProblemAttributes.put(\"RedundantFieldNullAssignment\", new ProblemAttributes(JavaCore.COMPILER_PB_REDUNDANT_NULL_CHECK));", "+\t\texpectedProblemAttributes.put(\"RedundantNullCheckOnNonNullField\", new ProblemAttributes(JavaCore.COMPILER_PB_REDUNDANT_NULL_CHECK));", "+\t\texpectedProblemAttributes.put(\"RedundantNullCheckOnNullField\", new ProblemAttributes(JavaCore.COMPILER_PB_REDUNDANT_NULL_CHECK));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df2f78c7390a4ec808ffa8efdf109c5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "15e3a9fc2ecd5761f01e0bac254435a2b7c9efda", "commitAfterChange": "7d045aff59e674d12c8b86d331be1a0001ff1185", "methodNumberBeforeChange": 613, "methodNumberAfterChange": 613, "signatureBeforeChange": " public void testBug286379c() throws CoreException", "signatureAfterChange": " public void testBug286379c() throws CoreException", "diff": ["-", "+\t// print statement to debug random failures of this test", "+\tSystem.out.println(\"Forbidden reference at the start of the test is \" + JavaCore.getOption(JavaCore.COMPILER_PB_FORBIDDEN_REFERENCE));", "+\t", "+\t\t// print statement to debug random failures of this test", "+\t\tSystem.out.println(\"Forbidden reference before first exit \" + JavaCore.getOption(JavaCore.COMPILER_PB_FORBIDDEN_REFERENCE));", "-\t\tsimulateRestart();\t\t", "+\t\tsimulateRestart();", "+\t\t// print statement to debug random failures of this test", "+\t\tSystem.out.println(\"Forbidden reference after first restart \" + JavaCore.getOption(JavaCore.COMPILER_PB_FORBIDDEN_REFERENCE));", "+\t\t// print statement to debug random failures of this test", "+\t\tSystem.out.println(\"Forbidden reference before second exit \" + JavaCore.getOption(JavaCore.COMPILER_PB_FORBIDDEN_REFERENCE));", "-\t\tsimulateRestart();\t\t", "+\t\tsimulateRestart();\t", "+\t\t// print statement to debug random failures of this test", "+\t\tSystem.out.println(\"Forbidden reference after second restart \" + JavaCore.getOption(JavaCore.COMPILER_PB_FORBIDDEN_REFERENCE));"]}], "num": 11165}