{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2fe6daf6fac5906c9db7175569ee23d2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "237f9427ae9c78a172729bec5e7db2c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/RuntimeTests.java", "commitBeforeChange": "acb9838f14c6b1a5ef6950eb28bfa26497eccaa4", "commitAfterChange": "cc547ec5c074d17ff882a095dbec68dcad72a87a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void _test0600_reflection()", "signatureAfterChange": " public void _test0600_reflection()", "diff": ["-\tif (COMPLIANCE_1_3.equals(this.complianceLevel) ||", "-\t\t\tCOMPLIANCE_1_4.equals(this.complianceLevel)) {", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"import java.lang.reflect.*;\\n\" + ", "-\t\t\t\t\"import p.*;\\n\" + ", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"static public void main (String args[]) {\\n\" + ", "-\t\t\t\t\"  Y y = new Y();\\n\" +", "-\t\t\t\t\"  try {\\n\" +", "-\t\t\t\t\"    Method foo = Y.class.getMethod(\\\"foo\\\", null);\\n\" +", "-\t\t\t\t\"    foo.invoke(y, null);\\n\" +", "-\t\t\t\t\"    y.foo();\\n\" +", "-\t\t\t\t\"  }\\n\" +", "-\t\t\t\t\"  catch (Throwable t) {\\n\" +", "-\t\t\t\t\"    System.out.println(\\\"FAILURE: \\\" + t.getMessage());\\n\" +", "-\t\t\t\t\"    t.printStackTrace(System.out);\\n\" +", "-\t\t\t\t\"  }\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t\t\"p/Y.java\",", "-\t\t\t\t\"package p;\\n\" +", "-\t\t\t\t\"public class Y extends Z {\\n\" + ", "-\t\t\t\t\"  /* empty */\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t\t\"p/Z.java\",", "-\t\t\t\t\"package p;\\n\" +", "-\t\t\t\t\"class Z {\\n\" + ", "-\t\t\t\t\"  public void foo() {\\n\" + ", "-\t\t\t\t\"  System.out.println(\\\"SUCCESS\\\"); //$NON-NLS-1$\\n\" + ", "-\t\t\t\t\"  }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"SUCCESS\\nSUCCESS\"", "-\t\t);", "-\t}", "-\telse {", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"import java.lang.reflect.*;\\n\" + ", "-\t\t\t\t\"import p.*;\\n\" + ", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"static public void main (String args[]) {\\n\" + ", "-\t\t\t\t\"  Y y = new Y();\\n\" +", "-\t\t\t\t\"  try {\\n\" +", "-\t\t\t\t\"    Method foo = Y.class.getMethod(\\\"foo\\\");\\n\" +", "-\t\t\t\t\"    foo.invoke(y);\\n\" +", "-\t\t\t\t\"    y.foo();\\n\" +", "-\t\t\t\t\"  }\\n\" +", "-\t\t\t\t\"  catch (Throwable t) {\\n\" +", "-\t\t\t\t\"    System.out.println(\\\"FAILURE: \\\" + t.getMessage());\\n\" +", "-\t\t\t\t\"    t.printStackTrace(System.out);\\n\" +", "-\t\t\t\t\"  }\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t\t\"p/Y.java\",", "-\t\t\t\t\"package p;\\n\" +", "-\t\t\t\t\"public class Y extends Z {\\n\" + ", "-\t\t\t\t\"  /* empty */\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t\t\"p/Z.java\",", "-\t\t\t\t\"package p;\\n\" +", "-\t\t\t\t\"class Z {\\n\" + ", "-\t\t\t\t\"  public void foo() {\\n\" + ", "-\t\t\t\t\"  System.out.println(\\\"SUCCESS\\\"); //$NON-NLS-1$\\n\" + ", "-\t\t\t\t\"  }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"SUCCESS\\nSUCCESS\"", "-\t\t);", "-\t}", "+\tthis.runConformTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"import java.lang.reflect.*;\\n\" + ", "+\t\t\t\"import p.*;\\n\" + ", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"static public void main (String args[]) {\\n\" + ", "+\t\t\t\"  Y y = new Y();\\n\" +", "+\t\t\t\"  try {\\n\" +", "+\t\t\t\"    Method foo = Y.class.getMethod(\\\"foo\\\", (Class []) null);\\n\" +", "+\t\t\t\"    y.foo();\\n\" +", "+\t\t\t\"    foo.invoke(y, (Object []) null);\\n\" +", "+\t\t\t\"  }\\n\" +", "+\t\t\t\"  catch (Throwable t) {\\n\" +", "+\t\t\t\"    System.out.println(\\\"FAILURE: \\\" + t.getMessage());\\n\" +", "+\t\t\t\"    t.printStackTrace(System.out);\\n\" +", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"}\\n\",", "+\t\t\t\"p/Y.java\",", "+\t\t\t\"package p;\\n\" +", "+\t\t\t\"public class Y extends Z {\\n\" + ", "+\t\t\t\"  /* empty */\\n\" + ", "+\t\t\t\"}\\n\",", "+\t\t\t\"p/Z.java\",", "+\t\t\t\"package p;\\n\" +", "+\t\t\t\"class Z {\\n\" + ", "+\t\t\t\"  public void foo() {\\n\" + ", "+\t\t\t\"  System.out.println(\\\"SUCCESS\\\"); //$NON-NLS-1$\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"SUCCESS\\nSUCCESS\"", "+\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69fcefe1a8eaf4061adbc33efa339a75", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "6e773ea4c55df4e5a88f22da754552e6139f2f62", "commitAfterChange": "33954bbbcb57410dd9650c66d085059854f2f0c2", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tpublic void test039()", "signatureAfterChange": " \tpublic void test039()", "diff": ["-\t\t\t\"/* \\n\" + ", "-\t\t\t\" * Version (target 1.2) \\n\" + ", "-\t\t\t\" * - magic: CAFEBABE\\n\" + ", "-\t\t\t\" * - minor: 0\\n\" + ", "-\t\t\t\" * - major: 46\\n\" + ", "-\t\t\t\" */\\n\" + ", "-\t\t\t\"// Compiled from A.java\\n\" + ", "-\t\t\t\"public class A extends java.lang.Object {\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"  /*  Method descriptor  #6 ()V */\\n\" + ", "-\t\t\t\"  public A();\\n\" + ", "-\t\t\t\"    /* Stack: 1, Locals: 1 */\\n\" + ", "-\t\t\t\"    Code attribute:\\n\" + ", "-\t\t\t\"      0  aload_0\\n\" + ", "-\t\t\t\"      1  invokespecial #9 <Constructor java.lang.Object()>\\n\" + ", "-\t\t\t\"      4  return\\n\" + ", "-\t\t\t\"\\n\" + ", "-\t\t\t\"    Line number attribute:\\n\" + ", "-\t\t\t\"      [pc: 0, line: 1]\\n\" + ", "-\t\t\t\"    Local variable table attribute:\\n\" + ", "-\t\t\t\"      [pc: 0, pc: 5] local: this index: 0 type: A\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"      [pc: 3, pc: 11] local: i index: 1 type: int\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"}\";", "+\t\t\t\"      [pc: 3, pc: 11] local: i index: 1 type: int\\n\";"]}], "num": 11474}