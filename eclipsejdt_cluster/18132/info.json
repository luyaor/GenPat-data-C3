{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc9f4194e18358da97c53553c4b72b06", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d3314244eae4ced2c98d4075f2ec9df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestForClass.java", "commitBeforeChange": "153b885ea368bcdf606fcdf8ffbb265189dbdbee", "commitAfterChange": "5da4268a6e911ad3865241747a8e9714544fc990", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " \tpublic void test055()", "signatureAfterChange": " \tpublic void test055()", "diff": ["-\t\t\t\t!IS_JRE_8 || (IS_JRE_8 && this.complianceLevel >= ClassFileConstants.JDK1_5) ? ", "-\t\t\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\t\t\t\t\"\t* <li> {@link Entry} </li>\\n\" + ", "-\t\t\t\t\t\t\"\t              ^^^^^\\n\" + ", "-\t\t\t\t\t\t\"Javadoc: Invalid member type qualification\\n\" + ", "-\t\t\t\t\t\t\"----------\\n\":", "-\t\t\t\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\t\t\t\t\t\"\t* <li> {@link Entry} </li>\\n\" + ", "-\t\t\t\t\t\t\t\"\t              ^^^^^\\n\" + ", "-\t\t\t\t\t\t\t\"Javadoc: Invalid member type qualification\\n\" + ", "-\t\t\t\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\t\t\t\"2. ERROR in X.java (at line 8)\\n\" + ", "-\t\t\t\t\t\t\t\"\tpublic interface X extends Map {\\n\" + ", "-\t\t\t\t\t\t\t\"\t                 ^\\n\" + ", "-\t\t\t\t\t\t\t\"The return types are incompatible for the inherited methods MapStream.values(), Map.values()\\n\" + ", "-\t\t\t\t\t\t\t\"----------\\n\");", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\t\"\t* <li> {@link Entry} </li>\\n\" + ", "+\t\t\t\t\"\t              ^^^^^\\n\" + ", "+\t\t\t\t\"Javadoc: Invalid member type qualification\\n\" + ", "+\t\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d235e4d7170d54995d08d931028b247e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "09c77a64b988d1b8740f2abeef7353a697d466b3", "commitAfterChange": "472457e984077a2dae302cbc6a3b8aff55ad1844", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": " public void test095()", "signatureAfterChange": " public void test095()", "diff": ["-\t\tthis.complianceLevel < ClassFileConstants.JDK1_6 ?", "-\t\t\"----------\\n\" : \t\t", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. ERROR in X.java (at line 1)\\n\" +", "-\t\t\t\"\tpublic enum X implements I, J { \\n\" +", "-\t\t\t\"\t            ^\\n\" +", "-\t\t\t\"The type X must implement the inherited abstract method I.foo(int)\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"2. WARNING in X.java (at line 3)\\n\" +", "-\t\t\t\"\tpublic void foo() {}\\n\" +", "-\t\t\t\"\t            ^^^^^\\n\" +", "-\t\t\t\"The method foo() of type X should be tagged with @Override since it actually overrides a superinterface method\\n\" +", "-\t\t\t\"----------\\n\");", "+\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e723c95a5cbf515ef28c92d2e5c449eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "09c77a64b988d1b8740f2abeef7353a697d466b3", "commitAfterChange": "472457e984077a2dae302cbc6a3b8aff55ad1844", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": " public void test101()", "signatureAfterChange": " public void test101()", "diff": ["-\t\tthis.complianceLevel < ClassFileConstants.JDK1_6 ?", "-\t\t\"----------\\n\" :", "-\t\t\"----------\\n\" +", "-\t\t\"1. WARNING in X.java (at line 6)\\n\" +", "-\t\t\"\tpublic boolean bar() {\\n\" +", "-\t\t\"\t               ^^^^^\\n\" +", "-\t\t\"The method bar() of type new Foo(){} should be tagged with @Override since it actually overrides a superinterface method\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. ERROR in X.java (at line 7)\\n\" +", "-\t\t\"\tZork z;\\n\" +", "-\t\t\"\t^^^^\\n\" +", "-\t\t\"Zork cannot be resolved to a type\\n\" +", "-\t\t\"----------\\n\"", "-\t\t);", "+\t\t\"----------\\n\");"]}], "num": 18132}