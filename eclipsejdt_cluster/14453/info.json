{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "137257eaf5014161942934440f85230a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fdebaf2b2cec7a12458b54249075945", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/IndexSelector.java", "commitBeforeChange": "8264e11928da121957d70dadd3c6bf92a042c6d3", "commitAfterChange": "53c01b1adab482ab7f920989323f3cac2f399cfd", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " private static IJavaElement[] getFocusedElements(SearchPattern pattern, IJavaElement focusElement) throws JavaModelException", "signatureAfterChange": " private static IJavaElement[] getFocusedElementsAndTypes(SearchPattern pattern, IJavaElement focusElement, ObjectVector superTypes) throws JavaModelException", "diff": ["-private static IJavaElement[] getFocusedElements(SearchPattern pattern, IJavaElement focusElement) throws JavaModelException {", "+private static IJavaElement[] getFocusedElementsAndTypes(SearchPattern pattern, IJavaElement focusElement, ObjectVector superTypes) throws JavaModelException {", "+\t\t\t\t\tif (superTypes != null) superTypes.add(allTypes[i]);", "+\t\t\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9957cf002b5f2956e714f954b2f08526", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "d36603e234e78a5608b9d157413740c9d9579f5d", "commitAfterChange": "947b49b32e7050f776cb224d4e387fbfba005680", "methodNumberBeforeChange": 238, "methodNumberAfterChange": 238, "signatureBeforeChange": " \tpublic boolean storePreference(String optionName, String optionValue, IEclipsePreferences eclipsePreferences)", "signatureAfterChange": " \tpublic boolean storePreference(String optionName, String optionValue, IEclipsePreferences eclipsePreferences, Map otherOptions)", "diff": ["-\tpublic boolean storePreference(String optionName, String optionValue, IEclipsePreferences eclipsePreferences) {", "+\tpublic boolean storePreference(String optionName, String optionValue, IEclipsePreferences eclipsePreferences, Map otherOptions) {", "+\t\t\t\t\tif (otherOptions != null && otherOptions.containsKey(compatibleOptions[co]))", "+\t\t\t\t\t\tcontinue; // don't overwrite explicit value of otherOptions at compatibleOptions[co]"]}], "num": 14453}