{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d9628b0ef5b859ecebb9f425c16e5251", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ba3a69a41c1d5a8a5699ca291784b8c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "64c79aaade93cc6bf9061f58a0917e55ce5f44d7", "commitAfterChange": "0f30dd165e42ed7c89f5ae15972d54606f639fe9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic Compiler( \t\tINameEnvironment environment, \t\tIErrorHandlingPolicy policy, \t\tMap settings, \t\tfinal ICompilerRequestor requestor, \t\tIProblemFactory problemFactory, \t\tboolean parseLiteralExpressionsAsConstants)", "signatureAfterChange": " \tpublic Compiler( \t\tINameEnvironment environment, \t\tIErrorHandlingPolicy policy, \t\tMap settings, \t\tfinal ICompilerRequestor requestor, \t\tIProblemFactory problemFactory, \t\tboolean parseLiteralExpressionsAsConstants)", "diff": ["-\t\tthis.problemReporter =", "-\t\t\tnew ProblemReporter(policy, this.options, problemFactory);", "-\t\tthis.lookupEnvironment =", "-\t\t\tnew LookupEnvironment(this, options, problemReporter, environment);", "-\t\tthis.parser =", "-\t\t\tnew Parser(", "-\t\t\t\tproblemReporter, ", "-\t\t\t\tparseLiteralExpressionsAsConstants);", "+\t\tthis.problemReporter = new ProblemReporter(policy, this.options, problemFactory);", "+\t\tthis.lookupEnvironment = new LookupEnvironment(this, options, problemReporter, environment);", "+\t\tinitializeParser();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "209df3dbb677c9ddcd2d31ea1c4da684", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "af5208ad650bb16626635d58b15cab85ed3b6304", "commitAfterChange": "45055dc97c3da6c433b9c6b3534e9f01054887be", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t public HierarchyResolver(INameEnvironment nameEnvironment, Map settings, HierarchyBuilder requestor, IProblemFactory problemFactory)", "signatureAfterChange": " \t public HierarchyResolver(INameEnvironment nameEnvironment, Map settings, HierarchyBuilder requestor, IProblemFactory problemFactory)", "diff": ["-\toptions = new CompilerOptions(settings);", "+\tthis.options = new CompilerOptions(settings);", "-\tProblemReporter problemReporter = new ProblemReporter(policy, options, problemFactory);", "+\tProblemReporter problemReporter = new ProblemReporter(policy, this.options, problemFactory);", "-\t\tnew LookupEnvironment(this, options, problemReporter, nameEnvironment),", "+\t\tnew LookupEnvironment(this, this.options, problemReporter, nameEnvironment),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bb3ddfe47a6c3310707f091862fb2bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "1348bf3232f6ef4a567f23710b6f05d6366e90ff", "commitAfterChange": "84eba2ceb4c4828ad681b6374034160ffda08eef", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \tpublic SelectionEngine(\r \t\tISearchableNameEnvironment nameEnvironment,\r \t\tISelectionRequestor requestor,\r \t\tMap settings)", "signatureAfterChange": "\r \tpublic SelectionEngine(\r \t\tISearchableNameEnvironment nameEnvironment,\r \t\tISelectionRequestor requestor,\r \t\tMap settings)", "diff": ["+\r", "+\t\tsuper(settings);\r", "+\r", "-\t\tCompilerOptions options = new CompilerOptions(settings);\r", "-\t\t\t\toptions,\r", "+\t\t\t\tthis.compilerOptions,\r", "-\t\tthis.parser = new SelectionParser(problemReporter, options.assertMode);\r", "+\t\tthis.parser = new SelectionParser(problemReporter, this.compilerOptions.assertMode);\r", "-\t\t\tnew LookupEnvironment(this, options, problemReporter, nameEnvironment);\r", "+\t\t\tnew LookupEnvironment(this, this.compilerOptions, problemReporter, nameEnvironment);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8fe7f41a0497b4a66815bdebcf84526", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "1bbd363622ec3abe41252dbdd3db2116c2dbd8d5", "commitAfterChange": "a9eb0f9efda6e3ba532fc37dccaaacc16601b2a7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \tpublic CompletionEngine(\r \t\tISearchableNameEnvironment nameEnvironment,\r \t\tICompletionRequestor requestor,\r \t\tMap settings)", "signatureAfterChange": "\r \tpublic CompletionEngine(\r \t\tISearchableNameEnvironment nameEnvironment,\r \t\tICompletionRequestor requestor,\r \t\tMap settings)", "diff": ["+\t\tsuper(settings);\r", "-\t\toptions = new AssistOptions(settings);\r", "-\t\tCompilerOptions compilerOptions = new CompilerOptions(settings);\r", "-\r", "-\t\t\t\tcompilerOptions,\r", "+\t\t\t\tthis.compilerOptions,\r", "-\t\t\tnew CompletionParser(problemReporter, compilerOptions.assertMode);\r", "+\t\t\tnew CompletionParser(problemReporter, this.compilerOptions.assertMode);\r", "-\t\t\tnew LookupEnvironment(this, compilerOptions, problemReporter, nameEnvironment);\r", "+\t\t\tnew LookupEnvironment(this, this.compilerOptions, problemReporter, nameEnvironment);\r", "-\t\t\tnew Scanner(false, false, false, compilerOptions.assertMode);\r", "+\t\t\tnew Scanner(false, false, false, this.compilerOptions.assertMode);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf0e131ffd9cbbcba45a617096b869db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "e33f9e50507ed5c3d45f37527737576191428633", "commitAfterChange": "62bebd71f36545c90d6c943df5cd6ccb18d59a48", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic CompletionEngine( \t\tISearchableNameEnvironment nameEnvironment, \t\tICompletionRequestor requestor, \t\tMap settings, \t\tIJavaProject javaProject)", "signatureAfterChange": " \tpublic CompletionEngine( \t\tISearchableNameEnvironment nameEnvironment, \t\tICompletionRequestor requestor, \t\tMap settings, \t\tIJavaProject javaProject)", "diff": ["-\t\tproblemReporter = new ProblemReporter(", "+\t\tthis.problemReporter = new ProblemReporter(", "-\t\t\t\t\t\tif(actualCompletionPosition > start", "-\t\t\t\t\t\t\t&& lastErrorStart < start", "+\t\t\t\t\t\tif(CompletionEngine.this.actualCompletionPosition > start", "+\t\t\t\t\t\t\t&& this.lastErrorStart < start", "-\t\t\t\t\t\t\tlastErrorStart = start;", "+\t\t\t\t\t\t\tthis.lastErrorStart = start;", "-\t\t\tnew LookupEnvironment(this, this.compilerOptions, problemReporter, nameEnvironment);", "+\t\t\tnew LookupEnvironment(this, this.compilerOptions, this.problemReporter, nameEnvironment);", "-\t\t\tnew CompletionParser(problemReporter);", "+\t\t\tnew CompletionParser(this.problemReporter);"]}], "num": 34349}