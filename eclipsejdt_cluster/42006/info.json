{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5a4c95d86d0bbb3d85411a582b4dd8bf", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6968d6f7cffb5a3e2f7e84da48f8c1ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "f4bdb5d912579981f22fe9e7c4679e93b1a5f059", "commitAfterChange": "a3a09ad256da223aa1f3d2fe29b81e346d09a16c", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  public final char[] signature()", "signatureAfterChange": " public final char[] signature()", "diff": ["-", "-\tif (isConstructorRelated() && declaringClass.isNestedType()) {", "+\tboolean considerSynthetics = isConstructorRelated() && declaringClass.isNestedType();", "+\tif (considerSynthetics) {", "-\t\tSyntheticArgumentBinding[] syntheticArguments = declaringClass.syntheticOuterLocalVariables();", "-\t\tcount = syntheticArguments == null ? 0 : syntheticArguments.length;", "-\t\tfor (int i = 0; i < count; i++)", "-\t\t\tbuffer.append(syntheticArguments[i].type.signature());", "+\tif (considerSynthetics) {", "+\t\tSyntheticArgumentBinding[] syntheticOuterArguments = declaringClass.syntheticOuterLocalVariables();", "+\t\tint count = syntheticOuterArguments == null ? 0 : syntheticOuterArguments.length;", "+\t\tfor (int i = 0; i < count; i++)", "+\t\t\tbuffer.append(syntheticOuterArguments[i].type.signature());", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb94a1dedae2d6c04f7bb7cc71a65b80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "a82d28ad3c4f97d6c4b28c5439c23028fcc38c73", "commitAfterChange": "65fa5c3060e4327551c38497dd416e8e9a64be21", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic String disassemble(IClassFileReader classFileReader, String lineSeparator, int mode)", "signatureAfterChange": " \tpublic String disassemble(IClassFileReader classFileReader, String lineSeparator, int mode)", "diff": ["+\t\tfinal boolean isAnnotation = (accessFlags & IModifierConstants.ACC_ANNOTATION) != 0;", "-\t\t\tif ((accessFlags & IModifierConstants.ACC_ANNOTATION) != 0) {", "+\t\t\tif (isAnnotation) {", "-\t\tchar[][] superclassInterfaces = classFileReader.getInterfaceNames();", "-\t\tint length = superclassInterfaces.length;", "-\t\tif (length != 0) {", "-\t\t\tbuffer.append(\" implements \"); //$NON-NLS-1$", "-\t\t\tfor (int i = 0; i < length - 1; i++) {", "-\t\t\t\tchar[] superinterface = superclassInterfaces[i];", "+\t\tif (!isAnnotation || !checkMode(mode, WORKING_COPY)) {", "+\t\t\tchar[][] superclassInterfaces = classFileReader.getInterfaceNames();", "+\t\t\tint length = superclassInterfaces.length;", "+\t\t\tif (length != 0) {", "+\t\t\t\tbuffer.append(\" implements \"); //$NON-NLS-1$", "+\t\t\t\tfor (int i = 0; i < length - 1; i++) {", "+\t\t\t\t\tchar[] superinterface = superclassInterfaces[i];", "+\t\t\t\t\tCharOperation.replace(superinterface, '/', '.');", "+\t\t\t\t\tbuffer", "+\t\t\t\t\t\t.append(returnClassName(superinterface, '.', mode))", "+\t\t\t\t\t\t.append(Messages.disassembler_comma)", "+\t\t\t\t\t\t.append(Messages.disassembler_space); ", "+\t\t\t\t}", "+\t\t\t\tchar[] superinterface = superclassInterfaces[length - 1];", "-\t\t\t\tbuffer", "-\t\t\t\t\t.append(returnClassName(superinterface, '.', mode))", "-\t\t\t\t\t.append(Messages.disassembler_comma)", "-\t\t\t\t\t.append(Messages.disassembler_space); ", "+\t\t\t\tbuffer.append(returnClassName(superinterface, '.', mode));", "-\t\t\tchar[] superinterface = superclassInterfaces[length - 1];", "-\t\t\tCharOperation.replace(superinterface, '/', '.');", "-\t\t\tbuffer.append(returnClassName(superinterface, '.', mode));", "-\t\t\tlength = attributes.length;", "+\t\t\tint length = attributes.length;"]}], "num": 42006}