{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "424f9546f22cfe75f757c433681da77d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc7172dcead0fad855997bac576e569b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 172, "methodNumberAfterChange": 179, "signatureBeforeChange": " public void javadocInvalidMethod(MessageSend messageSend, MethodBinding method, int modifiers)", "signatureAfterChange": " public void javadocInvalidMethod(MessageSend messageSend, MethodBinding method, int modifiers)", "diff": ["-\t\t\t\tString closestParameterTypeNames = parametersAsString(problemMethod.closestMatch.parameters, false);", "-\t\t\t\tString parameterTypeNames = parametersAsString(method.parameters, false);", "-\t\t\t\tString closestParameterTypeShortNames = parametersAsString(problemMethod.closestMatch.parameters, true);", "-\t\t\t\tString parameterTypeShortNames = parametersAsString(method.parameters, true);", "+\t\t\t\tString closestParameterTypeNames = typesAsString(problemMethod.closestMatch.isVarargs(), problemMethod.closestMatch.parameters, false);", "+\t\t\t\tString parameterTypeNames = typesAsString(method.isVarargs(), method.parameters, false);", "+\t\t\t\tString closestParameterTypeShortNames = typesAsString(problemMethod.closestMatch.isVarargs(), problemMethod.closestMatch.parameters, true);", "+\t\t\t\tString parameterTypeShortNames = typesAsString(method.isVarargs(), method.parameters, true);", "-\t\t\tnew String(method.selector), parametersAsString(method.parameters, false)},", "+\t\t\tnew String(method.selector), typesAsString(method.isVarargs(), method.parameters, false)},", "-\t\t\tnew String(method.selector), parametersAsString(method.parameters, true)},", "+\t\t\tnew String(method.selector), typesAsString(method.isVarargs(), method.parameters, true)},"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9e6f01ec92ad7e9996af58a39025613", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 144, "methodNumberAfterChange": 153, "signatureBeforeChange": " public void javadocInvalidMethod(MessageSend messageSend, MethodBinding method, int modifiers)", "signatureAfterChange": " public void javadocInvalidMethod(MessageSend messageSend, MethodBinding method, int modifiers)", "diff": ["-\t\t\t\tString closestParameterTypeNames = parametersAsString(problemMethod.closestMatch);", "-\t\t\t\tString parameterTypeNames = parametersAsString(method);", "-\t\t\t\tString closestParameterTypeShortNames = parametersAsShortString(problemMethod.closestMatch);", "-\t\t\t\tString parameterTypeShortNames = parametersAsShortString(method);", "+\t\t\t\tString closestParameterTypeNames = parametersAsString(problemMethod.closestMatch.parameters, false);", "+\t\t\t\tString parameterTypeNames = parametersAsString(method.parameters, false);", "+\t\t\t\tString closestParameterTypeShortNames = parametersAsString(problemMethod.closestMatch.parameters, true);", "+\t\t\t\tString parameterTypeShortNames = parametersAsString(method.parameters, true);", "-\t\t\tnew String(method.selector), parametersAsString(method)},", "+\t\t\tnew String(method.selector), parametersAsString(method.parameters, false)},", "-\t\t\tnew String(method.selector), parametersAsShortString(method)},", "+\t\t\tnew String(method.selector), parametersAsString(method.parameters, true)},"]}], "num": 62909}