{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0b0501f34ebfc12e9b60f648683a5d33", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b9f25b2cce344b144b9e56fdda040d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "cbbe8b69b29b99c8c679b98644156abe11f1564d", "commitAfterChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName,  \t\tfinal char[] typeName, \t\tfinal int matchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal ITypeNameRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName,  \t\tfinal char[] typeName, \t\tfinal int matchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal ITypeNameRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\t\tthis.basicEngine.searchAllTypeNames(packageName, typeName, matchRule, searchFor, scope, new TypeNameRequestorAdapter(nameRequestor), waitingPolicy, progressMonitor);", "+\t\tTypeNameRequestorAdapter requestorAdapter = new TypeNameRequestorAdapter(nameRequestor);", "+\t\tthis.basicEngine.searchAllTypeNames(packageName, SearchPattern.R_EXACT_MATCH, typeName, matchRule, searchFor, scope, requestorAdapter, waitingPolicy, progressMonitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29192745932cad401b728546e8ca5273", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName,  \t\tfinal int packageMatchRule,  \t\tfinal char[] typeName, \t\tfinal int typeMatchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal TypeNameRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName,  \t\tfinal int packageMatchRule,  \t\tfinal char[] typeName, \t\tfinal int typeMatchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal TypeNameRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\t\tthis.basicEngine.searchAllTypeNames(packageName, packageMatchRule, typeName, typeMatchRule, searchFor, scope, requestorWrapper, waitingPolicy, progressMonitor);", "+\t\tthis.basicEngine.searchAllTypeNames(packageName,", "+\t\t\tpackageMatchRule,", "+\t\t\ttypeName,", "+\t\t\tSearchPattern.updateMatchRule(typeMatchRule), ", "+\t\t\tsearchFor,", "+\t\t\tscope,", "+\t\t\trequestorWrapper,", "+\t\t\twaitingPolicy,", "+\t\t\tprogressMonitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ee353f21c30d8f7f47f8d7d53336ae5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "76049c710d8a15447cdfbafce1296b7824e89c76", "commitAfterChange": "637676d69110d7f882566ec9f762162ef679de0f", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageExactName,  \t\tfinal char[] typeName, \t\tfinal int matchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal TypeNameRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageExactName,  \t\tfinal char[] typeName, \t\tfinal int matchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal TypeNameRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\t\tTypeNameRequestorWrapper requestorWrapper = new TypeNameRequestorWrapper(nameRequestor);", "-\t\tthis.basicEngine.searchAllTypeNames(packageExactName, SearchPattern.R_EXACT_MATCH, typeName, matchRule, searchFor, scope, requestorWrapper, waitingPolicy, progressMonitor);", "+\t\tsearchAllTypeNames(packageExactName, SearchPattern.R_EXACT_MATCH, typeName, matchRule, searchFor, scope, nameRequestor, waitingPolicy, progressMonitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2b41f46593e024bd5a9f3b62fd0dc79", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "cbbe8b69b29b99c8c679b98644156abe11f1564d", "commitAfterChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName,  \t\tfinal char[] typeName, \t\tfinal int matchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal TypeNameRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageExactName,  \t\tfinal char[] typeName, \t\tfinal int matchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal TypeNameRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\t\tfinal char[] packageName, ", "+\t\tfinal char[] packageExactName, ", "-\t\tthis.basicEngine.searchAllTypeNames(packageName, typeName, matchRule, searchFor, scope, requestorWrapper, waitingPolicy, progressMonitor);", "+\t\tthis.basicEngine.searchAllTypeNames(packageExactName, SearchPattern.R_EXACT_MATCH, typeName, matchRule, searchFor, scope, requestorWrapper, waitingPolicy, progressMonitor);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5522dbd523fd0fc12867486e52a96cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName,  \t\tfinal int packageMatchRule,  \t\tfinal char[] typeName, \t\tfinal int typeMatchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal TypeNameMatchRequestor nameMatchRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName,  \t\tfinal int packageMatchRule,  \t\tfinal char[] typeName, \t\tfinal int typeMatchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal TypeNameMatchRequestor nameMatchRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\t\tthis.basicEngine.searchAllTypeNames(packageName, packageMatchRule, typeName, typeMatchRule, searchFor, scope, requestorWrapper, waitingPolicy, progressMonitor);", "+\t\tthis.basicEngine.searchAllTypeNames(packageName, ", "+\t\t\tpackageMatchRule, ", "+\t\t\ttypeName, ", "+\t\t\tSearchPattern.updateMatchRule(typeMatchRule), ", "+\t\t\tsearchFor, ", "+\t\t\tscope, ", "+\t\t\trequestorWrapper, ", "+\t\t\twaitingPolicy, ", "+\t\t\tprogressMonitor);"]}], "num": 34253}