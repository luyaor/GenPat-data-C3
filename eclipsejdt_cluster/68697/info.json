{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b739b539d511d9d1502f62f00e71a935", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69a6757aca12e0c47879b82ed4004f86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "9af380edbebe260c532550e38eabb05a50b6fe99", "commitAfterChange": "da0b64a41a819b0bc05baa0b849f027f121c825e", "methodNumberBeforeChange": 169, "methodNumberAfterChange": 169, "signatureBeforeChange": " protected void consumeStatementSwitch()", "signatureAfterChange": " protected void consumeStatementSwitch()", "diff": ["-\tSwitchStatement s = new SwitchStatement();", "+\tSwitchStatement switchStatement = new SwitchStatement();", "-\ts.testExpression = expressionStack[expressionPtr--];", "+\tswitchStatement.testExpression = expressionStack[expressionPtr--];", "-\t\t\ts.statements = new Statement[length], ", "+\t\t\tswitchStatement.statements = new Statement[length], ", "-\ts.explicitDeclarations = realBlockStack[realBlockPtr--];", "-\tpushOnAstStack(s);", "-\tintPtr--; // because of OpenBlock", "-\ts.sourceStart = intStack[intPtr--];", "-\ts.sourceEnd = endStatementPosition;", "+\tswitchStatement.explicitDeclarations = realBlockStack[realBlockPtr--];", "+\tpushOnAstStack(switchStatement);", "+\tswitchStatement.blockStart = intStack[intPtr--]; //  TODO (david) should rather provide blockStart", "+\tswitchStatement.sourceStart = intStack[intPtr--];", "+\tswitchStatement.sourceEnd = endStatementPosition;", "+\tif (length == 0 && !containsComment(switchStatement.blockStart, switchStatement.sourceEnd)) {", "+\t\tswitchStatement.bits |= AstNode.UndocumentedEmptyBlockMASK;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8afacd8d6bbb8debda4e958911f7e54", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " protected void consumeConstructorDeclaration()", "signatureAfterChange": " protected void consumeConstructorDeclaration()", "diff": ["-\tintPtr--;", "-\tintPtr--;", "+\tthis.intPtr--;", "+\tthis.intPtr--;", "-\trealBlockPtr--;", "+\tthis.realBlockPtr--;", "-\tif ((length = astLengthStack[astLengthPtr--]) != 0) {", "-\t\tastPtr -= length;", "-\t\tif (astStack[astPtr + 1] instanceof ExplicitConstructorCall) {", "+\tif ((length = this.astLengthStack[this.astLengthPtr--]) != 0) {", "+\t\tthis.astPtr -= length;", "+\t\tif (this.astStack[this.astPtr + 1] instanceof ExplicitConstructorCall) {", "-\t\t\t\tastStack, ", "-\t\t\t\tastPtr + 2, ", "+\t\t\t\tthis.astStack, ", "+\t\t\t\tthis.astPtr + 2, ", "-\t\t\tconstructorCall = (ExplicitConstructorCall) astStack[astPtr + 1];", "+\t\t\tconstructorCall = (ExplicitConstructorCall) this.astStack[this.astPtr + 1];", "-\t\t\t\tastStack, ", "-\t\t\t\tastPtr + 1, ", "+\t\t\t\tthis.astStack, ", "+\t\t\t\tthis.astPtr + 1, ", "-\t\tif (diet) {", "-\t\t\tfor (int i = nestedType; i > 0; i--){", "-\t\t\t\tif (variablesCounter[i] > 0) {", "+\t\tif (this.diet) {", "+\t\t\tfor (int i = this.nestedType; i > 0; i--){", "+\t\t\t\tif (this.variablesCounter[i] > 0) {", "-\t\tif (!diet || insideFieldInitializer){", "+\t\tif (!this.diet || insideFieldInitializer){", "-\tConstructorDeclaration cd = (ConstructorDeclaration) astStack[astPtr];", "+\tConstructorDeclaration cd = (ConstructorDeclaration) this.astStack[this.astPtr];", "-\tif (!diet && (statements == null && constructorCall.isImplicitSuper())) {", "-\t\tif (!containsComment(cd.bodyStart, endPosition)) {", "+\tif (!this.diet && (statements == null && constructorCall.isImplicitSuper())) {", "+\t\tif (!containsComment(cd.bodyStart, this.endPosition)) {", "-\tcd.bodyEnd = endPosition;", "-\tcd.declarationSourceEnd = flushCommentsDefinedPriorTo(endStatementPosition); ", "+\tcd.bodyEnd = this.endPosition;", "+\tcd.declarationSourceEnd = flushCommentsDefinedPriorTo(this.endStatementPosition); "]}], "num": 68697}