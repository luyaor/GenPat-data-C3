{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c103c658c05f389ae4b3a5f729d2ffc9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64526f127ba4f7b88a8f1742ad281507", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "e6021d67f030c85737aa105da719e9a09cfc30ed", "commitAfterChange": "47da1e1f50b1360a7b560d74dfe1c60303fec552", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": " private void readHeaderInfo(FileInputStream stream) throws IOException", "signatureAfterChange": " private void readHeaderInfo(InputStream stream) throws IOException", "diff": ["-private void readHeaderInfo(FileInputStream stream) throws IOException {", "+private void readHeaderInfo(InputStream stream) throws IOException {", "-\tlong fileLength = this.indexFile.length();", "-\tif (this.numberOfChunks > fileLength ) {", "+\tlong length = this.indexLocation.length();", "+\tif (length != -1 && this.numberOfChunks > length) {", "-\t\t\tSystem.out.println(\"Index file is corrupted \" + this.indexFile); //$NON-NLS-1$", "-\t\tthrow new IOException(\"Index file is corrupted \" + this.indexFile); //$NON-NLS-1$", "+\t\t\tSystem.out.println(\"Index file is corrupted \" + this.indexLocation); //$NON-NLS-1$", "+\t\tthrow new IOException(\"Index file is corrupted \" + this.indexLocation); //$NON-NLS-1$", "-\tif (size > fileLength) {", "+\tif (length != -1 && size > length) {", "-\t\t\tSystem.out.println(\"Index file is corrupted \" + this.indexFile); //$NON-NLS-1$", "-\t\tthrow new IOException(\"Index file is corrupted \" + this.indexFile); //$NON-NLS-1$", "+\t\t\tSystem.out.println(\"Index file is corrupted \" + this.indexLocation); //$NON-NLS-1$", "+\t\tthrow new IOException(\"Index file is corrupted \" + this.indexLocation); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcc08425612871c3edc798d3ecc60175", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "e6021d67f030c85737aa105da719e9a09cfc30ed", "commitAfterChange": "47da1e1f50b1360a7b560d74dfe1c60303fec552", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": " void initialize(boolean reuseExistingFile) throws IOException", "signatureAfterChange": " void initialize(boolean reuseExistingFile) throws IOException", "diff": ["-\tif (this.indexFile.exists()) {", "+\tif (this.indexLocation.exists()) {", "-\t\t\tFileInputStream stream = new FileInputStream(this.indexFile);", "+\t\t\tInputStream stream = this.indexLocation.getInputStream();", "-\t\tif (!this.indexFile.delete()) {", "+\t\tif (!this.indexLocation.delete()) {", "-\t\t\t\tSystem.out.println(\"initialize - Failed to delete index \" + this.indexFile); //$NON-NLS-1$", "-\t\t\tthrow new IOException(\"Failed to delete index \" + this.indexFile); //$NON-NLS-1$", "+\t\t\t\tSystem.out.println(\"initialize - Failed to delete index \" + this.indexLocation); //$NON-NLS-1$", "+\t\t\tthrow new IOException(\"Failed to delete index \" + this.indexLocation); //$NON-NLS-1$", "-\tif (this.indexFile.createNewFile()) {", "-\t\tFileOutputStream stream = new FileOutputStream(this.indexFile, false);", "+\tif (this.indexLocation.createNewFile()) {", "+\t\tFileOutputStream stream = new FileOutputStream(this.indexLocation.getIndexFile(), false);", "-\t\t\tSystem.out.println(\"initialize - Failed to create new index \" + this.indexFile); //$NON-NLS-1$", "-\t\tthrow new IOException(\"Failed to create new index \" + this.indexFile); //$NON-NLS-1$", "+\t\t\tSystem.out.println(\"initialize - Failed to create new index \" + this.indexLocation); //$NON-NLS-1$", "+\t\tthrow new IOException(\"Failed to create new index \" + this.indexLocation); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3577d0aff088075e8d6ef8700f57015", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "6c60dce535be3de6b04d99ba8ae08dbe91b94969", "commitAfterChange": "93bc0d951e48394510778784a6576e0cbdd0b011", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " DiskIndex mergeWith(MemoryIndex memoryIndex) throws IOException", "signatureAfterChange": " DiskIndex mergeWith(MemoryIndex memoryIndex) throws IOException", "diff": ["+\tboolean usingTmp = false;", "-\tDiskIndex newDiskIndex = new DiskIndex(new FileIndexLocation(new File(oldIndexFile.getPath() + \".tmp\"))); //$NON-NLS-1$", "+\tString indexFilePath = oldIndexFile.getPath();", "+\tif (indexFilePath.endsWith(TMP_EXT)) { // the tmp file could not be renamed last time", "+\t\tindexFilePath = indexFilePath.substring(0, indexFilePath.length()-TMP_EXT.length());", "+\t\tusingTmp = true;", "+\t} else {", "+\t\tindexFilePath += TMP_EXT;", "+\t}", "+\tDiskIndex newDiskIndex = new DiskIndex(new FileIndexLocation(new File(indexFilePath)));", "-\t\tif (!newIndexFile.renameTo(oldIndexFile)) {", "-\t\t\tif (DEBUG)", "-\t\t\t\tSystem.out.println(\"mergeWith - Failed to rename \" + this.indexLocation); //$NON-NLS-1$", "-\t\t\tthrow new IOException(\"Failed to rename index file \" + this.indexLocation); //$NON-NLS-1$", "+\t\tif (!usingTmp && !newIndexFile.renameTo(oldIndexFile)) {", "+\t\t\t// try again after waiting for two milli secs", "+\t\t\ttry {", "+\t\t\t\tThread.sleep(2);", "+\t\t\t} catch (InterruptedException e) {", "+\t\t\t\t//ignore", "+\t\t\t}", "+\t\t\tif (!newIndexFile.renameTo(oldIndexFile)) {", "+\t\t\t\tif (DEBUG)", "+\t\t\t\t\tSystem.out.println(\"mergeWith - Failed to rename \" + this.indexLocation); //$NON-NLS-1$", "+\t\t\t\tusingTmp = true;", "+\t\t\t}", "-\tnewDiskIndex.indexLocation = this.indexLocation;", "+\tif (!usingTmp) // rename done, use the new file", "+\t\tnewDiskIndex.indexLocation = this.indexLocation;"]}], "num": 10378}