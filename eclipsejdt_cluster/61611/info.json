{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "41067c99ca5f6e9ff2d185d2956e7092", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7796db64ebaaf5d5651393e8d062bab8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "e67c77fc5e097eac99c8909bb016eff7011eb0ce", "commitAfterChange": "5d677f26e6a9dfca4bbd2cd8a965c43c4f46ed94", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " private int indexOf(String relativePath, String containerPath)", "signatureAfterChange": " private int indexOf(String fullPath)", "diff": ["-private int indexOf(String relativePath, String containerPath) {", "-\tif (containerPath != null) {", "-\t\t// if container path is known, use the hash to get faster comparison", "-\t\tint index = (containerPath.hashCode()& 0x7FFFFFFF) % this.paths.length;", "-\t\tString currentContainerPath;", "-\t\twhile ((currentContainerPath = this.containerPaths[index]) != null) {", "-\t\t\tif (currentContainerPath.equals(containerPath)) {", "-\t\t\t\tString scopePath = this.paths[index];", "-\t\t\t\tif (encloses(scopePath, relativePath, index))", "-\t\t\t\t\treturn index;", "-\t\t\t}", "-\t\t\tindex = (index + 1) % this.paths.length;", "-\t\t}", "-\t\treturn -1;", "-\t}", "-\t", "+private int indexOf(String fullPath) {", "+\t// cannot guess the index of the container path", "-\tfor (int i = 0, length = this.paths.length; i < length; i++) {", "-\t\tString scopePath = this.paths[i];", "-\t\tif (scopePath == null) continue;", "-\t\tif (encloses(this.containerPaths[i] + '/' + scopePath, relativePath, i))", "+\tfor (int i = 0, length = this.relativePaths.length; i < length; i++) {", "+\t\tString currentRelativePath = this.relativePaths[i];", "+\t\tif (currentRelativePath == null) continue;", "+\t\tString currentContainerPath = this.containerPaths[i];", "+\t\tString currentFullPath = currentRelativePath.length() == 0 ? currentContainerPath : (currentContainerPath + '/' + currentRelativePath);", "+\t\tif (encloses(currentFullPath, fullPath, i))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bea711527bca5cb0680b5779448e65ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementDelta.java", "commitBeforeChange": "cccafe00dbf29f156949d8f0d0aec370b02aa048", "commitAfterChange": "1a542c460a449efbae14d1057ba233825602248d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 4, "signatureBeforeChange": " protected void addAffectedChild(JavaElementDelta child)", "signatureAfterChange": " protected void addAffectedChild(JavaElementDelta child)", "diff": ["-\tif (this.affectedChildren == null || this.affectedChildren.length == 0) {", "-\t\tthis.affectedChildren = new IJavaElementDelta[] {child};", "-\t\treturn;", "-\t}", "-\tJavaElementDelta existingChild = null;", "-\tint existingChildIndex = -1;", "-\tfor (int i = 0; i < this.affectedChildren.length; i++) {", "-\t\tif (equalsAndSameParent(this.affectedChildren[i].getElement(), child.getElement())) { // handle case of two jars that can be equals but not in the same project", "-\t\t\texistingChild = (JavaElementDelta)this.affectedChildren[i];", "-\t\t\texistingChildIndex = i;", "-\t\t\tbreak;", "-\t\t}", "-\t}", "-\tif (existingChild == null) { //new affected child", "-\t\tthis.affectedChildren= growAndAddToArray(this.affectedChildren, child);", "+\tKey childKey = new Key(child.getElement());", "+\tInteger existingChildIndex = getChildIndex(childKey);", "+\tif (existingChildIndex == null) { //new affected child", "+\t\taddNewChild(child);", "+\t\tJavaElementDelta existingChild = (JavaElementDelta) this.affectedChildren[existingChildIndex];", "-\t\t\t\t\t\tthis.affectedChildren = removeAndShrinkArray(this.affectedChildren, existingChildIndex);", "+\t\t\t\t\t\tremoveExistingChild(childKey, existingChildIndex);"]}], "num": 61611}