{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "39497cb2eb084fe91a6261ab28b303ca", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "415324775a90765d9d1597f021fecd30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "fb96a1c85d64a712beb45b02ec6ef71c691d3831", "commitAfterChange": "382b067fdb60eb61ee53faad83800b76fff0bbbf", "methodNumberBeforeChange": 718, "methodNumberAfterChange": 718, "signatureBeforeChange": " public void testFavoriteImports020() throws JavaModelException", "signatureAfterChange": " public void testFavoriteImports020() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true, false, true, false, true);", "+\trequestor.allowAllRequiredProposals();", "+\tint relevance1 = R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_NAME + R_NON_RESTRICTED;", "+\tint start1 = str.lastIndexOf(\"foo\") + \"\".length();", "+\tint end1 = start1 + \"foo\".length();", "+\tint start2 = str.lastIndexOf(\"public class Test\");", "+\tint end2 = start2 + \"\".length();", "-\t\t\t\"foo[METHOD_REF]{test.p.ZZZ.foo(), Ltest.p.ZZZ;, ()I, foo, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_NAME + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\"foo[METHOD_REF]{test.p.ZZZ.foo(), Ltest.p.ZZZ;, (I)I, foo, (i), \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_NAME + R_NON_RESTRICTED)+\"}\",", "+\t\t\t\"foo[METHOD_REF]{ZZZ.foo(), Ltest.p.ZZZ;, ()I, foo, null, [\"+start1+\", \"+end1+\"], \"+(relevance1)+\"}\\n\" +", "+\t\t\t\"   ZZZ[TYPE_IMPORT]{import test.p.ZZZ;\\n, test.p, Ltest.p.ZZZ;, null, null, [\"+start2+\", \"+end2+\"], \" + (relevance1) + \"}\\n\"+", "+\t\t\t\"foo[METHOD_REF]{ZZZ.foo(), Ltest.p.ZZZ;, (I)I, foo, (i), [\"+start1+\", \"+end1+\"], \"+(relevance1)+\"}\\n\" +", "+\t\t\t\"   ZZZ[TYPE_IMPORT]{import test.p.ZZZ;\\n, test.p, Ltest.p.ZZZ;, null, null, [\"+start2+\", \"+end2+\"], \" + (relevance1) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7327c1555003d0ff08d78378eb7423a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "fb96a1c85d64a712beb45b02ec6ef71c691d3831", "commitAfterChange": "382b067fdb60eb61ee53faad83800b76fff0bbbf", "methodNumberBeforeChange": 321, "methodNumberAfterChange": 321, "signatureBeforeChange": " public void testFavoriteImports020() throws JavaModelException", "signatureAfterChange": " public void testFavoriteImports020() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true, false, true, false, true);", "+\trequestor.allowAllRequiredProposals();", "+\tint relevance1 = R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_NAME + R_NON_RESTRICTED;", "+\tint start1 = str.lastIndexOf(\"foo\") + \"\".length();", "+\tint end1 = start1 + \"foo\".length();", "+\tint start2 = str.lastIndexOf(\"public class\");", "+\tint end2 = start2 + \"\".length();", "-\t\t\t\"foo[METHOD_REF]{test.p.ZZZ.foo(), Ltest.p.ZZZ;, ()I, foo, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_NAME + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\"foo[METHOD_REF]{test.p.ZZZ.foo(), Ltest.p.ZZZ;, (I)I, foo, (i), \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_NAME + R_NON_RESTRICTED)+\"}\",", "+\t\t\t\"foo[METHOD_REF]{foo(), Ltest.p.ZZZ;, ()I, foo, null, [\"+start1+\", \"+end1+\"], \"+(relevance1)+\"}\\n\" +", "+\t\t\t\"   foo[METHOD_IMPORT]{import static test.p.ZZZ.foo;\\n, Ltest.p.ZZZ;, ()I, foo, null, [\"+start2+\", \"+end2+\"], \" + (relevance1) + \"}\\n\"+", "+\t\t\t\"foo[METHOD_REF]{foo(), Ltest.p.ZZZ;, (I)I, foo, (i), [\"+start1+\", \"+end1+\"], \"+(relevance1)+\"}\\n\" +", "+\t\t\t\"   foo[METHOD_IMPORT]{import static test.p.ZZZ.foo;\\n, Ltest.p.ZZZ;, (I)I, foo, (i), [\"+start2+\", \"+end2+\"], \" + (relevance1) + \"}\","]}], "num": 20048}