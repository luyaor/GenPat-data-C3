{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "06ac41029e8e90abe8fad70a503e56dc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5947566cc7202a9a2cc7745b6e1b7858", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/NestedTypeBinding.java", "commitBeforeChange": "f4bdb5d912579981f22fe9e7c4679e93b1a5f059", "commitAfterChange": "a3a09ad256da223aa1f3d2fe29b81e346d09a16c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " final public void computeSyntheticArgumentsOffset()", "signatureAfterChange": " \tfinal public void computeSyntheticArgumentSlotSizes()", "diff": ["- */", "-final public void computeSyntheticArgumentsOffset() {", "-", "-\tint position = 1; // inside constructor, reserve room for receiver", "-\t// insert enclosing instances first, followed by the outerLocals", "-\tSyntheticArgumentBinding[] enclosingInstances = this.syntheticEnclosingInstances();", "-\tint enclosingInstancesCount = enclosingInstances == null ? 0 : enclosingInstances.length;", "-\tfor (int i = 0; i < enclosingInstancesCount; i++){", "-\t\tSyntheticArgumentBinding syntheticArg = enclosingInstances[i];", "-\t\tsyntheticArg.resolvedPosition = position;", "-\t\tif ((syntheticArg.type == LongBinding) || (syntheticArg.type == DoubleBinding)){", "-\t\t\tposition += 2;", "-\t\t} else {", "-\t\t\tposition ++;", "-\t\t}", "-\tSyntheticArgumentBinding[] outerLocals = this.syntheticOuterLocalVariables();", "-\tint outerLocalsCount = outerLocals == null ? 0 : outerLocals.length;", "-\t\tfor (int i = 0; i < outerLocalsCount; i++){", "-\t\tSyntheticArgumentBinding syntheticArg = outerLocals[i];", "-\t\tsyntheticArg.resolvedPosition = position;", "-\t\tif ((syntheticArg.type == LongBinding) || (syntheticArg.type == DoubleBinding)){", "-\t\t\tposition += 2;", "-\t\t\tposition ++;", "-\tthis.syntheticArgumentsOffset = position;", "-}", "+\t */", "+\tfinal public void computeSyntheticArgumentSlotSizes() {", "+\t", "+\t\tint slotSize = 0; ", "+\t\t// insert enclosing instances first, followed by the outerLocals", "+\t\tSyntheticArgumentBinding[] enclosingInstances = this.syntheticEnclosingInstances();", "+\t\tint enclosingInstancesCount = enclosingInstances == null ? 0 : enclosingInstances.length;", "+\t\tfor (int i = 0; i < enclosingInstancesCount; i++){", "+\t\t\tSyntheticArgumentBinding argument = enclosingInstances[i];", "+\t\t\t// position the enclosing instance synthetic arg", "+\t\t\targument.resolvedPosition = slotSize + 1; // shift by 1 to leave room for aload0==this", "+\t\t\tif (slotSize + 1 > 0xFF) { // no more than 255 words of arguments", "+\t\t\t\tthis.scope.problemReporter().noMoreAvailableSpaceForArgument(argument, this.scope.referenceType()); ", "+\t\t\t}", "+\t\t\tif ((argument.type == LongBinding) || (argument.type == DoubleBinding)){", "+\t\t\t\tslotSize += 2;", "+\t\t\t} else {", "+\t\t\t\tslotSize ++;", "+\t\t\t}", "+\t\t}", "+\t\tthis.enclosingInstancesSlotSize = slotSize; ", "+\t\t", "+\t\tslotSize = 0; // reset, outer local are not positionned yet, since will be appended to user arguments", "+\t\tSyntheticArgumentBinding[] outerLocals = this.syntheticOuterLocalVariables();", "+\t\tint outerLocalsCount = outerLocals == null ? 0 : outerLocals.length;", "+\t\t\tfor (int i = 0; i < outerLocalsCount; i++){", "+\t\t\tSyntheticArgumentBinding argument = outerLocals[i];", "+\t\t\t// do NOT position the outerlocal synthetic arg yet,  since will be appended to user arguments", "+\t\t\tif ((argument.type == LongBinding) || (argument.type == DoubleBinding)){", "+\t\t\t\tslotSize += 2;", "+\t\t\t} else {", "+\t\t\t\tslotSize ++;", "+\t\t\t}", "+\t\t}", "+\t\tthis.outerLocalVariablesSlotSize = slotSize;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e98338c8d8c3f8914a80ef3dd790d235", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/NestedTypeBinding.java", "commitBeforeChange": "a107a93c33b9fbfeb3c58f06a397400d87b64e14", "commitAfterChange": "ac57d09afd251c5c3e8f5a329155e4ee05cc3840", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tfinal public void computeSyntheticArgumentSlotSizes()", "signatureAfterChange": " public int getOuterLocalVariablesSlotSize()", "diff": ["-\t */", "-\tfinal public void computeSyntheticArgumentSlotSizes() {", "-\t\tint slotSize = 0;", "-\t\t// insert enclosing instances first, followed by the outerLocals", "-\t\tint enclosingInstancesCount = this.enclosingInstances == null ? 0 : this.enclosingInstances.length;", "-\t\tfor (int i = 0; i < enclosingInstancesCount; i++){", "-\t\t\tSyntheticArgumentBinding argument = this.enclosingInstances[i];", "-\t\t\t// position the enclosing instance synthetic arg", "-\t\t\targument.resolvedPosition = slotSize + 1; // shift by 1 to leave room for aload0==this", "-\t\t\tif (slotSize + 1 > 0xFF) { // no more than 255 words of arguments", "-\t\t\t\tthis.scope.problemReporter().noMoreAvailableSpaceForArgument(argument, this.scope.referenceType());", "-\t\t\t}", "-\t\t\tif ((argument.type == TypeBinding.LONG) || (argument.type == TypeBinding.DOUBLE)){", "-\t\t\t\tslotSize += 2;", "-\t\t\t} else {", "-\t\t\t\tslotSize ++;", "-\t\t\t}", "-\t\t}", "-\t\tthis.enclosingInstancesSlotSize = slotSize;", "-\t\tslotSize = 0; // reset, outer local are not positionned yet, since will be appended to user arguments", "+ */", "+public int getOuterLocalVariablesSlotSize() {", "+\tif (this.outerLocalVariablesSlotSize < 0) {", "+\t\tthis.outerLocalVariablesSlotSize = 0;", "-\t\t\t// do NOT position the outerlocal synthetic arg yet,  since will be appended to user arguments", "-\t\t\tif ((argument.type == TypeBinding.LONG) || (argument.type == TypeBinding.DOUBLE)){", "-\t\t\t\tslotSize += 2;", "-\t\t\t} else {", "-\t\t\t\tslotSize ++;", "+\t\t\tswitch (argument.type.id) {", "+\t\t\t\tcase TypeIds.T_long :", "+\t\t\t\tcase TypeIds.T_double :", "+\t\t\t\t\tthis.outerLocalVariablesSlotSize  += 2;", "+\t\t\t\t\tbreak;", "+\t\t\t\tdefault :", "+\t\t\t\t\tthis.outerLocalVariablesSlotSize  ++;", "+\t\t\t\t\tbreak;", "+\t\t\t}\t\t", "+\t\t}", "+\t}", "+\treturn this.outerLocalVariablesSlotSize;", "+}", "-\t\tthis.outerLocalVariablesSlotSize = slotSize;"]}], "num": 16425}