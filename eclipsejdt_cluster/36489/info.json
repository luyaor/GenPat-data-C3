{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "93c94a62118bace8447416b3dc704ad4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f85d2bbfe22e1f8fefe45e9a0b941c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "a6355ed8a952db69dc06abd606ccc2ecc5f494cd", "commitAfterChange": "9c6c03c8b3926eebedde83d074e28e3eddb69ae2", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r \tpublic void configure() throws CoreException", "signatureAfterChange": "\r \tpublic void configure() throws CoreException", "diff": ["+\t\t// add project as child of java model\r", "+\t\tJavaModel model = (JavaModel) getJavaModel();\r", "+\t\tJavaElementInfo jmi = model.getElementInfo();\r", "+\t\tjmi.addChild(this);\r", "+\r", "-\t\tJavaModel model = (JavaModel) getJavaModel();\r", "-\t\tJavaElementDelta projectDelta = new JavaElementDelta(model);\r", "-\t\tprojectDelta.added(this);\r", "-\t\tJavaElementInfo jmi = model.getElementInfo();\r", "-\t\tjmi.addChild(this);\r", "-\t\tmanager.registerJavaModelDelta(projectDelta);\r", "+\t\tif (!manager.isBeingDeleted(this.getProject())) { \r", "+\t\t\tJavaElementDelta projectDelta = new JavaElementDelta(model);\r", "+\t\t\tprojectDelta.added(this);\r", "+\t\t\tmanager.registerJavaModelDelta(projectDelta);\r", "+\t\t} // else project is removed then added \r", "+\t\t  // -> it will be a changed delta reported by delta processor\r", "+\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1cb88a03b23d0d4399ac27f85b3b79a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "161b33b1dd753a14c62dc5cb298555b7a8135f16", "commitAfterChange": "0af694b5a2455cea6ace262561a6329b05ee9c78", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r \tpublic void locateMatches(String[] filePaths, IWorkspace workspace)\r \t\tthrows JavaModelException", "signatureAfterChange": "\r \tpublic void locateMatches(String[] filePaths, IWorkspace workspace)\r \t\tthrows JavaModelException", "diff": ["-\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();\r", "-\t\tHandleFactory factory = new HandleFactory(workspace.getRoot(), manager);\r", "+\t\tif (this.handleFactory == null) {\r", "+\t\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();\r", "+\t\t\tthis.handleFactory = new HandleFactory(workspace.getRoot(), manager);\r", "+\t\t}\r", "-\t\tboolean couldInitializePattern = false;\r", "-\t\t\tOpenable openable = factory.createOpenable(pathString);\r", "+\t\t\tOpenable openable = this.handleFactory.createOpenable(pathString);\r", "-\t\t\t\t\tcouldInitializePattern = this.createParser(javaProject);\r", "+\t\t\t\t\tthis.createParser(javaProject);\r", "-\t\t\t\tif (!couldInitializePattern)\r", "-\t\t\t\t\tcontinue;\r", "-\t\t\t\t// the pattern could not be initialized: the match cannot be in this project\r"]}], "num": 36489}