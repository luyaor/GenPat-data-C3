{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5f0f60b09e547b1d4148e10ae8fb2529", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "458f5c189a5be9272ba652a0bfec3a30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void computeId()", "signatureAfterChange": " public void computeId()", "diff": ["-\t\t\tif (!CharOperation.equals(JAVA, compoundName[0]))", "+\t\t\tif (!CharOperation.equals(TypeConstants.JAVA, compoundName[0]))", "-\t\t\tif (!CharOperation.equals(LANG, compoundName[1])) {", "-\t\t\t\tif (CharOperation.equals(JAVA_IO_PRINTSTREAM, compoundName))", "-\t\t\t\t\tid = T_JavaIoPrintStream;", "-\t\t\t\telse if (CharOperation.equals(JAVA_UTIL_ITERATOR, compoundName))", "-\t\t\t\t\tid = T_JavaUtilIterator;", "-\t\t\t\telse if (CharOperation.equals(JAVA_IO_SERIALIZABLE, compoundName))", "-\t\t\t\t    id = T_JavaIoSerializable;", "+\t\t\tif (!CharOperation.equals(TypeConstants.LANG, compoundName[1])) {", "+\t\t\t\tif (CharOperation.equals(TypeConstants.JAVA_IO_PRINTSTREAM, compoundName))", "+\t\t\t\t\tid = TypeIds.T_JavaIoPrintStream;", "+\t\t\t\telse if (CharOperation.equals(TypeConstants.JAVA_UTIL_ITERATOR, compoundName))", "+\t\t\t\t\tid = TypeIds.T_JavaUtilIterator;", "+\t\t\t\telse if (CharOperation.equals(TypeConstants.JAVA_IO_SERIALIZABLE, compoundName))", "+\t\t\t\t    id = TypeIds.T_JavaIoSerializable;", "-\t\t\t\t\tif (CharOperation.equals(typeName, JAVA_LANG_ASSERTIONERROR[2]))", "-\t\t\t\t\t\tid = T_JavaLangAssertionError;", "+\t\t\t\t\tif (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_ASSERTIONERROR[2]))", "+\t\t\t\t\t\tid = TypeIds.T_JavaLangAssertionError;", "-\t\t\t\t\tif (CharOperation.equals(typeName, JAVA_LANG_BOOLEAN[2]))", "-\t\t\t\t\t\tid = T_JavaLangBoolean;", "-\t\t\t\t\telse if (CharOperation.equals(typeName, JAVA_LANG_BYTE[2]))", "-\t\t\t\t\t\tid = T_JavaLangByte;", "+\t\t\t\t\tif (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_BOOLEAN[2]))", "+\t\t\t\t\t\tid = TypeIds.T_JavaLangBoolean;", "+\t\t\t\t\telse if (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_BYTE[2]))", "+\t\t\t\t\t\tid = TypeIds.T_JavaLangByte;", "-\t\t\t\t\tif (CharOperation.equals(typeName, JAVA_LANG_CHARACTER[2]))", "-\t\t\t\t\t\tid = T_JavaLangCharacter;", "-\t\t\t\t\telse if (CharOperation.equals(typeName, JAVA_LANG_CLASS[2]))", "-\t\t\t\t\t\tid = T_JavaLangClass;", "-\t\t\t\t\telse if (CharOperation.equals(typeName, JAVA_LANG_CLASSNOTFOUNDEXCEPTION[2]))", "-\t\t\t\t\t\tid = T_JavaLangClassNotFoundException;", "-\t\t\t\t\telse if (CharOperation.equals(typeName, JAVA_LANG_CLONEABLE[2]))", "-\t\t\t\t\t    id = T_JavaLangCloneable;", "+\t\t\t\t\tif (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_CHARACTER[2]))", "+\t\t\t\t\t\tid = TypeIds.T_JavaLangCharacter;", "+\t\t\t\t\telse if (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_CLASS[2]))", "+\t\t\t\t\t\tid = TypeIds.T_JavaLangClass;", "+\t\t\t\t\telse if (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_CLASSNOTFOUNDEXCEPTION[2]))", "+\t\t\t\t\t\tid = TypeIds.T_JavaLangClassNotFoundException;", "+\t\t\t\t\telse if (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_CLONEABLE[2]))", "+\t\t\t\t\t    id = TypeIds.T_JavaLangCloneable;", "-\t\t\t\t\tif (CharOperation.equals(typeName, JAVA_LANG_DOUBLE[2]))", "-\t\t\t\t\t\tid = T_JavaLangDouble;", "-\t\t\t\t\telse if (CharOperation.equals(typeName, JAVA_LANG_DEPRECATED[2]))", "-\t\t\t\t\t\tid = T_JavaLangDeprecated;", "+\t\t\t\t\tif (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_DOUBLE[2]))", "+\t\t\t\t\t\tid = TypeIds.T_JavaLangDouble;", "+\t\t\t\t\telse if (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_DEPRECATED[2]))", "+\t\t\t\t\t\tid = TypeIds.T_JavaLangDeprecated;", "-\t\t\t\t\tif (CharOperation.equals(typeName, JAVA_LANG_ERROR[2]))", "-\t\t\t\t\t\tid = T_JavaLangError;", "-\t\t\t\t\telse if (CharOperation.equals(typeName, JAVA_LANG_EXCEPTION[2]))", "-\t\t\t\t\t\tid = T_JavaLangException;", "-\t\t\t\t\telse if (CharOperation.equals(typeName, JAVA_LANG_ENUM[2]))", "-\t\t\t\t\t\tid = T_JavaLangEnum;", "+\t\t\t\t\tif (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_ERROR[2]))", "+\t\t\t\t\t\tid = TypeIds.T_JavaLangError;", "+\t\t\t\t\telse if (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_EXCEPTION[2]))", "+\t\t\t\t\t\tid = TypeIds.T_JavaLangException;", "+\t\t\t\t\telse if (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_ENUM[2]))", "+\t\t\t\t\t\tid = TypeIds.T_JavaLangEnum;", "-\t\t\t\t\tif (CharOperation.equals(typeName, JAVA_LANG_FLOAT[2]))", "-\t\t\t\t\t\tid = T_JavaLangFloat;", "+\t\t\t\t\tif (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_FLOAT[2]))", "+\t\t\t\t\t\tid = TypeIds.T_JavaLangFloat;", "-\t\t\t\t\tif (CharOperation.equals(typeName, JAVA_LANG_INTEGER[2]))", "-\t\t\t\t\t\tid = T_JavaLangInteger;", "-\t\t\t\t\telse if (CharOperation.equals(typeName, JAVA_LANG_ITERABLE[2]))", "-\t\t\t\t\t\tid = T_JavaLangIterable;", "-\t\t\t\t\telse if (CharOperation.equals(typeName, JAVA_LANG_ILLEGALARGUMENTEXCEPTION[2]))", "-\t\t\t\t\t\tid = T_JavaLangIllegalArgumentException;", "+\t\t\t\t\tif (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_INTEGER[2]))", "+\t\t\t\t\t\tid = TypeIds.T_JavaLangInteger;", "+\t\t\t\t\telse if (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_ITERABLE[2]))", "+\t\t\t\t\t\tid = TypeIds.T_JavaLangIterable;", "+\t\t\t\t\telse if (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_ILLEGALARGUMENTEXCEPTION[2]))", "+\t\t\t\t\t\tid = TypeIds.T_JavaLangIllegalArgumentException;", "-\t\t\t\t\tif (CharOperation.equals(typeName, JAVA_LANG_LONG[2]))", "-\t\t\t\t\t\tid = T_JavaLangLong;", "+\t\t\t\t\tif (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_LONG[2]))", "+\t\t\t\t\t\tid = TypeIds.T_JavaLangLong;", "-\t\t\t\t\tif (CharOperation.equals(typeName, JAVA_LANG_NOCLASSDEFERROR[2]))", "-\t\t\t\t\t\tid = T_JavaLangNoClassDefError;", "+\t\t\t\t\tif (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_NOCLASSDEFERROR[2]))", "+\t\t\t\t\t\tid = TypeIds.T_JavaLangNoClassDefError;", "-\t\t\t\t\tif (CharOperation.equals(typeName, JAVA_LANG_OBJECT[2]))", "-\t\t\t\t\t\tid = T_JavaLangObject;", "-\t\t\t\t\telse if (CharOperation.equals(typeName, JAVA_LANG_OVERRIDE[2]))", "-\t\t\t\t\t\tid = T_JavaLangOverride;", "+\t\t\t\t\tif (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_OBJECT[2]))", "+\t\t\t\t\t\tid = TypeIds.T_JavaLangObject;", "+\t\t\t\t\telse if (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_OVERRIDE[2]))", "+\t\t\t\t\t\tid = TypeIds.T_JavaLangOverride;", "-\t\t\t\t\tif (CharOperation.equals(typeName, JAVA_LANG_RUNTIMEEXCEPTION[2]))", "-\t\t\t\t\t\tid = \tT_JavaLangRuntimeException;", "+\t\t\t\t\tif (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_RUNTIMEEXCEPTION[2]))", "+\t\t\t\t\t\tid = \tTypeIds.T_JavaLangRuntimeException;", "-\t\t\t\t\tif (CharOperation.equals(typeName, JAVA_LANG_STRING[2]))", "-\t\t\t\t\t\tid = T_JavaLangString;", "-\t\t\t\t\telse if (CharOperation.equals(typeName, JAVA_LANG_STRINGBUFFER[2]))", "-\t\t\t\t\t\tid = T_JavaLangStringBuffer;", "-\t\t\t\t\telse if (CharOperation.equals(typeName, JAVA_LANG_STRINGBUILDER[2])) ", "-\t\t\t\t\t\tid = T_JavaLangStringBuilder;", "-\t\t\t\t\telse if (CharOperation.equals(typeName, JAVA_LANG_SYSTEM[2]))", "-\t\t\t\t\t\tid = T_JavaLangSystem;", "-\t\t\t\t\telse if (CharOperation.equals(typeName, JAVA_LANG_SHORT[2]))", "-\t\t\t\t\t\tid = T_JavaLangShort;", "-\t\t\t\t\telse if (CharOperation.equals(typeName, JAVA_LANG_SUPPRESSWARNINGS[2]))", "-\t\t\t\t\t\tid = T_JavaLangSuppressWarnings;", "+\t\t\t\t\tif (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_STRING[2]))", "+\t\t\t\t\t\tid = TypeIds.T_JavaLangString;", "+\t\t\t\t\telse if (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_STRINGBUFFER[2]))", "+\t\t\t\t\t\tid = TypeIds.T_JavaLangStringBuffer;", "+\t\t\t\t\telse if (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_STRINGBUILDER[2])) ", "+\t\t\t\t\t\tid = TypeIds.T_JavaLangStringBuilder;", "+\t\t\t\t\telse if (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_SYSTEM[2]))", "+\t\t\t\t\t\tid = TypeIds.T_JavaLangSystem;", "+\t\t\t\t\telse if (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_SHORT[2]))", "+\t\t\t\t\t\tid = TypeIds.T_JavaLangShort;", "+\t\t\t\t\telse if (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_SUPPRESSWARNINGS[2]))", "+\t\t\t\t\t\tid = TypeIds.T_JavaLangSuppressWarnings;", "-\t\t\t\t\tif (CharOperation.equals(typeName, JAVA_LANG_THROWABLE[2]))", "-\t\t\t\t\t\tid = T_JavaLangThrowable;", "+\t\t\t\t\tif (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_THROWABLE[2]))", "+\t\t\t\t\t\tid = TypeIds.T_JavaLangThrowable;", "-\t\t\t\t\tif (CharOperation.equals(typeName, JAVA_LANG_VOID[2]))", "-\t\t\t\t\t\tid = T_JavaLangVoid;", "+\t\t\t\t\tif (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_VOID[2]))", "+\t\t\t\t\t\tid = TypeIds.T_JavaLangVoid;", "-\t\t\tif (!CharOperation.equals(JAVA, compoundName[0]))", "+\t\t\tif (!CharOperation.equals(TypeConstants.JAVA, compoundName[0]))", "-\t\t\tif (!CharOperation.equals(LANG, compoundName[1]))", "+\t\t\tif (!CharOperation.equals(TypeConstants.LANG, compoundName[1]))", "-\t\t\tif (CharOperation.equals(packageName, REFLECT)) {", "-\t\t\t\tif (CharOperation.equals(typeName, JAVA_LANG_REFLECT_CONSTRUCTOR[3]))", "-\t\t\t\t\tid = T_JavaLangReflectConstructor;", "+\t\t\tif (CharOperation.equals(packageName, TypeConstants.REFLECT)) {", "+\t\t\t\tif (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_REFLECT_CONSTRUCTOR[3]))", "+\t\t\t\t\tid = TypeIds.T_JavaLangReflectConstructor;", "-\t\t\t} else if (CharOperation.equals(packageName, ANNOTATION)) {", "+\t\t\t} else if (CharOperation.equals(packageName, TypeConstants.ANNOTATION)) {", "-\t\t\t\t\t\tif (CharOperation.equals(typeName, JAVA_LANG_ANNOTATION_ANNOTATION[3]))", "-\t\t\t\t\t\t\tid = T_JavaLangAnnotationAnnotation;", "+\t\t\t\t\t\tif (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_ANNOTATION_ANNOTATION[3]))", "+\t\t\t\t\t\t\tid = TypeIds.T_JavaLangAnnotationAnnotation;", "-\t\t\t\t\t\tif (CharOperation.equals(typeName, JAVA_LANG_ANNOTATION_DOCUMENTED[3]))", "-\t\t\t\t\t\t\tid = T_JavaLangAnnotationDocumented;", "+\t\t\t\t\t\tif (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_ANNOTATION_DOCUMENTED[3]))", "+\t\t\t\t\t\t\tid = TypeIds.T_JavaLangAnnotationDocumented;", "-\t\t\t\t\t\tif (CharOperation.equals(typeName, JAVA_LANG_ANNOTATION_ELEMENTTYPE[3]))", "-\t\t\t\t\t\t\tid = T_JavaLangAnnotationElementType;", "+\t\t\t\t\t\tif (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_ANNOTATION_ELEMENTTYPE[3]))", "+\t\t\t\t\t\t\tid = TypeIds.T_JavaLangAnnotationElementType;", "-\t\t\t\t\t\tif (CharOperation.equals(typeName, JAVA_LANG_ANNOTATION_INHERITED[3]))", "-\t\t\t\t\t\t\tid = T_JavaLangAnnotationInherited;", "+\t\t\t\t\t\tif (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_ANNOTATION_INHERITED[3]))", "+\t\t\t\t\t\t\tid = TypeIds.T_JavaLangAnnotationInherited;", "-\t\t\t\t\t\tif (CharOperation.equals(typeName, JAVA_LANG_ANNOTATION_RETENTION[3]))", "-\t\t\t\t\t\t\tid = T_JavaLangAnnotationRetention;", "-\t\t\t\t\t\telse if (CharOperation.equals(typeName, JAVA_LANG_ANNOTATION_RETENTIONPOLICY[3]))", "-\t\t\t\t\t\t\tid = T_JavaLangAnnotationRetentionPolicy;", "+\t\t\t\t\t\tif (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_ANNOTATION_RETENTION[3]))", "+\t\t\t\t\t\t\tid = TypeIds.T_JavaLangAnnotationRetention;", "+\t\t\t\t\t\telse if (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_ANNOTATION_RETENTIONPOLICY[3]))", "+\t\t\t\t\t\t\tid = TypeIds.T_JavaLangAnnotationRetentionPolicy;", "-\t\t\t\t\t\tif (CharOperation.equals(typeName, JAVA_LANG_ANNOTATION_TARGET[3]))", "-\t\t\t\t\t\t\tid = T_JavaLangAnnotationTarget;", "+\t\t\t\t\t\tif (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_ANNOTATION_TARGET[3]))", "+\t\t\t\t\t\t\tid = TypeIds.T_JavaLangAnnotationTarget;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c392eb40330ed116dc0f29e2409df750", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void computeId()", "signatureAfterChange": " public void computeId()", "diff": ["-\tswitch (compoundName.length) {", "+\tswitch (this.compoundName.length) {", "-\t\t\tif (!CharOperation.equals(TypeConstants.JAVA, compoundName[0]))", "+\t\t\tif (!CharOperation.equals(TypeConstants.JAVA, this.compoundName[0]))", "-\t\t\tif (!CharOperation.equals(TypeConstants.LANG, compoundName[1])) {", "-\t\t\t\tif (CharOperation.equals(TypeConstants.JAVA_IO_PRINTSTREAM, compoundName))", "-\t\t\t\t\tid = TypeIds.T_JavaIoPrintStream;", "-\t\t\t\telse if (CharOperation.equals(TypeConstants.JAVA_UTIL_ITERATOR, compoundName))", "-\t\t\t\t\tid = TypeIds.T_JavaUtilIterator;", "-\t\t\t\telse if (CharOperation.equals(TypeConstants.JAVA_IO_SERIALIZABLE, compoundName))", "-\t\t\t\t    id = TypeIds.T_JavaIoSerializable;", "+\t\t\tif (!CharOperation.equals(TypeConstants.LANG, this.compoundName[1])) {", "+\t\t\t\tif (CharOperation.equals(TypeConstants.JAVA_IO_PRINTSTREAM, this.compoundName))", "+\t\t\t\t\tthis.id = TypeIds.T_JavaIoPrintStream;", "+\t\t\t\telse if (CharOperation.equals(TypeConstants.JAVA_UTIL_ITERATOR, this.compoundName))", "+\t\t\t\t\tthis.id = TypeIds.T_JavaUtilIterator;", "+\t\t\t\telse if (CharOperation.equals(TypeConstants.JAVA_IO_SERIALIZABLE, this.compoundName))", "+\t\t\t\t    this.id = TypeIds.T_JavaIoSerializable;", "-\t\t\tchar[] typeName = compoundName[2];", "+\t\t\tchar[] typeName = this.compoundName[2];", "-\t\t\t\t\t\tid = TypeIds.T_JavaLangAssertionError;", "+\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangAssertionError;", "-\t\t\t\t\t\tid = TypeIds.T_JavaLangBoolean;", "+\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangBoolean;", "-\t\t\t\t\t\tid = TypeIds.T_JavaLangByte;", "+\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangByte;", "-\t\t\t\t\t\tid = TypeIds.T_JavaLangCharacter;", "+\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangCharacter;", "-\t\t\t\t\t\tid = TypeIds.T_JavaLangClass;", "+\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangClass;", "-\t\t\t\t\t\tid = TypeIds.T_JavaLangClassNotFoundException;", "+\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangClassNotFoundException;", "-\t\t\t\t\t    id = TypeIds.T_JavaLangCloneable;", "+\t\t\t\t\t    this.id = TypeIds.T_JavaLangCloneable;", "-\t\t\t\t\t\tid = TypeIds.T_JavaLangDouble;", "+\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangDouble;", "-\t\t\t\t\t\tid = TypeIds.T_JavaLangDeprecated;", "+\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangDeprecated;", "-\t\t\t\t\t\tid = TypeIds.T_JavaLangError;", "+\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangError;", "-\t\t\t\t\t\tid = TypeIds.T_JavaLangException;", "+\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangException;", "-\t\t\t\t\t\tid = TypeIds.T_JavaLangEnum;", "+\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangEnum;", "-\t\t\t\t\t\tid = TypeIds.T_JavaLangFloat;", "+\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangFloat;", "-\t\t\t\t\t\tid = TypeIds.T_JavaLangInteger;", "+\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangInteger;", "-\t\t\t\t\t\tid = TypeIds.T_JavaLangIterable;", "+\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangIterable;", "-\t\t\t\t\t\tid = TypeIds.T_JavaLangIllegalArgumentException;", "+\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangIllegalArgumentException;", "-\t\t\t\t\t\tid = TypeIds.T_JavaLangLong;", "+\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangLong;", "-\t\t\t\t\t\tid = TypeIds.T_JavaLangNoClassDefError;", "+\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangNoClassDefError;", "-\t\t\t\t\t\tid = TypeIds.T_JavaLangObject;", "+\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangObject;", "-\t\t\t\t\t\tid = TypeIds.T_JavaLangOverride;", "+\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangOverride;", "-\t\t\t\t\t\tid = \tTypeIds.T_JavaLangRuntimeException;", "+\t\t\t\t\t\tthis.id = \tTypeIds.T_JavaLangRuntimeException;", "-\t\t\t\t\t\tid = TypeIds.T_JavaLangString;", "+\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangString;", "-\t\t\t\t\t\tid = TypeIds.T_JavaLangStringBuffer;", "+\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangStringBuffer;", "-\t\t\t\t\t\tid = TypeIds.T_JavaLangStringBuilder;", "+\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangStringBuilder;", "-\t\t\t\t\t\tid = TypeIds.T_JavaLangSystem;", "+\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangSystem;", "-\t\t\t\t\t\tid = TypeIds.T_JavaLangShort;", "+\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangShort;", "-\t\t\t\t\t\tid = TypeIds.T_JavaLangSuppressWarnings;", "+\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangSuppressWarnings;", "-\t\t\t\t\t\tid = TypeIds.T_JavaLangThrowable;", "+\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangThrowable;", "-\t\t\t\t\t\tid = TypeIds.T_JavaLangVoid;", "+\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangVoid;", "-\t\t\tif (!CharOperation.equals(TypeConstants.JAVA, compoundName[0]))", "+\t\t\tif (!CharOperation.equals(TypeConstants.JAVA, this.compoundName[0]))", "-\t\t\tif (!CharOperation.equals(TypeConstants.LANG, compoundName[1]))", "+\t\t\tif (!CharOperation.equals(TypeConstants.LANG, this.compoundName[1]))", "-\t\t\tchar[] packageName = compoundName[2];", "+\t\t\tchar[] packageName = this.compoundName[2];", "-\t\t\ttypeName = compoundName[3];", "+\t\t\ttypeName = this.compoundName[3];", "-\t\t\t\t\tid = TypeIds.T_JavaLangReflectConstructor;", "+\t\t\t\t\tthis.id = TypeIds.T_JavaLangReflectConstructor;", "-\t\t\t\t\tid = TypeIds.T_JavaLangReflectField;", "+\t\t\t\t\tthis.id = TypeIds.T_JavaLangReflectField;", "-\t\t\t\t\tid = TypeIds.T_JavaLangReflectMethod;", "+\t\t\t\t\tthis.id = TypeIds.T_JavaLangReflectMethod;", "-\t\t\t\t\t\t\tid = TypeIds.T_JavaLangAnnotationAnnotation;", "+\t\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangAnnotationAnnotation;", "-\t\t\t\t\t\t\tid = TypeIds.T_JavaLangAnnotationDocumented;", "+\t\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangAnnotationDocumented;", "-\t\t\t\t\t\t\tid = TypeIds.T_JavaLangAnnotationElementType;", "+\t\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangAnnotationElementType;", "-\t\t\t\t\t\t\tid = TypeIds.T_JavaLangAnnotationInherited;", "+\t\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangAnnotationInherited;", "-\t\t\t\t\t\t\tid = TypeIds.T_JavaLangAnnotationRetention;", "+\t\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangAnnotationRetention;", "-\t\t\t\t\t\t\tid = TypeIds.T_JavaLangAnnotationRetentionPolicy;", "+\t\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangAnnotationRetentionPolicy;", "-\t\t\t\t\t\t\tid = TypeIds.T_JavaLangAnnotationTarget;", "+\t\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangAnnotationTarget;"]}], "num": 40832}