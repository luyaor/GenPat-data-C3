{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "67f3380bcd0cae1792b9aa9cd2f64827", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "065f7fd7596576fb492b93073360d934", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingMethodDeclTest.java", "commitBeforeChange": "53e27f97209b6bdab08922bfe6e0472ea5c9632d", "commitAfterChange": "f50d9bbda9dc7f3959092c23f3ad0c06015c43b5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void testMethodDeclChanges_only_2() throws Exception", "signatureAfterChange": "   \tpublic void testMethodDeclChanges() throws Exception", "diff": ["-\tpublic void testMethodDeclChanges_only_2() throws Exception {", "+", "+\tpublic void testMethodDeclChanges() throws Exception {", "-\t\t\trewrite.set(methodDecl, MethodDeclaration.RETURN_TYPE_PROPERTY, newReturnType, null);", "+\t\t\trewrite.set(methodDecl, getMethodReturnTypeProperty(ast), newReturnType, null);", "-\t\t\tassertTrue(\"Has no return type: gee\", methodDecl.getReturnType() != null);", "+\t\t\tassertTrue(\"Has no return type: gee\", getReturnType(methodDecl) != null);", "-\t\t\tType returnType= methodDecl.getReturnType();", "+\t\t\tType returnType= getReturnType(methodDecl);", "-\t\t\tassertTrue(\"Has no return type: hee\", methodDecl.getReturnType() != null);", "+\t\t\tassertTrue(\"Has no return type: hee\", getReturnType(methodDecl) != null);", "-\t\t\tList thrownExceptions= methodDecl.thrownExceptions();", "+\t\t\tList thrownExceptions= getThrownExceptions(methodDecl);", "-\t\t\tName newThrownException= ast.newSimpleName(\"ArrayStoreException\");", "+\t\t\tASTNode newThrownException= createNewExceptionType(ast, \"ArrayStoreException\");", "-\t\t\tList thrownExceptions= methodDecl.thrownExceptions();", "+\t\t\tList thrownExceptions= getThrownExceptions(methodDecl);", "-\t\t\tName newThrownException1= ast.newSimpleName(\"ArrayStoreException\");", "-\t\t\tName newThrownException2= ast.newSimpleName(\"InterruptedException\");", "+\t\t\tASTNode newThrownException1= createNewExceptionType(ast, \"ArrayStoreException\");", "+\t\t\tASTNode newThrownException2= createNewExceptionType(ast, \"InterruptedException\");", "-\t\t\tList thrownExceptions= methodDecl.thrownExceptions();", "+\t\t\tList thrownExceptions= getThrownExceptions(methodDecl);", "-\t\t\tName newThrownException= ast.newSimpleName(\"ArrayStoreException\");", "+\t\t\tASTNode newThrownException= createNewExceptionType(ast, \"ArrayStoreException\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b68abd929a935139ea83880d24624b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingMethodDeclTest.java", "commitBeforeChange": "cbe22d350fa314e6e5df169cf670cab9bb8c2a20", "commitAfterChange": "b42e8d4e3737175b925c20ff2d83cccd857d4944", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \tpublic void testListInserts() throws Exception", "signatureAfterChange": "  \tpublic void testListInserts() throws Exception", "diff": ["-\t\t\tName newThrownException= ast.newSimpleName(\"InterruptedException\");", "+\t\t\tASTNode newThrownException= createNewExceptionType(ast, \"InterruptedException\");", "-\t\t\tName newThrownException= ast.newSimpleName(\"InterruptedException\");", "+\t\t\tASTNode newThrownException= createNewExceptionType(ast, \"InterruptedException\");", "-\t\t\tName newThrownException= ast.newSimpleName(\"InterruptedException\");", "+\t\t\tASTNode newThrownException= createNewExceptionType(ast, \"InterruptedException\");", "-\t\t\tName newThrownException= ast.newSimpleName(\"InterruptedException\");", "+\t\t\tASTNode newThrownException= createNewExceptionType(ast, \"InterruptedException\");", "-\t\t\tName newThrownException1= ast.newSimpleName(\"InterruptedException\");", "+\t\t\tASTNode newThrownException1= createNewExceptionType(ast, \"InterruptedException\");", "-\t\t\tName newThrownException2= ast.newSimpleName(\"ArrayStoreException\");", "+\t\t\tASTNode newThrownException2= createNewExceptionType(ast, \"ArrayStoreException\");", "-\t\t\tName newThrownException= ast.newSimpleName(\"InterruptedException\");", "+\t\t\tASTNode newThrownException= createNewExceptionType(ast, \"InterruptedException\");", "-\t\t\tName newThrownException= ast.newSimpleName(\"InterruptedException\");", "+\t\t\tASTNode newThrownException= createNewExceptionType(ast, \"InterruptedException\");"]}], "num": 3933}