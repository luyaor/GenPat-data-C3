{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aa7b308f97869d0cd42c125d69aa036e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b486435fcc6f8cfea5cc7c58ee740fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/OptionTests.java", "commitBeforeChange": "84bc512fd479cfff2f73ee854c44099b01de5b79", "commitAfterChange": "55369835f4de509d18e116254a7a5ee5fbfb9076", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void testBug72214() throws CoreException, BackingStoreException", "signatureAfterChange": " \tpublic void testBug72214() throws CoreException, BackingStoreException", "diff": ["-\t\t// Remove JavaCore instance prefs", "-\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "-\t\tIEclipsePreferences preferences = manager.getInstancePreferences();", "-\t\tint size = JavaCore.getOptions().size();", "-\t\tpreferences.removeNode();", "-\t", "-\t\t// verify that JavaCore preferences have been reset", "-\t\tassertFalse(\"JavaCore preferences should have been reset\", preferences == manager.getInstancePreferences());", "-\t\tassertEquals(\"JavaCore preferences should have been resotred!\", size, JavaCore.getOptions().size());", "+\t\ttry {", "+\t\t\t// Remove JavaCore instance prefs", "+\t\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "+\t\t\tIEclipsePreferences preferences = manager.getInstancePreferences();", "+\t\t\tint size = JavaCore.getOptions().size();", "+\t\t\tpreferences.removeNode();", "-\t\t// Put back default options", "-\t\tJavaCore.setOptions(JavaCore.getDefaultOptions());", "+\t\t\t// verify that JavaCore preferences have been reset", "+\t\t\tassertFalse(\"JavaCore preferences should have been reset\", preferences == manager.getInstancePreferences());", "+\t\t\tassertEquals(\"JavaCore preferences should have been resotred!\", size, JavaCore.getOptions().size());", "+\t\t} finally {", "+\t\t\t// Put back default options", "+\t\t\tJavaCore.setOptions(JavaCore.getDefaultOptions());", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b8b3ac7ad782ddddd6eb3f4bde5f204", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "e3d875263ee12404bb21dc7fcef95c903c7f1b24", "commitAfterChange": "3e350d8ca4b864ea7ab31af7c0cd5be570888a19", "methodNumberBeforeChange": 758, "methodNumberAfterChange": 758, "signatureBeforeChange": " public void testCompletionVisibilityCheckEnabled() throws JavaModelException", "signatureAfterChange": " public void testCompletionVisibilityCheckEnabled() throws JavaModelException", "diff": ["-", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionVisibilityCheck.java\");", "-\tString str = cu.getSource();", "-\tString completeBehind = \"x.p\";", "-\tint cursorLocation = str.indexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-", "-\toptions.put(visibilityCheckID,visibilityCheckPreviousValue);", "-\tJavaCore.setOptions(options);", "+\ttry {", "+\t\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionVisibilityCheck.java\");", "+\t", "+\t\tString str = cu.getSource();", "+\t\tString completeBehind = \"x.p\";", "+\t\tint cursorLocation = str.indexOf(completeBehind) + completeBehind.length();", "+\t\tcu.codeComplete(cursorLocation, requestor);", "+\t} finally {", "+\t\toptions.put(visibilityCheckID,visibilityCheckPreviousValue);", "+\t\tJavaCore.setOptions(options);", "+\t}"]}], "num": 49854}