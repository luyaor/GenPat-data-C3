{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c7f93875413c13b0f056d9686900627e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a5cb2a1be2f35c2bb74ec32856d1455", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "4e700a9e3cdab5cede60d95c3f4cde7257971ca3", "commitAfterChange": "d752b26e3a6a22a0d2aea83eca1f4ca2bd2e36dd", "methodNumberBeforeChange": 213, "methodNumberAfterChange": 214, "signatureBeforeChange": " \tpublic void test075()", "signatureAfterChange": " \tpublic void test075()", "diff": ["-\t\tString expectedOutput = new CompilerOptions(getCompilerOptions()).sourceLevel < ClassFileConstants.JDK1_6", "-\t\t\t?\t\"----------\\n\" + ", "-\t\t\t\t\"1. ERROR in A.java (at line 2)\\n\" + ", "-\t\t\t\t\"\tclass B extends A { @Override <T1, S1 extends J & I<S1>> void foo() { } }\\n\" + ", "-\t\t\t\t\"\t                                                              ^^^^^\\n\" + ", "-\t\t\t\t\"Name clash: The method foo() of type B has the same erasure as foo() of type A but does not override it\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"2. ERROR in A.java (at line 2)\\n\" + ", "-\t\t\t\t\"\tclass B extends A { @Override <T1, S1 extends J & I<S1>> void foo() { } }\\n\" + ", "-\t\t\t\t\"\t                                                              ^^^^^\\n\" + ", "-\t\t\t\t\"The method foo() of type B must override a superclass method\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"3. WARNING in A.java (at line 3)\\n\" + ", "-\t\t\t\t\"\tclass C extends A { @Override <T2, S2 extends J & I> void foo() { } }\\n\" + ", "-\t\t\t\t\"\t                                                  ^\\n\" + ", "-\t\t\t\t\"I is a raw type. References to generic type I<TT> should be parameterized\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"4. ERROR in A.java (at line 3)\\n\" + ", "-\t\t\t\t\"\tclass C extends A { @Override <T2, S2 extends J & I> void foo() { } }\\n\" + ", "-\t\t\t\t\"\t                                                          ^^^^^\\n\" + ", "-\t\t\t\t\"Name clash: The method foo() of type C has the same erasure as foo() of type A but does not override it\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"5. ERROR in A.java (at line 3)\\n\" + ", "-\t\t\t\t\"\tclass C extends A { @Override <T2, S2 extends J & I> void foo() { } }\\n\" + ", "-\t\t\t\t\"\t                                                          ^^^^^\\n\" + ", "-\t\t\t\t\"The method foo() of type C must override a superclass method\\n\" + ", "-\t\t\t\t\"----------\\n\"", "-\t\t\t:\t\"----------\\n\" + ", "-\t\t\t\t\"1. ERROR in A.java (at line 2)\\n\" + ", "-\t\t\t\t\"\tclass B extends A { @Override <T1, S1 extends J & I<S1>> void foo() { } }\\n\" + ", "-\t\t\t\t\"\t                                                              ^^^^^\\n\" + ", "-\t\t\t\t\"Name clash: The method foo() of type B has the same erasure as foo() of type A but does not override it\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"2. ERROR in A.java (at line 2)\\n\" + ", "-\t\t\t\t\"\tclass B extends A { @Override <T1, S1 extends J & I<S1>> void foo() { } }\\n\" + ", "-\t\t\t\t\"\t                                                              ^^^^^\\n\" + ", "-\t\t\t\t\"The method foo() of type B must override or implement a supertype method\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"3. WARNING in A.java (at line 3)\\n\" + ", "-\t\t\t\t\"\tclass C extends A { @Override <T2, S2 extends J & I> void foo() { } }\\n\" + ", "-\t\t\t\t\"\t                                                  ^\\n\" + ", "-\t\t\t\t\"I is a raw type. References to generic type I<TT> should be parameterized\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"4. ERROR in A.java (at line 3)\\n\" + ", "-\t\t\t\t\"\tclass C extends A { @Override <T2, S2 extends J & I> void foo() { } }\\n\" + ", "-\t\t\t\t\"\t                                                          ^^^^^\\n\" + ", "-\t\t\t\t\"Name clash: The method foo() of type C has the same erasure as foo() of type A but does not override it\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"5. ERROR in A.java (at line 3)\\n\" + ", "-\t\t\t\t\"\tclass C extends A { @Override <T2, S2 extends J & I> void foo() { } }\\n\" + ", "-\t\t\t\t\"\t                                                          ^^^^^\\n\" + ", "-\t\t\t\t\"The method foo() of type C must override or implement a supertype method\\n\" + ", "-\t\t\t\t\"----------\\n\";\t\t", "-\t\t\texpectedOutput", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in A.java (at line 2)\\n\" + ", "+\t\t\t\"\tclass B extends A { @Override <T1, S1 extends J & I<S1>> void foo() { } }\\n\" + ", "+\t\t\t\"\t                                                              ^^^^^\\n\" + ", "+\t\t\t\"Name clash: The method foo() of type B has the same erasure as foo() of type A but does not override it\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in A.java (at line 2)\\n\" + ", "+\t\t\t\"\tclass B extends A { @Override <T1, S1 extends J & I<S1>> void foo() { } }\\n\" + ", "+\t\t\t\"\t                                                              ^^^^^\\n\" + ", "+\t\t\tmustOverrideMessage(\"foo()\", \"B\") + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in A.java (at line 3)\\n\" + ", "+\t\t\t\"\tclass C extends A { @Override <T2, S2 extends J & I> void foo() { } }\\n\" + ", "+\t\t\t\"\t                                                  ^\\n\" + ", "+\t\t\t\"I is a raw type. References to generic type I<TT> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in A.java (at line 3)\\n\" + ", "+\t\t\t\"\tclass C extends A { @Override <T2, S2 extends J & I> void foo() { } }\\n\" + ", "+\t\t\t\"\t                                                          ^^^^^\\n\" + ", "+\t\t\t\"Name clash: The method foo() of type C has the same erasure as foo() of type A but does not override it\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. ERROR in A.java (at line 3)\\n\" + ", "+\t\t\t\"\tclass C extends A { @Override <T2, S2 extends J & I> void foo() { } }\\n\" + ", "+\t\t\t\"\t                                                          ^^^^^\\n\" +  ", "+\t\t\tmustOverrideMessage(\"foo()\", \"C\") +", "+\t\t\t\"----------\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96461b971c08f70bcbaa30b827caf29e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "4e700a9e3cdab5cede60d95c3f4cde7257971ca3", "commitAfterChange": "d752b26e3a6a22a0d2aea83eca1f4ca2bd2e36dd", "methodNumberBeforeChange": 194, "methodNumberAfterChange": 195, "signatureBeforeChange": " \tpublic void test062()", "signatureAfterChange": " \tpublic void test062()", "diff": ["-\t\tString expectedOutput = new CompilerOptions(getCompilerOptions()).sourceLevel < ClassFileConstants.JDK1_6", "-\t\t?\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in Errors.java (at line 6)\\n\" + ", "-\t\t\t\"\tex.six(\\\"eclipse\\\");\\n\" + ", "-\t\t\t\"\t   ^^^\\n\" + ", "-\t\t\t\"The method six(String) is ambiguous for the type Ex<String>\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. WARNING in Errors.java (at line 7)\\n\" + ", "-\t\t\t\"\tEx ex2 = ex;\\n\" + ", "-\t\t\t\"\t^^\\n\" + ", "-\t\t\t\"Ex is a raw type. References to generic type Ex<C> should be parameterized\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. WARNING in Errors.java (at line 9)\\n\" + ", "-\t\t\t\"\tex2.five(\\\"eclipse\\\");\\n\" + ", "-\t\t\t\"\t^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Type safety: The method five(Object) belongs to the raw type Ex. References to generic type Ex<C> should be parameterized\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. ERROR in Errors.java (at line 10)\\n\" + ", "-\t\t\t\"\tex2.six(\\\"eclipse\\\");\\n\" + ", "-\t\t\t\"\t    ^^^\\n\" + ", "-\t\t\t\"The method six(Object) is ambiguous for the type Ex\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"5. ERROR in Errors.java (at line 21)\\n\" + ", "-\t\t\t\"\t@Override <M> void six(C cEx) {}\\n\" + ", "-\t\t\t\"\t                   ^^^^^^^^^^\\n\" + ", "-\t\t\t\"Name clash: The method six(C) of type Ex<C> has the same erasure as six(TC) of type Top<TC> but does not override it\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"6. ERROR in Errors.java (at line 21)\\n\" + ", "-\t\t\t\"\t@Override <M> void six(C cEx) {}\\n\" + ", "-\t\t\t\"\t                   ^^^^^^^^^^\\n\" + ", "-\t\t\t\"The method six(C) of type Ex<C> must override a superclass method\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t:\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in Errors.java (at line 6)\\n\" + ", "-\t\t\t\"\tex.six(\\\"eclipse\\\");\\n\" + ", "-\t\t\t\"\t   ^^^\\n\" + ", "-\t\t\t\"The method six(String) is ambiguous for the type Ex<String>\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. WARNING in Errors.java (at line 7)\\n\" + ", "-\t\t\t\"\tEx ex2 = ex;\\n\" + ", "-\t\t\t\"\t^^\\n\" + ", "-\t\t\t\"Ex is a raw type. References to generic type Ex<C> should be parameterized\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. WARNING in Errors.java (at line 9)\\n\" + ", "-\t\t\t\"\tex2.five(\\\"eclipse\\\");\\n\" + ", "-\t\t\t\"\t^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Type safety: The method five(Object) belongs to the raw type Ex. References to generic type Ex<C> should be parameterized\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. ERROR in Errors.java (at line 10)\\n\" + ", "-\t\t\t\"\tex2.six(\\\"eclipse\\\");\\n\" + ", "-\t\t\t\"\t    ^^^\\n\" + ", "-\t\t\t\"The method six(Object) is ambiguous for the type Ex\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"5. ERROR in Errors.java (at line 21)\\n\" + ", "-\t\t\t\"\t@Override <M> void six(C cEx) {}\\n\" + ", "-\t\t\t\"\t                   ^^^^^^^^^^\\n\" + ", "-\t\t\t\"Name clash: The method six(C) of type Ex<C> has the same erasure as six(TC) of type Top<TC> but does not override it\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"6. ERROR in Errors.java (at line 21)\\n\" + ", "-\t\t\t\"\t@Override <M> void six(C cEx) {}\\n\" + ", "-\t\t\t\"\t                   ^^^^^^^^^^\\n\" + ", "-\t\t\t\"The method six(C) of type Ex<C> must override or implement a supertype method\\n\" + ", "-\t\t\t\"----------\\n\";\t\t", "-\t\t\t\tthis.runNegativeTest(", "+\t\tthis.runNegativeTest(", "-\t\t\texpectedOutput", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in Errors.java (at line 6)\\n\" + ", "+\t\t\t\"\tex.six(\\\"eclipse\\\");\\n\" + ", "+\t\t\t\"\t   ^^^\\n\" + ", "+\t\t\t\"The method six(String) is ambiguous for the type Ex<String>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in Errors.java (at line 7)\\n\" + ", "+\t\t\t\"\tEx ex2 = ex;\\n\" + ", "+\t\t\t\"\t^^\\n\" + ", "+\t\t\t\"Ex is a raw type. References to generic type Ex<C> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in Errors.java (at line 9)\\n\" + ", "+\t\t\t\"\tex2.five(\\\"eclipse\\\");\\n\" + ", "+\t\t\t\"\t^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The method five(Object) belongs to the raw type Ex. References to generic type Ex<C> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in Errors.java (at line 10)\\n\" + ", "+\t\t\t\"\tex2.six(\\\"eclipse\\\");\\n\" + ", "+\t\t\t\"\t    ^^^\\n\" + ", "+\t\t\t\"The method six(Object) is ambiguous for the type Ex\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. ERROR in Errors.java (at line 21)\\n\" + ", "+\t\t\t\"\t@Override <M> void six(C cEx) {}\\n\" + ", "+\t\t\t\"\t                   ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Name clash: The method six(C) of type Ex<C> has the same erasure as six(TC) of type Top<TC> but does not override it\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. ERROR in Errors.java (at line 21)\\n\" + ", "+\t\t\t\"\t@Override <M> void six(C cEx) {}\\n\" + ", "+\t\t\t\"\t                   ^^^^^^^^^^\\n\" + ", "+\t\t\tmustOverrideMessage(\"six(C)\", \"Ex<C>\") + ", "+\t\t\t\"----------\\n\""]}], "num": 58420}