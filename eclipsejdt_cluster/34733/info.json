{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "023fe11f51a2d0b7cf13ffc81fd16071", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0837d16cbf76aeb3f54241f4fe9ade71", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "51ef1f3e636c416c08f983016f64f795f2b9cc74", "commitAfterChange": "9d3908e6916e224f861c3acffb456d39563ef22b", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " \t \tpublic void test056()", "signatureAfterChange": " \t \tpublic void test056()", "diff": ["-\t\t\t\"2. WARNING in X.java (at line 9)\\n\" + ", "-\t\t\t\"\tSystem.out.println((X)xs.t);\\n\" + ", "-\t\t\t\"\t                    ^\\n\" + ", "-\t\t\t\"Type safety: X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "-\t\t\t\"----------\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a9793081ba8956090ad067427cac505", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/RootManipulationsTests.java", "commitBeforeChange": "4ab26106c5cd05cc65db123d18c595402454a819", "commitAfterChange": "da7d2435cd1069e9bf41f45bc83023c6439bfbe8", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void testCopySourceFolder4() throws CoreException", "signatureAfterChange": " public void testCopySourceFolder4() throws CoreException", "diff": ["+\t\t\t\"\tsrc1[*]: {REORDERED IN CLASSPATH}\\n\" + ", "+\t\t\t\"\tsrc2[*]: {REORDERED IN CLASSPATH}\\n\" + ", "+\t\t\t\"\tsrc2[*]: {REORDERED IN CLASSPATH}\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cd1279945f0eddb42d177bd3d207575", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "8b644ce068ecf49daa5da8af14e814933ab3df61", "commitAfterChange": "23872cdac6fbbd78479a7f309cf6a923f8b64047", "methodNumberBeforeChange": 584, "methodNumberAfterChange": 585, "signatureBeforeChange": " public void testBug435528()", "signatureAfterChange": " public void testBug435528()", "diff": ["-\t\t\"1. ERROR in Test.java (at line 13)\\n\" + ", "-\t\t\"\tif (x.equals(\\\"A\\\")) {\\n\" + ", "-\t\t\"\t    ^\\n\" + ", "-\t\t\"Potential null pointer access: The variable x may be null at this location\\n\" +   // FIXME: fully avoid warning?", "-\t\t\"----------\\n\" + ", "-\t\t\"2. WARNING in Test.java (at line 15)\\n\" + ", "+\t\t\"1. WARNING in Test.java (at line 15)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "224919bed2b41ca64e36c6737b135cc9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterBugsTests.java", "commitBeforeChange": "d1246b4aff159c8bec10d39c7616aa371724fb25", "commitAfterChange": "3aaa02433bee6eae022db09efeb9fd0aba7da6a0", "methodNumberBeforeChange": 294, "methodNumberAfterChange": 294, "signatureBeforeChange": " public void testBug330313_wksp1_17_njl()", "signatureAfterChange": " public void testBug330313_wksp1_17_njl()", "diff": ["-\t\t\"\t\tif ((currentMethodScope = this.methodScope()) != outerLocalVariable.declaringScope.methodScope()) {\\n\" + ", "+\t\t\"\t\tif ((currentMethodScope = this.methodScope())\\n\" + ", "+\t\t\"\t\t\t\t!= outerLocalVariable.declaringScope.methodScope()) {\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2515220f8c0cba52be436475f4695b06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "a8950107d551a634f6049d19ba689deca063bfb6", "commitAfterChange": "e34fea35f775affe686777806e78d4b4b98ae8ab", "methodNumberBeforeChange": 1017, "methodNumberAfterChange": 1017, "signatureBeforeChange": " public void test0992()", "signatureAfterChange": " public void test0992()", "diff": ["-\t\t\t(this.complianceLevel < ClassFileConstants.JDK1_8 ?", "-\t\t\t\"----------\\n\"", "-\t\t\t: // 1.8 picks the non-raw version as being more specific(?)", "-\t\t\t\"\"));", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c7e39005fe5e278ae98891072cdfc72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterBugsTests.java", "commitBeforeChange": "d1246b4aff159c8bec10d39c7616aa371724fb25", "commitAfterChange": "3aaa02433bee6eae022db09efeb9fd0aba7da6a0", "methodNumberBeforeChange": 325, "methodNumberAfterChange": 324, "signatureBeforeChange": " public void testBug330313_wksp1_46_njl()", "signatureAfterChange": " public void testBug330313_wksp1_46_njl()", "diff": ["-}", "-\t\t\"\t\t\t\t\tcolorRegistry.get(\\n\" + ", "-\t\t\"\t\t\t\t\t\t\tIWorkbenchThemeConstants.INACTIVE_TAB_TEXT_COLOR),\\n\" + ", "+\t\t\"\t\t\t\t\tcolorRegistry\\n\" + ", "+\t\t\"\t\t\t\t\t\t\t.get(IWorkbenchThemeConstants.INACTIVE_TAB_TEXT_COLOR),\\n\" + ", "-\t\t\"\t\t\t\t\t\t\tcolorRegistry.get(\\n\" + ", "-\t\t\"\t\t\t\t\t\t\t\t\tIWorkbenchThemeConstants.INACTIVE_TAB_BG_START) },\\n\" + ", "+\t\t\"\t\t\t\t\tcolorRegistry\\n\" + ", "+\t\t\"\t\t\t\t\t\t\t.get(IWorkbenchThemeConstants.INACTIVE_TAB_BG_START)\\n\" + ", "+\t\t\"\t\t\t\t\t},\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "361e7396ec1152d693d17fff1ae20585", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterBugsTests.java", "commitBeforeChange": "d1246b4aff159c8bec10d39c7616aa371724fb25", "commitAfterChange": "3aaa02433bee6eae022db09efeb9fd0aba7da6a0", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " public void testBug059891_wksp1_09() throws JavaModelException", "signatureAfterChange": " public void testBug059891_wksp1_09() throws JavaModelException", "diff": ["-\t\t\"\t\t\tString secondFileName = secondDirectoryAbsolutePath + File.separator\\n\" + ", "+\t\t\"\t\t\tString secondFileName = secondDirectoryAbsolutePath\\n\" + ", "+\t\t\"\t\t\t\t\t+ File.separator\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42f2ff34ad5e30b9d3ca37611d19709b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterBugsTests.java", "commitBeforeChange": "f8ebb93b67dd4368d736be48a670cedf6d0b542b", "commitAfterChange": "c4d165337c4f39b38e6e47bd68ace1aa106b0673", "methodNumberBeforeChange": 367, "methodNumberAfterChange": 367, "signatureBeforeChange": "\r public void testBug473727()", "signatureAfterChange": "\r public void testBug474916()", "diff": ["-public void testBug473727() {\r", "-    String source = \r", "-        \"/**\\r\\n\" + \r", "-        \" * <                                                           \\r\\n\" + \r", "-        \" * >  <p style='color:red'> Test    </p> */\\r\\n\" + \r", "-        \"class A {}\";\r", "-    formatSource(source,\r", "-        \"/**\\r\\n\" + \r", "-        \" * < >\\r\\n\" + \r", "-        \" * <p style='color:red'>\\r\\n\" + \r", "-        \" * Test\\r\\n\" + \r", "-        \" * </p>\\r\\n\" + \r", "-        \" */\\r\\n\" + \r", "-        \"class A {\\r\\n\" + \r", "-        \"}\"\r", "-    );\r", "+public void testBug474916() {\r", "+\tString source = \r", "+\t\t\t\"/**\\r\\n\" + \r", "+\t\t\t\" * <                                                           \\r\\n\" + \r", "+\t\t\t\" * >  <p style='color:red'> Test    </p>\\r\\n\" + \r", "+\t\t\t\" *  <a title=\\\"I like to 'quote' it\\\" \\r\\n\" + \r", "+\t\t\t\"href = 'http://www.eclipse.org'>Toast</a> */\\r\\n\" + \r", "+\t\t\t\"class A {}\";\r", "+\tformatSource(source,\r", "+\t\t\t\"/**\\r\\n\" + \r", "+\t\t\t\" * < >\\r\\n\" + \r", "+\t\t\t\" * <p style='color:red'>\\r\\n\" + \r", "+\t\t\t\" * Test\\r\\n\" + \r", "+\t\t\t\" * </p>\\r\\n\" + \r", "+\t\t\t\" * <a title=\\\"I like to 'quote' it\\\" href = 'http://www.eclipse.org'>Toast</a>\\r\\n\" + \r", "+\t\t\t\" */\\r\\n\" + \r", "+\t\t\t\"class A {\\r\\n\" + \r", "+\t\t\t\"}\"\r", "+\t);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ba0c53230c372d4edc25f7a72c0546c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterBugsTests.java", "commitBeforeChange": "d1246b4aff159c8bec10d39c7616aa371724fb25", "commitAfterChange": "3aaa02433bee6eae022db09efeb9fd0aba7da6a0", "methodNumberBeforeChange": 283, "methodNumberAfterChange": 283, "signatureBeforeChange": " public void testBug330313_wksp1_10_njl()", "signatureAfterChange": " public void testBug330313_wksp1_10_njl()", "diff": ["-\t\t\"\t\tif (true) { // only a true 0 can be made of zeros\\n\" + ", "-\t\t\"\t\t\t\t\t// 2.00000000000000000e-324 is illegal ....\\n\" + ", "+\t\t\"\t\tif (true)\\n\" + ", "+\t\t\"\t\t{ // only a true 0 can be made of zeros\\n\" + ", "+\t\t\"\t\t\t// 2.00000000000000000e-324 is illegal ....\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f0f55f71283a490f1937b32472844bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 240, "methodNumberAfterChange": 239, "signatureBeforeChange": " public void testCamelCaseTypePattern12() throws CoreException", "signatureAfterChange": " public void testCamelCaseTypePattern12_CamelCase() throws CoreException", "diff": ["-/** @deprecated As using a depreciated constant */", "-public void testCamelCaseTypePattern12() throws CoreException {", "+public void testCamelCaseTypePattern12_CamelCase() throws CoreException {", "+\t\t\"class Nullpointerexception {}\\n\" + ", "-\t\t\"src/Test.java Null [Null]\"", "+\t\t\"src/Test.java Null [Null]\\n\" + ", "+\t\t\"src/Test.java NullPointerException [NullPointerException]\\n\" +", "+\t\t\"src/Test.java Nullpointerexception [Nullpointerexception]\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56657bff33516f90e3f6741dd90576d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterBugsTests.java", "commitBeforeChange": "bb7b9521196186c5be108c1f350a453c12233137", "commitAfterChange": "871cac4ba4cecfc6322ce0af5777177652a514a9", "methodNumberBeforeChange": 329, "methodNumberAfterChange": 329, "signatureBeforeChange": "\r public void testBug330313_wksp1_50_njl()", "signatureAfterChange": "\r public void testBug330313_wksp1_50_njl()", "diff": ["-\t\t\"\t\t\t\t\t\t\t} },\\n\" + \r", "+\t\t\"\t\t\t\t\t\t\t}\\n\" + \r", "+\t\t\"\t\t\t\t\t},\\n\" + \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d7256b4f5ae83ca4396994d8abb7640", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AssignmentTest.java", "commitBeforeChange": "c1e2190abdaebf773f8ae2981a8530f888bd15a6", "commitAfterChange": "251fbf709efe427d144bcd0a0cbb3291090fe980", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " public void test038()", "signatureAfterChange": " public void test038()", "diff": ["-\t\t\"\t       ^\\n\" + ", "+\t\t\"                      myTree.addTreeSelectionListener(list);\\n\" + ", "+\t\t\"                      }\\n\" + ", "+\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7daa1f4e25a9bf76a8ab243ad5b6b91a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "8e8664655ac66e3f161f9980a96f44314418e85c", "commitAfterChange": "76a2ec884825e9edb380555c61500f23750ece32", "methodNumberBeforeChange": 234, "methodNumberAfterChange": 234, "signatureBeforeChange": " public void test228()", "signatureAfterChange": " public void test228()", "diff": ["+\t\t\t\t\"}\\n\",", "+\t\t\t\t\"Y.java\",", "+\t\t\t\t\"public class Y {\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in Y.java (at line 2)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3cf7332a811c36b7465ed235b677033", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "6af4748240d783fb0fd75666c88ce3ea32b7386e", "commitAfterChange": "c4bbe81e5ffd7d180da7485d9b35d8dbf9b1703c", "methodNumberBeforeChange": 986, "methodNumberAfterChange": 986, "signatureBeforeChange": " public void test0961()", "signatureAfterChange": " public void test0961()", "diff": ["-\t\t(this.complianceLevel < ClassFileConstants.JDK1_8 ?", "-\t\t\"Type safety: The expression of type X needs unchecked conversion to conform to X<Comparable>\\n\"", "-\t\t:", "-\t\t\"Type safety: The expression of type X needs unchecked conversion to conform to X<Comparable<Comparable<B>>>\\n\"", "-\t\t)+", "+\t\t\"Type safety: The expression of type X needs unchecked conversion to conform to X<Comparable>\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b04717bc17633728082e5bdb2ced0de9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsBugsTest.java", "commitBeforeChange": "246965b39748e3da2ea49457412592390c45caa5", "commitAfterChange": "b0e753009ffb9bf0d92f75f621fb0d6188adb57e", "methodNumberBeforeChange": 267, "methodNumberAfterChange": 268, "signatureBeforeChange": " public void testBug305830()", "signatureAfterChange": " public void testBug305830()", "diff": ["-\t\t\"\t\tbar(\\\"a non-nls string\\\", 0 /*a    comment*/); //$NON-NLS-1$\\n\" + ", "+\t\t\"\t\tbar(\\\"a non-nls string\\\", //$NON-NLS-1$\\n\" + ", "+\t\t\"\t\t\t\t0 /* a comment */);\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1b01f59a3d448b22024258e0cda9771", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/GenericsCompletionParserTest.java", "commitBeforeChange": "f2d453b40b80a7b4342f872cb4a2ceb30cb26035", "commitAfterChange": "ff67eddd91980875c818d1dd4c9e986c8fe296a7", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " public void test0045()", "signatureAfterChange": " public void test0045()", "diff": ["-\texpectedParentNodeToString = \"<NONE>\";", "+\texpectedParentNodeToString = ", "+\t\t\"try \\n\" + ", "+\t\t\"  {\\n\" + ", "+\t\t\"  }\\n\" + ", "+\t\t\"catch (<CompleteOnException:Y<Z>.>  )   {\\n\" + ", "+\t\t\"  }\";", "-\t\t\"    <CompleteOnException:Y<Z>.>;\\n\" + ", "+\t\t\"    try \\n\" + ", "+\t\t\"      {\\n\" + ", "+\t\t\"      }\\n\" + ", "+\t\t\"    catch (<CompleteOnException:Y<Z>.>  )       {\\n\" + ", "+\t\t\"      }\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c047b7d851f3dc2e84b1c911dba0e433", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterBugsTests.java", "commitBeforeChange": "d1246b4aff159c8bec10d39c7616aa371724fb25", "commitAfterChange": "3aaa02433bee6eae022db09efeb9fd0aba7da6a0", "methodNumberBeforeChange": 329, "methodNumberAfterChange": 328, "signatureBeforeChange": " public void testBug330313_wksp1_50_njl()", "signatureAfterChange": " public void testBug330313_wksp1_50_njl()", "diff": ["-\t\t\"\t\t\t\t\t\t\tnew ClassFile() {\\n\" + ", "-\t\t\"\t\t\t\t\t\t\t\tpublic byte[] getBytes() {\\n\" + ", "-\t\t\"\t\t\t\t\t\t\t\t\treturn getCodeSnippetBytes();\\n\" + ", "-\t\t\"\t\t\t\t\t\t\t\t}\\n\" + ", "+\t\t\"\t\t\t\t\tnew ClassFile() {\\n\" + ", "+\t\t\"\t\t\t\t\t\tpublic byte[] getBytes() {\\n\" + ", "+\t\t\"\t\t\t\t\t\t\treturn getCodeSnippetBytes();\\n\" + ", "+\t\t\"\t\t\t\t\t\t}\\n\" + ", "-\t\t\"\t\t\t\t\t\t\t\tpublic char[][] getCompoundName() {\\n\" + ", "-\t\t\"\t\t\t\t\t\t\t\t\treturn EvaluationConstants.ROOT_COMPOUND_NAME;\\n\" + ", "-\t\t\"\t\t\t\t\t\t\t\t}\\n\" + ", "-\t\t\"\t\t\t\t\t\t\t} },\\n\" + ", "+\t\t\"\t\t\t\t\t\tpublic char[][] getCompoundName() {\\n\" + ", "+\t\t\"\t\t\t\t\t\t\treturn EvaluationConstants.ROOT_COMPOUND_NAME;\\n\" + ", "+\t\t\"\t\t\t\t\t\t}\\n\" + ", "+\t\t\"\t\t\t\t\t}\\n\" + ", "+\t\t\"\t\t\t\t\t},\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2ded9914688e49fba9a6bc2b28f8244", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterBugsTests.java", "commitBeforeChange": "d1246b4aff159c8bec10d39c7616aa371724fb25", "commitAfterChange": "3aaa02433bee6eae022db09efeb9fd0aba7da6a0", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": " public void testBug281655() throws JavaModelException", "signatureAfterChange": " public void testBug281655() throws JavaModelException", "diff": ["-\tthis.formatterPrefs.alignment_for_arguments_in_annotation = Alignment.M_COMPACT_SPLIT;", "-\t\t\"\t\t\t\t\t\tpropertyValue = \\\"0/10 * * * * ?\\\") })\\n\" + ", "+\t\t\"\t\t\t\t\t\tpropertyValue = \\\"0/10 * * * * ?\\\")\\n\" + ", "+\t\t\"\t\t})\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3fa44e12d3c2199b6a03fa3fe311715", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsBugsTest.java", "commitBeforeChange": "b7259e61ad84f1dda95b63bf74b4b4f38727c3a6", "commitAfterChange": "db331d5badcb0b35069c87387ccad89f9c226a52", "methodNumberBeforeChange": 193, "methodNumberAfterChange": 194, "signatureBeforeChange": " public void testBug260381c() throws JavaModelException", "signatureAfterChange": " public void testBug260381c() throws JavaModelException", "diff": ["-\t\t\" * @version\\n\" + ", "-\t\t\" *          <code>3.0 xxxxxxxxxxxxxx xwxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</code>\\n\" + ", "+\t\t\" *  @version {@code     \\n\" + ", "+\t\t\" *          \\n\" + ", "+\t\t\"            \\n\" + ", "+\t\t\" *          The  \t\t\t  text\t\there     should     not\t\t\tbe   \t\t    \t\t\t     formatted....   \t   }\\n\" + ", "-\t\t\" * @version <code>3.0 xxxxxxxxxxxxxx xwxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</code>\\n\" + ", "+\t\t\" * @version {@code     \\n\" + ", "+\t\t\" *          \\n\" + ", "+\t\t\" *          \\n\" + ", "+\t\t\" *          The  \t\t\t  text\t\there     should     not\t\t\tbe   \t\t    \t\t\t     formatted....   \t   }\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca2340d1f357fa279a91ca6919d0e43a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterBugsTests.java", "commitBeforeChange": "bb7b9521196186c5be108c1f350a453c12233137", "commitAfterChange": "871cac4ba4cecfc6322ce0af5777177652a514a9", "methodNumberBeforeChange": 325, "methodNumberAfterChange": 325, "signatureBeforeChange": "\r public void testBug330313_wksp1_46_njl()", "signatureAfterChange": "\r public void testBug330313_wksp1_46_njl()", "diff": ["-\t\t\"\t\t\t\t\t\t\t\t\tIWorkbenchThemeConstants.INACTIVE_TAB_BG_START) },\\n\" + \r", "+\t\t\"\t\t\t\t\t\t\t\t\tIWorkbenchThemeConstants.INACTIVE_TAB_BG_START)\\n\" + \r", "+\t\t\"\t\t\t\t\t},\\n\" + \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb6fe7c613c1a3f00edc6baa9fda82ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/GenericsCompletionParserTest.java", "commitBeforeChange": "f2d453b40b80a7b4342f872cb4a2ceb30cb26035", "commitAfterChange": "ff67eddd91980875c818d1dd4c9e986c8fe296a7", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " public void test0044()", "signatureAfterChange": " public void test0044()", "diff": ["-\texpectedParentNodeToString = \"<NONE>\";", "+\texpectedParentNodeToString =", "+\t\t\"try \\n\" + ", "+\t\t\"  {\\n\" + ", "+\t\t\"  }\\n\" + ", "+\t\t\"catch (<CompleteOnException:Y<Z>.>  )   {\\n\" + ", "+\t\t\"  }\";", "-\t\t\"    <CompleteOnException:Y<Z>.>;\\n\" + ", "+\t\t\"    try \\n\" + ", "+\t\t\"      {\\n\" + ", "+\t\t\"      }\\n\" + ", "+\t\t\"    catch (<CompleteOnException:Y<Z>.>  )       {\\n\" + ", "+\t\t\"      }\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d08e0ddbb84e510e8de26daa1ce11ce7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterBugsTests.java", "commitBeforeChange": "d1246b4aff159c8bec10d39c7616aa371724fb25", "commitAfterChange": "3aaa02433bee6eae022db09efeb9fd0aba7da6a0", "methodNumberBeforeChange": 304, "methodNumberAfterChange": 304, "signatureBeforeChange": " public void testBug330313_wksp1_27_njl()", "signatureAfterChange": " public void testBug330313_wksp1_27_njl()", "diff": ["-\t\t\"\t\tif (_VerificationResult.getVerificationCode() == IVerificationResult.TYPE_ENTRY_SIGNED_UNRECOGNIZED\\n\" + ", "-\t\t\"\t\t\t\t|| _VerificationResult.getVerificationCode() == IVerificationResult.TYPE_ENTRY_SIGNED_RECOGNIZED) {\\n\" + ", "+\t\t\"\t\tif (_VerificationResult.getVerificationCode()\\n\" + ", "+\t\t\"\t\t\t\t\t== IVerificationResult.TYPE_ENTRY_SIGNED_UNRECOGNIZED\\n\" + ", "+\t\t\"\t\t\t\t|| _VerificationResult.getVerificationCode()\\n\" + ", "+\t\t\"\t\t\t\t\t== IVerificationResult.TYPE_ENTRY_SIGNED_RECOGNIZED) {\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6db85693b89fcdf7ab2668423525691", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterBugsTests.java", "commitBeforeChange": "d1246b4aff159c8bec10d39c7616aa371724fb25", "commitAfterChange": "3aaa02433bee6eae022db09efeb9fd0aba7da6a0", "methodNumberBeforeChange": 234, "methodNumberAfterChange": 234, "signatureBeforeChange": " public void testBug313524_03b() throws JavaModelException", "signatureAfterChange": " public void testBug313524_03b() throws JavaModelException", "diff": ["-\t\t\"\t\tfoo(bar(1, 2, 3, 4), bar(\t5, 6,\\n\" + ", "+\t\t\"\t\tfoo(bar(1, 2, 3, 4), bar(\t5,\\n\" + ", "+\t\t\"\t\t\t\t\t\t\t\t\t6,\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edfef6aa94670f4cd7c6010080565ff4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsBugsTest.java", "commitBeforeChange": "d1246b4aff159c8bec10d39c7616aa371724fb25", "commitAfterChange": "3aaa02433bee6eae022db09efeb9fd0aba7da6a0", "methodNumberBeforeChange": 193, "methodNumberAfterChange": 193, "signatureBeforeChange": " public void testBug260011_10() throws JavaModelException", "signatureAfterChange": " public void testBug260011_10() throws JavaModelException", "diff": ["-\t\t\"\t * Creates and opens a dialog to edit the given template. <p Subclasses may\\n\" + ", "-\t\t\"\t * override this method to provide a custom dialog.\\n\" + ", "+\t\t\"\t * Creates and opens a dialog to edit the given template.\\n\" + ", "+\t\t\"\t * <p\\n\" + ", "+\t\t\"\t * Subclasses may override this method to provide a custom dialog.\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2d2524aab700acb872ef68af6335eeb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsBugsTest.java", "commitBeforeChange": "e9215020072f2df9a0b47df094d17dfa3ad95402", "commitAfterChange": "2af56d6fe3e00a7c799ea8c6f7aeb1409e4db2f8", "methodNumberBeforeChange": 267, "methodNumberAfterChange": 268, "signatureBeforeChange": " public void testBug305830()", "signatureAfterChange": " public void testBug305830()", "diff": ["-\t\t\"\t\tbar(\\\"a non-nls string\\\", 0 /*a    comment*/); //$NON-NLS-1$\\n\" + ", "+\t\t\"\t\tbar(\\\"a non-nls string\\\", //$NON-NLS-1$\\n\" + ", "+\t\t\"\t\t\t\t0 /* a comment */);\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4050c0565fd4f0c6693b56ba4fef5c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterBugsTests.java", "commitBeforeChange": "bb7b9521196186c5be108c1f350a453c12233137", "commitAfterChange": "871cac4ba4cecfc6322ce0af5777177652a514a9", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": "\r public void testBug281655() throws JavaModelException", "signatureAfterChange": "\r public void testBug281655() throws JavaModelException", "diff": ["-\t\t\"\t\t\t\t\t\tpropertyValue = \\\"0/10 * * * * ?\\\") })\\n\" + \r", "+\t\t\"\t\t\t\t\t\tpropertyValue = \\\"0/10 * * * * ?\\\")\\n\" + \r", "+\t\t\"\t\t})\\n\" + \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f921f1f2a8ca77c93b06caa3094e4900", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterBugsTests.java", "commitBeforeChange": "c62ecfd031507c11ea236866605fedd6f3a952c5", "commitAfterChange": "ded73445e8c5cf2db0a4abcc53e1680f02ae6cf7", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 111, "signatureBeforeChange": " public void testBug286601() throws JavaModelException", "signatureAfterChange": " public void testBug286601() throws JavaModelException", "diff": ["-\t\t\"public class Test {\\n\" +", "-\t\t\"\tpublic void aMethod() {\\n\" +", "+\t\t\"public class Test\\n\" +", "+\t\t\"{\\n\" +", "+\t\t\"\tpublic void aMethod()\\n\" +", "+\t\t\"\t{\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9b35825cc4348a772d55c0d1f4ef036", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeTypeAnnotationTest.java", "commitBeforeChange": "2caa59d033a9b6c8ec71aab586472ad7fe749893", "commitAfterChange": "a8944173670c6319cce2438add6b3e87f478a46c", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": "\r \tpublic void test0390882b()", "signatureAfterChange": "\r \tpublic void test0390882b()", "diff": ["-\t\t\t\t\t\"\tObject o1 = (java.util.@Marker @Annot List<String>) null; \t// 1. Wrong.\\n\" +\r", "-\t\t\t\t\t\"\tObject o2 = (java.lang.@Marker @Annot Integer[]) null;\t\t// 2. Wrong.\\n\" +\r", "-\t\t\t\t\t\"\tObject o3 = (java.util.@Marker @Annot List<String>[]) null; // 3. Wrong.\\n\" +\r", "-\t\t\t\t\t\"\tObject o4 = (java.lang.Integer @Marker []) null;\t// 4. Right.\\n\" +\r", "+\t\t\t\t\t\"\tObject o1 = (@Marker @Annot java.util.List<String>) null; \t// 1. Wrong.\\n\" +\r", "+\t\t\t\t\t\"\tObject o2 = (java. @Marker @Annot lang.Integer[]) null;\t\t// 2. Wrong.\\n\" +\r", "+\t\t\t\t\t\"\tObject o3 = (@Marker @Annot java.util.List<String>[]) null; // 3. Wrong.\\n\" +\r", "+\t\t\t\t\t\"\tObject o4 = (java.util.List<String> @Marker @Annot []) null; // 4. Right.\\n\" +\r", "+\t\t\t\t\t\"\tObject o5 = (java.lang.Integer @Marker @Annot []) null;\t// 5. Right.\\n\" +\r", "-\t\t\t\t\"\tObject o1 = (java.util.@Marker @Annot List<String>) null; \t// 1. Wrong.\\n\" + \r", "-\t\t\t\t\"\t                       ^^^^^^^^^^^^^^\\n\" + \r", "+\t\t\t\t\"\tObject o1 = (@Marker @Annot java.util.List<String>) null; \t// 1. Wrong.\\n\" + \r", "+\t\t\t\t\"\t             ^^^^^^^^^^^^^^\\n\" + \r", "-\t\t\t\t\"\tObject o2 = (java.lang.@Marker @Annot Integer[]) null;\t\t// 2. Wrong.\\n\" + \r", "-\t\t\t\t\"\t                       ^^^^^^^^^^^^^^\\n\" + \r", "+\t\t\t\t\"\tObject o2 = (java. @Marker @Annot lang.Integer[]) null;\t\t// 2. Wrong.\\n\" + \r", "+\t\t\t\t\"\t                   ^^^^^^^^^^^^^^\\n\" + \r", "-\t\t\t\t\"\tObject o3 = (java.util.@Marker @Annot List<String>[]) null; // 3. Wrong.\\n\" + \r", "-\t\t\t\t\"\t                       ^^^^^^^^^^^^^^\\n\" + \r", "+\t\t\t\t\"\tObject o3 = (@Marker @Annot java.util.List<String>[]) null; // 3. Wrong.\\n\" + \r", "+\t\t\t\t\"\t             ^^^^^^^^^^^^^^\\n\" + \r"]}], "num": 34733}