{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0af3e63fd8bde0daf7c041ba3f1abf7f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55f387210fef9e071d1a4009cb5f7739", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TypeAnnotationTest.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 75, "signatureBeforeChange": " \tpublic void test023() throws Exception", "signatureAfterChange": " \t \tpublic void test071_codeblocks_constructorInvocationTypeArgument() throws Exception", "diff": ["-\t// type argument constructor call", "-\tpublic void test023() throws Exception {", "-\t\t\t\t\"\t<T> X(T t) {\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\tpublic Object foo() {\\n\" + ", "-\t\t\t\t\"\t\tX x = new <@A @B(1) String>X(null);\\n\" + ", "-\t\t\t\t\"\t\treturn x;\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\"      #31 @A(\\n\" + ", "-\t\t\t\"        target type = 0x18 TYPE_ARGUMENT_CONSTRUCTOR_CALL\\n\" + ", "-\t\t\t\"        offset = 5\\n\" + ", "-\t\t\t\"        type argument index = 0\\n\" + ", "-\t\t\t\"      #27 @B(\\n\" + ", "-\t\t\t\"        #28 value=(int) 1 (constant type)\\n\" + ", "-\t\t\t\"        target type = 0x18 TYPE_ARGUMENT_CONSTRUCTOR_CALL\\n\" + ", "-\t\t\t\"        offset = 5\\n\" + ", "-\t\t\t\"        type argument index = 0\\n\" + ", "+\t", "+\tpublic void test071_codeblocks_constructorInvocationTypeArgument() throws Exception {", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"A.java\",", "+\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "+\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "+\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "+\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "+\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "+\t\t\t\t\"@Retention(RUNTIME)\\n\" + ", "+\t\t\t\t\"@interface A {\\n\" + ", "+\t\t\t\t\"\tString value() default \\\"default\\\";\\n\" + ", "+\t\t\t\t\"}\\n\",", "+\t\t\t\t\"B.java\",", "+\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "+\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "+\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "+\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "+\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "+\t\t\t\t\"@Retention(CLASS)\\n\" + ", "+\t\t\t\t\"@interface B {\\n\" + ", "+\t\t\t\t\"\tint value() default -1;\\n\" + ", "+\t\t\t\t\"}\",", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" + ", "+\t\t\t\t\"\t<T> X(T t) {\\n\" + ", "+\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"\tpublic Object foo() {\\n\" + ", "+\t\t\t\t\"\t\tX x = new <@A @B(1) String>X(null);\\n\" + ", "+\t\t\t\t\"\t\treturn x;\\n\" + ", "+\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"}\",", "+\t\t},", "+\t\t\"\");", "+\t\tString expectedOutput =", "+\t\t\t\"    RuntimeInvisibleTypeAnnotations: \\n\" + ", "+\t\t\t\"      #27 @B(\\n\" + ", "+\t\t\t\"        #28 value=(int) 1 (constant type)\\n\" + ", "+\t\t\t\"        target type = 0x48 CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT\\n\" + ", "+\t\t\t\"        offset = 5\\n\" + ", "+\t\t\t\"        type argument index = 0\\n\" + ", "+\t\t\t\"      )\\n\" + ", "+\t\t\t\"    RuntimeVisibleTypeAnnotations: \\n\" + ", "+\t\t\t\"      #31 @A(\\n\" + ", "+\t\t\t\"        target type = 0x48 CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT\\n\" + ", "+\t\t\t\"        offset = 5\\n\" + ", "+\t\t\t\"        type argument index = 0\\n\" + ", "+\t\t\t\"      )\\n\";", "+\t\tcheckDisassembledClassFile(OUTPUT_DIR + File.separator + \"X.class\", \"X\", expectedOutput, ClassFileBytesDisassembler.SYSTEM);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75cc852a53d44c12f5424a2f15fe8145", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TypeAnnotationTest.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void test012() throws Exception", "signatureAfterChange": "  \tpublic void test002_classTypeParameter_reflection() throws Exception", "diff": ["+", "+\tpublic void test002_classTypeParameter_reflection() throws Exception {", "+\t\tthis.runConformTest(", "+\t\t\t\tnew String[] {", "+\t\t\t\t\t\"X.java\",", "+\t\t\t\t\t\"public class X<@Marker T> {\\n\"+", "+\t\t\t\t\t\"  public static void main(String[] argv) { Helper.printTypeAnnotations2(X.class);}\\n\"+", "+\t\t\t\t\t\"}\",", "+\t\t\t\t\t", "+\t\t\t\t\t\"Helper.java\",HELPER_CLASS,", "+\t\t\t\t\t\"Marker.java\",", "+\t\t\t\t\t\"import java.lang.annotation.*;\\n\" + ", "+\t\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "+\t\t\t\t\t\"@Retention(RetentionPolicy.RUNTIME)\\n\"+", "+\t\t\t\t\t\"@Target(TYPE_PARAMETER)\\n\" + ", "+\t\t\t\t\t\"@interface Marker {}\",", "+\t\t\t\t},", "+\t\t\t\t\"X<@Marker T>\");", "+\t}", "-\t// field type", "-\tpublic void test012() throws Exception {", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"A.java\",", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "-\t\t\t\t\"@Retention(RUNTIME)\\n\" + ", "-\t\t\t\t\"@interface A {\\n\" + ", "-\t\t\t\t\"\tString value() default \\\"default\\\";\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t\t\"B.java\",", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "-\t\t\t\t\"@Retention(CLASS)\\n\" + ", "-\t\t\t\t\"@interface B {\\n\" + ", "-\t\t\t\t\"\tint value() default -1;\\n\" + ", "-\t\t\t\t\"}\",", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t@B(3) @A int field;\\n\" +", "-\t\t\t\t\"}\",", "-\t\t},", "-\t\t\"\");", "-\t\tString expectedOutput =", "-\t\t\t\"    RuntimeVisibleTypeAnnotations: \\n\" + ", "-\t\t\t\"      #12 @A(\\n\" + ", "-\t\t\t\"        target type = 0xe FIELD\\n\" + ", "-\t\t\t\"      )\\n\" + ", "-\t\t\t\"    RuntimeInvisibleTypeAnnotations: \\n\" + ", "-\t\t\t\"      #8 @B(\\n\" + ", "-\t\t\t\"        #9 value=(int) 3 (constant type)\\n\" + ", "-\t\t\t\"        target type = 0xe FIELD\\n\" + ", "-\t\t\t\"      )\\n\";", "-\t\tcheckDisassembledClassFile(OUTPUT_DIR + File.separator + \"X.class\", \"X\", expectedOutput, ClassFileBytesDisassembler.SYSTEM);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c55b9d2132ec394154c0e105b8df47b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TypeAnnotationTest.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void test029() throws Exception", "signatureAfterChange": "  \tpublic void test013_classExtends_interfaces() throws Exception", "diff": ["+", "+\tpublic void test013_classExtends_interfaces() throws Exception {", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"A.java\",", "+\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "+\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "+\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "+\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "+\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "+\t\t\t\t\"@Retention(RUNTIME)\\n\" + ", "+\t\t\t\t\"@interface A {\\n\" + ", "+\t\t\t\t\"\tString id() default \\\"default\\\";\\n\" + ", "+\t\t\t\t\"}\\n\",", "+\t\t\t\t\"B.java\",", "+\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "+\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "+\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "+\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "+\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "+\t\t\t\t\"@Retention(CLASS)\\n\" + ", "+\t\t\t\t\"@interface B {\\n\" + ", "+\t\t\t\t\"\tint value() default -1;\\n\" + ", "+\t\t\t\t\"}\",", "+\t\t\t\t\"C.java\",", "+\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "+\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "+\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "+\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "+\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "+\t\t\t\t\"@Retention(RUNTIME)\\n\" + ", "+\t\t\t\t\"@interface C {\\n\" + ", "+\t\t\t\t\"\tchar value() default '-';\\n\" + ", "+\t\t\t\t\"}\\n\",", "+\t\t\t\t\"I.java\",", "+\t\t\t\t\"interface I {}\\n\",", "+\t\t\t\t\"J.java\",", "+\t\t\t\t\"interface J {}\\n\",", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X implements @A(id=\\\"Hello, World!\\\") I, @B @C('(') J {}\",", "+\t\t},", "+\t\t\"\");", "+\t\t// Output from javac b81 lambda", "+\t\t// RuntimeVisibleTypeAnnotations", "+\t\t// Bytes:28[0 2 16 0 0 0 0 13 0 1 0 14 115 0 15 16 0 1 0 0 16 0 1 0 17 67 0 18]", "+\t\t// RuntimeInvisibleTypeAnnotations", "+\t\t// Bytes:10[0 1 16 0 1 0 0 20 0 0]\t\t", "+\t\tString expectedOutput =", "+\t\t\t\"  RuntimeVisibleTypeAnnotations: \\n\" + ", "+\t\t\t\"    #23 @A(\\n\" + ", "+\t\t\t\"      #24 id=\\\"Hello, World!\\\" (constant type)\\n\" + ", "+\t\t\t\"      target type = 0x10 CLASS_EXTENDS\\n\" + ", "+\t\t\t\"      type index = 0\\n\" + ", "+\t\t\t\"    )\\n\" + ", "+\t\t\t\"    #26 @C(\\n\" + ", "+\t\t\t\"      #27 value=\\'(\\' (constant type)\\n\" + ", "+\t\t\t\"      target type = 0x10 CLASS_EXTENDS\\n\" + ", "+\t\t\t\"      type index = 1\\n\" + ", "+\t\t\t\"    )\\n\" + ", "+\t\t\t\"  RuntimeInvisibleTypeAnnotations: \\n\" + ", "+\t\t\t\"    #21 @B(\\n\" + ", "+\t\t\t\"      target type = 0x10 CLASS_EXTENDS\\n\" + ", "+\t\t\t\"      type index = 1\\n\" + ", "+\t\t\t\"    )\\n\";", "+\t\tcheckDisassembledClassFile(OUTPUT_DIR + File.separator + \"X.class\", \"X\", expectedOutput, ClassFileBytesDisassembler.SYSTEM);", "+\t}", "-\t// qualified allocation expression with type arguments", "-\tpublic void test029() throws Exception {", "-\t\t\t\t\"C.java\",", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "-\t\t\t\t\"@Retention(RUNTIME)\\n\" + ", "-\t\t\t\t\"@interface C {\\n\" + ", "-\t\t\t\t\"\tchar value() default '-';\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t\t\"D.java\",", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "-\t\t\t\t\"@Retention(RUNTIME)\\n\" + ", "-\t\t\t\t\"@interface D {\\n\" + ", "-\t\t\t\t\"\tchar value() default '-';\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t\t\"\tclass Y {\\n\" + ", "-\t\t\t\t\"\t\t<T, U> Y(T t, U u) {}\\n\" + ", "-\t\t\t\t\"\tpublic static void main(String[] args) {\\n\" + ", "-\t\t\t\t\"\t\tY y = new X().new <@D() @A(value = \\\"hello\\\") String, @B X> Y(\\\"SUCCESS\\\", null);\\n\" + ", "-\t\t\t\t\"\t\tSystem.out.println(y);\\n\" + ", "-\t\t\t\"      #47 @D(\\n\" + ", "-\t\t\t\"        target type = 0x18 TYPE_ARGUMENT_CONSTRUCTOR_CALL\\n\" + ", "-\t\t\t\"        offset = 19\\n\" + ", "-\t\t\t\"        type argument index = 0\\n\" + ", "-\t\t\t\"      )\\n\" + ", "-\t\t\t\"      #48 @A(\\n\" + ", "-\t\t\t\"        #49 value=\\\"hello\\\" (constant type)\\n\" + ", "-\t\t\t\"        target type = 0x18 TYPE_ARGUMENT_CONSTRUCTOR_CALL\\n\" + ", "-\t\t\t\"        offset = 19\\n\" + ", "-\t\t\t\"        type argument index = 0\\n\" + ", "-\t\t\t\"      #45 @B(\\n\" + ", "-\t\t\t\"        target type = 0x18 TYPE_ARGUMENT_CONSTRUCTOR_CALL\\n\" + ", "-\t\t\t\"        offset = 19\\n\" + ", "-\t\t\t\"        type argument index = 1\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfb91e952ae2bd108642209556d5f2fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TypeAnnotationTest.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void test015() throws Exception", "signatureAfterChange": " \t \tpublic void test006_classTypeParameter() throws Exception", "diff": ["+\t", "+\tpublic void test006_classTypeParameter() throws Exception {", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"A.java\",", "+\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "+\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "+\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "+\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "+\t\t\t\t\"@Target(TYPE_PARAMETER)\\n\" + ", "+\t\t\t\t\"@Retention(RUNTIME)\\n\" + ", "+\t\t\t\t\"@interface A {\\n\" + ", "+\t\t\t\t\"\tString value() default \\\"default\\\";\\n\" + ", "+\t\t\t\t\"}\\n\",", "+\t\t\t\t\"B.java\",", "+\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "+\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "+\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "+\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "+\t\t\t\t\"@Target(TYPE_PARAMETER)\\n\" + ", "+\t\t\t\t\"@Retention(CLASS)\\n\" + ", "+\t\t\t\t\"@interface B {\\n\" + ", "+\t\t\t\t\"\tint value() default -1;\\n\" + ", "+\t\t\t\t\"}\",", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X<T1,T2,@A @B(3) T3> {}\",", "+\t\t},", "+\t\t\"\");", "+\t\tString expectedOutput =", "+\t\t\t\"  RuntimeVisibleTypeAnnotations: \\n\" + ", "+\t\t\t\"    #25 @A(\\n\" + ", "+\t\t\t\"      target type = 0x0 CLASS_TYPE_PARAMETER\\n\" + ", "+\t\t\t\"      type parameter index = 2\\n\" + ", "+\t\t\t\"    )\\n\" + ", "+\t\t\t\"  RuntimeInvisibleTypeAnnotations: \\n\" + ", "+\t\t\t\"    #21 @B(\\n\" + ", "+\t\t\t\"      #22 value=(int) 3 (constant type)\\n\" + ", "+\t\t\t\"      target type = 0x0 CLASS_TYPE_PARAMETER\\n\" + ", "+\t\t\t\"      type parameter index = 2\\n\" + ", "+\t\t\t\"    )\\n\";", "+\t\tcheckDisassembledClassFile(OUTPUT_DIR + File.separator + \"X.class\", \"X\", expectedOutput, ClassFileBytesDisassembler.SYSTEM);", "+\t}", "-\t// field type generic or array", "-\tpublic void test015() throws Exception {", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"A.java\",", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "-\t\t\t\t\"@Retention(RUNTIME)\\n\" + ", "-\t\t\t\t\"@interface A {\\n\" + ", "-\t\t\t\t\"\tString value() default \\\"default\\\";\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t\t\"B.java\",", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "-\t\t\t\t\"@Retention(CLASS)\\n\" + ", "-\t\t\t\t\"@interface B {\\n\" + ", "-\t\t\t\t\"\tint value() default -1;\\n\" + ", "-\t\t\t\t\"}\",", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t@A int [] @B(3) [] field;\\n\" +", "-\t\t\t\t\"}\",", "-\t\t},", "-\t\t\"\");", "-\t\tString expectedOutput =", "-\t\t\t\"    RuntimeVisibleTypeAnnotations: \\n\" + ", "-\t\t\t\"      #12 @A(\\n\" + ", "-\t\t\t\"        target type = 0xf FIELD_GENERIC_OR_ARRAY\\n\" + ", "-\t\t\t\"        locations = {1}\\n\" + ", "-\t\t\t\"      )\\n\" + ", "-\t\t\t\"    RuntimeInvisibleTypeAnnotations: \\n\" + ", "-\t\t\t\"      #8 @B(\\n\" + ", "-\t\t\t\"        #9 value=(int) 3 (constant type)\\n\" + ", "-\t\t\t\"        target type = 0xf FIELD_GENERIC_OR_ARRAY\\n\" + ", "-\t\t\t\"        locations = {0}\\n\" + ", "-\t\t\t\"      )\\n\";", "-\t\tcheckDisassembledClassFile(OUTPUT_DIR + File.separator + \"X.class\", \"X\", expectedOutput, ClassFileBytesDisassembler.SYSTEM);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3508587599f0de665dd32cf48a8359e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TypeAnnotationTest.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void test011() throws Exception", "signatureAfterChange": " \t \tpublic void test001_classTypeParameter() throws Exception", "diff": ["+\t", "+\tpublic void test001_classTypeParameter() throws Exception {", "+\t\tthis.runConformTest(", "+\t\t\t\tnew String[] {", "+\t\t\t\t\t\"X.java\",", "+\t\t\t\t\t\"public class X<@Marker T> {}\",", "+", "+\t\t\t\t\t\"Marker.java\",", "+\t\t\t\t\t\"import java.lang.annotation.*;\\n\" + ", "+\t\t\t\t\t\"@Retention(RetentionPolicy.RUNTIME)\\n\"+", "+\t\t\t\t\t\"@Target(ElementType.TYPE_PARAMETER)\\n\" + ", "+\t\t\t\t\t\"@interface Marker {}\",\t\t\t\t\t", "+\t\t\t\t},", "+\t\t\t\t\"\");", "+\t\t// javac-b81: 9[0 1 0 0 0 0 13 0 0]  (13=Marker annotation)", "+\t\tString expectedOutput =", "+\t\t\t\"  RuntimeVisibleTypeAnnotations: \\n\" + ", "+\t\t\t\"    #21 @Marker(\\n\" + ", "+\t\t\t\"      target type = 0x0 CLASS_TYPE_PARAMETER\\n\" + ", "+\t\t\t\"      type parameter index = 0\\n\" + ", "+\t\t\t\"    )\\n\";", "+\t\tcheckDisassembledClassFile(OUTPUT_DIR + File.separator + \"X.class\", \"X\", expectedOutput, ClassFileBytesDisassembler.SYSTEM);", "+\t}", "-\t// method return type", "-\tpublic void test011() throws Exception {", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"A.java\",", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "-\t\t\t\t\"@Retention(RUNTIME)\\n\" + ", "-\t\t\t\t\"@interface A {\\n\" + ", "-\t\t\t\t\"\tString value() default \\\"default\\\";\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t\t\"B.java\",", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "-\t\t\t\t\"@Retention(CLASS)\\n\" + ", "-\t\t\t\t\"@interface B {\\n\" + ", "-\t\t\t\t\"\tint value() default -1;\\n\" + ", "-\t\t\t\t\"}\",", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t@B(3) @A(value=\\\"test\\\") int foo() {\\n\" +", "-\t\t\t\t\"\t\treturn 1;\\n\" +", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"}\",", "-\t\t},", "-\t\t\"\");", "-\t\tString expectedOutput =", "-\t\t\t\"    RuntimeVisibleTypeAnnotations: \\n\" + ", "-\t\t\t\"      #21 @A(\\n\" + ", "-\t\t\t\"        #18 value=\\\"test\\\" (constant type)\\n\" + ", "-\t\t\t\"        target type = 0xa METHOD_RETURN_TYPE\\n\" + ", "-\t\t\t\"      )\\n\" + ", "-\t\t\t\"    RuntimeInvisibleTypeAnnotations: \\n\" + ", "-\t\t\t\"      #17 @B(\\n\" + ", "-\t\t\t\"        #18 value=(int) 3 (constant type)\\n\" + ", "-\t\t\t\"        target type = 0xa METHOD_RETURN_TYPE\\n\" + ", "-\t\t\t\"      )\\n\";", "-\t\tcheckDisassembledClassFile(OUTPUT_DIR + File.separator + \"X.class\", \"X\", expectedOutput, ClassFileBytesDisassembler.SYSTEM);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d96bc41895850c066c4f3cf7d6c202d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TypeAnnotationTest.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 49, "signatureBeforeChange": " \tpublic void test031() throws Exception", "signatureAfterChange": " \t \tpublic void test046_methodParameter() throws Exception", "diff": ["+\t", "+\tpublic void test046_methodParameter() throws Exception {", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" + ", "+\t\t\t\t\"\tint foo(int i, double d, @B(3) String s) {\\n\" +", "+\t\t\t\t\"\t\treturn s.length();\\n\" +", "+\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"}\",", "+\t\t\t\t", "+\t\t\t\t\"B.java\",", "+\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "+\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "+\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "+\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "+\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "+\t\t\t\t\"@Retention(CLASS)\\n\" + ", "+\t\t\t\t\"@interface B {\\n\" + ", "+\t\t\t\t\"\tint value() default -1;\\n\" + ", "+\t\t\t\t\"}\",", "+\t\t},", "+\t\t\"\");", "+\t\t// javac-b81: Bytes:14[0 1 22 1 0 0 11 0 1 0 12 73 0 13]", "+\t\tString expectedOutput =", "+\t\t\t\"    RuntimeInvisibleTypeAnnotations: \\n\" + ", "+\t\t\t\"      #29 @B(\\n\" + ", "+\t\t\t\"        #30 value=(int) 3 (constant type)\\n\" + ", "+\t\t\t\"        target type = 0x16 METHOD_FORMAL_PARAMETER\\n\" + ", "+\t\t\t\"        method parameter index = 2\\n\" + ", "+\t\t\t\"      )\\n\";", "+\t\tcheckDisassembledClassFile(OUTPUT_DIR + File.separator + \"X.class\", \"X\", expectedOutput, ClassFileBytesDisassembler.SYSTEM);", "+\t}", "-\t// method type parameter bound generic or array", "-\tpublic void test031() throws Exception {", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"A.java\",", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "-\t\t\t\t\"@Retention(RUNTIME)\\n\" + ", "-\t\t\t\t\"@interface A {\\n\" + ", "-\t\t\t\t\"\tString value() default \\\"default\\\";\\n\" + ", "-\t\t\t\t\"B.java\",", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "-\t\t\t\t\"@Retention(CLASS)\\n\" + ", "-\t\t\t\t\"@interface B {\\n\" + ", "-\t\t\t\t\"\tint value() default -1;\\n\" + ", "-\t\t\t\t\"}\",", "-\t\t\t\t\"C.java\",", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "-\t\t\t\t\"@Retention(CLASS)\\n\" + ", "-\t\t\t\t\"@interface C {\\n\" + ", "-\t\t\t\t\"\tint value() default -1;\\n\" + ", "-\t\t\t\t\"}\",", "-\t\t\t\t\"D.java\",", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_PARAMETER)\\n\" + ", "-\t\t\t\t\"@Retention(RUNTIME)\\n\" + ", "-\t\t\t\t\"@interface D {\\n\" + ", "-\t\t\t\t\"\tString value() default \\\"default\\\";\\n\" + ", "-\t\t\t\t\"Z.java\",", "-\t\t\t\t\"public class Z<T> {}\",", "-\t\t\t\t\"\t<@D U, T extends Z<@A String @C[][]@B[]> & @B(3) Cloneable> void foo(U u, T t) {}\\n\" +", "-\t\t\t\"      #31 @D(\\n\" + ", "-\t\t\t\"        target type = 0x20 METHOD_TYPE_PARAMETER\\n\" + ", "-\t\t\t\"        type parameter index = 0\\n\" + ", "-\t\t\t\"      #32 @A(\\n\" + ", "-\t\t\t\"        target type = 0x13 METHOD_TYPE_PARAMETER_BOUND_GENERIC_OR_ARRAY\\n\" + ", "-\t\t\t\"        type parameter index = 1 type parameter bound index = 0\\n\" + ", "-\t\t\t\"        locations = {0,2}\\n\" + ", "-\t\t\t\"      #26 @C(\\n\" + ", "-\t\t\t\"        target type = 0x13 METHOD_TYPE_PARAMETER_BOUND_GENERIC_OR_ARRAY\\n\" + ", "-\t\t\t\"        type parameter index = 1 type parameter bound index = 0\\n\" + ", "-\t\t\t\"        locations = {0}\\n\" + ", "-\t\t\t\"      )\\n\" + ", "-\t\t\t\"      #27 @B(\\n\" + ", "-\t\t\t\"        target type = 0x13 METHOD_TYPE_PARAMETER_BOUND_GENERIC_OR_ARRAY\\n\" + ", "-\t\t\t\"        type parameter index = 1 type parameter bound index = 0\\n\" + ", "-\t\t\t\"        locations = {0,1}\\n\" + ", "-\t\t\t\"      )\\n\" + ", "-\t\t\t\"      #27 @B(\\n\" + ", "-\t\t\t\"        #28 value=(int) 3 (constant type)\\n\" + ", "-\t\t\t\"        target type = 0x12 METHOD_TYPE_PARAMETER_BOUND\\n\" + ", "-\t\t\t\"        type parameter index = 1 type parameter bound index = 1\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7cd56ffc05683ddf5386952eb9ff2d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TypeAnnotationTest.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic void test017() throws Exception", "signatureAfterChange": " \t \tpublic void test028_methodTypeParameterBound() throws Exception", "diff": ["+\t", "+\tpublic void test028_methodTypeParameterBound() throws Exception {", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"A.java\",", "+\t\t\t\t\"import java.lang.annotation.*;\\n\" + ", "+\t\t\t\t\"@Target(ElementType.TYPE_USE)\\n\" + ", "+\t\t\t\t\"@Retention(RetentionPolicy.RUNTIME)\\n\" + ", "+\t\t\t\t\"@interface A {\\n\" + ", "+\t\t\t\t\"\tString value() default \\\"default\\\";\\n\" + ", "+\t\t\t\t\"}\\n\",", "+\t\t\t\t\"Z.java\",", "+\t\t\t\t\"public class Z {}\",", "+\t\t\t\t\"\t<T extends @A Z> void foo(T t) {}\\n\" +", "+\t\t// javac-b81: Bytes:10[0 1 18 0 0 0 0 13 0 0]", "+\t\t\t\"      #23 @A(\\n\" + ", "+\t\t\t\"        target type = 0x12 METHOD_TYPE_PARAMETER_BOUND\\n\" + ", "+\t\t\t\"        type parameter index = 0 type parameter bound index = 0\\n\" + ", "-\t// method type parameter", "-\tpublic void test017() throws Exception {", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"A.java\",", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_PARAMETER)\\n\" + ", "-\t\t\t\t\"@Retention(RUNTIME)\\n\" + ", "-\t\t\t\t\"@interface A {\\n\" + ", "-\t\t\t\t\"\tString value() default \\\"default\\\";\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t\t\"B.java\",", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_PARAMETER)\\n\" + ", "-\t\t\t\t\"@Retention(CLASS)\\n\" + ", "-\t\t\t\t\"@interface B {\\n\" + ", "-\t\t\t\t\"\tint value() default -1;\\n\" + ", "-\t\t\t\t\"}\",", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t<@A @B(3) T> void foo(T t) {}\\n\" + ", "-\t\t\t\t\"}\",", "-\t\t},", "-\t\t\"\");", "-\t\tString expectedOutput =", "-\t\t\t\"    RuntimeVisibleTypeAnnotations: \\n\" + ", "-\t\t\t\"      #27 @A(\\n\" + ", "-\t\t\t\"        target type = 0x20 METHOD_TYPE_PARAMETER\\n\" + ", "-\t\t\t\"        type parameter index = 0\\n\" + ", "-\t\t\t\"      )\\n\" + ", "-\t\t\t\"    RuntimeInvisibleTypeAnnotations: \\n\" + ", "-\t\t\t\"      #23 @B(\\n\" + ", "-\t\t\t\"        #24 value=(int) 3 (constant type)\\n\" + ", "-\t\t\t\"        target type = 0x20 METHOD_TYPE_PARAMETER\\n\" + ", "-\t\t\t\"        type parameter index = 0\\n\" + ", "-\t\t\t\"      )\\n\";", "-\t\tcheckDisassembledClassFile(OUTPUT_DIR + File.separator + \"X.class\", \"X\", expectedOutput, ClassFileBytesDisassembler.SYSTEM);", "-\t}"]}], "num": 20600}