{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "072ec1dc9e37dd6811a9cbc798adc0cc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6cab37249627b992f3838ed6690e355", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "17c3ff29c758ba3af32e32b7cf74f8bc1004af3b", "commitAfterChange": "3406cbdf1170bd7765ceb54091ffb987caaf1f67", "methodNumberBeforeChange": 1048, "methodNumberAfterChange": 1048, "signatureBeforeChange": " public void test1036()", "signatureAfterChange": " public void test1036()", "diff": ["-\t\t\"7. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\"7. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\"\tMap<Zork,Zork>.Entry<List<Zork>,List<Zork>>\tentry;\\n\" + ", "+\t\t\"\t                     ^^^^\\n\" + ", "+\t\t\"List cannot be resolved to a type\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"8. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\"\tMap<Zork,Zork>.Entry<List<Zork>,List<Zork>>\tentry;\\n\" + ", "+\t\t\"\t                          ^^^^\\n\" + ", "+\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"9. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\"\tMap<Zork,Zork>.Entry<List<Zork>,List<Zork>>\tentry;\\n\" + ", "+\t\t\"\t                                ^^^^\\n\" + ", "+\t\t\"List cannot be resolved to a type\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"10. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\"\tMap<Zork,Zork>.Entry<List<Zork>,List<Zork>>\tentry;\\n\" + ", "+\t\t\"\t                                     ^^^^\\n\" + ", "+\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"11. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\"8. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\"12. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\"\tjaavaa.util.Map<Zork,Zork>.Entry<List<Zork>,List<Zork>>\tentry2;\\n\" + ", "+\t\t\"\t                ^^^^\\n\" + ", "+\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"13. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\"\tjaavaa.util.Map<Zork,Zork>.Entry<List<Zork>,List<Zork>>\tentry2;\\n\" + ", "+\t\t\"\t                     ^^^^\\n\" + ", "+\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"14. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\"\tjaavaa.util.Map<Zork,Zork>.Entry<List<Zork>,List<Zork>>\tentry2;\\n\" + ", "+\t\t\"\t                                 ^^^^\\n\" + ", "+\t\t\"List cannot be resolved to a type\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"15. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\"\tjaavaa.util.Map<Zork,Zork>.Entry<List<Zork>,List<Zork>>\tentry2;\\n\" + ", "+\t\t\"\t                                      ^^^^\\n\" + ", "+\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"16. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\"\tjaavaa.util.Map<Zork,Zork>.Entry<List<Zork>,List<Zork>>\tentry2;\\n\" + ", "+\t\t\"\t                                            ^^^^\\n\" + ", "+\t\t\"List cannot be resolved to a type\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"17. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\"\tjaavaa.util.Map<Zork,Zork>.Entry<List<Zork>,List<Zork>>\tentry2;\\n\" + ", "+\t\t\"\t                                                 ^^^^\\n\" + ", "+\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"18. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\"9. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\"19. ERROR in X.java (at line 9)\\n\" + ", "-\t\t\"10. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\"20. ERROR in X.java (at line 10)\\n\" + ", "-\t\t\"11. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\"21. ERROR in X.java (at line 10)\\n\" + ", "-\t\t\"12. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\"22. ERROR in X.java (at line 10)\\n\" + ", "-\t\t\"13. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\"23. ERROR in X.java (at line 11)\\n\" + ", "-\t\t\"14. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\"24. ERROR in X.java (at line 11)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3054870b8c9acf79be20e804ffbf209", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 231, "methodNumberAfterChange": 231, "signatureBeforeChange": " \tpublic void test227()", "signatureAfterChange": " \tpublic void test227()", "diff": ["-\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tList list() { return null; }\\n\" + ", "+\t\t\t\"\t^^^^\\n\" + ", "+\t\t\t\"Type safety: List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 4)\\n\" + ", "-\t\t\t\"2. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 5)\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\t\"4. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 7)\\n\" + ", "-\t\t\t\"5. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"6. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tvoid m3() { Collection c = null; List l = (List<X>)c; } // unsafe cast\\n\" + ", "+\t\t\t\"\t            ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Collection is a raw type. References to generic type Collection<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"7. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tvoid m3() { Collection c = null; List l = (List<X>)c; } // unsafe cast\\n\" + ", "+\t\t\t\"\t                                 ^^^^\\n\" + ", "+\t\t\t\"Type safety: List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"8. WARNING in X.java (at line 8)\\n\" + ", "-\t\t\t\"6. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"9. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tvoid m4() { Collection c = null; List l = (List<?>)c; } // ok\\n\" + ", "+\t\t\t\"\t            ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Collection is a raw type. References to generic type Collection<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"10. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tvoid m4() { Collection c = null; List l = (List<?>)c; } // ok\\n\" + ", "+\t\t\t\"\t                                 ^^^^\\n\" + ", "+\t\t\t\"Type safety: List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"11. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tvoid m5() { List c = null; List l = (Collection<X>)c; } // type mismatch\\n\" + ", "+\t\t\t\"\t            ^^^^\\n\" + ", "+\t\t\t\"Type safety: List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"12. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tvoid m5() { List c = null; List l = (Collection<X>)c; } // type mismatch\\n\" + ", "+\t\t\t\"\t                           ^^^^\\n\" + ", "+\t\t\t\"Type safety: List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"13. WARNING in X.java (at line 10)\\n\" + ", "-\t\t\t\"7. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\t\"14. ERROR in X.java (at line 10)\\n\" + ", "-\t\t\t\"8. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"15. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"\tvoid m6() { List c = null; List l = (Collection<?>)c; } // type mismatch\\n\" + ", "+\t\t\t\"\t            ^^^^\\n\" + ", "+\t\t\t\"Type safety: List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"16. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"\tvoid m6() { List c = null; List l = (Collection<?>)c; } // type mismatch\\n\" + ", "+\t\t\t\"\t                           ^^^^\\n\" + ", "+\t\t\t\"Type safety: List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"17. WARNING in X.java (at line 11)\\n\" + ", "-\t\t\t\"9. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\t\"18. ERROR in X.java (at line 11)\\n\" + "]}], "num": 196}