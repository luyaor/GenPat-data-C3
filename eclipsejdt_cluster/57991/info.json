{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a004728ccc978d45fdfdfd5d5354b9f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dfa6469b8a0327e28c4fb3b96b8191a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "e70a97840585a3ede400b971666912929897851b", "commitAfterChange": "f5104ea8b01f4418b9868445123db4c689077583", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void build(boolean computeSubtypes) throws JavaModelException, CoreException", "signatureAfterChange": " public void build(boolean computeSubtypes) throws JavaModelException, CoreException", "diff": ["-\t\t\tString[] allPossibleSubtypes = this.determinePossibleSubTypes();", "+\t\t\tIProgressMonitor possibleSubtypesMonitor = ", "+\t\t\t\tthis.hierarchy.progressMonitor == null ? ", "+\t\t\t\t\tnull : ", "+\t\t\t\t\tnew SubProgressMonitor(this.hierarchy.progressMonitor, 95);", "+\t\t\tString[] allPossibleSubtypes = this.determinePossibleSubTypes(possibleSubtypesMonitor);", "+\t\t\tIProgressMonitor buildMonitor = ", "+\t\t\t\tthis.hierarchy.progressMonitor == null ? ", "+\t\t\t\t\tnull : ", "+\t\t\t\t\tnew SubProgressMonitor(this.hierarchy.progressMonitor, 5);", "-\t\t\t\tbuildFromPotentialSubtypes(allPossibleSubtypes);", "+\t\t\t\tbuildFromPotentialSubtypes(allPossibleSubtypes, buildMonitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53b171d110d5485abec10d3ee4a609c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedHierarchyBuilder.java", "commitBeforeChange": "e70a97840585a3ede400b971666912929897851b", "commitAfterChange": "f5104ea8b01f4418b9868445123db4c689077583", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t public void build(boolean computeSubtypes)", "signatureAfterChange": " \t public void build(boolean computeSubtypes)", "diff": ["-\t\t\tArrayList allTypesInRegion = determineTypesInRegion();", "+\t\t\tIProgressMonitor typeInRegionMonitor = ", "+\t\t\t\tthis.hierarchy.progressMonitor == null ? ", "+\t\t\t\t\tnull : ", "+\t\t\t\t\tnew SubProgressMonitor(this.hierarchy.progressMonitor, 30);", "+\t\t\tArrayList allTypesInRegion = determineTypesInRegion(typeInRegionMonitor);", "-\t\t\tcreateTypeHierarchyBasedOnRegion(allTypesInRegion);", "+\t\t\tIProgressMonitor buildMonitor = ", "+\t\t\t\tthis.hierarchy.progressMonitor == null ? ", "+\t\t\t\t\tnull : ", "+\t\t\t\t\tnew SubProgressMonitor(this.hierarchy.progressMonitor, 70);", "+\t\t\tcreateTypeHierarchyBasedOnRegion(allTypesInRegion, buildMonitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "961e6998fd030a50aed27a215267fdf2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedHierarchyBuilder.java", "commitBeforeChange": "2808c167f87e5191890bb92d5e4f0af641d2f6e4", "commitAfterChange": "0199702ff6cca8392f62e334c86875a1b31484e2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void build(boolean computeSubtypes)", "signatureAfterChange": "  public void build(boolean computeSubtypes)", "diff": ["-\t\t\tIProgressMonitor typeInRegionMonitor =", "-\t\t\t\tthis.hierarchy.progressMonitor == null ?", "-\t\t\t\t\tnull :", "-\t\t\t\t\tnew SubProgressMonitor(this.hierarchy.progressMonitor, 30);", "-\t\t\tHashMap allOpenablesInRegion = determineOpenablesInRegion(typeInRegionMonitor);", "+\t\t\tHashMap allOpenablesInRegion = determineOpenablesInRegion(this.hierarchy.progressMonitor.split(30));", "-\t\t\tIProgressMonitor buildMonitor =", "-\t\t\t\tthis.hierarchy.progressMonitor == null ?", "-\t\t\t\t\tnull :", "-\t\t\t\t\tnew SubProgressMonitor(this.hierarchy.progressMonitor, 70);", "-\t\t\tcreateTypeHierarchyBasedOnRegion(allOpenablesInRegion, buildMonitor);", "+\t\t\tcreateTypeHierarchyBasedOnRegion(allOpenablesInRegion, this.hierarchy.progressMonitor.split(70));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0771c7dab6bfb6651bb506e37110d01", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "2808c167f87e5191890bb92d5e4f0af641d2f6e4", "commitAfterChange": "0199702ff6cca8392f62e334c86875a1b31484e2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void build(boolean computeSubtypes)", "signatureAfterChange": " public void build(boolean computeSubtypes)", "diff": ["-\t\t\tIProgressMonitor possibleSubtypesMonitor =", "-\t\t\t\tthis.hierarchy.progressMonitor == null ?", "-\t\t\t\t\tnull :", "-\t\t\t\t\tnew SubProgressMonitor(this.hierarchy.progressMonitor, amountOfWorkForSubtypes);", "+\t\t\tSubMonitor possibleSubtypesMonitor = this.hierarchy.progressMonitor.split(amountOfWorkForSubtypes);", "-\t\t\t\tIProgressMonitor buildMonitor =", "-\t\t\t\t\tthis.hierarchy.progressMonitor == null ?", "-\t\t\t\t\t\tnull :", "-\t\t\t\t\t\tnew SubProgressMonitor(this.hierarchy.progressMonitor, 100 - amountOfWorkForSubtypes);", "+\t\t\t\tSubMonitor buildMonitor = this.hierarchy.progressMonitor.split(100 - amountOfWorkForSubtypes);"]}], "num": 57991}