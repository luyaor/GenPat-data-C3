{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6aa3cb0c82e3219800f99bf35ae3c516", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "915b3662b7cc45f958887b601333f33c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "38deed784ce291d43d3c53414da1ee3c4ed08415", "commitAfterChange": "644852dd87f43f0af4108905e62d50729f9b044b", "methodNumberBeforeChange": 246, "methodNumberAfterChange": 247, "signatureBeforeChange": " public void localVariableHiding(LocalDeclaration local, Binding hiddenVariable, boolean  isSpecialArgHidingField)", "signatureAfterChange": " public void localVariableHiding(LocalDeclaration local, Binding hiddenVariable, boolean  isSpecialArgHidingField)", "diff": ["-\t\t\tlocal.sourceStart,", "-\t\t\tlocal.sourceEnd);", "+\t\t\tlocalSourceStart((LocalVariableBinding) hiddenVariable, local),", "+\t\t\tlocalSourceEnd((LocalVariableBinding) hiddenVariable, local));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8b272b2ab8df0033b2f2629d3ef0c55", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "74958747d6dfa7074d7be26e7090f615c8b5cb63", "commitAfterChange": "2d759a713e644c7b941823a3d4e9e44e73ef6b04", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": " private void computeInheritedMethods()", "signatureAfterChange": " private void computeInheritedMethods()", "diff": ["-\t\t\tMethodBinding[] methods = superType.methods();", "+\t\t\tMethodBinding[] methods = superType.unResolvedMethods();", "-\t\t\t\t\t\t\tif (method.returnType == existingMethods[i].returnType && method.areParametersEqual(existingMethods[i])) {", "+\t\t\t\t\t\t\tif (areTypesEqual(method.returnType, existingMethods[i].returnType) && areParametersEqual(method, existingMethods[i])) {", "-\t\t\t\t\t\t\tif (method.returnType == nonVisibleDefaultMethods[i].returnType", "+\t\t\t\t\t\t\tif (areTypesEqual(method.returnType, nonVisibleDefaultMethods[i].returnType)", "-\t\t\t\t\t\t\t\t&& method.areParametersEqual(nonVisibleDefaultMethods[i])) ", "+\t\t\t\t\t\t\t\t&& areParametersEqual(method, nonVisibleDefaultMethods[i])) ", "-\t\t\t\t\t\t\t\tif (method.returnType == current[i].returnType && method.areParametersEqual(current[i])) {", "+\t\t\t\t\t\t\t\tif (areTypesEqual(method.returnType, current[i].returnType) && areParametersEqual(method, current[i])) {", "-\t\t\t\t\tMethodBinding[] methods = superType.methods();", "+\t\t\t\t\tMethodBinding[] methods = superType.unResolvedMethods();"]}], "num": 31932}