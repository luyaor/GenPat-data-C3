{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c4a83cc2a0676e4228489d2058a0eeaf", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3aedfb56dfc24ac00ddd16aa354b5efa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 585, "methodNumberAfterChange": 585, "signatureBeforeChange": " \tpublic void test0566()", "signatureAfterChange": " \tpublic void test0566()", "diff": ["-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "+\t\tString xSource =", "-\t\t\t\t\"}\\n\",", "-\t\t\t},", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. ERROR in X.java (at line 7)\\n\" +", "-\t\t\t\"\tle = fill(le, new X2());\\n\" +", "-\t\t\t\"\t     ^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Type mismatch: cannot convert from List<X2> to List<X1>\\n\" +", "-\t\t\t\"----------\\n\");", "+\t\t\t\t\"}\\n\";", "+\t\tif (this.complianceLevel < ClassFileConstants.JDK1_8) {", "+\t\t\tthis.runNegativeTest(", "+\t\t\t\tnew String[] {", "+\t\t\t\t\t\"X.java\",", "+\t\t\t\t\txSource,", "+\t\t\t\t},", "+\t\t\t\t\"----------\\n\" +", "+\t\t\t\t\"1. ERROR in X.java (at line 7)\\n\" +", "+\t\t\t\t\"\tle = fill(le, new X2());\\n\" +", "+\t\t\t\t\"\t     ^^^^^^^^^^^^^^^^^^\\n\" +", "+\t\t\t\t\"Type mismatch: cannot convert from List<X2> to List<X1>\\n\" +", "+\t\t\t\t\"----------\\n\");", "+\t\t} else {", "+\t\t\trunConformTest(new String[]{ \"X.java\", xSource });", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48664eb1ee72252e6b99cbffa7eb776c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 612, "methodNumberAfterChange": 612, "signatureBeforeChange": " \tpublic void test0593()", "signatureAfterChange": " \tpublic void test0593()", "diff": ["-\t    this.runNegativeTest(", "-            new String[] {", "-                \"X.java\",", "+\t    String xSource =", "-\t\t\t\t\"}\\n\",", "-            },", "-    \t\t\"----------\\n\" +", "-    \t\t\"1. ERROR in X.java (at line 3)\\n\" +", "-    \t\t\"\tList<Class<?>> classes1 = Arrays.asList(String.class, Boolean.class);\\n\" +", "-    \t\t\"\t                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-    \t\t\"Type mismatch: cannot convert from List<Class<? extends Object&Serializable&Comparable<?>>> to List<Class<?>>\\n\" +", "-    \t\t\"----------\\n\",", "-    \t\tnull,", "-    \t\ttrue,", "-    \t\toptions);", "+\t\t\t\t\"}\\n\";", "+\t    if (this.complianceLevel < ClassFileConstants.JDK1_8) {", "+\t    \tthis.runNegativeTest(", "+    \t\t\tnew String[] {", "+    \t\t\t\t\"X.java\",", "+    \t\t\t\txSource,", "+    \t\t\t},", "+    \t\t\t\"----------\\n\" +", "+\t\t\t\t\"1. ERROR in X.java (at line 3)\\n\" +", "+\t\t\t\t\"\tList<Class<?>> classes1 = Arrays.asList(String.class, Boolean.class);\\n\" +", "+\t\t\t\t\"\t                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "+\t\t\t\t\"Type mismatch: cannot convert from List<Class<? extends Object&Serializable&Comparable<?>>> to List<Class<?>>\\n\" +", "+\t\t\t\t\"----------\\n\",", "+\t\t\t\tnull,", "+\t\t\t\ttrue,", "+\t\t\t\toptions);", "+\t    } else {", "+\t    \trunConformTest(new String[] { \"X.java\", xSource }, options);", "+\t    }"]}], "num": 24727}