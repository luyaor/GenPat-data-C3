{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "36f0a8da15b37e8bd3d23c66e539b8f8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e2b54180e2c6978d8fa42a07e9b32e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static final boolean camelCaseMatch(String pattern, String name, boolean prefixMatch)", "signatureAfterChange": " public static final boolean camelCaseMatch(String pattern, String name, boolean samePartCount)", "diff": ["-public static final boolean camelCaseMatch(String pattern, String name, boolean prefixMatch) {", "+public static final boolean camelCaseMatch(String pattern, String name, boolean samePartCount) {", "-\treturn camelCaseMatch(pattern, 0, pattern.length(), name, 0, name.length(), prefixMatch);", "+\treturn camelCaseMatch(pattern, 0, pattern.length(), name, 0, name.length(), samePartCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5feb08fd44109df53036a44b2a973e70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/core/compiler/CharOperation.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public static final boolean camelCaseMatch(char[] pattern, char[] name, boolean prefixMatch)", "signatureAfterChange": " public static final boolean camelCaseMatch(char[] pattern, char[] name, boolean samePartCount)", "diff": ["-public static final boolean camelCaseMatch(char[] pattern, char[] name, boolean prefixMatch) {", "+public static final boolean camelCaseMatch(char[] pattern, char[] name, boolean samePartCount) {", "-\treturn camelCaseMatch(pattern, 0, pattern.length, name, 0, name.length, prefixMatch);", "+\treturn camelCaseMatch(pattern, 0, pattern.length, name, 0, name.length, samePartCount);"]}], "num": 12914}