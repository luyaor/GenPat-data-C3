{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "99020a6eafb5bc84c8264a25f420d70d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dae617218e3adcabf50e5e4bc3e848d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/CodeSnippetParsingUtil.java", "commitBeforeChange": "97881e1f65dad02c5fcba69e18ae3332573c3839", "commitAfterChange": "5ae43aadc33d93b5c6af6a0612729105eee79d4f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic static ASTNode[] parseClassBodyDeclarations(char[] source, int offset, int length, Map settings)", "signatureAfterChange": " \t \tpublic ASTNode[] parseClassBodyDeclarations(char[] source, int offset, int length, Map settings)", "diff": ["-\tpublic static ASTNode[] parseClassBodyDeclarations(char[] source, int offset, int length, Map settings) {", "-\t\t", "+\tpublic ASTNode[] parseClassBodyDeclarations(char[] source, int offset, int length, Map settings) {", "-\t\treturn parser.parseClassBodyDeclarations(source, offset, length, new CompilationUnitDeclaration(problemReporter, new CompilationResult(sourceUnit, 0, 0, compilerOptions.maxProblemsPerUnit), source.length));", "+\t\tCompilationResult compilationResult = new CompilationResult(sourceUnit, 0, 0, compilerOptions.maxProblemsPerUnit);", "+\t\tfinal CompilationUnitDeclaration compilationUnitDeclaration = new CompilationUnitDeclaration(problemReporter, compilationResult, source.length);", "+\t\tASTNode[] result = parser.parseClassBodyDeclarations(source, offset, length, compilationUnitDeclaration);", "+\t\t", "+\t\tthis.problems = compilationResult.problems;", "+\t\tthis.lineSeparatorPositions = compilationResult.lineSeparatorPositions;", "+\t\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9bfdb050900197a8b5d0fb78c17b448", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/CodeSnippetParsingUtil.java", "commitBeforeChange": "97881e1f65dad02c5fcba69e18ae3332573c3839", "commitAfterChange": "5ae43aadc33d93b5c6af6a0612729105eee79d4f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic static Expression parseExpression(char[] source, int offset, int length, Map settings)", "signatureAfterChange": " \t \tpublic Expression parseExpression(char[] source, int offset, int length, Map settings)", "diff": ["-\tpublic static Expression parseExpression(char[] source, int offset, int length, Map settings) {", "+\tpublic Expression parseExpression(char[] source, int offset, int length, Map settings) {", "-\t\treturn parser.parseExpression(source, offset, length, new CompilationUnitDeclaration(problemReporter, new CompilationResult(sourceUnit, 0, 0, compilerOptions.maxProblemsPerUnit), source.length));", "+\t\tCompilationResult compilationResult = new CompilationResult(sourceUnit, 0, 0, compilerOptions.maxProblemsPerUnit);", "+\t\tExpression result = parser.parseExpression(source, offset, length, new CompilationUnitDeclaration(problemReporter, compilationResult, source.length));", "+\t\tthis.problems = compilationResult.problems;", "+\t\tthis.lineSeparatorPositions = compilationResult.lineSeparatorPositions;", "+\t\treturn result;"]}], "num": 64176}