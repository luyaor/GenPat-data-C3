{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "624a2dc5d2d9981b60af8846f8341182", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b4de221ab342ab96c28bd412033cc5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "c56d8289161a1b2e501ace042a7085f33bafd661", "commitAfterChange": "f15f3a4daa4f7cbf363475bdb20d4707912f834f", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": " private void readHeaderInfo(RandomAccessFile file) throws IOException", "signatureAfterChange": " private void readHeaderInfo(RandomAccessFile file) throws IOException", "diff": ["-\tfor (int i = 0; i < size; i++)", "-\t\tthis.categoryOffsets.put(Util.readUTF(file), file.readInt()); // cache offset to category table", "+\tfor (int i = 0; i < size; i++) {", "+\t\tchar[] tableName = Util.readUTF(file);", "+\t\tint offset = file.readInt();", "+\t\tthis.categoryOffsets.put(tableName, offset); // cache offset to category table", "+\t\tif (i == 0)", "+\t\t\tthis.startOfCategoryTables = offset;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d38e435a276cb0cfddf9be523649cb2a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "e6e8c555a7d6f504d4ea246c591d5bb3f080d438", "commitAfterChange": "3316f207e855c46fb5e805791239fa37620ca8c4", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 21, "signatureBeforeChange": " private void readHeaderInfo(RandomAccessFile file) throws IOException", "signatureAfterChange": " private void readHeaderInfo(RandomAccessFile file) throws IOException", "diff": ["-\t\tthis.categoryOffsets.put(Util.readUTF(file), file.readInt()); // cache offset to category table", "+\t\tthis.categoryOffsets.put(INTERNED_CATEGORY_NAMES.get(Util.readUTF(file)), file.readInt()); // cache offset to category table"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d95792a5de7c33c595d6e764fce95192", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "bb811cafdba11489b23b9c8cd6c46c237bf0db24", "commitAfterChange": "2a64f816a9e1e382be3c6f39875e5c587a7235c0", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 20, "signatureBeforeChange": " private void readHeaderInfo(RandomAccessFile file) throws IOException", "signatureAfterChange": " private void readHeaderInfo(RandomAccessFile file) throws IOException", "diff": ["-\tfor (int i = 0; i < size; i++)", "-\t\tthis.categoryOffsets.put(INTERNED_CATEGORY_NAMES.get(Util.readUTF(file)), file.readInt()); // cache offset to category table", "+\tthis.categoryEnds = new HashtableOfIntValues(size);", "+\tchar[] previousCategory = null;", "+\tint offset = -1;", "+\tfor (int i = 0; i < size; i++) {", "+\t\tchar[] categoryName = INTERNED_CATEGORY_NAMES.get(file.readUTF().toCharArray());", "+\t\toffset = file.readInt();", "+\t\tthis.categoryOffsets.put(categoryName, offset); // cache offset to category table", "+\t\tif (previousCategory != null) {", "+\t\t\tthis.categoryEnds.put(previousCategory, offset); // cache end of the category table", "+\t\t}", "+\t\tpreviousCategory = categoryName;", "+\t}", "+\tif (previousCategory != null) {", "+\t\tthis.categoryEnds.put(previousCategory, this.headerInfoOffset); // cache end of the category table", "+\t}"]}], "num": 779}