{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "05cdbff39232243784e28cf7305cbb92", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7277ffb77d798fd2fbbb5b79f2933e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/diagnose/Util.java", "commitBeforeChange": "fd230c4ee1ceefd6a4812ebc7de0e734ce8df73c", "commitAfterChange": "e752367433ca417806253a6753c55772428a8bf6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tprivate static void computeDietRange0(TypeDeclaration[] types)", "signatureAfterChange": " \t \tprivate static void computeDietRange0(TypeDeclaration[] types)", "diff": ["-\t\t\t\t\tif(!method.isDefaultConstructor()", "-\t\t\t\t\t\t&& !method.isClinit()", "-\t\t\t\t\t\t&& (method.modifiers & CompilerModifiers.AccSemicolonBody) == 0) {", "-\t\t\t\t\t\t", "-\t\t\t\t\t\tint flags = method.sourceEnd + 1 == method.bodyStart ? LBRACE_MISSING : NO_FLAG;", "-\t\t\t\t\t\taddInterval(method.bodyStart, method.bodyEnd, flags);", "+\t\t\t\t\tif(containsIgnoredBody(method)) {", "+\t\t\t\t\t\tif(containsErrorInSignature(method)) {", "+\t\t\t\t\t\t\tmethod.errorInSignature = true;", "+\t\t\t\t\t\t\taddInterval(method.declarationSourceStart, method.declarationSourceEnd, IGNORE);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tint flags = method.sourceEnd + 1 == method.bodyStart ? LBRACE_MISSING : NO_FLAG;", "+\t\t\t\t\t\t\taddInterval(method.bodyStart, method.bodyEnd, flags);", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\taddInterval(initializer.bodyStart, initializer.bodyEnd);", "+\t\t\t\t\t\tif(initializer.declarationSourceEnd == initializer.bodyEnd){", "+\t\t\t\t\t\t\tinitializer.errorInSignature = true;", "+\t\t\t\t\t\t\taddInterval(initializer.declarationSourceStart, initializer.declarationSourceEnd, IGNORE);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\taddInterval(initializer.bodyStart, initializer.bodyEnd);", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fffb7d7f3c55583be1e038c04e3b7b40", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/diagnose/Util.java", "commitBeforeChange": "1c1900915bb345a83d797f7ce274ea925e7d1096", "commitAfterChange": "6b93bc47c94f281cdece9370a844218715786de0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tprivate static void computeDietRange0(TypeDeclaration[] types)", "signatureAfterChange": " \t \tprivate static void computeDietRange0(TypeDeclaration[] types, RangeResult result)", "diff": ["-\tprivate static void computeDietRange0(TypeDeclaration[] types) {", "+\tprivate static void computeDietRange0(TypeDeclaration[] types, RangeResult result) {", "-\t\t\t\tcomputeDietRange0(types[j].memberTypes);", "+\t\t\t\tcomputeDietRange0(types[j].memberTypes, result);", "-\t\t\t\t\t\t\taddInterval(method.declarationSourceStart, method.declarationSourceEnd, IGNORE);", "+\t\t\t\t\t\t\tresult.addInterval(method.declarationSourceStart, method.declarationSourceEnd, IGNORE);", "-\t\t\t\t\t\t\taddInterval(method.bodyStart, method.bodyEnd, flags);", "+\t\t\t\t\t\t\tresult.addInterval(method.bodyStart, method.bodyEnd, flags);", "-\t\t\t\t\t\t\taddInterval(initializer.declarationSourceStart, initializer.declarationSourceEnd, IGNORE);", "+\t\t\t\t\t\t\tresult.addInterval(initializer.declarationSourceStart, initializer.declarationSourceEnd, IGNORE);", "-\t\t\t\t\t\t\taddInterval(initializer.bodyStart, initializer.bodyEnd);", "+\t\t\t\t\t\t\tresult.addInterval(initializer.bodyStart, initializer.bodyEnd);"]}], "num": 71899}