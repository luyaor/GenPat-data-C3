{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9f5a6738d49b6f36262de85dd4acc607", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87ed98605f5cc95989aac13102e1c2c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceASTTests.java", "commitBeforeChange": "5281f7a1d02f4134760334f239cbffb833f0ed1c", "commitAfterChange": "b8222e0e4564cc4472bb2fdfd410e7de68bbf0fa", "methodNumberBeforeChange": 145, "methodNumberAfterChange": 149, "signatureBeforeChange": "  \tprivate void runAstCreation(int astLevel) throws JavaModelException", "signatureAfterChange": "  \tprivate int runAstCreation(int astLevel) throws JavaModelException", "diff": ["-\tprivate void runAstCreation(int astLevel) throws JavaModelException {", "-\t\tint allExtendedStartPositions = 0;", "-\t\tint allExtendedEndPositions = 0;", "-\t\tint allNodesCount = 0;", "+", "+\tprivate int runAstCreation(int astLevel) throws JavaModelException {", "+\t\tint unitsCount = 0;", "+\t\t\tunitsCount += size;", "-\t\t\t\tfor (int ptr=0; ptr<length; ptr++) {", "-\t\t\t\t\tCommentMapperASTVisitor visitor = new CommentMapperASTVisitor(compilationUnits[ptr]);", "-\t\t\t\t\tcompilationUnits[ptr].accept(visitor);", "-\t\t\t\t\tallExtendedStartPositions += visitor.extendedStartPositions;", "-\t\t\t\t\tallExtendedEndPositions += visitor.extendedEndPositions;", "-\t\t\t\t\tallNodesCount += visitor.nodesCount;", "-\t\t\t\t}", "-", "-\t\t// Print statistics", "-\t\tSystem.out.println(\"-------------------------------------\");", "-\t\tSystem.out.println(\"DOM/AST creation performance test statistics:\");", "-\t\tNumberFormat intFormat = NumberFormat.getIntegerInstance();", "-\t\tSystem.out.println(\"  - \"+intFormat.format(allNodesCount)+\" nodes have been parsed.\");", "-\t\tSystem.out.println(\"  - \"+intFormat.format(allExtendedStartPositions)+\" nodes have extended start position.\");", "-\t\tSystem.out.println(\"  - \"+intFormat.format(allExtendedEndPositions)+\" nodes have extended end position.\");", "-\t\tSystem.out.println(\"-------------------------------------\\n\");", "+\t\treturn unitsCount;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f812845c4fa2437a1b890a1acfecddb3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceCompletionTests.java", "commitBeforeChange": "5281f7a1d02f4134760334f239cbffb833f0ed1c", "commitAfterChange": "b8222e0e4564cc4472bb2fdfd410e7de68bbf0fa", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate void complete( \t\t\tString testName, \t\t\tString projectName, \t\t\tString packageName, \t\t\tString unitName, \t\t\tString completeAt, \t\t\tString completeBehind, \t\t\tint[] ignoredKinds, \t\t\tint warmupCount, \t\t\tint iterationCount) throws JavaModelException", "signatureAfterChange": " \tprivate void complete( \t\t\tString testName, \t\t\tString projectName, \t\t\tString packageName, \t\t\tString unitName, \t\t\tString completeAt, \t\t\tString completeBehind, \t\t\tint[] ignoredKinds, \t\t\tint warmupCount, \t\t\tint iterationCount) throws JavaModelException", "diff": ["-\t\ttagAsSummary(testName, Dimension.CPU_TIME, false/* do NOT put in fingerprint*/);", "+\t\ttagAsSummary(testName, false); // do NOT put in fingerprint", "-\t\t", "-\t\t// Measure loops", "+", "+\t\t// Clean memory", "+\t\trunGc();", "+", "+\t\t// Measures", "-\t\t// Commit measure", "+\t\t// Commit", "-\t\t", "-\t\t// Print statistics", "-\t\tSystem.out.println(\"-------------------------------------\");", "-\t\tSystem.out.println(\"Completion performance test statistics:\");", "-\t\tNumberFormat intFormat = NumberFormat.getIntegerInstance();", "-\t\tSystem.out.println(\"  - \"+intFormat.format(iterationCount)+\" completions have been performed\");", "-\t\tSystem.out.println(\"  - \"+intFormat.format(requestor.proposalCount)+\" proposals have been proposed\");", "-\t\tSystem.out.println(\"-------------------------------------\\n\");"]}], "num": 71599}