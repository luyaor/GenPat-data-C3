{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "af5a8d2c4af1cb4bcc173cac70e00db6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75c4bddb1b3af6d0ab8315de3daa7690", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImplicitNullAnnotationVerifier.java", "commitBeforeChange": "efed3241dcedfbe1a9d5bbfbc1d91d74ce583975", "commitAfterChange": "83a8a3171c136f3d1c745fbc6bc7fb39eeacdff1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate void findAllOverriddenMethods(MethodBinding original, char[] selector, int suggestedParameterLength,  \t\t\tReferenceBinding currentType, Set ifcsSeen, List result)", "signatureAfterChange": " \tprivate void findAllOverriddenMethods(MethodBinding original, char[] selector, int suggestedParameterLength,  \t\t\tReferenceBinding currentType, Set ifcsSeen, List result)", "diff": ["-\t\tcollectOverriddenMethods(original, selector, suggestedParameterLength, currentType.superclass(), ifcsSeen, result);", "+\t\tReferenceBinding superclass = currentType.superclass();", "+\t\tif (superclass == null)", "+\t\t\treturn; // pseudo root of inheritance, happens in eval contexts", "+\t\tcollectOverriddenMethods(original, selector, suggestedParameterLength, superclass, ifcsSeen, result);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7308ebe3c9c55358c095654ac676a66", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImplicitNullAnnotationVerifier.java", "commitBeforeChange": "364abd1fe47d562f576cb6b54a083094e0671f23", "commitAfterChange": "1b555425db41a9eb4fba300521a43b3ff494a42f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate void collectOverriddenMethods(MethodBinding original, char[] selector, int suggestedParameterLength, \t\t\tReferenceBinding superType, Set ifcsSeen, List result)", "signatureAfterChange": " \tprivate void collectOverriddenMethods(MethodBinding original, char[] selector, int suggestedParameterLength, \t\t\tReferenceBinding superType, Set ifcsSeen, List result)", "diff": ["+\t\tboolean added = false;", "-\t\t\t\treturn; // at most one method is overridden from any supertype", "+\t\t\t\tadded = true; // when overriding one or more methods from superType don't traverse to transitive superTypes", "-\t\tfindAllOverriddenMethods(original, selector, suggestedParameterLength, superType, ifcsSeen, result);", "+\t\tif (!added)", "+\t\t\tfindAllOverriddenMethods(original, selector, suggestedParameterLength, superType, ifcsSeen, result);"]}], "num": 25557}