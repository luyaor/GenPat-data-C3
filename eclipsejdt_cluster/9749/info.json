{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b252b1d62633653f7d95cf20ec397a88", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f75b6df783ef85a7fe894611205c58c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "f74cac509deaf512c7535f38357f0bf074e0e26d", "commitAfterChange": "4f8754b531ef7a0f61f91d095d8127db2debc51a", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 44, "signatureBeforeChange": "  \tprivate void disassemble(IBootstrapMethodsAttribute bootstrapMethodsAttribute, StringBuffer buffer, String lineSeparator, int tabNumber)", "signatureAfterChange": "  \tprivate void disassemble(IBootstrapMethodsAttribute bootstrapMethodsAttribute, StringBuffer buffer, String lineSeparator, int tabNumber, IConstantPool constantPool)", "diff": ["-\tprivate void disassemble(IBootstrapMethodsAttribute bootstrapMethodsAttribute, StringBuffer buffer, String lineSeparator, int tabNumber) {", "+\tprivate void disassemble(IBootstrapMethodsAttribute bootstrapMethodsAttribute, StringBuffer buffer, String lineSeparator, int tabNumber, IConstantPool constantPool) {", "+\t\t\tString[] argumentsName = bootstrapArgumentsDescription(entry, constantPool);", "+", "-\t\t\t\t\t\tgetArguments(entry.getBootstrapArguments())", "+\t\t\t\t\t\tbootstrapMethodDescription(entry, constantPool),", "+\t\t\t\t\t\tgetArguments(entry.getBootstrapArguments(), argumentsName)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80443253d36bef29cb94e06d32775b05", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldLocator.java", "commitBeforeChange": "4a7fb72faa1d4eb35981dd799c06dbffe9837a2f", "commitAfterChange": "af607e2e1ad6576e50200e327ea9acd540ed1ad7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, IJavaElement localElement, IJavaElement[] otherElements,Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException", "diff": ["+}", "+protected void matchReportReference(ASTNode reference, IJavaElement element, IJavaElement localElement, IJavaElement[] otherElements,Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException {", "-\t\tmatch = locator.newFieldReferenceMatch(element, elementBinding, accuracy, start, end-start+1, importRef);", "+\t\tmatch = locator.newFieldReferenceMatch(element, localElement, elementBinding, accuracy, start, end-start+1, importRef);", "-\t\tmatch = locator.newFieldReferenceMatch(element, elementBinding, accuracy, start, end-start+1, fieldReference);", "+\t\tmatch = locator.newFieldReferenceMatch(element, localElement, elementBinding, accuracy, start, end-start+1, fieldReference);", "-\t\tmatch = locator.newFieldReferenceMatch(element, elementBinding, accuracy, offset, reference.sourceEnd-offset+1, reference);", "+\t\tmatch = locator.newFieldReferenceMatch(element, localElement, elementBinding, accuracy, offset, reference.sourceEnd-offset+1, reference);", "-\t\t\t\tmatches[indexOfFirstFieldBinding] = locator.newFieldReferenceMatch(element, elementBinding, accuracy, -1, -1, reference);", "+\t\t\t\tmatches[indexOfFirstFieldBinding] = locator.newFieldReferenceMatch(element, localElement, elementBinding, accuracy, -1, -1, reference);", "-\t\t\t\t\t\tmatches[indexOfFirstFieldBinding] = locator.newFieldReferenceMatch(element, elementBinding, SearchMatch.A_ACCURATE, -1, -1, reference);", "+\t\t\t\t\t\tmatches[indexOfFirstFieldBinding] = locator.newFieldReferenceMatch(element, localElement, elementBinding, SearchMatch.A_ACCURATE, -1, -1, reference);", "-\t\t\t\t\t\tmatch = locator.newFieldReferenceMatch(element, elementBinding, SearchMatch.A_INACCURATE, -1, -1, reference);", "+\t\t\t\t\t\tmatch = locator.newFieldReferenceMatch(element, localElement, elementBinding, SearchMatch.A_INACCURATE, -1, -1, reference);", "-\t\t\t\t\tmatches[i] = locator.newFieldReferenceMatch(element, elementBinding, accuracy, -1, -1, reference);", "+\t\t\t\t\tmatches[i] = locator.newFieldReferenceMatch(element, localElement, elementBinding, accuracy, -1, -1, reference);", "-\t\t\t\t\t\t\tmatches[i] = locator.newFieldReferenceMatch(element, elementBinding, SearchMatch.A_ACCURATE, -1, -1, reference);", "+\t\t\t\t\t\t\tmatches[i] = locator.newFieldReferenceMatch(element, localElement, elementBinding, SearchMatch.A_ACCURATE, -1, -1, reference);", "-\t\t\t\t\t\t\tmatch = locator.newFieldReferenceMatch(element, elementBinding, SearchMatch.A_INACCURATE, -1, -1, reference);", "+\t\t\t\t\t\t\tmatch = locator.newFieldReferenceMatch(element, localElement, elementBinding, SearchMatch.A_INACCURATE, -1, -1, reference);"]}], "num": 9749}