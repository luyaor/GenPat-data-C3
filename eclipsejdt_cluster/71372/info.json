{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "47c14db63620831933acbec20744bfb2", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb2184e65a2c8d67af3ab120e990aee0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "3256aef43e2296affdbf86e21f8cafdaa866161a", "commitAfterChange": "f357f309273e0bfe8345ff708d18fa83c6a34931", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tpublic MethodBinding getExactConstructor(TypeBinding receiverType, InvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding getExactConstructor(TypeBinding receiverType, InvocationSite invocationSite)", "diff": ["+\t\tfinal TypeBinding[] genericTypeArguments = invocationSite.genericTypeArguments();", "-\t\t\tif (constructor.typeVariables() != Binding.NO_TYPE_VARIABLES && invocationSite.genericTypeArguments() == null)", "+\t\t\tif (constructor.typeVariables() != Binding.NO_TYPE_VARIABLES && genericTypeArguments == null)", "+\t\t}", "+\t\tfinal TypeVariableBinding[] typeVariables = exactConstructor.typeVariables();", "+\t\tif (typeVariables != Binding.NO_TYPE_VARIABLES) {", "+\t\t\tif (typeVariables.length != genericTypeArguments.length)", "+\t\t\t\treturn null;", "+\t\t\texactConstructor = environment().createParameterizedGenericMethod(exactConstructor, genericTypeArguments);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e254fbd0911554ea37d3b4d61effec6b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "3256aef43e2296affdbf86e21f8cafdaa866161a", "commitAfterChange": "f357f309273e0bfe8345ff708d18fa83c6a34931", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 47, "signatureBeforeChange": " \tpublic MethodBinding getExactMethod(TypeBinding receiverType, char[] selector, InvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding getExactMethod(TypeBinding receiverType, char[] selector, InvocationSite invocationSite)", "diff": ["-\t\tif (exactMethod.isVarargs() || exactMethod.typeVariables() != Binding.NO_TYPE_VARIABLES && invocationSite.genericTypeArguments() == null)", "+\t\t", "+\t\tfinal TypeBinding[] typeArguments = invocationSite.genericTypeArguments();", "+\t\tTypeVariableBinding[] typeVariables = exactMethod.typeVariables();", "+\t\tif (exactMethod.isVarargs() || (typeVariables != Binding.NO_TYPE_VARIABLES && (typeArguments == null || typeArguments.length != typeVariables.length)))", "+\t\t", "+\t\tif (typeVariables != Binding.NO_TYPE_VARIABLES) ", "+\t\t\treturn environment().createParameterizedGenericMethod(exactMethod, typeArguments);", "+\t"]}], "num": 71372}