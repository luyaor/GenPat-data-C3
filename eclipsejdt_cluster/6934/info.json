{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9895cd23b218fc8bfbf3817c583c8e85", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01c35f9994043f3dcaee33ad97743df0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocSingleTypeReference.java", "commitBeforeChange": "f49cf7529ae8b80cdf3f120143dad37a4f24e498", "commitAfterChange": "b2c3be7bd78bc61f04ab542749dc9420d42f47cb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tTypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tTypeBinding internalResolveType(Scope scope)", "diff": ["+\t\t// End resolution when getTypeBinding(scope) returns null. This may happen in", "+\t\t// certain circumstances, typically when an illegal access is done on a type ", "+\t\t// variable (see bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=204749)", "+\t\tif (this.resolvedType == null) return null;", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e896df715c58c9e843fa9f4cca47e8e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocQualifiedTypeReference.java", "commitBeforeChange": "f49cf7529ae8b80cdf3f120143dad37a4f24e498", "commitAfterChange": "b2c3be7bd78bc61f04ab542749dc9420d42f47cb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope, boolean checkBounds)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope, boolean checkBounds)", "diff": ["+\t\t// End resolution when getTypeBinding(scope) returns null. This may happen in", "+\t\t// certain circumstances, typically when an illegal access is done on a type ", "+\t\t// variable (see bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=204749)", "+\t\tif (this.resolvedType == null) return null;", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "424ca7e556606b0a967767bb9218b0a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "aa46e505e12243b49dc3b1e5f17fcf2c4c8a56ec", "commitAfterChange": "09b4b71eb0933af8e650ac48190774709a7bde80", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": "  \tpublic Hashtable getOptions()", "signatureAfterChange": "  \tpublic Hashtable getOptions()", "diff": ["-\t\tif (this.optionsCache != null) return new Hashtable(this.optionsCache);", "+\t\tHashtable cachedOptions; // use a local variable to avoid race condition (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=256329 )", "+\t\tif ((cachedOptions = this.optionsCache) != null) return new Hashtable(cachedOptions);"]}], "num": 6934}