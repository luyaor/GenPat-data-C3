{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a59e051878bdba8c748fccdbbfd8a525", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0904ec42b971270452c824880ead0efb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "f9a4225018848764cfc1723dc3aa2afabd642ddb", "commitAfterChange": "5b71fd258ccc5692becf5de077dfd1b633e668c5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public synchronized Map<AnnotationProcessorFactory, FactoryPath.Attributes>      \tgetJava5FactoriesAndAttributesForProject(IJavaProject jproj)", "signatureAfterChange": "     public Map<AnnotationProcessorFactory, FactoryPath.Attributes>      \tgetJava5FactoriesAndAttributesForProject(IJavaProject jproj)", "diff": ["-    public synchronized Map<AnnotationProcessorFactory, FactoryPath.Attributes> ", "+    public Map<AnnotationProcessorFactory, FactoryPath.Attributes> ", "-    \tMap<AnnotationProcessorFactory, FactoryPath.Attributes> factories = _project2Java5Factories.get(jproj);", "-    \tif( factories != null )", "-    \t\treturn Collections.unmodifiableMap(factories);", "+    \t// We can't create problem markers inside synchronization -- see https://bugs.eclipse.org/bugs/show_bug.cgi?id=184923", "+    \tLoadFailureHandler failureHandler = new LoadFailureHandler(jproj);", "-    \t// Load the project", "-\t\tFactoryPath fp = FactoryPathUtil.getFactoryPath(jproj);", "-\t\tMap<FactoryContainer, FactoryPath.Attributes> containers = fp.getEnabledContainers();", "-\t\tloadFactories(containers, jproj);", "+    \tsynchronized (this) {", "+\t    \tMap<AnnotationProcessorFactory, FactoryPath.Attributes> factories = _project2Java5Factories.get(jproj);", "+\t    \tif( factories != null )", "+\t    \t\treturn Collections.unmodifiableMap(factories);", "+\t    \t", "+\t    \t// Load the project", "+\t\t\tFactoryPath fp = FactoryPathUtil.getFactoryPath(jproj);", "+\t\t\tMap<FactoryContainer, FactoryPath.Attributes> containers = fp.getEnabledContainers();", "+\t\t\tloadFactories(containers, jproj, failureHandler);", "+    \t}", "+    \t", "+    \tfailureHandler.reportFailureMarkers();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74f1cd7f0c8c57af7232567384c064d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "f9a4225018848764cfc1723dc3aa2afabd642ddb", "commitAfterChange": "5b71fd258ccc5692becf5de077dfd1b633e668c5", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public synchronized Map<IServiceFactory, FactoryPath.Attributes>      \tgetJava6FactoriesAndAttributesForProject(IJavaProject jproj)", "signatureAfterChange": "     public Map<IServiceFactory, FactoryPath.Attributes>      \tgetJava6FactoriesAndAttributesForProject(IJavaProject jproj)", "diff": ["-    public synchronized Map<IServiceFactory, FactoryPath.Attributes> ", "+    public Map<IServiceFactory, FactoryPath.Attributes> ", "-    \tMap<IServiceFactory, FactoryPath.Attributes> factories = _project2Java6Factories.get(jproj);", "-    \tif( factories != null )", "-    \t\treturn Collections.unmodifiableMap(factories);", "+    \t// We can't create problem markers inside synchronization -- see https://bugs.eclipse.org/bugs/show_bug.cgi?id=184923", "+    \tLoadFailureHandler failureHandler = new LoadFailureHandler(jproj);", "-    \t// Load the project", "-\t\tFactoryPath fp = FactoryPathUtil.getFactoryPath(jproj);", "-\t\tMap<FactoryContainer, FactoryPath.Attributes> containers = fp.getEnabledContainers();", "-\t\tloadFactories(containers, jproj);", "+    \tsynchronized (this) {", "+    \t", "+\t    \tMap<IServiceFactory, FactoryPath.Attributes> factories = _project2Java6Factories.get(jproj);", "+\t    \tif( factories != null )", "+\t    \t\treturn Collections.unmodifiableMap(factories);", "+\t    \t", "+\t    \t// Load the project", "+\t\t\tFactoryPath fp = FactoryPathUtil.getFactoryPath(jproj);", "+\t\t\tMap<FactoryContainer, FactoryPath.Attributes> containers = fp.getEnabledContainers();", "+\t\t\tloadFactories(containers, jproj, failureHandler);", "+    \t}", "+    \t", "+    \tfailureHandler.reportFailureMarkers();"]}], "num": 51774}