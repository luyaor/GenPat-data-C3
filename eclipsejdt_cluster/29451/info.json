{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aaeea4fd0215f7b01b42f047e3c76f3b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05307cf896e70d927f1950601b54002d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "93e5ff3a6545305db70cc209a35909ba11267a03", "commitAfterChange": "68db0a50107f072688f40bcdb70cc1c2cadc3119", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic static void copySE8AnnotationsToType(BlockScope scope, Binding recipient, AnnotationBinding[] annotations)", "signatureAfterChange": " \tpublic static void copySE8AnnotationsToType(BlockScope scope, Binding recipient, Annotation[] annotations)", "diff": ["-\tpublic static void copySE8AnnotationsToType(BlockScope scope, Binding recipient, AnnotationBinding[] annotations) {", "+\tpublic static void copySE8AnnotationsToType(BlockScope scope, Binding recipient, Annotation[] annotations) {", "+\t\t\tlong se8nullBits = 0;", "+\t\t\tAnnotation se8NullAnnotation = null;", "-\t\t\t\tfinal ReferenceBinding annotationType = annotations[i].getAnnotationType();", "+\t\t\t\tAnnotationBinding annotation = annotations[i].getCompilerAnnotation();", "+\t\t\t\tif (annotation == null) continue;", "+\t\t\t\tfinal ReferenceBinding annotationType = annotation.getAnnotationType();", "-\t\t\t\t\t\tse8Annotations = new AnnotationBinding[] { annotations[i] };", "+\t\t\t\t\t\tse8Annotations = new AnnotationBinding[] { annotation };", "-\t\t\t\t\t\tse8Annotations[se8count++] = annotations[i];", "+\t\t\t\t\t\tse8Annotations[se8count++] = annotation;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (annotationType.id == TypeIds.T_ConfiguredAnnotationNonNull) {", "+\t\t\t\t\t\tse8nullBits = TagBits.AnnotationNonNull;", "+\t\t\t\t\t\tse8NullAnnotation = annotations[i];", "+\t\t\t\t\t} else if (annotationType.id == TypeIds.T_ConfiguredAnnotationNullable) {", "+\t\t\t\t\t\tse8nullBits = TagBits.AnnotationNullable;", "+\t\t\t\t\t\tse8NullAnnotation = annotations[i];", "+\t\t\t\t\t\t\tlong prevNullBits = localType.tagBits & TagBits.AnnotationNullMASK;", "+\t\t\t\t\t\t\tif (se8nullBits != 0 && prevNullBits != se8nullBits && ((prevNullBits | se8nullBits) == TagBits.AnnotationNullMASK)) {", "+\t\t\t\t\t\t\t\tscope.problemReporter().contradictoryNullAnnotations(se8NullAnnotation);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tlong prevNullBits = fieldType.tagBits & TagBits.AnnotationNullMASK;", "+\t\t\t\t\t\t\tif (se8nullBits != 0 && prevNullBits != se8nullBits && ((prevNullBits | se8nullBits) == TagBits.AnnotationNullMASK)) {", "+\t\t\t\t\t\t\t\tscope.problemReporter().contradictoryNullAnnotations(se8NullAnnotation);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tlong prevNullBits = returnType.tagBits & TagBits.AnnotationNullMASK;", "+\t\t\t\t\t\t\t\tif (se8nullBits != 0 && prevNullBits != se8nullBits && ((prevNullBits | se8nullBits) == TagBits.AnnotationNullMASK)) {", "+\t\t\t\t\t\t\t\t\tscope.problemReporter().contradictoryNullAnnotations(se8NullAnnotation);", "+\t\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebafab143886f182e3e4d32719fa857b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "dd3bff4d99a5193497eb7e3c0e1bc46a32b7c36a", "commitAfterChange": "cc1c110e9641a2cecfab702ac9383376aefe030a", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 38, "signatureBeforeChange": " protected ParameterizedQualifiedTypeReference computeQualifiedGenericsFromRightSide(TypeReference rightSide, int dim)", "signatureAfterChange": " protected ParameterizedQualifiedTypeReference computeQualifiedGenericsFromRightSide(TypeReference rightSide, int dim, Annotation [][] annotationsOnDimensions)", "diff": ["-protected ParameterizedQualifiedTypeReference computeQualifiedGenericsFromRightSide(TypeReference rightSide, int dim) {", "-\tAnnotation [][] annotationsOnDimensions = dim == 0 ? null : getAnnotationsOnDimensions(dim);", "+protected ParameterizedQualifiedTypeReference computeQualifiedGenericsFromRightSide(TypeReference rightSide, int dim, Annotation [][] annotationsOnDimensions) {", "+\tAnnotation [][] typeAnnotations = null;", "+\t\tif (singleParameterizedTypeReference.annotations != null) {", "+\t\t\ttypeAnnotations = new Annotation[tokensSize][];", "+\t\t    typeAnnotations[nameSize] = singleParameterizedTypeReference.annotations[0];", "+\t\t}", "+\t\tif (singleTypeReference.annotations != null) {", "+\t\t\ttypeAnnotations = new Annotation[tokensSize][];", "+\t\t\ttypeAnnotations[nameSize] =  singleTypeReference.annotations[0];", "+\t\t}", "+\t\tAnnotation [][] rightSideAnnotations = parameterizedTypeReference.annotations;", "+\t\tif (rightSideAnnotations != null) {", "+\t\t\ttypeAnnotations = new Annotation[tokensSize][];", "+\t\t\tSystem.arraycopy(rightSideAnnotations, 0, typeAnnotations, nameSize, rightSideAnnotations.length);", "+\t\t}", "+\t\tAnnotation [][] rightSideAnnotations = qualifiedTypeReference.annotations;", "+\t\tif (rightSideAnnotations != null) {", "+\t\t\ttypeAnnotations = new Annotation[tokensSize][];", "+\t\t\tSystem.arraycopy(rightSideAnnotations, 0, typeAnnotations, nameSize, rightSideAnnotations.length);", "+\t\t}", "-\tint length;", "-\tif (this.typeAnnotationLengthPtr >= 0 && (length = this.typeAnnotationLengthStack[this.typeAnnotationLengthPtr--]) != 0) {", "-\t\ttypeRef.annotations = new Annotation[tokensSize][];", "-\t\tSystem.arraycopy(", "-\t\t\tthis.typeAnnotationStack,", "-\t\t\t(this.typeAnnotationPtr -= length) + 1,", "-\t\t\ttypeRef.annotations[0] = new Annotation[length],", "-\t\t\t0,", "-\t\t\tlength);", "-\t\ttypeRef.sourceStart = typeRef.annotations[0][0].sourceStart;", "+", "+\twhile (nameSize > 0) {", "+\t\tint length;", "+\t\tif ((length = this.typeAnnotationLengthStack[this.typeAnnotationLengthPtr--]) != 0) {", "+\t\t\tif (typeAnnotations == null)", "+\t\t\t\ttypeAnnotations = new Annotation[tokensSize][];", "+\t\t\tSystem.arraycopy(", "+\t\t\t\t\tthis.typeAnnotationStack,", "+\t\t\t\t\t(this.typeAnnotationPtr -= length) + 1,", "+\t\t\t\t\ttypeAnnotations[nameSize - 1] = new Annotation[length],", "+\t\t\t\t\t0,", "+\t\t\t\t\tlength);", "+\t\t\tif (nameSize == 1) {", "+\t\t\t\ttypeRef.sourceStart = typeAnnotations[0][0].sourceStart;", "+\t\t\t}", "+\t\t}", "+\t\tnameSize--;", "+\t}", "+\t", "+\tif ((typeRef.annotations = typeAnnotations) != null) {"]}], "num": 29451}