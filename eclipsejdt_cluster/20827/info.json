{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a128b023c3d0f805e346bc823fc9680e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05400a0f2c0d7f1b4e34bc33b85b4ee3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "04fb6202efdc761094aeadbfae786f791930dbc9", "commitAfterChange": "574419ea1bfec3547ee209064f26cc8514bc0721", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 24, "signatureBeforeChange": " private ICompilationUnit[] filterWorkingCopies(ICompilationUnit[] copies, IJavaElement focus, boolean isPolymorphicSearch)", "signatureAfterChange": " private ICompilationUnit[] workingCopiesThatCanSeeFocus(IJavaElement focus, boolean isPolymorphicSearch)", "diff": ["- */", "-private ICompilationUnit[] filterWorkingCopies(ICompilationUnit[] copies, IJavaElement focus, boolean isPolymorphicSearch) {", "-\tif (focus == null || copies == null) return copies;", "-\twhile (!(focus instanceof IJavaProject) && !(focus instanceof JarPackageFragmentRoot)) {", "-\t\tfocus = focus.getParent();", "-\t}", "-\tint length = copies.length;", "-\tICompilationUnit[] result = null;", "-\tint index = -1;", "-\tfor (int i=0; i<length; i++) {", "-\t\tICompilationUnit workingCopy = copies[i];", "-\t\tIPath projectOrJar = IndexSelector.getProjectOrJar(workingCopy).getPath();", "-\t\tif (!IndexSelector.canSeeFocus(focus, isPolymorphicSearch, projectOrJar)) {", "-\t\t\tif (result == null) {", "-\t\t\t\tresult = new ICompilationUnit[length-1];", "-\t\t\t\tSystem.arraycopy(copies, 0, result, 0, i);", "-\t\t\t\tindex = i;", "-\t\t\t}", "-\t\t} else if (result != null) {", "-\t\t\tresult[index++] = workingCopy;", "-\t\t}", "-\t}", "-\tif (result != null) {", "-\t\tif (result.length != index) {", "-\t\t\tSystem.arraycopy(result, 0, result = new ICompilationUnit[index], 0, index);", "-\t\t}", "-\t\treturn result;", "-\t} else {", "-\t\treturn copies;", "-\t}", "+ */", "+private ICompilationUnit[] workingCopiesThatCanSeeFocus(IJavaElement focus, boolean isPolymorphicSearch) {", "+\tICompilationUnit[] copies = getWorkingCopies();", "+\tif (focus == null || copies == null) return copies;", "+\twhile (!(focus instanceof IJavaProject) && !(focus instanceof JarPackageFragmentRoot)) {", "+\t\tfocus = focus.getParent();", "+\t}", "+\tint length = copies.length;", "+\tICompilationUnit[] result = null;", "+\tint index = -1;", "+\tfor (int i=0; i<length; i++) {", "+\t\tICompilationUnit workingCopy = copies[i];", "+\t\tIPath projectOrJar = IndexSelector.getProjectOrJar(workingCopy).getPath();", "+\t\tif (!IndexSelector.canSeeFocus(focus, isPolymorphicSearch, projectOrJar)) {", "+\t\t\tif (result == null) {", "+\t\t\t\tresult = new ICompilationUnit[length-1];", "+\t\t\t\tSystem.arraycopy(copies, 0, result, 0, i);", "+\t\t\t\tindex = i;", "+\t\t\t}", "+\t\t} else if (result != null) {", "+\t\t\tresult[index++] = workingCopy;", "+\t\t}", "+\t}", "+\tif (result != null) {", "+\t\tif (result.length != index) {", "+\t\t\tSystem.arraycopy(result, 0, result = new ICompilationUnit[index], 0, index);", "+\t\t}", "+\t\treturn result;", "+\t} else {", "+\t\treturn copies;", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d6871e07b3a4948132b415ca92f55a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AllJavaModelTests.java", "commitBeforeChange": "04e492585ec94bbdfe8f3ba07279d9329063465d", "commitAfterChange": "3197772a63ef20d756d7f45892d94bccedcb3d16", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " static Class[] getAllTestClasses()", "signatureAfterChange": " private static Class[] getAllTestClasses()", "diff": ["-static Class[] getAllTestClasses() {", "-\treturn new Class[] {", "+private static Class[] getAllTestClasses() {", "+\tClass[] classes = new Class[] {", "+\t", "+\t\t// Enter each test here, grouping the tests that are related", "+", "+\t\t// creation of method", "+\t\t", "+\t\t// Java Naming convention tests", "+\t", "+\t\t// Project & Root API unit tests", "+\t", "+\t\t// Compilation unit tests", "+\t", "+\t\t// Source attachment tests", "+\t\t", "+\t\t// Java search tests", "+\t\t\t", "+\t\t// Working copy tests", "+\t\t", "+\t\t// test IJavaModel", "+\t", "+\t\t// tests to check the encoding", "+\t\t", "+\t\t// test class name with special names like names containing '$'", "+\t\t", "+\t\t// IBuffer tests", "+\t", "+\t\t// Name lookup tests", "+\t", "+\t\t// Classpath and output location tests", "+\t", "+\t\t// Delta tests", "+\t", "+\t\t// Java element existence tests", "+\t\t", "+\t\t// Support for \"open on\" feature tests", "-\t\tSelectionJavadocModelTests.class,", "+\t\t", "+\t\t// Support for completion tests", "-\t\tCompletionTests_1_5.class,", "+\t\tCompletionTests_1_5.class,", "+\t\tSelectionJavadocModelTests.class,", "+\t\t", "+\t\t// Prefix and suffix tests", "+\t\t", "+\t\t// Code correction tests", "+\t\t", "+\t\t// Options tests", "+\t\t", "+\t\t// Type hierarchy tests", "+\t\t", "+\t\t// Resolve type tests", "+\t", "+\t\t// Reconciler tests", "+\t", "+\t\t// Copy and move operation tests", "+\t", "+\t\t// Rename tests", "+\t\t", "+\t\t// Exclusion patterns tests", "+\t\t", "+\t\t// Inclusion patterns tests", "+\t\t", "+\t\t// Signature tests", "+\t\t", "+\t\t// Variable initializers and container initializers tests", "+\t", "+\t\t// Java Model Factory tests", "+\t\t\t\t", "+\t\t// Java Element persistence tests", "+\t\t", "+\t\t// Java Element sorting tests", "+\t", "+\t\t// Package fragment root manipulation tests", "+\t\t", "+\t\t// Owverflowing cache tests", "+\t\t", "+\t\t// Working copy owner tests", "+\t", "+\t\t// Delete Java element tests", "+\t\t", "+\t\t// Local element tests", "+\t\t", "+\t\t// Get source tests", "+\t\t\t", "+\t\t// Create packages tests", "+\t", "+\t\t// Create compilation units tests", "+\t\t", "+\t\t// Create search participant tests", "+\t\tSearchParticipantTests.class,", "+\t\t", "+\t\t// Class file tests", "-\t\tBindingKeyTests.class", "+\t", "+\t};", "+\t", "+\tClass[] deprecatedClasses = getDeprecatedJDOMTestClasses();", "+\t", "+\tint classesLength = classes.length;", "+\tint deprecatedClassesLength = deprecatedClasses.length;", "+\tClass[] result = new Class[classesLength + deprecatedClassesLength];", "+\tSystem.arraycopy(classes, 0, result, 0, classesLength);", "+\tSystem.arraycopy(deprecatedClasses, 0, result, classesLength, deprecatedClassesLength);", "+\t", "+\treturn result;", "+}"]}], "num": 20827}