{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7257be0a9427aca2c1b05e297a075191", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30470556803096ea52777ebab7e69a06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/APTTestBase.java", "commitBeforeChange": "b9128093e8302bc6585f51afb5cbfa4db580aa85", "commitAfterChange": "8036c2dbcd62f164037a717d38250a661a02697b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \t@SuppressWarnings(\"unchecked\") \tprotected IMarker[] getAPTBuildMarkerFor(IPath path)", "signatureAfterChange": " \t \t@SuppressWarnings(\"unchecked\") \tprotected IMarker[] getAllAPTMarkers(IPath path)", "diff": ["-\tprotected IMarker[] getAPTBuildMarkerFor(IPath path){", "+\tprotected IMarker[] getAllAPTMarkers(IPath path){", "-\t\t\treturn resource.findMarkers(\"org.eclipse.jdt.apt.core.marker\", true, IResource.DEPTH_INFINITE);", "+\t\t\tIMarker[] markers = null;", "+\t\t\tint total = 0;", "+\t\t\tfinal IMarker[] processorMarkers = resource.findMarkers(AptPlugin.APT_PROCESSOR_PROBLEM_MARKER, true, IResource.DEPTH_INFINITE);", "+\t\t\ttotal = processorMarkers.length;", "+\t\t\tmarkers = processorMarkers;", "+\t\t\t\t", "+\t\t\tfinal IMarker[] factoryPathMarkers = resource.findMarkers(AptPlugin.APT_BUILD_PROBLEM_MARKER, true, IResource.DEPTH_INFINITE);\t\t\t", "+\t\t\tif( factoryPathMarkers.length != 0 ){", "+\t\t\t\tif( total != 0 ){", "+\t\t\t\t\tfinal int len = factoryPathMarkers.length;", "+\t\t\t\t\tfinal IMarker[] temp = new IMarker[len + total ];", "+\t\t\t\t\tSystem.arraycopy(markers, 0, temp, 0, total);", "+\t\t\t\t\tSystem.arraycopy(factoryPathMarkers, 0, temp, total, len);", "+\t\t\t\t\tmarkers = temp;", "+\t\t\t\t\ttotal += len;", "+\t\t\t\t}", "+\t\t\t\telse", "+\t\t\t\t\tmarkers = factoryPathMarkers;", "+\t\t\t}", "+\t\t\tfinal IMarker[] configMarkers = resource.findMarkers(AptPlugin.APT_CONFIG_PROBLEM_MARKER, true, IResource.DEPTH_INFINITE);\t\t\t", "+\t\t\tif( configMarkers.length != 0 ){", "+\t\t\t\tif( total != 0 ){", "+\t\t\t\t\tfinal int len = configMarkers.length;", "+\t\t\t\t\tfinal IMarker[] temp = new IMarker[len + total];", "+\t\t\t\t\tSystem.arraycopy(markers, 0, temp, 0, total);", "+\t\t\t\t\tSystem.arraycopy(configMarkers, 0, temp, total, len);", "+\t\t\t\t\tmarkers = temp;", "+\t\t\t\t\ttotal += len;", "+\t\t\t\t}", "+\t\t\t\telse", "+\t\t\t\t\tmarkers = configMarkers;", "+\t\t\t}", "+\t\t\treturn markers;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebafab143886f182e3e4d32719fa857b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "dd3bff4d99a5193497eb7e3c0e1bc46a32b7c36a", "commitAfterChange": "cc1c110e9641a2cecfab702ac9383376aefe030a", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 38, "signatureBeforeChange": " protected ParameterizedQualifiedTypeReference computeQualifiedGenericsFromRightSide(TypeReference rightSide, int dim)", "signatureAfterChange": " protected ParameterizedQualifiedTypeReference computeQualifiedGenericsFromRightSide(TypeReference rightSide, int dim, Annotation [][] annotationsOnDimensions)", "diff": ["-protected ParameterizedQualifiedTypeReference computeQualifiedGenericsFromRightSide(TypeReference rightSide, int dim) {", "-\tAnnotation [][] annotationsOnDimensions = dim == 0 ? null : getAnnotationsOnDimensions(dim);", "+protected ParameterizedQualifiedTypeReference computeQualifiedGenericsFromRightSide(TypeReference rightSide, int dim, Annotation [][] annotationsOnDimensions) {", "+\tAnnotation [][] typeAnnotations = null;", "+\t\tif (singleParameterizedTypeReference.annotations != null) {", "+\t\t\ttypeAnnotations = new Annotation[tokensSize][];", "+\t\t    typeAnnotations[nameSize] = singleParameterizedTypeReference.annotations[0];", "+\t\t}", "+\t\tif (singleTypeReference.annotations != null) {", "+\t\t\ttypeAnnotations = new Annotation[tokensSize][];", "+\t\t\ttypeAnnotations[nameSize] =  singleTypeReference.annotations[0];", "+\t\t}", "+\t\tAnnotation [][] rightSideAnnotations = parameterizedTypeReference.annotations;", "+\t\tif (rightSideAnnotations != null) {", "+\t\t\ttypeAnnotations = new Annotation[tokensSize][];", "+\t\t\tSystem.arraycopy(rightSideAnnotations, 0, typeAnnotations, nameSize, rightSideAnnotations.length);", "+\t\t}", "+\t\tAnnotation [][] rightSideAnnotations = qualifiedTypeReference.annotations;", "+\t\tif (rightSideAnnotations != null) {", "+\t\t\ttypeAnnotations = new Annotation[tokensSize][];", "+\t\t\tSystem.arraycopy(rightSideAnnotations, 0, typeAnnotations, nameSize, rightSideAnnotations.length);", "+\t\t}", "-\tint length;", "-\tif (this.typeAnnotationLengthPtr >= 0 && (length = this.typeAnnotationLengthStack[this.typeAnnotationLengthPtr--]) != 0) {", "-\t\ttypeRef.annotations = new Annotation[tokensSize][];", "-\t\tSystem.arraycopy(", "-\t\t\tthis.typeAnnotationStack,", "-\t\t\t(this.typeAnnotationPtr -= length) + 1,", "-\t\t\ttypeRef.annotations[0] = new Annotation[length],", "-\t\t\t0,", "-\t\t\tlength);", "-\t\ttypeRef.sourceStart = typeRef.annotations[0][0].sourceStart;", "+", "+\twhile (nameSize > 0) {", "+\t\tint length;", "+\t\tif ((length = this.typeAnnotationLengthStack[this.typeAnnotationLengthPtr--]) != 0) {", "+\t\t\tif (typeAnnotations == null)", "+\t\t\t\ttypeAnnotations = new Annotation[tokensSize][];", "+\t\t\tSystem.arraycopy(", "+\t\t\t\t\tthis.typeAnnotationStack,", "+\t\t\t\t\t(this.typeAnnotationPtr -= length) + 1,", "+\t\t\t\t\ttypeAnnotations[nameSize - 1] = new Annotation[length],", "+\t\t\t\t\t0,", "+\t\t\t\t\tlength);", "+\t\t\tif (nameSize == 1) {", "+\t\t\t\ttypeRef.sourceStart = typeAnnotations[0][0].sourceStart;", "+\t\t\t}", "+\t\t}", "+\t\tnameSize--;", "+\t}", "+\t", "+\tif ((typeRef.annotations = typeAnnotations) != null) {"]}], "num": 44886}