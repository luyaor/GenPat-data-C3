{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a509fe451595bd6bc9e845b77d4c1ed", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70d0a7f788a18a7a7388aa4719743539", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "2e199be1cb9f53bc00414ea80765129518e12c23", "commitAfterChange": "46bdd6036153580a7889ceb7993a8f8a6300be85", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void generateOptimizedBoolean( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tBranchLabel trueLabel, \t\tBranchLabel falseLabel, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedBoolean( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tBranchLabel trueLabel, \t\tBranchLabel falseLabel, \t\tboolean valueRequired)", "diff": ["+", "+\t\tint pc = codeStream.position;", "-\t\t\t\t\tcodeStream.updateLastRecordedEndPC(currentScope, position);", "+\t\t\t\t\tcodeStream.recordPositionsFrom(position, this.valueIfTrue.sourceEnd);", "-\t\tcodeStream.updateLastRecordedEndPC(currentScope, codeStream.position);", "+\t\tcodeStream.recordPositionsFrom(pc, this.sourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f308664eed91ee8348ad37cb380fc11f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "d16d71303cc38b4ca3466d0f95ab4eeb4eced38a", "commitAfterChange": "04423947d8d7bb07b422b48e36dce13f3a6590fc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void generateOptimizedBoolean( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tBranchLabel trueLabel, \t\tBranchLabel falseLabel, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedBoolean( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tBranchLabel trueLabel, \t\tBranchLabel falseLabel, \t\tboolean valueRequired)", "diff": ["+", "+\t\tint pc = codeStream.position;", "-\t\t\t\t\tcodeStream.updateLastRecordedEndPC(currentScope, position);", "+\t\t\t\t\tcodeStream.recordPositionsFrom(position, this.valueIfTrue.sourceEnd);", "-\t\tcodeStream.updateLastRecordedEndPC(currentScope, codeStream.position);", "+\t\tcodeStream.recordPositionsFrom(pc, this.sourceEnd);"]}], "num": 4073}