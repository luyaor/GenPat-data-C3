{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f1b366ff71f52a5abd7583350d991bde", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "489fbc8217a77bf08acfaea5ceb10453", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/CompletionParserTest2.java", "commitBeforeChange": "da80cfa9ed625bab885e849d64ff277d071e3e84", "commitAfterChange": "de7e4b40954d182f333159de9571c0420d75e2aa", "methodNumberBeforeChange": 136, "methodNumberAfterChange": 245, "signatureBeforeChange": " public void test0135()", "signatureAfterChange": " public void test0135_Method()", "diff": ["-public void test0135(){", "+ */", "+public void test0135_Method(){", "+\tString str =", "+\t\"public class X {\\n\" +", "+\t\"\tvoid bar(){\\n\" +", "+\t\"\t\t#\\n\" +", "+\t\"\t\tclass Inner {\\n\" +", "+\t\"\t\t\tvoid foo() {\\n\" +", "+\t\"\t\t\t\ttry {\\n\" +", "+\t\"\t\t\t\t} catch(Exception e) {\\n\" +", "+\t\"\t\t\t\t\te.\\n\" +", "+\t\"\t\t\t\t}\\n\" +", "+\t\"\t\t\t}\\n\" +", "+\t\"\t\t}\\n\" +", "+\t\"\t}\\n\" +", "+\t\"}\\n\";", "-\texpectedCompletionNodeToString = \"<CompleteOnName:e.>\";", "-\texpectedParentNodeToString = \"<NONE>\";", "-\tcompletionIdentifier = \"\";", "-\texpectedReplacedSource = \"e.\";", "-\texpectedUnitDisplayString =", "-\t\t\"public class X {\\n\" + ", "-\t\t\"  public X() {\\n\" + ", "-\t\t\"  }\\n\" + ", "-\t\t\"  void bar() {\\n\" + ", "-\t\t\"    class Inner {\\n\" + ", "-\t\t\"      Inner() {\\n\" + ", "-\t\t\"      }\\n\" + ", "-\t\t\"      void foo() {\\n\" + ", "-\t\t\"        {\\n\" + ", "-\t\t\"          Exception e;\\n\" + ", "-\t\t\"          <CompleteOnName:e.>;\\n\" + ", "-\t\t\"        }\\n\" + ", "-\t\t\"      }\\n\" + ", "-\t\t\"    }\\n\" + ", "-\t\t\"  }\\n\" + ", "-\t\t\"}\\n\";", "+", "+\tString completeBehind = \"e.\";", "+\tint cursorLocation = str.indexOf(\"e.\") + completeBehind.length() - 1;", "+\tString expectedCompletionNodeToString = \"<CompleteOnName:e.>\";", "+\tString expectedParentNodeToString = \"<NONE>\";", "+\tString completionIdentifier = \"\";", "+\tString expectedReplacedSource = \"e.\";", "+\tString expectedUnitDisplayString =", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  public X() {\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"  void bar() {\\n\" + ", "+\t\t\t\"    class Inner {\\n\" + ", "+\t\t\t\"      Inner() {\\n\" + ", "+\t\t\t\"      }\\n\" + ", "+\t\t\t\"      void foo() {\\n\" + ", "+\t\t\t\"        {\\n\" + ", "+\t\t\t\"          Exception e;\\n\" + ", "+\t\t\t\"          <CompleteOnName:e.>;\\n\" + ", "+\t\t\t\"        }\\n\" + ", "+\t\t\t\"      }\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9c88f2d6e0dc338218a8bb276da071d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/CompletionParserTest18.java", "commitBeforeChange": "841af85ab99e4b15e2a10d11233f480a3f381ff0", "commitAfterChange": "01bd53f266d07ca177ff8e7fb927b7206b4c562d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public void test0001()", "signatureAfterChange": "  public void test0001()", "diff": ["-\treturn;", "+\tString string =", "+\t\t\t\"interface I { \\n\" +", "+\t\t\t\"\tJ foo(String x, String y);\\n\" +", "+\t\t\t\"}\\n\" +", "+\t\t\t\"interface J {\\n\" +", "+\t\t\t\"\tK foo(String x, String y);\\n\" +", "+\t\t\t\"}\\n\" +", "+\t\t\t\"interface K {\\n\" +", "+\t\t\t\"\tint foo(String x, int y);\\n\" +", "+\t\t\t\"}\\n\" +", "+\t\t\t\"public class X {\\n\" +", "+\t\t\t\"\tstatic void goo(J i) {}\\n\" +", "+\t\t\t\"\tpublic static void main(String[] args) {\\n\" +", "+\t\t\t\"\t\tgoo ((first, second) -> {\\n\" +", "+\t\t\t\"\t\t\treturn (xyz, pqr) -> first.\\n\" +", "+\t\t\t\"\t\t});\\n\" +", "+\t\t\t\"\t}\\n\" +", "+\t\t\t\"}\\n\";", "+", "+\tString completeBehind = \"first.\";", "+\tint cursorLocation = string.lastIndexOf(completeBehind) + completeBehind.length() - 1;", "+", "+\tString expectedCompletionNodeToString = \"<CompleteOnName:first.>\";", "+\tString expectedParentNodeToString = \"<NONE>\";", "+\tString completionIdentifier = \"\";", "+\tString expectedReplacedSource = \"first.\";", "+\tString expectedUnitDisplayString =", "+\t\t\t\"interface I {\\n\" + ", "+\t\t\t\"  J foo(String x, String y);\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"interface J {\\n\" + ", "+\t\t\t\"  K foo(String x, String y);\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"interface K {\\n\" + ", "+\t\t\t\"  int foo(String x, int y);\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  public X() {\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"  static void goo(J i) {\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"  public static void main(String[] args) {\\n\" + ", "+\t\t\t\"    (<no type> first, <no type> second) ->     {\\n\" + ", "+\t\t\t\"      (<no type> xyz, <no type> pqr) -> <CompleteOnName:first.>;\\n\" + ", "+\t\t\t\"    };\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\";", "+", "+\tcheckMethodParse(", "+\t\tstring.toCharArray(),", "+\t\tcursorLocation,", "+\t\texpectedCompletionNodeToString,", "+\t\texpectedParentNodeToString,", "+\t\texpectedUnitDisplayString,", "+\t\tcompletionIdentifier,", "+\t\texpectedReplacedSource,", "+\t\t\"diet ast\");", "+}"]}], "num": 27176}