{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c8f102e8ea3197db142bacb4398631ad", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a62ce9f93fd9f72ad1d7c42f687531bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 123, "methodNumberAfterChange": 123, "signatureBeforeChange": " protected void consumeMethodHeaderExtendedDims()", "signatureAfterChange": " protected void consumeMethodHeaderExtendedDims()", "diff": ["-\tMethodDeclaration md = (MethodDeclaration) astStack[astPtr];", "-\tint extendedDims = intStack[intPtr--];", "+\tMethodDeclaration md = (MethodDeclaration) this.astStack[this.astPtr];", "+\tint extendedDims = this.intStack[this.intPtr--];", "-\t\tmd.sourceEnd = endPosition;", "+\t\tmd.sourceEnd = this.endPosition;", "-\t\tif ((baseType = identifierLengthStack[identifierLengthPtr + 1]) < 0) {", "+\t\tif ((baseType = this.identifierLengthStack[this.identifierLengthPtr + 1]) < 0) {", "-\t\tif (currentToken == TokenNameLBRACE){ ", "-\t\t\tmd.bodyStart = endPosition + 1;", "+\t\tif (this.currentToken == TokenNameLBRACE){ ", "+\t\t\tmd.bodyStart = this.endPosition + 1;", "-\t\tif (currentElement != null){", "-\t\t\tlastCheckPoint = md.bodyStart;", "+\t\tif (this.currentElement != null){", "+\t\t\tthis.lastCheckPoint = md.bodyStart;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3acea674dc39bf8fdf6badd4d1847c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 125, "methodNumberAfterChange": 125, "signatureBeforeChange": " protected void consumeMethodHeaderParameters()", "signatureAfterChange": " protected void consumeMethodHeaderParameters()", "diff": ["-\tint length = astLengthStack[astLengthPtr--];", "-\tastPtr -= length;", "-\tAbstractMethodDeclaration md = (AbstractMethodDeclaration) astStack[astPtr];", "-\tmd.sourceEnd = \trParenPos;", "+\tint length = this.astLengthStack[this.astLengthPtr--];", "+\tthis.astPtr -= length;", "+\tAbstractMethodDeclaration md = (AbstractMethodDeclaration) this.astStack[this.astPtr];", "+\tmd.sourceEnd = \tthis.rParenPos;", "-\t\t\tastStack, ", "-\t\t\tastPtr + 1, ", "+\t\t\tthis.astStack, ", "+\t\t\tthis.astPtr + 1, ", "-\tmd.bodyStart = rParenPos+1;", "-\tlistLength = 0; // reset listLength after having read all parameters", "+\tmd.bodyStart = this.rParenPos+1;", "+\tthis.listLength = 0; // reset listLength after having read all parameters", "-\tif (currentElement != null){", "-\t\tlastCheckPoint = md.bodyStart;", "-\t\tif (currentElement.parseTree() == md) return;", "+\tif (this.currentElement != null){", "+\t\tthis.lastCheckPoint = md.bodyStart;", "+\t\tif (this.currentElement.parseTree() == md) return;", "-\t\t\t\t|| (currentToken == TokenNameLBRACE) ", "-\t\t\t\t|| (currentToken == TokenNamethrows)){", "-\t\t\t\tcurrentElement = currentElement.add(md, 0);", "-\t\t\t\tlastIgnoredToken = -1;", "+\t\t\t\t|| (this.currentToken == TokenNameLBRACE) ", "+\t\t\t\t|| (this.currentToken == TokenNamethrows)){", "+\t\t\t\tthis.currentElement = this.currentElement.add(md, 0);", "+\t\t\t\tthis.lastIgnoredToken = -1;"]}], "num": 32970}