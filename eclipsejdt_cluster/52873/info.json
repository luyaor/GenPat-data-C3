{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4c75c550ab856eb7d40e2e20ca95a5c4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "241e3453ead8640798bec5f0260c16d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "d07b82d1d553a69664c0b667422af329ce329135", "commitAfterChange": "ee4d83d7907d1c854850e7422153c97613dbc079", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \tpublic ClassFile(\r \t\tSourceTypeBinding aType,\r \t\tClassFile enclosingClassFile,\r \t\tboolean creatingProblemType)", "signatureAfterChange": "\r \tpublic ClassFile(\r \t\tSourceTypeBinding aType,\r \t\tClassFile enclosingClassFile,\r \t\tboolean creatingProblemType)", "diff": ["-\t\tif (((SourceTypeBinding) referenceBinding)\r", "-\t\t\t.scope\r", "-\t\t\t.environment()\r", "-\t\t\t.options\r", "-\t\t\t.targetJDK\r", "-\t\t\t>= CompilerOptions.JDK1_2) {\r", "-\t\t\t// Compatible with JDK 1.2\r", "-\t\t\theader[headerOffset++] = 0;\r", "-\t\t\t// minorVersion = 0 means we just need to offset the current offset by 2\r", "-\t\t\theader[headerOffset++] = 0;\r", "-\t\t\theader[headerOffset++] = 0;\r", "-\t\t\theader[headerOffset++] = 46;\r", "-\t\t} else {\r", "-\t\t\t// Compatible with JDK 1.1\r", "-\t\t\theader[headerOffset++] = 0;\r", "-\t\t\theader[headerOffset++] = 3;\r", "-\t\t\theader[headerOffset++] = 0;\r", "-\t\t\theader[headerOffset++] = 45;\r", "+\t\tswitch(((SourceTypeBinding) referenceBinding).scope.environment().options.targetJDK) {\r", "+\t\t\tcase CompilerOptions.JDK1_4 :\r", "+\t\t\t\t// Compatible with JDK 1.4\r", "+\t\t\t\theader[headerOffset++] = 0;\r", "+\t\t\t\theader[headerOffset++] = 0;\r", "+\t\t\t\theader[headerOffset++] = 0;\r", "+\t\t\t\theader[headerOffset++] = 48;\r", "+\t\t\t\tbreak;\r", "+\t\t\tcase CompilerOptions.JDK1_3 :\r", "+\t\t\t\t// Compatible with JDK 1.3\r", "+\t\t\t\theader[headerOffset++] = 0;\r", "+\t\t\t\theader[headerOffset++] = 0;\r", "+\t\t\t\theader[headerOffset++] = 0;\r", "+\t\t\t\theader[headerOffset++] = 47;\r", "+\t\t\t\tbreak;\r", "+\t\t\tcase CompilerOptions.JDK1_2 :\r", "+\t\t\t\t// Compatible with JDK 1.2\r", "+\t\t\t\theader[headerOffset++] = 0;\r", "+\t\t\t\theader[headerOffset++] = 0;\r", "+\t\t\t\theader[headerOffset++] = 0;\r", "+\t\t\t\theader[headerOffset++] = 46;\r", "+\t\t\t\tbreak;\r", "+\t\t\tcase CompilerOptions.JDK1_1 :\r", "+\t\t\t\t// Compatible with JDK 1.1\r", "+\t\t\t\theader[headerOffset++] = 0;\r", "+\t\t\t\theader[headerOffset++] = 3;\r", "+\t\t\t\theader[headerOffset++] = 0;\r", "+\t\t\t\theader[headerOffset++] = 45;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cd96725b762c3daf020b92f058b58ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFormatter.java", "commitBeforeChange": "167c362a4ac2baf619eec088a660153ec713b502", "commitAfterChange": "203954a19427f44b197aa09593f6f49177e09606", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprivate static TextEdit formatNode(ASTNode node, String str, int indentationLevel, String lineSeparator, Map options)", "signatureAfterChange": " \tprivate static TextEdit formatNode(ASTNode node, String str, int indentationLevel, String lineSeparator, Map options)", "diff": ["+\t\t} else if (node instanceof BodyDeclaration) {", "+\t\t\tcode= CodeFormatter.K_CLASS_BODY_DECLARATIONS;", "-\t\t\t\tcase ASTNode.METHOD_DECLARATION:", "-\t\t\t\tcase ASTNode.TYPE_DECLARATION:", "-\t\t\t\tcase ASTNode.FIELD_DECLARATION:", "-\t\t\t\tcase ASTNode.INITIALIZER:", "-\t\t\t\t\tcode= CodeFormatter.K_CLASS_BODY_DECLARATIONS;", "-\t\t\t\t\tbreak;", "+\t\t\t\tcase ASTNode.PARAMETERIZED_TYPE:", "+\t\t\t\tcase ASTNode.QUALIFIED_TYPE:", "-\t\t\t\t\tcode= CodeFormatter.K_EXPRESSION;", "+\t\t\t\t\tcode= CodeFormatter.K_CLASS_BODY_DECLARATIONS;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase ASTNode.WILDCARD_TYPE:", "+\t\t\t\t\tprefix= \"A<\"; //$NON-NLS-1$", "+\t\t\t\t\tsuffix= \"> x;\"; //$NON-NLS-1$", "+\t\t\t\t\tcode= CodeFormatter.K_CLASS_BODY_DECLARATIONS;", "+\t\t\t\tcase ASTNode.MEMBER_VALUE_PAIR:", "+\t\t\t\t\tprefix= \"@Author(\"; //$NON-NLS-1$", "+\t\t\t\t\tsuffix= \") class x {}\"; //$NON-NLS-1$", "+\t\t\t\t\tcode= CodeFormatter.K_COMPILATION_UNIT;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase ASTNode.MODIFIER:", "+\t\t\t\t\tsuffix= \" class x {}\"; //$NON-NLS-1$", "+\t\t\t\t\tcode= CodeFormatter.K_COMPILATION_UNIT;\t\t\t\t", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase ASTNode.TYPE_PARAMETER:", "+\t\t\t\t\tprefix= \"class X<\"; //$NON-NLS-1$", "+\t\t\t\t\tsuffix= \"> {}\"; //$NON-NLS-1$", "+\t\t\t\t\tcode= CodeFormatter.K_COMPILATION_UNIT;", "+\t\t\t\t\tbreak;", "-\t\t\t\t\t// not supported:", "+\t\t\t\t\t// Javadoc formatting not yet supported:", "-\t\t\t\t\t// TODO: fill in the 1.5 nodes"]}], "num": 52873}