{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff6018c25cf1107c5ef19f65c5461ca3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "510b1dc67a6a3f026539abfc6e09cf11", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "85fe43540d2fa2b41e90fbadb73dc3c8d856ecfb", "commitAfterChange": "e60ca02f81acc7600a43413bd7fb7c0779ae6a52", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": " \tpublic void test104()", "signatureAfterChange": " \tpublic void test104()", "diff": ["-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\"\tX<? extends BX> x = new X<AX<String>>(new AX<String>());\\n\" + ", "-\t\t\"\t                ^\\n\" + ", "-\t\t\"Type mismatch: cannot convert from X<AX<String>> to X<? extends BX>\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. WARNING in X.java (at line 8)\\n\" + ", "-\t\t\"\tx.t.foo(\\\"SUCC\\\");\\n\" + ", "-\t\t\"\t^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\"Type safety: The method foo(Object) belongs to the raw type AX. References to generic type AX<P> should be parameterized\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"3. WARNING in X.java (at line 9)\\n\" + ", "-\t\t\"\tx.t.bar(\\\"ESS\\\");\\n\" + ", "-\t\t\"\t^^^^^^^^^^^^^^\\n\" + ", "-\t\t\"Type safety: The method bar(Object) belongs to the raw type BX. References to generic type BX<Q> should be parameterized\\n\" + ", "-\t\t\"----------\\n\");\t\t", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tX<? extends BX> x = new X<AX<String>>(new AX<String>());\\n\" + ", "+\t\t\t\"\t                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from X<AX<String>> to X<? extends BX>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tx.t.foo(\\\"SUCC\\\");\\n\" + ", "+\t\t\t\"\t^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The method foo(Object) belongs to the raw type AX. References to generic type AX<P> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tx.t.bar(\\\"ESS\\\");\\n\" + ", "+\t\t\t\"\t^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The method bar(Object) belongs to the raw type BX. References to generic type BX<Q> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\");\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "580f027fed3aa05022a320d643644a8c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 513, "methodNumberAfterChange": 513, "signatureBeforeChange": " \tpublic void test509()", "signatureAfterChange": " \tpublic void test509()", "diff": ["-\t\t\t\"1. WARNING in X.java (at line 17)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tList<MyTigerSimpleObject> list = new ArrayList<MyTigerSimpleObject>();\\n\" + ", "+\t\t\t\"\t     ^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: MyTigerSimpleObject is a raw type. References to generic type MyTigerSimpleObject<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tList<MyTigerSimpleObject> list = new ArrayList<MyTigerSimpleObject>();\\n\" + ", "+\t\t\t\"\t                                               ^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: MyTigerSimpleObject is a raw type. References to generic type MyTigerSimpleObject<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tlist.add(new MyTigerSimpleObject(\\\"a\\\"));\\n\" + ", "+\t\t\t\"\t             ^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: MyTigerSimpleObject is a raw type. References to generic type MyTigerSimpleObject<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tlist.add(new MyTigerSimpleObject(\\\"b\\\"));\\n\" + ", "+\t\t\t\"\t             ^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: MyTigerSimpleObject is a raw type. References to generic type MyTigerSimpleObject<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tfor (MyTigerSimpleObject so : list)\\n\" + ", "+\t\t\t\"\t     ^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: MyTigerSimpleObject is a raw type. References to generic type MyTigerSimpleObject<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. WARNING in X.java (at line 17)\\n\" + ", "-\t\t\t\"2. WARNING in X.java (at line 17)\\n\" + ", "+\t\t\t\"7. WARNING in X.java (at line 17)\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 20)\\n\" + ", "+\t\t\t\"8. ERROR in X.java (at line 20)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd2fcebd74a0a4dcbd7e68350a02e61f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": " \tpublic void test077()", "signatureAfterChange": " \tpublic void test077()", "diff": ["-\t\t\t\"2. WARNING in X.java (at line 13)\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 12)\\n\" + ", "+\t\t\t\"\tX x = new X();\\n\" + ", "+\t\t\t\"\t^\\n\" + ", "+\t\t\t\"Type safety: X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 12)\\n\" + ", "+\t\t\t\"\tX x = new X();\\n\" + ", "+\t\t\t\"\t          ^\\n\" + ", "+\t\t\t\"Type safety: X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 13)\\n\" + ", "+\t\t\t\"\tX x1 = new X(args);\\n\" + ", "+\t\t\t\"\t^\\n\" + ", "+\t\t\t\"Type safety: X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 13)\\n\" + ", "-\t\t\t\"3. WARNING in X.java (at line 14)\\n\" + ", "+\t\t\t\"6. WARNING in X.java (at line 13)\\n\" + ", "+\t\t\t\"\tX x1 = new X(args);\\n\" + ", "+\t\t\t\"\t           ^\\n\" + ", "+\t\t\t\"Type safety: X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"7. WARNING in X.java (at line 14)\\n\" + ", "+\t\t\t\"\tX x2 = new X(x);\\n\" + ", "+\t\t\t\"\t^\\n\" + ", "+\t\t\t\"Type safety: X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"8. WARNING in X.java (at line 14)\\n\" + ", "-\t\t\t\"4. ERROR in X.java (at line 15)\\n\" + ", "+\t\t\t\"9. WARNING in X.java (at line 14)\\n\" + ", "+\t\t\t\"\tX x2 = new X(x);\\n\" + ", "+\t\t\t\"\t           ^\\n\" + ", "+\t\t\t\"Type safety: X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"10. ERROR in X.java (at line 15)\\n\" + "]}], "num": 48272}