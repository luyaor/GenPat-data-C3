{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "37d30943d5b3d9590a04a1fa179c3c20", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a65787e5e0090216f80fc0e76a2694c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferencePattern.java", "commitBeforeChange": "46418d248f89a29f49a77d154cdbfa57c408b256", "commitAfterChange": "c85433e27f0fa74bfe8e06c38c1c02c51b5599d7", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r public int matchLevel(AstNode node, boolean resolve)", "signatureAfterChange": "\r protected boolean matches(AstNode node, boolean resolve)", "diff": ["+ */\r", "+protected boolean matches(AstNode node, boolean resolve) {\r", "+\tif (node instanceof QualifiedTypeReference) {\r", "+\t\treturn this.matches((QualifiedTypeReference)node, resolve);\r", "+\t} else if (node instanceof ImportReference) {\r", "+\t\treturn this.matches((ImportReference)node, resolve);\r", "+\t} else if (node instanceof QualifiedNameReference) {\r", "+\t\treturn this.matches((QualifiedNameReference)node, resolve);\r", "+\t}\r", "+\treturn false;\r", "+}\r", "- */\r", "-public int matchLevel(AstNode node, boolean resolve) {\r", "-\tif (node instanceof QualifiedTypeReference) {\r", "-\t\treturn this.matchLevel((QualifiedTypeReference)node, resolve);\r", "-\t} else if (node instanceof ImportReference) {\r", "-\t\treturn this.matchLevel((ImportReference)node, resolve);\r", "-\t} else if (node instanceof QualifiedNameReference) {\r", "-\t\treturn this.matchLevel((QualifiedNameReference)node, resolve);\r", "-\t}\r", "-\treturn IMPOSSIBLE_MATCH;\r", "-}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a379a6bf9939ecc461d039671ab76260", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferencePattern.java", "commitBeforeChange": "a1b8b888d8c8c040023fcd2856f96f5ad6c69b3e", "commitAfterChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r public int matchLevel(AstNode node, boolean resolve)", "signatureAfterChange": "\r protected boolean matches(AstNode node, boolean resolve)", "diff": ["+ */\r", "+protected boolean matches(AstNode node, boolean resolve) {\r", "+\tif (node instanceof QualifiedTypeReference) {\r", "+\t\treturn this.matches((QualifiedTypeReference)node, resolve);\r", "+\t} else if (node instanceof ImportReference) {\r", "+\t\treturn this.matches((ImportReference)node, resolve);\r", "+\t} else if (node instanceof QualifiedNameReference) {\r", "+\t\treturn this.matches((QualifiedNameReference)node, resolve);\r", "+\t}\r", "+\treturn false;\r", "+}\r", "- */\r", "-public int matchLevel(AstNode node, boolean resolve) {\r", "-\tif (node instanceof QualifiedTypeReference) {\r", "-\t\treturn this.matchLevel((QualifiedTypeReference)node, resolve);\r", "-\t} else if (node instanceof ImportReference) {\r", "-\t\treturn this.matchLevel((ImportReference)node, resolve);\r", "-\t} else if (node instanceof QualifiedNameReference) {\r", "-\t\treturn this.matchLevel((QualifiedNameReference)node, resolve);\r", "-\t}\r", "-\treturn IMPOSSIBLE_MATCH;\r", "-}\r"]}], "num": 59770}