{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a06eda75f0f040a1926765a297af90b0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c53addfb21860eefbeb9361d6ccb301", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "f5139421d21a62b37333741e06d5b0ee037da3c8", "commitAfterChange": "90613034d8736c470cf486be32b2440926bcfdb8", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 103, "signatureBeforeChange": " \tpublic void test099()", "signatureAfterChange": " \tpublic void test099()", "diff": ["-\t\t\t\"     inner name: #68 MyAnon, accessflags: 9737 public static abstract ],\\n\" + ", "+\t\t\t\"     inner name: #68 MyAnon, accessflags: 9737 public abstract static ],\\n\" + ", "-\t\t\t\"     inner name: #71 I, accessflags: 1545 public static abstract ]\"; ", "+\t\t\t\"     inner name: #71 I, accessflags: 1545 public abstract static ]\"; ", "-\t\tif (actualOutput.indexOf(expectedOutput) == -1) {", "-\t\t\tSystem.out.println(org.eclipse.jdt.core.tests.util.Util.displayString(actualOutput, 2));", "+\t\tint index = actualOutput.indexOf(expectedOutput);", "+\t\tif (index == -1 || expectedOutput.length() == 0) {", "+\t\t\tSystem.out.println(Util.displayString(actualOutput, 3));", "-\t\tassertTrue(\"unexpected bytecode sequence\", actualOutput.indexOf(expectedOutput) != -1);", "+\t\tif (index == -1) {", "+\t\t\tassertEquals(\"unexpected bytecode sequence\", expectedOutput, actualOutput);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad393d2f76c1b3bd1386dba5e1ec327f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ArrayTest.java", "commitBeforeChange": "1e2211eded7d5ae87dfcf507bb00676a5a81d8e9", "commitAfterChange": "ab7733a54402b64bb328ef9a7aa36d933deb8ac7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void test005()", "signatureAfterChange": " public void test005()", "diff": ["-\t\t", "-\tif (actualOutput.indexOf(expectedOutput) == -1) {", "-\t\tSystem.out.println(Util.displayString(actualOutput, 2));", "+", "+\tint index = actualOutput.indexOf(expectedOutput);", "+\tif (index == -1 || expectedOutput.length() == 0) {", "+\t\tSystem.out.println(Util.displayString(actualOutput, 3));", "-\tassertTrue(\"unexpected bytecode sequence\", actualOutput.indexOf(expectedOutput) != -1);", "+\tif (index == -1) {", "+\t\tassertEquals(\"unexpected bytecode sequence\", expectedOutput, actualOutput);", "+\t}"]}], "num": 57248}