{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4ddde6f82a462fbfbe2d73ebd1827c60", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fcce23ba51bba483400dcfab5e35147", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "fe80e0e35769c28ef9eab3d756180ade13a59126", "commitAfterChange": "8bbab36b30f52fd2cf2185f7c9fd80a985623079", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "\r \tfinal Binding getTypeOrPackage(char[] name, int mask)", "signatureAfterChange": "\r \tfinal Binding getTypeOrPackage(char[] name, int mask)", "diff": ["-\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, localType, InheritedNameHidesEnclosingName);\r", "+\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, InheritedNameHidesEnclosingName);\r", "-\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, sourceType, InheritedNameHidesEnclosingName);\r", "+\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, InheritedNameHidesEnclosingName);\r", "-\t\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, memberType, InheritedNameHidesEnclosingName);\r", "+\t\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, InheritedNameHidesEnclosingName);\r", "-\t\t\t\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, memberType, InheritedNameHidesEnclosingName);\r", "+\t\t\t\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, InheritedNameHidesEnclosingName);\r", "-\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, temp, Ambiguous);\r", "+\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, Ambiguous);\r", "-\t\treturn new ProblemReferenceBinding(name, null, NotFound);\r", "+\t\treturn new ProblemReferenceBinding(name, NotFound);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5df6b77cfcd7d9649243d0b0e845728b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "8c12a1560b5b16e626f09d83b170c60e0f7d623a", "commitAfterChange": "12ce4293ede90551ea298fc4647747d8e255b48f", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tfinal Binding getTypeOrPackage(char[] name, int mask)", "signatureAfterChange": " \tfinal Binding getTypeOrPackage(char[] name, int mask)", "diff": ["-\t\t\t\t\t\t\t\telse", "-\t\t\t\t\t\t\t\t\t// make the user qualify the type, likely wants the first inherited type", "-\t\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, InheritedNameHidesEnclosingName);", "+\t\t\t\t\t\t\t\t// make the user qualify the type, likely wants the first inherited type", "+\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, InheritedNameHidesEnclosingName);", "-\t\t\t\t\t\t\t\t\tif (foundType.isValidBinding())", "-\t\t\t\t\t\t\t\t\t\t// if a valid type was found, complain when another is found in an 'immediate' enclosing type (ie. not inherited)", "-\t\t\t\t\t\t\t\t\t\tif (foundType != memberType)", "-\t\t\t\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, InheritedNameHidesEnclosingName);", "+\t\t\t\t\t\t\t\t\t// if a valid type was found, complain when another is found in an 'immediate' enclosing type (ie. not inherited)", "+\t\t\t\t\t\t\t\t\tif (foundType.isValidBinding() && foundType != memberType)", "+\t\t\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, InheritedNameHidesEnclosingName);", "-\t\t\t\t\t\t\t\t\tif (importReference != null) importReference.used = true;", "+\t\t\t\t\t\t\t\t\tif (importReference != null)", "+\t\t\t\t\t\t\t\t\t\timportReference.used = true;"]}], "num": 26835}