{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "28a98a32ebd87194ebb904ac25bc7f34", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3da83e2f1550af657ea10439f76c6764", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ImportDeclaration.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic Name getName()", "signatureAfterChange": "  \tpublic Name getName()", "diff": ["-\t\tif (importName == null) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetName(getAST().newQualifiedName(", "-\t\t\t\tnew SimpleName(getAST()), new SimpleName(getAST())));", "-\t\t\tgetAST().setModificationCount(count);", "+\t\tif (this.importName == null) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.importName =this.ast.newQualifiedName(", "+\t\t\t\t\tnew SimpleName(this.ast), new SimpleName(this.ast));", "+\t\t\tpostLazyInit(this.importName, NAME_PROPERTY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fea1411b3b6757c93aed2100d55ded5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodDeclaration.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \tpublic Type getReturnType2()", "signatureAfterChange": "  \tpublic Type getReturnType2()", "diff": ["-\t\tif (this.returnType == null && !returnType2Initialized) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetReturnType2(getAST().newPrimitiveType(PrimitiveType.VOID));", "-\t\t\tgetAST().setModificationCount(count);", "+\t\tif (this.returnType == null && !this.returnType2Initialized) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.returnType = this.ast.newPrimitiveType(PrimitiveType.VOID);", "+\t\t\tthis.returnType2Initialized = true;", "+\t\t\tpostLazyInit(this.returnType, RETURN_TYPE2_PROPERTY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "821564ec4461ad1ff41032e2ba7fdf51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeLiteral.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Type getType()", "signatureAfterChange": "  \tpublic Type getType()", "diff": ["-\t\tif (type == null) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetType(getAST().newPrimitiveType(PrimitiveType.INT));", "-\t\t\tgetAST().setModificationCount(count);", "+\t\tif (this.type == null) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.type = this.ast.newPrimitiveType(PrimitiveType.INT);", "+\t\t\tpostLazyInit(this.type, TYPE_PROPERTY);", "-\t\treturn type;", "+\t\treturn this.type;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ce46861589ef6e33b211c9331691f4b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CastExpression.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Type getType()", "signatureAfterChange": "  \tpublic Type getType()", "diff": ["-\t\tif (type == null) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetType(getAST().newPrimitiveType(PrimitiveType.INT));", "-\t\t\tgetAST().setModificationCount(count);", "+\t\tif (this.type == null) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.type = this.ast.newPrimitiveType(PrimitiveType.INT);", "+\t\t\tpostLazyInit(this.type, TYPE_PROPERTY);", "-\t\treturn type;", "+\t\treturn this.type;"]}], "num": 1960}