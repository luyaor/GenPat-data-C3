{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "69757401341cb6e6f6175811b68d76af", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c725c402c8efaa80735bf3754ac8fb6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SyntheticAccessMethodBinding.java", "commitBeforeChange": "9ee33691ed28522cbc2852e39f3c0e623d310200", "commitAfterChange": "6279337ba7a56fe0ba602068e82284092e08edd4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void initializeMethodAccessor(MethodBinding targetMethod, boolean isSuperAccess, ReferenceBinding declaringClass)", "signatureAfterChange": " \tpublic void initializeMethodAccessor(MethodBinding accessedMethod, boolean isSuperAccess, ReferenceBinding receiverType)", "diff": ["-\tpublic void initializeMethodAccessor(MethodBinding targetMethod, boolean isSuperAccess, ReferenceBinding declaringClass) {", "+\tpublic void initializeMethodAccessor(MethodBinding accessedMethod, boolean isSuperAccess, ReferenceBinding receiverType) {", "-\t\tthis.targetMethod = targetMethod;", "+\t\tthis.targetMethod = accessedMethod;", "-\t\tSourceTypeBinding declaringSourceType = (SourceTypeBinding) declaringClass;", "+\t\tSourceTypeBinding declaringSourceType = (SourceTypeBinding) receiverType;", "-\t\tthis.returnType = targetMethod.returnType;", "+\t\tthis.returnType = accessedMethod.returnType;", "-\t\tif (targetMethod.isStatic()) {", "-\t\t\tthis.parameters = targetMethod.parameters;", "+\t\tif (accessedMethod.isStatic()) {", "+\t\t\tthis.parameters = accessedMethod.parameters;", "-\t\t\tthis.parameters = new TypeBinding[targetMethod.parameters.length + 1];", "+\t\t\tthis.parameters = new TypeBinding[accessedMethod.parameters.length + 1];", "-\t\t\tSystem.arraycopy(targetMethod.parameters, 0, this.parameters, 1, targetMethod.parameters.length);", "+\t\t\tSystem.arraycopy(accessedMethod.parameters, 0, this.parameters, 1, accessedMethod.parameters.length);", "-\t\tthis.thrownExceptions = targetMethod.thrownExceptions;", "+\t\tthis.thrownExceptions = accessedMethod.thrownExceptions;", "-\t\t\t\tif (methodDecls[i].binding == targetMethod) {", "+\t\t\t\tif (methodDecls[i].binding == accessedMethod) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9f7441e2eaeb977abef29202fd53511", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SyntheticAccessMethodBinding.java", "commitBeforeChange": "9ee33691ed28522cbc2852e39f3c0e623d310200", "commitAfterChange": "6279337ba7a56fe0ba602068e82284092e08edd4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t public void initializeConstructorAccessor(MethodBinding targetConstructor)", "signatureAfterChange": " \t public void initializeConstructorAccessor(MethodBinding accessedConstructor)", "diff": ["-\t public void initializeConstructorAccessor(MethodBinding targetConstructor) {", "+\t public void initializeConstructorAccessor(MethodBinding accessedConstructor) {", "-\t\tthis.targetMethod = targetConstructor;", "+\t\tthis.targetMethod = accessedConstructor;", "-\t\tSourceTypeBinding sourceType = (SourceTypeBinding) targetConstructor.declaringClass; ", "+\t\tSourceTypeBinding sourceType = (SourceTypeBinding) accessedConstructor.declaringClass; ", "-\t\tthis.selector = targetConstructor.selector;", "-\t\tthis.returnType = targetConstructor.returnType;", "+\t\tthis.selector = accessedConstructor.selector;", "+\t\tthis.returnType = accessedConstructor.returnType;", "-\t\tthis.parameters = new TypeBinding[targetConstructor.parameters.length + 1];", "+\t\tthis.parameters = new TypeBinding[accessedConstructor.parameters.length + 1];", "-\t\t\ttargetConstructor.parameters, ", "+\t\t\taccessedConstructor.parameters, ", "-\t\t\ttargetConstructor.parameters.length); ", "-\t\tparameters[targetConstructor.parameters.length] = ", "-\t\t\ttargetConstructor.declaringClass; ", "-\t\tthis.thrownExceptions = targetConstructor.thrownExceptions;", "+\t\t\taccessedConstructor.parameters.length); ", "+\t\tparameters[accessedConstructor.parameters.length] = ", "+\t\t\taccessedConstructor.declaringClass; ", "+\t\tthis.thrownExceptions = accessedConstructor.thrownExceptions;", "-\t\t\t\tif (methodDecls[i].binding == targetConstructor) {", "+\t\t\t\tif (methodDecls[i].binding == accessedConstructor) {"]}], "num": 6129}