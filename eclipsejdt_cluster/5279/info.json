{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "de2db142f56efd388638bc910adcdee3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "944e8f258c21fe53dfbe3c9177397a37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/AptConfigurationBlock.java", "commitBeforeChange": "7efb5ac008a425608cb5d382a82b0558813ab0c7", "commitAfterChange": "b7a892c71a4ea9058326a1ed58a7293f0cb9329c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tpublic AptConfigurationBlock(IStatusChangeListener context, IProject project, IWorkbenchPreferenceContainer container)", "signatureAfterChange": " \t \tpublic AptConfigurationBlock(IStatusChangeListener context, IProject project, IWorkbenchPreferenceContainer container)", "diff": ["-\t\tfProcessorOptionsField = new StringDialogField();", "-\t\tfProcessorOptionsField.setDialogFieldListener(adapter);", "+\t\tString[] buttons= new String[] {", "+\t\t\tMessages.AptConfigurationBlock_add,", "+\t\t\tMessages.AptConfigurationBlock_edit,", "+\t\t\tMessages.AptConfigurationBlock_remove", "+\t\t};", "+\t\tProcessorOptionsAdapter optionsAdapter = new ProcessorOptionsAdapter();", "+\t\tfProcessorOptionsField = new ListDialogField(optionsAdapter, buttons, new ProcessorOptionsLabelProvider());", "+\t\tfProcessorOptionsField.setDialogFieldListener(optionsAdapter);", "+\t\tfProcessorOptionsField.setRemoveButtonIndex(IDX_REMOVE);", "+\t\tString[] columnHeaders= new String[] {", "+\t\t\tMessages.AptConfigurationBlock_key,", "+\t\t\tMessages.AptConfigurationBlock_value", "+\t\t};", "+\t\tfProcessorOptionsField.setTableColumns(new ListDialogField.ColumnsDescription(columnHeaders, true));", "+\t\tfProcessorOptionsField.setViewerSorter(new ProcessorOptionSorter());", "-", "+\t\t", "+\t\t", "+\t\tif (fProcessorOptionsField.getSize() > 0) {", "+\t\t\tfProcessorOptionsField.selectFirstElement();", "+\t\t} else {", "+\t\t\tfProcessorOptionsField.enableButton(IDX_EDIT, false);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7d3bd9ff0d21db17a12739a0dc82992", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/batch/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationProcessorManager.java", "commitBeforeChange": "9d4f7131389390a16a995494da191d8ab6c07c5a", "commitAfterChange": "aa852841b1dd73414418bf5fc5420a74b80d0cd9", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \t@Override \tpublic void setProcessors(Object[] processors)", "signatureAfterChange": "  \t@Override \tpublic void setProcessors(Object[] processors)", "diff": ["-\t\t// do nothing", "+\t\tif (!_isFirstRound) {", "+\t\t\tthrow new IllegalStateException(\"setProcessors() cannot be called after processing has begun\");", "+\t\t}", "+\t\t// Cast all the processors here, rather than failing later.", "+\t\t// But don't call init() until the processor is actually needed.", "+\t\t_setProcessors = new ArrayList<Processor>(processors.length);", "+\t\tfor (Object o : processors) {", "+\t\t\tProcessor p = (Processor)o;", "+\t\t\t_setProcessors.add(p);", "+\t\t}", "+\t\t_setProcessorIter = _setProcessors.iterator();", "+", "+\t\t// processors set this way take precedence over anything on the command line ", "+\t\t_commandLineProcessors = null;", "+\t\t_commandLineProcessorIter = null;"]}], "num": 5279}