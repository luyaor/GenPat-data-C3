{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2b35c540d2b4792d64776c57880187f3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b88f4dc397ebbfae978b82c98057332", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeTypeAnnotationTest.java", "commitBeforeChange": "b7bb9d2950572af77f85c2c708c3816367817930", "commitAfterChange": "6cea394a74122bc3b2f5fee1a70c7921f0e635d8", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "\r \tpublic void test0383913b()", "signatureAfterChange": "\r \tpublic void test0383913b()", "diff": ["-\t\t\t\t\t\t\"The explicit 'this' parameter is expected to be qualified with Outer.Inner\\n\" + \r", "+\t\t\t\t\t\t\"The explicit 'this' parameter is expected to be qualified with Inner\\n\" + \r", "-\t\t\t\t\t\t\"8. ERROR in Outer.java (at line 8)\\n\" + \r", "+\t\t\t\t\t\t\"8. ERROR in Outer.java (at line 7)\\n\" + \r", "+\t\t\t\t\t\t\"\tInnerMost(Outer.Inner Outer.Inner.this, int i, float f) {}\\n\" + \r", "+\t\t\t\t\t\t\"\t                      ^^^^^^^^^^^^^^^^\\n\" + \r", "+\t\t\t\t\t\t\"The explicit 'this' parameter is expected to be qualified with Inner\\n\" + \r", "+\t\t\t\t\t\t\"----------\\n\" + \r", "+\t\t\t\t\t\t\"9. ERROR in Outer.java (at line 8)\\n\" + \r", "-\t\t\t\t\t\t\"9. ERROR in Outer.java (at line 8)\\n\" + \r", "+\t\t\t\t\t\t\"10. ERROR in Outer.java (at line 8)\\n\" + \r", "-\t\t\t\t\t\t\"\t                      ^^^^\\n\" + \r", "-\t\t\t\t\t\t\"The explicit 'this' parameter is expected to be qualified with Outer.Inner\\n\" + \r", "+\t\t\t\t\t\t\"\t                ^^^^^^^^^^\\n\" + \r", "+\t\t\t\t\t\t\"The explicit 'this' parameter is expected to be qualified with Inner\\n\" + \r", "-\t\t\t\t\t\t\"10. ERROR in Outer.java (at line 9)\\n\" + \r", "+\t\t\t\t\t\t\"11. ERROR in Outer.java (at line 9)\\n\" + \r", "-\t\t\t\t\t\t\"11. ERROR in Outer.java (at line 9)\\n\" + \r", "+\t\t\t\t\t\t\"12. ERROR in Outer.java (at line 9)\\n\" + \r", "-\t\t\t\t\t\t\"\t                                                              ^^^^\\n\" + \r", "-\t\t\t\t\t\t\"The explicit 'this' parameter is expected to be qualified with Outer.Inner\\n\" + \r", "+\t\t\t\t\t\t\"\t                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + \r", "+\t\t\t\t\t\t\"The explicit 'this' parameter is expected to be qualified with Inner\\n\" + \r", "-\t\t\t\t\t\t\"12. ERROR in Outer.java (at line 10)\\n\" + \r", "+\t\t\t\t\t\t\"13. ERROR in Outer.java (at line 10)\\n\" + \r", "-\t\t\t\t\t\t\"\t                                           ^^^^\\n\" + \r", "-\t\t\t\t\t\t\"The explicit 'this' parameter is expected to be qualified with Outer.Inner\\n\" + \r", "+\t\t\t\t\t\t\"\t                     ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + \r", "+\t\t\t\t\t\t\"The explicit 'this' parameter is expected to be qualified with Inner\\n\" + \r", "-\t\t\t\t\t\t\"13. ERROR in Outer.java (at line 11)\\n\" + \r", "+\t\t\t\t\t\t\"14. ERROR in Outer.java (at line 11)\\n\" + \r", "-\t\t\t\t\t\t\"The explicit 'this' parameter is expected to be qualified with Outer.Inner\\n\" + \r", "+\t\t\t\t\t\t\"The explicit 'this' parameter is expected to be qualified with Inner\\n\" + \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a70e6f1552735b1048091e608cf2d24", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "bb670e5ec8185e24981d836127d58e53e56c1ba8", "commitAfterChange": "83a5df02089ecb5f7e6df978c59083c15170780c", "methodNumberBeforeChange": 850, "methodNumberAfterChange": 850, "signatureBeforeChange": " public void test0830()", "signatureAfterChange": "  public void test0830()", "diff": ["-// ensure no raw type ref complaint inside instanceof / cast", "+", "-\t\t\"----------\\n\" +", "-\t\t\"1. WARNING in X.java (at line 5)\\n\" +", "-\t\t\"\tX x = (X) o;\\n\" +", "-\t\t\"\t^\\n\" +", "-\t\t\"X is a raw type. References to generic type X<T> should be parameterized\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. WARNING in X.java (at line 5)\\n\" +", "-\t\t\"\tX x = (X) o;\\n\" +", "-\t\t\"\t       ^\\n\" +", "-\t\t\"X is a raw type. References to generic type X<T> should be parameterized\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"3. WARNING in X.java (at line 6)\\n\" +", "-\t\t\"\tX<String> xs = (X<String>)o;\\n\" +", "-\t\t\"\t               ^^^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: Unchecked cast from Object to X<String>\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"4. ERROR in X.java (at line 7)\\n\" +", "-\t\t\"\tZork z;\\n\" +", "-\t\t\"\t^^^^\\n\" +", "-\t\t\"Zork cannot be resolved to a type\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"5. WARNING in X.java (at line 10)\\n\" +", "-\t\t\"\tList l = (List) al;\\n\" +", "-\t\t\"\t^^^^\\n\" +", "-\t\t\"List is a raw type. References to generic type List<E> should be parameterized\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"6. WARNING in X.java (at line 10)\\n\" +", "-\t\t\"\tList l = (List) al;\\n\" +", "-\t\t\"\t         ^^^^^^^^^\\n\" +", "-\t\t\"Unnecessary cast from ArrayList<String> to List\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"7. WARNING in X.java (at line 10)\\n\" +", "-\t\t\"\tList l = (List) al;\\n\" +", "-\t\t\"\t          ^^^^\\n\" +", "-\t\t\"List is a raw type. References to generic type List<E> should be parameterized\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\"\tboolean b = o instanceof X;\\n\" + ", "+\t\t\"\t                         ^\\n\" + ", "+\t\t\"X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\"\tX x = (X) o;\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\"\tX x = (X) o;\\n\" + ", "+\t\t\"\t       ^\\n\" + ", "+\t\t\"X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\"\tX<String> xs = (X<String>)o;\\n\" + ", "+\t\t\"\t               ^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: Unchecked cast from Object to X<String>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\"\tZork z;\\n\" + ", "+\t\t\"\t^^^^\\n\" + ", "+\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"6. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\"\tList l = (List) al;\\n\" + ", "+\t\t\"\t^^^^\\n\" + ", "+\t\t\"List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"7. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\"\tList l = (List) al;\\n\" + ", "+\t\t\"\t         ^^^^^^^^^\\n\" + ", "+\t\t\"Unnecessary cast from ArrayList<String> to List\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"8. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\"\tList l = (List) al;\\n\" + ", "+\t\t\"\t          ^^^^\\n\" + ", "+\t\t\"List is a raw type. References to generic type List<E> should be parameterized\\n\" + "]}], "num": 49970}