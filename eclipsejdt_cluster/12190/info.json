{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c19eeafacb8ea4f0764290e028c256b1", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b47500394f62e3f162b2c0cb06691db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "21c2c8ab182b7aa411b8e7bf4277aee52240c980", "commitAfterChange": "f512a9071a69431983c5a97730f23f8ae82e0f5d", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 73, "signatureBeforeChange": " protected void reportMatching(FieldDeclaration field, FieldDeclaration[] otherFields, TypeDeclaration type, IJavaElement parent, int accuracy, boolean typeInHierarchy, MatchingNodeSet nodeSet) throws CoreException", "signatureAfterChange": " protected void reportMatching(FieldDeclaration field, FieldDeclaration[] otherFields, TypeDeclaration type, IJavaElement parent, int accuracy, boolean typeInHierarchy, MatchingNodeSet nodeSet) throws CoreException", "diff": ["-\t\t\treport(match);", "+\t\t\tif (field.initialization instanceof AllocationExpression) {", "+\t\t\t\treportAccurateEnumConstructorReference(match, field, (AllocationExpression) field.initialization);", "+\t\t\t} else {", "+\t\t\t\treport(match);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3a170819c874081471990ad26938d5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "1fd45230f199f97d97dc93f43f8c1ecd8d598be3", "commitAfterChange": "e25e05f313fe0e8cf47abe127e89db464a1d8bc4", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, IJavaElement localElement, IJavaElement[] otherElements, Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, IJavaElement localElement, IJavaElement[] otherElements, Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\t\tint offset = reference.sourceStart;", "+\t\t\tint offset;", "+\t\t\tif (reference instanceof ReferenceExpression) {", "+\t\t\t\toffset = ((ReferenceExpression) reference).nameSourceStart;", "+\t\t\t} else {", "+\t\t\t\toffset = reference.sourceStart;", "+\t\t\t}"]}], "num": 12190}