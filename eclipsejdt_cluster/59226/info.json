{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "364a9b9010f03e717be50a4c0fbee6cd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fc18c9d88cfb1f14d0e5a305db493f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "1c82ab4ca7a7921e02eb1c1295505414f94bc64d", "commitAfterChange": "b4a98585238f00ec169e6c6eb5998e9d404a7925", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 73, "signatureBeforeChange": " protected void reportMatching(TypeParameter[] typeParameters, IJavaElement enclosingElement, IJavaElement parent, Binding binding, MatchingNodeSet nodeSet) throws CoreException", "signatureAfterChange": " protected void reportMatching(TypeParameter[] typeParameters, IJavaElement enclosingElement, IJavaElement parent, Binding binding, MatchingNodeSet nodeSet) throws CoreException", "diff": ["+\t\t\tboolean matchedClassContainer = (this.matchContainer & PatternLocator.ALL_CONTAINER) != 0;", "+\t\t\tif (typeParameter.annotations != null) {", "+\t\t\t\treportMatching(typeParameter.annotations, enclosingElement, null, typeParameter.binding, nodeSet, matchedClassContainer, encloses(enclosingElement));\t", "+\t\t\t}", "+\t\t\t\treportMatching(typeParameter.type.annotations, enclosingElement, typeParameter.binding, nodeSet, matchedClassContainer);", "+\t\t\t\t\t\t\treportMatching(typeArgument.annotations, enclosingElement, typeArgument.resolvedType, nodeSet, matchedClassContainer);", "+\t\t            \t\t\t\treportMatching(wildcardBound.annotations, enclosingElement, wildcardBound.resolvedType, nodeSet, matchedClassContainer);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46ceedc9d895b2ebd4c7e4fcca8b5a30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeDeclaration.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tvoid accept0(ASTVisitor visitor)", "signatureAfterChange": " \tvoid accept0(ASTVisitor visitor)", "diff": ["-\t\t\tacceptChild(visitor, getJavadoc());", "-\t\t\tacceptChild(visitor, getName());", "-\t\t\tacceptChild(visitor, getSuperclass());", "-\t\t\tacceptChildren(visitor, superInterfaceNames);", "-\t\t\tacceptChildren(visitor, bodyDeclarations);", "+\t\t\tif (getAST().API_LEVEL == AST.LEVEL_2_0) {", "+\t\t\t\tacceptChild(visitor, getJavadoc());", "+\t\t\t\tacceptChild(visitor, getName());", "+\t\t\t\tacceptChild(visitor, getSuperclass());", "+\t\t\t\tacceptChildren(visitor, this.superInterfaceNames);", "+\t\t\t\tacceptChildren(visitor, this.bodyDeclarations);", "+\t\t\t}", "+\t\t\tif (getAST().API_LEVEL >= AST.LEVEL_3_0) {", "+\t\t\t\tacceptChild(visitor, getJavadoc());", "+\t\t\t\tacceptChildren(visitor, this.modifiers);", "+\t\t\t\tacceptChild(visitor, getName());", "+\t\t\t\tacceptChildren(visitor, this.typeParameters);", "+\t\t\t\tacceptChild(visitor, getSuperclassType());", "+\t\t\t\tacceptChildren(visitor, this.superInterfaceTypes);", "+\t\t\t\tacceptChildren(visitor, this.bodyDeclarations);", "+\t\t\t}"]}], "num": 59226}