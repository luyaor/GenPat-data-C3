{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b441bd875d12fdb12d3c4e176a9b3af", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a98de41dd199382c4455b86bd8820267", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "9619e80c2bbde4df686cf703fe512cbf9e128bb2", "commitAfterChange": "0ecf7bbf2e3745a56db6417f68f401d4b4b1e4a1", "methodNumberBeforeChange": 299, "methodNumberAfterChange": 299, "signatureBeforeChange": " \tpublic void test0654() throws JavaModelException", "signatureAfterChange": " \tpublic void test0654() throws JavaModelException", "diff": ["-\t\t\tAST localAst = unit.getAST();", "-\t\t\t\tlocalAst.resolveArrayType(typeBinding, -1);", "+\t\t\t\ttypeBinding.createArrayType(-1);", "-\t\t\t\tlocalAst.resolveArrayType(typeBinding, 0);", "+\t\t\t\ttypeBinding.createArrayType(0);", "-\t\t\t\tlocalAst.resolveArrayType(typeBinding, 256);", "+\t\t\t\ttypeBinding.createArrayType(256);", "-\t\t\tITypeBinding binding = localAst.resolveArrayType(typeBinding, 2);", "+\t\t\tITypeBinding binding = typeBinding.createArrayType(2);", "-\t\t\tbinding = localAst.resolveArrayType(typeBinding, 1);", "+\t\t\tbinding = typeBinding.createArrayType(1);", "+\t\t\t", "+\t\t\tbinding = typeBinding2.createArrayType(3);", "+\t\t\tassertTrue(\"Not an array binding\", binding.isArray());", "+\t\t\tassertEquals(\"Wrong dimension\", 4, binding.getDimensions());", "-\t\t\tbinding = localAst.resolveArrayType(typeBinding, 1);", "+\t\t\tbinding = typeBinding.createArrayType(1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f89be2c99873f2eaf4d221a2eb1747e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "b05fdc0766ce1f089450816aa5eb0912ffdae4d5", "commitAfterChange": "faea515ca49430200259c66030d0a505f729ebda", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tprivate void disassemble(IInnerClassesAttribute innerClassesAttribute, StringBuffer buffer, String lineSeparator, int tabNumber)", "signatureAfterChange": " \t \tprivate void disassemble(IInnerClassesAttribute innerClassesAttribute, StringBuffer buffer, String lineSeparator, int tabNumber)", "diff": ["+\t\t\tbuffer.append(Util.bind(\"disassembler.openinnerclassentry\")); //$NON-NLS-1$", "+\t\t\twriteNewLine(buffer, lineSeparator, tabNumber);", "+\t\t\tdumpTab(tabNumber + 1, buffer);", "-\t\t\t\t.append(Util.bind(\"disassembler.openinnerclassentry\")) //$NON-NLS-1$", "-\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 1);", "+\t\t\twriteNewLine(buffer, lineSeparator, tabNumber);", "-\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 1);", "+\t\t\twriteNewLine(buffer, lineSeparator, tabNumber);", "-\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 1);", "+\t\t\twriteNewLine(buffer, lineSeparator, tabNumber);", "+\t\tbuffer.append(Util.bind(\"disassembler.openinnerclassentry\")); //$NON-NLS-1$", "+\t\twriteNewLine(buffer, lineSeparator, tabNumber);", "+\t\tdumpTab(tabNumber + 1, buffer);", "-\t\t\t.append(Util.bind(\"disassembler.openinnerclassentry\")) //$NON-NLS-1$", "-\t\twriteNewLine(buffer, lineSeparator, tabNumber + 1);", "+\t\twriteNewLine(buffer, lineSeparator, tabNumber);", "-\t\twriteNewLine(buffer, lineSeparator, tabNumber + 1);", "+\t\twriteNewLine(buffer, lineSeparator, tabNumber);", "-\t\twriteNewLine(buffer, lineSeparator, tabNumber + 1);", "+\t\twriteNewLine(buffer, lineSeparator, tabNumber);"]}], "num": 49067}