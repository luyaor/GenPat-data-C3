{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d6556998e5f8ed68bd4ad2e24485d778", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12ec83edd8404cf9100a05c7912fefe8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "7a9c0666eb2e26d6f63c1d37d496287d2df152d0", "commitAfterChange": "0c3f540ce1fe9929593a8b5509ca781a32c3ede2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprivate static void decodeUnknownNode(Node node, XMLWriter xmlWriter, boolean insertNewLine)", "signatureAfterChange": "  \tprivate static void decodeUnknownNode(Node node, XMLWriter xmlWriter, boolean insertNewLine)", "diff": ["-\t\t\tNamedNodeMap attributes = node.getAttributes();", "-\t\t\tHashMap parameters = new HashMap();", "-\t\t\tfor (int i = 0, length = attributes == null ? 0 : attributes.getLength(); i < length; i++) {", "-\t\t\t\tNode attribute = attributes.item(i);", "-\t\t\t\tparameters.put(attribute.getNodeName(), attribute.getNodeValue());", "+\t\t\tNamedNodeMap attributes;", "+\t\t\tHashMap parameters = null;", "+\t\t\tif ((attributes = node.getAttributes()) != null) {", "+\t\t\t\tint length = attributes.getLength();", "+\t\t\t\tif (length > 0) {", "+\t\t\t\t\tparameters = new HashMap();", "+\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\tNode attribute = attributes.item(i);", "+\t\t\t\t\t\tparameters.put(attribute.getNodeName(), attribute.getNodeValue());", "+\t\t\t\t\t}", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1250afc789782f83949198d591b11bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/DecodeCodeFormatterPreferences.java", "commitBeforeChange": "b9fba611699cd3de6aaeecf1e218591cb72fa466", "commitAfterChange": "7464b1ea1c1edb40a36aa8ba9bb025cac2275919", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void startElement(String uri, String localName, String qName, \t\t\tAttributes attributes) throws SAXException", "signatureAfterChange": " \tpublic void startElement(String uri, String localName, String qName, \t\t\tAttributes attributes) throws SAXException", "diff": ["-\t\tSystem.out.println(localName);", "-\t\tSystem.out.println(qName);", "+\t\t", "-\t\tfor (int i = 0; i < attributesLength; i++) {", "-\t\t\tSystem.out.println(\"\\t\" + attributes.getValue(i));", "+\t\tif (\"profile\".equals(qName)) {", "+\t\t\tif (attributesLength == 1) {", "+\t\t\t\tif (\"name\".equals(attributes.getQName(0)) && profileName.equals(attributes.getValue(0))) {", "+\t\t\t\t\trecord = true;", "+\t\t\t\t\tentries = new HashMap();", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} else if (\"setting\".equals(qName) && record) {", "+\t\t\tif (attributesLength == 2) {", "+\t\t\t\tentries.put(attributes.getValue(0), attributes.getValue(1));", "+\t\t\t}"]}], "num": 62284}