{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7b48059bdb0878bd82a7728059a5370c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c84bf297c59cf92a73a761bc751f446", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest.java", "commitBeforeChange": "f174c5e3ec66ea2a46810b190cc3e9d57c0432d4", "commitAfterChange": "8bbacffbe712e7ac5a5d22a44809b44ff8a5e616", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public static boolean equals(String c, String s)", "signatureAfterChange": " \tpublic void initialize(CompilerTestSetup setUp)", "diff": ["-", "-public static boolean equals(String c, String s) {", "-\tif (c == null) {", "-\t\tif (s == null)", "-\t\t\treturn true;", "-\t\telse", "-\t\t\treturn false;", "-\treturn c.equals(s);", "-}", "+\t */", "+\tpublic void initialize(CompilerTestSetup setUp) {", "+\t\tsuper.initialize(setUp);", "+\t\tthis.supportJavadoc = !CompilerOptions.DISABLED.equals(this.docCommentSupport);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ada2597c58f8ecd6de4b624a343757d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "e92324cecc3fbf731a68d99288f72318b17cf1ea", "commitAfterChange": "9832689930749c0e863f1bb11ec756d41ad5c5d4", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic boolean visit(LocalDeclaration localDeclaration, BlockScope scope)", "signatureAfterChange": " protected void consumeLocalVariableDeclaration()", "diff": ["-\tpublic boolean visit(LocalDeclaration localDeclaration, BlockScope scope) {", "-\t\tpatternLocator.match(localDeclaration, nodeSet);", "-\t\treturn true;", "-\t}", "+protected void consumeLocalVariableDeclaration() {", "+\tsuper.consumeLocalVariableDeclaration();", "+", "+\t// this is always a LocalDeclaration", "+\tthis.patternLocator.match((LocalDeclaration) this.astStack[this.astPtr], this.nodeSet);", "+}"]}], "num": 38139}