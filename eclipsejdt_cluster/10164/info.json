{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ea15732c0e2fbbbd57a3db9c2cb67854", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b4ea75370d6309f19997a2cfcc7504f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetScope.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public final boolean canBeSeenByForCodeSnippet(MethodBinding methodBinding, TypeBinding receiverType, InvocationSite invocationSite, Scope scope)", "signatureAfterChange": " public final boolean canBeSeenByForCodeSnippet(MethodBinding methodBinding, TypeBinding receiverType, InvocationSite invocationSite, Scope scope)", "diff": ["-\tif (invocationType == methodBinding.declaringClass) return true;", "+\tif (TypeBinding.equalsEquals(invocationType, methodBinding.declaringClass)) return true;", "-\t\tif (invocationType == methodBinding.declaringClass) return true;", "+\t\tif (TypeBinding.equalsEquals(invocationType, methodBinding.declaringClass)) return true;", "-\t\tif (receiverType != methodBinding.declaringClass) return false;", "+\t\tif (TypeBinding.notEquals(receiverType, methodBinding.declaringClass)) return false;", "-\t\tif (invocationType != methodBinding.declaringClass) {", "+\t\tif (TypeBinding.notEquals(invocationType, methodBinding.declaringClass)) {", "-\t\t\tif (outerInvocationType != outerDeclaringClass) return false;", "+\t\t\tif (TypeBinding.notEquals(outerInvocationType, outerDeclaringClass)) return false;", "-\t\t\tif (originalDeclaringClass == type.erasure().original()) return true;", "+\t\t\tif (TypeBinding.equalsEquals(originalDeclaringClass, type.erasure().original())) return true;", "-\t\t\tif (originalDeclaringClass == type.original()) return true;", "+\t\t\tif (TypeBinding.equalsEquals(originalDeclaringClass, type.original())) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5def853caee6d9682ecbf74fc252f7bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetScope.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public final boolean canBeSeenByForCodeSnippet(FieldBinding fieldBinding, TypeBinding receiverType, InvocationSite invocationSite, Scope scope)", "signatureAfterChange": "  public final boolean canBeSeenByForCodeSnippet(FieldBinding fieldBinding, TypeBinding receiverType, InvocationSite invocationSite, Scope scope)", "diff": ["-\tif (invocationType == fieldBinding.declaringClass) return true;", "+\tif (TypeBinding.equalsEquals(invocationType, fieldBinding.declaringClass)) return true;", "-\t\tif (invocationType == fieldBinding.declaringClass) return true;", "+\t\tif (TypeBinding.equalsEquals(invocationType, fieldBinding.declaringClass)) return true;", "-\t\tif (receiverType != fieldBinding.declaringClass) return false;", "+\t\tif (TypeBinding.notEquals(receiverType, fieldBinding.declaringClass)) return false;", "-\t\tif (invocationType != fieldBinding.declaringClass) {", "+\t\tif (TypeBinding.notEquals(invocationType, fieldBinding.declaringClass)) {", "-\t\t\tif (outerInvocationType != outerDeclaringClass) return false;", "+\t\t\tif (TypeBinding.notEquals(outerInvocationType, outerDeclaringClass)) return false;", "-\t\t\tif (originalDeclaringClass == type.erasure().original()) return true;\t", "+\t\t\tif (TypeBinding.equalsEquals(originalDeclaringClass, type.erasure().original())) return true;\t", "-\t\t\tif (originalDeclaringClass == type.original()) return true;", "+\t\t\tif (TypeBinding.equalsEquals(originalDeclaringClass, type.original())) return true;"]}], "num": 10164}