{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7812fd432c7f1a68212255e7d19552be", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a37c072714d062b3349861e56c23482", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 132, "signatureBeforeChange": " protected void consumeNestedType()", "signatureAfterChange": " protected void consumeNestedType()", "diff": ["-\tnestedType++;", "+\tthis.nestedType++;", "-\t\tnestedMethod[nestedType] = 0;", "+\t\tthis.nestedMethod[this.nestedType] = 0;", "-\t\tint oldL = nestedMethod.length;", "-\t\tSystem.arraycopy(nestedMethod , 0, (nestedMethod = new int[oldL + 30]), 0, oldL);", "-\t\tnestedMethod[nestedType] = 0;", "+\t\tint oldL = this.nestedMethod.length;", "+\t\tSystem.arraycopy(this.nestedMethod , 0, (this.nestedMethod = new int[oldL + 30]), 0, oldL);", "+\t\tthis.nestedMethod[this.nestedType] = 0;", "-\t\tSystem.arraycopy(variablesCounter, 0, (variablesCounter = new int[oldL + 30]), 0, oldL);", "+\t\tSystem.arraycopy(this.variablesCounter, 0, (this.variablesCounter = new int[oldL + 30]), 0, oldL);", "-\tvariablesCounter[nestedType] = 0;", "+\tthis.variablesCounter[this.nestedType] = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92b06bd1bdbe7600a8e5c00c93c46a20", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "2490dbbf3f6248e62011980e082db7d3a33dea52", "commitAfterChange": "6bc8155ada22ba817bf75f276d6fc8be0384eaaf", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " \tpublic byte[] getBytes()", "signatureAfterChange": " \tpublic byte[] getBytes()", "diff": ["-\t\tbyte[] fullContents = new byte[headerOffset + contentsOffset];", "-\t\tSystem.arraycopy(header, 0, fullContents, 0, headerOffset);", "-\t\tSystem.arraycopy(contents, 0, fullContents, headerOffset, contentsOffset);", "-\t\treturn fullContents;", "+\t\tif (this.bytes == null) {", "+\t\t\tthis.bytes = new byte[this.headerOffset + this.contentsOffset];", "+\t\t\tSystem.arraycopy(this.header, 0, this.bytes, 0, this.headerOffset);", "+\t\t\tSystem.arraycopy(this.contents, 0, this.bytes, this.headerOffset, this.contentsOffset);", "+\t\t}", "+\t\treturn this.bytes;"]}], "num": 73051}