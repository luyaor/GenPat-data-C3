{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ceb7970ce75dd6f3220d718c6c536234", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a9050cc135ac1eea1d482f034e64595", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  public void recordUsingNullReference(Scope scope, LocalVariableBinding local, \t\tExpression reference, int checkType, FlowInfo flowInfo)", "signatureAfterChange": "  public void recordUsingNullReference(Scope scope, VariableBinding local, \t\tExpression reference, int checkType, FlowInfo flowInfo)", "diff": ["-public void recordUsingNullReference(Scope scope, LocalVariableBinding local,", "+public void recordUsingNullReference(Scope scope, VariableBinding local,", "-\t\t\t\t\t\tscope.problemReporter().localVariableRedundantCheckOnNonNull(local, reference);", "+\t\t\t\t\t\tscope.problemReporter().variableRedundantCheckOnNonNull(local, reference);", "-\t\t\t\t\t\tscope.problemReporter().localVariableNonNullComparedToNull(local, reference);", "+\t\t\t\t\t\tscope.problemReporter().variableNonNullComparedToNull(local, reference);", "-\t\t\t\t\t\tscope.problemReporter().localVariableRedundantCheckOnNull(local, reference);", "+\t\t\t\t\t\tscope.problemReporter().variableRedundantCheckOnNull(local, reference);", "-\t\t\t\t\t\tscope.problemReporter().localVariableNullComparedToNonNull(local, reference);", "+\t\t\t\t\t\tscope.problemReporter().variableNullComparedToNonNull(local, reference);", "-\t\t\t\t\t\t\tscope.problemReporter().localVariableNullReference(local, reference);", "+\t\t\t\t\t\t\tscope.problemReporter().variableNullReference(local, reference);", "-\t\t\t\t\t\t\tscope.problemReporter().localVariableRedundantCheckOnNull(local, reference);", "+\t\t\t\t\t\t\tscope.problemReporter().variableRedundantCheckOnNull(local, reference);", "-\t\t\t\t\t\t\tscope.problemReporter().localVariableNullReference(local, reference);", "+\t\t\t\t\t\t\tscope.problemReporter().variableNullReference(local, reference);", "-\t\t\t\t\t\t\tscope.problemReporter().localVariableNullComparedToNonNull(local, reference);", "+\t\t\t\t\t\t\tscope.problemReporter().variableNullComparedToNonNull(local, reference);", "-\t\t\t\t\t\tscope.problemReporter().localVariableRedundantNullAssignment(local, reference);", "+\t\t\t\t\t\tscope.problemReporter().variableRedundantNullAssignment(local, reference);", "-\t\t\t\t\t\tscope.problemReporter().localVariableNullInstanceof(local, reference);", "+\t\t\t\t\t\tscope.problemReporter().variableNullInstanceof(local, reference);", "-\t\t\t\t\t\t\tscope.problemReporter().localVariablePotentialNullReference(local, reference);", "+\t\t\t\t\t\t\tscope.problemReporter().variablePotentialNullReference(local, reference);", "-\t\t\t\t\t\t\tscope.problemReporter().localVariablePotentialNullReference(local, reference);", "+\t\t\t\t\t\t\tscope.problemReporter().variablePotentialNullReference(local, reference);", "-\t\t\t\tscope.problemReporter().localVariableNullReference(local, reference);", "+\t\t\t\tscope.problemReporter().variableNullReference(local, reference);", "-\t\t\t\tscope.problemReporter().localVariablePotentialNullReference(local, reference);", "+\t\t\t\tscope.problemReporter().variablePotentialNullReference(local, reference);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe5dfe22707d4cd062366094797c8a12", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public void recordUsingNullReference(Scope scope, LocalVariableBinding local, \t\tExpression reference, int checkType, FlowInfo flowInfo)", "signatureAfterChange": " public void recordUsingNullReference(Scope scope, VariableBinding local, \t\tExpression reference, int checkType, FlowInfo flowInfo)", "diff": ["-public void recordUsingNullReference(Scope scope, LocalVariableBinding local,", "+public void recordUsingNullReference(Scope scope, VariableBinding local,", "-\t\t\t\t\t\tscope.problemReporter().localVariableRedundantCheckOnNonNull(local, reference);", "+\t\t\t\t\t\tscope.problemReporter().variableRedundantCheckOnNonNull(local, reference);", "-\t\t\t\t\t\tscope.problemReporter().localVariableNonNullComparedToNull(local, reference);", "+\t\t\t\t\t\tscope.problemReporter().variableNonNullComparedToNull(local, reference);", "-\t\t\t\t\t\t\tscope.problemReporter().localVariableNullReference(local, reference);", "+\t\t\t\t\t\t\tscope.problemReporter().variableNullReference(local, reference);", "-\t\t\t\t\t\t\tscope.problemReporter().localVariableRedundantCheckOnNull(local, reference);", "+\t\t\t\t\t\t\tscope.problemReporter().variableRedundantCheckOnNull(local, reference);", "-\t\t\t\t\t\t\tscope.problemReporter().localVariableNullReference(local, reference);", "+\t\t\t\t\t\t\tscope.problemReporter().variableNullReference(local, reference);", "-\t\t\t\t\t\t\tscope.problemReporter().localVariableNullComparedToNonNull(local, reference);", "+\t\t\t\t\t\t\tscope.problemReporter().variableNullComparedToNonNull(local, reference);", "-\t\t\t\t\t\tscope.problemReporter().localVariableRedundantNullAssignment(local, reference);", "+\t\t\t\t\t\tscope.problemReporter().variableRedundantNullAssignment(local, reference);", "-\t\t\t\t\t\tscope.problemReporter().localVariableNullInstanceof(local, reference);", "+\t\t\t\t\t\tscope.problemReporter().variableNullInstanceof(local, reference);", "-\t\t\t\t\t\t\tscope.problemReporter().localVariablePotentialNullReference(local, reference);", "+\t\t\t\t\t\t\tscope.problemReporter().variablePotentialNullReference(local, reference);", "-\t\t\t\t\t\t\tscope.problemReporter().localVariablePotentialNullReference(local, reference);", "+\t\t\t\t\t\t\tscope.problemReporter().variablePotentialNullReference(local, reference);", "-\t\t\t\tscope.problemReporter().localVariableNullReference(local, reference);", "+\t\t\t\tscope.problemReporter().variableNullReference(local, reference);", "-\t\t\t\tscope.problemReporter().localVariablePotentialNullReference(local, reference);", "+\t\t\t\tscope.problemReporter().variablePotentialNullReference(local, reference);"]}], "num": 1881}