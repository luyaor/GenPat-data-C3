{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "47b608f2dc8a71c301fff7b974740aa7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6670177973121cc15529d1174fd6c29f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "c83f12517cdac51319ba031385bd9a380905c315", "commitAfterChange": "3230c94014e69f2e2750889e5eaac5c1e552ded1", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": " public boolean getNextCharAsJavaIdentifierPart()", "signatureAfterChange": " public boolean getNextCharAsJavaIdentifierPart()", "diff": ["+\tint temp2 = this.withoutUnicodePtr;", "-\t\t\t//-------------unicode traitement ------------", "-\t\t\tint c1, c2, c3, c4;", "-\t\t\tint unicodeSize = 6;", "-\t\t\tthis.currentPosition++;", "-\t\t\twhile (this.source[this.currentPosition] == 'u') {", "-\t\t\t\tthis.currentPosition++;", "-\t\t\t\tunicodeSize++;", "-\t\t\t}", "-", "-\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t|| c1 < 0)", "-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)", "-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)", "-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {", "+\t\t\tgetNextUnicodeChar();", "+\t\t\tif (!isJavaIdentifierPart(this.currentCharacter)) {", "+\t\t\t\tthis.withoutUnicodePtr = temp2;", "-", "-\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "-\t\t\tif (!Character.isJavaIdentifierPart(this.currentCharacter)) {", "-\t\t\t\tthis.currentPosition = temp;", "-\t\t\t\treturn false;", "-\t\t\t}", "-", "-\t\t\t//need the unicode buffer", "-\t\t\tif (this.withoutUnicodePtr == 0) {", "-\t\t\t\t//buffer all the entries that have been left aside....", "-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);", "-\t\t\t}", "-\t\t\t//fill the buffer with the char", "-\t\t    unicodeStoreAt(++this.withoutUnicodePtr);", "-\t\t} //-------------end unicode traitement--------------", "-\t\telse {", "-\t\t\tif (!Character.isJavaIdentifierPart(this.currentCharacter)) {", "+\t\t} else {", "+\t\t\tif (!isJavaIdentifierPart(this.currentCharacter)) {", "+\t\t\t\tthis.withoutUnicodePtr = temp2;", "+\t\tthis.withoutUnicodePtr = temp2;", "+\t\treturn false;", "+\t} catch(InvalidInputException e) {", "+\t\tthis.currentPosition = temp;", "+\t\tthis.withoutUnicodePtr = temp2;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b7edf6bec1f8971949eec0ce9f13346", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "6bbe631c4aee5403134035d5558f68ceeb91c520", "commitAfterChange": "a387db32f06bcc44b6b47e5aa021853a1cfee33c", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": " public boolean getNextCharAsJavaIdentifierPart()", "signatureAfterChange": " public boolean getNextCharAsJavaIdentifierPart()", "diff": ["+\tint temp2 = this.withoutUnicodePtr;", "-\t\t\t//-------------unicode traitement ------------", "-\t\t\tint c1, c2, c3, c4;", "-\t\t\tint unicodeSize = 6;", "-\t\t\tthis.currentPosition++;", "-\t\t\twhile (this.source[this.currentPosition] == 'u') {", "-\t\t\t\tthis.currentPosition++;", "-\t\t\t\tunicodeSize++;", "-\t\t\t}", "-", "-\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t|| c1 < 0)", "-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)", "-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)", "-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {", "+\t\t\tgetNextUnicodeChar();", "+\t\t\tif (!isJavaIdentifierPart(this.currentCharacter)) {", "+\t\t\t\tthis.withoutUnicodePtr = temp2;", "-", "-\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "-\t\t\tif (!Character.isJavaIdentifierPart(this.currentCharacter)) {", "-\t\t\t\tthis.currentPosition = temp;", "-\t\t\t\treturn false;", "-\t\t\t}", "-", "-\t\t\t//need the unicode buffer", "-\t\t\tif (this.withoutUnicodePtr == 0) {", "-\t\t\t\t//buffer all the entries that have been left aside....", "-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);", "-\t\t\t}", "-\t\t\t//fill the buffer with the char", "-\t\t    unicodeStoreAt(++this.withoutUnicodePtr);", "-\t\t} //-------------end unicode traitement--------------", "-\t\telse {", "-\t\t\tif (!Character.isJavaIdentifierPart(this.currentCharacter)) {", "+\t\t} else {", "+\t\t\tif (!isJavaIdentifierPart(this.currentCharacter)) {", "+\t\t\t\tthis.withoutUnicodePtr = temp2;", "+\t\tthis.withoutUnicodePtr = temp2;", "+\t\treturn false;", "+\t} catch(InvalidInputException e) {", "+\t\tthis.currentPosition = temp;", "+\t\tthis.withoutUnicodePtr = temp2;"]}], "num": 59037}