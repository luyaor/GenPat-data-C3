{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "316ab1ac266239bc41778262950b09a9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa6deaacd7f4c1578d2f2283ac87a0f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "4eaa1f1fc9e841c11eaca436ac06f8635b8543bd", "commitAfterChange": "f73fdb0a354f2f38e3faeb7d9eceabb3d85530d5", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " public void test012b()", "signatureAfterChange": " public void test012b()", "diff": ["-        \"                               unusedPrivate, unusedThrown, and unusedTypeArgs\\n\" + ", "+        \"                               unusedPrivate, unusedThrown, and unusedTypeArgs,\\n\" + ", "+        \"\t\t\t\t\t\t\t\tunusedExceptionParam\\n\"+", "-        \"      unusedArgument       unread method parameter\\n\" + ", "+        \"      unusedArgument       unread method parameter\\n\" +", "+        \"      unusedExceptionParam unread exception parameter\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd1e6309aafce223c935960e52de0389", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "9f3ab0840d24edcaf3911840a93823998e7f8eff", "commitAfterChange": "2923ed68c1f82d0e305a158b4c5d393b708481eb", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " public void test012b()", "signatureAfterChange": " public void test012b()", "diff": ["+        \"      intfRedundant      + find redundant superinterfaces\\n\" + ", "-        \"      redundantSuperinterface                + find redundant superinterfaces\\n\" +", "-        \"      syncOverride     overriding a synchronized method without synchronizing it\\n\" +", "-        \"      synthetic-access     same as syntheticAccess\\n\" +", "+        \"      syncOverride         missing synchronized in synchr. method override\\n\" +", "-        \"      unqualified-field-access same as unqualifiedField\\n\" +"]}], "num": 57452}