{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3e666c3afa2110a14e332f11282457f1", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04a678662a9f4fdb8f344856b8dbad59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic boolean match(IfStatement node, Object other)", "signatureAfterChange": " \tpublic boolean match(EnumDeclaration node, Object other)", "diff": ["+\t */", "+\tpublic boolean match(EnumDeclaration node, Object other) {", "+\t\tif (!(other instanceof EnumDeclaration)) {", "+\t\t\treturn false;", "+\t\t}", "+\t\tEnumDeclaration o = (EnumDeclaration) other;", "+\t\treturn (", "+\t\t\tsafeSubtreeMatch(node.getJavadoc(), o.getJavadoc())", "+\t\t\t\t&& safeSubtreeListMatch(node.modifiers(), o.modifiers())", "+\t\t\t\t&& safeSubtreeMatch(node.getName(), o.getName())", "+\t\t\t\t&& safeSubtreeListMatch(node.superInterfaceTypes(), o.superInterfaceTypes())", "+\t\t\t\t&& safeSubtreeListMatch(", "+\t\t\t\t\tnode.bodyDeclarations(),", "+\t\t\t\t\to.bodyDeclarations()));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8610e63f1353f2a3737712b9178da1cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic boolean match(ArrayAccess node, Object other)", "signatureAfterChange": " \tpublic boolean match(AnnotationTypeMemberDeclaration node, Object other)", "diff": ["+\t */", "+\tpublic boolean match(AnnotationTypeMemberDeclaration node, Object other) {", "+\t\tif (!(other instanceof AnnotationTypeMemberDeclaration)) {", "+\t\t\treturn false;", "+\t\t}", "+\t\tAnnotationTypeMemberDeclaration o = (AnnotationTypeMemberDeclaration) other;", "+\t\t// node type added in 3.0 - ignore old 2.0-style modifiers", "+\t\treturn (safeSubtreeMatch(node.getJavadoc(), o.getJavadoc())", "+\t\t\t\t&& safeSubtreeListMatch(node.modifiers(), o.modifiers())", "+\t\t\t\t&& safeSubtreeMatch(node.getType(), o.getType())", "+\t\t\t\t&& safeSubtreeMatch(node.getName(), o.getName())", "+\t\t\t\t&& safeSubtreeMatch(node.getDefault(), o.getDefault()));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e82797dcf64648c728c5a65955f5e0d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic boolean match(AnonymousClassDeclaration node, Object other)", "signatureAfterChange": " \tpublic boolean match(AnnotationTypeDeclaration node, Object other)", "diff": ["+\t */", "+\tpublic boolean match(AnnotationTypeDeclaration node, Object other) {", "+\t\tif (!(other instanceof AnnotationTypeDeclaration)) {", "+\t\t\treturn false;", "+\t\t}", "+\t\tAnnotationTypeDeclaration o = (AnnotationTypeDeclaration) other;", "+\t\t// node type added in 3.0 - ignore old 2.0-style modifiers", "+\t\treturn (safeSubtreeMatch(node.getJavadoc(), o.getJavadoc())", "+\t\t\t\t&& safeSubtreeListMatch(node.modifiers(), o.modifiers())", "+\t\t\t\t&& safeSubtreeMatch(node.getName(), o.getName())", "+\t\t\t\t&& safeSubtreeListMatch(node.bodyDeclarations(), o.bodyDeclarations()));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce15b4c0bbc49076089f4b5543bf6f1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingComparator.java", "commitBeforeChange": "234baeb433cddb9a4e19b385ab8f3f3e404e97b7", "commitAfterChange": "833c4835f154a0a43a7c08b7136b48c44f5783aa", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tstatic boolean isEqual(org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding2, HashSet visitedTypes)", "signatureAfterChange": " \tstatic boolean isEqual(org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding2, HashSet visitedTypes)", "diff": ["-\t\t\t\t\t&& isEqual(parameterizedTypeBinding.arguments, parameterizedTypeBinding2.arguments, visitedTypes);", "+\t\t\t\t\t&& isEqual(parameterizedTypeBinding.arguments, parameterizedTypeBinding2.arguments, visitedTypes)", "+\t\t\t\t\t&& isEqual(parameterizedTypeBinding.enclosingType(), parameterizedTypeBinding2.enclosingType(), visitedTypes);", "-\t\t\t\t\t&& isEqual(referenceBinding.typeVariables(), referenceBinding2.typeVariables(), visitedTypes);", "-\t\t", "+\t\t\t\t\t&& isEqual(referenceBinding.typeVariables(), referenceBinding2.typeVariables(), visitedTypes)", "+\t\t\t\t\t&& isEqual(referenceBinding.enclosingType(), referenceBinding2.enclosingType(), visitedTypes);", "+", "-\t\t\t\t\t\t\t== (referenceBinding2.modifiers & (CompilerModifiers.AccJustFlag | IConstants.AccInterface | IConstants.AccEnum | IConstants.AccAnnotation));", "-\t\t\t\t", "+\t\t\t\t\t\t\t== (referenceBinding2.modifiers & (CompilerModifiers.AccJustFlag | IConstants.AccInterface | IConstants.AccEnum | IConstants.AccAnnotation))", "+\t\t\t\t\t&& isEqual(referenceBinding.enclosingType(), referenceBinding2.enclosingType(), visitedTypes);"]}], "num": 31587}