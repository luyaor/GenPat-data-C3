{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "82fdf9dce34785813a579a2a11a9195c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18e2c3acfc386b9d5808ebe83d9fcc16", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "646aa5ecb536b7e9ff4fed634622c7786b50bf41", "commitAfterChange": "25e24dc0b5df8ee9c07cfac971fa5e561f586699", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 130, "signatureBeforeChange": " protected void consumePrimaryNoNewArray()", "signatureAfterChange": " protected void consumePrimaryNoNewArray()", "diff": ["-\tparenthesizedExpression.bits |= ((((parenthesizedExpression.bits & AstNode.ParenthesizedMASK) >> AstNode.ParenthesizedSHIFT) & 0xFF)  + 1) << AstNode.ParenthesizedSHIFT;", "+\tint numberOfParenthesis = (parenthesizedExpression.bits & AstNode.ParenthesizedMASK) >> AstNode.ParenthesizedSHIFT;", "+\tparenthesizedExpression.bits &= ~AstNode.ParenthesizedMASK;", "+\tparenthesizedExpression.bits |= (numberOfParenthesis + 1) << AstNode.ParenthesizedSHIFT;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ce2dc9f426f34e025b538df09c1eb08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "f7f17008db6ff3c3f5e70873efcd612c1034949b", "commitAfterChange": "fddc777c121220e82a5dd2b40778e1b24ac0c0d2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tprivate TypeParameter createTypeParameter(char[] typeParameterName, char[][] typeParameterBounds, int start, int end)", "signatureAfterChange": "  \tprivate TypeParameter createTypeParameter(char[] typeParameterName, char[][] typeParameterBounds, int start, int end)", "diff": ["-\t\t\t\tparameter.bounds[i] = createTypeReference(typeParameterBounds[i], start, end);", "+\t\t\t\tTypeReference bound = createTypeReference(typeParameterBounds[i], start, end);", "+\t\t\t\tbound.bits |= ASTNode.IsSuperType;", "+\t\t\t\tparameter.bounds[i] = bound;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d89b7c2b1e352b17e3850dc1d0f91c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "2d2fc9e19e89b1b5be0389a21ddcf829825f1a2b", "commitAfterChange": "2ffe8d1ed4a3b623eccdb4a569799a4b4e7fa094", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 130, "signatureBeforeChange": " protected void consumePrimaryNoNewArray()", "signatureAfterChange": " protected void consumePrimaryNoNewArray()", "diff": ["-\tupdateSourcePosition(expressionStack[expressionPtr]);", "+\tfinal Expression parenthesizedExpression = expressionStack[expressionPtr];", "+\tupdateSourcePosition(parenthesizedExpression);", "+\tparenthesizedExpression.bits |= AstNode.IsParenthesizedMASK;"]}], "num": 19264}