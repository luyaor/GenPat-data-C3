{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d549d674065a18f19029c0d697447210", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bac2695f5e0e1dcd1785663e7d8b736", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "6de947a98e0d56f5c21755936ebc6de93f79b0e6", "commitAfterChange": "e18b8152863f75de59815219afe0ab3ec946a798", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public void checkUnclosedCloseables(FlowInfo flowInfo, FlowContext flowContext, ASTNode location)", "signatureAfterChange": " public void checkUnclosedCloseables(FlowInfo flowInfo, ASTNode location)", "diff": ["-public void checkUnclosedCloseables(FlowInfo flowInfo, FlowContext flowContext, ASTNode location) {", "+public void checkUnclosedCloseables(FlowInfo flowInfo, ASTNode location) {", "-\t\t\t((BlockScope) this.parent).checkUnclosedCloseables(flowInfo, flowContext, location);", "+\t\t\t((BlockScope) this.parent).checkUnclosedCloseables(flowInfo, location);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77d72cc6da859c3269184578e595bfef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Statement.java", "commitBeforeChange": "6de947a98e0d56f5c21755936ebc6de93f79b0e6", "commitAfterChange": "e18b8152863f75de59815219afe0ab3ec946a798", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public int complainIfUnreachable(FlowInfo flowInfo, FlowContext flowContext, BlockScope scope, int previousComplaintLevel, boolean endOfBlock)", "signatureAfterChange": " public int complainIfUnreachable(FlowInfo flowInfo, BlockScope scope, int previousComplaintLevel, boolean endOfBlock)", "diff": ["-public int complainIfUnreachable(FlowInfo flowInfo, FlowContext flowContext, BlockScope scope, int previousComplaintLevel, boolean endOfBlock) {", "+public int complainIfUnreachable(FlowInfo flowInfo, BlockScope scope, int previousComplaintLevel, boolean endOfBlock) {", "-\t\t\t\t\tscope.checkUnclosedCloseables(flowInfo, flowContext, null);", "+\t\t\t\t\tscope.checkUnclosedCloseables(flowInfo, null);", "-\t\t\t\t\tscope.checkUnclosedCloseables(flowInfo, flowContext, null);", "+\t\t\t\t\tscope.checkUnclosedCloseables(flowInfo, null);"]}], "num": 66113}