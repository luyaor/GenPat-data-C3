{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "292245b493c49c567d2e0483363fdbc8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6566c531c3b558926c3f90d5f328687", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "77710b057d95739589359df12ac7a8d3e09ad15f", "commitAfterChange": "348bd876780869d134d8b9dcd3416e2478160c68", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \t   \tpublic void resolve()", "signatureAfterChange": " \t   \tpublic void resolve()", "diff": ["-\t\t\t\t\t\tif (this.methods[i].isAbstract()) {", "-\t\t\t\t\t\t\tthis.scope.problemReporter().enumAbstractMethodMustBeImplemented(this.methods[i]);", "+\t\t\t\t\t\tfinal AbstractMethodDeclaration methodDeclaration = this.methods[i];", "+\t\t\t\t\t\tif (methodDeclaration.isAbstract() && methodDeclaration.binding != null) {", "+\t\t\t\t\t\t\tthis.scope.problemReporter().enumAbstractMethodMustBeImplemented(methodDeclaration);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd0cbb4c8c8056981cc8bea82158d993", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "cb3d28a5bbc57c9dc9450ff6ca1c4148eb20218e", "commitAfterChange": "c4ef8d3dd9e4b5596957ea40b9cce8f1ba336f84", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \tprivate static TypeDeclaration convert(\r \t\tISourceType sourceType,\r \t\tboolean needFieldsAndMethods,\r \t\tboolean needMemberTypes)", "signatureAfterChange": "\r \tprivate static TypeDeclaration convert(\r \t\tISourceType sourceType,\r \t\tboolean needFieldsAndMethods,\r \t\tboolean needMemberTypes)", "diff": ["+\t\t\tboolean isInterface = type.isInterface();\r", "-\t\t\t\ttype.methods[neededCount + i] = convert(sourceMethods[i]);\r", "+\t\t\t\tAbstractMethodDeclaration method =convert(sourceMethods[i]);\r", "+\t\t\t\tif (isInterface || method.isAbstract()) { // fix-up flag \r", "+\t\t\t\t\tmethod.modifiers |= AccSemicolonBody;\r", "+\t\t\t\t}\r", "+\t\t\t\ttype.methods[neededCount + i] = method;\r"]}], "num": 31582}