{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2050396b417c31863aa9f1c718f9f131", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a00df87a0a22e538a1f6832f27c8c4fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "d95feda7fc2f9a6563596c0e4c31ae322f705773", "commitAfterChange": "8477130b01f048bfc1fd1f484a88902aeefb2f38", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": "  public void duplicateInheritedMethods(SourceTypeBinding type, MethodBinding inheritedMethod1, MethodBinding inheritedMethod2)", "signatureAfterChange": "  public void duplicateInheritedMethods(SourceTypeBinding type, MethodBinding inheritedMethod1, MethodBinding inheritedMethod2, boolean isJava8)", "diff": ["-public void duplicateInheritedMethods(SourceTypeBinding type, MethodBinding inheritedMethod1, MethodBinding inheritedMethod2) {", "+public void duplicateInheritedMethods(SourceTypeBinding type, MethodBinding inheritedMethod1, MethodBinding inheritedMethod2, boolean isJava8) {", "-\t\tint problemID = (inheritedMethod1.isDefaultMethod() && inheritedMethod2.isDefaultMethod())", "-\t\t\t\t? IProblem.DuplicateInheritedDefaultMethods", "-\t\t\t\t: IProblem.DuplicateInheritedMethods;", "+\t\tint problemID = IProblem.DuplicateInheritedMethods;", "+\t\tif (inheritedMethod1.isDefaultMethod() && inheritedMethod2.isDefaultMethod()) {", "+\t\t\tif (isJava8)", "+\t\t\t\tproblemID = IProblem.DuplicateInheritedDefaultMethods;", "+\t\t\telse", "+\t\t\t\treturn; // don't report this error at 1.7-", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afc6fea1323c885cfb96684efa36c758", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "6a9c839afeea06e7dd97b023fa9c24def00f0f08", "commitAfterChange": "cf7db1b07f7da2723bd250cc64a7e16bec1c504d", "methodNumberBeforeChange": 199, "methodNumberAfterChange": 199, "signatureBeforeChange": " public void isClassPathCorrect(char[][] wellKnownTypeName, CompilationUnitDeclaration compUnitDecl)", "signatureAfterChange": " public void isClassPathCorrect(char[][] wellKnownTypeName, CompilationUnitDeclaration compUnitDecl, Object location)", "diff": ["-public void isClassPathCorrect(char[][] wellKnownTypeName, CompilationUnitDeclaration compUnitDecl) {", "+public void isClassPathCorrect(char[][] wellKnownTypeName, CompilationUnitDeclaration compUnitDecl, Object location) {", "+\tint start = 0, end = 0;", "+\tif (location != null) {", "+\t\tif (location instanceof InvocationSite) {", "+\t\t\tInvocationSite site = (InvocationSite) location;", "+\t\t\tstart = site.sourceStart();", "+\t\t\tend = site.sourceEnd();", "+\t\t} else if (location instanceof ASTNode) {", "+\t\t\tASTNode node = (ASTNode) location;", "+\t\t\tstart = node.sourceStart();", "+\t\t\tend = node.sourceEnd();", "+\t\t}", "+\t}", "-\t\tProblemSeverities.AbortCompilation | ProblemSeverities.Error | ProblemSeverities.Fatal,", "-\t\t0,", "-\t\t0);", "+\t\tstart,", "+\t\tend);"]}], "num": 14229}