{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0c3edb61f5d78cf65e016b6bb472537e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6c725078423554c13ae4758d82778e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "7b5e14fca8a5cf7d78d10afc4f2876c54b0a784d", "commitAfterChange": "c8c3d94ea6c8e6d06889654739669f82abe249ac", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["-\t\t// resolve new path (asking for marker creation if problems)", "-\t\tJavaProject project = getProject();", "-\t\tIClasspathEntry[] newResolvedPath = ", "-\t\t\tproject.getResolvedClasspath(", "-\t\t\t\tthis.newRawPath,", "-\t\t\t\ttrue, // ignoreUnresolvedEntry", "-\t\t\t\tthis.canChangeResource);// also update cp markers", "-\t\t\t\t", "-\t\t// compute needCycleCheck bit", "-\t\tcomputeCycleCheck(this.oldResolvedPath, newResolvedPath, project.getJavaModelManager(), project);", "-", "-\t\t\tif (this.newRawPath != ReuseClasspath) updateClasspath(newResolvedPath);", "+\t\t\tif (this.newRawPath == UpdateClasspath) this.newRawPath = getProject().getRawClasspath();", "+\t\t\tif (this.newRawPath != ReuseClasspath){", "+\t\t\t\tupdateClasspath();", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec93904e25993d37c7038b95638aab87", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "e99ce9ee7484764a234834a874f87f4697e194aa", "commitAfterChange": "e2ef6fc2d0690abbeb45e4b457db28baf732b4cf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["+\t\t// resolve new path (asking for marker creation if problems)", "+\t\tJavaProject project = getProject();", "+\t\tIClasspathEntry[] newResolvedPath = ", "+\t\t\tproject.getResolvedClasspath(", "+\t\t\t\tthis.newRawPath,", "+\t\t\t\ttrue, // ignoreUnresolvedEntry", "+\t\t\t\tthis.canChangeResource);// also update cp markers", "+\t\t\t\t", "+\t\t// compute needCycleCheck bit", "+\t\tcomputeCycleCheck(this.oldResolvedPath, newResolvedPath, project.getJavaModelManager(), project);", "+", "-\t\t\tif (this.newRawPath != ReuseClasspath) updateClasspath();", "+\t\t\tif (this.newRawPath != ReuseClasspath) updateClasspath(newResolvedPath);"]}], "num": 9652}