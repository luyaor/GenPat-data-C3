{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4ca1b7355bcdf61272ac0eed3f7f4231", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "810fc46c5163ee9aead2b76f0f63266f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "0271031e5844c32df2646c3a81a2c00b29e7d251", "commitAfterChange": "14c82497ad7236bee9eedf2d9ff4867e4a47ff21", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic boolean visit( \t\t\tMemberTypeDeclaration memberTypeDeclaration, \t\t\tClassScope scope)", "signatureAfterChange": " \tpublic boolean visit(MemberTypeDeclaration memberTypeDeclaration, ClassScope scope)", "diff": ["-\tpublic boolean visit(", "-\t\t\tMemberTypeDeclaration memberTypeDeclaration,", "-\t\t\tClassScope scope) {", "-\t\tif ((matchSet.matchContainer & SearchPattern.CLASS) != 0) {", "-\t\t\tmatchSet.checkMatching(memberTypeDeclaration);", "-\t\t}", "+\t}", "+\tpublic boolean visit(MemberTypeDeclaration memberTypeDeclaration, ClassScope scope) {", "+\t\tmatchSet.checkMatching(memberTypeDeclaration);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc0e565ef817e74e8074eaefe66d341b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "0271031e5844c32df2646c3a81a2c00b29e7d251", "commitAfterChange": "14c82497ad7236bee9eedf2d9ff4867e4a47ff21", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic boolean visit(Initializer initializer, MethodScope scope)", "signatureAfterChange": " \tpublic boolean visit(Initializer initializer, MethodScope scope)", "diff": ["-\t\tif ((matchSet.matchContainer & SearchPattern.CLASS) != 0) {", "-\t\t\tmatchSet.checkMatching(initializer);", "-\t\t}", "+\t}", "+\tpublic boolean visit(Initializer initializer, MethodScope scope) {", "+\t\tmatchSet.checkMatching(initializer);", "+\t\treturn (initializer.bits & AstNode.HasLocalTypeMASK) != 0; // continue only if it has local type", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd200919adce02dc200a2c9eb8077620", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "0271031e5844c32df2646c3a81a2c00b29e7d251", "commitAfterChange": "14c82497ad7236bee9eedf2d9ff4867e4a47ff21", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic boolean visit(FieldDeclaration fieldDeclaration, MethodScope scope)", "signatureAfterChange": " \tpublic boolean visit(FieldDeclaration fieldDeclaration, MethodScope scope)", "diff": ["-\t\tif ((matchSet.matchContainer & SearchPattern.CLASS) != 0) {", "-\t\t\tmatchSet.checkMatching(fieldDeclaration);", "-\t\t}", "+\t}", "+\tpublic boolean visit(FieldDeclaration fieldDeclaration, MethodScope scope) {", "+\t\tmatchSet.checkMatching(fieldDeclaration);", "+\t\treturn (fieldDeclaration.bits & AstNode.HasLocalTypeMASK) != 0; // continue only if it has local type;", "+\t}"]}], "num": 72299}