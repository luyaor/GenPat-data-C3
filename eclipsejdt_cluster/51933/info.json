{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "adf308e04f7d01afed9c98c4aaa11115", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c47d2c8f45bc4dd5f00e926a109881ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "497faf6d393391d320c32d6758e3486e9b8b42d1", "commitAfterChange": "bd0c102407b0b1aabc50fbd4178e6f4db5c891aa", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic ITypeBinding getDeclaringClass()", "signatureAfterChange": " \tpublic ITypeBinding getDeclaringClass()", "diff": ["-\t\tif (isClass() || isInterface() || isEnum() || isAnnotation()) {", "+\t\tif (isClass() || isInterface() || isEnum()) {", "+\t\t\t}", "+\t\t} else if (this.binding.isTypeVariable()) {", "+\t\t\tTypeVariableBinding typeVariableBinding = (TypeVariableBinding) this.binding;", "+\t\t\tBinding declaringElement = typeVariableBinding.declaringElement;", "+\t\t\tif (declaringElement instanceof ReferenceBinding) {", "+\t\t\t\ttry {", "+\t\t\t\t\treturn this.resolver.getTypeBinding((ReferenceBinding)declaringElement);", "+\t\t\t\t} catch (RuntimeException e) {", "+\t\t\t\t\t/* in case a method cannot be resolvable due to missing jars on the classpath", "+\t\t\t\t\t * see https://bugs.eclipse.org/bugs/show_bug.cgi?id=57871", "+\t\t\t\t\t * https://bugs.eclipse.org/bugs/show_bug.cgi?id=63550", "+\t\t\t\t\t * https://bugs.eclipse.org/bugs/show_bug.cgi?id=64299", "+\t\t\t\t\t */", "+\t\t\t\t}\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d18ce488c03b72c1bf120b0419b1d142", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "a8a3dc803188a8f412e8e9727c27a357015eb102", "commitAfterChange": "ebee92b09c2df43d9d4f2bbbd891d81bc1d00c76", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic IMethodBinding getDeclaringMethod()", "signatureAfterChange": " \tpublic IMethodBinding getDeclaringMethod()", "diff": ["-\t\tif (this.binding.isTypeVariable()) {", "+\t\tif (this.binding instanceof LocalTypeBinding) {", "+\t\t\tLocalTypeBinding localTypeBinding = (LocalTypeBinding) this.binding;", "+\t\t\tMethodBinding methodBinding = localTypeBinding.enclosingMethod;", "+\t\t\tif (methodBinding != null) {", "+\t\t\t\ttry {", "+\t\t\t\t\treturn this.resolver.getMethodBinding(localTypeBinding.enclosingMethod);", "+\t\t\t\t} catch (RuntimeException e) {", "+\t\t\t\t\t/* in case a method cannot be resolvable due to missing jars on the classpath", "+\t\t\t\t\t * see https://bugs.eclipse.org/bugs/show_bug.cgi?id=57871", "+\t\t\t\t\t * https://bugs.eclipse.org/bugs/show_bug.cgi?id=63550", "+\t\t\t\t\t * https://bugs.eclipse.org/bugs/show_bug.cgi?id=64299", "+\t\t\t\t\t */", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} else if (this.binding.isTypeVariable()) {", "-\t\t\tif (declaringElement instanceof org.eclipse.jdt.internal.compiler.lookup.MethodBinding) {", "+\t\t\tif (declaringElement instanceof MethodBinding) {", "-\t\t\t\t\treturn this.resolver.getMethodBinding((org.eclipse.jdt.internal.compiler.lookup.MethodBinding)declaringElement);", "+\t\t\t\t\treturn this.resolver.getMethodBinding((MethodBinding)declaringElement);"]}], "num": 51933}