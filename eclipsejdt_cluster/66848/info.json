{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "892a6d9e3e5b0a44ab388ca1aecbc53a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "becd6beda76b4be59457b2933258fa6a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "5dd0de42e39b5ae6b6ed70261ede6298820c064c", "commitAfterChange": "2d1b668da982fab23d85fda225f2e9df3073c2e1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public void generateAssignment(BlockScope currentScope, CodeStream codeStream, Assignment assignment, boolean valueRequired)", "signatureAfterChange": "  public void generateAssignment(BlockScope currentScope, CodeStream codeStream, Assignment assignment, boolean valueRequired)", "diff": ["-\t\t\tFieldBinding fieldBinding;", "-\t\t\tif (!(fieldBinding = (FieldBinding) this.codegenBinding).isStatic()) { // need a receiver?", "+\t\t\tFieldBinding codegenBinding = ((FieldBinding) this.binding).original();", "+\t\t\tif (!codegenBinding.isStatic()) { // need a receiver?", "-\t\t\tfieldStore(codeStream, fieldBinding, this.syntheticAccessors == null ? null : this.syntheticAccessors[SingleNameReference.WRITE], valueRequired);", "+\t\t\tfieldStore(currentScope, codeStream, codegenBinding, this.syntheticAccessors == null ? null : this.syntheticAccessors[SingleNameReference.WRITE], this.actualReceiverType, true /*implicit this*/, valueRequired);", "-\t\t\tLocalVariableBinding localBinding = (LocalVariableBinding) this.codegenBinding;", "+\t\t\tLocalVariableBinding localBinding = (LocalVariableBinding) this.binding;", "-\t\t\t\t\t\tif ((localBinding.type == TypeBinding.LONG) || (localBinding.type == TypeBinding.DOUBLE)) {", "-\t\t\t\t\t\t\tcodeStream.pop2();", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tcodeStream.pop();", "-\t\t\t\t\t\t}", "+\t\t\t\t\t\tswitch(localBinding.type.id) {", "+\t\t\t\t\t\t\tcase TypeIds.T_long :", "+\t\t\t\t\t\t\tcase TypeIds.T_double :", "+\t\t\t\t\t\t\t\tcodeStream.pop2();", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tdefault :", "+\t\t\t\t\t\t\t\tcodeStream.pop();", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}\t\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efc23de2ecd6d421ebf025c2ba2fc24a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "5dd0de42e39b5ae6b6ed70261ede6298820c064c", "commitAfterChange": "2d1b668da982fab23d85fda225f2e9df3073c2e1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, MethodBinding writeAccessor, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired)", "signatureAfterChange": " public void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, MethodBinding writeAccessor, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired)", "diff": ["-\t\t\tFieldBinding fieldBinding;", "-\t\t\tif ((fieldBinding = (FieldBinding) this.codegenBinding).isStatic()) {", "+\t\t\tFieldBinding codegenField = ((FieldBinding) this.binding).original();", "+\t\t\tif (codegenField.isStatic()) {", "-\t\t\t\t\tcodeStream.getstatic(fieldBinding);", "+\t\t\t\t\tTypeBinding constantPoolDeclaringClass = CodeStream.getConstantPoolDeclaringClass(currentScope, codegenField, this.actualReceiverType, true /* implicit this */);\t\t\t\t\t", "+\t\t\t\t\tcodeStream.fieldAccess(Opcodes.OPC_getstatic, codegenField, constantPoolDeclaringClass);", "-\t\t\t\t\tcodeStream.getfield(fieldBinding);", "+\t\t\t\t\tTypeBinding constantPoolDeclaringClass = CodeStream.getConstantPoolDeclaringClass(currentScope, codegenField, this.actualReceiverType, true /* implicit this */);", "+\t\t\t\t\tcodeStream.fieldAccess(Opcodes.OPC_getfield, codegenField, constantPoolDeclaringClass);", "-\t\t\tLocalVariableBinding localBinding = (LocalVariableBinding) this.codegenBinding;", "+\t\t\tLocalVariableBinding localBinding = (LocalVariableBinding) this.binding;", "-\t\t\tfieldStore(codeStream, (FieldBinding) this.codegenBinding, writeAccessor, valueRequired);", "+\t\t\tFieldBinding codegenField = ((FieldBinding) this.binding).original();", "+\t\t\tfieldStore(currentScope, codeStream, codegenField, writeAccessor, this.actualReceiverType, true /* implicit this*/, valueRequired);", "-\t\t\tLocalVariableBinding localBinding = (LocalVariableBinding) this.codegenBinding;", "+\t\t\tLocalVariableBinding localBinding = (LocalVariableBinding) this.binding;", "-\t\t\t\tif ((localBinding.type == TypeBinding.LONG) || (localBinding.type == TypeBinding.DOUBLE)) {", "-\t\t\t\t\tcodeStream.dup2();", "-\t\t\t\t} else {", "-\t\t\t\t\tcodeStream.dup();", "+\t\t\t\tswitch (localBinding.type.id) {", "+\t\t\t\t\tcase TypeIds.T_long :", "+\t\t\t\t\tcase TypeIds.T_double :", "+\t\t\t\t\t\tcodeStream.dup2();", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tdefault:", "+\t\t\t\t\t\tcodeStream.dup();", "+\t\t\t\t\t\tbreak;"]}], "num": 66848}