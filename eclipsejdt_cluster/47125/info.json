{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0a4d325a615f4d6e82db45aefeacf100", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "090a5416fba71e1843cc40d29c5d326f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/util/CompilationUnitSorter.java", "commitBeforeChange": "5ce69656376089b35c869f4300bbd8586809b01f", "commitAfterChange": "1e14a0887be410225f94861adfa68e4cba05f299", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t\t \t\tpublic DefaultJavaElementComparator()", "signatureAfterChange": " \t\t \t\tpublic DefaultJavaElementComparator()", "diff": ["-\t\t\tthis.staticTypeCategory = 1;", "-\t\t\tthis.staticFieldCategory = 2;", "-\t\t\tthis.staticInitializerCategory = 3;", "-\t\t\tthis.staticMethodCategory = 4;", "-\t\t\tthis.typeCategory = 5;", "-\t\t\tthis.fieldCategory = 6;", "-\t\t\tthis.initializerCategory = 7;", "-\t\t\tthis.constructorCategory = 8;", "-\t\t\tthis.methodCategory = 9;", "+\t\t\tthis.categories = new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9 };", "+\t\t\tthis.collator = Collator.getInstance();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d01720dcb5fe348219955546c362a11", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "738d445174809cd3e47edecba32fed0c50b92d25", "commitAfterChange": "6cdf72d00ed729352eb0cca9eba950cbdf34fc8f", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " private synchronized HashtableOfObject readCategoryTable(char[] categoryName, boolean readDocNumbers) throws IOException", "signatureAfterChange": " private synchronized HashtableOfObject readCategoryTable(char[] categoryName, boolean readDocNumbers) throws IOException", "diff": ["-\t\tthis.categoryTables = new HashtableOfObject(this.categoryOffsets.elementSize);", "+\t\tthis.categoryTables = new HashtableOfObject(3);", "+\t\t// cache the table as long as its not too big", "+\t\t// in practise, some tables can be greater than 500K when the contain more than 10K elements", "+\t\tthis.cachedCategoryName = categoryTable.elementSize < 10000 ? categoryName : null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "940d3734514d253e484d471bb2243c50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "738d445174809cd3e47edecba32fed0c50b92d25", "commitAfterChange": "6cdf72d00ed729352eb0cca9eba950cbdf34fc8f", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " synchronized void stopQuery()", "signatureAfterChange": " synchronized void stopQuery()", "diff": ["-\t\tthis.categoryTables = null;", "+\t\tif (this.categoryTables != null) {", "+\t\t\tif (this.cachedCategoryName == null) {", "+\t\t\t\tthis.categoryTables = null;", "+\t\t\t} else if (this.categoryTables.elementSize > 1) {", "+\t\t\t\tHashtableOfObject newTables = new HashtableOfObject(3);", "+\t\t\t\tnewTables.put(this.cachedCategoryName, this.categoryTables.get(this.cachedCategoryName));", "+\t\t\t\tthis.categoryTables = newTables;", "+\t\t\t}", "+\t\t}"]}], "num": 47125}