{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "674d5fb2f73d2a2906ff794eb7aa9fd0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2f1b66e3bcb8b02eb5c8216e277d4fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "5270f34deea951955a9cf260a036c733a8732c28", "commitAfterChange": "b4eb1372f2b3883ef0dc3c4e4e547a1b95d47532", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic static ISearchPattern createSearchPattern(String stringPattern, int searchFor, int limitTo, boolean isCaseSensitive)", "signatureAfterChange": " \tpublic static ISearchPattern createSearchPattern(String stringPattern, int searchFor, int limitTo, boolean isCaseSensitive)", "diff": ["-\t\tint matchMode;", "-\t\tif (stringPattern.indexOf('*') != -1 || stringPattern.indexOf('?') != -1) {", "-\t\t\tmatchMode = IJavaSearchConstants.PATTERN_MATCH;", "-\t\t} else {", "-\t\t\tmatchMode = IJavaSearchConstants.EXACT_MATCH;", "-\t\t}", "+\t\tint matchMode = stringPattern.indexOf('*') != -1 || stringPattern.indexOf('?') != -1", "+\t\t\t? SearchPattern.R_PATTERN_MATCH", "+\t\t\t: SearchPattern.R_EXACT_MATCH;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6fe1dc00b6c31701b0b6e9ddacb425b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "0e9405a9e49c7485808bf9ceeda288829b9a70e4", "commitAfterChange": "9780986f8f62312ec3af9f68bef8ca099c5a7fef", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public static ISearchPattern createSearchPattern(String stringPattern, int searchFor, int limitTo, boolean isCaseSensitive)", "signatureAfterChange": " public static ISearchPattern createSearchPattern(String stringPattern, int searchFor, int limitTo, boolean isCaseSensitive)", "diff": ["-", "-\treturn SearchPattern.createPattern(stringPattern, searchFor, limitTo, IJavaSearchConstants.PATTERN_MATCH, isCaseSensitive);", "+\tint matchMode;", "+\tif (stringPattern.indexOf('*') != -1 || stringPattern.indexOf('?') != -1) {", "+\t\tmatchMode = IJavaSearchConstants.PATTERN_MATCH;", "+\t} else {", "+\t\tmatchMode = IJavaSearchConstants.EXACT_MATCH;", "+\t}", "+\treturn SearchPattern.createPattern(stringPattern, searchFor, limitTo, matchMode, isCaseSensitive);"]}], "num": 44151}