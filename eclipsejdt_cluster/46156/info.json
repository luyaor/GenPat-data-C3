{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "866f18d464f9396985cc837a7230b29a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28def4231419c74b4c8c6ef61fe2bdf0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/IndexSummary.java", "commitBeforeChange": "34da8d24b2615f4b61dd942ff1ae7f24195e0b5d", "commitAfterChange": "6360f51ad31bd7f0133cab99d6e351bd852a5108", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public int getFirstBlockLocationForPrefix(char[] prefix)", "signatureAfterChange": " public int getFirstBlockLocationForPrefix(char[] prefix)", "diff": ["+\treturn getFirstBlockLocationForPrefix(prefix, true);", "+}", "-\t\tint compare = Util.startsWith(entry.word, prefix);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "926d3b8520a5c3f07de94689f3e6ee89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/src/org/eclipse/jdt/compiler/apt/tests/MessagerTests.java", "commitBeforeChange": "121da1ed9487cd06624131be60f7fed861a83829", "commitAfterChange": "65bcf10af454142ab48b1720e5cae843f9f8de26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate static String compareRegexLines(String actual, String[] expected)", "signatureAfterChange": " \t\tpublic void report(Diagnostic<? extends S> diagnostic)", "diff": ["-\t */", "-\tprivate static String compareRegexLines(String actual, String[] expected) {", "-\t\tString[] actualLines = actual.split(\"\\n\");", "-\t\tif (actualLines.length != expected.length) {", "-\t\t\treturn \"ERROR: expected \" + expected.length + \" lines but found \" + actualLines.length;", "-\t\tint i = 0;", "-\t\tfor (String pattern : expected) {", "-\t\t\tint iCR = actualLines[i].indexOf('\\r');", "-\t\t\tactualLines[i] = iCR > 0 ? actualLines[i].substring(0, iCR) : actualLines[i];", "-\t\t\tint iNL = actualLines[i].indexOf('\\n');", "-\t\t\tactualLines[i] = iNL > 0 ? actualLines[i].substring(0, iNL) : actualLines[i];", "-\t\t\tif (!Pattern.matches(pattern, actualLines[i++])) {", "-\t\t\t\t--i;", "-\t\t\t\treturn \"ERROR: mismatch at line \" + i + \": actual line was [\" + actualLines[i] + \"]\";", "+\t\tpublic void report(Diagnostic<? extends S> diagnostic) {", "+\t\t\tif (diagnostic.getKind() ==  Diagnostic.Kind.ERROR) {", "+\t\t\t\terrors++;", "-\t\treturn COMPARE_OK;"]}], "num": 46156}