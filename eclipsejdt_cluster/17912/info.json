{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4782d1f628b9903d23ebee453b4fa4da", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06ce1aba5c376f91cbc788021f94330a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionParser.java", "commitBeforeChange": "a8d7be43bfc161eacb8a6eeeebcd9b16942cb7cf", "commitAfterChange": "1bd799e9f2a3371ed41d12f976311c121fca3c8e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " protected void consumeFormalParameter()", "signatureAfterChange": " protected void consumeFormalParameter()", "diff": ["+\t\tif((!diet || dietInt != 0) && astPtr > -1) {", "+\t\t\tArgument argument = (Argument) astStack[astPtr];", "+\t\t\tif(argument.type == assistNode) {", "+\t\t\t\tisOrphanCompletionNode = true;", "+\t\t\t\tthis.restartRecovery\t= true;\t// force to restart in recovery mode", "+\t\t\t\tthis.lastIgnoredToken = -1;\t", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "071820802d580a25e539f7e0f0b03f42", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocSingleTypeReference.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tTypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tTypeBinding internalResolveType(Scope scope)", "diff": ["+\t\t\t\tif (this.resolvedType.problemId() == ProblemReasons.NonStaticReferenceInStaticContext) {", "+\t\t\t\t\tReferenceBinding closestMatch = ((ProblemReferenceBinding)this.resolvedType).closestMatch;", "+\t\t\t\t\tif (closestMatch != null && closestMatch.isTypeVariable()) {", "+\t\t\t\t\t\tthis.resolvedType = closestMatch; // ignore problem as we want report specific javadoc one instead", "+\t\t\t\t\t\treturn resolvedType;", "+\t\t\t\t\t}", "+\t\t\t\t}"]}], "num": 17912}