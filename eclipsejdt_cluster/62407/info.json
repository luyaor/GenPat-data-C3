{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "239e42cdec54fb1556438464aef11188", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4627e363a59e285ec522dabfb5ffaf8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "fe91ee17bfb6fb3a1a7389bf07cd1763820d964a", "commitAfterChange": "474617bc3bc2901e2b247e6006f51c81534af42a", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic IJavaElement getJavaElement()", "signatureAfterChange": "  \tpublic IJavaElement getJavaElement()", "diff": ["-\t\tif (this.isRecovered()) {", "-\t\t\ttry {", "-\t\t\t\tIPackageBinding packageBinding = getPackage();", "-\t\t\t\tif (packageBinding != null) {", "-\t\t\t\t\tfinal IJavaElement javaElement = packageBinding.getJavaElement();", "-\t\t\t\t\tif (javaElement != null && javaElement.getElementType() == IJavaElement.PACKAGE_FRAGMENT) {", "-\t\t\t\t\t\treturn new CompilationUnit((PackageFragment) javaElement, new String(this.binding.sourceName()), this.resolver.getWorkingCopyOwner()).getWorkingCopy(this.resolver.getWorkingCopyOwner(), null);", "-\t\t\t\t\t}", "+\t\tJavaElement element = getUnresolvedJavaElement();", "+\t\tif (element != null)", "+\t\t\treturn element.resolved(this.binding);", "+\t\tif (isRecovered()) {", "+\t\t\tIPackageBinding packageBinding = getPackage();", "+\t\t\tif (packageBinding != null) {", "+\t\t\t\tfinal IJavaElement javaElement = packageBinding.getJavaElement();", "+\t\t\t\tif (javaElement != null && javaElement.getElementType() == IJavaElement.PACKAGE_FRAGMENT) {", "+\t\t\t\t\t// best effort: we don't know if the recovered binding is a binary or source binding, so go with a compilation unit", "+\t\t\t\t\treturn ((PackageFragment) javaElement).getCompilationUnit(new String(this.binding.sourceName()) + SuffixConstants.SUFFIX_STRING_java);", "-\t\t\t} catch (JavaModelException e) {", "-\t\t\t\t//ignore", "-\t\t\t}\t\t\t", "+\t\t\t}", "-\t\tJavaElement element = getUnresolvedJavaElement();", "-\t\tif (element == null)", "-\t\t\treturn null;", "-\t\treturn element.resolved(this.binding);", "+\t\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e37d41a3a06aebe28d5a07f3ee678c33", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/RecoveredTypeBinding.java", "commitBeforeChange": "fe91ee17bfb6fb3a1a7389bf07cd1763820d964a", "commitAfterChange": "474617bc3bc2901e2b247e6006f51c81534af42a", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tpublic IJavaElement getJavaElement()", "signatureAfterChange": " \tpublic IJavaElement getJavaElement()", "diff": ["-\t\ttry {", "-\t\t\tIPackageBinding packageBinding = getPackage();", "-\t\t\tif (packageBinding != null) {", "-\t\t\t\tfinal IJavaElement javaElement = packageBinding.getJavaElement();", "-\t\t\t\tif (javaElement != null && javaElement.getElementType() == IJavaElement.PACKAGE_FRAGMENT) {", "-\t\t\t\t\treturn new CompilationUnit((PackageFragment) javaElement, this.getInternalName(), this.resolver.getWorkingCopyOwner()).getWorkingCopy(this.resolver.getWorkingCopyOwner(), null);", "-\t\t\t\t}", "+\t\tIPackageBinding packageBinding = getPackage();", "+\t\tif (packageBinding != null) {", "+\t\t\tfinal IJavaElement javaElement = packageBinding.getJavaElement();", "+\t\t\tif (javaElement != null && javaElement.getElementType() == IJavaElement.PACKAGE_FRAGMENT) {", "+\t\t\t\t// best effort: we don't know if the recovered binding is a binary or source binding, so go with a compilation unit", "+\t\t\t\treturn ((PackageFragment) javaElement).getCompilationUnit(getInternalName() + SuffixConstants.SUFFIX_STRING_java);", "-\t\t} catch (JavaModelException e) {", "-\t\t\t//ignore"]}], "num": 62407}