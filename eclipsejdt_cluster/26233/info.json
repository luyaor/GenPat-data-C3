{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d552d5dfd827967053b829f5ca01521f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fa4b6500c11902a29128a892fcafdb8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateImportOperation.java", "commitBeforeChange": "c0cfa9f664d75c79503ecc83f280f59badb8f337", "commitAfterChange": "02030da0528a8fcbd0cf47635fdec2fbb50668ef", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected ASTNode generateElementAST(ASTRewrite rewriter, IDocument document, ICompilationUnit cu) throws JavaModelException", "signatureAfterChange": " protected ASTNode generateElementAST(ASTRewrite rewriter, IDocument document, ICompilationUnit cu) throws JavaModelException", "diff": ["-\t// split import name into individual fragments", "-\tchar[][] charFragments = CharOperation.splitOn('.', this.importName.toCharArray());", "+\t// split import name into individual fragments, checking for on demand imports", "+\tboolean onDemand = this.importName.endsWith(\"*\"); //$NON-NLS-1$", "+\tchar[][] charFragments = CharOperation.splitOn('.', this.importName.toCharArray(), 0, onDemand ? this.importName.length()-2 : this.importName.length());", "-\t// check whether on demand", "-\tboolean onDemand;", "-\tif (charFragments[length-1].length == 1 && charFragments[length-1][0] == '*') {", "-\t\tonDemand = true;", "-\t\tlength--;", "-\t} else {", "-\t\tonDemand = false;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7d7d3dc9bc4cc8d46d27d6bb427e0b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateImportOperation.java", "commitBeforeChange": "bf0273f35fd80b9116145d3f2db1dec44bd9f2a0", "commitAfterChange": "09b80c5ae8d08eac28366eb29a3931cf5a303b0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected ASTNode generateElementAST(ASTRewrite rewriter, IDocument document, ICompilationUnit cu) throws JavaModelException", "signatureAfterChange": " protected ASTNode generateElementAST(ASTRewrite rewriter, IDocument document, ICompilationUnit cu) throws JavaModelException", "diff": ["-\tName name = ast.newName(new String[] {this.importName});", "+\t// split import name into individual fragments", "+\tchar[][] charFragments = CharOperation.splitOn('.', this.importName.toCharArray());", "+\tint length = charFragments.length;", "+\t// check whether on demand", "+\tboolean onDemand;", "+\tif (charFragments[length-1].length == 1 && charFragments[length-1][0] == '*') {", "+\t\tonDemand = true;", "+\t\tlength--;", "+\t} else {", "+\t\tonDemand = false;", "+\t}", "+\tString[] strFragments = new String[length];", "+\tfor (int i = 0; i < length; i++) {", "+\t\tstrFragments[i] = String.valueOf(charFragments[i]);", "+\t}", "+\tName name = ast.newName(strFragments);", "+\tif (onDemand) importDeclaration.setOnDemand(true);"]}], "num": 26233}