{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bb276ba82095113d853825779f900d58", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44d30dbe86649bdeb751f97638aed4d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "e0c80c2b16b54e5a1c86d6779d617fb326a5c618", "commitAfterChange": "9ca5fa129e003b71c76c933d9b76010e0a23b71b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": " \t \tpublic void resolve(BlockScope upperScope)", "diff": ["-", "+\t", "-\t\t\t\t// the type does not matter as long as it is not a base type", "-\t\t\t\tif (!upperScope.compilerOptions().inlineJsrBytecode) {", "-\t\t\t\t\tthis.returnAddressVariable =", "-\t\t\t\t\t\tnew LocalVariableBinding(TryStatement.SecretReturnName, upperScope.getJavaLangObject(), ClassFileConstants.AccDefault, false);", "+\t\t\t\tCompilerOptions options = upperScope.compilerOptions();", "+\t\t\t\tif (!options.inlineJsrBytecode) {", "+//\t\t\t\t\tif (options.noJSRBytecode) {", "+//\t\t\t\t\t\t// variable encoding the return site location", "+//\t\t\t\t\t\tthis.returnAddressVariable = new LocalVariableBinding(TryStatement.SecretReturnName, TypeBinding.INT, ClassFileConstants.AccDefault, false);", "+//\t\t\t\t\t} else {", "+\t\t\t\t\t\t// the type does not matter as long as it is not a base type", "+\t\t\t\t\t\tthis.returnAddressVariable = new LocalVariableBinding(TryStatement.SecretReturnName, upperScope.getJavaLangObject(), ClassFileConstants.AccDefault, false);", "+//\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3e21cbf55408bfd2cff050baca32dca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "d13c29854b213f0b9bf42c0b6fd84d7b06118971", "commitAfterChange": "aa09f996ba3976f6c56ffa1ab64f257431d65d06", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": " \t \tpublic void resolve(BlockScope upperScope)", "diff": ["-\t", "-\t\t\t\tCompilerOptions options = upperScope.compilerOptions();", "-\t\t\t\tif (!options.inlineJsrBytecode) {", "-//\t\t\t\t\tif (options.noJSRBytecode) {", "-//\t\t\t\t\t\t// variable encoding the return site location", "-//\t\t\t\t\t\tthis.returnAddressVariable = new LocalVariableBinding(TryStatement.SecretReturnName, TypeBinding.INT, ClassFileConstants.AccDefault, false);", "-//\t\t\t\t\t} else {", "-\t\t\t\t\t\t// the type does not matter as long as it is not a base type", "-\t\t\t\t\t\tthis.returnAddressVariable = new LocalVariableBinding(TryStatement.SecretReturnName, upperScope.getJavaLangObject(), ClassFileConstants.AccDefault, false);", "-//\t\t\t\t\t}", "+\t\t\t\t// the type does not matter as long as it is not a base type", "+\t\t\t\tif (!upperScope.compilerOptions().inlineJsrBytecode) {", "+\t\t\t\t\tthis.returnAddressVariable =", "+\t\t\t\t\t\tnew LocalVariableBinding(TryStatement.SecretReturnName, upperScope.getJavaLangObject(), ClassFileConstants.AccDefault, false);"]}], "num": 9568}