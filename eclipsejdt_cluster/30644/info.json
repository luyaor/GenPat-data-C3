{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f4f41658aa10bb1e247331c1f796ae0c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "557ec413fa1889e5ff7a406e7aad3ad8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "4043b8a88c35a2c1612858cff67743727f25247b", "commitAfterChange": "6b8da2bd2bb1367c9817dbe3821476ed638f0906", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " protected void matchReportReference(QualifiedTypeReference qTypeRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(QualifiedTypeReference qTypeRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\t\t\t\tint start = (int) ((positions[this.pattern.qualification == null ? lastIndex : 0]) >>> 32);", "+\t\t\t\t\t// index now depends on pattern type signature", "+\t\t\t\t\tint index = lastIndex;", "+\t\t\t\t\tif (this.pattern.qualification != null) {", "+\t\t\t\t\t\tif (this.pattern.typeSignatures != null) {", "+\t\t\t\t\t\t\tif (this.pattern.typeSignatures.length > 1) {", "+\t\t\t\t\t\t\t\tindex = lastIndex - (this.pattern.typeSignatures.length - 1);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tindex = lastIndex - this.pattern.segmentsSize;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tif (index < 0) index = 0;", "+\t\t\t\t\tint start = (int) ((positions[index]) >>> 32);", "-\t\t\t\t\tif (this.pattern != null && this.pattern.typeSignature != null && refBinding.isParameterizedType()) {", "+\t\t\t\t\tif (this.pattern != null && this.pattern.isParameterized() && refBinding.isParameterizedType()) {", "-\t\t\t\t\t\trefinedAccuracy = refineAccuracy(accuracy, parameterizedBinding, this.pattern.typeSignature, locator);", "+\t\t\t\t\t\trefinedAccuracy = refineAccuracy(accuracy, parameterizedBinding, this.pattern.typeArguments, locator);", "-\t\t\t\t\t\tif (this.pattern.shouldExtendSelection() && parameterizedBinding.arguments != null) {", "-\t\t\t\t\t\t\t// specific report accurate match for parameterized types", "-\t\t\t\t\t\t\tlocator.reportAccurateParameterizedTypeReference(qTypeRef, this.pattern.simpleName, element, refinedAccuracy);", "-\t\t\t\t\t\t\treturn;", "-\t\t\t\t\t\t}", "+\t\t\t\t\t\t// specific report accurate match for parameterized types", "+\t\t\t\t\t\tTypeReference[] typeArguments = qTypeRef instanceof ParameterizedQualifiedTypeReference ? ((ParameterizedQualifiedTypeReference) qTypeRef).typeArguments[lastIndex] : null;", "+\t\t\t\t\t\tlocator.reportAccurateParameterizedTypeReference(qTypeRef, this.pattern.simpleName, start, typeArguments, element, refinedAccuracy);", "+\t\t\t\t\t\treturn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9de9055998403fedf0dcb110c168465", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "4043b8a88c35a2c1612858cff67743727f25247b", "commitAfterChange": "6b8da2bd2bb1367c9817dbe3821476ed638f0906", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\tif (this.pattern.shouldExtendSelection()) {", "+\tif (this.pattern.isParameterized()) {", "-\t\t\t\t\tint start = (int) ((positions[this.pattern.qualification == null ? lastIndex : 0]) >>> 32);", "+\t\t\t\t\t// index now depends on pattern type signature", "+\t\t\t\t\tint index = lastIndex;", "+\t\t\t\t\tif (this.pattern.qualification != null) {", "+\t\t\t\t\t\tif (this.pattern.typeSignatures != null) {", "+\t\t\t\t\t\t\tif (this.pattern.typeSignatures.length > 1) {", "+\t\t\t\t\t\t\t\tindex = lastIndex - (this.pattern.typeSignatures.length - 1);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tindex = lastIndex - this.pattern.segmentsSize;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tif (index < 0) index = 0;", "+\t\t\t\t\tint start = (int) ((positions[index]) >>> 32);"]}], "num": 30644}