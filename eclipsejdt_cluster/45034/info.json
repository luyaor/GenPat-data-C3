{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0c5132cca3ac633e8464cf298de42abb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d0427ca82f4db40f88813b5adcdab5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "3eb54501d04c06d548e0703970c7c1e0fb48a24c", "commitAfterChange": "c56ed3bd74492c5179e95d29b48fda6c6cba2ca8", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 68, "signatureBeforeChange": " \tprivate int generateRuntimeAnnotations(final Annotation[] annotations, final long targetMask)", "signatureAfterChange": " \tprivate int generateRuntimeAnnotations(final Annotation[] annotations, final long targetMask)", "diff": ["-\t\t\tif (annotationMask != 0 && (annotationMask & targetMask) == 0) continue;", "+\t\t\tif (annotationMask != 0 && (annotationMask & targetMask) == 0) {", "+\t\t\t\tif (!jdk16packageInfoAnnotation(annotationMask, targetMask)) continue;", "+\t\t\t}", "-\t\t\t\tif (annotationMask != 0 && (annotationMask & targetMask) == 0) continue;", "+\t\t\t\tif (annotationMask != 0 && (annotationMask & targetMask) == 0) {", "+\t\t\t\t\tif (!jdk16packageInfoAnnotation(annotationMask, targetMask)) continue;", "+\t\t\t\t}", "-\t\t\t\tif (annotationMask != 0 && (annotationMask & targetMask) == 0) continue;", "+\t\t\t\tif (annotationMask != 0 && (annotationMask & targetMask) == 0) {", "+\t\t\t\t\tif (!jdk16packageInfoAnnotation(annotationMask, targetMask)) continue;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54cf1c371ed1944edb1282d23cd535bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "d469b28de67962080fcf567963cfa5517cd349da", "commitAfterChange": "20f9fdf8e5fe334d703ee621f62802a5f3f84198", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": " \t \tprivate int generateRuntimeAnnotationsForParameters(Argument[] arguments)", "signatureAfterChange": " \t \tprivate int generateRuntimeAnnotationsForParameters(Argument[] arguments)", "diff": ["+\t\t\t\t\tlong annotationMask = annotation.resolvedType != null ? annotation.resolvedType.getAnnotationTagBits() & TagBits.AnnotationTargetMASK : 0;", "+\t\t\t\t\tif (annotationMask != 0 && (annotationMask & TagBits.AnnotationForParameter) == 0) continue;", "+\t\t\t\t\t\t\tlong annotationMask = annotation.resolvedType != null ? annotation.resolvedType.getAnnotationTagBits() & TagBits.AnnotationTargetMASK : 0;", "+\t\t\t\t\t\t\tif (annotationMask != 0 && (annotationMask & TagBits.AnnotationForParameter) == 0) continue;", "+\t\t\t\t\t\t\tlong annotationMask = annotation.resolvedType != null ? annotation.resolvedType.getAnnotationTagBits() & TagBits.AnnotationTargetMASK : 0;", "+\t\t\t\t\t\t\tif (annotationMask != 0 && (annotationMask & TagBits.AnnotationForParameter) == 0) continue;"]}], "num": 45034}