{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "594715b17225e9d82cbbc1eaeb8fb022", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2167945c320bf0bb3e16527674351ebf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldReferencePattern.java", "commitBeforeChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "commitAfterChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r public int matchLevel(AstNode node, boolean resolve)", "signatureAfterChange": "\r public int matchLevel(AstNode node)", "diff": ["+ */\r", "+public int matchLevel(AstNode node) {\r", "+\tif (this.matches(node, false)) {\r", "+\t\tif (this.needsResolve \r", "+\t\t\t|| node instanceof NameReference) { // ensure it is a field\r", "+\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t} else {\r", "+\t\t\treturn TRUSTED_MATCH;\r", "+\t\t}\r", "+\t}\r", "+\treturn IMPOSSIBLE_MATCH;\r", "- */\r", "-public int matchLevel(AstNode node, boolean resolve) {\r", "-\tif (node instanceof FieldReference) {\r", "-\t\treturn this.matchLevel((FieldReference)node, resolve);\r", "-\t} else if (node instanceof NameReference) {\r", "-\t\treturn this.matchLevel((NameReference)node, resolve);\r", "-\t}\r", "-\treturn IMPOSSIBLE_MATCH;\r", "-}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6672759c4cae774905267d51cd927e16", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldReferencePattern.java", "commitBeforeChange": "7e5cc03e445550d3cbc10c611218c79332074276", "commitAfterChange": "c57706d05dc3654769cca2053ff9cb20fb0a6664", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r public int matchLevel(AstNode node, boolean resolve)", "signatureAfterChange": "\r public int matchLevel(AstNode node)", "diff": ["+ */\r", "+public int matchLevel(AstNode node) {\r", "+\tif (this.matches(node, false)) {\r", "+\t\tif (this.needsResolve \r", "+\t\t\t|| node instanceof NameReference) { // ensure it is a field\r", "+\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t} else {\r", "+\t\t\treturn TRUSTED_MATCH;\r", "+\t\t}\r", "+\t}\r", "+\treturn IMPOSSIBLE_MATCH;\r", "- */\r", "-public int matchLevel(AstNode node, boolean resolve) {\r", "-\tif (node instanceof FieldReference) {\r", "-\t\treturn this.matchLevel((FieldReference)node, resolve);\r", "-\t} else if (node instanceof NameReference) {\r", "-\t\treturn this.matchLevel((NameReference)node, resolve);\r", "-\t}\r", "-\treturn IMPOSSIBLE_MATCH;\r", "-}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad06a52aa710a4e899e9ff711f7ead6e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldReferencePattern.java", "commitBeforeChange": "46418d248f89a29f49a77d154cdbfa57c408b256", "commitAfterChange": "c85433e27f0fa74bfe8e06c38c1c02c51b5599d7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r public int matchLevel(AstNode node, boolean resolve)", "signatureAfterChange": "\r public int matchLevel(AstNode node)", "diff": ["+ */\r", "+public int matchLevel(AstNode node) {\r", "+\tif (this.matches(node, false)) {\r", "+\t\tif (this.needsResolve \r", "+\t\t\t|| node instanceof NameReference) { // ensure it is a field\r", "+\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t} else {\r", "+\t\t\treturn TRUSTED_MATCH;\r", "+\t\t}\r", "+\t}\r", "+\treturn IMPOSSIBLE_MATCH;\r", "- */\r", "-public int matchLevel(AstNode node, boolean resolve) {\r", "-\tif (node instanceof FieldReference) {\r", "-\t\treturn this.matchLevel((FieldReference)node, resolve);\r", "-\t} else if (node instanceof NameReference) {\r", "-\t\treturn this.matchLevel((NameReference)node, resolve);\r", "-\t}\r", "-\treturn IMPOSSIBLE_MATCH;\r", "-}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfc49510f080459c508d3022c6f407d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldReferencePattern.java", "commitBeforeChange": "a1b8b888d8c8c040023fcd2856f96f5ad6c69b3e", "commitAfterChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r public int matchLevel(AstNode node, boolean resolve)", "signatureAfterChange": "\r public int matchLevel(AstNode node)", "diff": ["+ */\r", "+public int matchLevel(AstNode node) {\r", "+\tif (this.matches(node, false)) {\r", "+\t\tif (this.needsResolve \r", "+\t\t\t|| node instanceof NameReference) { // ensure it is a field\r", "+\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t} else {\r", "+\t\t\treturn TRUSTED_MATCH;\r", "+\t\t}\r", "+\t}\r", "+\treturn IMPOSSIBLE_MATCH;\r", "- */\r", "-public int matchLevel(AstNode node, boolean resolve) {\r", "-\tif (node instanceof FieldReference) {\r", "-\t\treturn this.matchLevel((FieldReference)node, resolve);\r", "-\t} else if (node instanceof NameReference) {\r", "-\t\treturn this.matchLevel((NameReference)node, resolve);\r", "-\t}\r", "-\treturn IMPOSSIBLE_MATCH;\r", "-}\r"]}], "num": 19354}