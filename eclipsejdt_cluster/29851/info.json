{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8a710d6a0cfb44fa33f4c4a8149ab91a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0a598591eeb8071bfcfcf0e46c40b30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tprivate void complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "signatureAfterChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "diff": ["-\tprivate void complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation) {", "+\tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation) {", "-\t\t\tif(!isValidParent(astNodeParent, astNode, scope)) return;", "+\t\t\tif(!isValidParent(astNodeParent, astNode, scope)) return false;", "+\t\t\t\t\t\t\tthis.assistNodeIsEnum = true;", "-\t\t\t\t\t\tthis.assistNodeIsEnum = this.assistNodeIsClass;", "-\t", "+\t\t\t\t\t\tthis.assistNodeIsConstructor = ((CompletionOnSingleTypeReference) astNode).isConstructorType;", "+\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\t!this.assistNodeIsConstructor,", "+\t\t\t\t\t\t\t\tnull,", "-\t\t\t\t\t\t\t\t\t\tfindMemberTypes(this.completionToken, receiverType, scope, scope.enclosingSourceType(), false, new ObjectVector());", "+\t\t\t\t\t\t\t\t\t\tfindMemberTypes(", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.completionToken,", "+\t\t\t\t\t\t\t\t\t\t\t\treceiverType,", "+\t\t\t\t\t\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\t\t\t\t\t\tscope.enclosingSourceType(),", "+\t\t\t\t\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\t\t\t\t\tnew ObjectVector());", "-\t\t\t\t\t\t\t\tthis.assistNodeIsEnum = this.assistNodeIsClass;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.insideQualifiedReference = true;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "+\t\treturn true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5db9e4a1a732e47d1bce6339ac6f67b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "add2e09bc88bdef923e6e3e79386b09d19b0c6d4", "commitAfterChange": "9fa4ee2d52d7a35a0c57f8c4b875f0f155754f75", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tprivate void complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope)", "signatureAfterChange": "  \tprivate void complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope)", "diff": ["+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else if(astNode instanceof CompletionOnMarkerAnnotationName) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCompletionOnMarkerAnnotationName annot = (CompletionOnMarkerAnnotationName) astNode;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.assistNodeIsAnnotation = true;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(annot.type instanceof CompletionOnSingleTypeReference) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCompletionOnSingleTypeReference type = (CompletionOnSingleTypeReference) annot.type;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.completionToken = type.token;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSourceRange(type.sourceStart, type.sourceEnd);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindTypesAndPackages(this.completionToken, scope);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else if(annot.type instanceof CompletionOnQualifiedTypeReference) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCompletionOnQualifiedTypeReference type = (CompletionOnQualifiedTypeReference) annot.type;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.completionToken = type.completionIdentifier;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSourceRange(type.sourceStart, type.sourceEnd);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindTypesAndPackages(this.completionToken, scope);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}"]}], "num": 29851}