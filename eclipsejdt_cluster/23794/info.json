{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "61f7c7274d2d66ca75e060fae3fd1b52", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "458c37dce687bca454e5f6c2138f95f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "67766e5b27ea79987add5b8cee1657ec3cbfbedb", "commitAfterChange": "e6c002b5fc187b459093049d56b25a0df58b8d61", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": " \tpublic void test094()", "signatureAfterChange": " \tpublic void test094()", "diff": ["-\t\t\t\"public enum X extends java.lang.Enum {\\n\"; ", "+\t\t\t\"public final enum X extends java.lang.Enum {\\n\" + ", "+\t\t\t\"  \\n\" + ", "+\t\t\t\"  // Field descriptor #6 [LX;\\n\" + ", "+\t\t\t\"  private static final synthetic X[] ENUM$VALUES;\\n\" + ", "+\t\t\t\"  \\n\" + ", "+\t\t\t\"  // Method descriptor #8 (Ljava/lang/String;I)V\\n\" + ", "+\t\t\t\"  // Stack: 3, Locals: 3\\n\" + ", "+\t\t\t\"  private X(String arg, int arg);\\n\" + ", "+\t\t\t\"    0  aload_0 [this]\\n\" + ", "+\t\t\t\"    1  aload_1\\n\" + ", "+\t\t\t\"    2  iload_2\\n\" + ", "+\t\t\t\"    3  invokespecial java.lang.Enum(java.lang.String, int) [11]\\n\" + ", "+\t\t\t\"    6  return\\n\" + ", "+\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\"        [pc: 0, line: 1]\\n\" + ", "+\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 7] local: this index: 0 type: X\\n\" + ", "+\t\t\t\"  \\n\" + ", "+\t\t\t\"  // Method descriptor #17 ()[LX;\\n\" + ", "+\t\t\t\"  // Stack: 5, Locals: 3\\n\" + ", "+\t\t\t\"  public static final X[] values();\\n\" + ", "+\t\t\t\"     0  getstatic X.ENUM$VALUES : X[] [19]\\n\" + ", "+\t\t\t\"     3  dup\\n\" + ", "+\t\t\t\"     4  astore_0\\n\" + ", "+\t\t\t\"     5  iconst_0\\n\" + ", "+\t\t\t\"     6  aload_0\\n\" + ", "+\t\t\t\"     7  arraylength\\n\" + ", "+\t\t\t\"     8  dup\\n\" + ", "+\t\t\t\"     9  istore_1\\n\" + ", "+\t\t\t\"    10  anewarray X [2]\\n\" + ", "+\t\t\t\"    13  dup\\n\" + ", "+\t\t\t\"    14  astore_2\\n\" + ", "+\t\t\t\"    15  iconst_0\\n\" + ", "+\t\t\t\"    16  iload_1\\n\" + ", "+\t\t\t\"    17  invokestatic java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int) : void  [25]\\n\" + ", "+\t\t\t\"    20  aload_2\\n\" + ", "+\t\t\t\"    21  areturn\\n\" + ", "+\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\"        [pc: 0, line: 1]\\n\" + ", "+\t\t\t\"  \\n\" + ", "+\t\t\t\"  // Method descriptor #27 (Ljava/lang/String;)LX;\\n\" + ", "+\t\t\t\"  // Stack: 3, Locals: 4\\n\" + ", "+\t\t\t\"  public static final X valueOf(String arg);\\n\" + ", "+\t\t\t\"     0  getstatic X.ENUM$VALUES : X[] [19]\\n\" + ", "+\t\t\t\"     3  dup\\n\" + ", "+\t\t\t\"     4  astore_1\\n\" + ", "+\t\t\t\"     5  arraylength\\n\" + ", "+\t\t\t\"     6  istore_2\\n\" + ", "+\t\t\t\"     7  goto 27\\n\" + ", "+\t\t\t\"    10  aload_0\\n\" + ", "+\t\t\t\"    11  aload_1\\n\" + ", "+\t\t\t\"    12  iload_2\\n\" + ", "+\t\t\t\"    13  aaload\\n\" + ", "+\t\t\t\"    14  dup\\n\" + ", "+\t\t\t\"    15  astore_3\\n\" + ", "+\t\t\t\"    16  invokevirtual X.name() : java.lang.String  [31]\\n\" + ", "+\t\t\t\"    19  invokevirtual java.lang.String.equals(java.lang.Object) : boolean  [37]\\n\" + ", "+\t\t\t\"    22  ifeq 27\\n\" + ", "+\t\t\t\"    25  aload_3\\n\" + ", "+\t\t\t\"    26  areturn\\n\" + ", "+\t\t\t\"    27  iinc 2 -1\\n\" + ", "+\t\t\t\"    30  iload_2\\n\" + ", "+\t\t\t\"    31  ifge 10\\n\" + ", "+\t\t\t\"    34  new java.lang.IllegalArgumentException [39]\\n\" + ", "+\t\t\t\"    37  dup\\n\" + ", "+\t\t\t\"    38  aload_0\\n\" + ", "+\t\t\t\"    39  invokespecial java.lang.IllegalArgumentException(java.lang.String) [42]\\n\" + ", "+\t\t\t\"    42  athrow\\n\" + ", "+\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\"        [pc: 0, line: 1]\\n\" + ", "+\t\t\t\"}\"; "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e75c18fe3497d66ba9050faccc4f73e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AutoBoxingTest.java", "commitBeforeChange": "f966b547afe1ce6e5e600680e6f3625db1aa756f", "commitAfterChange": "9d0a82ef5a22888c642513ca181ce9549bbdb17a", "methodNumberBeforeChange": 168, "methodNumberAfterChange": 168, "signatureBeforeChange": " public void test165()", "signatureAfterChange": " public void test165()", "diff": ["-\tthis.runConformTest(", "+\tthis.runNegativeTest(", "-\t\t\"\");", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\"\tInteger i1 = 10 ;\\n\" + ", "+\t\t\"\t             ^^\\n\" + ", "+\t\t\"The expression of type int is boxed into Integer\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\"\ti1 = s;\\n\" + ", "+\t\t\"\t     ^\\n\" + ", "+\t\t\"Type mismatch: cannot convert from short to Integer\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\"\tswitch (i1)\\n\" + ", "+\t\t\"\t        ^^\\n\" + ", "+\t\t\"The expression of type Integer is unboxed into int\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\"\tcase s:\\n\" + ", "+\t\t\"\t     ^\\n\" + ", "+\t\t\"Type mismatch: cannot convert from short to Integer\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. WARNING in X.java (at line 12)\\n\" + ", "+\t\t\"\tInteger i2 = 10 ;\\n\" + ", "+\t\t\"\t             ^^\\n\" + ", "+\t\t\"The expression of type int is boxed into Integer\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"6. ERROR in X.java (at line 14)\\n\" + ", "+\t\t\"\ti2 = b;\\n\" + ", "+\t\t\"\t     ^\\n\" + ", "+\t\t\"Type mismatch: cannot convert from byte to Integer\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"7. WARNING in X.java (at line 15)\\n\" + ", "+\t\t\"\tswitch (i2)\\n\" + ", "+\t\t\"\t        ^^\\n\" + ", "+\t\t\"The expression of type Integer is unboxed into int\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"8. ERROR in X.java (at line 17)\\n\" + ", "+\t\t\"\tcase b:\\n\" + ", "+\t\t\"\t     ^\\n\" + ", "+\t\t\"Type mismatch: cannot convert from byte to Integer\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"9. WARNING in X.java (at line 21)\\n\" + ", "+\t\t\"\tInteger i3 = 10 ;\\n\" + ", "+\t\t\"\t             ^^\\n\" + ", "+\t\t\"The expression of type int is boxed into Integer\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"10. ERROR in X.java (at line 23)\\n\" + ", "+\t\t\"\ti3 = c;\\n\" + ", "+\t\t\"\t     ^\\n\" + ", "+\t\t\"Type mismatch: cannot convert from char to Integer\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"11. WARNING in X.java (at line 24)\\n\" + ", "+\t\t\"\tswitch (i3)\\n\" + ", "+\t\t\"\t        ^^\\n\" + ", "+\t\t\"The expression of type Integer is unboxed into int\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"12. ERROR in X.java (at line 26)\\n\" + ", "+\t\t\"\tcase c:\\n\" + ", "+\t\t\"\t     ^\\n\" + ", "+\t\t\"Type mismatch: cannot convert from char to Integer\\n\" + ", "+\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0da6f034a5af384c08ff83f77d6a7dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JSR308SpecSnippetTests.java", "commitBeforeChange": "7089fcfd703b096f125599a900905c00e15535fa", "commitAfterChange": "ef77db37669242a4bac152127ea8ae67d10be39c", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic void test028() throws Exception", "signatureAfterChange": " \tpublic void test028() throws Exception", "diff": ["-\tpublic void test028() throws Exception { // // WILL FAIL WHEN https://bugs.eclipse.org/bugs/show_bug.cgi?id=415397 IS FIXED.", "+\tpublic void test028() throws Exception {", "+\t\t// javac b100", "+\t\t// On the type declaration:", "+\t\t//  RuntimeInvisibleTypeAnnotations:", "+\t\t//   0: #9(): CLASS_TYPE_PARAMETER, param_index=0", "+\t\t// On the method:", "+\t    //  RuntimeInvisibleTypeAnnotations:", "+\t    //   0: #9(): METHOD_TYPE_PARAMETER, param_index=0", "+\t\t// On the field:", "+\t\t//  RuntimeInvisibleTypeAnnotations:", "+\t\t//   0: #9(): FIELD, location=[TYPE_ARGUMENT(0)]", "+\t\t\t\t\"// Compiled from X.java (version 1.8 : 52.0, super bit)\\n\" + ", "+\t\t\t\t\"// Signature: <T:Ljava/lang/Object;>Ljava/lang/Object;\\n\" + ", "+\t\t\t\t\"class X {\\n\" + ", "+\t\t\t\t\"  Constant pool:\\n\" + ", "+\t\t\t\t\"    constant #1 class: #2 X\\n\" + ", "+\t\t\t\t\"    constant #2 utf8: \\\"X\\\"\\n\" + ", "+\t\t\t\t\"    constant #3 class: #4 java/lang/Object\\n\" + ", "+\t\t\t\t\"    constant #4 utf8: \\\"java/lang/Object\\\"\\n\" + ", "+\t\t\t\t\"    constant #5 utf8: \\\"l\\\"\\n\" + ", "+\t\t\t\t\"    constant #6 utf8: \\\"Ljava/util/List;\\\"\\n\" + ", "+\t\t\t\t\"    constant #7 utf8: \\\"Signature\\\"\\n\" + ", "+\t\t\t\t\"    constant #8 utf8: \\\"Ljava/util/List<*>;\\\"\\n\" + ", "+\t\t\t\t\"    constant #9 utf8: \\\"RuntimeInvisibleTypeAnnotations\\\"\\n\" + ", "+\t\t\t\t\"    constant #10 utf8: \\\"LNonNull;\\\"\\n\" + ", "+\t\t\t\t\"    constant #11 utf8: \\\"<init>\\\"\\n\" + ", "+\t\t\t\t\"    constant #12 utf8: \\\"()V\\\"\\n\" + ", "+\t\t\t\t\"    constant #13 utf8: \\\"Code\\\"\\n\" + ", "+\t\t\t\t\"    constant #14 method_ref: #3.#15 java/lang/Object.<init> ()V\\n\" + ", "+\t\t\t\t\"    constant #15 name_and_type: #11.#12 <init> ()V\\n\" + ", "+\t\t\t\t\"    constant #16 utf8: \\\"LineNumberTable\\\"\\n\" + ", "+\t\t\t\t\"    constant #17 utf8: \\\"LocalVariableTable\\\"\\n\" + ", "+\t\t\t\t\"    constant #18 utf8: \\\"this\\\"\\n\" + ", "+\t\t\t\t\"    constant #19 utf8: \\\"LX;\\\"\\n\" + ", "+\t\t\t\t\"    constant #20 utf8: \\\"LocalVariableTypeTable\\\"\\n\" + ", "+\t\t\t\t\"    constant #21 utf8: \\\"LX<TT;>;\\\"\\n\" + ", "+\t\t\t\t\"    constant #22 utf8: \\\"foo\\\"\\n\" + ", "+\t\t\t\t\"    constant #23 utf8: \\\"<K:Ljava/lang/Object;>()V\\\"\\n\" + ", "+\t\t\t\t\"    constant #24 utf8: \\\"SourceFile\\\"\\n\" + ", "+\t\t\t\t\"    constant #25 utf8: \\\"X.java\\\"\\n\" + ", "+\t\t\t\t\"    constant #26 utf8: \\\"<T:Ljava/lang/Object;>Ljava/lang/Object;\\\"\\n\" + ", "+\t\t\t\t\"  \\n\" + ", "+\t\t\t\t\"  // Field descriptor #6 Ljava/util/List;\\n\" + ", "+\t\t\t\t\"  // Signature: Ljava/util/List<*>;\\n\" + ", "+\t\t\t\t\"  java.util.List l;\\n\" + ", "-\t\t\t\t\"      #23 @NonNull(\\n\" + ", "+\t\t\t\t\"      #10 @NonNull(\\n\" + ", "+\t\t\t\t\"        target type = 0x13 FIELD\\n\" + ", "+\t\t\t\t\"        location = [TYPE_ARGUMENT(0)]\\n\" + ", "+\t\t\t\t\"      )\\n\" + ", "+\t\t\t\t\"  \\n\" + ", "+\t\t\t\t\"  // Method descriptor #12 ()V\\n\" + ", "+\t\t\t\t\"  // Stack: 1, Locals: 1\\n\" + ", "+\t\t\t\t\"  X();\\n\" + ", "+\t\t\t\t\"    0  aload_0 [this]\\n\" + ", "+\t\t\t\t\"    1  invokespecial java.lang.Object() [14]\\n\" + ", "+\t\t\t\t\"    4  return\\n\" + ", "+\t\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\t\"        [pc: 0, line: 6]\\n\" + ", "+\t\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X\\n\" + ", "+\t\t\t\t\"      Local variable type table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X<T>\\n\" + ", "+\t\t\t\t\"  \\n\" + ", "+\t\t\t\t\"  // Method descriptor #12 ()V\\n\" + ", "+\t\t\t\t\"  // Signature: <K:Ljava/lang/Object;>()V\\n\" + ", "+\t\t\t\t\"  // Stack: 0, Locals: 1\\n\" + ", "+\t\t\t\t\"  void foo();\\n\" + ", "+\t\t\t\t\"    0  return\\n\" + ", "+\t\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\t\"        [pc: 0, line: 7]\\n\" + ", "+\t\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 1] local: this index: 0 type: X\\n\" + ", "+\t\t\t\t\"      Local variable type table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 1] local: this index: 0 type: X<T>\\n\" + ", "+\t\t\t\t\"    RuntimeInvisibleTypeAnnotations: \\n\" + ", "+\t\t\t\t\"      #10 @NonNull(\\n\" + ", "-\t\t\t\t\"    #23 @NonNull(\\n\" + ", "+\t\t\t\t\"    #10 @NonNull(\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4740519ac435f86d069982f99ab25d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/InnerEmulationTest.java", "commitBeforeChange": "33fe687f9742cf59d8c34585b372a06d8716fd96", "commitAfterChange": "c8352169d5ab78913503c9b071086020edbb98df", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 131, "signatureBeforeChange": " public void test135()", "signatureAfterChange": " public void test135()", "diff": ["+\t\t\t\"p/X.java\",", "+\t\t\t\"package p;\\n\" +", "+\t\t\t\"import p.A;\\n\" + ", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"\t\\n\" + ", "+\t\t\t\"\tvoid foo(Object o, Object [] os) {\\n\" + ", "+\t\t\t\"\t\tA.M2.MM1 mm1 = (A.M2.MM1) o;\\n\" + ", "+\t\t\t\"\t\tA.M2.MM1[] mm1s = (A.M2.MM1[]) os;\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\tprivate interface Outer {\\n\" + ", "+\t\t\t\"\t\tinterface Inner {\\n\" + ", "+\t\t\t\"\t\t\tString variable = \\\"my testing\\\";\\n\" + ", "+\t\t\t\"\t\t}\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\tpublic static void main(String[] args) {\\n\" + ", "+\t\t\t\"\t\tSystem.out.println(Outer.Inner.variable);\\n\" + ", "+\t\t\t\"\t\tZork z;\\n\" +", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\", // =================,", "+\t\t\t\"p/A.java\",", "+\t\t\t\"package p;\\n\" +", "+\t\t\t\"/** @deprecated */\\n\" +", "+\t\t\t\"public class A {\\n\" + ", "+\t\t\t\"\tpublic class M1 {\\n\" +", "+\t\t\t\"\t\tpublic class MM1 {\\n\" +", "+\t\t\t\"\t\t}\\n\" +", "+\t\t\t\"\t}\\n\" +", "+\t\t\t\"\tpublic class M2 extends M1 {\\n\" +", "+\t\t\t\"\t}\\n\" +", "+\t\t\t\"}\", // =================,", "+\t\t}, ", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in p\\\\X.java (at line 2)\\n\" + ", "+\t\t\"\timport p.A;\\n\" + ", "+\t\t\"\t       ^^^\\n\" + ", "+\t\t\"The type A is deprecated\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. WARNING in p\\\\X.java (at line 6)\\n\" + ", "+\t\t\"\tA.M2.MM1 mm1 = (A.M2.MM1) o;\\n\" + ", "+\t\t\"\t^^^^^^^^\\n\" + ", "+\t\t\"The type A is deprecated\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. WARNING in p\\\\X.java (at line 6)\\n\" + ", "+\t\t\"\tA.M2.MM1 mm1 = (A.M2.MM1) o;\\n\" + ", "+\t\t\"\t^^^^^^^^\\n\" + ", "+\t\t\"The type A.M2 is deprecated\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. WARNING in p\\\\X.java (at line 6)\\n\" + ", "+\t\t\"\tA.M2.MM1 mm1 = (A.M2.MM1) o;\\n\" + ", "+\t\t\"\t^^^^^^^^\\n\" + ", "+\t\t\"The type A.M1.MM1 is deprecated\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. WARNING in p\\\\X.java (at line 6)\\n\" + ", "+\t\t\"\tA.M2.MM1 mm1 = (A.M2.MM1) o;\\n\" + ", "+\t\t\"\t                ^^^^^^^^\\n\" + ", "+\t\t\"The type A.M1.MM1 is deprecated\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"6. WARNING in p\\\\X.java (at line 7)\\n\" + ", "+\t\t\"\tA.M2.MM1[] mm1s = (A.M2.MM1[]) os;\\n\" + ", "+\t\t\"\t^^^^^^^^\\n\" + ", "+\t\t\"The type A is deprecated\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"7. WARNING in p\\\\X.java (at line 7)\\n\" + ", "+\t\t\"\tA.M2.MM1[] mm1s = (A.M2.MM1[]) os;\\n\" + ", "+\t\t\"\t^^^^^^^^\\n\" + ", "+\t\t\"The type A.M2 is deprecated\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"8. WARNING in p\\\\X.java (at line 7)\\n\" + ", "+\t\t\"\tA.M2.MM1[] mm1s = (A.M2.MM1[]) os;\\n\" + ", "+\t\t\"\t^^^^^^^^\\n\" + ", "+\t\t\"The type A.M1.MM1 is deprecated\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"9. WARNING in p\\\\X.java (at line 7)\\n\" + ", "+\t\t\"\tA.M2.MM1[] mm1s = (A.M2.MM1[]) os;\\n\" + ", "+\t\t\"\t                   ^^^^^^^^\\n\" + ", "+\t\t\"The type A is deprecated\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"10. WARNING in p\\\\X.java (at line 7)\\n\" + ", "+\t\t\"\tA.M2.MM1[] mm1s = (A.M2.MM1[]) os;\\n\" + ", "+\t\t\"\t                   ^^^^^^^^\\n\" + ", "+\t\t\"The type A.M2 is deprecated\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"11. WARNING in p\\\\X.java (at line 7)\\n\" + ", "+\t\t\"\tA.M2.MM1[] mm1s = (A.M2.MM1[]) os;\\n\" + ", "+\t\t\"\t                   ^^^^^^^^\\n\" + ", "+\t\t\"The type A.M1.MM1 is deprecated\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"12. WARNING in p\\\\X.java (at line 9)\\n\" + ", "+\t\t\"\tprivate interface Outer {\\n\" + ", "+\t\t\"\t                  ^^^^^\\n\" + ", "+\t\t\"The type X.Outer is never used locally\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"13. ERROR in p\\\\X.java (at line 16)\\n\" + ", "+\t\t\"\tZork z;\\n\" + ", "+\t\t\"\t^^^^\\n\" + ", "+\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\"----------\\n\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d52c04ef768c87a2988dc8dc2b3752d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "750aa30159270a8e5e3dda43d0a97cfb8878627d", "commitAfterChange": "f8c4bd6d317c7bd673dbcf053ccf33d3004de38a", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": " \tpublic void _test091()", "signatureAfterChange": " \tpublic void test091()", "diff": ["-\tpublic void _test091() {", "+\tpublic void test091() {", "-\t\t\t\"should have a nameclash issue ?\"", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in DataSet.java (at line 4)\\n\" + ", "+\t\t\t\"\tclass DataSet<T extends Number> implements List, Iterator, Serializable {\\n\" + ", "+\t\t\t\"\t      ^^^^^^^\\n\" + ", "+\t\t\t\"The type DataSet<T> must implement the inherited abstract method List.toArray(Object[])\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in DataSet.java (at line 4)\\n\" + ", "+\t\t\t\"\tclass DataSet<T extends Number> implements List, Iterator, Serializable {\\n\" + ", "+\t\t\t\"\t      ^^^^^^^\\n\" + ", "+\t\t\t\"The serializable class DataSet does not declare a static final serialVersionUID field of type long\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in DataSet.java (at line 4)\\n\" + ", "+\t\t\t\"\tclass DataSet<T extends Number> implements List, Iterator, Serializable {\\n\" + ", "+\t\t\t\"\t                                           ^^^^\\n\" + ", "+\t\t\t\"List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. WARNING in DataSet.java (at line 4)\\n\" + ", "+\t\t\t\"\tclass DataSet<T extends Number> implements List, Iterator, Serializable {\\n\" + ", "+\t\t\t\"\t                                                 ^^^^^^^^\\n\" + ", "+\t\t\t\"Iterator is a raw type. References to generic type Iterator<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. ERROR in DataSet.java (at line 6)\\n\" + ", "+\t\t\t\"\tpublic <S> S[] toArray(S[] s) {\\n\" + ", "+\t\t\t\"\t               ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Name clash: The method toArray(S[]) of type DataSet<T> has the same erasure as toArray(T[]) of type List<E> but does not override it\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. ERROR in DataSet.java (at line 6)\\n\" + ", "+\t\t\t\"\tpublic <S> S[] toArray(S[] s) {\\n\" + ", "+\t\t\t\"\t               ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Name clash: The method toArray(S[]) of type DataSet<T> has the same erasure as toArray(T[]) of type Collection<E> but does not override it\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"7. WARNING in DataSet.java (at line 12)\\n\" + ", "+\t\t\t\"\tpublic boolean addAll(Collection c) {\treturn false; }\\n\" + ", "+\t\t\t\"\t                      ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Collection is a raw type. References to generic type Collection<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"8. WARNING in DataSet.java (at line 13)\\n\" + ", "+\t\t\t\"\tpublic boolean addAll(int index, Collection c) {\treturn false; }\\n\" + ", "+\t\t\t\"\t                                 ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Collection is a raw type. References to generic type Collection<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"9. WARNING in DataSet.java (at line 16)\\n\" + ", "+\t\t\t\"\tpublic boolean containsAll(Collection c) { return false; }\\n\" + ", "+\t\t\t\"\t                           ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Collection is a raw type. References to generic type Collection<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"10. WARNING in DataSet.java (at line 20)\\n\" + ", "+\t\t\t\"\tpublic Iterator iterator() {\treturn null; }\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^\\n\" + ", "+\t\t\t\"Iterator is a raw type. References to generic type Iterator<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"11. WARNING in DataSet.java (at line 22)\\n\" + ", "+\t\t\t\"\tpublic ListIterator listIterator() {\treturn null; }\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"ListIterator is a raw type. References to generic type ListIterator<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"12. WARNING in DataSet.java (at line 23)\\n\" + ", "+\t\t\t\"\tpublic ListIterator listIterator(int index) {\treturn null; }\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"ListIterator is a raw type. References to generic type ListIterator<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"13. WARNING in DataSet.java (at line 26)\\n\" + ", "+\t\t\t\"\tpublic boolean removeAll(Collection c) {\treturn false; }\\n\" + ", "+\t\t\t\"\t                         ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Collection is a raw type. References to generic type Collection<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"14. WARNING in DataSet.java (at line 27)\\n\" + ", "+\t\t\t\"\tpublic boolean retainAll(Collection c) {\treturn false; }\\n\" + ", "+\t\t\t\"\t                         ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Collection is a raw type. References to generic type Collection<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"15. WARNING in DataSet.java (at line 30)\\n\" + ", "+\t\t\t\"\tpublic List subList(int fromIndex, int toIndex) {\treturn null; }\\n\" + ", "+\t\t\t\"\t       ^^^^\\n\" + ", "+\t\t\t\"List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\""]}], "num": 23794}