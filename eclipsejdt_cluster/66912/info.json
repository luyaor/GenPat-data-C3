{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0ddfdf9ac3b9413e3ba7cc58f4bb6bc0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fc3f66f0e17ce9feee7ad4c7b9ac385", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionOnArgumentName.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic String toString(int tab)", "signatureAfterChange": " \t \tpublic StringBuffer print(int indent, StringBuffer output)", "diff": ["+\t", "+\tpublic StringBuffer print(int indent, StringBuffer output) {", "+\t\t", "+\t\tprintIndent(indent, output);", "+\t\toutput.append(\"<SelectionOnArgumentName:\"); //$NON-NLS-1$", "+\t\tif (type != null) type.print(0, output).append(' ');", "+\t\toutput.append(name);", "+\t\tif (initialization != null) {", "+\t\t\toutput.append(\" = \");//$NON-NLS-1$", "+\t\t\tinitialization.printExpression(0, output); ", "+\t\t}", "+\t\treturn output.append('>');", "+\t}", "-\t", "-\tpublic String toString(int tab) {", "-\t\tString s = tabString(tab);", "-\t\ts += \"<SelectionOnArgumentName:\"; //$NON-NLS-1$", "-\t\tif (type != null) s += type.toString() + \" \"; //$NON-NLS-1$", "-\t\ts += new String(name());", "-\t\tif (initialization != null) s += \" = \" + initialization.toStringExpression(); //$NON-NLS-1$", "-\t\ts += \">\"; //$NON-NLS-1$", "-\t\treturn s;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b66458509480093eac68b9f8e7889af0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/HierarchyScope.java", "commitBeforeChange": "917b34c1f7a37af6e7b13390e833b19783e10d19", "commitAfterChange": "2a40159dff47fb0e9026a9eb6e050f6d14cc5873", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \tprivate void buildResourceVector() throws JavaModelException", "signatureAfterChange": "\r \tprivate void buildResourceVector() throws JavaModelException", "diff": ["+\t\tIWorkspaceRoot workspaceRoot = ResourcesPlugin.getWorkspace().getRoot();\r", "+\t\t\t\tObject target = JavaModel.getTarget(workspaceRoot, jar.getPath(), true);\r", "-\t\t\t\tZipFile zipFile = null;\r", "-\t\t\t\ttry {\r", "-\t\t\t\t\tzipFile = jar.getJar();\r", "-\t\t\t\t\tzipFileName = zipFile.getName();\r", "-\t\t\t\t} catch (CoreException e) {\r", "-\t\t\t\t\tthrow new JavaModelException(e);\r", "-\t\t\t\t} finally {\r", "-\t\t\t\t\tif (zipFile != null) {\r", "-\t\t\t\t\t\ttry {\r", "-\t\t\t\t\t\t\tzipFile.close();\r", "-\t\t\t\t\t\t} catch (IOException e) {\r", "-\t\t\t\t\t\t\t// ignore \r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t}\r", "+\t\t\t\tif (target instanceof IFile) {\r", "+\t\t\t\t\tzipFileName = ((IFile)target).getLocation().toOSString();\r", "+\t\t\t\t} else if (target instanceof File) {\r", "+\t\t\t\t\tzipFileName = ((File)target).getPath();\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\tcontinue; // unknown target\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c276854e6bd039d613797624a2b7182f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 172, "signatureBeforeChange": " protected File createFolder(File parent, String name)", "signatureAfterChange": " public void testRemoveExternalLibFolder4() throws CoreException", "diff": ["-protected File createFolder(File parent, String name) {", "-\tFile file = new File(parent, name);", "-\tfile.mkdirs();", "-\treturn file;", "-}", "+ */", "+public void testRemoveExternalLibFolder4() throws CoreException {", "+\ttry {", "+\t\tsimulateExitRestart();", "+\t\tcreateExternalFolder(\"externalLib\");", "+\t\tIJavaProject p = createJavaProject(\"P\", new String[0], new String[] {getExternalFolderPath(\"externalLib\")}, \"\");", "+\t\twaitForAutoBuild();", "+\t\tdeleteExternalFolder(\"externalLib\");", "+\t\trefresh(p);", "+\t\tassertMarkers(", "+\t\t\t\"Unexpected markers\", ", "+\t\t\t\"Project \\'P\\' is missing required library: \\'\"+ getExternalPath() + \"externalLib\\'\",", "+\t\t\tp);", "+\t} finally {", "+\t\tdeleteExternalFolder(\"externalLib\");", "+\t\tdeleteProject(\"P\");", "+\t}", "+}"]}], "num": 66912}