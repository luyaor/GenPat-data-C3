{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a8cfe9bebebcdfbb3082f1e43daee063", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12e9783dab5e9fb61ea61aaf1db0881b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " void cachePartsFrom(IBinaryType binaryType, boolean needFieldsAndMethods)", "signatureAfterChange": " void cachePartsFrom(IBinaryType binaryType, boolean needFieldsAndMethods)", "diff": ["-\t\t\t\tthis.memberTypes[i] = environment.getTypeFromConstantPoolName(memberTypeStructures[i].getName(), 0, -1, false);", "+\t\t\t\tthis.memberTypes[i] = environment.getTypeFromConstantPoolName(memberTypeStructures[i].getName(), 0, -1, false, null /* could not be missing */);", "+\t", "+\tchar[][][] missingTypeNames = binaryType.getMissingTypeNames();\t", "-\t\t\tthis.superclass = environment.getTypeFromConstantPoolName(superclassName, 0, -1, false);", "+\t\t\tthis.superclass = environment.getTypeFromConstantPoolName(superclassName, 0, -1, false, missingTypeNames);", "-\t\t\t\t\tthis.superInterfaces[i] = environment.getTypeFromConstantPoolName(interfaceNames[i], 0, -1, false);", "+\t\t\t\t\tthis.superInterfaces[i] = environment.getTypeFromConstantPoolName(interfaceNames[i], 0, -1, false, missingTypeNames);", "-\t\t\tthis.typeVariables = createTypeVariables(wrapper, true);", "+\t\t\tthis.typeVariables = createTypeVariables(wrapper, true, missingTypeNames);", "-\t\tthis.superclass = (ReferenceBinding) environment.getTypeFromTypeSignature(wrapper, Binding.NO_TYPE_VARIABLES, this);", "+\t\tthis.superclass = (ReferenceBinding) environment.getTypeFromTypeSignature(wrapper, Binding.NO_TYPE_VARIABLES, this, missingTypeNames);", "-\t\t\t\ttypes.add(environment.getTypeFromTypeSignature(wrapper, Binding.NO_TYPE_VARIABLES, this));", "+\t\t\t\ttypes.add(environment.getTypeFromTypeSignature(wrapper, Binding.NO_TYPE_VARIABLES, this, missingTypeNames));", "-\t\tcreateFields(binaryType.getFields(), sourceLevel);", "-\t\tcreateMethods(binaryType.getMethods(), sourceLevel);", "+\t\tcreateFields(binaryType.getFields(), sourceLevel, missingTypeNames);", "+\t\tcreateMethods(binaryType.getMethods(), sourceLevel, missingTypeNames);", "-\t\tsetAnnotations(createAnnotations(binaryType.getAnnotations(), this.environment));\t", "+\t\tsetAnnotations(createAnnotations(binaryType.getAnnotations(), this.environment, missingTypeNames));\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20a8f4a50559ff8b8fdd33b22e19e751", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " void cachePartsFrom(IBinaryType binaryType, boolean needFieldsAndMethods)", "signatureAfterChange": " void cachePartsFrom(IBinaryType binaryType, boolean needFieldsAndMethods)", "diff": ["-\tthis.typeVariables = NoTypeVariables;", "-\tthis.superInterfaces = NoSuperInterfaces;", "+\tthis.typeVariables = Binding.NO_TYPE_VARIABLES;", "+\tthis.superInterfaces = Binding.NO_SUPERINTERFACES;", "-\tthis.memberTypes = NoMemberTypes;", "+\tthis.memberTypes = Binding.NO_MEMBER_TYPES;", "-\t\t\tthis.tagBits |= \tHasUnresolvedMemberTypes;", "+\t\t\tthis.tagBits |= \tTagBits.HasUnresolvedMemberTypes;", "-\t\t\tthis.tagBits |= \tHasUnresolvedSuperclass;", "+\t\t\tthis.tagBits |= \tTagBits.HasUnresolvedSuperclass;", "-\t\tthis.superInterfaces = NoSuperInterfaces;", "+\t\tthis.superInterfaces = Binding.NO_SUPERINTERFACES;", "-\t\t\t\tthis.tagBits |= \tHasUnresolvedSuperinterfaces;", "+\t\t\t\tthis.tagBits |= \tTagBits.HasUnresolvedSuperinterfaces;", "-\t\t\tthis.tagBits |=  HasUnresolvedTypeVariables;", "+\t\t\tthis.tagBits |=  TagBits.HasUnresolvedTypeVariables;", "-\t\tthis.superclass = (ReferenceBinding) environment.getTypeFromTypeSignature(wrapper, NoTypeVariables, this);", "-\t\tthis.tagBits |= \tHasUnresolvedSuperclass;", "+\t\tthis.superclass = (ReferenceBinding) environment.getTypeFromTypeSignature(wrapper, Binding.NO_TYPE_VARIABLES, this);", "+\t\tthis.tagBits |= \tTagBits.HasUnresolvedSuperclass;", "-\t\tthis.superInterfaces = NoSuperInterfaces;", "+\t\tthis.superInterfaces = Binding.NO_SUPERINTERFACES;", "-\t\t\t\ttypes.add(environment.getTypeFromTypeSignature(wrapper, NoTypeVariables, this));", "+\t\t\t\ttypes.add(environment.getTypeFromTypeSignature(wrapper, Binding.NO_TYPE_VARIABLES, this));", "-\t\t\tthis.tagBits |= \tHasUnresolvedSuperinterfaces;", "+\t\t\tthis.tagBits |= \tTagBits.HasUnresolvedSuperinterfaces;", "-\t\tthis.fields = NoFields;", "-\t\tthis.methods = NoMethods;", "+\t\tthis.fields = Binding.NO_FIELDS;", "+\t\tthis.methods = Binding.NO_METHODS;"]}], "num": 33643}