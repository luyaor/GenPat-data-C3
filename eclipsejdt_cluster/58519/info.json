{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2e4100b7b3a30be1a2d0ea07a5a5f1ce", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ca148481e221ea82bd62c3c7ff82592", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/LineBreaksPreparator.java", "commitBeforeChange": "f3886d8ab47e0b5dc32179a8d3e8db45c6fe8498", "commitAfterChange": "6b66bca84f13c7e210ac53b9682e41436c31dce2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tprivate void handleBodyDeclarations(List<BodyDeclaration> bodyDeclarations)", "signatureAfterChange": "  \tprivate void handleBodyDeclarations(List<BodyDeclaration> bodyDeclarations)", "diff": ["-\t\t\t\tthis.tm.firstTokenIn(bodyDeclaration, -1).putLineBreaksBefore(", "-\t\t\t\t\t\tthis.options.blank_lines_before_first_class_body_declaration + 1);", "+\t\t\t\tputBlankLinesBefore(bodyDeclaration, this.options.blank_lines_before_first_class_body_declaration);", "-\t\t\t\tthis.tm.firstTokenIn(bodyDeclaration, -1).putLineBreaksBefore(blankLines + 1);", "+\t\t\t\tputBlankLinesBefore(bodyDeclaration, blankLines);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4940e4b1ad7788c6648683d1c2a61dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/LineBreaksPreparator.java", "commitBeforeChange": "f3886d8ab47e0b5dc32179a8d3e8db45c6fe8498", "commitAfterChange": "6b66bca84f13c7e210ac53b9682e41436c31dce2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t@Override \tpublic boolean visit(CompilationUnit node)", "signatureAfterChange": "  \t@Override \tpublic boolean visit(CompilationUnit node)", "diff": ["-\t\t\t\tthis.tm.firstTokenIn(types.get(0), -1).putLineBreaksBefore(this.options.blank_lines_after_imports + 1);", "-\t\t\tfor (int i = 1; i < types.size(); i++) {", "-\t\t\t\tthis.tm.firstTokenIn(types.get(i), -1).putLineBreaksBefore(", "-\t\t\t\t\t\tthis.options.blank_lines_between_type_declarations + 1);", "-\t\t\t}", "+\t\t\t\tputBlankLinesBefore(types.get(0), this.options.blank_lines_after_imports);", "+\t\t\tfor (int i = 1; i < types.size(); i++)", "+\t\t\t\tputBlankLinesBefore(types.get(i), this.options.blank_lines_between_type_declarations);"]}], "num": 58519}