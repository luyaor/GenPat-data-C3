{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "441c2ff6307fed11182085dfb505409c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c7a405ee5ed7a4f7fed91390785f080", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "fea19d22050275d4b6c4f9116a11537adeb627a9", "commitAfterChange": "6fe04df602475d9f13e955fcfd38124da359e84a", "methodNumberBeforeChange": 846, "methodNumberAfterChange": 846, "signatureBeforeChange": " public void test0825() throws Exception", "signatureAfterChange": " public void test0825() throws Exception", "diff": ["+\tif (this.complianceLevel >= ClassFileConstants.JDK1_8)", "+\t\treturn;", "-\t\t\"  // Method descriptor #17 (Ljava/io/Serializable;)V\\n\" +", "-\t\t\"  // Signature: (TT;)V\\n\" +", "-\t\t\"  // Stack: 2, Locals: 5\\n\" +", "-\t\t\"  void foo(java.io.Serializable t);\\n\" +", "-\t\t\"     0  aload_1 [t]\\n\" +", "-\t\t\"     1  astore_2 [r1]\\n\" +", "-\t\t\"     2  aload_0 [this]\\n\" +", "-\t\t\"     3  ifnonnull 10\\n\" +", "-\t\t\"     6  aload_1 [t]\\n\" +", "-\t\t\"     7  goto 11\\n\" +", "-\t\t\"    10  aload_1 [t]\\n\" +", "-\t\t\"    11  astore_3 [r2]\\n\" +", "-\t\t\"    12  aload_1 [t]\\n\" +", "-\t\t\"    13  astore 4 [r3]\\n\" +", "-\t\t\"    15  aload_0 [this]\\n\" +", "-\t\t\"    16  aload_1 [t]\\n\" +", "-\t\t\"    17  invokevirtual X.bar(java.lang.Runnable) : void [20]\\n\" +", "-\t\t\"    20  aload_0 [this]\\n\" +", "-\t\t\"    21  aload_0 [this]\\n\" +", "-\t\t\"    22  ifnonnull 29\\n\" +", "-\t\t\"    25  aload_1 [t]\\n\" +", "-\t\t\"    26  goto 30\\n\" +", "-\t\t\"    29  aload_1 [t]\\n\" +", "-\t\t\"    30  invokevirtual X.bar(java.lang.Runnable) : void [20]\\n\" +", "-\t\t\"    33  aload_0 [this]\\n\" +", "-\t\t\"    34  aload_1 [t]\\n\" +", "-\t\t\"    35  invokevirtual X.bar(java.lang.Runnable) : void [20]\\n\" +", "-\t\t\"    38  return\\n\" +", "-\t\t\"      Line numbers:\\n\" +", "-\t\t\"        [pc: 0, line: 5]\\n\" +", "-\t\t\"        [pc: 2, line: 6]\\n\" +", "-\t\t\"        [pc: 12, line: 7]\\n\" +", "-\t\t\"        [pc: 15, line: 9]\\n\" +", "-\t\t\"        [pc: 20, line: 10]\\n\" +", "-\t\t\"        [pc: 33, line: 11]\\n\" +", "-\t\t\"        [pc: 38, line: 12]\\n\" +", "-\t\t\"      Local variable table:\\n\" +", "-\t\t\"        [pc: 0, pc: 39] local: this index: 0 type: X\\n\" +", "-\t\t\"        [pc: 0, pc: 39] local: t index: 1 type: java.io.Serializable\\n\" +", "-\t\t\"        [pc: 2, pc: 39] local: r1 index: 2 type: java.lang.Runnable\\n\" +", "-\t\t\"        [pc: 12, pc: 39] local: r2 index: 3 type: java.lang.Runnable\\n\" +", "-\t\t\"        [pc: 15, pc: 39] local: r3 index: 4 type: java.lang.Runnable\\n\" +", "-\t\t\"      Local variable type table:\\n\" +", "-\t\t\"        [pc: 0, pc: 39] local: this index: 0 type: X<T,V>\\n\" +", "-\t\t\"        [pc: 0, pc: 39] local: t index: 1 type: T\\n\";", "+\t\t\"  // Method descriptor #17 (Ljava/io/Serializable;)V\\n\" + ", "+\t\t\"  // Signature: (TT;)V\\n\" + ", "+\t\t\"  // Stack: 2, Locals: 5\\n\" + ", "+\t\t\"  void foo(java.io.Serializable t);\\n\" + ", "+\t\t\"     0  aload_1 [t]\\n\" + ", "+\t\t\"     1  checkcast java.lang.Runnable [20]\\n\" + ", "+\t\t\"     4  astore_2 [r1]\\n\" + ", "+\t\t\"     5  aload_0 [this]\\n\" + ", "+\t\t\"     6  ifnonnull 13\\n\" + ", "+\t\t\"     9  aload_1 [t]\\n\" + ", "+\t\t\"    10  goto 14\\n\" + ", "+\t\t\"    13  aload_1 [t]\\n\" + ", "+\t\t\"    14  astore_3 [r2]\\n\" + ", "+\t\t\"    15  aload_1 [t]\\n\" + ", "+\t\t\"    16  astore 4 [r3]\\n\" + ", "+\t\t\"    18  aload_0 [this]\\n\" + ", "+\t\t\"    19  aload_1 [t]\\n\" + ", "+\t\t\"    20  checkcast java.lang.Runnable [20]\\n\" + ", "+\t\t\"    23  invokevirtual X.bar(java.lang.Runnable) : void [22]\\n\" + ", "+\t\t\"    26  aload_0 [this]\\n\" + ", "+\t\t\"    27  aload_0 [this]\\n\" + ", "+\t\t\"    28  ifnonnull 35\\n\" + ", "+\t\t\"    31  aload_1 [t]\\n\" + ", "+\t\t\"    32  goto 36\\n\" + ", "+\t\t\"    35  aload_1 [t]\\n\" + ", "+\t\t\"    36  invokevirtual X.bar(java.lang.Runnable) : void [22]\\n\" + ", "+\t\t\"    39  aload_0 [this]\\n\" + ", "+\t\t\"    40  aload_1 [t]\\n\" + ", "+\t\t\"    41  invokevirtual X.bar(java.lang.Runnable) : void [22]\\n\" + ", "+\t\t\"    44  return\\n\" + ", "+\t\t\"      Line numbers:\\n\" + ", "+\t\t\"        [pc: 0, line: 5]\\n\" + ", "+\t\t\"        [pc: 5, line: 6]\\n\" + ", "+\t\t\"        [pc: 15, line: 7]\\n\" + ", "+\t\t\"        [pc: 18, line: 9]\\n\" + ", "+\t\t\"        [pc: 26, line: 10]\\n\" + ", "+\t\t\"        [pc: 39, line: 11]\\n\" + ", "+\t\t\"        [pc: 44, line: 12]\\n\" + ", "+\t\t\"      Local variable table:\\n\" + ", "+\t\t\"        [pc: 0, pc: 45] local: this index: 0 type: X\\n\" + ", "+\t\t\"        [pc: 0, pc: 45] local: t index: 1 type: java.io.Serializable\\n\" + ", "+\t\t\"        [pc: 5, pc: 45] local: r1 index: 2 type: java.lang.Runnable\\n\" + ", "+\t\t\"        [pc: 15, pc: 45] local: r2 index: 3 type: java.lang.Runnable\\n\" + ", "+\t\t\"        [pc: 18, pc: 45] local: r3 index: 4 type: java.lang.Runnable\\n\" + ", "+\t\t\"      Local variable type table:\\n\" + ", "+\t\t\"        [pc: 0, pc: 45] local: this index: 0 type: X<T,V>\\n\" + ", "+\t\t\"        [pc: 0, pc: 45] local: t index: 1 type: T\\n\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a48bedd38b93068d323bf74b6ba79ea6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "c7e61e314902d7cf48e71c1a1c0437bb40107c2e", "commitAfterChange": "8a1621e802c664e59aba36b8a87f59ae57902e37", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void testArrayType_03()", "signatureAfterChange": " \tpublic void testArrayType_03()", "diff": ["-\t\t\t\t  \"    void leaf(String @NonNull[] realStringArray, String @Nullable[] maybeStringArray) {\\n\" +", "+\t\t\t\t  \"    void leaf(String @NonNull[] realStringArray, String @Nullable[] maybeStringArray, boolean b) {\\n\" +", "-\t\t\t\t  \"        string = maybeStringArray[0]; // problems: indexing nullable array & unchecked conversion\\n\" +", "-\t\t\t\t  \"        maybeStringArray[0] = null; \t // problem: indexing nullable array\\n\" +", "+\t\t\t\t  \"        if (b)\\n\" +", "+\t\t\t\t  \"            string = maybeStringArray[0]; // problems: indexing nullable array & unchecked conversion\\n\" +", "+\t\t\t\t  \"        else\\n\" +", "+\t\t\t\t  \"            maybeStringArray[0] = null; \t // problem: indexing nullable array\\n\" +", "+\t\t\t\t  \"        maybeStringArray[0] = null; \t // problem protected by previous dereference\\n\" +", "-    \t\t\"1. ERROR in A.java (at line 7)\\n\" + ", "+    \t\t\"1. ERROR in A.java (at line 6)\\n\" + ", "+    \t\t\"\trealStringArray = null; \t // problem: cannot assign null as @NonNull array\\n\" + ", "+    \t\t\"\t                  ^^^^\\n\" + ", "+    \t\t\"Null type mismatch: required \\'String @NonNull[]\\' but the provided value is null\\n\" + ", "+\t\t    \"----------\\n\" + ", "+    \t\t\"2. ERROR in A.java (at line 7)\\n\" + ", "-    \t\t\"Null type mismatch: required \\'@NonNull Object\\' but the provided value is inferred as @Nullable\\n\" + ", "+    \t\t\"Null type mismatch (type annotations): required '@NonNull Object' but this expression has type 'String @Nullable[]'\\n\" + ", "-    \t\t\"2. WARNING in A.java (at line 12)\\n\" + ", "+    \t\t\"3. WARNING in A.java (at line 12)\\n\" + ", "-    \t\t\"Null type safety: The expression of type String needs unchecked conversion to conform to \\'@NonNull String\\'\\n\" + ", "+    \t\t\"Null type safety (type annotations): The expression of type 'String' needs unchecked conversion to conform to \\'@NonNull String\\'\\n\" + ", "-    \t\t\"3. ERROR in A.java (at line 14)\\n\" + ", "+    \t\t\"4. ERROR in A.java (at line 15)\\n\" + ", "-    \t\t\"4. WARNING in A.java (at line 14)\\n\" + ", "+    \t\t\"5. WARNING in A.java (at line 15)\\n\" + ", "-    \t\t\"Null type safety: The expression of type String needs unchecked conversion to conform to \\'@NonNull String\\'\\n\" + ", "+    \t\t\"Null type safety (type annotations): The expression of type 'String' needs unchecked conversion to conform to \\'@NonNull String\\'\\n\" + ", "-    \t\t\"5. ERROR in A.java (at line 15)\\n\" + ", "+    \t\t\"6. ERROR in A.java (at line 17)\\n\" + "]}], "num": 9043}