{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b583da580b0b1efbe729d9f5211cab76", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "494eafcc004d56c301a9938a7bf8841a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t \tpublic void consumeWildCard(int kind, int rank)", "signatureAfterChange": " \t \tpublic void consumeWildCard(int kind)", "diff": ["-\tpublic void consumeWildCard(int kind, int rank) {", "-\t\tTypeBinding bound = ", "-\t\t\tkind != Wildcard.UNBOUND ? ", "-\t\t\t\t\t(TypeBinding) this.types.remove(this.types.size()-1) : ", "-\t\t\t\t\tnull;", "-\t\tTypeBinding wildCardBinding = this.environment.createWildcard((ReferenceBinding) this.typeBinding, rank, bound, null /*no extra bound*/, kind);", "-\t\tthis.types.add(wildCardBinding);", "+\tpublic void consumeWildCard(int kind) {", "+\t\tthis.wildcardKind = kind;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad06a35390b1f172ea132d01232a1419", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "c16162b1194f3110eda140f5ccdd35c2ba36455d", "commitAfterChange": "8d1ff9b80d2587df4aa2d0a1ee1f5a75472a5feb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public void indexBinaryFolder(IFolder folder, IProject referingProject)", "signatureAfterChange": "\r public void fireIndexRequests()", "diff": ["+ */\r", "+public void fireIndexRequests() {\r", "+\tif (this.indexRequestQueue == null) return;\r", "+\tIterator iterator = this.indexRequestQueue.iterator();\r", "+\tthis.indexRequestQueue = null;\r", "+\twhile (iterator.hasNext()) {\r", "+\t\tthis.request((IJob)iterator.next());\r", "+\t}\r", "+}\r", "- */\r", "-public void indexBinaryFolder(IFolder folder, IProject referingProject){\r", "-\tif (JavaCore.getPlugin() == null || this.workspace == null) return;\r", "-\trequest(new IndexBinaryFolder(folder, this, referingProject));\r", "-}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca4a9d7d2fad8010ce6c60329411f419", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "db0d99936b529038f502f3c42e4c67fa5380c5bc", "commitAfterChange": "5988789db77abec94d1b8a17fd42ed09f795c5be", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tpublic void consumeNonParameterizedType()", "signatureAfterChange": " \t \tpublic void consumeRawType()", "diff": ["-\tpublic void consumeNonParameterizedType() {", "-\t\tif (this.typeBinding == null) return;", "-\t\tif (this.typeBinding.typeVariables().length > 0) {", "-\t\t\t// raw type", "-\t\t\tthis.typeBinding = this.environment.createRawType((ReferenceBinding) this.typeBinding, null/*no enclosing type*/);", "-\t\t}", "-\t}", "+\tpublic void consumeRawType() {", "+\t\tif (this.typeBinding == null) return;", "+\t\tthis.typeBinding = this.environment.createRawType((ReferenceBinding) this.typeBinding, null/*no enclosing type*/);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f373d1e46108318f088b0f7327127d00", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "aba5db418de65ea21899bfdf893833cd0fc3f586", "commitAfterChange": "7aba284c4ea53048ed9ad4ccc85fef0f7294903a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tpublic void setBinaryTypes(IBinaryType[] binaryTypes)", "signatureAfterChange": " \t \tpublic void setBinaryTypes(ReferenceBinding[] binaryTypes)", "diff": ["-\tpublic void setBinaryTypes(IBinaryType[] binaryTypes) {", "-\t\tfinal int length = binaryTypes.length;", "-\t\tBinaryTypeBinding[] temp = new BinaryTypeBinding[length];", "-\t\tfor (int i = 0; i < length; i++) {", "-\t\t\ttemp[i] = this.lookupEnvironment.cacheBinaryType(binaryTypes[i], null);", "-\t\t}", "-\t\t// TODO should I reset the lookup environment ?", "-\t\tthis.binaryTypeBindings = temp;", "+\tpublic void setBinaryTypes(ReferenceBinding[] binaryTypes) {", "+\t\tthis.referenceBindings = binaryTypes;"]}], "num": 36203}