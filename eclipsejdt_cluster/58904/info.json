{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "10931b6a73a42f166a46a1064315dfa2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ffc2a2d973eecea2cc1a613f8af89ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "83ab9db63b8ff68374b9953ac0c435dcd063d8bf", "commitAfterChange": "710352220ce729b3b70862da914c01e2ca1e73c5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \r public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "\r \r public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tfor (int i = 0; i < length; i++)\r", "-\t\t\tif ((argumentTypes[i] = arguments[i].resolveType(scope)) == null)\r", "+\t\tfor (int i = 0; i < length; i++){\r", "+\t\t\tif ((argumentTypes[i] = arguments[i].resolveType(scope)) == null){\r", "-\t\tif (argHasError)\r", "+\t\t\t}\r", "+\t\t}\r", "+\t\tif (argHasError){\r", "+\t\t\tMethodBinding closestMethod = null;\r", "+\t\t\tif(receiverType instanceof ReferenceBinding) {\r", "+\t\t\t\t// record any selector match, for clients who may still need hint about possible method match\r", "+\t\t\t\tthis.codegenBinding = this.binding = scope.findMethod((ReferenceBinding)receiverType, selector, new TypeBinding[]{}, this);\r", "+\t\t\t}\t\t\t\r", "+\t\t}\r", "+\t\t// record the closest match, for clients who may still need hint about possible method match\r", "+\t\tif (binding.problemId() == ProblemReasons.NotFound){\r", "+\t\t\tthis.codegenBinding = this.binding = ((ProblemMethodBinding)binding).closestMatch;\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3f72e4720ac0b9008cb1c7a3e0cc83f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetAllocationExpression.java", "commitBeforeChange": "aa3a93ccc3206cb1748c8a2362c7163309a5a4d8", "commitAfterChange": "a5c6e1f76d5a6c03c6d1a939c4f8dbefac55cdca", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tfor (int i = 0; i < length; i++)", "-\t\t\tif ((argumentTypes[i] = arguments[i].resolveType(scope)) == null)", "+\t\tfor (int i = 0; i < length; i++) {", "+\t\t\tif ((argumentTypes[i] = arguments[i].resolveType(scope)) == null) {", "-\t\tif (argHasError)", "+\t\t\t}", "+\t\t}", "+\t\tif (argHasError) {", "+\t\t}", "-\tif (this.resolvedType == null)", "+\tif (this.resolvedType == null) {", "-", "+\t}", "-\t\t\t\t\tif (binding.declaringClass == null)", "+\t\t\t\t\tif (binding.declaringClass == null) {", "+\t\t\t\t\t}", "-\t\t\t\tif (binding.declaringClass == null)", "+\t\t\t\tif (binding.declaringClass == null) {", "+\t\t\t\t}", "-\t\t\t\tif (binding.declaringClass == null)", "+\t\t\t\tif (binding.declaringClass == null) {", "+\t\t\t\t}", "-\t\t\tif (binding.declaringClass == null)", "+\t\t\tif (binding.declaringClass == null) {", "+\t\t\t}", "-\tif (isMethodUseDeprecated(binding, scope))", "+\tif (isMethodUseDeprecated(binding, scope)) {", "-", "-\tif (arguments != null)", "-\t\tfor (int i = 0; i < arguments.length; i++)", "+\t}", "+\tif (arguments != null) {", "+\t\tfor (int i = 0; i < arguments.length; i++) {", "+\t\t}", "+\t}"]}], "num": 58904}