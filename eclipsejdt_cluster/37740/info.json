{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f544dd7ec9f1ce13cea1de631a6b611", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "080af9aa0bbea36a86a280cae8ea5e36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "53a88facba099a7ef05d98b75f25800af60438f8", "commitAfterChange": "086132dd6f6e6011785d8d9b469716062157a8c1", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tpublic final Binding getTypeOrPackage(char[][] compoundName)", "signatureAfterChange": " \tpublic final Binding getTypeOrPackage(char[][] compoundName)", "diff": ["-\t\t\t\tqualifiedType = this.createParameterizedType((ReferenceBinding)typeBinding.erasure(), null, qualifiedType);", "+\t\t\t\tqualifiedType = this.environment().createParameterizedType((ReferenceBinding)typeBinding.erasure(), null, qualifiedType);", "-\t\t\t\t\t? this.createParameterizedType(typeBinding, null, qualifiedType)", "+\t\t\t\t\t? this.environment().createParameterizedType(typeBinding, null, qualifiedType)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "341bc3bb788183c68230d671b2f0ad4b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImplicitNullAnnotationVerifier.java", "commitBeforeChange": "ebf0740a88fe14f88af9807da3fc8260efdeeb0a", "commitAfterChange": "56cd7be7209c3b63ac72922c3a342e501721fcf5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tvoid checkNullSpecInheritance(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod,  \t\t\tboolean hasNonNullDefault, boolean shouldComplain, \t\t\tMethodBinding inheritedMethod, Scope scope, InheritedNonNullnessInfo[] inheritedNonNullnessInfos)", "signatureAfterChange": " \tvoid checkNullSpecInheritance(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod,  \t\t\tboolean hasNonNullDefault, boolean shouldComplain, \t\t\tMethodBinding inheritedMethod, Scope scope, InheritedNonNullnessInfo[] inheritedNonNullnessInfos)", "diff": ["-\t\t\t\t\tTypeVariableBinding[] typeVariables = inheritedMethod.typeVariables;", "+\t\t\t\t\tTypeVariableBinding[] typeVariables = inheritedMethod.original().typeVariables;", "-\t\t\tTypeVariableBinding[] typeVariables = currentMethod.typeVariables;", "+\t\t\tTypeVariableBinding[] typeVariables = currentMethod.original().typeVariables;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42b845b1c030b883d114f522d5789800", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "3664f2e5df4bff13b2fab22de56e1095b2708757", "commitAfterChange": "ed98b88c58c662fd70b64e54eaa4fe98936833aa", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "signatureAfterChange": "  \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "diff": ["-\t\t\t\tcompileTimeType = scope.computeBoxingType(compileTimeType);", "+\t\t\t\tcompileTimeType = scope.environment().computeBoxingType(compileTimeType);", "-\t\t\t\tTypeBinding boxedType = scope.computeBoxingType(compileTimeType);", "+\t\t\t\tTypeBinding boxedType = scope.environment().computeBoxingType(compileTimeType);", "-\t\t\t\tcompileTimeType =boxedType;", "+\t\t\t\tcompileTimeType = boxedType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a3044fc4bd0860e519d4554c4cf09f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "a1f76b7b00838ef72baa43c4ac28afbf79946234", "commitAfterChange": "95bbd6610c1dc465de3a59ac7917e18ba6f30dcf", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tprotected MethodBinding findDefaultAbstractMethod( \t\tReferenceBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite, \t\tReferenceBinding classHierarchyStart, \t\tObjectVector found, \t\tMethodBinding concreteMatch)", "signatureAfterChange": " \tprotected MethodBinding findDefaultAbstractMethod( \t\tReferenceBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite, \t\tReferenceBinding classHierarchyStart, \t\tObjectVector found, \t\tMethodBinding concreteMatch)", "diff": ["-\t\t\t\t\t\t\tif (environment().methodVerifier().isParameterSubsignature(concreteMatch, compatibleMethod))", "+\t\t\t\t\t\t\tif (environment().methodVerifier().isParameterSubsignature(concreteMatch.original(), compatibleMethod.original()))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65158ed6ece429ade6bcf5ecbfd66f57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "31634350462d61974f08f918d94943937dad97ef", "commitAfterChange": "15f0d448dbbc229edf8c2e3c861b5fc5817bbb2c", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public MethodBinding[] methods()", "signatureAfterChange": " public MethodBinding[] methods()", "diff": ["-\t\t\t\t\t\tboolean paramsMatch = complyTo15 && method.returnType == method2.returnType // see 87956", "+\t\t\t\t\t\tboolean paramsMatch = complyTo15 && method.returnType.erasure() == method2.returnType.erasure() // see 87956 & 88094"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e2f781c712fa06a70fbce92aa6d9967", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": "  \tpublic void recordInnerClasses(TypeBinding binding)", "signatureAfterChange": "  \tpublic void recordInnerClasses(TypeBinding binding)", "diff": ["-\t\tthis.innerClassesBindings.add(innerClass.erasure());", "+\t\tthis.innerClassesBindings.add(innerClass.erasure().unannotated());  // should not emit yet another inner class for Outer.@Inner Inner.", "-\t\t\tthis.innerClassesBindings.add(enclosingType.erasure());", "+\t\t\tthis.innerClassesBindings.add(enclosingType.erasure().unannotated());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a4ee7f2cbec5bc4b72de0e0ecf2db81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "0bc1dc4ace320749d81ad8fc342000dd64021e2c", "commitAfterChange": "38d1cd076e6181bfa6558db1b5b13eb2b3e5e8ce", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static void checkInvocationArguments(BlockScope scope, Expression receiver, TypeBinding receiverType, MethodBinding method, Expression[] arguments, TypeBinding[] argumentTypes, boolean argsContainCast, InvocationSite invocationSite)", "signatureAfterChange": " \tpublic static void checkInvocationArguments(BlockScope scope, Expression receiver, TypeBinding receiverType, MethodBinding method, Expression[] arguments, TypeBinding[] argumentTypes, boolean argsContainCast, InvocationSite invocationSite)", "diff": ["-\t\t\t\t\t\t\t\t\t\t&& varargsType.leafComponentType != lastArgType.leafComponentType()", "+\t\t\t\t\t\t\t\t\t\t&& varargsType.leafComponentType.erasure() != lastArgType.leafComponentType().erasure()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8da8a977523652e7bbdc329534405d1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "4d1b2a602aa63e2d641e31567150dab25a5e04f3", "commitAfterChange": "7935d7046a5948ba0caaa49b731ab944081ed079", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public final boolean areParametersEqual(MethodBinding method)", "signatureAfterChange": " public final boolean areParametersEqual(MethodBinding method)", "diff": ["-\t\tif (this.parameters[i] != args[i])", "+\t\tif (this.parameters[i].unannotated() != args[i].unannotated())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a67f3067044c2b36dfd7a01cf96f4435", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "59f906dde0386689cf221a0077edc4ded4fac940", "commitAfterChange": "53a88facba099a7ef05d98b75f25800af60438f8", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": "  \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": "  \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t\t\t\t\tif (method == method2) continue; // interfaces may be walked twice from different paths", "+\t\t\t\t\t// parameterized superclasses & interfaces may be walked twice from different paths", "+\t\t\t\t\tif (method.original() == method2.original()) continue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2c3d53beedf9f7fe7a8748aa25e6a80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "282f4990f3c5d0f91a4d25be01182ed1f4a9c202", "commitAfterChange": "57a5b48f21667b49d69da15f48898dd1388574d1", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " void checkMethods()", "signatureAfterChange": " void checkMethods()", "diff": ["-\t\t\t\t\tthis.type.addSyntheticBridgeMethod(inheritedMethod);", "+\t\t\t\t\tthis.type.addSyntheticBridgeMethod(inheritedMethod.original());", "-\t\t\t\t\tthis.type.addSyntheticBridgeMethod(inheritedMethod);", "+\t\t\t\t\tthis.type.addSyntheticBridgeMethod(inheritedMethod.original());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf4307d24d6f7015b989361c804ae789", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForeachStatement.java", "commitBeforeChange": "3664f2e5df4bff13b2fab22de56e1095b2708757", "commitAfterChange": "ed98b88c58c662fd70b64e54eaa4fe98936833aa", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope upperScope)", "diff": ["-\t\t\t\t\t\tcompileTimeTypeID = scope.computeBoxingType(collectionElementType).id;", "+\t\t\t\t\t\tcompileTimeTypeID = scope.environment().computeBoxingType(collectionElementType).id;", "-\t\t\t\t\t\tint boxedID = scope.computeBoxingType(collectionElementType).id;", "+\t\t\t\t\t\tint boxedID = scope.environment().computeBoxingType(collectionElementType).id;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7d02339018064eb1420e74908c679a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBinding.java", "commitBeforeChange": "9d9dbf43d8d5adb49e2b6b1c21d735fa3526d7ec", "commitAfterChange": "bac0771911f11962784cf0ef9252c1e7875dc1e4", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": " public TypeBinding original()", "signatureAfterChange": " public TypeBinding original()", "diff": ["-\t\t\treturn erasure();", "+\t\t\treturn erasure().unannotated();", "-\t\t\treturn this;", "+\t\t\treturn this.unannotated();"]}], "num": 37740}