{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b6e2cb2b4a8452b90626e2d969d579e3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e3f850b2fd82b270f32e6cf335ae256", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "85fe43540d2fa2b41e90fbadb73dc3c8d856ecfb", "commitAfterChange": "e60ca02f81acc7600a43413bd7fb7c0779ae6a52", "methodNumberBeforeChange": 250, "methodNumberAfterChange": 250, "signatureBeforeChange": " \tpublic void test246()", "signatureAfterChange": " \tpublic void test246()", "diff": ["-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\"\tMX<Class<? extends Object>> mx2 = new MX<Class>();\\n\" + ", "-\t\t\"\t                            ^^^\\n\" + ", "-\t\t\"Type mismatch: cannot convert from X.MX<Class> to X.MX<Class<? extends Object>>\\n\" + ", "-\t\t\"----------\\n\");", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tMX<Class<? extends Object>> mx2 = new MX<Class>();\\n\" + ", "+\t\t\t\"\t                                  ^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from X.MX<Class> to X.MX<Class<? extends Object>>\\n\" + ", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2c8b610bf0b6dfaf31a9ba30f4ed318", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "8ef6b7b8e532d14c9997c45765bf4e2204efc621", "commitAfterChange": "23388d3d76ee00098475fa88c213b1440fe2c7c6", "methodNumberBeforeChange": 254, "methodNumberAfterChange": 254, "signatureBeforeChange": " \tpublic void test242()", "signatureAfterChange": " \tpublic void test242()", "diff": ["-\t// 69776 - variation: no unsafe type operation warning", "+\t// 69776 - variation: TODO (philippe) no unsafe type operation warning ?", "+\t\t\"----------\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\"\tfinal Class<? extends Object> clazz = (Class<? extends Object>) classes.get(\\\"test\\\");\\n\" + ", "+\t\t\"\t                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Unsafe type operation: The cast from Class to parameterized type Class<? extends Object> will not check conformance of type arguments at runtime\\n\" + "]}], "num": 8313}