{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a458d5d1fd7696896d08f3685f14a653", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "501b53a60c073e393b0797c49e0051b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "2490dbbf3f6248e62011980e082db7d3a33dea52", "commitAfterChange": "6bc8155ada22ba817bf75f276d6fc8be0384eaaf", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " private int putInNameAndTypeCacheIfAbsent(final char[] key1, final char[] key2, int value)", "signatureAfterChange": " private int putInNameAndTypeCacheIfAbsent(final char[] key1, final char[] key2, int value)", "diff": ["+ */", "-\tCharArrayCache key1Value = (CharArrayCache) this.nameAndTypeCacheForFieldsAndMethods.get(key1);", "+\tObject key1Value = this.nameAndTypeCacheForFieldsAndMethods.get(key1);", "-\t\tCharArrayCache charArrayCache = new CharArrayCache();", "-\t\tindex = charArrayCache.putIfAbsent(key2, value);", "-\t\tthis.nameAndTypeCacheForFieldsAndMethods.put(key1, charArrayCache);", "+\t\tCachedIndexEntry cachedIndexEntry = new CachedIndexEntry(key2, value);", "+\t\tindex = -value;", "+\t\tthis.nameAndTypeCacheForFieldsAndMethods.put(key1, cachedIndexEntry);", "+\t} else if (key1Value instanceof CachedIndexEntry) {", "+\t\t// adding a second entry", "+\t\tCachedIndexEntry entry = (CachedIndexEntry) key1Value;", "+\t\tif (CharOperation.equals(key2, entry.signature)) {", "+\t\t\tindex = entry.index;", "+\t\t} else {", "+\t\t\tCharArrayCache charArrayCache = new CharArrayCache();", "+\t\t\tcharArrayCache.putIfAbsent(entry.signature, entry.index);", "+\t\t\tindex = charArrayCache.putIfAbsent(key2, value);", "+\t\t\tthis.nameAndTypeCacheForFieldsAndMethods.put(key1, charArrayCache);\t\t\t", "+\t\t}", "-\t\tindex = key1Value.putIfAbsent(key2, value);", "+\t\tCharArrayCache charArrayCache = (CharArrayCache) key1Value;", "+\t\tindex = charArrayCache.putIfAbsent(key2, value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ece7c043cf6ea542afb3d2a450f40989", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "2490dbbf3f6248e62011980e082db7d3a33dea52", "commitAfterChange": "6bc8155ada22ba817bf75f276d6fc8be0384eaaf", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " private int putInCacheIfAbsent(final char[] key1, final char[] key2, final char[] key3, int value)", "signatureAfterChange": " private int putInCacheIfAbsent(final char[] key1, final char[] key2, final char[] key3, int value)", "diff": ["-\t\tCharArrayCache charArrayCache = new CharArrayCache();", "-\t\tindex = charArrayCache.putIfAbsent(key3, value);", "-\t\tkey1Value.put(key2, charArrayCache);", "+\t\tCachedIndexEntry cachedIndexEntry = new CachedIndexEntry(key3, value);", "+\t\tindex = -value;", "+\t\tkey1Value.put(key2, cachedIndexEntry);", "-\t\tCharArrayCache charArrayCache = (CharArrayCache) key1Value.get(key2);", "-\t\tif (charArrayCache == null) {", "-\t\t\tcharArrayCache = new CharArrayCache();", "-\t\t\tindex = charArrayCache.putIfAbsent(key3, value);", "-\t\t\tkey1Value.put(key2, charArrayCache);", "+\t\tObject key2Value = key1Value.get(key2);", "+\t\tif (key2Value == null) {", "+\t\t\tCachedIndexEntry cachedIndexEntry = new CachedIndexEntry(key3, value);", "+\t\t\tindex = -value;", "+\t\t\tkey1Value.put(key2, cachedIndexEntry);", "+\t\t} else if (key2Value instanceof CachedIndexEntry) {", "+\t\t\t// adding a second entry", "+\t\t\tCachedIndexEntry entry = (CachedIndexEntry) key2Value;", "+\t\t\tif (CharOperation.equals(key3, entry.signature)) {", "+\t\t\t\tindex = entry.index;", "+\t\t\t} else {", "+\t\t\t\tCharArrayCache charArrayCache = new CharArrayCache();", "+\t\t\t\tcharArrayCache.putIfAbsent(entry.signature, entry.index);", "+\t\t\t\tindex = charArrayCache.putIfAbsent(key3, value);\t\t\t\t", "+\t\t\t\tkey1Value.put(key2, charArrayCache);", "+\t\t\t}", "+\t\t\tCharArrayCache charArrayCache = (CharArrayCache) key2Value;"]}], "num": 26989}