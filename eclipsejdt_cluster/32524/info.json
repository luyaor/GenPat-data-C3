{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2af6b3a432e3fc03853f4a9e9a8602e3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "218ff31c9a1b24bafc873f5216f0aa72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "d81e6de27221b2caec858658787abf55d91a925e", "commitAfterChange": "cfb9e308b9934bc0d4a17e2d4604db46f20af164", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \t \tprivate ConstraintTypeFormula combineEqualSupers(TypeBound boundS, TypeBound boundT)", "signatureAfterChange": " \t \tprivate ConstraintTypeFormula combineEqualSupers(TypeBound boundS, TypeBound boundT)", "diff": ["-\t\t\treturn new ConstraintTypeFormula(boundT.left, boundS.right, boundS.relation, boundT.isSoft||boundS.isSoft);", "+\t\t\treturn ConstraintTypeFormula.create(boundT.left, boundS.right, boundS.relation, boundT.isSoft||boundS.isSoft);", "-\t\t\treturn new ConstraintTypeFormula(boundS.left, boundT.right, boundS.relation, boundT.isSoft||boundS.isSoft);", "+\t\t\treturn ConstraintTypeFormula.create(boundS.left, boundT.right, boundS.relation, boundT.isSoft||boundS.isSoft);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce242a7f4ed6f628c097af02535382dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "9506194ecd38aa227915d4452e8097fba7bd6231", "commitAfterChange": "27a13e874a8de3a8e74e5e1ab65479e9dace8b8c", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \t \tprivate ConstraintFormula combineEqualSupers(TypeBound boundS, TypeBound boundT)", "signatureAfterChange": " \t \tprivate ConstraintFormula combineEqualSupers(TypeBound boundS, TypeBound boundT)", "diff": ["-\t\t\treturn new ConstraintTypeFormula(boundT.left, boundS.right, boundS.relation);", "+\t\t\treturn new ConstraintTypeFormula(boundT.left, boundS.right, boundS.relation, boundT.isSoft||boundS.isSoft);", "-\t\t\treturn new ConstraintTypeFormula(boundS.left, boundT.right, boundS.relation);\t\t", "+\t\t\treturn new ConstraintTypeFormula(boundS.left, boundT.right, boundS.relation, boundT.isSoft||boundS.isSoft);\t\t"]}], "num": 32524}