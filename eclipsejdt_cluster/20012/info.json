{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "190ba696e8f466595f6a3d83c085c520", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e5e4253919cb8dbd521d2be06529c61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "18214de46fa9202fa142bc8c10e22754e8ddc00c", "commitAfterChange": "a19e5612a97c00c41d991b7d28c08961f0357225", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  \tpublic void leavePolyInvocation(InvocationRecord record)", "signatureAfterChange": "  \tpublic void leavePolyInvocation(InvocationRecord record)", "diff": ["-\t\tint l1 = this.inferenceVariables.length;", "-\t\tint l2 = record.inferenceVariables.length;", "-\t\t// move to back, add previous to front:", "-\t\tSystem.arraycopy(this.inferenceVariables, 0, this.inferenceVariables=new InferenceVariable[l1+l2], l2, l1);", "-\t\tSystem.arraycopy(record.inferenceVariables, 0, this.inferenceVariables, 0, l2);", "+\t\tif (this.inferenceVariables == null) { // no new ones, assume we aborted prematurely", "+\t\t\tthis.inferenceVariables = record.inferenceVariables;", "+\t\t} else {", "+\t\t\tint l1 = this.inferenceVariables.length;", "+\t\t\tint l2 = record.inferenceVariables.length;", "+\t\t\t// move to back, add previous to front:", "+\t\t\tSystem.arraycopy(this.inferenceVariables, 0, this.inferenceVariables=new InferenceVariable[l1+l2], l2, l1);", "+\t\t\tSystem.arraycopy(record.inferenceVariables, 0, this.inferenceVariables, 0, l2);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6ab47c94caec1c5f8b79d479bcfd01c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "90b243491d35267d13bcf8f4b3b622ed87af2ae7", "commitAfterChange": "dc2b5ae9776368d6bc02c0700f41658b033db2c3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic InferenceVariable[] addTypeVariableSubstitutions(TypeBinding[] typeVariables)", "signatureAfterChange": " \tpublic InferenceVariable[] addTypeVariableSubstitutions(TypeBinding[] typeVariables)", "diff": ["+\t\tInferenceVariable[] toAdd = new InferenceVariable[len2];", "+\t\tint numToAdd = 0;", "-\t\t\t\tnewVariables[i] = new InferenceVariable(typeVariables[i], this.variableCount++, this.currentInvocation, this.environment, this.object);", "+\t\t\t\ttoAdd[numToAdd++] =", "+\t\t\t\t\tnewVariables[i] = new InferenceVariable(typeVariables[i], this.variableCount++, this.currentInvocation, this.environment, this.object);", "-", "-\t\tint start = 0;", "-\t\tif (this.inferenceVariables != null) {", "-\t\t\tint len1 = this.inferenceVariables.length;", "-\t\t\tSystem.arraycopy(this.inferenceVariables, 0, this.inferenceVariables = new InferenceVariable[len1+len2], 0, len1);", "-\t\t\tstart = len1;", "-\t\t} else {", "-\t\t\tthis.inferenceVariables = new InferenceVariable[len2];", "+\t\tif (numToAdd > 0) {", "+\t\t\tint start = 0;", "+\t\t\tif (this.inferenceVariables != null) {", "+\t\t\t\tint len1 = this.inferenceVariables.length;", "+\t\t\t\tSystem.arraycopy(this.inferenceVariables, 0, this.inferenceVariables = new InferenceVariable[len1+numToAdd], 0, len1);", "+\t\t\t\tstart = len1;", "+\t\t\t} else {", "+\t\t\t\tthis.inferenceVariables = new InferenceVariable[numToAdd];", "+\t\t\t}", "+\t\t\tSystem.arraycopy(toAdd, 0, this.inferenceVariables, start, numToAdd);", "-\t\tSystem.arraycopy(newVariables, 0, this.inferenceVariables, start, len2);"]}], "num": 20012}