{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "11ce1947e3e70c2b1772e2f100a86da8", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "594e3d93002f7d741c5061ed9f9ca5b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingKey.java", "commitBeforeChange": "b78a341d9c2ae71ec75ebc5229ccf7d4bba66b46", "commitAfterChange": "cee72fca9d21d8ecea9da9111153a7e6090893c1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t  \t MethodBinding getMethodBinding(SourceTypeBinding typeBinding, CompilationUnitResolver resolver)", "signatureAfterChange": " \t  \t MethodBinding getMethodBinding(SourceTypeBinding typeBinding, CompilationUnitResolver resolver)", "diff": ["-\t \tchar[] methodKey = this.scanner.getTokenSource();", "-\t \tint selectorEnd = CharOperation.indexOf('(', methodKey);", "-\t \tchar[] selector = CharOperation.subarray(methodKey, 0, selectorEnd);", "+\t \tchar[] selector = this.scanner.getTokenSource();", "-\t \tint parameterStart = selectorEnd+1;", "-\t \tint parameterEnd = CharOperation.indexOf(',', methodKey, selectorEnd);", "-\t \twhile (parameterEnd != -1) {", "-\t \t\tchar[] parameterKey = CharOperation.subarray(methodKey, parameterStart, parameterEnd);", "-\t \t\t// TODO (jerome) use this binding key's scanner instead of creating a new object", "-\t \t\tBinding parameterBinding = new BindingKey(parameterKey).getCompilerBinding(resolver);", "+\t \tdo {", "+\t \t\treset();", "+\t \t\tBinding parameterBinding = getCompilerBinding(resolver);", "-\t \t\tparameterStart = parameterEnd+1;", "-\t \t\tparameterEnd = CharOperation.indexOf(',', methodKey, parameterStart);", "-\t \t}", "+\t \t} while (this.scanner.token != BindingKeyScanner.END);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b56e5575cdb55f8d3fc640e5e679296", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "a05a975af5c0bba95d0d398d2bd3a368d9cd616f", "commitAfterChange": "3a562aaf09f9f323b583086b80b4683378886606", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 72, "signatureBeforeChange": " protected final void writeU2(int value)", "signatureAfterChange": " protected final void writeU2(int value)", "diff": ["+\tif (currentOffset + 2 >= poolContent.length) {", "+\t\tresizePoolContents(2);", "+\t}", "-\ttry {", "-\t\tpoolContent[currentOffset++] = (byte) (value >> 8);", "-\t} catch (IndexOutOfBoundsException e) {", "-\t\t //currentOffset has been ++ already (see the -1)", "-\t\tint length = poolContent.length;", "-\t\tSystem.arraycopy(poolContent, 0, (poolContent = new byte[length + CONSTANTPOOL_GROW_SIZE]), 0, length);", "-\t\tpoolContent[currentOffset - 1] = (byte) (value >> 8);", "-\t}", "-\ttry {", "-\t\tpoolContent[currentOffset++] = (byte) value;", "-\t} catch (IndexOutOfBoundsException e) {", "-\t\t //currentOffset has been ++ already (see the -1)", "-\t\tint length = poolContent.length;", "-\t\tSystem.arraycopy(poolContent, 0, (poolContent = new byte[length + CONSTANTPOOL_GROW_SIZE]), 0, length);", "-\t\tpoolContent[currentOffset - 1] = (byte) value;", "-\t}", "+\tpoolContent[currentOffset++] = (byte) (value >> 8);", "+\tpoolContent[currentOffset++] = (byte) value;"]}], "num": 66244}