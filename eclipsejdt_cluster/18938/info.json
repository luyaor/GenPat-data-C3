{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fcba35dcc3e546f79ea9f642ee403a7b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b3968f88610ce561f3aec8a9e3f379c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "055380e1ecf4ba956a2ed12d0bd6afd30fa4bb0d", "commitAfterChange": "5633218f57a8f96a181a737ead7a991d28ce84d5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void analyseCode(CompilationUnitScope unitScope)", "signatureAfterChange": " \tpublic void analyseCode(CompilationUnitScope unitScope)", "diff": ["-\t\t\t\t\t\t\t((Clinit)method).analyseCode(scope, staticInitializerContext, staticFieldInfo);", "+\t\t\t\t\t\t\t((Clinit)method).analyseCode(", "+\t\t\t\t\t\t\t\tscope, ", "+\t\t\t\t\t\t\t\tstaticInitializerContext, ", "+\t\t\t\t\t\t\t\tflowInfo.copy().unconditionalInits().addInitializationsFrom(staticFieldInfo.copy().unconditionalInits().discardNonFieldInitializations()));", "-\t\t\t\t\t\t\t((ConstructorDeclaration)method).analyseCode(scope, initializerContext, nonStaticFieldInfo.copy());", "+\t\t\t\t\t\t\t((ConstructorDeclaration)method).analyseCode(", "+\t\t\t\t\t\t\t\tscope, ", "+\t\t\t\t\t\t\t\tinitializerContext, ", "+\t\t\t\t\t\t\t\tflowInfo.copy().unconditionalInits().addInitializationsFrom(nonStaticFieldInfo.copy().unconditionalInits().discardNonFieldInitializations()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfb0a3e9026708282a89e636299000b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "055380e1ecf4ba956a2ed12d0bd6afd30fa4bb0d", "commitAfterChange": "5633218f57a8f96a181a737ead7a991d28ce84d5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void analyseCode(ClassScope classScope1)", "signatureAfterChange": " \tpublic void analyseCode(ClassScope classScope1)", "diff": ["-\t\t\t\t\t\t\t((Clinit)method).analyseCode(scope, staticInitializerContext, staticFieldInfo);", "+\t\t\t\t\t\t\t((Clinit)method).analyseCode(", "+\t\t\t\t\t\t\t\tscope, ", "+\t\t\t\t\t\t\t\tstaticInitializerContext, ", "+\t\t\t\t\t\t\t\tflowInfo.copy().unconditionalInits().addInitializationsFrom(staticFieldInfo.unconditionalInits().discardNonFieldInitializations()));", "-\t\t\t\t\t\t\t((ConstructorDeclaration)method).analyseCode(scope, initializerContext, nonStaticFieldInfo.copy());", "+\t\t\t\t\t\t\t((ConstructorDeclaration)method).analyseCode(", "+\t\t\t\t\t\t\t\tscope, ", "+\t\t\t\t\t\t\t\tinitializerContext, ", "+\t\t\t\t\t\t\t\tflowInfo.copy().unconditionalInits().addInitializationsFrom(nonStaticFieldInfo.copy().unconditionalInits().discardNonFieldInitializations()));"]}], "num": 18938}