{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "12d70d9939b26619175c619dce51a28b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7eaec4b8e45102ee4d3aa26b58dbaf27", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/jdom/DOMNode.java", "commitBeforeChange": "79d0c2f491160c45c925011f7ac69394bca87445", "commitAfterChange": "5e822caf41e5c8401dd961b84bb7f6d0d93a554e", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "\r public void insertSibling(IDOMNode sibling) throws IllegalArgumentException, DOMException", "signatureAfterChange": "\r public void insertSibling(IDOMNode sibling) throws IllegalArgumentException, DOMException", "diff": ["-\t\tthrow new IllegalArgumentException(\"attempt to insert null sibling\");\r", "+\t\tthrow new IllegalArgumentException(Util.bind(\"dom.addNullSibling\"/*nonNLS*/));\r", "-\t\tthrow new DOMException(\"attempt to insert sibling before root node\");\r", "+\t\tthrow new DOMException(Util.bind(\"dom.addSiblingBeforeRoot\"/*nonNLS*/));\r", "-\t\tthrow new DOMException(\"attempt to insert sibling of incompatible type\");\r", "+\t\tthrow new DOMException(Util.bind(\"dom.addIncompatibleSibling\"/*nonNLS*/));\r", "-\t\tthrow new DOMException(\"attempt to insert sibling that is already parented\");\r", "+\t\tthrow new DOMException(Util.bind(\"dom.addSiblingWithParent\"/*nonNLS*/));\r", "-\t\tthrow new DOMException(\"attempt to insert ancestor as sibling\");\r", "+\t\tthrow new DOMException(Util.bind(\"dom.addAncestorAsSibling\"/*nonNLS*/));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86548f97663e61774c2118ae8bfa25c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/jdom/DOMNode.java", "commitBeforeChange": "79d0c2f491160c45c925011f7ac69394bca87445", "commitAfterChange": "5e822caf41e5c8401dd961b84bb7f6d0d93a554e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r void basicAddChild(IDOMNode child) throws IllegalArgumentException, DOMException", "signatureAfterChange": "\r void basicAddChild(IDOMNode child) throws IllegalArgumentException, DOMException", "diff": ["-\t\tthrow new DOMException(\"attempt to add child to node that cannot have children\");\r", "+\t\tthrow new DOMException(Util.bind(\"dom.unableAddChild\"/*nonNLS*/));\r", "-\t\tthrow new IllegalArgumentException(\"attempt to add null child\");\r", "+\t\tthrow new IllegalArgumentException(Util.bind(\"dom.addNullChild\"/*nonNLS*/));\r", "-\t\tthrow new DOMException(\"attempt to add child of incompatible type\");\r", "+\t\tthrow new DOMException(Util.bind(\"dom.addIncompatibleChild\"/*nonNLS*/));\r", "-\t\tthrow new DOMException(\"attempt to add child that is already parented\");\r", "+\t\tthrow new DOMException(Util.bind(\"dom.addChildWithParent\"/*nonNLS*/));\r", "-\t\tthrow new DOMException(\"attempt to add ancestor as child\");\r", "+\t\tthrow new DOMException(Util.bind(\"dom.addAncestorAsChild\"/*nonNLS*/));\r"]}], "num": 44248}