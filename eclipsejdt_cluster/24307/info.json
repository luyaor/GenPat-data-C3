{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "69c6465bbe05d3b9d4332ac60ccd4091", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "135798bf804e6b3d739f8a1b83b7c993", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "166df64b1dde30fc61b2e4fda13d5a0d769a3aef", "commitAfterChange": "cd0e6730218f485335b628feb54a852eb0cb6a2f", "methodNumberBeforeChange": 1169, "methodNumberAfterChange": 1169, "signatureBeforeChange": " public void test1140()", "signatureAfterChange": " public void test1140()", "diff": ["-\t\t\"1. ERROR in p\\\\X.java (at line 2)\\r\\n\" +", "-\t\t\"\timport static p.X.Super;\\r\\n\" +", "+\t\t\"1. ERROR in p\\\\X.java (at line 2)\\n\" +", "+\t\t\"\timport static p.X.Super;\\n\" +", "-\t\t\"2. ERROR in p\\\\X.java (at line 9)\\r\\n\" +", "-\t\t\"\tpublic class X extends Super<A<X>> {\\r\\n\" +", "+\t\t\"2. ERROR in p\\\\X.java (at line 9)\\n\" +", "+\t\t\"\tpublic class X extends Super<A<X>> {\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1600414e8f6b571314b22ab75155915a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "abd031a3c5b0ee276f6122fb655251f21f77f5e6", "commitAfterChange": "4b3205881d2b83b4d22e7e7448a1c8a755f73982", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void test003()", "signatureAfterChange": " \tpublic void test003()", "diff": ["-\t\t\t\"Cycle detected: a cycle exists in between annotation attributes of Foo and Bar\\n\" + ", "+\t\t\t\"Cycle detected: a cycle exists between annotation attributes of Foo and Bar\\n\" + ", "-\t\t\t\"Cycle detected: a cycle exists in between annotation attributes of Bar and Foo\\n\" + ", "+\t\t\t\"Cycle detected: a cycle exists between annotation attributes of Bar and Foo\\n\" + ", "-\t\t\t\"Cycle detected: a cycle exists in between annotation attributes of Nested and N2\\n\" + ", "+\t\t\t\"Cycle detected: a cycle exists between annotation attributes of Nested and N2\\n\" + ", "-\t\t\t\"Cycle detected: a cycle exists in between annotation attributes of N2 and Nested\\n\" + ", "+\t\t\t\"Cycle detected: a cycle exists between annotation attributes of N2 and Nested\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "185d1df66f730b540e893bf3b423e5fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchFineGrainTests.java", "commitBeforeChange": "e4723643d8162fae0d7ec03bc461cac8d970e8fd", "commitAfterChange": "0f3bb2f63b9bc5a0a723cb21573a9214f49a822c", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 115, "signatureBeforeChange": " public void testBug212599_all() throws CoreException", "signatureAfterChange": " public void testBug212599_all() throws CoreException", "diff": ["-\t\t\"src/Ref.java Ref Ref.foo() [\tpublic \ufffd|Ref|\ufffd foo() {@46] EXACT_MATCH\\n\" +", "-\t\t\"src/Test.java Test.test [\t\ufffd|Ref|\ufffd test;@41] EXACT_MATCH\\n\" +", "-\t\t\"src/Test.java Ref Test.bar() [\t\ufffd|Ref|\ufffd bar() {@100] EXACT_MATCH\\n\" +", "-\t\t\"src/Test.java Ref Test.bar() [\t\t\treturn new \ufffd|Ref|\ufffd();@210] EXACT_MATCH\"", "+\t\t\"src/Ref.java Ref Ref.foo() [\tpublic !|Ref|! foo() {@46] EXACT_MATCH\\n\" +", "+\t\t\"src/Test.java Test.test [\t!|Ref|! test;@41] EXACT_MATCH\\n\" +", "+\t\t\"src/Test.java Ref Test.bar() [\t!|Ref|! bar() {@100] EXACT_MATCH\\n\" +", "+\t\t\"src/Test.java Ref Test.bar() [\t\t\treturn new !|Ref|!();@210] EXACT_MATCH\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d4696b19bcc91eb8e6384b77f791c45", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_4.java", "commitBeforeChange": "dbe199a0a35ed3939846015f97b0348b23531353", "commitAfterChange": "f86c66887c5e1ed3962b4b871db70881ac5621a6", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tpublic void testBug83127d()", "signatureAfterChange": " \tpublic void testBug83127d()", "diff": ["-\t\t\t\"Syntax error, type parameters are only available if source level is 5.0\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 5.0\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 5.0\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "-\t\t\t\"Syntax error, parameterized types are only available if source level is 5.0\\n\" + ", "+\t\t\t\"Syntax error, parameterized types are only available if source level is 1.5\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "206d383f5be760d73de99fa798dc3ae5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "635cdb5a7a6689c525de4e28f32c0630009bc2be", "commitAfterChange": "5b2fc25f0a222e2b576998a935fd1c748e775e70", "methodNumberBeforeChange": 998, "methodNumberAfterChange": 998, "signatureBeforeChange": " public void testBug351444c() throws JavaModelException", "signatureAfterChange": " public void testBug351444c() throws JavaModelException", "diff": ["-\t\t\t\t\"TXYU[CONSTRUCTOR_INVOCATION]{(), Ltest.Test<Ljava.lang.Object;>.TXYU;, (Ljava.lang.String;Ljava.lang.String;)V, TXYU, (s, s2), 27}\\n\" +", "-\t\t\t\t\"   Test.TXYU[TYPE_REF]{TXYU, test, Ltest.Test$TXYU;, null, null, 27}\\n\" +", "-\t\t\t\t\"TXYU[CONSTRUCTOR_INVOCATION]{(), Ltest.Test<Ljava.lang.Object;>.TXYU;, (TT;)V, TXYU, (t), 27}\\n\" +", "-\t\t\t\t\"   Test.TXYU[TYPE_REF]{TXYU, test, Ltest.Test$TXYU;, null, null, 27}\",", "+\t\t\t\t\"TXYU[CONSTRUCTOR_INVOCATION]{(), Ltest.Test<Ljava.lang.Object;>.TXYU;, (Ljava.lang.String;Ljava.lang.String;)V, TXYU, (s, s2), 30}\\n\" +", "+\t\t\t\t\"   Test.TXYU[TYPE_REF]{TXYU, test, Ltest.Test$TXYU;, null, null, 30}\\n\" +", "+\t\t\t\t\"TXYU[CONSTRUCTOR_INVOCATION]{(), Ltest.Test<Ljava.lang.Object;>.TXYU;, (TT;)V, TXYU, (t), 30}\\n\" +", "+\t\t\t\t\"   Test.TXYU[TYPE_REF]{TXYU, test, Ltest.Test$TXYU;, null, null, 30}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25e4e2c50500cccab7c5822cb420e17c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_4.java", "commitBeforeChange": "dbe199a0a35ed3939846015f97b0348b23531353", "commitAfterChange": "f86c66887c5e1ed3962b4b871db70881ac5621a6", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " \tpublic void testBug83127g()", "signatureAfterChange": " \tpublic void testBug83127g()", "diff": ["-\t\t\t\"Syntax error, type parameters are only available if source level is 5.0\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 5.0\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 5.0\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "-\t\t\t\"Syntax error, parameterized types are only available if source level is 5.0\\n\" + ", "+\t\t\t\"Syntax error, parameterized types are only available if source level is 1.5\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "267a61e10085aa25597415ca66a3ab36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugs8Tests.java", "commitBeforeChange": "ca289ff4e9317024e3c3a344a3b266fd883ffd1d", "commitAfterChange": "aacce274176303cc524a6360232ca1201922c452", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " public void testBug400905_0004() throws CoreException", "signatureAfterChange": " public void testBug400905_0004() throws CoreException", "diff": ["-\t\t\t\"src/b400905/I.java T b400905.I.foo() [foo] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/b400905/X.java b400905/Y void b400905.X.main(String[]):<lambda>#1.lambda$1() [() /* foo */ ->] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/b400905/X.java b400905/Y void b400905.X.main(String[]):<lambda>#3.lambda$3() [() /* true */->] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/b400905/X.java b400905/Y void b400905.X.main(String[]):<lambda>#4.lambda$4() [() /* false */ ->] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/b400905/X.java java/lang/Object void b400905.X.main(String[]):<lambda>#5.lambda$5() [() /* cast */ ->] EXACT_MATCH\"", "+\t\t\t\t\t\"src/b400905/I.java T b400905.I.foo() [foo] EXACT_MATCH\\n\" + ", "+\t\t\t\t\t\"src/b400905/X.java b400905/Y void b400905.X.main(String[]):Lambda(I).foo() [() /* foo */ ->] EXACT_MATCH\\n\" + ", "+\t\t\t\t\t\"src/b400905/X.java b400905/Y void b400905.X.main(String[]):Lambda(I).foo() [() /* true */->] EXACT_MATCH\\n\" + ", "+\t\t\t\t\t\"src/b400905/X.java b400905/Y void b400905.X.main(String[]):Lambda(I).foo() [() /* false */ ->] EXACT_MATCH\\n\" + ", "+\t\t\t\t\t\"src/b400905/X.java java/lang/Object void b400905.X.main(String[]):Lambda(I).foo() [() /* cast */ ->] EXACT_MATCH\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e60ae0257a90c3c906c41b3ef2241f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "7cdc478cdd8ecd6517119ed517a89b2200812e0f", "commitAfterChange": "8a633d56819c44af45234d7a3760b2d36e5276ed", "methodNumberBeforeChange": 404, "methodNumberAfterChange": 404, "signatureBeforeChange": " public void testBug317719d() throws Exception", "signatureAfterChange": " public void testBug317719d() throws Exception", "diff": ["-\t\t\t\"Method foo(List<String>) has the same erasure foo(List<E>) as another method in type X\\n\" + ", "+\t\t\t\"Erasure of method foo(List<String>) is the same as another method in type X\\n\" +", "-\t\t\t\"Method foo(List<Integer>) has the same erasure foo(List<E>) as another method in type X\\n\" + ", "+\t\t\t\"Erasure of method foo(List<Integer>) is the same as another method in type X\\n\" +", "-\t\t\t\t\"Method foo(List<String>) has the same erasure foo(List<E>) as another method in type X\\n\" + ", "+\t\t\t\t\"Erasure of method foo(List<String>) is the same as another method in type X\\n\" +", "-\t\t\t\t\"Method foo(List<Integer>) has the same erasure foo(List<E>) as another method in type X\\n\" + ", "+\t\t\t\t\"Erasure of method foo(List<Integer>) is the same as another method in type X\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3724a9732de9454e810e3286a04fea9c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestForMethod.java", "commitBeforeChange": "cdead094a9813fdba5ccda0ce2f9f48a99552dbc", "commitAfterChange": "3be4aa0b7d051355f329ce1003f3f4c0f7acfab2", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 91, "signatureBeforeChange": "  \tpublic void test126()", "signatureAfterChange": "  \tpublic void test126()", "diff": ["-\t\t\t\t+ \"\t                ^^^^^^^^^^^^^^^\\n\"", "+\t\t\t\t+ \"\t               ^^^^^^^^^^^^^^^^\\n\"", "-\t\t\t\t+ \"\t                ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\"", "+\t\t\t\t+ \"\t               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\"", "-\t\t\t\t+ \"\t                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\"", "+\t\t\t\t+ \"\t               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\"", "-\t\t\t\t+ \"\t                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\"", "+\t\t\t\t+ \"\t               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b6ae22d4a898a1af4760c50ded72113", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/CompletionParserTest2.java", "commitBeforeChange": "e3b61331087882f47093048d6298d97548b68615", "commitAfterChange": "9ae1dbe2eb10f60df8b987132110cee826808427", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " public void test0069()", "signatureAfterChange": " public void test0069()", "diff": ["-\tString expectedParentNodeToString = \"new X[]{<CompleteOnName:zzz>,}\";", "+\tString expectedParentNodeToString = \"new X[]{<CompleteOnName:zzz>}\";", "-\t\t\"      new X[]{<CompleteOnName:zzz>,};\\n\" + ", "+\t\t\"      new X[]{<CompleteOnName:zzz>};\\n\" + ", "-\texpectedParentNodeToString = \"new X[]{<CompleteOnName:zzz>,}\";", "+\texpectedParentNodeToString = \"new X[]{<CompleteOnName:zzz>}\";", "-\t\t\"    Object o = new X[]{<CompleteOnName:zzz>,};\\n\" + ", "+\t\t\"    Object o = new X[]{<CompleteOnName:zzz>};\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "543b3c0b5364a02e7e74832e77a619ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "4b3205881d2b83b4d22e7e7448a1c8a755f73982", "commitAfterChange": "c30613b3c1eac52834666cb07a38e3f9077e1829", "methodNumberBeforeChange": 679, "methodNumberAfterChange": 679, "signatureBeforeChange": " public void test675()", "signatureAfterChange": " public void test675()", "diff": ["-\t\t\"1. ERROR in X.java (at line 5)\\r\\n\" + ", "-\t\t\"\tStore<? extends Key<T>> store1;\\r\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\"\tStore<? extends Key<T>> store1;\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 6)\\r\\n\" + ", "-\t\t\"\tStore<? extends Key<? extends T>> store2;\\r\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"\tStore<? extends Key<? extends T>> store2;\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5447847f814ecbf2fe5b80ae3dda584e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "82dc67de142f757f6098e678017a2b32f752c9b7", "commitAfterChange": "5249d37677c0ce4d66ab262efb5c3dd4aa089796", "methodNumberBeforeChange": 148, "methodNumberAfterChange": 148, "signatureBeforeChange": " public void test143()", "signatureAfterChange": " public void test143()", "diff": ["-\t\t\"1. ERROR in X.java (at line 7)\\n\" +", "-\t\t\"\tpublic abstract String a();\\n\" +", "-\t\t\"\t                       ^^^\\n\" +", "-\t\t\"The abstract method a in type new X(){} can only be defined by an abstract class\\n\" +", "+\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\"\tA {\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"The enum constant A cannot define abstract methods\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "775fe5bc8aefa76541ff8b6e4e3917f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "7cdc478cdd8ecd6517119ed517a89b2200812e0f", "commitAfterChange": "8a633d56819c44af45234d7a3760b2d36e5276ed", "methodNumberBeforeChange": 272, "methodNumberAfterChange": 272, "signatureBeforeChange": " public void test120a()", "signatureAfterChange": " public void test120a()", "diff": ["-\t\t\t\"Method getThing(V) has the same erasure getThing(Object) as another method in type Foo<V,E>\\n\" + ", "+\t\t\t\"Erasure of method getThing(V) is the same as another method in type Foo<V,E>\\n\" +", "-\t\t\t\"Method getThing(E) has the same erasure getThing(Object) as another method in type Foo<V,E>\\n\" + ", "+\t\t\t\"Erasure of method getThing(E) is the same as another method in type Foo<V,E>\\n\" +", "-\t\t\t\t\"Method getThing(V) has the same erasure getThing(Object) as another method in type Foo<V,E>\\n\" + ", "+\t\t\t\t\"Erasure of method getThing(V) is the same as another method in type Foo<V,E>\\n\" +", "-\t\t\t\t\"Method getThing(E) has the same erasure getThing(Object) as another method in type Foo<V,E>\\n\" + ", "+\t\t\t\t\"Erasure of method getThing(E) is the same as another method in type Foo<V,E>\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79e234865346de03be965b581dc5de2a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "9850e4ae951b6df5bc8bfe162d8a3e3e67beff62", "commitAfterChange": "e9ca95978aca2a442bfecfb8ac281f372092486a", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic void test016()", "signatureAfterChange": " \tpublic void test016()", "diff": ["-\t\t\t\"     9  getstatic java/lang/System.out Ljava/io/PrintStream; [21]\\n\" + ", "+\t\t\t\"     9  getstatic java.lang.System.out : java.io.PrintStream [21]\\n\" + ", "-\t\t\t\"    13  invokevirtual java/io/PrintStream.println(I)V [27]\\n\" + ", "+\t\t\t\"    13  invokevirtual java.io.PrintStream.println(int) : void  [27]\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 17] local: args index: 0 type: [Ljava/lang/String;\\n\" + ", "-\t\t\t\"        [pc: 3, pc: 17] local: i index: 1 type: I\\n\";", "+\t\t\t\"        [pc: 0, pc: 17] local: args index: 0 type: java.lang.String[]\\n\" + ", "+\t\t\t\"        [pc: 3, pc: 17] local: i index: 1 type: int\\n\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ae575965cd035fcab0458992a087a09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "194abd534b611ec2d23ab367d4102b5723758d82", "commitAfterChange": "c7d3258ae74375a57da545fcb11a05d452eeaa7b", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " \tpublic void test0060() throws JavaModelException", "signatureAfterChange": " \tpublic void test0060() throws JavaModelException", "diff": ["-\t\t\t\"Lp/X;.foo<T:Ljava/lang/Object;>(TT;)V^0\\n\" + ", "-\t\t\t\"Lp/X;.foo<T:Lp/X;>(TT;)V^0\\n\" + ", "-\t\t\t\"Lp/X;.foo<T:Ljava/lang/Class;>(TT;)V^0\\n\" + ", "-\t\t\t\"Lp/X;.foo<T:Ljava/lang/Exception;:Ljava/lang/Runnable;>(TT;)V^0\",", "+\t\t\t\"Lp/X;.foo<T:Ljava/lang/Object;>(TT;)V\\n\" + ", "+\t\t\t\"Lp/X;.foo<T:Lp/X;>(TT;)V\\n\" + ", "+\t\t\t\"Lp/X;.foo<T:Ljava/lang/Class;>(TT;)V\\n\" + ", "+\t\t\t\"Lp/X;.foo<T:Ljava/lang/Exception;:Ljava/lang/Runnable;>(TT;)V\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94f3447b2cebf11dea9ac9525d861edf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SelectionJavadocModelTests.java", "commitBeforeChange": "d82bab5c3bc5a3dc0c32d13db0378bcec919d784", "commitAfterChange": "8d68c9962442e5181cbad94c9202c0f79b424840", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  \tpublic void test16() throws JavaModelException", "signatureAfterChange": "  \tpublic void test16() throws JavaModelException", "diff": ["-\t\t\t\"Test {key=LTest;} [in [Working copy] Test.java [in <default> [in <project root> [in Tests]]]]\\n\" + ", "-\t\t\t\"Other {key=LTest~Other;} [in [Working copy] Test.java [in <default> [in <project root> [in Tests]]]]\\n\" + ", "-\t\t\t\"Test {key=LTest;} [in [Working copy] Test.java [in <default> [in <project root> [in Tests]]]]\\n\" + ", "-\t\t\t\"Other {key=LTest~Other;} [in [Working copy] Test.java [in <default> [in <project root> [in Tests]]]]\",", "+\t\t\t\"Test [in [Working copy] Test.java [in <default> [in <project root> [in Tests]]]]\\n\" + ", "+\t\t\t\"Other [in [Working copy] Test.java [in <default> [in <project root> [in Tests]]]]\\n\" + ", "+\t\t\t\"Test [in [Working copy] Test.java [in <default> [in <project root> [in Tests]]]]\\n\" + ", "+\t\t\t\"Other [in [Working copy] Test.java [in <default> [in <project root> [in Tests]]]]\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a9cb9aa745cfa5acfed16d8052591ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/DietRecoveryTest.java", "commitBeforeChange": "37a33fa365c1afc824ee6b5c0e146fff8db0d79c", "commitAfterChange": "254a144fb8ad02730db7fb5ae51a3f1d563a3301", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": "  public void test91()", "signatureAfterChange": "  public void test91()", "diff": ["-\t\t\"public interface Spew {\t\t\\n\" +", "+\t\t\"public interface Fred {\t\t\\n\" +", "-\t\t\"\tpublic spew(X x, int y);\t\\n\" +", "+\t\t\"\tpublic fred(X x, int y);\t\\n\" +", "-\t\t\"public interface Spew {\\n\" + ", "+\t\t\"public interface Fred {\\n\" + ", "-\t\t\"  public spew(X x, int y) {\\n\" + ", "+\t\t\"  public fred(X x, int y) {\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac09177da6ebaf25b443bb30942c8c48", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "b90d03d10edcf027d98e7722223f9b745793a6bb", "commitAfterChange": "e353428f475e976a008afa67ff7f1e16e03ec95c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void test001() throws JavaModelException", "signatureAfterChange": " public void test001() throws JavaModelException", "diff": ["-\t\t\"link[JAVADOC_INLINE_TAG]{{@link }, null, null, link, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\\n\" + ", "-\t\t\"docRoot[JAVADOC_INLINE_TAG]{{@docRoot }, null, null, docRoot, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\\n\" + ", "-\t\t\"linkplain[JAVADOC_INLINE_TAG]{{@linkplain }, null, null, linkplain, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\\n\" + ", "-\t\t\"value[JAVADOC_INLINE_TAG]{{@value }, null, null, value, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\"", "+\t\t\"link[JAVADOC_INLINE_TAG]{{@link}, null, null, link, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\\n\" + ", "+\t\t\"docRoot[JAVADOC_INLINE_TAG]{{@docRoot}, null, null, docRoot, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\\n\" + ", "+\t\t\"linkplain[JAVADOC_INLINE_TAG]{{@linkplain}, null, null, linkplain, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\\n\" + ", "+\t\t\"value[JAVADOC_INLINE_TAG]{{@value}, null, null, value, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccc3662bad6ce4607db1c91ec25de1f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchFineGrainTests.java", "commitBeforeChange": "e4723643d8162fae0d7ec03bc461cac8d970e8fd", "commitAfterChange": "0f3bb2f63b9bc5a0a723cb21573a9214f49a822c", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void testMethodRef() throws CoreException", "signatureAfterChange": " public void testMethodRef() throws CoreException", "diff": ["-\t\t\"src/meth/ref/TestMethods.java void meth.ref.TestMethods.foo(Methods) [\t\tsuper.\ufffd|method()|\ufffd;@121] EXACT_MATCH\\n\" +", "-\t\t\"src/meth/ref/TestMethods.java void meth.ref.TestMethods.foo(Methods) [\t\tparam.\ufffd|method()|\ufffd;@139] EXACT_MATCH\\n\" +", "-\t\t\"src/meth/ref/TestMethods.java void meth.ref.TestMethods.foo(Methods) [\t\tthis.\ufffd|method()|\ufffd;@156] EXACT_MATCH\\n\" +", "-\t\t\"src/meth/ref/TestMethods.java void meth.ref.TestMethods.foo(Methods) [\t\t\ufffd|method()|\ufffd;@168] EXACT_MATCH\"", "+\t\t\"src/meth/ref/TestMethods.java void meth.ref.TestMethods.foo(Methods) [\t\tsuper.!|method()|!;@121] EXACT_MATCH\\n\" +", "+\t\t\"src/meth/ref/TestMethods.java void meth.ref.TestMethods.foo(Methods) [\t\tparam.!|method()|!;@139] EXACT_MATCH\\n\" +", "+\t\t\"src/meth/ref/TestMethods.java void meth.ref.TestMethods.foo(Methods) [\t\tthis.!|method()|!;@156] EXACT_MATCH\\n\" +", "+\t\t\"src/meth/ref/TestMethods.java void meth.ref.TestMethods.foo(Methods) [\t\t!|method()|!;@168] EXACT_MATCH\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2536660ea0d5131ef9e69af5efc0d93", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TryStatementTest.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": " public void test066()", "signatureAfterChange": " public void test066()", "diff": ["-\t\t\"1. ERROR in X.java (at line 4)\\r\\n\" + ", "-\t\t\"\tZork z = null;\\r\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\"\tZork z = null;\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 6)\\r\\n\" + ", "-\t\t\"\t} catch(Zork z) {\\r\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"\t} catch(Zork z) {\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d91151abf664e0765c2ebc38adfb796d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_3.java", "commitBeforeChange": "dbe199a0a35ed3939846015f97b0348b23531353", "commitAfterChange": "f86c66887c5e1ed3962b4b871db70881ac5621a6", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " \tpublic void testBug83127e()", "signatureAfterChange": " \tpublic void testBug83127e()", "diff": ["-\t\t\t\"Syntax error, type parameters are only available if source level is 5.0\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 5.0\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 5.0\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "-\t\t\t\"Syntax error, parameterized types are only available if source level is 5.0\\n\" + ", "+\t\t\t\"Syntax error, parameterized types are only available if source level is 1.5\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da9ae7d07f7795b11bf735e27206271e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "9850e4ae951b6df5bc8bfe162d8a3e3e67beff62", "commitAfterChange": "e9ca95978aca2a442bfecfb8ac281f372092486a", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic void test020()", "signatureAfterChange": " \tpublic void test020()", "diff": ["-\t\t\t\"     8  getstatic java/lang/System.out Ljava/io/PrintStream; [21]\\n\" + ", "+\t\t\t\"     8  getstatic java.lang.System.out : java.io.PrintStream [21]\\n\" + ", "-\t\t\t\"    12  invokevirtual java/io/PrintStream.println(I)V [27]\\n\" + ", "+\t\t\t\"    12  invokevirtual java.io.PrintStream.println(int) : void  [27]\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 16] local: args index: 0 type: [Ljava/lang/String;\\n\" + ", "-\t\t\t\"        [pc: 3, pc: 16] local: i index: 1 type: I\\n\";", "+\t\t\t\"        [pc: 0, pc: 16] local: args index: 0 type: java.lang.String[]\\n\" + ", "+\t\t\t\"        [pc: 3, pc: 16] local: i index: 1 type: int\\n\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea9e2de0a6cf025abb7ffad4bbe6e871", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchJavadocTests.java", "commitBeforeChange": "3a514d6cf7a163df7c9aa1b24e69e8f3a5b39e3c", "commitAfterChange": "0aeaaba7ea908a19742d309ce070fd6d99b6c4d4", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tpublic void testBug47968field() throws CoreException", "signatureAfterChange": " \tpublic void testBug47968field() throws CoreException", "diff": ["-//\t\tJavaSearchResultCollector result = new JavaSearchResultCollector();", "-//\t\tresult.showAccuracy = true;", "-\t\t\t\"src/j2/Bug47968s.java j2.Bug47968s [x] EXACT_MATCH\\n\" + // This match was not found before...", "-\t\t\t\"src/j2/Bug47968s.java j2.Bug47968s.y [x] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/j2/Bug47968s.java j2.Bug47968s() [x] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/j2/Bug47968s.java void j2.Bug47968s.bar() [x] EXACT_MATCH\",", "+\t\t\t\"src/j2/Bug47968s.java j2.Bug47968s [x] EXACT_MATCH INSIDE_JAVADOC\\n\" + // This match was not found before...", "+\t\t\t\"src/j2/Bug47968s.java j2.Bug47968s.y [x] EXACT_MATCH INSIDE_JAVADOC\\n\" + ", "+\t\t\t\"src/j2/Bug47968s.java j2.Bug47968s() [x] EXACT_MATCH INSIDE_JAVADOC\\n\" + ", "+\t\t\t\"src/j2/Bug47968s.java void j2.Bug47968s.bar() [x] EXACT_MATCH INSIDE_JAVADOC\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f68796ef062926f40009893af2e3717a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "635cdb5a7a6689c525de4e28f32c0630009bc2be", "commitAfterChange": "5b2fc25f0a222e2b576998a935fd1c748e775e70", "methodNumberBeforeChange": 997, "methodNumberAfterChange": 997, "signatureBeforeChange": " public void testBug351444b() throws JavaModelException", "signatureAfterChange": " public void testBug351444b() throws JavaModelException", "diff": ["-\t\t\t\t\"TXYU[CONSTRUCTOR_INVOCATION]{(), Ltest.Test<Ljava.lang.Object;>.TXYU;, (Ljava.lang.String;Ljava.lang.String;)V, TXYU, (s, s2), 27}\\n\" +", "-\t\t\t\t\"   Test.TXYU[TYPE_REF]{TXYU, test, Ltest.Test$TXYU;, null, null, 27}\\n\" +", "-\t\t\t\t\"TXYU[CONSTRUCTOR_INVOCATION]{(), Ltest.Test<Ljava.lang.Object;>.TXYU;, (TT;)V, TXYU, (t), 27}\\n\" +", "-\t\t\t\t\"   Test.TXYU[TYPE_REF]{TXYU, test, Ltest.Test$TXYU;, null, null, 27}\",", "+\t\t\t\t\"TXYU[CONSTRUCTOR_INVOCATION]{(), Ltest.Test<Ljava.lang.Object;>.TXYU;, (Ljava.lang.String;Ljava.lang.String;)V, TXYU, (s, s2), 30}\\n\" +", "+\t\t\t\t\"   Test.TXYU[TYPE_REF]{TXYU, test, Ltest.Test$TXYU;, null, null, 30}\\n\" +", "+\t\t\t\t\"TXYU[CONSTRUCTOR_INVOCATION]{(), Ltest.Test<Ljava.lang.Object;>.TXYU;, (TT;)V, TXYU, (t), 30}\\n\" +", "+\t\t\t\t\"   Test.TXYU[TYPE_REF]{TXYU, test, Ltest.Test$TXYU;, null, null, 30}\","]}], "num": 24307}