{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "22370b5392863d8bc52f2cddfc7f9389", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43db5f998e39ee69d192e08151fc12ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic IJavaModelStatus verify()", "signatureAfterChange": "  \tpublic IJavaModelStatus verify()", "diff": ["-", "-", "-\t\tif (!status.isOK()) {", "+\t\tif (!status.isOK())", "-\t\t}", "-", "-\t\tif (needValidation) {", "-\t\t\t// retrieve classpath ", "-\t\t\tIClasspathEntry[] entries = this.newRawPath;", "-\t\t\tif (entries == DO_NOT_SET_ENTRIES){", "-\t\t\t\ttry {", "-\t\t\t\t\tentries = project.getRawClasspath();\t\t\t", "-\t\t\t\t} catch (JavaModelException e) {", "-\t\t\t\t\treturn e.getJavaModelStatus();", "-\t\t\t\t}", "-\t\t\t}\t\t", "-\t\t\t// retrieve output location", "-\t\t\tIPath outputLocation = this.newOutputLocation;", "-\t\t\tif (outputLocation == DO_NOT_SET_OUTPUT){", "-\t\t\t\ttry {", "-\t\t\t\t\toutputLocation = project.getOutputLocation();", "-\t\t\t\t} catch (JavaModelException e) {", "-\t\t\t\t\treturn e.getJavaModelStatus();", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\t\t\t", "-\t\t\t// perform validation", "-\t\t\treturn ClasspathEntry.validateClasspath(", "-\t\t\t\tproject,", "-\t\t\t\tentries,", "-\t\t\t\toutputLocation);", "-\t\t}", "-\t\t", "-\t\treturn JavaModelStatus.VERIFIED_OK;", "+\t\treturn ClasspathEntry.validateClasspath(\tthis.project, this.newRawClasspath, this.newOutputLocation);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6975962c4776692cf7a3137e5ee0858b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "d785f90166aa4c50a893672b2f8b10875313fedd", "commitAfterChange": "b8b352fc846455808f45330cfd0c7d70c44859bf", "methodNumberBeforeChange": 172, "methodNumberAfterChange": 172, "signatureBeforeChange": " \tpublic void test166()", "signatureAfterChange": " \tpublic void test166() throws Exception", "diff": ["-\tpublic void test166() {", "+\tpublic void test166() throws Exception {", "-\t\ttry {", "-\t\t\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "-\t\t\tfinal byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +\"X.class\"));", "-\t\t\tnew ClassFileReader(classFileBytes, \"X.java\".toCharArray(), true);", "-\t\t\tdisassembler.disassemble(", "-\t\t\t\t\tclassFileBytes,", "-\t\t\t\t\t\"\\n\",", "-\t\t\t\t\tClassFileBytesDisassembler.DETAILED);\t\t\t", "-\t\t} catch (ClassFormatException e) {", "-\t\t\te.printStackTrace();", "-\t\t\tassertTrue(\"ClassFormatException\", false);", "-\t\t} catch (org.eclipse.jdt.core.util.ClassFormatException e) {", "-\t\t\te.printStackTrace();", "-\t\t\tassertTrue(\"ClassFormatException\", false);", "-\t\t} catch (IOException e) {", "-\t\t\te.printStackTrace();", "-\t\t\tassertTrue(\"IOException\", false);", "-\t\t}", "+\t\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "+\t\tfinal byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +\"X.class\"));", "+\t\tnew ClassFileReader(classFileBytes, \"X.java\".toCharArray(), true);", "+\t\tdisassembler.disassemble(", "+\t\t\t\tclassFileBytes,", "+\t\t\t\t\"\\n\",", "+\t\t\t\tClassFileBytesDisassembler.DETAILED);\t\t\t"]}], "num": 44733}