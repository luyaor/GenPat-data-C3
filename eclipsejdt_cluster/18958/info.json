{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "229aa48a317ac223dafd65c4c6a7fa36", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cd4cbde4651327d9f09a0f56222de0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CaseStatement.java", "commitBeforeChange": "45da29fec046b4bab81c695f4ab7b327659ef75f", "commitAfterChange": "a81195ff09b3e00d1785645fd080f14d3c2692cf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic String toString(int tab)", "signatureAfterChange": "  \tpublic String toString(int tab)", "diff": ["+\t\tif (constantExpression == null) {", "+\t\t\ts = s + \"default : \"; //$NON-NLS-1$", "+\t\t} else {", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d0b21620f1c07c8624a9423e962933e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/ToolFactory.java", "commitBeforeChange": "13d88a2db10e3a34264b75313001b46a5abddbdd", "commitAfterChange": "364abd1fe47d562f576cb6b54a083094e0671f23", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static CodeFormatter createCodeFormatter(Map options, int mode)", "signatureAfterChange": " \tpublic static CodeFormatter createCodeFormatter(Map options, int mode)", "diff": ["-\t\tIExtensionPoint extension = Platform.getExtensionRegistry().getExtensionPoint(JavaCore.PLUGIN_ID,", "-\t\t\t\tJavaCore.JAVA_FORMATTER_EXTENSION_POINT_ID);", "-\t\tif (extension != null) {", "-\t\t\tIExtension[] extensions = extension.getExtensions();", "-\t\t\tfor (int i = 0; i < extensions.length; i++) {", "-\t\t\t\tIConfigurationElement[] configElements = extensions[i].getConfigurationElements();", "-\t\t\t\tfor (int j = 0; j < configElements.length; j++) {", "-\t\t\t\t\tString initializerID = configElements[j].getAttribute(\"id\"); //$NON-NLS-1$", "-\t\t\t\t\tif (initializerID != null && initializerID.equals(formatterId)) {", "-\t\t\t\t\t\ttry {", "-\t\t\t\t\t\t\tObject execExt = configElements[j].createExecutableExtension(\"class\"); //$NON-NLS-1$", "-\t\t\t\t\t\t\tif (execExt instanceof CodeFormatter) {", "-\t\t\t\t\t\t\t\tCodeFormatter formatter = (CodeFormatter) execExt;", "-\t\t\t\t\t\t\t\tformatter.setOptions(currentOptions);", "-\t\t\t\t\t\t\t\treturn formatter;", "+\t\tif (formatterId != null) {", "+\t\t\tIExtensionPoint extension = Platform.getExtensionRegistry().getExtensionPoint(JavaCore.PLUGIN_ID,", "+\t\t\t\t\tJavaCore.JAVA_FORMATTER_EXTENSION_POINT_ID);", "+\t\t\tif (extension != null) {", "+\t\t\t\tIExtension[] extensions = extension.getExtensions();", "+\t\t\t\tfor (int i = 0; i < extensions.length; i++) {", "+\t\t\t\t\tIConfigurationElement[] configElements = extensions[i].getConfigurationElements();", "+\t\t\t\t\tfor (int j = 0; j < configElements.length; j++) {", "+\t\t\t\t\t\tString initializerID = configElements[j].getAttribute(\"id\"); //$NON-NLS-1$", "+\t\t\t\t\t\tif (initializerID != null && initializerID.equals(formatterId)) {", "+\t\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\t\tObject execExt = configElements[j].createExecutableExtension(\"class\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tif (execExt instanceof CodeFormatter) {", "+\t\t\t\t\t\t\t\t\tCodeFormatter formatter = (CodeFormatter) execExt;", "+\t\t\t\t\t\t\t\t\tformatter.setOptions(currentOptions);", "+\t\t\t\t\t\t\t\t\treturn formatter;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t} catch (CoreException e) {", "+\t\t\t\t\t\t\t\torg.eclipse.jdt.internal.core.util.Util.log(e.getStatus());", "+\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t} catch (CoreException e) {", "-\t\t\t\t\t\t\torg.eclipse.jdt.internal.core.util.Util.log(e.getStatus());", "-\t\t\t\t\t\t\tbreak;", "+\t\t\torg.eclipse.jdt.internal.core.util.Util.log(IStatus.WARNING,", "+\t\t\t\t\t\"Unable to instantiate formatter extension '\" + formatterId + \"', returning built-in formatter.\"); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\torg.eclipse.jdt.internal.core.util.Util.log(IStatus.WARNING,", "-\t\t\t\t\"Unable to instantiate formatter extension, returning built-in formatter.\"); //$NON-NLS-1$"]}], "num": 18958}