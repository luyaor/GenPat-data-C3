{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dc2ecb84965fcb63ad5506db77afa0e3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "598c47e396205d74e2a042118e369260", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic MethodDeclaration addMissingAbstractMethodFor(MethodBinding methodBinding)", "signatureAfterChange": " \tpublic MethodDeclaration addMissingAbstractMethodFor(MethodBinding methodBinding)", "diff": ["-\t\tmethodDeclaration.modifiers = methodBinding.getAccessFlags() & ~AccAbstract;", "+\t\tmethodDeclaration.modifiers = methodBinding.getAccessFlags() & ~ClassFileConstants.AccAbstract;", "-\t\t\t\targuments[i] = new Argument((baseName + i).toCharArray(), 0L, null /*type ref*/, AccDefault);", "+\t\t\t\targuments[i] = new Argument((baseName + i).toCharArray(), 0L, null /*type ref*/, ClassFileConstants.AccDefault);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3dba4ccfa8df2508c26c2ba09a5da0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic MethodBinding createDefaultConstructorWithBinding(MethodBinding inheritedConstructorBinding)", "signatureAfterChange": " \tpublic MethodBinding createDefaultConstructorWithBinding(MethodBinding inheritedConstructorBinding)", "diff": ["-\t\tint newModifiers = modifiers & AccVisibilityMASK;", "+\t\tint newModifiers = modifiers & ExtraCompilerModifiers.AccVisibilityMASK;", "-\t\t\tnewModifiers |= AccVarargs;", "+\t\t\tnewModifiers |= ClassFileConstants.AccVarargs;", "-\t\t\t\targuments[i] = new Argument((baseName + i).toCharArray(), 0L, null /*type ref*/, AccDefault);", "+\t\t\t\targuments[i] = new Argument((baseName + i).toCharArray(), 0L, null /*type ref*/, ClassFileConstants.AccDefault);"]}], "num": 6584}