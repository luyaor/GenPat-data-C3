{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a90c76eae3ca77b2d8f9d509bf7e6fa", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c98d4dbb4e339a93772725273df7ea2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Reference.java", "commitBeforeChange": "06064c92d09e456594a894c34405825ceb63b7a3", "commitAfterChange": "b500b37157d72fea7a1c28978d85ecef6d99e020", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "signatureAfterChange": " public abstract FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound);", "diff": ["-public FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound) {", "-\tthrow new ShouldNotImplement(Util.bind(\"ast.variableShouldProvide\")); //$NON-NLS-1$", "-}", "+public abstract FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1e1e24e268a9a5ee4d293f5970ec6cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Statement.java", "commitBeforeChange": "1612764cac82755ece5bb371b617dba233a98e7f", "commitAfterChange": "8c29aa3fa0448849c8533e1f7546be02666bcecd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \t \tpublic abstract void generateCode(BlockScope currentScope, CodeStream codeStream);", "diff": ["-\tpublic void generateCode(BlockScope currentScope, CodeStream codeStream) {", "-\t\tthrow new ShouldNotImplement(Util.bind(\"ast.missingStatement\")); //$NON-NLS-1$", "-\t}", "+\tpublic abstract void generateCode(BlockScope currentScope, CodeStream codeStream);"]}], "num": 62744}