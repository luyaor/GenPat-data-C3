{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8e25490db1a6c68b63a8c57b3835c6e9", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19b9b89e16fd0e4e0dbe093d09997e68", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "424b9c711eb8f066b325841662effb171f3ae4ef", "commitAfterChange": "4d19416746402b8fbbfd02c13772658da70a345a", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 35, "signatureBeforeChange": "\r \tpublic IPackageFragmentRoot[] getPackageFragmentRoots()\r \t\tthrows JavaModelException", "signatureAfterChange": "\r \tpublic IPackageFragmentRoot[] getPackageFragmentRoots()\r \t\tthrows JavaModelException", "diff": ["-\t\tIPackageFragmentRoot[] children = getAllPackageFragmentRoots();\r", "-\t\tObjectVector directChildren = new ObjectVector();\r", "+\t\tObject[] children;\r", "+\t\tint length;\r", "+\t\tIPackageFragmentRoot[] roots;\r", "-\t\tfor (int i = 0; i < children.length; i++) {\r", "-\t\t\tIPackageFragmentRoot root = children[i];\r", "-\t\t\tIJavaProject proj = root.getJavaProject();\r", "-\t\t\tif (proj != null && proj.equals(this)) {\r", "-\t\t\t\tdirectChildren.add(root);\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\tchildren = new IPackageFragmentRoot[directChildren.size()];\r", "-\t\tdirectChildren.copyInto(children);\r", "-\t\treturn children;\r", "+\t\tSystem.arraycopy(\r", "+\t\t\tchildren = getChildren(), \r", "+\t\t\t0, \r", "+\t\t\troots = new IPackageFragmentRoot[length = children.length], \r", "+\t\t\t0, \r", "+\t\t\tlength);\r", "+\t\t\t\r", "+\t\treturn roots;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1b0cf364ca86f98ca9dfe34afaecac7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "c333ceff8dd520a0590ee780b2fe8c5efcd4c013", "commitAfterChange": "c77b24714f3e6f9d0a1f77d86a434cfb1d3d7793", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprotected void generateClasspathChangeDeltas( \t\tIClasspathEntry[] oldResolvedPath, \t\tIClasspathEntry[] newResolvedPath, \t\tJavaModelManager manager, \t\tfinal JavaProject project)", "signatureAfterChange": " \tprotected void generateClasspathChangeDeltas( \t\tIClasspathEntry[] oldResolvedPath, \t\tIClasspathEntry[] newResolvedPath, \t\tJavaModelManager manager, \t\tfinal JavaProject project)", "diff": ["-\t\t\t\t\tpkgFragmentRoots = project.computePackageFragmentRoots(oldResolvedPath[i]);", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tObjectVector accumulatedRoots = new ObjectVector();", "+\t\t\t\t\t\tHashSet rootIDs = new HashSet(5);", "+\t\t\t\t\t\trootIDs.add(project.rootID());", "+\t\t\t\t\t\tproject.computePackageFragmentRoots(", "+\t\t\t\t\t\t\toldResolvedPath[i], ", "+\t\t\t\t\t\t\taccumulatedRoots, ", "+\t\t\t\t\t\t\trootIDs,", "+\t\t\t\t\t\t\ttrue, // inside original project", "+\t\t\t\t\t\t\tfalse, // don't check existency", "+\t\t\t\t\t\t\tfalse); // don't retrieve exported roots", "+\t\t\t\t\t\tpkgFragmentRoots = new IPackageFragmentRoot[accumulatedRoots.size()];", "+\t\t\t\t\t\taccumulatedRoots.copyInto(pkgFragmentRoots);", "+\t\t\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t\t\tpkgFragmentRoots =  new IPackageFragmentRoot[] {};", "+\t\t\t\t\t}"]}], "num": 33782}