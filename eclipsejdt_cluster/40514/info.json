{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b34072382fd08cab6ca0140e1cdf994d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d20e8c2fc4c2a4d35efabbbb0a23b540", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/LineBreaksPreparator.java", "commitBeforeChange": "4b38559968afdd37976840873e08c95193b469ad", "commitAfterChange": "c8b40f13d99ab69db864b013de9cae48200942a8", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \t@Override \tpublic boolean visit(Block node)", "signatureAfterChange": "  \t@Override \tpublic boolean visit(Block node)", "diff": ["-\t\t// is this a fake block created by parsing in statements mode?", "-\t\tboolean isFakeBlock = node.getParent().getLength() == 0;", "-", "-\t\tfor (int i = isFakeBlock ? 1 : 0; i < statements.size(); i++) {", "-\t\t\tStatement statement = statements.get(i);", "+\t\tfor (Statement statement : statements) {", "-\t\tif (isFakeBlock)", "-\t\t\treturn true;", "+\t\tif (node.getParent().getLength() == 0)", "+\t\t\treturn true; // this is a fake block created by parsing in statements mode"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f462c5ba0ab6c2373a937e2582c2e23f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ImportRewrite.java", "commitBeforeChange": "f8f573fb4945f47fa2e1f634d0b55fa9e0151f17", "commitAfterChange": "b1e2ed2bb1403d1f729ccda27eb7b9ebe7009bed", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 46, "signatureBeforeChange": "   \tprivate static String[] filterFromList(List imports, char prefix)", "signatureAfterChange": "   \tprivate static String[] filterFromList(List<String> imports, char prefix)", "diff": ["-\tprivate static String[] filterFromList(List imports, char prefix) {", "+\tprivate static String[] filterFromList(List<String> imports, char prefix) {", "-\t\tArrayList res= new ArrayList();", "-\t\tfor (int i= 0; i < imports.size(); i++) {", "-\t\t\tString curr= (String) imports.get(i);", "+\t\tList<String> res= new ArrayList<String>();", "+\t\tfor (String curr : imports) {", "-\t\treturn (String[]) res.toArray(new String[res.size()]);", "+\t\treturn res.toArray(new String[res.size()]);"]}], "num": 40514}