{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8033da1fabee854c846220ba422e6318", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "282ebfd17d43264f1d09fc1045dfdbb8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "eedafe9176d5ca60193623550822839844fd4aae", "commitAfterChange": "16a0328cb89c7e4d508e8edfc85e1af4879c13c7", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 40, "signatureBeforeChange": "\t \tpublic AccessRestriction getProjectDependencyRestriction(JavaProject prereqProject)", "signatureAfterChange": " \tpublic IPackageFragmentRoot[] getAllPackageFragmentRoots() \t\tthrows JavaModelException", "diff": ["+\t\treturn getAllPackageFragmentRoots(null /*no reverse map*/);", "+\t}", "-\t */\t", "-\tpublic AccessRestriction getProjectDependencyRestriction(JavaProject prereqProject) {", "-\t\t", "-\t\tif (JavaCore.IGNORE.equals(getOption(JavaCore.COMPILER_PB_FORBIDDEN_REFERENCE, true)))", "-\t\t\t\treturn null;", "-\t\t", "-\t\tchar[][] exportIncludes = getAccessRestrictionPatterns(", "-\t\t\t\t\tprereqProject.getAccessRestrictions(JavaCore.COMPILER_ACCESS_RESTRICTION_EXPORT_INCLUDE));", "-\t\tchar[][] exportExcludes = getAccessRestrictionPatterns(", "-\t\t\t\t\tprereqProject.getAccessRestrictions(JavaCore.COMPILER_ACCESS_RESTRICTION_EXPORT_EXCLUDE));", "-", "-\t\tAccessRestriction importRestriction = getProjectImportRestriction();", "-\t\tif (importRestriction == null && exportIncludes == null && exportExcludes == null) ", "-\t\t\treturn null;", "-\t\t", "-\t\treturn new AccessRestriction(", "-\t\t\t\t\t\t\t\torg.eclipse.jdt.internal.core.util.Util.bind(\"restrictedAccess.export\", null, prereqProject.getElementName()), //$NON-NLS-1$", "-\t\t\t\t\t\t\t\texportIncludes, ", "-\t\t\t\t\t\t\t\texportExcludes,", "-\t\t\t\t\t\t\t\timportRestriction);", "-\t}\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df2f78c7390a4ec808ffa8efdf109c5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "15e3a9fc2ecd5761f01e0bac254435a2b7c9efda", "commitAfterChange": "7d045aff59e674d12c8b86d331be1a0001ff1185", "methodNumberBeforeChange": 613, "methodNumberAfterChange": 613, "signatureBeforeChange": " public void testBug286379c() throws CoreException", "signatureAfterChange": " public void testBug286379c() throws CoreException", "diff": ["-", "+\t// print statement to debug random failures of this test", "+\tSystem.out.println(\"Forbidden reference at the start of the test is \" + JavaCore.getOption(JavaCore.COMPILER_PB_FORBIDDEN_REFERENCE));", "+\t", "+\t\t// print statement to debug random failures of this test", "+\t\tSystem.out.println(\"Forbidden reference before first exit \" + JavaCore.getOption(JavaCore.COMPILER_PB_FORBIDDEN_REFERENCE));", "-\t\tsimulateRestart();\t\t", "+\t\tsimulateRestart();", "+\t\t// print statement to debug random failures of this test", "+\t\tSystem.out.println(\"Forbidden reference after first restart \" + JavaCore.getOption(JavaCore.COMPILER_PB_FORBIDDEN_REFERENCE));", "+\t\t// print statement to debug random failures of this test", "+\t\tSystem.out.println(\"Forbidden reference before second exit \" + JavaCore.getOption(JavaCore.COMPILER_PB_FORBIDDEN_REFERENCE));", "-\t\tsimulateRestart();\t\t", "+\t\tsimulateRestart();\t", "+\t\t// print statement to debug random failures of this test", "+\t\tSystem.out.println(\"Forbidden reference after second restart \" + JavaCore.getOption(JavaCore.COMPILER_PB_FORBIDDEN_REFERENCE));"]}], "num": 40389}