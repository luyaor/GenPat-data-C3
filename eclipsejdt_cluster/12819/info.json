{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "73bd75a1c95bfaf136b39a32a3de3c87", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7437cf9da5cf9ded3d03b64fb18f556d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "4facfcdf4a36f611ae455f345faa2a13f779251b", "commitAfterChange": "9b4626a240c7fe9f3a95f4bc274592915f73c7ef", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " public void notifySourceElementRequestor(AbstractMethodDeclaration methodDeclaration)", "signatureAfterChange": " public void notifySourceElementRequestor(AbstractMethodDeclaration methodDeclaration)", "diff": ["+\t\tmethodInfo.isAnnotation = methodDeclaration instanceof AnnotationMethodDeclaration;", "-\tif (isInRange){\t", "-\t\trequestor.exitMethod(methodDeclaration.declarationSourceEnd);", "+\tif (isInRange) {", "+\t\tif (methodDeclaration instanceof AnnotationMethodDeclaration) {", "+\t\t\tAnnotationMethodDeclaration annotationMethodDeclaration = (AnnotationMethodDeclaration) methodDeclaration;", "+\t\t\tExpression expression = annotationMethodDeclaration.defaultValue;", "+\t\t\tif (expression != null) {", "+\t\t\t\trequestor.exitMethod(methodDeclaration.declarationSourceEnd, expression.sourceStart, expression.sourceEnd);", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\t} ", "+\t\trequestor.exitMethod(methodDeclaration.declarationSourceEnd, -1, -1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85ae138757ab225814a26d5b9edfc2ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["+\tif (this.expression instanceof MessageSend) {", "+\t\tMessageSend messageSend = (MessageSend) this.expression;", "+\t\tMethodBinding methodBinding = messageSend.binding;", "+\t\tif (methodBinding != null && methodBinding.isPolymorphic()) {", "+\t\t\tmessageSend.binding = scope.environment().updatePolymorphicMethodReturnType((PolymorphicMethodBinding) methodBinding, castType);", "+\t\t\texpressionType = castType;", "+\t\t}", "+\t}"]}], "num": 12819}