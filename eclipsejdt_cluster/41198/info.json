{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fd8d7e6c6fefc73d8110a69b63ff58f7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78eb58c50ca9e9d29b4a7ea8805407eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetFieldReference.java", "commitBeforeChange": "302df05b099c1ea06faca0b00f806513c7db6904", "commitAfterChange": "c661afbb38268ca6f18a772df813f6c69bb9e17c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired)", "signatureAfterChange": "  public void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired)", "diff": ["-\tif (this.codegenBinding.canBeSeenBy(receiverType, this, currentScope)) {", "-\t\treceiver.generateCode(currentScope, codeStream, !(isStatic = this.codegenBinding.isStatic()));", "+\tif (this.codegenBinding.canBeSeenBy(this.receiverType, this, currentScope)) {", "+\t\tthis.receiver.generateCode(currentScope, codeStream, !(isStatic = this.codegenBinding.isStatic()));", "-\t\tif ((operationTypeID = implicitConversion >> 4) == T_String) {", "+\t\tif ((operationTypeID = this.implicitConversion >> 4) == T_String) {", "-\t\t\tcodeStream.generateImplicitConversion(implicitConversion);", "+\t\t\tcodeStream.generateImplicitConversion(this.implicitConversion);", "-\t\t\t\tcodeStream.generateConstant(expression.constant, implicitConversion);\t\t\t", "+\t\t\t\tcodeStream.generateConstant(expression.constant, this.implicitConversion);\t\t\t", "-\t\treceiver.generateCode(currentScope, codeStream, !(isStatic = this.codegenBinding.isStatic()));", "+\t\tthis.receiver.generateCode(currentScope, codeStream, !(isStatic = this.codegenBinding.isStatic()));", "-\t\t\t((CodeSnippetCodeStream) codeStream).generateEmulationForField(binding);", "-\t\t\treceiver.generateCode(currentScope, codeStream, !(isStatic = this.codegenBinding.isStatic()));", "+\t\t\t((CodeSnippetCodeStream) codeStream).generateEmulationForField(this.binding);", "+\t\t\tthis.receiver.generateCode(currentScope, codeStream, !(isStatic = this.codegenBinding.isStatic()));", "-\t\tif ((operationTypeID = implicitConversion >> 4) == T_String) {", "+\t\tif ((operationTypeID = this.implicitConversion >> 4) == T_String) {", "-\t\t\tcodeStream.generateImplicitConversion(implicitConversion);", "+\t\t\tcodeStream.generateImplicitConversion(this.implicitConversion);", "-\t\t\t\tcodeStream.generateConstant(expression.constant, implicitConversion);\t\t\t", "+\t\t\t\tcodeStream.generateConstant(expression.constant, this.implicitConversion);\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c00d64e9469a7ee2d9204b9ccf329406", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/CorrectionEngine.java", "commitBeforeChange": "302df05b099c1ea06faca0b00f806513c7db6904", "commitAfterChange": "c661afbb38268ca6f18a772df813f6c69bb9e17c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprivate void correct(char[] argument)", "signatureAfterChange": "  \tprivate void correct(char[] argument)", "diff": ["-\t\t\tString source = compilationUnit.getSource();", "+\t\t\tString source = this.compilationUnit.getSource();", "-\t\t\tscanner.resetTo(correctionStart, correctionEnd);", "+\t\t\tscanner.resetTo(this.correctionStart, this.correctionEnd);", "-\t\t\t\t\tcorrectionStart = scanner.startPosition;", "-\t\t\t\t\tcorrectionEnd = scanner.currentPosition;", "-\t\t\t\t\tprefixLength = CharOperation.lastIndexOf('.', argument) + 1;", "+\t\t\t\t\tthis.correctionStart = scanner.startPosition;", "+\t\t\t\t\tthis.correctionEnd = scanner.currentPosition;", "+\t\t\t\t\tthis.prefixLength = CharOperation.lastIndexOf('.', argument) + 1;", "-\t\t\tint completionPosition = correctionStart;", "-\t\t\tscanner.resetTo(completionPosition, correctionEnd);", "+\t\t\tint completionPosition = this.correctionStart;", "+\t\t\tscanner.resetTo(completionPosition, this.correctionEnd);", "-\t\t\tcompilationUnit.codeComplete(", "+\t\t\tthis.compilationUnit.codeComplete(", "-\t\t\t\tcompletionRequestor", "+\t\t\t\tthis.completionRequestor"]}], "num": 41198}