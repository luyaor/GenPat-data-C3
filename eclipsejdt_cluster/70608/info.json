{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "246ed08953d437ecdb8e69112c3dfaa8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a00cb76b99aabab58e19e877dbed8bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SignatureTests.java", "commitBeforeChange": "ccb364c95f1fe1767a1c8ae16307a4464fc49b1b", "commitAfterChange": "6986736ab1982a00686efe19bc55dbc7b2788581", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 59, "signatureBeforeChange": " public void testToString2()", "signatureAfterChange": " public void testToStringMethod12()", "diff": ["-public void testToString2() {", "-\t\t\"Signature#toString is not correct 1\", ", "-\t\t\"Signature#toString is not correct 2\", ", "-\t\t\"Signature#toString is not correct 3\", ", "-\t\t\"Signature#toString is not correct 4\", ", "-\t\t\"Signature#toString is not correct 5\", ", "-\t\t\"Signature#toString is not correct 6\", ", "-\t\t\"Signature#toString is not correct 7\", ", "-\t\t\"Signature#toString is not correct 8\", ", "-\t\t\"Signature#toString is not correct 9\", ", "-\t\t\"Signature#toString is not correct 10\", ", "-\t\t\"Signature#toString is not correct 11\", ", "+}", "+public void testToStringMethod12() {", "-\tassertTrue(\"Signature#toString is not correct 12: should get an exception\", false);", "+\tassertTrue(\"Should get an exception\", false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a776d484448f84dc5feaf0222882b4ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SignatureTests.java", "commitBeforeChange": "5597c46654cd0a97c576a9b45078ed0c449aa7d1", "commitAfterChange": "f8fbd2ef937bb9a099dbb116efd7aa2bc746a321", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void testGetParameterCount()", "signatureAfterChange": " public void testGetParameterCount()", "diff": ["-\t", "-\tmethodSig= \"foo(+Ljava.lang.Comparable;)\";", "-\tassertEquals(\"Signature#getParameterCount is not correct5\", 1,", "-\t\t\tSignature.getParameterCount(methodSig));", "-", "-\tmethodSig= \"foo(+Ljava.lang.Comparable;)\";", "-\tassertEquals(\"Signature#getParameterCount is not correct6\", 1,", "-\t\t\tSignature.getParameterCount(methodSig));", "-\t", "-\tmethodSig= \"foo(*)\";", "-\tassertEquals(\"Signature#getParameterCount is not correct7\", 1,", "-\t\t\tSignature.getParameterCount(methodSig));", "-\t", "-\tmethodSig= \"foo(LA<+Ljava.lang.Comparable;>;)\";", "-\tassertEquals(\"Signature#getParameterCount is not correct8\", 1,", "-\t\t\tSignature.getParameterCount(methodSig));", "-", "-\tmethodSig= \"foo(LA<-Ljava.lang.Comparable;>;)\";", "-\tassertEquals(\"Signature#getParameterCount is not correct9\", 1,", "-\t\t\tSignature.getParameterCount(methodSig));", "-", "-\tmethodSig= \"foo(LA<*>;)\";", "-\tassertEquals(\"Signature#getParameterCount is not correct10\", 1,", "-\t\t\tSignature.getParameterCount(methodSig));", "-", "-\tmethodSig= \"foo(LA<+Ljava.lang.Comparable;+Ljava.lang.Comparable;>;)\";", "-\tassertEquals(\"Signature#getParameterCount is not correct11\", 1,", "-\t\t\tSignature.getParameterCount(methodSig));", "-", "-\tmethodSig= \"foo(+Ljava.lang.Comparable;+Ljava.lang.Comparable;)\";", "-\tassertEquals(\"Signature#getParameterCount is not correct12\", 2,", "-\t\t\tSignature.getParameterCount(methodSig));", "-", "-\tmethodSig= \"foo(+Ljava.lang.Comparable;-Ljava.lang.Comparable;)\";", "-\tassertEquals(\"Signature#getParameterCount is not correct13\", 2,", "-\t\t\tSignature.getParameterCount(methodSig));", "-", "-\ttry {", "-\t\tSignature.getParameterCount(\"foo(LA<++Ljava.lang.Comparable;>;)\");", "-\t\tassertTrue(\"Signature#getParameterCount is not correct: exception\", false);", "-\t} catch (IllegalArgumentException iae) {", "-\t\t// do nothing", "-\t}", "-", "-\ttry {", "-\t\tSignature.getParameterCount(\"foo(LA<--Ljava.lang.Comparable;>;)\");", "-\t\tassertTrue(\"Signature#getParameterCount is not correct: exception\", false);", "-\t} catch (IllegalArgumentException iae) {", "-\t\t// do nothing", "-\t}", "-", "-\ttry {", "-\t\tSignature.getParameterCount(\"foo(LA<+-Ljava.lang.Comparable;>;)\");", "-\t\tassertTrue(\"Signature#getParameterCount is not correct: exception\", false);", "-\t} catch (IllegalArgumentException iae) {", "-\t\t// do nothing", "-\t}"]}], "num": 70608}