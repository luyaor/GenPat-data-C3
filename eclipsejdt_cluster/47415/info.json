{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cd7519a5e4124e6eae4d60f34e40c921", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dedd65f8553404738742cab2c638649", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "bd8934678d77eb2fa075ba4636b324b35eb1f6d6", "commitAfterChange": "216718adf21d4743793a153a5cf7d075857e4c9a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " private void buildMoreCompletionContext(Expression expression)", "signatureAfterChange": " private void buildMoreCompletionContext(Expression expression)", "diff": ["+\t\t\tcase K_BETWEEN_LEFT_AND_RIGHT_BRACKET :", "+\t\t\t\tArrayReference arrayReference;", "+\t\t\t\tif(expressionPtr > 0 && expressionStack[expressionPtr] == expression) {", "+\t\t\t\t\tarrayReference =", "+\t\t\t\t\t\tnew ArrayReference(", "+\t\t\t\t\t\t\texpressionStack[expressionPtr-1],", "+\t\t\t\t\t\t\texpression);", "+\t\t\t\t} else {", "+\t\t\t\t\tarrayReference =", "+\t\t\t\t\t\tnew ArrayReference(", "+\t\t\t\t\t\t\tgetUnspecifiedReferenceOptimized(),", "+\t\t\t\t\t\t\texpression);", "+\t\t\t\t}", "+\t\t\t\tassistNodeParent = arrayReference;", "+\t\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6cdb5b9f767820148097213e4c612ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayTypeReference.java", "commitBeforeChange": "27f0a8bf5e0182b2f55d23c88165e43a56aee13f", "commitAfterChange": "51213023943da7653dfbcc6859baaa171fa1aac9", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \t@Override \tpublic boolean hasNullTypeAnnotation()", "signatureAfterChange": " \t \t@Override \tpublic boolean hasNullTypeAnnotation(AnnotationPosition position)", "diff": ["-\tpublic boolean hasNullTypeAnnotation() {", "-    \tif (super.hasNullTypeAnnotation())", "-    \t\treturn true;", "-    \tif (this.resolvedType != null && !this.resolvedType.hasNullTypeAnnotations())", "-    \t\treturn false; // shortcut", "-    \tif (this.annotationsOnDimensions != null) {", "-    \t\tfor (int i = 0; i < this.annotationsOnDimensions.length; i++) {", "-\t\t\t\tAnnotation[] innerAnnotations = this.annotationsOnDimensions[i];", "-\t\t\t\tif (containsNullAnnotation(innerAnnotations))", "+\tpublic boolean hasNullTypeAnnotation(AnnotationPosition position) {", "+\t\tswitch (position) {", "+\t\t\tcase LEAF_TYPE:", "+\t\t\t\t// ignore annotationsOnDimensions:", "+\t\t\t\treturn super.hasNullTypeAnnotation(position);", "+\t\t\tcase MAIN_TYPE:", "+\t\t\t\t// outermost dimension only:", "+\t\t\t\tif (this.annotationsOnDimensions != null && this.annotationsOnDimensions.length > 0) {", "+\t\t\t\t\tAnnotation[] innerAnnotations = this.annotationsOnDimensions[0];", "+\t\t\t\t\treturn containsNullAnnotation(innerAnnotations);", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase ANY:", "+\t\t\t\tif (super.hasNullTypeAnnotation(position))", "-\t\t\t}", "-    \t}", "+\t\t\t\tif (this.resolvedType != null && !this.resolvedType.hasNullTypeAnnotations())", "+\t\t\t\t\treturn false; // shortcut", "+\t\t\t\tif (this.annotationsOnDimensions != null) {", "+\t\t\t\t\tfor (int i = 0; i < this.annotationsOnDimensions.length; i++) {", "+\t\t\t\t\t\tAnnotation[] innerAnnotations = this.annotationsOnDimensions[i];", "+\t\t\t\t\t\tif (containsNullAnnotation(innerAnnotations))", "+\t\t\t\t\t\t\treturn true;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t}"]}], "num": 47415}