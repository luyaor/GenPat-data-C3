{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5bd23a4a52c7336441eb9076abcd6767", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c24a86429c470a38737f43acb63dfa2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/FilerImpl.java", "commitBeforeChange": "be1ab5866130739e4d5dea6be597450bab4d9fe1", "commitAfterChange": "b0e9bea8e580536e7492868aec6988424ff22cb7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t     private File getOutputFileForLocation( Filer.Location loc, String pkg, File relPath )     \tthrows IOException", "signatureAfterChange": " \t     private IPath getOutputFileForLocation( Filer.Location loc, String pkg, File relPath )     \tthrows IOException", "diff": ["-    private File getOutputFileForLocation( Filer.Location loc, String pkg, File relPath )", "+    private IPath getOutputFileForLocation( Filer.Location loc, String pkg, File relPath )", "-    \tFile f = null;", "+    \tIPath path = null;", "-    \t\t\tf = gfm.getGeneratedSourceFolderOutputLocation();", "+    \t\t\tpath = gfm.getGeneratedSourceFolderOutputLocation();", "-    \t\tf = gfm.getGeneratedSourceFolder().getRawLocation().toFile();", "+    \t\tpath = gfm.getGeneratedSourceFolder().getRawLocation();", "-            f = new File( f, pkg.replace('.', File.separatorChar) );", "+            path = path.append(pkg.replace('.', File.separatorChar) );", "-        f = new File( f, relPath.getPath() );", "+        path = path.append(relPath.getPath() );", "-        // REVIEW: for no apparent reason it is sometimes necessary to create the", "-        // parent dir, else an IOException occurs creating f..", "-        File p = f.getParentFile();", "-        FileSystemUtil.mkdirs( p );", "+        File parentFile = path.toFile().getParentFile();", "+        FileSystemUtil.mkdirs( parentFile );", "-    \treturn f;", "+    \treturn path;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8112932a103f0f81339240c4ff92937", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/FilerImpl.java", "commitBeforeChange": "64db8d36b73417ee83ea1a6d91baaefe7d3848b0", "commitAfterChange": "706bf7889f5a9b55b080bd919d03ab5ee97600fa", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public PrintWriter createTextFile(Filer.Location loc, String pkg, File relPath, String charsetName)          throws IOException", "signatureAfterChange": "     public PrintWriter createTextFile(Filer.Location loc, String pkg, File relPath, String charsetName)          throws IOException", "diff": ["-    \t", "-    \t// TODO - clean this up", "-    \tFile f = null;", "-    \tGeneratedFileManager gfm = GeneratedFileManager.getGeneratedFileManager( _env.getProject() );", "-    \tif ( loc == Filer.Location.CLASS_TREE )", "-    \t{", "-    \t\ttry ", "-    \t\t{", "-    \t\t\tf = gfm.getGeneratedSourceFolderOutputLocation();", "-    \t\t}", "-    \t\tcatch ( Exception e )", "-    \t\t{", "-    \t\t\t// TODO - stop throwing this exception", "-    \t\t\tAptPlugin.log(e, \"Failure getting the output file\"); //$NON-NLS-1$", "-    \t\t\tthrow new IOException();", "-    \t\t}", "-    \t}", "-    \telse if ( loc == Filer.Location.SOURCE_TREE )", "-    \t\tf = gfm.getGeneratedSourceFolder().getRawLocation().toFile();", "-    \t\t\t", "-", "-", "-        if( pkg != null )", "-            f = new File( f, pkg.replace('.', File.separatorChar) );", "-", "-        f = new File( f, relPath.getPath() );", "-", "-        // REVIEW: for no apparent reason it is sometimes necessary to create the", "-        // parent dir, else an IOException occurs creating f..", "-        File p = f.getParentFile();", "-        FileSystemUtil.mkdirs( p );", "+    \tFile f = getOutputFileForLocation( loc, pkg, relPath );"]}], "num": 18049}