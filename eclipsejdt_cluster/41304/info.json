{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f7c688d8f74139b43f3f585ef5878a84", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b30f9e12ca2209bf8c747babe3b159b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "d2d42dc68198e20f3f5cc7326a07cced2c751eb5", "commitAfterChange": "add5c6babb13b20df1267306ec710a4efca88a4d", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 39, "signatureBeforeChange": "\r \tpublic static String getOptionType(String id)", "signatureAfterChange": "\r \tpublic static void setOptions(Hashtable newOptions)", "diff": ["-\t */\r", "-\tpublic static String getOptionType(String id) {\r", "-\t\tConfigurableOption option = (ConfigurableOption) getOptions().get(id);\r", "-\r", "-\t\tif (option != null)\r", "-\t\t\treturn option.getType();\r", "-\r", "-\t\treturn null;\r", "-\t}\r", "+\tpublic static void setOptions(Hashtable newOptions) {\r", "+\t\tif (newOptions == null){\r", "+\t\t\tOptions = getDefaultOptions();\r", "+\t\t\tOptions = (Hashtable)newOptions.clone();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0824d389f13c10a75c0d7809bfb1998", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "8f7da2986bdba03e85c12e961553bad48253860e", "commitAfterChange": "a6ee91242a0f1cf80235353dbfc9f7b2518d4e00", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tprotected String getURLContents(String docUrlValue, String encoding) throws JavaModelException", "signatureAfterChange": " \tprotected String getURLContents(String docUrlValue, String encoding) throws JavaModelException", "diff": ["+\t\tInputStream stream = null;", "+\t\t\tconnection.setUseCaches(false);", "+\t\t\tstream = connection.getInputStream();", "+\t\t\tchar[] contents = null;", "-\t\t\t\tInputStream stream = docUrl.openStream();", "-\t\t\t\tchar[] contents = org.eclipse.jdt.internal.compiler.util.Util.getInputStreamAsCharArray(stream, -1, contentEncoding);", "-\t\t\t\tif (contents != null) {", "-\t\t\t\t\treturn String.valueOf(contents);", "-\t\t\t\t}", "+\t\t\t\tcontents = org.eclipse.jdt.internal.compiler.util.Util.getInputStreamAsCharArray(stream, -1, contentEncoding);", "-\t\t\t\tInputStream stream = docUrl.openStream();", "-\t\t\t\tchar[] contents = org.eclipse.jdt.internal.compiler.util.Util.getInputStreamAsCharArray(stream, -1, encoding);", "-\t\t\t\tif (contents != null) {", "-\t\t\t\t\treturn String.valueOf(contents);", "-\t\t\t\t}", "+\t\t\t\tcontents = org.eclipse.jdt.internal.compiler.util.Util.getInputStreamAsCharArray(stream, -1, encoding);", "+\t\t\t}", "+\t\t\tif (contents != null) {", "+\t\t\t\treturn String.valueOf(contents);", "+\t\t} finally {", "+\t\t\tif (stream != null) {", "+\t\t\t\ttry {", "+\t\t\t\t\tstream.close();", "+\t\t\t\t} catch (IOException e) {", "+\t\t\t\t\t// ignore", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 41304}