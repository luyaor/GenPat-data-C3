{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "69b79959d704071604d47761f0bc7ee8", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5444d61a372ee9ca31a38b7965b24a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter17Test.java", "commitBeforeChange": "d43bd70d5c6c4fa98b6c25564f2818572a108eac", "commitAfterChange": "3655fb3ae21ac46b5060eb9e240a41cd2462bac2", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic void test403444() throws JavaModelException", "signatureAfterChange": " \tpublic void test403444() throws JavaModelException", "diff": ["-\t\t\t\t\"The method foo(X.StringToInt) in the type X is not applicable for the arguments ((String s) -> s.length())\\n\" + ", "+\t\t\t\t\"The method foo(X.StringToInt) in the type X is not applicable for the arguments ((String s) -> {})\\n\" + ", "-\t\t\t\t\"The method bar(X.ReduceInt) in the type X is not applicable for the arguments ((int x, int y) -> (x + y))\\n\" + ", "+\t\t\t\t\"The method bar(X.ReduceInt) in the type X is not applicable for the arguments ((int x, int y) -> {})\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5b73d96f185b93421d6d564a0ebfc82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "d43bd70d5c6c4fa98b6c25564f2818572a108eac", "commitAfterChange": "3655fb3ae21ac46b5060eb9e240a41cd2462bac2", "methodNumberBeforeChange": 157, "methodNumberAfterChange": 157, "signatureBeforeChange": " public void test401610c()", "signatureAfterChange": " public void test401610c()", "diff": ["-\t\t\t\t\"The method foo(I) in the type X is not applicable for the arguments (() -> {\\n\" + ", "-\t\t\t\t\"  return \\\"\\\";\\n\" + ", "-\t\t\t\t\"})\\n\" + ", "+\t\t\t\t\"The method foo(I) in the type X is not applicable for the arguments (() -> {})\\n\" + ", "-\t\t\t\t\"The method foo(I) in the type X is not applicable for the arguments (() -> 10)\\n\" + ", "+\t\t\t\t\"The method foo(I) in the type X is not applicable for the arguments (() -> {})\\n\" + "]}], "num": 25507}