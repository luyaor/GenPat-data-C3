{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1d088f65abff235b82a490819778b7e2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1186ed9cfa1941ee8d6e9107496a355", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern.java", "commitBeforeChange": "46418d248f89a29f49a77d154cdbfa57c408b256", "commitAfterChange": "c85433e27f0fa74bfe8e06c38c1c02c51b5599d7", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r private int matchLevel(TypeReference typeRef, boolean resolve)", "signatureAfterChange": "\r private boolean matches(TypeReference typeRef, boolean resolve)", "diff": ["+ */\r", "+private boolean matches(TypeReference typeRef, boolean resolve) {\r", "+\tif (!resolve) {\r", "+\t\tif (this.simpleName != null) {\r", "+\t\t\tif (typeRef instanceof SingleTypeReference) {\r", "+\t\t\t\treturn this.matchesName(this.simpleName, ((SingleTypeReference)typeRef).token);\r", "+\t\t\t} else { // QualifiedTypeReference\r", "+\t\t\t\tchar[][] tokens = ((QualifiedTypeReference)typeRef).tokens;\r", "+\t\t\t\tfor (int i = 0, max = tokens.length; i < max; i++){\r", "+\t\t\t\t\tif (this.matchesName(this.simpleName, tokens[i])) return true;\r", "+\t\t\t\t}\r", "+\t\t\t\treturn false;\r", "+\t\t\t}\t\t\t\t\r", "+\t\t}\r", "+\t} else {\r", "+\r", "+\t\tTypeBinding typeBinding = typeRef.binding;\r", "+\t\tif (typeBinding != null){\r", "+\t\t\tif (typeBinding instanceof ArrayBinding) typeBinding = ((ArrayBinding)typeBinding).leafComponentType;\r", "+\t\t\tif (typeRef instanceof SingleTypeReference){\r", "+\t\t\t\tif (!this.matchesType(this.simpleName, this.qualification, typeBinding)){\r", "+\t\t\t\t\treturn false;\r", "+\t\t\t\t}\r", "+\t\t\t} else { // QualifiedTypeReference\r", "+\t\t\t\tQualifiedTypeReference qNameRef = (QualifiedTypeReference)typeRef;\r", "+\t\t\t\tchar[][] tokens = qNameRef.tokens;\r", "+\t\t\t\tint lastIndex = tokens.length-1;\r", "+\t\t\t\t// try to match all enclosing types for which the token matches as well.\r", "+\t\t\t\twhile (typeBinding != null && lastIndex >= 0){\r", "+\t\t\t\t\tif (matchesName(this.simpleName, tokens[lastIndex--])\r", "+\t\t\t\t\t\t&& matchesType(this.simpleName, this.qualification, typeBinding)) return true;\r", "+\t\t\t\t\t\t//&& matchesAsSubtype(this.simpleName, this.qualification, typeBinding)) return true;\r", "+\t\t\t\t\tif (typeBinding instanceof ReferenceBinding){\r", "+\t\t\t\t\t\ttypeBinding = ((ReferenceBinding)typeBinding).enclosingType();\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\ttypeBinding = null;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t\treturn false;\r", "+\t\t\t} \r", "+\t\t}\r", "+\t\t\t\r", "+\t}\r", "+\treturn true;\r", "+}\r", "- */\r", "-private int matchLevel(TypeReference typeRef, boolean resolve) {\r", "-\tif (!resolve) {\r", "-\t\tif (this.simpleName == null) {\r", "-\t\t\treturn POSSIBLE_MATCH;\r", "-\t\t} else {\r", "-\t\t\tif (typeRef instanceof SingleTypeReference) {\r", "-\t\t\t\tif (this.matchesName(this.simpleName, ((SingleTypeReference)typeRef).token)) {\r", "-\t\t\t\t\treturn POSSIBLE_MATCH;\r", "-\t\t\t\t} else {\r", "-\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t\t}\r", "-\t\t\t} else { // QualifiedTypeReference\r", "-\t\t\t\tchar[][] tokens = ((QualifiedTypeReference)typeRef).tokens;\r", "-\t\t\t\tfor (int i = 0, max = tokens.length; i < max; i++){\r", "-\t\t\t\t\tif (this.matchesName(this.simpleName, tokens[i])) {\r", "-\t\t\t\t\t\treturn POSSIBLE_MATCH;\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r", "-\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t}\t\t\t\t\r", "-\t\t} \r", "-\t} else {\r", "-\t\tTypeBinding typeBinding = typeRef.binding;\r", "-\t\tif (typeBinding == null) {\r", "-\t\t\treturn INACCURATE_MATCH;\r", "-\t\t} else {\r", "-\t\t\tif (typeBinding instanceof ArrayBinding) typeBinding = ((ArrayBinding)typeBinding).leafComponentType;\r", "-\t\t\tif (typeRef instanceof SingleTypeReference){\r", "-\t\t\t\treturn this.matchLevelForType(this.simpleName, this.qualification, typeBinding);\r", "-\t\t\t} else { // QualifiedTypeReference\r", "-\t\t\t\tQualifiedTypeReference qNameRef = (QualifiedTypeReference)typeRef;\r", "-\t\t\t\tchar[][] tokens = qNameRef.tokens;\r", "-\t\t\t\tint lastIndex = tokens.length-1;\r", "-\t\t\t\t// try to match all enclosing types for which the token matches as well.\r", "-\t\t\t\twhile (typeBinding != null && lastIndex >= 0){\r", "-\t\t\t\t\tif (matchesName(this.simpleName, tokens[lastIndex--])) {\r", "-\t\t\t\t\t\tint level = this.matchLevelForType(this.simpleName, this.qualification, typeBinding);\r", "-\t\t\t\t\t\tif (level != IMPOSSIBLE_MATCH) {\r", "-\t\t\t\t\t\t\treturn level;\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\tif (typeBinding instanceof ReferenceBinding){\r", "-\t\t\t\t\t\ttypeBinding = ((ReferenceBinding)typeBinding).enclosingType();\r", "-\t\t\t\t\t} else {\r", "-\t\t\t\t\t\ttypeBinding = null;\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r", "-\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t} \r", "-\t\t}\r", "-\t\t\t\r", "-\t}\r", "-}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffb1ab0df68742bf7d8b1f8d3f3c73bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern.java", "commitBeforeChange": "a1b8b888d8c8c040023fcd2856f96f5ad6c69b3e", "commitAfterChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r private int matchLevel(TypeReference typeRef, boolean resolve)", "signatureAfterChange": "\r private boolean matches(TypeReference typeRef, boolean resolve)", "diff": ["+ */\r", "+private boolean matches(TypeReference typeRef, boolean resolve) {\r", "+\tif (!resolve) {\r", "+\t\tif (this.simpleName != null) {\r", "+\t\t\tif (typeRef instanceof SingleTypeReference) {\r", "+\t\t\t\treturn this.matchesName(this.simpleName, ((SingleTypeReference)typeRef).token);\r", "+\t\t\t} else { // QualifiedTypeReference\r", "+\t\t\t\tchar[][] tokens = ((QualifiedTypeReference)typeRef).tokens;\r", "+\t\t\t\tfor (int i = 0, max = tokens.length; i < max; i++){\r", "+\t\t\t\t\tif (this.matchesName(this.simpleName, tokens[i])) return true;\r", "+\t\t\t\t}\r", "+\t\t\t\treturn false;\r", "+\t\t\t}\t\t\t\t\r", "+\t\t}\r", "+\t} else {\r", "+\r", "+\t\tTypeBinding typeBinding = typeRef.binding;\r", "+\t\tif (typeBinding != null){\r", "+\t\t\tif (typeBinding instanceof ArrayBinding) typeBinding = ((ArrayBinding)typeBinding).leafComponentType;\r", "+\t\t\tif (typeRef instanceof SingleTypeReference){\r", "+\t\t\t\tif (!this.matchesType(this.simpleName, this.qualification, typeBinding)){\r", "+\t\t\t\t\treturn false;\r", "+\t\t\t\t}\r", "+\t\t\t} else { // QualifiedTypeReference\r", "+\t\t\t\tQualifiedTypeReference qNameRef = (QualifiedTypeReference)typeRef;\r", "+\t\t\t\tchar[][] tokens = qNameRef.tokens;\r", "+\t\t\t\tint lastIndex = tokens.length-1;\r", "+\t\t\t\t// try to match all enclosing types for which the token matches as well.\r", "+\t\t\t\twhile (typeBinding != null && lastIndex >= 0){\r", "+\t\t\t\t\tif (matchesName(this.simpleName, tokens[lastIndex--])\r", "+\t\t\t\t\t\t&& matchesType(this.simpleName, this.qualification, typeBinding)) return true;\r", "+\t\t\t\t\t\t//&& matchesAsSubtype(this.simpleName, this.qualification, typeBinding)) return true;\r", "+\t\t\t\t\tif (typeBinding instanceof ReferenceBinding){\r", "+\t\t\t\t\t\ttypeBinding = ((ReferenceBinding)typeBinding).enclosingType();\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\ttypeBinding = null;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t\treturn false;\r", "+\t\t\t} \r", "+\t\t}\r", "+\t\t\t\r", "+\t}\r", "+\treturn true;\r", "+}\r", "- */\r", "-private int matchLevel(TypeReference typeRef, boolean resolve) {\r", "-\tif (!resolve) {\r", "-\t\tif (this.simpleName == null) {\r", "-\t\t\treturn POSSIBLE_MATCH;\r", "-\t\t} else {\r", "-\t\t\tif (typeRef instanceof SingleTypeReference) {\r", "-\t\t\t\tif (this.matchesName(this.simpleName, ((SingleTypeReference)typeRef).token)) {\r", "-\t\t\t\t\treturn POSSIBLE_MATCH;\r", "-\t\t\t\t} else {\r", "-\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t\t}\r", "-\t\t\t} else { // QualifiedTypeReference\r", "-\t\t\t\tchar[][] tokens = ((QualifiedTypeReference)typeRef).tokens;\r", "-\t\t\t\tfor (int i = 0, max = tokens.length; i < max; i++){\r", "-\t\t\t\t\tif (this.matchesName(this.simpleName, tokens[i])) {\r", "-\t\t\t\t\t\treturn POSSIBLE_MATCH;\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r", "-\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t}\t\t\t\t\r", "-\t\t} \r", "-\t} else {\r", "-\t\tTypeBinding typeBinding = typeRef.binding;\r", "-\t\tif (typeBinding == null) {\r", "-\t\t\treturn INACCURATE_MATCH;\r", "-\t\t} else {\r", "-\t\t\tif (typeBinding instanceof ArrayBinding) typeBinding = ((ArrayBinding)typeBinding).leafComponentType;\r", "-\t\t\tif (typeRef instanceof SingleTypeReference){\r", "-\t\t\t\treturn this.matchLevelForType(this.simpleName, this.qualification, typeBinding);\r", "-\t\t\t} else { // QualifiedTypeReference\r", "-\t\t\t\tQualifiedTypeReference qNameRef = (QualifiedTypeReference)typeRef;\r", "-\t\t\t\tchar[][] tokens = qNameRef.tokens;\r", "-\t\t\t\tint lastIndex = tokens.length-1;\r", "-\t\t\t\t// try to match all enclosing types for which the token matches as well.\r", "-\t\t\t\twhile (typeBinding != null && lastIndex >= 0){\r", "-\t\t\t\t\tif (matchesName(this.simpleName, tokens[lastIndex--])) {\r", "-\t\t\t\t\t\tint level = this.matchLevelForType(this.simpleName, this.qualification, typeBinding);\r", "-\t\t\t\t\t\tif (level != IMPOSSIBLE_MATCH) {\r", "-\t\t\t\t\t\t\treturn level;\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\tif (typeBinding instanceof ReferenceBinding){\r", "-\t\t\t\t\t\ttypeBinding = ((ReferenceBinding)typeBinding).enclosingType();\r", "-\t\t\t\t\t} else {\r", "-\t\t\t\t\t\ttypeBinding = null;\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r", "-\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t} \r", "-\t\t}\r", "-\t\t\t\r", "-\t}\r", "-}\r"]}], "num": 21312}