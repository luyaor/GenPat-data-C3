{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ded0fb4c7544d5f51f259d0aab25902d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a0f4a8c90d70ae4f51fb4a64edede06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "fa5828480ebc13512cc4c6649155f597883abe5f", "commitAfterChange": "dbadb98550952623b726dd998146fbf52c65b243", "methodNumberBeforeChange": 355, "methodNumberAfterChange": 355, "signatureBeforeChange": " public void scannerError(Parser parser, String errorTokenName)", "signatureAfterChange": " public void scannerError(Parser parser, String errorTokenName)", "diff": ["-\telse if (errorTokenName.equals(Scanner.ILLEGAL_HEXA_LITERAL))", "-\t\tflag = IProblem.IllegalHexaLiteral;", "-\telse if (errorTokenName.equals(Scanner.INVALID_UNICODE_ESCAPE)) {", "+\telse if (errorTokenName.equals(Scanner.INVALID_UNICODE_ESCAPE)){", "-\telse if (errorTokenName.equals(Scanner.INVALID_BINARY))", "-\t\tflag = IProblem.InvalidBinary;", "-\telse if (errorTokenName.equals(Scanner.ILLEGAL_BINARY_LITERAL))", "-\t\tflag = IProblem.IllegalBinaryLiteral;", "-\telse if (errorTokenName.equals(Scanner.INVALID_UNDERSCORE))", "-\t\tflag = IProblem.IllegalUnderscorePosition;", "-\telse if (errorTokenName.equals(Scanner.INVALID_USAGE_OF_UNDERSCORE))", "-\t\tflag = IProblem.IllegalUsageOfUnderscore;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12499c61056683a67ff4d8f03af2f70a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/BatchASTCreationTests.java", "commitBeforeChange": "3cdc40c3e141f1d38e6828b30530d087867619a9", "commitAfterChange": "0768a01c46bf55c1ad1aefdbfa14c12019b43872", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprivate void assertRequestedBindingFound(String[] pathAndSources, final String expectedKey) throws JavaModelException", "signatureAfterChange": " \tprivate void assertRequestedBindingFound(String[] pathAndSources, final String expectedKey) throws JavaModelException", "diff": ["-\t\tBindingResolver resolver = requestBinding(pathAndSources, expectedKey);", "+\t\tassertRequestedBindingsFound(pathAndSources, new String[] {expectedKey});", "+\t}", "-\t\tif (!expectedKey.equals(resolver.bindingKey))", "-\t\t\tSystem.out.println(Util.displayString(resolver.bindingKey, 3));", "-\t\tassertEquals(\"Unexpected binding for marked node\", expectedKey, resolver.bindingKey);", "-\t\tif (!expectedKey.equals(resolver.foundKey)) {", "-\t\t\tSystem.out.println(Util.displayString(resolver.foundKey, 3));", "-\t\t}", "-\t\tassertEquals(\"Unexpected binding found by acceptBinding\", expectedKey, resolver.foundKey);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49ecaee441100b364e5caaa5c61a31fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/internal/compiler/tool/EclipseFileManager.java", "commitBeforeChange": "3e675fdc1df3ad3d06198ba662692912c1fafaf8", "commitAfterChange": "53c6e319ec5226f74140dcfc37f5e58cc47bebc2", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic boolean handleOption(String current, Iterator<String> remaining)", "signatureAfterChange": " \tpublic boolean handleOption(String current, Iterator<String> remaining)", "diff": ["-\t\t\t\tremaining.remove(); // remove the current option", "-\t\t\t\t\tremaining.remove();", "-\t\t\t\tremaining.remove(); // remove the current option", "-\t\t\t\t\tremaining.remove();", "-\t\t\t\tremaining.remove(); // remove the current option", "-\t\t\t\t\tremaining.remove();", "-\t\t\t\tremaining.remove(); // remove the current option", "-\t\t\t\t\tremaining.remove();", "-\t\t\t\tremaining.remove(); // remove the current option", "-\t\t\t\t\tremaining.remove();", "-\t\t\t\tremaining.remove(); // remove the current option", "-\t\t\t\t\tremaining.remove();", "-\t\t\t\tremaining.remove(); // remove the current option", "-\t\t\t\t\tremaining.remove();", "-\t\t\t\tremaining.remove(); // remove the current option", "-\t\t\t\t\tremaining.remove();", "-\t\t\t\tremaining.remove(); // remove the current option", "-\t\t\t\t\tremaining.remove();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4168eeb03e441e4cba8a034ad8e53a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/util/EclipseFileManager.java", "commitBeforeChange": "f6d7e4c8ebdaaf8a904962804a027a09edc0c0d3", "commitAfterChange": "30e98d6cc084dfe1b207ffb7493b2de7b6cec8c4", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic boolean handleOption(String current, Iterator<String> remaining)", "signatureAfterChange": " \t@Override \tpublic boolean handleOption(String current, Iterator<String> remaining)", "diff": ["+\t@Override", "-\t\t\t\tremaining.remove(); // remove the current option", "-\t\t\t\t\t\tif ((this.flags & HAS_ENDORSED_DIRS) == 0", "-\t\t\t\t\t\t\t\t&& (this.flags & HAS_EXT_DIRS) == 0) {", "+\t\t\t\t\t\tif ((this.flags & EclipseFileManager.HAS_ENDORSED_DIRS) == 0", "+\t\t\t\t\t\t\t\t&& (this.flags & EclipseFileManager.HAS_EXT_DIRS) == 0) {", "-\t\t\t\t\t\t} else if ((this.flags & HAS_ENDORSED_DIRS) != 0) {", "+\t\t\t\t\t\t} else if ((this.flags & EclipseFileManager.HAS_ENDORSED_DIRS) != 0) {", "-\t\t\t\t\tremaining.remove();", "-\t\t\t\t\tthis.flags |= HAS_BOOTCLASSPATH;", "+\t\t\t\t\tthis.flags |= EclipseFileManager.HAS_BOOTCLASSPATH;", "-\t\t\t\tremaining.remove(); // remove the current option", "-\t\t\t\t\t\tif ((this.flags & HAS_PROCESSORPATH) == 0) {", "+\t\t\t\t\t\tif ((this.flags & EclipseFileManager.HAS_PROCESSORPATH) == 0) {", "-\t\t\t\t\tremaining.remove();", "-\t\t\t\tremaining.remove(); // remove the current option", "-\t\t\t\t\tremaining.remove();", "-\t\t\t\tremaining.remove(); // remove the current option", "-\t\t\t\t\tremaining.remove();", "-\t\t\t\tremaining.remove(); // remove the current option", "-\t\t\t\t\tremaining.remove();", "-\t\t\t\t\tthis.flags |= HAS_EXT_DIRS;", "+\t\t\t\t\tthis.flags |= EclipseFileManager.HAS_EXT_DIRS;", "-\t\t\t\tremaining.remove(); // remove the current option", "-\t\t\t\t\tremaining.remove();", "-\t\t\t\t\tthis.flags |= HAS_ENDORSED_DIRS;", "+\t\t\t\t\tthis.flags |= EclipseFileManager.HAS_ENDORSED_DIRS;", "-\t\t\t\tremaining.remove(); // remove the current option", "-\t\t\t\t\tremaining.remove();", "-\t\t\t\tremaining.remove(); // remove the current option", "-\t\t\t\t\tremaining.remove();", "-\t\t\t\tremaining.remove(); // remove the current option", "-\t\t\t\t\tremaining.remove();", "-\t\t\t\t\tthis.flags |= HAS_PROCESSORPATH;", "+\t\t\t\t\tthis.flags |= EclipseFileManager.HAS_PROCESSORPATH;"]}], "num": 22789}