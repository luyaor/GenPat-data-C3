{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1278ad71bd08d1d49fc52ee7a80b9ddf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4414c7b8b2d74373dd505f142a23c966", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/NameEnvironment.java", "commitBeforeChange": "6c9d3461652e1b0a1c076bd07fea25ea7241dc4b", "commitAfterChange": "fc3823ac5e20f18e24acb3b991589cbc8e132c53", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r public NameEnvironment(IJavaProject project, boolean isUsingSourceFolder)", "signatureAfterChange": "\r \r public NameEnvironment(IJavaProject javaProject)", "diff": ["-public NameEnvironment(IJavaProject project, boolean isUsingSourceFolder) {\r", "+public NameEnvironment(IJavaProject javaProject) {\r", "-\t\tthis.classpathLocations = computeLocations(project, isUsingSourceFolder, null, null);\r", "-\t} catch(JavaModelException e){\r", "+\t\tIWorkspaceRoot workspaceRoot = javaProject.getProject().getWorkspace().getRoot();\r", "+\t\tIResource outputFolder = workspaceRoot.findMember(javaProject.getOutputLocation());\r", "+\t\tString outputFolderLocation = null;\r", "+\t\tif (outputFolder != null && outputFolder.exists())\r", "+\t\t\toutputFolderLocation = outputFolder.getLocation().toString();\r", "+\t\tthis.classpathLocations = computeLocations(workspaceRoot, javaProject, outputFolderLocation, null, null);\r", "+\t} catch(JavaModelException e) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6c587d90b90052a461637d7d26ad7ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " void add(JavaProject javaProject, IPath pathToAdd, int includeMask, HashSet visitedProjects, IClasspathEntry referringEntry) throws JavaModelException", "signatureAfterChange": " void add(JavaProject javaProject, IPath pathToAdd, int includeMask, HashSet visitedProjects, IClasspathEntry referringEntry) throws JavaModelException", "diff": ["+\t\t\t\t\t\t\t\tObject target = JavaModel.getTarget(path, false/*don't check existence*/);", "+\t\t\t\t\t\t\t\tif (target instanceof IFolder) // case of an external folder", "+\t\t\t\t\t\t\t\t\tpath = ((IFolder) target).getFullPath();", "-\t\t\t\t\t\t\t\taddEnclosingProjectOrJar(path);", "+\t\t\t\t\t\t\t\taddEnclosingProjectOrJar(entry.getPath());", "+\t\t\t\t\t\t\tObject target = JavaModel.getTarget(path, false/*don't check existence*/);", "+\t\t\t\t\t\t\tif (target instanceof IFolder) // case of an external folder", "+\t\t\t\t\t\t\t\tpath = ((IFolder) target).getFullPath();", "-\t\t\t\t\t\t\taddEnclosingProjectOrJar(path);", "+\t\t\t\t\t\t\taddEnclosingProjectOrJar(entry.getPath());", "-\t\t\t\t\t\tadd((JavaProject) model.getJavaProject(entry.getPath().lastSegment()), null, includeMask, visitedProjects, cpEntry);", "+\t\t\t\t\t\tadd((JavaProject) model.getJavaProject(path.lastSegment()), null, includeMask, visitedProjects, cpEntry);"]}], "num": 36949}