{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "daee8f1152ff5ecbc5ec1962eb0c3e60", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7034bdac10deff9ddcba511c1b31c79d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "8924dfc4fa3fe74549012523c4b06ea66d1d771f", "commitAfterChange": "32ddf534b04d269b876c2c25ef9641f93fbc4b4b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tprivate static void checkAlternateBinding(BlockScope scope, Expression receiver, TypeBinding receiverType, MethodBinding binding, Expression[] arguments, TypeBinding[] originalArgumentTypes, TypeBinding[] alternateArgumentTypes, final InvocationSite invocationSite)", "signatureAfterChange": "  \tprivate static void checkAlternateBinding(BlockScope scope, Expression receiver, TypeBinding receiverType, MethodBinding binding, Expression[] arguments, TypeBinding[] originalArgumentTypes, TypeBinding[] alternateArgumentTypes, final InvocationSite invocationSite)", "diff": ["-\t\t\t\t\t\tif (!lastArgType.isCompatibleWith(varargsType.elementsType()))", "-\t\t\t\t\t\t\treturn;", "+\t\t\t\t\t\tif (lastArgType.isCompatibleWith(varargsType.elementsType()))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1e9426d5b537f08267f05f831258b7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Statement.java", "commitBeforeChange": "4e652bbe11383e976d60d20e3975e9453afa72ca", "commitAfterChange": "349c3b5a850fbdbf23ec6c6153a095f70d61338c", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void generateArguments(MethodBinding binding, Expression[] arguments, BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " public void generateArguments(MethodBinding binding, Expression[] arguments, BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\t\t\t\t&& lastType.isCompatibleWith(varArgsType))) {", "+\t\t\t\t\t&& lastType.isCompatibleWith(codeGenVarArgsType))) {"]}], "num": 48980}