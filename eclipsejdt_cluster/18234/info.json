{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4e7f7a5fac8aad9cee4ac62c72109412", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17f609c37dad0001742adf3eb50d015a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "3f6000663a511f073e83f5280aadbb447906808c", "commitAfterChange": "80e59a5ccab910bd46f0cada0b4790345d462db6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r \tIVariableBinding resolveVariable(VariableDeclaration variable)", "signatureAfterChange": "\r \tIVariableBinding resolveVariable(VariableDeclaration variable)", "diff": ["-\t\t\torg.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration = (org.eclipse.jdt.internal.compiler.ast.FieldDeclaration) this.newAstToOldAst.get(variable);\r", "+\t\t\torg.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration = (org.eclipse.jdt.internal.compiler.ast.FieldDeclaration) abstractVariableDeclaration;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad983e30a9f50cd21913fc5fbd014cc1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "359491f54e3ca885feab917a3aebfe3326bcb185", "commitAfterChange": "f756d2d03155bc3d579dba2d865f9a5c53026d3d", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "\r \r \tprivate IBinding internalResolveNameForSimpleName(Name name)", "signatureAfterChange": "\r \r \tprivate IBinding internalResolveNameForSimpleName(Name name)", "diff": ["+\t\t} else if (node instanceof org.eclipse.jdt.internal.compiler.ast.FieldDeclaration) {\r", "+\t\t\torg.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration = (org.eclipse.jdt.internal.compiler.ast.FieldDeclaration) node;\r", "+\t\t\tIVariableBinding variableBinding = this.getVariableBinding(fieldDeclaration.binding);\r", "+\t\t\treturn variableBinding;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdd69dd45d5bde6a4809857e038ec91b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "a127c18eb2e0be7f3c68a60246b08a9a69e7be5d", "commitAfterChange": "771a62c1c5090742b5612a8958d0207ca0f557cc", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": "  \tpublic ASTNode convert(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDeclaration)", "signatureAfterChange": "  \tpublic ASTNode convert(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDeclaration)", "diff": ["-\t\ttypeDecl.setInterface(kind == org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.INTERFACE_DECL);", "+\t\tboolean isInterface = kind == org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.INTERFACE_DECL;", "+\t\ttypeDecl.setInterface(isInterface);", "-\t\tbuildBodyDeclarations(typeDeclaration, typeDecl);", "+\t\tbuildBodyDeclarations(typeDeclaration, typeDecl, isInterface);"]}], "num": 18234}