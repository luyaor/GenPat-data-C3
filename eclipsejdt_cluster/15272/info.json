{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4e32ef7624c62da8ef1102864edbee48", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "019ea6a532bd7c5fee24a551a469e9cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "cfebe74b0993aa8e5991953b9cbb508424b8c095", "commitAfterChange": "c16713f6dd450429a4303737780dffe1c893ae16", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic Map getMap()", "signatureAfterChange": "  \tpublic Map getMap()", "diff": ["+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_INDENT_BODY_DECLARATIONS_COMPARE_TO_ANNOTATION_DECLARATION_HEADER, this.indent_body_declarations_compare_to_annotation_declaration_header ? DefaultCodeFormatterConstants.TRUE : DefaultCodeFormatterConstants.FALSE);", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_IN_EMPTY_ANNOTATION_DECLARATION, this.insert_new_line_in_empty_annotation_declaration ? JavaCore.INSERT : JavaCore.DO_NOT_INSERT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "075f8d538a6924314f867b17037d0255", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "d7b968f8074ad4e44b5a08309dcb414a4be941a4", "commitAfterChange": "b64275d5d6005c49a64e53460529203088ebb2bb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic Map getMap()", "signatureAfterChange": "  \tpublic Map getMap()", "diff": ["+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_BRACE_POSITION_FOR_LAMBDA_BODY, this.brace_position_for_lambda_body);", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_LAMBDA_ARROW, this.insert_space_after_lambda_arrow ? JavaCore.INSERT : JavaCore.DO_NOT_INSERT);", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_LAMBDA_ARROW, this.insert_space_before_lambda_arrow ? JavaCore.INSERT : JavaCore.DO_NOT_INSERT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bcba548ce61bc5a49fcf93ed2a7e15c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "e050ce187db6229b89aa41b0ef3c79b8a57e6df7", "commitAfterChange": "91b85d56bd85dc135ae6e51c56ff47dcb64753ef", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic Map getMap()", "signatureAfterChange": "  \tpublic Map getMap()", "diff": ["-\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_AFTER_ANNOTATION, this.insert_new_line_after_annotation ? JavaCore.INSERT : JavaCore.DO_NOT_INSERT);", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_AFTER_ANNOTATION_ON_MEMBER, this.insert_new_line_after_annotation_on_member ? JavaCore.INSERT : JavaCore.DO_NOT_INSERT);", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_AFTER_ANNOTATION_ON_PARAMETER, this.insert_new_line_after_annotation_on_parameter ? JavaCore.INSERT : JavaCore.DO_NOT_INSERT);", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_AFTER_ANNOTATION_ON_LOCAL_VARIABLE, this.insert_new_line_after_annotation_on_local_variable ? JavaCore.INSERT : JavaCore.DO_NOT_INSERT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13e587b0f1a7abe211e20b801f4c9fea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "a73c1b70646c33788c416636d54ca7b824b36c44", "commitAfterChange": "89bcdbe3377ffa239857ce6e220c3e9a2f048f0c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic Map getMap()", "signatureAfterChange": "  \tpublic Map getMap()", "diff": ["-\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_TAB_SIZE, Integer.toString(this.tab_size));", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_SNAP_TO_TABS, this.snapToTabs ? DefaultCodeFormatterConstants.TRUE: DefaultCodeFormatterConstants.FALSE);", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_TAB_LENGTH, Integer.toString(this.tab_length));", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_INDENTATION_SIZE, Integer.toString(this.indentation_size));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "180aa45eb1c928ef97c2e40f2eef655d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "0bc94ed2d40b4d8ab70b9c05eb298350c8183e79", "commitAfterChange": "45bab79b66ff2d20be53b2a53553c9facefe53ea", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic Map getMap()", "signatureAfterChange": "  \tpublic Map getMap()", "diff": ["+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_COMMENT_CONDENSED_BLOCK_COMMENT, this.comment_condensed_block_comment ? DefaultCodeFormatterConstants.TRUE : DefaultCodeFormatterConstants.FALSE);", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_COMMENT_CONDENSED_JAVADOC_COMMENT, this.comment_condensed_javadoc_comment ? DefaultCodeFormatterConstants.TRUE : DefaultCodeFormatterConstants.FALSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97a2321cd8409ed0900a973e1978d60f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "616e0cc4b1bc013d67f08c19f7ad98694e8af3c9", "commitAfterChange": "fe30c0f08ddab5b80fae1b7726ce1fae05bb7c1e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic Map getMap()", "signatureAfterChange": "  \tpublic Map getMap()", "diff": ["+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_ELLIPSIS, this.insert_space_after_ellipsis ? JavaCore.INSERT : JavaCore.DO_NOT_INSERT);", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_ELLIPSIS, this.insert_space_before_ellipsis ? JavaCore.INSERT : JavaCore.DO_NOT_INSERT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1773b52641730cf005e2f9a946be564", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "87d4fd7980451e90652820b5860e6399b708ef2c", "commitAfterChange": "913656a5a76e9163d25332c6a9aeee51291ec413", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic Map getMap()", "signatureAfterChange": "  \tpublic Map getMap()", "diff": ["+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_DISABLING_TAG, this.disabling_tag == null ? Util.EMPTY_STRING : new String(this.disabling_tag));", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_ENABLING_TAG, this.enabling_tag == null ? Util.EMPTY_STRING : new String(this.enabling_tag));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e804d7c8b03d00b274e2f63af950824b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFormatter.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   \tpublic ASTRewriteFormatter(NodeInfoStore placeholders, RewriteEventStore eventStore, Map options, String lineDelimiter)", "signatureAfterChange": "   \tpublic ASTRewriteFormatter(NodeInfoStore placeholders, RewriteEventStore eventStore, Map options, String lineDelimiter)", "diff": ["+\t", "+\t\tthis.options= options == null ? JavaCore.getOptions() : (Map) new HashMap(options);", "+\t\tthis.options.put(", "+\t\t\t\tDefaultCodeFormatterConstants.FORMATTER_ALIGNMENT_FOR_RESOURCES_IN_TRY,", "+\t\t\t\tDefaultCodeFormatterConstants.createAlignmentValue(true, DefaultCodeFormatterConstants.WRAP_NEXT_PER_LINE, DefaultCodeFormatterConstants.INDENT_DEFAULT));", "-\t\tthis.options= options;", "-", "+\t"]}], "num": 15272}