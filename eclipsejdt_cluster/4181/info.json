{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "91124d0acdcffce50dcaa1977e6182ff", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a344aa3bc556069531687d74ee3ad3c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic IAnnotationBinding[] getAnnotations()", "signatureAfterChange": "  \tpublic IAnnotationBinding[] getAnnotations()", "diff": ["-\t\t\t\tint annotationsCounter = 0;", "+\t\t\t\tint convertedAnnotationCount = 0;", "-\t\t\t\t\tfinal IAnnotationBinding annotationInstance = this.resolver.getAnnotationInstance(internalAnnotations[i]);", "+\t\t\t\t\torg.eclipse.jdt.internal.compiler.lookup.AnnotationBinding internalAnnotation = internalAnnotations[i];", "+\t\t\t\t\tIAnnotationBinding annotationInstance = this.resolver.getAnnotationInstance(internalAnnotation);", "-\t\t\t\t\ttempAnnotations[annotationsCounter++] = annotationInstance;", "+\t\t\t\t\ttempAnnotations[convertedAnnotationCount++] = annotationInstance;", "-\t\t\t\tif (length != annotationsCounter) {", "-\t\t\t\t\tSystem.arraycopy(tempAnnotations, 0, (tempAnnotations = new IAnnotationBinding[annotationsCounter]), 0, annotationsCounter);", "+\t\t\t\tif (convertedAnnotationCount != length) {", "+\t\t\t\t\tif (convertedAnnotationCount == 0) {", "+\t\t\t\t\t\treturn this.annotations = AnnotationBinding.NoAnnotations;", "+\t\t\t\t\t}", "+\t\t\t\t\tSystem.arraycopy(tempAnnotations, 0, (tempAnnotations = new IAnnotationBinding[convertedAnnotationCount]), 0, convertedAnnotationCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "724b247079576a6e921f8b32fb2cd5d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic synchronized IMethodBinding[] getDeclaredMethods()", "signatureAfterChange": " \tpublic synchronized IMethodBinding[] getDeclaredMethods()", "diff": ["-\t\t\t\t\tint removeSyntheticsCounter = 0;", "+\t\t\t\t\tint convertedMethodCount = 0;", "-\t\t\t\t\t\tif (!shouldBeRemoved(methodBinding)) {", "-\t\t\t\t\t\t\tIMethodBinding methodBinding2 = this.resolver.getMethodBinding(methodBinding);", "-\t\t\t\t\t\t\tif (methodBinding2 != null) {", "-\t\t\t\t\t\t\t\tnewMethods[removeSyntheticsCounter++] = methodBinding2;", "-\t\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (methodBinding.isDefaultAbstract() || methodBinding.isSynthetic() || (methodBinding.isConstructor() && isInterface())) {", "+\t\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tIMethodBinding methodBinding2 = this.resolver.getMethodBinding(methodBinding);", "+\t\t\t\t\t\tif (methodBinding2 != null) {", "+\t\t\t\t\t\t\tnewMethods[convertedMethodCount++] = methodBinding2;", "-\t\t\t\t\tif (removeSyntheticsCounter != length) {", "-\t\t\t\t\t\tSystem.arraycopy(newMethods, 0, (newMethods = new IMethodBinding[removeSyntheticsCounter]), 0, removeSyntheticsCounter);", "+\t\t\t\t\tif (convertedMethodCount != length) {", "+\t\t\t\t\t\tif (convertedMethodCount == 0) {", "+\t\t\t\t\t\t\treturn this.methods = NO_METHOD_BINDINGS;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tSystem.arraycopy(newMethods, 0, (newMethods = new IMethodBinding[convertedMethodCount]), 0, convertedMethodCount);"]}], "num": 4181}