{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "559214bd6c3d5ca72ced1928dec10beb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0269659f53616b0d4e978fa2cb201b74", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "45e574c9370a9e1fe1175a8641ff2dc7a4b4a6e7", "commitAfterChange": "c17970bb54810597f5d28802d36bfac65d844634", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 5, "signatureBeforeChange": " public int literalIndex(double key)", "signatureAfterChange": " public int literalIndex(double key)", "diff": ["-\tif ((index = doubleCache.get(key)) < 0) {", "-\t\tindex = doubleCache.put(key, currentIndex++);", "-\t\tif (index > 0xFFFF){", "+\tif ((index = doubleCache.putIfAbsent(key, this.currentIndex)) < 0) {", "+\t\tif ((index = -index)> 0xFFFF){", "-\t\tcurrentIndex++; // a double needs an extra place into the constant pool", "+\t\tthis.currentIndex += 2; // a double needs an extra place into the constant pool", "-\t\tfor (int i = 0; i < 8; i++) {", "-\t\t\tpoolContent[currentOffset++] = (byte) (temp >>> (56 - (i << 3)));", "-\t\t}", "+\t\tpoolContent[currentOffset++] = (byte) (temp >>> 56);", "+\t\tpoolContent[currentOffset++] = (byte) (temp >>> 48);", "+\t\tpoolContent[currentOffset++] = (byte) (temp >>> 40);", "+\t\tpoolContent[currentOffset++] = (byte) (temp >>> 32);", "+\t\tpoolContent[currentOffset++] = (byte) (temp >>> 24);", "+\t\tpoolContent[currentOffset++] = (byte) (temp >>> 16);", "+\t\tpoolContent[currentOffset++] = (byte) (temp >>> 8);", "+\t\tpoolContent[currentOffset++] = (byte) temp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9f8181009d2934009dc3810946a4f61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "45e574c9370a9e1fe1175a8641ff2dc7a4b4a6e7", "commitAfterChange": "c17970bb54810597f5d28802d36bfac65d844634", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 8, "signatureBeforeChange": " public int literalIndex(long key)", "signatureAfterChange": " public int literalIndex(long key)", "diff": ["-\tif ((index = longCache.get(key)) < 0) {", "-\t\tindex = longCache.put(key, currentIndex++);", "-\t\tif (index > 0xFFFF){", "+\tif ((index = longCache.putIfAbsent(key, this.currentIndex)) < 0) {", "+\t\tif ((index = -index) > 0xFFFF){", "-\t\tcurrentIndex++; // long value need an extra place into thwe constant pool", "+\t\tthis.currentIndex+= 2; // long value need an extra place into thwe constant pool", "-\t\tfor (int i = 0; i < 8; i++) {", "-\t\t\tpoolContent[currentOffset++] = (byte) (key >>> (56 - (i << 3)));", "-\t\t}", "+\t\tpoolContent[currentOffset++] = (byte) (key >>> 56);", "+\t\tpoolContent[currentOffset++] = (byte) (key >>> 48);", "+\t\tpoolContent[currentOffset++] = (byte) (key >>> 40);", "+\t\tpoolContent[currentOffset++] = (byte) (key >>> 32);", "+\t\tpoolContent[currentOffset++] = (byte) (key >>> 24);", "+\t\tpoolContent[currentOffset++] = (byte) (key >>> 16);", "+\t\tpoolContent[currentOffset++] = (byte) (key >>> 8);", "+\t\tpoolContent[currentOffset++] = (byte) key;"]}], "num": 25481}