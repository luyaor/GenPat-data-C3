{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dc58643ff82bdbeebace4b455d36fff2", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "415f67f2559a2297c82c61fe54f9a2f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "78cdf23ec3b25cdd688a05f0ebd856906ff8208f", "commitAfterChange": "872314d7b044137f4ad63ff12e3c31aceadb5b92", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " protected void locatePackageDeclarations(SearchPattern searchPattern, SearchParticipant participant) throws CoreException", "signatureAfterChange": " protected void locatePackageDeclarations(SearchPattern searchPattern, SearchParticipant participant) throws CoreException", "diff": ["-\t\t\t\tSearchMatch match = newDeclarationMatch(focus, SearchMatch.A_ACCURATE, -1, -1);", "+\t\t\t\tSearchMatch match = newDeclarationMatch(focus.getAncestor(IJavaElement.PACKAGE_FRAGMENT), SearchMatch.A_ACCURATE, -1, -1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d1a8294888587f64e3be8fcc19be119", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "e31a3d332f7041212032bc8ecaf89b88f9f4b3f9", "commitAfterChange": "3191fdf4ab3026eda23ddff8ec464afdaeed80aa", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "\r public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\t\t\t\t\t\t\t.addPotentialInitializationsFrom(tryInfo.unconditionalInits());\r", "-\t\t\t//*/\r", "-\t\t\t// SMART ANALYSIS (see 1FBPLCY)\r", "-\t\t\t//FlowInfo catchInfo = handlingContext.initsOnException(caughtExceptionTypes[i]);\r", "-\t\t\t\r", "+\t\t\t\t\t\t\t\t\t.addPotentialInitializationsFrom(tryInfo.unconditionalInits())\r", "+\t\t\t\t\t\t\t\t\t.addPotentialInitializationsFrom(handlingContext.initsOnReturn);\r", "+\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7496a06d4664d3108a9b27ca31befaa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/DoStatement.java", "commitBeforeChange": "c36a6a2b662267e56067d121b7f34ae48cbcb692", "commitAfterChange": "93c94a7685512a759bb72181caf791ff94ebd920", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tthis.preConditionInitStateIndex = currentScope.methodScope().recordInitializationStates(actionInfo);", "+\t/* https://bugs.eclipse.org/bugs/show_bug.cgi?id=367023, we reach the condition at the bottom via two arcs, ", "+\t   one by free fall and another by continuing... Merge initializations propagated through the two pathways,", "+\t   cf, while and for loops.", "+\t*/", "+\tthis.preConditionInitStateIndex = currentScope.methodScope().recordInitializationStates(actionInfo.mergedWith(loopingContext.initsOnContinue));"]}], "num": 22420}