{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ae907de1db1b37021becf1c23224c898", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ddf88da1303161a1e0208413c7502ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "9f8931bf92b7966fbd8c101a448f79f7965fbbf9", "commitAfterChange": "3bf5bab95449ec256a601c2551910573083178b4", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " protected void acceptSourceMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames, boolean isDeclaration, int start, int end)", "signatureAfterChange": " protected void acceptSourceMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames)", "diff": ["-protected void acceptSourceMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames, boolean isDeclaration, int start, int end) {", "+protected void acceptSourceMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames) {", "-\t\t\tif (methods[i].getElementName().equals(name) && methods[i].getParameterTypes().length == parameterTypeNames.length) {", "-\t\t\t\tif(isDeclaration) {", "-\t\t\t\t\tISourceRange range = methods[i].getNameRange();", "-\t\t\t\t\tif(range.getOffset() <= start && range.getOffset() + range.getLength() >= end) {", "-\t\t\t\t\t\taddElement(methods[i]);", "-\t\t\t\t\t}", "-\t\t\t\t} else {", "-\t\t\t\t\taddElement(methods[i]);", "-\t\t\t\t}", "+\t\t\tif (methods[i].getElementName().equals(name)", "+\t\t\t\t\t&& methods[i].getParameterTypes().length == parameterTypeNames.length) {", "+\t\t\t\taddElement(methods[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c385367dc9ef8be0ccb2a6ccfcbbbde", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "828585e7463daa7907691134b9be6a40907a40c0", "commitAfterChange": "d22f2534ad71e981b8a20b49f3277de91c1c0a0c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " protected void acceptSourceMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames)", "signatureAfterChange": " protected void acceptSourceMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames, boolean isDeclaration, int start, int end)", "diff": ["-protected void acceptSourceMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames) {", "+protected void acceptSourceMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames, boolean isDeclaration, int start, int end) {", "-\t\t\t\taddElement(methods[i]);", "+\t\t\t\tif(isDeclaration) {", "+\t\t\t\t\tISourceRange range = methods[i].getNameRange();", "+\t\t\t\t\tif(range.getOffset() <= start && range.getOffset() + range.getLength() >= end) {", "+\t\t\t\t\t\taddElement(methods[i]);", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\taddElement(methods[i]);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45635f6e2cbea34ebb41cfcda2b63027", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "b90626a8f6e0a122baef19254d7e1d462d97446e", "commitAfterChange": "afb20f30301e2620352c3a6eece24740efc080f3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected void acceptBinaryMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames, String[] paramterSignatures)", "signatureAfterChange": " protected void acceptBinaryMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames, String[] paramterSignatures, char[] uniqueKey)", "diff": ["-protected void acceptBinaryMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames, String[] paramterSignatures) {", "+protected void acceptBinaryMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames, String[] paramterSignatures, char[] uniqueKey) {", "+\t\tif(uniqueKey != null) {", "+\t\t\tmethod = new ParameterizedBinaryMethod(", "+\t\t\t\t\t(JavaElement)method.getParent(),", "+\t\t\t\t\tmethod.getElementName(),", "+\t\t\t\t\tmethod.getParameterTypes(),", "+\t\t\t\t\tnew String(uniqueKey));", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45d4f0b012d1bc2f73b5a9aebb0d2549", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "db0d99936b529038f502f3c42e4c67fa5380c5bc", "commitAfterChange": "5988789db77abec94d1b8a17fd42ed09f795c5be", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " protected void acceptSourceMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames, char[] uniqueKey)", "signatureAfterChange": " protected void acceptSourceMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames, char[] uniqueKey)", "diff": ["-\t\t\t\tif(uniqueKey != null) {", "-\t\t\t\t\tIMethod method = methods[i];", "-\t\t\t\t\tParameterizedSourceMethod parameterizedSourceMethod = new ParameterizedSourceMethod(", "-\t\t\t\t\t\t\t(JavaElement)method.getParent(),", "-\t\t\t\t\t\t\tmethod.getElementName(),", "-\t\t\t\t\t\t\tmethod.getParameterTypes(),", "-\t\t\t\t\t\t\tnew String(uniqueKey));", "-\t\t\t\t\taddElement(parameterizedSourceMethod);", "-\t\t\t\t} else {", "-\t\t\t\t\taddElement(methods[i]);", "-\t\t\t\t}", "+\t\t\t\tIMethod method = methods[i];", "+\t\t\t\tif (uniqueKey != null)", "+\t\t\t\t\tmethod = new ResolvedSourceMethod(", "+\t\t\t\t\t\t(JavaElement)method.getParent(),", "+\t\t\t\t\t\tmethod.getElementName(),", "+\t\t\t\t\t\tmethod.getParameterTypes(),", "+\t\t\t\t\t\tnew String(uniqueKey));", "+\t\t\t\taddElement(method);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88815c30e59635a04dc35de7b7d34085", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "0243628c08ab4b4900a7554ddbc8a451c6a47550", "commitAfterChange": "047584befb8673c45fb37a5eec1f22e3adb791d0", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": " protected void acceptSourceMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames, char[] uniqueKey)", "signatureAfterChange": " protected void acceptSourceMethod( \t\tIType type, \t\tchar[] selector, \t\tchar[][] parameterPackageNames, \t\tchar[][] parameterTypeNames, \t\tString[] parameterSignatures, \t\tchar[][] typeParameterNames, \t\tchar[][][] typeParameterBoundNames, \t\tchar[] uniqueKey)", "diff": ["-protected void acceptSourceMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames, char[] uniqueKey) {", "+protected void acceptSourceMethod(", "+\t\tIType type,", "+\t\tchar[] selector,", "+\t\tchar[][] parameterPackageNames,", "+\t\tchar[][] parameterTypeNames,", "+\t\tString[] parameterSignatures,", "+\t\tchar[][] typeParameterNames,", "+\t\tchar[][][] typeParameterBoundNames,", "+\t\tchar[] uniqueKey) {", "+\t", "-\t\t\t\tif (uniqueKey != null)", "-\t\t\t\t\tmethod = new ResolvedSourceMethod(", "+\t\t\t\tif (uniqueKey != null) {", "+\t\t\t\t\tResolvedSourceMethod resolvedMethod = new ResolvedSourceMethod(", "+\t\t\t\t\tresolvedMethod.occurrenceCount = method.getOccurrenceCount();", "+\t\t\t\t\tmethod = resolvedMethod;", "+\t\t\t\t}", "+\t\t", "+\t\tif (match && !areTypeParametersCompatible(method, typeParameterNames, typeParameterBoundNames)) {", "+\t\t\tmatch = false;", "+\t\t}", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c78abc3234d1ca90256d39b0ef1a085a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "b90626a8f6e0a122baef19254d7e1d462d97446e", "commitAfterChange": "afb20f30301e2620352c3a6eece24740efc080f3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " protected void acceptSourceMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames)", "signatureAfterChange": " protected void acceptSourceMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames, char[] uniqueKey)", "diff": ["-protected void acceptSourceMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames) {", "+protected void acceptSourceMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames, char[] uniqueKey) {", "-\t\t\t\taddElement(methods[i]);", "+\t\t\t\tif(uniqueKey != null) {", "+\t\t\t\t\tIMethod method = methods[i];", "+\t\t\t\t\tParameterizedSourceMethod parameterizedSourceMethod = new ParameterizedSourceMethod(", "+\t\t\t\t\t\t\t(JavaElement)method.getParent(),", "+\t\t\t\t\t\t\tmethod.getElementName(),", "+\t\t\t\t\t\t\tmethod.getParameterTypes(),", "+\t\t\t\t\t\t\tnew String(uniqueKey));", "+\t\t\t\t\taddElement(parameterizedSourceMethod);", "+\t\t\t\t} else {", "+\t\t\t\t\taddElement(methods[i]);", "+\t\t\t\t}"]}], "num": 10862}