{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "18657a111c8e3a793ea3d9d6dc304944", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cd521bf2ea153ad8d3bffd2d03dc9eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JarPackageFragmentRoot.java", "commitBeforeChange": "1d91bb6095cf925ea7ef511c76b46befc586fea4", "commitAfterChange": "11e4e14c87ae9f5d3c387265b339332ab33728bd", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tprivate String[] initPackageFragToTypes(HashtableOfArrayToObject packageFragToTypes, String entryName, int lastSeparator)", "signatureAfterChange": " \tprivate void initPackageFragToTypes(HashtableOfArrayToObject packageFragToTypes, String entryName, boolean isDirectory)", "diff": ["-\tprivate String[] initPackageFragToTypes(HashtableOfArrayToObject packageFragToTypes, String entryName, int lastSeparator) {", "+\tprivate void initPackageFragToTypes(HashtableOfArrayToObject packageFragToTypes, String entryName, boolean isDirectory) {", "+\t\tint lastSeparator = isDirectory ? entryName.length()-1 : entryName.lastIndexOf('/');", "-\t\t\tSystem.arraycopy(existing, 0, existing = new String[i+1], 0, i);", "-\t\t\texisting[i] = manager.intern(pkgName[i]);", "-\t\t\tpackageFragToTypes.put(existing, new ArrayList[] { EMPTY_LIST, EMPTY_LIST });", "+\t\t\tif (Util.isValidFolderNameForPackage(pkgName[i])) {", "+\t\t\t\tSystem.arraycopy(existing, 0, existing = new String[i+1], 0, i);", "+\t\t\t\texisting[i] = manager.intern(pkgName[i]);", "+\t\t\t\tpackageFragToTypes.put(existing, new ArrayList[] { EMPTY_LIST, EMPTY_LIST });", "+\t\t\t} else {", "+\t\t\t\t// non-Java esource folder", "+\t\t\t\tArrayList[] children = (ArrayList[]) packageFragToTypes.get(existing);", "+\t\t\t\tif (children[1/*NON_JAVA*/] == EMPTY_LIST) children[1/*NON_JAVA*/] = new ArrayList();", "+\t\t\t\tchildren[1/*NON_JAVA*/].add(entryName);", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\t}", "+\t\tif (isDirectory)", "+\t\t\treturn;", "+\t\t", "+\t\t// add classfile info amongst children", "+\t\tString fileName = entryName.substring(lastSeparator + 1);", "+\t\tArrayList[] children = (ArrayList[]) packageFragToTypes.get(pkgName);", "+\t\tif (org.eclipse.jdt.internal.compiler.util.Util.isClassFileName(entryName)) {", "+\t\t\tif (children[0/*JAVA*/] == EMPTY_LIST) children[0/*JAVA*/] = new ArrayList();", "+\t\t\tchildren[0/*JAVA*/].add(fileName);", "+\t\t} else {", "+\t\t\tif (children[1/*NON_JAVA*/] == EMPTY_LIST) children[1/*NON_JAVA*/] = new ArrayList();", "+\t\t\tchildren[1/*NON_JAVA*/].add(fileName);", "-\t\treturn existing;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7c23368bd1d06afe475b9a38359139b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JarPackageFragmentRoot.java", "commitBeforeChange": "ed25425f5de4194a0f32ce4c1315af886ca42c42", "commitAfterChange": "821b6028ffbd0ba8edfd1a0534c32e817f4e830d", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tprivate void initPackageFragToTypes(HashtableOfArrayToObject packageFragToTypes, String entryName, boolean isDirectory)", "signatureAfterChange": " \tprivate void initRawPackageInfo(HashtableOfArrayToObject rawPackageInfo, String entryName, boolean isDirectory, String sourceLevel, String compliance)", "diff": ["-\tprivate void initPackageFragToTypes(HashtableOfArrayToObject packageFragToTypes, String entryName, boolean isDirectory) {", "+\tprivate void initRawPackageInfo(HashtableOfArrayToObject rawPackageInfo, String entryName, boolean isDirectory, String sourceLevel, String compliance) {", "-\t\t\texisting = (String[]) packageFragToTypes.getKey(pkgName, existingLength);", "+\t\t\texisting = (String[]) rawPackageInfo.getKey(pkgName, existingLength);", "-\t\tIJavaProject project = getJavaProject();", "-\t\t\tif (Util.isValidFolderNameForPackage(pkgName[i], project.getOption(JavaCore.COMPILER_SOURCE, true), project.getOption(JavaCore.COMPILER_COMPLIANCE, true))) {", "+\t\t\tif (Util.isValidFolderNameForPackage(pkgName[i], sourceLevel, compliance)) {", "-\t\t\t\tpackageFragToTypes.put(existing, new ArrayList[] { EMPTY_LIST, EMPTY_LIST });", "+\t\t\t\trawPackageInfo.put(existing, new ArrayList[] { EMPTY_LIST, EMPTY_LIST });", "-\t\t\t\t\tArrayList[] children = (ArrayList[]) packageFragToTypes.get(existing);", "+\t\t\t\t\tArrayList[] children = (ArrayList[]) rawPackageInfo.get(existing);", "-\t\tArrayList[] children = (ArrayList[]) packageFragToTypes.get(pkgName);", "+\t\tArrayList[] children = (ArrayList[]) rawPackageInfo.get(pkgName);", "-\t\t\tString fileName = entryName.substring(lastSeparator + 1);", "-\t\t\tchildren[0/*JAVA*/].add(fileName);", "+\t\t\tString nameWithoutExtension = entryName.substring(lastSeparator + 1, entryName.length() - 6);", "+\t\t\tchildren[0/*JAVA*/].add(nameWithoutExtension);"]}], "num": 63147}