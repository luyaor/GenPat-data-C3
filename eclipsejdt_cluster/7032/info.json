{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "98b6ed3e6528d2a97d61330ecf3765dd", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a6651fe1b2cda98474f0ae3279200f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "c2933480c6efd86534d66414d0baa0527f76ca45", "commitAfterChange": "723628e20cdcca3d7368991555fbb1e08f7222a1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic String toString()", "signatureAfterChange": " \tpublic String toString()", "diff": ["+\t\tString[] patterns = getExclusionPatterns();", "+\t\tif (patterns != null) {", "+\t\t\tbuffer.append(\"[excluding:\"); //$NON-NLS-1$", "+\t\t\tfor (int i = 0, length = patterns.length; i < length; i++) {", "+\t\t\t\tbuffer.append(patterns[i]);", "+\t\t\t\tif (i != length-1) {", "+\t\t\t\t\tbuffer.append('|');", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tbuffer.append(']');", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdc1925f49de29641f170e597896d5d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/internal/compiler/tool/EclipseCompiler.java", "commitBeforeChange": "639f95fb93a85f023afe828b77bfc8cd4dbf811c", "commitAfterChange": "8a3cbdf1db434ade029724481c4ce0338046043a", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t@SuppressWarnings(\"unchecked\") \tpublic CompilationTask getTask(Writer out, \t\t\tJavaFileManager fileManager, \t\t\tDiagnosticListener<? super JavaFileObject> diagnosticListener, \t\t\tIterable<String> options, \t\t\tIterable<String> classes, \t\t\tIterable<? extends JavaFileObject> compilationUnits)", "signatureAfterChange": " \t@SuppressWarnings(\"unchecked\") \tpublic CompilationTask getTask(Writer out, \t\t\tJavaFileManager fileManager, \t\t\tDiagnosticListener<? super JavaFileObject> diagnosticListener, \t\t\tIterable<String> options, \t\t\tIterable<String> classes, \t\t\tIterable<? extends JavaFileObject> compilationUnits)", "diff": ["+", "+\t\t}", "+", "+\t\tif (classes != null) {", "+\t\t\tallOptions.add(\"-classNames\"); //$NON-NLS-1$", "+\t\t\tStringBuilder builder = new StringBuilder();", "+\t\t\tint i = 0;", "+\t\t\tfor (String className : classes) {", "+\t\t\t\tif (i != 0) {", "+\t\t\t\t\tbuilder.append(',');", "+\t\t\t\t}", "+\t\t\t\tbuilder.append(className);", "+\t\t\t\ti++;", "+\t\t\t}", "+\t\t\tallOptions.add(String.valueOf(builder));"]}], "num": 7032}