{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f88bae9cefb0f9a574ed7c267760ed0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e1e9229b2c6a8ade040985b57cb6cbb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocFieldReference.java", "commitBeforeChange": "5dd0de42e39b5ae6b6ed70261ede6298820c064c", "commitAfterChange": "2d1b668da982fab23d85fda225f2e9df3073c2e1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprotected TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\t\tthis.receiverType = scope.enclosingReceiverType();", "+\t\t\tthis.actualReceiverType = scope.enclosingReceiverType();", "-\t\t\tthis.receiverType = this.receiver.resolveType((ClassScope) scope);", "+\t\t\tthis.actualReceiverType = this.receiver.resolveType((ClassScope) scope);", "-\t\t\tthis.receiverType = this.receiver.resolveType((BlockScope)scope);", "+\t\t\tthis.actualReceiverType = this.receiver.resolveType((BlockScope)scope);", "-\t\tif (this.receiverType == null) {", "+\t\tif (this.actualReceiverType == null) {", "-\t\t\t: scope.getField(this.receiverType, this.token, this);", "+\t\t\t: scope.getField(this.actualReceiverType, this.token, this);", "-\t\t\tif (this.receiverType instanceof ReferenceBinding) {", "-\t\t\t\tReferenceBinding refBinding = (ReferenceBinding) this.receiverType;", "+\t\t\tif (this.actualReceiverType instanceof ReferenceBinding) {", "+\t\t\t\tReferenceBinding refBinding = (ReferenceBinding) this.actualReceiverType;", "-\t\t\t\t\t\tscope.problemReporter().javadocInvalidField(this, fieldBinding, this.receiverType, scope.getDeclarationModifiers());", "+\t\t\t\t\t\tscope.problemReporter().javadocInvalidField(this, fieldBinding, this.actualReceiverType, scope.getDeclarationModifiers());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c273476e587cac673d9c224f8a97553f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocAllocationExpression.java", "commitBeforeChange": "cdead094a9813fdba5ccda0ce2f9f48a99552dbc", "commitAfterChange": "3be4aa0b7d051355f329ce1003f3f4c0f7acfab2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\tconstant = NotAConstant;", "+\t\tthis.constant = NotAConstant;", "-\t\t\tthis.resolvedType = type.resolveType((ClassScope)scope);", "+\t\t\tthis.resolvedType = this.type.resolveType((ClassScope)scope);", "-\t\t\tthis.resolvedType = type.resolveType((BlockScope)scope);", "+\t\t\tthis.resolvedType = this.type.resolveType((BlockScope)scope);", "-\t\tif (arguments != null) {", "+\t\tif (this.arguments != null) {", "-\t\t\tint length = arguments.length;", "+\t\t\tint length = this.arguments.length;", "-\t\t\t\tif (binding.declaringClass == null) {", "-\t\t\t\t\tbinding.declaringClass = allocationType;", "+\t\t\t\tif (this.binding.declaringClass == null) {", "+\t\t\t\t\tthis.binding.declaringClass = allocationType;", "-\t\t\t\tscope.problemReporter().invalidConstructor(this, binding);", "+\t\t\t\tscope.problemReporter().javadocInvalidConstructor(this, this.binding, scope.getModifiers());", "-\t\tif (isMethodUseDeprecated(binding, scope)) {", "-\t\t\tscope.problemReporter().deprecatedMethod(binding, this);", "-\t\t}", "-", "-\t\tif (arguments != null) {", "-\t\t\tfor (int i = 0; i < arguments.length; i++) {", "-\t\t\t\targuments[i].implicitWidening(binding.parameters[i], argumentTypes[i]);", "-\t\t\t}", "+\t\tif (isMethodUseDeprecated(this.binding, scope)) {", "+\t\t\tscope.problemReporter().javadocDeprecatedMethod(this.binding, this, scope.getModifiers());"]}], "num": 51906}