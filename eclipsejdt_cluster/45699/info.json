{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "55b92fdebd6b01cebd95156796dfea76", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5453292bd41f3c62d541c64acdbcb81b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/NestedTypeBinding.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public SyntheticArgumentBinding getSyntheticArgument(ReferenceBinding targetEnclosingType, boolean onlyExactMatch, boolean scopeIsConstructorCall)", "signatureAfterChange": " public SyntheticArgumentBinding getSyntheticArgument(ReferenceBinding targetEnclosingType, boolean onlyExactMatch, boolean scopeIsConstructorCall)", "diff": ["-\tif (this != this.prototype) throw new IllegalStateException();", "+\tif (!isPrototype()) throw new IllegalStateException();", "-\t\tif (this.enclosingInstances[0].type == targetEnclosingType) ", "+\t\tif (TypeBinding.equalsEquals(this.enclosingInstances[0].type, targetEnclosingType)) ", "-\t\tif (this.enclosingInstances[i].type == targetEnclosingType)", "+\t\tif (TypeBinding.equalsEquals(this.enclosingInstances[i].type, targetEnclosingType))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a45a06f9ccf54570e353d0fea54aabd8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/NestedTypeBinding.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public SyntheticArgumentBinding addSyntheticArgument(ReferenceBinding targetEnclosingType)", "signatureAfterChange": " public SyntheticArgumentBinding addSyntheticArgument(ReferenceBinding targetEnclosingType)", "diff": ["-\tif (this != this.prototype) throw new IllegalStateException();", "+\tif (!isPrototype()) throw new IllegalStateException();", "-\t\tif (enclosingType() == targetEnclosingType)", "+\t\tif (TypeBinding.equalsEquals(enclosingType(), targetEnclosingType))"]}], "num": 45699}