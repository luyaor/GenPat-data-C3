{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "db87e1623ead84d5b0c9540c8b92343e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09aca2c6eebe729a7d4f8c30125aa3d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Block.java", "commitBeforeChange": "f4bdb5d912579981f22fe9e7c4679e93b1a5f059", "commitAfterChange": "a3a09ad256da223aa1f3d2fe29b81e346d09a16c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": " \t \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\tif (statements == null)", "-\t\t\treturn flowInfo;", "+\t\tif (statements == null)\treturn flowInfo;", "+\t\tboolean didAlreadyComplain = false;", "-\t\t\tif (!flowInfo.complainIfUnreachable((stat = statements[i]), scope)) {", "+\t\t\tif (!flowInfo.complainIfUnreachable(stat = statements[i], scope, didAlreadyComplain)) {", "+\t\t\t} else {", "+\t\t\t\tdidAlreadyComplain = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a6b5bbc71b17da881005cd499ca59a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool.tests/src/org/eclipse/jdt/compiler/tool/tests/AbstractCompilerToolTest.java", "commitBeforeChange": "ad80a76936c2df07ee70f6449296e7f0de3f583a", "commitAfterChange": "bdc9852a3d785c3c39237016ab4c9bcb433fd0a2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t@Override \tprotected boolean invokeCompiler( \t\t\tPrintWriter out,  \t\t\tPrintWriter err, \t\t\tObject extraArguments, \t\t\tTestCompilationProgress compilationProgress)", "signatureAfterChange": " \t@Override \tprotected boolean invokeCompiler( \t\t\tPrintWriter out,  \t\t\tPrintWriter err, \t\t\tObject extraArguments, \t\t\tTestCompilationProgress compilationProgress)", "diff": ["+\t\tboolean ownsManager = false;", "+\t\t\townsManager = true;", "-\t\t\t\tmanager.close();", "+\t\t\t\tif (ownsManager)", "+\t\t\t\t\tmanager.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37ca882d15d23499c244ea6dcf2875e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "f4bdb5d912579981f22fe9e7c4679e93b1a5f059", "commitAfterChange": "a3a09ad256da223aa1f3d2fe29b81e346d09a16c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic void analyseCode( \t\tClassScope classScope, \t\tInitializationFlowContext initializerFlowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": " \t \tpublic void analyseCode( \t\tClassScope classScope, \t\tInitializationFlowContext initializerFlowContext, \t\tFlowInfo flowInfo)", "diff": ["+\t\t\t\tboolean didAlreadyComplain = false;", "-\t\t\t\t\tif (!flowInfo.complainIfUnreachable((stat = statements[i]), scope)) {", "+\t\t\t\t\tif (!flowInfo.complainIfUnreachable(stat = statements[i], scope, didAlreadyComplain)) {", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tdidAlreadyComplain = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47feeb326d3e1ef4a71a3bf62d14adce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration.java", "commitBeforeChange": "f4bdb5d912579981f22fe9e7c4679e93b1a5f059", "commitAfterChange": "a3a09ad256da223aa1f3d2fe29b81e346d09a16c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic void analyseCode( \t\tClassScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void analyseCode( \t\tClassScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["+\t\t\t\tboolean didAlreadyComplain = false;", "-\t\t\t\t\tif (!flowInfo.complainIfUnreachable((stat = statements[i]), scope)) {", "+\t\t\t\t\tif (!flowInfo.complainIfUnreachable((stat = statements[i]), scope, didAlreadyComplain)) {", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tdidAlreadyComplain = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5d657d50ce21457b8f197b72263e9a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/util/AptConfig.java", "commitBeforeChange": "a0c7c7ae93b0a77ffb3fb6a58e4bf02df3a8c4e8", "commitAfterChange": "578c21c1e18bf1107cbfd2c0d5f2f8d0a328f266", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static synchronized Map<FactoryContainer, Boolean> getAllContainers(IJavaProject jproj)", "signatureAfterChange": " \tpublic static synchronized Map<FactoryContainer, Boolean> getAllContainers(IJavaProject jproj)", "diff": ["-\t\thandlePluginContainers(containers);", "+\t\tboolean disableNewPlugins = jproj != null;", "+\t\tupdatePluginContainers(containers, disableNewPlugins);"]}], "num": 53669}