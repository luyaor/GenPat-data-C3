{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e9fa01153484671e214101bf3cf457b9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "123a97293da4059f92c37c9783e8fa2a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "271be052e104f1beefee4cd78039eca6ee6adb4f", "commitAfterChange": "f21888ae6d4ceca17a4c2f2fe7153b358e68695f", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "  TypeBinding getTypeFromTypeSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType, char[][][] missingTypeNames)", "signatureAfterChange": "  public TypeBinding getTypeFromTypeSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType, char[][][] missingTypeNames)", "diff": ["-TypeBinding getTypeFromTypeSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType, char[][][] missingTypeNames) {", "+public TypeBinding getTypeFromTypeSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType, char[][][] missingTypeNames) {", "-\t\t    if (enclosingType instanceof BinaryTypeBinding) { // per construction can only be binary type binding", "-\t\t\t\tTypeVariableBinding[] enclosingVariables = ((BinaryTypeBinding)enclosingType).typeVariables; // do not trigger resolution of variables", "-\t\t\t\tfor (int i = enclosingVariables.length; --i >= 0;)", "-\t\t\t\t\tif (CharOperation.equals(enclosingVariables[i].sourceName, wrapper.signature, varStart, varEnd))", "-\t\t\t\t\t\treturn dimension == 0 ? (TypeBinding) enclosingVariables[i] : createArrayType(enclosingVariables[i], dimension);", "-\t\t    }", "+\t\t\tTypeVariableBinding[] enclosingTypeVariables;", "+\t\t\tif (enclosingType instanceof BinaryTypeBinding) { // compiler normal case, no eager resolution of binary variables", "+\t\t\t\tenclosingTypeVariables = ((BinaryTypeBinding)enclosingType).typeVariables; // do not trigger resolution of variables", "+\t\t\t} else { // codepath only use by codeassist for decoding signatures", "+\t\t\t\tenclosingTypeVariables = enclosingType.typeVariables();", "+\t\t\t}", "+\t\t\tfor (int i = enclosingTypeVariables.length; --i >= 0;)", "+\t\t\t\tif (CharOperation.equals(enclosingTypeVariables[i].sourceName, wrapper.signature, varStart, varEnd))", "+\t\t\t\t\treturn dimension == 0 ? (TypeBinding) enclosingTypeVariables[i] : createArrayType(enclosingTypeVariables[i], dimension);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96da55988d142f72478ed9e0357f25c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/Messages.java", "commitBeforeChange": "3d7c90f7bdc11f391154962d0a30325e04ebe8d2", "commitAfterChange": "5132eb776dbfeab8b4b51cfe2722820e0b8061d3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic static void load(final String bundleName, final ClassLoader loader, final Field[] fields)", "signatureAfterChange": " \tpublic static void load(final String bundleName, final ClassLoader loader, final Field[] fields)", "diff": ["-\t\t\tfinal InputStream input = loader.getResourceAsStream(variants[i]);", "+\t\t\tInputStream input = null;", "+\t\t\tif (loader == null) {", "+\t\t\t\tinput = ClassLoader.getSystemResourceAsStream(variants[i]);", "+\t\t\t} else {", "+\t\t\t\tinput = loader.getResourceAsStream(variants[i]);", "+\t\t\t}"]}], "num": 172}