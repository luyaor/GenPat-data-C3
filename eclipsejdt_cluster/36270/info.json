{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5c2c14e1241630f2cc6e7e3dd88c0ade", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2249bff904480640578210d9109b83c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "9a76fb8f9434ae4b71dc267e686b050759ff3536", "commitAfterChange": "e5d54da7cf77d6614acfbbcede23df9b9dad68f9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  protected IProject[] build(int kind, Map ignored, IProgressMonitor monitor) throws CoreException", "signatureAfterChange": "  protected IProject[] build(int kind, Map ignored, IProgressMonitor monitor) throws CoreException", "diff": ["-\t\tIMarker marker = currentProject.createMarker(ProblemMarkerTag);", "+\t\tIMarker marker = currentProject.createMarker(IJavaModelMarker.JAVA_MODEL_PROBLEM_MARKER);", "-\t\tIMarker marker = currentProject.createMarker(ProblemMarkerTag);", "+\t\tIMarker marker = currentProject.createMarker(IJavaModelMarker.JAVA_MODEL_PROBLEM_MARKER);", "-\t\tIMarker marker = currentProject.createMarker(ProblemMarkerTag);", "+\t\tIMarker marker = currentProject.createMarker(IJavaModelMarker.JAVA_MODEL_PROBLEM_MARKER);", "-\t\tIMarker marker = currentProject.createMarker(ProblemMarkerTag);", "+\t\tIMarker marker = currentProject.createMarker(IJavaModelMarker.JAVA_MODEL_PROBLEM_MARKER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "776acde5f1a308f3b0dc06fbd1a55cc7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate static ParameterizedGenericMethodBinding inferFromArgumentTypes(Scope scope, MethodBinding originalMethod, TypeBinding[] arguments, TypeBinding[] parameters, Map collectedSubstitutes, TypeBinding[] substitutes)", "signatureAfterChange": " \tprivate static ParameterizedGenericMethodBinding inferFromArgumentTypes(Scope scope, MethodBinding originalMethod, TypeBinding[] arguments, TypeBinding[] parameters, Map collectedSubstitutes, TypeBinding[] substitutes)", "diff": ["-\t\t\t\tif (collectedSubstitutes.get(VoidBinding) != null) return null; // impossible substitution", "+\t\t\t\tif (collectedSubstitutes.get(TypeBinding.VOID) != null) return null; // impossible substitution", "-\t\t\t\t\t\tif (lastArgument == NullBinding) break checkVarargDimension;", "+\t\t\t\t\t\tif (lastArgument == TypeBinding.NULL) break checkVarargDimension;", "-\t\t\t\t\tif (collectedSubstitutes.get(VoidBinding) != null) return null; // impossible substitution", "+\t\t\t\t\tif (collectedSubstitutes.get(TypeBinding.VOID) != null) return null; // impossible substitution", "-\t\t\t\tif (collectedSubstitutes.get(VoidBinding) != null) return null; // impossible substitution", "+\t\t\t\tif (collectedSubstitutes.get(TypeBinding.VOID) != null) return null; // impossible substitution"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fad292fdc5733b4a548b9479abe6e21", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SwitchStatement.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope upperScope)", "diff": ["-\t\t\t\t\t\tif (expression.isConstantValueOfTypeAssignableToType(expressionType, IntBinding))", "+\t\t\t\t\t\tif (expression.isConstantValueOfTypeAssignableToType(expressionType, TypeBinding.INT))", "-\t\t\t\t\t\tif (expressionType.isCompatibleWith(IntBinding))", "+\t\t\t\t\t\tif (expressionType.isCompatibleWith(TypeBinding.INT))", "-\t\t\t\t\t} else if (upperScope.isBoxingCompatibleWith(expressionType, IntBinding)) {", "-\t\t\t\t\t\texpression.computeConversion(upperScope, IntBinding, expressionType);", "+\t\t\t\t\t} else if (upperScope.isBoxingCompatibleWith(expressionType, TypeBinding.INT)) {", "+\t\t\t\t\t\texpression.computeConversion(upperScope, TypeBinding.INT, expressionType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9862dde3609a9fe43dda1bf6a594a1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " \tprivate TypeBinding lowerUpperBound(TypeBinding[] types, List lubStack)", "signatureAfterChange": " \tprivate TypeBinding lowerUpperBound(TypeBinding[] types, List lubStack)", "diff": ["-\t\t\treturn type == null ? VoidBinding : type;", "+\t\t\treturn type == null ? TypeBinding.VOID : type;", "-\t\t\treturn IntBinding;", "+\t\t\treturn TypeBinding.INT;", "-\t\tif (length == 0) return VoidBinding;", "+\t\tif (length == 0) return TypeBinding.VOID;", "-\t\t\tcase 0 : return VoidBinding;", "+\t\t\tcase 0 : return TypeBinding.VOID;"]}], "num": 36270}