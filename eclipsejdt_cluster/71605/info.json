{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f7eea50ef602ad0d44ae6c253043957", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03cfd8948dca469c32ae18e02bcf0020", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "1995deba8c96efdefeb6a6078c7e55c511780c0c", "commitAfterChange": "c0961b9d73157eff51e68a5c49ea401574d94c27", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": " void recordTypeReferences(TypeBinding[] types)", "signatureAfterChange": " void recordTypeReferences(TypeBinding[] types)", "diff": ["-\tif (qualifiedReferences == null) return; // not recording dependencies", "+\tif (referencedTypes == null) return; // not recording dependencies", "-\t\tif (actualType != null)", "-\t\t\trecordQualifiedReference(actualType.isMemberType()", "-\t\t\t\t? CharOperation.splitOn('.', actualType.readableName())", "-\t\t\t\t: actualType.compoundName);", "+\t\tif (actualType != null && !referencedTypes.containsIdentical(actualType))", "+\t\t\treferencedTypes.add(actualType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a743270e31876712938c952c5b585d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": " void recordTypeReference(TypeBinding type)", "signatureAfterChange": " void recordTypeReference(TypeBinding type)", "diff": ["-\tif (type.isArrayType())", "-\t\ttype = ((ArrayBinding) type).leafComponentType;", "-", "-\tif (type.isBaseType()) return;", "-\tif (referencedTypes.containsIdentical(type)) return;", "-\tif (((ReferenceBinding) type).isLocalType()) return;", "-", "-\treferencedTypes.add(type);", "+\tReferenceBinding actualType = typeToRecord(type);", "+\tif (actualType != null && !referencedTypes.containsIdentical(actualType))", "+\t\treferencedTypes.add(actualType);"]}], "num": 71605}