{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "50c5013acedc81ec3a68cde295011566", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62113c67d211c8179e64a2f9108a1e5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/ToolFactory.java", "commitBeforeChange": "75f702ac7a9f5b98d8daf289140c0d700af63244", "commitAfterChange": "31e3c66a70e3c9b69b47c38f0b44d65cff7cbfa3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic static IScanner createScanner(boolean tokenizeComments, boolean tokenizeWhiteSpace, boolean recordLineSeparator, String sourceLevel)", "signatureAfterChange": " \tpublic static IScanner createScanner(boolean tokenizeComments, boolean tokenizeWhiteSpace, boolean recordLineSeparator, String sourceLevel)", "diff": ["-\t\tif (JavaCore.VERSION_1_4.equals(sourceLevel)) {", "-\t\t\tscanner = new PublicScanner(tokenizeComments, tokenizeWhiteSpace, false/*nls*/, CompilerOptions.JDK1_4 /*assert*/, null/*taskTags*/, null/*taskPriorities*/);", "-\t\t} else {", "-\t\t\tscanner = new PublicScanner(tokenizeComments, tokenizeWhiteSpace, false/*nls*/, CompilerOptions.JDK1_3 /*assert*/, null/*taskTags*/, null/*taskPriorities*/);", "-\t\t}", "+\t\tlong level = CompilerOptions.versionToJdkLevel(sourceLevel);", "+\t\tif (level == 0) level = CompilerOptions.JDK1_3; // fault-tolerance", "+\t\tscanner = new PublicScanner(tokenizeComments, tokenizeWhiteSpace, false/*nls*/,level /*sourceLevel*/, null/*taskTags*/, null/*taskPriorities*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef6e222b380ffe64d2dd9c6b352eef5e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "3817fb9be5d23e5c6f76a434da338233b90b5a46", "commitAfterChange": "8d9f700412e8d76f89db3ccd17a42191a013d35d", "methodNumberBeforeChange": 251, "methodNumberAfterChange": 251, "signatureBeforeChange": " public void swap()", "signatureAfterChange": " public void swap()", "diff": ["-\tsuper.swap();", "-\ttry {", "-\t\tVerificationTypeInfo info = (VerificationTypeInfo) this.currentFrame.stackItems[this.currentFrame.numberOfStackItems - 1].clone();", "-\t\tVerificationTypeInfo info2 = (VerificationTypeInfo) this.currentFrame.stackItems[this.currentFrame.numberOfStackItems - 2].clone();", "-\t\tthis.currentFrame.stackItems[this.currentFrame.numberOfStackItems - 1] = info2;", "-\t\tthis.currentFrame.stackItems[this.currentFrame.numberOfStackItems - 2] = info;", "-\t} catch (CloneNotSupportedException e) {", "-\t\t// ignore", "-\t}", "+    super.swap();", "+    int numberOfStackItems = this.currentFrame.numberOfStackItems;", "+    if (numberOfStackItems >= 2) {", "+        try {", "+            VerificationTypeInfo info = (VerificationTypeInfo) this.currentFrame.stackItems[numberOfStackItems - 1].clone();", "+            VerificationTypeInfo info2 = (VerificationTypeInfo) this.currentFrame.stackItems[numberOfStackItems - 2].clone();", "+            this.currentFrame.stackItems[numberOfStackItems - 1] = info2;", "+            this.currentFrame.stackItems[numberOfStackItems - 2] = info;", "+        } catch (CloneNotSupportedException e) {", "+            // ignore", "+        }", "+    }"]}], "num": 66726}