{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2c740aeb3191e551cafee42cff1f378c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d59a7fa270a4f51ed8222f060e88762", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "cee242bcb21b999953c5459d6b40de2d782355f3", "commitAfterChange": "de0ba5a5e09b42f4671d55cb69260aca34e3da86", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic final int getLineEnd(int lineNumber)", "signatureAfterChange": " \tprivate boolean verifySpaceOrEndComment()", "diff": ["-\tpublic final int getLineEnd(int lineNumber) {", "-\t", "-\t\tif (this.scanner.linePtr != -1) {", "-\t\t\treturn this.scanner.getLineEnd(lineNumber);", "-\t\tif (this.lineEnds == null) ", "-\t\t\treturn -1;", "-\t\tif (lineNumber > this.lineEnds.length+1) ", "-\t\t\treturn -1;", "-\t\tif (lineNumber <= 0) ", "-\t\t\treturn -1;", "-\t\tif (lineNumber == this.lineEnds.length + 1) ", "-\t\t\treturn this.scanner.eofPosition;", "-\t\treturn this.lineEnds[lineNumber-1]; // next line start one character behind the lineEnd of the previous line", "+\t */", "+\tprivate boolean verifySpaceOrEndComment() {", "+\t\tint startPosition = this.index;", "+\t\t// Whitespace or inline tag closing brace", "+\t\tchar ch = peekChar();", "+\t\tswitch (ch) {", "+\t\t\tcase '}':", "+\t\t\t\treturn this.inlineTagStarted;", "+\t\t\tdefault:", "+\t\t\t\tif (Character.isWhitespace(ch)) {", "+\t\t\t\t\treturn true;", "+\t\t\t\t}", "+\t\t}", "+\t\t// End of comment", "+\t\tint previousPosition = this.index;", "+\t\tthis.starPosition = -1;", "+\t\tch = readChar();", "+\t\tnextChar: while (this.index<this.source.length) {", "+\t\t\tswitch (ch) {", "+\t\t\t\tcase '*':", "+\t\t\t\t\t// valid whatever the number of star before last '/'", "+\t\t\t\t\tthis.starPosition = previousPosition;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase '/':", "+\t\t\t\t\tif (this.starPosition >= startPosition) { // valid only if a star was previous character", "+\t\t\t\t\t\treturn true;", "+\t\t\t\t\t}", "+\t\t\t\tdefault :", "+\t\t\t\t\t// invalid whatever other character, even white spaces", "+\t\t\t\t\tthis.index = startPosition;", "+\t\t\t\t\treturn false;", "+\t\t\t\t", "+\t\t\t}", "+\t\t\tpreviousPosition = this.index;", "+\t\t\tch = readChar();", "+\t\t}", "+\t\tthis.index = startPosition;", "+\t\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb7a2a39a54c72bec89024f4af7b0dcb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "083b2c1b1ee5dda1ed44dee87f75d3006cc056c9", "commitAfterChange": "576df9e6dd9d0250a6c004ddb85431e8407887aa", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void setUp() throws Exception", "signatureAfterChange": " public void setUp() throws Exception", "diff": ["+", "+\t// Setup preferences", "-\tif (NO_COMMENTS) {", "+", "+\t// Setup no comments profile", "+\tif ((this.profiles & PROFILE_NO_COMMENTS) != 0) {", "-\tif (JOIN_LINES != null) {", "-\t\tif (!JOIN_LINES.equals(\"only_comments\")) {", "+", "+\t// Setup join lines profile", "+\tString joinLines = null;", "+\tswitch (this.profiles & PROFILE_JOIN_LINES_MASK) {", "+\t\tcase PROFILE_NEVER_JOIN_LINES:", "+\t\t\tjoinLines = \"never\";", "+\t\t\tbreak;", "+\t\tcase PROFILE_JOIN_LINES_ONLY_COMMENTS:", "+\t\t\tjoinLines = \"only_comments\";", "+\t\t\tbreak;", "+\t\tcase PROFILE_JOIN_LINES_ONLY_CODE:", "+\t\t\tjoinLines = \"only_code\";", "+\t\t\tbreak;", "+\t}", "+\tif (joinLines != null) {", "+\t\tif (!joinLines.equals(\"only_comments\")) {", "-\t\tif (!JOIN_LINES.equals(\"only_code\")) {", "+\t\tif (!joinLines.equals(\"only_code\")) {", "-\tif (BRACES != null) {", "-\t\tthis.preferences.brace_position_for_annotation_type_declaration = BRACES;", "-\t\tthis.preferences.brace_position_for_anonymous_type_declaration = BRACES;", "-\t\tthis.preferences.brace_position_for_array_initializer = BRACES;", "-\t\tthis.preferences.brace_position_for_block = BRACES;", "-\t\tthis.preferences.brace_position_for_block_in_case = BRACES;", "-\t\tthis.preferences.brace_position_for_constructor_declaration = BRACES;", "-\t\tthis.preferences.brace_position_for_enum_constant = BRACES;", "-\t\tthis.preferences.brace_position_for_enum_declaration = BRACES;", "-\t\tthis.preferences.brace_position_for_method_declaration = BRACES;", "-\t\tthis.preferences.brace_position_for_switch = BRACES;", "-\t\tthis.preferences.brace_position_for_type_declaration = BRACES;", "+", "+\t// Setup braces profile", "+\tString braces = null;", "+\tswitch (this.profiles & PROFILE_BRACES_MASK) {", "+\t\tcase PROFILE_BRACES_NEXT_LINE:", "+\t\t\tbraces = DefaultCodeFormatterConstants.NEXT_LINE;", "+\t\t\tbreak;", "+\t\tcase PROFILE_BRACES_NEXT_LINE_ON_WRAP:", "+\t\t\tbraces = DefaultCodeFormatterConstants.NEXT_LINE_ON_WRAP;", "+\t\t\tbreak;", "+\t\tcase PROFILE_BRACES_NEXT_LINE_SHIFTED:", "+\t\t\tbraces = DefaultCodeFormatterConstants.NEXT_LINE_SHIFTED;", "+\t\t\tbreak;", "-\tif (PRESERVED_LINES != -1) {", "-\t\tthis.preferences.number_of_empty_lines_to_preserve = PRESERVED_LINES;", "+\tif (braces != null) {", "+\t\tthis.preferences.brace_position_for_annotation_type_declaration = braces;", "+\t\tthis.preferences.brace_position_for_anonymous_type_declaration = braces;", "+\t\tthis.preferences.brace_position_for_array_initializer = braces;", "+\t\tthis.preferences.brace_position_for_block = braces;", "+\t\tthis.preferences.brace_position_for_block_in_case = braces;", "+\t\tthis.preferences.brace_position_for_constructor_declaration = braces;", "+\t\tthis.preferences.brace_position_for_enum_constant = braces;", "+\t\tthis.preferences.brace_position_for_enum_declaration = braces;", "+\t\tthis.preferences.brace_position_for_method_declaration = braces;", "+\t\tthis.preferences.brace_position_for_switch = braces;", "+\t\tthis.preferences.brace_position_for_type_declaration = braces;", "+\t}", "+", "+\t// Setup preserved lines profile", "+\tif ((this.profiles & PROFILE_PRESERVED_LINES_MASK) != 0) {", "+\t\tint lines = (this.profiles & PROFILE_PRESERVED_LINES_MASK) >> 5;", "+\t\tthis.preferences.number_of_empty_lines_to_preserve = lines;"]}], "num": 49380}