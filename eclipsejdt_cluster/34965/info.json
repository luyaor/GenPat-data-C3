{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "552c3082785a67aa65503abc1f3719f9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c86b479f20194c58a798badfa3c2bbbf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "da0372488a7d84e7cb9c4ca0733fb42f30faa604", "commitAfterChange": "f4bb90e126352ba58699dc135199884ab2b69a00", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\t \t \tpublic FlowInfo checkNullStatus(BlockScope scope, FlowInfo flowInfo, int nullStatus)", "signatureAfterChange": "\t \t \tpublic FlowInfo checkNullStatus(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, int nullStatus)", "diff": ["-\tpublic FlowInfo checkNullStatus(BlockScope scope, FlowInfo flowInfo, int nullStatus) {", "+\tpublic FlowInfo checkNullStatus(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, int nullStatus) {", "-\t\t\t\t\t\tscope.problemReporter().localVariableCannotBeNull(local, this);", "+\t\t\t\t\t\tflowContext.recordUsingNullReference(scope, local, this, FlowInfo.NON_NULL, flowInfo);", "-\t\t\t\t\t\tscope.problemReporter().localVariableCanOnlyBeNull(local, this);", "+\t\t\t\t\t\tflowContext.recordUsingNullReference(scope, local, this, FlowInfo.NULL, flowInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9d34ba29e8f4f82cec997db0c6aa526", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FakedTrackingVariable.java", "commitBeforeChange": "01fe9b211e794ff01834ebe0e40bd02cb1110d75", "commitAfterChange": "58c4c99d95f495c1408134b2cc53ce1127ec5a07", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  \tpublic boolean reportRecordedErrors(Scope scope, int mergedStatus)", "signatureAfterChange": "  \tpublic boolean reportRecordedErrors(Scope scope, int mergedStatus, boolean atDeadEnd)", "diff": ["-\tpublic boolean reportRecordedErrors(Scope scope, int mergedStatus) {", "+\tpublic boolean reportRecordedErrors(Scope scope, int mergedStatus, boolean atDeadEnd) {", "-\t\t\t\treportError(scope.problemReporter(), null, mergedStatus);", "-\t\t\t\treturn true;", "+\t\t\t\tif (atDeadEnd && neverClosedAtLocations())", "+\t\t\t\t\tmergedStatus = FlowInfo.NULL;", "+\t\t\t\tif ((mergedStatus & (FlowInfo.NULL|FlowInfo.POTENTIALLY_NULL|FlowInfo.POTENTIALLY_NON_NULL)) != 0) {", "+\t\t\t\t\treportError(scope.problemReporter(), null, mergedStatus);", "+\t\t\t\t\treturn true;", "+\t\t\t\t} else {", "+\t\t\t\t\tbreak;", "+\t\t\t\t}"]}], "num": 34965}