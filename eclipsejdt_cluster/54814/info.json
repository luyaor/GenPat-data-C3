{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "766b851b47ecefc1c8712d2e38746b12", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2933539efbb4b881c03bb1fbe3054367", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "aa3a93ccc3206cb1748c8a2362c7163309a5a4d8", "commitAfterChange": "a5c6e1f76d5a6c03c6d1a939c4f8dbefac55cdca", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\t  \tpublic void handleLineTooLong()", "signatureAfterChange": "\t  \tpublic void handleLineTooLong()", "diff": ["-\t\tif (outerMostDepth >= 0) throw new AlignmentException(AlignmentException.LINE_TOO_LONG, outerMostDepth);", "-", "+\t\tif (outerMostDepth >= 0) {", "+\t\t\tthrow new AlignmentException(AlignmentException.LINE_TOO_LONG, outerMostDepth);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d394a3818916a375bb310fbc9237d4d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/AnnotationHolder.java", "commitBeforeChange": "3575e4b916e9151da43f7d5bca2f917975264d4c", "commitAfterChange": "a70b14e1a835e068e14f3140bdcc4745154ba9ac", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " Object getDefaultValue()", "signatureAfterChange": " Object getDefaultValue()", "diff": ["+\tif (this.defaultValue instanceof UnresolvedReferenceBinding) {", "+\t\tif (this.env == null)", "+\t\t\tthrow new IllegalStateException();", "+\t\tthis.defaultValue = ((UnresolvedReferenceBinding) this.defaultValue).resolve(this.env, false);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db44db2c95c9a3232fd220c818d5d3e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/NewCodeFormatter.java", "commitBeforeChange": "a5c6e1f76d5a6c03c6d1a939c4f8dbefac55cdca", "commitAfterChange": "10f61af06f4d12e71dbad86581b20a4a2b3267b7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tprivate static CompilationUnitDeclaration parse(char[] source, Map settings)", "signatureAfterChange": " \t \tprivate static CompilationUnitDeclaration parse(char[] source, Map settings)", "diff": ["-\t\tif (source == null) throw new IllegalArgumentException();", "-", "+\t\tif (source == null) {", "+\t\t\tthrow new IllegalArgumentException();", "+\t\t}", "-\t\t\tfor (int i = types.length; --i >= 0;)", "+\t\t\tfor (int i = types.length; --i >= 0;) {", "+\t\t\t}"]}], "num": 54814}