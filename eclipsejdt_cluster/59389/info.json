{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7b82ae07252d70ba655b117f8391bc9d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92a2df130fcd13e16331640496d5ae7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor2.java", "commitBeforeChange": "4cb2c570d3aefe494107c2340c1d84687aeb83ac", "commitAfterChange": "dbd0d1d22c0c3005a7b77030231806c749e2cebd", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 42, "signatureBeforeChange": "  \tpublic boolean visit(DoStatement node)", "signatureAfterChange": "  \tpublic boolean visit(DoStatement node)", "diff": ["-\t\tfinal Statement action = node.getBody();", "-\t\tif (action != null) {", "-\t\t\tswitch(action.getNodeType()) {", "-\t\t\t\tcase ASTNode.BLOCK :", "-\t\t\t\t\tformatLeftCurlyBrace(line, this.preferences.brace_position_for_block);", "-\t\t\t\t\taction.accept(this);", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase ASTNode.EMPTY_STATEMENT :", "-\t\t\t\t\tthis.scribe.indent();", "-\t\t\t\t\taction.accept(this);", "-\t\t\t\t\tthis.scribe.unIndent();", "-\t\t\t\t\tbreak;", "-\t\t\t\tdefault:", "-\t\t\t\t\tthis.scribe.printNewLine();", "-\t\t\t\t\tthis.scribe.indent();", "-\t\t\t\t\taction.accept(this);", "-\t\t\t\t\tthis.scribe.printNewLine();", "-\t\t\t\t\tthis.scribe.unIndent();", "-\t\t\t}", "-\t\t} else {", "-\t\t\tthis.scribe.indent();", "-\t\t\taction.accept(this);", "-\t\t\tthis.scribe.unIndent();", "-\t\t}", "-\t\t", "+\t\tformatAction(line, node.getBody());", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3e204efe3983957122eb87caecf110d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor2.java", "commitBeforeChange": "4cb2c570d3aefe494107c2340c1d84687aeb83ac", "commitAfterChange": "dbd0d1d22c0c3005a7b77030231806c749e2cebd", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 91, "signatureBeforeChange": "  \tpublic boolean visit(WhileStatement node)", "signatureAfterChange": "  \tpublic boolean visit(WhileStatement node)", "diff": ["-\t\tfinal Statement action = node.getBody();", "-\t\tif (action != null) {", "-\t\t\tswitch(action.getNodeType()) {", "-\t\t\t\tcase ASTNode.BLOCK :", "-\t                formatLeftCurlyBrace(line, this.preferences.brace_position_for_block);", "-\t\t\t\t\taction.accept(this);", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase ASTNode.EMPTY_STATEMENT :", "-\t\t\t\t\tthis.scribe.indent();", "-\t\t\t\t\taction.accept(this);", "-\t\t\t\t\tthis.scribe.unIndent();", "-\t\t\t\t\tbreak;", "-\t\t\t\tdefault :", "-\t\t\t\t\tthis.scribe.printNewLine();", "-\t\t\t\t\tthis.scribe.indent();", "-\t\t\t\t\taction.accept(this);", "-\t\t\t\t\tthis.scribe.unIndent();\t\t\t\t\t", "-\t\t\t\t\t", "-\t\t\t}", "-\t\t} else {", "-\t\t\tthis.scribe.indent();", "-\t\t\taction.accept(this);", "-\t\t\tthis.scribe.unIndent();", "-\t\t}", "+\t\tformatAction(line, node.getBody());"]}], "num": 59389}