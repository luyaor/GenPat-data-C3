{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6efef9048eb1f02c3da5a555d367e596", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74da0f9920d1cfd40a9edacc960f4961", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "55099d2c60113e1ad2e8ab8558e8720dd555fab8", "commitAfterChange": "fafb2dc68e9656aa163ddd55309d4bcb6df6ee09", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tif (use18specifics && valueIfTrueType != null && valueIfFalseType != null) {", "-\t\t\tif (valueIfTrueType.isAnnotatedTypeWithoutArguments() != valueIfFalseType.isAnnotatedTypeWithoutArguments()) {", "-\t\t\t\tif (valueIfTrueType.isAnnotatedTypeWithoutArguments()) // FIXME(stephan) mixed scenarios: null tag bits & type arguments", "-\t\t\t\t\tvalueIfTrueType = valueIfTrueType.original();", "-\t\t\t\telse", "-\t\t\t\t\tvalueIfFalseType = valueIfFalseType.original();", "-\t\t\t}", "+\t\tif (use18specifics && valueIfTrueType != null && valueIfFalseType != null && valueIfTrueType != valueIfFalseType) {", "+\t\t\tvalueIfTrueType = valueIfTrueType.unannotated();", "+\t\t\tvalueIfFalseType = valueIfFalseType.unannotated();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6e94b669161fa99d9c258e953188d01", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "c7e61e314902d7cf48e71c1a1c0437bb40107c2e", "commitAfterChange": "8a1621e802c664e59aba36b8a87f59ae57902e37", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\tif (use18specifics && valueIfTrueType != null && valueIfFalseType != null) {", "+\t\t\tif (valueIfTrueType.isAnnotatedTypeWithoutArguments() != valueIfFalseType.isAnnotatedTypeWithoutArguments()) {", "+\t\t\t\tif (valueIfTrueType.isAnnotatedTypeWithoutArguments()) // FIXME(stephan) mixed scenarios: null tag bits & type arguments", "+\t\t\t\t\tvalueIfTrueType = valueIfTrueType.original();", "+\t\t\t\telse", "+\t\t\t\t\tvalueIfFalseType = valueIfFalseType.original();", "+\t\t\t}", "+\t\t}"]}], "num": 24610}