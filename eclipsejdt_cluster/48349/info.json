{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5eb355bac7c2f32bf6b7a3640e72d578", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb0d182671cc3d708aa3252a9a450e79", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "b89ad18e17834e64930a830c92b5e2241f9a8b44", "commitAfterChange": "d9605208e25375e966739effbd053a969138c830", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 151, "signatureBeforeChange": " \tpublic void test048a()", "signatureAfterChange": " \tpublic void test048a()", "diff": ["+\t\tString expectedCompilerLog = (this.complianceLevel == ClassFileConstants.JDK1_6)?", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. WARNING in X2.java (at line 2)\\n\" + ", "+\t\t\t\t\"\tpublic Object foo(I<String> z) { return null; }\\n\" + ", "+\t\t\t\t\"\t              ^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Name clash: The method foo(I<String>) of type X2 has the same erasure as foo(I<? extends T>) of type Y<T> but does not override it\\n\" + ", "+\t\t\t\t\"----------\\n\":\t\t", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"1. ERROR in X2.java (at line 2)\\n\" + ", "+\t\t\t\t\t\"\tpublic Object foo(I<String> z) { return null; }\\n\" + ", "+\t\t\t\t\t\"\t              ^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\t\"Name clash: The method foo(I<String>) of type X2 has the same erasure as foo(I<? extends T>) of type Y<T> but does not override it\\n\" + ", "+\t\t\t\t\t\"----------\\n\";", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X2.java (at line 2)\\n\" + ", "-\t\t\t\"\tpublic Object foo(I<String> z) { return null; }\\n\" + ", "-\t\t\t\"\t              ^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Name clash: The method foo(I<String>) of type X2 has the same erasure as foo(I<? extends T>) of type Y<T> but does not override it\\n\" + ", "-\t\t\t\"----------\\n\"", "+\t\t\texpectedCompilerLog"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed1d937f97ea077c24711a84cc142467", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b89ad18e17834e64930a830c92b5e2241f9a8b44", "commitAfterChange": "d9605208e25375e966739effbd053a969138c830", "methodNumberBeforeChange": 769, "methodNumberAfterChange": 769, "signatureBeforeChange": " public void test0748()", "signatureAfterChange": " public void test0748()", "diff": ["+\tString expectedCompilerLog = (this.complianceLevel == ClassFileConstants.JDK1_6)?", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tpublic byte[] create(Class<byte[]> cl) { return null; }\\n\" + ", "+\t\t\t\"\t              ^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Name clash: The method create(Class<byte[]>) of type X has the same erasure as create(Class<U>) of type Factory<T> but does not override it\\n\" + ", "+\t\t\t\"----------\\n\":", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\t\"\tpublic byte[] create(Class<byte[]> cl) { return null; }\\n\" + ", "+\t\t\t\t\"\t              ^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Name clash: The method create(Class<byte[]>) of type X has the same erasure as create(Class<U>) of type Factory<T> but does not override it\\n\" + ", "+\t\t\t\t\"----------\\n\";", "-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\"\tpublic byte[] create(Class<byte[]> cl) { return null; }\\n\" + ", "-\t\t\"\t              ^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\"Name clash: The method create(Class<byte[]>) of type X has the same erasure as create(Class<U>) of type Factory<T> but does not override it\\n\" + ", "-\t\t\"----------\\n\"", "+\t\texpectedCompilerLog"]}], "num": 48349}