{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "11a514ff50625c6f548814707f86dbcf", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8998e0fd2032b2ebcfedd0ad49364c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "5dba2fb9ff4a65e2ec3c984b606cb269bb911a06", "commitAfterChange": "de6638c19ddd648da6cdf9ca6437e426c1cc8e15", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 120, "signatureBeforeChange": " public void test115()", "signatureAfterChange": " public void test115()", "diff": ["-\t\t\"2. ERROR in X.java (at line 8)\\n\" + ", "-\t\t\"\tVALUE = null;\\n\" + ", "-\t\t\"\t^^^^^\\n\" + ", "-\t\t\"The final field X.VALUE cannot be assigned\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"3. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 9)\\n\" + ", "-\t\t\"4. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 10)\\n\" + ", "-\t\t\"The final field X.VALUE cannot be assigned\\n\" + ", "+\t\t\"Cannot refer to the static enum field X.VALUE within an initializer\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\"\tX.ASD = 5;\\n\" + ", "+\t\t\"\t  ^^^\\n\" + ", "+\t\t\"Cannot refer to the static enum field X.ASD within an initializer\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1e4c081bad9e560efa24781b514a0be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9713cc0fc86fbe0881ff90c5290328149c35cbdc", "commitAfterChange": "236485921f70a82e4283431ca8763bf21e25e459", "methodNumberBeforeChange": 1461, "methodNumberAfterChange": 1461, "signatureBeforeChange": " public void test1430()", "signatureAfterChange": " public void test1430()", "diff": ["-}", "-public void test1430() {", "-\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\"Type mismatch: cannot convert from Foo<Integer> to Integer\\n\" + ", "-\t\t\t\"2. WARNING in X.java (at line 4)\\n\" + ", "-\t\t\t\"3. WARNING in X.java (at line 4)\\n\" + ", "+//https://bugs.eclipse.org/bugs/show_bug.cgi?id=258798 - variation", "+public void test1430() {", "+\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\", //-----------------------------------------------------------------------", "+\t\t\t\t\"class Foo<T> {}\\n\" + ", "+\t\t\t\t\"public class X {\\n\" + ", "+\t\t\t\t\"        public void test() {\\n\" + ", "+\t\t\t\t\"                m(new Foo<Foo<Integer>>(), new Foo());\\n\" + ", "+\t\t\t\t\"        }\\n\" + ", "+\t\t\t\t\"        public <T> void m(Foo<T> x, T t) {}\\n\" + ", "+\t\t\t\t\"}\\n\",//-----------------------------------------------------------------------", "+\t\t\t},", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tm(new Foo<Foo<Integer>>(), new Foo());\\n\" + ", "+\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Unchecked invocation m(Foo<Foo<Integer>>, Foo) of the generic method m(Foo<T>, T) of type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tm(new Foo<Foo<Integer>>(), new Foo());\\n\" + ", "+\t\t\t\"\t                           ^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The expression of type Foo needs unchecked conversion to conform to Foo<Integer>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tm(new Foo<Foo<Integer>>(), new Foo());\\n\" + ", "+\t\t\t\"\t                               ^^^\\n\" + "]}], "num": 17164}