{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef13ee92e78700f33e8b8daa60d9b99c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "187cdbfc0969f890450a7171d1ba78ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "fc25b1b826e7fad7f1da04ab9d452bc350b24919", "commitAfterChange": "19b4c669e6d8313d03dbcc8b595622002fe408a5", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " public void test012()", "signatureAfterChange": " public void test012()", "diff": ["+        \" Null annotation options:\\n\" +", "+\t\t\"    -nullAnnotations:<suboptions>\\n\" +", "+\t\t\"                      enable use of annotations for specifying null contracts;\\n\" +", "+\t\t\"                      <suboptions> is a non-empty, comma-separated list of:\\n\" +", "+\t\t\"        nullable=<typename>\\n\" +", "+\t\t\"                      specifies the fully qualified name of an annotation type\\n\" +", "+\t\t\"                      to be used for marking types whose values include null\\n\" +", "+\t\t\"        nonnull=<typename>\\n\" +", "+\t\t\"                      specifies the fully qualified name of an annotation type\\n\" +", "+\t\t\"                      to be used for marking types whose values cannot be null\\n\" +", "+\t\t\"        emulate       tells the compiler to emulate the above annotation types\\n\" +", "+\t\t\"                      although they do not exist on the classpath\\n\" +", "+\t\t\"        import        tells the compiler to import the above annotation types\\n\" +", "+\t\t\"                      without specific mention in the sources such that their\\n\" +", "+\t\t\"                      simple names can be used without explicit imports\\n\" +", "+\t\t\" \\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc8f86750d632c9f3b79aba295f52b5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "19b4c669e6d8313d03dbcc8b595622002fe408a5", "commitAfterChange": "7b084156620c5c922d11b27bd8e1266a04bb9736", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " public void test012()", "signatureAfterChange": " public void test012()", "diff": ["-        \" Null annotation options:\\n\" +", "-\t\t\"    -nullAnnotations:<suboptions>\\n\" +", "-\t\t\"                      enable use of annotations for specifying null contracts;\\n\" +", "-\t\t\"                      <suboptions> is a non-empty, comma-separated list of:\\n\" +", "-\t\t\"        nullable=<typename>\\n\" +", "-\t\t\"                      specifies the fully qualified name of an annotation type\\n\" +", "-\t\t\"                      to be used for marking types whose values include null\\n\" +", "-\t\t\"        nonnull=<typename>\\n\" +", "-\t\t\"                      specifies the fully qualified name of an annotation type\\n\" +", "-\t\t\"                      to be used for marking types whose values cannot be null\\n\" +", "-\t\t\"        emulate       tells the compiler to emulate the above annotation types\\n\" +", "-\t\t\"                      although they do not exist on the classpath\\n\" +", "-\t\t\"        import        tells the compiler to import the above annotation types\\n\" +", "-\t\t\"                      without specific mention in the sources such that their\\n\" +", "-\t\t\"                      simple names can be used without explicit imports\\n\" +", "-\t\t\" \\n\" +"]}], "num": 64330}