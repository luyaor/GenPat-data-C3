{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7669564a9028c1ba277a1ab7fa785bb3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e2a9a65b0d9b4894abde67246551274", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "9aa35310054d8c288c0c0d2f757429dc5fcced39", "commitAfterChange": "41f092015c73f4913b3c6ef2c39e376db5e0606c", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic String format(String string, int[] positions, ConstructorDeclaration constructorDeclaration)", "signatureAfterChange": " \tpublic String format(String string, int[] positions, ConstructorDeclaration constructorDeclaration)", "diff": ["-\t\t\tStringBuffer buffer = new StringBuffer(this.scribe.formattedSource());", "-\t\t\tbuffer.append(compilationUnitSource, this.scribe.scanner.getCurrentTokenEndPosition(), this.scribe.scannerEndPosition - this.scribe.scanner.getCurrentTokenEndPosition());", "-\t\t\tif (DEBUG) {", "-\t\t\t\tSystem.out.println(\"COULD NOT FORMAT \\n\" + this.scribe.scanner); //$NON-NLS-1$", "-\t\t\t\tSystem.out.println(this.scribe);", "-\t\t\t}", "-\t\t\treturn buffer.toString();", "+\t\t\treturn failedToFormat(compilationUnitSource);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9777e9987ec6943aedfe43d8ad54f1e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "9aa35310054d8c288c0c0d2f757429dc5fcced39", "commitAfterChange": "41f092015c73f4913b3c6ef2c39e376db5e0606c", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic String format(String string, int[] positions, AstNode[] nodes)", "signatureAfterChange": " \tpublic String format(String string, int[] positions, AstNode[] nodes)", "diff": ["-\t\t\tStringBuffer buffer = new StringBuffer(this.scribe.formattedSource());", "-\t\t\tbuffer.append(compilationUnitSource, this.scribe.scanner.getCurrentTokenEndPosition(), this.scribe.scannerEndPosition - this.scribe.scanner.getCurrentTokenEndPosition());", "-\t\t\tif (DEBUG) {", "-\t\t\t\tSystem.out.println(\"COULD NOT FORMAT \\n\" + this.scribe.scanner); //$NON-NLS-1$", "-\t\t\t\tSystem.out.println(this.scribe);", "-\t\t\t}", "-\t\t\treturn buffer.toString();", "+\t\t\treturn failedToFormat(compilationUnitSource);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c22b58164ad477cb130260c3ecb7ee44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "9aa35310054d8c288c0c0d2f757429dc5fcced39", "commitAfterChange": "41f092015c73f4913b3c6ef2c39e376db5e0606c", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic String format(String string, int[] positions, Expression expression)", "signatureAfterChange": " \tpublic String format(String string, int[] positions, Expression expression)", "diff": ["-\t\t\tStringBuffer buffer = new StringBuffer(this.scribe.formattedSource());", "-\t\t\tbuffer.append(compilationUnitSource, this.scribe.scanner.getCurrentTokenEndPosition(), this.scribe.scannerEndPosition - this.scribe.scanner.getCurrentTokenEndPosition());", "-\t\t\tif (DEBUG) {", "-\t\t\t\tSystem.out.println(\"COULD NOT FORMAT \\n\" + this.scribe.scanner); //$NON-NLS-1$", "-\t\t\t\tSystem.out.println(this.scribe);", "-\t\t\t}", "-\t\t\treturn buffer.toString();", "+\t\t\treturn failedToFormat(compilationUnitSource);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3340d4bdebd3df127d9d7477c948a57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "9aa35310054d8c288c0c0d2f757429dc5fcced39", "commitAfterChange": "41f092015c73f4913b3c6ef2c39e376db5e0606c", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic String format(String string, int[] positions, CompilationUnitDeclaration compilationUnitDeclaration)", "signatureAfterChange": " \tpublic String format(String string, int[] positions, CompilationUnitDeclaration compilationUnitDeclaration)", "diff": ["-\t\t\tStringBuffer buffer = new StringBuffer(this.scribe.formattedSource());", "-\t\t\tbuffer.append(compilationUnitSource, this.scribe.scanner.getCurrentTokenEndPosition(), this.scribe.scannerEndPosition - this.scribe.scanner.getCurrentTokenEndPosition());", "-\t\t\tif (DEBUG) {", "-\t\t\t\tSystem.out.println(\"COULD NOT FORMAT \\n\" + this.scribe.scanner); //$NON-NLS-1$", "-\t\t\t\tSystem.out.println(this.scribe);", "-\t\t\t}", "-\t\t\treturn buffer.toString();", "+\t\t\treturn failedToFormat(compilationUnitSource);"]}], "num": 26154}