{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0e993e24ee5b7bb5e2d3e14ff6b8a226", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c6a88db315dd1fba7c9d91419632315", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "5d2cd7f1076b45eee90e6733e80765abd1df3d6a", "commitAfterChange": "14e86a8141996732826e41cf3c8dd392bb1fd5ba", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": " \tpublic IClasspathEntry[] getRawClasspath(boolean createMarkers, boolean logProblems) throws JavaModelException", "signatureAfterChange": " \tpublic IClasspathEntry[] getRawClasspath(boolean createMarkers, boolean logProblems) throws JavaModelException", "diff": ["-\t\tJavaModelManager.PerProjectInfo perProjectInfo = getPerProjectInfo();", "-\t\tIClasspathEntry[] classpath = perProjectInfo.rawClasspath;", "-\t\tif (classpath != null) return classpath;", "-\t\tclasspath = this.readClasspathFile(createMarkers, logProblems);", "-\t\t", "+\t\tJavaModelManager.PerProjectInfo perProjectInfo = null;", "+\t\tIClasspathEntry[] classpath;", "+\t\tif (createMarkers) {", "+\t\t\tthis.flushClasspathProblemMarkers(false/*cycle*/, true/*format*/);", "+\t\t\tclasspath = this.readClasspathFile(createMarkers, logProblems);", "+\t\t} else {", "+\t\t\tperProjectInfo = getPerProjectInfo();", "+\t\t\tclasspath = perProjectInfo.rawClasspath;", "+\t\t\tif (classpath != null) return classpath;", "+\t\t\tclasspath = this.readClasspathFile(createMarkers, logProblems);", "+\t\t}", "-\t\tperProjectInfo.rawClasspath = classpath;", "-\t\tperProjectInfo.outputLocation = outputLocation;", "+\t\tif (!createMarkers) {", "+\t\t\tperProjectInfo.rawClasspath = classpath;", "+\t\t\tperProjectInfo.outputLocation = outputLocation;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7635642929ca31537907274401b9a83", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "5d2cd7f1076b45eee90e6733e80765abd1df3d6a", "commitAfterChange": "14e86a8141996732826e41cf3c8dd392bb1fd5ba", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError) \t\tthrows JavaModelException", "diff": ["-\t\tJavaModelManager.PerProjectInfo perProjectInfo = getPerProjectInfo();", "-\t\t", "-\t\t// reuse cache if not needing to refresh markers or checking bound variables", "-\t\tif (ignoreUnresolvedEntry && !generateMarkerOnError && perProjectInfo != null){", "-\t\t\t// resolved path is cached on its info", "-\t\t\tIClasspathEntry[] infoPath = perProjectInfo.resolvedClasspath;", "-\t\t\tif (infoPath != null) return infoPath;", "+\t\tJavaModelManager.PerProjectInfo perProjectInfo = null;", "+\t\tif (ignoreUnresolvedEntry && !generateMarkerOnError) {", "+\t\t\tperProjectInfo = getPerProjectInfo();", "+\t\t\tif (perProjectInfo != null) {", "+\t\t\t\t// resolved path is cached on its info", "+\t\t\t\tIClasspathEntry[] infoPath = perProjectInfo.resolvedClasspath;", "+\t\t\t\tif (infoPath != null) return infoPath;", "+\t\t\t}", "-", "-\t\t\tgetRawClasspath(), ", "+\t\t\tgetRawClasspath(generateMarkerOnError, !generateMarkerOnError), "]}], "num": 26906}