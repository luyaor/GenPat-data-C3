{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2699086983a9b1887bd52c732c467526", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44d30dbe86649bdeb751f97638aed4d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "e0c80c2b16b54e5a1c86d6779d617fb326a5c618", "commitAfterChange": "9ca5fa129e003b71c76c933d9b76010e0a23b71b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": " \t \tpublic void resolve(BlockScope upperScope)", "diff": ["-", "+\t", "-\t\t\t\t// the type does not matter as long as it is not a base type", "-\t\t\t\tif (!upperScope.compilerOptions().inlineJsrBytecode) {", "-\t\t\t\t\tthis.returnAddressVariable =", "-\t\t\t\t\t\tnew LocalVariableBinding(TryStatement.SecretReturnName, upperScope.getJavaLangObject(), ClassFileConstants.AccDefault, false);", "+\t\t\t\tCompilerOptions options = upperScope.compilerOptions();", "+\t\t\t\tif (!options.inlineJsrBytecode) {", "+//\t\t\t\t\tif (options.noJSRBytecode) {", "+//\t\t\t\t\t\t// variable encoding the return site location", "+//\t\t\t\t\t\tthis.returnAddressVariable = new LocalVariableBinding(TryStatement.SecretReturnName, TypeBinding.INT, ClassFileConstants.AccDefault, false);", "+//\t\t\t\t\t} else {", "+\t\t\t\t\t\t// the type does not matter as long as it is not a base type", "+\t\t\t\t\t\tthis.returnAddressVariable = new LocalVariableBinding(TryStatement.SecretReturnName, upperScope.getJavaLangObject(), ClassFileConstants.AccDefault, false);", "+//\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c923519d3c3bc1f940acceedf1e2a0b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "e0c80c2b16b54e5a1c86d6779d617fb326a5c618", "commitAfterChange": "9ca5fa129e003b71c76c933d9b76010e0a23b71b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void generateSubRoutineInvocation( \t\t\tBlockScope currentScope, \t\t\tCodeStream codeStream)", "signatureAfterChange": " \tpublic void generateSubRoutineInvocation( \t\t\tBlockScope currentScope, \t\t\tCodeStream codeStream)", "diff": ["-\t\t\tif (currentScope.compilerOptions().inlineJsrBytecode) {", "+\t\t\tCompilerOptions options = currentScope.compilerOptions();", "+\t\t\tif (options.inlineJsrBytecode) {", "+//\t\t\t} else if (options.noJSRBytecode) {", "+//\t\t\t\tCaseLabel returnLocationLabel = recordReturnLocation(codeStream);", "+//\t\t\t\tcodeStream.generateInlinedValue(this.returnLocationsCount-1);", "+//\t\t\t\tcodeStream.store(this.returnAddressVariable, false);", "+//\t\t\t\tcodeStream.goto_(this.subRoutineStartLabel);", "+//\t\t\t\treturnLocationLabel.place();"]}], "num": 30253}