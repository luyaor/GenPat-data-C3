{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "acd22bbaea0b75f16691f1498e23b210", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3793ffb3927eb007eb0b628fc5b60c37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/KeyToSignature.java", "commitBeforeChange": "26659bdfac7e0bec48a495c450ef41e6483c06ca", "commitAfterChange": "2b9d806e096b1ad1d5b618f6abd63279129f9e03", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tpublic void consumeParameterizedGenericMethod()", "signatureAfterChange": " \t \tpublic void consumeParameterizedGenericMethod()", "diff": ["-\t\t\t\tthis.signature.append(substitute(parameters[i], typeParameterSigs, typeParametersSize));", "+\t\t\t\tsubstitute(parameters[i], typeParameterSigs, typeParametersSize);", "-\t\t\treturnType = substitute(returnType, typeParameterSigs, typeParametersSize);", "-\t\t\tthis.signature.append(returnType);", "+\t\t\tsubstitute(returnType, typeParameterSigs, typeParametersSize);", "-\t\t\t\tthis.signature.append(substitute(exceptions[i], typeParameterSigs, typeParametersSize));", "+\t\t\t\tsubstitute(exceptions[i], typeParameterSigs, typeParametersSize);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3accbe12d6ae6a0cafea1467228956b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ModelTestsUtil.java", "commitBeforeChange": "917603919e9d38772fd63709feb3bbda7696f523", "commitAfterChange": "fca5fd453024a315e76f840acd34b846e15423bf", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " public static String trimLinesLeadingWhitespaces(String input)", "signatureAfterChange": " public static String trimLinesLeadingWhitespaces(String input)", "diff": ["-\t\t\tbuffer.append(line.substring(index+1).trim());", "+\t\t\tint length = line.length();", "+\t\t\tif (length > 80 && line.charAt(length-1) == '>') { // should not happen:  bug of old formatter", "+\t\t\t\tint idx = line.lastIndexOf('<');", "+\t\t\t\tbuffer.append(line.substring(index+1, idx).trim());", "+\t\t\t\tbuffer.append(Util.LINE_SEPARATOR);", "+\t\t\t\tbuffer.append(line.substring(idx).trim());", "+\t\t\t\tcontinue;", "+\t\t\t} else {", "+\t\t\t\tbuffer.append(line.substring(index+1).trim());", "+\t\t\t}"]}], "num": 38869}