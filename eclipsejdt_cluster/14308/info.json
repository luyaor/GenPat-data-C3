{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5866cd0086941258296bf4a242859e17", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0607e224b976343a24d1bb168af85c96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodScope.java", "commitBeforeChange": "f8da33d36ca2a5b95dcb1b251fe713aa575aecda", "commitAfterChange": "9baf80dbc090f318368e0d80ba44423a7e05244d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void computeLocalVariablePositions(int initOffset, CodeStream codeStream)", "signatureAfterChange": " public void computeLocalVariablePositions(int initOffset, CodeStream codeStream)", "diff": ["-", "-\tboolean isReportingUnusedArgument = false;", "-", "-\tif (referenceContext instanceof AbstractMethodDeclaration) {", "-\t\tAbstractMethodDeclaration methodDecl = (AbstractMethodDeclaration)referenceContext;", "-\t\tMethodBinding method = methodDecl.binding;", "-\t\tif (!(method.isAbstract()", "-\t\t\t\t|| (method.isImplementing() && !compilerOptions().reportUnusedParameterWhenImplementingAbstract) ", "-\t\t\t\t|| (method.isOverriding() && !method.isImplementing() && !compilerOptions().reportUnusedParameterWhenOverridingConcrete)", "-\t\t\t\t|| method.isMain())) {", "-\t\t\tisReportingUnusedArgument = true;", "-\t\t}", "-\t}", "-", "-\t\t// do not report fake used variable", "-\t\tif (isReportingUnusedArgument", "-\t\t\t\t&& local.useFlag == LocalVariableBinding.UNUSED", "-\t\t\t\t&& ((local.declaration.bits & ASTNode.IsLocalDeclarationReachable) != 0)) { // declaration is reachable", "-\t\t\tthis.problemReporter().unusedArgument(local.declaration);", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23505eb5d4bf6bb5e20c92c57317a917", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodScope.java", "commitBeforeChange": "5292e21f94372deace5f16b5dfc6aac2c22faf52", "commitAfterChange": "2215b5c020d05490fe1ddb8fe56785e7c3280d1b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void computeLocalVariablePositions(int initOffset, CodeStream codeStream)", "signatureAfterChange": " \tpublic void computeLocalVariablePositions(int initOffset, CodeStream codeStream)", "diff": ["+\t\tboolean isReportingUnusedArgument = false;", "+", "+\t\tif (referenceContext instanceof AbstractMethodDeclaration) {", "+\t\t\tAbstractMethodDeclaration methodDecl = (AbstractMethodDeclaration)referenceContext;", "+\t\t\tMethodBinding method = methodDecl.binding;", "+\t\t\tCompilerOptions options = compilationUnitScope().environment.options;", "+\t\t\tif (!(method.isAbstract()", "+\t\t\t\t\t|| (method.isImplementing() && !options.reportUnusedParameterWhenImplementingAbstract) ", "+\t\t\t\t\t|| (method.isOverriding() && !method.isImplementing() && !options.reportUnusedParameterWhenOverridingConcrete)", "+\t\t\t\t\t|| method.isMain())) {", "+\t\t\t\tisReportingUnusedArgument = true;", "+\t\t\t}", "+\t\t}", "-\t\t\tif (local.useFlag == LocalVariableBinding.UNUSED", "-\t\t\t\t&& ((local.declaration.bits & AstNode.IsLocalDeclarationReachableMASK) != 0)) { // declaration is reachable", "+\t\t\tif (isReportingUnusedArgument", "+\t\t\t\t\t&& local.useFlag == LocalVariableBinding.UNUSED", "+\t\t\t\t\t&& ((local.declaration.bits & AstNode.IsLocalDeclarationReachableMASK) != 0)) { // declaration is reachable"]}], "num": 14308}