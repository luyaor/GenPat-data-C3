{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "50cc7ca9c28f7f2161d08adc9c4cfbcb", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41f833d7fb3b9099690554031bf2a426", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b8b67e3602501314f6e55c65c68eed3746bd4bbd", "commitAfterChange": "a6f66e49349e26b26fb61a65a047cdceca7cf10d", "methodNumberBeforeChange": 167, "methodNumberAfterChange": 167, "signatureBeforeChange": " protected void consumeStatementWhile()", "signatureAfterChange": " protected void consumeStatementWhile()", "diff": ["-\tif (astLengthStack[astLengthPtr] == 0) { // silent empty statement", "-\t\tastLengthStack[astLengthPtr] = 1;", "-\t\tastStack[++astPtr] = ", "-\t\t\tnew WhileStatement(", "-\t\t\t\texpressionStack[expressionPtr--], ", "-\t\t\t\tnull,", "-\t\t\t\tintStack[intPtr--], ", "-\t\t\t\tendPosition); ", "-\t} else {", "-\t\tStatement statement = (Statement) astStack[astPtr];", "-\t\tastStack[astPtr] = ", "-\t\t\tnew WhileStatement(", "-\t\t\t\texpressionStack[expressionPtr--], ", "-\t\t\t\tstatement, ", "-\t\t\t\tintStack[intPtr--], ", "-\t\t\t\tendStatementPosition); ", "-\t}", "+\tStatement statement = (Statement) astStack[astPtr];", "+\tastStack[astPtr] = ", "+\t\tnew WhileStatement(", "+\t\t\texpressionStack[expressionPtr--], ", "+\t\t\tstatement, ", "+\t\t\tintStack[intPtr--], ", "+\t\t\tstatement instanceof Block // TODO (olivier) why isn't it all the time 'endStatementPosition' ? (similar to FOR loop)", "+\t\t\t\t? endStatementPosition", "+\t\t\t\t: endPosition); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b32357b7442c929ac230cc5c3b069b83", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b8b67e3602501314f6e55c65c68eed3746bd4bbd", "commitAfterChange": "a6f66e49349e26b26fb61a65a047cdceca7cf10d", "methodNumberBeforeChange": 159, "methodNumberAfterChange": 159, "signatureBeforeChange": " protected void consumeStatementIfNoElse()", "signatureAfterChange": " protected void consumeStatementIfNoElse()", "diff": ["-\tif (astLengthStack[astLengthPtr] == 0) { // silent empty statement", "-\t\tastLengthStack[astLengthPtr] = 1;", "-\t\tastStack[++astPtr] = ", "-\t\t\tnew IfStatement(", "-\t\t\t\texpressionStack[expressionPtr--], ", "-\t\t\t\tnull, ", "-\t\t\t\tintStack[intPtr--], ", "-\t\t\t\tendStatementPosition); ", "-\t} else {", "-\t\tStatement thenStatement = (Statement) astStack[astPtr];", "-\t\tastStack[astPtr] = ", "-\t\t\tnew IfStatement(", "-\t\t\t\texpressionStack[expressionPtr--], ", "-\t\t\t\tthenStatement, ", "-\t\t\t\tintStack[intPtr--], ", "-\t\t\t\tendStatementPosition); ", "-\t}", "+\tStatement thenStatement = (Statement) astStack[astPtr];", "+\tastStack[astPtr] = ", "+\t\tnew IfStatement(", "+\t\t\texpressionStack[expressionPtr--], ", "+\t\t\tthenStatement, ", "+\t\t\tintStack[intPtr--], ", "+\t\t\tendStatementPosition); "]}], "num": 16058}