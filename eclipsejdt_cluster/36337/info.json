{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0149fb0750cab8cdf67efa3fdd3fd249", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e576a7917ff71a8045636984b6b188c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "bfe1e5f410410e285c8a77b5130cabdbc82cde90", "commitAfterChange": "4eeaf0d0e03ab922557bc9369f948328bc88b0fc", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic ASTNode convert(boolean isInterface, org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration)", "signatureAfterChange": "  \tpublic ASTNode convert(boolean isInterface, org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration)", "diff": ["-\t\t\t\t\tthrownException = convert(thrownExceptions[i++]);", "+\t\t\t\t\tTypeReference typeRef = thrownExceptions[i++];", "+\t\t\t\t\tthrownException = convert(typeRef);", "+\t\t\t\t\tif (typeRef.annotations != null && typeRef.annotations.length > 0) {", "+\t\t\t\t\t\tthrownException.setFlags(thrownException.getFlags() | ASTNode.MALFORMED);", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b980667c7e924f5bd32ea4ea3af45d12", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FakedTrackingVariable.java", "commitBeforeChange": "96ef6a1342ca74d72728b34641d9caf80d6d6997", "commitAfterChange": "2dc8c8168c71292aca0a9b4cb34971871475b18a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic static void preConnectTrackerAcrossAssignment(ASTNode location, LocalVariableBinding local, Expression rhs)", "signatureAfterChange": " \tpublic static void preConnectTrackerAcrossAssignment(ASTNode location, LocalVariableBinding local, Expression rhs)", "diff": ["-\t\t\t\t((AllocationExpression)rhs).closeTracker = closeTracker;", "+\t\t\t\tAllocationExpression allocation = (AllocationExpression)rhs;", "+\t\t\t\tallocation.closeTracker = closeTracker;", "+\t\t\t\tif (allocation.arguments != null && allocation.arguments.length > 0) {", "+\t\t\t\t\t// also push into nested allocations, see https://bugs.eclipse.org/368709", "+\t\t\t\t\tpreConnectTrackerAcrossAssignment(location, local, allocation.arguments[0]);", "+\t\t\t\t}"]}], "num": 36337}