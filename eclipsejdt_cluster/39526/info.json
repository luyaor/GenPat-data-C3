{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9b1b807357fd2c0ee19e2bf9eb79dc65", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86729400aa36829ddfb01e65e72d5028", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "b1ce5a863ad0a541f80dd0793ff207f1e4ecf677", "commitAfterChange": "72d60854091bd7e8a5aafafdfea62cc297a3eb41", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic static SearchPattern createPattern(IJavaElement element, int limitTo)", "signatureAfterChange": " \tpublic static SearchPattern createPattern(IJavaElement element, int limitTo)", "diff": ["+\t\t\t\tchar[][] typeNames = null;", "-\t\t\t\t\tString typeSignature = Signature.toString(field.getTypeSignature()).replace('$', '.');", "-\t\t\t\t\tif ((lastDot = typeSignature.lastIndexOf('.')) == -1) {", "-\t\t\t\t\t\ttypeSimpleName = typeSignature.toCharArray();", "+\t\t\t\t\tchar[] typeSignature = field.getTypeSignature().toCharArray();", "+\t\t\t\t\t// SEARCH_15 (start)", "+\t\t\t\t\tchar[] typeErasure = null;", "+\t\t\t\t\tif (CharOperation.indexOf(Signature.C_GENERIC_START, typeSignature) == -1) {", "+\t\t\t\t\t\ttypeErasure = Signature.toCharArray(typeSignature);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\ttypeErasure = Signature.toCharArray(Signature.getTypeErasure(typeSignature));", "+\t\t\t\t\t\tCharOperation.replace(typeErasure, '$', '.');", "+\t\t\t\t\t\tif ((typeNames = Signature.getTypeArguments(typeSignature)) != null) {", "+\t\t\t\t\t\t\tint length = typeNames.length;", "+\t\t\t\t\t\t\tfor (int i=0; i<length; i++) {", "+\t\t\t\t\t\t\t\ttypeNames[i] = Signature.toCharArray(typeNames[i]);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\t// end", "+\t\t\t\t\tif ((lastDot = CharOperation.lastIndexOf('.', typeErasure)) == -1) {", "+\t\t\t\t\t\ttypeSimpleName = typeErasure;", "-\t\t\t\t\t\ttypeSimpleName = typeSignature.substring(lastDot + 1).toCharArray();", "-\t\t\t\t\t\ttypeQualification = field.isBinary()", "-\t\t\t\t\t\t\t? typeSignature.substring(0, lastDot).toCharArray()", "+\t\t\t\t\t\ttypeSimpleName = CharOperation.subarray(typeErasure, 0, lastDot + 1);", "+\t\t\t\t\t\ttypeQualification = CharOperation.subarray(typeErasure, 0, lastDot);", "+\t\t\t\t\t\tif (!field.isBinary()) {", "-\t\t\t\t\t\t\t: CharOperation.concat(IIndexConstants.ONE_STAR, typeSignature.substring(0, lastDot).toCharArray());", "+\t\t\t\t\t\t\tCharOperation.concat(IIndexConstants.ONE_STAR, typeQualification);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\ttypeNames,", "+\t\t\t\t\t\t\t\ttypeNames,", "+\t\t\t\t\t\t\t\ttypeNames,", "+\t\t\t\t\t\t\t\ttypeNames,", "+\t\t\t\t\t\t\t\ttypeNames,", "+\t\t\t\t\t\t\t// SEARCH_15 (start)", "+\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t// end", "-\t\t\t\tsearchPattern = ", "-\t\t\t\t\tcreateTypePattern(", "-\t\t\t\t\t\ttype.getElementName().toCharArray(), ", "-\t\t\t\t\t\ttype.getPackageFragment().getElementName().toCharArray(),", "-\t\t\t\t\t\tenclosingTypeNames(type),", "-\t\t\t\t\t\tlimitTo);", "+\t\t\t\tsearchPattern = \tcreateTypePattern(", "+\t\t\t\t\t\t\ttype.getElementName().toCharArray(), ", "+\t\t\t\t\t\t\ttype.getPackageFragment().getElementName().toCharArray(),", "+\t\t\t\t\t\t\tenclosingTypeNames(type),", "+\t\t\t\t\t\t\t// SEARCH_15 (start)", "+\t\t\t\t\t\t\ttypeParameterNames(type),", "+\t\t\t\t\t\t\ttrue, /* generic type */", "+\t\t\t\t\t\t\t// end", "+\t\t\t\t\t\t\tlimitTo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7976a722f37b1a68eb13df46d2e6d52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 35, "signatureBeforeChange": " public void notifySourceElementRequestor(TypeDeclaration typeDeclaration, boolean notifyTypePresence)", "signatureAfterChange": " public void notifySourceElementRequestor(TypeDeclaration typeDeclaration, boolean notifyTypePresence)", "diff": ["-\t\t\t\t\tCharOperation.concatWith(superInterfaces[i].getTypeName(), '.'); ", "+\t\t\t\t\tCharOperation.concatWith(superInterfaces[i].getParameterizedTypeName(), '.'); ", "+\t\t\t}", "+\t\t}", "+\t\tTypeParameter[] typeParameters = typeDeclaration.typeParameters;", "+\t\tchar[][] typeParameterNames = null;", "+\t\tchar[][][] typeParameterBounds = null;", "+\t\tif (typeParameters != null) {", "+\t\t\tint typeParametersLength = typeParameters.length;", "+\t\t\ttypeParameterNames = new char[typeParametersLength][];", "+\t\t\ttypeParameterBounds = new char[typeParametersLength][][];", "+\t\t\tfor (int i = 0; i < typeParametersLength; i++) {", "+\t\t\t\ttypeParameterNames[i] = typeParameters[i].name;", "+\t\t\t\tTypeReference[] bounds = typeParameters[i].bounds;", "+\t\t\t\tif (bounds != null) {", "+\t\t\t\t\tint boundLength = bounds.length;", "+\t\t\t\t\tchar[][] boundNames = new char[boundLength][];", "+\t\t\t\t\tfor (int j = 0; j < boundLength; j++) {", "+\t\t\t\t\t\tboundNames[j] = ", "+\t\t\t\t\t\t\tCharOperation.concatWith(bounds[i].getParameterizedTypeName(), '.'); ", "+\t\t\t\t\t}", "+\t\t\t\t\ttypeParameterBounds[i] = boundNames;", "+\t\t\t\t}", "-\t\t\t\t\tinterfaceNames);", "+\t\t\t\t\tinterfaceNames,", "+\t\t\t\t\ttypeParameterNames,", "+\t\t\t\t\ttypeParameterBounds);", "-\t\t\t\t\t\tinterfaceNames); ", "+\t\t\t\t\t\tinterfaceNames,", "+\t\t\t\t\t\ttypeParameterNames,", "+\t\t\t\t\t\ttypeParameterBounds);", "-\t\t\t\t\t\tCharOperation.concatWith(superclass.getTypeName(), '.'), ", "-\t\t\t\t\t\tinterfaceNames); ", "+\t\t\t\t\t\tCharOperation.concatWith(superclass.getParameterizedTypeName(), '.'), ", "+\t\t\t\t\t\tinterfaceNames,", "+\t\t\t\t\t\ttypeParameterNames,", "+\t\t\t\t\t\ttypeParameterBounds);", "-\t\t\tsuperTypeNames[nestedTypeIndex++] = superclass == null ? JAVA_LANG_OBJECT : CharOperation.concatWith(superclass.getTypeName(), '.');", "+\t\t\tsuperTypeNames[nestedTypeIndex++] = superclass == null ? JAVA_LANG_OBJECT : CharOperation.concatWith(superclass.getParameterizedTypeName(), '.');"]}], "num": 39526}