{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc2ac41c18c00517bf1fd18e0cf3bcee", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ba58cbf8a821e338c359f50ba68232f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "9f63437bec67bc6f1450b706ffa6a59a67485b74", "commitAfterChange": "2b5868a69a1295fe1d99f9e80995ceed273132ed", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tpublic FlowInfo analyseCode(", "-\t\tBlockScope currentScope,", "-\t\tFlowContext flowContext,", "-\t\tFlowInfo flowInfo) {", "+public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo) {", "+\treturn this.expression", "+\t\t.analyseCode(currentScope, flowContext, flowInfo)", "+\t\t.unconditionalInits();", "+}", "-\t\treturn expression", "-\t\t\t.analyseCode(currentScope, flowContext, flowInfo)", "-\t\t\t.unconditionalInits();", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b79842e3c7103c709ded440e14e1c383", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "8739fac6b0362a32fbe52c714ff661e202a84e1e", "commitAfterChange": "a383b8a74cd6aa6df7e09b603786c84e4f93bb28", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public boolean checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public boolean checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, int ttlForFieldCheck)", "diff": ["-public boolean checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo) {", "+public boolean checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, int ttlForFieldCheck) {", "-\treturn this.expression.checkNPE(scope, flowContext, flowInfo);", "+\treturn this.expression.checkNPE(scope, flowContext, flowInfo, ttlForFieldCheck);"]}], "num": 45184}