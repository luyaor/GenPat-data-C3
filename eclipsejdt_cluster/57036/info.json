{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "21d10ca7e431ac0dd6195ef9e9d27eee", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "158a55dfbb7a1740ba193ff4683938cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "d3a1d7d826df4253620b10fc59a69c9f41d35ed1", "commitAfterChange": "a5712ad1c74db6415d42ae5af5da692be3279bc4", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " \t \tpublic IClasspathContainer getClasspathContainer(IPath containerPath, IJavaProject project) throws JavaModelException", "signatureAfterChange": " \t \tpublic IClasspathContainer getClasspathContainer(final IPath containerPath, final IJavaProject project) throws JavaModelException", "diff": ["-\tpublic IClasspathContainer getClasspathContainer(IPath containerPath, IJavaProject project) throws JavaModelException {", "+\tpublic IClasspathContainer getClasspathContainer(final IPath containerPath, final IJavaProject project) throws JavaModelException {", "-\t\t\t\treturn initializeAllContainers(project, containerPath);", "+\t\t\t\tcontainer = initializeAllContainers(project, containerPath);", "+\t\t\t} else {", "+\t\t\t\tcontainer = initializeContainer(project, containerPath);", "-\t\t\treturn initializeContainer(project, containerPath);", "+\t\t\tif (container == null) { // initializer failed to do its job: redirect to the failure container", "+\t\t\t\tClasspathContainerInitializer initializer = JavaCore.getClasspathContainerInitializer(containerPath.segment(0));", "+\t\t\t\tif (initializer == null) {", "+\t\t\t\t\t// create a dummy initializer and get the default failure container", "+\t\t\t\t\tcontainer = (new ClasspathContainerInitializer() {", "+\t\t\t\t\t\tpublic void initialize(IPath path, IJavaProject javaProject) throws CoreException {", "+\t\t\t\t\t\t\t// not used", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}).getFailureContainer(containerPath, project);", "+\t\t\t\t} else {", "+\t\t\t\t\tcontainer = initializer.getFailureContainer(containerPath, project);", "+\t\t\t\t}", "+\t\t\t\tif (container != null)", "+\t\t\t\t\tcontainerPut(project, containerPath, container);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42d86c2c62019bda517e3864fb65cbd2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "6954f6f09ec0fa4357c31e7abaa82f5c7cd86dbc", "commitAfterChange": "1681420a49895c71b06fecf2cdaa16ab79145282", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 97, "signatureBeforeChange": "  \tIClasspathContainer initializeContainer(IJavaProject project, IPath containerPath) throws JavaModelException", "signatureAfterChange": "  \tIClasspathContainer initializeContainer(IJavaProject project, IPath containerPath) throws JavaModelException", "diff": ["-\t\t\t\tif (container == CONTAINER_INITIALIZATION_IN_PROGRESS) return null; // break cycle", "+\t\t\t\tif (container == CONTAINER_INITIALIZATION_IN_PROGRESS) {", "+\t\t\t\t\t// initializer failed to do its job: redirect to the failure container", "+\t\t\t\t\tcontainer = initializer.getFailureContainer(containerPath, project);", "+\t\t\t\t\tif (container == null)", "+\t\t\t\t\t\treturn null; // break cycle", "+\t\t\t\t\tcontainerPut(project, containerPath, container);", "+\t\t\t\t}", "+\t\t\t// create a dummy initializer and get the default failure container", "+\t\t\tcontainer = (new ClasspathContainerInitializer() {", "+\t\t\t\tpublic void initialize(IPath path, IJavaProject javaProject) throws CoreException {", "+\t\t\t\t\t// not used", "+\t\t\t\t}", "+\t\t\t}).getFailureContainer(containerPath, project);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47a235af073ef169b176f994aeda3252", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "6954f6f09ec0fa4357c31e7abaa82f5c7cd86dbc", "commitAfterChange": "1681420a49895c71b06fecf2cdaa16ab79145282", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " \t \tpublic IClasspathContainer getClasspathContainer(final IPath containerPath, final IJavaProject project) throws JavaModelException", "signatureAfterChange": " \t \tpublic IClasspathContainer getClasspathContainer(final IPath containerPath, final IJavaProject project) throws JavaModelException", "diff": ["-\t\t\tif (container == null) { // initializer failed to do its job: redirect to the failure container", "-\t\t\t\tClasspathContainerInitializer initializer = JavaCore.getClasspathContainerInitializer(containerPath.segment(0));", "-\t\t\t\tif (initializer == null) {", "-\t\t\t\t\t// create a dummy initializer and get the default failure container", "-\t\t\t\t\tcontainer = (new ClasspathContainerInitializer() {", "-\t\t\t\t\t\tpublic void initialize(IPath path, IJavaProject javaProject) throws CoreException {", "-\t\t\t\t\t\t\t// not used", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}).getFailureContainer(containerPath, project);", "-\t\t\t\t} else {", "-\t\t\t\t\tcontainer = initializer.getFailureContainer(containerPath, project);", "-\t\t\t\t}", "-\t\t\t\tif (container != null)", "-\t\t\t\t\tcontainerPut(project, containerPath, container);", "-\t\t\t}"]}], "num": 57036}