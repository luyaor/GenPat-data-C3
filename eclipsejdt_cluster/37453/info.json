{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "24ca94d3f5056a6fb6ae234139c62aed", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35bf870c779797e30a0a4fc40ff7405f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "24071af935ae982264becd6377e49aeb82ae6605", "commitAfterChange": "630841750ec7fd372d10d6a06da2b09122e947d0", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " protected void consumeCastExpressionWithPrimitiveType()", "signatureAfterChange": " protected void consumeCastExpressionWithPrimitiveType()", "diff": ["-\tExpression exp, cast, castType;", "+\tExpression exp;", "+\tExpression cast;", "+\tTypeReference castType;", "-\tthis.expressionStack[this.expressionPtr] = cast = new CastExpression(exp = this.expressionStack[this.expressionPtr+1], castType = this.expressionStack[this.expressionPtr]);", "+\tthis.expressionStack[this.expressionPtr] = cast = new CastExpression(exp = this.expressionStack[this.expressionPtr+1], castType = (TypeReference) this.expressionStack[this.expressionPtr]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82fa2e3e4e0cf07df19de7566e2e653f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "24071af935ae982264becd6377e49aeb82ae6605", "commitAfterChange": "630841750ec7fd372d10d6a06da2b09122e947d0", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " protected void consumeCastExpressionWithNameArray()", "signatureAfterChange": " protected void consumeCastExpressionWithNameArray()", "diff": ["-\tExpression exp, cast, castType;", "-", "+\tExpression exp;", "+\tExpression cast;", "+\tTypeReference castType;", "-\tthis.expressionStack[this.expressionPtr] = cast = new CastExpression(exp = this.expressionStack[this.expressionPtr+1], castType = this.expressionStack[this.expressionPtr]);", "+\tthis.expressionStack[this.expressionPtr] = cast = new CastExpression(exp = this.expressionStack[this.expressionPtr+1], castType = (TypeReference) this.expressionStack[this.expressionPtr]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a76e21e22b71d253c5f87116e1fbc3a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "cc14d854a3fa69314da90ab7678179e0d094cf79", "commitAfterChange": "6af4efbab58f035254265067f1eb9b624da61900", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " protected void consumeCastExpressionWithNameArray()", "signatureAfterChange": " protected void consumeCastExpressionWithNameArray()", "diff": ["-\t", "-\t// handle type arguments", "-\tpushOnGenericsLengthStack(0);", "-\tpushOnGenericsIdentifiersLengthStack(identifierLengthStack[identifierLengthPtr]);", "-\t", "-\texpressionStack[expressionPtr] = cast = new CastExpression(exp = expressionStack[expressionPtr], castType = getTypeReference(intStack[intPtr--]));", "+\t\t", "+\texpressionPtr--;", "+\texpressionLengthPtr--;", "+\texpressionStack[expressionPtr] = cast = new CastExpression(exp = expressionStack[expressionPtr+1], castType = this.expressionStack[this.expressionPtr]);"]}], "num": 37453}