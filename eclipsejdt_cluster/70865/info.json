{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f16616922195e034a0db5a8a40bd6eba", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "125aef0d86d184ec0fd7de5ee0ae7251", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "1181734000bc58166717f28b96a50ec09d7eb3ed", "commitAfterChange": "c51e77393b67f111789d948569acd2e5924511c0", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": "\r \tpublic synchronized void flushZipFiles()", "signatureAfterChange": "\r \tpublic synchronized void flushZipFiles()", "diff": ["-\t\tif (this.zipFilesClientCount == 0) return;\r", "-\t\tthis.zipFilesClientCount--;\r", "-\t\tif (this.zipFilesClientCount > 0) return;\r", "-\t\tIterator iterator = this.zipFiles.values().iterator();\r", "+\t\tThread currentThread = Thread.currentThread();\r", "+\t\tHashMap map = (HashMap)this.zipFiles.remove(currentThread);\r", "+\t\tif (map == null) return;\r", "+\t\tIterator iterator = map.values().iterator();\r", "-\t\t\t\t((ZipFile)iterator.next()).close();\r", "+\t\t\t\tZipFile zipFile = (ZipFile)iterator.next();\r", "+\t\t\t\tif (JavaModelManager.ZIP_ACCESS_VERBOSE) {\r", "+\t\t\t\t\tSystem.out.println(\"(\" + currentThread + \") [JavaModelManager.flushZipFiles()] Closing ZipFile on \" +zipFile.getName()); //$NON-NLS-1$ //$NON-NLS-1$\r", "+\t\t\t\t}\r", "+\t\t\t\tzipFile.close();\r", "-\t\tthis.zipFiles = null;\r", "+\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d525b01b0aa50d7f0c406b919ac24aa6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "52aadf84ad4c79f64e59f07a05239268e15539c0", "commitAfterChange": "edc37e94c3a8ff30574beb9cdf0696d92f661cd3", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic synchronized void flushZipFiles()", "signatureAfterChange": " \tpublic void flushZipFiles()", "diff": ["-\tpublic synchronized void flushZipFiles() {", "-\t\tThread currentThread = Thread.currentThread();", "-\t\tHashMap map = (HashMap)this.zipFiles.remove(currentThread);", "-\t\tif (map == null) return;", "-\t\tIterator iterator = map.values().iterator();", "-\t\twhile (iterator.hasNext()) {", "-\t\t\ttry {", "-\t\t\t\tZipFile zipFile = (ZipFile)iterator.next();", "-\t\t\t\tif (JavaModelManager.ZIP_ACCESS_VERBOSE) {", "-\t\t\t\t\tSystem.out.println(\"(\" + currentThread + \") [JavaModelManager.flushZipFiles()] Closing ZipFile on \" +zipFile.getName()); //$NON-NLS-1$//$NON-NLS-2$", "+\tpublic void flushZipFiles() {", "+\t\tsynchronized(this.zipFiles) {", "+\t\t\tThread currentThread = Thread.currentThread();", "+\t\t\tHashMap map = (HashMap)this.zipFiles.remove(currentThread);", "+\t\t\tif (map == null) return;", "+\t\t\tIterator iterator = map.values().iterator();", "+\t\t\twhile (iterator.hasNext()) {", "+\t\t\t\ttry {", "+\t\t\t\t\tZipFile zipFile = (ZipFile)iterator.next();", "+\t\t\t\t\tif (JavaModelManager.ZIP_ACCESS_VERBOSE) {", "+\t\t\t\t\t\tSystem.out.println(\"(\" + currentThread + \") [JavaModelManager.flushZipFiles()] Closing ZipFile on \" +zipFile.getName()); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t\t\t}", "+\t\t\t\t\tzipFile.close();", "+\t\t\t\t} catch (IOException e) {", "-\t\t\t\tzipFile.close();", "-\t\t\t} catch (IOException e) {", "-\t\t}", "-\t\t", "+\t\t}\t"]}], "num": 70865}