{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a4f7adb5f74a55e95d37d5c63fd96ff6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2235a19c520770f9c494db1fb97fa125", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/ElementInfoConverter.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate TypeDeclaration convert(SourceTypeElementInfo sourceType, CompilationResult compilationResult)", "signatureAfterChange": " \tprivate TypeDeclaration convert(SourceTypeElementInfo sourceType, CompilationResult compilationResult)", "diff": ["-\t\tTypeDeclaration type;", "-\t\tboolean isAnonymous = false;", "+\t\tTypeDeclaration type = new TypeDeclaration(compilationResult);", "-\t\t\t\t\ttype = new AnonymousLocalTypeDeclaration(compilationResult);", "-\t\t\t\t\tisAnonymous = true;", "-\t\t\t\t} else if (typeHandle.isLocal()) {", "-\t\t\t\t\ttype = new LocalTypeDeclaration(compilationResult);", "+\t\t\t\t\ttype.name = TypeDeclaration.ANONYMOUS_EMPTY_NAME;", "+\t\t\t\t\ttype.bits |= ASTNode.AnonymousAndLocalMask;", "-\t\t\t\t\ttype = new TypeDeclaration(compilationResult);", "+\t\t\t\t\tif (typeHandle.isLocal()) {", "+\t\t\t\t\t\ttype.bits |= ASTNode.IsLocalTypeMASK;", "+\t\t\t\t\t}", "-\t\t\t\ttype = new TypeDeclaration(compilationResult);", "+\t\t\t\t// could not figure, assume toplevel", "-\t\t\ttype = new MemberTypeDeclaration(compilationResult);", "+\t\t\ttype.bits |= ASTNode.IsMemberTypeMASK;", "-\t\tif (!isAnonymous) {", "+\t\tif ((type.bits & ASTNode.IsAnonymousTypeMASK) == 0) {", "-\t\t} else {", "-\t\t\ttype.name = AnonymousLocalTypeDeclaration.ANONYMOUS_EMPTY_NAME;", "-\t\ttype.memberTypes = new MemberTypeDeclaration[sourceMemberTypeCount];", "+\t\ttype.memberTypes = new TypeDeclaration[sourceMemberTypeCount];", "-\t\t\ttype.memberTypes[i] =", "-\t\t\t\t(MemberTypeDeclaration) convert((SourceTypeElementInfo)sourceMemberTypes[i], compilationResult);", "+\t\t\ttype.memberTypes[i] = convert((SourceTypeElementInfo)sourceMemberTypes[i], compilationResult);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8ce9fdffedde33110923bc050b555a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "189d8495dd269a3e1a6eabd4118e6586a867755d", "commitAfterChange": "895a706ac192edcb7ec7f64367020a5215af0491", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "signatureAfterChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "diff": ["-\t\t\tthis.completionToken = ((CompletionOnSingleTypeReference) astNode).token;", "+\t\t\tCompletionOnSingleTypeReference singleRef = (CompletionOnSingleTypeReference) astNode;", "+\t\t\t", "+\t\t\tthis.completionToken = singleRef.token;", "-\t\t\tthis.assistNodeIsClass = astNode instanceof CompletionOnClassReference;", "-\t\t\tthis.assistNodeIsException = astNode instanceof CompletionOnExceptionReference;", "-\t\t\tthis.assistNodeIsInterface = astNode instanceof CompletionOnInterfaceReference;", "-\t\t\tthis.assistNodeIsConstructor = ((CompletionOnSingleTypeReference) astNode).isConstructorType;", "+\t\t\tthis.assistNodeIsClass = singleRef.isClass();", "+\t\t\tthis.assistNodeIsException = singleRef.isException();", "+\t\t\tthis.assistNodeIsInterface = singleRef.isInterface();", "+\t\t\tthis.assistNodeIsConstructor = singleRef.isConstructorType;", "-\t\t\tthis.assistNodeIsClass = astNode instanceof CompletionOnQualifiedClassReference;", "-\t\t\tthis.assistNodeIsException = astNode instanceof CompletionOnQualifiedExceptionReference;", "-\t\t\tthis.assistNodeIsInterface = astNode instanceof CompletionOnQualifiedInterfaceReference;", "-\t\t\t", "+\t\t\t", "+\t\t\tthis.assistNodeIsClass = ref.isClass();", "+\t\t\tthis.assistNodeIsException = ref.isException();", "+\t\t\tthis.assistNodeIsInterface = ref.isInterface();", "+\t\t\t"]}], "num": 19069}