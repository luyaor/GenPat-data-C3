{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5f0acbdaa2ba41385e6e32132a4def7c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d882f62fa399f31a6cac5ea8735fe94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ImportRewriteTest.java", "commitBeforeChange": "540532d90ea319b134aad3a0154f549c66728687", "commitAfterChange": "6a0eebe34bd6b3f3c957d0d1c92bc68d99fa8f40", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \t \tprivate ImportRewrite newImportsRewrite(ICompilationUnit cu, String[] order, int normalThreshold, int staticThreshold, boolean restoreExistingImports) throws CoreException, BackingStoreException", "signatureAfterChange": " \t \tprivate ImportRewrite newImportsRewrite(ICompilationUnit cu, String[] order, int normalThreshold, int staticThreshold, boolean restoreExistingImports) throws CoreException, BackingStoreException", "diff": ["-\t\tStringBuffer buf= new StringBuffer();", "-\t\tfor (int i= 0; i < order.length; i++) {", "-\t\t\tbuf.append(order[i]);", "-\t\t\tbuf.append(';');", "-\t\t}", "-\t\tIJavaProject javaProject= cu.getJavaProject();", "-\t\tjavaProject.setOption(JavaCore.IMPORTREWRITE_IMPORT_ORDER, buf.toString());", "-\t\tjavaProject.setOption(JavaCore.IMPORTREWRITE_ONDEMAND_THRESHOLD, String.valueOf(normalThreshold));", "-\t\tjavaProject.setOption(JavaCore.IMPORTREWRITE_STATIC_ONDEMAND_THRESHOLD, String.valueOf(staticThreshold));", "-\t\treturn ImportRewrite.create(cu, restoreExistingImports);", "+\t\tImportRewrite rewrite= ImportRewrite.create(cu, restoreExistingImports);", "+\t\trewrite.setImportOrder(order);", "+\t\trewrite.setOnDemandImportThreshold(normalThreshold);", "+\t\trewrite.setStaticOnDemandImportThreshold(staticThreshold);", "+\t\treturn rewrite;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dd369fdce7d93e4456f957af0a8e52c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ImportRewriteTest.java", "commitBeforeChange": "9968b422e7cd1433b2cea24ec6c706b9b3cbabb8", "commitAfterChange": "1c7322526175fbdd367e05404e51251d626478ac", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": " \t \tprivate ImportRewrite newImportsRewrite(ICompilationUnit cu, String[] order, int threshold, boolean restoreExistingImports) throws CoreException, BackingStoreException", "signatureAfterChange": " \t \tprivate ImportRewrite newImportsRewrite(ICompilationUnit cu, String[] order, int normalThreshold, int staticThreshold, boolean restoreExistingImports) throws CoreException, BackingStoreException", "diff": ["-\tprivate ImportRewrite newImportsRewrite(ICompilationUnit cu, String[] order, int threshold, boolean restoreExistingImports) throws CoreException, BackingStoreException {", "+\tprivate ImportRewrite newImportsRewrite(ICompilationUnit cu, String[] order, int normalThreshold, int staticThreshold, boolean restoreExistingImports) throws CoreException, BackingStoreException {", "-\t\tjavaProject.setOption(JavaCore.IMPORTREWRITE_ONDEMAND_THRESHOLD, String.valueOf(threshold));", "-", "+\t\tjavaProject.setOption(JavaCore.IMPORTREWRITE_ONDEMAND_THRESHOLD, String.valueOf(normalThreshold));", "+\t\tjavaProject.setOption(JavaCore.IMPORTREWRITE_STATIC_ONDEMAND_THRESHOLD, String.valueOf(staticThreshold));"]}], "num": 12217}