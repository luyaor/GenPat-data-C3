{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4684b43d78f543d06b06ab0e641d49af", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c85e77eea9f31fe2698cca1f9a71693", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredField.java", "commitBeforeChange": "c11f54b96467c7e64bf80849ce30a605b9889eee", "commitAfterChange": "dbff9f719b19fdbf4bbd42aae594729f90b95407", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public FieldDeclaration updatedFieldDeclaration()", "signatureAfterChange": " public FieldDeclaration updatedFieldDeclaration()", "diff": ["-\t\t\t\tif (anonymousTypes[i].preserveContent){", "-\t\t\t\t\tfieldDeclaration.initialization = this.anonymousTypes[i].updatedTypeDeclaration().allocation;", "+\t\t\t\tRecoveredType recoveredType = anonymousTypes[i];", "+\t\t\t\tTypeDeclaration typeDeclaration = recoveredType.typeDeclaration;", "+\t\t\t\tif(typeDeclaration.declarationSourceEnd == 0) {", "+\t\t\t\t\ttypeDeclaration.declarationSourceEnd = this.fieldDeclaration.declarationSourceEnd;", "+\t\t\t\t\ttypeDeclaration.bodyEnd = this.fieldDeclaration.declarationSourceEnd;", "+\t\t\t\t}", "+\t\t\t\tif (recoveredType.preserveContent){", "+\t\t\t\t\tfieldDeclaration.initialization = recoveredType.updatedTypeDeclaration().allocation;", "-\t\t\t\tif (anonymousTypes[i].preserveContent){", "-\t\t\t\t\tthis.anonymousTypes[i].updatedTypeDeclaration();", "+\t\t\t\tRecoveredType recoveredType = anonymousTypes[i];", "+\t\t\t\tTypeDeclaration typeDeclaration = recoveredType.typeDeclaration;", "+\t\t\t\tif(typeDeclaration.declarationSourceEnd == 0) {", "+\t\t\t\t\ttypeDeclaration.declarationSourceEnd = this.fieldDeclaration.declarationSourceEnd;", "+\t\t\t\t\ttypeDeclaration.bodyEnd = this.fieldDeclaration.declarationSourceEnd;", "+\t\t\t\t}", "+\t\t\t\tif (recoveredType.preserveContent){", "+\t\t\t\t\trecoveredType.updatedTypeDeclaration();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c9c8107f330e3d7c02ebfc7de21813a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredField.java", "commitBeforeChange": "3a24c8e93f77a32dae59173b29a4fa366ce01a3a", "commitAfterChange": "5d36ded47d2c78d72658a7417caa4c325d7b6276", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public FieldDeclaration updatedFieldDeclaration()", "signatureAfterChange": " public FieldDeclaration updatedFieldDeclaration(int depth, Set knownTypes)", "diff": ["-public FieldDeclaration updatedFieldDeclaration(){", "+public FieldDeclaration updatedFieldDeclaration(int depth, Set knownTypes){", "-\t\t\t\t\tTypeDeclaration anonymousType = recoveredType.updatedTypeDeclaration();", "-\t\t\t\t\tthis.fieldDeclaration.initialization = anonymousType.allocation;", "-\t\t\t\t\tif(this.fieldDeclaration.declarationSourceEnd == 0) {", "-\t\t\t\t\t\tint end = anonymousType.declarationSourceEnd;", "-\t\t\t\t\t\tthis.fieldDeclaration.declarationSourceEnd = end;", "-\t\t\t\t\t\tthis.fieldDeclaration.declarationEnd = end;", "+\t\t\t\t\tTypeDeclaration anonymousType = recoveredType.updatedTypeDeclaration(depth + 1, knownTypes);", "+\t\t\t\t\tif (anonymousType != null) {", "+\t\t\t\t\t\tthis.fieldDeclaration.initialization = anonymousType.allocation;", "+\t\t\t\t\t\tif(this.fieldDeclaration.declarationSourceEnd == 0) {", "+\t\t\t\t\t\t\tint end = anonymousType.declarationSourceEnd;", "+\t\t\t\t\t\t\tthis.fieldDeclaration.declarationSourceEnd = end;", "+\t\t\t\t\t\t\tthis.fieldDeclaration.declarationEnd = end;", "+\t\t\t\t\t\t}", "-\t\t\t\trecoveredType.updatedTypeDeclaration();", "+\t\t\t\t// if the enum is recovered then enum constants must be recovered too.", "+\t\t\t\t// depth is considered as the same as the depth of the enum", "+\t\t\t\trecoveredType.updatedTypeDeclaration(depth, knownTypes);"]}], "num": 577}