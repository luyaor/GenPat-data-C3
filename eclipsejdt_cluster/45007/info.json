{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "909214e90796787ea55d6d1f0495267d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b5d077b21816762d906d6cd40510f5b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MultiTypeDeclarationPattern.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " EntryResult[] queryIn(Index index) throws IOException", "signatureAfterChange": " EntryResult[] queryIn(Index index) throws IOException", "diff": ["-\t\t\t\tif (!this.isCamelCase) {", "-\t\t\t\t\t// do a prefix query with the simpleName", "-\t\t\t\t\tmatchRule &= ~R_EXACT_MATCH;", "-\t\t\t\t\tmatchRule |= R_PREFIX_MATCH;", "-\t\t\t\t\tkey = CharOperation.append(key, SEPARATOR);", "-\t\t\t\t}", "+\t\t\t\t// do a prefix query with the simpleName", "+\t\t\t\tmatchRule &= ~R_EXACT_MATCH;", "+\t\t\t\tmatchRule |= R_PREFIX_MATCH;", "+\t\t\t\tkey = CharOperation.append(key, SEPARATOR);", "+\t\t\tcase R_CAMELCASE_MATCH:", "+\t\t\tcase R_CAMELCASE_SAME_PART_COUNT_MATCH:", "+\t\t\t\t// do a prefix query with the simpleName", "+\t\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce1e5a98790779174154d4716c9559a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MultiTypeDeclarationPattern.java", "commitBeforeChange": "9170036b60b531a506b4ffe0efeda8e18d918bef", "commitAfterChange": "f8aee71b6b129d09f997301cd8500148a6feb325", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " EntryResult[] queryIn(Index index) throws IOException", "signatureAfterChange": " EntryResult[] queryIn(Index index) throws IOException", "diff": ["-\t\t\t\tmatchRule = matchRule - R_EXACT_MATCH + R_PREFIX_MATCH;", "-\t\t\t\tkey = CharOperation.append(key, SEPARATOR);", "-\t\t\t\tbreak; // do a prefix query with the simpleName", "+\t\t\t\tif (!this.isCamelCase) {", "+\t\t\t\t\t// do a prefix query with the simpleName", "+\t\t\t\t\tmatchRule = matchRule - R_EXACT_MATCH + R_PREFIX_MATCH;", "+\t\t\t\t\tkey = CharOperation.append(key, SEPARATOR);", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase R_REGEXP_MATCH :", "+\t\t\t\t// TODO (frederic) implement regular expression match", "+\t\t\t\tbreak;"]}], "num": 45007}