{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "63d47d565c445f289e66f149fd890a50", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "876f3b1f7aa6b64659b6aa8eab97824e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": " \t \tpublic LabeledStatement convert(org.eclipse.jdt.internal.compiler.ast.LabeledStatement statement)", "signatureAfterChange": " \t \tpublic SingleMemberAnnotation convert(org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation annotation)", "diff": ["+\t", "+\tpublic SingleMemberAnnotation convert(org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation annotation) {", "+\t\tSingleMemberAnnotation singleMemberAnnotation = this.ast.newSingleMemberAnnotation();", "+\t\tsetTypeNameForAnnotation(annotation, singleMemberAnnotation);", "+\t\tsingleMemberAnnotation.setValue(convert(annotation.memberValue));", "+\t\tint start = annotation.sourceStart;", "+\t\tint end = annotation.declarationSourceEnd;", "+\t\tsingleMemberAnnotation.setSourceRange(start, end - start + 1);", "+\t\treturn singleMemberAnnotation;", "+\t}", "-\t", "-\tpublic LabeledStatement convert(org.eclipse.jdt.internal.compiler.ast.LabeledStatement statement) {", "-\t\tLabeledStatement labeledStatement = this.ast.newLabeledStatement();", "-\t\tlabeledStatement.setSourceRange(statement.sourceStart, statement.sourceEnd - statement.sourceStart + 1);\t", "-\t\torg.eclipse.jdt.internal.compiler.ast.Statement body = statement.statement;", "-\t\tlabeledStatement.setBody(convert(body));", "-\t\tSimpleName name = this.ast.newSimpleName(new String(statement.label));", "-\t\tretrieveIdentifierAndSetPositions(statement.sourceStart, statement.sourceEnd, name);", "-\t\tlabeledStatement.setLabel(name);", "-\t\treturn labeledStatement;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b45f07f8fafe8e5976701927f7a2955c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "  \tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression expression)", "signatureAfterChange": "  \tpublic MarkerAnnotation convert(org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation annotation)", "diff": ["-\tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression expression) {", "-\t\tInfixExpression infixExpression = this.ast.newInfixExpression();", "-\t\tif (this.resolveBindings) {", "-\t\t\trecordNodes(infixExpression, expression);", "+\tpublic MarkerAnnotation convert(org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation annotation) {", "+\t\tMarkerAnnotation markerAnnotation = this.ast.newMarkerAnnotation();", "+\t\tsetTypeNameForAnnotation(annotation, markerAnnotation);", "+\t\tint start = annotation.sourceStart;", "+\t\tint end = annotation.declarationSourceEnd;", "+\t\tmarkerAnnotation.setSourceRange(start, end - start + 1);", "+\t\treturn markerAnnotation;", "+\t}", "-\t\tExpression leftExpression = convert(expression.left);", "-\t\tinfixExpression.setLeftOperand(leftExpression);", "-\t\tinfixExpression.setRightOperand(convert(expression.right));", "-\t\tinfixExpression.setOperator(InfixExpression.Operator.CONDITIONAL_AND);", "-\t\tint startPosition = leftExpression.getStartPosition();", "-\t\tinfixExpression.setSourceRange(startPosition, expression.sourceEnd - startPosition + 1);", "-\t"]}], "num": 32892}