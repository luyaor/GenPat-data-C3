{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f0451ca8bc7340923d16fab8eb61500", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "104fd4895af5012e445b3da5acc8e53a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "f5ba3eda07b1ea41890a7ce793b9da47e6b4d63e", "commitAfterChange": "af33a2b5d21704fd80790ca573818492aac6d737", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t  \t \tprivate void initializeRoots(IJavaModel model)", "signatureAfterChange": " \t  \t \tprivate void initializeRoots(IJavaModel model)", "diff": ["-\t\t\t\t\tthis.roots.put(path, new RootInfo(project, ((ClasspathEntry)entry).fullExclusionPatternChars()));", "+\t\t\t\t\tthis.roots.put(path, new RootInfo(project, path, ((ClasspathEntry)entry).fullExclusionPatternChars()));", "-\t\t\t\t\trootList.add(new RootInfo(project, ((ClasspathEntry)entry).fullExclusionPatternChars()));", "+\t\t\t\t\trootList.add(new RootInfo(project, path, ((ClasspathEntry)entry).fullExclusionPatternChars()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "398ce5c3d795ad7648c7d9cbd5a12fda", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchJavadocTests.java", "commitBeforeChange": "f87ad3f89c9d5c9fbad99148b29d1a2e7918f94f", "commitAfterChange": "086a059d80ef5143309659be7f3e0f82ae46c4b4", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic static void buildSuite(TestSuite suite, String support)", "signatureAfterChange": "  \tpublic static void buildSuite(TestSuite suite, String support)", "diff": ["-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testBug54962\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testBug54962qualified\"));", "+\t\tsuite.addTest(new JavaSearchJavadocTests(\"testBug54962\", support));", "+\t\tsuite.addTest(new JavaSearchJavadocTests(\"testBug54962qualified\", support));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bd7c5e5b569ee625cdd1c0c6cffa469", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodScope.java", "commitBeforeChange": "eee151556fa5628da58c297d3e841df408f33c62", "commitAfterChange": "6c856a22e62c9ef98dcc7d4e8f62170ac88f630e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic FieldBinding findField( \t\tTypeBinding receiverType, \t\tchar[] fieldName, \t\tInvocationSite invocationSite, \t\tboolean needResolve)", "signatureAfterChange": " \tpublic FieldBinding findField( \t\tTypeBinding receiverType, \t\tchar[] fieldName, \t\tInvocationSite invocationSite, \t\tboolean needResolve)", "diff": ["+\t\t\t\tfield, // closest match", "+\t\t\t\t\tfield, // closest match"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c351e0ebc1b0c3f5fa0f14108f2b470", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/ClasspathDirectory.java", "commitBeforeChange": "1a94a1e6652f1701b8c360d56d755e5438b79c26", "commitAfterChange": "3b002cab97d2ee77b59be67feaf705de255bc1fb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public NameEnvironmentAnswer findClass(char[] typeName, String qualifiedPackageName, String qualifiedBinaryFileName)", "signatureAfterChange": " public NameEnvironmentAnswer findClass(char[] typeName, String qualifiedPackageName, String qualifiedBinaryFileName)", "diff": ["-\t\t\t\t\tfullSourcePath, this.encoding),", "+\t\t\t\t\tfullSourcePath, this.encoding, destinationPath),", "-\t\t\t\t\tfullSourcePath, this.encoding),", "+\t\t\t\t\tfullSourcePath, this.encoding, destinationPath),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4a14db9504f5d73632273280ae53bf8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "9506194ecd38aa227915d4452e8097fba7bd6231", "commitAfterChange": "27a13e874a8de3a8e74e5e1ab65479e9dace8b8c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void createInitialConstraintsForParameters(TypeBinding[] parameters, boolean checkVararg, TypeBinding varArgsType, MethodBinding method)", "signatureAfterChange": " \tpublic void createInitialConstraintsForParameters(TypeBinding[] parameters, boolean checkVararg, TypeBinding varArgsType, MethodBinding method)", "diff": ["-\t\t\t\tthis.initialConstraints[numConstraints++] = new ConstraintExpressionFormula(this.invocationArguments[i], thetaF, ReductionResult.COMPATIBLE);", "+\t\t\t\tthis.initialConstraints[numConstraints++] = new ConstraintExpressionFormula(this.invocationArguments[i], thetaF, ReductionResult.COMPATIBLE, ARGUMENT_CONSTRAINTS_ARE_SOFT);", "-\t\t\t\t\tthis.initialConstraints[numConstraints++] = new ConstraintExpressionFormula(this.invocationArguments[i], thetaF, ReductionResult.COMPATIBLE);", "+\t\t\t\t\tthis.initialConstraints[numConstraints++] = new ConstraintExpressionFormula(this.invocationArguments[i], thetaF, ReductionResult.COMPATIBLE, ARGUMENT_CONSTRAINTS_ARE_SOFT);"]}], "num": 13908}