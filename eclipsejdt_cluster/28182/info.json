{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5363d626fe9af6b62cdb964f539730c8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83b9f324fe0bd136380c2c73803b095f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/util/JdtCorePerformanceMeter.java", "commitBeforeChange": "4119a65befb0f1b826133c8b40790cea36510774", "commitAfterChange": "199c84f2cae998bf19dec5ba0cb5f860d990b3fa", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate void storeCpuTime(Sample sample)", "signatureAfterChange": "  private void storeDataPoints(Sample sample)", "diff": ["-\tprivate void storeCpuTime(Sample sample) {", "-\t\tDataPoint[] dataPoints= sample.getDataPoints();", "-\t\tSystem.out.println(\"Scenario '\" + getReadableName()+ \"':\"); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\tif (dataPoints.length > 0) {", "-\t\t\tStatisticsSession s= new StatisticsSession(dataPoints);", "-\t\t\tDim[] dimensions= dataPoints[0].getDimensions();", "-\t\t\tif (dimensions.length > 0) {", "-\t\t\t\tfor (int i= 0; i < dimensions.length; i++) {", "-\t\t\t\t    Dim dimension= dimensions[i];", "-\t\t\t\t\tif (dimension.getName().equals(\"CPU Time\")) {", "-\t\t\t\t\t\tStatistics stat = new Statistics(s, dimension);", "-\t\t\t\t\t    CPU_TIMES.put(getReadableName(), stat);", "-\t\t\t\t\t\tSystem.out.println(\"\t- CPU Time: \"+stat.toString());", "-\t\t\t\t\t} else if (dimension.getName().startsWith(\"Elapsed\")) {", "-\t\t\t\t\t\tStatistics stat = new Statistics(s, dimension);", "-\t\t\t\t\t    ELAPSED_TIMES.put(getReadableName(), stat);", "-\t\t\t\t\t\tSystem.out.println(\"\t- Elapsed process: \"+stat.toString());", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "+private void storeDataPoints(Sample sample) {", "+\tDataPoint[] dataPoints = sample.getDataPoints();", "+\tint length = dataPoints.length;", "+\tif (length > 0) {", "+\t\tSystem.out.println(\"\tStore \" + length + \" data points...\");", "+\t\tSTATISTICS.put(getReadableName(), dataPoints);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9240072749254c3d294447c718b373e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "605cc5dd745b7e1d6935bfc34c1be6fcea51b4ab", "commitAfterChange": "03be42bb9ac6b223bea20e29a7b3f31a76dae9e4", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "  protected void report(SearchMatch match) throws CoreException", "signatureAfterChange": "  protected void report(SearchMatch match) throws CoreException", "diff": ["-\t\tif (match instanceof TypeReferenceMatch) {", "+\t\tif (match instanceof ReferenceMatch) {", "-\t\t\t\tTypeReferenceMatch typeRefMatch = (TypeReferenceMatch) match;", "-\t\t\t\tJavaElement local = (JavaElement) typeRefMatch.getLocalElement();", "+\t\t\t\tReferenceMatch refMatch = (ReferenceMatch) match;", "+\t\t\t\tJavaElement local = (JavaElement) refMatch.getLocalElement();", "-\t\t\t\tIJavaElement[] others = typeRefMatch.getOtherElements();", "-\t\t\t\tif (others != null) {", "-\t\t\t\t\tint length = others.length;", "-\t\t\t\t\tif (length > 0) {", "-\t\t\t\t\t\tSystem.out.println(\"\\tOther elements:\"); //$NON-NLS-1$", "-\t\t\t\t\t\tfor (int i=0; i<length; i++) {", "-\t\t\t\t\t\t\tJavaElement other = (JavaElement) others[i];", "-\t\t\t\t\t\t\tSystem.out.println(\"\\t\\t- \"+ other.toStringWithAncestors()); //$NON-NLS-1$", "+\t\t\t\tif (match instanceof TypeReferenceMatch) {", "+\t\t\t\t\tIJavaElement[] others = ((TypeReferenceMatch) refMatch).getOtherElements();", "+\t\t\t\t\tif (others != null) {", "+\t\t\t\t\t\tint length = others.length;", "+\t\t\t\t\t\tif (length > 0) {", "+\t\t\t\t\t\t\tSystem.out.println(\"\\tOther elements:\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\tfor (int i=0; i<length; i++) {", "+\t\t\t\t\t\t\t\tJavaElement other = (JavaElement) others[i];", "+\t\t\t\t\t\t\t\tSystem.out.println(\"\\t\\t- \"+ other.toStringWithAncestors()); //$NON-NLS-1$", "+\t\t\t\t\t\t\t}"]}], "num": 28182}