{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c78c3c421c97b1c01f807d3a6a7d20c4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "926281f5eb9a00b252b51942403daaf1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AmbiguousMethodTest.java", "commitBeforeChange": "677bf3763b6e383c756f5ca8cbbd80c6dec30c1f", "commitAfterChange": "c06e07ca77c0b109ce7d4e6c3f60180a3777bc7d", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic void _test009()", "signatureAfterChange": " \tpublic void test009()", "diff": ["-\t//https://bugs.eclipse.org/bugs/show_bug.cgi?id=123943 - case 2", "-\tpublic void _test009() {", "+\t// see also Bug 399567 - [1.8] Different error message from the reference compiler", "+\tpublic void test009() {", "+\t\tString[] testFiles = ", "+\t\t\t\tnew String[] {", "+\t\t\t\t\"T.java\",", "+\t\t\t\t\"import java.util.*;\\n\" +", "+\t\t\t\t\t\t\"public class T {\\n\" +", "+\t\t\t\t\t\t\"   void test() {\\n\" +", "+\t\t\t\t\t\t\"   \tOrderedSet<String> os = null;\\n\" +", "+\t\t\t\t\t\t\"   \tos.add(\\\"hello\\\");\\n\" +", "+\t\t\t\t\t\t\"   \tOrderedSet<Integer> os2 = null;\\n\" +", "+\t\t\t\t\t\t\"   \tos2.add(1);\\n\" +", "+\t\t\t\t\t\t\"   }\\n\" +", "+\t\t\t\t\t\t\"}\\n\" +", "+\t\t\t\t\t\t\"interface OrderedSet<E> extends List<E>, Set<E> { boolean add(E o); }\\n\"", "+\t\t};", "+\t\tif (!IS_JRE_8 || this.complianceLevel < ClassFileConstants.JDK1_8)", "+\t\t\tthis.runConformTest(testFiles, \"\");", "+\t\telse", "+\t\t\tthis.runNegativeTest(", "+\t\t\t\ttestFiles,", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t  \"1. WARNING in T.java (at line 5)\\n\" + ", "+\t\t\t  \"\tos.add(\\\"hello\\\");\\n\" + ", "+\t\t\t  \"\t^^\\n\" + ", "+\t\t\t  \"Null pointer access: The variable os can only be null at this location\\n\" + ", "+\t\t\t  \"----------\\n\" + ", "+\t\t\t  \"2. WARNING in T.java (at line 7)\\n\" + ", "+\t\t\t  \"\tos2.add(1);\\n\" + ", "+\t\t\t  \"\t^^^\\n\" + ", "+\t\t\t  \"Null pointer access: The variable os2 can only be null at this location\\n\" + ", "+\t\t\t  \"----------\\n\" + ", "+\t\t\t  \"3. ERROR in T.java (at line 10)\\n\" + ", "+\t\t\t  \"\tinterface OrderedSet<E> extends List<E>, Set<E> { boolean add(E o); }\\n\" + ", "+\t\t\t  \"\t          ^^^^^^^^^^\\n\" + ", "+\t\t\t  \"Duplicate methods named stream with the parameters () and () are inherited from the types Set<E> and List<E>\\n\" + ", "+\t\t\t  \"----------\\n\" + ", "+\t\t\t  \"4. ERROR in T.java (at line 10)\\n\" + ", "+\t\t\t  \"\tinterface OrderedSet<E> extends List<E>, Set<E> { boolean add(E o); }\\n\" + ", "+\t\t\t  \"\t          ^^^^^^^^^^\\n\" + ", "+\t\t\t  \"Duplicate methods named parallelStream with the parameters () and () are inherited from the types Set<E> and List<E>\\n\" + ", "+\t\t\t  \"----------\\n\");", "+\t}", "-\t\t\t\t\"}\" +", "-\t\t\t\t\"interface OrderedSet<E> extends List<E>, Set<E> { boolean add(E o); }\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e0dc94ee25a91ac047582c4ef674442", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "b89ad18e17834e64930a830c92b5e2241f9a8b44", "commitAfterChange": "d9605208e25375e966739effbd053a969138c830", "methodNumberBeforeChange": 351, "methodNumberAfterChange": 351, "signatureBeforeChange": " public void test200()", "signatureAfterChange": " public void test200()", "diff": ["+\tMap options = getCompilerOptions();", "+\tString compliance = (String) options.get(JavaCore.COMPILER_COMPLIANCE);", "+\tString errorMessage = compliance == JavaCore.VERSION_1_6 ?", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tint foo(Collection bar) { return 0; }\\n\" + ", "+\t\t\t\"\t    ^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Method foo(Collection) has the same erasure foo(Collection<E>) as another method in type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tint foo(Collection bar) { return 0; }\\n\" + ", "+\t\t\t\"\t        ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Collection is a raw type. References to generic type Collection<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tdouble foo(Collection<String> bar) {return 0; }\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Method foo(Collection<String>) has the same erasure foo(Collection<E>) as another method in type X\\n\" + ", "+\t\t\t\"----------\\n\" :", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\t\"\tint foo(Collection bar) { return 0; }\\n\" + ", "+\t\t\t\t\"\t    ^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Method foo(Collection) has the same erasure foo(Collection<E>) as another method in type X\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\t\"\tint foo(Collection bar) { return 0; }\\n\" + ", "+\t\t\t\t\"\t        ^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Collection is a raw type. References to generic type Collection<E> should be parameterized\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\t\"\tdouble foo(Collection<String> bar) {return 0; }\\n\" + ", "+\t\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Method foo(Collection<String>) has the same erasure foo(Collection<E>) as another method in type X\\n\" + ", "+\t\t\t\t\"----------\\n\";", "-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "-\t\t\"\tint foo(Collection bar) { return 0; }\\n\" + ", "-\t\t\"\t    ^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\"Method foo(Collection) has the same erasure foo(Collection<E>) as another method in type X\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. WARNING in X.java (at line 3)\\n\" + ", "-\t\t\"\tint foo(Collection bar) { return 0; }\\n\" + ", "-\t\t\"\t        ^^^^^^^^^^\\n\" + ", "-\t\t\"Collection is a raw type. References to generic type Collection<E> should be parameterized\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"3. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\"\tdouble foo(Collection<String> bar) {return 0; }\\n\" + ", "-\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\"Method foo(Collection<String>) has the same erasure foo(Collection<E>) as another method in type X\\n\" + ", "-\t\t\"----------\\n\"", "+\t\terrorMessage"]}], "num": 38189}