{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cd520ceda85afe0b84b0dd8e4c216d52", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39cf892f91f34a4a2def39d616e869a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "9b0a7dbe196111bace472ad6d38ba1cdd25696dc", "commitAfterChange": "a118736b4df6d2c2d76c2e8540c6ee6242953cb2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic char[] computeUniqueKey(boolean isLeaf)", "signatureAfterChange": " \tpublic char[] computeUniqueKey(boolean isLeaf)", "diff": ["+\t\t// We now encode the rank also in the binding key - https://bugs.eclipse.org/bugs/show_bug.cgi?id=234609", "+\t\tchar[] rankComponent = ('{' + String.valueOf(this.rank) + '}').toCharArray();", "-        return CharOperation.concat(genericTypeKey, wildCardKey);", "-       }", "+\t\treturn CharOperation.concat(genericTypeKey, rankComponent, wildCardKey);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e2f50d413607a96b9294a7421daa768", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryTypeConverter.java", "commitBeforeChange": "e61f569dbc4aa27cac18a55212d084c74e736bfb", "commitAfterChange": "677a462098c653b539c7de50745a6a31854b50b0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tprivate static AbstractMethodDeclaration convert(IMethod method, IType type, CompilationResult compilationResult, HashSetOfCharArrayArray typeNames) throws JavaModelException", "signatureAfterChange": " \t \tprivate static AbstractMethodDeclaration convert(IMethod method, IType type, CompilationResult compilationResult, HashSetOfCharArrayArray typeNames) throws JavaModelException", "diff": ["+\t\t// Ignore synthetic arguments (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=212224)", "+\t\tint startIndex = (method.isConstructor() && type.isMember() && !Flags.isStatic(type.getFlags())) ? 1 : 0;", "+\t\targumentCount -= startIndex;", "-\t\t\tString argumentTypeName = argumentTypeNames[i];", "+\t\t\tString argumentTypeName = argumentTypeNames[startIndex+i];"]}], "num": 30866}