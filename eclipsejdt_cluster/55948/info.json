{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec2ae99b11bf88814b5af8a10a118996", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "222f0b9c05905121bb897479c3d79203", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "3cfa0680932675f487a5ce02b3e0eda8b9c152d0", "commitAfterChange": "c5710053e25b56911ef4ca37886dd15d080aafc0", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 62, "signatureBeforeChange": " \tprivate static void updateVariableValues( \t\tString[] variableNames, \t\tIPath[] variablePaths, \t\tIProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tprivate static void updateVariableValues( \t\tString[] variableNames, \t\tIPath[] variablePaths, \t\tIProgressMonitor monitor) throws JavaModelException", "diff": ["+\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE){", "+\t\t\tSystem.out.println(\"CPVariable SET  - setting variables: {\" + Util.toString(variableNames)  //$NON-NLS-1$", "+\t\t\t\t+ \"} with values: \" + Util.toString(variablePaths)); //$NON-NLS-1$", "+\t\t}", "+", "-\t", "+", "+\t\tfinal String[] dbgVariableNames = variableNames;", "+", "+\t\t\t\t\t\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE){", "+\t\t\t\t\t\t\t\t\tSystem.out.println(\"CPVariable SET  - updating affected project: [\"+project.getElementName()+\"] due to setting variables: \"+ Util.toString(dbgVariableNames)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE){", "+\t\t\t\t\tSystem.out.println(\"CPVariable SET  - FAILED DUE TO EXCEPTION: \"+Util.toString(dbgVariableNames)); //$NON-NLS-1$", "+\t\t\t\t\te.printStackTrace();", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d63c31b58d4d3c52714cb4cb7b1c2e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetVariablesOperation.java", "commitBeforeChange": "155f96ad35dd069f34736b72fe6caa90731d8291", "commitAfterChange": "f4235d9a7ac5aab2dff6835e5bec2b59bb167c66", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": "  \tprotected void executeOperation() throws JavaModelException", "diff": ["-\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE){", "-\t\t\t\tUtil.verbose(", "-\t\t\t\t\t\"CPVariable SET  - setting variables\\n\" + //$NON-NLS-1$", "-\t\t\t\t\t\"\tvariables: \" + org.eclipse.jdt.internal.compiler.util.Util.toString(this.variableNames) + '\\n' +//$NON-NLS-1$", "-\t\t\t\t\t\"\tvalues: \" + org.eclipse.jdt.internal.compiler.util.Util.toString(this.variablePaths)); //$NON-NLS-1$", "-\t\t\t}", "+\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE)", "+\t\t\t\tverbose_set_variables();", "-\t\t\t\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE){", "-\t\t\t\t\t\t\tUtil.verbose(", "-\t\t\t\t\t\t\t\t\"CPVariable SET  - updating affected project due to setting variables\\n\" + //$NON-NLS-1$", "-\t\t\t\t\t\t\t\t\"\tproject: \" + affectedProject.getElementName() + '\\n' + //$NON-NLS-1$", "-\t\t\t\t\t\t\t\t\"\tvariables: \" + org.eclipse.jdt.internal.compiler.util.Util.toString(dbgVariableNames)); //$NON-NLS-1$", "-\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE_ADVANCED)", "+\t\t\t\t\t\t\tverbose_update_project(dbgVariableNames, affectedProject);", "-\t\t\t\t\t\tUtil.verbose(", "-\t\t\t\t\t\t\t\"CPVariable SET  - FAILED DUE TO EXCEPTION\\n\" + //$NON-NLS-1$", "-\t\t\t\t\t\t\t\"\tvariables: \" + org.eclipse.jdt.internal.compiler.util.Util.toString(dbgVariableNames), //$NON-NLS-1$", "-\t\t\t\t\t\t\tSystem.err); ", "+\t\t\t\t\t\tverbose_failure(dbgVariableNames); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd760a7232ffeff8a987b3a1fc7907df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "6c16279776a9d4d3bb77771278cb12f54d9affa3", "commitAfterChange": "bc7a22c71b140b80201d8c50a10c85725952881d", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError, \t\tboolean returnResolutionInProgress) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError, \t\tboolean returnResolutionInProgress) \t\tthrows JavaModelException", "diff": ["+\t    JavaModelManager manager = JavaModelManager.getJavaModelManager();", "-\t\t\t\tif (infoPath != null && (returnResolutionInProgress || infoPath != RESOLUTION_IN_PROGRESS)) {", "-\t\t\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE) {", "-\t\t\t\t\t\tif (infoPath == RESOLUTION_IN_PROGRESS) {", "-\t\t\t\t\t\t    Util.verbose(\"CPResolution: Reentering Raw Classpath Resolution for project: \"+ this.getElementName() + \"\\n  will use empty classpath instead\");  //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t\t\t    new Exception(\"TRACE OF REENTERING CALL\").printStackTrace(System.out);  //$NON-NLS-1$", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}\t\t\t\t\t\t", "+\t\t\t\tif (infoPath != null) {", "+\t\t\t\t} else if  (returnResolutionInProgress && manager.isClasspathBeingResolved(this)) {", "+\t\t\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE) {", "+\t\t\t\t\t\tUtil.verbose(", "+\t\t\t\t\t\t\t\"CPResolution: reentering raw classpath resolution, will use empty classpath instead\" + //$NON-NLS-1$", "+\t\t\t\t\t\t\t\"\tproject: \" + getElementName() + '\\n' + //$NON-NLS-1$", "+\t\t\t\t\t\t\t\"\tinvocation stack trace:\"); //$NON-NLS-1$", "+\t\t\t\t\t\tnew Exception(\"<Fake exception>\").printStackTrace(System.out); //$NON-NLS-1$", "+\t\t\t\t\t}\t\t\t\t\t\t", "+\t\t\t\t    return RESOLUTION_IN_PROGRESS;", "-\t\t\tif (nullOldResolvedCP) perProjectInfo.resolvedClasspath = RESOLUTION_IN_PROGRESS;", "+\t\t\tif (nullOldResolvedCP) manager.setClasspathBeingResolved(this, true);", "+\t\t\tmanager.setClasspathBeingResolved(this, false);"]}], "num": 55948}