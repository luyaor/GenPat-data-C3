{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5b5a461eebd77cba13883810d7778042", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "244101cfcb752573d8607498cf65a7ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "135399ac7f48d47679e738d0a583e6c95ff87fd6", "commitAfterChange": "092d49846655da2c4e511a256ba551dc4e15c674", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "\r public int scanIdentifierOrKeyword() throws InvalidInputException", "signatureAfterChange": "\r public int scanIdentifierOrKeyword() throws InvalidInputException", "diff": ["-\r", "+\tuseAssertAsAnIndentifier = false;\r", "-\t\tcase 'a' : //abstract\r", "-\t\t\tif (length == 8) {\r", "-\t\t\t\tif ((data[++index] == 'b')\r", "-\t\t\t\t\t&& (data[++index] == 's')\r", "-\t\t\t\t\t&& (data[++index] == 't')\r", "-\t\t\t\t\t&& (data[++index] == 'r')\r", "-\t\t\t\t\t&& (data[++index] == 'a')\r", "-\t\t\t\t\t&& (data[++index] == 'c')\r", "-\t\t\t\t\t&& (data[++index] == 't')) {\r", "-\t\t\t\t\treturn TokenNameabstract;\r", "-\t\t\t\t}\r", "+\t\tcase 'a' : \r", "+\t\t\tswitch(length) {\r", "+\t\t\t\tcase 8: //abstract\r", "+\t\t\t\t\tif ((data[++index] == 'b')\r", "+\t\t\t\t\t\t&& (data[++index] == 's')\r", "+\t\t\t\t\t\t&& (data[++index] == 't')\r", "+\t\t\t\t\t\t&& (data[++index] == 'r')\r", "+\t\t\t\t\t\t&& (data[++index] == 'a')\r", "+\t\t\t\t\t\t&& (data[++index] == 'c')\r", "+\t\t\t\t\t\t&& (data[++index] == 't')) {\r", "+\t\t\t\t\t\t\treturn TokenNameabstract;\r", "+\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\treturn TokenNameIdentifier;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\tcase 6: // assert\r", "+\t\t\t\t\tif ((data[++index] == 's')\r", "+\t\t\t\t\t\t&& (data[++index] == 's')\r", "+\t\t\t\t\t\t&& (data[++index] == 'e')\r", "+\t\t\t\t\t\t&& (data[++index] == 'r')\r", "+\t\t\t\t\t\t&& (data[++index] == 't')) {\r", "+\t\t\t\t\t\t\tif (assertMode) {\r", "+\t\t\t\t\t\t\t\tcontainsAssertKeyword = true;\r", "+\t\t\t\t\t\t\t\treturn TokenNameassert;\r", "+\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\tuseAssertAsAnIndentifier = true;\r", "+\t\t\t\t\t\t\t\treturn TokenNameIdentifier;\t\t\t\t\t\t\t\t\r", "+\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\treturn TokenNameIdentifier;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\tdefault: \r", "+\t\t\t\t\treturn TokenNameIdentifier;\r", "-\t\t\treturn TokenNameIdentifier;\r", "-\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6428915fec3fff29548a1e83b007066a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "fbe3f3aabed3fd943703368b065a95bc68cf5a8d", "commitAfterChange": "3b51e6fd25bf226c9bb29d6317b71df712cf5255", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "\r public int scanIdentifierOrKeyword() throws InvalidInputException", "signatureAfterChange": "\r public int scanIdentifierOrKeyword() throws InvalidInputException", "diff": ["-\r", "+\tuseAssertAsAnIndentifier = false;\r", "-\t\tcase 'a' : //abstract\r", "-\t\t\tif (length == 8) {\r", "-\t\t\t\tif ((data[++index] == 'b')\r", "-\t\t\t\t\t&& (data[++index] == 's')\r", "-\t\t\t\t\t&& (data[++index] == 't')\r", "-\t\t\t\t\t&& (data[++index] == 'r')\r", "-\t\t\t\t\t&& (data[++index] == 'a')\r", "-\t\t\t\t\t&& (data[++index] == 'c')\r", "-\t\t\t\t\t&& (data[++index] == 't')) {\r", "-\t\t\t\t\treturn TokenNameabstract;\r", "-\t\t\t\t}\r", "+\t\tcase 'a' : \r", "+\t\t\tswitch(length) {\r", "+\t\t\t\tcase 8: //abstract\r", "+\t\t\t\t\tif ((data[++index] == 'b')\r", "+\t\t\t\t\t\t&& (data[++index] == 's')\r", "+\t\t\t\t\t\t&& (data[++index] == 't')\r", "+\t\t\t\t\t\t&& (data[++index] == 'r')\r", "+\t\t\t\t\t\t&& (data[++index] == 'a')\r", "+\t\t\t\t\t\t&& (data[++index] == 'c')\r", "+\t\t\t\t\t\t&& (data[++index] == 't')) {\r", "+\t\t\t\t\t\t\treturn TokenNameabstract;\r", "+\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\treturn TokenNameIdentifier;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\tcase 6: // assert\r", "+\t\t\t\t\tif ((data[++index] == 's')\r", "+\t\t\t\t\t\t&& (data[++index] == 's')\r", "+\t\t\t\t\t\t&& (data[++index] == 'e')\r", "+\t\t\t\t\t\t&& (data[++index] == 'r')\r", "+\t\t\t\t\t\t&& (data[++index] == 't')) {\r", "+\t\t\t\t\t\t\tif (assertMode) {\r", "+\t\t\t\t\t\t\t\tcontainsAssertKeyword = true;\r", "+\t\t\t\t\t\t\t\treturn TokenNameassert;\r", "+\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\tuseAssertAsAnIndentifier = true;\r", "+\t\t\t\t\t\t\t\treturn TokenNameIdentifier;\t\t\t\t\t\t\t\t\r", "+\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\treturn TokenNameIdentifier;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\tdefault: \r", "+\t\t\t\t\treturn TokenNameIdentifier;\r", "-\t\t\treturn TokenNameIdentifier;\r", "-\r"]}], "num": 51723}