{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6b0d7ebce8638174e1a82d4e031e90b6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "077032c9d571373d5fc6fc5c9c2b7f5f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "9cd1ab49783c2213611dcbe2939a387e78b83c79", "commitAfterChange": "92aee8d421610703027ca2a5b652beed8fbe4ac3", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": " public boolean encloses(IJavaElement element)", "signatureAfterChange": " public boolean encloses(IJavaElement element)", "diff": ["-\treturn this.indexOf(fullPath(element), null) >= 0;", "+\tIPackageFragmentRoot root = (IPackageFragmentRoot) element.getAncestor(IJavaElement.PACKAGE_FRAGMENT_ROOT);", "+\tif (root != null && root.isArchive()) {", "+\t\tIPath rootPath = root.getPath();", "+\t\tIPath relativePath = getPath(element, true/*relative path*/);", "+\t\treturn indexOf(relativePath.toString(), rootPath.toString()) >= 0;", "+\t}", "+\treturn this.indexOf(getPath(element, false/*full path*/).toString(), null) >= 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35a88daadb79b526be0592a0daf83cfe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/LocalVariablePattern.java", "commitBeforeChange": "dbf0f1921bd7663446a3551b75da07f65331308a", "commitAfterChange": "5370bd901c777fb2acf3740ef811a811ddc4f0d2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void findIndexMatches(IIndex index, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor progressMonitor) throws IOException", "signatureAfterChange": " public void findIndexMatches(IIndex index, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor progressMonitor) throws IOException", "diff": ["-\tString path = this.localVariable.getPath().toString();", "+    IPackageFragmentRoot root = (IPackageFragmentRoot)this.localVariable.getAncestor(IJavaElement.PACKAGE_FRAGMENT_ROOT);", "+\tString path;", "+    if (root.isArchive()) {", "+        IType type = (IType)this.localVariable.getAncestor(IJavaElement.TYPE);", "+        String filePath = (type.getFullyQualifiedName('/')).replace('.', '/') + SuffixConstants.SUFFIX_STRING_class;", "+        path = root.getPath() + IJavaSearchScope.JAR_FILE_ENTRY_SEPARATOR + filePath;", "+    } else {", "+        path = this.localVariable.getPath().toString();", "+    }"]}], "num": 16706}