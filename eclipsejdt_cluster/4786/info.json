{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef0c5ab74eeb4b6b338172aa31f9e24d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58596410ea96d87c50770db41a533e09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "ea420db048b49292f90061fbe06506a63742e5de", "commitAfterChange": "07210ed7674616bdcd2641f9613679c82ee44c5c", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "\r public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\ttype = BooleanBinding;\r", "+\t\t\tthis.type = BooleanBinding;\r", "-\t\t\ttype = ByteBinding;\r", "+\t\t\tthis.type = ByteBinding;\r", "-\t\t\ttype = CharBinding;\r", "+\t\t\tthis.type = CharBinding;\r", "-\t\t\ttype = DoubleBinding;\r", "+\t\t\tthis.type = DoubleBinding;\r", "-\t\t\ttype = FloatBinding;\r", "+\t\t\tthis.type = FloatBinding;\r", "-\t\t\ttype = IntBinding;\r", "+\t\t\tthis.type = IntBinding;\r", "-\t\t\ttype = LongBinding;\r", "+\t\t\tthis.type = LongBinding;\r", "-\t\t\ttype = scope.getJavaLangString();\r", "+\t\t\tthis.type = scope.getJavaLangString();\r", "-\treturn type;\r", "+\treturn this.type;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d42026a2a18020de0b0f5009cee723d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/processing/JobManager.java", "commitBeforeChange": "7daf62bc284b30571754ce8d7fd5c3a7c9740dcb", "commitAfterChange": "b8c9923212bd9598e5d2ca68e0dc316b81a3eccb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tpublic synchronized void request(IJob job)", "signatureAfterChange": " \t \tpublic synchronized void request(IJob job)", "diff": ["-\t\tint size = awaitingJobs.length;", "-\t\tif (++jobEnd == size) { // when growing, relocate jobs starting at position 0", "-\t\t\tjobEnd -= jobStart;", "-\t\t\tSystem.arraycopy(", "-\t\t\t\tawaitingJobs,", "-\t\t\t\tjobStart,", "-\t\t\t\t(awaitingJobs = new IJob[size * 2]),", "-\t\t\t\t0,", "-\t\t\t\tjobEnd);", "-\t\t\tjobStart = 0;", "+\t\tint size = this.awaitingJobs.length;", "+\t\tif (++this.jobEnd == size) { // when growing, relocate jobs starting at position 0", "+\t\t\tthis.jobEnd -= this.jobStart;", "+\t\t\tSystem.arraycopy(this.awaitingJobs, this.jobStart, this.awaitingJobs = new IJob[size * 2], 0, this.jobEnd);", "+\t\t\tthis.jobStart = 0;", "-\t\tawaitingJobs[jobEnd] = job;", "+\t\tthis.awaitingJobs[this.jobEnd] = job;", "-\t\tthis.notifyAll(); // wake up the background thread if it is waiting", "+\t\tnotifyAll(); // wake up the background thread if it is waiting"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f60da8250ba51e73dd59e4e941147a49", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/CorrectionEngine.java", "commitBeforeChange": "302df05b099c1ea06faca0b00f806513c7db6904", "commitAfterChange": "c661afbb38268ca6f18a772df813f6c69bb9e17c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate void computeCorrections(ICompilationUnit unit, int id, int start, int end, String[] arguments, ICorrectionRequestor requestor)", "signatureAfterChange": " \tprivate void computeCorrections(ICompilationUnit unit, int id, int start, int end, String[] arguments, ICorrectionRequestor requestor)", "diff": ["-\t\t\t\t\tfilter = CLASSES | INTERFACES;", "+\t\t\t\t\tthis.filter = CLASSES | INTERFACES;", "-\t\t\t\t\tfilter = CLASSES;", "+\t\t\t\t\tthis.filter = CLASSES;", "-\t\t\t\t\tfilter = INTERFACES;", "+\t\t\t\t\tthis.filter = INTERFACES;", "-\t\t\t\t\tfilter = CLASSES;", "+\t\t\t\t\tthis.filter = CLASSES;", "-\t\t\t\t\tfilter = CLASSES | INTERFACES;", "+\t\t\t\t\tthis.filter = CLASSES | INTERFACES;", "-\t\t\t\t\tfilter = IMPORT;", "+\t\t\t\t\tthis.filter = IMPORT;", "-\t\t\t\t\tfilter = CLASSES | INTERFACES;", "+\t\t\t\t\tthis.filter = CLASSES | INTERFACES;", "-\t\t\t\t\tfilter = METHOD;", "+\t\t\t\t\tthis.filter = METHOD;", "-\t\t\t\t\tfilter = FIELD;", "+\t\t\t\t\tthis.filter = FIELD;", "-\t\t\t\t\tfilter = FIELD | LOCAL;", "+\t\t\t\t\tthis.filter = FIELD | LOCAL;"]}], "num": 4786}