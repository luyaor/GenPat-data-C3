{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e81ff82b63bff182f04ac2969eacd611", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e7d5ba08144fa0aa9a100384be04001", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "43910be7c5e7874a970515d1dbb3b63c454bc688", "commitAfterChange": "d7d4a2e6181a270380c8726d1367c8cd49a78b6b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " private boolean checkKeyword()", "signatureAfterChange": " private boolean checkKeyword()", "diff": ["-\t\t\t\t&& lastModifiers == ClassFileConstants.AccDefault", "-\t\t\t\t&& CharOperation.prefixEquals(identifierStack[ptr], Keywords.IMPORT)) {", "+\t\t\t\t&& lastModifiers == ClassFileConstants.AccDefault) {", "-\t\t\t\t&& compilationUnit.currentPackage == null", "-\t\t\t\t&& CharOperation.prefixEquals(identifierStack[ptr], Keywords.PACKAGE)) {", "+\t\t\t\t&& compilationUnit.currentPackage == null) {", "-\t\t\tif((lastModifiers & ClassFileConstants.AccPublic) == 0", "-\t\t\t\t&& CharOperation.prefixEquals(identifierStack[ptr], Keywords.PUBLIC)) {", "+\t\t\tif((lastModifiers & ClassFileConstants.AccPublic) == 0) {", "-\t\t\t\t&& (lastModifiers & ClassFileConstants.AccFinal) == 0", "-\t\t\t\t&& CharOperation.prefixEquals(identifierStack[ptr], Keywords.ABSTRACT)) {", "+\t\t\t\t&& (lastModifiers & ClassFileConstants.AccFinal) == 0) {", "-\t\t\t\t&& (lastModifiers & ClassFileConstants.AccFinal) == 0", "-\t\t\t\t&& CharOperation.prefixEquals(identifierStack[ptr], Keywords.FINAL)) {", "+\t\t\t\t&& (lastModifiers & ClassFileConstants.AccFinal) == 0) {", "-\t\t\tif(CharOperation.prefixEquals(identifierStack[ptr], Keywords.CLASS)) {", "-\t\t\t\tkeywords[count++] = Keywords.CLASS;", "-\t\t\t}", "-\t\t\tif((lastModifiers & ClassFileConstants.AccFinal) == 0", "-\t\t\t\t&& CharOperation.prefixEquals(identifierStack[ptr], Keywords.INTERFACE)) {", "+\t\t\t", "+\t\t\tkeywords[count++] = Keywords.CLASS;", "+\t\t\t", "+\t\t\tif((lastModifiers & ClassFileConstants.AccFinal) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4e9eed80c3b1d7bcf608496ed309a47", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "82dc67de142f757f6098e678017a2b32f752c9b7", "commitAfterChange": "5249d37677c0ce4d66ab262efb5c3dd4aa089796", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " boolean areReturnTypesCompatible0(MethodBinding one, MethodBinding two)", "signatureAfterChange": " boolean areReturnTypesCompatible0(MethodBinding one, MethodBinding two)", "diff": ["-\tif (!one.declaringClass.isInterface()) {", "-\t\tif (one.declaringClass.id == TypeIds.T_JavaLangObject)", "-\t\t\treturn two.returnType.isCompatibleWith(one.returnType); // interface methods inherit from Object", "-\t\treturn one.returnType.isCompatibleWith(two.returnType);", "-\t}", "+\tif (!one.declaringClass.isInterface() && one.declaringClass.id == TypeIds.T_JavaLangObject)", "+\t\treturn two.returnType.isCompatibleWith(one.returnType); // interface methods inherit from Object", "-\t// check for methods from Object, every interface inherits from Object", "-\tif (two.declaringClass.id == TypeIds.T_JavaLangObject)", "-\t\treturn one.returnType.isCompatibleWith(two.returnType);", "-", "-\t// both are interfaces, see if they're related", "-\tif (one.declaringClass.implementsInterface(two.declaringClass, true))", "-\t\treturn one.returnType.isCompatibleWith(two.returnType);", "-\tif (two.declaringClass.implementsInterface(one.declaringClass, true))", "-\t\treturn two.returnType.isCompatibleWith(one.returnType);", "-", "-\t// unrelated interfaces... one must be a subtype of the other", "-\treturn one.returnType.isCompatibleWith(two.returnType)", "-\t\t|| two.returnType.isCompatibleWith(one.returnType);", "+\treturn one.returnType.isCompatibleWith(two.returnType);"]}], "num": 57168}