{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "38e329cd850939a524733b09be176c5b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08602d44c96b1d147004a98982cd02d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/CharOperation.java", "commitBeforeChange": "44731467d9fdac9a7d80b255708d1b40800e1d02", "commitAfterChange": "e90133bc2bb6238e9bed10f9407b68636afe0cf9", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public static final boolean pathMatch(char[] pattern, char[] path, boolean isCaseSensitive, char pathSeparator)", "signatureAfterChange": " public static final boolean pathMatch(char[] pattern, char[] path, boolean isCaseSensitive, char pathSeparator)", "diff": ["+", "+\t// special case: pattern foo is equivalent to **\\foo (not absolute)", "+\tboolean freePrefixDoubleStar = pattern[0] != pathSeparator;", "+\t// special case: pattern foo\\ is equivalent to foo\\**", "+\tboolean freeSuffixDoubleStar = pattern[patternLength-1] == pathSeparator;", "+\t\t", "+\t\t\t\t&& !freePrefixDoubleStar", "-\t\t\t\t\t&& pattern[iPattern] == '*' ", "-\t\t\t\t\t&& pattern[iPattern+1] == '*'){", "+\t\t\t\t&& pattern[iPattern] == '*' ", "+\t\t\t\t&& pattern[iPattern+1] == '*'){", "-\t\t\t|| (iPath >= pathLength && iPattern >= patternLength)\t", "-\t\t\t|| (iPattern == patternLength - 2 && pattern[iPattern] == '*' && pattern[iPattern+1] == '*'); ", "+\t\t\t\t|| (iPath >= pathLength && iPattern >= patternLength)\t", "+\t\t\t\t|| (iPattern == patternLength - 2 && pattern[iPattern] == '*' && pattern[iPattern+1] == '*')", "+\t\t\t\t|| (iPattern == patternLength &&  freeSuffixDoubleStar); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c0654f96f9aa22020faf413d4a54678", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/CharOperation.java", "commitBeforeChange": "b8a20093bfb53c812e4e5b346e3aa791a4136ca4", "commitAfterChange": "44731467d9fdac9a7d80b255708d1b40800e1d02", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " public static final boolean match(char[] pattern, int patternStart, int patternLength, char[] name, int nameStart, int nameLength, boolean isCaseSensitive)", "signatureAfterChange": " public static final boolean match(char[] pattern, int patternStart, int patternEnd, char[] name, int nameStart, int nameEnd, boolean isCaseSensitive)", "diff": ["-public static final boolean match(char[] pattern, int patternStart, int patternLength, char[] name, int nameStart, int nameLength, boolean isCaseSensitive) {", "+public static final boolean match(char[] pattern, int patternStart, int patternEnd, char[] name, int nameStart, int nameEnd, boolean isCaseSensitive) {", "-\twhile ((iPattern < patternLength) && (patternChar = pattern[iPattern]) != '*'){", "-\t\tif (iName == nameLength) return false;", "+\twhile ((iPattern < patternEnd) && (patternChar = pattern[iPattern]) != '*'){", "+\t\tif (iName == nameEnd) return false;", "-\tcheckSegment: while (iName < nameLength && iPattern < patternLength){", "+\tcheckSegment: while (iName < nameEnd && iPattern < patternEnd){", "-\treturn (segmentStart == patternLength)", "-\t\t\t|| (iName == nameLength && iPattern == patternLength)\t", "-\t\t\t|| (iPattern == patternLength - 1 && pattern[iPattern] == '*'); ", "+\treturn (segmentStart == patternEnd)", "+\t\t\t|| (iName == nameEnd && iPattern == patternEnd)\t", "+\t\t\t|| (iPattern == patternEnd - 1 && pattern[iPattern] == '*'); "]}], "num": 54406}