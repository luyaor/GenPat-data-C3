{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c37d5ffcd1f32613ecaefadfff99166d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72c485a69e2102300ab050d112b5e053", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9713cc0fc86fbe0881ff90c5290328149c35cbdc", "commitAfterChange": "236485921f70a82e4283431ca8763bf21e25e459", "methodNumberBeforeChange": 1039, "methodNumberAfterChange": 1039, "signatureBeforeChange": " public void test1015()", "signatureAfterChange": " public void test1015()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. WARNING in X.java (at line 3)\\n\" +", "-\t\t\"\tvoid foo1(List l, List<String> ls) {\\n\" +", "-\t\t\"\t          ^^^^\\n\" +", "-\t\t\"List is a raw type. References to generic type List<E> should be parameterized\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. WARNING in X.java (at line 4)\\n\" +", "-\t\t\"\tList<String> ls1 = bar(l, ls);\\n\" +", "-\t\t\"\t                   ^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: Unchecked invocation bar(List, List) of the generic method bar(List<U>, List<V>) of type X\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"3. WARNING in X.java (at line 4)\\n\" +", "-\t\t\"\tList<String> ls1 = bar(l, ls);\\n\" +", "-\t\t\"\t                   ^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<String>\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"4. WARNING in X.java (at line 4)\\n\" +", "-\t\t\"\tList<String> ls1 = bar(l, ls);\\n\" +", "-\t\t\"\t                       ^\\n\" +", "-\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<U>\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"5. WARNING in X.java (at line 5)\\n\" +", "-\t\t\"\tString s = bar(l, ls);\\n\" +", "-\t\t\"\t           ^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: Unchecked invocation bar(List, List) of the generic method bar(List<U>, List<V>) of type X\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"6. ERROR in X.java (at line 5)\\n\" +", "-\t\t\"\tString s = bar(l, ls);\\n\" +", "-\t\t\"\t           ^^^^^^^^^^\\n\" +", "-\t\t\"Type mismatch: cannot convert from List to String\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"7. WARNING in X.java (at line 5)\\n\" +", "-\t\t\"\tString s = bar(l, ls);\\n\" +", "-\t\t\"\t               ^\\n\" +", "-\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<U>\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\"\tvoid foo1(List l, List<String> ls) {\\n\" + ", "+\t\t\"\t          ^^^^\\n\" + ", "+\t\t\"List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\"\tList<String> ls1 = bar(l, ls);\\n\" + ", "+\t\t\"\t                   ^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: Unchecked invocation bar(List, List<String>) of the generic method bar(List<U>, List<V>) of type X\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\"\tList<String> ls1 = bar(l, ls);\\n\" + ", "+\t\t\"\t                   ^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<String>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\"\tList<String> ls1 = bar(l, ls);\\n\" + ", "+\t\t\"\t                       ^\\n\" + ", "+\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<Object>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\"\tString s = bar(l, ls);\\n\" + ", "+\t\t\"\t           ^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: Unchecked invocation bar(List, List<String>) of the generic method bar(List<U>, List<V>) of type X\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"6. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\"\tString s = bar(l, ls);\\n\" + ", "+\t\t\"\t           ^^^^^^^^^^\\n\" + ", "+\t\t\"Type mismatch: cannot convert from List to String\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"7. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\"\tString s = bar(l, ls);\\n\" + ", "+\t\t\"\t               ^\\n\" + ", "+\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<Object>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90fdea88dd2d38eb655a6fffb7cbdd84", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "40f8b37f10f9ab9fcfe2c27230d51f19f97f4e2e", "commitAfterChange": "cbbe8b69b29b99c8c679b98644156abe11f1564d", "methodNumberBeforeChange": 563, "methodNumberAfterChange": 563, "signatureBeforeChange": " \tpublic void test0559()", "signatureAfterChange": " \tpublic void test0559()", "diff": ["+\t// **", "-\t\t\t\t\"\t\tc.setT(Boolean.FALSE); //javac: warning: [unchecked] unchecked\\n\" + ", "+\t\t\t\t\"\t\tc.setT(Boolean.FALSE); // other: warning: [unchecked] unchecked\\n\" + ", "-\t\t\t\t\"\t\tc.t= Boolean.TRUE; // javac: warning: [unchecked] unchecked call\\n\" + ", "+\t\t\t\t\"\t\tc.t= Boolean.TRUE; // other: warning: [unchecked] unchecked call\\n\" + ", "-\t\t\t\"\tc.setT(Boolean.FALSE); //javac: warning: [unchecked] unchecked\\n\" + ", "+\t\t\t\"\tc.setT(Boolean.FALSE); // other: warning: [unchecked] unchecked\\n\" + ", "-\t\t\t\"\tc.t= Boolean.TRUE; // javac: warning: [unchecked] unchecked call\\n\" + ", "+\t\t\t\"\tc.t= Boolean.TRUE; // other: warning: [unchecked] unchecked call\\n\" + "]}], "num": 40297}