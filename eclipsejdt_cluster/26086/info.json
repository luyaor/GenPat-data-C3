{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "24dd50c03bc3da90d485240cabc40e8a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f08e211c31f4b3ad98d541506c71165", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "754fa4fbde45636d73b491b4058d7afa45916b95", "commitAfterChange": "c18da164a48c76451beac3ec6e887a0d096a31a4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic void checkExceptionHandlers( \t\tTypeBinding[] raisedExceptions, \t\tAstNode location, \t\tFlowInfo flowInfo, \t\tBlockScope scope)", "signatureAfterChange": " \t \tpublic void checkExceptionHandlers( \t\tTypeBinding[] raisedExceptions, \t\tAstNode location, \t\tFlowInfo flowInfo, \t\tBlockScope scope)", "diff": ["-\t\tfor (int i = 0; i < raisedCount; i++) {", "+\t\tnextReport: for (int i = 0; i < raisedCount; i++) {", "+\t\t\t\t// only one complaint if same exception declared to be thrown more than once", "+\t\t\t\tfor (int j = 0; j < i; j++) {", "+\t\t\t\t\tif (raisedExceptions[j] == exception) continue nextReport; // already reported ", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e75175a7676d33dd2ffd60b678e0f5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/diagnose/DiagnoseParser.java", "commitBeforeChange": "10cca24df480719d1a06391159cf8b7088d76566", "commitAfterChange": "18a60ba726b78a7a1b2d2cf42c5ddafdb8016d06", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t \tprivate void scopeTrialCheck(int stck[], int stack_top, PrimaryRepairInfo repair, int indx)", "signatureAfterChange": " \t \tprivate void scopeTrialCheck(int stck[], int stack_top, PrimaryRepairInfo repair, int indx)", "diff": ["-\t    for (int i = 0; i < SCOPE_SIZE; i++) {", "+\t    next : for (int i = 0; i < SCOPE_SIZE; i++) {", "+\t                        \tif(Parser.rules_compliance[act] > this.options.sourceLevel) {", "+\t\t\t\t\t\t\t\t \tcontinue next;", "+\t\t\t\t\t\t\t\t}"]}], "num": 26086}