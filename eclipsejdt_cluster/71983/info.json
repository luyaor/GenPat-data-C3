{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9ca5057064473b51f9e8c713a83c9892", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ef5fd5a7438c5f5237d0c4f4adf1d21", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "b64f224a477bcbe9ca6144dc3c1b296938ab0569", "commitAfterChange": "e2a464122cca0e168e5e6a45c115970b861f3e3d", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "\r \tprivate void findLocalMethodDeclarations(\r \t\tchar[] methodName,\r \t\tMethodBinding[] methods,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tReferenceBinding receiverType)", "signatureAfterChange": "\r \tprivate void findLocalMethodDeclarations(\r \t\tchar[] methodName,\r \t\tMethodBinding[] methods,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tReferenceBinding receiverType)", "diff": ["-\t\t\tMethodBinding[] existingMethods = receiverType.availableMethods();\r", "-\t\t\tfor(int i =0, length = existingMethods == null ? 0 : existingMethods.length; i < length ; i++){\r", "-\t\t\t\tMethodBinding existingMethod = existingMethods[i];\r", "-\t\t\t\tif (CharOperation.equals(method.selector, existingMethod.selector, true)\r", "-\t\t\t\t\t&& method.areParametersEqual(existingMethod)){\r", "-\t\t\t\t\tcontinue next;\t\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\r", "-\t\t\t\tObject[] other = (Object[]) methodsFound.elementAt(i);\r", "-\t\t\t\tMethodBinding otherMethod = (MethodBinding) other[0];\r", "+\t\t\t\tMethodBinding otherMethod = (MethodBinding) methodsFound.elementAt(i);\r", "-\r", "-\t\t\t\t\tif (method.declaringClass.isSuperclassOf(otherMethod.declaringClass))\r", "-\t\t\t\t\t\tcontinue next;\r", "-\r", "-\t\t\t\t\tif (otherMethod.declaringClass.isInterface())\r", "-\t\t\t\t\t\tif (method\r", "-\t\t\t\t\t\t\t.declaringClass\r", "-\t\t\t\t\t\t\t.implementsInterface(otherMethod.declaringClass, true))\r", "-\t\t\t\t\t\t\tcontinue next;\r", "-\t\t\t\t\t\t\t\r", "-\t\t\t\t\tif (method.declaringClass.isInterface())\r", "-\t\t\t\t\t\tif(otherMethod\r", "-\t\t\t\t\t\t\t.declaringClass\r", "-\t\t\t\t\t\t\t.implementsInterface(method.declaringClass,true))\r", "-\t\t\t\t\t\t\tcontinue next;\r", "+\t\t\t\t\tcontinue next;\r", "-\t\t\tmethodsFound.add(new Object[]{method, receiverType});\r", "+\t\t\tmethodsFound.add(method);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6bc96d6492c9cf83e26a12bf5b2cd5b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/Tests.java", "commitBeforeChange": "e37796f522b7bb4721626cf54f6fb6424b32950c", "commitAfterChange": "cb73a34d3fbf60bb435ba470954bcb213328d377", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprotected void expectingSpecificProblemsFor(IPath root, Problem[] problems)", "signatureAfterChange": " \tprotected void expectingSpecificProblemsFor(IPath root, Problem[] problems)", "diff": ["+\t\texpectingSpecificProblemsFor(root, problems, false);", "+\t}", "-\t\tProblem[] rootProblems = env.getProblemsFor(root);", "-\t\t\t\tSystem.out.println(\"got pb:\t\tnew Problem(\\\"\" + pb.getLocation() + \"\\\", \\\"\" + pb.getMessage() + \"\\\", \\\"\" + pb.getResourcePath() + \"\\\")\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$", "-\t\t\tassertTrue(\"missing expected problem : \" + problem, false); //$NON-NLS-1$"]}], "num": 71983}