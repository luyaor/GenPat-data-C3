{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3a8c92d074c7719c0e447475cfa85c2f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a884bd2d001084f5b16bf1efb2de269", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "618f3771c49dbf9480ae16a58263680af2b36ad6", "commitAfterChange": "7cfc4523cdcfe787f1d0d2fd75b08c06e5b4b089", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprivate boolean parseParam()", "signatureAfterChange": " \tprotected Object createSingleNameReference()", "diff": ["-\tprivate boolean parseParam() {", "-", "-\t\t// Store current token state", "-\t\tint start = this.tagSourceStart;", "-\t\tint end = this.tagSourceEnd;", "-", "-\t\t\t// Push identifier next", "-\t\t\tint token = readToken();", "-\t\t\tswitch (token) {", "-\t\t\t\tcase TerminalTokens.TokenNameIdentifier :", "-\t\t\t\t\tconsumeToken();", "-\t\t\t\t\tJavadocSingleNameReference argument = new JavadocSingleNameReference(this.scanner.getCurrentIdentifierSource(),", "-\t\t\t\t\t\t\tthis.scanner.getCurrentTokenStartPosition(),", "-\t\t\t\t\t\t\tthis.scanner.getCurrentTokenEndPosition());", "-\t\t\t\t\targument.tagSourceStart = this.tagSourceStart;", "-\t\t\t\t\targument.tagSourceEnd = this.tagSourceEnd;", "-\t\t\t\t\treturn pushParamName(argument);", "-\t\t\t\tcase TerminalTokens.TokenNameEOF :", "-\t\t\t\t\tbreak;", "-\t\t\t\tdefault :", "-\t\t\t\t\tstart = this.scanner.getCurrentTokenStartPosition();", "-\t\t\t\t\tend = getEndPosition();", "-\t\t\t\t\tif (end < start) start = this.tagSourceStart;", "-\t\t\t\t\tbreak;", "-\t\t} catch (InvalidInputException e) {", "-\t\t\tend = getEndPosition();", "-", "-\t\t// Report problem", "-\t\tthis.sourceParser.problemReporter().javadocMissingParamName(start, end);", "-\t\treturn false;", "+\t */", "+\tprotected Object createSingleNameReference() {", "+\t\tJavadocSingleNameReference nameRef = new JavadocSingleNameReference(this.scanner.getCurrentIdentifierSource(),", "+\t\t\t\tthis.scanner.getCurrentTokenStartPosition(),", "+\t\t\t\tthis.scanner.getCurrentTokenEndPosition());", "+\t\tnameRef.tagSourceStart = this.tagSourceStart;", "+\t\tnameRef.tagSourceEnd = this.tagSourceEnd;", "+\t\treturn nameRef;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e40d8af4130f29f4d4244f136b7784b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AnnotationParser.java", "commitBeforeChange": "aabd59e4934a861167bc5ad69597bc9fd97e06dc", "commitAfterChange": "4ed2786f22dd00c9c1f7773433c3548c8c0f6fc3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tvoid parseParam()", "signatureAfterChange": "  \tprivate void parseParam() throws InvalidInputException", "diff": ["-\tvoid parseParam() {", "-\t\t// to be continued", "+\tprivate void parseParam() throws InvalidInputException {", "+", "+\t\t// Store current token state", "+\t\tint start = this.tagSourceStart;", "+\t\tint end = this.tagSourceEnd;", "+\t\t", "+\t\ttry {", "+\t\t\t// Push identifier next", "+\t\t\tint token = readConsumeToken();", "+\t\t\tswitch (token) {", "+\t\t\t\tcase TerminalTokens.TokenNameIdentifier :", "+\t\t\t\t\tAnnotationArgument argument =", "+\t\t\t\t\t\tnew AnnotationArgument(", "+\t\t\t\t\t\t\tthis.scanner.getCurrentIdentifierSource(),", "+\t\t\t\t\t\t\tthis.scanner.getCurrentTokenStartPosition(),", "+\t\t\t\t\t\t\tthis.scanner.getCurrentTokenEndPosition());", "+\t\t\t\t\targument.declarationSourceStart = this.tagSourceStart;", "+\t\t\t\t\targument.declarationSourceEnd = this.tagSourceEnd;", "+\t\t\t\t\tpushParamName(argument);", "+\t\t\t\t\treturn;", "+\t\t\t\tcase TerminalTokens.TokenNameEOF :", "+\t\t\t\t\t//end = scanner.eofPosition-2;", "+\t\t\t\t\tbreak;", "+\t\t\t\tdefault :", "+\t\t\t\t\tstart = scanner.getCurrentTokenStartPosition();", "+\t\t\t\t\tend = scanner.getCurrentTokenEndPosition();", "+\t\t\t\t\tbreak;", "+\t\t\t}", "+\t\t} catch (InvalidInputException e) {", "+\t\t\tend = getEndPosition();", "+\t\t}", "+", "+\t\t// Report problem", "+\t\tthis.sourceParser.problemReporter().annotationMissingParamName(start, end);", "+\t\tconsumeToken();", "+\t}"]}], "num": 41617}