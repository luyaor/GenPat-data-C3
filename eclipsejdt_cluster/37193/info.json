{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e684a70d655cb6d5b19571f133f2b34", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bf323bc5996416580d1446cd9a5f08e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "4dd4298e54cdb8e3a760f2a27e21018a12393e22", "commitAfterChange": "7dddcf3cd8a65acd62db0614dd8c16c0f82c07f1", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": "  \tprivate int printJavadocBlockNodesNewLines(FormatJavadocBlock block, FormatJavadocNode node, int previousEnd)", "signatureAfterChange": "  \tprivate int printJavadocBlockNodesNewLines(FormatJavadocBlock block, FormatJavadocNode node, int previousEnd)", "diff": ["-\t\t    \t\tlength += inlinedBlock.tagEnd - inlinedBlock.sourceStart + 1;  // tag length", "-\t\t\t    \tif (nodeStart > (previousEnd+1)) {", "-\t\t\t    \t\tlength++; // include space between nodes", "-\t\t\t    \t}", "-\t\t\t\t\tthis.scanner.resetTo(text.sourceStart , node.sourceEnd);", "+\t\t\t\t\tif (text != null) {", "+\t\t\t    \t\tlength += inlinedBlock.tagEnd - inlinedBlock.sourceStart + 1;  // tag length", "+\t\t\t\t    \tif (nodeStart > (previousEnd+1)) {", "+\t\t\t\t    \t\tlength++; // include space between nodes", "+\t\t\t\t    \t}", "+\t\t\t\t\t\tthis.scanner.resetTo(text.sourceStart , node.sourceEnd);", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bc6e61e603fc5b1b98c11b93930d8ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBuilder.java", "commitBeforeChange": "ad2da02858ca7c8babcaa54d1755f5d5dc7c4cca", "commitAfterChange": "2800b00fd8a32c02dd22b73112db63e4fdf348f6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic HierarchyBuilder(TypeHierarchy hierarchy) throws JavaModelException", "signatureAfterChange": " \t \tpublic HierarchyBuilder(TypeHierarchy hierarchy) throws JavaModelException", "diff": ["-\t\tSearchableEnvironment searchableEnvironment = project.newSearchableNameEnvironment(unitsToLookInside);", "-\t\tthis.nameLookup = searchableEnvironment.nameLookup;", "-\t\tthis.hierarchyResolver =", "-\t\t\tnew HierarchyResolver(", "-\t\t\t\tsearchableEnvironment,", "-\t\t\t\tproject.getOptions(true),", "-\t\t\t\tthis,", "-\t\t\t\tnew DefaultProblemFactory());", "+\t\tif (project != null) {", "+\t\t\tSearchableEnvironment searchableEnvironment = project.newSearchableNameEnvironment(unitsToLookInside);", "+\t\t\tthis.nameLookup = searchableEnvironment.nameLookup;", "+\t\t\tthis.hierarchyResolver =", "+\t\t\t\tnew HierarchyResolver(", "+\t\t\t\t\tsearchableEnvironment,", "+\t\t\t\t\tproject.getOptions(true),", "+\t\t\t\t\tthis,", "+\t\t\t\t\tnew DefaultProblemFactory());", "+\t\t}"]}], "num": 37193}