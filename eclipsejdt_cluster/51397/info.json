{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1dca74d5a0f699ef9aded6a79e65401a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c46913a35ab57ff413887f088992737", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "376d52c1cdc65e12a1dbf449737ba06d2101c4f4", "commitAfterChange": "7f3c64574901f5a013fb7527a4bb25411dd2afcf", "methodNumberBeforeChange": 276, "methodNumberAfterChange": 276, "signatureBeforeChange": " public void test125()", "signatureAfterChange": " public void test125()", "diff": ["-\tthis.runNegativeTest(", "+\tthis.runConformTest(", "-\t\t\t\"    return one + X.<String>choose(one, two);\\n\" +", "+\t\t\t\"    return one;\\n\" +", "-\t\t\t\"    System.out.println(choose(\\\"a\\\", \\\"b\\\"));\\n\" +", "+\t\t\t\"    System.out.println(choose(\\\"a\\\", \\\"b\\\") + X.<String>choose(\\\"a\\\", \\\"b\\\"));\\n\" +", "-\t\t\t\"}\"},", "-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 3)\\n\" +", "-\t\t\"\treturn one + X.<String>choose(one, two);\\n\" +", "-\t\t\"\t                       ^^^^^^\\n\" +", "-\t\t\"The method choose(String, String) is ambiguous for the type X\\n\" +", "-\t\t\"----------\\n\",", "-\t\tJavacTestOptions.EclipseHasABug.EclipseBug207935);", "+\t\t\t\"}\"", "+\t\t},", "+\t\t\"aa\"", "+\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c50f920d45d1b9100966c9b7bd39a64f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "8913fe5c78a14de5e97c4d6b801f5ed8424bf8a8", "commitAfterChange": "1a3b48d65ad279de125b447111e271aa71010c38", "methodNumberBeforeChange": 190, "methodNumberAfterChange": 190, "signatureBeforeChange": " public void testBug441693other()", "signatureAfterChange": " public void testBug441693other()", "diff": ["-\trunConformTestWithLibs(", "+\trunNegativeTestWithLibs(", "-//\t\t\t\"    @NonNull Foo testWild2(@Nullable List<@Nullable ? extends List<@NonNull Foo>> foos) {\\n\" +", "-//\t\t\t\"        return requireNonNull(foos.get(0)).get(0);\\n\" +", "-//\t\t\t\"    }\\n\" + ", "+\t\t\t\"    @NonNull Foo testWild2(@Nullable List<@Nullable ? extends List<@NonNull Foo>> foos) {\\n\" +", "+\t\t\t\"        return requireNonNull(foos.get(0)).get(0);\\n\" +", "+\t\t\t\"    }\\n\" + ", "-\t\t\"\");", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in Foo.java (at line 20)\\n\" + ", "+\t\t\"\treturn requireNonNull(foos.get(0)).get(0);\\n\" + ", "+\t\t\"\t                      ^^^^\\n\" + ", "+\t\t\"Potential null pointer access: this expression has a \\'@Nullable\\' type\\n\" + ", "+\t\t\"----------\\n\");"]}], "num": 51397}