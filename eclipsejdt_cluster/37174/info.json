{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2e7a3f7a0ef086b358f99277d12a215e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ad264564d77d89d37a0508dc35a7b5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "ecd2d9d0e14c2688e43c7c452930452fe7a77cc0", "commitAfterChange": "9aada9a643f9161f963338b0cc5c0e55d4f0d0cf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\tFlowInfo trueFlowInfo;", "+\t\tFlowInfo trueFlowInfo = flowInfo.initsWhenTrue().copy();", "-\t\t\ttrueFlowInfo = flowInfo.initsWhenTrue().copy().setReachMode(FlowInfo.UNREACHABLE); // revert", "-\t\t} else {", "-\t\t\ttrueFlowInfo = flowInfo.initsWhenTrue().copy();", "+\t\t\ttrueFlowInfo.setReachMode(FlowInfo.UNREACHABLE); ", "-\t\tFlowInfo falseFlowInfo;", "+\t\tFlowInfo falseFlowInfo = flowInfo.initsWhenFalse().copy();", "-\t\t\tfalseFlowInfo = flowInfo.initsWhenFalse().copy().setReachMode(FlowInfo.UNREACHABLE); // revert", "-\t\t} else {", "-\t\t\tfalseFlowInfo = flowInfo.initsWhenFalse().copy();", "+\t\t\tfalseFlowInfo.setReachMode(FlowInfo.UNREACHABLE); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86bee626b5c8d7291405dfef83623d6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "949f1bbe84622faa807866412d26a5bdb0f64fe4", "commitAfterChange": "ecd2d9d0e14c2688e43c7c452930452fe7a77cc0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\tFlowInfo trueFlowInfo = flowInfo.initsWhenTrue().copy();", "-\t\tif (isConditionOptimizedFalse) trueFlowInfo.setReachMode(FlowInfo.CHECK_POT_INIT_FAKE_REACHABLE);", "+\t\tFlowInfo trueFlowInfo;", "+\t\tif (isConditionOptimizedFalse) {", "+\t\t\ttrueFlowInfo = flowInfo.initsWhenTrue().copy().setReachMode(FlowInfo.UNREACHABLE); // revert", "+\t\t} else {", "+\t\t\ttrueFlowInfo = flowInfo.initsWhenTrue().copy();", "+\t\t}", "-\t\tFlowInfo falseFlowInfo = flowInfo.initsWhenFalse().copy();", "-\t\tif (isConditionOptimizedTrue) falseFlowInfo.setReachMode(FlowInfo.CHECK_POT_INIT_FAKE_REACHABLE);", "+\t\tFlowInfo falseFlowInfo;", "+\t\tif (isConditionOptimizedTrue) {", "+\t\t\tfalseFlowInfo = flowInfo.initsWhenFalse().copy().setReachMode(FlowInfo.UNREACHABLE); // revert", "+\t\t} else {", "+\t\t\tfalseFlowInfo = flowInfo.initsWhenFalse().copy();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbc4486e77a7285b83e3db2e38c029f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/IfStatement.java", "commitBeforeChange": "ecd2d9d0e14c2688e43c7c452930452fe7a77cc0", "commitAfterChange": "9aada9a643f9161f963338b0cc5c0e55d4f0d0cf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\tFlowInfo thenFlowInfo, elseFlowInfo;", "-", "+\t\tFlowInfo thenFlowInfo = flowInfo.initsWhenTrue().copy();", "-\t\t\t//thenFlowInfo = conditionInfo.initsWhenTrue().copy().setReachMode(FlowInfo.CHECK_POT_INIT_FAKE_REACHABLE);", "-\t\t\tthenFlowInfo = flowInfo.initsWhenTrue().copy().setReachMode(FlowInfo.UNREACHABLE); // revert", "-\t\t\t", "-\t\t} else {", "-\t\t\tthenFlowInfo = flowInfo.initsWhenTrue().copy();", "+\t\t\tthenFlowInfo.setReachMode(FlowInfo.UNREACHABLE); ", "+\t\tFlowInfo elseFlowInfo = flowInfo.initsWhenFalse().copy();", "-\t\t\t//elseFlowInfo = conditionInfo.initsWhenFalse().copy().setReachMode(FlowInfo.CHECK_POT_INIT_FAKE_REACHABLE);", "-\t\t\telseFlowInfo = flowInfo.initsWhenFalse().copy().setReachMode(FlowInfo.UNREACHABLE); // revert", "-\t\t} else {", "-\t\t\telseFlowInfo = flowInfo.initsWhenFalse().copy();", "+\t\t\telseFlowInfo.setReachMode(FlowInfo.UNREACHABLE); "]}], "num": 37174}