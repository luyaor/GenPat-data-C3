{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f8e0e34837d87f8bae885750a17b6df8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d581b571c725cc8e1a961fd54670309", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingKey.java", "commitBeforeChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "commitAfterChange": "c021c50efca4c234ec58241ed1fc82f6871e98bd", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t Binding getArrayBinding(TypeBinding binding, CompilationUnitResolver resolver)", "signatureAfterChange": " \t Binding getArrayBinding(int dim, TypeBinding binding, CompilationUnitResolver resolver)", "diff": ["+\t  */", "+\t Binding getArrayBinding(int dim, TypeBinding binding, CompilationUnitResolver resolver) {", "+\t \tif (binding == null) return null;", "+\t \tif (dim == 0) return binding;", "+\t\treturn resolver.lookupEnvironment.createArrayType(binding, dim);", "+\t}", "-\t  */", "-\t Binding getArrayBinding(TypeBinding binding, CompilationUnitResolver resolver) {", "-\t\tchar[] tokenSource = this.scanner.getTokenSource();", "-\t\tint dimension = tokenSource.length / 2;", "-\t\treturn resolver.lookupEnvironment.createArrayType(binding, dimension);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9960d9ed536ccc48c9f581282c09369c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingKey.java", "commitBeforeChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "commitAfterChange": "c021c50efca4c234ec58241ed1fc82f6871e98bd", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tBinding getBinaryBinding(CompilationUnitResolver resolver)", "signatureAfterChange": " \tBinding getBinaryBinding(CompilationUnitResolver resolver)", "diff": ["+\t */", "+\tBinding getBinaryBinding(CompilationUnitResolver resolver) {", "+\t\tTypeBinding binding = resolver.lookupEnvironment.getType(this.compoundName);", "+\t\treturn getArrayBinding(this.dimension, binding, resolver);", "+\t}", "-\t  */", "-\tBinding getBinaryBinding(CompilationUnitResolver resolver) {", "-\t\tTypeBinding binding = resolver.lookupEnvironment.getType(this.compoundName);", "-\t \tif (this.scanner.nextToken() == BindingKeyScanner.ARRAY)", "-\t\t\treturn getArrayBinding(binding, resolver);", "-\t \telse", "-\t \t\treturn binding;", "-\t}"]}], "num": 54898}