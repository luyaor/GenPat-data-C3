{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "794d09cd14d3a048a2ed6d88345c27b8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2069e19665c3610ba9c3b8a5094f9375", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/core/formatter/CodeFormatterApplication.java", "commitBeforeChange": "7d879fb1ebcea4aeee6c7768254a09d17ebfe5f5", "commitAfterChange": "c2646812d22906feca88c2f52911ca7c4eae2299", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tprivate Properties readConfig(String filename)", "signatureAfterChange": " \tprivate Properties readConfig(String filename)", "diff": ["+\t\tFile configFile = new File(filename);", "-\t\t\tstream = new BufferedInputStream(new FileInputStream(new File(filename)));", "+\t\t\tstream = new BufferedInputStream(new FileInputStream(configFile));", "-\t\t\tUtil.log(e, Messages.bind(Messages.ConfigFileReadingError));", "+\t\t\tString canonicalPath = null;", "+\t\t\ttry {", "+\t\t\t\tcanonicalPath = configFile.getCanonicalPath();", "+\t\t\t} catch(IOException e2) {", "+\t\t\t\tcanonicalPath = configFile.getAbsolutePath();", "+\t\t\t}", "+\t\t\tString errorMessage;", "+\t\t\tif (!configFile.exists() && !configFile.isAbsolute()) {", "+\t\t\t\terrorMessage = Messages.bind(Messages.ConfigFileNotFoundErrorTryFullPath, new Object[] {", "+\t\t\t\t\tcanonicalPath,", "+\t\t\t\t\tSystem.getProperty(\"user.dir\") //$NON-NLS-1$", "+\t\t\t\t});", "+", "+\t\t\t} else {", "+\t\t\t\terrorMessage = Messages.bind(Messages.ConfigFileReadingError, canonicalPath);", "+\t\t\t}", "+\t\t\tUtil.log(e, errorMessage);", "+\t\t\tSystem.err.println(errorMessage);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f076eaafcc5eedd9838c37f06d996eb6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/core/formatter/CodeFormatterApplication.java", "commitBeforeChange": "7d879fb1ebcea4aeee6c7768254a09d17ebfe5f5", "commitAfterChange": "c2646812d22906feca88c2f52911ca7c4eae2299", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprivate File[] processCommandLine(String[] argsArray)", "signatureAfterChange": "  \tprivate File[] processCommandLine(String[] argsArray)", "diff": ["-\t\t\t\t\t\tdisplayHelp(Messages.bind(Messages.CommandLineErrorFile, currentArg));", "+\t\t\t\t\t\tString canonicalPath;", "+\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\tcanonicalPath = file.getCanonicalPath();", "+\t\t\t\t\t\t} catch(IOException e2) {", "+\t\t\t\t\t\t\tcanonicalPath = file.getAbsolutePath();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tString errorMsg = file.isAbsolute()?", "+\t\t\t\t\t\t\t\t\t\t  Messages.bind(Messages.CommandLineErrorFile, canonicalPath):", "+\t\t\t\t\t\t\t\t\t\t  Messages.bind(Messages.CommandLineErrorFileTryFullPath, canonicalPath);", "+\t\t\t\t\t\tdisplayHelp(errorMsg);"]}], "num": 9581}