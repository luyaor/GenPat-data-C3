{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "465d62fb6eceef389bd5b22fb0348f75", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a8163b905daa56d1c62691c88fc5591", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "fdc1a95914ad55bbfb8c709b84d743d5d21781f2", "commitAfterChange": "255c17210a3eb3218269e27dd263bf73946a0d2e", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " void computeInheritedMethods(ReferenceBinding superclass, ReferenceBinding[] superInterfaces)", "signatureAfterChange": " void computeInheritedMethods(ReferenceBinding superclass, ReferenceBinding[] superInterfaces)", "diff": ["-\t\t\tMethodBinding[] nonVisible = (MethodBinding[]) nonVisibleDefaultMethods.get(inheritedMethod.selector);", "-\t\t\tif (nonVisible != null)", "-\t\t\t\tfor (int i = 0, l = nonVisible.length; i < l; i++)", "-\t\t\t\t\tif (areMethodsCompatible(nonVisible[i], inheritedMethod))", "-\t\t\t\t\t\tcontinue nextMethod;", "+\t\t\t\tMethodBinding[] nonVisible = (MethodBinding[]) nonVisibleDefaultMethods.get(inheritedMethod.selector);", "+\t\t\t\tif (nonVisible != null)", "+\t\t\t\t\tfor (int i = 0, l = nonVisible.length; i < l; i++)", "+\t\t\t\t\t\tif (areMethodsCompatible(nonVisible[i], inheritedMethod))", "+\t\t\t\t\t\t\tcontinue nextMethod;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acf662310ce0ed7ff43cdc4a5f2b00d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/PackageBinding.java", "commitBeforeChange": "4915e7337ff3d3a037d50fa25171594a7d1743a5", "commitAfterChange": "38fd702e92bc9dac5e95232940541493c9cc3922", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  public Binding getTypeOrPackage(char[] name)", "signatureAfterChange": "  public Binding getTypeOrPackage(char[] name)", "diff": ["+\t\treferenceBinding = (ReferenceBinding) BinaryTypeBinding.resolveType(referenceBinding, this.environment, false /* no raw conversion for now */);", "+\t\tif (referenceBinding.isNestedType()) {", "+\t\t\treturn new ProblemReferenceBinding(new char[][]{name}, referenceBinding, ProblemReasons.InternalNameProvided);", "+\t\t}", "-\t\t\treferenceBinding = (ReferenceBinding) BinaryTypeBinding.resolveType(referenceBinding, this.environment, false /* no raw conversion for now */);", "-\t\t\tif (referenceBinding.isNestedType()) {", "-\t\t\t\treturn new ProblemReferenceBinding(new char[][]{name}, referenceBinding, ProblemReasons.InternalNameProvided);", "-\t\t\t}", "+\t\t// referenceBinding is a MissingType, will return it if no package is found"]}], "num": 11243}