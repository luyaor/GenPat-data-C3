{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "00a336b3889d096fa9af1103f740091c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d3adec53aa16916c1c18d5e408c025f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "dfd8d4647bad1465cda928961972e854fc071249", "commitAfterChange": "31c3266cfb06f3143b63cd3aca05524ef5cd1755", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r public void indexAll(IProject project)", "signatureAfterChange": "\r public void indexAll(IProject project)", "diff": ["-\t\tIClasspathEntry[] entries;\r", "-\t\tif (javaProject.isOpen()){\r", "-\t\t\tentries = javaProject.getResolvedClasspath(true);\t\r", "-\t\t} else {\r", "-\t\t\t// if project isn't yet initialized, do not want to trigger CP initializers inside background thread 13395)\r", "-\t\t\tentries = javaProject.getRawClasspath();\r", "-\t\t}\r", "+\t\t// NOTE: force to resolve CP variables before calling indexer - 19303, so that initializers\r", "+\t\t// will be run in the current thread.\r", "+\t\tIClasspathEntry[] entries = javaProject.getResolvedClasspath(true);\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c480352e946806de6127202a694b4f76", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "1cd1fea34c119884685b6777331037373bf6b27a", "commitAfterChange": "c12bfc38761a088f10ebcff83607c26a8f59fb18", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tpublic static IJavaElement determineIfOnClasspath(IResource resource, IJavaProject project)", "signatureAfterChange": " \tpublic static IJavaElement determineIfOnClasspath(IResource resource, IJavaProject project)", "diff": ["-\t\t\tIClasspathEntry[] entries =", "-\t\t\t\torg.eclipse.jdt.internal.core.util.Util.isJavaLikeFileName(resourcePath.lastSegment())", "-\t\t\t\t\t? project.getRawClasspath() // JAVA file can only live inside SRC folder (on the raw path)", "+\t\t\tboolean isJavaLike = org.eclipse.jdt.internal.core.util.Util.isJavaLikeFileName(resourcePath.lastSegment());", "+\t\t\tIClasspathEntry[] entries = isJavaLike ? project.getRawClasspath() // JAVA file can only live inside SRC folder (on the raw path)", "+\t\t\t\t\t\tif (isJavaLike) ", "+\t\t\t\t\t\t\treturn null;"]}], "num": 62082}