{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cfdbf10c013cffc60b81fb8ebf6f9781", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f4cb1411019b2f5d8cc1f3fbd5b1f03", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "83b433cefe204b4efddb34a5fec23235369a79e2", "commitAfterChange": "f0ad677ecfc3fb2aae0264f20715771e958071e0", "methodNumberBeforeChange": 819, "methodNumberAfterChange": 819, "signatureBeforeChange": " public void test0798()", "signatureAfterChange": " public void test0798()", "diff": ["-// FAIL ERRMSG", "-\tif (this.complianceLevel >= ClassFileConstants.JDK1_8)", "-\t\treturn;", "+\t\t\tthis.complianceLevel < ClassFileConstants.JDK1_8 ? ", "-\t\t\t\"----------\\n\");", "+\t\t\t\"----------\\n\" :", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\t\"\tprivate static <T extends Comparable<? super T>> T max(T... elems)\\n\" + ", "+\t\t\t\t\"\t                                                            ^^^^^\\n\" + ", "+\t\t\t\t\"Type safety: Potential heap pollution via varargs parameter elems\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 16)\\n\" + ", "+\t\t\t\t\"\tSystem.out.println(max(1, 2.0, new BigDecimal(Math.PI)));\\n\" + ", "+\t\t\t\t\"\t                   ^^^\\n\" + ", "+\t\t\t\t\"The method max(T...) in the type X is not applicable for the arguments (int, double, BigDecimal)\\n\" + ", "+\t\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82ebcac36eee720d609df200aa81568c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 819, "methodNumberAfterChange": 819, "signatureBeforeChange": " public void test0798()", "signatureAfterChange": " public void test0798()", "diff": ["+\t\tthis.complianceLevel < ClassFileConstants.JDK1_7 ?", "-\t\t\"----------\\n\");", "+\t\t\"----------\\n\" : ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tprivate static <T extends Comparable<? super T>> T max(T... elems)\\n\" + ", "+\t\t\t\"\t                                                            ^^^^^\\n\" + ", "+\t\t\t\"Type safety: Potential heap pollution via varargs parameter elems\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 16)\\n\" + ", "+\t\t\t\"\tSystem.out.println(max(1, 2.0, new BigDecimal(Math.PI)));\\n\" + ", "+\t\t\t\"\t                   ^^^\\n\" + ", "+\t\t\t\"Bound mismatch: The generic method max(T...) of type X is not applicable for the arguments (Integer, Double, BigDecimal). The inferred type Number&Comparable<?> is not a valid substitute for the bounded parameter <T extends Comparable<? super T>>\\n\" + ", "+\t\t\t\"----------\\n\");"]}], "num": 59976}