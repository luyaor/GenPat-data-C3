{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cd893fe1ae93535d9bab74475a0c8a9e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "360bdcffe3b9c1f13835e7e4b7a575fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "8b61d97704a2b67ed3d29404b8692bdbf30b8b5d", "commitAfterChange": "7fa6d6b6f60d0d2345e743063241c3eb3452b00f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-protected void matchReportReference(ASTNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException {", "+protected void matchReportReference(ASTNode reference, IJavaElement element, Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException {", "-\tmatch = locator.newTypeReferenceMatch(element, accuracy, reference);", "+\tmatch = locator.newTypeReferenceMatch(element, elementBinding, accuracy, reference);", "-\t\tmatchReportReference((QualifiedNameReference) reference, element, accuracy, locator);", "+\t\tmatchReportReference((QualifiedNameReference) reference, element, elementBinding, accuracy, locator);", "-\t\tmatchReportReference((QualifiedTypeReference) reference, element, accuracy, locator);", "+\t\tmatchReportReference((QualifiedTypeReference) reference, element, elementBinding, accuracy, locator);", "-\t\tmatchReportReference((ArrayTypeReference) reference, element, accuracy, locator);", "+\t\tmatchReportReference((ArrayTypeReference) reference, element, elementBinding, accuracy, locator);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc8cb4a9edc02beb68254de3c4078ccd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/AbstractASTTests.java", "commitBeforeChange": "16b78b6454e42a0590c9ecd60e78baf24089ed4a", "commitAfterChange": "36136185bf542d894b0fbf5b972ff6940ca39b5c", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tprotected ASTNode[] buildASTs(String newContents, ICompilationUnit cu, boolean reportErrors) throws JavaModelException", "signatureAfterChange": " \t \tprotected ASTNode[] buildASTs(String newContents, ICompilationUnit cu, boolean reportErrors, boolean enableStatementRecovery) throws JavaModelException", "diff": ["+\t", "+\tprotected ASTNode[] buildASTs(String newContents, ICompilationUnit cu, boolean reportErrors, boolean enableStatementRecovery) throws JavaModelException {", "-\t\t\tunit = cu.reconcile(AST.JLS3, reportErrors, null, null);", "+\t\t\tunit = cu.reconcile(AST.JLS3, reportErrors, enableStatementRecovery, null, null);", "+\t\t\tparser.setStatementsRecovery(enableStatementRecovery);"]}], "num": 48920}