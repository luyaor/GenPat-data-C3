{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ca95d3fae9cad2a06ff8307711b5bb8e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1670b22dcaef02609819abbed4b9e201", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest.java", "commitBeforeChange": "4d6296b6ebb5111ab8825f79519da9de471cce30", "commitAfterChange": "c7f6d299ed8c40f551e9a2897713e6aad0e44d7d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\tTestSuite suite = new TestSuite(JavadocTest.class.getName());", "-\t\tfor (int i=0; i<allTestClasses.size(); i++) {", "-\t\t\tsuite.addTest(buildTestSuite((Class) allTestClasses.get(i)));", "+\t\tTestSuite ts = new TestSuite(JavadocTest.class.getName());", "+\t", "+\t\t// Reset forgotten subsets of tests", "+\t\tTestCase.TESTS_PREFIX = null;", "+\t\tTestCase.TESTS_NAMES = null;", "+\t\tTestCase.TESTS_NUMBERS = null;", "+\t\tTestCase.TESTS_RANGE = null;", "+\t", "+\t\tfor (int i = 0, l=allTestClasses.size(); i < l; i++) {", "+\t\t\tClass testClass = (Class) allTestClasses.get(i);", "+\t", "+\t\t\t// call the suite() method and add the resulting suite to the suite", "+\t\t\ttry {", "+\t\t\t\tMethod suiteMethod = testClass.getDeclaredMethod(\"suite\", new Class[0]); //$NON-NLS-1$", "+\t\t\t\tTest suite = (Test)suiteMethod.invoke(null, new Object[0]);", "+\t\t\t\tts.addTest(suite);", "+\t\t\t} catch (IllegalAccessException e) {", "+\t\t\t\te.printStackTrace();", "+\t\t\t} catch (InvocationTargetException e) {", "+\t\t\t\te.getTargetException().printStackTrace();", "+\t\t\t} catch (NoSuchMethodException e) {", "+\t\t\t\te.printStackTrace();", "+\t\t\t}", "-//\t\tsuite.addTest(buildTestSuite());", "-\t\treturn suite;", "+\t\treturn ts;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "552c99b08a9fe285b4cafc719436c1e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/AllPerformanceTests.java", "commitBeforeChange": "4d4e17b21e8cd2e718905d1f6af33dcc6796501f", "commitAfterChange": "a6a5866450241565c9a2db7e59a81c5e9f3105c8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["+\t}", "-\t\tPerformanceTestSuite suite = new PerformanceTestSuite(AllPerformanceTests.class.getName());", "-\t\tsuite.addTestSuite(FullSourceWorkspaceTests.class);", "-\t\tsuite.addTestSuite(BuildBatchCompilerTest.class);", "-\t\tsuite.addTestSuite(NameLookupTests2.class);", "-\t\treturn suite;", "+\t\tPerformanceTestSuite perfSuite = new PerformanceTestSuite(AllPerformanceTests.class.getName());", "+\t\tClass[] testSuites = getAllTestClasses();", "+\t\tint length = testSuites.length;", "+\t\tfor (int i = 0; i < length; i++) {", "+\t\t\tClass testClass = testSuites[i];", "+\t\t\t// call the suite() method and add the resulting suite to the suite", "+\t\t\ttry {", "+\t\t\t\tMethod suiteMethod = testClass.getDeclaredMethod(", "+\t\t\t\t\t\t\"suite\", new Class[0]); //$NON-NLS-1$", "+\t\t\t\tTest suite = (Test) suiteMethod.invoke(null, new Object[0]);", "+\t\t\t\tperfSuite.addTest(suite);", "+\t\t\t} catch (IllegalAccessException e) {", "+\t\t\t\te.printStackTrace();", "+\t\t\t} catch (InvocationTargetException e) {", "+\t\t\t\te.getTargetException().printStackTrace();", "+\t\t\t} catch (NoSuchMethodException e) {", "+\t\t\t\te.printStackTrace();", "+\t\t\t}", "+\t\t}", "+\t\treturn perfSuite;"]}], "num": 7891}