{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "54c620b647887bc04faca7fbd93c461a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "571dab586724aa9828f205f32788f414", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "e6099120ee9021152f84e60105066d4964c2db21", "commitAfterChange": "82631a98caad8b28e9cefb217339d51e64ef47f9", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 47, "signatureBeforeChange": "\r \t\r \tpublic char[] findSource(ClassFile classFile)", "signatureAfterChange": "\r \t\r \tpublic char[] findSource(ClassFile classFile)", "diff": ["-\t\t\t\tsource = sourceMapper.findSource(classFile.getType());\r", "-\t\t\t}\r", "-\t\t\tif (source == null) {\r", "-\t\t\t\t// default to opening the class file\r", "-\t\t\t\tString sourceFromBuffer = classFile.getSource();\r", "-\t\t\t\tif (sourceFromBuffer != null) {\r", "-\t\t\t\t\tsource = sourceFromBuffer.toCharArray();\r", "+\t\t\t\tIType type = classFile.getType();\r", "+\t\t\t\tif (classFile.isOpen() && type.getDeclaringType() == null) {\r", "+\t\t\t\t\tsource = sourceMapper.findSource(type);\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\tClassFileReader reader = this.classFileReader(type);\r", "+\t\t\t\t\tif (reader != null) {\r", "+\t\t\t\t\t\tsource = sourceMapper.findSource(type, reader);\r", "+\t\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6568028f245257dccab37285c12828c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "0bd04abb8575a021cf8905c773ca1d2199f31c53", "commitAfterChange": "1bf6db68524b43c8e140351de0b8d9940aee5925", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic TypeBinding convertToRawType(TypeBinding type)", "signatureAfterChange": "  \tpublic TypeBinding convertToRawType(TypeBinding type)", "diff": ["+\t\t\t\tcase Binding.RAW_TYPE :", "+\t\t\t\t\tneedToConvert = !((ReferenceBinding)originalType).isStatic();", "+\t\t\tReferenceBinding originalGeneric = (ReferenceBinding) originalType.erasure();", "-\t\t\t\tconvertedType = environment().createRawType((ReferenceBinding) originalType.erasure(), convertedEnclosing);", "+\t\t\t\tconvertedType = environment().createRawType(originalGeneric, convertedEnclosing);", "-\t\t\t\tconvertedType = createParameterizedType((ReferenceBinding) originalType.erasure(), null, convertedEnclosing);", "+\t\t\t\tif (originalGeneric.isStatic())", "+\t\t\t\t\tconvertedType = createParameterizedType(originalGeneric, null, convertedEnclosing);", "+\t\t\t\telse ", "+\t\t\t\t\tconvertedType = environment().createRawType(originalGeneric, convertedEnclosing);"]}], "num": 22244}