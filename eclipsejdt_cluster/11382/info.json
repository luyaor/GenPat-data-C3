{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b68f6c315b867245013b973fc9ac1d40", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a53d6f581db227917215a93f736ed2d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "847811aba616fe8ef974c21595a3a8f5a0b4a4ab", "commitAfterChange": "4dbfc96b81c8ea986466921f071c4e6377836a2c", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 80, "signatureBeforeChange": " \tpublic static void setReadOnly(IResource resource, boolean readOnly)", "signatureAfterChange": " \tpublic static void setReadOnly(IResource resource, boolean readOnly)", "diff": ["-\t}", "+\t */", "-\t\tResourceAttributes resourceAttributes = resource.getResourceAttributes();", "-\t\tif (resourceAttributes == null) return; // not supported on this platform for this resource", "-\t\tresourceAttributes.setReadOnly(readOnly);", "-\t\ttry {", "-\t\t\tresource.setResourceAttributes(resourceAttributes);", "-\t\t} catch (CoreException e) {", "-\t\t\t// ignore", "+\t\tif (isReadOnlySupported()) {", "+\t\t\tResourceAttributes resourceAttributes = resource.getResourceAttributes();", "+\t\t\tif (resourceAttributes == null) return; // not supported on this platform for this resource", "+\t\t\tresourceAttributes.setReadOnly(readOnly);", "+\t\t\ttry {", "+\t\t\t\tresource.setResourceAttributes(resourceAttributes);", "+\t\t\t} catch (CoreException e) {", "+\t\t\t\t// ignore", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2e4582336d39ee3e20842a7f938ed6f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/RoundEnvImpl.java", "commitBeforeChange": "0451f7d8d4c6c8405b9315cd6272871fc556bba4", "commitAfterChange": "99792a3ac5be202887d314558a46b5851f3a5997", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \t@Override \tpublic Set<? extends Element> getRootElements()", "signatureAfterChange": "  \t@Override \tpublic Set<? extends Element> getRootElements()", "diff": ["-\t\tSet<Element> elements = new HashSet<Element>(_units.length);", "-\t\tfor (CompilationUnitDeclaration unit : _units) {", "-\t\t\tif (null == unit.scope || null == unit.scope.topLevelTypes)", "-\t\t\t\tcontinue;", "-\t\t\tfor (SourceTypeBinding binding : unit.scope.topLevelTypes) {", "-\t\t\t\tElement element = _factory.newElement(binding);", "-\t\t\t\tif (null == element) {", "-\t\t\t\t\tthrow new IllegalArgumentException(\"Top-level type binding could not be converted to element: \" + binding); //$NON-NLS-1$", "+\t\tif (_rootElements == null) {", "+\t\t\tSet<Element> elements = new HashSet<Element>(_units.length);", "+\t\t\tfor (CompilationUnitDeclaration unit : _units) {", "+\t\t\t\tif (null == unit.scope || null == unit.scope.topLevelTypes)", "+\t\t\t\t\tcontinue;", "+\t\t\t\tfor (SourceTypeBinding binding : unit.scope.topLevelTypes) {", "+\t\t\t\t\tElement element = _factory.newElement(binding);", "+\t\t\t\t\tif (null == element) {", "+\t\t\t\t\t\tthrow new IllegalArgumentException(\"Top-level type binding could not be converted to element: \" + binding); //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t\telements.add(element);", "-\t\t\t\telements.add(element);", "-\t\t}", "-\t\tif (this._binaryTypes != null) {", "-\t\t\tfor (BinaryTypeBinding typeBinding : _binaryTypes) {", "-\t\t\t\tTypeElement element = (TypeElement)_factory.newElement(typeBinding);", "-\t\t\t\tif (null == element) {", "-\t\t\t\t\tthrow new IllegalArgumentException(\"Top-level type binding could not be converted to element: \" + typeBinding); //$NON-NLS-1$", "+\t\t\tif (this._binaryTypes != null) {", "+\t\t\t\tfor (BinaryTypeBinding typeBinding : _binaryTypes) {", "+\t\t\t\t\tTypeElement element = (TypeElement)_factory.newElement(typeBinding);", "+\t\t\t\t\tif (null == element) {", "+\t\t\t\t\t\tthrow new IllegalArgumentException(\"Top-level type binding could not be converted to element: \" + typeBinding); //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t\telements.add(element);", "-\t\t\t\telements.add(element);", "+\t\t\t_rootElements = elements;", "-\t\treturn elements;", "+\t\treturn _rootElements;"]}], "num": 11382}