{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "27ed0e11018143eab960c2472766d08d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ed5036257732277e282200117205a14", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "f4ae30ee64cb68925e4cce6d6bbe9028d7c3e161", "commitAfterChange": "0123af92e87cd6973f84900ca6492fde5723608b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " private int decodeElementValueForJavaLangAnnotationRetention(int offset)", "signatureAfterChange": " private int decodeElementValueForJavaLangAnnotationRetention(int offset)", "diff": ["-\t\t\treadOffset += 2;", "+\t\t\tchar[] typeName = utf8At(utf8Offset + 3, u2At(utf8Offset + 1));", "+\t\t\ttypeName = Signature.toCharArray(typeName);", "+\t\t\tCharOperation.replace(typeName, '/', '.');", "+\t\t\tchar[][] qualifiedTypeName = CharOperation.splitOn('.', typeName);", "+\t\t\treadOffset += 2;", "+\t\t\tutf8Offset = this.constantPoolOffsets[u2At(readOffset)];", "+\t\t\tif (qualifiedTypeName.length == 4 && CharOperation.equals(qualifiedTypeName, TypeConstants.JAVA_LANG_ANNOTATION_RETENTIONPOLICY)) {", "+\t\t\t\tthis.tagBits |= Annotation.getRetentionPolicy(constName);", "+\t\t\t}", "-\t\t\treadOffset += decodeAnnotation(readOffset);", "+\t\t\treadOffset = decodeAnnotation(readOffset);", "-\t\t\t\treadOffset = decodeElementValueForJavaLangAnnotationRetention(readOffset);", "+\t\t\t\treadOffset = decodeElementValue(readOffset); // retention policy cannot be in an array initializer"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed6ad959e4a6cc38b9835c1fb52cc132", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "f4ae30ee64cb68925e4cce6d6bbe9028d7c3e161", "commitAfterChange": "0123af92e87cd6973f84900ca6492fde5723608b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " private int decodeElementValueForJavaLangAnnotationTarget(int offset)", "signatureAfterChange": " private int decodeElementValueForJavaLangAnnotationTarget(int offset)", "diff": ["-\t\t\treadOffset += 2;", "+\t\t\tchar[] typeName = utf8At(utf8Offset + 3, u2At(utf8Offset + 1));", "+\t\t\ttypeName = Signature.toCharArray(typeName);", "+\t\t\tCharOperation.replace(typeName, '/', '.');", "+\t\t\tchar[][] qualifiedTypeName = CharOperation.splitOn('.', typeName);", "+\t\t\treadOffset += 2;", "+\t\t\tutf8Offset = this.constantPoolOffsets[u2At(readOffset)];", "-\t\t\tthis.tagBits |= Annotation.getTargetElementType(constName);", "+\t\t\tif (qualifiedTypeName.length == 4 && CharOperation.equals(qualifiedTypeName, TypeConstants.JAVA_LANG_ANNOTATION_ELEMENTTYPE)) {", "+\t\t\t\tthis.tagBits |= Annotation.getTargetElementType(constName);", "+\t\t\t}", "-\t\t\treadOffset += decodeAnnotation(readOffset);", "+\t\t\treadOffset = decodeAnnotation(readOffset);"]}], "num": 14237}