{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "410132c65f33a22c6b1a849f99927f6e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cc2b923b3cde3df36706b0895cc6800", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "f5186f4bb592c82c031d71e3ac997120db3572db", "commitAfterChange": "e5922a5706d1abdae05b12aa57fc816aa6feb6e1", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 11, "signatureBeforeChange": " TypeBinding clearedOf(TypeVariableBinding variable)", "signatureAfterChange": "  public TypeBinding eliminateTypeVariable(TypeVariableBinding variable)", "diff": ["+public TypeBinding eliminateTypeVariable(TypeVariableBinding variable) {", "+\tif ((this.tagBits & TagBits.HasTypeVariable) == 0) {", "+\t\treturn this;", "+\t}", "+\tif (isReferencing(variable)) {", "+\t\treturn new RawTypeBinding(this.type, this.enclosingType, this.environment);", "+\t}", "+\treturn this;", "+}", "-}", "-TypeBinding clearedOf(TypeVariableBinding variable) {", "-\tif (uses(variable)) {", "-\t\tint argsNb;", "-\t\tTypeBinding[] newArguments = new TypeBinding[argsNb = this.arguments.length];", "-\t\tfor (int i = 0; i < argsNb; i++) {", "-\t\t\tif (this.arguments[i].uses(variable)) {", "-\t\t\t\treturn new RawTypeBinding(this.type, this.enclosingType, this.environment);", "-\t\t\t}", "-\t\t\tnewArguments[i] = this.arguments[i].clearedOf(variable);", "-\t\t}", "-\t\treturn new ParameterizedTypeBinding(this.type, newArguments, ", "-\t\t\t\tthis.enclosingType, this.environment);", "-\t}", "-\treturn this;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65f7bb57b364de15feb9e629f2c3ff7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "f5186f4bb592c82c031d71e3ac997120db3572db", "commitAfterChange": "e5922a5706d1abdae05b12aa57fc816aa6feb6e1", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 32, "signatureBeforeChange": "\t  boolean uses(TypeVariableBinding variable)", "signatureAfterChange": "  public boolean isReferencing(TypeVariableBinding variable)", "diff": ["+", "+public boolean isReferencing(TypeVariableBinding variable) {", "+\tint argsNb = this.arguments.length;", "+\tif ((this.tagBits & TagBits.HasTypeVariable) != 0) {", "+\t\tfor (int i = 0; i < argsNb; i++) {", "+\t\t\tif (this.arguments[i] == variable) {", "+\t\t\t\treturn true;", "+\t\t\t}", "+\t\t}", "+\t\t// two separate passes to cut recursion for <V extends J<V, W>, W extends J<V, W>>", "+\t\tfor (int i = 0; i < argsNb; i++) {", "+\t\t\tif (this.arguments[i].isReferencing(variable)) {", "+\t\t\t\treturn true;", "+\t\t\t}", "+\t\t}", "+\t}", "+\treturn false;", "+}", "-", "-boolean uses(TypeVariableBinding variable) {", "-\tint argsNb = this.arguments.length;", "-\tfor (int i = 0; i < argsNb; i++) {", "-\t\tif (this.arguments[i] == variable || this.arguments[i].uses(variable)) {", "-\t\t\treturn true;", "-\t\t}", "-\t}", "-\treturn false;", "-}"]}], "num": 43541}