{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4915f161839998f778f2f57cb240ab18", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "657ab63665563555f8aa99366ba1087e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b89ad18e17834e64930a830c92b5e2241f9a8b44", "commitAfterChange": "d9605208e25375e966739effbd053a969138c830", "methodNumberBeforeChange": 252, "methodNumberAfterChange": 252, "signatureBeforeChange": " \tpublic void test0243()", "signatureAfterChange": " \tpublic void test0243()", "diff": ["+\t\tString expectedCompilerLog = (this.complianceLevel == ClassFileConstants.JDK1_6)?", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. WARNING in SubTypes.java (at line 5)\\n\" + ", "+\t\t\t\t\"\t@Override public X foo() { return new X(); }\\n\" + ", "+\t\t\t\t\"\t                   ^^^^^\\n\" + ", "+\t\t\t\t\"Duplicate method foo() in type B\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in SubTypes.java (at line 5)\\n\" + ", "+\t\t\t\t\"\t@Override public X foo() { return new X(); }\\n\" + ", "+\t\t\t\t\"\t                   ^^^^^\\n\" + ", "+\t\t\t\t\"Name clash: The method foo() of type B has the same erasure as foo() of type X but does not override it\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. ERROR in SubTypes.java (at line 5)\\n\" + ", "+\t\t\t\t\"\t@Override public X foo() { return new X(); }\\n\" + ", "+\t\t\t\t\"\t                   ^^^^^\\n\" + ", "+\t\t\t\t\"Name clash: The method foo() of type B has the same erasure as foo() of type X but does not override it\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"4. ERROR in SubTypes.java (at line 5)\\n\" + ", "+\t\t\t\t\"\t@Override public X foo() { return new X(); }\\n\" + ", "+\t\t\t\t\"\t                   ^^^^^\\n\" + ", "+\t\t\t\t\"The method foo() of type B must override or implement a supertype method\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"5. WARNING in SubTypes.java (at line 6)\\n\" + ", "+\t\t\t\t\"\t@Override public B foo() { return this; }\\n\" + ", "+\t\t\t\t\"\t                   ^^^^^\\n\" + ", "+\t\t\t\t\"Duplicate method foo() in type B\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"6. ERROR in SubTypes.java (at line 9)\\n\" + ", "+\t\t\t\t\"\t@Override public X foo() { return new X(); }\\n\" + ", "+\t\t\t\t\"\t                 ^\\n\" + ", "+\t\t\t\t\"The return type is incompatible with A.foo()\\n\" + ", "+\t\t\t\t\"----------\\n\":", "+\t\t\t\t\t\"----------\\n\" +", "+\t\t\t\t\t\"1. ERROR in SubTypes.java (at line 5)\\n\" +", "+\t\t\t\t\t\"\t@Override public X foo() { return new X(); }\\n\" +", "+\t\t\t\t\t\"\t                   ^^^^^\\n\" +", "+\t\t\t\t\t\"Duplicate method foo() in type B\\n\" +", "+\t\t\t\t\t\"----------\\n\" +", "+\t\t\t\t\t\"2. ERROR in SubTypes.java (at line 6)\\n\" +", "+\t\t\t\t\t\"\t@Override public B foo() { return this; }\\n\" +", "+\t\t\t\t\t\"\t                   ^^^^^\\n\" +", "+\t\t\t\t\t\"Duplicate method foo() in type B\\n\" +", "+\t\t\t\t\t\"----------\\n\" +", "+\t\t\t\t\t\"3. ERROR in SubTypes.java (at line 9)\\n\" +", "+\t\t\t\t\t\"\t@Override public X foo() { return new X(); }\\n\" +", "+\t\t\t\t\t\"\t                 ^\\n\" +", "+\t\t\t\t\t\"The return type is incompatible with A.foo()\\n\" +", "+\t\t\t\t\t\"----------\\n\";", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. ERROR in SubTypes.java (at line 5)\\n\" +", "-\t\t\t\"\t@Override public X foo() { return new X(); }\\n\" +", "-\t\t\t\"\t                   ^^^^^\\n\" +", "-\t\t\t\"Duplicate method foo() in type B\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"2. ERROR in SubTypes.java (at line 6)\\n\" +", "-\t\t\t\"\t@Override public B foo() { return this; }\\n\" +", "-\t\t\t\"\t                   ^^^^^\\n\" +", "-\t\t\t\"Duplicate method foo() in type B\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"3. ERROR in SubTypes.java (at line 9)\\n\" +", "-\t\t\t\"\t@Override public X foo() { return new X(); }\\n\" +", "-\t\t\t\"\t                 ^\\n\" +", "-\t\t\t\"The return type is incompatible with A.foo()\\n\" +", "-\t\t\t\"----------\\n\");", "+\t\t\texpectedCompilerLog);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e471b9a3f2aeb65f568b6e29ae913143", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "0d3b917e085a30ae0d0e62e1fdd9fed7538807f0", "commitAfterChange": "76b6a3cfd736c0a5d2fa443496ebcce87b457034", "methodNumberBeforeChange": 252, "methodNumberAfterChange": 252, "signatureBeforeChange": " \tpublic void test0243()", "signatureAfterChange": " \tpublic void test0243()", "diff": ["-\t\tString expectedCompilerLog = (this.complianceLevel == ClassFileConstants.JDK1_6)?", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"1. WARNING in SubTypes.java (at line 5)\\n\" + ", "-\t\t\t\t\"\t@Override public X foo() { return new X(); }\\n\" + ", "-\t\t\t\t\"\t                   ^^^^^\\n\" + ", "-\t\t\t\t\"Duplicate method foo() in type B\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"2. ERROR in SubTypes.java (at line 5)\\n\" + ", "-\t\t\t\t\"\t@Override public X foo() { return new X(); }\\n\" + ", "-\t\t\t\t\"\t                   ^^^^^\\n\" + ", "-\t\t\t\t\"Name clash: The method foo() of type B has the same erasure as foo() of type X but does not override it\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"3. ERROR in SubTypes.java (at line 5)\\n\" + ", "-\t\t\t\t\"\t@Override public X foo() { return new X(); }\\n\" + ", "-\t\t\t\t\"\t                   ^^^^^\\n\" + ", "-\t\t\t\t\"Name clash: The method foo() of type B has the same erasure as foo() of type X but does not override it\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"4. ERROR in SubTypes.java (at line 5)\\n\" + ", "-\t\t\t\t\"\t@Override public X foo() { return new X(); }\\n\" + ", "-\t\t\t\t\"\t                   ^^^^^\\n\" + ", "-\t\t\t\t\"The method foo() of type B must override or implement a supertype method\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"5. WARNING in SubTypes.java (at line 6)\\n\" + ", "-\t\t\t\t\"\t@Override public B foo() { return this; }\\n\" + ", "-\t\t\t\t\"\t                   ^^^^^\\n\" + ", "-\t\t\t\t\"Duplicate method foo() in type B\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"6. ERROR in SubTypes.java (at line 9)\\n\" + ", "-\t\t\t\t\"\t@Override public X foo() { return new X(); }\\n\" + ", "-\t\t\t\t\"\t                 ^\\n\" + ", "-\t\t\t\t\"The return type is incompatible with A.foo()\\n\" + ", "-\t\t\t\t\"----------\\n\":", "-\t\t\t\t\t\"----------\\n\" +", "-\t\t\t\t\t\"1. ERROR in SubTypes.java (at line 5)\\n\" +", "-\t\t\t\t\t\"\t@Override public X foo() { return new X(); }\\n\" +", "-\t\t\t\t\t\"\t                   ^^^^^\\n\" +", "-\t\t\t\t\t\"Duplicate method foo() in type B\\n\" +", "-\t\t\t\t\t\"----------\\n\" +", "-\t\t\t\t\t\"2. ERROR in SubTypes.java (at line 6)\\n\" +", "-\t\t\t\t\t\"\t@Override public B foo() { return this; }\\n\" +", "-\t\t\t\t\t\"\t                   ^^^^^\\n\" +", "-\t\t\t\t\t\"Duplicate method foo() in type B\\n\" +", "-\t\t\t\t\t\"----------\\n\" +", "-\t\t\t\t\t\"3. ERROR in SubTypes.java (at line 9)\\n\" +", "-\t\t\t\t\t\"\t@Override public X foo() { return new X(); }\\n\" +", "-\t\t\t\t\t\"\t                 ^\\n\" +", "-\t\t\t\t\t\"The return type is incompatible with A.foo()\\n\" +", "-\t\t\t\t\t\"----------\\n\";", "-\t\t\texpectedCompilerLog);", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in SubTypes.java (at line 5)\\n\" + ", "+\t\t\t\"\t@Override public X foo() { return new X(); }\\n\" + ", "+\t\t\t\"\t                   ^^^^^\\n\" + ", "+\t\t\t\"Duplicate method foo() in type B\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in SubTypes.java (at line 6)\\n\" + ", "+\t\t\t\"\t@Override public B foo() { return this; }\\n\" + ", "+\t\t\t\"\t                   ^^^^^\\n\" + ", "+\t\t\t\"Duplicate method foo() in type B\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in SubTypes.java (at line 9)\\n\" + ", "+\t\t\t\"\t@Override public X foo() { return new X(); }\\n\" + ", "+\t\t\t\"\t                 ^\\n\" + ", "+\t\t\t\"The return type is incompatible with A.foo()\\n\" + ", "+\t\t\t\"----------\\n\");"]}], "num": 8863}