{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc0ee16c3d756777ac14761631929f39", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "015dffa84da8ceb61fc93e35505dbc68", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "bea7b508525f70d680963772996546f2bcf8018f", "commitAfterChange": "6612336f81825afdf894aa053e2e886c83842e87", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tpublic boolean isPertinentToApplicability()", "signatureAfterChange": " \t \tpublic boolean isPertinentToApplicability(TypeBinding targetType)", "diff": ["-\tpublic boolean isPertinentToApplicability() {", "-\t\treturn this.valueIfTrue.isPertinentToApplicability() && this.valueIfFalse.isPertinentToApplicability();", "+\tpublic boolean isPertinentToApplicability(TypeBinding targetType) {", "+\t\treturn this.valueIfTrue.isPertinentToApplicability(targetType) && this.valueIfFalse.isPertinentToApplicability(targetType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2af7a852068e104974512163a79ce809", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tpublic boolean isPertinentToApplicability(TypeBinding targetType)", "signatureAfterChange": " \t \tpublic boolean isPertinentToApplicability(TypeBinding targetType, MethodBinding method)", "diff": ["-\tpublic boolean isPertinentToApplicability(TypeBinding targetType) {", "-\t\treturn this.valueIfTrue.isPertinentToApplicability(targetType) && this.valueIfFalse.isPertinentToApplicability(targetType);", "+\tpublic boolean isPertinentToApplicability(TypeBinding targetType, MethodBinding method) {", "+\t\treturn this.valueIfTrue.isPertinentToApplicability(targetType, method) ", "+\t\t\t\t&& this.valueIfFalse.isPertinentToApplicability(targetType, method);"]}], "num": 56269}