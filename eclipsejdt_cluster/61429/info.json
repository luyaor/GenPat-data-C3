{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "20c18d3915dd04348113dbb365427367", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36bf9c3ef77a028c14cd6d3b371698a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "dab1a89bdffb9307ae4c2241fdb7098caf50a7eb", "commitAfterChange": "df26c679ec361eae61785b6b440639645b574764", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void testExternalFolder5() throws Exception", "signatureAfterChange": " public void testExternalFolder5() throws Exception", "diff": ["-\t\tjavaProject = createJavaProject(\"P\", new String[0], new String[] {externalLib}, \"\");", "+\t\ttry {", "+\t\t\tjavaProject = createJavaProject(\"P\", new String[0], new String[] {externalLib}, \"\");", "+\t\t}", "+\t\tcatch (Exception e) {", "+\t\t\tIFolder folder = getFolder(externalLib);", "+\t\t\tSystem.out.println(\"----------  This information is logged for debugging purposes as this test fails sporadically.---------\");", "+\t\t\tSystem.out.println(\"Failing when creating Link folder for: \" + externalFolder);", "+\t\t\tSystem.out.println(\"Existing? \" + folder.exists());", "+\t\t\tIProject externalFolderProject = JavaModelManager.getExternalManager().getExternalFoldersProject();", "+\t\t\tIFile externalProjectFile = externalFolderProject.getFile(\".project\");", "+\t\t\tif (externalProjectFile.exists()) {", "+\t\t\t\tSystem.out.println(\"External Folder Project exists with following content:\");", "+\t\t\t\tBufferedInputStream bs = new BufferedInputStream(externalProjectFile.getContents());", "+\t\t\t\tint available = 0;", "+\t\t\t\twhile ((available = bs.available()) > 0) {", "+\t\t\t\t\tbyte[] contents = new byte[available];", "+\t\t\t\t\tbs.read(contents);", "+\t\t\t\t\tSystem.out.println(new String(contents));", "+\t\t\t\t}", "+\t\t\t\tbs.close();", "+\t\t\t}", "+\t\t\telse {", "+\t\t\t\tSystem.out.println(\"External folders project doesn't exist.\");", "+\t\t\t}", "+\t\t\tSystem.out.println(\"----------  Debug information ends ---------\");", "+\t\t\tthrow e;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5022e325a468b5312bb8393f29f69db6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "332b12dab64d69e675fc72b27f59b5836c156c5c", "commitAfterChange": "0790094c582259a11cb5775cf9802758597e2f7f", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void testExternalFolder5() throws Exception", "signatureAfterChange": " public void testExternalFolder5() throws Exception", "diff": ["-\t\tjavaProject = createJavaProject(\"P\", new String[0], new String[] {externalLib}, \"\");", "+\t\ttry {", "+\t\t\tjavaProject = createJavaProject(\"P\", new String[0], new String[] {externalLib}, \"\");", "+\t\t}", "+\t\tcatch (Exception e) {", "+\t\t\tIFolder folder = getFolder(externalLib);", "+\t\t\tSystem.out.println(\"----------  This information is logged for debugging purposes as this test fails sporadically.---------\");", "+\t\t\tSystem.out.println(\"Failing when creating Link folder for: \" + externalFolder);", "+\t\t\tSystem.out.println(\"Existing? \" + folder.exists());", "+\t\t\tIProject externalFolderProject = JavaModelManager.getExternalManager().getExternalFoldersProject();", "+\t\t\tIFile externalProjectFile = externalFolderProject.getFile(\".project\");", "+\t\t\tif (externalProjectFile.exists()) {", "+\t\t\t\tSystem.out.println(\"External Folder Project exists with following content:\");", "+\t\t\t\tBufferedInputStream bs = new BufferedInputStream(externalProjectFile.getContents());", "+\t\t\t\tint available = 0;", "+\t\t\t\twhile ((available = bs.available()) > 0) {", "+\t\t\t\t\tbyte[] contents = new byte[available];", "+\t\t\t\t\tbs.read(contents);", "+\t\t\t\t\tSystem.out.println(new String(contents));", "+\t\t\t\t}", "+\t\t\t\tbs.close();", "+\t\t\t}", "+\t\t\telse {", "+\t\t\t\tSystem.out.println(\"External folders project doesn't exist.\");", "+\t\t\t}", "+\t\t\tSystem.out.println(\"----------  Debug information ends ---------\");", "+\t\t\tthrow e;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f37028c18f6f71196033adc8d80c4730", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "f52073dea443f015a25c1e86414c261d3ec5f33a", "commitAfterChange": "189e4902a8cd4c72cdcb57f23d61ddb627236e43", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void testExternalFolder5() throws Exception", "signatureAfterChange": " public void testExternalFolder5() throws Exception", "diff": ["+", "-\t\tIJavaProject javaProject = createJavaProject(\"P\", new String[0], new String[] {externalLib}, \"\");", "+\t\tIJavaProject javaProject = null;", "+\t\ttry {", "+\t\t\tjavaProject = createJavaProject(\"P\", new String[0], new String[] {externalLib}, \"\");", "+\t\t}", "+\t\tcatch (Exception e) {", "+\t\t\tIFolder folder = getFolder(externalLib);", "+\t\t\tSystem.out.println(\"----------  This information is logged for debugging purposes as this test fails sporadically.---------\");", "+\t\t\tSystem.out.println(\"Failing when creating Link folder for: \" + externalFolder);", "+\t\t\tSystem.out.println(\"Existing? \" + folder.exists());", "+\t\t\tIProject externalFolderProject = JavaModelManager.getExternalManager().getExternalFoldersProject();", "+\t\t\tIFile externalProjectFile = externalFolderProject.getFile(\".project\");", "+\t\t\tif (externalProjectFile.exists()) {", "+\t\t\t\tSystem.out.println(\"External Folder Project exists with following content:\");", "+\t\t\t\tBufferedInputStream bs = new BufferedInputStream(externalProjectFile.getContents());", "+\t\t\t\tint available = 0;", "+\t\t\t\twhile ((available = bs.available()) > 0) {", "+\t\t\t\t\tbyte[] contents = new byte[available];", "+\t\t\t\t\tbs.read(contents);", "+\t\t\t\t\tSystem.out.println(new String(contents));", "+\t\t\t\t}", "+\t\t\t\tbs.close();", "+\t\t\t}", "+\t\t\telse {", "+\t\t\t\tSystem.out.println(\"External folders project doesn't exist.\");", "+\t\t\t}", "+\t\t\tSystem.out.println(\"----------  Debug information ends ---------\");", "+\t\t\tthrow e;", "+\t\t}"]}], "num": 61429}