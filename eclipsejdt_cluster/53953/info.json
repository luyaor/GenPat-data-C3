{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e9b92d27b8d16c45dd0e3cc0e65bfe70", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fe7628b9eb45c1731605f55c982a691", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ClassFileMatchLocator.java", "commitBeforeChange": "4a7fb72faa1d4eb35981dd799c06dbffe9837a2f", "commitAfterChange": "af607e2e1ad6576e50200e327ea9acd540ed1ad7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " void matchAnnotations(SearchPattern pattern, MatchLocator locator, ClassFile classFile, IBinaryType binaryType) throws CoreException", "signatureAfterChange": " private void matchAnnotations(SearchPattern pattern, MatchLocator locator, ClassFile classFile, IBinaryType binaryType) throws CoreException", "diff": ["-void matchAnnotations(SearchPattern pattern, MatchLocator locator, ClassFile classFile, IBinaryType binaryType) throws CoreException {", "+private void matchAnnotations(SearchPattern pattern, MatchLocator locator, ClassFile classFile, IBinaryType binaryType) throws CoreException {", "-\t\tSearchMatch match = new TypeReferenceMatch(classFileBinaryType, SearchMatch.A_ACCURATE, -1, 0, false, locator.getParticipant(), locator.currentPossibleMatch.resource);", "+\t\tTypeReferenceMatch match = new TypeReferenceMatch(classFileBinaryType, SearchMatch.A_ACCURATE, -1, 0, false, locator.getParticipant(), locator.currentPossibleMatch.resource);", "+\t\t// TODO 3.4 M7 (frederic) - bug 209996: see how create the annotation handle from the binary and put it in the local element", "+\t\tmatch.setLocalElement(null);", "-\t\t\t\t\tSearchMatch match = new TypeReferenceMatch(methodHandle, SearchMatch.A_ACCURATE, -1, 0, false, locator.getParticipant(), locator.currentPossibleMatch.resource);", "+\t\t\t\t\tTypeReferenceMatch match = new TypeReferenceMatch(methodHandle, SearchMatch.A_ACCURATE, -1, 0, false, locator.getParticipant(), locator.currentPossibleMatch.resource);", "+\t\t\t\t\t// TODO 3.4 M7 (frederic) - bug 209996: see how create the annotation handle from the binary and put it in the local element", "+\t\t\t\t\tmatch.setLocalElement(null);", "-\t\t\t\t\tSearchMatch match = new TypeReferenceMatch(fieldHandle, SearchMatch.A_ACCURATE, -1, 0, false, locator.getParticipant(), locator.currentPossibleMatch.resource);", "+\t\t\t\t\tTypeReferenceMatch match = new TypeReferenceMatch(fieldHandle, SearchMatch.A_ACCURATE, -1, 0, false, locator.getParticipant(), locator.currentPossibleMatch.resource);", "+\t\t\t\t\t// TODO 3.4 M7 (frederic) - bug 209996: see how create the annotation handle from the binary and put it in the local element", "+\t\t\t\t\tmatch.setLocalElement(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71a15b8d0242033d0e216d4c772cc00f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ClassFileMatchLocator.java", "commitBeforeChange": "150ea6aad0e3f07df1c56f34e2968d5c4e914a0c", "commitAfterChange": "e91110df42d468297a7f0f4f917c63937b06463a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " void matchAnnotations(SearchPattern pattern, MatchLocator locator, ClassFile classFile, IBinaryType binaryType) throws CoreException", "signatureAfterChange": " void matchAnnotations(SearchPattern pattern, MatchLocator locator, ClassFile classFile, IBinaryType binaryType) throws CoreException", "diff": ["-\t\tlocator.reportBinaryMemberDeclaration(null, classFileBinaryType, null, binaryType, SearchMatch.A_ACCURATE);", "+\t\tSearchMatch match = new TypeReferenceMatch(classFileBinaryType, SearchMatch.A_ACCURATE, -1, 0, false, locator.getParticipant(), locator.currentPossibleMatch.resource);", "+\t\tlocator.report(match);", "-\t\t\t\t\tlocator.reportBinaryMemberDeclaration(null, methodHandle, null, binaryType, SearchMatch.A_ACCURATE);", "+\t\t\t\t\tSearchMatch match = new TypeReferenceMatch(methodHandle, SearchMatch.A_ACCURATE, -1, 0, false, locator.getParticipant(), locator.currentPossibleMatch.resource);", "+\t\t\t\t\tlocator.report(match);", "-\t\t\t\t\tlocator.reportBinaryMemberDeclaration(null, fieldHandle, null, binaryType, SearchMatch.A_ACCURATE);", "+\t\t\t\t\tSearchMatch match = new TypeReferenceMatch(fieldHandle, SearchMatch.A_ACCURATE, -1, 0, false, locator.getParticipant(), locator.currentPossibleMatch.resource);", "+\t\t\t\t\tlocator.report(match);"]}], "num": 53953}