{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0fcb521efab4c8a2538c6b1a0cfa8375", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d2198cd3157a3b4860d7486dac3a31c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LocalVariableBinding.java", "commitBeforeChange": "23f99b8ee2d416cf9b0622bf3ddf2ea4961ce8f4", "commitAfterChange": "5388a4d8d85e37aca7900d6712dbfdecbd3eda4d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic char[] computeUniqueKey(boolean isLeaf)", "signatureAfterChange": " \tpublic char[] computeUniqueKey(boolean isLeaf)", "diff": ["+\t\t\t} else if (referenceContext instanceof LambdaExpression) {", "+\t\t\t\tMethodBinding methodBinding = ((LambdaExpression) referenceContext).binding;", "+\t\t\t\tif (methodBinding != null) {", "+\t\t\t\t\tbuffer.append(methodBinding.computeUniqueKey(false/*not a leaf*/));", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0519d25d8d0f59e0a8b3f17c07cc799", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "03aab1ff69aae2de16de283aaf6df2cafa77af82", "commitAfterChange": "0c0e9f808d4509f3cefc470c2105f7ba1290fdb7", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": "  \tprivate void computeExpectedTypes(ASTNode parent, ASTNode node, Scope scope)", "signatureAfterChange": "  \tprivate void computeExpectedTypes(ASTNode parent, ASTNode node, Scope scope)", "diff": ["+\t\t\t} else if (scope.methodScope().referenceContext instanceof LambdaExpression) {", "+\t\t\t\tMethodBinding methodBinding = ((LambdaExpression) scope.methodScope().referenceContext).getMethodBinding();", "+\t\t\t\tTypeBinding binding = methodBinding  == null ? null : methodBinding.returnType;", "+\t\t\t\tif (binding != null) {", "+\t\t\t\t\taddExpectedType(binding, scope);", "+\t\t\t\t}"]}], "num": 19708}