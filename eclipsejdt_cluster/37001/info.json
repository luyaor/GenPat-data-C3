{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aa1ed246c7a3e6d849ff19749d0bc570", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c8a4fb6915ecfc43e5308338a123fd2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReturnStatement.java", "commitBeforeChange": "62b97f10b8bb4123dfea4bccabc125ecea6ba019", "commitAfterChange": "8e77108c42837d2f8e34e3f8fd4f8eea8e97b2f7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " void checkAgainstNullAnnotation(BlockScope scope, int nullStatus)", "signatureAfterChange": " void checkAgainstNullAnnotation(BlockScope scope, FlowContext flowContext, int nullStatus)", "diff": ["-void checkAgainstNullAnnotation(BlockScope scope, int nullStatus) {", "+void checkAgainstNullAnnotation(BlockScope scope, FlowContext flowContext, int nullStatus) {", "-\t\t\tchar[][] annotationName = scope.environment().getNonNullAnnotationName();", "-\t\t\tscope.problemReporter().nullityMismatch(this.expression, methodBinding.returnType, nullStatus, annotationName);", "+\t\t\tflowContext.recordNullityMismatch(scope, this.expression, nullStatus, methodBinding.returnType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afc3249727a6b8d3372d7b86f4b0963f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern.java", "commitBeforeChange": "4043b8a88c35a2c1612858cff67743727f25247b", "commitAfterChange": "6b8da2bd2bb1367c9817dbe3821476ed638f0906", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public TypeReferencePattern(char[] qualification, char[] simpleName, char[] signature, boolean fromJavaElement, int matchRule)", "signatureAfterChange": " public TypeReferencePattern(char[] qualification, char[] simpleName, String signature, boolean fromJavaElement, int matchRule)", "diff": ["-public TypeReferencePattern(char[] qualification, char[] simpleName, char[] signature, boolean fromJavaElement, int matchRule) {", "+public TypeReferencePattern(char[] qualification, char[] simpleName, String signature, boolean fromJavaElement, int matchRule) {", "-\tif (signature != null) {", "-\t\tthis.typeSignature = signature;", "-\t\tCharOperation.replace(this.typeSignature, '/', '.');", "-\t}", "-\tthis.declaration = fromJavaElement;", "+\tif (signature != null) computeSignature(signature);"]}], "num": 37001}