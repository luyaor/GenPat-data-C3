{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a5575797360ca29505e4d70a72fa9a2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a87981097b146a2f95506126b02a4641", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "9ee78f50bb7fb9d70095ea7ff2d9f2e27d840c37", "commitAfterChange": "b6410432af18704990f18fa69a09dd7a76e8fb04", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " protected void matchReportReference(QualifiedTypeReference qTypeRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(QualifiedTypeReference qTypeRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["+", "+\t// Create search match to report", "+\tmatch = locator.newTypeReferenceMatch(element, accuracy, qTypeRef);", "+", "+\t\t\t\t\tmatch.setOffset(start);", "+\t\t\t\t\tmatch.setLength(end-start+1);", "-\t\t\t\t\tmatchReportReference(qTypeRef, element, accuracy, start, end, lastIndex, refBinding, locator);", "+\t\t\t\t\tmatchReportReference(qTypeRef, lastIndex, refBinding, locator);", "-\tlocator.reportAccurateTypeReference(qTypeRef, this.pattern.simpleName, element, accuracy);", "+\tlocator.reportAccurateTypeReference(match, qTypeRef, this.pattern.simpleName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad610ae4f037fa62ad8a726b30158423", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public boolean bodyStartsAtHeaderEnd()", "signatureAfterChange": " public boolean bodyStartsAtHeaderEnd()", "diff": ["-\t\t\treturn typeDeclaration.bodyStart == typeDeclaration.sourceEnd+1;", "+\t\t\tif(typeDeclaration.typeParameters == null) {", "+\t\t\t\treturn typeDeclaration.bodyStart == typeDeclaration.sourceEnd+1;", "+\t\t\t} else {", "+\t\t\t\treturn typeDeclaration.bodyStart == typeDeclaration.typeParameters[typeDeclaration.typeParameters.length-1].sourceEnd+1;", "+\t\t\t}"]}], "num": 49375}