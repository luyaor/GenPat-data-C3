{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3acf1b6914e6b65b36d0a2940ef58cd3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3280bbfd0441aa35f7d6a5ec6e54c806", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "07a7e8072bdec094e9ef52b674b1aac8f1f20d15", "commitAfterChange": "6b047504a49d2679fa08264f4459dab0ba213ade", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public synchronized Index recreateIndex(IPath containerPath)", "signatureAfterChange": " public synchronized Index recreateIndex(IPath containerPath)", "diff": ["+\tString containerPathString = containerPath.getDevice() == null ? containerPath.toString() : containerPath.toOSString();", "-\t\t\tUtil.verbose(\"-> recreating index: \"+indexLocation+\" for path: \"+containerPath.toOSString()); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\tindex = new Index(indexLocation, containerPath.toString(), false /*reuse index file*/); //$NON-NLS-1$", "+\t\t\tUtil.verbose(\"-> recreating index: \"+indexLocation+\" for path: \"+containerPathString); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tindex = new Index(indexLocation, containerPathString, false /*reuse index file*/); //$NON-NLS-1$", "-\t\t\tUtil.verbose(\"-> failed to recreate index for path: \"+containerPath.toOSString()); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tUtil.verbose(\"-> failed to recreate index for path: \"+containerPathString); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dc6a1089b0819038793de582ae238a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "fe25f265c04b05b78a3922c802443d0f290eb28d", "commitAfterChange": "24d226ada8d61f965d94976697c07601e6dce9f7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public synchronized Index getIndex(IPath path, boolean reuseExistingFile, boolean createIfMissing)", "signatureAfterChange": " public synchronized Index getIndex(IPath path, boolean reuseExistingFile, boolean createIfMissing)", "diff": ["-\t\t\t\t\t\t\tJobManager.verbose(\"-> cannot reuse existing index: \"+indexName+\" path: \"+path.toOSString()); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\t\t\tUtil.verbose(\"-> cannot reuse existing index: \"+indexName+\" path: \"+path.toOSString()); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t\tJobManager.verbose(\"-> create empty index: \"+indexName+\" path: \"+path.toOSString()); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\tUtil.verbose(\"-> create empty index: \"+indexName+\" path: \"+path.toOSString()); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t\tJobManager.verbose(\"-> unable to create empty index: \"+indexName+\" path: \"+path.toOSString()); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\tUtil.verbose(\"-> unable to create empty index: \"+indexName+\" path: \"+path.toOSString()); //$NON-NLS-1$ //$NON-NLS-2$"]}], "num": 40276}