{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "71a2f46809f145dfd24fd8aaa1060e20", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50350dfe2b90f7c03160579cd3dc24ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FinallyFlowContext.java", "commitBeforeChange": "85b2cfd04e83239095fec1009e8fcb37543a6bed", "commitAfterChange": "a825a712d9a7173d7e7cfae42a0058bb2e0b5bb5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tboolean recordFinalAssignment( \t\tVariableBinding binding, \t\tReference finalAssignment)", "signatureAfterChange": "  \tboolean recordFinalAssignment( \t\tVariableBinding binding, \t\tReference finalAssignment)", "diff": ["+\t\t\tfinalVariables = new VariableBinding[5];", "+\t\t\tSystem.arraycopy(", "+\t\t\t\tfinalVariables,", "+\t\t\t\t0,", "+\t\t\t\t(finalVariables = new VariableBinding[assignCount * 2]),", "+\t\t\t\t0,", "+\t\t\t\tassignCount);", "-\t\tfinalAssignments[assignCount++] = finalAssignment;", "+\t\tfinalAssignments[assignCount] = finalAssignment;", "+\t\tfinalVariables[assignCount++] = binding;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db93a618bf30b999efdb757d5ed11147", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/InitializationFlowContext.java", "commitBeforeChange": "8a55616a15f0e12ee24162781746f45ed8c24b78", "commitAfterChange": "d7c285a09f8cde2ba05e7f838f10ce545b90c736", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \r \tpublic void recordHandlingException(\r \t\tReferenceBinding exceptionType,\r \t\tUnconditionalFlowInfo flowInfo,\r \t\tTypeBinding raisedException,\r \t\tAstNode invocationSite,\r \t\tboolean wasMasked)", "signatureAfterChange": "\r \r \tpublic void recordHandlingException(\r \t\tReferenceBinding exceptionType,\r \t\tUnconditionalFlowInfo flowInfo,\r \t\tTypeBinding raisedException,\r \t\tAstNode invocationSite,\r \t\tboolean wasMasked)", "diff": ["+\t\t\t\r", "+\t\t\tSystem.arraycopy(\r", "+\t\t\t\texceptionThrowerFlowInfos,\r", "+\t\t\t\t0,\r", "+\t\t\t\t(exceptionThrowerFlowInfos = new FlowInfo[size * 2]),\r", "+\t\t\t\t0,\r", "+\t\t\t\tsize);\r", "-\t\texceptionThrowers[exceptionCount++] = invocationSite;\r", "+\t\texceptionThrowers[exceptionCount] = invocationSite;\r", "+\t\texceptionThrowerFlowInfos[exceptionCount++] = flowInfo.copy();\r"]}], "num": 57686}