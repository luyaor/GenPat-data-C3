{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "99d25b22b2e55c88203a0cf715420c01", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47e7c7ed68f47edc070cc39334caf3b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "a7da40a1a62439fc4b1ece4f5221022e1778c205", "commitAfterChange": "0ad2415ee4f1a2517a3e261113b08f2dfc4514f8", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 76, "signatureBeforeChange": " public void configure(String[] argv)", "signatureAfterChange": " public void configure(String[] argv)", "diff": ["-\tboolean didSpecifyDefaultEncoding = false;", "+\t", "+\tSet specifiedEncodings = null;", "-\t\t\t\tif (didSpecifyDefaultEncoding) {", "-\t\t\t\t\tthrow new IllegalArgumentException(", "-\t\t\t\t\t\tthis.bind(\"configure.duplicateDefaultEncoding\", currentArg)); //$NON-NLS-1$", "+\t\t\t\tif (specifiedEncodings != null) {", "+\t\t\t\t\t// check already defined encoding", "+\t\t\t\t\tif (!specifiedEncodings.contains(currentArg)) {", "+\t\t\t\t\t\tif (specifiedEncodings.size() > 1) {", "+\t\t\t\t\t\t\tthis.logger.logWarning(", "+\t\t\t\t\t\t\t\t\tthis.bind(\"configure.differentencodings\", //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\tcurrentArg,", "+\t\t\t\t\t\t\t\t\tgetAllEncodings(specifiedEncodings)));", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tthis.logger.logWarning(", "+\t\t\t\t\t\t\t\t\tthis.bind(\"configure.differentencoding\", //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\tcurrentArg,", "+\t\t\t\t\t\t\t\t\tgetAllEncodings(specifiedEncodings)));", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\tspecifiedEncodings = new HashSet();", "+\t\t\t\tspecifiedEncodings.add(currentArg);", "-\t\t\t\tdidSpecifyDefaultEncoding = true;", "+\tif (specifiedEncodings != null && specifiedEncodings.size() > 1) {", "+\t\tthis.logger.logWarning(this.bind(\"configure.multipleencodings\", //$NON-NLS-1$", "+\t\t\t\t(String) this.options.get(CompilerOptions.OPTION_Encoding),", "+\t\t\t\tgetAllEncodings(specifiedEncodings)));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6679fe3d87929b76ca69ebc30e52b046", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "1046ecba3bf1092ff6936f62a14ab5c9b25878ed", "commitAfterChange": "6136184df5d87b2fe6ebeec9fd9dcf39b1b92cb1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["+\t\tfinal int InsideMaxProblems = 256;", "+\t\t\tif (currentArg.equals(\"-maxProblems\")) { //$NON-NLS-1$", "+\t\t\t\tif (this.maxProblems > 0)", "+\t\t\t\t\tthrow new InvalidInputException(", "+\t\t\t\t\t\tMain.bind(\"configure.duplicateMaxProblems\", currentArg)); //$NON-NLS-1$", "+\t\t\t\tmode = InsideMaxProblems;", "+\t\t\t\tcontinue;", "+\t\t\t}", "+\t\t\t}", "+\t\t\tif (currentArg.equals(\"-noJSR\")) { //$NON-NLS-1$", "+\t\t\t    mode = Default;", "+\t\t\t    this.useJsrBytecode = false;", "+\t\t\t    continue;", "+\t\t\t\t}", "+\t\t\t\tmode = Default;", "+\t\t\t\tcontinue;", "+\t\t\t}", "+\t\t\tif (mode == InsideMaxProblems) {", "+\t\t\t\ttry {", "+\t\t\t\t\tthis.maxProblems = Integer.parseInt(currentArg);", "+\t\t\t\t\tif (this.maxProblems <= 0) {", "+\t\t\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.maxProblems\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_MaxProblemPerUnit, currentArg);", "+\t\t\t\t} catch (NumberFormatException e) {", "+\t\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.maxProblems\", currentArg)); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab176a90c801661d0c159495bdfa40e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "ba64706f201921fc94a5e5ed779b077316fb0266", "commitAfterChange": "b574ad64a0e10ca20ad6529e036d6695d43be062", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r private void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": "\r private void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\r", "+\r", "+\tboolean didSpecifyCompliance = false;\r", "+\t\t\r", "-\t\tif (currentArg.equals(\"-jck\")) { //$NON-NLS-1$\r", "-\t\t\tmode = InsideJCK;\r", "+\t\tif (currentArg.equals(\"-1.3\")) { //$NON-NLS-1$\r", "+\t\t\tif (didSpecifyCompliance) {\r", "+\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.duplicateCompliance\",currentArg)); //$NON-NLS-1$\r", "+\t\t\t}\r", "+\t\t\tdidSpecifyCompliance = true;\r", "+\t\t\toptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_3);\r", "+\t\t\tmode = Default;\r", "+\t\t\tcontinue;\r", "+\t\t}\r", "+\t\tif (currentArg.equals(\"-1.4\")) { //$NON-NLS-1$\r", "+\t\t\tif (didSpecifyCompliance) {\r", "+\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.duplicateCompliance\",currentArg)); //$NON-NLS-1$\r", "+\t\t\t}\r", "+\t\t\tdidSpecifyCompliance = true;\r", "+\t\t\toptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_3);\r", "+\t\t\tmode = Default;\r", "-\t\t\t}\r", "-\t\t\tmode = Default;\r", "-\t\t\tcontinue;\r", "-\t\t}\r", "-\t\tif (mode == InsideJCK){\r", "-\t\t\tif (currentArg.equals(\"1.3\")) { //$NON-NLS-1$\r", "-\t\t\t\toptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_3);\r", "-\t\t\t} else if (currentArg.equals(\"1.4\")) { //$NON-NLS-1$\r", "-\t\t\t\toptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_4);\r", "-\t\t\t} else {\r", "-\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.jck\",currentArg)); //$NON-NLS-1$\r"]}], "num": 3164}