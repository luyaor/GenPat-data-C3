{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1ccca8dc4a9e985ecc1d14ae278d3f12", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2acada364ef0d9a304cf22998a903248", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "67da1da15e9afbcd33679f07597c706e7915cf4a", "commitAfterChange": "027fccb2c17e0f0d2b28705c6704af10fc8ce0aa", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 58, "signatureBeforeChange": " protected void pushOnSelectorStack(int selectorIdPtr)", "signatureAfterChange": " protected void pushOnElementStack(int kind, int info)", "diff": ["- */", "-protected void pushOnSelectorStack(int selectorIdPtr) {", "-\tif (this.invocationPtr < -1) return;", "+}", "+protected void pushOnElementStack(int kind, int info){", "+\tif (this.elementPtr < -1) return;", "-\t\tthis.selectorStack[++this.invocationPtr] = selectorIdPtr;", "+\t\tthis.elementPtr++;", "+\t\tthis.elementKindStack[this.elementPtr] = kind;", "+\t\tthis.elementInfoStack[this.elementPtr] = info;", "-\t\tint oldStackLength = this.selectorStack.length;", "-\t\tint oldSelectorStack[] = this.selectorStack;", "-\t\tthis.selectorStack = new int[oldStackLength + StackIncrement];", "-\t\tSystem.arraycopy(oldSelectorStack, 0, this.selectorStack, 0, oldStackLength);", "-\t\tthis.selectorStack[this.invocationPtr] = selectorIdPtr;", "+\t\tint oldStackLength = this.elementKindStack.length;", "+\t\tint oldElementStack[] = this.elementKindStack;", "+\t\tint oldElementInfoStack[] = this.elementInfoStack;", "+\t\tthis.elementKindStack = new int[oldStackLength + StackIncrement];", "+\t\tthis.elementInfoStack = new int[oldStackLength + StackIncrement];", "+\t\tSystem.arraycopy(oldElementStack, 0, this.elementKindStack, 0, oldStackLength);", "+\t\tSystem.arraycopy(oldElementInfoStack, 0, this.elementInfoStack, 0, oldStackLength);", "+\t\tthis.elementKindStack[this.elementPtr] = kind;", "+\t\tthis.elementInfoStack[this.elementPtr] = info;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "419dd9d083539e1bd730f783ff3fff5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "d135b079aa3cba8ba7f809e3b8fa111052de185d", "commitAfterChange": "c29ff6f3ca53453d86d6a9de68da632d3d253455", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": " protected void popElement(int kind)", "signatureAfterChange": " protected void popElement(int kind)", "diff": ["-protected void popElement(int kind){", "-\tif(this.elementPtr < 0 || this.elementKindStack[this.elementPtr] != kind) return;", "-\tthis.previousKind = this.elementKindStack[this.elementPtr];", "-\tthis.previousInfo = this.elementInfoStack[this.elementPtr];", "-\tthis.previousObjectInfo = this.elementObjectInfoStack[this.elementPtr];", "-", "-\tthis.elementObjectInfoStack[this.elementPtr] = null;", "-", "-\tswitch (kind) {", "-\t\tdefault :", "-\t\t\tthis.elementPtr--;", "-\t\t\tbreak;", "+// the name is a misnomer, we allow \"pop\"s not just at the TOS. Lambda wants to be sticky till fully reduced, however we do want other elements poppped at the right point, so ... ", "+protected void popElement(int kind) {", "+\t", "+\tif (this.elementPtr < 0)", "+\t\treturn;", "+\t", "+\tint stackPointer = this.elementPtr;", "+\t", "+\tif (this.elementKindStack[stackPointer] == K_LAMBDA_EXPRESSION_DELIMITER) {", "+\t\tif (kind == K_FIELD_INITIALIZER_DELIMITER) // wait until lambda is reduced.", "+\t\t\treturn;", "-}", "+\t", "+\tif (kind != K_LAMBDA_EXPRESSION_DELIMITER) {", "+\t\twhile (this.elementKindStack[stackPointer] == K_LAMBDA_EXPRESSION_DELIMITER) {", "+\t\t\tstackPointer --;", "+\t\t}", "+\t}", "+\tif (stackPointer < 0 || this.elementKindStack[stackPointer] != kind)", "+\t\treturn;", "+\t", "+\tthis.previousKind = this.elementKindStack[stackPointer];", "+\tthis.previousInfo = this.elementInfoStack[stackPointer];", "+\tthis.previousObjectInfo = this.elementObjectInfoStack[stackPointer];", "+", "+\tfinal int length = this.elementPtr - stackPointer;", "+\tif (length > 0) {", "+\t\tSystem.arraycopy(this.elementKindStack, stackPointer + 1, this.elementKindStack, stackPointer, length);", "+\t\tSystem.arraycopy(this.elementInfoStack, stackPointer + 1, this.elementInfoStack, stackPointer, length);", "+\t\tSystem.arraycopy(this.elementObjectInfoStack, stackPointer + 1, this.elementObjectInfoStack, stackPointer, length);", "+\t}", "+\tthis.elementObjectInfoStack[this.elementPtr] = null;", "+\tthis.elementPtr--;", "+ }"]}], "num": 38787}