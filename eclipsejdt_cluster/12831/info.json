{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c11a3469dcf1a909223fbd0ef4a56299", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0914bed400adbd9a3a33b304e273b9a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "653b549b2ec915800fe34bbb2ab9809b71ca66a5", "commitAfterChange": "2caa59d033a9b6c8ec71aab586472ad7fe749893", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " public void checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tsuper.checkNPE(scope, flowContext, flowInfo);", "-\tif ((nullStatus(flowInfo) & FlowInfo.POTENTIALLY_NULL) != 0)", "+\tif ((nullStatus(flowInfo) & FlowInfo.POTENTIALLY_NULL) != 0) // note that flowInfo is not used inside nullStatus(..)", "+\telse", "+\t\tsuper.checkNPE(scope, flowContext, flowInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d73b1aa56aa9d3df49636595a14f928", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "7aba284c4ea53048ed9ad4ccc85fef0f7294903a", "commitAfterChange": "0cdfa4a20d7efcfc7530ed5117682b5beffbec92", "methodNumberBeforeChange": 208, "methodNumberAfterChange": 208, "signatureBeforeChange": " public void invokespecial(MethodBinding methodBinding)", "signatureAfterChange": " public void invokespecial(MethodBinding methodBinding)", "diff": ["-\t// initialized to 1 to take into account this  immediately", "+\t// initialized to 1 to take into account this immediately", "-\t\t} else if (declaringClass.isEnum()) {", "+\t\t}", "+\t\tif (declaringClass.isEnum()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0edaa0fd51df2421f85175657636d150", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/EnvUtil.java", "commitBeforeChange": "29a8044fc706583901ff89364d428dff04f6a567", "commitAfterChange": "5a5d0f43790375863ed059f546377b6a1dca079c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     static void updateProblemLength(List<APTProblem> problems, CompilationUnit astUnit)", "signatureAfterChange": "     static void updateProblemLength(List<APTProblem> problems, CompilationUnit astUnit)", "diff": ["+    \tint[] classNameRange = null;", "-    \t\tint[] classNameRange = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fc66ae6b49e6d4eae887ed5a2a31097", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceASTTests.java", "commitBeforeChange": "30b30e8c56b7e7a44eebf42932935c15fe10b232", "commitAfterChange": "06e44af1d1177a8820136cde1fbe3146b9563e7f", "methodNumberBeforeChange": 146, "methodNumberAfterChange": 146, "signatureBeforeChange": " \tprivate void createAST(ICompilationUnit unit, int astLevel) throws JavaModelException", "signatureAfterChange": " \tprivate void createAST(ICompilationUnit unit, int astLevel) throws JavaModelException", "diff": ["-\t\t", "-\t\t// Clean memory", "-\t\trunGc();", "-\t\t", "+", "+\t\t\trunGc();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "108aef1892a6bc8d90cd743c4a0d63c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ImportRewrite.java", "commitBeforeChange": "8bea847412c36874664a80a329bfe627deff5fa9", "commitAfterChange": "c4145c80a504c8681f4571ff2bd214b778e87107", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tpublic final TextEdit rewriteImports(IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tpublic final TextEdit rewriteImports(IProgressMonitor monitor) throws CoreException", "diff": ["-\t\tmonitor.beginTask(Messages.bind(Messages.importRewrite_processDescription), 2);", "+\t\t\tmonitor.beginTask(Messages.bind(Messages.importRewrite_processDescription), 2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1862f1d7ffff61b629f084110b9b0531", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "ebce33160782a7ccea09c2470ab996fbaa0bcfe9", "commitAfterChange": "9cb2a494fe1e21879b04a456ce6a7676566f2732", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic ReferenceBinding findDirectMemberType(char[] typeName, ReferenceBinding enclosingType)", "signatureAfterChange": " \tpublic ReferenceBinding findDirectMemberType(char[] typeName, ReferenceBinding enclosingType)", "diff": ["-\t\t\t\t? memberType.canBeSeenBy(getCurrentPackage())", "-\t\t\t\t: memberType.canBeSeenBy(enclosingType, enclosingSourceType))", "+\t\t\t\t\t? memberType.canBeSeenBy(getCurrentPackage())", "+\t\t\t\t\t: memberType.canBeSeenBy(enclosingType, enclosingSourceType))", "-\t\t\telse", "-\t\t\t\treturn new ProblemReferenceBinding(typeName, memberType, NotVisible);", "+\t\t\treturn new ProblemReferenceBinding(typeName, memberType, NotVisible);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19791da3625a223887e508618b7f519f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredBlock.java", "commitBeforeChange": "a2340c5031a10e8be9cd3937b4ff6561db98f484", "commitAfterChange": "fd79557485cf3d3184833df280c6ebd9cfbb8177", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public RecoveredElement add(LocalDeclaration localDeclaration, int bracketBalanceValue, boolean delegatedByParent)", "signatureAfterChange": " public RecoveredElement add(LocalDeclaration localDeclaration, int bracketBalanceValue, boolean delegatedByParent)", "diff": ["-\t\tthis.resetPendingModifiers();", "+\tthis.resetPendingModifiers();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26b450945373e8de3bf03a5990030c15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceASTTests.java", "commitBeforeChange": "30b30e8c56b7e7a44eebf42932935c15fe10b232", "commitAfterChange": "06e44af1d1177a8820136cde1fbe3146b9563e7f", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 151, "signatureBeforeChange": " \tprivate void runAstCreation(IJavaProject javaProject) throws JavaModelException", "signatureAfterChange": " \tprivate void runAstCreation(IJavaProject javaProject) throws JavaModelException", "diff": ["-\t\t", "-\t\t// Clean memory", "-\t\trunGc();", "-\t\t", "+", "+\t\t\trunGc();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2765ecf5676960ecf9197072ec383f2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReturnStatement.java", "commitBeforeChange": "39787fb323b3f06bf37a085118b28347f6a17b39", "commitAfterChange": "0cc61e9905c3f603dab789f6a44abfa63094212c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\tthis.initStateIndex =", "-\t\t\tcurrentScope.methodScope().recordInitializationStates(flowInfo);", "+\tthis.initStateIndex =", "+\t\tcurrentScope.methodScope().recordInitializationStates(flowInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f502bcbed41c08650a680593d7f6d49", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "830277de86eee08c18b5e0da495c01b96cccdad2", "commitAfterChange": "a874c20c38675a0faf72bfd6c0cb69354f6ff3fb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  private void internalGenerateCode(ClassScope classScope, ClassFile classFile)", "signatureAfterChange": "  private void internalGenerateCode(ClassScope classScope, ClassFile classFile)", "diff": ["+\t\t// if a problem got reported during code gen, then trigger problem method creation", "+\t\tif (this.ignoreFurtherInvestigation) {", "+\t\t\tthrow new AbortMethod(this.scope.referenceCompilationUnit().compilationResult, null);", "+\t\t}", "-", "-\t// if a problem got reported during code gen, then trigger problem method creation", "-\tif (this.ignoreFurtherInvestigation) {", "-\t\tthrow new AbortMethod(this.scope.referenceCompilationUnit().compilationResult, null);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45dcd94e27f33bb4310b66394fa3bb5f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "c7cc8ffcae60810fc57530ea7daeb89a3d8f6e05", "commitAfterChange": "35d13a002cbebf51a0916a28b6cd1b216b279372", "methodNumberBeforeChange": 140, "methodNumberAfterChange": 140, "signatureBeforeChange": " protected void consumeEnterVariable()", "signatureAfterChange": " protected void consumeEnterVariable()", "diff": ["-\t\t\tthis.javadoc = null;", "+\t\tthis.javadoc = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4daedc2dbfcc509587de8ed3da7dc1de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "9bca6c64d5f06e09288bbe705f432c80b6768f11", "commitAfterChange": "1f165d30a1b65384e3ec245ff2ecd9c2f700ae13", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tprivate void runAPTInFileBasedMode( \t\t\tfinal Map<AnnotationProcessorFactory, FactoryPath.Attributes> factories, \t\t\tfinal ProcessorEnvImpl processorEnv, \t\t\tfinal List<IFile> filesWithMissingType, \t\t\tfinal List<ICompilationUnit> unitsForFilesWithMissingType)", "signatureAfterChange": " \t \tprivate void runAPTInFileBasedMode( \t\t\tfinal Map<AnnotationProcessorFactory, FactoryPath.Attributes> factories, \t\t\tfinal ProcessorEnvImpl processorEnv, \t\t\tfinal List<IFile> filesWithMissingType, \t\t\tfinal List<ICompilationUnit> unitsForFilesWithMissingType)", "diff": ["-\t\t\t\t\t\tprocessor.process();", "-\t\t\t\t\t\taddFileWithMissingTypeError(curFile, filesWithMissingType, unitsForFilesWithMissingType, processorEnv);", "+\t\t\t\t\t\tprocessor.process();\t\t\t\t\t\t", "+\t\t\taddFileWithMissingTypeError(curFile, filesWithMissingType, unitsForFilesWithMissingType, processorEnv);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54c501e699d95b3c84342b03a3544fe3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java", "commitBeforeChange": "a2340c5031a10e8be9cd3937b4ff6561db98f484", "commitAfterChange": "fd79557485cf3d3184833df280c6ebd9cfbb8177", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public RecoveredElement add(AbstractMethodDeclaration methodDeclaration, int bracketBalanceValue)", "signatureAfterChange": " public RecoveredElement add(AbstractMethodDeclaration methodDeclaration, int bracketBalanceValue)", "diff": ["-\t\tthis.resetPendingModifiers();", "+\tthis.resetPendingModifiers();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55b525a5af31d09324ed6265e4cdd273", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/SwitchFlowContext.java", "commitBeforeChange": "055380e1ecf4ba956a2ed12d0bd6afd30fa4bb0d", "commitAfterChange": "5633218f57a8f96a181a737ead7a991d28ce84d5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void recordBreakFrom(FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void recordBreakFrom(FlowInfo flowInfo)", "diff": ["+", "+\t\tif (!flowInfo.isReachable()) return;", "-\t\t\t// ignore if not really reachable (1FKEKRP)", "-\t\t\tif (!flowInfo.isReachable())", "-\t\t\t\treturn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a546343d08bb62bfbb604a158b37fa7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Buffer.java", "commitBeforeChange": "90515f177fc66ff94534d5266cc647dd7b47561f", "commitAfterChange": "d48c25cb976d99917f58b366198a77010dd2d678", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public char[] getCharacters()", "signatureAfterChange": " public char[] getCharacters()", "diff": ["-\tif (this.contents == null) return null;", "+\t\tif (this.contents == null) return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63a8d3cc5e7ba85251edd12a0790f765", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/CompilationResult.java", "commitBeforeChange": "03be029557a7489c8389c5dd310eacd03d179472", "commitAfterChange": "4cb2c570d3aefe494107c2340c1d84687aeb83ac", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate int computePriority(IProblem problem)", "signatureAfterChange": "  \tprivate int computePriority(IProblem problem)", "diff": ["+\t\t\tif (firstErrors.contains(problem)){ // if context is null, firstErrors is null too", "+\t\t\t  priority += P_FIRST_ERROR;", "+\t\t    }", "-\t\t}", "-\t\tif (firstErrors.contains(problem)){", "-\t\t\tpriority += P_FIRST_ERROR;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6418fb8f47ba767a3e38b779f3717728", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "28ef106634e5315866f01882f217360d1ad4c791", "commitAfterChange": "53ef1901eb9652b60d01f901557a99f6b7923647", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprotected boolean parseReference() throws InvalidInputException", "signatureAfterChange": " \tprotected boolean parseReference() throws InvalidInputException", "diff": ["+\t\t\t\t\t\tconsumeToken();", "-\t\t\t\t\t\t\tconsumeToken();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6501ea468606c6724e4344eb21380b73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "f03e24a20423490ce43dd47d116e6771e9f8b29a", "commitAfterChange": "0425932939e44005b87b30f06674df053a397223", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic static CompilationUnit parseCompilationUnit( \t\tIClassFile classFile, \t\tboolean resolveBindings, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor)", "signatureAfterChange": " \tpublic static CompilationUnit parseCompilationUnit( \t\tIClassFile classFile, \t\tboolean resolveBindings, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor)", "diff": ["+\t\t\t// convert ASTParser's complaints into old form", "+\t\t\tthrow new IllegalArgumentException();", "-\t\tthrow new IllegalArgumentException();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67f84b16f3eeca31b98dcf76ca8ad3cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredUnit.java", "commitBeforeChange": "a2340c5031a10e8be9cd3937b4ff6561db98f484", "commitAfterChange": "fd79557485cf3d3184833df280c6ebd9cfbb8177", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceValue)", "signatureAfterChange": " public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceValue)", "diff": ["-\t\tthis.resetPendingModifiers();", "-", "+\tthis.resetPendingModifiers();", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cf2950d97087391f9500e28e423250d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionJavadocParser.java", "commitBeforeChange": "28ef106634e5315866f01882f217360d1ad4c791", "commitAfterChange": "53ef1901eb9652b60d01f901557a99f6b7923647", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprotected void pushText(int start, int end)", "signatureAfterChange": " \tprotected void pushText(int start, int end)", "diff": ["+\t\t\t\t\t\t\tconsumeToken();", "-\t\t\t\t\t\t\t\tconsumeToken();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6db026583450ed61e7f6106e201fd378", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "ebce33160782a7ccea09c2470ab996fbaa0bcfe9", "commitAfterChange": "9cb2a494fe1e21879b04a456ce6a7676566f2732", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tfinal Binding getTypeOrPackage(char[] name, int mask)", "signatureAfterChange": " \tfinal Binding getTypeOrPackage(char[] name, int mask)", "diff": ["-\t\t\t\t\t\t\t\telse", "-\t\t\t\t\t\t\t\t\t// make the user qualify the type, likely wants the first inherited type", "-\t\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, InheritedNameHidesEnclosingName);", "+\t\t\t\t\t\t\t\t// make the user qualify the type, likely wants the first inherited type", "+\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, InheritedNameHidesEnclosingName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70f844474a385b33f03b68f4d024f287", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Clinit.java", "commitBeforeChange": "20eaedd8038780a05a557c39b442f2485f010803", "commitAfterChange": "1920517d934718cca4ae649c790dd80e9c368b4b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic void setAssertionSupport(FieldBinding assertionSyntheticFieldBinding, boolean needClassLiteralField)", "signatureAfterChange": "  \tpublic void setAssertionSupport(FieldBinding assertionSyntheticFieldBinding, boolean needClassLiteralField)", "diff": ["-\t\tSourceTypeBinding sourceType =", "-\t\t\tthis.scope.outerMostMethodScope().enclosingSourceType();", "+\t\t\tSourceTypeBinding sourceType =", "+\t\t\t\tthis.scope.outerMostMethodScope().enclosingSourceType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "732af40bc0749b354b78bc823fdfb778", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/BooleanConstant.java", "commitBeforeChange": "c6b0ba0798e3e5869080431aec1d46cb3df138ed", "commitAfterChange": "0d803de6a1e9319f8fcdd3fdf5273a7bd463073e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic String stringValue()", "signatureAfterChange": "  \tpublic String stringValue()", "diff": ["-\t\tif (s == null)", "-\t\t\treturn \"null\"; //$NON-NLS-1$", "-\t\telse", "-\t\t\treturn s;", "+\t\tif (s == null) return \"null\"; //$NON-NLS-1$", "+\t\treturn s;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7429476d0bc97b8c7650fa48b00e1e30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "ebce33160782a7ccea09c2470ab996fbaa0bcfe9", "commitAfterChange": "9cb2a494fe1e21879b04a456ce6a7676566f2732", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite, boolean needResolve)", "signatureAfterChange": " \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite, boolean needResolve)", "diff": ["-\t\t\t\t\t\t\t\telse", "-\t\t\t\t\t\t\t\t\t// make the user qualify the field, likely wants the first inherited field (javac generates an ambiguous error instead)", "-\t\t\t\t\t\t\t\t\treturn new ProblemFieldBinding(", "-\t\t\t\t\t\t\t\t\t\tfieldBinding.declaringClass,", "-\t\t\t\t\t\t\t\t\t\tname,", "-\t\t\t\t\t\t\t\t\t\tInheritedNameHidesEnclosingName);", "+\t\t\t\t\t\t\t\t// make the user qualify the field, likely wants the first inherited field (javac generates an ambiguous error instead)", "+\t\t\t\t\t\t\t\treturn new ProblemFieldBinding(", "+\t\t\t\t\t\t\t\t\tfieldBinding.declaringClass,", "+\t\t\t\t\t\t\t\t\tname,", "+\t\t\t\t\t\t\t\t\tInheritedNameHidesEnclosingName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78464f465ec1c65d71d5dea25caa25f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "0b7ff78692342ed66f3a07e07fcd0a8a72247fee", "commitAfterChange": "076e76a1f851b4e6de516651f693060a8f931e1c", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": " \tpublic boolean visit( \t\tQualifiedAllocationExpression qualifiedAllocationExpression, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tQualifiedAllocationExpression qualifiedAllocationExpression, \t\tBlockScope scope)", "diff": ["+\t\t\tif (this.preferences.insert_space_within_message_send) {", "+\t\t\t\tthis.scribe.space();", "+\t\t\t}", "-\t\t\t\t\tif (this.preferences.insert_space_within_message_send) {", "-\t\t\t\t\t\tthis.scribe.space();", "-\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b2bb6d6d694d6d67ce24f912ef23269", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "99aa173e65435610dfe4b542988d65ff8c2f55f2", "commitAfterChange": "801ef592cf9b7a818547dfa578352ecbaa18aa19", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": " public void outputClassFiles(CompilationResult unitResult)", "signatureAfterChange": " public void outputClassFiles(CompilationResult unitResult)", "diff": ["+\t\t\t\t\tthis.exportedClassFilesCounter++;", "-\t\t\t\tthis.exportedClassFilesCounter++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c58e6ad528b358ab3117eea9ed4e2f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java", "commitBeforeChange": "a2340c5031a10e8be9cd3937b4ff6561db98f484", "commitAfterChange": "fd79557485cf3d3184833df280c6ebd9cfbb8177", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public RecoveredElement add(FieldDeclaration fieldDeclaration, int bracketBalanceValue)", "signatureAfterChange": " public RecoveredElement add(FieldDeclaration fieldDeclaration, int bracketBalanceValue)", "diff": ["-\t\tthis.resetPendingModifiers();", "+\tthis.resetPendingModifiers();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e96bebc2a05fa63fd45b3829fc5ac80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/IntConstant.java", "commitBeforeChange": "c6b0ba0798e3e5869080431aec1d46cb3df138ed", "commitAfterChange": "0d803de6a1e9319f8fcdd3fdf5273a7bd463073e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic String stringValue()", "signatureAfterChange": " \t \tpublic String stringValue()", "diff": ["-\t\tif (s == null)", "-\t\t\treturn \"null\"; //$NON-NLS-1$", "-\t\telse", "-\t\t\treturn s;", "+\t\tif (s == null) return \"null\"; //$NON-NLS-1$", "+\t\treturn s;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f4686f2271839021e26583797be38f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "31c45831879fb9d166146101d8c06704e7b03918", "commitAfterChange": "4cbee9c4edfca3748d4063d8a7e10ad2054f1b8a", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " public void locateMatches(SearchDocument[] searchDocuments) throws CoreException", "signatureAfterChange": " public void locateMatches(SearchDocument[] searchDocuments) throws CoreException", "diff": ["-\t\t\t\tif (openable == null) {", "-\t\t\t\t\tif (this.progressMonitor != null) {", "-\t\t\t\t\t\tthis.progressWorked++;", "-\t\t\t\t\t\tif ((this.progressWorked%this.progressStep)==0) this.progressMonitor.worked(this.progressStep);", "-\t\t\t\t\t}", "-\t\t\t\t\tdisplayed++;", "-\t\t\t\t\tcontinue; // match is outside classpath", "+\t\t\t}", "+\t\t\tif (openable == null) {", "+\t\t\t\tif (this.progressMonitor != null) {", "+\t\t\t\t\tthis.progressWorked++;", "+\t\t\t\t\tif ((this.progressWorked%this.progressStep)==0) this.progressMonitor.worked(this.progressStep);", "+\t\t\t\tdisplayed++;", "+\t\t\t\tcontinue; // match is outside classpath"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "824efcfe6e5fa32878f22594b62e6736", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "7aba284c4ea53048ed9ad4ccc85fef0f7294903a", "commitAfterChange": "0cdfa4a20d7efcfc7530ed5117682b5beffbec92", "methodNumberBeforeChange": 164, "methodNumberAfterChange": 164, "signatureBeforeChange": " public void invokespecial(MethodBinding methodBinding)", "signatureAfterChange": " public void invokespecial(MethodBinding methodBinding)", "diff": ["+    // initialize to 0 since we will manually remove 'this'", "-        } else if (declaringClass.isEnum()) {", "+        }", "+        if (declaringClass.isEnum()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85a0ee619e62e1f434c4654f2073330d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "d274d115bd7e0b71c7f0e65103c21c78e52c04a8", "commitAfterChange": "251976e8fad9ff65049e5f83ba04649db3c182a3", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  public void resolve(IGenericType[] suppliedTypes, ICompilationUnit[] sourceUnits)", "signatureAfterChange": "  public void resolve(IGenericType[] suppliedTypes, ICompilationUnit[] sourceUnits)", "diff": ["+\t\tParser parser = new Parser(lookupEnvironment.problemReporter, true, options.sourceLevel >= CompilerOptions.JDK1_4);", "-\t\t\tParser parser = new Parser(lookupEnvironment.problemReporter, true, options.sourceLevel >= CompilerOptions.JDK1_4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "886393384bc1f3b1e553ea1b728d90f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "f03e24a20423490ce43dd47d116e6771e9f8b29a", "commitAfterChange": "0425932939e44005b87b30f06674df053a397223", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic static CompilationUnit parsePartialCompilationUnit(         IClassFile classFile, \t\tint position, \t\tboolean resolveBindings, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor)", "signatureAfterChange": " \tpublic static CompilationUnit parsePartialCompilationUnit(         IClassFile classFile, \t\tint position, \t\tboolean resolveBindings, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor)", "diff": ["+\t\t\t// convert ASTParser's complaints into old form", "+\t\t\tthrow new IllegalArgumentException();", "-\t\tthrow new IllegalArgumentException();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c85b297704882132649bc92b9f6f3c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration.java", "commitBeforeChange": "830277de86eee08c18b5e0da495c01b96cccdad2", "commitAfterChange": "a874c20c38675a0faf72bfd6c0cb69354f6ff3fb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void generateCode(ClassFile classFile)", "signatureAfterChange": "  \tpublic void generateCode(ClassFile classFile)", "diff": ["+\t\t\t// if a problem got reported during code gen, then trigger problem method creation", "+\t\t\tif (this.ignoreFurtherInvestigation) {", "+\t\t\t\tthrow new AbortMethod(this.scope.referenceCompilationUnit().compilationResult, null);", "+\t\t\t}", "-", "-\t\t// if a problem got reported during code gen, then trigger problem method creation", "-\t\tif (this.ignoreFurtherInvestigation) {", "-\t\t\tthrow new AbortMethod(this.scope.referenceCompilationUnit().compilationResult, null);", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92f7a2787000b2ce099df5bab0d8488e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "f03e24a20423490ce43dd47d116e6771e9f8b29a", "commitAfterChange": "0425932939e44005b87b30f06674df053a397223", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic static CompilationUnit parsePartialCompilationUnit( \t\tICompilationUnit unit, \t\tint position, \t\tboolean resolveBindings, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor)", "signatureAfterChange": " \tpublic static CompilationUnit parsePartialCompilationUnit( \t\tICompilationUnit unit, \t\tint position, \t\tboolean resolveBindings, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor)", "diff": ["+\t\t\t// convert ASTParser's complaints into old form", "+\t\t\tthrow new IllegalArgumentException();", "-\t\tthrow new IllegalArgumentException();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96dd1036c31670aadf89be7832dd0828", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceSearchTests.java", "commitBeforeChange": "14af252394acbb0bfcfcbfb1dcd81d43fd8bedb4", "commitAfterChange": "a5e72f7eb3d8ebc1e13245d6ce4d9ee4d6c6d3db", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic void testSearchConstructor() throws CoreException", "signatureAfterChange": " \tpublic void testSearchConstructor() throws CoreException", "diff": ["-\t\t// Clean memory", "-\t\trunGc();", "-", "+\t\t\trunGc();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a23917f1edea8574208602ebae112bc6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/runtime/LocalVirtualMachine.java", "commitBeforeChange": "bc1023a3db35de5f11d5861f411b9a4de78ba0ab", "commitAfterChange": "bb9caf310cba60ea26e86d0cc9ab1b54feb67156", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public InputStream getErrorStream() throws TargetException", "signatureAfterChange": " public InputStream getErrorStream() throws TargetException", "diff": ["-\telse", "-\t\treturn this.process.getErrorStream();", "+\treturn this.process.getErrorStream();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a51c85ebe466c19c67c174cffd7ddbca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "f3bba67d7292a507e1b3691e11f35ff1c9658d01", "commitAfterChange": "5ba107df633d1beada69a1a39d8b4efe7c8b77f6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \tpublic int compareUncheckedException(ReferenceBinding type)", "signatureAfterChange": "\r \tpublic int compareUncheckedException(ReferenceBinding type)", "diff": ["-\t\tif (comparison != 0)\r", "-\t\t\treturn comparison;\r", "-\t\telse\r", "-\t\t\treturn compareTypes(type, getJavaLangError());\r", "+\t\tif (comparison != 0) return comparison;\r", "+\t\treturn compareTypes(type, getJavaLangError());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa73d82b4741f2c69a11596467ab8185", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/SourceIndexer.java", "commitBeforeChange": "8f739e5e7e59755a66239cd3157a0979c83aa6f8", "commitAfterChange": "c0679d24710a6b2a91bf47b3b4b03da992188ceb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void indexDocument()", "signatureAfterChange": " \tpublic void indexDocument()", "diff": ["-\t\tIPath path = new Path(documentPath);", "+\t\t\tIPath path = new Path(documentPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab5f9f635dbd9bb6b02bc87285587b7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/FloatConstant.java", "commitBeforeChange": "c6b0ba0798e3e5869080431aec1d46cb3df138ed", "commitAfterChange": "0d803de6a1e9319f8fcdd3fdf5273a7bd463073e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic String stringValue()", "signatureAfterChange": " \t \tpublic String stringValue()", "diff": ["-\t\tif (s == null)", "-\t\t\treturn \"null\"; //$NON-NLS-1$", "-\t\telse", "-\t\t\treturn s;", "+\t\tif (s == null) return \"null\"; //$NON-NLS-1$", "+\t\treturn s;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adeaca4e1f427a4acf1ce1acd5579760", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "4b3205881d2b83b4d22e7e7448a1c8a755f73982", "commitAfterChange": "c30613b3c1eac52834666cb07a38e3f9077e1829", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": "  \tpublic Type convertType(TypeReference typeReference)", "signatureAfterChange": "  \tpublic Type convertType(TypeReference typeReference)", "diff": ["-\t\t\t\tlength = typeReference.sourceEnd - sourceStart + 1;", "+\t\t\tlength = typeReference.sourceEnd - sourceStart + 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2f0e034c0d3f16a5b02a3f80099f524", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "29a8044fc706583901ff89364d428dff04f6a567", "commitAfterChange": "5a5d0f43790375863ed059f546377b6a1dca079c", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprivate Set<AnnotationProcessorFactory> build(final BuildEnv processorEnv)", "signatureAfterChange": " \tprivate Set<AnnotationProcessorFactory> build(final BuildEnv processorEnv)", "diff": ["+\t\t\tEclipseRoundCompleteEvent event = null;", "-\t\t\t\tEclipseRoundCompleteEvent event = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc4a48755ed6ba03de972143761fea30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "c6b0ba0798e3e5869080431aec1d46cb3df138ed", "commitAfterChange": "0d803de6a1e9319f8fcdd3fdf5273a7bd463073e", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " public ReferenceBinding[] syntheticEnclosingInstanceTypes()", "signatureAfterChange": " public ReferenceBinding[] syntheticEnclosingInstanceTypes()", "diff": ["-\telse", "-\t\treturn new ReferenceBinding[] {enclosingType};", "+\treturn new ReferenceBinding[] {enclosingType};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcb22b5c736a8742e39a4fbeef2843f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void resolve(BlockScope scope)", "signatureAfterChange": " \t \tpublic void resolve(BlockScope scope)", "diff": ["-\t\t\t// check for assignment with no effect", "-\t\t\tif (this.binding == Assignment.getDirectBinding(this.initialization)) {", "-\t\t\t\tscope.problemReporter().assignmentHasNoEffect(this, this.name);", "-\t\t\t}", "-\t\t\t// change the constant in the binding when it is final", "-\t\t\t// (the optimization of the constant propagation will be done later on)", "-\t\t\t// cast from constant actual type to variable type", "+\t\t\t\t// check for assignment with no effect", "+\t\t\t\tif (this.binding == Assignment.getDirectBinding(this.initialization)) {", "+\t\t\t\t\tscope.problemReporter().assignmentHasNoEffect(this, this.name);", "+\t\t\t\t}", "+\t\t\t\t// change the constant in the binding when it is final", "+\t\t\t\t// (the optimization of the constant propagation will be done later on)", "+\t\t\t\t// cast from constant actual type to variable type"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be8ee467f2719dae46fd5f28da67d72d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceSearchTests.java", "commitBeforeChange": "14af252394acbb0bfcfcbfb1dcd81d43fd8bedb4", "commitAfterChange": "a5e72f7eb3d8ebc1e13245d6ce4d9ee4d6c6d3db", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic void testSearchType() throws CoreException", "signatureAfterChange": " \tpublic void testSearchType() throws CoreException", "diff": ["-\t\t// Clean memory", "-\t\trunGc();", "-", "+\t\t\trunGc();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf2d1ef584de4543e1456da14e67fac4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/DoubleConstant.java", "commitBeforeChange": "c6b0ba0798e3e5869080431aec1d46cb3df138ed", "commitAfterChange": "0d803de6a1e9319f8fcdd3fdf5273a7bd463073e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic String stringValue()", "signatureAfterChange": " \t \tpublic String stringValue()", "diff": ["-\t\tif (s == null)", "-\t\t\treturn \"null\"; //$NON-NLS-1$", "-\t\telse", "-\t\t\treturn s;", "+\t\tif (s == null) return \"null\"; //$NON-NLS-1$", "+\t\treturn s;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0dc6597410ed53f4b40f96ab91ed2a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/processing/JobManager.java", "commitBeforeChange": "79230cd7762a4c67bbe12b2445e22b464f420455", "commitAfterChange": "0e2b95cbd8acd25a30eff4aa5a4e5b34fa13b0c5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \tpublic void discardJobs(String jobFamily)", "signatureAfterChange": "\r \tpublic void discardJobs(String jobFamily)", "diff": ["+\t\t\t\t\tcurrentJob.cancel();\r", "-\t\t\t\t\t\t// request a cancel and wait until current job has accepted the cancel\r", "-\t\t\t\t\t\tcurrentJob.cancel();\r", "+\t\t\t\t\t\t// wait until current active job has accepted the cancel\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6c98640f0b94fc34ef972144745870e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionJavadocParser.java", "commitBeforeChange": "c9e120593d0735d48adb3fd437a574562eeeeaab", "commitAfterChange": "6f3511a648e9cd9042472fa266e28d2dd4fa2827", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tprotected void updateDocComment()", "signatureAfterChange": " \tprotected void updateDocComment()", "diff": ["-\t\tgetCompletionParser().assistNodeParent = this.docComment;", "+\t\t\tgetCompletionParser().assistNodeParent = this.docComment;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cca3f335bbd3666e43c8cb0deb072e46", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Buffer.java", "commitBeforeChange": "ac79ebad8b588bff5a071f74e9413cce9477383d", "commitAfterChange": "7bf0271f1c4a3a3e2fdf19c1b96995c79e10b393", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "\r public void save(IProgressMonitor progress, boolean force) throws JavaModelException", "signatureAfterChange": "\r public void save(IProgressMonitor progress, boolean force) throws JavaModelException", "diff": ["-\t\tString encoding = (String)JavaCore.getOptions().get(JavaCore.CORE_ENCODING);\r", "-\r", "+\t\t\tString encoding = (String)JavaCore.getOptions().get(JavaCore.CORE_ENCODING);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf9bedf660861f9afd1a955f24287679", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "927e71dd0053e44570431bb963abcb6762c4f72e", "commitAfterChange": "b85551d73960d4ac924c265aea72986d6bf6d1fa", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tprivate void checkProjectsBeingAddedOrRemoved(IResourceDelta delta)", "signatureAfterChange": " \tprivate void checkProjectsBeingAddedOrRemoved(IResourceDelta delta)", "diff": ["+\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t// ensure project references are updated (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=121569)", "+\t\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\t\tthis.state.updateProjectReferences(", "+\t\t\t\t\t\t\t\t\tjavaProject, ", "+\t\t\t\t\t\t\t\t\tnull/*no old classpath*/, ", "+\t\t\t\t\t\t\t\t\tnull/*compute new resolved classpath later*/, ", "+\t\t\t\t\t\t\t\t\tnull/*read raw classpath later*/, ", "+\t\t\t\t\t\t\t\t\tfalse/*cannot change resources*/);", "+\t\t\t\t\t\t\t} catch (JavaModelException e1) {", "+\t\t\t\t\t\t\t\t// project always exists", "+\t\t\t\t\t\t\t}\t\t\t\t\t", "-\t\t\t\t\t\t// ensure project references are updated (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=121569)", "-\t\t\t\t\t\ttry {", "-\t\t\t\t\t\t\tthis.state.updateProjectReferences(", "-\t\t\t\t\t\t\t\tjavaProject, ", "-\t\t\t\t\t\t\t\tnull/*no old classpath*/, ", "-\t\t\t\t\t\t\t\tnull/*compute new resolved classpath later*/, ", "-\t\t\t\t\t\t\t\tnull/*read raw classpath later*/, ", "-\t\t\t\t\t\t\t\tfalse/*cannot change resources*/);", "-\t\t\t\t\t\t} catch (JavaModelException e1) {", "-\t\t\t\t\t\t\t// project always exists", "-\t\t\t\t\t\t}", "-\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d07f4f19eb421eafab1de0c6c3f0d1a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "b76752c4514702a8d23bce33aaea8b569326dd8b", "commitAfterChange": "9be23fc2d62f4ce93ecee7802865796fde322418", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\t\t\t \tprivate void computeExpandedClasspath( \t\tJavaProject initialProject,  \t\tboolean ignoreUnresolvedVariable, \t\tboolean generateMarkerOnError, \t\tHashSet visitedProjects,  \t\tObjectVector accumulatedEntries, \t\tMap preferredClasspaths, \t\tMap preferredOutputs) throws JavaModelException", "signatureAfterChange": "\t\t\t \tprivate void computeExpandedClasspath( \t\tJavaProject initialProject,  \t\tboolean ignoreUnresolvedVariable, \t\tboolean generateMarkerOnError, \t\tHashSet visitedProjects,  \t\tObjectVector accumulatedEntries, \t\tMap preferredClasspaths, \t\tMap preferredOutputs) throws JavaModelException", "diff": ["+\t\tboolean isInitialProject = this.equals(initialProject);", "-", "-\t\t\tboolean isInitialProject = this.equals(initialProject);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1e731f8bf26863aa35e0e71b4544ba4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceSearchTests.java", "commitBeforeChange": "14af252394acbb0bfcfcbfb1dcd81d43fd8bedb4", "commitAfterChange": "a5e72f7eb3d8ebc1e13245d6ce4d9ee4d6c6d3db", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic void testSearchField() throws CoreException", "signatureAfterChange": " \tpublic void testSearchField() throws CoreException", "diff": ["-\t\t// Clean memory", "-\t\trunGc();", "-", "+\t\t\trunGc();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d66320bf086d920b332cbcf7d363e416", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyParser.java", "commitBeforeChange": "c052d66dbc2732414cdaf446e79eec5da0743843", "commitAfterChange": "2be9770fe170326f9451f25888ed7063aef96155", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "  \tpublic void parse(boolean pauseAfterFullyQualifiedName)", "signatureAfterChange": "  \tpublic void parse(boolean pauseAfterFullyQualifiedName)", "diff": ["+\t\t\t\tparseSecondaryType();", "-\t\t\tparseSecondaryType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7b85095f5b6b6defdcb95e34364fec6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/ClassDeclarationImpl.java", "commitBeforeChange": "29a8044fc706583901ff89364d428dff04f6a567", "commitAfterChange": "5a5d0f43790375863ed059f546377b6a1dca079c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          @SuppressWarnings(\"unchecked\") \tprivate void getASTConstructor(     \t\tfinal AbstractTypeDeclaration typeDecl,     \t\tfinal List<ConstructorDeclaration> results)", "signatureAfterChange": "          @SuppressWarnings(\"unchecked\") \tprivate void getASTConstructor(     \t\tfinal AbstractTypeDeclaration typeDecl,     \t\tfinal List<ConstructorDeclaration> results)", "diff": ["+    \tIFile file = null; ", "-    \t\tIFile file = null; "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9126fb1421321bd96303cd44f99868d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/TypeDeclarationImpl.java", "commitBeforeChange": "29a8044fc706583901ff89364d428dff04f6a567", "commitAfterChange": "5a5d0f43790375863ed059f546377b6a1dca079c", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     @SuppressWarnings(\"unchecked\") \tprotected void getASTMethods(     \t\tfinal AbstractTypeDeclaration typeDecl,      \t\tfinal List<MethodDeclaration> results)", "signatureAfterChange": "     @SuppressWarnings(\"unchecked\") \tprotected void getASTMethods(     \t\tfinal AbstractTypeDeclaration typeDecl,      \t\tfinal List<MethodDeclaration> results)", "diff": ["+    \tIFile file = null; ", "-    \t\tIFile file = null; "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9928bdc016581f3a4a311033502c1eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\tthis.expression.computeConversion(scope, this.resolvedType, expressionType);", "+\t\t\t\t\tthis.expression.computeConversion(scope, this.resolvedType, expressionType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9d0f224cdfe94d42c32ab5e90828b1d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/InstanceOfExpression.java", "commitBeforeChange": "4633416c1bc83f78e0f1a8be57a963ab252b187d", "commitAfterChange": "16e319d68a580fad9a7135780d9bbb105340c755", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t}", "-\t\tif ((expressionType != TypeBinding.NULL && expressionType.isBaseType()) // disallow autoboxing", "+\t\t} else if ((expressionType != TypeBinding.NULL && expressionType.isBaseType()) // disallow autoboxing"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2dd2aee502d4cfded4bc0eb09c40a07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "edf1aa4b220fec20b2ea6b3588c59f7c04f1c931", "commitAfterChange": "135f9386299e3566f4114db01233357ab2291b11", "methodNumberBeforeChange": 212, "methodNumberAfterChange": 212, "signatureBeforeChange": " \tpublic void saving(ISaveContext context) throws CoreException", "signatureAfterChange": " \tpublic void saving(ISaveContext context) throws CoreException", "diff": ["-\t\t// save non-chaining jar cache on snapshot/full save", "-\t\tsaveNonChainingJarsCache();", "-", "+\t\t\t// save non-chaining jar cache on snapshot/full save", "+\t\t\tsaveNonChainingJarsCache();", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4662b07d5c607f39f7dce9d4f86c416", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultStackMapFrame.java", "commitBeforeChange": "517b7635549251305475f5979e09084934078df3", "commitAfterChange": "1d890ea58166bb002c22a6562a5afba809d4c5d9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic DefaultStackMapFrame( \t\t\tbyte[] classFileBytes, \t\t\tIConstantPool constantPool, \t\t\tint offset) throws ClassFormatException", "signatureAfterChange": " \tpublic DefaultStackMapFrame( \t\t\tbyte[] classFileBytes, \t\t\tIConstantPool constantPool, \t\t\tint offset) throws ClassFormatException", "diff": ["+\t\tthis.readOffset = 4;", "-\t\t\tthis.readOffset = 4;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e77073b24d79c6a9e2c1ff0a27076182", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "0ce4ce22c72f34e69f5fcefb01350722f8598c48", "commitAfterChange": "8bcd93659b03cef1840f96fe89a46264aadd1f45", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic TypeVariableBinding(TypeVariableBinding prototype)", "signatureAfterChange": "  \tpublic TypeVariableBinding(TypeVariableBinding prototype)", "diff": ["-\t\tthis.superInterfaces = Binding.NO_SUPERINTERFACES;", "+\t\t\telse", "+\t\t\t\tthis.superInterfaces = Binding.NO_SUPERINTERFACES;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef9aa135588e3845182649d9e228efe4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "bc58ceae1b3691095e4db8bfcb9f2192eeaf077d", "commitAfterChange": "df9c3a401cd78995716c690f400af3a4d95f0187", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static MethodBinding computeCompatibleMethod(MethodBinding originalMethod, TypeBinding[] arguments, Scope scope, \t\t\tInvocationSite invocationSite, int inferenceLevel)", "signatureAfterChange": " \tpublic static MethodBinding computeCompatibleMethod(MethodBinding originalMethod, TypeBinding[] arguments, Scope scope, \t\t\tInvocationSite invocationSite, int inferenceLevel)", "diff": ["-\t\t\t\t\t\t\tif (compilerOptions.isAnnotationBasedNullAnalysisEnabled)", "-\t\t\t\t\t\t\t\tmethodSubstitute = NullAnnotationMatching.checkForContraditions(methodSubstitute, invocationSite, scope);", "+\t\t\t\t\t\t\t\tif (compilerOptions.isAnnotationBasedNullAnalysisEnabled)", "+\t\t\t\t\t\t\t\t\tmethodSubstitute = NullAnnotationMatching.checkForContraditions(methodSubstitute, invocationSite, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f349661ea690b6504c334cf5f0d31e52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " private IType findSuperClass(IGenericType type, ReferenceBinding typeBinding)", "signatureAfterChange": " private IType findSuperClass(IGenericType type, ReferenceBinding typeBinding)", "diff": ["-\t\t\tif (superclass != null) ", "-\t\t\t\t((SourceTypeBinding) typeBinding).superclass = superBinding = (ReferenceBinding) superclass;", "+\t\tif (superclass != null) ", "+\t\t\t((SourceTypeBinding) typeBinding).superclass = superBinding = (ReferenceBinding) superclass;"]}], "num": 12831}