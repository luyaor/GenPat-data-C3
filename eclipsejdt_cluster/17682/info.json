{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "23b0e92074c747bbafeaef79d23370bc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "610d081376febe82c2e315ae4c638fd0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " boolean detectInheritedNameClash(MethodBinding inherited, MethodBinding otherInherited)", "signatureAfterChange": " boolean detectInheritedNameClash(MethodBinding inherited, MethodBinding otherInherited)", "diff": ["-\tif (inherited.returnType.erasure() != otherInherited.returnType.erasure())", "+\tif (TypeBinding.notEquals(inherited.returnType.erasure(), otherInherited.returnType.erasure()))", "-\tif (inherited.declaringClass.erasure() != otherInherited.declaringClass.erasure()) {", "+\tif (TypeBinding.notEquals(inherited.declaringClass.erasure(), otherInherited.declaringClass.erasure())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "beabcdbd8e141928890b69fb2d7f2cdc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/PolymorphicMethodBinding.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic boolean matches(TypeBinding[] matchingParameters, TypeBinding matchingReturnType)", "signatureAfterChange": "  \tpublic boolean matches(TypeBinding[] matchingParameters, TypeBinding matchingReturnType)", "diff": ["-\t\t\tif (this.parameters[j] != matchingParameters[j]) {", "+\t\t\tif (TypeBinding.notEquals(this.parameters[j], matchingParameters[j])) {", "-\t\t} else if (matchingReturnType != cachedReturnType) {", "+\t\t} else if (TypeBinding.notEquals(matchingReturnType, cachedReturnType)) {"]}], "num": 17682}