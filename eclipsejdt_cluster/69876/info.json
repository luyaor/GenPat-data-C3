{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "58a68c83ba7f0f79381a496f0dd6ce42", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61f2fb1b57b995c7cc90c3ea592e1c89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/FileGenerationTests.java", "commitBeforeChange": "f2e69392c2b77f78381f44504717309f40a69302", "commitAfterChange": "cfc6d63918bb7d5d29292fed4468743597d36bdc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic void testTextFileGen() throws Exception", "signatureAfterChange": " \t \tpublic void testTextFileGen() throws Exception", "diff": ["+\t\tfinal String TEXT_FILE_NAME = \"TextFile.txt\";", "+", "+\t\tclearProcessorResult(TextGenAnnotationProcessor.class);", "-\t\t\t\t\"@TextGenAnnotation\" + \"\\n\" +", "+\t\t\t\t\"@TextGenAnnotation(\\\"\" + TEXT_FILE_NAME + \"\\\")\" + \"\\n\" +", "-\t\tFile theFile = new File(new File(outputRootPath), TextGenAnnotationProcessor.FILE_NAME);", "+\t\tFile theFile = new File(new File(outputRootPath), TEXT_FILE_NAME);", "-\t\t", "-\t\t// Look for the file again", "+\t\tcheckProcessorResult(TextGenAnnotationProcessor.class);", "-\t\t// remove the annotation, and the file should be deleted", "+\t\t// Change the annotation to specify an illegal filename, and an exception should be thrown", "+\t\tcode = ", "+\t\t\t\"package test;\" + \"\\n\" +", "+\t\t\t\"import org.eclipse.jdt.apt.tests.annotations.filegen.TextGenAnnotation;\" + \"\\n\" +", "+\t\t\t\"@TextGenAnnotation(\\\">.txt\\\")\" + \"\\n\" +", "+\t\t\t\"public class Test\" + \"\\n\" +", "+\t\t\t\"{\" + \"\\n\" +", "+\t\t\t\"}\";", "+\t\tenv.addClass(srcRoot, \"test\", \"Test\", code);", "+\t\t", "+\t\tfullBuild( project.getFullPath() );", "+\t\texpectingNoProblems();", "+\t\tassertEquals(\"Could not generate text file due to IOException\", getProcessorResult(TextGenAnnotationProcessor.class));", "+\t\tassertTrue(\"File was found, but should be deleted: \" + theFile.getAbsolutePath(), !theFile.exists());", "+\t\t", "+\t\t// remove the annotation, and the file should be deleted and processor should not run", "-\t\t", "-\t\t// Look for the file -- it should be gone", "+\t\tassertEquals(null, getProcessorResult(TextGenAnnotationProcessor.class));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "814bd052bbc077dabed1f5db28d99163", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/AnnotationValueConversionTests.java", "commitBeforeChange": "a6fb7155fd890e70fc93ff099a2bfa78beffa3e9", "commitAfterChange": "dade23c0ca1cb5b996dfae1d1cfc189d06d41a6f", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 23, "signatureBeforeChange": " \t@SuppressWarnings(\"nls\") \tpublic void testArrayElementConversion() throws Exception", "signatureAfterChange": " \t@SuppressWarnings(\"nls\") \tpublic void testArrayElementConversion() throws Exception", "diff": ["+\t */", "+\t@SuppressWarnings(\"nls\")", "+\tpublic void testArrayElementConversion() throws Exception {", "+\t\t// reset the error reset the error;", "+\t\tIProject project = setupTest();\t", "+\t\tIPath srcRoot = getSourcePath();\t\t", "+\t\t", "+\t\tString content =  ", "+\t\t\t\"package sample; \\n\\n\" + ", "+\t\t\t\"import org.eclipse.jdt.apt.tests.annotations.valueconversion.AnnotationWithArray;\\n\" +", "+\t\t\t\"@AnnotationWithArray(booleans={true, true },\\n\" +", "+\t\t\t\"\t\t\t\t  bytes=  {(byte)49, 50}, \\n\" +", "+\t\t\t\"\t\t\t\t  shorts= {(byte)49, 50},\\n\" + ", "+\t\t\t\"\t\t\t\t  ints=   {(byte)49, 50},\\n\" +", "+\t\t\t\"                 longs=  {(byte)49, 50},\\n\" +", "+\t\t\t\"\t \t \t      floats= {(byte)49, 50},\\n\" +", "+\t\t\t\"\t\t\t      doubles={(byte)49, 50},\\n\" +", "+\t\t\t\"\t\t\t\t  chars=  {'1','2'})\\n\\n\" + ", "+\t\t\t\"public class Test {}\\n\";", "-\tpublic void testArrayElementConversion() throws Exception {", "-\t\t\t\"@Test.Annotation(bytes=  {(byte)0,(byte)1}, \\n\" +", "-\t\t\t\"\t\t\t\t  shorts= {(byte)0,(byte)1},\\n\" + ", "-\t\t\t\"\t\t\t\t  ints=   {(byte)0,(byte)1},\\n\" +", "-\t\t\t\"                 longs=  {(byte)0,(byte)1},\\n\" +", "-\t\t\t\"\t \t \t      floats= {(byte)0,(byte)1},\\n\" +", "-\t\t\t\"\t\t\t      doubles={(byte)0,(byte)1},\\n\" +", "-\t\t\t\"\t\t\t\t  chars=  {(byte)0,(byte)1})\\n\\n\" + ", "-\t\t\t\"public class Test {\\n\" +", "-\t\t\t\"\tpublic @interface Annotation\\n\" +", "-\t\t\t\"\t{\\n\" +", "-\t\t\t\"\t\tchar[]   chars(); \\n\" +", "-\t\t\t\"       byte[]   bytes(); \\n\" +", "-\t\t\t\"\t\tshort[]  shorts();\\n\" +", "-\t\t\t\"\t\tint[]    ints();  \\n\" +", "-\t\t\t\"       long[]   longs(); \\n\" +", "-\t\t\t\"\t\tfloat[]  floats();\\n\" +", "-\t\t\t\"\t\tdouble[] doubles();\\n\" +", "-\t\t\t\"\t}\\n\" +", "-\t\t\t\"}\\n\";", "-\t}\t"]}], "num": 69876}