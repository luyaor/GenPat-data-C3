{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f6f292ac90b6354544c8b86d559f91de", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8357bca9e7eff984f57642ac0d4a9dac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 29, "signatureBeforeChange": " \t \tpublic char[] findSource(String fullName)", "signatureAfterChange": " \t \tpublic char[] findSource(String fullName)", "diff": ["-\t\t\tObject target = JavaModel.getTarget(ResourcesPlugin.getWorkspace().getRoot(), this.sourcePath, true);", "-\t\t\tif (target instanceof IResource) {", "-\t\t\t\tif (target instanceof IContainer) {", "-\t\t\t\t\tIResource res = ((IContainer)target).findMember(fullName);", "-\t\t\t\t\tif (res instanceof IFile) {", "-\t\t\t\t\t\ttry {", "-\t\t\t\t\t\t\tsource = org.eclipse.jdt.internal.core.util.Util.getResourceContentsAsCharArray((IFile)res);", "-\t\t\t\t\t\t} catch (JavaModelException e) {", "-\t\t\t\t\t\t\t// ignore", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t} else if (target instanceof File) {", "-\t\t\t\tFile file = (File)target;", "-\t\t\t\tif (file.isDirectory()) {", "-\t\t\t\t\tFile sourceFile = new File(file, fullName);", "-\t\t\t\t\tif (sourceFile.isFile()) {", "-\t\t\t\t\t\ttry {", "-\t\t\t\t\t\t\tsource = Util.getFileCharContent(sourceFile, this.encoding);", "-\t\t\t\t\t\t} catch (IOException e) {", "-\t\t\t\t\t\t\t// ignore", "-\t\t\t\t\t\t}", "+\t\t\tObject target = JavaModel.getTarget(this.sourcePath, true);", "+\t\t\tif (target instanceof IContainer) {", "+\t\t\t\tIResource res = ((IContainer)target).findMember(fullName);", "+\t\t\t\tif (res instanceof IFile) {", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tsource = org.eclipse.jdt.internal.core.util.Util.getResourceContentsAsCharArray((IFile)res);", "+\t\t\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t\t\t// ignore"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9091fad4726e10f1979e1a8d84d7d83d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PossibleMatch.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public char[] getContents()", "signatureAfterChange": " public char[] getContents()", "diff": ["-\ttry {", "-\t\tif (this.openable instanceof CompilationUnit) {", "-\t\t\tif (((CompilationUnit) this.openable).isWorkingCopy()) {", "-\t\t\t\tIBuffer buffer = this.openable.getBuffer();", "-\t\t\t\tif (buffer == null) return null;", "-\t\t\t\treturn this.source = buffer.getCharacters();", "-\t\t\t}", "-\t\t\treturn this.source = Util.getResourceContentsAsCharArray((IFile) this.resource);", "-\t\t} else if (this.openable instanceof ClassFile) {", "-\t\t\tString fileName = getSourceFileName();", "-\t\t\tif (fileName == NO_SOURCE_FILE_NAME) return null;", "+\tif (this.openable instanceof ClassFile) {", "+\t\tString fileName = getSourceFileName();", "+\t\tif (fileName == NO_SOURCE_FILE_NAME) return null;", "-\t\t\tSourceMapper sourceMapper = this.openable.getSourceMapper();", "-\t\t\tIType type = ((ClassFile) this.openable).getType();", "-\t\t\treturn this.source = sourceMapper.findSource(type, fileName);", "-\t\t}", "-\t} catch (JavaModelException e) { // ignored", "+\t\tSourceMapper sourceMapper = this.openable.getSourceMapper();", "+\t\tIType type = ((ClassFile) this.openable).getType();", "+\t\treturn this.source = sourceMapper.findSource(type, fileName);", "-\treturn null;", "+\treturn this.source = this.document.getCharContents();"]}], "num": 21721}