{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "197f5fafaf1b5d9d1b82eb4effcf3136", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2c7b05b39ff4407761070c06fbb8bdf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "a89cccae838c2b51a63527545b3d2d2d64fda77c", "commitAfterChange": "dc5bbd1a58a7eb7d9f32c665292f733f85515c9c", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": " public void testReplaceProject() throws CoreException", "signatureAfterChange": " public void testReplaceProject() throws CoreException", "diff": ["-\t\tfinal IJavaProject[] javaProjects = new IJavaProject[1];", "-\t\tjavaProjects[0] = createJavaProject(\"P\", new String[] {\"src\"}, \"bin\");", "+\t\tfinal IJavaProject javaProject = createJavaProject(\"P\", new String[] {\"src\"}, \"bin\");", "-\t\t\t\t\tdeleteProject(\"P\");", "-\t\t\t\t\tjavaProjects[0] = createJavaProject(\"P\", new String[] {\"src2\"}, \"bin2\");", "+\t\t\t\t\tIProjectDescription descr = javaProject.getProject().getDescription();", "+\t\t\t\t\tdescr.setComment(\"dummy\"); // ensure it is changed", "+\t\t\t\t\tjavaProject.getProject().setDescription(descr, monitor);", "+\t\t\t\t\teditFile(", "+\t\t\t\t\t\t\"/P/.classpath\",", "+\t\t\t\t\t\t\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" +", "+\t\t\t\t\t\t\"<classpath>\\n\" +", "+\t\t\t\t\t\t\"    <classpathentry kind=\\\"src\\\" path=\\\"src2\\\"/>\\n\" +", "+\t\t\t\t\t\t\"    <classpathentry kind=\\\"output\\\" path=\\\"bin\\\"/>\\n\" +", "+\t\t\t\t\t\t\"</classpath>\"", "+\t\t\t\t\t);", "-\t\tIClasspathEntry[] classpath = javaProjects[0].getRawClasspath();", "+\t\tIClasspathEntry[] classpath = javaProject.getRawClasspath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f70a68713f5ef8d9519ab8fcf6161910", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "6cb413dbd992ad73f847d7b4e14e78f1406fa2fc", "commitAfterChange": "8659b871eae5c2008485cfb120ce2c8f8ecbfe04", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic void parentWorkingCopyDiscarded( IFile parentFile ) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic void workingCopyDiscarded(ICompilationUnit wc) throws CoreException", "diff": ["-\t */", "-\tpublic void parentWorkingCopyDiscarded( IFile parentFile )", "-\t\tthrows JavaModelException", "-\t{", "-\t\tSet<IFile> generatedFiles;", "-\t\tsynchronized( this )", "-\t\t{", "-\t\t\tgeneratedFiles = _parentFile2GeneratedFiles.get( parentFile );", "-\t\t\tif ( generatedFiles == null || generatedFiles.size() == 0 )", "-\t\t\t\treturn;", "-\t\t", "-\t\t\t// make a copy to prevent race conditions", "-\t\t\tgeneratedFiles = new HashSet<IFile>( generatedFiles );", "-\t\t}", "-\t\t", "-\t\tfor ( IFile generatedFile : generatedFiles )", "-\t\t\tdiscardGeneratedWorkingCopy( generatedFile, parentFile );", "+\t */", "+\tpublic void workingCopyDiscarded(ICompilationUnit wc) throws CoreException", "+\t{", "+\t\tSet<ICompilationUnit> toDiscard = removeWcChildrenFromMaps(wc);", "+\t\tif (AptPlugin.DEBUG_GFM) AptPlugin.trace(", "+\t\t\t\t\"Working copy discarded: \" + wc.getElementName() + //$NON-NLS-1$", "+\t\t\t\t\" removing \" + toDiscard.size() + \" children\");  //$NON-NLS-1$//$NON-NLS-2$", "+\t\tfor (ICompilationUnit obsoleteWC : toDiscard) {", "+\t\t\t_CUHELPER.discardWorkingCopy(obsoleteWC);", "+\t\t}", "+\t}"]}], "num": 48922}