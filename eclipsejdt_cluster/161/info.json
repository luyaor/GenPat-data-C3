{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1ca27f72ec9aa50dde0a94a86ebbb567", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6a97f962e0089377571f4397414e5c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "c458ad2d505b6f4a7e2ec3bba3954504b01472bd", "commitAfterChange": "f802d6fc991463cb62d45c1ee5e011116f9ae063", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic static IJavaElement determineIfOnClasspath( \t\tIResource resource, \t\tIJavaProject project)", "signatureAfterChange": " \tpublic static IJavaElement determineIfOnClasspath( \t\tIResource resource, \t\tIJavaProject project)", "diff": ["-\t\t\t\t} else if (rootPath.isPrefixOf(resourcePath) && !Util.isExcluded(resource, ((ClasspathEntry)entry).fullExclusionPatternChars())) {", "-\t\t\t\t\t// given we have a resource child of the root, it cannot be a JAR pkg root", "-\t\t\t\t\tIPackageFragmentRoot root = ((JavaProject) project).getFolderPackageFragmentRoot(rootPath);", "-\t\t\t\t\tif (root == null) return null;", "-\t\t\t\t\tIPath pkgPath = resourcePath.removeFirstSegments(rootPath.segmentCount());", "-", "-\t\t\t\t\tif (resource.getType() == IResource.FILE) {", "-\t\t\t\t\t\t// if the resource is a file, then remove the last segment which", "-\t\t\t\t\t\t// is the file name in the package", "-\t\t\t\t\t\tpkgPath = pkgPath.removeLastSegments(1);", "+\t\t\t\t} else if (rootPath.isPrefixOf(resourcePath)) {", "+\t\t\t\t\t// allow creation of package fragment if it contains a .java file that is included", "+\t\t\t\t\tif (!Util.isExcluded(resource, ((ClasspathEntry)entry).fullInclusionPatternChars(), ((ClasspathEntry)entry).fullExclusionPatternChars())) {", "+\t\t\t\t\t\t// given we have a resource child of the root, it cannot be a JAR pkg root", "+\t\t\t\t\t\tIPackageFragmentRoot root = ((JavaProject) project).getFolderPackageFragmentRoot(rootPath);", "+\t\t\t\t\t\tif (root == null) return null;", "+\t\t\t\t\t\tIPath pkgPath = resourcePath.removeFirstSegments(rootPath.segmentCount());", "+\t", "+\t\t\t\t\t\tif (resource.getType() == IResource.FILE) {", "+\t\t\t\t\t\t\t// if the resource is a file, then remove the last segment which", "+\t\t\t\t\t\t\t// is the file name in the package", "+\t\t\t\t\t\t\tpkgPath = pkgPath.removeLastSegments(1);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tString pkgName = Util.packageName(pkgPath);", "+\t\t\t\t\t\tif (pkgName == null || JavaConventions.validatePackageName(pkgName).getSeverity() == IStatus.ERROR) {", "+\t\t\t\t\t\t\treturn null;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\treturn root.getPackageFragment(pkgName);", "-\t\t\t\t\tString pkgName = Util.packageName(pkgPath);", "-\t\t\t\t\tif (pkgName == null || JavaConventions.validatePackageName(pkgName).getSeverity() == IStatus.ERROR) {", "-\t\t\t\t\t\treturn null;", "-\t\t\t\t\t}", "-\t\t\t\t\treturn root.getPackageFragment(pkgName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe0fbfff739816fb8c9519518145824e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "c458ad2d505b6f4a7e2ec3bba3954504b01472bd", "commitAfterChange": "f802d6fc991463cb62d45c1ee5e011116f9ae063", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprivate Openable createElement(IResource resource, int elementType, RootInfo rootInfo)", "signatureAfterChange": " \tprivate Openable createElement(IResource resource, int elementType, RootInfo rootInfo)", "diff": ["-\t\t\t\t\t\telement = (Openable)rootInfo.project;", "+\t\t\t\t\t\telement = rootInfo.project;", "-\t\t\t\telement = rootInfo == null ? JavaCore.create(resource) : rootInfo.project.getPackageFragmentRoot(resource);", "+\t\t\t\telement = rootInfo == null ? JavaCore.create(resource) : rootInfo.getPackageFragmentRoot(resource);", "-\t\t\t\t// find the element that encloses the resource", "-\t\t\t\tthis.popUntilPrefixOf(path);", "-\t\t\t\t", "-\t\t\t\tif (this.currentElement == null) {", "-\t\t\t\t\telement = rootInfo == null ? JavaCore.create(resource) : JavaModelManager.create(resource, rootInfo.project);", "-\t\t\t\t} else {", "-\t\t\t\t\t// find the root", "-\t\t\t\t\tIPackageFragmentRoot root = this.currentElement.getPackageFragmentRoot();", "-\t\t\t\t\tif (root == null) {", "-\t\t\t\t\t\telement =  rootInfo == null ? JavaCore.create(resource) : JavaModelManager.create(resource, rootInfo.project);", "-\t\t\t\t\t} else if (((JavaProject)root.getJavaProject()).contains(resource)) {", "+\t\t\t\tif (rootInfo != null) {", "+\t\t\t\t\tif (rootInfo.project.contains(resource)) {", "+\t\t\t\t\t\tIPackageFragmentRoot root = rootInfo.getPackageFragmentRoot(null);", "-\t\t\t\t\t\tIPath pkgPath = path.removeFirstSegments(root.getPath().segmentCount());", "+\t\t\t\t\t\tIPath pkgPath = path.removeFirstSegments(rootInfo.rootPath.segmentCount());", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\t// find the element that encloses the resource", "+\t\t\t\t\tthis.popUntilPrefixOf(path);", "+\t\t\t\t", "+\t\t\t\t\tif (this.currentElement == null) {", "+\t\t\t\t\t\telement = JavaCore.create(resource);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\t// find the root", "+\t\t\t\t\t\tIPackageFragmentRoot root = this.currentElement.getPackageFragmentRoot();", "+\t\t\t\t\t\tif (root == null) {", "+\t\t\t\t\t\t\telement =  JavaCore.create(resource);", "+\t\t\t\t\t\t} else if (((JavaProject)root.getJavaProject()).contains(resource)) {", "+\t\t\t\t\t\t\t// create package handle", "+\t\t\t\t\t\t\tIPath pkgPath = path.removeFirstSegments(root.getPath().segmentCount());", "+\t\t\t\t\t\t\tString pkg = Util.packageName(pkgPath);", "+\t\t\t\t\t\t\tif (pkg == null) return null;", "+\t\t\t\t\t\t\telement = root.getPackageFragment(pkg);", "+\t\t\t\t\t\t}"]}], "num": 161}