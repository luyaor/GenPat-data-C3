{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "71968ff62127565882e7bbc923070b43", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "295682bffbe8c72d4a73b03a06a72511", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitStructureRequestor.java", "commitBeforeChange": "4facfcdf4a36f611ae455f345faa2a13f779251b", "commitAfterChange": "9b4626a240c7fe9f3a95f4bc274592915f73c7ef", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void exitMethod(int declarationEnd)", "signatureAfterChange": " public void exitMethod(int declarationEnd, int defaultValueStart, int defaultValueEnd)", "diff": ["-public void exitMethod(int declarationEnd) {", "-\texitMember(declarationEnd);", "+public void exitMethod(int declarationEnd, int defaultValueStart, int defaultValueEnd) {", "+\tSourceMethodElementInfo info = (SourceMethodElementInfo) this.infoStack.pop();", "+\tinfo.setSourceRangeEnd(declarationEnd);", "+\t", "+\t// remember default value of annotation method", "+\tif (defaultValueStart != -1) {", "+\t\tint length = defaultValueEnd - defaultValueStart + 1;", "+\t\tif (length > 0) {", "+\t\t\tchar[] defaultValue = new char[length];", "+\t\t\tSystem.arraycopy(this.parser.scanner.source, defaultValueStart, defaultValue, 0, length);", "+\t\t\tinfo.defaultAnnotationValue = defaultValue;", "+\t\t}", "+\t}", "+\tthis.handleStack.pop();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f74b75b6674150b3e4869e98012ebeec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitStructureRequestor.java", "commitBeforeChange": "7065da01531bf4c318c59206b62aa1503a948abe", "commitAfterChange": "0d303c13e0085d7aef9947e46f37c617f206a066", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void exitField(int declarationEnd)", "signatureAfterChange": " public void exitField(int initializationStart, int declarationEnd)", "diff": ["-public void exitField(int declarationEnd) {", "-\texitMember(declarationEnd);", "+public void exitField(int initializationStart, int declarationEnd) {", "+\tSourceFieldElementInfo info = (SourceFieldElementInfo) fInfoStack.pop();", "+\tinfo.setSourceRangeEnd(declarationEnd);", "+\t", "+\t// remember initializer source if field is a constant", "+\tif (initializationStart != -1) {", "+\t\tint flags = info.flags;", "+\t\tObject typeInfo;", "+\t\tif (Flags.isStatic(flags) && Flags.isFinal(flags)", "+\t\t\t\t|| ((typeInfo = fInfoStack.peek()) instanceof SourceTypeElementInfo", "+\t\t\t\t\t && (Flags.isInterface(((SourceTypeElementInfo)typeInfo).flags)))) {", "+\t\t\tint length = declarationEnd - initializationStart;", "+\t\t\tif (length > 0) {", "+\t\t\t\tchar[] initializer = new char[length];", "+\t\t\t\tSystem.arraycopy(this.parser.scanner.source, initializationStart, initializer, 0, length);", "+\t\t\t\tinfo.initializationSource = initializer;", "+\t\t\t}", "+\t\t}", "+\t}", "+\tfHandleStack.pop();"]}], "num": 34780}