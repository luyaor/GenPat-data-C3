{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1e47bfa4f923d4aa23c722f61f8bf1bd", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bdc8aa48b0ce9c015cbe7bc1e96d0c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a1b8b888d8c8c040023fcd2856f96f5ad6c69b3e", "commitAfterChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \r \tpublic CompletionEngine(\r \t\tISearchableNameEnvironment nameEnvironment,\r \t\tICompletionRequestor requestor,\r \t\tConfigurableOption[] settings)", "signatureAfterChange": "\r \r public CompletionEngine(\r \tISearchableNameEnvironment nameEnvironment, ICompletionRequestor requestor, ConfigurableOption[] settings)", "diff": ["-\tpublic CompletionEngine(\r", "-\t\tISearchableNameEnvironment nameEnvironment,\r", "-\t\tICompletionRequestor requestor,\r", "-\t\tConfigurableOption[] settings) {\r", "-\t\tthis.requestor = requestor;\r", "-\t\tthis.nameEnvironment = nameEnvironment;\r", "+public CompletionEngine(\r", "+\tISearchableNameEnvironment nameEnvironment, ICompletionRequestor requestor, ConfigurableOption[] settings) {\r", "-\t\toptions = new CompletionOptions(settings);\r", "-\t\tCompilerOptions compilerOptions = new CompilerOptions(settings);\r", "-\t\tProblemReporter problemReporter =\r", "-\t\t\tnew ProblemReporter(\r", "-\t\t\t\tDefaultErrorHandlingPolicies.proceedWithAllProblems(),\r", "-\t\t\t\tcompilerOptions,\r", "-\t\t\t\tnew DefaultProblemFactory(Locale.getDefault())) {\r", "-\t\t\tpublic void record(IProblem problem, CompilationResult unitResult) {\r", "-\t\t\t\tif (problem.getID() != ProblemIrritants.UnmatchedBracket) {\r", "-\t\t\t\t\tunitResult.record(problem);\r", "-\t\t\t\t\tCompletionEngine.this.requestor.acceptError(problem);\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t};\r", "+\tthis.requestor = requestor;\r", "+\tthis.nameEnvironment = nameEnvironment;\r", "-\t\tthis.parser =\r", "-\t\t\tnew CompletionParser(problemReporter, compilerOptions.getAssertMode());\r", "-\t\tthis.lookupEnvironment =\r", "-\t\t\tnew LookupEnvironment(this, compilerOptions, problemReporter, nameEnvironment);\r", "-\t}\r", "+\tCompilerOptions options = new CompilerOptions(settings);\r", "+\tProblemReporter problemReporter =\r", "+\t\tnew ProblemReporter(\r", "+\t\t\tDefaultErrorHandlingPolicies.proceedWithAllProblems(),\r", "+\t\t\toptions,\r", "+\t\t\tnew DefaultProblemFactory(Locale.getDefault())) {\r", "+\t\t\t\tpublic void record(IProblem problem, CompilationResult unitResult) {\r", "+\t\t\t\t\tif (problem.getID() != ProblemIrritants.UnmatchedBracket) {\r", "+\t\t\t\t\t\tunitResult.record(problem);\r", "+\t\t\t\t\t\tCompletionEngine.this.requestor.acceptError(problem);\r", "+\t\t\t};\r", "+\tthis.parser = new CompletionParser(problemReporter);\r", "+\tthis.lookupEnvironment = new LookupEnvironment(this, options, problemReporter, nameEnvironment);\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f4e84dda8cb7a6d42ad39562657edbe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "46418d248f89a29f49a77d154cdbfa57c408b256", "commitAfterChange": "c85433e27f0fa74bfe8e06c38c1c02c51b5599d7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \r \tpublic CompletionEngine(\r \t\tISearchableNameEnvironment nameEnvironment,\r \t\tICompletionRequestor requestor,\r \t\tConfigurableOption[] settings)", "signatureAfterChange": "\r \r public CompletionEngine(\r \tISearchableNameEnvironment nameEnvironment, ICompletionRequestor requestor, ConfigurableOption[] settings)", "diff": ["-\tpublic CompletionEngine(\r", "-\t\tISearchableNameEnvironment nameEnvironment,\r", "-\t\tICompletionRequestor requestor,\r", "-\t\tConfigurableOption[] settings) {\r", "-\t\tthis.requestor = requestor;\r", "-\t\tthis.nameEnvironment = nameEnvironment;\r", "+public CompletionEngine(\r", "+\tISearchableNameEnvironment nameEnvironment, ICompletionRequestor requestor, ConfigurableOption[] settings) {\r", "-\t\toptions = new CompletionOptions(settings);\r", "-\t\tCompilerOptions compilerOptions = new CompilerOptions(settings);\r", "-\t\tProblemReporter problemReporter =\r", "-\t\t\tnew ProblemReporter(\r", "-\t\t\t\tDefaultErrorHandlingPolicies.proceedWithAllProblems(),\r", "-\t\t\t\tcompilerOptions,\r", "-\t\t\t\tnew DefaultProblemFactory(Locale.getDefault())) {\r", "-\t\t\tpublic void record(IProblem problem, CompilationResult unitResult) {\r", "-\t\t\t\tif (problem.getID() != ProblemIrritants.UnmatchedBracket) {\r", "-\t\t\t\t\tunitResult.record(problem);\r", "-\t\t\t\t\tCompletionEngine.this.requestor.acceptError(problem);\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t};\r", "+\tthis.requestor = requestor;\r", "+\tthis.nameEnvironment = nameEnvironment;\r", "-\t\tthis.parser =\r", "-\t\t\tnew CompletionParser(problemReporter, compilerOptions.getAssertMode());\r", "-\t\tthis.lookupEnvironment =\r", "-\t\t\tnew LookupEnvironment(this, compilerOptions, problemReporter, nameEnvironment);\r", "-\t}\r", "+\tCompilerOptions options = new CompilerOptions(settings);\r", "+\tProblemReporter problemReporter =\r", "+\t\tnew ProblemReporter(\r", "+\t\t\tDefaultErrorHandlingPolicies.proceedWithAllProblems(),\r", "+\t\t\toptions,\r", "+\t\t\tnew DefaultProblemFactory(Locale.getDefault())) {\r", "+\t\t\t\tpublic void record(IProblem problem, CompilationResult unitResult) {\r", "+\t\t\t\t\tif (problem.getID() != ProblemIrritants.UnmatchedBracket) {\r", "+\t\t\t\t\t\tunitResult.record(problem);\r", "+\t\t\t\t\t\tCompletionEngine.this.requestor.acceptError(problem);\r", "+\t\t\t};\r", "+\tthis.parser = new CompletionParser(problemReporter);\r", "+\tthis.lookupEnvironment = new LookupEnvironment(this, options, problemReporter, nameEnvironment);\r", "+}\r"]}], "num": 69486}