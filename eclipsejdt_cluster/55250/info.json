{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2129cf4f9ea0625a9ca7f2b1885cbe94", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a45e3e6bc730c68f51a675144e065be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TypeAnnotationTest.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void test009() throws Exception", "signatureAfterChange": " \tprotected Map getCompilerOptions()", "diff": ["-\t// throws", "-\tpublic void test009() throws Exception {", "+\t// Enables the tests to run individually", "+\tprotected Map getCompilerOptions() {", "+\t\tMap defaultOptions = super.getCompilerOptions();", "+\t\tdefaultOptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_8);", "+\t\tdefaultOptions.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_8);", "+\t\tdefaultOptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_8);", "+\t\treturn defaultOptions;", "+\t}", "-\t\t\t\t\"E.java\",", "-\t\t\t\t\"class E extends RuntimeException {\\n\" +", "-\t\t\t\t\"\tprivate static final long serialVersionUID = 1L;\\n\" +", "-\t\t\t\t\"E1.java\",", "-\t\t\t\t\"class E1 extends RuntimeException {\\n\" +", "-\t\t\t\t\"\tprivate static final long serialVersionUID = 1L;\\n\" +", "-\t\t\t\t\"E2.java\",", "-\t\t\t\t\"class E2 extends RuntimeException {\\n\" +", "-\t\t\t\t\"\tprivate static final long serialVersionUID = 1L;\\n\" +", "-\t\t\t\t\"\tvoid foo() throws @A(\\\"Hello, World!\\\") E, E1, @B @C('(') E2 {}\\n\" +", "-\t\t\t\"      #25 @A(\\n\" + ", "-\t\t\t\"        #26 value=\\\"Hello, World!\\\" (constant type)\\n\" + ", "-\t\t\t\"        target type = 0x16 THROWS\\n\" + ", "-\t\t\t\"        throws index = 0\\n\" + ", "-\t\t\t\"      )\\n\" + ", "-\t\t\t\"      #28 @C(\\n\" + ", "-\t\t\t\"        #26 value=\\'(\\' (constant type)\\n\" + ", "-\t\t\t\"        target type = 0x16 THROWS\\n\" + ", "-\t\t\t\"        throws index = 2\\n\" + ", "-\t\t\t\"      )\\n\" + ", "-\t\t\t\"    RuntimeInvisibleTypeAnnotations: \\n\" + ", "-\t\t\t\"      #23 @B(\\n\" + ", "-\t\t\t\"        target type = 0x16 THROWS\\n\" + ", "-\t\t\t\"        throws index = 2\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48a05fd5cee4189cfed69cc1bba58f99", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 771, "methodNumberAfterChange": 771, "signatureBeforeChange": " public void test738()", "signatureAfterChange": " public void test738()", "diff": ["-// https://bugs.eclipse.org/bugs/show_bug.cgi?id=332843", "+// binary literals / underscores in literals / multi catch", "+\tthis.formatterPrefs = null;", "+\tthis.formatterOptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_7);", "+\tthis.formatterOptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_7);", "+\tthis.formatterOptions.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_7);", "+\tString source =", "+\t\t\"public class Test {\\n\" +", "+\t\t\"\tint i = 0b0001;\\n\" +", "+\t\t\"\tint j = 0b0_0_0_1;\\n\" +", "+\t\t\"\tvoid foo(String s) {\\n\" +", "+\t\t\"\t\ttry {\\n\" +", "+\t\t\"\t\t\tFileReader reader = new FileReader(s);\\n\" +", "+\t\t\"\t\t} catch(FileNotFoundException | IOException | Exception e) {\\n\" +", "+\t\t\"\t\t\te.printStackTrace();\\n\" +", "+\t\t\"\t\t}\\n\" +", "+\t\t\"\t}\\n\" +", "+\t\t\"}\\n\";", "+\tformatSource(source,", "+\t\t\"public class Test {\\n\" + ", "+\t\t\"\tint i = 0b0001;\\n\" + ", "+\t\t\"\tint j = 0b0_0_0_1;\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"\tvoid foo(String s) {\\n\" + ", "+\t\t\"\t\ttry {\\n\" + ", "+\t\t\"\t\t\tFileReader reader = new FileReader(s);\\n\" + ", "+\t\t\"\t\t} catch (FileNotFoundException | IOException | Exception e) {\\n\" + ", "+\t\t\"\t\t\te.printStackTrace();\\n\" + ", "+\t\t\"\t\t}\\n\" + ", "+\t\t\"\t}\\n\" + ", "+\t\t\"}\\n\"", "+\t);", "+}", "-\trunTest(codeFormatter, \"test738\", \"RecipeDocumentProvider.java\", CodeFormatter.K_COMPILATION_UNIT, 0, true, regions, \"\\n\");//$NON-NLS-1$ //$NON-NLS-2$"]}], "num": 55250}