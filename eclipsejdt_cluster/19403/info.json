{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "61d01292520f1a0c7de4eb4c451d8600", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56ec526ecfd1f20cee1e5f5c1aca6bb0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/AnnotationInvocationHandler.java", "commitBeforeChange": "b4f6df5ae08d61af8762ee59e5c247a670be227d", "commitAfterChange": "7007043cae1b12e48764a4ad7f71075181f1dd30", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprivate Object _getReflectionValue(final Object domValue, final Class expectedType) \t\tthrows IllegalAccessException, NoSuchFieldException", "signatureAfterChange": "  \tprivate Object _getReflectionValue(final Object domValue, final Class expectedType)", "diff": ["-\t\tthrows IllegalAccessException, NoSuchFieldException", "-\t        \tfinal Field returnedField = expectedType.getField( varBinding.getName() );", "-\t        \treturn returnedField == null ? null : returnedField.get(null);", "+\t        \ttry {", "+\t        \t\tfinal Field returnedField = expectedType.getField( varBinding.getName() );", "+\t        \t\treturn returnedField == null ? null : returnedField.get(null);", "+\t        \t}", "+\t        \tcatch (NoSuchFieldException nsfe) {", "+\t        \t\treturn null;", "+\t        \t}", "+\t        \tcatch (IllegalAccessException iae) {", "+\t        \t\treturn null;", "+\t        \t}", "-\t\t\tassert expectedType.isArray();", "+\t\t\tif(!expectedType.isArray())", "+\t\t\t\treturn null; // bad user source", "+\t    \t// Make sure the expected value is not a String or a primitive", "+\t    \tif (expectedType.isPrimitive() || expectedType == String.class) {", "+\t    \t\treturn domValue;", "+\t    \t}", "+\t    \t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a4504ed04a357762732a477f586d0e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "ddff16f6a6b8fee88d497b4653d14d58ccda81b4", "commitAfterChange": "128a99659b73df0d65c1b7965233f291b8bbcedc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-    \t\t\t\treturn this.resolvedType;", "+    \t\t\t\treturn this.resolvedType = null;", "-\t\t\t\treturn this.resolvedType;", "+\t\t\t\treturn this.resolvedType = null;", "-\t\t\treturn null;", "+\t\t\treturn this.resolvedType = null;", "-\t\t\treturn null;", "+\t\t\treturn this.resolvedType = null;", "-\t\t\treturn null;", "+\t\t\treturn this.resolvedType = null;", "-        \t\treturn null;", "+        \t\treturn this.resolvedType = null;", "-        \t\treturn null;", "+        \t\treturn this.resolvedType = null;", "-        \t\treturn null;", "+        \t\treturn this.resolvedType = null;", "-        \treturn null;", "+        \treturn this.resolvedType =  null;", "-    \t\t\treturn null;", "+    \t\t\treturn this.resolvedType = null;", "-        \t\t\treturn null;", "+        \t\t\treturn this.resolvedType = null;", "-        \t\treturn null;", "+        \t\treturn this.resolvedType = null;", "-        \treturn null;", "+        \treturn this.resolvedType = null;", "-\t\t\treturn null;", "+\t\t\treturn this.resolvedType = null;", "+    \t\t\tthis.resolvedType = null;"]}], "num": 19403}