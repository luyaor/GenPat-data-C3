{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6684b24012a15e1cee8346cb00f54241", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0806e62885be2bebeeb868bd33032143", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/comment/JavaDocRegion.java", "commitBeforeChange": "68525b84595448677be090c87606421a9f80c7ac", "commitAfterChange": "7af5dc6adcf6a26075d080ec37c4dad42d3059c6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprotected final void markJavadocTag(final CommentRange range, final String token)", "signatureAfterChange": " \tprotected final void markJavadocTag(final CommentRange range, final char[] token)", "diff": ["-\tprotected final void markJavadocTag(final CommentRange range, final String token) {", "+\tprotected final void markJavadocTag(final CommentRange range, final char[] token) {", "-\t\tif (token.charAt(0) == JAVADOC_TAG_PREFIX && !range.hasAttribute(COMMENT_PARAMETER))", "+\t\tif (token[0] == JAVADOC_TAG_PREFIX && !range.hasAttribute(COMMENT_PARAMETER))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "754fbe33c5aea69829af6984a59accce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "c59be425cf25326239f4ea61082e801292bcf9ab", "commitAfterChange": "d6fb9802bac486c7e71b20d321f123bc000bd933", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r public static int getArrayCount(String typeSignature) throws IllegalArgumentException", "signatureAfterChange": "\r public static int getArrayCount(char[] typeSignature) throws IllegalArgumentException", "diff": ["+ */\r", "+public static int getArrayCount(char[] typeSignature) throws IllegalArgumentException {\t\r", "+\t\tint count = 0;\r", "+\t\twhile (typeSignature[count] == C_ARRAY) {\r", "+\t\t\t++count;\r", "+\t\treturn count;\r", "+\t} catch (ArrayIndexOutOfBoundsException e) { // signature is syntactically incorrect if last character is C_ARRAY\r", "-\ttry {\r", "-\t\tint count = 0;\r", "-\t\twhile (typeSignature.charAt(count) == C_ARRAY) {\r", "-\t\t\t++count;\r", "-\t\t}\r", "-\t\treturn count;\r", "-\t} catch (StringIndexOutOfBoundsException e) {\r", "-\t\tthrow new IllegalArgumentException();\r", "-\t}\r"]}], "num": 9956}