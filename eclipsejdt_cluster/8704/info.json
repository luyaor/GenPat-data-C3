{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1e833bc5fc0e1da29b8c2529bdba5605", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d879cdd97dc9a746944a2c186656282", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "07500b3aefa58aecd5e846627b7c70382793f29f", "commitAfterChange": "641c18a6fa8d154329ae2bcdac1ab25ff8b18f71", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic boolean ensureGeneratedSourceFolder( IProgressMonitor progressMonitor )", "signatureAfterChange": " \tpublic boolean ensureGeneratedSourceFolder()", "diff": ["-\tpublic boolean ensureGeneratedSourceFolder( IProgressMonitor progressMonitor ){", "+\tpublic boolean ensureGeneratedSourceFolder(){", "-\t\t\t\telse {", "-\t\t\t\t\tif (_javaProject.isOnClasspath(_generatedSourceFolder))", "+\t\t\t\telse {\t\t\t\t\t", "+\t\t\t\t\ttry{", "+\t\t\t\t\t\t_generatedSourceFolder.refreshLocal( IResource.DEPTH_INFINITE, null );", "+\t\t\t\t\t}", "+\t\t\t\t\tcatch(CoreException ce){", "+\t\t\t\t\t\tAptPlugin.log(ce, \"Failure during refreshLocal on \" + srcFolderPath); //$NON-NLS-1$", "+", "+\t\t\t\t\t}", "+\t\t\t\t\t", "+\t\t\t\t\t// if the folder doesn't exists, there is no point examining the classpath", "+\t\t\t\t\tboolean isConsistent = false;", "+\t\t\t\t\tif (_generatedSourceFolder.exists()) {", "+\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\tIJavaProject jp = _aptProject.getJavaProject();", "+\t\t\t\t\t\t\tIClasspathEntry[] cp = jp.getRawClasspath();", "+\t\t\t\t\t\t\tIPath path = _generatedSourceFolder.getFullPath();", "+\t\t\t\t\t\t\tisConsistent = isProjectClassPathUpToDate(jp, cp, path, null);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tcatch (JavaModelException jme) {", "+\t\t\t\t\t\t\tAptPlugin.log(jme, \"Failure examining the classpath\"); //$NON-NLS-1$", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\t", "+\t\t\t\t\tif(isConsistent)", "-\t\t\t\tremoveFromProjectClasspath(_javaProject, curSrcFolder, progressMonitor );", "+\t\t\t\tremoveFromProjectClasspath(_aptProject.getJavaProject(), curSrcFolder, null );", "-\t\t ", "-\t\t\tsrcFolder.refreshLocal( IResource.DEPTH_INFINITE, progressMonitor );", "+\t\t\tsrcFolder.refreshLocal( IResource.DEPTH_INFINITE, null );", "-\t\t\tupdateProjectClasspath( _javaProject, srcFolder, progressMonitor );", "+\t\t\tupdateProjectClasspath( _aptProject.getJavaProject(), srcFolder, null );", "+\t\t\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5579dfaba0ab836f50f43237c36885f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "69d976ecb2b4a910a78fb1eaf551e2775a0ff256", "commitAfterChange": "6e7138933a7b0a4bb6f562a7b0b5324e7f7fa604", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic boolean ensureGeneratedSourceFolder( IProgressMonitor progressMonitor )", "signatureAfterChange": " \tpublic boolean ensureGeneratedSourceFolder( IProgressMonitor progressMonitor )", "diff": ["+\t\tboolean reset = false;", "+\t\tIFolder curSrcFolder = null;", "-\t\t\tif ( _generatedSourceFolder != null )", "+\t\t\tif( _generatedSourceFolderName == null )", "+\t\t\tif( _generatedSourceFolder != null ){", "+\t\t\t\tfinal IPath srcFolderPath = _generatedSourceFolder.getProjectRelativePath();", "+\t\t\t\t", "+\t", "+\t\t\t\tif( !_generatedSourceFolderName.equals( srcFolderPath.toString()) ){", "+\t\t\t\t\treset = true;", "+\t\t\t\t\tcurSrcFolder = _generatedSourceFolder;", "+\t\t\t\t\t_generatedSourceFolder = null;", "+\t\t\t\t}", "+\t\t\t\telse", "+\t\t\t\t\treturn false;", "+\t\t\t}", "+\t", "-\t\t// don't take any locks while creating the folder, since we are doing file-system operations", "-\t\tIFolder srcFolder = getGeneratedSourceFolder();", "-\t\ttry{ ", "+\t\tIFolder srcFolder = null;", "+\t\ttry{", "+\t\t\tif( reset ){", "+\t\t\t\t// the generated source folder and the generated source folder name is not", "+\t\t\t\t// lining up.", "+\t\t\t\tremoveFromProjectClasspath(_javaProject, curSrcFolder, progressMonitor );", "+\t\t\t\tif ( curSrcFolder.exists() ){", "+\t\t\t\t\tif( AptPlugin.DEBUG )", "+\t\t\t\t\t\tAptPlugin.trace(\"deleting gen src dir \" + curSrcFolder.getName() ); //$NON-NLS-1$", "+\t\t\t\t\tcurSrcFolder.delete( true, false, null );", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\t\t", "+\t\t\t// don't take any locks while creating the folder, since we are doing file-system operations", "+\t\t\tsrcFolder = getGeneratedSourceFolder();", "+\t\t "]}], "num": 8704}