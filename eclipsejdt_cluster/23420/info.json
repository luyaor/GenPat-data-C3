{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f68253520b76e6ca502504ddf58ec3fc", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04f36d49580a667faaaef69cb5a7b1e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "09eb4e140e56d67f0ba07a1283f7afed03f5d473", "commitAfterChange": "193042cfcc3e974ade1d4da172a703fabd891361", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 34, "signatureBeforeChange": " private void writeStreamInt(FileOutputStream stream, int val) throws IOException", "signatureAfterChange": " private void writeStreamInt(FileOutputStream stream, int val) throws IOException", "diff": ["-\tif ((this.bufferIndex+4) < BUFFER_WRITE_SIZE)  {", "-\t\tthis.streamBuffer[this.bufferIndex++] = (byte) (val >> 24);", "-\t\tthis.streamBuffer[this.bufferIndex++] = (byte) (val >> 16);", "-\t\tthis.streamBuffer[this.bufferIndex++] = (byte) (val >> 8);", "-\t\tthis.streamBuffer[this.bufferIndex++] = (byte) val;", "-\t} else {", "-\t\tthis.streamBuffer[this.bufferIndex++] = (byte) (val >> 24);", "-\t\tif (this.bufferIndex == BUFFER_WRITE_SIZE) { // write bytes array on stream if buffer is full", "-\t\t\tstream.write(this.streamBuffer, 0, BUFFER_WRITE_SIZE);", "-\t\t\tthis.bufferIndex = 0;", "-\t\t}", "-\t\tthis.streamBuffer[this.bufferIndex++] = (byte) (val >> 16);", "-\t\tif (this.bufferIndex == BUFFER_WRITE_SIZE) { // write bytes array on stream if buffer is full", "-\t\t\tstream.write(this.streamBuffer, 0, BUFFER_WRITE_SIZE);", "-\t\t\tthis.bufferIndex = 0;", "-\t\t}", "-\t\tthis.streamBuffer[this.bufferIndex++] = (byte) (val >> 8);", "-\t\tif (this.bufferIndex == BUFFER_WRITE_SIZE) { // write bytes array on stream if buffer is full", "-\t\t\tstream.write(this.streamBuffer, 0, BUFFER_WRITE_SIZE);", "-\t\t\tthis.bufferIndex = 0;", "-\t\t}", "-\t\tthis.streamBuffer[this.bufferIndex++] = (byte) val;", "-\t\tif (this.bufferIndex == BUFFER_WRITE_SIZE) { // write bytes array on stream if buffer is full", "-\t\t\tstream.write(this.streamBuffer, 0, BUFFER_WRITE_SIZE);", "-\t\t\tthis.bufferIndex = 0;", "-\t\t}", "+\tif ((this.bufferIndex + 4) >= BUFFER_WRITE_SIZE)  {", "+\t\tstream.write(this.streamBuffer, 0, this.bufferIndex);", "+\t\tthis.bufferIndex = 0;", "+\tthis.streamBuffer[this.bufferIndex++] = (byte) (val >> 24);", "+\tthis.streamBuffer[this.bufferIndex++] = (byte) (val >> 16);", "+\tthis.streamBuffer[this.bufferIndex++] = (byte) (val >> 8);", "+\tthis.streamBuffer[this.bufferIndex++] = (byte) val;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09729af7623cce4dad107a449bb74d79", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "800086b43f754a4bddaa8c7c50578119d7c63538", "commitAfterChange": "a575ae7d7233e0fd45c0767401c5464135620572", "methodNumberBeforeChange": 192, "methodNumberAfterChange": 192, "signatureBeforeChange": "  protected void invoke(byte opcode, int receiverAndArgsSize, int returnTypeSize, char[] declaringClass, char[] selector, char[] signature)", "signatureAfterChange": "  protected void invoke(byte opcode, int receiverAndArgsSize, int returnTypeSize, char[] declaringClass, char[] selector, char[] signature)", "diff": ["+\tinvoke18(opcode, receiverAndArgsSize, returnTypeSize, declaringClass, opcode == Opcodes.OPC_invokeinterface, selector, signature);", "+}", "-\t\twriteUnsignedShort(this.constantPool.literalIndexForMethod(declaringClass, selector, signature, false));"]}], "num": 23420}