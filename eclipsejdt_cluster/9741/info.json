{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f7463c7fff9c0b562227049c8aba76e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c69f4e856b67042658cf1c441f5e9e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodScope.java", "commitBeforeChange": "2c703ac354df9e50216ae9ce8d8b01c24d5b710e", "commitAfterChange": "bd655e292f27be12899d4ef9049b7c8c31255fe5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate void checkAndSetModifiersForConstructor(MethodBinding methodBinding)", "signatureAfterChange": " \tprivate void checkAndSetModifiersForConstructor(MethodBinding methodBinding)", "diff": ["-\t\t\tunexpectedModifiers = ~AccPrivate;", "-\t\t\tif ((realModifiers & unexpectedModifiers) != 0)", "+\t\t\tunexpectedModifiers = ~(AccPrivate | AccStrictfp);", "+\t\t\tif ((realModifiers & unexpectedModifiers) != 0) {", "+\t\t\t} else if ((((AbstractMethodDeclaration) referenceContext).modifiers & AccStrictfp) != 0) {", "+\t\t\t\t// must check the parse node explicitly", "+\t\t\t\tproblemReporter().illegalModifierForMethod((AbstractMethodDeclaration) referenceContext);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1a95f7823ad4e042da267daf373db26", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "5effa1ab59a3df1a7d1a20cd813d8386cba4bc9e", "commitAfterChange": "a5ebb0e9d5ed9ae3a1782d7313d8062ad1037511", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprivate void checkAndSetModifiersForField(FieldBinding fieldBinding, FieldDeclaration fieldDecl)", "signatureAfterChange": " \tprivate void checkAndSetModifiersForField(FieldBinding fieldBinding, FieldDeclaration fieldDecl)", "diff": ["-\t\t\tif ((modifiers & AccJustFlag) != expectedValue)", "-\t\t\t\tproblemReporter().illegalModifierForInterfaceField(fieldBinding.declaringClass, fieldDecl);", "+\t\t\tif ((modifiers & AccJustFlag) != expectedValue) {", "+\t\t\t\tif ((fieldBinding.declaringClass.modifiers  & AccAnnotation) != 0) {", "+\t\t\t\t\tproblemReporter().illegalModifierForAnnotationField(fieldDecl);", "+\t\t\t\t} else {", "+\t\t\t\t\tproblemReporter().illegalModifierForInterfaceField(fieldDecl);", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 9741}