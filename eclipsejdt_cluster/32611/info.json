{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "78bc235eba7ac8bb2ab314bffa1d289f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8121ae38f4a88bc2e749b78b29826103", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "f200f8d976d56839e6f0d721d690d85cc3afbb03", "commitAfterChange": "0b27e1fc307c28641d0d95f2d81ae5062cecb103", "methodNumberBeforeChange": 896, "methodNumberAfterChange": 896, "signatureBeforeChange": " public void test0875()", "signatureAfterChange": " public void test0875()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. WARNING in X.java (at line 6)\\n\" +", "-\t\t\"\tprivate static final Map<Class<? extends DatabaseObject>, Class<? extends ObjectFormUI>> uiMap = new HashMap<Class<? extends DatabaseObject>, Class<? extends ObjectFormUI>>();\\n\" +", "-\t\t\"\t                                                                          ^^^^^^^^^^^^\\n\" +", "-\t\t\"X.ObjectFormUI is a raw type. References to generic type X.ObjectFormUI<T> should be parameterized\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. WARNING in X.java (at line 6)\\n\" +", "-\t\t\"\tprivate static final Map<Class<? extends DatabaseObject>, Class<? extends ObjectFormUI>> uiMap = new HashMap<Class<? extends DatabaseObject>, Class<? extends ObjectFormUI>>();\\n\" +", "-\t\t\"\t                                                                                                                                                              ^^^^^^^^^^^^\\n\" +", "-\t\t\"X.ObjectFormUI is a raw type. References to generic type X.ObjectFormUI<T> should be parameterized\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"3. ERROR in X.java (at line 10)\\n\" +", "-\t\t\"\treturn null != null \\n\" +", "-\t\t\"\t\t\t? uiMap.get(persistentClass)\\n\" +", "-\t\t\"\t\t\t: (Class<? extends ObjectFormUI<T>>) uiMap.get(persistentClass);\\n\" +", "-\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Type mismatch: cannot convert from Class<capture#4-of ? extends X.ObjectFormUI> to Class<? extends X.ObjectFormUI<T>>\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"4. WARNING in X.java (at line 12)\\n\" +", "-\t\t\"\t: (Class<? extends ObjectFormUI<T>>) uiMap.get(persistentClass);\\n\" +", "-\t\t\"\t  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: Unchecked cast from Class<capture#2-of ? extends X.ObjectFormUI> to Class<? extends X.ObjectFormUI<T>>\\n\" +", "-\t\t\"----------\\n\");", "+\t\tthis.complianceLevel < ClassFileConstants.JDK1_8 ? ", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. WARNING in X.java (at line 6)\\n\" +", "+\t\t\t\"\tprivate static final Map<Class<? extends DatabaseObject>, Class<? extends ObjectFormUI>> uiMap = new HashMap<Class<? extends DatabaseObject>, Class<? extends ObjectFormUI>>();\\n\" +", "+\t\t\t\"\t                                                                          ^^^^^^^^^^^^\\n\" +", "+\t\t\t\"X.ObjectFormUI is a raw type. References to generic type X.ObjectFormUI<T> should be parameterized\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"2. WARNING in X.java (at line 6)\\n\" +", "+\t\t\t\"\tprivate static final Map<Class<? extends DatabaseObject>, Class<? extends ObjectFormUI>> uiMap = new HashMap<Class<? extends DatabaseObject>, Class<? extends ObjectFormUI>>();\\n\" +", "+\t\t\t\"\t                                                                                                                                                              ^^^^^^^^^^^^\\n\" +", "+\t\t\t\"X.ObjectFormUI is a raw type. References to generic type X.ObjectFormUI<T> should be parameterized\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"3. ERROR in X.java (at line 10)\\n\" +", "+\t\t\t\"\treturn null != null \\n\" +", "+\t\t\t\"\t\t\t? uiMap.get(persistentClass)\\n\" +", "+\t\t\t\"\t\t\t: (Class<? extends ObjectFormUI<T>>) uiMap.get(persistentClass);\\n\" +", "+\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "+\t\t\t\"Type mismatch: cannot convert from Class<capture#4-of ? extends X.ObjectFormUI> to Class<? extends X.ObjectFormUI<T>>\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"4. WARNING in X.java (at line 12)\\n\" +", "+\t\t\t\"\t: (Class<? extends ObjectFormUI<T>>) uiMap.get(persistentClass);\\n\" +", "+\t\t\t\"\t  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "+\t\t\t\"Type safety: Unchecked cast from Class<capture#2-of ? extends X.ObjectFormUI> to Class<? extends X.ObjectFormUI<T>>\\n\" +", "+\t\t\t\"----------\\n\" : ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\tprivate static final Map<Class<? extends DatabaseObject>, Class<? extends ObjectFormUI>> uiMap = new HashMap<Class<? extends DatabaseObject>, Class<? extends ObjectFormUI>>();\\n\" + ", "+\t\t\t\t\"\t                                                                          ^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"X.ObjectFormUI is a raw type. References to generic type X.ObjectFormUI<T> should be parameterized\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\tprivate static final Map<Class<? extends DatabaseObject>, Class<? extends ObjectFormUI>> uiMap = new HashMap<Class<? extends DatabaseObject>, Class<? extends ObjectFormUI>>();\\n\" + ", "+\t\t\t\t\"\t                                                                                                                                                              ^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"X.ObjectFormUI is a raw type. References to generic type X.ObjectFormUI<T> should be parameterized\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\t\t\"\t? uiMap.get(persistentClass)\\n\" + ", "+\t\t\t\t\"\t  ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Type mismatch: cannot convert from Class<capture#1-of ? extends X.ObjectFormUI> to Class<? extends X.ObjectFormUI<T>>\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"4. WARNING in X.java (at line 12)\\n\" + ", "+\t\t\t\t\"\t: (Class<? extends ObjectFormUI<T>>) uiMap.get(persistentClass);\\n\" + ", "+\t\t\t\t\"\t  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Type safety: Unchecked cast from Class<capture#2-of ? extends X.ObjectFormUI> to Class<? extends X.ObjectFormUI<T>>\\n\" + ", "+\t\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b056501b0f826cf07c33d0477bd432c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "f200f8d976d56839e6f0d721d690d85cc3afbb03", "commitAfterChange": "0b27e1fc307c28641d0d95f2d81ae5062cecb103", "methodNumberBeforeChange": 1159, "methodNumberAfterChange": 1159, "signatureBeforeChange": " public void test1129()", "signatureAfterChange": " public void test1129()", "diff": ["+\t\tthis.complianceLevel < ClassFileConstants.JDK1_8 ?", "-\t\t\"----------\\n\");", "+\t\t\"----------\\n\" :", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 18)\\n\" + ", "+\t\t\t\"\tString s = b ? arg1 : arg2;\\n\" + ", "+\t\t\t\"\t               ^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from IX<String> to String\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 18)\\n\" + ", "+\t\t\t\"\tString s = b ? arg1 : arg2;\\n\" + ", "+\t\t\t\"\t                      ^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from IX<capture#1-of ? extends Object> to String\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 21)\\n\" + ", "+\t\t\t\"\tString s = b ? arg1 : arg2;\\n\" + ", "+\t\t\t\"\t               ^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from Arg1 to String\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 21)\\n\" + ", "+\t\t\t\"\tString s = b ? arg1 : arg2;\\n\" + ", "+\t\t\t\"\t                      ^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from Arg2 to String\\n\" + ", "+\t\t\t\"----------\\n\");"]}], "num": 32611}