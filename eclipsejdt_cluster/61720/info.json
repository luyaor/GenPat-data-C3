{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c926cf225c9c7a32d4dc5158c2d23a58", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "171276190f78cbc07f2b31a2e705e5df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "c8bfaf82a67da861220348e09ccf8e5b65eea2d7", "commitAfterChange": "7c0d6dc61f1a3a5fa2460d48c92c28c9976c6e77", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "\r public char[][] getImports()", "signatureAfterChange": "\r public char[][] getImports(BinaryType type)", "diff": ["-public char[][] getImports() {\r", "-\tif (this.imports != null && this.imports.length != this.importsCounter) {\r", "-\t\tSystem.arraycopy(this.imports, 0, (this.imports = new char[this.importsCounter][]), 0, this.importsCounter);\r", "+public char[][] getImports(BinaryType type) {\r", "+\tchar[][] imports = (char[][]) this.importsTable.get(type);\r", "+\tif (imports != null) {\r", "+\t\tint importsCounter = ((Integer) this.importsCounterTable.get(type)).intValue();\r", "+ \t\tif (imports.length != importsCounter) {\r", "+\t\t\tSystem.arraycopy(imports, 0, (imports = new char[importsCounter][]), 0, importsCounter);\r", "+ \t\t}\r", "-\treturn this.imports;\r", "+\tthis.importsTable.put(type, imports);\r", "+\treturn imports;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cc985b43b02a827bf44811d6d768952", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "fe905e29a608f61f2afe181f4c1e4e27bb2b95dc", "commitAfterChange": "53a7cfa9bf2a3a1ade921d716dbdc58a4bfc35d4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void acceptImport( \t\t\tint declarationStart, \t\t\tint declarationEnd, \t\t\tchar[] name, \t\t\tboolean onDemand, \t\t\tint modifiers)", "signatureAfterChange": " \tpublic void acceptImport( \t\t\tint declarationStart, \t\t\tint declarationEnd, \t\t\tchar[] name, \t\t\tboolean onDemand, \t\t\tint modifiers)", "diff": ["-\t\tchar[][] imports = (char[][]) this.importsTable.get(fType);", "+\t\tchar[][] imports = (char[][]) this.importsTable.get(this.binaryType);", "-\t\t\timportsCounter = ((Integer) this.importsCounterTable.get(fType)).intValue();", "+\t\t\timportsCounter = ((Integer) this.importsCounterTable.get(this.binaryType)).intValue();", "-\t\tthis.importsTable.put(fType, imports);", "-\t\tthis.importsCounterTable.put(fType, new Integer(importsCounter));", "+\t\tthis.importsTable.put(this.binaryType, imports);", "+\t\tthis.importsCounterTable.put(this.binaryType, new Integer(importsCounter));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef8b3e72b23527d2d1181f02aa852e56", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/InMemoryIndex.java", "commitBeforeChange": "ae7797d27bfed7c3f6e7630a551ffec98598a05e", "commitAfterChange": "b5a62e48da3d2bb054c313f16e0e1c0a1279b4a4", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \tprotected char[][] getSortedWords()", "signatureAfterChange": "\r \tprotected WordEntry[] getSortedWordEntries()", "diff": ["-\tprotected char[][] getSortedWords() {\r", "-\t\tif (this.sortedWords == null) {\r", "-\t\t\tchar[][] words= new char[this.words.size()][];\r", "+\tprotected WordEntry[] getSortedWordEntries() {\r", "+\t\tif (this.sortedWordEntries == null) {\r", "+\t\t\tWordEntry[] words= new WordEntry[this.words.size()];\r", "-\t\t\tchar[][] keys= this.words.keyTable;\r", "-\t\t\tfor (int i= keys.length; i-- > 0;) {\r", "-\t\t\t\tif (keys[i] != null) {\r", "-\t\t\t\t\twords[numWords++]= keys[i];\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "+\t\t\tObject[] entries= this.words.valueTable;\r", "+\t\t\tfor (int i= entries.length; i-- > 0;)\r", "+\t\t\t\tif (entries[i] != null)\r", "+\t\t\t\t\twords[numWords++]= (WordEntry) entries[i];\r", "-\t\t\tthis.sortedWords= words;\r", "+\t\t\tthis.sortedWordEntries= words;\r", "-\t\treturn this.sortedWords;\r", "+\t\treturn this.sortedWordEntries;\r"]}], "num": 61720}