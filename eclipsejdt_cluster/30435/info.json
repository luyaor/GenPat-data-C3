{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aae2b127ffc9149d8712a0343d96649c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c6d4c2287e843973bb46c023d94d324", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "83b433cefe204b4efddb34a5fec23235369a79e2", "commitAfterChange": "f0ad677ecfc3fb2aae0264f20715771e958071e0", "methodNumberBeforeChange": 626, "methodNumberAfterChange": 626, "signatureBeforeChange": " \tpublic void test0607()", "signatureAfterChange": " \tpublic void test0607()", "diff": ["-\t// FAIL ERRMSG: Type mismatch: cannot convert from void to <unknown>", "-\t\tif (this.complianceLevel >= ClassFileConstants.JDK1_8)", "-\t\t\treturn;", "-\t    this.runNegativeTest(", "+\t\tthis.runNegativeTest(", "+    \t\t(this.complianceLevel < ClassFileConstants.JDK1_8 ? ", "-    \t\t\"----------\\n\");", "+    \t\t\"----------\\n\" : ", "+    \t\t\t\"----------\\n\" + ", "+    \t\t\t\"4. ERROR in X.java (at line 15)\\n\" + ", "+    \t\t\t\"\tCollections.sort (lStr);\\n\" + ", "+    \t\t\t\"\t            ^^^^\\n\" + ", "+    \t\t\t\"The method sort(List<T>) in the type Collections is not applicable for the arguments (List<Comparable<String>>)\\n\" + ", "+    \t\t\t\"----------\\n\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbc9ad466bd1bdf3246d1c30b79bfc06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "1f936417a416d90917cba09bee390af7aeeb85e8", "commitAfterChange": "cf0fc1d100d6a0dfa353e3125744fa10a50c8d3b", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": " \tpublic void testNullTypeInference2f()", "signatureAfterChange": " \tpublic void testNullTypeInference2f()", "diff": ["-\t\t\t\"1. WARNING in PolyNull.java (at line 9)\\n\" + ", "+\t\t\t\"1. ERROR in PolyNull.java (at line 7)\\n\" + ", "+\t\t\t\"\t<X> X extract(Func<@Nullable X> f, @Nullable X s) { return f.a(s); }\\n\" + ", "+\t\t\t\"\t                                                           ^^^^^^\\n\" + ", "+\t\t\t\"Null type mismatch (type annotations): required \\'X\\' but this expression has type \\'@Nullable X\\', where 'X' is a free type variable\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in PolyNull.java (at line 9)\\n\" + ", "-\t\t\t\"2. ERROR in PolyNull.java (at line 9)\\n\" + ", "+\t\t\t\"3. ERROR in PolyNull.java (at line 9)\\n\" + "]}], "num": 30435}