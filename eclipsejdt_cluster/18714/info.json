{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "15744b46e8b86772f5b08b6908a76840", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12351a5815db4f166023ee0acccdb8a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "b90d03d10edcf027d98e7722223f9b745793a6bb", "commitAfterChange": "e353428f475e976a008afa67ff7f1e16e03ec95c", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "  public void test051() throws JavaModelException", "signatureAfterChange": "  public void test051() throws JavaModelException", "diff": ["-\t\t\"clone[JAVADOC_METHOD_REF]{{@link #clone() }, Ljava.lang.Object;, ()Ljava.lang.Object;, clone, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"equals[JAVADOC_METHOD_REF]{{@link #equals(Object) }, Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"finalize[JAVADOC_METHOD_REF]{{@link #finalize() }, Ljava.lang.Object;, ()V, finalize, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"getClass[JAVADOC_METHOD_REF]{{@link #getClass() }, Ljava.lang.Object;, ()Ljava.lang.Class;, getClass, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"hashCode[JAVADOC_METHOD_REF]{{@link #hashCode() }, Ljava.lang.Object;, ()I, hashCode, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"method[JAVADOC_METHOD_REF]{{@link #method() }, Ljavadoc.text.BasicTestTextIns;, ()V, method, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"notify[JAVADOC_METHOD_REF]{{@link #notify() }, Ljava.lang.Object;, ()V, notify, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"notifyAll[JAVADOC_METHOD_REF]{{@link #notifyAll() }, Ljava.lang.Object;, ()V, notifyAll, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"paramMethod[JAVADOC_METHOD_REF]{{@link #paramMethod(String, boolean, Object) }, Ljavadoc.text.BasicTestTextIns;, (Ljava.lang.String;ZLjava.lang.Object;)V, paramMethod, (str, flag, obj), \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"toString[JAVADOC_METHOD_REF]{{@link #toString() }, Ljava.lang.Object;, ()Ljava.lang.String;, toString, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"wait[JAVADOC_METHOD_REF]{{@link #wait(long, int) }, Ljava.lang.Object;, (JI)V, wait, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"wait[JAVADOC_METHOD_REF]{{@link #wait(long) }, Ljava.lang.Object;, (J)V, wait, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"wait[JAVADOC_METHOD_REF]{{@link #wait() }, Ljava.lang.Object;, ()V, wait, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"BasicTestTextIns[JAVADOC_METHOD_REF]{{@link #BasicTestTextIns() }, Ljavadoc.text.BasicTestTextIns;, ()V, BasicTestTextIns, null, \"+this.positions+(JAVADOC_RELEVANCE+R_INLINE_TAG)+\"}\"", "+\t\t\"clone[JAVADOC_METHOD_REF]{{@link #clone()}, Ljava.lang.Object;, ()Ljava.lang.Object;, clone, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "+\t\t\"equals[JAVADOC_METHOD_REF]{{@link #equals(Object)}, Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "+\t\t\"finalize[JAVADOC_METHOD_REF]{{@link #finalize()}, Ljava.lang.Object;, ()V, finalize, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "+\t\t\"getClass[JAVADOC_METHOD_REF]{{@link #getClass()}, Ljava.lang.Object;, ()Ljava.lang.Class;, getClass, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "+\t\t\"hashCode[JAVADOC_METHOD_REF]{{@link #hashCode()}, Ljava.lang.Object;, ()I, hashCode, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "+\t\t\"method[JAVADOC_METHOD_REF]{{@link #method()}, Ljavadoc.text.BasicTestTextIns;, ()V, method, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "+\t\t\"notify[JAVADOC_METHOD_REF]{{@link #notify()}, Ljava.lang.Object;, ()V, notify, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "+\t\t\"notifyAll[JAVADOC_METHOD_REF]{{@link #notifyAll()}, Ljava.lang.Object;, ()V, notifyAll, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "+\t\t\"paramMethod[JAVADOC_METHOD_REF]{{@link #paramMethod(String, boolean, Object)}, Ljavadoc.text.BasicTestTextIns;, (Ljava.lang.String;ZLjava.lang.Object;)V, paramMethod, (str, flag, obj), \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "+\t\t\"toString[JAVADOC_METHOD_REF]{{@link #toString()}, Ljava.lang.Object;, ()Ljava.lang.String;, toString, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "+\t\t\"wait[JAVADOC_METHOD_REF]{{@link #wait(long, int)}, Ljava.lang.Object;, (JI)V, wait, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "+\t\t\"wait[JAVADOC_METHOD_REF]{{@link #wait(long)}, Ljava.lang.Object;, (J)V, wait, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "+\t\t\"wait[JAVADOC_METHOD_REF]{{@link #wait()}, Ljava.lang.Object;, ()V, wait, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "+\t\t\"BasicTestTextIns[JAVADOC_METHOD_REF]{{@link #BasicTestTextIns()}, Ljavadoc.text.BasicTestTextIns;, ()V, BasicTestTextIns, null, \"+this.positions+(JAVADOC_RELEVANCE+R_INLINE_TAG)+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c0abf1a88cee9e21e8cd45da161c46e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "b90d03d10edcf027d98e7722223f9b745793a6bb", "commitAfterChange": "e353428f475e976a008afa67ff7f1e16e03ec95c", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "  public void test052() throws JavaModelException", "signatureAfterChange": "  public void test052() throws JavaModelException", "diff": ["-\t\t\"clone[JAVADOC_METHOD_REF]{{@link #clone() }, Ljava.lang.Object;, ()Ljava.lang.Object;, clone, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"equals[JAVADOC_METHOD_REF]{{@link #equals(Object) }, Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"finalize[JAVADOC_METHOD_REF]{{@link #finalize() }, Ljava.lang.Object;, ()V, finalize, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"getClass[JAVADOC_METHOD_REF]{{@link #getClass() }, Ljava.lang.Object;, ()Ljava.lang.Class;, getClass, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"hashCode[JAVADOC_METHOD_REF]{{@link #hashCode() }, Ljava.lang.Object;, ()I, hashCode, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"method[JAVADOC_METHOD_REF]{{@link #method() }, Ljavadoc.text.BasicTestTextIns;, ()V, method, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"notify[JAVADOC_METHOD_REF]{{@link #notify() }, Ljava.lang.Object;, ()V, notify, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"notifyAll[JAVADOC_METHOD_REF]{{@link #notifyAll() }, Ljava.lang.Object;, ()V, notifyAll, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"paramMethod[JAVADOC_METHOD_REF]{{@link #paramMethod(String, boolean, Object) }, Ljavadoc.text.BasicTestTextIns;, (Ljava.lang.String;ZLjava.lang.Object;)V, paramMethod, (str, flag, obj), \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"toString[JAVADOC_METHOD_REF]{{@link #toString() }, Ljava.lang.Object;, ()Ljava.lang.String;, toString, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"wait[JAVADOC_METHOD_REF]{{@link #wait(long, int) }, Ljava.lang.Object;, (JI)V, wait, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"wait[JAVADOC_METHOD_REF]{{@link #wait(long) }, Ljava.lang.Object;, (J)V, wait, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"wait[JAVADOC_METHOD_REF]{{@link #wait() }, Ljava.lang.Object;, ()V, wait, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "-\t\t\"BasicTestTextIns[JAVADOC_METHOD_REF]{{@link #BasicTestTextIns() }, Ljavadoc.text.BasicTestTextIns;, ()V, BasicTestTextIns, null, \"+this.positions+(JAVADOC_RELEVANCE+R_INLINE_TAG)+\"}\"", "+\t\t\"clone[JAVADOC_METHOD_REF]{{@link #clone()}, Ljava.lang.Object;, ()Ljava.lang.Object;, clone, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "+\t\t\"equals[JAVADOC_METHOD_REF]{{@link #equals(Object)}, Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "+\t\t\"finalize[JAVADOC_METHOD_REF]{{@link #finalize()}, Ljava.lang.Object;, ()V, finalize, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "+\t\t\"getClass[JAVADOC_METHOD_REF]{{@link #getClass()}, Ljava.lang.Object;, ()Ljava.lang.Class;, getClass, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "+\t\t\"hashCode[JAVADOC_METHOD_REF]{{@link #hashCode()}, Ljava.lang.Object;, ()I, hashCode, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "+\t\t\"method[JAVADOC_METHOD_REF]{{@link #method()}, Ljavadoc.text.BasicTestTextIns;, ()V, method, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "+\t\t\"notify[JAVADOC_METHOD_REF]{{@link #notify()}, Ljava.lang.Object;, ()V, notify, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "+\t\t\"notifyAll[JAVADOC_METHOD_REF]{{@link #notifyAll()}, Ljava.lang.Object;, ()V, notifyAll, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "+\t\t\"paramMethod[JAVADOC_METHOD_REF]{{@link #paramMethod(String, boolean, Object)}, Ljavadoc.text.BasicTestTextIns;, (Ljava.lang.String;ZLjava.lang.Object;)V, paramMethod, (str, flag, obj), \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "+\t\t\"toString[JAVADOC_METHOD_REF]{{@link #toString()}, Ljava.lang.Object;, ()Ljava.lang.String;, toString, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "+\t\t\"wait[JAVADOC_METHOD_REF]{{@link #wait(long, int)}, Ljava.lang.Object;, (JI)V, wait, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "+\t\t\"wait[JAVADOC_METHOD_REF]{{@link #wait(long)}, Ljava.lang.Object;, (J)V, wait, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "+\t\t\"wait[JAVADOC_METHOD_REF]{{@link #wait()}, Ljava.lang.Object;, ()V, wait, null, \"+this.positions+R_DICNRNSIT+\"}\\n\" + ", "+\t\t\"BasicTestTextIns[JAVADOC_METHOD_REF]{{@link #BasicTestTextIns()}, Ljavadoc.text.BasicTestTextIns;, ()V, BasicTestTextIns, null, \"+this.positions+(JAVADOC_RELEVANCE+R_INLINE_TAG)+\"}\""]}], "num": 18714}