{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dc1ebf365ad289df96be2629a707609b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c07765f449effeee5daec51d29d76c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "e3a61b617999ee26a78986f0b7c8e0d0c7d0d38f", "commitAfterChange": "22622fb4f97d8218a8b46b7612c7415d2a54a73e", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " public void test012b()", "signatureAfterChange": " public void test012b()", "diff": ["+        \"      invalidJavadoc       all warnings for malformed javadoc tags\\n\" + ", "+        \"      invalidJavadocTag    validate javadoc tag arguments\\n\" + ", "+        \"      invalidJavadocTagDep validate deprecated references in javadoc tag args\\n\" + ", "+        \"      invalidJavadocTagNotVisible  validate non-visible references in javadoc\\n\" + ", "+        \"\t\t\t\t\t\t\ttag args\\n\" + ", "+        \"      invalidJavadocVisibility(<visibility>)  specify visibility modifier\\n\" + ", "+        \"\t\t\t\t\t\t\tfor malformed javadoc tag warnings\\n\" + ", "+        \"      missingJavadocTags   missing Javadoc tags\\n\" + ", "+        \"      missingJavadocTagsOverriding missing Javadoc tags in overriding methods\\n\" + ", "+        \"      missingJavadocTagsMethod missing Javadoc tags for method type parameter\\n\" + ", "+        \"      missingJavadocTagsVisibility(<visibility>)  specify visibility modifier\\n\" + ", "+        \"\t\t\t\t\t\t\tfor missing javadoc tags warnings\\n\" + ", "+        \"      missingJavadocComments   missing Javadoc comments\\n\" + ", "+        \"      missingJavadocCommentsOverriding   missing Javadoc tags in overriding\\n\" + ", "+        \"\t\t\t\t\t\t\tmethods\\n\" + ", "+        \"      missingJavadocCommentsVisibility(<visibility>)  specify visibility\\n\" + ", "+        \"\t\t\t\t\t\t\tmodifier for missing javadoc comments warnings\\n\" + ", "-        \"      nullAnnot(<annot. names separated by |>) + annotation based null analysis,\\n\" +", "-        \"                           nullable|nonnull|nonnullbydefault annotation types\\n\" +", "-        \"                           optionally specified using fully qualified names\\n\" +", "+        \"      nullAnnot(<annot. names separated by |>)   annotation based null analysis,\\n\" + ", "+        \"                           nullable|nonnull|nonnullbydefault annotation types\\n\" + ", "+        \"                           optionally specified using fully qualified names.\\n\" + ", "+        \"\t\t\t\t\t\t\tEnabling this option enables all null-annotation\\n\" + ", "+        \"\t\t\t\t\t\t\trelated sub-options. These can be individually\\n\" + ", "+        \"\t\t\t\t\t\t\tcontrolled using options listed below.\\n\" + ", "+        \"      nullAnnotConflict    conflict between null annotation specified\\n\" + ", "+        \"\t\t\t\t\t\t\tand nullness inferred. Is effective only with\\n\" + ", "+        \"\t\t\t\t\t\t\tnullAnnot option enabled.\\n\" + ", "+        \"      nullAnnotRedundant   redundant specification of null annotation. Is\\n\" + ", "+        \"\t\t\t\t\t\t\teffective only with nullAnnot option enabled.\\n\" + ", "+        \"\t   nullUncheckedConversion unchecked conversion from non-annotated type\\n\" + ", "+        \"\t\t\t\t\t\t\tto @NonNull type. Is effective only with\\n\" + ", "+        \"\t\t\t\t\t\t\tnullAnnot option enabled.\\n\" + ", "-        \"                           errors and warnings\\n\" +", "+        \"                           errors and warnings\\n\" + ", "+        \"      unusedParam\t\t    unused parameter\\n\" + ", "+        \"      unusedParamOverriding unused parameter for overriding method\\n\" + ", "+        \"      unusedParamImplementing unused parameter for implementing method\\n\" + ", "+        \"      unusedParamIncludeDoc unused parameter documented in comment tag\\n\" + ", "+        \"      unusedThrownWhenOverriding unused declared thrown exception in \\n\" + ", "+        \"\t\t\t\t\t\t\toverriding method\\n\" + ", "+        \"      unusedThrownIncludeDocComment     unused declared thrown exception,\\n\" + ", "+        \"\t\t\t\t\t\t\tdocumented in a comment tag\\n\" + ", "+        \"      unusedThrownExemptExceptionThrowable  unused declared thrown exception,\\n\" + ", "+        \"\t\t\t\t\t\t\texempt Exception and Throwable\\n\" + ", "-        \"      warningToken       + unsupported or unnecessary @SuppressWarnings\\n\" +", "+        \"      warningToken       + unsupported or unnecessary @SuppressWarnings\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db9806adffaa895044d08a2687691f66", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "46987bf94fa2fc88d9ab6cb36a5870450e66f8d9", "commitAfterChange": "4b2ce36cb1e443f82351b7a276c4a994ddb0c499", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " public void test012b()", "signatureAfterChange": " public void test012b()", "diff": ["+        \"      invalidJavadoc       all warnings for malformed javadoc tags\\n\" + ", "+        \"      invalidJavadocTag    validate javadoc tag arguments\\n\" + ", "+        \"      invalidJavadocTagDep validate deprecated references in javadoc tag args\\n\" + ", "+        \"      invalidJavadocTagNotVisible  validate non-visible references in javadoc\\n\" + ", "+        \"\t\t\t\t\t\t\ttag args\\n\" + ", "+        \"      invalidJavadocVisibility(<visibility>)  specify visibility modifier\\n\" + ", "+        \"\t\t\t\t\t\t\tfor malformed javadoc tag warnings\\n\" + ", "+        \"      missingJavadocTags   missing Javadoc tags\\n\" + ", "+        \"      missingJavadocTagsOverriding missing Javadoc tags in overriding methods\\n\" + ", "+        \"      missingJavadocTagsMethod missing Javadoc tags for method type parameter\\n\" + ", "+        \"      missingJavadocTagsVisibility(<visibility>)  specify visibility modifier\\n\" + ", "+        \"\t\t\t\t\t\t\tfor missing javadoc tags warnings\\n\" + ", "+        \"      missingJavadocComments   missing Javadoc comments\\n\" + ", "+        \"      missingJavadocCommentsOverriding   missing Javadoc tags in overriding\\n\" + ", "+        \"\t\t\t\t\t\t\tmethods\\n\" + ", "+        \"      missingJavadocCommentsVisibility(<visibility>)  specify visibility\\n\" + ", "+        \"\t\t\t\t\t\t\tmodifier for missing javadoc comments warnings\\n\" + ", "-        \"      nullAnnot(<annot. names separated by |>) + annotation based null analysis,\\n\" +", "-        \"                           nullable|nonnull|nonnullbydefault annotation types\\n\" +", "-        \"                           optionally specified using fully qualified names\\n\" +", "+        \"      nullAnnot(<annot. names separated by |>)   annotation based null analysis,\\n\" + ", "+        \"                           nullable|nonnull|nonnullbydefault annotation types\\n\" + ", "+        \"                           optionally specified using fully qualified names.\\n\" + ", "+        \"\t\t\t\t\t\t\tEnabling this option enables all null-annotation\\n\" + ", "+        \"\t\t\t\t\t\t\trelated sub-options. These can be individually\\n\" + ", "+        \"\t\t\t\t\t\t\tcontrolled using options listed below.\\n\" + ", "+        \"      nullAnnotConflict    conflict between null annotation specified\\n\" + ", "+        \"\t\t\t\t\t\t\tand nullness inferred. Is effective only with\\n\" + ", "+        \"\t\t\t\t\t\t\tnullAnnot option enabled.\\n\" + ", "+        \"      nullAnnotRedundant   redundant specification of null annotation. Is\\n\" + ", "+        \"\t\t\t\t\t\t\teffective only with nullAnnot option enabled.\\n\" + ", "+        \"\t   nullUncheckedConversion unchecked conversion from non-annotated type\\n\" + ", "+        \"\t\t\t\t\t\t\tto @NonNull type. Is effective only with\\n\" + ", "+        \"\t\t\t\t\t\t\tnullAnnot option enabled.\\n\" + ", "-        \"                           errors and warnings\\n\" +", "+        \"                           errors and warnings\\n\" + ", "+        \"      unusedParam\t\t    unused parameter\\n\" + ", "+        \"      unusedParamOverriding unused parameter for overriding method\\n\" + ", "+        \"      unusedParamImplementing unused parameter for implementing method\\n\" + ", "+        \"      unusedParamIncludeDoc unused parameter documented in comment tag\\n\" + ", "+        \"      unusedThrownWhenOverriding unused declared thrown exception in \\n\" + ", "+        \"\t\t\t\t\t\t\toverriding method\\n\" + ", "+        \"      unusedThrownIncludeDocComment     unused declared thrown exception,\\n\" + ", "+        \"\t\t\t\t\t\t\tdocumented in a comment tag\\n\" + ", "+        \"      unusedThrownExemptExceptionThrowable  unused declared thrown exception,\\n\" + ", "+        \"\t\t\t\t\t\t\texempt Exception and Throwable\\n\" + ", "-        \"      warningToken       + unsupported or unnecessary @SuppressWarnings\\n\" +", "+        \"      warningToken       + unsupported or unnecessary @SuppressWarnings\\n\" + "]}], "num": 62581}