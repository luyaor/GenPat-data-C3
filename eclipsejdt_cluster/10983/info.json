{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9f950924aa79b60b0332e98d6dbd99da", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "126597916ebce5a80edc52aaaa23436b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "66fdd0cbdf40e85714a2e6461c1f38850556e24c", "commitAfterChange": "938fb240697949dd7e39ed8e808d1be963247406", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": " public ICompilationUnit getWorkingCopy(WorkingCopyOwner workingCopyOwner, IProblemRequestor problemRequestor, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public ICompilationUnit getWorkingCopy(WorkingCopyOwner workingCopyOwner, IProblemRequestor problemRequestor, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\tIPath path = getPath();", "-\t\tmanager.getPerWorkingCopyInfo(workingCopy, path, false/*don't create*/, true/*record usage*/, null/*not used since don't create*/);", "+\t\tmanager.getPerWorkingCopyInfo(workingCopy, false/*don't create*/, true/*record usage*/, null/*not used since don't create*/);", "-\tBecomeWorkingCopyOperation op = new BecomeWorkingCopyOperation(workingCopy, path, problemRequestor);", "+\tBecomeWorkingCopyOperation op = new BecomeWorkingCopyOperation(workingCopy, problemRequestor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebad303ba5a7dd27780a2591a7126d58", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceModelTests.java", "commitBeforeChange": "4119a65befb0f1b826133c8b40790cea36510774", "commitAfterChange": "199c84f2cae998bf19dec5ba0cb5f860d990b3fa", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": " public void testSeekPackageFragments() throws CoreException", "signatureAfterChange": " public void testSeekPackageFragments() throws CoreException", "diff": ["-\tgetNameLookup(BIG_PROJECT).seekPackageFragments(\"org.eclipse.jdt.core.tests78.performance5\", false/*not partial match*/, requestor);", "+\tfor (int i=0; i<WARMUP_COUNT; i++) {", "+\t\tgetNameLookup(BIG_PROJECT).seekPackageFragments(\"org.eclipse.jdt.core.tests78.performance5\", false/*not partial match*/, requestor);", "+\t}", "-\t\t\tgetNameLookup(BIG_PROJECT).seekPackageFragments(\"org.eclipse.jdt.core.tests\" + j + \"0.performance\" + j, false/*not partial match*/, requestor);", "+\t\t\tgetNameLookup(BIG_PROJECT).seekPackageFragments(\"org.eclipse.jdt.core.tests\" + i + \"0.performance\" + i, false/*not partial match*/, requestor);"]}], "num": 10983}