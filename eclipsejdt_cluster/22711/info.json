{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3e722554cb7eb2b841deac7e189e9ec7", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07faa91362bec9b43ae3580eeebff9f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocAllocationExpression.java", "commitBeforeChange": "bd655e292f27be12899d4ef9049b7c8c31255fe5", "commitAfterChange": "b5bed3972356e8be51cd606b69a9491540b97af1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": "  \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\t} else if (this.binding instanceof ParameterizedMethodBinding) {", "-\t\t\tif (allocationType.isGenericType() || allocationType.isRawType() || allocationType.isParameterizedType()) {", "-\t\t\t\tMethodBinding exactMethod = scope.findExactMethod(allocationType, this.binding.selector, argumentTypes, this);", "-\t\t\t\tif (exactMethod == null) {", "-\t\t\t\t\tMethodBinding problem = new ProblemMethodBinding(this.binding, this.binding.selector, argumentTypes, ProblemReasons.NotFound);", "-\t\t\t\t\tscope.problemReporter().javadocInvalidConstructor(this, problem, scope.getDeclarationModifiers());", "-\t\t\t\t}", "-\t\t\t}", "+//\t\t} else if (this.binding instanceof ParameterizedMethodBinding) {", "+//\t\t\tif (allocationType.isGenericType() || allocationType.isRawType() || allocationType.isParameterizedType()) {", "+//\t\t\t\tMethodBinding exactMethod = scope.getConstructor(allocationType, argumentTypes, this);", "+//\t\t\t\tif (exactMethod == null) {", "+//\t\t\t\t\tMethodBinding problem = new ProblemMethodBinding(this.binding, this.binding.selector, argumentTypes, ProblemReasons.NotFound);", "+//\t\t\t\t\tscope.problemReporter().javadocInvalidConstructor(this, problem, scope.getDeclarationModifiers());", "+//\t\t\t\t}", "+//\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6a9d6a21174e232e7a380c306a89179", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocMessageSend.java", "commitBeforeChange": "bd655e292f27be12899d4ef9049b7c8c31255fe5", "commitAfterChange": "b5bed3972356e8be51cd606b69a9491540b97af1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\t} else if (this.binding instanceof ParameterizedMethodBinding && this.actualReceiverType instanceof ReferenceBinding) {", "-\t\t\tReferenceBinding refBinding = (ReferenceBinding) this.actualReceiverType;", "-\t\t\tif (refBinding.isGenericType() || refBinding.isRawType() || refBinding.isParameterizedType()) {", "-\t\t\t\tMethodBinding exactMethod = scope.findExactMethod(refBinding, this.selector, argumentTypes, this);", "-\t\t\t\tif (exactMethod == null) {", "-\t\t\t\t\tMethodBinding problem = new ProblemMethodBinding(this.binding, this.selector, argumentTypes, ProblemReasons.NotFound);", "-\t\t\t\t\tscope.problemReporter().javadocInvalidMethod(this, problem, scope.getDeclarationModifiers());", "-\t\t\t\t}", "-\t\t\t}", "+//\t\t} else if (this.binding instanceof ParameterizedMethodBinding && this.actualReceiverType instanceof ReferenceBinding) {", "+//\t\t\tReferenceBinding refBinding = (ReferenceBinding) this.actualReceiverType;", "+//\t\t\tif (refBinding.isGenericType() || refBinding.isRawType() || refBinding.isParameterizedType()) {", "+//\t\t\t\tMethodBinding exactMethod = scope.getMethod(refBinding, this.selector, argumentTypes, this);", "+//\t\t\t\tif (exactMethod == null) {", "+//\t\t\t\t\tMethodBinding problem = new ProblemMethodBinding(this.binding, this.selector, argumentTypes, ProblemReasons.NotFound);", "+//\t\t\t\t\tscope.problemReporter().javadocInvalidMethod(this, problem, scope.getDeclarationModifiers());", "+//\t\t\t\t}", "+//\t\t\t}"]}], "num": 22711}