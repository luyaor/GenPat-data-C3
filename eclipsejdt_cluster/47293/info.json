{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e16ea5cfcf4864a0c2bc9c66554c1b85", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6118adb82d4f69914b4de9ac5ef85852", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Openable.java", "commitBeforeChange": "2bcb3d0c9fa104ef6edd7e53ba16f8b7aff57348", "commitAfterChange": "c5d1291515e72a1b02e2dba658336524eb7964dc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " protected void codeComplete(org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu, org.eclipse.jdt.internal.compiler.env.ICompilationUnit unitToSkip, int position, ICompletionRequestor requestor, WorkingCopyOwner owner) throws JavaModelException", "signatureAfterChange": " protected void codeComplete(org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu, org.eclipse.jdt.internal.compiler.env.ICompilationUnit unitToSkip, int position, ICompletionRequestor requestor, WorkingCopyOwner owner) throws JavaModelException", "diff": ["-\t\tthrow new IllegalArgumentException(Util.bind(\"codeAssist.nullRequestor\")); //$NON-NLS-1$", "+\t\tAssert.isTrue(false, \"Completion requestor cannot be null\"); //$NON-NLS-1$", "-\t\tthrow new JavaModelException(new JavaModelStatus(IJavaModelStatusConstants.INDEX_OUT_OF_BOUNDS));", "+\t\tAssert.isTrue(false, \"Completion position \"+position+\" is not located in supplied source range (0 - \"+buffer.getLength()+\")\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b8a63e04c7b1d381cbbc55b9425a3a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SortCompilationUnitElementsTests.java", "commitBeforeChange": "9ccc53063dda8b7e1afdde95ae36a8417c582abc", "commitAfterChange": "7143e72571bb2e6a2e74f6791210a97b375b5ab6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  private void sortUnit(ICompilationUnit unit, String expectedResult, boolean testPositions) throws CoreException", "signatureAfterChange": "  private void sortUnit(ICompilationUnit unit, String expectedResult, boolean testPositions) throws CoreException", "diff": ["-\tassertEquals(\"Different output\", sortedSource, expectedResult); //$NON-NLS-1$", "+\tassertEquals(\"Different output\", expectedResult, sortedSource); //$NON-NLS-1$", "-\t\t\tassertEquals(\"wrong mapped positions at \" + i + \" <-> \" + positions[i], initialSource[i], expectedResult.charAt(positions[i])); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tassertEquals(\"wrong mapped positions at \" + i + \" <-> \" + positions[i], expectedResult.charAt(positions[i]), initialSource[i]); //$NON-NLS-1$ //$NON-NLS-2$"]}], "num": 47293}