{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec79c1bbfc1747809de54499f8f57c68", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e832832715b720785193bb68bf65089", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "82743b33822fbb1e8747641a56800f2dd66cbc54", "commitAfterChange": "ab734870d680bdde73d51371df0336cce36fb2b0", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " \t \tpublic IfStatement convert(org.eclipse.jdt.internal.compiler.ast.IfStatement statement)", "signatureAfterChange": " \t \tpublic IfStatement convert(org.eclipse.jdt.internal.compiler.ast.IfStatement statement)", "diff": ["-\t\torg.eclipse.jdt.internal.compiler.ast.Statement thenStatement = statement.thenStatement;", "-\t\torg.eclipse.jdt.internal.compiler.ast.Statement elseStatement = statement.elseStatement;", "-\t\tif (thenStatement != null) {", "-\t\t\tif (thenStatement == org.eclipse.jdt.internal.compiler.ast.Block.None) {", "-\t\t\t\tEmptyStatement emptyStatement = this.ast.newEmptyStatement();", "-\t\t\t\tint start = retrieveStartingSemiColonPosition(statement.sourceStart, statement.sourceEnd);", "-\t\t\t\tint end = retrieveEndingSemiColonPosition(start, statement.sourceEnd);", "-\t\t\t\temptyStatement.setSourceRange(start, end - start + 1);", "-\t\t\t\tifStatement.setThenStatement(emptyStatement);", "-\t\t\t} else {", "-\t\t\t\tifStatement.setThenStatement(convert(statement.thenStatement));", "-\t\t\t}", "-\t\t}", "-\t\tif (elseStatement != null) {", "-\t\t\tif (elseStatement == org.eclipse.jdt.internal.compiler.ast.Block.None) {", "-\t\t\t\t// retrieve the else position", "-\t\t\t\tEmptyStatement emptyStatement = this.ast.newEmptyStatement();", "-\t\t\t\tint start = retrieveElseEndingPosition(statement.sourceStart, statement.sourceEnd);", "-\t\t\t\tstart = retrieveStartingSemiColonPosition(statement.sourceStart, statement.sourceEnd);", "-\t\t\t\tint end = retrieveEndingSemiColonPosition(start, statement.sourceEnd);", "-\t\t\t\temptyStatement.setSourceRange(start, end - start + 1);", "-\t\t\t\tifStatement.setElseStatement(emptyStatement);", "-\t\t\t} else {", "-\t\t\t\tifStatement.setElseStatement(convert(elseStatement));", "-\t\t\t}", "+\t\tifStatement.setThenStatement(convert(statement.thenStatement));", "+\t\tif (statement.elseStatement != null) {", "+\t\t\tifStatement.setElseStatement(convert(statement.elseStatement));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ae2a9227388dad4c04081c658f87161", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/CompletionProposal.java", "commitBeforeChange": "aebd50d4e7ed3a3654e44abaa502f380b7af3ace", "commitAfterChange": "7d7e44bec5cc73af8a58c1959acd433a7f2c6ded", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic char[] getCompletion()", "signatureAfterChange": " \tpublic char[] getCompletion()", "diff": ["-\t\tif(this.completionKind == METHOD_DECLARATION) {", "-\t\t\tfindParameterNames(null);", "-\t\t\tif(this.updateCompletion) {", "-\t\t\t\tthis.updateCompletion = false;", "-", "-\t\t\t\tif(this.parameterNames != null) {", "-\t\t\t\t\tint length = this.parameterNames.length;", "-\t\t\t\t\tStringBuffer completionBuffer = new StringBuffer(this.completion.length);", "-", "-\t\t\t\t\tint start = 0;", "-\t\t\t\t\tint end = CharOperation.indexOf('%', this.completion);", "-", "-\t\t\t\t\tcompletionBuffer.append(this.completion, start, end - start);", "-", "-\t\t\t\t\tfor(int i = 0 ; i < length ; i++){", "-\t\t\t\t\t\tcompletionBuffer.append(this.parameterNames[i]);", "-\t\t\t\t\t\tstart = end + 1;", "-\t\t\t\t\t\tend = CharOperation.indexOf('%', this.completion, start);", "-\t\t\t\t\t\tif(end > -1){", "-\t\t\t\t\t\t\tcompletionBuffer.append(this.completion, start, end - start);", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tcompletionBuffer.append(this.completion, start, this.completion.length - start);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tint nameLength = completionBuffer.length();", "-\t\t\t\t\tthis.completion = new char[nameLength];", "-\t\t\t\t\tcompletionBuffer.getChars(0, nameLength, this.completion, 0);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\treturn this.completion;", "+\t\treturn null; // default overridden by concrete implementation"]}], "num": 37796}