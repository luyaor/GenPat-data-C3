{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "33cb53ca3455922edc53ec495c33e8da", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d51dd8d496f6999582709b244e56e60", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingComparator.java", "commitBeforeChange": "17b1cbd42bc737b47c9ebf5ceda98737740d0825", "commitAfterChange": "c184ff0d8868e4e4a23c45be667e27d2482aa33f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tstatic boolean isEqual(org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding2, boolean checkTypeVariables)", "signatureAfterChange": " \tstatic boolean isEqual(org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding2, boolean checkTypeVariables)", "diff": ["-", "-\t\t\t\t\t&& isEqual(typeBinding.leafComponentType(), typeBinding2.leafComponentType());", "+\t\t\t\t\t&& isEqual(typeBinding.leafComponentType(), typeBinding2.leafComponentType(), checkTypeVariables);", "+\t\t\t\tif (checkTypeVariables) {", "+\t\t\t\t\tif (!isEqual(parameterizedTypeBinding.arguments, parameterizedTypeBinding2.arguments, false)) {", "+\t\t\t\t\t\treturn false;", "+\t\t\t\t\t}", "+\t\t\t\t}", "-\t\t\t\t\t&& (referenceBinding.modifiers == referenceBinding2.modifiers)", "-\t\t\t\t\t&& isEqual(parameterizedTypeBinding.arguments, parameterizedTypeBinding2.arguments);", "+\t\t\t\t\t&& (referenceBinding.modifiers == referenceBinding2.modifiers);", "-\t\t\t\t\tif (!isEqual(referenceBinding.typeVariables(), referenceBinding2.typeVariables())) {", "+\t\t\t\t\tif (!isEqual(referenceBinding.typeVariables(), referenceBinding2.typeVariables(), false)) {", "+\t\t\t} else if (referenceBinding instanceof TypeVariableBinding) {", "+\t\t\t\tif (!(referenceBinding2 instanceof TypeVariableBinding)) {", "+\t\t\t\t\treturn false;", "+\t\t\t\t}", "+\t\t\t\tTypeVariableBinding typeVariableBinding = (TypeVariableBinding) referenceBinding;", "+\t\t\t\tTypeVariableBinding typeVariableBinding2 = (TypeVariableBinding) referenceBinding2;", "+\t\t\t\tif (checkTypeVariables) {", "+\t\t\t\t\treturn CharOperation.equals(typeVariableBinding.sourceName, typeVariableBinding2.sourceName)", "+\t\t\t\t\t\t&& isEqual(typeVariableBinding.declaringElement, typeVariableBinding2.declaringElement, false)", "+\t\t\t\t\t\t&& isEqual(typeVariableBinding.superclass, typeVariableBinding2.superclass, false)", "+\t\t\t\t\t\t&& isEqual(typeVariableBinding.superInterfaces, typeVariableBinding2.superInterfaces, false);", "+\t\t\t\t} else {", "+\t\t\t\t\treturn CharOperation.equals(typeVariableBinding.sourceName, typeVariableBinding2.sourceName);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c21b7c6c55717ebd81929e990ac9581c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingComparator.java", "commitBeforeChange": "17b1cbd42bc737b47c9ebf5ceda98737740d0825", "commitAfterChange": "c184ff0d8868e4e4a23c45be667e27d2482aa33f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t\t\t \tstatic boolean isEqualWithoutTypeVariables(org.eclipse.jdt.internal.compiler.lookup.MethodBinding methodBinding, \t\t\torg.eclipse.jdt.internal.compiler.lookup.MethodBinding methodBinding2)", "signatureAfterChange": " \t\t\t \tstatic boolean isEqual(org.eclipse.jdt.internal.compiler.lookup.MethodBinding methodBinding, \t\t\torg.eclipse.jdt.internal.compiler.lookup.MethodBinding methodBinding2, \t\t\tboolean checkTypeVariables)", "diff": ["-\tstatic boolean isEqualWithoutTypeVariables(org.eclipse.jdt.internal.compiler.lookup.MethodBinding methodBinding,", "-\t\t\torg.eclipse.jdt.internal.compiler.lookup.MethodBinding methodBinding2) {", "+\tstatic boolean isEqual(org.eclipse.jdt.internal.compiler.lookup.MethodBinding methodBinding,", "+\t\t\torg.eclipse.jdt.internal.compiler.lookup.MethodBinding methodBinding2,", "+\t\t\tboolean checkTypeVariables) {", "+\t\tif (checkTypeVariables) {", "+\t\t\treturn (methodBinding == null && methodBinding2 == null)", "+\t\t\t\t|| (CharOperation.equals(methodBinding.selector, methodBinding2.selector)", "+\t\t\t\t\t&& isEqual(methodBinding.returnType, methodBinding2.returnType, false) ", "+\t\t\t\t\t&& isEqual(methodBinding.parameters, methodBinding2.parameters, false)", "+\t\t\t\t\t&& isEqual(methodBinding.thrownExceptions, methodBinding2.thrownExceptions, false)", "+\t\t\t\t\t&& isEqual(methodBinding.typeVariables, methodBinding2.typeVariables, false))", "+\t\t\t\t\t&& isEqual(methodBinding.declaringClass, methodBinding2.declaringClass, false);", "+\t\t}", "-\t\t\t\t&& isEqual(methodBinding.returnType, methodBinding2.returnType) ", "-\t\t\t\t&& isEqual(methodBinding.parameters, methodBinding2.parameters)", "-\t\t\t\t&& isEqual(methodBinding.thrownExceptions, methodBinding2.thrownExceptions));", "+\t\t\t\t&& isEqual(methodBinding.returnType, methodBinding2.returnType, false) ", "+\t\t\t\t&& isEqual(methodBinding.parameters, methodBinding2.parameters, false)", "+\t\t\t\t&& isEqual(methodBinding.thrownExceptions, methodBinding2.thrownExceptions, false));"]}], "num": 43241}