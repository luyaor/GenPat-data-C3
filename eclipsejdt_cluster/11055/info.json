{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "77920c1d2108d911bb7dc9c0b2a112c6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a4114f173a93de1c15f4ee5a2ef4f73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "ef0a598e8142fdc0982c3f62cf49d826edaa6505", "commitAfterChange": "89e5cfe6011c44c81db4c1b525146cb6d514af0e", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprivate void enterAbstractMethod(MethodInfo methodInfo)", "signatureAfterChange": " \tprivate void enterAbstractMethod(MethodInfo methodInfo)", "diff": ["-\t\t\tfMethodParameterNames[typeDepth] =methodInfo. parameterNames;", "+\t\t\tfMethodParameterNames[typeDepth] = methodInfo. parameterNames;", "+\t\t\t", "+\t\t\tif (methodInfo.typeParameters != null) {", "+\t\t\t\tfinal IType currentType = this.types[typeDepth];", "+\t\t\t\tIMethod method = currentType.getMethod(", "+\t\t\t\t\t\tfMemberName[typeDepth],", "+\t\t\t\t\t\tconvertTypeNamesToSigs(fMethodParameterTypes[typeDepth]));", "+\t\t\t\tif (method == null) return;", "+\t\t\t\t", "+\t\t\t\tfor (int i = 0, length = methodInfo.typeParameters.length; i < length; i++) {", "+\t\t\t\t\tfinal TypeParameterInfo typeParameterInfo = methodInfo.typeParameters[i];", "+\t\t\t\t\tfinal ITypeParameter typeParameter = method.getTypeParameter(new String(typeParameterInfo.name));", "+\t\t\t\t\tsetSourceRange(", "+\t\t\t\t\t\ttypeParameter,", "+\t\t\t\t\t\tnew SourceRange(", "+\t\t\t\t\t\t\ttypeParameterInfo.declarationStart,", "+\t\t\t\t\t\t\ttypeParameterInfo.declarationEnd - typeParameterInfo.declarationStart + 1),", "+\t\t\t\t\t\tnew SourceRange(", "+\t\t\t\t\t\t\ttypeParameterInfo.nameSourceStart,", "+\t\t\t\t\t\t\ttypeParameterInfo.nameSourceEnd - typeParameterInfo.nameSourceStart + 1));", "+\t\t\t\t}", "+\t\t\t}\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbec486d313cf4f28c68068fdda796ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "ef0a598e8142fdc0982c3f62cf49d826edaa6505", "commitAfterChange": "89e5cfe6011c44c81db4c1b525146cb6d514af0e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void enterType(TypeInfo typeInfo)", "signatureAfterChange": " \tpublic void enterType(TypeInfo typeInfo)", "diff": ["+", "+\t\tif (typeInfo.typeParameters != null) {", "+\t\t\tfinal IType currentType = this.types[typeDepth];", "+\t\t\tfor (int i = 0, length = typeInfo.typeParameters.length; i < length; i++) {", "+\t\t\t\tfinal TypeParameterInfo typeParameterInfo = typeInfo.typeParameters[i];", "+\t\t\t\tfinal ITypeParameter typeParameter = currentType.getTypeParameter(new String(typeParameterInfo.name));", "+\t\t\t\tsetSourceRange(", "+\t\t\t\t\ttypeParameter,", "+\t\t\t\t\tnew SourceRange(", "+\t\t\t\t\t\ttypeParameterInfo.declarationStart,", "+\t\t\t\t\t\ttypeParameterInfo.declarationEnd - typeParameterInfo.declarationStart + 1),", "+\t\t\t\t\tnew SourceRange(", "+\t\t\t\t\t\ttypeParameterInfo.nameSourceStart,", "+\t\t\t\t\t\ttypeParameterInfo.nameSourceEnd - typeParameterInfo.nameSourceStart + 1));", "+\t\t\t}", "+\t\t}"]}], "num": 11055}