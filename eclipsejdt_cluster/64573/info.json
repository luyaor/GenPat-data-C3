{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dd2ce31cdd2ee66c53ee59ca2e701627", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "012eb0d8545f36287d93c1859090a968", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterBugsTest.java", "commitBeforeChange": "677a462098c653b539c7de50745a6a31854b50b0", "commitAfterChange": "2c4668c00bd6d1643aa73fe0da8a62f6377994a9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void testBug186410b() throws CoreException, IOException", "signatureAfterChange": "  public void testBug186410b() throws CoreException, IOException", "diff": ["-\tpublic void testBug186410b() throws CoreException, IOException {", "-\t\ttry {", "-\t\t\tcreateJavaProject(\"P\", new String[] {\"\"}, new String[0], \"\");", "+", "+public void testBug186410b() throws CoreException, IOException {", "+\ttry {", "+\t\tcreateJavaProject(\"P\", new String[] { \"\" }, new String[0], \"\");", "-\t\t\tICompilationUnit cuA = getCompilationUnit(\"P/A.java\");", "-\t\t\tCompilationUnit unitA = (CompilationUnit) runConversion(AST.JLS3, cuA, true, false, true);", "-\t\t\tAbstractTypeDeclaration type = (AbstractTypeDeclaration)unitA.types().get(0);", "-\t\t\tFieldDeclaration field = (FieldDeclaration) type.bodyDeclarations().get(0);", "-\t\t\tType fieldType = field.getType();", "-\t\t\tITypeBinding typeBinding = fieldType.resolveBinding();", "-\t\t\tITypeBinding objectType = typeBinding.createArrayType(2).getElementType();", "-\t\t\tassertEquals(\"Unexpected superclass\", \"Object\", objectType.getName());", "-\t\t\tITypeBinding objectSuperclass = objectType.getSuperclass();", "-\t\t\tassertNull(\"java.lang.Object should  not have any superclass\", objectSuperclass);", "-\t\t} finally {", "-\t\t\tdeleteProject(\"P\");", "-\t\t}", "+\t\tICompilationUnit cuA = getCompilationUnit(\"P/A.java\");", "+\t\tCompilationUnit unitA = (CompilationUnit) runConversion(cuA, true, false, true);", "+\t\tAbstractTypeDeclaration type = (AbstractTypeDeclaration) unitA.types().get(0);", "+\t\tFieldDeclaration field = (FieldDeclaration) type.bodyDeclarations().get(0);", "+\t\tType fieldType = field.getType();", "+\t\tITypeBinding typeBinding = fieldType.resolveBinding();", "+\t\tITypeBinding objectType = typeBinding.createArrayType(2).getElementType();", "+\t\tassertEquals(\"Unexpected superclass\", \"Object\", objectType.getName());", "+\t\tITypeBinding objectSuperclass = objectType.getSuperclass();", "+\t\tassertNull(\"java.lang.Object should  not have any superclass\", objectSuperclass);", "+\t} finally {", "+\t\tdeleteProject(\"P\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52451661589214baf3644c44a00dc497", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterBugsTest.java", "commitBeforeChange": "677a462098c653b539c7de50745a6a31854b50b0", "commitAfterChange": "2c4668c00bd6d1643aa73fe0da8a62f6377994a9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void testBug209510a() throws CoreException, IOException", "signatureAfterChange": " public void testBug209510a() throws CoreException, IOException", "diff": ["-\t */", "-\tpublic void testBug209510a() throws CoreException, IOException {", "-\t\ttry {", "-\t\t\tcreateJavaProject(\"P\", new String[] {\"\"}, new String[0], \"\");", "+ */", "+public void testBug209510a() throws CoreException, IOException {", "+\ttry {", "+\t\tcreateJavaProject(\"P\", new String[] { \"\" }, new String[0], \"\");", "-\t\t\tICompilationUnit cuA = getCompilationUnit(\"P/A.java\");", "-\t\t\tCompilationUnit unitA = (CompilationUnit) runConversion(AST.JLS3, cuA, true, false, true);", "-\t\t\tAbstractTypeDeclaration typeA = (AbstractTypeDeclaration)unitA.types().get(0);", "-\t\t\tITypeBinding objectType = typeA.resolveBinding().getSuperclass();", "-\t\t\tassertTrue(\"'java.lang.Object' should be recovered!\", objectType.isRecovered());", "-\t\t\tassertEquals(\"Unexpected package for recovered 'java.lang.Object'\", \"java.lang\", objectType .getPackage().getName());", "-\t\t\tassertEquals(\"Unexpected qualified name for recovered 'java.lang.Object'\", \"java.lang.Object\", objectType .getQualifiedName());", "-\t\t} finally {", "-\t\t\tdeleteProject(\"P\");", "-\t\t}", "+\t\tICompilationUnit cuA = getCompilationUnit(\"P/A.java\");", "+\t\tCompilationUnit unitA = (CompilationUnit) runConversion(cuA, true, false, true);", "+\t\tAbstractTypeDeclaration typeA = (AbstractTypeDeclaration) unitA.types().get(0);", "+\t\tITypeBinding objectType = typeA.resolveBinding().getSuperclass();", "+\t\tassertTrue(\"'java.lang.Object' should be recovered!\", objectType.isRecovered());", "+\t\tassertEquals(\"Unexpected package for recovered 'java.lang.Object'\", \"java.lang\", objectType.getPackage().getName());", "+\t\tassertEquals(\"Unexpected qualified name for recovered 'java.lang.Object'\",", "+\t\t    \"java.lang.Object\",", "+\t\t    objectType.getQualifiedName());", "+\t} finally {", "+\t\tdeleteProject(\"P\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bc374659a52121ab0f4a9313057d2de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterBugsTest.java", "commitBeforeChange": "677a462098c653b539c7de50745a6a31854b50b0", "commitAfterChange": "2c4668c00bd6d1643aa73fe0da8a62f6377994a9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void testBug209510b() throws CoreException, IOException", "signatureAfterChange": "  public void testBug209510b() throws CoreException, IOException", "diff": ["-\tpublic void testBug209510b() throws CoreException, IOException {", "-\t\ttry {", "-\t\t\tcreateJavaProject(\"P\", new String[] {\"\"}, new String[0], \"\");", "+", "+public void testBug209510b() throws CoreException, IOException {", "+\ttry {", "+\t\tcreateJavaProject(\"P\", new String[] { \"\" }, new String[0], \"\");", "-\t\t\tICompilationUnit cuA = getCompilationUnit(\"P/A.java\");", "-\t\t\tCompilationUnit unitA = (CompilationUnit) runConversion(AST.JLS3, cuA, true, false, true);", "-\t\t\tAbstractTypeDeclaration type = (AbstractTypeDeclaration)unitA.types().get(0);", "-\t\t\tFieldDeclaration field = (FieldDeclaration) type.bodyDeclarations().get(0);", "-\t\t\tType fieldType = field.getType();", "-\t\t\tITypeBinding typeBinding = fieldType.resolveBinding();", "-\t\t\tITypeBinding arrayType = typeBinding.createArrayType(2);", "-\t\t\tassertTrue(\"'java.lang.Object' should be recovered!\", arrayType.isRecovered());", "-\t\t\tassertNull(\"Unexpected package for recovered 'array of java.lang.Object'\", arrayType .getPackage());", "-\t\t\tassertEquals(\"Unexpected qualified name for recovered 'java.lang.Object'\", \"java.lang.Object[][]\", arrayType .getQualifiedName());", "-\t\t} finally {", "-\t\t\tdeleteProject(\"P\");", "-\t\t}", "+\t\tICompilationUnit cuA = getCompilationUnit(\"P/A.java\");", "+\t\tCompilationUnit unitA = (CompilationUnit) runConversion(cuA, true, false, true);", "+\t\tAbstractTypeDeclaration type = (AbstractTypeDeclaration) unitA.types().get(0);", "+\t\tFieldDeclaration field = (FieldDeclaration) type.bodyDeclarations().get(0);", "+\t\tType fieldType = field.getType();", "+\t\tITypeBinding typeBinding = fieldType.resolveBinding();", "+\t\tITypeBinding arrayType = typeBinding.createArrayType(2);", "+\t\tassertTrue(\"'java.lang.Object' should be recovered!\", arrayType.isRecovered());", "+\t\tassertNull(\"Unexpected package for recovered 'array of java.lang.Object'\", arrayType.getPackage());", "+\t\tassertEquals(\"Unexpected qualified name for recovered 'java.lang.Object'\",", "+\t\t    \"java.lang.Object[][]\",", "+\t\t    arrayType.getQualifiedName());", "+\t} finally {", "+\t\tdeleteProject(\"P\");", "+}"]}], "num": 64573}