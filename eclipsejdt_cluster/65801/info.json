{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d75a0e4b13ed70ad6b7a222b152f4efe", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c5f514819244255c1eda636c50d4378", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "e8e7647f559ab2b52cb4227f76e40c3c50450acc", "commitAfterChange": "4af2b490b50346e709828d4908ef9969ee6a54dc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprivate BinaryExpressionFragmentBuilder buildFragments(BinaryExpression binaryExpression, BlockScope scope)", "signatureAfterChange": "  \tprivate BinaryExpressionFragmentBuilder buildFragments(BinaryExpression binaryExpression, BlockScope scope)", "diff": ["-\t\t", "+", "+\t\t\tcase OperatorIds.PLUS :", "+\t\t\t\tbinaryExpression.left.traverse(builder, scope);", "+\t\t\t\tbuilder.operatorsList.add(new Integer(TerminalTokens.TokenNamePLUS));", "+\t\t\t\tbinaryExpression.right.traverse(builder, scope);", "+\t\t\t\tbreak;", "+\t\t\tcase OperatorIds.MINUS :", "+\t\t\t\tbinaryExpression.left.traverse(builder, scope);", "+\t\t\t\tbuilder.operatorsList.add(new Integer(TerminalTokens.TokenNameMINUS));", "+\t\t\t\tbinaryExpression.right.traverse(builder, scope);", "+\t\t\t\tbreak;", "+\t\t\tcase OperatorIds.OR :", "+\t\t\t\tbinaryExpression.left.traverse(builder, scope);", "+\t\t\t\tbuilder.operatorsList.add(new Integer(TerminalTokens.TokenNameOR));", "+\t\t\t\tbinaryExpression.right.traverse(builder, scope);", "+\t\t\t\tbreak;", "+\t\t\tcase OperatorIds.AND :", "+\t\t\t\tbinaryExpression.left.traverse(builder, scope);", "+\t\t\t\tbuilder.operatorsList.add(new Integer(TerminalTokens.TokenNameAND));", "+\t\t\t\tbinaryExpression.right.traverse(builder, scope);", "+\t\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5eb48327ae5472e5bdbdaa9d3dd675a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "c068497bdb6cb42c26358cbd7f1548d3c744570a", "commitAfterChange": "2de930f59d9b83efe9ad335cd375bf8acd9f09ab", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprivate BinaryExpressionFragmentBuilder buildFragments(BinaryExpression binaryExpression, BlockScope scope)", "signatureAfterChange": "  \tprivate BinaryExpressionFragmentBuilder buildFragments(BinaryExpression binaryExpression, BlockScope scope)", "diff": ["+\t\t\tcase OperatorIds.MULTIPLY :", "+\t\t\t\tbinaryExpression.left.traverse(builder, scope);", "+\t\t\t\tbuilder.operatorsList.add(new Integer(TerminalTokens.TokenNameMULTIPLY));", "+\t\t\t\tbinaryExpression.right.traverse(builder, scope);", "+\t\t\t\tbreak;", "+\t\t\t\tbinaryExpression.right.traverse(builder, scope);", "+\t\t\t\tbreak;", "+\t\t\tcase OperatorIds.DIVIDE :", "+\t\t\t\tbinaryExpression.left.traverse(builder, scope);", "+\t\t\t\tbuilder.operatorsList.add(new Integer(TerminalTokens.TokenNameDIVIDE));", "+\t\t\t\tbinaryExpression.right.traverse(builder, scope);", "+\t\t\t\tbreak;", "+\t\t\tcase OperatorIds.REMAINDER :", "+\t\t\t\tbinaryExpression.left.traverse(builder, scope);", "+\t\t\t\tbuilder.operatorsList.add(new Integer(TerminalTokens.TokenNameREMAINDER));", "+\t\t\t\tbinaryExpression.right.traverse(builder, scope);", "+\t\t\t\tbreak;", "+\t\t\tcase OperatorIds.XOR :", "+\t\t\t\tbinaryExpression.left.traverse(builder, scope);", "+\t\t\t\tbuilder.operatorsList.add(new Integer(TerminalTokens.TokenNameXOR));"]}], "num": 65801}