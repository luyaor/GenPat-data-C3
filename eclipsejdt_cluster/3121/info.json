{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "22036343eb04fdf23fab2f11fd07457e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b140148e3fe2db64077dc7aad8b88bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "a00b91e363390d5872f24709421a2a2b1249ea30", "commitAfterChange": "61bf91bb0112a7323235a8711e82564a6109221c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic void test006()", "signatureAfterChange": "  \tpublic void test006()", "diff": ["-\t\t\t\t\"class Y<T> extends X<A> { public T foo() { return super.foo(); } }\\n\",", "+\t\t\t\t\"class Y<T> extends X<A> { @Override public T foo() { return super.foo(); } }\\n\",", "-\t\t\t\t\"\tclass Y<T> extends X<A> { public T foo() { return super.foo(); } }\\n\" + ", "-\t\t\t\t\"\t                                   ^^^^^\\n\" + ", "+\t\t\t\t\"\tclass Y<T> extends X<A> { @Override public T foo() { return super.foo(); } }\\n\" + ", "+\t\t\t\t\"\t                                             ^^^^^\\n\" + ", "-\t\t\t\t\"\tclass Y<T> extends X<A> { public T foo() { return super.foo(); } }\\n\" + ", "-\t\t\t\t\"\t                                                  ^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"\tclass Y<T> extends X<A> { @Override public T foo() { return super.foo(); } }\\n\" + ", "+\t\t\t\t\"\t                                                            ^^^^^^^^^^^\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40768983860ae24b35d6fd58756fbc64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "1cdb6c1b0fb5ba08d4e282b871474685ab8baf3f", "commitAfterChange": "c3fe3a5d67fbf0c540d6fc63f233f6806516af9c", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 23, "signatureBeforeChange": "  \tpublic void test021()", "signatureAfterChange": "  \tpublic void test021()", "diff": ["-\t\t\t\t\"\tvoid foo(java.util.Map<String, Class<?>> m) { } \\n\" + ", "+\t\t\t\t\"\t@Override void foo(java.util.Map<String, Class<?>> m) { } \\n\" + ", "-\t\t\t\"\tvoid foo(java.util.Map<String, Class<?>> m) { } \\r\\n\" + ", "-\t\t\t\"\t     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"\t@Override void foo(java.util.Map<String, Class<?>> m) { } \\r\\n\" + ", "+\t\t\t\"\t               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\"\tvoid foo(java.util.Map<String, Class<?>> m) { } \\n\" + ", "+\t\t\t\t\"\t@Override void foo(java.util.Map<String, Class<?>> m) { } \\n\" + ", "-\t\t\t\"\tvoid foo(java.util.Map<String, Class<?>> m) { } \\r\\n\" + ", "-\t\t\t\"\t     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"\t@Override void foo(java.util.Map<String, Class<?>> m) { } \\r\\n\" + ", "+\t\t\t\"\t               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + "]}], "num": 3121}