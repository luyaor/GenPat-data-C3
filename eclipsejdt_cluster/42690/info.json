{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2bb7e1748658f692ae0de2f768eaa949", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a684a13c49ed9ea9dab8a532568e5ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "f875f4161e47c5087f589529b7e7ee5cf66c1b26", "commitAfterChange": "3e03e3984540d3907fa7739b419f89dad9725944", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 14, "signatureBeforeChange": "   \tprivate void format(MultiFieldDeclaration multiFieldDeclaration, ASTVisitor visitor, MethodScope scope, boolean isChunkStart, boolean isFirstClassBodyDeclaration)", "signatureAfterChange": "   \tprivate void format(MultiFieldDeclaration multiFieldDeclaration, ASTVisitor visitor, MethodScope scope, boolean isChunkStart, boolean isFirstClassBodyDeclaration)", "diff": ["-\t\t\t\t\tformatExtraDimensions(fieldDeclaration.type);", "+\t\t\t\t\t/*", "+\t\t\t\t\t * Check for extra dimensions", "+\t\t\t\t\t */", "+\t\t\t\t\tint extraDimensions = getDimensions();", "+\t\t\t\t\tif (extraDimensions != 0) {", "+\t\t\t\t\t\t for (int index = 0; index < extraDimensions; index++) {", "+\t\t\t\t\t\t \tthis.scribe.printNextToken(TerminalTokens.TokenNameLBRACKET);", "+\t\t\t\t\t\t \tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET);", "+\t\t\t\t\t\t }", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b474e1c4b2924ae9507373712468a701", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "f875f4161e47c5087f589529b7e7ee5cf66c1b26", "commitAfterChange": "3e03e3984540d3907fa7739b419f89dad9725944", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 29, "signatureBeforeChange": "  \tprivate void formatLocalDeclaration(LocalDeclaration localDeclaration, BlockScope scope, boolean insertSpaceBeforeComma, boolean insertSpaceAfterComma)", "signatureAfterChange": "  \tprivate void formatLocalDeclaration(LocalDeclaration localDeclaration, BlockScope scope, boolean insertSpaceBeforeComma, boolean insertSpaceAfterComma)", "diff": ["-\t\tformatExtraDimensions(localDeclaration.type);", "+\t\t/*", "+\t\t * Check for extra dimensions", "+\t\t */", "+\t\tint extraDimensions = getDimensions();", "+\t\tif (extraDimensions != 0) {", "+\t\t\t for (int index = 0; index < extraDimensions; index++) {", "+\t\t\t \tthis.scribe.printNextToken(TerminalTokens.TokenNameLBRACKET);", "+\t\t\t \tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET);", "+\t\t\t }", "+\t\t}"]}], "num": 42690}