{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0f211e0529e2bc1a46b45228089b78bb", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1828e248aa775f861ccea75ec788a5d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/NullAnnotationMatching.java", "commitBeforeChange": "06338d59e18dd650cacadfb53051f533c530fabf", "commitAfterChange": "07de476492c87dc4eb8797084ffe99575b2b9c74", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \t\t\t@Override \t\t\tpublic boolean visit(RawTypeBinding rawType)", "signatureAfterChange": " \t\t@Override \t\tpublic boolean visit(WildcardBinding wildcardBinding)", "diff": ["+\t\t}", "+\t\t@Override", "+\t\tpublic boolean visit(WildcardBinding wildcardBinding) {", "+\t\t\tlong allNullBits = wildcardBinding.tagBits & TagBits.AnnotationNullMASK;", "+\t\t\tswitch (wildcardBinding.boundKind) {", "+\t\t\t\tcase Wildcard.EXTENDS:", "+\t\t\t\t\tallNullBits |= wildcardBinding.bound.tagBits & TagBits.AnnotationNonNull;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Wildcard.SUPER:", "+\t\t\t\t\tallNullBits |= wildcardBinding.bound.tagBits & TagBits.AnnotationNullable;", "+\t\t\t\t\tbreak;", "+\t\t\t}", "+\t\t\tif (allNullBits == TagBits.AnnotationNullMASK) {", "+\t\t\t\tthis.typeWithContradiction = wildcardBinding;", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t\treturn true;", "+\t\t}", "-\t\t\t}", "-\t\t\t@Override", "-\t\t\tpublic boolean visit(RawTypeBinding rawType) {", "-\t\t\t\treturn visit((ReferenceBinding)rawType);", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "305d7217ac45bc7c7f6d2760a15fb43d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/NullAnnotationMatching.java", "commitBeforeChange": "06338d59e18dd650cacadfb53051f533c530fabf", "commitAfterChange": "07de476492c87dc4eb8797084ffe99575b2b9c74", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t\t\t@Override \t\t\tpublic boolean visit(ReferenceBinding referenceBinding)", "signatureAfterChange": " \t\t@Override \t\tpublic boolean visit(TypeVariableBinding typeVariable)", "diff": ["+\t\t}", "+\t\t@Override", "+\t\tpublic boolean visit(TypeVariableBinding typeVariable) {", "+\t\t\tif (!visit((ReferenceBinding)typeVariable))", "+\t\t\t\treturn false;", "+\t\t\tlong allNullBits = typeVariable.tagBits & TagBits.AnnotationNullMASK;", "+\t\t\tif (typeVariable.firstBound != null)", "+\t\t\t\tallNullBits = typeVariable.firstBound.tagBits & TagBits.AnnotationNullMASK;", "+\t\t\tfor (TypeBinding otherBound : typeVariable.otherUpperBounds())", "+\t\t\t\tallNullBits |= otherBound.tagBits & TagBits.AnnotationNullMASK;", "+\t\t\tif (allNullBits == TagBits.AnnotationNullMASK) {", "+\t\t\t\tthis.typeWithContradiction = typeVariable;", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t\treturn true;", "+\t\t}", "-\t\t\tReferenceBinding typeWithContradiction;", "-\t\t\t@Override", "-\t\t\tpublic boolean visit(ReferenceBinding referenceBinding) {", "-\t\t\t\tif ((referenceBinding.tagBits & TagBits.AnnotationNullMASK) == TagBits.AnnotationNullMASK) {", "-\t\t\t\t\tthis.typeWithContradiction = referenceBinding;", "-\t\t\t\t\treturn false;", "-\t\t\t\t}", "-\t\t\t\treturn true;", "-\t\t\t}"]}], "num": 59326}