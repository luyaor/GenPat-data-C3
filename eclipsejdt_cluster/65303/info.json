{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "faf7c7d7de2b0f52a87371feb7e16c91", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e604b4afa03c0c70c7a453f257d13fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/VarargTest.java", "commitBeforeChange": "90ab26b26139b04c1b21341903f9bda9323cd1a1", "commitAfterChange": "63bda44d804d11c0afa7e8111644ceeb5480e759", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void test001()", "signatureAfterChange": "  \tpublic void test001()", "diff": ["+//\t\t\t\t\"\t\tY y = new Y();\\n\" +", "+//\t\t\t\t\"\t\ty = new Y(1);\\n\" +", "+//\t\t\t\t\"\t\ty = new Y(1, 2, (byte) 3, 4);\\n\" +", "+//\t\t\t\t\"\t\ty = new Y(new int[] {1, 2, 3, 4 });\\n\" +", "+\t\t\t\t\"\t\t\\n\" +", "+\t\t\t\t\"\tpublic Y(int ... values) {\\n\" +", "+\t\t\t\t\"\t\tint result = 0;\\n\" +", "+\t\t\t\t\"\t\tfor (int i = 0, l = values.length; i < l; i++)\\n\" +", "+\t\t\t\t\"\t\t\tresult += values[i];\\n\" +", "+\t\t\t\t\"\t\tSystem.out.print(result);\\n\" +", "+\t\t\t\t\"\t\tSystem.out.print(' ');\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+//\t\t\t\"0 1 10 10 0 1 10 10\");", "+//\t\t\t\t\"\t\tY y = new Y();\\n\" +", "+//\t\t\t\t\"\t\ty = new Y(1);\\n\" +", "+//\t\t\t\t\"\t\ty = new Y(1, 2, (byte) 3, 4);\\n\" +", "+//\t\t\t\t\"\t\ty = new Y(new int[] {1, 2, 3, 4 });\\n\" +", "+\t\t\t\t\"\t\t\\n\" +", "-\t\t\t\t\"\t\tY.count(new int[] {1, 2, 3, 4});\\n\" +", "+\t\t\t\t\"\t\tY.count(new int[] {1, 2, 3, 4 });\\n\" +", "+//\t\t\t\"0 1 10 10 0 1 10 10\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aafb21cfa4e3bbf717b489e584748a97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/VarargTest.java", "commitBeforeChange": "63bda44d804d11c0afa7e8111644ceeb5480e759", "commitAfterChange": "6e3484e93dc48a09ac8c425df0144a313c14ab99", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void test001()", "signatureAfterChange": "  \tpublic void test001()", "diff": ["-//\t\t\t\t\"\t\tY y = new Y();\\n\" +", "-//\t\t\t\t\"\t\ty = new Y(1);\\n\" +", "-//\t\t\t\t\"\t\ty = new Y(1, 2, (byte) 3, 4);\\n\" +", "-//\t\t\t\t\"\t\ty = new Y(new int[] {1, 2, 3, 4 });\\n\" +", "+\t\t\t\t\"\t\tY y = new Y();\\n\" +", "+\t\t\t\t\"\t\ty = new Y(1);\\n\" +", "+\t\t\t\t\"\t\ty = new Y(1, 2, (byte) 3, 4);\\n\" +", "+\t\t\t\t\"\t\ty = new Y(new int[] {1, 2, 3, 4 });\\n\" +", "-\t\t\t\"0 1 10 10\");", "-//\t\t\t\"0 1 10 10 0 1 10 10\");", "+\t\t\t\"0 1 10 10 0 1 10 10\");", "-//\t\t\t\t\"\t\tY y = new Y();\\n\" +", "-//\t\t\t\t\"\t\ty = new Y(1);\\n\" +", "-//\t\t\t\t\"\t\ty = new Y(1, 2, (byte) 3, 4);\\n\" +", "-//\t\t\t\t\"\t\ty = new Y(new int[] {1, 2, 3, 4 });\\n\" +", "+\t\t\t\t\"\t\tY y = new Y();\\n\" +", "+\t\t\t\t\"\t\ty = new Y(1);\\n\" +", "+\t\t\t\t\"\t\ty = new Y(1, 2, (byte) 3, 4);\\n\" +", "+\t\t\t\t\"\t\ty = new Y(new int[] {1, 2, 3, 4 });\\n\" +", "-\t\t\t\"0 1 10 10\",", "-//\t\t\t\"0 1 10 10 0 1 10 10\",", "+\t\t\t\"0 1 10 10 0 1 10 10\","]}], "num": 65303}