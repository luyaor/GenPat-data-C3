{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "45f59f3392f6bc36d26a0e6f176c4fc1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86c0208cdfbe72dfd55f4257088296fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "1d1b85ba11568f78a124441d6eb86af75fb135ca", "commitAfterChange": "63969f0e42bcdfc0a055ac0f3d2f47fa48cf3e29", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " protected void consumeCastExpressionLL1WithBounds()", "signatureAfterChange": " protected void consumeCastExpressionLL1WithBounds()", "diff": ["-\t\tthis.patternLocator.match(castExpression.type, this.nodeSet);", "+\t\tTypeReference[] typeReferences = ((IntersectionCastTypeReference) castExpression.type).typeReferences;", "+\t\tfor (int i = 0, length = typeReferences.length; i < length; i++)", "+\t\t\tthis.patternLocator.match(typeReferences[i], this.nodeSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c43e465ba4a2d3e1c6e4c8d8c9591e42", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "  protected void consumeStatementCatch()", "signatureAfterChange": "  protected void consumeStatementCatch()", "diff": ["-\t\tthis.patternLocator.match(localDeclaration.type, this.nodeSet);", "+\t\tif (localDeclaration.type instanceof UnionTypeReference) {", "+\t\t\tTypeReference[] refs = ((UnionTypeReference)localDeclaration.type).typeReferences;", "+\t\t\tfor (int i = 0, len  = refs.length; i < len; i++) {", "+\t\t\t\tthis.patternLocator.match(refs[i], this.nodeSet);", "+\t\t\t}", "+\t\t} else {", "+\t\t\tthis.patternLocator.match(localDeclaration.type, this.nodeSet);", "+\t\t}"]}], "num": 3635}