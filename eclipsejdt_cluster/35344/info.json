{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "691f0c52d9aa839af8d5d9f8a2ef580b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "008d303db664f05902181e096e3462b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "c4ab99d799acc112f09caef92591c48f36795d65", "commitAfterChange": "49709bf8c2e28ee09c1495f3c38bd0f03955bc27", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " public static char[] removeCapture(char[] methodOrTypeSignature)", "signatureAfterChange": " public static char[] removeCapture(char[] methodOrTypeSignature)", "diff": ["-\t\t", "-// TODO (frederic) Create remove(char[], char) method on CharOperation and call it from here", "-\tchar[] result = null;", "-\tint count = 0;", "-\tfor (int i = 0, length = methodOrTypeSignature.length; i < length; i++) {", "-\t\tchar c = methodOrTypeSignature[i];", "-\t\tif (c == C_CAPTURE) {", "-\t\t\tif (result == null) {", "-\t\t\t\tresult = new char[length];", "-\t\t\t\tSystem.arraycopy(methodOrTypeSignature, 0, result, 0, i);", "-\t\t\t\tcount = i;", "-\t\t\t}", "-\t\t} else if (result != null) {", "-\t\t\tresult[count++] = c;", "-\t\t}", "-\t}", "-\tif (result == null) return methodOrTypeSignature;", "-\tSystem.arraycopy(result, 0, result = new char[count], 0, count);", "-\treturn result;", "+\treturn CharOperation.remove(methodOrTypeSignature, C_CAPTURE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e4c91dcc13977baa4808e4a58278b5b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static ReferenceBinding[] substitute(Substitution substitution, ReferenceBinding[] originalTypes)", "signatureAfterChange": " \tpublic static ReferenceBinding[] substitute(Substitution substitution, ReferenceBinding[] originalTypes)", "diff": ["-\t\tif (originalTypes == null) return null;", "-\t    ReferenceBinding[] substitutedTypes = originalTypes;", "-\t    for (int i = 0, length = originalTypes.length; i < length; i++) {", "-\t        ReferenceBinding originalType = originalTypes[i];", "-\t        TypeBinding substitutedType = substitute(substitution, originalType);", "-\t        if (!(substitutedType instanceof ReferenceBinding)) {", "-\t        \treturn null; // impossible substitution", "-\t        }", "-\t        if (substitutedType != originalType) { //$IDENTITY-COMPARISON$", "-\t            if (substitutedTypes == originalTypes) {", "-\t                System.arraycopy(originalTypes, 0, substitutedTypes = new ReferenceBinding[length], 0, i);", "-\t            }", "-\t            substitutedTypes[i] = (ReferenceBinding)substitutedType;", "-\t        } else if (substitutedTypes != originalTypes) {", "-\t            substitutedTypes[i] = originalType;", "-\t        }", "-\t    }", "-\t    return substitutedTypes;", "+\t\treturn defaultSubstitutor.substitute(substitution, originalTypes);"]}], "num": 35344}