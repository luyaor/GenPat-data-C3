{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "72d075f66439f5448c5cd05b5f52df99", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91979dc47e4bdf744c06c2fd60e8f7cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "420aa82752ec3e926a634ee4daaacddae8a8ab80", "commitAfterChange": "f68c3205ee145ec7c1c029e73701ee13aaf91bec", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tIBinding resolveName(Name name)", "signatureAfterChange": " \tIBinding resolveName(Name name)", "diff": ["-\t\t\tint qualifiedNameLength = qualifiedNameReference.tokens.length;", "+\t\t\tfinal char[][] tokens = qualifiedNameReference.tokens;", "+\t\t\tint qualifiedNameLength = tokens.length;", "-\t\t\t\t\tbinding = this.scope.getTypeOrPackage(CharOperation.subarray(qualifiedNameReference.tokens, 0, indexInQualifiedName));", "+\t\t\t\t\tbinding = this.scope.getTypeOrPackage(CharOperation.subarray(tokens, 0, indexInQualifiedName));", "-\t\t\t\t\tbinding = internalScope.getTypeOrPackage(CharOperation.subarray(qualifiedNameReference.tokens, 0, indexInQualifiedName));", "+\t\t\t\t\tbinding = internalScope.getTypeOrPackage(CharOperation.subarray(tokens, 0, indexInQualifiedName));", "-\t\t\t\t\tif (binding != null && binding.isValidBinding()) {", "-\t\t\t\t\t\treturn this.getVariableBinding((org.eclipse.jdt.internal.compiler.lookup.VariableBinding) binding);\t\t\t\t", "+\t\t\t\t\tif (binding != null) {", "+\t\t\t\t\t\tif (binding.isValidBinding()) {", "+\t\t\t\t\t\t\treturn this.getVariableBinding((org.eclipse.jdt.internal.compiler.lookup.VariableBinding) binding);\t\t\t\t", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tif (binding instanceof ProblemFieldBinding) {", "+\t\t\t\t\t\t\t\tProblemFieldBinding problemFieldBinding = (ProblemFieldBinding) binding;", "+\t\t\t\t\t\t\t\tswitch(problemFieldBinding.problemId()) {", "+\t\t\t\t\t\t\t\t\tcase ProblemReasons.NotVisible : ", "+\t\t\t\t\t\t\t\t\tcase ProblemReasons.NonStaticReferenceInStaticContext :", "+\t\t\t\t\t\t\t\t\t\tReferenceBinding declaringClass = problemFieldBinding.declaringClass;", "+\t\t\t\t\t\t\t\t\t\tif (declaringClass != null) {", "+\t\t\t\t\t\t\t\t\t\t\tFieldBinding exactBinding = declaringClass.getField(tokens[tokens.length - 1]);", "+\t\t\t\t\t\t\t\t\t\t\tif (exactBinding != null) {", "+\t\t\t\t\t\t\t\t\t\t\t\tIVariableBinding variableBinding = (IVariableBinding) this.compilerBindingsToASTBindings.get(exactBinding);", "+\t\t\t\t\t\t\t\t\t\t\t\tif (variableBinding != null) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\treturn variableBinding;", "+\t\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\t\t\tvariableBinding = new VariableBinding(this, exactBinding);", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.compilerBindingsToASTBindings.put(exactBinding, variableBinding);", "+\t\t\t\t\t\t\t\t\t\t\t\treturn variableBinding;", "+\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "-\t\t\tif (binding == null || !binding.isValidBinding()) {", "+\t\t\tif (binding == null) {", "+\t\t\t\treturn null;", "+\t\t\t} else if (!binding.isValidBinding()) {", "+\t\t\t\tswitch(binding.problemId()) {", "+\t\t\t\t\tcase ProblemReasons.NotVisible : ", "+\t\t\t\t\tcase ProblemReasons.NonStaticReferenceInStaticContext :", "+\t\t\t\t\t\tif (binding instanceof ProblemReferenceBinding) {", "+\t\t\t\t\t\t\tProblemReferenceBinding problemReferenceBinding = (ProblemReferenceBinding) binding;", "+\t\t\t\t\t\t\tBinding binding2 = problemReferenceBinding.original;", "+\t\t\t\t\t\t\tif (binding2 != null && binding2 instanceof org.eclipse.jdt.internal.compiler.lookup.TypeBinding) {", "+\t\t\t\t\t\t\t\treturn this.getTypeBinding((org.eclipse.jdt.internal.compiler.lookup.TypeBinding) binding2);", "+\t\t\t\t\t\t\t} ", "+\t\t\t\t\t\t}", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98afacfe2c09ae07bc62813836574388", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "4e2e64c4f88c99c3e5a108d48b8090039fe7bc09", "commitAfterChange": "3cc60ef5ffdcff6661df47897d960b6759c64207", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprotected ITypeBinding getTypeBinding(org.eclipse.jdt.internal.compiler.lookup.TypeBinding referenceBinding)", "signatureAfterChange": " \tprotected ITypeBinding getTypeBinding(org.eclipse.jdt.internal.compiler.lookup.TypeBinding referenceBinding)", "diff": ["-\t\tif (referenceBinding == null || !referenceBinding.isValidBinding()) {", "+\t\tif (referenceBinding == null) {", "-\t\t}", "-\t\tTypeBinding binding = (TypeBinding) this.compilerBindingsToASTBindings.get(referenceBinding);", "-\t\tif (binding != null) {", "+\t\t} else if (!referenceBinding.isValidBinding()) {", "+\t\t\tswitch(referenceBinding.problemId()) {", "+\t\t\t\tcase ProblemReasons.NotVisible : ", "+\t\t\t\tcase ProblemReasons.NonStaticReferenceInStaticContext :", "+\t\t\t\t\tif (referenceBinding instanceof ProblemReferenceBinding) {", "+\t\t\t\t\t\tProblemReferenceBinding problemReferenceBinding = (ProblemReferenceBinding) referenceBinding;", "+\t\t\t\t\t\tBinding binding2 = problemReferenceBinding.original;", "+\t\t\t\t\t\tif (binding2 != null && binding2 instanceof org.eclipse.jdt.internal.compiler.lookup.TypeBinding) {", "+\t\t\t\t\t\t\tTypeBinding binding = (TypeBinding) this.compilerBindingsToASTBindings.get(binding2);", "+\t\t\t\t\t\t\tif (binding != null) {", "+\t\t\t\t\t\t\t\treturn binding;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tbinding = new TypeBinding(this, (org.eclipse.jdt.internal.compiler.lookup.TypeBinding) binding2);", "+\t\t\t\t\t\t\tthis.compilerBindingsToASTBindings.put(binding2, binding);", "+\t\t\t\t\t\t\treturn binding;", "+\t\t\t\t\t\t} ", "+\t\t\t\t\t}", "+\t\t\t}", "+\t\t\treturn null;", "+\t\t} else {", "+\t\t\tTypeBinding binding = (TypeBinding) this.compilerBindingsToASTBindings.get(referenceBinding);", "+\t\t\tif (binding != null) {", "+\t\t\t\treturn binding;", "+\t\t\t}", "+\t\t\tbinding = new TypeBinding(this, referenceBinding);", "+\t\t\tthis.compilerBindingsToASTBindings.put(referenceBinding, binding);", "-\t\tbinding = new TypeBinding(this, referenceBinding);", "-\t\tthis.compilerBindingsToASTBindings.put(referenceBinding, binding);", "-\t\treturn binding;"]}], "num": 28512}