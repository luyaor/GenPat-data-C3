{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7ee6e713f3945745a998cde959d80dd3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a7290cff926338ed9d61bb453e1a7d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "5e23ed7edfe961d34bd26ee29fb9ade957409733", "commitAfterChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprotected boolean parseParam() throws InvalidInputException", "signatureAfterChange": " \tprotected boolean parseParam() throws InvalidInputException", "diff": ["-\t\t\tthis.scanner.currentPosition = start;", "+\t\t\tif (this.kind != COMPLETION_PARSER) this.scanner.currentPosition = start;", "+\t\tboolean mayBeGeneric = this.sourceLevel >= ClassFileConstants.JDK1_5;", "-\t\t\t\t\tif (valid && this.jdk15) {", "+\t\t\t\t\tif (valid && mayBeGeneric) {", "-\t\t\t\t\t\telse if (this.jdk15 && isTypeParam)", "+\t\t\t\t\t\telse if (mayBeGeneric && isTypeParam)", "-\t\tif (isTypeParam && this.jdk15) {", "+\t\tif (isTypeParam && mayBeGeneric) {", "-\t\t\tif (this.jdk15 && isTypeParam)", "+\t\t\tif (mayBeGeneric && isTypeParam)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9015ed8c4943635ff3b6952aa141a375", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "bcf713cc85d206ad26bdea2aeec76ede4ed1b62c", "commitAfterChange": "4cf47d627358d0cbaa8f441928dc92203ede93b7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic final boolean checkCastTypesCompatibility( \t\tBlockScope scope, \t\tTypeBinding castType, \t\tTypeBinding expressionType)", "signatureAfterChange": " \tpublic final boolean checkCastTypesCompatibility( \t\tBlockScope scope, \t\tTypeBinding castType, \t\tTypeBinding expressionType)", "diff": ["-\t\t\t\t\t\tif (!match.isParameterizedType() && !match.isGenericType()) {", "+\t\t\t\t\t\tif (match != null && !match.isParameterizedType() && !match.isGenericType()) {", "-\t\t\t\t\t\tif (!match.isParameterizedType() && !match.isGenericType()) {", "+\t\t\t\t\t\tif (match != null && !match.isParameterizedType() && !match.isGenericType()) {", "-\t\t\t\t\tif (!match.isParameterizedType() && !match.isGenericType()) {", "+\t\t\t\t\tif (match != null && !match.isParameterizedType() && !match.isGenericType()) {"]}], "num": 6533}