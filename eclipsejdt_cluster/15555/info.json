{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f9c7a5e6570fbac71ab7a8c7cea7d9d", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f652fefc55fb567fceb57f85264d227", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "91305054d24049d6f3c60e6470ac6824b85237d2", "commitAfterChange": "613f49564d3b10ed5b9a9173cbde62537beda2ab", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": " \tpublic void setOptions(Map newOptions)", "signatureAfterChange": " \tpublic void setOptions(Map newOptions)", "diff": ["-\t\t\t\t// TODO (frederic) remove when jdt-ui will change to new values", "-\t\t\t\tString newKey = key;", "-\t\t\t\tif (key.equals(JavaCore.OLD_COMPILER_PB_INVALID_ANNOTATION)) {", "-\t\t\t\t\tnewKey = JavaCore.COMPILER_PB_INVALID_JAVADOC;", "-\t\t\t\t}", "-\t\t\t\tif (key.equals(JavaCore.OLD_COMPILER_PB_MISSING_ANNOTATION)) {", "-\t\t\t\t\tnewKey = JavaCore.COMPILER_PB_MISSING_JAVADOC;", "-\t\t\t\t}", "-\t\t\t\t// end to do", "-\t\t\t\tif (!JavaModelManager.OptionNames.contains(newKey)) continue; // unrecognized option", "+\t\t\t\tif (!JavaModelManager.OptionNames.contains(key)) continue; // unrecognized option", "-\t\t\t\tpreferences.setDefault(newKey, CUSTOM_DEFAULT_OPTION_VALUE); // empty string isn't the default (26251)", "-\t\t\t\tpreferences.setValue(newKey, value);", "+\t\t\t\tpreferences.setDefault(key, CUSTOM_DEFAULT_OPTION_VALUE); // empty string isn't the default (26251)", "+\t\t\t\tpreferences.setValue(key, value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "911b78ea1beda69be3d1d938fc78cb27", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "91305054d24049d6f3c60e6470ac6824b85237d2", "commitAfterChange": "613f49564d3b10ed5b9a9173cbde62537beda2ab", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": " \tpublic void setOption(String optionName, String optionValue)", "signatureAfterChange": " \tpublic void setOption(String optionName, String optionValue)", "diff": ["-\t\t// TODO (frederic) remove when jdt-ui will change to new values", "-\t\tString key = optionName;", "-\t\tif (optionName.equals(JavaCore.OLD_COMPILER_PB_INVALID_ANNOTATION)) {", "-\t\t\tkey = JavaCore.COMPILER_PB_INVALID_JAVADOC;", "-\t\t}", "-\t\tif (optionName.equals(JavaCore.OLD_COMPILER_PB_MISSING_ANNOTATION)) {", "-\t\t\tkey = JavaCore.COMPILER_PB_MISSING_JAVADOC;", "-\t\t}", "-\t\t// end remove", "-\t\tif (!JavaModelManager.OptionNames.contains(key)) return; // unrecognized option", "+\t\tif (!JavaModelManager.OptionNames.contains(optionName)) return; // unrecognized option", "-\t\tpreferences.setDefault(key, CUSTOM_DEFAULT_OPTION_VALUE); // empty string isn't the default (26251)", "-\t\tpreferences.setValue(key, optionValue);", "+\t\tpreferences.setDefault(optionName, CUSTOM_DEFAULT_OPTION_VALUE); // empty string isn't the default (26251)", "+\t\tpreferences.setValue(optionName, optionValue);"]}], "num": 15555}