{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fdb11eef2ced640b4fb74c8479e3fad4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11073bde264cbac6573def51e020c3e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "93444b7671b763598022452cafbe29143ff8c004", "commitAfterChange": "b9dd40f151f099ea02bdb585a636b0e4d30a3aca", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " private void buildMoreCompletionContext(Expression expression)", "signatureAfterChange": " private void buildMoreCompletionContext(Expression expression)", "diff": ["-\t\t\t\t\t\t(selector == THIS_CONSTRUCTOR) ? ", "-\t\t\t\t\t\t\tExplicitConstructorCall.This : ", "+\t\t\t\t\t\t(selector == THIS_CONSTRUCTOR) ?", "+\t\t\t\t\t\t\tExplicitConstructorCall.This :", "-\t\t\t\t\t", "+", "-\t\t\t\t\t", "+", "-\t\t\t\t\t", "+", "-\t\t\t\t\t", "+", "-\t", "+", "-\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\t// remove selector ", "-\t\t\t\t\t\t\t\tthis.identifierPtr--; ", "+", "+\t\t\t\t\t\t\t\t// remove selector", "+\t\t\t\t\t\t\t\tthis.identifierPtr--;", "-\t\t\t\t\t\t\t", "+", "-\t\t\t\t\tif(operatorExpression != null) {", "-\t\t\t\t\t\tassistNodeParent = operatorExpression;", "-\t\t\t\t\t}", "+\t\t\t\t\tassistNodeParent = operatorExpression;", "-\t\t\t\t\t", "+", "-\t\t\t\t", "+", "-\t\t\t\t\texpressionLengthPtr--;\t", "+\t\t\t\t\texpressionLengthPtr--;", "-\t\t\t\t\t", "+", "-\t\t\t\t", "+", "-\t\t\t\t", "+", "-\t\t\t\t\t\t\t\tthis.astStack, ", "-\t\t\t\t\t\t\t\tnewAstPtr + 1, ", "-\t\t\t\t\t\t\t\tswitchStatement.statements, ", "-\t\t\t\t\t\t\t\t0, ", "-\t\t\t\t\t\t\t\tlength); ", "+\t\t\t\t\t\t\t\tthis.astStack,", "+\t\t\t\t\t\t\t\tnewAstPtr + 1,", "+\t\t\t\t\t\t\t\tswitchStatement.statements,", "+\t\t\t\t\t\t\t\t0,", "+\t\t\t\t\t\t\t\tlength);", "-\t\t\t", "+", "-\t\t\t", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab1a1eb3648ff5609ff1d4a14c48dde7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "ccb3e5525c54dfe23c1e360c5b523dc7389a8449", "commitAfterChange": "d21bc313cdd8902b8761ed6e8db08c82a2b9b3d0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r \r \tprivate void complete(AstNode astNode, Binding qualifiedBinding, Scope scope)", "signatureAfterChange": "\r \r \tprivate void complete(AstNode astNode, Binding qualifiedBinding, Scope scope)", "diff": ["-\t\t\t\t\t\t\t\t\t\t\tconstructorCall);\r", "+\t\t\t\t\t\t\t\t\t\t\tconstructorCall,\r", "+\t\t\t\t\t\t\t\t\t\t\tfalse);\r", "-\t\t\t\t\t\t\t\t\t\t\tfindConstructors(\r", "-\t\t\t\t\t\t\t\t\t\t\t\t(ReferenceBinding) qualifiedBinding,\r", "-\t\t\t\t\t\t\t\t\t\t\t\targTypes,\r", "-\t\t\t\t\t\t\t\t\t\t\t\tscope,\r", "-\t\t\t\t\t\t\t\t\t\t\t\tallocExpression);\r", "+\t\t\t\t\t\t\t\t\t\t\t\r", "+\t\t\t\t\t\t\t\t\t\t\tReferenceBinding ref = (ReferenceBinding) qualifiedBinding;\r", "+\t\t\t\t\t\t\t\t\t\t\tif(ref.isClass()) {\r", "+\t\t\t\t\t\t\t\t\t\t\t\tif(!ref.isAbstract()) {\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\tfindConstructors(\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tref,\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\targTypes,\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope,\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tallocExpression,\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse);\r", "+\t\t\t\t\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\t\t\t\t\tif(!ref.isFinal()){\r", "+\t\t\t\t\t\t\t\t\t\t\t\tfindAnonymousType(\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\tref,\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\targTypes,\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\tscope,\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\tallocExpression);\r", "+\t\t\t\t\t\t\t\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6d5028f188238683ea0b246b41a0e89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "83445beb69e15e5eb2488d8746136cbbd8c4461a", "commitAfterChange": "cff902ed861deb5cff157c45c8eb21f377de7ae3", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tprivate BoundSet resolve(InferenceVariable[] toResolve) throws InferenceFailureException", "signatureAfterChange": " \tprivate BoundSet resolve(InferenceVariable[] toResolve) throws InferenceFailureException", "diff": ["-\t\t\t\t\tif (!tmpBoundSet.hasCaptureBound(variableSet)) {", "+\t\t\t\t\tvariables: if (!tmpBoundSet.hasCaptureBound(variableSet)) {", "-\t\t\t\t\t\t\t\t\t\t\tif (glbs == null)", "+\t\t\t\t\t\t\t\t\t\t\tif (glbs == null) {", "-\t\t\t\t\t\t\t\t\t\t\telse if (glbs.length == 1)", "+\t\t\t\t\t\t\t\t\t\t\t} else if (glbs.length == 1) {", "-\t\t\t\t\t\t\t\t\t\t\telse", "-\t\t\t\t\t\t\t\t\t\t\t\tglb = new IntersectionCastTypeBinding(glbs, this.environment);", "+\t\t\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\t\t\tIntersectionCastTypeBinding intersection = new IntersectionCastTypeBinding(glbs, this.environment);", "+\t\t\t\t\t\t\t\t\t\t\t\tif (!ReferenceBinding.isConsistentIntersection(intersection.intersectingTypes)) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\ttmpBoundSet = prevBoundSet; // clean up", "+\t\t\t\t\t\t\t\t\t\t\t\t\tbreak variables; // and start over", "+\t\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\t\t\tglb = intersection;", "+\t\t\t\t\t\t\t\t\t\t\t}"]}], "num": 13164}