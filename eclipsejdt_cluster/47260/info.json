{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f6ae90b7eb0288ba4d199cdac9615493", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f02a38d549409fa0155d75278c346594", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "1981bf8ffea2219e8159438f3f203edffff2e187", "commitAfterChange": "462d48c2ab243e0f3a23c0def993c032272cb1da", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public boolean checkUnsafeCast(Scope scope, TypeBinding castType, TypeBinding expressionType, TypeBinding match, boolean isNarrowing)", "signatureAfterChange": "  public boolean checkUnsafeCast(Scope scope, TypeBinding castType, TypeBinding expressionType, TypeBinding match, boolean isNarrowing)", "diff": ["-\tif (match != null && (castType.isBoundParameterizedType() || expressionType.isBoundParameterizedType())) {", "+\tif (match != null && (castType.isEnclosingTypeBoundParameterizedType() || expressionType.isEnclosingTypeBoundParameterizedType())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1ef90997d41279d988ecd766a8d691f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "1981bf8ffea2219e8159438f3f203edffff2e187", "commitAfterChange": "462d48c2ab243e0f3a23c0def993c032272cb1da", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  public boolean checkUnsafeCast(Scope scope, TypeBinding castType, TypeBinding expressionType, TypeBinding match, boolean isNarrowing)", "signatureAfterChange": "  public boolean checkUnsafeCast(Scope scope, TypeBinding castType, TypeBinding expressionType, TypeBinding match, boolean isNarrowing)", "diff": ["-\t\t\tif (castType.isBoundParameterizedType()) {", "+\t\t\tif (castType.isEnclosingTypeBoundParameterizedType()) {", "-\t\t\tif (isNarrowing && (leafType.isBoundParameterizedType() || leafType.isTypeVariable())) {", "+\t\t\tif (isNarrowing && (leafType.isEnclosingTypeBoundParameterizedType() || leafType.isTypeVariable())) {"]}], "num": 47260}