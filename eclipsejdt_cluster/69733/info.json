{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "973f649997cffdbba69b13c20f7558fb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d8b13452783c0a98f2bfc94363c329b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatter.java", "commitBeforeChange": "524f4ffae49579e103a152caac281a0f346c952b", "commitAfterChange": "da39b69e72c50baaaa7ca77863d468ca697fcf61", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \tpublic static String format(\r \t\tString sourceString,\r \t\tint initialIndentationLevel,\r \t\tMap options)", "signatureAfterChange": "\r \tpublic String format(String string, int indentationLevel)", "diff": ["-\t */\r", "-\tpublic static String format(\r", "-\t\tString sourceString,\r", "-\t\tint initialIndentationLevel,\r", "-\t\tMap options) {\r", "-\t\tCodeFormatter formatter = new CodeFormatter(options);\r", "-\t\tformatter.setInitialIndentationLevel(initialIndentationLevel);\r", "-\t\treturn formatter.formatSourceString(sourceString);\r", "-\t}\r", "+\t */\r", "+\tpublic String format(String string, int indentationLevel) {\r", "+\t\treturn format(string, indentationLevel, null);\r", "+\t}\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96f80c63c16a7aa965e8d98bc79096cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic boolean match(BooleanLiteral node, Object other)", "signatureAfterChange": " \tpublic boolean match(BlockComment node, Object other)", "diff": ["+\t */", "+\tpublic boolean match(BlockComment node, Object other) {", "+\t\tif (!(other instanceof BlockComment)) {", "+\t\t\treturn false;", "+\t\t}", "+\t\treturn true;", "+\t}"]}], "num": 69733}