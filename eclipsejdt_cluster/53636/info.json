{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2c36ea6f26e1e262b3ac7b6e5dbc6e19", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a06824af31e69e1d36b616167d915d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "a5c56b9d9a1a6a7a2412b9e4fe79595e9a454729", "commitAfterChange": "808f8a4c125739a8b2d2237ba90c04dc1390f0b7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void acceptLocalMethod(MethodBinding methodBinding)", "signatureAfterChange": " public void acceptLocalMethod(MethodBinding methodBinding)", "diff": ["-\t\t\tchar[] genericSignature = methodBinding.genericSignature();", "-\t\t\t", "-\t\t\tString[] typeArgumentsSignature = null;", "-\t\t\tif(methodBinding instanceof ParameterizedGenericMethodBinding) {", "-\t\t\t\tParameterizedGenericMethodBinding genericMethodBinding = (ParameterizedGenericMethodBinding) methodBinding;", "-\t\t\t\tif(!genericMethodBinding.isRaw) {", "-\t\t\t\t\tTypeBinding[] typeArguments = genericMethodBinding.typeArguments;", "-\t\t\t\t\tint typeArgumentsCount = typeArguments.length;", "-\t\t\t\t\tfor (int i = 0; i < typeArgumentsCount; i++) {", "-\t\t\t\t\t\ttypeArgumentsSignature[i] = new String(typeArguments[i].genericTypeSignature());", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\t", "+\t\t\tchar[] uniqueKey = methodBinding.computeUniqueKey();", "-\t\t\t\t\t\tnew String(methodBinding.declaringClass.genericTypeSignature()),", "-\t\t\t\t\t\tgenericSignature == null ? null : new String(genericSignature),", "-\t\t\t\t\t\ttypeArgumentsSignature);", "+\t\t\t\t\t\tnew String(uniqueKey));", "-\t\t\t\t\t\tnew String(methodBinding.declaringClass.genericTypeSignature()),", "-\t\t\t\t\t\tgenericSignature == null ? null : new String(genericSignature),", "-\t\t\t\t\t\ttypeArgumentsSignature);", "+\t\t\t\t\t\tnew String(uniqueKey));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "870ea3ec90bab47c238fbfb5691c2cb6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/LambdaExpression.java", "commitBeforeChange": "ca289ff4e9317024e3c3a344a3b266fd883ffd1d", "commitAfterChange": "aacce274176303cc524a6360232ca1201922c452", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tpublic SourceMethod getMethod()", "signatureAfterChange": "  \tpublic IMethod getMethod()", "diff": ["-\t", "-\tpublic SourceMethod getMethod() {", "-\t\tif (this.lambdaMethod != null)", "-\t\t\treturn this.lambdaMethod;", "-\t\t", "-\t\tTypeBinding [] argv = this.lambdaExpression.argumentsTypeElided() ? this.lambdaExpression.descriptor.parameters : this.lambdaExpression.argumentTypes(); ", "-\t\tint argc = argv.length;", "-\t\tString[] parameterTypeSignatures = new String[argc];", "-\t\tfor (int i = 0; i < argc; i++) {", "-\t\t\tparameterTypeSignatures[i] = new String(argv[i].signature());", "-\t\t}", "-\t\treturn this.lambdaMethod = new SourceMethod(this, new String(this.lambdaExpression.binding.selector), parameterTypeSignatures); ", "-\t}", "+\tpublic IMethod getMethod() {", "+\t\treturn this.lambdaMethod;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8f16b0b8a41c9fb32a5c190832aece0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "a5c56b9d9a1a6a7a2412b9e4fe79595e9a454729", "commitAfterChange": "808f8a4c125739a8b2d2237ba90c04dc1390f0b7", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tprivate void selectFrom(Binding binding, CompilationUnitDeclaration parsedUnit, boolean isDeclaration)", "signatureAfterChange": "  \tprivate void selectFrom(Binding binding, CompilationUnitDeclaration parsedUnit, boolean isDeclaration)", "diff": ["-\t\t\t\tchar[] genericTypeSignature = null;", "+\t\t\t\tchar[] uniqueKey = null;", "-\t\t\t\t\tgenericTypeSignature = typeBinding.genericTypeSignature();", "+\t\t\t\t\tuniqueKey = typeBinding.computeUniqueKey();", "-\t\t\t\t\t\tgenericTypeSignature,", "+\t\t\t\t\t\tuniqueKey,", "-\t\t\t\t\t\tgenericTypeSignature,", "+\t\t\t\t\t\tuniqueKey,", "-\t\t\t\t\t\tgenericTypeSignature,", "+\t\t\t\t\t\tuniqueKey,", "-\t\t\t\t\t\tgenericTypeSignature,", "+\t\t\t\t\t\tuniqueKey,", "-\t\t\t\t\tchar[] genericDeclaringTypeSignature = null;", "-\t\t\t\t\tchar[] genericSignature = null;", "-\t\t\t\t\tchar[][] genericTypeArgumentsSignatures = null;", "+\t\t\t\t\tchar[] uniqueKey = null;", "-\t\t\t\t\t\tgenericDeclaringTypeSignature = methodBinding.declaringClass.genericTypeSignature();", "-\t\t\t\t\t\tgenericSignature = methodBinding.genericSignature();", "-\t\t\t\t\t\tif(methodBinding instanceof ParameterizedGenericMethodBinding) {", "-\t\t\t\t\t\t\tParameterizedGenericMethodBinding genericMethodBinding = (ParameterizedGenericMethodBinding) methodBinding;", "-\t\t\t\t\t\t\tif(!genericMethodBinding.isRaw) {", "-\t\t\t\t\t\t\t\tTypeBinding[] typeArguments = genericMethodBinding.typeArguments;", "-\t\t\t\t\t\t\t\tint typeArgumentsCount = typeArguments.length;", "-\t\t\t\t\t\t\t\tgenericTypeArgumentsSignatures = new char[typeArgumentsCount][];", "-\t\t\t\t\t\t\t\tfor (int i = 0; i < typeArgumentsCount; i++) {", "-\t\t\t\t\t\t\t\t\tgenericTypeArgumentsSignatures[i] = typeArguments[i].genericTypeSignature();", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "+\t\t\t\t\t\tuniqueKey = methodBinding.computeUniqueKey();", "-\t\t\t\t\t\tgenericDeclaringTypeSignature,", "-\t\t\t\t\t\tgenericSignature,", "-\t\t\t\t\t\tgenericTypeArgumentsSignatures,", "+\t\t\t\t\t\tuniqueKey,", "-\t\t\t\t\t\t\tchar[] genericDeclaringTypeSignature = null;", "-\t\t\t\t\t\t\tchar[] genericSignature = null;", "+\t\t\t\t\t\t\tchar[] uniqueKey = null;", "-\t\t\t\t\t\t\t\tgenericDeclaringTypeSignature = fieldBinding.declaringClass.genericTypeSignature();", "-\t\t\t\t\t\t\t\tgenericSignature = fieldBinding.genericSignature();", "+\t\t\t\t\t\t\t\tuniqueKey = fieldBinding.computeUniqueKey();", "-\t\t\t\t\t\t\t\tgenericDeclaringTypeSignature,", "-\t\t\t\t\t\t\t\tgenericSignature,", "+\t\t\t\t\t\t\t\tuniqueKey,"]}], "num": 53636}