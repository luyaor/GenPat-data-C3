{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5de4309ebb36589dfa56ddde4c61cabf", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26e9ace0e4a2a71a43181eb290c357de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayReference.java", "commitBeforeChange": "3e2fd4cd2c4252c2460a8283c5392ab5417ca639", "commitAfterChange": "be15fec65a1d328a8dd75354d767fc9273aeddad", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "diff": ["+\t\tif (receiver instanceof CastExpression\t// ((type[])null)[0]", "+\t\t\t\t&& ((CastExpression)receiver).innermostCastedExpression().resolvedType == NullBinding){", "+\t\t\tcodeStream.checkcast(receiver.resolvedType); ", "+\t\t}\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fc35acbc76ea0d13bed5bf03380012f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayReference.java", "commitBeforeChange": "3e2fd4cd2c4252c2460a8283c5392ab5417ca639", "commitAfterChange": "be15fec65a1d328a8dd75354d767fc9273aeddad", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void generateCompoundAssignment( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tExpression expression, \t\tint operator, \t\tint assignmentImplicitConversion, \t\tboolean valueRequired)", "signatureAfterChange": "  \tpublic void generateCompoundAssignment( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tExpression expression, \t\tint operator, \t\tint assignmentImplicitConversion, \t\tboolean valueRequired)", "diff": ["+\t\tif (receiver instanceof CastExpression\t// ((type[])null)[0]", "+\t\t\t\t&& ((CastExpression)receiver).innermostCastedExpression().resolvedType == NullBinding){", "+\t\t\tcodeStream.checkcast(receiver.resolvedType); ", "+\t\t}\t"]}], "num": 28015}