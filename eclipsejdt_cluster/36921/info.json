{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "032bfbf4de536404a7f0c37cd713d776", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a92c15f37aab1e0d034ab67610f7c207", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "e0c7ca1486f055788a44dc24293c246757983c36", "commitAfterChange": "fffe8da84c964b60e288768d8e57c80a69c56c45", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t \tprivate void acceptTypes(Scope scope)", "signatureAfterChange": " \t \tprivate void acceptTypes(Scope scope)", "diff": ["-\t\t\t\tchar[] completionName;", "+\t\t\t\tchar[] completionName = this.insideQualifiedReference ? simpleTypeName : fullyQualifiedName;", "-\t\t\t\t\t\tcompletionName = CharOperation.concat(fullyQualifiedName, new char[] { '.' });", "+\t\t\t\t\t\tcompletionName = CharOperation.concat(completionName, new char[] { '.' });", "-\t\t\t\t\t\tcompletionName = CharOperation.concat(fullyQualifiedName, new char[] { ';' });", "+\t\t\t\t\t\tcompletionName = CharOperation.concat(completionName, new char[] { ';' });", "-\t\t\t\t\tcompletionName = CharOperation.concat(fullyQualifiedName, new char[] { ';' });", "+\t\t\t\t\tcompletionName = CharOperation.concat(completionName, new char[] { ';' });", "-\t\t\t\tif(insideQualifiedReference) {", "-\t\t\t\t\trelevance += computeRelevanceForCaseMatching(this.completionToken, fullyQualifiedName);", "-\t\t\t\t} else {", "-\t\t\t\t\trelevance += computeRelevanceForCaseMatching(this.completionToken, simpleTypeName);", "-\t\t\t\t}", "+\t\t\t\trelevance += computeRelevanceForCaseMatching(this.completionToken, simpleTypeName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc1f27a6fee59c36f1f74dde1e402187", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "10f61af06f4d12e71dbad86581b20a4a2b3267b7", "commitAfterChange": "3d81f6aceb32892b9366ecb1a5a19ebad54f1ffd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic Element elementEncode( \t\tDocument document, \t\tIPath projectPath) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic Element elementEncode( \t\tDocument document, \t\tIPath projectPath) \t\tthrows JavaModelException", "diff": ["-\t\t\t// translate to project relative from absolute (unless a device path)", "-\t\t\tif (xmlPath.isAbsolute()) {", "-\t\t\t\tif (projectPath != null && projectPath.isPrefixOf(xmlPath)) {", "-\t\t\t\t\tif (xmlPath.segment(0).equals(projectPath.segment(0))) {", "-\t\t\t\t\t\txmlPath = xmlPath.removeFirstSegments(1);", "-\t\t\t\t\t\txmlPath = xmlPath.makeRelative();", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\txmlPath = xmlPath.makeAbsolute();", "-\t\t\t\t\t}", "+\t\t\t// translate to project relative from absolute ", "+\t\t\tif (this.entryKind != IClasspathEntry.CPE_VARIABLE && projectPath != null && projectPath.isPrefixOf(xmlPath)) {", "+\t\t\t\tif (xmlPath.segment(0).equals(projectPath.segment(0))) {", "+\t\t\t\t\txmlPath = xmlPath.removeFirstSegments(1);", "+\t\t\t\t\txmlPath = xmlPath.makeRelative();"]}], "num": 36921}