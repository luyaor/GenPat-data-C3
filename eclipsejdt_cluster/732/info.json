{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "10ea805342d38cd14f0afa838169d9c8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32af85989acf01b62757d84257addb5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceModelTests.java", "commitBeforeChange": "4119a65befb0f1b826133c8b40790cea36510774", "commitAfterChange": "199c84f2cae998bf19dec5ba0cb5f860d990b3fa", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void testPerfReconcileBigFileWithSyntaxError() throws JavaModelException", "signatureAfterChange": " public void testPerfReconcileBigFileWithSyntaxError() throws JavaModelException", "diff": ["-\t\tif (WARMUP_COUNT > 0) {", "-\t\t\tfor (int i=0; i<WARMUP_COUNT; i++) {", "-\t\t\t\tworkingCopy.getBuffer().setContents(bigContents.append(\"a\").toString());", "-\t\t\t\tworkingCopy.reconcile(AST.JLS3, false/*no pb detection*/, null/*no owner*/, null/*no progress*/);", "-\t\t\t}", "+\t\tint warmup = WARMUP_COUNT / 10;", "+\t\tfor (int i=0; i<warmup; i++) {", "+\t\t\tworkingCopy.getBuffer().setContents(bigContents.append(\"a\").toString());", "+\t\t\tworkingCopy.reconcile(AST.JLS3, false/*no pb detection*/, null/*no owner*/, null/*no progress*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57fd25af0dab4fe363364e7b67a4f0c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceModelTests.java", "commitBeforeChange": "4119a65befb0f1b826133c8b40790cea36510774", "commitAfterChange": "199c84f2cae998bf19dec5ba0cb5f860d990b3fa", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void testPerfSearchAllTypeNamesAndReconcile() throws CoreException", "signatureAfterChange": " public void testPerfSearchAllTypeNamesAndReconcile() throws CoreException", "diff": ["-\t\tif (WARMUP_COUNT > 0) {", "-\t\t\tfor (int i=0; i<WARMUP_COUNT; i++) {", "-\t\t\t\tsearchAllTypeNames(scope);", "-\t\t\t\tCompilationUnit unit = workingCopy.reconcile(AST.JLS3, true, null, null);", "+\t\tint warmup = WARMUP_COUNT / 5;", "+\t\tfor (int i=0; i<warmup; i++) {", "+\t\t\tsearchAllTypeNames(scope);", "+\t\t\tCompilationUnit unit = workingCopy.reconcile(AST.JLS3, true, null, null);", "+\t\t\tif (i == 0) {"]}], "num": 732}