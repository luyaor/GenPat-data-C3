{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "770da088436eb973efbbd2ef168fdf72", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36613c59bb79ed24ac92dae9d9e25e76", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate TypeDeclaration convert(ISourceType sourceType, CompilationResult compilationResult)", "signatureAfterChange": " \tprivate TypeDeclaration convert(ISourceType sourceType, CompilationResult compilationResult)", "diff": ["+\t\t/* convert type parameters */", "+\t\tchar[][] typeParameterNames = sourceType.getTypeParameterNames();", "+\t\tif (typeParameterNames != null) {", "+\t\t\tint parameterCount = typeParameterNames.length;", "+\t\t\tchar[][][] typeParameterBounds = sourceType.getTypeParameterBounds();", "+\t\t\ttype.typeParameters = new TypeParameter[parameterCount];", "+\t\t\tfor (int i = 0; i < parameterCount; i++) {", "+\t\t\t\ttype.typeParameters[i] = createTypeParameter(typeParameterNames[i], typeParameterBounds[i], start, end);", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cddf4f0ef96263b790c8d7e7ced19e5f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/HierarchyResolver.java", "commitBeforeChange": "d2d42dc68198e20f3f5cc7326a07cced2c751eb5", "commitAfterChange": "add5c6babb13b20df1267306ec710a4efca88a4d", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r public void setFocusType(char[][] compoundName)", "signatureAfterChange": "\r public void setFocusType(char[][] compoundName)", "diff": ["+\t/* All siblings of the focus type were added (since this.focusType == null).\r", "+\t   Remove the ones that are not part of the hierarchy\r", "+\t */\r", "+\tint typeIndex = this.typeIndex;\r", "+\tthis.typeIndex = -1;\r", "+\tReferenceBinding[] typeBindings = this.typeBindings;\r", "+\tthis.typeBindings = new ReferenceBinding[5];\r", "+\tIGenericType[] typeModels = this.typeModels;\r", "+\tthis.typeModels = new IGenericType[5];\r", "+\tfor (int i = 0; i <= typeIndex; i++) {\r", "+\t\tthis.remember(typeModels[i], typeBindings[i]); // will skip types not part of the hierarchy\r", "+\t}\r", "+\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7c658cbe410806487b1db49d973bd9d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "b4bd621d9d0ae940b676be9ef06c098999d70b35", "commitAfterChange": "2a2935d5ba546500d563cc08921b53e5b286cdf8", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " protected void reportMatching(FieldDeclaration field, TypeDeclaration type, IJavaElement parent, IJavaElement[] otherElements, int accuracy, boolean typeInHierarchy, MatchingNodeSet nodeSet) throws CoreException", "signatureAfterChange": " protected void reportMatching(FieldDeclaration field, FieldDeclaration[] otherFields, TypeDeclaration type, IJavaElement parent, int accuracy, boolean typeInHierarchy, MatchingNodeSet nodeSet) throws CoreException", "diff": ["-protected void reportMatching(FieldDeclaration field, TypeDeclaration type, IJavaElement parent, IJavaElement[] otherElements, int accuracy, boolean typeInHierarchy, MatchingNodeSet nodeSet) throws CoreException {", "+protected void reportMatching(FieldDeclaration field, FieldDeclaration[] otherFields, TypeDeclaration type, IJavaElement parent, int accuracy, boolean typeInHierarchy, MatchingNodeSet nodeSet) throws CoreException {", "+\t\t\t\t\t\t\tint length = otherFields== null ? 0 : otherFields.length;", "+\t\t\t\t\t\t\tIJavaElement[] otherElements = null;", "+\t\t\t\t\t\t\tif (length > 0) {", "+\t\t\t\t\t\t\t\tint size = 0;", "+\t\t\t\t\t\t\t\twhile (size<length && otherFields[size] != null) {", "+\t\t\t\t\t\t\t\t\tsize++;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\totherElements = new IJavaElement[size];", "+\t\t\t\t\t\t\t\tfor (int j=0; j<size; j++) {", "+\t\t\t\t\t\t\t\t\totherElements[j] = createHandle(otherFields[j], type, parent);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}"]}], "num": 63919}