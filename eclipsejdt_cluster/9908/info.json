{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b39feb51e3f81a3020cfcb239ceba292", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76f01cc922fe2f28208f3a234aa82efc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "1348bf3232f6ef4a567f23710b6f05d6366e90ff", "commitAfterChange": "84eba2ceb4c4828ad681b6374034160ffda08eef", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "\r \tprotected void initializeDefaultPluginPreferences()", "signatureAfterChange": "\r \tprotected void initializeDefaultPluginPreferences()", "diff": ["-\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.debug.localVariable\", \"generate\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.debug.lineNumber\", \"generate\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.debug.sourceFile\", \"generate\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.codegen.unusedLocal\", \"preserve\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.codegen.targetPlatform\", \"1.1\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.problem.unreachableCode\", \"error\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.problem.invalidImport\", \"error\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod\", \"warning\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.problem.methodWithConstructorName\", \"warning\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.problem.deprecation\", \"warning\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock\", \"warning\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.problem.unusedLocal\", \"ignore\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.problem.unusedParameter\", \"ignore\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation\", \"ignore\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral\", \"ignore\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.problem.assertIdentifier\", \"ignore\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.source\", \"1.3\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.compliance\", \"1.3\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\r", "+\t\tpreferences.setDefault(COMPILER_LOCAL_VARIABLE_ATTR, GENERATE);\r", "+\t\tpreferences.setDefault(COMPILER_LINE_NUMBER_ATTR, GENERATE); \r", "+\t\tpreferences.setDefault(COMPILER_SOURCE_FILE_ATTR, GENERATE); \r", "+\t\tpreferences.setDefault(COMPILER_CODEGEN_UNUSED_LOCAL, PRESERVE); \r", "+\t\tpreferences.setDefault(COMPILER_CODEGEN_TARGET_PLATFORM, VERSION_1_1); \r", "+\t\tpreferences.setDefault(COMPILER_PB_UNREACHABLE_CODE, ERROR); \r", "+\t\tpreferences.setDefault(COMPILER_PB_INVALID_IMPORT, ERROR); \r", "+\t\tpreferences.setDefault(COMPILER_PB_OVERRIDING_PACKAGE_DEFAULT_METHOD, WARNING); \r", "+\t\tpreferences.setDefault(COMPILER_PB_METHOD_WITH_CONSTRUCTOR_NAME, WARNING); \r", "+\t\tpreferences.setDefault(COMPILER_PB_DEPRECATION, WARNING);\r", "+\t\tpreferences.setDefault(COMPILER_PB_HIDDEN_CATCH_BLOCK, WARNING); \r", "+\t\tpreferences.setDefault(COMPILER_PB_UNUSED_LOCAL, IGNORE); \r", "+\t\tpreferences.setDefault(COMPILER_PB_UNUSED_PARAMETER, IGNORE); \r", "+\t\tpreferences.setDefault(COMPILER_PB_SYNTHETIC_ACCESS_EMULATION, IGNORE); \r", "+\t\tpreferences.setDefault(COMPILER_PB_NON_NLS_STRING_LITERAL, IGNORE); \r", "+\t\tpreferences.setDefault(COMPILER_PB_ASSERT_IDENTIFIER, IGNORE); \r", "+\t\tpreferences.setDefault(COMPILER_SOURCE, VERSION_1_3);\r", "+\t\tpreferences.setDefault(COMPILER_COMPLIANCE, VERSION_1_3); \r", "+\t\tpreferences.setDefault(COMPILER_PB_MAX_PER_UNIT, \"100\"); //$NON-NLS-1$\r", "+\t\t\r", "-\t\tpreferences.setDefault(\"org.eclipse.jdt.core.builder.resourceCopyExclusionFilter\", \"\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tpreferences.setDefault(\"org.eclipse.jdt.core.builder.invalidClasspath\", \"ignore\");  //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tpreferences.setDefault(CORE_JAVA_BUILD_RESOURCE_COPY_FILTER, \"\"); //$NON-NLS-1$\r", "+\t\tpreferences.setDefault(CORE_JAVA_BUILD_INVALID_CLASSPATH, ABORT); \r", "-\t\tpreferences.setDefault(\"org.eclipse.jdt.core.computeJavaBuildOrder\", \"ignore\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tpreferences.setDefault(CORE_JAVA_BUILD_ORDER, IGNORE); //$NON-NLS-1$\r", "-\t\tpreferences.setDefault(\"org.eclipse.jdt.core.formatter.newline.openingBrace\", \"do not insert\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tpreferences.setDefault(\"org.eclipse.jdt.core.formatter.newline.controlStatement\", \"do not insert\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tpreferences.setDefault(\"org.eclipse.jdt.core.formatter.newline.clearAll\", \"preserve one\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tpreferences.setDefault(\"org.eclipse.jdt.core.formatter.newline.elseIf\", \"do not insert\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tpreferences.setDefault(\"org.eclipse.jdt.core.formatter.newline.emptyBlock\", \"insert\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tpreferences.setDefault(\"org.eclipse.jdt.core.formatter.lineSplit\", \"80\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tpreferences.setDefault(\"org.eclipse.jdt.core.formatter.style.assignment\", \"normal\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tpreferences.setDefault(\"org.eclipse.jdt.core.formatter.tabulation.char\", \"tab\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tpreferences.setDefault(\"org.eclipse.jdt.core.formatter.tabulation.size\", \"4\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tpreferences.setDefault(FORMATTER_NEWLINE_OPENING_BRACE, DO_NOT_INSERT); \r", "+\t\tpreferences.setDefault(FORMATTER_NEWLINE_CONTROL, DO_NOT_INSERT);\r", "+\t\tpreferences.setDefault(FORMATTER_CLEAR_BLANK_LINES, PRESERVE_ONE); \r", "+\t\tpreferences.setDefault(FORMATTER_NEWLINE_ELSE_IF, DO_NOT_INSERT);\r", "+\t\tpreferences.setDefault(FORMATTER_NEWLINE_EMPTY_BLOCK, INSERT); \r", "+\t\tpreferences.setDefault(FORMATTER_LINE_SPLIT, \"80\"); //$NON-NLS-1$\r", "+\t\tpreferences.setDefault(FORMATTER_COMPACT_ASSIGNMENT, NORMAL); \r", "+\t\tpreferences.setDefault(FORMATTER_TAB_CHAR, TAB); \r", "+\t\tpreferences.setDefault(FORMATTER_TAB_SIZE, \"4\"); //$NON-NLS-1$ \r", "-\t\tpreferences.setDefault(\"org.eclipse.jdt.core.codeComplete.visibilityCheck\", \"disabled\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tpreferences.setDefault(\"org.eclipse.jdt.core.codeComplete.forceImplicitQualification\", \"disabled\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tpreferences.setDefault(CODEASSIST_VISIBILITY_CHECK, DISABLED); //$NON-NLS-1$\r", "+\t\tpreferences.setDefault(CODEASSIST_IMPLICIT_QUALIFICATION, DISABLED); //$NON-NLS-1$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb4226801088d9647082baccf4174b47", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "0ae44cb94fd5970ee99a6625f01c4e21cfef9943", "commitAfterChange": "7d0759aa475ed30414afbcf0da4d76dd1b16cba1", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 25, "signatureBeforeChange": "\r  \tpublic static Hashtable getDefaultOptions()", "signatureAfterChange": "\r \tprotected void initializeDefaultPluginPreferences()", "diff": ["+\t */\r", "+\tprotected void initializeDefaultPluginPreferences() {\r", "+\t\t\r", "+\t\tPreferences preferences = getPluginPreferences();\r", "+\t\r", "+\t\t// Compiler settings\r", "+\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.debug.localVariable\", \"generate\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.debug.lineNumber\", \"generate\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.debug.sourceFile\", \"generate\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.codegen.unusedLocal\", \"preserve\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.codegen.targetPlatform\", \"1.1\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.problem.unreachableCode\", \"error\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.problem.invalidImport\", \"error\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod\", \"warning\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.problem.methodWithConstructorName\", \"warning\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.problem.deprecation\", \"warning\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock\", \"warning\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.problem.unusedLocal\", \"ignore\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.problem.unusedParameter\", \"ignore\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation\", \"ignore\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral\", \"ignore\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.problem.assertIdentifier\", \"ignore\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.source\", \"1.3\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tpreferences.setDefault(\"org.eclipse.jdt.core.compiler.compliance\", \"1.3\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\r", "+\t\t// Builder settings\r", "+\t\tpreferences.setDefault(\"org.eclipse.jdt.core.builder.resourceCopyExclusionFilter\", \"\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tpreferences.setDefault(\"org.eclipse.jdt.core.builder.invalidClasspath\", \"ignore\");  //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\t\r", "+\t\t// JavaCore settings\r", "+\t\tpreferences.setDefault(\"org.eclipse.jdt.core.computeJavaBuildOrder\", \"ignore\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\r", "+\t\t// Formatter settings\r", "+\t\tpreferences.setDefault(\"org.eclipse.jdt.core.formatter.newline.openingBrace\", \"do not insert\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tpreferences.setDefault(\"org.eclipse.jdt.core.formatter.newline.controlStatement\", \"do not insert\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tpreferences.setDefault(\"org.eclipse.jdt.core.formatter.newline.clearAll\", \"preserve one\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tpreferences.setDefault(\"org.eclipse.jdt.core.formatter.newline.elseIf\", \"do not insert\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tpreferences.setDefault(\"org.eclipse.jdt.core.formatter.newline.emptyBlock\", \"insert\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tpreferences.setDefault(\"org.eclipse.jdt.core.formatter.lineSplit\", \"80\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tpreferences.setDefault(\"org.eclipse.jdt.core.formatter.style.assignment\", \"normal\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tpreferences.setDefault(\"org.eclipse.jdt.core.formatter.tabulation.char\", \"tab\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tpreferences.setDefault(\"org.eclipse.jdt.core.formatter.tabulation.size\", \"4\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\t\r", "+\t\t// CodeAssist settings\r", "+\t\tpreferences.setDefault(\"org.eclipse.jdt.core.codeComplete.visibilityCheck\", \"disabled\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tpreferences.setDefault(\"org.eclipse.jdt.core.codeComplete.forceImplicitQualification\", \"disabled\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t}\r", "-\t */\r", "- \tpublic static Hashtable getDefaultOptions(){\r", "-\t\r", "-\t\tHashtable defaultOptions = new Hashtable(10);\r", "-\t\r", "-\t\t// Compiler settings\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.compiler.debug.localVariable\", \"generate\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.compiler.debug.lineNumber\", \"generate\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.compiler.debug.sourceFile\", \"generate\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.compiler.codegen.unusedLocal\", \"preserve\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.compiler.codegen.targetPlatform\", \"1.1\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.compiler.problem.unreachableCode\", \"error\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.compiler.problem.invalidImport\", \"error\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod\", \"warning\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.compiler.problem.methodWithConstructorName\", \"warning\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.compiler.problem.deprecation\", \"warning\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock\", \"warning\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.compiler.problem.unusedLocal\", \"ignore\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.compiler.problem.unusedParameter\", \"ignore\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation\", \"ignore\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral\", \"ignore\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.compiler.problem.assertIdentifier\", \"ignore\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.compiler.source\", \"1.3\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.compiler.compliance\", \"1.3\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\r", "-\t\t// Builder settings\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.builder.resourceCopyExclusionFilter\", \"\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.builder.invalidClasspath\", \"ignore\");  //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\t\r", "-\t\t// JavaCore settings\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.computeJavaBuildOrder\", \"ignore\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.encoding\", \"\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\r", "-\t\t// Formatter settings\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.formatter.newline.openingBrace\", \"do not insert\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.formatter.newline.controlStatement\", \"do not insert\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.formatter.newline.clearAll\", \"preserve one\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.formatter.newline.elseIf\", \"do not insert\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.formatter.newline.emptyBlock\", \"insert\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.formatter.lineSplit\", \"80\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.formatter.style.assignment\", \"normal\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.formatter.tabulation.char\", \"tab\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.formatter.tabulation.size\", \"4\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\t\r", "-\t\t// CodeAssist settings\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.codeComplete.visibilityCheck\", \"disabled\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\tdefaultOptions.put(\"org.eclipse.jdt.core.codeComplete.forceImplicitQualification\", \"disabled\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\t\r", "-\t\treturn defaultOptions;\r", "-\t}\r"]}], "num": 9908}