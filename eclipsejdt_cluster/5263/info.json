{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d1e3dca66f0f5315b1f87f4ad7bc18d8", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a2d3ad387e3781ee141a95e6ef3445e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SearchableEnvironment.java", "commitBeforeChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "commitAfterChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r \t\t\t\tpublic void acceptInterface(\r \t\t\t\t\tchar[] packageName,\r \t\t\t\t\tchar[] simpleTypeName,\r \t\t\t\t\tchar[][] enclosingTypeNames,\r \t\t\t\t\tString path)", "signatureAfterChange": "\r \t\t\tpublic void acceptInterface(char[] packageName, char[] simpleTypeName, char[][] enclosingTypeNames, String path)", "diff": ["-\t\t\t\t}\r", "-\t\t\t\tpublic void acceptInterface(\r", "-\t\t\t\t\tchar[] packageName,\r", "-\t\t\t\t\tchar[] simpleTypeName,\r", "-\t\t\t\t\tchar[][] enclosingTypeNames,\r", "-\t\t\t\t\tString path) {\r", "-\t\t\t\t\tif (excludePath != null && excludePath.equals(path))\r", "-\t\t\t\t\t\treturn;\r", "-\t\t\t\t\tif (enclosingTypeNames != null && enclosingTypeNames.length > 0)\r", "-\t\t\t\t\t\treturn; // accept only top level types\r", "-\t\t\t\t\tstorage.acceptInterface(packageName, simpleTypeName, IConstants.AccPublic);\r", "-\t\t\t\t}\r", "+\t\t\tpublic void acceptInterface(char[] packageName, char[] simpleTypeName, char[][] enclosingTypeNames, String path){\r", "+\t\t\t\tif (excludePath != null && excludePath.equals(path)) return;\t\r", "+\t\t\t\tif (enclosingTypeNames != null && enclosingTypeNames.length > 0) return; // accept only top level types\r", "+\t\t\t\tstorage.acceptInterface(packageName, simpleTypeName, 0);\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "942500f59cf8d2414a6adf647876d8be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SearchableEnvironment.java", "commitBeforeChange": "a1b8b888d8c8c040023fcd2856f96f5ad6c69b3e", "commitAfterChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r \t\t\t\tpublic void acceptInterface(\r \t\t\t\t\tchar[] packageName,\r \t\t\t\t\tchar[] simpleTypeName,\r \t\t\t\t\tchar[][] enclosingTypeNames,\r \t\t\t\t\tString path)", "signatureAfterChange": "\r \t\t\tpublic void acceptInterface(char[] packageName, char[] simpleTypeName, char[][] enclosingTypeNames, String path)", "diff": ["-\t\t\t\t}\r", "-\t\t\t\tpublic void acceptInterface(\r", "-\t\t\t\t\tchar[] packageName,\r", "-\t\t\t\t\tchar[] simpleTypeName,\r", "-\t\t\t\t\tchar[][] enclosingTypeNames,\r", "-\t\t\t\t\tString path) {\r", "-\t\t\t\t\tif (excludePath != null && excludePath.equals(path))\r", "-\t\t\t\t\t\treturn;\r", "-\t\t\t\t\tif (enclosingTypeNames != null && enclosingTypeNames.length > 0)\r", "-\t\t\t\t\t\treturn; // accept only top level types\r", "-\t\t\t\t\tstorage.acceptInterface(packageName, simpleTypeName, IConstants.AccPublic);\r", "-\t\t\t\t}\r", "+\t\t\tpublic void acceptInterface(char[] packageName, char[] simpleTypeName, char[][] enclosingTypeNames, String path){\r", "+\t\t\t\tif (excludePath != null && excludePath.equals(path)) return;\t\r", "+\t\t\t\tif (enclosingTypeNames != null && enclosingTypeNames.length > 0) return; // accept only top level types\r", "+\t\t\t\tstorage.acceptInterface(packageName, simpleTypeName, 0);\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4c9cc9d388918d7e4527c44855dd31e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SearchableEnvironment.java", "commitBeforeChange": "7e5cc03e445550d3cbc10c611218c79332074276", "commitAfterChange": "c57706d05dc3654769cca2053ff9cb20fb0a6664", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r \t\t\t\tpublic void acceptInterface(\r \t\t\t\t\tchar[] packageName,\r \t\t\t\t\tchar[] simpleTypeName,\r \t\t\t\t\tchar[][] enclosingTypeNames,\r \t\t\t\t\tString path)", "signatureAfterChange": "\r \t\t\tpublic void acceptInterface(char[] packageName, char[] simpleTypeName, char[][] enclosingTypeNames, String path)", "diff": ["-\t\t\t\t}\r", "-\t\t\t\tpublic void acceptInterface(\r", "-\t\t\t\t\tchar[] packageName,\r", "-\t\t\t\t\tchar[] simpleTypeName,\r", "-\t\t\t\t\tchar[][] enclosingTypeNames,\r", "-\t\t\t\t\tString path) {\r", "-\t\t\t\t\tif (excludePath != null && excludePath.equals(path))\r", "-\t\t\t\t\t\treturn;\r", "-\t\t\t\t\tif (enclosingTypeNames != null && enclosingTypeNames.length > 0)\r", "-\t\t\t\t\t\treturn; // accept only top level types\r", "-\t\t\t\t\tstorage.acceptInterface(packageName, simpleTypeName, IConstants.AccPublic);\r", "-\t\t\t\t}\r", "+\t\t\tpublic void acceptInterface(char[] packageName, char[] simpleTypeName, char[][] enclosingTypeNames, String path){\r", "+\t\t\t\tif (excludePath != null && excludePath.equals(path)) return;\t\r", "+\t\t\t\tif (enclosingTypeNames != null && enclosingTypeNames.length > 0) return; // accept only top level types\r", "+\t\t\t\tstorage.acceptInterface(packageName, simpleTypeName, 0);\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dab4e77872ac4d3b962f3210c1002a1b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SearchableEnvironment.java", "commitBeforeChange": "46418d248f89a29f49a77d154cdbfa57c408b256", "commitAfterChange": "c85433e27f0fa74bfe8e06c38c1c02c51b5599d7", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r \t\t\t\tpublic void acceptInterface(\r \t\t\t\t\tchar[] packageName,\r \t\t\t\t\tchar[] simpleTypeName,\r \t\t\t\t\tchar[][] enclosingTypeNames,\r \t\t\t\t\tString path)", "signatureAfterChange": "\r \t\t\tpublic void acceptInterface(char[] packageName, char[] simpleTypeName, char[][] enclosingTypeNames, String path)", "diff": ["-\t\t\t\t}\r", "-\t\t\t\tpublic void acceptInterface(\r", "-\t\t\t\t\tchar[] packageName,\r", "-\t\t\t\t\tchar[] simpleTypeName,\r", "-\t\t\t\t\tchar[][] enclosingTypeNames,\r", "-\t\t\t\t\tString path) {\r", "-\t\t\t\t\tif (excludePath != null && excludePath.equals(path))\r", "-\t\t\t\t\t\treturn;\r", "-\t\t\t\t\tif (enclosingTypeNames != null && enclosingTypeNames.length > 0)\r", "-\t\t\t\t\t\treturn; // accept only top level types\r", "-\t\t\t\t\tstorage.acceptInterface(packageName, simpleTypeName, IConstants.AccPublic);\r", "-\t\t\t\t}\r", "+\t\t\tpublic void acceptInterface(char[] packageName, char[] simpleTypeName, char[][] enclosingTypeNames, String path){\r", "+\t\t\t\tif (excludePath != null && excludePath.equals(path)) return;\t\r", "+\t\t\t\tif (enclosingTypeNames != null && enclosingTypeNames.length > 0) return; // accept only top level types\r", "+\t\t\t\tstorage.acceptInterface(packageName, simpleTypeName, 0);\r", "+\t\t\t}\r"]}], "num": 5263}