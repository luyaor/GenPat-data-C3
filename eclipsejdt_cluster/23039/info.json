{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f7caeb2eea9eedfffd129c22f3fef12", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dc81e57e6ffeab81dd9535b1ff5bf46", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "6672145af9f0ffc7b3a43bbf4b4faa8f14d04d8b", "commitAfterChange": "5ae7e6b78bc18a365a04a008c907250a535fa48a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 13, "signatureBeforeChange": " IJavaSearchScope getJavaSearchPackageScope(String packageName) throws JavaModelException", "signatureAfterChange": " IJavaSearchScope getJavaSearchScope15(String packageName, boolean addSubpackages) throws JavaModelException", "diff": ["+IJavaSearchScope getJavaSearchScope15(String packageName, boolean addSubpackages) throws JavaModelException {", "+\tif (packageName == null) return getJavaSearchScope15();", "+\treturn getJavaSearchPackageScope(\"JavaSearch15\", packageName, addSubpackages);", "+}", "-IJavaSearchScope getJavaSearchPackageScope(String packageName) throws JavaModelException {", "-\treturn getJavaSearchPackageScope(packageName, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c7ec546486498c5f33e7a6aedc5a6cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBinding.java", "commitBeforeChange": "f41df9b6ac9b62f616470e8ec0968732d823137f", "commitAfterChange": "2f379667b4f33f336f0003d6b2911b5403125b74", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public boolean isProvablyDistinctFrom(TypeBinding otherType)", "signatureAfterChange": " public boolean isProvablyDistinctFrom(TypeBinding otherType, int depth)", "diff": ["-public boolean isProvablyDistinctFrom(TypeBinding otherType) {", "+public boolean isProvablyDistinctFrom(TypeBinding otherType, int depth) {", "+\tif (depth > 1) return true;", "-\t\t\tif (parameterizedType.type.isProvablyDistinctFrom(otherType.erasure())) return true;", "+\t\t\tif (parameterizedType.type.isProvablyDistinctFrom(otherType.erasure(), depth)) return true;", "-\t\t\t\t\tTypeBinding[] otherArguments = otherParameterizedType. arguments;", "+\t\t\t\t\tTypeBinding[] otherArguments = otherParameterizedType.arguments;", "-\t\t\t\t\t\tif (arguments[i].isProvablyDistinctFrom(otherArguments[i])) return true;", "+\t\t\t\t\t\tif (arguments[i].isProvablyDistinctFrom(otherArguments[i], depth+1)) return true;", "-\t\t\treturn this.erasure().isProvablyDistinctFrom(otherType.erasure());", "+\t\t\treturn this.erasure().isProvablyDistinctFrom(otherType.erasure(), 0);"]}], "num": 23039}