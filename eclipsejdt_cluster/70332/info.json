{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dec66587c01dfb04fad10efae13fe10d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23bfb628ba9470a87d9170c68cc9f4a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "3dca78ae937ad139f018c4ddaaa87c3fe26600ed", "commitAfterChange": "10a59ab8fb6256e59e155c071a356402964eb736", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tpublic boolean isCompatibleWith(final TypeBinding left, final Scope someScope)", "signatureAfterChange": " \t\t \tpublic boolean isCompatibleWith(final TypeBinding left, final Scope someScope)", "diff": ["-\t", "-\t\tthis.hasIgnoredMandatoryErrors = false;", "-\t\t\t\tboolean lambdaIsFubar = this.hasIgnoredMandatoryErrors; // capture now, before doesNotCompleteNormally which runs analyzeCode on lambda body *without* the enclosing context being analyzed ", "-\t\t\t\tif (squarePegInRoundHole(sam) || lambdaIsFubar)", "+\t\t\t\tif (squarePegInRoundHole(sam))", "-\t\t} catch (IncongruentLambdaException e) {", "-\t\t\treturn false;", "-\t\t\tthis.hasIgnoredMandatoryErrors = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e25d2fbea28d686e154892af09a4ba1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "6cd0099c2021e34815eaba987a586ae52dacf569", "commitAfterChange": "d6dc74869d8c303dbb7a6d8b327d8b104cd5865b", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " \t \tpublic void tagAsHavingIgnoredMandatoryErrors(int problemId)", "signatureAfterChange": " \t \tpublic void tagAsHavingIgnoredMandatoryErrors(int problemId)", "diff": ["-\t\t\t\tthis.original.hasIgnoredMandatoryErrors = true;", "+\t\t\t\tthis.hasIgnoredMandatoryErrors = true;", "-\t\t\t\t\tif (enclosingLambda.original != enclosingLambda)", "-\t\t\t\t\t\tenclosingLambda.original.hasIgnoredMandatoryErrors = true;", "+\t\t\t\t\tenclosingLambda.hasIgnoredMandatoryErrors = true;"]}], "num": 70332}