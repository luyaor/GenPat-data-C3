{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5dfceddb7def31673ba17cd476f7bf53", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30338bc0bd78966241a939da93c062d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/DefaultJavaElementComparator.java", "commitBeforeChange": "d9f5208ccd9842b7305a76e615fa0b04487a1a33", "commitAfterChange": "9ac3d3205dd69d72df25a75c1584224d5519622d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate int getCategory(BodyDeclaration node)", "signatureAfterChange": " \tprivate int getCategory(BodyDeclaration node)", "diff": ["+\t\t\tcase ASTNode.ANNOTATION_TYPE_MEMBER_DECLARATION :", "+\t\t\t\tif (Flags.isStatic(node.getModifiers())) {", "+\t\t\t\t\treturn this.categories[STATIC_METHOD_CATEGORY];", "+\t\t\t\t}", "+\t\t\t\treturn this.categories[METHOD_CATEGORY];", "+\t\t\tcase ASTNode.ENUM_CONSTANT_DECLARATION :", "+\t\t\t\treturn this.categories[STATIC_FIELD_CATEGORY];", "-\t\t\t\tTypeDeclaration typeDeclaration = (TypeDeclaration) node;", "-\t\t\t\tif (Flags.isStatic(typeDeclaration.getModifiers())) {", "+\t\t\tcase ASTNode.ENUM_DECLARATION :", "+\t\t\tcase ASTNode.ANNOTATION_TYPE_DECLARATION :", "+\t\t\t\tAbstractTypeDeclaration abstractTypeDeclaration = (AbstractTypeDeclaration) node;", "+\t\t\t\tif (Flags.isStatic(abstractTypeDeclaration.getModifiers())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77382b1b79b1820eb910d96587bef12f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/DefaultJavaElementComparator.java", "commitBeforeChange": "d9f5208ccd9842b7305a76e615fa0b04487a1a33", "commitAfterChange": "9ac3d3205dd69d72df25a75c1584224d5519622d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprivate String buildSignature(BodyDeclaration node)", "signatureAfterChange": "  \tprivate String buildSignature(BodyDeclaration node)", "diff": ["-\t\t\t\treturn buffer.toString();", "+\t\t\t\treturn String.valueOf(buffer);", "+\t\t\tcase ASTNode.ANNOTATION_TYPE_MEMBER_DECLARATION :", "+\t\t\t\tAnnotationTypeMemberDeclaration annotationTypeMemberDeclaration = (AnnotationTypeMemberDeclaration) node;", "+\t\t\t\treturn annotationTypeMemberDeclaration.getName().getIdentifier();", "+\t\t\tcase ASTNode.ENUM_CONSTANT_DECLARATION :", "+\t\t\t\tEnumConstantDeclaration enumConstantDeclaration = (EnumConstantDeclaration) node;", "+\t\t\t\treturn enumConstantDeclaration.getName().getIdentifier();", "-\t\t\t\tTypeDeclaration typeDeclaration = (TypeDeclaration) node;", "-\t\t\t\treturn typeDeclaration.getName().getIdentifier();", "+\t\t\tcase ASTNode.ENUM_DECLARATION :", "+\t\t\tcase ASTNode.ANNOTATION_TYPE_DECLARATION :", "+\t\t\t\tAbstractTypeDeclaration abstractTypeDeclaration = (AbstractTypeDeclaration) node;", "+\t\t\t\treturn abstractTypeDeclaration.getName().getIdentifier();"]}], "num": 27097}