{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c57c7e8dec302abd39de3fec25b2b945", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5184d2a09eb59dd3ef1dc19007eaa51f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "5da70e8fd8ca541611254bd2bde6b6ab6bb07e90", "commitAfterChange": "ce7bef49e9ed96b08f61ac987775cd5b5704ee11", "methodNumberBeforeChange": 269, "methodNumberAfterChange": 269, "signatureBeforeChange": " public void _test122()", "signatureAfterChange": " public void _test122()", "diff": ["-\t\t// should complain that X does not implement I#foo", "-\t\t\"1. ERROR ...\\n\" + ", "-\t\t\"----------\\n\"", "-\t);", "+\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\"\tpublic class X implements I {\\n\" + ", "+\t\t\"\t             ^\\n\" + ", "+\t\t\"The type X must implement the inherited abstract method I.foo(Integer, Y<String>, Y<String>)\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\"\tpublic void foo(Integer i, Y<String> l1, Y l2) {\\n\" + ", "+\t\t\"\t            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Name clash: The method foo(Integer, Y<String>, Y) of type X has the same erasure as foo(Integer, Y<String>, Y<String>) of type I but does not override it\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\"\tpublic void foo(Integer i, Y<String> l1, Y l2) {\\n\" + ", "+\t\t\"\t                                         ^\\n\" + ", "+\t\t\"Y is a raw type. References to generic type Y<T> should be parameterized\\n\" + ", "+\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff3667bc6eab2e7069dbc0c30c9d56b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "b89ad18e17834e64930a830c92b5e2241f9a8b44", "commitAfterChange": "d9605208e25375e966739effbd053a969138c830", "methodNumberBeforeChange": 155, "methodNumberAfterChange": 155, "signatureBeforeChange": " \tpublic void test048e()", "signatureAfterChange": " \tpublic void test048e()", "diff": ["+\t\tString expectedCompilerLog = (this.complianceLevel == ClassFileConstants.JDK1_6)?", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. WARNING in X6.java (at line 2)\\n\" + ", "+\t\t\t\t\"\tpublic void foo(I<String> z) {}\\n\" + ", "+\t\t\t\t\"\t            ^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Name clash: The method foo(I<String>) of type X6 has the same erasure as foo(I<? extends T>) of type Y<T> but does not override it\\n\" + ", "+\t\t\t\t\"----------\\n\":", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"1. ERROR in X6.java (at line 2)\\n\" + ", "+\t\t\t\t\t\"\tpublic void foo(I<String> z) {}\\n\" + ", "+\t\t\t\t\t\"\t            ^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\t\"Name clash: The method foo(I<String>) of type X6 has the same erasure as foo(I<? extends T>) of type Y<T> but does not override it\\n\" + ", "+\t\t\t\t\t\"----------\\n\";", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X6.java (at line 2)\\n\" + ", "-\t\t\t\"\tpublic void foo(I<String> z) {}\\n\" + ", "-\t\t\t\"\t            ^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Name clash: The method foo(I<String>) of type X6 has the same erasure as foo(I<? extends T>) of type Y<T> but does not override it\\n\" + ", "-\t\t\t\"----------\\n\"", "+\t\t\texpectedCompilerLog"]}], "num": 26173}