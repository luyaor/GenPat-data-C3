{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ad2f50c7e5c3273130a82eede9b80a36", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19102ffe2287bec588b32c6688ac5ab1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "a11ec54f2e1e149e77b968382e79f482cc29add9", "commitAfterChange": "831d96bc5763622ed503192c35bfd6688abedd96", "methodNumberBeforeChange": 271, "methodNumberAfterChange": 292, "signatureBeforeChange": " protected void consumeRule(int act)", "signatureAfterChange": " protected void consumeRule(int act)", "diff": ["-    case 30 : if (DEBUG) { System.out.println(\"Type ::= PrimitiveType\"); }  //$NON-NLS-1$", "+    case 32 : if (DEBUG) { System.out.println(\"Type ::= TypeInternal\"); }  //$NON-NLS-1$", "+\t\t    consumeUnannotatedType();   ", "+\t\t\tbreak;", "+ ", "+    case 34 : if (DEBUG) { System.out.println(\"Type0 ::= TypeInternal\"); }  //$NON-NLS-1$", "+\t\t    consumeUnannotatedType();   ", "+\t\t\tbreak;", "+ ", "+    case 35 : if (DEBUG) { System.out.println(\"TypeInternal ::= PrimitiveType\"); }  //$NON-NLS-1$", "-    case 44 : if (DEBUG) { System.out.println(\"ReferenceType ::= ClassOrInterfaceType\"); }  //$NON-NLS-1$", "-\t\t    consumeReferenceType();  ", "+    case 49 : if (DEBUG) { System.out.println(\"ReferenceType ::= ReferenceType0\"); }  //$NON-NLS-1$", "+\t\t    consumeUnannotatedType();   ", "-    case 48 : if (DEBUG) { System.out.println(\"ClassOrInterface ::= Name\"); }  //$NON-NLS-1$", "-\t\t    consumeClassOrInterfaceName();  ", "+    case 50 : if (DEBUG) { System.out.println(\"ReferenceType ::= Modifiers ReferenceType0\"); }  //$NON-NLS-1$", "+\t\t    consumeAnnotatedType();   ", "-    case 49 : if (DEBUG) { System.out.println(\"ClassOrInterface ::= GenericType DOT Name\"); }  //$NON-NLS-1$", "-\t\t    consumeClassOrInterface();  ", "+    case 51 : if (DEBUG) { System.out.println(\"ReferenceType0 ::= ClassOrInterfaceType0\"); }  //$NON-NLS-1$", "+\t\t    consumeReferenceType();   ", "-    case 50 : if (DEBUG) { System.out.println(\"GenericType ::= ClassOrInterface TypeArguments\"); }  //$NON-NLS-1$", "-\t\t    consumeGenericType();  ", "+    case 53 : if (DEBUG) { System.out.println(\"Annotationsopt ::=\"); }  //$NON-NLS-1$", "+\t\t    consumeZeroTypeAnnotations(true);  ", "-    case 51 : if (DEBUG) { System.out.println(\"GenericType ::= ClassOrInterface LESS GREATER\"); }  //$NON-NLS-1$", "+    case 58 : if (DEBUG) { System.out.println(\"ClassOrInterface ::= ClassOrInterface0\"); }  //$NON-NLS-1$", "+\t\t    consumeZeroTypeAnnotations(true);  ", "+\t\t\tbreak;", "+ ", "+    case 59 : if (DEBUG) { System.out.println(\"ClassOrInterface0 ::= Name\"); }  //$NON-NLS-1$", "+\t\t    consumeClassOrInterfaceName();   ", "+\t\t\tbreak;", "+ ", "+    case 61 : if (DEBUG) { System.out.println(\"PopZeroTypeAnnotations ::=\"); }  //$NON-NLS-1$", "+\t\t    consumeZeroTypeAnnotations(false);  ", "+\t\t\tbreak;", "+ ", "+    case 62 : if (DEBUG) { System.out.println(\"GenericType ::= ClassOrInterface TypeArguments...\"); }  //$NON-NLS-1$", "+\t\t    consumeGenericType();   ", "+\t\t\tbreak;", "+ ", "+    case 63 : if (DEBUG) { System.out.println(\"GenericTypeDotName ::= GenericType DOT Name\"); }  //$NON-NLS-1$", "+\t\t    consumeClassOrInterface();   ", "+\t\t\tbreak;", "+ ", "+    case 64 : if (DEBUG) { System.out.println(\"GenericType ::= ClassOrInterface LESS GREATER\"); }  //$NON-NLS-1$", "-    case 52 : if (DEBUG) { System.out.println(\"ArrayTypeWithTypeArgumentsName ::= GenericType DOT Name\"); }  //$NON-NLS-1$", "-\t\t    consumeArrayTypeWithTypeArgumentsName();  ", "-\t\t\tbreak;", "- ", "-    case 53 : if (DEBUG) { System.out.println(\"ArrayType ::= PrimitiveType Dims\"); }  //$NON-NLS-1$", "+    case 66 : if (DEBUG) { System.out.println(\"ArrayType ::= PrimitiveType Dims\"); }  //$NON-NLS-1$", "-    case 54 : if (DEBUG) { System.out.println(\"ArrayType ::= Name Dims\"); }  //$NON-NLS-1$", "+    case 67 : if (DEBUG) { System.out.println(\"ArrayType ::= Name Dims\"); }  //$NON-NLS-1$", "-    case 55 : if (DEBUG) { System.out.println(\"ArrayType ::= ArrayTypeWithTypeArgumentsName Dims\"); }  //$NON-NLS-1$", "+    case 68 : if (DEBUG) { System.out.println(\"ArrayType ::= ArrayTypeWithTypeArgumentsName Dims\"); }  //$NON-NLS-1$", "-    case 56 : if (DEBUG) { System.out.println(\"ArrayType ::= GenericType Dims\"); }  //$NON-NLS-1$", "+    case 69 : if (DEBUG) { System.out.println(\"ArrayType ::= GenericType Dims\"); }  //$NON-NLS-1$", "-    case 61 : if (DEBUG) { System.out.println(\"QualifiedName ::= Name DOT SimpleName\"); }  //$NON-NLS-1$", "+    case 74 : if (DEBUG) { System.out.println(\"QualifiedName ::= Name DOT SimpleName\"); }  //$NON-NLS-1$", "-    case 62 : if (DEBUG) { System.out.println(\"CompilationUnit ::= EnterCompilationUnit...\"); }  //$NON-NLS-1$", "+    case 75 : if (DEBUG) { System.out.println(\"CompilationUnit ::= EnterCompilationUnit...\"); }  //$NON-NLS-1$", "-    case 63 : if (DEBUG) { System.out.println(\"InternalCompilationUnit ::= PackageDeclaration\"); }  //$NON-NLS-1$", "+    case 76 : if (DEBUG) { System.out.println(\"InternalCompilationUnit ::= PackageDeclaration\"); }  //$NON-NLS-1$", "-    case 64 : if (DEBUG) { System.out.println(\"InternalCompilationUnit ::= PackageDeclaration...\"); }  //$NON-NLS-1$", "+    case 77 : if (DEBUG) { System.out.println(\"InternalCompilationUnit ::= PackageDeclaration...\"); }  //$NON-NLS-1$", "-    case 65 : if (DEBUG) { System.out.println(\"InternalCompilationUnit ::= PackageDeclaration...\"); }  //$NON-NLS-1$", "+    case 78 : if (DEBUG) { System.out.println(\"InternalCompilationUnit ::= PackageDeclaration...\"); }  //$NON-NLS-1$", "-    case 66 : if (DEBUG) { System.out.println(\"InternalCompilationUnit ::= PackageDeclaration...\"); }  //$NON-NLS-1$", "+    case 79 : if (DEBUG) { System.out.println(\"InternalCompilationUnit ::= PackageDeclaration...\"); }  //$NON-NLS-1$", "-    case 67 : if (DEBUG) { System.out.println(\"InternalCompilationUnit ::= ImportDeclarations...\"); }  //$NON-NLS-1$", "+    case 80 : if (DEBUG) { System.out.println(\"InternalCompilationUnit ::= ImportDeclarations...\"); }  //$NON-NLS-1$", "-    case 68 : if (DEBUG) { System.out.println(\"InternalCompilationUnit ::= TypeDeclarations\"); }  //$NON-NLS-1$", "+    case 81 : if (DEBUG) { System.out.println(\"InternalCompilationUnit ::= TypeDeclarations\"); }  //$NON-NLS-1$", "-    case 69 : if (DEBUG) { System.out.println(\"InternalCompilationUnit ::= ImportDeclarations...\"); }  //$NON-NLS-1$", "+    case 82 : if (DEBUG) { System.out.println(\"InternalCompilationUnit ::= ImportDeclarations...\"); }  //$NON-NLS-1$", "-    case 70 : if (DEBUG) { System.out.println(\"InternalCompilationUnit ::=\"); }  //$NON-NLS-1$", "+    case 83 : if (DEBUG) { System.out.println(\"InternalCompilationUnit ::=\"); }  //$NON-NLS-1$", "-    case 71 : if (DEBUG) { System.out.println(\"ReduceImports ::=\"); }  //$NON-NLS-1$", "+    case 84 : if (DEBUG) { System.out.println(\"ReduceImports ::=\"); }  //$NON-NLS-1$", "-    case 72 : if (DEBUG) { System.out.println(\"EnterCompilationUnit ::=\"); }  //$NON-NLS-1$", "+    case 85 : if (DEBUG) { System.out.println(\"EnterCompilationUnit ::=\"); }  //$NON-NLS-1$", "-    case 88 : if (DEBUG) { System.out.println(\"CatchHeader ::= catch LPAREN CatchFormalParameter RPAREN\"); }  //$NON-NLS-1$", "+    case 104 : if (DEBUG) { System.out.println(\"CatchHeader ::= catch LPAREN CatchFormalParameter RPAREN\"); }  //$NON-NLS-1$", "-    case 90 : if (DEBUG) { System.out.println(\"ImportDeclarations ::= ImportDeclarations...\"); }  //$NON-NLS-1$", "+    case 106 : if (DEBUG) { System.out.println(\"ImportDeclarations ::= ImportDeclarations...\"); }  //$NON-NLS-1$", "-    case 92 : if (DEBUG) { System.out.println(\"TypeDeclarations ::= TypeDeclarations TypeDeclaration\"); }  //$NON-NLS-1$", "+    case 108 : if (DEBUG) { System.out.println(\"TypeDeclarations ::= TypeDeclarations TypeDeclaration\"); }  //$NON-NLS-1$", "-    case 93 : if (DEBUG) { System.out.println(\"PackageDeclaration ::= PackageDeclarationName SEMICOLON\"); }  //$NON-NLS-1$", "+    case 109 : if (DEBUG) { System.out.println(\"PackageDeclaration ::= PackageDeclarationName SEMICOLON\"); }  //$NON-NLS-1$", "-    case 94 : if (DEBUG) { System.out.println(\"PackageDeclarationName ::= Modifiers package...\"); }  //$NON-NLS-1$", "+    case 110 : if (DEBUG) { System.out.println(\"PackageDeclarationName ::= Modifiers package...\"); }  //$NON-NLS-1$", "-    case 95 : if (DEBUG) { System.out.println(\"PackageDeclarationName ::= PackageComment package Name\"); }  //$NON-NLS-1$", "-\t\t    consumePackageDeclarationName();  ", "+    case 111 : if (DEBUG) { System.out.println(\"PackageDeclarationName ::= PackageComment package Name\"); }  //$NON-NLS-1$", "+\t\t     consumePackageDeclarationName();  ", "-    case 96 : if (DEBUG) { System.out.println(\"PackageComment ::=\"); }  //$NON-NLS-1$", "+    case 112 : if (DEBUG) { System.out.println(\"PackageComment ::=\"); }  //$NON-NLS-1$", "-    case 101 : if (DEBUG) { System.out.println(\"SingleTypeImportDeclaration ::=...\"); }  //$NON-NLS-1$", "+    case 117 : if (DEBUG) { System.out.println(\"SingleTypeImportDeclaration ::=...\"); }  //$NON-NLS-1$", "-    case 102 : if (DEBUG) { System.out.println(\"SingleTypeImportDeclarationName ::= import Name\"); }  //$NON-NLS-1$", "+    case 118 : if (DEBUG) { System.out.println(\"SingleTypeImportDeclarationName ::= import Name\"); }  //$NON-NLS-1$", "-    case 103 : if (DEBUG) { System.out.println(\"TypeImportOnDemandDeclaration ::=...\"); }  //$NON-NLS-1$", "+    case 119 : if (DEBUG) { System.out.println(\"TypeImportOnDemandDeclaration ::=...\"); }  //$NON-NLS-1$", "-    case 104 : if (DEBUG) { System.out.println(\"TypeImportOnDemandDeclarationName ::= import Name DOT...\"); }  //$NON-NLS-1$", "+    case 120 : if (DEBUG) { System.out.println(\"TypeImportOnDemandDeclarationName ::= import Name DOT...\"); }  //$NON-NLS-1$", "-     case 107 : if (DEBUG) { System.out.println(\"TypeDeclaration ::= SEMICOLON\"); }  //$NON-NLS-1$", "+     case 123 : if (DEBUG) { System.out.println(\"TypeDeclaration ::= SEMICOLON\"); }  //$NON-NLS-1$", "-    case 111 : if (DEBUG) { System.out.println(\"Modifiers ::= Modifiers Modifier\"); }  //$NON-NLS-1$", "+    case 127 : if (DEBUG) { System.out.println(\"Modifiers ::= Modifiers Modifier\"); }  //$NON-NLS-1$", "-    case 123 : if (DEBUG) { System.out.println(\"Modifier ::= Annotation\"); }  //$NON-NLS-1$", "+    case 139 : if (DEBUG) { System.out.println(\"Modifier ::= Annotation\"); }  //$NON-NLS-1$", "-    case 124 : if (DEBUG) { System.out.println(\"ClassDeclaration ::= ClassHeader ClassBody\"); }  //$NON-NLS-1$", "+    case 140 : if (DEBUG) { System.out.println(\"ClassDeclaration ::= ClassHeader ClassBody\"); }  //$NON-NLS-1$", "-    case 125 : if (DEBUG) { System.out.println(\"ClassHeader ::= ClassHeaderName ClassHeaderExtendsopt...\"); }  //$NON-NLS-1$", "+    case 141 : if (DEBUG) { System.out.println(\"ClassHeader ::= ClassHeaderName ClassHeaderExtendsopt...\"); }  //$NON-NLS-1$", "-    case 126 : if (DEBUG) { System.out.println(\"ClassHeaderName ::= ClassHeaderName1 TypeParameters\"); }  //$NON-NLS-1$", "+    case 142 : if (DEBUG) { System.out.println(\"ClassHeaderName ::= ClassHeaderName1 TypeParameters\"); }  //$NON-NLS-1$", "-    case 128 : if (DEBUG) { System.out.println(\"ClassHeaderName1 ::= Modifiersopt class Identifier\"); }  //$NON-NLS-1$", "+    case 144 : if (DEBUG) { System.out.println(\"ClassHeaderName1 ::= Modifiersopt class Identifier\"); }  //$NON-NLS-1$", "-    case 129 : if (DEBUG) { System.out.println(\"ClassHeaderExtends ::= extends ClassType\"); }  //$NON-NLS-1$", "+    case 145 : if (DEBUG) { System.out.println(\"ClassHeaderExtends ::= extends ClassType\"); }  //$NON-NLS-1$", "-    case 130 : if (DEBUG) { System.out.println(\"ClassHeaderImplements ::= implements InterfaceTypeList\"); }  //$NON-NLS-1$", "+    case 146 : if (DEBUG) { System.out.println(\"ClassHeaderImplements ::= implements InterfaceTypeList\"); }  //$NON-NLS-1$", "-    case 132 : if (DEBUG) { System.out.println(\"InterfaceTypeList ::= InterfaceTypeList COMMA...\"); }  //$NON-NLS-1$", "+    case 148 : if (DEBUG) { System.out.println(\"InterfaceTypeList ::= InterfaceTypeList COMMA...\"); }  //$NON-NLS-1$", "-    case 133 : if (DEBUG) { System.out.println(\"InterfaceType ::= ClassOrInterfaceType\"); }  //$NON-NLS-1$", "+    case 149 : if (DEBUG) { System.out.println(\"InterfaceType ::= ClassOrInterfaceType\"); }  //$NON-NLS-1$", "-    case 136 : if (DEBUG) { System.out.println(\"ClassBodyDeclarations ::= ClassBodyDeclarations...\"); }  //$NON-NLS-1$", "+    case 152 : if (DEBUG) { System.out.println(\"ClassBodyDeclarations ::= ClassBodyDeclarations...\"); }  //$NON-NLS-1$", "-    case 140 : if (DEBUG) { System.out.println(\"ClassBodyDeclaration ::= Diet NestedMethod...\"); }  //$NON-NLS-1$", "+    case 156 : if (DEBUG) { System.out.println(\"ClassBodyDeclaration ::= Diet NestedMethod...\"); }  //$NON-NLS-1$", "-    case 141 : if (DEBUG) { System.out.println(\"Diet ::=\"); }  //$NON-NLS-1$", "+    case 157 : if (DEBUG) { System.out.println(\"Diet ::=\"); }  //$NON-NLS-1$", "-    case 142 : if (DEBUG) { System.out.println(\"Initializer ::= Diet NestedMethod CreateInitializer...\"); }  //$NON-NLS-1$", "+    case 158 : if (DEBUG) { System.out.println(\"Initializer ::= Diet NestedMethod CreateInitializer...\"); }  //$NON-NLS-1$", "-    case 143 : if (DEBUG) { System.out.println(\"CreateInitializer ::=\"); }  //$NON-NLS-1$", "+    case 159 : if (DEBUG) { System.out.println(\"CreateInitializer ::=\"); }  //$NON-NLS-1$", "-    case 150 : if (DEBUG) { System.out.println(\"ClassMemberDeclaration ::= SEMICOLON\"); }  //$NON-NLS-1$", "+    case 166 : if (DEBUG) { System.out.println(\"ClassMemberDeclaration ::= SEMICOLON\"); }  //$NON-NLS-1$", "-    case 153 : if (DEBUG) { System.out.println(\"FieldDeclaration ::= Modifiersopt Type...\"); }  //$NON-NLS-1$", "+    case 169 : if (DEBUG) { System.out.println(\"FieldDeclaration ::= Modifiersopt Type0...\"); }  //$NON-NLS-1$", "-    case 155 : if (DEBUG) { System.out.println(\"VariableDeclarators ::= VariableDeclarators COMMA...\"); }  //$NON-NLS-1$", "+    case 171 : if (DEBUG) { System.out.println(\"VariableDeclarators ::= VariableDeclarators COMMA...\"); }  //$NON-NLS-1$", "-    case 158 : if (DEBUG) { System.out.println(\"EnterVariable ::=\"); }  //$NON-NLS-1$", "+    case 174 : if (DEBUG) { System.out.println(\"EnterVariable ::=\"); }  //$NON-NLS-1$", "-    case 159 : if (DEBUG) { System.out.println(\"ExitVariableWithInitialization ::=\"); }  //$NON-NLS-1$", "+    case 175 : if (DEBUG) { System.out.println(\"ExitVariableWithInitialization ::=\"); }  //$NON-NLS-1$", "-    case 160 : if (DEBUG) { System.out.println(\"ExitVariableWithoutInitialization ::=\"); }  //$NON-NLS-1$", "+    case 176 : if (DEBUG) { System.out.println(\"ExitVariableWithoutInitialization ::=\"); }  //$NON-NLS-1$", "-    case 161 : if (DEBUG) { System.out.println(\"ForceNoDiet ::=\"); }  //$NON-NLS-1$", "+    case 177 : if (DEBUG) { System.out.println(\"ForceNoDiet ::=\"); }  //$NON-NLS-1$", "-    case 162 : if (DEBUG) { System.out.println(\"RestoreDiet ::=\"); }  //$NON-NLS-1$", "+    case 178 : if (DEBUG) { System.out.println(\"RestoreDiet ::=\"); }  //$NON-NLS-1$", "-    case 167 : if (DEBUG) { System.out.println(\"MethodDeclaration ::= MethodHeader MethodBody\"); }  //$NON-NLS-1$", "+    case 179 : if (DEBUG) { System.out.println(\"VariableDeclaratorIdOrThis ::= this\"); }  //$NON-NLS-1$", "+\t\t    consumeExplicitThisParameter();  ", "+\t\t\tbreak;", "+ ", "+    case 185 : if (DEBUG) { System.out.println(\"MethodDeclaration ::= MethodHeader MethodBody\"); }  //$NON-NLS-1$", "-    case 168 : if (DEBUG) { System.out.println(\"AbstractMethodDeclaration ::= MethodHeader SEMICOLON\"); }  //$NON-NLS-1$", "+    case 186 : if (DEBUG) { System.out.println(\"AbstractMethodDeclaration ::= MethodHeader SEMICOLON\"); }  //$NON-NLS-1$", "-    case 169 : if (DEBUG) { System.out.println(\"MethodHeader ::= MethodHeaderName FormalParameterListopt\"); }  //$NON-NLS-1$", "+    case 187 : if (DEBUG) { System.out.println(\"MethodHeader ::= MethodHeaderName FormalParameterListopt\"); }  //$NON-NLS-1$", "-    case 170 : if (DEBUG) { System.out.println(\"MethodHeaderName ::= Modifiersopt TypeParameters Type...\"); }  //$NON-NLS-1$", "+    case 188 : if (DEBUG) { System.out.println(\"MethodHeaderName ::= Modifiersopt TypeParameters Type...\"); }  //$NON-NLS-1$", "-    case 171 : if (DEBUG) { System.out.println(\"MethodHeaderName ::= Modifiersopt Type Identifier LPAREN\"); }  //$NON-NLS-1$", "+    case 189 : if (DEBUG) { System.out.println(\"MethodHeaderName ::= Modifiersopt Type0 Identifier...\"); }  //$NON-NLS-1$", "-    case 172 : if (DEBUG) { System.out.println(\"MethodHeaderRightParen ::= RPAREN\"); }  //$NON-NLS-1$", "+    case 190 : if (DEBUG) { System.out.println(\"MethodHeaderRightParen ::= RPAREN\"); }  //$NON-NLS-1$", "-    case 173 : if (DEBUG) { System.out.println(\"MethodHeaderExtendedDims ::= Dimsopt\"); }  //$NON-NLS-1$", "+    case 191 : if (DEBUG) { System.out.println(\"MethodHeaderExtendedDims ::= Dimsopt\"); }  //$NON-NLS-1$", "-    case 174 : if (DEBUG) { System.out.println(\"MethodHeaderThrowsClause ::= throws ClassTypeList\"); }  //$NON-NLS-1$", "+    case 192 : if (DEBUG) { System.out.println(\"MethodHeaderThrowsClause ::= throws ClassTypeList\"); }  //$NON-NLS-1$", "-    case 175 : if (DEBUG) { System.out.println(\"ConstructorHeader ::= ConstructorHeaderName...\"); }  //$NON-NLS-1$", "+    case 193 : if (DEBUG) { System.out.println(\"ConstructorHeader ::= ConstructorHeaderName...\"); }  //$NON-NLS-1$", "-    case 176 : if (DEBUG) { System.out.println(\"ConstructorHeaderName ::= Modifiersopt TypeParameters...\"); }  //$NON-NLS-1$", "+    case 194 : if (DEBUG) { System.out.println(\"ConstructorHeaderName ::= Modifiersopt TypeParameters...\"); }  //$NON-NLS-1$", "-    case 177 : if (DEBUG) { System.out.println(\"ConstructorHeaderName ::= Modifiersopt Identifier LPAREN\"); }  //$NON-NLS-1$", "+    case 195 : if (DEBUG) { System.out.println(\"ConstructorHeaderName ::= Modifiersopt Identifier LPAREN\"); }  //$NON-NLS-1$", "-    case 179 : if (DEBUG) { System.out.println(\"FormalParameterList ::= FormalParameterList COMMA...\"); }  //$NON-NLS-1$", "+    case 197 : if (DEBUG) { System.out.println(\"FormalParameterList ::= FormalParameterList COMMA...\"); }  //$NON-NLS-1$", "-    case 180 : if (DEBUG) { System.out.println(\"FormalParameter ::= Modifiersopt Type...\"); }  //$NON-NLS-1$", "+    case 198 : if (DEBUG) { System.out.println(\"PotentialNameArray ::=\"); }  //$NON-NLS-1$", "+\t\t    consumePotentialNameArrayType();  ", "+\t\t\tbreak;", "+ ", "+    case 199 : if (DEBUG) { System.out.println(\"FormalParameter ::= Modifiersopt PrimitiveType...\"); }  //$NON-NLS-1$", "-    case 181 : if (DEBUG) { System.out.println(\"FormalParameter ::= Modifiersopt Type ELLIPSIS...\"); }  //$NON-NLS-1$", "+    case 200 : if (DEBUG) { System.out.println(\"FormalParameter ::= Modifiersopt PrimitiveType...\"); }  //$NON-NLS-1$", "-    case 182 : if (DEBUG) { System.out.println(\"CatchFormalParameter ::= Modifiersopt CatchType...\"); }  //$NON-NLS-1$", "+    case 201 : if (DEBUG) { System.out.println(\"FormalParameter ::= Modifiersopt Name DimsoptAnnotsopt\"); }  //$NON-NLS-1$", "+\t\t    consumeFormalParameter(false);  ", "+\t\t\tbreak;", "+ ", "+    case 202 : if (DEBUG) { System.out.println(\"FormalParameter ::= Modifiersopt Name DimsoptAnnotsopt\"); }  //$NON-NLS-1$", "+\t\t    consumeFormalParameter(true);  ", "+\t\t\tbreak;", "+ ", "+    case 203 : if (DEBUG) { System.out.println(\"FormalParameter ::= Modifiersopt GenericType...\"); }  //$NON-NLS-1$", "+\t\t    consumeFormalParameter(false);  ", "+\t\t\tbreak;", "+ ", "+    case 204 : if (DEBUG) { System.out.println(\"FormalParameter ::= Modifiersopt GenericType...\"); }  //$NON-NLS-1$", "+\t\t    consumeFormalParameter(true);  ", "+\t\t\tbreak;", "+ ", "+    case 205 : if (DEBUG) { System.out.println(\"FormalParameter ::= Modifiersopt GenericTypeDotName...\"); }  //$NON-NLS-1$", "+\t\t    consumeFormalParameter(false);  ", "+\t\t\tbreak;", "+ ", "+    case 206 : if (DEBUG) { System.out.println(\"FormalParameter ::= Modifiersopt GenericTypeDotName...\"); }  //$NON-NLS-1$", "+\t\t    consumeFormalParameter(true);  ", "+\t\t\tbreak;", "+ ", "+    case 207 : if (DEBUG) { System.out.println(\"CatchFormalParameter ::= Modifiersopt CatchType...\"); }  //$NON-NLS-1$", "-    case 183 : if (DEBUG) { System.out.println(\"CatchType ::= UnionType\"); }  //$NON-NLS-1$", "+    case 208 : if (DEBUG) { System.out.println(\"CatchType ::= UnionType\"); }  //$NON-NLS-1$", "-    case 184 : if (DEBUG) { System.out.println(\"UnionType ::= Type\"); }  //$NON-NLS-1$", "+    case 209 : if (DEBUG) { System.out.println(\"UnionType ::= TypeInternal\"); }  //$NON-NLS-1$", "-    case 185 : if (DEBUG) { System.out.println(\"UnionType ::= UnionType OR Type\"); }  //$NON-NLS-1$", "+    case 210 : if (DEBUG) { System.out.println(\"UnionType ::= UnionType OR Type\"); }  //$NON-NLS-1$", "-    case 187 : if (DEBUG) { System.out.println(\"ClassTypeList ::= ClassTypeList COMMA ClassTypeElt\"); }  //$NON-NLS-1$", "+    case 212 : if (DEBUG) { System.out.println(\"ClassTypeList ::= ClassTypeList COMMA ClassTypeElt\"); }  //$NON-NLS-1$", "-    case 188 : if (DEBUG) { System.out.println(\"ClassTypeElt ::= ClassType\"); }  //$NON-NLS-1$", "+    case 213 : if (DEBUG) { System.out.println(\"ClassTypeElt ::= ClassType\"); }  //$NON-NLS-1$", "-    case 189 : if (DEBUG) { System.out.println(\"MethodBody ::= NestedMethod LBRACE BlockStatementsopt...\"); }  //$NON-NLS-1$", "+    case 214 : if (DEBUG) { System.out.println(\"MethodBody ::= NestedMethod LBRACE BlockStatementsopt...\"); }  //$NON-NLS-1$", "-    case 190 : if (DEBUG) { System.out.println(\"NestedMethod ::=\"); }  //$NON-NLS-1$", "+    case 215 : if (DEBUG) { System.out.println(\"NestedMethod ::=\"); }  //$NON-NLS-1$", "-    case 191 : if (DEBUG) { System.out.println(\"StaticInitializer ::= StaticOnly Block\"); }  //$NON-NLS-1$", "+    case 216 : if (DEBUG) { System.out.println(\"StaticInitializer ::= StaticOnly Block\"); }  //$NON-NLS-1$", "-    case 192 : if (DEBUG) { System.out.println(\"StaticOnly ::= static\"); }  //$NON-NLS-1$", "+    case 217 : if (DEBUG) { System.out.println(\"StaticOnly ::= static\"); }  //$NON-NLS-1$", "-    case 193 : if (DEBUG) { System.out.println(\"ConstructorDeclaration ::= ConstructorHeader MethodBody\"); }  //$NON-NLS-1$", "+    case 218 : if (DEBUG) { System.out.println(\"ConstructorDeclaration ::= ConstructorHeader MethodBody\"); }  //$NON-NLS-1$", "-    case 194 : if (DEBUG) { System.out.println(\"ConstructorDeclaration ::= ConstructorHeader SEMICOLON\"); }  //$NON-NLS-1$", "+    case 219 : if (DEBUG) { System.out.println(\"ConstructorDeclaration ::= ConstructorHeader SEMICOLON\"); }  //$NON-NLS-1$", "-    case 195 : if (DEBUG) { System.out.println(\"ExplicitConstructorInvocation ::= this LPAREN...\"); }  //$NON-NLS-1$", "+    case 220 : if (DEBUG) { System.out.println(\"ExplicitConstructorInvocation ::= this LPAREN...\"); }  //$NON-NLS-1$", "-    case 196 : if (DEBUG) { System.out.println(\"ExplicitConstructorInvocation ::= OnlyTypeArguments this\"); }  //$NON-NLS-1$", "+    case 221 : if (DEBUG) { System.out.println(\"ExplicitConstructorInvocation ::= OnlyTypeArguments this\"); }  //$NON-NLS-1$", "-    case 197 : if (DEBUG) { System.out.println(\"ExplicitConstructorInvocation ::= super LPAREN...\"); }  //$NON-NLS-1$", "+    case 222 : if (DEBUG) { System.out.println(\"ExplicitConstructorInvocation ::= super LPAREN...\"); }  //$NON-NLS-1$", "-    case 198 : if (DEBUG) { System.out.println(\"ExplicitConstructorInvocation ::= OnlyTypeArguments...\"); }  //$NON-NLS-1$", "+    case 223 : if (DEBUG) { System.out.println(\"ExplicitConstructorInvocation ::= OnlyTypeArguments...\"); }  //$NON-NLS-1$", "-    case 199 : if (DEBUG) { System.out.println(\"ExplicitConstructorInvocation ::= Primary DOT super...\"); }  //$NON-NLS-1$", "+    case 224 : if (DEBUG) { System.out.println(\"ExplicitConstructorInvocation ::= Primary DOT super...\"); }  //$NON-NLS-1$", "-    case 200 : if (DEBUG) { System.out.println(\"ExplicitConstructorInvocation ::= Primary DOT...\"); }  //$NON-NLS-1$", "+    case 225 : if (DEBUG) { System.out.println(\"ExplicitConstructorInvocation ::= Primary DOT...\"); }  //$NON-NLS-1$", "-    case 201 : if (DEBUG) { System.out.println(\"ExplicitConstructorInvocation ::= Name DOT super LPAREN\"); }  //$NON-NLS-1$", "+    case 226 : if (DEBUG) { System.out.println(\"ExplicitConstructorInvocation ::= Name DOT super LPAREN\"); }  //$NON-NLS-1$", "-    case 202 : if (DEBUG) { System.out.println(\"ExplicitConstructorInvocation ::= Name DOT...\"); }  //$NON-NLS-1$", "+    case 227 : if (DEBUG) { System.out.println(\"ExplicitConstructorInvocation ::= Name DOT...\"); }  //$NON-NLS-1$", "-    case 203 : if (DEBUG) { System.out.println(\"ExplicitConstructorInvocation ::= Primary DOT this...\"); }  //$NON-NLS-1$", "+    case 228 : if (DEBUG) { System.out.println(\"ExplicitConstructorInvocation ::= Primary DOT this...\"); }  //$NON-NLS-1$", "-    case 204 : if (DEBUG) { System.out.println(\"ExplicitConstructorInvocation ::= Primary DOT...\"); }  //$NON-NLS-1$", "+    case 229 : if (DEBUG) { System.out.println(\"ExplicitConstructorInvocation ::= Primary DOT...\"); }  //$NON-NLS-1$", "-    case 205 : if (DEBUG) { System.out.println(\"ExplicitConstructorInvocation ::= Name DOT this LPAREN\"); }  //$NON-NLS-1$", "+    case 230 : if (DEBUG) { System.out.println(\"ExplicitConstructorInvocation ::= Name DOT this LPAREN\"); }  //$NON-NLS-1$", "-    case 206 : if (DEBUG) { System.out.println(\"ExplicitConstructorInvocation ::= Name DOT...\"); }  //$NON-NLS-1$", "+    case 231 : if (DEBUG) { System.out.println(\"ExplicitConstructorInvocation ::= Name DOT...\"); }  //$NON-NLS-1$", "-    case 207 : if (DEBUG) { System.out.println(\"InterfaceDeclaration ::= InterfaceHeader InterfaceBody\"); }  //$NON-NLS-1$", "+    case 232 : if (DEBUG) { System.out.println(\"InterfaceDeclaration ::= InterfaceHeader InterfaceBody\"); }  //$NON-NLS-1$", "-    case 208 : if (DEBUG) { System.out.println(\"InterfaceHeader ::= InterfaceHeaderName...\"); }  //$NON-NLS-1$", "+    case 233 : if (DEBUG) { System.out.println(\"InterfaceHeader ::= InterfaceHeaderName...\"); }  //$NON-NLS-1$", "-    case 209 : if (DEBUG) { System.out.println(\"InterfaceHeaderName ::= InterfaceHeaderName1...\"); }  //$NON-NLS-1$", "+    case 234 : if (DEBUG) { System.out.println(\"InterfaceHeaderName ::= InterfaceHeaderName1...\"); }  //$NON-NLS-1$", "-    case 211 : if (DEBUG) { System.out.println(\"InterfaceHeaderName1 ::= Modifiersopt interface...\"); }  //$NON-NLS-1$", "+    case 236 : if (DEBUG) { System.out.println(\"InterfaceHeaderName1 ::= Modifiersopt interface...\"); }  //$NON-NLS-1$", "-    case 212 : if (DEBUG) { System.out.println(\"InterfaceHeaderExtends ::= extends InterfaceTypeList\"); }  //$NON-NLS-1$", "+    case 237 : if (DEBUG) { System.out.println(\"InterfaceHeaderExtends ::= extends InterfaceTypeList\"); }  //$NON-NLS-1$", "-    case 215 : if (DEBUG) { System.out.println(\"InterfaceMemberDeclarations ::=...\"); }  //$NON-NLS-1$", "+    case 240 : if (DEBUG) { System.out.println(\"InterfaceMemberDeclarations ::=...\"); }  //$NON-NLS-1$", "-    case 216 : if (DEBUG) { System.out.println(\"InterfaceMemberDeclaration ::= SEMICOLON\"); }  //$NON-NLS-1$", "+    case 241 : if (DEBUG) { System.out.println(\"InterfaceMemberDeclaration ::= SEMICOLON\"); }  //$NON-NLS-1$", "-    case 217 : if (DEBUG) { System.out.println(\"PushDefault ::=\"); }  //$NON-NLS-1$", "+    case 242 : if (DEBUG) { System.out.println(\"PushDefault ::=\"); }  //$NON-NLS-1$", "-    case 219 : if (DEBUG) { System.out.println(\"InterfaceMemberDeclaration ::= MethodHeader default...\"); }  //$NON-NLS-1$", "+    case 244 : if (DEBUG) { System.out.println(\"InterfaceMemberDeclaration ::= MethodHeader default...\"); }  //$NON-NLS-1$", "-    case 220 : if (DEBUG) { System.out.println(\"InterfaceMemberDeclaration ::= MethodHeader MethodBody\"); }  //$NON-NLS-1$", "+    case 245 : if (DEBUG) { System.out.println(\"InterfaceMemberDeclaration ::= MethodHeader MethodBody\"); }  //$NON-NLS-1$", "-    case 221 : if (DEBUG) { System.out.println(\"InvalidConstructorDeclaration ::= ConstructorHeader...\"); }  //$NON-NLS-1$", "+    case 246 : if (DEBUG) { System.out.println(\"InvalidConstructorDeclaration ::= ConstructorHeader...\"); }  //$NON-NLS-1$", "-    case 222 : if (DEBUG) { System.out.println(\"InvalidConstructorDeclaration ::= ConstructorHeader...\"); }  //$NON-NLS-1$", "+    case 247 : if (DEBUG) { System.out.println(\"InvalidConstructorDeclaration ::= ConstructorHeader...\"); }  //$NON-NLS-1$", "-    case 233 : if (DEBUG) { System.out.println(\"PushLeftBrace ::=\"); }  //$NON-NLS-1$", "+    case 258 : if (DEBUG) { System.out.println(\"PushLeftBrace ::=\"); }  //$NON-NLS-1$", "-    case 234 : if (DEBUG) { System.out.println(\"ArrayInitializer ::= LBRACE PushLeftBrace ,opt RBRACE\"); }  //$NON-NLS-1$", "+    case 259 : if (DEBUG) { System.out.println(\"ArrayInitializer ::= LBRACE PushLeftBrace ,opt RBRACE\"); }  //$NON-NLS-1$", "-    case 235 : if (DEBUG) { System.out.println(\"ArrayInitializer ::= LBRACE PushLeftBrace...\"); }  //$NON-NLS-1$", "+    case 260 : if (DEBUG) { System.out.println(\"ArrayInitializer ::= LBRACE PushLeftBrace...\"); }  //$NON-NLS-1$", "-    case 236 : if (DEBUG) { System.out.println(\"ArrayInitializer ::= LBRACE PushLeftBrace...\"); }  //$NON-NLS-1$", "+    case 261 : if (DEBUG) { System.out.println(\"ArrayInitializer ::= LBRACE PushLeftBrace...\"); }  //$NON-NLS-1$", "-    case 238 : if (DEBUG) { System.out.println(\"VariableInitializers ::= VariableInitializers COMMA...\"); }  //$NON-NLS-1$", "+    case 263 : if (DEBUG) { System.out.println(\"VariableInitializers ::= VariableInitializers COMMA...\"); }  //$NON-NLS-1$", "-    case 239 : if (DEBUG) { System.out.println(\"Block ::= OpenBlock LBRACE BlockStatementsopt RBRACE\"); }  //$NON-NLS-1$", "+    case 264 : if (DEBUG) { System.out.println(\"Block ::= OpenBlock LBRACE BlockStatementsopt RBRACE\"); }  //$NON-NLS-1$", "-    case 240 : if (DEBUG) { System.out.println(\"OpenBlock ::=\"); }  //$NON-NLS-1$", "+    case 265 : if (DEBUG) { System.out.println(\"OpenBlock ::=\"); }  //$NON-NLS-1$", "-    case 242 : if (DEBUG) { System.out.println(\"BlockStatements ::= BlockStatements BlockStatement\"); }  //$NON-NLS-1$", "+    case 267 : if (DEBUG) { System.out.println(\"BlockStatements ::= BlockStatements BlockStatement\"); }  //$NON-NLS-1$", "-    case 246 : if (DEBUG) { System.out.println(\"BlockStatement ::= InterfaceDeclaration\"); }  //$NON-NLS-1$", "+    case 271 : if (DEBUG) { System.out.println(\"BlockStatement ::= InterfaceDeclaration\"); }  //$NON-NLS-1$", "-    case 247 : if (DEBUG) { System.out.println(\"BlockStatement ::= AnnotationTypeDeclaration\"); }  //$NON-NLS-1$", "+    case 272 : if (DEBUG) { System.out.println(\"BlockStatement ::= AnnotationTypeDeclaration\"); }  //$NON-NLS-1$", "-    case 248 : if (DEBUG) { System.out.println(\"BlockStatement ::= EnumDeclaration\"); }  //$NON-NLS-1$", "+    case 273 : if (DEBUG) { System.out.println(\"BlockStatement ::= EnumDeclaration\"); }  //$NON-NLS-1$", "-    case 249 : if (DEBUG) { System.out.println(\"LocalVariableDeclarationStatement ::=...\"); }  //$NON-NLS-1$", "+    case 274 : if (DEBUG) { System.out.println(\"LocalVariableDeclarationStatement ::=...\"); }  //$NON-NLS-1$", "-    case 250 : if (DEBUG) { System.out.println(\"LocalVariableDeclaration ::= Type PushModifiers...\"); }  //$NON-NLS-1$", "+    case 275 : if (DEBUG) { System.out.println(\"LocalVariableDeclaration ::= Type0 PushModifiers...\"); }  //$NON-NLS-1$", "-    case 251 : if (DEBUG) { System.out.println(\"LocalVariableDeclaration ::= Modifiers Type...\"); }  //$NON-NLS-1$", "+    case 276 : if (DEBUG) { System.out.println(\"LocalVariableDeclaration ::= Modifiers Type0...\"); }  //$NON-NLS-1$", "-    case 252 : if (DEBUG) { System.out.println(\"PushModifiers ::=\"); }  //$NON-NLS-1$", "+    case 277 : if (DEBUG) { System.out.println(\"PushModifiers ::=\"); }  //$NON-NLS-1$", "-    case 253 : if (DEBUG) { System.out.println(\"PushModifiersForHeader ::=\"); }  //$NON-NLS-1$", "+    case 278 : if (DEBUG) { System.out.println(\"PushModifiersForHeader ::=\"); }  //$NON-NLS-1$", "-    case 254 : if (DEBUG) { System.out.println(\"PushRealModifiers ::=\"); }  //$NON-NLS-1$", "+    case 279 : if (DEBUG) { System.out.println(\"PushRealModifiers ::=\"); }  //$NON-NLS-1$", "-    case 281 : if (DEBUG) { System.out.println(\"EmptyStatement ::= SEMICOLON\"); }  //$NON-NLS-1$", "+    case 306 : if (DEBUG) { System.out.println(\"EmptyStatement ::= SEMICOLON\"); }  //$NON-NLS-1$", "-    case 282 : if (DEBUG) { System.out.println(\"LabeledStatement ::= Label COLON Statement\"); }  //$NON-NLS-1$", "+    case 307 : if (DEBUG) { System.out.println(\"LabeledStatement ::= Label COLON Statement\"); }  //$NON-NLS-1$", "-    case 283 : if (DEBUG) { System.out.println(\"LabeledStatementNoShortIf ::= Label COLON...\"); }  //$NON-NLS-1$", "+    case 308 : if (DEBUG) { System.out.println(\"LabeledStatementNoShortIf ::= Label COLON...\"); }  //$NON-NLS-1$", "-    case 284 : if (DEBUG) { System.out.println(\"Label ::= Identifier\"); }  //$NON-NLS-1$", "-\t\t    consumeLabel() ;  ", "+    case 309 : if (DEBUG) { System.out.println(\"Label ::= Identifier\"); }  //$NON-NLS-1$", "+\t\t    consumeLabel();  ", "-     case 285 : if (DEBUG) { System.out.println(\"ExpressionStatement ::= StatementExpression SEMICOLON\"); }  //$NON-NLS-1$", "+     case 310 : if (DEBUG) { System.out.println(\"ExpressionStatement ::= StatementExpression SEMICOLON\"); }  //$NON-NLS-1$", "-    case 294 : if (DEBUG) { System.out.println(\"IfThenStatement ::= if LPAREN Expression RPAREN...\"); }  //$NON-NLS-1$", "+    case 319 : if (DEBUG) { System.out.println(\"IfThenStatement ::= if LPAREN Expression RPAREN...\"); }  //$NON-NLS-1$", "-    case 295 : if (DEBUG) { System.out.println(\"IfThenElseStatement ::= if LPAREN Expression RPAREN...\"); }  //$NON-NLS-1$", "+    case 320 : if (DEBUG) { System.out.println(\"IfThenElseStatement ::= if LPAREN Expression RPAREN...\"); }  //$NON-NLS-1$", "-    case 296 : if (DEBUG) { System.out.println(\"IfThenElseStatementNoShortIf ::= if LPAREN Expression...\"); }  //$NON-NLS-1$", "+    case 321 : if (DEBUG) { System.out.println(\"IfThenElseStatementNoShortIf ::= if LPAREN Expression...\"); }  //$NON-NLS-1$", "-    case 297 : if (DEBUG) { System.out.println(\"SwitchStatement ::= switch LPAREN Expression RPAREN...\"); }  //$NON-NLS-1$", "+    case 322 : if (DEBUG) { System.out.println(\"SwitchStatement ::= switch LPAREN Expression RPAREN...\"); }  //$NON-NLS-1$", "-    case 298 : if (DEBUG) { System.out.println(\"SwitchBlock ::= LBRACE RBRACE\"); }  //$NON-NLS-1$", "+    case 323 : if (DEBUG) { System.out.println(\"SwitchBlock ::= LBRACE RBRACE\"); }  //$NON-NLS-1$", "-    case 301 : if (DEBUG) { System.out.println(\"SwitchBlock ::= LBRACE SwitchBlockStatements...\"); }  //$NON-NLS-1$", "+    case 326 : if (DEBUG) { System.out.println(\"SwitchBlock ::= LBRACE SwitchBlockStatements...\"); }  //$NON-NLS-1$", "-    case 303 : if (DEBUG) { System.out.println(\"SwitchBlockStatements ::= SwitchBlockStatements...\"); }  //$NON-NLS-1$", "+    case 328 : if (DEBUG) { System.out.println(\"SwitchBlockStatements ::= SwitchBlockStatements...\"); }  //$NON-NLS-1$", "-    case 304 : if (DEBUG) { System.out.println(\"SwitchBlockStatement ::= SwitchLabels BlockStatements\"); }  //$NON-NLS-1$", "+    case 329 : if (DEBUG) { System.out.println(\"SwitchBlockStatement ::= SwitchLabels BlockStatements\"); }  //$NON-NLS-1$", "-    case 306 : if (DEBUG) { System.out.println(\"SwitchLabels ::= SwitchLabels SwitchLabel\"); }  //$NON-NLS-1$", "+    case 331 : if (DEBUG) { System.out.println(\"SwitchLabels ::= SwitchLabels SwitchLabel\"); }  //$NON-NLS-1$", "-     case 307 : if (DEBUG) { System.out.println(\"SwitchLabel ::= case ConstantExpression COLON\"); }  //$NON-NLS-1$", "+     case 332 : if (DEBUG) { System.out.println(\"SwitchLabel ::= case ConstantExpression COLON\"); }  //$NON-NLS-1$", "-     case 308 : if (DEBUG) { System.out.println(\"SwitchLabel ::= default COLON\"); }  //$NON-NLS-1$", "+     case 333 : if (DEBUG) { System.out.println(\"SwitchLabel ::= default COLON\"); }  //$NON-NLS-1$", "-    case 309 : if (DEBUG) { System.out.println(\"WhileStatement ::= while LPAREN Expression RPAREN...\"); }  //$NON-NLS-1$", "+    case 334 : if (DEBUG) { System.out.println(\"WhileStatement ::= while LPAREN Expression RPAREN...\"); }  //$NON-NLS-1$", "-    case 310 : if (DEBUG) { System.out.println(\"WhileStatementNoShortIf ::= while LPAREN Expression...\"); }  //$NON-NLS-1$", "+    case 335 : if (DEBUG) { System.out.println(\"WhileStatementNoShortIf ::= while LPAREN Expression...\"); }  //$NON-NLS-1$", "-    case 311 : if (DEBUG) { System.out.println(\"DoStatement ::= do Statement while LPAREN Expression...\"); }  //$NON-NLS-1$", "+    case 336 : if (DEBUG) { System.out.println(\"DoStatement ::= do Statement while LPAREN Expression...\"); }  //$NON-NLS-1$", "-    case 312 : if (DEBUG) { System.out.println(\"ForStatement ::= for LPAREN ForInitopt SEMICOLON...\"); }  //$NON-NLS-1$", "+    case 337 : if (DEBUG) { System.out.println(\"ForStatement ::= for LPAREN ForInitopt SEMICOLON...\"); }  //$NON-NLS-1$", "-    case 313 : if (DEBUG) { System.out.println(\"ForStatementNoShortIf ::= for LPAREN ForInitopt...\"); }  //$NON-NLS-1$", "+    case 338 : if (DEBUG) { System.out.println(\"ForStatementNoShortIf ::= for LPAREN ForInitopt...\"); }  //$NON-NLS-1$", "-    case 314 : if (DEBUG) { System.out.println(\"ForInit ::= StatementExpressionList\"); }  //$NON-NLS-1$", "+    case 339 : if (DEBUG) { System.out.println(\"ForInit ::= StatementExpressionList\"); }  //$NON-NLS-1$", "-    case 318 : if (DEBUG) { System.out.println(\"StatementExpressionList ::= StatementExpressionList...\"); }  //$NON-NLS-1$", "+    case 343 : if (DEBUG) { System.out.println(\"StatementExpressionList ::= StatementExpressionList...\"); }  //$NON-NLS-1$", "-    case 319 : if (DEBUG) { System.out.println(\"AssertStatement ::= assert Expression SEMICOLON\"); }  //$NON-NLS-1$", "+    case 344 : if (DEBUG) { System.out.println(\"AssertStatement ::= assert Expression SEMICOLON\"); }  //$NON-NLS-1$", "-    case 320 : if (DEBUG) { System.out.println(\"AssertStatement ::= assert Expression COLON Expression\"); }  //$NON-NLS-1$", "+    case 345 : if (DEBUG) { System.out.println(\"AssertStatement ::= assert Expression COLON Expression\"); }  //$NON-NLS-1$", "-    case 321 : if (DEBUG) { System.out.println(\"BreakStatement ::= break SEMICOLON\"); }  //$NON-NLS-1$", "+    case 346 : if (DEBUG) { System.out.println(\"BreakStatement ::= break SEMICOLON\"); }  //$NON-NLS-1$", "-    case 322 : if (DEBUG) { System.out.println(\"BreakStatement ::= break Identifier SEMICOLON\"); }  //$NON-NLS-1$", "+    case 347 : if (DEBUG) { System.out.println(\"BreakStatement ::= break Identifier SEMICOLON\"); }  //$NON-NLS-1$", "-    case 323 : if (DEBUG) { System.out.println(\"ContinueStatement ::= continue SEMICOLON\"); }  //$NON-NLS-1$", "+    case 348 : if (DEBUG) { System.out.println(\"ContinueStatement ::= continue SEMICOLON\"); }  //$NON-NLS-1$", "-    case 324 : if (DEBUG) { System.out.println(\"ContinueStatement ::= continue Identifier SEMICOLON\"); }  //$NON-NLS-1$", "+    case 349 : if (DEBUG) { System.out.println(\"ContinueStatement ::= continue Identifier SEMICOLON\"); }  //$NON-NLS-1$", "-    case 325 : if (DEBUG) { System.out.println(\"ReturnStatement ::= return Expressionopt SEMICOLON\"); }  //$NON-NLS-1$", "+    case 350 : if (DEBUG) { System.out.println(\"ReturnStatement ::= return Expressionopt SEMICOLON\"); }  //$NON-NLS-1$", "-    case 326 : if (DEBUG) { System.out.println(\"ThrowStatement ::= throw Expression SEMICOLON\"); }  //$NON-NLS-1$", "+    case 351 : if (DEBUG) { System.out.println(\"ThrowStatement ::= throw Expression SEMICOLON\"); }  //$NON-NLS-1$", "-    case 327 : if (DEBUG) { System.out.println(\"SynchronizedStatement ::= OnlySynchronized LPAREN...\"); }  //$NON-NLS-1$", "+    case 352 : if (DEBUG) { System.out.println(\"SynchronizedStatement ::= OnlySynchronized LPAREN...\"); }  //$NON-NLS-1$", "-    case 328 : if (DEBUG) { System.out.println(\"OnlySynchronized ::= synchronized\"); }  //$NON-NLS-1$", "+    case 353 : if (DEBUG) { System.out.println(\"OnlySynchronized ::= synchronized\"); }  //$NON-NLS-1$", "-    case 329 : if (DEBUG) { System.out.println(\"TryStatement ::= try TryBlock Catches\"); }  //$NON-NLS-1$", "+    case 354 : if (DEBUG) { System.out.println(\"TryStatement ::= try TryBlock Catches\"); }  //$NON-NLS-1$", "-    case 330 : if (DEBUG) { System.out.println(\"TryStatement ::= try TryBlock Catchesopt Finally\"); }  //$NON-NLS-1$", "+    case 355 : if (DEBUG) { System.out.println(\"TryStatement ::= try TryBlock Catchesopt Finally\"); }  //$NON-NLS-1$", "-    case 331 : if (DEBUG) { System.out.println(\"TryStatementWithResources ::= try ResourceSpecification\"); }  //$NON-NLS-1$", "+    case 356 : if (DEBUG) { System.out.println(\"TryStatementWithResources ::= try ResourceSpecification\"); }  //$NON-NLS-1$", "-    case 332 : if (DEBUG) { System.out.println(\"TryStatementWithResources ::= try ResourceSpecification\"); }  //$NON-NLS-1$", "+    case 357 : if (DEBUG) { System.out.println(\"TryStatementWithResources ::= try ResourceSpecification\"); }  //$NON-NLS-1$", "-    case 333 : if (DEBUG) { System.out.println(\"ResourceSpecification ::= LPAREN Resources ;opt RPAREN\"); }  //$NON-NLS-1$", "+    case 358 : if (DEBUG) { System.out.println(\"ResourceSpecification ::= LPAREN Resources ;opt RPAREN\"); }  //$NON-NLS-1$", "-    case 334 : if (DEBUG) { System.out.println(\";opt ::=\"); }  //$NON-NLS-1$", "+    case 359 : if (DEBUG) { System.out.println(\";opt ::=\"); }  //$NON-NLS-1$", "-    case 335 : if (DEBUG) { System.out.println(\";opt ::= SEMICOLON\"); }  //$NON-NLS-1$", "+    case 360 : if (DEBUG) { System.out.println(\";opt ::= SEMICOLON\"); }  //$NON-NLS-1$", "-    case 336 : if (DEBUG) { System.out.println(\"Resources ::= Resource\"); }  //$NON-NLS-1$", "+    case 361 : if (DEBUG) { System.out.println(\"Resources ::= Resource\"); }  //$NON-NLS-1$", "-    case 337 : if (DEBUG) { System.out.println(\"Resources ::= Resources TrailingSemiColon Resource\"); }  //$NON-NLS-1$", "+    case 362 : if (DEBUG) { System.out.println(\"Resources ::= Resources TrailingSemiColon Resource\"); }  //$NON-NLS-1$", "-    case 338 : if (DEBUG) { System.out.println(\"TrailingSemiColon ::= SEMICOLON\"); }  //$NON-NLS-1$", "+    case 363 : if (DEBUG) { System.out.println(\"TrailingSemiColon ::= SEMICOLON\"); }  //$NON-NLS-1$", "-    case 339 : if (DEBUG) { System.out.println(\"Resource ::= Type PushModifiers VariableDeclaratorId...\"); }  //$NON-NLS-1$", "+    case 364 : if (DEBUG) { System.out.println(\"Resource ::= TypeInternal PushModifiers...\"); }  //$NON-NLS-1$", "-    case 340 : if (DEBUG) { System.out.println(\"Resource ::= Modifiers Type PushRealModifiers...\"); }  //$NON-NLS-1$", "+    case 365 : if (DEBUG) { System.out.println(\"Resource ::= Modifiers TypeInternal PushRealModifiers...\"); }  //$NON-NLS-1$", "-    case 342 : if (DEBUG) { System.out.println(\"ExitTryBlock ::=\"); }  //$NON-NLS-1$", "+    case 367 : if (DEBUG) { System.out.println(\"ExitTryBlock ::=\"); }  //$NON-NLS-1$", "-    case 344 : if (DEBUG) { System.out.println(\"Catches ::= Catches CatchClause\"); }  //$NON-NLS-1$", "+    case 369 : if (DEBUG) { System.out.println(\"Catches ::= Catches CatchClause\"); }  //$NON-NLS-1$", "-    case 345 : if (DEBUG) { System.out.println(\"CatchClause ::= catch LPAREN CatchFormalParameter RPAREN\"); }  //$NON-NLS-1$", "+    case 370 : if (DEBUG) { System.out.println(\"CatchClause ::= catch LPAREN CatchFormalParameter RPAREN\"); }  //$NON-NLS-1$", "-    case 347 : if (DEBUG) { System.out.println(\"PushLPAREN ::= LPAREN\"); }  //$NON-NLS-1$", "+    case 372 : if (DEBUG) { System.out.println(\"PushLPAREN ::= LPAREN\"); }  //$NON-NLS-1$", "-    case 348 : if (DEBUG) { System.out.println(\"PushRPAREN ::= RPAREN\"); }  //$NON-NLS-1$", "+    case 373 : if (DEBUG) { System.out.println(\"PushRPARENForUnannotatedTypeCast ::= RPAREN\"); }  //$NON-NLS-1$", "+\t\t    consumeRightParenForUnannotatedTypeCast();  ", "+\t\t\tbreak;", "+ ", "+    case 374 : if (DEBUG) { System.out.println(\"PushRPARENForNameUnannotatedTypeCast ::= RPAREN\"); }  //$NON-NLS-1$", "+\t\t    consumeRightParenForNameUnannotatedTypeCast();  ", "+\t\t\tbreak;", "+ ", "+    case 375 : if (DEBUG) { System.out.println(\"PushRPAREN ::= RPAREN\"); }  //$NON-NLS-1$", "-    case 353 : if (DEBUG) { System.out.println(\"PrimaryNoNewArray ::= this\"); }  //$NON-NLS-1$", "+    case 376 : if (DEBUG) { System.out.println(\"PushRPARENForAnnotatedTypeCast ::= RPAREN\"); }  //$NON-NLS-1$", "+\t\t    consumeRightParenForAnnotatedTypeCast();  ", "+\t\t\tbreak;", "+ ", "+    case 377 : if (DEBUG) { System.out.println(\"PushRPARENForNameAndAnnotatedTypeCast ::= RPAREN\"); }  //$NON-NLS-1$", "+\t\t    consumeRightParenForNameAndAnnotatedTypeCast();  ", "+\t\t\tbreak;", "+ ", "+    case 382 : if (DEBUG) { System.out.println(\"PrimaryNoNewArray ::= this\"); }  //$NON-NLS-1$", "-    case 354 : if (DEBUG) { System.out.println(\"PrimaryNoNewArray ::= PushLPAREN Expression_NotName...\"); }  //$NON-NLS-1$", "+    case 383 : if (DEBUG) { System.out.println(\"PrimaryNoNewArray ::= PushLPAREN Expression_NotName...\"); }  //$NON-NLS-1$", "-    case 355 : if (DEBUG) { System.out.println(\"PrimaryNoNewArray ::= PushLPAREN Name PushRPAREN\"); }  //$NON-NLS-1$", "+    case 384 : if (DEBUG) { System.out.println(\"PrimaryNoNewArray ::= PushLPAREN Name PushRPAREN\"); }  //$NON-NLS-1$", "-    case 358 : if (DEBUG) { System.out.println(\"PrimaryNoNewArray ::= Name DOT this\"); }  //$NON-NLS-1$", "+    case 387 : if (DEBUG) { System.out.println(\"PrimaryNoNewArray ::= Name DOT this\"); }  //$NON-NLS-1$", "-    case 359 : if (DEBUG) { System.out.println(\"PrimaryNoNewArray ::= Name DOT super\"); }  //$NON-NLS-1$", "+    case 388 : if (DEBUG) { System.out.println(\"PrimaryNoNewArray ::= Name DOT super\"); }  //$NON-NLS-1$", "-    case 360 : if (DEBUG) { System.out.println(\"PrimaryNoNewArray ::= Name DOT class\"); }  //$NON-NLS-1$", "+    case 389 : if (DEBUG) { System.out.println(\"PrimaryNoNewArray ::= Name DOT class\"); }  //$NON-NLS-1$", "-    case 361 : if (DEBUG) { System.out.println(\"PrimaryNoNewArray ::= Name Dims DOT class\"); }  //$NON-NLS-1$", "+    case 390 : if (DEBUG) { System.out.println(\"PrimaryNoNewArray ::= Name Dims DOT class\"); }  //$NON-NLS-1$", "-    case 362 : if (DEBUG) { System.out.println(\"PrimaryNoNewArray ::= PrimitiveType Dims DOT class\"); }  //$NON-NLS-1$", "+    case 391 : if (DEBUG) { System.out.println(\"PrimaryNoNewArray ::= PrimitiveType Dims DOT class\"); }  //$NON-NLS-1$", "-    case 363 : if (DEBUG) { System.out.println(\"PrimaryNoNewArray ::= PrimitiveType DOT class\"); }  //$NON-NLS-1$", "+    case 392 : if (DEBUG) { System.out.println(\"PrimaryNoNewArray ::= PrimitiveType DOT class\"); }  //$NON-NLS-1$", "-    case 369 : if (DEBUG) { System.out.println(\"ReferenceExpression ::= Name COLON_COLON...\"); }  //$NON-NLS-1$", "+    case 398 : if (DEBUG) { System.out.println(\"ReferenceExpression ::= Name COLON_COLON...\"); }  //$NON-NLS-1$", "-    case 370 : if (DEBUG) { System.out.println(\"ReferenceExpression ::= Name...\"); }  //$NON-NLS-1$", "+    case 399 : if (DEBUG) { System.out.println(\"ReferenceExpression ::= Name...\"); }  //$NON-NLS-1$", "-    case 371 : if (DEBUG) { System.out.println(\"ReferenceExpression ::= Name...\"); }  //$NON-NLS-1$", "+    case 400 : if (DEBUG) { System.out.println(\"ReferenceExpression ::= Name...\"); }  //$NON-NLS-1$", "-    case 372 : if (DEBUG) { System.out.println(\"ReferenceExpression ::= Primary COLON_COLON...\"); }  //$NON-NLS-1$", "+    case 401 : if (DEBUG) { System.out.println(\"ReferenceExpression ::= Primary COLON_COLON...\"); }  //$NON-NLS-1$", "-    case 373 : if (DEBUG) { System.out.println(\"ReferenceExpression ::= super COLON_COLON...\"); }  //$NON-NLS-1$", "+    case 402 : if (DEBUG) { System.out.println(\"ReferenceExpression ::= super COLON_COLON...\"); }  //$NON-NLS-1$", "-    case 374 : if (DEBUG) { System.out.println(\"NonWildTypeArgumentsopt ::=\"); }  //$NON-NLS-1$", "+    case 403 : if (DEBUG) { System.out.println(\"NonWildTypeArgumentsopt ::=\"); }  //$NON-NLS-1$", "-    case 376 : if (DEBUG) { System.out.println(\"IdentifierOrNew ::= Identifier\"); }  //$NON-NLS-1$", "+    case 405 : if (DEBUG) { System.out.println(\"IdentifierOrNew ::= Identifier\"); }  //$NON-NLS-1$", "-    case 377 : if (DEBUG) { System.out.println(\"IdentifierOrNew ::= new\"); }  //$NON-NLS-1$", "+    case 406 : if (DEBUG) { System.out.println(\"IdentifierOrNew ::= new\"); }  //$NON-NLS-1$", "-    case 378 : if (DEBUG) { System.out.println(\"LambdaExpression ::= LambdaParameters ARROW LambdaBody\"); }  //$NON-NLS-1$", "+    case 407 : if (DEBUG) { System.out.println(\"LambdaExpression ::= LambdaParameters ARROW LambdaBody\"); }  //$NON-NLS-1$", "-    case 379 : if (DEBUG) { System.out.println(\"LambdaParameters ::= Identifier\"); }  //$NON-NLS-1$", "+    case 408 : if (DEBUG) { System.out.println(\"LambdaParameters ::= Identifier\"); }  //$NON-NLS-1$", "-    case 383 : if (DEBUG) { System.out.println(\"TypeElidedFormalParameterList ::=...\"); }  //$NON-NLS-1$", "+    case 412 : if (DEBUG) { System.out.println(\"TypeElidedFormalParameterList ::=...\"); }  //$NON-NLS-1$", "-    case 384 : if (DEBUG) { System.out.println(\"TypeElidedFormalParameter ::= Modifiersopt Identifier\"); }  //$NON-NLS-1$", "+    case 413 : if (DEBUG) { System.out.println(\"TypeElidedFormalParameter ::= Modifiersopt Identifier\"); }  //$NON-NLS-1$", "-    case 386 : if (DEBUG) { System.out.println(\"LambdaBody ::= NestedType NestedMethod LBRACE...\"); }  //$NON-NLS-1$", "+    case 415 : if (DEBUG) { System.out.println(\"LambdaBody ::= NestedType NestedMethod LBRACE...\"); }  //$NON-NLS-1$", "-    case 387 : if (DEBUG) { System.out.println(\"ElidedLeftBraceAndReturn ::=\"); }  //$NON-NLS-1$", "+    case 416 : if (DEBUG) { System.out.println(\"ElidedLeftBraceAndReturn ::=\"); }  //$NON-NLS-1$", "-    case 388 : if (DEBUG) { System.out.println(\"AllocationHeader ::= new ClassType LPAREN...\"); }  //$NON-NLS-1$", "+    case 417 : if (DEBUG) { System.out.println(\"AllocationHeader ::= new ClassType LPAREN...\"); }  //$NON-NLS-1$", "-    case 389 : if (DEBUG) { System.out.println(\"ClassInstanceCreationExpression ::= new...\"); }  //$NON-NLS-1$", "+    case 418 : if (DEBUG) { System.out.println(\"ClassInstanceCreationExpression ::= new...\"); }  //$NON-NLS-1$", "-    case 390 : if (DEBUG) { System.out.println(\"ClassInstanceCreationExpression ::= new ClassType...\"); }  //$NON-NLS-1$", "+    case 419 : if (DEBUG) { System.out.println(\"ClassInstanceCreationExpression ::= new ClassType...\"); }  //$NON-NLS-1$", "-    case 391 : if (DEBUG) { System.out.println(\"ClassInstanceCreationExpression ::= Primary DOT new...\"); }  //$NON-NLS-1$", "+    case 420 : if (DEBUG) { System.out.println(\"ClassInstanceCreationExpression ::= Primary DOT new...\"); }  //$NON-NLS-1$", "-    case 392 : if (DEBUG) { System.out.println(\"ClassInstanceCreationExpression ::= Primary DOT new...\"); }  //$NON-NLS-1$", "+    case 421 : if (DEBUG) { System.out.println(\"ClassInstanceCreationExpression ::= Primary DOT new...\"); }  //$NON-NLS-1$", "-    case 393 : if (DEBUG) { System.out.println(\"ClassInstanceCreationExpression ::=...\"); }  //$NON-NLS-1$", "+    case 422 : if (DEBUG) { System.out.println(\"ClassInstanceCreationExpression ::=...\"); }  //$NON-NLS-1$", "-    case 394 : if (DEBUG) { System.out.println(\"ClassInstanceCreationExpression ::=...\"); }  //$NON-NLS-1$", "+    case 423 : if (DEBUG) { System.out.println(\"ClassInstanceCreationExpression ::=...\"); }  //$NON-NLS-1$", "-    case 395 : if (DEBUG) { System.out.println(\"EnterInstanceCreationArgumentList ::=\"); }  //$NON-NLS-1$", "+    case 424 : if (DEBUG) { System.out.println(\"EnterInstanceCreationArgumentList ::=\"); }  //$NON-NLS-1$", "-    case 396 : if (DEBUG) { System.out.println(\"ClassInstanceCreationExpressionName ::= Name DOT\"); }  //$NON-NLS-1$", "+    case 425 : if (DEBUG) { System.out.println(\"ClassInstanceCreationExpressionName ::= Name DOT\"); }  //$NON-NLS-1$", "-    case 397 : if (DEBUG) { System.out.println(\"UnqualifiedClassBodyopt ::=\"); }  //$NON-NLS-1$", "+    case 426 : if (DEBUG) { System.out.println(\"UnqualifiedClassBodyopt ::=\"); }  //$NON-NLS-1$", "-    case 399 : if (DEBUG) { System.out.println(\"UnqualifiedEnterAnonymousClassBody ::=\"); }  //$NON-NLS-1$", "+    case 428 : if (DEBUG) { System.out.println(\"UnqualifiedEnterAnonymousClassBody ::=\"); }  //$NON-NLS-1$", "-    case 400 : if (DEBUG) { System.out.println(\"QualifiedClassBodyopt ::=\"); }  //$NON-NLS-1$", "+    case 429 : if (DEBUG) { System.out.println(\"QualifiedClassBodyopt ::=\"); }  //$NON-NLS-1$", "-    case 402 : if (DEBUG) { System.out.println(\"QualifiedEnterAnonymousClassBody ::=\"); }  //$NON-NLS-1$", "+    case 431 : if (DEBUG) { System.out.println(\"QualifiedEnterAnonymousClassBody ::=\"); }  //$NON-NLS-1$", "-    case 404 : if (DEBUG) { System.out.println(\"ArgumentList ::= ArgumentList COMMA Expression\"); }  //$NON-NLS-1$", "+    case 433 : if (DEBUG) { System.out.println(\"ArgumentList ::= ArgumentList COMMA Expression\"); }  //$NON-NLS-1$", "-    case 405 : if (DEBUG) { System.out.println(\"ArrayCreationHeader ::= new PrimitiveType...\"); }  //$NON-NLS-1$", "+    case 434 : if (DEBUG) { System.out.println(\"ArrayCreationHeader ::= new Annotationsopt PrimitiveType\"); }  //$NON-NLS-1$", "-    case 406 : if (DEBUG) { System.out.println(\"ArrayCreationHeader ::= new ClassOrInterfaceType...\"); }  //$NON-NLS-1$", "+    case 435 : if (DEBUG) { System.out.println(\"ArrayCreationHeader ::= new ClassOrInterfaceType...\"); }  //$NON-NLS-1$", "-    case 407 : if (DEBUG) { System.out.println(\"ArrayCreationWithoutArrayInitializer ::= new...\"); }  //$NON-NLS-1$", "+    case 436 : if (DEBUG) { System.out.println(\"ArrayCreationWithoutArrayInitializer ::= new...\"); }  //$NON-NLS-1$", "-    case 408 : if (DEBUG) { System.out.println(\"ArrayCreationWithArrayInitializer ::= new PrimitiveType\"); }  //$NON-NLS-1$", "+    case 437 : if (DEBUG) { System.out.println(\"ArrayCreationWithArrayInitializer ::= new Annotationsopt\"); }  //$NON-NLS-1$", "-    case 409 : if (DEBUG) { System.out.println(\"ArrayCreationWithoutArrayInitializer ::= new...\"); }  //$NON-NLS-1$", "+    case 438 : if (DEBUG) { System.out.println(\"ArrayCreationWithoutArrayInitializer ::= new...\"); }  //$NON-NLS-1$", "-    case 410 : if (DEBUG) { System.out.println(\"ArrayCreationWithArrayInitializer ::= new...\"); }  //$NON-NLS-1$", "+    case 439 : if (DEBUG) { System.out.println(\"ArrayCreationWithArrayInitializer ::= new...\"); }  //$NON-NLS-1$", "-    case 412 : if (DEBUG) { System.out.println(\"DimWithOrWithOutExprs ::= DimWithOrWithOutExprs...\"); }  //$NON-NLS-1$", "+    case 441 : if (DEBUG) { System.out.println(\"DimWithOrWithOutExprs ::= DimWithOrWithOutExprs...\"); }  //$NON-NLS-1$", "-     case 414 : if (DEBUG) { System.out.println(\"DimWithOrWithOutExpr ::= LBRACKET RBRACKET\"); }  //$NON-NLS-1$", "+     case 444 : if (DEBUG) { System.out.println(\"DimWithOrWithOutExpr ::= LBRACKET...\"); }  //$NON-NLS-1$", "-     case 415 : if (DEBUG) { System.out.println(\"Dims ::= DimsLoop\"); }  //$NON-NLS-1$", "+     case 445 : if (DEBUG) { System.out.println(\"DimWithOrWithOutExpr ::= TypeAnnotations LBRACKET...\"); }  //$NON-NLS-1$", "+\t\t    consumeDimWithOrWithOutExpr();  ", "+\t\t\tbreak;", "+ ", "+     case 446 : if (DEBUG) { System.out.println(\"DimsoptAnnotsopt ::=\"); }  //$NON-NLS-1$", "+\t\t    consumeEmptyDimsoptAnnotsopt();  ", "+\t\t\tbreak;", "+ ", "+     case 447 : if (DEBUG) { System.out.println(\"DimsoptAnnotsopt -> DimsAnnotLoop\"); }  //$NON-NLS-1$", "+\t\t    consumeDimsWithTrailingAnnotsopt();  ", "+\t\t\tbreak;", "+ ", "+     case 450 : if (DEBUG) { System.out.println(\"OneDimOrAnnot ::= Annotation\"); }  //$NON-NLS-1$", "+\t\t    consumeTypeAnnotation(true);  ", "+\t\t\tbreak;", "+ ", "+     case 451 : if (DEBUG) { System.out.println(\"OneDimOrAnnot ::= LBRACKET RBRACKET\"); }  //$NON-NLS-1$", "+\t\t    consumeOneDimLoop(true);  ", "+\t\t\tbreak;", "+ ", "+     case 452 : if (DEBUG) { System.out.println(\"TypeAnnotations ::= Annotation\"); }  //$NON-NLS-1$", "+\t\t    consumeTypeAnnotation(false);  ", "+\t\t\tbreak;", "+ ", "+     case 453 : if (DEBUG) { System.out.println(\"TypeAnnotations ::= TypeAnnotations Annotation\"); }  //$NON-NLS-1$", "+\t\t    consumeOneMoreTypeAnnotation();  ", "+\t\t\tbreak;", "+ ", "+     case 454 : if (DEBUG) { System.out.println(\"Dims ::= DimsLoop\"); }  //$NON-NLS-1$", "-     case 418 : if (DEBUG) { System.out.println(\"OneDimLoop ::= LBRACKET RBRACKET\"); }  //$NON-NLS-1$", "-\t\t    consumeOneDimLoop();  ", "+     case 457 : if (DEBUG) { System.out.println(\"OneDimLoop ::= LBRACKET RBRACKET\"); }  //$NON-NLS-1$", "+\t\t    consumeOneDimLoop(false);  ", "-    case 419 : if (DEBUG) { System.out.println(\"FieldAccess ::= Primary DOT Identifier\"); }  //$NON-NLS-1$", "+     case 458 : if (DEBUG) { System.out.println(\"OneDimLoop ::= TypeAnnotations LBRACKET RBRACKET\"); }  //$NON-NLS-1$", "+\t\t    consumeOneDimLoopWithAnnotations();  ", "+\t\t\tbreak;", "+ ", "+    case 459 : if (DEBUG) { System.out.println(\"FieldAccess ::= Primary DOT Identifier\"); }  //$NON-NLS-1$", "-    case 420 : if (DEBUG) { System.out.println(\"FieldAccess ::= super DOT Identifier\"); }  //$NON-NLS-1$", "+    case 460 : if (DEBUG) { System.out.println(\"FieldAccess ::= super DOT Identifier\"); }  //$NON-NLS-1$", "-    case 421 : if (DEBUG) { System.out.println(\"MethodInvocation ::= Name LPAREN ArgumentListopt RPAREN\"); }  //$NON-NLS-1$", "+    case 461 : if (DEBUG) { System.out.println(\"MethodInvocation ::= Name LPAREN ArgumentListopt RPAREN\"); }  //$NON-NLS-1$", "-    case 422 : if (DEBUG) { System.out.println(\"MethodInvocation ::= Name DOT OnlyTypeArguments...\"); }  //$NON-NLS-1$", "+    case 462 : if (DEBUG) { System.out.println(\"MethodInvocation ::= Name DOT OnlyTypeArguments...\"); }  //$NON-NLS-1$", "-    case 423 : if (DEBUG) { System.out.println(\"MethodInvocation ::= Primary DOT OnlyTypeArguments...\"); }  //$NON-NLS-1$", "+    case 463 : if (DEBUG) { System.out.println(\"MethodInvocation ::= Primary DOT OnlyTypeArguments...\"); }  //$NON-NLS-1$", "-    case 424 : if (DEBUG) { System.out.println(\"MethodInvocation ::= Primary DOT Identifier LPAREN...\"); }  //$NON-NLS-1$", "+    case 464 : if (DEBUG) { System.out.println(\"MethodInvocation ::= Primary DOT Identifier LPAREN...\"); }  //$NON-NLS-1$", "-    case 425 : if (DEBUG) { System.out.println(\"MethodInvocation ::= super DOT OnlyTypeArguments...\"); }  //$NON-NLS-1$", "+    case 465 : if (DEBUG) { System.out.println(\"MethodInvocation ::= super DOT OnlyTypeArguments...\"); }  //$NON-NLS-1$", "-    case 426 : if (DEBUG) { System.out.println(\"MethodInvocation ::= super DOT Identifier LPAREN...\"); }  //$NON-NLS-1$", "+    case 466 : if (DEBUG) { System.out.println(\"MethodInvocation ::= super DOT Identifier LPAREN...\"); }  //$NON-NLS-1$", "-    case 427 : if (DEBUG) { System.out.println(\"ArrayAccess ::= Name LBRACKET Expression RBRACKET\"); }  //$NON-NLS-1$", "+    case 467 : if (DEBUG) { System.out.println(\"ArrayAccess ::= Name LBRACKET Expression RBRACKET\"); }  //$NON-NLS-1$", "-    case 428 : if (DEBUG) { System.out.println(\"ArrayAccess ::= PrimaryNoNewArray LBRACKET Expression...\"); }  //$NON-NLS-1$", "+    case 468 : if (DEBUG) { System.out.println(\"ArrayAccess ::= PrimaryNoNewArray LBRACKET Expression...\"); }  //$NON-NLS-1$", "-    case 429 : if (DEBUG) { System.out.println(\"ArrayAccess ::= ArrayCreationWithArrayInitializer...\"); }  //$NON-NLS-1$", "+    case 469 : if (DEBUG) { System.out.println(\"ArrayAccess ::= ArrayCreationWithArrayInitializer...\"); }  //$NON-NLS-1$", "-    case 431 : if (DEBUG) { System.out.println(\"PostfixExpression ::= Name\"); }  //$NON-NLS-1$", "+    case 471 : if (DEBUG) { System.out.println(\"PostfixExpression ::= Name\"); }  //$NON-NLS-1$", "-    case 434 : if (DEBUG) { System.out.println(\"PostIncrementExpression ::= PostfixExpression PLUS_PLUS\"); }  //$NON-NLS-1$", "+    case 474 : if (DEBUG) { System.out.println(\"PostIncrementExpression ::= PostfixExpression PLUS_PLUS\"); }  //$NON-NLS-1$", "-    case 435 : if (DEBUG) { System.out.println(\"PostDecrementExpression ::= PostfixExpression...\"); }  //$NON-NLS-1$", "+    case 475 : if (DEBUG) { System.out.println(\"PostDecrementExpression ::= PostfixExpression...\"); }  //$NON-NLS-1$", "-    case 436 : if (DEBUG) { System.out.println(\"PushPosition ::=\"); }  //$NON-NLS-1$", "+    case 476 : if (DEBUG) { System.out.println(\"PushPosition ::=\"); }  //$NON-NLS-1$", "-    case 439 : if (DEBUG) { System.out.println(\"UnaryExpression ::= PLUS PushPosition UnaryExpression\"); }  //$NON-NLS-1$", "+    case 479 : if (DEBUG) { System.out.println(\"UnaryExpression ::= PLUS PushPosition UnaryExpression\"); }  //$NON-NLS-1$", "-    case 440 : if (DEBUG) { System.out.println(\"UnaryExpression ::= MINUS PushPosition UnaryExpression\"); }  //$NON-NLS-1$", "+    case 480 : if (DEBUG) { System.out.println(\"UnaryExpression ::= MINUS PushPosition UnaryExpression\"); }  //$NON-NLS-1$", "-    case 442 : if (DEBUG) { System.out.println(\"PreIncrementExpression ::= PLUS_PLUS PushPosition...\"); }  //$NON-NLS-1$", "+    case 482 : if (DEBUG) { System.out.println(\"PreIncrementExpression ::= PLUS_PLUS PushPosition...\"); }  //$NON-NLS-1$", "-    case 443 : if (DEBUG) { System.out.println(\"PreDecrementExpression ::= MINUS_MINUS PushPosition...\"); }  //$NON-NLS-1$", "+    case 483 : if (DEBUG) { System.out.println(\"PreDecrementExpression ::= MINUS_MINUS PushPosition...\"); }  //$NON-NLS-1$", "-    case 445 : if (DEBUG) { System.out.println(\"UnaryExpressionNotPlusMinus ::= TWIDDLE PushPosition...\"); }  //$NON-NLS-1$", "+    case 485 : if (DEBUG) { System.out.println(\"UnaryExpressionNotPlusMinus ::= TWIDDLE PushPosition...\"); }  //$NON-NLS-1$", "-    case 446 : if (DEBUG) { System.out.println(\"UnaryExpressionNotPlusMinus ::= NOT PushPosition...\"); }  //$NON-NLS-1$", "+    case 486 : if (DEBUG) { System.out.println(\"UnaryExpressionNotPlusMinus ::= NOT PushPosition...\"); }  //$NON-NLS-1$", "-    case 448 : if (DEBUG) { System.out.println(\"CastExpression ::= PushLPAREN PrimitiveType Dimsopt...\"); }  //$NON-NLS-1$", "+    case 488 : if (DEBUG) { System.out.println(\"CastExpression ::= PushLPAREN PrimitiveType Dimsopt...\"); }  //$NON-NLS-1$", "-    case 449 : if (DEBUG) { System.out.println(\"CastExpression ::= PushLPAREN Name...\"); }  //$NON-NLS-1$", "+    case 489 : if (DEBUG) { System.out.println(\"CastExpression ::= PushLPAREN Modifiers PrimitiveType...\"); }  //$NON-NLS-1$", "+\t\t    consumeCastExpressionWithPrimitiveTypeWithTypeAnnotations();  ", "+\t\t\tbreak;", "+ ", "+    case 490 : if (DEBUG) { System.out.println(\"CastExpression ::= PushLPAREN Name...\"); }  //$NON-NLS-1$", "-    case 450 : if (DEBUG) { System.out.println(\"CastExpression ::= PushLPAREN Name...\"); }  //$NON-NLS-1$", "+    case 491 : if (DEBUG) { System.out.println(\"CastExpression ::= PushLPAREN Modifiers Name...\"); }  //$NON-NLS-1$", "+\t\t    consumeCastExpressionWithGenericsArrayWithTypeAnnotations();  ", "+\t\t\tbreak;", "+ ", "+    case 492 : if (DEBUG) { System.out.println(\"CastExpression ::= PushLPAREN Name...\"); }  //$NON-NLS-1$", "-    case 451 : if (DEBUG) { System.out.println(\"CastExpression ::= PushLPAREN Name PushRPAREN...\"); }  //$NON-NLS-1$", "+    case 493 : if (DEBUG) { System.out.println(\"CastExpression ::= PushLPAREN Modifiers Name...\"); }  //$NON-NLS-1$", "+\t\t    consumeCastExpressionWithQualifiedGenericsArrayWithTypeAnnotations();  ", "+\t\t\tbreak;", "+ ", "+    case 494 : if (DEBUG) { System.out.println(\"CastExpression ::= PushLPAREN Name...\"); }  //$NON-NLS-1$", "-    case 452 : if (DEBUG) { System.out.println(\"CastExpression ::= PushLPAREN Name Dims PushRPAREN...\"); }  //$NON-NLS-1$", "+    case 495 : if (DEBUG) { System.out.println(\"CastExpression ::= PushLPAREN Modifiers Name...\"); }  //$NON-NLS-1$", "+\t\t    consumeCastExpressionLL1WithTypeAnnotations();  ", "+\t\t\tbreak;", "+ ", "+    case 496 : if (DEBUG) { System.out.println(\"CastExpression ::= PushLPAREN Name Dims...\"); }  //$NON-NLS-1$", "-    case 453 : if (DEBUG) { System.out.println(\"OnlyTypeArgumentsForCastExpression ::= OnlyTypeArguments\"); }  //$NON-NLS-1$", "+    case 497 : if (DEBUG) { System.out.println(\"CastExpression ::= PushLPAREN Modifiers Name Dims...\"); }  //$NON-NLS-1$", "+\t\t    consumeCastExpressionWithNameArrayWithTypeAnnotations();  ", "+\t\t\tbreak;", "+ ", "+    case 498 : if (DEBUG) { System.out.println(\"OnlyTypeArgumentsForCastExpression ::= OnlyTypeArguments\"); }  //$NON-NLS-1$", "-    case 454 : if (DEBUG) { System.out.println(\"InsideCastExpression ::=\"); }  //$NON-NLS-1$", "+    case 499 : if (DEBUG) { System.out.println(\"InsideCastExpression ::=\"); }  //$NON-NLS-1$", "-    case 455 : if (DEBUG) { System.out.println(\"InsideCastExpressionLL1 ::=\"); }  //$NON-NLS-1$", "+    case 500 : if (DEBUG) { System.out.println(\"InsideCastExpressionLL1 ::=\"); }  //$NON-NLS-1$", "-    case 456 : if (DEBUG) { System.out.println(\"InsideCastExpressionWithQualifiedGenerics ::=\"); }  //$NON-NLS-1$", "+    case 501 : if (DEBUG) { System.out.println(\"InsideCastExpressionWithQualifiedGenerics ::=\"); }  //$NON-NLS-1$", "-    case 458 : if (DEBUG) { System.out.println(\"MultiplicativeExpression ::= MultiplicativeExpression...\"); }  //$NON-NLS-1$", "+    case 502 : if (DEBUG) { System.out.println(\"InsideCastExpressionWithAnnotatedQualifiedGenerics ::=\"); }  //$NON-NLS-1$", "+\t\t    consumeInsideCastExpressionWithAnnotatedQualifiedGenerics();  ", "+\t\t\tbreak;", "+ ", "+    case 504 : if (DEBUG) { System.out.println(\"MultiplicativeExpression ::= MultiplicativeExpression...\"); }  //$NON-NLS-1$", "-    case 459 : if (DEBUG) { System.out.println(\"MultiplicativeExpression ::= MultiplicativeExpression...\"); }  //$NON-NLS-1$", "+    case 505 : if (DEBUG) { System.out.println(\"MultiplicativeExpression ::= MultiplicativeExpression...\"); }  //$NON-NLS-1$", "-    case 460 : if (DEBUG) { System.out.println(\"MultiplicativeExpression ::= MultiplicativeExpression...\"); }  //$NON-NLS-1$", "+    case 506 : if (DEBUG) { System.out.println(\"MultiplicativeExpression ::= MultiplicativeExpression...\"); }  //$NON-NLS-1$", "-    case 462 : if (DEBUG) { System.out.println(\"AdditiveExpression ::= AdditiveExpression PLUS...\"); }  //$NON-NLS-1$", "+    case 508 : if (DEBUG) { System.out.println(\"AdditiveExpression ::= AdditiveExpression PLUS...\"); }  //$NON-NLS-1$", "-    case 463 : if (DEBUG) { System.out.println(\"AdditiveExpression ::= AdditiveExpression MINUS...\"); }  //$NON-NLS-1$", "+    case 509 : if (DEBUG) { System.out.println(\"AdditiveExpression ::= AdditiveExpression MINUS...\"); }  //$NON-NLS-1$", "-    case 465 : if (DEBUG) { System.out.println(\"ShiftExpression ::= ShiftExpression LEFT_SHIFT...\"); }  //$NON-NLS-1$", "+    case 511 : if (DEBUG) { System.out.println(\"ShiftExpression ::= ShiftExpression LEFT_SHIFT...\"); }  //$NON-NLS-1$", "-    case 466 : if (DEBUG) { System.out.println(\"ShiftExpression ::= ShiftExpression RIGHT_SHIFT...\"); }  //$NON-NLS-1$", "+    case 512 : if (DEBUG) { System.out.println(\"ShiftExpression ::= ShiftExpression RIGHT_SHIFT...\"); }  //$NON-NLS-1$", "-    case 467 : if (DEBUG) { System.out.println(\"ShiftExpression ::= ShiftExpression UNSIGNED_RIGHT_SHIFT\"); }  //$NON-NLS-1$", "+    case 513 : if (DEBUG) { System.out.println(\"ShiftExpression ::= ShiftExpression UNSIGNED_RIGHT_SHIFT\"); }  //$NON-NLS-1$", "-    case 469 : if (DEBUG) { System.out.println(\"RelationalExpression ::= RelationalExpression LESS...\"); }  //$NON-NLS-1$", "+    case 515 : if (DEBUG) { System.out.println(\"RelationalExpression ::= RelationalExpression LESS...\"); }  //$NON-NLS-1$", "-    case 470 : if (DEBUG) { System.out.println(\"RelationalExpression ::= RelationalExpression GREATER...\"); }  //$NON-NLS-1$", "+    case 516 : if (DEBUG) { System.out.println(\"RelationalExpression ::= RelationalExpression GREATER...\"); }  //$NON-NLS-1$", "-    case 471 : if (DEBUG) { System.out.println(\"RelationalExpression ::= RelationalExpression LESS_EQUAL\"); }  //$NON-NLS-1$", "+    case 517 : if (DEBUG) { System.out.println(\"RelationalExpression ::= RelationalExpression LESS_EQUAL\"); }  //$NON-NLS-1$", "-    case 472 : if (DEBUG) { System.out.println(\"RelationalExpression ::= RelationalExpression...\"); }  //$NON-NLS-1$", "+    case 518 : if (DEBUG) { System.out.println(\"RelationalExpression ::= RelationalExpression...\"); }  //$NON-NLS-1$", "-    case 474 : if (DEBUG) { System.out.println(\"InstanceofExpression ::= InstanceofExpression instanceof\"); }  //$NON-NLS-1$", "+    case 520 : if (DEBUG) { System.out.println(\"InstanceofExpression ::= InstanceofExpression instanceof\"); }  //$NON-NLS-1$", "-    case 476 : if (DEBUG) { System.out.println(\"EqualityExpression ::= EqualityExpression EQUAL_EQUAL...\"); }  //$NON-NLS-1$", "+    case 522 : if (DEBUG) { System.out.println(\"EqualityExpression ::= EqualityExpression EQUAL_EQUAL...\"); }  //$NON-NLS-1$", "-    case 477 : if (DEBUG) { System.out.println(\"EqualityExpression ::= EqualityExpression NOT_EQUAL...\"); }  //$NON-NLS-1$", "+    case 523 : if (DEBUG) { System.out.println(\"EqualityExpression ::= EqualityExpression NOT_EQUAL...\"); }  //$NON-NLS-1$", "-    case 479 : if (DEBUG) { System.out.println(\"AndExpression ::= AndExpression AND EqualityExpression\"); }  //$NON-NLS-1$", "+    case 525 : if (DEBUG) { System.out.println(\"AndExpression ::= AndExpression AND EqualityExpression\"); }  //$NON-NLS-1$", "-    case 481 : if (DEBUG) { System.out.println(\"ExclusiveOrExpression ::= ExclusiveOrExpression XOR...\"); }  //$NON-NLS-1$", "+    case 527 : if (DEBUG) { System.out.println(\"ExclusiveOrExpression ::= ExclusiveOrExpression XOR...\"); }  //$NON-NLS-1$", "-    case 483 : if (DEBUG) { System.out.println(\"InclusiveOrExpression ::= InclusiveOrExpression OR...\"); }  //$NON-NLS-1$", "+    case 529 : if (DEBUG) { System.out.println(\"InclusiveOrExpression ::= InclusiveOrExpression OR...\"); }  //$NON-NLS-1$", "-    case 485 : if (DEBUG) { System.out.println(\"ConditionalAndExpression ::= ConditionalAndExpression...\"); }  //$NON-NLS-1$", "+    case 531 : if (DEBUG) { System.out.println(\"ConditionalAndExpression ::= ConditionalAndExpression...\"); }  //$NON-NLS-1$", "-    case 487 : if (DEBUG) { System.out.println(\"ConditionalOrExpression ::= ConditionalOrExpression...\"); }  //$NON-NLS-1$", "+    case 533 : if (DEBUG) { System.out.println(\"ConditionalOrExpression ::= ConditionalOrExpression...\"); }  //$NON-NLS-1$", "-    case 489 : if (DEBUG) { System.out.println(\"ConditionalExpression ::= ConditionalOrExpression...\"); }  //$NON-NLS-1$", "+    case 535 : if (DEBUG) { System.out.println(\"ConditionalExpression ::= ConditionalOrExpression...\"); }  //$NON-NLS-1$", "-    case 492 : if (DEBUG) { System.out.println(\"Assignment ::= PostfixExpression AssignmentOperator...\"); }  //$NON-NLS-1$", "+    case 538 : if (DEBUG) { System.out.println(\"Assignment ::= PostfixExpression AssignmentOperator...\"); }  //$NON-NLS-1$", "-    case 494 : if (DEBUG) { System.out.println(\"Assignment ::= InvalidArrayInitializerAssignement\"); }  //$NON-NLS-1$", "+    case 540 : if (DEBUG) { System.out.println(\"Assignment ::= InvalidArrayInitializerAssignement\"); }  //$NON-NLS-1$", "-    case 495 : if (DEBUG) { System.out.println(\"AssignmentOperator ::= EQUAL\"); }  //$NON-NLS-1$", "+    case 541 : if (DEBUG) { System.out.println(\"AssignmentOperator ::= EQUAL\"); }  //$NON-NLS-1$", "-    case 496 : if (DEBUG) { System.out.println(\"AssignmentOperator ::= MULTIPLY_EQUAL\"); }  //$NON-NLS-1$", "+    case 542 : if (DEBUG) { System.out.println(\"AssignmentOperator ::= MULTIPLY_EQUAL\"); }  //$NON-NLS-1$", "-    case 497 : if (DEBUG) { System.out.println(\"AssignmentOperator ::= DIVIDE_EQUAL\"); }  //$NON-NLS-1$", "+    case 543 : if (DEBUG) { System.out.println(\"AssignmentOperator ::= DIVIDE_EQUAL\"); }  //$NON-NLS-1$", "-    case 498 : if (DEBUG) { System.out.println(\"AssignmentOperator ::= REMAINDER_EQUAL\"); }  //$NON-NLS-1$", "+    case 544 : if (DEBUG) { System.out.println(\"AssignmentOperator ::= REMAINDER_EQUAL\"); }  //$NON-NLS-1$", "-    case 499 : if (DEBUG) { System.out.println(\"AssignmentOperator ::= PLUS_EQUAL\"); }  //$NON-NLS-1$", "+    case 545 : if (DEBUG) { System.out.println(\"AssignmentOperator ::= PLUS_EQUAL\"); }  //$NON-NLS-1$", "-    case 500 : if (DEBUG) { System.out.println(\"AssignmentOperator ::= MINUS_EQUAL\"); }  //$NON-NLS-1$", "+    case 546 : if (DEBUG) { System.out.println(\"AssignmentOperator ::= MINUS_EQUAL\"); }  //$NON-NLS-1$", "-    case 501 : if (DEBUG) { System.out.println(\"AssignmentOperator ::= LEFT_SHIFT_EQUAL\"); }  //$NON-NLS-1$", "+    case 547 : if (DEBUG) { System.out.println(\"AssignmentOperator ::= LEFT_SHIFT_EQUAL\"); }  //$NON-NLS-1$", "-    case 502 : if (DEBUG) { System.out.println(\"AssignmentOperator ::= RIGHT_SHIFT_EQUAL\"); }  //$NON-NLS-1$", "+    case 548 : if (DEBUG) { System.out.println(\"AssignmentOperator ::= RIGHT_SHIFT_EQUAL\"); }  //$NON-NLS-1$", "-    case 503 : if (DEBUG) { System.out.println(\"AssignmentOperator ::= UNSIGNED_RIGHT_SHIFT_EQUAL\"); }  //$NON-NLS-1$", "+    case 549 : if (DEBUG) { System.out.println(\"AssignmentOperator ::= UNSIGNED_RIGHT_SHIFT_EQUAL\"); }  //$NON-NLS-1$", "-    case 504 : if (DEBUG) { System.out.println(\"AssignmentOperator ::= AND_EQUAL\"); }  //$NON-NLS-1$", "+    case 550 : if (DEBUG) { System.out.println(\"AssignmentOperator ::= AND_EQUAL\"); }  //$NON-NLS-1$", "-    case 505 : if (DEBUG) { System.out.println(\"AssignmentOperator ::= XOR_EQUAL\"); }  //$NON-NLS-1$", "+    case 551 : if (DEBUG) { System.out.println(\"AssignmentOperator ::= XOR_EQUAL\"); }  //$NON-NLS-1$", "-    case 506 : if (DEBUG) { System.out.println(\"AssignmentOperator ::= OR_EQUAL\"); }  //$NON-NLS-1$", "+    case 552 : if (DEBUG) { System.out.println(\"AssignmentOperator ::= OR_EQUAL\"); }  //$NON-NLS-1$", "-    case 507 : if (DEBUG) { System.out.println(\"Expression ::= AssignmentExpression\"); }  //$NON-NLS-1$", "+    case 553 : if (DEBUG) { System.out.println(\"Expression ::= AssignmentExpression\"); }  //$NON-NLS-1$", "-    case 510 : if (DEBUG) { System.out.println(\"Expressionopt ::=\"); }  //$NON-NLS-1$", "+    case 556 : if (DEBUG) { System.out.println(\"Expressionopt ::=\"); }  //$NON-NLS-1$", "-    case 515 : if (DEBUG) { System.out.println(\"ClassBodyDeclarationsopt ::=\"); }  //$NON-NLS-1$", "+    case 561 : if (DEBUG) { System.out.println(\"ClassBodyDeclarationsopt ::=\"); }  //$NON-NLS-1$", "-    case 516 : if (DEBUG) { System.out.println(\"ClassBodyDeclarationsopt ::= NestedType...\"); }  //$NON-NLS-1$", "+    case 562 : if (DEBUG) { System.out.println(\"ClassBodyDeclarationsopt ::= NestedType...\"); }  //$NON-NLS-1$", "-     case 517 : if (DEBUG) { System.out.println(\"Modifiersopt ::=\"); }  //$NON-NLS-1$", "+     case 563 : if (DEBUG) { System.out.println(\"Modifiersopt ::=\"); }  //$NON-NLS-1$", "-    case 518 : if (DEBUG) { System.out.println(\"Modifiersopt ::= Modifiers\"); }  //$NON-NLS-1$", "+    case 564 : if (DEBUG) { System.out.println(\"Modifiersopt ::= Modifiers\"); }  //$NON-NLS-1$", "-    case 519 : if (DEBUG) { System.out.println(\"BlockStatementsopt ::=\"); }  //$NON-NLS-1$", "+    case 565 : if (DEBUG) { System.out.println(\"BlockStatementsopt ::=\"); }  //$NON-NLS-1$", "-     case 521 : if (DEBUG) { System.out.println(\"Dimsopt ::=\"); }  //$NON-NLS-1$", "+     case 567 : if (DEBUG) { System.out.println(\"Dimsopt ::=\"); }  //$NON-NLS-1$", "-     case 523 : if (DEBUG) { System.out.println(\"ArgumentListopt ::=\"); }  //$NON-NLS-1$", "+     case 569 : if (DEBUG) { System.out.println(\"ArgumentListopt ::=\"); }  //$NON-NLS-1$", "-    case 527 : if (DEBUG) { System.out.println(\"FormalParameterListopt ::=\"); }  //$NON-NLS-1$", "+    case 573 : if (DEBUG) { System.out.println(\"FormalParameterListopt ::=\"); }  //$NON-NLS-1$", "-     case 531 : if (DEBUG) { System.out.println(\"InterfaceMemberDeclarationsopt ::=\"); }  //$NON-NLS-1$", "+     case 577 : if (DEBUG) { System.out.println(\"InterfaceMemberDeclarationsopt ::=\"); }  //$NON-NLS-1$", "-     case 532 : if (DEBUG) { System.out.println(\"InterfaceMemberDeclarationsopt ::= NestedType...\"); }  //$NON-NLS-1$", "+     case 578 : if (DEBUG) { System.out.println(\"InterfaceMemberDeclarationsopt ::= NestedType...\"); }  //$NON-NLS-1$", "-    case 533 : if (DEBUG) { System.out.println(\"NestedType ::=\"); }  //$NON-NLS-1$", "+    case 579 : if (DEBUG) { System.out.println(\"NestedType ::=\"); }  //$NON-NLS-1$", "-     case 534 : if (DEBUG) { System.out.println(\"ForInitopt ::=\"); }  //$NON-NLS-1$", "+     case 580 : if (DEBUG) { System.out.println(\"ForInitopt ::=\"); }  //$NON-NLS-1$", "-     case 536 : if (DEBUG) { System.out.println(\"ForUpdateopt ::=\"); }  //$NON-NLS-1$", "+     case 582 : if (DEBUG) { System.out.println(\"ForUpdateopt ::=\"); }  //$NON-NLS-1$", "-     case 540 : if (DEBUG) { System.out.println(\"Catchesopt ::=\"); }  //$NON-NLS-1$", "+     case 586 : if (DEBUG) { System.out.println(\"Catchesopt ::=\"); }  //$NON-NLS-1$", "-     case 542 : if (DEBUG) { System.out.println(\"EnumDeclaration ::= EnumHeader EnumBody\"); }  //$NON-NLS-1$", "+     case 588 : if (DEBUG) { System.out.println(\"EnumDeclaration ::= EnumHeader EnumBody\"); }  //$NON-NLS-1$", "-     case 543 : if (DEBUG) { System.out.println(\"EnumHeader ::= EnumHeaderName ClassHeaderImplementsopt\"); }  //$NON-NLS-1$", "+     case 589 : if (DEBUG) { System.out.println(\"EnumHeader ::= EnumHeaderName ClassHeaderImplementsopt\"); }  //$NON-NLS-1$", "-     case 544 : if (DEBUG) { System.out.println(\"EnumHeaderName ::= Modifiersopt enum Identifier\"); }  //$NON-NLS-1$", "+     case 590 : if (DEBUG) { System.out.println(\"EnumHeaderName ::= Modifiersopt enum Identifier\"); }  //$NON-NLS-1$", "-     case 545 : if (DEBUG) { System.out.println(\"EnumHeaderName ::= Modifiersopt enum Identifier...\"); }  //$NON-NLS-1$", "+     case 591 : if (DEBUG) { System.out.println(\"EnumHeaderName ::= Modifiersopt enum Identifier...\"); }  //$NON-NLS-1$", "-     case 546 : if (DEBUG) { System.out.println(\"EnumBody ::= LBRACE EnumBodyDeclarationsopt RBRACE\"); }  //$NON-NLS-1$", "+     case 592 : if (DEBUG) { System.out.println(\"EnumBody ::= LBRACE EnumBodyDeclarationsopt RBRACE\"); }  //$NON-NLS-1$", "-     case 547 : if (DEBUG) { System.out.println(\"EnumBody ::= LBRACE COMMA EnumBodyDeclarationsopt...\"); }  //$NON-NLS-1$", "+     case 593 : if (DEBUG) { System.out.println(\"EnumBody ::= LBRACE COMMA EnumBodyDeclarationsopt...\"); }  //$NON-NLS-1$", "-     case 548 : if (DEBUG) { System.out.println(\"EnumBody ::= LBRACE EnumConstants COMMA...\"); }  //$NON-NLS-1$", "+     case 594 : if (DEBUG) { System.out.println(\"EnumBody ::= LBRACE EnumConstants COMMA...\"); }  //$NON-NLS-1$", "-     case 549 : if (DEBUG) { System.out.println(\"EnumBody ::= LBRACE EnumConstants...\"); }  //$NON-NLS-1$", "+     case 595 : if (DEBUG) { System.out.println(\"EnumBody ::= LBRACE EnumConstants...\"); }  //$NON-NLS-1$", "-    case 551 : if (DEBUG) { System.out.println(\"EnumConstants ::= EnumConstants COMMA EnumConstant\"); }  //$NON-NLS-1$", "+    case 597 : if (DEBUG) { System.out.println(\"EnumConstants ::= EnumConstants COMMA EnumConstant\"); }  //$NON-NLS-1$", "-    case 552 : if (DEBUG) { System.out.println(\"EnumConstantHeaderName ::= Modifiersopt Identifier\"); }  //$NON-NLS-1$", "+    case 598 : if (DEBUG) { System.out.println(\"EnumConstantHeaderName ::= Modifiersopt Identifier\"); }  //$NON-NLS-1$", "-    case 553 : if (DEBUG) { System.out.println(\"EnumConstantHeader ::= EnumConstantHeaderName...\"); }  //$NON-NLS-1$", "+    case 599 : if (DEBUG) { System.out.println(\"EnumConstantHeader ::= EnumConstantHeaderName...\"); }  //$NON-NLS-1$", "-    case 554 : if (DEBUG) { System.out.println(\"EnumConstant ::= EnumConstantHeader ForceNoDiet...\"); }  //$NON-NLS-1$", "+    case 600 : if (DEBUG) { System.out.println(\"EnumConstant ::= EnumConstantHeader ForceNoDiet...\"); }  //$NON-NLS-1$", "-    case 555 : if (DEBUG) { System.out.println(\"EnumConstant ::= EnumConstantHeader\"); }  //$NON-NLS-1$", "+    case 601 : if (DEBUG) { System.out.println(\"EnumConstant ::= EnumConstantHeader\"); }  //$NON-NLS-1$", "-    case 556 : if (DEBUG) { System.out.println(\"Arguments ::= LPAREN ArgumentListopt RPAREN\"); }  //$NON-NLS-1$", "+    case 602 : if (DEBUG) { System.out.println(\"Arguments ::= LPAREN ArgumentListopt RPAREN\"); }  //$NON-NLS-1$", "-    case 557 : if (DEBUG) { System.out.println(\"Argumentsopt ::=\"); }  //$NON-NLS-1$", "+    case 603 : if (DEBUG) { System.out.println(\"Argumentsopt ::=\"); }  //$NON-NLS-1$", "-    case 559 : if (DEBUG) { System.out.println(\"EnumDeclarations ::= SEMICOLON ClassBodyDeclarationsopt\"); }  //$NON-NLS-1$", "+    case 605 : if (DEBUG) { System.out.println(\"EnumDeclarations ::= SEMICOLON ClassBodyDeclarationsopt\"); }  //$NON-NLS-1$", "-    case 560 : if (DEBUG) { System.out.println(\"EnumBodyDeclarationsopt ::=\"); }  //$NON-NLS-1$", "+    case 606 : if (DEBUG) { System.out.println(\"EnumBodyDeclarationsopt ::=\"); }  //$NON-NLS-1$", "-    case 562 : if (DEBUG) { System.out.println(\"EnhancedForStatement ::= EnhancedForStatementHeader...\"); }  //$NON-NLS-1$", "+    case 608 : if (DEBUG) { System.out.println(\"EnhancedForStatement ::= EnhancedForStatementHeader...\"); }  //$NON-NLS-1$", "-    case 563 : if (DEBUG) { System.out.println(\"EnhancedForStatementNoShortIf ::=...\"); }  //$NON-NLS-1$", "+    case 609 : if (DEBUG) { System.out.println(\"EnhancedForStatementNoShortIf ::=...\"); }  //$NON-NLS-1$", "-    case 564 : if (DEBUG) { System.out.println(\"EnhancedForStatementHeaderInit ::= for LPAREN Type...\"); }  //$NON-NLS-1$", "+    case 610 : if (DEBUG) { System.out.println(\"EnhancedForStatementHeaderInit ::= for LPAREN Type0...\"); }  //$NON-NLS-1$", "-    case 565 : if (DEBUG) { System.out.println(\"EnhancedForStatementHeaderInit ::= for LPAREN Modifiers\"); }  //$NON-NLS-1$", "+    case 611 : if (DEBUG) { System.out.println(\"EnhancedForStatementHeaderInit ::= for LPAREN Modifiers\"); }  //$NON-NLS-1$", "-    case 566 : if (DEBUG) { System.out.println(\"EnhancedForStatementHeader ::=...\"); }  //$NON-NLS-1$", "+    case 612 : if (DEBUG) { System.out.println(\"EnhancedForStatementHeader ::=...\"); }  //$NON-NLS-1$", "-    case 567 : if (DEBUG) { System.out.println(\"SingleStaticImportDeclaration ::=...\"); }  //$NON-NLS-1$", "+    case 613 : if (DEBUG) { System.out.println(\"SingleStaticImportDeclaration ::=...\"); }  //$NON-NLS-1$", "-    case 568 : if (DEBUG) { System.out.println(\"SingleStaticImportDeclarationName ::= import static Name\"); }  //$NON-NLS-1$", "+    case 614 : if (DEBUG) { System.out.println(\"SingleStaticImportDeclarationName ::= import static Name\"); }  //$NON-NLS-1$", "-    case 569 : if (DEBUG) { System.out.println(\"StaticImportOnDemandDeclaration ::=...\"); }  //$NON-NLS-1$", "+    case 615 : if (DEBUG) { System.out.println(\"StaticImportOnDemandDeclaration ::=...\"); }  //$NON-NLS-1$", "-    case 570 : if (DEBUG) { System.out.println(\"StaticImportOnDemandDeclarationName ::= import static...\"); }  //$NON-NLS-1$", "+    case 616 : if (DEBUG) { System.out.println(\"StaticImportOnDemandDeclarationName ::= import static...\"); }  //$NON-NLS-1$", "-    case 571 : if (DEBUG) { System.out.println(\"TypeArguments ::= LESS TypeArgumentList1\"); }  //$NON-NLS-1$", "+    case 617 : if (DEBUG) { System.out.println(\"TypeArguments ::= LESS TypeArgumentList1\"); }  //$NON-NLS-1$", "-    case 572 : if (DEBUG) { System.out.println(\"OnlyTypeArguments ::= LESS TypeArgumentList1\"); }  //$NON-NLS-1$", "+    case 618 : if (DEBUG) { System.out.println(\"OnlyTypeArguments ::= LESS TypeArgumentList1\"); }  //$NON-NLS-1$", "-    case 574 : if (DEBUG) { System.out.println(\"TypeArgumentList1 ::= TypeArgumentList COMMA...\"); }  //$NON-NLS-1$", "+    case 620 : if (DEBUG) { System.out.println(\"TypeArgumentList1 ::= TypeArgumentList COMMA...\"); }  //$NON-NLS-1$", "-    case 576 : if (DEBUG) { System.out.println(\"TypeArgumentList ::= TypeArgumentList COMMA TypeArgument\"); }  //$NON-NLS-1$", "+    case 622 : if (DEBUG) { System.out.println(\"TypeArgumentList ::= TypeArgumentList COMMA TypeArgument\"); }  //$NON-NLS-1$", "-    case 577 : if (DEBUG) { System.out.println(\"TypeArgument ::= ReferenceType\"); }  //$NON-NLS-1$", "+    case 623 : if (DEBUG) { System.out.println(\"TypeArgument ::= ReferenceType\"); }  //$NON-NLS-1$", "-    case 581 : if (DEBUG) { System.out.println(\"ReferenceType1 ::= ReferenceType GREATER\"); }  //$NON-NLS-1$", "+    case 627 : if (DEBUG) { System.out.println(\"ReferenceType1 ::= ReferenceType GREATER\"); }  //$NON-NLS-1$", "-    case 582 : if (DEBUG) { System.out.println(\"ReferenceType1 ::= ClassOrInterface LESS...\"); }  //$NON-NLS-1$", "+    case 628 : if (DEBUG) { System.out.println(\"ReferenceType1 ::= ClassOrInterface LESS...\"); }  //$NON-NLS-1$", "-    case 584 : if (DEBUG) { System.out.println(\"TypeArgumentList2 ::= TypeArgumentList COMMA...\"); }  //$NON-NLS-1$", "+    case 629 : if (DEBUG) { System.out.println(\"ReferenceType1 ::= Modifiers ClassOrInterface LESS...\"); }  //$NON-NLS-1$", "+\t\t    consumeTypeArgumentReferenceType1WithTypeAnnotations();  ", "+\t\t\tbreak;", "+ ", "+    case 631 : if (DEBUG) { System.out.println(\"TypeArgumentList2 ::= TypeArgumentList COMMA...\"); }  //$NON-NLS-1$", "-    case 587 : if (DEBUG) { System.out.println(\"ReferenceType2 ::= ReferenceType RIGHT_SHIFT\"); }  //$NON-NLS-1$", "+    case 634 : if (DEBUG) { System.out.println(\"ReferenceType2 ::= ReferenceType RIGHT_SHIFT\"); }  //$NON-NLS-1$", "-    case 588 : if (DEBUG) { System.out.println(\"ReferenceType2 ::= ClassOrInterface LESS...\"); }  //$NON-NLS-1$", "+    case 635 : if (DEBUG) { System.out.println(\"ReferenceType2 ::= ClassOrInterface LESS...\"); }  //$NON-NLS-1$", "-    case 590 : if (DEBUG) { System.out.println(\"TypeArgumentList3 ::= TypeArgumentList COMMA...\"); }  //$NON-NLS-1$", "+    case 636 : if (DEBUG) { System.out.println(\"ReferenceType2 ::= Modifiers ClassOrInterface LESS...\"); }  //$NON-NLS-1$", "+\t\t    consumeTypeArgumentReferenceType2WithTypeAnnotations();  ", "+\t\t\tbreak;", "+ ", "+    case 638 : if (DEBUG) { System.out.println(\"TypeArgumentList3 ::= TypeArgumentList COMMA...\"); }  //$NON-NLS-1$", "-    case 593 : if (DEBUG) { System.out.println(\"ReferenceType3 ::= ReferenceType UNSIGNED_RIGHT_SHIFT\"); }  //$NON-NLS-1$", "+    case 641 : if (DEBUG) { System.out.println(\"ReferenceType3 ::= ReferenceType UNSIGNED_RIGHT_SHIFT\"); }  //$NON-NLS-1$", "-    case 594 : if (DEBUG) { System.out.println(\"Wildcard ::= QUESTION\"); }  //$NON-NLS-1$", "+    case 642 : if (DEBUG) { System.out.println(\"Wildcard ::= QUESTION\"); }  //$NON-NLS-1$", "-    case 595 : if (DEBUG) { System.out.println(\"Wildcard ::= QUESTION WildcardBounds\"); }  //$NON-NLS-1$", "+    case 643 : if (DEBUG) { System.out.println(\"Wildcard ::= QUESTION WildcardBounds\"); }  //$NON-NLS-1$", "-    case 596 : if (DEBUG) { System.out.println(\"WildcardBounds ::= extends ReferenceType\"); }  //$NON-NLS-1$", "+    case 644 : if (DEBUG) { System.out.println(\"WildcardBounds ::= extends ReferenceType\"); }  //$NON-NLS-1$", "-    case 597 : if (DEBUG) { System.out.println(\"WildcardBounds ::= super ReferenceType\"); }  //$NON-NLS-1$", "+    case 645 : if (DEBUG) { System.out.println(\"WildcardBounds ::= super ReferenceType\"); }  //$NON-NLS-1$", "-    case 598 : if (DEBUG) { System.out.println(\"Wildcard1 ::= QUESTION GREATER\"); }  //$NON-NLS-1$", "+    case 646 : if (DEBUG) { System.out.println(\"Wildcard1 ::= QUESTION GREATER\"); }  //$NON-NLS-1$", "-    case 599 : if (DEBUG) { System.out.println(\"Wildcard1 ::= QUESTION WildcardBounds1\"); }  //$NON-NLS-1$", "+    case 647 : if (DEBUG) { System.out.println(\"Wildcard1 ::= QUESTION WildcardBounds1\"); }  //$NON-NLS-1$", "-    case 600 : if (DEBUG) { System.out.println(\"WildcardBounds1 ::= extends ReferenceType1\"); }  //$NON-NLS-1$", "+    case 648 : if (DEBUG) { System.out.println(\"WildcardBounds1 ::= extends ReferenceType1\"); }  //$NON-NLS-1$", "-    case 601 : if (DEBUG) { System.out.println(\"WildcardBounds1 ::= super ReferenceType1\"); }  //$NON-NLS-1$", "+    case 649 : if (DEBUG) { System.out.println(\"WildcardBounds1 ::= super ReferenceType1\"); }  //$NON-NLS-1$", "-    case 602 : if (DEBUG) { System.out.println(\"Wildcard2 ::= QUESTION RIGHT_SHIFT\"); }  //$NON-NLS-1$", "+    case 650 : if (DEBUG) { System.out.println(\"Wildcard2 ::= QUESTION RIGHT_SHIFT\"); }  //$NON-NLS-1$", "-    case 603 : if (DEBUG) { System.out.println(\"Wildcard2 ::= QUESTION WildcardBounds2\"); }  //$NON-NLS-1$", "+    case 651 : if (DEBUG) { System.out.println(\"Wildcard2 ::= QUESTION WildcardBounds2\"); }  //$NON-NLS-1$", "-    case 604 : if (DEBUG) { System.out.println(\"WildcardBounds2 ::= extends ReferenceType2\"); }  //$NON-NLS-1$", "+    case 652 : if (DEBUG) { System.out.println(\"WildcardBounds2 ::= extends ReferenceType2\"); }  //$NON-NLS-1$", "-    case 605 : if (DEBUG) { System.out.println(\"WildcardBounds2 ::= super ReferenceType2\"); }  //$NON-NLS-1$", "+    case 653 : if (DEBUG) { System.out.println(\"WildcardBounds2 ::= super ReferenceType2\"); }  //$NON-NLS-1$", "-    case 606 : if (DEBUG) { System.out.println(\"Wildcard3 ::= QUESTION UNSIGNED_RIGHT_SHIFT\"); }  //$NON-NLS-1$", "+    case 654 : if (DEBUG) { System.out.println(\"Wildcard3 ::= QUESTION UNSIGNED_RIGHT_SHIFT\"); }  //$NON-NLS-1$", "-    case 607 : if (DEBUG) { System.out.println(\"Wildcard3 ::= QUESTION WildcardBounds3\"); }  //$NON-NLS-1$", "+    case 655 : if (DEBUG) { System.out.println(\"Wildcard3 ::= QUESTION WildcardBounds3\"); }  //$NON-NLS-1$", "-    case 608 : if (DEBUG) { System.out.println(\"WildcardBounds3 ::= extends ReferenceType3\"); }  //$NON-NLS-1$", "+    case 656 : if (DEBUG) { System.out.println(\"WildcardBounds3 ::= extends ReferenceType3\"); }  //$NON-NLS-1$", "-    case 609 : if (DEBUG) { System.out.println(\"WildcardBounds3 ::= super ReferenceType3\"); }  //$NON-NLS-1$", "+    case 657 : if (DEBUG) { System.out.println(\"WildcardBounds3 ::= super ReferenceType3\"); }  //$NON-NLS-1$", "-    case 610 : if (DEBUG) { System.out.println(\"TypeParameterHeader ::= Identifier\"); }  //$NON-NLS-1$", "+    case 658 : if (DEBUG) { System.out.println(\"PushZeroTypeAnnotations ::=\"); }  //$NON-NLS-1$", "+\t\t    consumeZeroTypeAnnotations(true);  ", "+\t\t\tbreak;", "+ ", "+    case 659 : if (DEBUG) { System.out.println(\"TypeParameterHeader ::= PushZeroTypeAnnotations...\"); }  //$NON-NLS-1$", "-    case 611 : if (DEBUG) { System.out.println(\"TypeParameters ::= LESS TypeParameterList1\"); }  //$NON-NLS-1$", "+    case 660 : if (DEBUG) { System.out.println(\"TypeParameterHeader ::= TypeAnnotations Identifier\"); }  //$NON-NLS-1$", "+\t\t    consumeTypeParameterHeader();  ", "+\t\t\tbreak;", "+ ", "+    case 661 : if (DEBUG) { System.out.println(\"TypeParameters ::= LESS TypeParameterList1\"); }  //$NON-NLS-1$", "-    case 613 : if (DEBUG) { System.out.println(\"TypeParameterList ::= TypeParameterList COMMA...\"); }  //$NON-NLS-1$", "+    case 663 : if (DEBUG) { System.out.println(\"TypeParameterList ::= TypeParameterList COMMA...\"); }  //$NON-NLS-1$", "-    case 615 : if (DEBUG) { System.out.println(\"TypeParameter ::= TypeParameterHeader extends...\"); }  //$NON-NLS-1$", "+    case 665 : if (DEBUG) { System.out.println(\"TypeParameter ::= TypeParameterHeader extends...\"); }  //$NON-NLS-1$", "-    case 616 : if (DEBUG) { System.out.println(\"TypeParameter ::= TypeParameterHeader extends...\"); }  //$NON-NLS-1$", "+    case 666 : if (DEBUG) { System.out.println(\"TypeParameter ::= TypeParameterHeader extends...\"); }  //$NON-NLS-1$", "-    case 618 : if (DEBUG) { System.out.println(\"AdditionalBoundList ::= AdditionalBoundList...\"); }  //$NON-NLS-1$", "+    case 668 : if (DEBUG) { System.out.println(\"AdditionalBoundList ::= AdditionalBoundList...\"); }  //$NON-NLS-1$", "-    case 619 : if (DEBUG) { System.out.println(\"AdditionalBound ::= AND ReferenceType\"); }  //$NON-NLS-1$", "+    case 669 : if (DEBUG) { System.out.println(\"AdditionalBound ::= AND ReferenceType\"); }  //$NON-NLS-1$", "-    case 621 : if (DEBUG) { System.out.println(\"TypeParameterList1 ::= TypeParameterList COMMA...\"); }  //$NON-NLS-1$", "+    case 671 : if (DEBUG) { System.out.println(\"TypeParameterList1 ::= TypeParameterList COMMA...\"); }  //$NON-NLS-1$", "-    case 622 : if (DEBUG) { System.out.println(\"TypeParameter1 ::= TypeParameterHeader GREATER\"); }  //$NON-NLS-1$", "+    case 672 : if (DEBUG) { System.out.println(\"TypeParameter1 ::= TypeParameterHeader GREATER\"); }  //$NON-NLS-1$", "-    case 623 : if (DEBUG) { System.out.println(\"TypeParameter1 ::= TypeParameterHeader extends...\"); }  //$NON-NLS-1$", "+    case 673 : if (DEBUG) { System.out.println(\"TypeParameter1 ::= TypeParameterHeader extends...\"); }  //$NON-NLS-1$", "-    case 624 : if (DEBUG) { System.out.println(\"TypeParameter1 ::= TypeParameterHeader extends...\"); }  //$NON-NLS-1$", "+    case 674 : if (DEBUG) { System.out.println(\"TypeParameter1 ::= TypeParameterHeader extends...\"); }  //$NON-NLS-1$", "-    case 626 : if (DEBUG) { System.out.println(\"AdditionalBoundList1 ::= AdditionalBoundList...\"); }  //$NON-NLS-1$", "+    case 676 : if (DEBUG) { System.out.println(\"AdditionalBoundList1 ::= AdditionalBoundList...\"); }  //$NON-NLS-1$", "-    case 627 : if (DEBUG) { System.out.println(\"AdditionalBound1 ::= AND ReferenceType1\"); }  //$NON-NLS-1$", "+    case 677 : if (DEBUG) { System.out.println(\"AdditionalBound1 ::= AND ReferenceType1\"); }  //$NON-NLS-1$", "-    case 633 : if (DEBUG) { System.out.println(\"UnaryExpression_NotName ::= PLUS PushPosition...\"); }  //$NON-NLS-1$", "+    case 683 : if (DEBUG) { System.out.println(\"UnaryExpression_NotName ::= PLUS PushPosition...\"); }  //$NON-NLS-1$", "-    case 634 : if (DEBUG) { System.out.println(\"UnaryExpression_NotName ::= MINUS PushPosition...\"); }  //$NON-NLS-1$", "+    case 684 : if (DEBUG) { System.out.println(\"UnaryExpression_NotName ::= MINUS PushPosition...\"); }  //$NON-NLS-1$", "-    case 637 : if (DEBUG) { System.out.println(\"UnaryExpressionNotPlusMinus_NotName ::= TWIDDLE...\"); }  //$NON-NLS-1$", "+    case 687 : if (DEBUG) { System.out.println(\"UnaryExpressionNotPlusMinus_NotName ::= TWIDDLE...\"); }  //$NON-NLS-1$", "-    case 638 : if (DEBUG) { System.out.println(\"UnaryExpressionNotPlusMinus_NotName ::= NOT PushPosition\"); }  //$NON-NLS-1$", "+    case 688 : if (DEBUG) { System.out.println(\"UnaryExpressionNotPlusMinus_NotName ::= NOT PushPosition\"); }  //$NON-NLS-1$", "-    case 641 : if (DEBUG) { System.out.println(\"MultiplicativeExpression_NotName ::=...\"); }  //$NON-NLS-1$", "+    case 691 : if (DEBUG) { System.out.println(\"MultiplicativeExpression_NotName ::=...\"); }  //$NON-NLS-1$", "-    case 642 : if (DEBUG) { System.out.println(\"MultiplicativeExpression_NotName ::= Name MULTIPLY...\"); }  //$NON-NLS-1$", "+    case 692 : if (DEBUG) { System.out.println(\"MultiplicativeExpression_NotName ::= Name MULTIPLY...\"); }  //$NON-NLS-1$", "-    case 643 : if (DEBUG) { System.out.println(\"MultiplicativeExpression_NotName ::=...\"); }  //$NON-NLS-1$", "+    case 693 : if (DEBUG) { System.out.println(\"MultiplicativeExpression_NotName ::=...\"); }  //$NON-NLS-1$", "-    case 644 : if (DEBUG) { System.out.println(\"MultiplicativeExpression_NotName ::= Name DIVIDE...\"); }  //$NON-NLS-1$", "+    case 694 : if (DEBUG) { System.out.println(\"MultiplicativeExpression_NotName ::= Name DIVIDE...\"); }  //$NON-NLS-1$", "-    case 645 : if (DEBUG) { System.out.println(\"MultiplicativeExpression_NotName ::=...\"); }  //$NON-NLS-1$", "+    case 695 : if (DEBUG) { System.out.println(\"MultiplicativeExpression_NotName ::=...\"); }  //$NON-NLS-1$", "-    case 646 : if (DEBUG) { System.out.println(\"MultiplicativeExpression_NotName ::= Name REMAINDER...\"); }  //$NON-NLS-1$", "+    case 696 : if (DEBUG) { System.out.println(\"MultiplicativeExpression_NotName ::= Name REMAINDER...\"); }  //$NON-NLS-1$", "-    case 648 : if (DEBUG) { System.out.println(\"AdditiveExpression_NotName ::=...\"); }  //$NON-NLS-1$", "+    case 698 : if (DEBUG) { System.out.println(\"AdditiveExpression_NotName ::=...\"); }  //$NON-NLS-1$", "-    case 649 : if (DEBUG) { System.out.println(\"AdditiveExpression_NotName ::= Name PLUS...\"); }  //$NON-NLS-1$", "+    case 699 : if (DEBUG) { System.out.println(\"AdditiveExpression_NotName ::= Name PLUS...\"); }  //$NON-NLS-1$", "-    case 650 : if (DEBUG) { System.out.println(\"AdditiveExpression_NotName ::=...\"); }  //$NON-NLS-1$", "+    case 700 : if (DEBUG) { System.out.println(\"AdditiveExpression_NotName ::=...\"); }  //$NON-NLS-1$", "-    case 651 : if (DEBUG) { System.out.println(\"AdditiveExpression_NotName ::= Name MINUS...\"); }  //$NON-NLS-1$", "+    case 701 : if (DEBUG) { System.out.println(\"AdditiveExpression_NotName ::= Name MINUS...\"); }  //$NON-NLS-1$", "-    case 653 : if (DEBUG) { System.out.println(\"ShiftExpression_NotName ::= ShiftExpression_NotName...\"); }  //$NON-NLS-1$", "+    case 703 : if (DEBUG) { System.out.println(\"ShiftExpression_NotName ::= ShiftExpression_NotName...\"); }  //$NON-NLS-1$", "-    case 654 : if (DEBUG) { System.out.println(\"ShiftExpression_NotName ::= Name LEFT_SHIFT...\"); }  //$NON-NLS-1$", "+    case 704 : if (DEBUG) { System.out.println(\"ShiftExpression_NotName ::= Name LEFT_SHIFT...\"); }  //$NON-NLS-1$", "-    case 655 : if (DEBUG) { System.out.println(\"ShiftExpression_NotName ::= ShiftExpression_NotName...\"); }  //$NON-NLS-1$", "+    case 705 : if (DEBUG) { System.out.println(\"ShiftExpression_NotName ::= ShiftExpression_NotName...\"); }  //$NON-NLS-1$", "-    case 656 : if (DEBUG) { System.out.println(\"ShiftExpression_NotName ::= Name RIGHT_SHIFT...\"); }  //$NON-NLS-1$", "+    case 706 : if (DEBUG) { System.out.println(\"ShiftExpression_NotName ::= Name RIGHT_SHIFT...\"); }  //$NON-NLS-1$", "-    case 657 : if (DEBUG) { System.out.println(\"ShiftExpression_NotName ::= ShiftExpression_NotName...\"); }  //$NON-NLS-1$", "+    case 707 : if (DEBUG) { System.out.println(\"ShiftExpression_NotName ::= ShiftExpression_NotName...\"); }  //$NON-NLS-1$", "-    case 658 : if (DEBUG) { System.out.println(\"ShiftExpression_NotName ::= Name UNSIGNED_RIGHT_SHIFT...\"); }  //$NON-NLS-1$", "+    case 708 : if (DEBUG) { System.out.println(\"ShiftExpression_NotName ::= Name UNSIGNED_RIGHT_SHIFT...\"); }  //$NON-NLS-1$", "-    case 660 : if (DEBUG) { System.out.println(\"RelationalExpression_NotName ::= ShiftExpression_NotName\"); }  //$NON-NLS-1$", "+    case 710 : if (DEBUG) { System.out.println(\"RelationalExpression_NotName ::= ShiftExpression_NotName\"); }  //$NON-NLS-1$", "-    case 661 : if (DEBUG) { System.out.println(\"RelationalExpression_NotName ::= Name LESS...\"); }  //$NON-NLS-1$", "+    case 711 : if (DEBUG) { System.out.println(\"RelationalExpression_NotName ::= Name LESS...\"); }  //$NON-NLS-1$", "-    case 662 : if (DEBUG) { System.out.println(\"RelationalExpression_NotName ::= ShiftExpression_NotName\"); }  //$NON-NLS-1$", "+    case 712 : if (DEBUG) { System.out.println(\"RelationalExpression_NotName ::= ShiftExpression_NotName\"); }  //$NON-NLS-1$", "-    case 663 : if (DEBUG) { System.out.println(\"RelationalExpression_NotName ::= Name GREATER...\"); }  //$NON-NLS-1$", "+    case 713 : if (DEBUG) { System.out.println(\"RelationalExpression_NotName ::= Name GREATER...\"); }  //$NON-NLS-1$", "-    case 664 : if (DEBUG) { System.out.println(\"RelationalExpression_NotName ::=...\"); }  //$NON-NLS-1$", "+    case 714 : if (DEBUG) { System.out.println(\"RelationalExpression_NotName ::=...\"); }  //$NON-NLS-1$", "-    case 665 : if (DEBUG) { System.out.println(\"RelationalExpression_NotName ::= Name LESS_EQUAL...\"); }  //$NON-NLS-1$", "+    case 715 : if (DEBUG) { System.out.println(\"RelationalExpression_NotName ::= Name LESS_EQUAL...\"); }  //$NON-NLS-1$", "-    case 666 : if (DEBUG) { System.out.println(\"RelationalExpression_NotName ::=...\"); }  //$NON-NLS-1$", "+    case 716 : if (DEBUG) { System.out.println(\"RelationalExpression_NotName ::=...\"); }  //$NON-NLS-1$", "-    case 667 : if (DEBUG) { System.out.println(\"RelationalExpression_NotName ::= Name GREATER_EQUAL...\"); }  //$NON-NLS-1$", "+    case 717 : if (DEBUG) { System.out.println(\"RelationalExpression_NotName ::= Name GREATER_EQUAL...\"); }  //$NON-NLS-1$", "-    case 669 : if (DEBUG) { System.out.println(\"InstanceofExpression_NotName ::= Name instanceof...\"); }  //$NON-NLS-1$", "+    case 719 : if (DEBUG) { System.out.println(\"InstanceofExpression_NotName ::= Name instanceof...\"); }  //$NON-NLS-1$", "-    case 670 : if (DEBUG) { System.out.println(\"InstanceofExpression_NotName ::=...\"); }  //$NON-NLS-1$", "+    case 720 : if (DEBUG) { System.out.println(\"InstanceofExpression_NotName ::=...\"); }  //$NON-NLS-1$", "-    case 672 : if (DEBUG) { System.out.println(\"EqualityExpression_NotName ::=...\"); }  //$NON-NLS-1$", "+    case 722 : if (DEBUG) { System.out.println(\"EqualityExpression_NotName ::=...\"); }  //$NON-NLS-1$", "-    case 673 : if (DEBUG) { System.out.println(\"EqualityExpression_NotName ::= Name EQUAL_EQUAL...\"); }  //$NON-NLS-1$", "+    case 723 : if (DEBUG) { System.out.println(\"EqualityExpression_NotName ::= Name EQUAL_EQUAL...\"); }  //$NON-NLS-1$", "-    case 674 : if (DEBUG) { System.out.println(\"EqualityExpression_NotName ::=...\"); }  //$NON-NLS-1$", "+    case 724 : if (DEBUG) { System.out.println(\"EqualityExpression_NotName ::=...\"); }  //$NON-NLS-1$", "-    case 675 : if (DEBUG) { System.out.println(\"EqualityExpression_NotName ::= Name NOT_EQUAL...\"); }  //$NON-NLS-1$", "+    case 725 : if (DEBUG) { System.out.println(\"EqualityExpression_NotName ::= Name NOT_EQUAL...\"); }  //$NON-NLS-1$", "-    case 677 : if (DEBUG) { System.out.println(\"AndExpression_NotName ::= AndExpression_NotName AND...\"); }  //$NON-NLS-1$", "+    case 727 : if (DEBUG) { System.out.println(\"AndExpression_NotName ::= AndExpression_NotName AND...\"); }  //$NON-NLS-1$", "-    case 678 : if (DEBUG) { System.out.println(\"AndExpression_NotName ::= Name AND EqualityExpression\"); }  //$NON-NLS-1$", "+    case 728 : if (DEBUG) { System.out.println(\"AndExpression_NotName ::= Name AND EqualityExpression\"); }  //$NON-NLS-1$", "-    case 680 : if (DEBUG) { System.out.println(\"ExclusiveOrExpression_NotName ::=...\"); }  //$NON-NLS-1$", "+    case 730 : if (DEBUG) { System.out.println(\"ExclusiveOrExpression_NotName ::=...\"); }  //$NON-NLS-1$", "-    case 681 : if (DEBUG) { System.out.println(\"ExclusiveOrExpression_NotName ::= Name XOR AndExpression\"); }  //$NON-NLS-1$", "+    case 731 : if (DEBUG) { System.out.println(\"ExclusiveOrExpression_NotName ::= Name XOR AndExpression\"); }  //$NON-NLS-1$", "-    case 683 : if (DEBUG) { System.out.println(\"InclusiveOrExpression_NotName ::=...\"); }  //$NON-NLS-1$", "+    case 733 : if (DEBUG) { System.out.println(\"InclusiveOrExpression_NotName ::=...\"); }  //$NON-NLS-1$", "-    case 684 : if (DEBUG) { System.out.println(\"InclusiveOrExpression_NotName ::= Name OR...\"); }  //$NON-NLS-1$", "+    case 734 : if (DEBUG) { System.out.println(\"InclusiveOrExpression_NotName ::= Name OR...\"); }  //$NON-NLS-1$", "-    case 686 : if (DEBUG) { System.out.println(\"ConditionalAndExpression_NotName ::=...\"); }  //$NON-NLS-1$", "+    case 736 : if (DEBUG) { System.out.println(\"ConditionalAndExpression_NotName ::=...\"); }  //$NON-NLS-1$", "-    case 687 : if (DEBUG) { System.out.println(\"ConditionalAndExpression_NotName ::= Name AND_AND...\"); }  //$NON-NLS-1$", "+    case 737 : if (DEBUG) { System.out.println(\"ConditionalAndExpression_NotName ::= Name AND_AND...\"); }  //$NON-NLS-1$", "-    case 689 : if (DEBUG) { System.out.println(\"ConditionalOrExpression_NotName ::=...\"); }  //$NON-NLS-1$", "+    case 739 : if (DEBUG) { System.out.println(\"ConditionalOrExpression_NotName ::=...\"); }  //$NON-NLS-1$", "-    case 690 : if (DEBUG) { System.out.println(\"ConditionalOrExpression_NotName ::= Name OR_OR...\"); }  //$NON-NLS-1$", "+    case 740 : if (DEBUG) { System.out.println(\"ConditionalOrExpression_NotName ::= Name OR_OR...\"); }  //$NON-NLS-1$", "-    case 692 : if (DEBUG) { System.out.println(\"ConditionalExpression_NotName ::=...\"); }  //$NON-NLS-1$", "+    case 742 : if (DEBUG) { System.out.println(\"ConditionalExpression_NotName ::=...\"); }  //$NON-NLS-1$", "-    case 693 : if (DEBUG) { System.out.println(\"ConditionalExpression_NotName ::= Name QUESTION...\"); }  //$NON-NLS-1$", "+    case 743 : if (DEBUG) { System.out.println(\"ConditionalExpression_NotName ::= Name QUESTION...\"); }  //$NON-NLS-1$", "-    case 697 : if (DEBUG) { System.out.println(\"AnnotationTypeDeclarationHeaderName ::= Modifiers AT...\"); }  //$NON-NLS-1$", "+    case 747 : if (DEBUG) { System.out.println(\"AnnotationTypeDeclarationHeaderName ::= Modifiers AT...\"); }  //$NON-NLS-1$", "-    case 698 : if (DEBUG) { System.out.println(\"AnnotationTypeDeclarationHeaderName ::= Modifiers AT...\"); }  //$NON-NLS-1$", "+    case 748 : if (DEBUG) { System.out.println(\"AnnotationTypeDeclarationHeaderName ::= Modifiers AT...\"); }  //$NON-NLS-1$", "-    case 699 : if (DEBUG) { System.out.println(\"AnnotationTypeDeclarationHeaderName ::= AT...\"); }  //$NON-NLS-1$", "+    case 749 : if (DEBUG) { System.out.println(\"AnnotationTypeDeclarationHeaderName ::= AT...\"); }  //$NON-NLS-1$", "-    case 700 : if (DEBUG) { System.out.println(\"AnnotationTypeDeclarationHeaderName ::= AT...\"); }  //$NON-NLS-1$", "+    case 750 : if (DEBUG) { System.out.println(\"AnnotationTypeDeclarationHeaderName ::= AT...\"); }  //$NON-NLS-1$", "-    case 701 : if (DEBUG) { System.out.println(\"AnnotationTypeDeclarationHeader ::=...\"); }  //$NON-NLS-1$", "+    case 751 : if (DEBUG) { System.out.println(\"AnnotationTypeDeclarationHeader ::=...\"); }  //$NON-NLS-1$", "-    case 702 : if (DEBUG) { System.out.println(\"AnnotationTypeDeclaration ::=...\"); }  //$NON-NLS-1$", "+    case 752 : if (DEBUG) { System.out.println(\"AnnotationTypeDeclaration ::=...\"); }  //$NON-NLS-1$", "-    case 704 : if (DEBUG) { System.out.println(\"AnnotationTypeMemberDeclarationsopt ::=\"); }  //$NON-NLS-1$", "+    case 754 : if (DEBUG) { System.out.println(\"AnnotationTypeMemberDeclarationsopt ::=\"); }  //$NON-NLS-1$", "-    case 705 : if (DEBUG) { System.out.println(\"AnnotationTypeMemberDeclarationsopt ::= NestedType...\"); }  //$NON-NLS-1$", "+    case 755 : if (DEBUG) { System.out.println(\"AnnotationTypeMemberDeclarationsopt ::= NestedType...\"); }  //$NON-NLS-1$", "-    case 707 : if (DEBUG) { System.out.println(\"AnnotationTypeMemberDeclarations ::=...\"); }  //$NON-NLS-1$", "+    case 757 : if (DEBUG) { System.out.println(\"AnnotationTypeMemberDeclarations ::=...\"); }  //$NON-NLS-1$", "-    case 708 : if (DEBUG) { System.out.println(\"AnnotationMethodHeaderName ::= Modifiersopt...\"); }  //$NON-NLS-1$", "+    case 758 : if (DEBUG) { System.out.println(\"AnnotationMethodHeaderName ::= Modifiersopt...\"); }  //$NON-NLS-1$", "-    case 709 : if (DEBUG) { System.out.println(\"AnnotationMethodHeaderName ::= Modifiersopt Type...\"); }  //$NON-NLS-1$", "+    case 759 : if (DEBUG) { System.out.println(\"AnnotationMethodHeaderName ::= Modifiersopt Type0...\"); }  //$NON-NLS-1$", "-    case 710 : if (DEBUG) { System.out.println(\"AnnotationMethodHeaderDefaultValueopt ::=\"); }  //$NON-NLS-1$", "+    case 760 : if (DEBUG) { System.out.println(\"AnnotationMethodHeaderDefaultValueopt ::=\"); }  //$NON-NLS-1$", "-    case 711 : if (DEBUG) { System.out.println(\"AnnotationMethodHeaderDefaultValueopt ::= DefaultValue\"); }  //$NON-NLS-1$", "+    case 761 : if (DEBUG) { System.out.println(\"AnnotationMethodHeaderDefaultValueopt ::= DefaultValue\"); }  //$NON-NLS-1$", "-    case 712 : if (DEBUG) { System.out.println(\"AnnotationMethodHeader ::= AnnotationMethodHeaderName...\"); }  //$NON-NLS-1$", "+    case 762 : if (DEBUG) { System.out.println(\"AnnotationMethodHeader ::= AnnotationMethodHeaderName...\"); }  //$NON-NLS-1$", "-    case 713 : if (DEBUG) { System.out.println(\"AnnotationTypeMemberDeclaration ::=...\"); }  //$NON-NLS-1$", "+    case 763 : if (DEBUG) { System.out.println(\"AnnotationTypeMemberDeclaration ::=...\"); }  //$NON-NLS-1$", "-    case 721 : if (DEBUG) { System.out.println(\"AnnotationName ::= AT Name\"); }  //$NON-NLS-1$", "+    case 771 : if (DEBUG) { System.out.println(\"AnnotationName ::= AT Name\"); }  //$NON-NLS-1$", "-    case 722 : if (DEBUG) { System.out.println(\"NormalAnnotation ::= AnnotationName LPAREN...\"); }  //$NON-NLS-1$", "+    case 772 : if (DEBUG) { System.out.println(\"NormalAnnotation ::= AnnotationName LPAREN...\"); }  //$NON-NLS-1$", "-    case 723 : if (DEBUG) { System.out.println(\"MemberValuePairsopt ::=\"); }  //$NON-NLS-1$", "+    case 773 : if (DEBUG) { System.out.println(\"MemberValuePairsopt ::=\"); }  //$NON-NLS-1$", "-    case 726 : if (DEBUG) { System.out.println(\"MemberValuePairs ::= MemberValuePairs COMMA...\"); }  //$NON-NLS-1$", "+    case 776 : if (DEBUG) { System.out.println(\"MemberValuePairs ::= MemberValuePairs COMMA...\"); }  //$NON-NLS-1$", "-    case 727 : if (DEBUG) { System.out.println(\"MemberValuePair ::= SimpleName EQUAL EnterMemberValue...\"); }  //$NON-NLS-1$", "+    case 777 : if (DEBUG) { System.out.println(\"MemberValuePair ::= SimpleName EQUAL EnterMemberValue...\"); }  //$NON-NLS-1$", "-    case 728 : if (DEBUG) { System.out.println(\"EnterMemberValue ::=\"); }  //$NON-NLS-1$", "+    case 778 : if (DEBUG) { System.out.println(\"EnterMemberValue ::=\"); }  //$NON-NLS-1$", "-    case 729 : if (DEBUG) { System.out.println(\"ExitMemberValue ::=\"); }  //$NON-NLS-1$", "+    case 779 : if (DEBUG) { System.out.println(\"ExitMemberValue ::=\"); }  //$NON-NLS-1$", "-    case 731 : if (DEBUG) { System.out.println(\"MemberValue ::= Name\"); }  //$NON-NLS-1$", "+    case 781 : if (DEBUG) { System.out.println(\"MemberValue ::= Name\"); }  //$NON-NLS-1$", "-    case 734 : if (DEBUG) { System.out.println(\"MemberValueArrayInitializer ::=...\"); }  //$NON-NLS-1$", "+    case 784 : if (DEBUG) { System.out.println(\"MemberValueArrayInitializer ::=...\"); }  //$NON-NLS-1$", "-    case 735 : if (DEBUG) { System.out.println(\"MemberValueArrayInitializer ::=...\"); }  //$NON-NLS-1$", "+    case 785 : if (DEBUG) { System.out.println(\"MemberValueArrayInitializer ::=...\"); }  //$NON-NLS-1$", "-    case 736 : if (DEBUG) { System.out.println(\"MemberValueArrayInitializer ::=...\"); }  //$NON-NLS-1$", "+    case 786 : if (DEBUG) { System.out.println(\"MemberValueArrayInitializer ::=...\"); }  //$NON-NLS-1$", "-    case 737 : if (DEBUG) { System.out.println(\"MemberValueArrayInitializer ::=...\"); }  //$NON-NLS-1$", "+    case 787 : if (DEBUG) { System.out.println(\"MemberValueArrayInitializer ::=...\"); }  //$NON-NLS-1$", "-    case 738 : if (DEBUG) { System.out.println(\"EnterMemberValueArrayInitializer ::=\"); }  //$NON-NLS-1$", "+    case 788 : if (DEBUG) { System.out.println(\"EnterMemberValueArrayInitializer ::=\"); }  //$NON-NLS-1$", "-    case 740 : if (DEBUG) { System.out.println(\"MemberValues ::= MemberValues COMMA MemberValue\"); }  //$NON-NLS-1$", "+    case 790 : if (DEBUG) { System.out.println(\"MemberValues ::= MemberValues COMMA MemberValue\"); }  //$NON-NLS-1$", "-    case 741 : if (DEBUG) { System.out.println(\"MarkerAnnotation ::= AnnotationName\"); }  //$NON-NLS-1$", "+    case 791 : if (DEBUG) { System.out.println(\"MarkerAnnotation ::= AnnotationName\"); }  //$NON-NLS-1$", "-    case 742 : if (DEBUG) { System.out.println(\"SingleMemberAnnotationMemberValue ::= MemberValue\"); }  //$NON-NLS-1$", "+    case 792 : if (DEBUG) { System.out.println(\"SingleMemberAnnotationMemberValue ::= MemberValue\"); }  //$NON-NLS-1$", "-    case 743 : if (DEBUG) { System.out.println(\"SingleMemberAnnotation ::= AnnotationName LPAREN...\"); }  //$NON-NLS-1$", "+    case 793 : if (DEBUG) { System.out.println(\"SingleMemberAnnotation ::= AnnotationName LPAREN...\"); }  //$NON-NLS-1$", "-    case 744 : if (DEBUG) { System.out.println(\"RecoveryMethodHeaderName ::= Modifiersopt TypeParameters\"); }  //$NON-NLS-1$", "+    case 794 : if (DEBUG) { System.out.println(\"RecoveryMethodHeaderName ::= Modifiersopt TypeParameters\"); }  //$NON-NLS-1$", "-    case 745 : if (DEBUG) { System.out.println(\"RecoveryMethodHeaderName ::= Modifiersopt Type...\"); }  //$NON-NLS-1$", "+    case 795 : if (DEBUG) { System.out.println(\"RecoveryMethodHeaderName ::= Modifiersopt Type0...\"); }  //$NON-NLS-1$", "-    case 746 : if (DEBUG) { System.out.println(\"RecoveryMethodHeader ::= RecoveryMethodHeaderName...\"); }  //$NON-NLS-1$", "+    case 796 : if (DEBUG) { System.out.println(\"RecoveryMethodHeader ::= RecoveryMethodHeaderName...\"); }  //$NON-NLS-1$", "-    case 747 : if (DEBUG) { System.out.println(\"RecoveryMethodHeader ::= RecoveryMethodHeaderName...\"); }  //$NON-NLS-1$", "+    case 797 : if (DEBUG) { System.out.println(\"RecoveryMethodHeader ::= RecoveryMethodHeaderName...\"); }  //$NON-NLS-1$", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e326e6398ddc377307f05ad227e15b06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "ae1771fb3dd23cb6811ce5615460d9d9ce93ad89", "commitAfterChange": "1b9194bb1d06a53ae119f04dd00ff75f7d896df4", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "  \tpublic void traverse(MethodBinding methodBinding, int maxLocals, byte[] bytecodes, int codeOffset, int codeLength, ArrayList frames, boolean isClinit)", "signatureAfterChange": "  \tpublic void traverse(MethodBinding methodBinding, int maxLocals, byte[] bytecodes, int codeOffset, int codeLength, ArrayList frames, boolean isClinit)", "diff": ["-\t\t\tbyte opcode = (byte) u1At(bytecodes, 0, pc);", "+\t\t\tint opcode = u1At(bytecodes, 0, pc);", "-\t\t\t\tcase Opcodes.OPC_nop:", "+\t\t\t\tcase IOpcodeMnemonics.NOP:", "-\t\t\t\tcase Opcodes.OPC_aconst_null:", "+\t\t\t\tcase IOpcodeMnemonics.ACONST_NULL:", "-\t\t\t\tcase Opcodes.OPC_iconst_m1:", "+\t\t\t\tcase IOpcodeMnemonics.ICONST_M1:", "-\t\t\t\tcase Opcodes.OPC_iconst_0:", "+\t\t\t\tcase IOpcodeMnemonics.ICONST_0:", "-\t\t\t\tcase Opcodes.OPC_iconst_1:", "+\t\t\t\tcase IOpcodeMnemonics.ICONST_1:", "-\t\t\t\tcase Opcodes.OPC_iconst_2:", "+\t\t\t\tcase IOpcodeMnemonics.ICONST_2:", "-\t\t\t\tcase Opcodes.OPC_iconst_3:", "+\t\t\t\tcase IOpcodeMnemonics.ICONST_3:", "-\t\t\t\tcase Opcodes.OPC_iconst_4:", "+\t\t\t\tcase IOpcodeMnemonics.ICONST_4:", "-\t\t\t\tcase Opcodes.OPC_iconst_5:", "+\t\t\t\tcase IOpcodeMnemonics.ICONST_5:", "-\t\t\t\tcase Opcodes.OPC_lconst_0:", "+\t\t\t\tcase IOpcodeMnemonics.LCONST_0:", "-\t\t\t\tcase Opcodes.OPC_lconst_1:", "+\t\t\t\tcase IOpcodeMnemonics.LCONST_1:", "-\t\t\t\tcase Opcodes.OPC_fconst_0:", "+\t\t\t\tcase IOpcodeMnemonics.FCONST_0:", "-\t\t\t\tcase Opcodes.OPC_fconst_1:", "+\t\t\t\tcase IOpcodeMnemonics.FCONST_1:", "-\t\t\t\tcase Opcodes.OPC_fconst_2:", "+\t\t\t\tcase IOpcodeMnemonics.FCONST_2:", "-\t\t\t\tcase Opcodes.OPC_dconst_0:", "+\t\t\t\tcase IOpcodeMnemonics.DCONST_0:", "-\t\t\t\tcase Opcodes.OPC_dconst_1:", "+\t\t\t\tcase IOpcodeMnemonics.DCONST_1:", "-\t\t\t\tcase Opcodes.OPC_bipush:", "+\t\t\t\tcase IOpcodeMnemonics.BIPUSH:", "-\t\t\t\tcase Opcodes.OPC_sipush:", "+\t\t\t\tcase IOpcodeMnemonics.SIPUSH:", "-\t\t\t\tcase Opcodes.OPC_ldc:", "+\t\t\t\tcase IOpcodeMnemonics.LDC:", "-\t\t\t\tcase Opcodes.OPC_ldc_w:", "+\t\t\t\tcase IOpcodeMnemonics.LDC_W:", "-\t\t\t\tcase Opcodes.OPC_ldc2_w:", "+\t\t\t\tcase IOpcodeMnemonics.LDC2_W:", "-\t\t\t\tcase Opcodes.OPC_iload:", "+\t\t\t\tcase IOpcodeMnemonics.ILOAD:", "-\t\t\t\tcase Opcodes.OPC_lload:", "+\t\t\t\tcase IOpcodeMnemonics.LLOAD:", "-\t\t\t\tcase Opcodes.OPC_fload:", "+\t\t\t\tcase IOpcodeMnemonics.FLOAD:", "-\t\t\t\tcase Opcodes.OPC_dload:", "+\t\t\t\tcase IOpcodeMnemonics.DLOAD:", "-\t\t\t\tcase Opcodes.OPC_aload:", "+\t\t\t\tcase IOpcodeMnemonics.ALOAD:", "-\t\t\t\tcase Opcodes.OPC_iload_0:", "+\t\t\t\tcase IOpcodeMnemonics.ILOAD_0:", "-\t\t\t\tcase Opcodes.OPC_iload_1:", "+\t\t\t\tcase IOpcodeMnemonics.ILOAD_1:", "-\t\t\t\tcase Opcodes.OPC_iload_2:", "+\t\t\t\tcase IOpcodeMnemonics.ILOAD_2:", "-\t\t\t\tcase Opcodes.OPC_iload_3:", "+\t\t\t\tcase IOpcodeMnemonics.ILOAD_3:", "-\t\t\t\tcase Opcodes.OPC_lload_0:", "+\t\t\t\tcase IOpcodeMnemonics.LLOAD_0:", "-\t\t\t\tcase Opcodes.OPC_lload_1:", "+\t\t\t\tcase IOpcodeMnemonics.LLOAD_1:", "-\t\t\t\tcase Opcodes.OPC_lload_2:", "+\t\t\t\tcase IOpcodeMnemonics.LLOAD_2:", "-\t\t\t\tcase Opcodes.OPC_lload_3:", "+\t\t\t\tcase IOpcodeMnemonics.LLOAD_3:", "-\t\t\t\tcase Opcodes.OPC_fload_0:", "+\t\t\t\tcase IOpcodeMnemonics.FLOAD_0:", "-\t\t\t\tcase Opcodes.OPC_fload_1:", "+\t\t\t\tcase IOpcodeMnemonics.FLOAD_1:", "-\t\t\t\tcase Opcodes.OPC_fload_2:", "+\t\t\t\tcase IOpcodeMnemonics.FLOAD_2:", "-\t\t\t\tcase Opcodes.OPC_fload_3:", "+\t\t\t\tcase IOpcodeMnemonics.FLOAD_3:", "-\t\t\t\tcase Opcodes.OPC_dload_0:", "+\t\t\t\tcase IOpcodeMnemonics.DLOAD_0:", "-\t\t\t\tcase Opcodes.OPC_dload_1:", "+\t\t\t\tcase IOpcodeMnemonics.DLOAD_1:", "-\t\t\t\tcase Opcodes.OPC_dload_2:", "+\t\t\t\tcase IOpcodeMnemonics.DLOAD_2:", "-\t\t\t\tcase Opcodes.OPC_dload_3:", "+\t\t\t\tcase IOpcodeMnemonics.DLOAD_3:", "-\t\t\t\tcase Opcodes.OPC_aload_0:", "+\t\t\t\tcase IOpcodeMnemonics.ALOAD_0:", "-\t\t\t\tcase Opcodes.OPC_aload_1:", "+\t\t\t\tcase IOpcodeMnemonics.ALOAD_1:", "-\t\t\t\tcase Opcodes.OPC_aload_2:", "+\t\t\t\tcase IOpcodeMnemonics.ALOAD_2:", "-\t\t\t\tcase Opcodes.OPC_aload_3:", "+\t\t\t\tcase IOpcodeMnemonics.ALOAD_3:", "-\t\t\t\tcase Opcodes.OPC_iaload:", "+\t\t\t\tcase IOpcodeMnemonics.IALOAD:", "-\t\t\t\tcase Opcodes.OPC_laload:", "+\t\t\t\tcase IOpcodeMnemonics.LALOAD:", "-\t\t\t\tcase Opcodes.OPC_faload:", "+\t\t\t\tcase IOpcodeMnemonics.FALOAD:", "-\t\t\t\tcase Opcodes.OPC_daload:", "+\t\t\t\tcase IOpcodeMnemonics.DALOAD:", "-\t\t\t\tcase Opcodes.OPC_aaload:", "+\t\t\t\tcase IOpcodeMnemonics.AALOAD:", "-\t\t\t\tcase Opcodes.OPC_baload:", "+\t\t\t\tcase IOpcodeMnemonics.BALOAD:", "-\t\t\t\tcase Opcodes.OPC_caload:", "+\t\t\t\tcase IOpcodeMnemonics.CALOAD:", "-\t\t\t\tcase Opcodes.OPC_saload:", "+\t\t\t\tcase IOpcodeMnemonics.SALOAD:", "-\t\t\t\tcase Opcodes.OPC_istore:", "+\t\t\t\tcase IOpcodeMnemonics.ISTORE:", "-\t\t\t\tcase Opcodes.OPC_lstore:", "+\t\t\t\tcase IOpcodeMnemonics.LSTORE:", "-\t\t\t\tcase Opcodes.OPC_fstore:", "+\t\t\t\tcase IOpcodeMnemonics.FSTORE:", "-\t\t\t\tcase Opcodes.OPC_dstore:", "+\t\t\t\tcase IOpcodeMnemonics.DSTORE:", "-\t\t\t\tcase Opcodes.OPC_astore:", "+\t\t\t\tcase IOpcodeMnemonics.ASTORE:", "-\t\t\t\tcase Opcodes.OPC_istore_0:", "+\t\t\t\tcase IOpcodeMnemonics.ISTORE_0:", "-\t\t\t\tcase Opcodes.OPC_istore_1:", "+\t\t\t\tcase IOpcodeMnemonics.ISTORE_1:", "-\t\t\t\tcase Opcodes.OPC_istore_2:", "+\t\t\t\tcase IOpcodeMnemonics.ISTORE_2:", "-\t\t\t\tcase Opcodes.OPC_istore_3:", "+\t\t\t\tcase IOpcodeMnemonics.ISTORE_3:", "-\t\t\t\tcase Opcodes.OPC_lstore_0:", "+\t\t\t\tcase IOpcodeMnemonics.LSTORE_0:", "-\t\t\t\tcase Opcodes.OPC_lstore_1:", "+\t\t\t\tcase IOpcodeMnemonics.LSTORE_1:", "-\t\t\t\tcase Opcodes.OPC_lstore_2:", "+\t\t\t\tcase IOpcodeMnemonics.LSTORE_2:", "-\t\t\t\tcase Opcodes.OPC_lstore_3:", "+\t\t\t\tcase IOpcodeMnemonics.LSTORE_3:", "-\t\t\t\tcase Opcodes.OPC_fstore_0:", "+\t\t\t\tcase IOpcodeMnemonics.FSTORE_0:", "-\t\t\t\tcase Opcodes.OPC_fstore_1:", "+\t\t\t\tcase IOpcodeMnemonics.FSTORE_1:", "-\t\t\t\tcase Opcodes.OPC_fstore_2:", "+\t\t\t\tcase IOpcodeMnemonics.FSTORE_2:", "-\t\t\t\tcase Opcodes.OPC_fstore_3:", "+\t\t\t\tcase IOpcodeMnemonics.FSTORE_3:", "-\t\t\t\tcase Opcodes.OPC_dstore_0:", "+\t\t\t\tcase IOpcodeMnemonics.DSTORE_0:", "-\t\t\t\tcase Opcodes.OPC_dstore_1:", "+\t\t\t\tcase IOpcodeMnemonics.DSTORE_1:", "-\t\t\t\tcase Opcodes.OPC_dstore_2:", "+\t\t\t\tcase IOpcodeMnemonics.DSTORE_2:", "-\t\t\t\tcase Opcodes.OPC_dstore_3:", "+\t\t\t\tcase IOpcodeMnemonics.DSTORE_3:", "-\t\t\t\tcase Opcodes.OPC_astore_0:", "+\t\t\t\tcase IOpcodeMnemonics.ASTORE_0:", "-\t\t\t\tcase Opcodes.OPC_astore_1:", "+\t\t\t\tcase IOpcodeMnemonics.ASTORE_1:", "-\t\t\t\tcase Opcodes.OPC_astore_2:", "+\t\t\t\tcase IOpcodeMnemonics.ASTORE_2:", "-\t\t\t\tcase Opcodes.OPC_astore_3:", "+\t\t\t\tcase IOpcodeMnemonics.ASTORE_3:", "-\t\t\t\tcase Opcodes.OPC_iastore:", "+\t\t\t\tcase IOpcodeMnemonics.IASTORE:", "-\t\t\t\tcase Opcodes.OPC_lastore:", "+\t\t\t\tcase IOpcodeMnemonics.LASTORE:", "-\t\t\t\tcase Opcodes.OPC_fastore:", "+\t\t\t\tcase IOpcodeMnemonics.FASTORE:", "-\t\t\t\tcase Opcodes.OPC_dastore:", "+\t\t\t\tcase IOpcodeMnemonics.DASTORE:", "-\t\t\t\tcase Opcodes.OPC_aastore:", "+\t\t\t\tcase IOpcodeMnemonics.AASTORE:", "-\t\t\t\tcase Opcodes.OPC_bastore:", "+\t\t\t\tcase IOpcodeMnemonics.BASTORE:", "-\t\t\t\tcase Opcodes.OPC_castore:", "+\t\t\t\tcase IOpcodeMnemonics.CASTORE:", "-\t\t\t\tcase Opcodes.OPC_sastore:", "+\t\t\t\tcase IOpcodeMnemonics.SASTORE:", "-\t\t\t\tcase Opcodes.OPC_pop:", "+\t\t\t\tcase IOpcodeMnemonics.POP:", "-\t\t\t\tcase Opcodes.OPC_pop2:", "+\t\t\t\tcase IOpcodeMnemonics.POP2:", "-\t\t\t\tcase Opcodes.OPC_dup:", "+\t\t\t\tcase IOpcodeMnemonics.DUP:", "-\t\t\t\tcase Opcodes.OPC_dup_x1:", "+\t\t\t\tcase IOpcodeMnemonics.DUP_X1:", "-\t\t\t\tcase Opcodes.OPC_dup_x2:", "+\t\t\t\tcase IOpcodeMnemonics.DUP_X2:", "-\t\t\t\tcase Opcodes.OPC_dup2:", "+\t\t\t\tcase IOpcodeMnemonics.DUP2:", "-\t\t\t\tcase Opcodes.OPC_dup2_x1:", "+\t\t\t\tcase IOpcodeMnemonics.DUP2_X1:", "-\t\t\t\tcase Opcodes.OPC_dup2_x2:", "+\t\t\t\tcase IOpcodeMnemonics.DUP2_X2:", "-\t\t\t\tcase Opcodes.OPC_swap:", "+\t\t\t\tcase IOpcodeMnemonics.SWAP:", "-\t\t\t\tcase Opcodes.OPC_iadd:", "+\t\t\t\tcase IOpcodeMnemonics.IADD:", "-\t\t\t\tcase Opcodes.OPC_ladd:", "+\t\t\t\tcase IOpcodeMnemonics.LADD:", "-\t\t\t\tcase Opcodes.OPC_fadd:", "+\t\t\t\tcase IOpcodeMnemonics.FADD:", "-\t\t\t\tcase Opcodes.OPC_dadd:", "+\t\t\t\tcase IOpcodeMnemonics.DADD:", "-\t\t\t\tcase Opcodes.OPC_isub:", "+\t\t\t\tcase IOpcodeMnemonics.ISUB:", "-\t\t\t\tcase Opcodes.OPC_lsub:", "+\t\t\t\tcase IOpcodeMnemonics.LSUB:", "-\t\t\t\tcase Opcodes.OPC_fsub:", "+\t\t\t\tcase IOpcodeMnemonics.FSUB:", "-\t\t\t\tcase Opcodes.OPC_dsub:", "+\t\t\t\tcase IOpcodeMnemonics.DSUB:", "-\t\t\t\tcase Opcodes.OPC_imul:", "+\t\t\t\tcase IOpcodeMnemonics.IMUL:", "-\t\t\t\tcase Opcodes.OPC_lmul:", "+\t\t\t\tcase IOpcodeMnemonics.LMUL:", "-\t\t\t\tcase Opcodes.OPC_fmul:", "+\t\t\t\tcase IOpcodeMnemonics.FMUL:", "-\t\t\t\tcase Opcodes.OPC_dmul:", "+\t\t\t\tcase IOpcodeMnemonics.DMUL:", "-\t\t\t\tcase Opcodes.OPC_idiv:", "+\t\t\t\tcase IOpcodeMnemonics.IDIV:", "-\t\t\t\tcase Opcodes.OPC_ldiv:", "+\t\t\t\tcase IOpcodeMnemonics.LDIV:", "-\t\t\t\tcase Opcodes.OPC_fdiv:", "+\t\t\t\tcase IOpcodeMnemonics.FDIV:", "-\t\t\t\tcase Opcodes.OPC_ddiv:", "+\t\t\t\tcase IOpcodeMnemonics.DDIV:", "-\t\t\t\tcase Opcodes.OPC_irem:", "+\t\t\t\tcase IOpcodeMnemonics.IREM:", "-\t\t\t\tcase Opcodes.OPC_lrem:", "+\t\t\t\tcase IOpcodeMnemonics.LREM:", "-\t\t\t\tcase Opcodes.OPC_frem:", "+\t\t\t\tcase IOpcodeMnemonics.FREM:", "-\t\t\t\tcase Opcodes.OPC_drem:", "+\t\t\t\tcase IOpcodeMnemonics.DREM:", "-\t\t\t\tcase Opcodes.OPC_ineg:", "+\t\t\t\tcase IOpcodeMnemonics.INEG:", "-\t\t\t\tcase Opcodes.OPC_lneg:", "+\t\t\t\tcase IOpcodeMnemonics.LNEG:", "-\t\t\t\tcase Opcodes.OPC_fneg:", "+\t\t\t\tcase IOpcodeMnemonics.FNEG:", "-\t\t\t\tcase Opcodes.OPC_dneg:", "+\t\t\t\tcase IOpcodeMnemonics.DNEG:", "-\t\t\t\tcase Opcodes.OPC_ishl:", "+\t\t\t\tcase IOpcodeMnemonics.ISHL:", "-\t\t\t\tcase Opcodes.OPC_lshl:", "+\t\t\t\tcase IOpcodeMnemonics.LSHL:", "-\t\t\t\tcase Opcodes.OPC_ishr:", "+\t\t\t\tcase IOpcodeMnemonics.ISHR:", "-\t\t\t\tcase Opcodes.OPC_lshr:", "+\t\t\t\tcase IOpcodeMnemonics.LSHR:", "-\t\t\t\tcase Opcodes.OPC_iushr:", "+\t\t\t\tcase IOpcodeMnemonics.IUSHR:", "-\t\t\t\tcase Opcodes.OPC_lushr:", "+\t\t\t\tcase IOpcodeMnemonics.LUSHR:", "-\t\t\t\tcase Opcodes.OPC_iand:", "+\t\t\t\tcase IOpcodeMnemonics.IAND:", "-\t\t\t\tcase Opcodes.OPC_land:", "+\t\t\t\tcase IOpcodeMnemonics.LAND:", "-\t\t\t\tcase Opcodes.OPC_ior:", "+\t\t\t\tcase IOpcodeMnemonics.IOR:", "-\t\t\t\tcase Opcodes.OPC_lor:", "+\t\t\t\tcase IOpcodeMnemonics.LOR:", "-\t\t\t\tcase Opcodes.OPC_ixor:", "+\t\t\t\tcase IOpcodeMnemonics.IXOR:", "-\t\t\t\tcase Opcodes.OPC_lxor:", "+\t\t\t\tcase IOpcodeMnemonics.LXOR:", "-\t\t\t\tcase Opcodes.OPC_iinc:", "+\t\t\t\tcase IOpcodeMnemonics.IINC:", "-\t\t\t\tcase Opcodes.OPC_i2l:", "+\t\t\t\tcase IOpcodeMnemonics.I2L:", "-\t\t\t\tcase Opcodes.OPC_i2f:", "+\t\t\t\tcase IOpcodeMnemonics.I2F:", "-\t\t\t\tcase Opcodes.OPC_i2d:", "+\t\t\t\tcase IOpcodeMnemonics.I2D:", "-\t\t\t\tcase Opcodes.OPC_l2i:", "+\t\t\t\tcase IOpcodeMnemonics.L2I:", "-\t\t\t\tcase Opcodes.OPC_l2f:", "+\t\t\t\tcase IOpcodeMnemonics.L2F:", "-\t\t\t\tcase Opcodes.OPC_l2d:", "+\t\t\t\tcase IOpcodeMnemonics.L2D:", "-\t\t\t\tcase Opcodes.OPC_f2i:", "+\t\t\t\tcase IOpcodeMnemonics.F2I:", "-\t\t\t\tcase Opcodes.OPC_f2l:", "+\t\t\t\tcase IOpcodeMnemonics.F2L:", "-\t\t\t\tcase Opcodes.OPC_f2d:", "+\t\t\t\tcase IOpcodeMnemonics.F2D:", "-\t\t\t\tcase Opcodes.OPC_d2i:", "+\t\t\t\tcase IOpcodeMnemonics.D2I:", "-\t\t\t\tcase Opcodes.OPC_d2l:", "+\t\t\t\tcase IOpcodeMnemonics.D2L:", "-\t\t\t\tcase Opcodes.OPC_d2f:", "+\t\t\t\tcase IOpcodeMnemonics.D2F:", "-\t\t\t\tcase Opcodes.OPC_i2b:", "+\t\t\t\tcase IOpcodeMnemonics.I2B:", "-\t\t\t\tcase Opcodes.OPC_i2c:", "+\t\t\t\tcase IOpcodeMnemonics.I2C:", "-\t\t\t\tcase Opcodes.OPC_i2s:", "+\t\t\t\tcase IOpcodeMnemonics.I2S:", "-\t\t\t\tcase Opcodes.OPC_lcmp:", "+\t\t\t\tcase IOpcodeMnemonics.LCMP:", "-\t\t\t\tcase Opcodes.OPC_fcmpl:", "+\t\t\t\tcase IOpcodeMnemonics.FCMPL:", "-\t\t\t\tcase Opcodes.OPC_fcmpg:", "+\t\t\t\tcase IOpcodeMnemonics.FCMPG:", "-\t\t\t\tcase Opcodes.OPC_dcmpl:", "+\t\t\t\tcase IOpcodeMnemonics.DCMPL:", "-\t\t\t\tcase Opcodes.OPC_dcmpg:", "+\t\t\t\tcase IOpcodeMnemonics.DCMPG:", "-\t\t\t\tcase Opcodes.OPC_ifeq:", "+\t\t\t\tcase IOpcodeMnemonics.IFEQ:", "-\t\t\t\tcase Opcodes.OPC_ifne:", "+\t\t\t\tcase IOpcodeMnemonics.IFNE:", "-\t\t\t\tcase Opcodes.OPC_iflt:", "+\t\t\t\tcase IOpcodeMnemonics.IFLT:", "-\t\t\t\tcase Opcodes.OPC_ifge:", "+\t\t\t\tcase IOpcodeMnemonics.IFGE:", "-\t\t\t\tcase Opcodes.OPC_ifgt:", "+\t\t\t\tcase IOpcodeMnemonics.IFGT:", "-\t\t\t\tcase Opcodes.OPC_ifle:", "+\t\t\t\tcase IOpcodeMnemonics.IFLE:", "-\t\t\t\tcase Opcodes.OPC_if_icmpeq:", "+\t\t\t\tcase IOpcodeMnemonics.IF_ICMPEQ:", "-\t\t\t\tcase Opcodes.OPC_if_icmpne:", "+\t\t\t\tcase IOpcodeMnemonics.IF_ICMPNE:", "-\t\t\t\tcase Opcodes.OPC_if_icmplt:", "+\t\t\t\tcase IOpcodeMnemonics.IF_ICMPLT:", "-\t\t\t\tcase Opcodes.OPC_if_icmpge:", "+\t\t\t\tcase IOpcodeMnemonics.IF_ICMPGE:", "-\t\t\t\tcase Opcodes.OPC_if_icmpgt:", "+\t\t\t\tcase IOpcodeMnemonics.IF_ICMPGT:", "-\t\t\t\tcase Opcodes.OPC_if_icmple:", "+\t\t\t\tcase IOpcodeMnemonics.IF_ICMPLE:", "-\t\t\t\tcase Opcodes.OPC_if_acmpeq:", "+\t\t\t\tcase IOpcodeMnemonics.IF_ACMPEQ:", "-\t\t\t\tcase Opcodes.OPC_if_acmpne:", "+\t\t\t\tcase IOpcodeMnemonics.IF_ACMPNE:", "-\t\t\t\tcase Opcodes.OPC_goto:", "+\t\t\t\tcase IOpcodeMnemonics.GOTO:", "-\t\t\t\tcase Opcodes.OPC_tableswitch:", "+\t\t\t\tcase IOpcodeMnemonics.TABLESWITCH:", "-\t\t\t\tcase Opcodes.OPC_lookupswitch:", "+\t\t\t\tcase IOpcodeMnemonics.LOOKUPSWITCH:", "-\t\t\t\tcase Opcodes.OPC_ireturn:", "+\t\t\t\tcase IOpcodeMnemonics.IRETURN:", "-\t\t\t\tcase Opcodes.OPC_lreturn:", "+\t\t\t\tcase IOpcodeMnemonics.LRETURN:", "-\t\t\t\tcase Opcodes.OPC_freturn:", "+\t\t\t\tcase IOpcodeMnemonics.FRETURN:", "-\t\t\t\tcase Opcodes.OPC_dreturn:", "+\t\t\t\tcase IOpcodeMnemonics.DRETURN:", "-\t\t\t\tcase Opcodes.OPC_areturn:", "+\t\t\t\tcase IOpcodeMnemonics.ARETURN:", "-\t\t\t\tcase Opcodes.OPC_return:", "+\t\t\t\tcase IOpcodeMnemonics.RETURN:", "-\t\t\t\tcase Opcodes.OPC_getstatic:", "+\t\t\t\tcase IOpcodeMnemonics.GETSTATIC:", "-\t\t\t\tcase Opcodes.OPC_putstatic:", "+\t\t\t\tcase IOpcodeMnemonics.PUTSTATIC:", "-\t\t\t\tcase Opcodes.OPC_getfield:", "+\t\t\t\tcase IOpcodeMnemonics.GETFIELD:", "-\t\t\t\tcase Opcodes.OPC_putfield:", "+\t\t\t\tcase IOpcodeMnemonics.PUTFIELD:", "-\t\t\t\tcase Opcodes.OPC_invokevirtual:", "+\t\t\t\tcase IOpcodeMnemonics.INVOKEVIRTUAL:", "-\t\t\t\tcase Opcodes.OPC_invokespecial:", "+\t\t\t\tcase IOpcodeMnemonics.INVOKESPECIAL:", "-\t\t\t\tcase Opcodes.OPC_invokestatic:", "+\t\t\t\tcase IOpcodeMnemonics.INVOKESTATIC:", "-\t\t\t\tcase Opcodes.OPC_invokeinterface:", "+\t\t\t\tcase IOpcodeMnemonics.INVOKEINTERFACE:", "-\t\t\t\tcase Opcodes.OPC_new:", "+\t\t\t\tcase IOpcodeMnemonics.NEW:", "-\t\t\t\tcase Opcodes.OPC_newarray:", "+\t\t\t\tcase IOpcodeMnemonics.NEWARRAY:", "-\t\t\t\tcase Opcodes.OPC_anewarray:", "+\t\t\t\tcase IOpcodeMnemonics.ANEWARRAY:", "-\t\t\t\tcase Opcodes.OPC_arraylength:", "+\t\t\t\tcase IOpcodeMnemonics.ARRAYLENGTH:", "-\t\t\t\tcase Opcodes.OPC_athrow:", "+\t\t\t\tcase IOpcodeMnemonics.ATHROW:", "-\t\t\t\tcase Opcodes.OPC_checkcast:", "+\t\t\t\tcase IOpcodeMnemonics.CHECKCAST:", "-\t\t\t\tcase Opcodes.OPC_instanceof:", "+\t\t\t\tcase IOpcodeMnemonics.INSTANCEOF:", "-\t\t\t\tcase Opcodes.OPC_monitorenter:", "+\t\t\t\tcase IOpcodeMnemonics.MONITORENTER:", "-\t\t\t\tcase Opcodes.OPC_monitorexit:", "+\t\t\t\tcase IOpcodeMnemonics.MONITOREXIT:", "-\t\t\t\tcase Opcodes.OPC_wide:", "-\t\t\t\t\topcode = (byte) u1At(bytecodes, 1, pc);", "-\t\t\t\t\tif (opcode == Opcodes.OPC_iinc) {", "+\t\t\t\tcase IOpcodeMnemonics.WIDE:", "+\t\t\t\t\topcode = u1At(bytecodes, 1, pc);", "+\t\t\t\t\tif (opcode == IOpcodeMnemonics.IINC) {", "-\t\t\t\t\t\t\tcase Opcodes.OPC_iload :", "+\t\t\t\t\t\t\tcase IOpcodeMnemonics.ILOAD :", "-\t\t\t\t\t\t\tcase Opcodes.OPC_fload :", "+\t\t\t\t\t\t\tcase IOpcodeMnemonics.FLOAD :", "-\t\t\t\t\t\t\tcase Opcodes.OPC_aload :", "+\t\t\t\t\t\t\tcase IOpcodeMnemonics.ALOAD :", "-\t\t\t\t\t\t\tcase Opcodes.OPC_lload :", "+\t\t\t\t\t\t\tcase IOpcodeMnemonics.LLOAD :", "-\t\t\t\t\t\t\tcase Opcodes.OPC_dload :", "+\t\t\t\t\t\t\tcase IOpcodeMnemonics.DLOAD :", "-\t\t\t\t\t\t\tcase Opcodes.OPC_istore :", "+\t\t\t\t\t\t\tcase IOpcodeMnemonics.ISTORE :", "-\t\t\t\t\t\t\tcase Opcodes.OPC_fstore :", "+\t\t\t\t\t\t\tcase IOpcodeMnemonics.FSTORE :", "-\t\t\t\t\t\t\tcase Opcodes.OPC_astore :", "+\t\t\t\t\t\t\tcase IOpcodeMnemonics.ASTORE :", "-\t\t\t\t\t\t\tcase Opcodes.OPC_lstore :", "+\t\t\t\t\t\t\tcase IOpcodeMnemonics.LSTORE :", "-\t\t\t\t\t\t\tcase Opcodes.OPC_dstore :", "+\t\t\t\t\t\t\tcase IOpcodeMnemonics.DSTORE :", "-\t\t\t\tcase Opcodes.OPC_multianewarray:", "+\t\t\t\tcase IOpcodeMnemonics.MULTIANEWARRAY:", "-\t\t\t\tcase Opcodes.OPC_ifnull:", "+\t\t\t\tcase IOpcodeMnemonics.IFNULL:", "-\t\t\t\tcase Opcodes.OPC_ifnonnull:", "+\t\t\t\tcase IOpcodeMnemonics.IFNONNULL:", "-\t\t\t\tcase Opcodes.OPC_goto_w:", "+\t\t\t\tcase IOpcodeMnemonics.GOTO_W:"]}], "num": 37313}