{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e8401c74fd395558b6385deafcb9ecb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16ce25d01a40b1db7c6a73c657d8b097", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchJavadocTests.java", "commitBeforeChange": "490f0dedc6b033aac107ccccbdc9e8361a921466", "commitAfterChange": "83feb6a3bbe889feb388b89a4854a090c75eaf0e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void testJavadocMethodDeclaration() throws CoreException", "signatureAfterChange": " \tpublic void testJavadocMethodDeclaration() throws CoreException", "diff": ["-\t\tIType type = getCompilationUnit(\"JavaSearch\", \"src\", \"j1\", \"AnnSearched.java\").getType(\"AnnSearched\");", "-\t\tIMethod method = type.getMethod(\"annSearchedMethod\", null);", "+\t\tIType type = getCompilationUnit(\"JavaSearch\", \"src\", \"j1\", \"JavadocSearched.java\").getType(\"JavadocSearched\");", "+\t\tIMethod method = type.getMethod(\"javadocSearchedMethod\", null);", "-\t\t\t\t\"src/j1/AnnSearched.java void j1.AnnSearched.annSearchedMethod() [annSearchedMethod] EXACT_MATCH\",", "+\t\t\t\t\"src/j1/JavadocSearched.java void j1.JavadocSearched.javadocSearchedMethod() [javadocSearchedMethod] EXACT_MATCH\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9574f237a6a69bd7a24c3bff83aeb742", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "67643a7c27a6d261feaad810d2590f1f6d33b749", "commitAfterChange": "da7a5227e034c2b6c8a4762e61c3ccf43066f02e", "methodNumberBeforeChange": 439, "methodNumberAfterChange": 444, "signatureBeforeChange": " public void testBug253896c()", "signatureAfterChange": " public void testBug253896c()", "diff": ["-\t\t\t\"Null pointer access: The variable f1 can only be null at this location\\n\" + ", "+\t\t\t\"Null pointer access: This expression of type Integer is null but requires auto-unboxing\\n\" +", "-\t\t\t\"Null pointer access: The variable f2 can only be null at this location\\n\" + ", "+\t\t\t\"Null pointer access: This expression of type Integer is null but requires auto-unboxing\\n\" +", "-\t\t\t\"Null pointer access: The variable a can only be null at this location\\n\" + ", "+\t\t\t\"Null pointer access: This expression of type Integer is null but requires auto-unboxing\\n\" + ", "-\t\t\t\"Potential null pointer access: The variable outer2 may be null at this location\\n\" + ", "+\t\t\t\"Potential null pointer access: This expression of type Integer may be null but requires auto-unboxing\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6840abb526b485259092814776017a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ForeachStatementTest.java", "commitBeforeChange": "45e574c9370a9e1fe1175a8641ff2dc7a4b4a6e7", "commitAfterChange": "c17970bb54810597f5d28802d36bfac65d844634", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void test027()", "signatureAfterChange": " public void test027()", "diff": ["-\t\t\"     1  anewarray java.lang.Object [4]\\n\" + ", "+\t\t\"     1  anewarray java.lang.Object [3]\\n\" + ", "-\t\t\"    32  getstatic java.lang.System.out : java.io.PrintStream [21]\\n\" + ", "-\t\t\"    35  ldc <String \\\"SUCCESS\\\"> [23]\\n\" + ", "-\t\t\"    37  invokevirtual java.io.PrintStream.println(java.lang.String) : void  [29]\\n\" + ", "+\t\t\"    32  getstatic java.lang.System.out : java.io.PrintStream [16]\\n\" + ", "+\t\t\"    35  ldc <String \\\"SUCCESS\\\"> [22]\\n\" + ", "+\t\t\"    37  invokevirtual java.io.PrintStream.println(java.lang.String) : void [24]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b16f3a946eaeb3be02ead8681cb11b0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "16d2bb22ab0669ee00790465fa843455279af5ae", "commitAfterChange": "cb2ffae6de1377c8c53c98f0144305fd03d135f4", "methodNumberBeforeChange": 439, "methodNumberAfterChange": 439, "signatureBeforeChange": " \tpublic void test435()", "signatureAfterChange": " \tpublic void test435()", "diff": ["-\t\t\t\"Type safety: Comparable is a raw type. References to generic type Comparable<T> should be parameterized\\n\" + ", "+\t\t\t\"Comparable is a raw type. References to generic type Comparable<T> should be parameterized\\n\" + ", "-\t\t\t\"Type safety: Comparable is a raw type. References to generic type Comparable<T> should be parameterized\\n\" + ", "+\t\t\t\"Comparable is a raw type. References to generic type Comparable<T> should be parameterized\\n\" + ", "-\t\t\t\"Type safety: Comparable is a raw type. References to generic type Comparable<T> should be parameterized\\n\" + ", "+\t\t\t\"Comparable is a raw type. References to generic type Comparable<T> should be parameterized\\n\" + ", "-\t\t\t\"Type safety: Comparable is a raw type. References to generic type Comparable<T> should be parameterized\\n\" + ", "+\t\t\t\"Comparable is a raw type. References to generic type Comparable<T> should be parameterized\\n\" + "]}], "num": 3621}