{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d681c2a4477625e7ba63846043413ca9", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c4f700210f717d4a2dfcb97dddd1d73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "fe3a48f1f7f1a7c40cc246cc6fcf6be8ef3f9c35", "commitAfterChange": "193e5a666fe587859e4ffe3b97be66bcfde5cbec", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void _testSearchPotentialMatchInOutput() throws JavaModelException, CoreException", "signatureAfterChange": " public void testSearchPotentialMatchInOutput() throws CoreException", "diff": ["-public void _testSearchPotentialMatchInOutput() throws JavaModelException, CoreException {", "-\tthis.setClasspath(new String[] {\"/P\", \"src/\", \"/P/src\", \"\"});", "-\tthis.createFile(", "-\t\t\"/P/bin/X.java\",", "-\t\t\"public class X {\\n\" +", "-\t\t\"}\"", "-\t);", "-\tJavaSearchTests.JavaSearchResultCollector resultCollector = new JavaSearchTests.JavaSearchResultCollector();", "-\tIJavaSearchScope scope = SearchEngine.createJavaSearchScope(new IJavaElement[] {getJavaProject(\"P\")});", "-\tnew SearchEngine().search(", "-\t\tgetWorkspace(), ", "-\t\t\"X\",", "-\t\tIJavaSearchConstants.TYPE,", "-\t\tIJavaSearchConstants.DECLARATIONS, ", "-\t\tscope, ", "-\t\tresultCollector);", "-\tassertEquals(\"\", resultCollector.toString());", "+public void testSearchPotentialMatchInOutput() throws CoreException {", "+\ttry {", "+\t\tJavaCore.run(new IWorkspaceRunnable() {", "+\t\t\tpublic void run(IProgressMonitor monitor) throws CoreException {", "+\t\t\t\tIJavaProject project = createJavaProject(\"P2\", new String[] {}, \"bin\");", "+\t\t\t\tproject.setRawClasspath(createClasspath(new String[] {\"/P2\", \"src/\", \"/P2/src\", \"\"}), null);", "+\t\t\t\tcreateFile(", "+\t\t\t\t\t\"/P2/bin/X.java\",", "+\t\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\t\"}\"", "+\t\t\t\t);", "+\t\t\t}", "+\t\t}, null);", "+\t\t", "+\t\tJavaSearchTests.JavaSearchResultCollector resultCollector = new JavaSearchTests.JavaSearchResultCollector();", "+\t\tIJavaSearchScope scope = SearchEngine.createJavaSearchScope(new IJavaElement[] {getJavaProject(\"P\")});", "+\t\tnew SearchEngine().search(", "+\t\t\tgetWorkspace(), ", "+\t\t\t\"X\",", "+\t\t\tIJavaSearchConstants.TYPE,", "+\t\t\tIJavaSearchConstants.DECLARATIONS, ", "+\t\t\tscope, ", "+\t\t\tresultCollector);", "+\t\tassertEquals(\"\", resultCollector.toString());", "+\t} finally {", "+\t\tthis.deleteProject(\"P2\");", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8871a27cd13e2039cc60fa3a1e0204c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchScopeTests.java", "commitBeforeChange": "c768bb705d25a055607160ce11d239f196ca5653", "commitAfterChange": "7daedb60ca274e13e941cb615b58a6c663d3ad95", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tpublic void testBug101426() throws CoreException", "signatureAfterChange": " public void testBug101426() throws CoreException", "diff": ["-\t */", "-\tpublic void testBug101426() throws CoreException {", "-\t\ttry {", "-\t\t\tIJavaProject project = createJavaProject(\"P1\", new String[] {\"src/\", \"test/\", \"test2/\"}, \"bin\");", "-\t\t\tcreateFile(", "-\t\t\t\t\"/P1/src/Test.java\",", "-\t\t\t\t\"public interface ITest {\\n\" +", "-\t\t\t\t\"}\" ", "-\t\t\t);", "-\t\t\tcreateFile(", "-\t\t\t\t\"/P1/test/Test.java\",", "-\t\t\t\t\"public class Test {\\n\" +", "-\t\t\t\t\"\tITest test;\\n\" +", "-\t\t\t\t\"}\" ", "-\t\t\t);", "-\t\t\tcreateFile(", "-\t\t\t\t\"/P1/test2/Test.java\",", "-\t\t\t\t\"public class Test2 {\\n\" +", "-\t\t\t\t\"\tITest test;\\n\" +", "-\t\t\t\t\"}\" ", "-\t\t\t);", "-\t\t\tIJavaSearchScope scope = SearchEngine.createJavaSearchScope(new IJavaElement[] {project});", "-\t\t\tJavaSearchResultCollector resultCollector = new JavaSearchResultCollector();", "-\t\t\tresultCollector.showProject = true;", "-\t\t\tsearch(\"ITest\", TYPE, REFERENCES, scope, resultCollector);", "-\t\t\tassertSearchResults(", "-\t\t\t\t\"test/Test.java [in P1] Test.test [ITest]\\n\" + ", "-\t\t\t\t\"test2/Test.java [in P1] Test2.test [ITest]\",", "-\t\t\t\tresultCollector);", "-\t\t}", "-\t\tfinally {", "-\t\t\tdeleteProject(\"P1\");", "-\t\t}", "-\t}", "+ */", "+public void testBug101426() throws CoreException {", "+\ttry {", "+\t\tIJavaProject project = createJavaProject(\"P1\", new String[] {\"src/\", \"test/\", \"test2/\"}, new String[] {\"JCL_LIB\"}, \"bin\");", "+\t\tcreateFile(", "+\t\t\t\"/P1/src/Test.java\",", "+\t\t\t\"public interface ITest {\\n\" +", "+\t\t\t\"}\" ", "+\t\t);", "+\t\tcreateFile(", "+\t\t\t\"/P1/test/Test.java\",", "+\t\t\t\"public class Test {\\n\" +", "+\t\t\t\"\tITest test;\\n\" +", "+\t\t\t\"}\" ", "+\t\t);", "+\t\tcreateFile(", "+\t\t\t\"/P1/test2/Test.java\",", "+\t\t\t\"public class Test2 {\\n\" +", "+\t\t\t\"\tITest test;\\n\" +", "+\t\t\t\"}\" ", "+\t\t);", "+\t\tIJavaSearchScope scope = SearchEngine.createJavaSearchScope(new IJavaElement[] {project});", "+\t\tJavaSearchResultCollector resultCollector = new JavaSearchResultCollector();", "+\t\tresultCollector.showProject = true;", "+\t\tsearch(\"ITest\", TYPE, REFERENCES, scope, resultCollector);", "+\t\tassertSearchResults(", "+\t\t\t\"test/Test.java [in P1] Test.test [ITest]\\n\" + ", "+\t\t\t\"test2/Test.java [in P1] Test2.test [ITest]\",", "+\t\t\tresultCollector);", "+\t}", "+\tfinally {", "+\t\tdeleteProject(\"P1\");", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b69e7e7d73a052a290ec3f706aeb2461", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugs8Tests.java", "commitBeforeChange": "06cedbd8bd184e3f34c939385e2cbddd9e3aedca", "commitAfterChange": "0d09a2966f3cebfb8d6601000e2b64259fed7dd8", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 81, "signatureBeforeChange": " public void _testBug400905_0012() throws CoreException", "signatureAfterChange": " public void testBug400905_0013() throws CoreException", "diff": ["-public void _testBug400905_0012() throws CoreException {", "-\t\tcreateJavaProject(\"P\", new String[] { \"\", \"src\"}, new String[] {\"JCL_LIB\"}, null, null, \"bin\", null, null, new String[][] {new String[] {\"src/\"}, new String[0]}, \"1.8\");", "-\t\t\t\"/P/src/J.java\",", "-\t\t\t\"public class J implements I {\\n\" +", "-\t\t\t\"    public static void main(String [] args) {\\n\" +", "-\t\t\t\"\t\tI i = Y::goo;\\n\" +", "-\t\t\t\"\t }\\n\" +", "-\t\t\t\"    void foo() {\\n\" +", "-\t\t\t\"       I i = Y::goo;\\n\" +", "-\t\t\t\"       Y.goo(()->{});\\n\" +", "-\t\t\t\"       I i2 = new I() {\\n\" +", "-\t\t\t\"\t\t    public void foo() {\\n\" +", "-\t\t\t\"\t\t    }\\n\" +", "-\t\t\t\"\t    };\\n\" +", "-\t\t\t\"   }\\n\" +", "-\t\t\t\"}\\n\"", "-\t\t);", "-\t\tcreateFile(", "-\t\t\t\"/P/src/Y.java\",", "-\t\t\t\"public class Y {\\n\" +", "-\t\t\t\"    public static void goo(I i) {};\\n\" +", "-\t\t\t\"    public static void goo() {};\\n\" +", "-\t\t\t\"}\\n\"", "-\t\t\t\"    public void foo();\\n\" +", "-\t\tIMethod method = type.getMethod(\"foo\", new String[0]);", "-\t\tassertSearchResults(\"\");", "+public void testBug400905_0013() throws CoreException {", "+\ttry {", "+\t\tcreateJavaProject(\"P\", new String[] { \"\", \"src\"}, new String[] {\"JCL18_LIB\"}, null, null, \"bin\", null, null, new String[][] {new String[] {\"src/\"}, new String[0]}, \"1.8\");", "+\t\tcreateFile(", "+\t\t\t\"/P/src/X.java\",", "+\t\t\t\"public class X {\\n\" +", "+\t\t\t\"   void zoo() {\\n\" +", "+\t\t\t\"\t    I i = () -> 0;\\n\" +", "+\t\t\t\"\t    I i2 = new I() {\\n\" +", "+\t\t\t\"\t\t    public int doit() {\\n\" +", "+\t\t\t\"\t\t\t    return 0;\\n\" +", "+\t\t\t\"\t\t    }\\n\" +", "+\t\t\t\"\t    };\\n\" +", "+\t\t\t\"   }\\n\" +", "+\t\t\t\"}\\n\" +", "+\t\t\t\" class Y {}\\n\"", "+\t\t);", "+\t\tcreateFile(", "+\t\t\t\"/P/src/I.java\",", "+\t\t\t\"public interface I {\\n\" +", "+\t\t\t\"    public int doit();\\n\" +", "+\t\t\t\"}\\n\"", "+\t\t);", "+\t\t", "+\t\tIType type = getCompilationUnit(\"/P/src/I.java\").getType(\"I\");", "+\t\tIMethod method = type.getMethod(\"doit\", new String[0]);", "+\t\tsearch(method, DECLARATIONS|IGNORE_DECLARING_TYPE|IGNORE_RETURN_TYPE, SearchPattern.R_CASE_SENSITIVE | SearchPattern.R_ERASURE_MATCH, SearchEngine.createHierarchyScope(type), this.resultCollector);", "+\t\tassertSearchResults(\"src/I.java int I.doit() [doit] EXACT_MATCH\\n\" + ", "+\t\t\t\t\"src/X.java int void X.zoo():<lambda>#1.lambda$1() [() ->] EXACT_MATCH\\n\" + ", "+\t\t\t\t\"src/X.java int void X.zoo():<anonymous>#1.doit() [doit] EXACT_MATCH\");", "+\t}", "+\tfinally {", "+\t\tdeleteProject(\"P\");", "+\t}", "+}"]}], "num": 51085}