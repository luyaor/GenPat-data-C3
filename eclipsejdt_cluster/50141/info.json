{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9ce310d97d426485b70259cdab2a3cbe", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "302abe0230c46f71a6c1c4f00a93ec93", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_5.java", "commitBeforeChange": "81c62d5935a591fe4cf87abbebf09e04755572ce", "commitAfterChange": "18c9ee28439dc99049f5f8ecbf6109b62307dc52", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 92, "signatureBeforeChange": " \tpublic void testBug103304e()", "signatureAfterChange": " \tpublic void testBug119857_Private02()", "diff": ["-\t}", "-\tpublic void testBug103304e() {", "-\t\trunConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"implicit/Valid.java\",", "-\t\t\t\t\"package implicit;\\n\" + ", "-\t\t\t\t\"public interface Valid {\\n\" + ", "-\t\t\t\t\"\tpublic class Level0 {\\n\" + ", "-\t\t\t\t\"\t\t/**\\n\" + ", "-\t\t\t\t\"\t\t * @see #Valid.Level0() Valid\\n\" + ", "-\t\t\t\t\"\t\t */\\n\" + ", "-\t\t\t\t\"\t\tpublic Level0() {}\\n\" + ", "-\t\t\t\t\"\t\t/**\\n\" + ", "-\t\t\t\t\"\t\t * @see #Valid.Level0(String) Valid\\n\" + ", "-\t\t\t\t\"\t\t */\\n\" + ", "-\t\t\t\t\"\t\tpublic Level0(String str) {}\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\tpublic interface Member {\\n\" + ", "-\t\t\t\t\"\t\tpublic class Level1 {\\n\" + ", "-\t\t\t\t\"\t\t\t/**\\n\" + ", "-\t\t\t\t\"\t\t\t * @see #Valid.Member.Level1() Valid\\n\" + ", "-\t\t\t\t\"\t\t\t */\\n\" + ", "-\t\t\t\t\"\t\t\tpublic Level1() {}\\n\" + ", "-\t\t\t\t\"\t\t\t/**\\n\" + ", "-\t\t\t\t\"\t\t\t * @see #Valid.Member.Level1(int) Valid\\n\" + ", "-\t\t\t\t\"\t\t\t */\\n\" + ", "-\t\t\t\t\"\t\t\tpublic Level1(int x) {}\\n\" + ", "-\t\t\t\t\"\t\t}\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"}\\n\"", "-\t\t\t}", "-\t\t);", "-\t}", "+\t}", "+\tpublic void testBug119857_Private02() {", "+\t\tthis.reportMissingJavadocTags = CompilerOptions.IGNORE;", "+\t\trunConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"test/Test.java\",", "+\t\t\t\t\"package test;\\n\" + ", "+\t\t\t\t\"public class Test {\\n\" + ", "+\t\t\t\t\"\tstatic class Inner1 {\\n\" + ", "+\t\t\t\t\"\t\tpublic Object foo() { return null; }\\n\" + ", "+\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"\tstatic class Inner2 {\\n\" + ", "+\t\t\t\t\"\t\tpublic Inner1 field;\\n\" + ", "+\t\t\t\t\"\t\t/** \\n\" + ", "+\t\t\t\t\"\t\t * @see Inner1#foo()\\n\" + ", "+\t\t\t\t\"\t\t */\\n\" + ", "+\t\t\t\t\"\t\tpublic Object foo() {\\n\" + ", "+\t\t\t\t\"\t\t\treturn field.foo();\\n\" + ", "+\t\t\t\t\"\t\t}\\n\" + ", "+\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"}\\n\"", "+\t\t\t}", "+\t\t);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b8e2d01a8aa055f7d9fd79ef875b84d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericsRegressionTest.java", "commitBeforeChange": "63dd1e4003395d388ef82cdd13a585b9acf5cf2a", "commitAfterChange": "d5ac975c618d30089a560c18456e768954cd9860", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 120, "signatureBeforeChange": " public void test426542()", "signatureAfterChange": " public void test427728b()", "diff": ["-// https://bugs.eclipse.org/bugs/show_bug.cgi?id=426542,  [1.8] Most specific method not picked when one method has intersection type as type parameter", "-public void test426542() {", "+// https://bugs.eclipse.org/bugs/show_bug.cgi?id=427728, [1.8] Type Inference rejects calls requiring boxing/unboxing  ", "+public void test427728b() {", "+\tif (this.complianceLevel == ClassFileConstants.JDK1_8)", "+\t\treturn;", "+\tif (this.complianceLevel < ClassFileConstants.JDK1_7) // uses diamond", "+\t\treturn;", "+\trunConformTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"import java.util.Collections;\\n\" +", "+\t\t\t\"import java.util.LinkedHashMap;\\n\" +", "+\t\t\t\"import java.util.Map;\\n\" +", "+\t\t\t\"public class X {\\n\" +", "+\t\t\t\"\tpublic static void main(String[] args) {\\n\" +", "+\t\t\t\"\t\t   Map<X, Integer> map = new LinkedHashMap<>();\\n\" +", "+\t\t\t\"\t\t   map.put(null, X.getInt());\\n\" +", "+\t\t\t\"\t\t   map.put(null, X.getint());\\n\" +", "+\t\t\t\"\t\t}\\n\" +", "+\t\t\t\"\t\tprivate static <T> int getInt() {\\n\" +", "+\t\t\t\"\t\t   return 0;\\n\" +", "+\t\t\t\"\t\t}\\n\" +", "+\t\t\t\"\t\tprivate static int getint() {\\n\" +", "+\t\t\t\"\t\t\t   return 0;\\n\" +", "+\t\t\t\"\t\t}\\n\" +", "+\t\t\t\"}\\n\"", "+\t\t},", "+\t\t\"\");", "+}"]}], "num": 50141}