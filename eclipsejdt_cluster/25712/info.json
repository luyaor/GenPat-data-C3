{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "53b9178eb4258b35f70bb014efe648eb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26c2b47e25bf7bc58f709b201bb4e7bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexAllProject.java", "commitBeforeChange": "2b658a2e19b9466b65c78bf38bae4989bbb6fce3", "commitAfterChange": "52ad2d5b0def2732a36b65b6310c1844772d18ed", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\t\t\tif ((entry.getEntryKind() == IClasspathEntry.CPE_SOURCE)) ", "+\t\t\t\tif (entry.getEntryKind() == IClasspathEntry.CPE_SOURCE)", "-\t\t\t\t// nothing to index but want to save empty index file", "-// TODO (kent) how should empty projects be saved? if no rebuild job is issued then we would be ok", "-//\t\t\t\tIndex index = this.manager.getIndexForUpdate(this.containerPath, true, /*reuse index file*/ true /*create if none*/);", "-//\t\t\t\tif (index != null)", "-//\t\t\t\t\tthis.manager.saveIndex(index);", "-\t\t\t\t// also the project might be a library folder (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=89815)", "+\t\t\t\tIPath projectPath = javaProject.getPath();", "+\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\tIClasspathEntry entry = entries[i];", "+\t\t\t\t\tif (entry.getEntryKind() == IClasspathEntry.CPE_LIBRARY && entry.getPath().equals(projectPath))", "+\t\t\t\t\t\treturn true; // the project is also a library folder (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=89815)", "+\t\t\t\t}", "+", "+\t\t\t\t// nothing to index but want to save an empty index file so its not 'rebuilt' when part of a search request", "+\t\t\t\tIndex index = this.manager.getIndexForUpdate(this.containerPath, true, /*reuse index file*/ true /*create if none*/);", "+\t\t\t\tif (index != null)", "+\t\t\t\t\tthis.manager.saveIndex(index);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94a9e801294b4bde0094b7a1e170455a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Javadoc.java", "commitBeforeChange": "ed1175e5f3196c1368a9a2b98678b1f4969f4620", "commitAfterChange": "cdead094a9813fdba5ccda0ce2f9f48a99552dbc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate void resolveParamTags(MethodScope methScope, boolean reportMissing)", "signatureAfterChange": " \tprivate void resolveParamTags(MethodScope methScope, boolean reportMissing)", "diff": ["-\t\tint paramTagsSize = parameters == null ? 0 : parameters.length;", "-\t\tint argumentsSize = md.arguments == null ? 0 : md.arguments.length;", "+\t\tint paramTagsSize = this.parameters == null ? 0 : this.parameters.length;", "+\t\t// If no referenced method (field initializer for example) then report a problem for each param tag", "+\t\tif (md == null) {", "+\t\t\tfor (int i = 0; i < paramTagsSize; i++) {", "+\t\t\t\tJavadocSingleNameReference param = this.parameters[i];", "+\t\t\t\tmethScope.problemReporter().javadocUnexpectedTag(param.tagSourceStart, param.tagSourceEnd);", "+\t\t\t}", "+\t\t\treturn;", "+\t\t}", "+\t\t", "+\t\tint argumentsSize = md.arguments == null ? 0 : md.arguments.length;", "-\t\t\t\t\tmethScope.problemReporter().javadocMissingParamTag(arg);", "+\t\t\t\t\tmethScope.problemReporter().javadocMissingParamTag(arg, md.binding.modifiers);", "-\t\t\t\tJavadocSingleNameReference param = parameters[i];", "+\t\t\t\tJavadocSingleNameReference param = this.parameters[i];", "-\t\t\t\t\t\t\tmethScope.problemReporter().javadocInvalidParamName(param, true);", "+\t\t\t\t\t\t\tmethScope.problemReporter().javadocDuplicatedParamTag(param, md.binding.modifiers);", "-\t\t\t\t\t\tmethScope.problemReporter().javadocMissingParamTag(arg);", "+\t\t\t\t\t\tmethScope.problemReporter().javadocMissingParamTag(arg, md.binding.modifiers);"]}], "num": 25712}