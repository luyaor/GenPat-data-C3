{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c4e24368000aa3f6019075f1943fc4b1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cec3e3f4f9dd75b3f902269434ac67e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "57e6ab81c3cf39fecb76455d174c657f7c273f84", "commitAfterChange": "8c4c03ed87f5ba92a46a042a6bd51df21862c6ec", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \t \tprivate void addEntryToFileMaps( IFile parentFile, IFile generatedFile )", "signatureAfterChange": " \t \tprivate void addEntryToFileMaps( IFile parentFile, IFile generatedFile )", "diff": ["-\t\t", "-\t\t// add parent file -> set of derived files", "-\t\tSet<IFile> fileSet = _parentFile2GeneratedFiles.get( parentFile );", "-\t\tif ( fileSet == null )", "+\t\tsynchronized ( this )", "-\t\t\tfileSet = new HashSet();", "-\t\t \t_parentFile2GeneratedFiles.put( parentFile, fileSet );", "-\t\t}", "-\t\tfileSet.add( generatedFile );", "+\t\t\t// add parent file -> set of derived files", "+\t\t\tSet<IFile> fileSet = _parentFile2GeneratedFiles.get( parentFile );", "+\t\t\tif ( fileSet == null )", "+\t\t\t{", "+\t\t\t\tfileSet = new HashSet();", "+\t\t\t\t_parentFile2GeneratedFiles.put( parentFile, fileSet );", "+\t\t\t}", "+\t\t\tfileSet.add( generatedFile );", "-", "-\t\t// add derived file -> set of parent files", "-\t\tfileSet = _generatedFile2ParentFiles.get( generatedFile );", "-\t\tif ( fileSet == null )", "-\t\t{ ", "-\t\t\tfileSet = new HashSet();", "-\t\t\t_generatedFile2ParentFiles.put( generatedFile, fileSet );", "+\t\t\t// add derived file -> set of parent files", "+\t\t\tfileSet = _generatedFile2ParentFiles.get( generatedFile );", "+\t\t\tif ( fileSet == null )", "+\t\t\t{ ", "+\t\t\t\tfileSet = new HashSet();", "+\t\t\t\t_generatedFile2ParentFiles.put( generatedFile, fileSet );", "+\t\t\t}", "+\t\t\tfileSet.add( parentFile );", "-\t\tfileSet.add( parentFile );", "-\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82369e93d5d78a2cd69155115bb8249b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTNode.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t\tvoid releaseCursor(Cursor cursor)", "signatureAfterChange": " \t\tvoid releaseCursor(Cursor cursor)", "diff": ["-\t\t\tthis.cursors.remove(cursor);", "-\t\t\tif (this.cursors.isEmpty()) {", "-\t\t\t\t// important: convert empty list back to null", "-\t\t\t\t// otherwise the node will hang on to needless junk", "-\t\t\t\tthis.cursors = null;", "+\t\t\tsynchronized (this) {", "+\t\t\t\t// serialize cursor management on this NodeList", "+\t\t\t\tthis.cursors.remove(cursor);", "+\t\t\t\tif (this.cursors.isEmpty()) {", "+\t\t\t\t\t// important: convert empty list back to null", "+\t\t\t\t\t// otherwise the node will hang on to needless junk", "+\t\t\t\t\tthis.cursors = null;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f76231b18d5b5b97cf1f6445bcc90a6b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTNode.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t\tCursor newCursor()", "signatureAfterChange": " \t\tCursor newCursor()", "diff": ["-\t\t\tif (this.cursors == null) {", "-\t\t\t\t// convert null to empty list", "-\t\t\t\tthis.cursors = new ArrayList(1);", "+\t\t\tsynchronized (this) {", "+\t\t\t\t// serialize cursor management on this NodeList", "+\t\t\t\tif (this.cursors == null) {", "+\t\t\t\t\t// convert null to empty list", "+\t\t\t\t\tthis.cursors = new ArrayList(1);", "+\t\t\t\t}", "+\t\t\t\tCursor result = new Cursor();", "+\t\t\t\tthis.cursors.add(result);", "+\t\t\t\treturn result;", "-\t\t\tCursor result = new Cursor();", "-\t\t\tthis.cursors.add(result);", "-\t\t\treturn result;"]}], "num": 48911}