{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "62fcba86415e196923ca09fd55edd89b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "330599d68632455dea4b1bed38a4547e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "aabd59e4934a861167bc5ad69597bc9fd97e06dc", "commitAfterChange": "4ed2786f22dd00c9c1f7773433c3548c8c0f6fc3", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 134, "signatureBeforeChange": " public void invalidMethod(MessageSend messageSend, MethodBinding method)", "signatureAfterChange": " public void invalidMethod(MessageSend messageSend, MethodBinding method)", "diff": ["-\tint flag = IProblem.UndefinedMethod; //default...", "+\tint id = IProblem.UndefinedMethod; //default...", "-\t\t\tflag = IProblem.UndefinedMethod;", "+\t\t\tid = IProblem.UndefinedMethod;", "-\t\t\tflag = IProblem.NotVisibleMethod;", "+\t\t\tid = IProblem.NotVisibleMethod;", "-\t\t\tflag = IProblem.AmbiguousMethod;", "+\t\t\tid = IProblem.AmbiguousMethod;", "-\t\t\tflag = IProblem.InheritedMethodHidesEnclosingName;", "+\t\t\tid = IProblem.InheritedMethodHidesEnclosingName;", "-\t\t\tflag = IProblem.InstanceMethodDuringConstructorInvocation;", "+\t\t\tid = IProblem.InstanceMethodDuringConstructorInvocation;", "-\t\t\tflag = IProblem.StaticMethodRequested;", "+\t\t\tid = IProblem.StaticMethodRequested;", "-\t\t\t\tIProblem.NotVisibleType,", "+\t\t\t\tIProblem.NotVisibleType,\t// cannot occur in annotations", "-\tif (flag == IProblem.UndefinedMethod) {", "+\tif (id == IProblem.UndefinedMethod) {", "+\t\t\t\tid = IProblem.ParameterMismatch;", "+\t\t\t\tif ((messageSend.bits & AstNode.InsideAnnotation) != 0) {", "+\t\t\t\t\tid |= IProblem.Annotation;", "+\t\t\t\t}", "-\t\t\t\t\tIProblem.ParameterMismatch,", "+\t\t\t\t\tid,", "+\tif ((messageSend.bits & AstNode.InsideAnnotation) != 0) {", "+\t\tid |= IProblem.Annotation;", "+\t}", "-\t\tflag,", "+\t\tid,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3bd999f0b6d20c1cdd9586477ad277d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "80c078ddcf769ceb84a30bdd1354fc49a196e760", "commitAfterChange": "1e3ac51cb3938f7e9fd57cd2551e590148671265", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 111, "signatureBeforeChange": "\r public void invalidMethod(MessageSend messageSend, MethodBinding method)", "signatureAfterChange": "\r public void invalidMethod(MessageSend messageSend, MethodBinding method)", "diff": ["-\tint flag = UndefinedMethod; //default...\r", "+\tint flag = IProblem.UndefinedMethod; //default...\r", "-\t\t\tflag = UndefinedMethod;\r", "+\t\t\tflag = IProblem.UndefinedMethod;\r", "-\t\t\tflag = NotVisibleMethod;\r", "+\t\t\tflag = IProblem.NotVisibleMethod;\r", "-\t\t\tflag = AmbiguousMethod;\r", "+\t\t\tflag = IProblem.AmbiguousMethod;\r", "-\t\t\tflag = InheritedMethodHidesEnclosingName;\r", "+\t\t\tflag = IProblem.InheritedMethodHidesEnclosingName;\r", "-\t\t\tflag = InstanceMethodDuringConstructorInvocation;\r", "+\t\t\tflag = IProblem.InstanceMethodDuringConstructorInvocation;\r", "-\t\t\tflag = StaticMethodRequested;\r", "+\t\t\tflag = IProblem.StaticMethodRequested;\r", "-\tif (flag == UndefinedMethod) {\r", "+\tif (flag == IProblem.UndefinedMethod) {\r", "-\t\t\t\t\tParameterMismatch,\r", "+\t\t\t\t\tIProblem.ParameterMismatch,\r"]}], "num": 66966}