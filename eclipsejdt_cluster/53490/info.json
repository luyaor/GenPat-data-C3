{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bce91dd5d1121057a7553714e5ee732e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c4029b678c03479851877e9cb4cf74e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "b505eec36702205d416645439f4218a52c610506", "commitAfterChange": "a0c59dbe1fcc531830cd318af17b39e6ad26be4e", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " public CompilationUnitDeclaration parseCompilationUnit( \tICompilationUnit unit,  \tboolean fullParse)", "signatureAfterChange": " public CompilationUnitDeclaration parseCompilationUnit( \tICompilationUnit unit,  \tboolean fullParse, \tIProgressMonitor pm)", "diff": ["-\tboolean fullParse) {", "+\tboolean fullParse,", "+\tIProgressMonitor pm) {", "+\t\tif (pm != null && pm.isCanceled())", "+\t\t\tthrow new OperationCanceledException(Messages.operation_cancelled);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "994cf59fa26f9ea2702526295a5899ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "55fc1d09be22c3edd63ee3458e199979c3f77613", "commitAfterChange": "84e7ccc666453bf6300ee2ec41ee2751e7c7737b", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName,  \t\tfinal int packageMatchRule,  \t\tfinal char[] typeName, \t\tfinal int typeMatchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName,  \t\tfinal int packageMatchRule,  \t\tfinal char[] typeName, \t\tfinal int typeMatchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\t\t\t\tprogressMonitor.beginTask(Messages.engine_searching, 100); ", "+\t\t\t\tprogressMonitor.beginTask(Messages.engine_searching, 1000); ", "-\t\t\t\tprogressMonitor == null ? null : new SubProgressMonitor(progressMonitor, 100));\t", "+\t\t\t\tprogressMonitor == null ? null : new SubProgressMonitor(progressMonitor, 1000-copiesLength));\t", "+\t\t\t\t\tif (progressMonitor != null) {", "+\t\t\t\t\t\tif (progressMonitor.isCanceled()) throw new OperationCanceledException();", "+\t\t\t\t\t\tprogressMonitor.worked(1);", "+\t\t\t\t\t}"]}], "num": 53490}