{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "21e17767853a5473893b3f6c1c4691d2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "490cb0e432b34853a317c7e38b82ba7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTParser.java", "commitBeforeChange": "ff60962397667d8f0b8f9465808cd2e926369be1", "commitAfterChange": "0e728cd1e89630be3eb8299ec5e4c703bc09030b", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tprivate ASTNode convert(IProgressMonitor monitor, CompilationUnitDeclaration compilationUnitDeclaration, char[] source, boolean needToResolveBindings)", "signatureAfterChange": "  \tprivate ASTNode convert(IProgressMonitor monitor, CompilationUnitDeclaration compilationUnitDeclaration, char[] source, boolean needToResolveBindings)", "diff": ["-\t\t\tresolver = new DefaultBindingResolver(compilationUnitDeclaration.scope);", "+\t\t\tresolver = new DefaultBindingResolver(compilationUnitDeclaration.scope, this.compilationUnitSource == null ? null : this.compilationUnitSource.getOwner());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93a4837a24bdf2c1715e02f1ba54471e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "716d7d7e362f30302307e49e7f28e6dcbb6abc32", "commitAfterChange": "2687baad19b41abc39a4a59afaf399b25f34831b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          private ProcessorEnvImpl(final CompilationUnit astCompilationUnit, \t\t\tfinal ICompilationUnit compilationUnit, final char[] source, \t\t\tfinal IFile file, final IJavaProject javaProj, final Phase phase)", "signatureAfterChange": "          private ProcessorEnvImpl(final CompilationUnit astCompilationUnit, \t\t\tfinal ICompilationUnit compilationUnit, final char[] source, \t\t\tfinal IFile file, final IJavaProject javaProj, final Phase phase)", "diff": ["-\t\t// if we are in reconcile, file will be null & compilationUnit will be", "-\t\t// valid", "+\t\t// if we are in reconcile, compilationUnit will be valid", "-\t\tassert (phase == Phase.RECONCILE && compilationUnit != null && file == null) ||", "+\t\tassert (phase == Phase.RECONCILE && compilationUnit != null) ||"]}], "num": 14822}