{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c638457dd588e02704314709ad66e895", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b1041d18a3dbd17c64b6bf07f9dd248", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SingleVariableDeclaration.java", "commitBeforeChange": "4ab6cc8c24529af798fcb3762ec8aa5f9887812e", "commitAfterChange": "86d04547b51d0677dda29f45b4279354b3702983", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tboolean equalSubtrees(Object other)", "signatureAfterChange": "\r \tpublic boolean subtreeMatch(ASTMatcher matcher, Object other)", "diff": ["-\tboolean equalSubtrees(Object other) {\r", "-\t\tif (!(other instanceof SingleVariableDeclaration)) {\r", "-\t\t\treturn false;\r", "-\t\t}\r", "-\t\tSingleVariableDeclaration o = (SingleVariableDeclaration) other;\r", "-\t\treturn \r", "-\t\t\t((getModifiers() == o.getModifiers())\r", "-\t\t\t&& ASTNode.equalNodes(getType(), o.getType())\r", "-\t\t\t&& ASTNode.equalNodes(getName(), o.getName())\r", "-\t\t\t&& ASTNode.equalNodes(getInitializer(), o.getInitializer()));\r", "+\tpublic boolean subtreeMatch(ASTMatcher matcher, Object other) {\r", "+\t\t// dispatch to correct overloaded match method\r", "+\t\treturn matcher.match(this, other);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd344dd71581642b52e6439d904bbdc4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/FieldDeclaration.java", "commitBeforeChange": "4ab6cc8c24529af798fcb3762ec8aa5f9887812e", "commitAfterChange": "86d04547b51d0677dda29f45b4279354b3702983", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tboolean equalSubtrees(Object other)", "signatureAfterChange": "\r \tpublic boolean subtreeMatch(ASTMatcher matcher, Object other)", "diff": ["-\tboolean equalSubtrees(Object other) {\r", "-\t\tif (!(other instanceof FieldDeclaration)) {\r", "-\t\t\treturn false;\r", "-\t\t}\r", "-\t\tFieldDeclaration o = (FieldDeclaration) other;\r", "-\t\treturn\r", "-\t\t\tgetModifiers() == o.getModifiers()\r", "-\t\t\t&& ASTNode.equalNodes(getJavadoc(), o.getJavadoc())\r", "-\t\t\t&& ASTNode.equalNodes(getType(), o.getType())\r", "-\t\t\t&& ASTNode.equalLists(fragments(), o.fragments());\r", "+\tpublic boolean subtreeMatch(ASTMatcher matcher, Object other) {\r", "+\t\t// dispatch to correct overloaded match method\r", "+\t\treturn matcher.match(this, other);\r"]}], "num": 9223}