{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a44d746336a9a1f1eaed0e8010af3ed6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14cc43d6ac854dfaa2021025a7ae819b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "7ba9ff29fe6b05ec0a2f58eaa1f5d3e68bb11101", "commitAfterChange": "427a01e331e57852efc472cca3a8360bd121fda9", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  private void createFields(IBinaryField[] iFields, long sourceLevel, char[][][] missingTypeNames)", "signatureAfterChange": "  private void createFields(IBinaryField[] iFields, long sourceLevel, char[][][] missingTypeNames)", "diff": ["+\t\t\tboolean use18specifics = sourceLevel >= ClassFileConstants.JDK1_8;", "+\t\t\t\tTypeAnnotationWalker walker = (use18specifics && this.environment.globalOptions.isAnnotationBasedNullAnalysisEnabled) ? ", "+\t\t\t\t\t\tTypeAnnotationWalker.create(binaryField.getTypeAnnotations()).toField() : TypeAnnotationWalker.EMPTY_ANNOTATION_WALKER;", "-\t\t\t\t\t? this.environment.getTypeFromSignature(binaryField.getTypeName(), 0, -1, false, this, missingTypeNames)", "-\t\t\t\t\t: this.environment.getTypeFromTypeSignature(new SignatureWrapper(fieldSignature), Binding.NO_TYPE_VARIABLES, this, missingTypeNames);", "+\t\t\t\t\t? this.environment.getTypeFromSignature(binaryField.getTypeName(), 0, -1, false, this, missingTypeNames, walker)", "+\t\t\t\t\t: this.environment.getTypeFromTypeSignature(new SignatureWrapper(fieldSignature), Binding.NO_TYPE_VARIABLES, this, missingTypeNames, walker);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5f50bc5689b117e640bdd2a1c8178ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " private void createFields(IBinaryField[] iFields, long sourceLevel)", "signatureAfterChange": " private void createFields(IBinaryField[] iFields, long sourceLevel, char[][][] missingTypeNames)", "diff": ["-private void createFields(IBinaryField[] iFields, long sourceLevel) {", "+private void createFields(IBinaryField[] iFields, long sourceLevel, char[][][] missingTypeNames) {", "-\t\t\t\t\t? environment.getTypeFromSignature(binaryField.getTypeName(), 0, -1, false, this) ", "-\t\t\t\t\t: environment.getTypeFromTypeSignature(new SignatureWrapper(fieldSignature), Binding.NO_TYPE_VARIABLES, this);", "+\t\t\t\t\t? environment.getTypeFromSignature(binaryField.getTypeName(), 0, -1, false, this, missingTypeNames) ", "+\t\t\t\t\t: environment.getTypeFromTypeSignature(new SignatureWrapper(fieldSignature), Binding.NO_TYPE_VARIABLES, this, missingTypeNames);", "-\t\t\t\t\tthis.fields[i].setAnnotations(createAnnotations(iFields[i].getAnnotations(), this.environment));", "+\t\t\t\t\tIBinaryField binaryField = iFields[i];", "+\t\t\t\t\tthis.fields[i].setAnnotations(createAnnotations(binaryField.getAnnotations(), this.environment, missingTypeNames));"]}], "num": 60685}