{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "56c46e7defafc31c187e9d0f58b761d3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ab09b13cf6be02e2b8ca4ab12466d1e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ElementImpl.java", "commitBeforeChange": "01c814e6bd45b7fbd49eec3a490338a17c21d9fb", "commitAfterChange": "7f41c81f9c7d91f8343c9192b06df30e34c066aa", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \t@Override \tpublic <A extends Annotation> A getAnnotation(Class<A> annotationClass)", "signatureAfterChange": " \t \t@Override \tpublic <A extends Annotation> A getAnnotation(Class<A> annotationClass)", "diff": ["-\t\treturn _env.getFactory().getAnnotation(getPackedAnnotationBindings(), annotationClass);", "+\t\tA annotation = _env.getFactory().getAnnotation(getPackedAnnotationBindings(), annotationClass);", "+\t\tif (annotation != null || this.getKind() != ElementKind.CLASS || annotationClass.getAnnotation(Inherited.class) == null)", "+\t\t\treturn annotation;", "+\t\t", "+\t\tElementImpl superClass = (ElementImpl) _env.getFactory().newElement(((ReferenceBinding) this._binding).superclass());", "+\t\treturn superClass == null ? null : superClass.getAnnotation(annotationClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1c14f75997533f3ae940beb73417c86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ElementImpl.java", "commitBeforeChange": "01c814e6bd45b7fbd49eec3a490338a17c21d9fb", "commitAfterChange": "7f41c81f9c7d91f8343c9192b06df30e34c066aa", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic <A extends Annotation> A[] getAnnotationsByType(Class<A> annotationType)", "signatureAfterChange": "  \tpublic <A extends Annotation> A[] getAnnotationsByType(Class<A> annotationType)", "diff": ["-\t\treturn _env.getFactory().getAnnotationsByType(Factory.getUnpackedAnnotationBindings(getPackedAnnotationBindings()), annotationType);", "+\t\tA [] annotations = _env.getFactory().getAnnotationsByType(Factory.getUnpackedAnnotationBindings(getPackedAnnotationBindings()), annotationType);", "+\t\tif (annotations.length != 0 || this.getKind() != ElementKind.CLASS || annotationType.getAnnotation(Inherited.class) == null)", "+\t\t\treturn annotations;", "+\t\t", "+\t\tElementImpl superClass =  (ElementImpl) _env.getFactory().newElement(((ReferenceBinding) this._binding).superclass());", "+\t\treturn superClass == null ? annotations : superClass.getAnnotationsByType(annotationType);"]}], "num": 37986}