{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "899adf57507a62829d344730108df86d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57b958ba523a0d1237f115c5643e06fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "86113d82738e778f8e0f07729ab352d227a867ad", "commitAfterChange": "2d89f0516f5e5910bcd18015e8090ed0805dbb4e", "methodNumberBeforeChange": 170, "methodNumberAfterChange": 170, "signatureBeforeChange": " public void incorrectSwitchType(Expression expression, TypeBinding testType)", "signatureAfterChange": " public void incorrectSwitchType(Expression expression, TypeBinding testType)", "diff": ["-\t\t\tthis.handle(", "-\t\t\t\tIProblem.IncorrectSwitchType,", "-\t\t\t\tnew String[] {new String(testType.readableName())},", "-\t\t\t\tnew String[] {new String(testType.shortReadableName())},", "-\t\t\t\texpression.sourceStart,", "-\t\t\t\texpression.sourceEnd);", "+\t\t\tif (this.options.sourceLevel < ClassFileConstants.JDK1_5 && testType.isEnum()) {", "+\t\t\t\tthis.handle(", "+\t\t\t\t\t\tIProblem.SwitchOnEnumNotBelow15,", "+\t\t\t\t\t\tnew String[] {new String(testType.readableName())},", "+\t\t\t\t\t\tnew String[] {new String(testType.shortReadableName())},", "+\t\t\t\t\t\texpression.sourceStart,", "+\t\t\t\t\t\texpression.sourceEnd);", "+\t\t\t} else {", "+\t\t\t\tthis.handle(", "+\t\t\t\t\t\tIProblem.IncorrectSwitchType,", "+\t\t\t\t\t\tnew String[] {new String(testType.readableName())},", "+\t\t\t\t\t\tnew String[] {new String(testType.shortReadableName())},", "+\t\t\t\t\t\texpression.sourceStart,", "+\t\t\t\t\t\texpression.sourceEnd);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b69bcaff4e6887578ff4d47b71dd92d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 178, "methodNumberAfterChange": 179, "signatureBeforeChange": " public void invalidField(FieldReference fieldRef, TypeBinding searchedType)", "signatureAfterChange": " public void invalidField(FieldReference fieldRef, TypeBinding searchedType)", "diff": ["+\t\t\tif ((searchedType.tagBits & TagBits.HasMissingType) != 0) {", "+\t\t\t\tthis.handle(", "+\t\t\t\t\t\tIProblem.UndefinedType,", "+\t\t\t\t\t\tnew String[] {new String(searchedType.leafComponentType().readableName())},", "+\t\t\t\t\t\tnew String[] {new String(searchedType.leafComponentType().shortReadableName())},", "+\t\t\t\t\t\tfieldRef.receiver.sourceStart,", "+\t\t\t\t\t\tfieldRef.receiver.sourceEnd);", "+\t\t\t\t\treturn;", "+\t\t\t}\t\t\t"]}], "num": 798}