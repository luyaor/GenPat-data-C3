{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6c56c4509f59e21d04d529454346c498", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87eb3f8783ec6275bb1f6c4c7cfa313e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredMethod.java", "commitBeforeChange": "6c476fc2e300888d931411f675ed8c5c5f714198", "commitAfterChange": "4c0128f8b7916766f71600c5a09deeca3606acf9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalance)", "signatureAfterChange": "\r public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalance)", "diff": ["-\t\t/* method body should have been created */\r", "-\t\tBlock block = new Block(0);\r", "-\t\tblock.sourceStart = methodDeclaration.bodyStart;\r", "-\t\tRecoveredElement element = this.add(block, 1);\r", "-\t\treturn element.add(typeDeclaration, bracketBalance);\t\r", "+\t\tif (methodBody == null){\r", "+\t\t\tBlock block = new Block(0);\r", "+\t\t\tblock.sourceStart = methodDeclaration.bodyStart;\r", "+\t\t\tthis.add(block, 1);\r", "+\t\t}\r", "+\t\treturn methodBody.add(typeDeclaration, bracketBalance, true);\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9acd0ae33fa33301b69da4681e64d6f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredMethod.java", "commitBeforeChange": "6c476fc2e300888d931411f675ed8c5c5f714198", "commitAfterChange": "4c0128f8b7916766f71600c5a09deeca3606acf9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public RecoveredElement add(LocalDeclaration localDeclaration, int bracketBalance)", "signatureAfterChange": "\r public RecoveredElement add(LocalDeclaration localDeclaration, int bracketBalance)", "diff": ["+\t/* local variables inside method can only be final and non void */\r", "+/*\t\r", "+\tchar[][] localTypeName; \r", "+\tif ((localDeclaration.modifiers & ~AccFinal) != 0 // local var can only be final \r", "+\t\t|| (localDeclaration.type == null) // initializer\r", "+\t\t|| ((localTypeName = localDeclaration.type.getTypeName()).length == 1 // non void\r", "+\t\t\t&& CharOperation.equals(localTypeName[0], VoidBinding.sourceName()))){ \r", "+\r", "+\t\tif (this.parent == null){\r", "+\t\t\treturn this; // ignore\r", "+\t\t} else {\r", "+\t\t\tthis.updateSourceEndIfNecessary(this.previousAvailableLineEnd(localDeclaration.declarationSourceStart - 1));\r", "+\t\t\treturn this.parent.add(localDeclaration, bracketBalance);\r", "+\t\t}\r", "+\t}\r", "+*/\r", "-\t/* method body should have been created */\r", "-\tBlock block = new Block(0);\r", "-\tblock.sourceStart = methodDeclaration.bodyStart;\r", "-\tRecoveredElement element = this.add(block, 1);\r", "-\treturn element.add(localDeclaration, bracketBalance);\t\r", "+\tif (methodBody == null){\r", "+\t\tBlock block = new Block(0);\r", "+\t\tblock.sourceStart = methodDeclaration.bodyStart;\r", "+\t\tthis.add(block, 1);\r", "+\t}\r", "+\treturn methodBody.add(localDeclaration, bracketBalance, true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed3aaed40438ff87437f520f04e15907", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredMethod.java", "commitBeforeChange": "6c476fc2e300888d931411f675ed8c5c5f714198", "commitAfterChange": "4c0128f8b7916766f71600c5a09deeca3606acf9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public RecoveredElement add(Statement statement, int bracketBalance)", "signatureAfterChange": "\r public RecoveredElement add(Statement statement, int bracketBalance)", "diff": ["-\t/* method body should have been created */\r", "-\tBlock block = new Block(0);\r", "-\tblock.sourceStart = methodDeclaration.bodyStart;\r", "-\tRecoveredElement element = this.add(block, 1);\r", "-\treturn element.add(statement, bracketBalance);\t\r", "+\tif (methodBody == null){\r", "+\t\tBlock block = new Block(0);\r", "+\t\tblock.sourceStart = methodDeclaration.bodyStart;\r", "+\t\tthis.add(block, 1);\r", "+\t}\r", "+\treturn methodBody.add(statement, bracketBalance, true);\t\r"]}], "num": 30708}