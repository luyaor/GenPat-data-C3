{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "23e3c4fd3ed85d56a7e2d565bb79eefb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e5430b51981969cdc03efda7054dfc9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "59cddc534051cc4e23e296eb517b3676eee08cc0", "commitAfterChange": "a739bc928d6e81f07965268d15ff502fa14ed12d", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic void testMethodReferenceBug80890() throws CoreException, JavaModelException", "signatureAfterChange": " \tpublic void testBug80890() throws CoreException, JavaModelException", "diff": ["-\t */", "-\tpublic void testMethodReferenceBug80890() throws CoreException, JavaModelException {", "-\t\t\tworkingCopy = getWorkingCopy(\"/JavaSearchBugs/src/bugs/A.java\",", "-\t\t\t\t\"package bugs;\\n\" + ", "+\t */", "+\tpublic void testBug80890() throws CoreException, JavaModelException {", "+\t\tICompilationUnit workingCopy = null;", "+\t\ttry {", "+\t\t\tworkingCopy = getWorkingCopy(\"/JavaSearchBugs/src/b80890/A.java\",", "+\t\t\t\t\"package b80890;\\n\" + ", "-\t\t\tworkingCopy.commitWorkingCopy(true, null);\t// need to commit to index file", "-\t\t\tIJavaSearchScope scope = SearchEngine.createJavaSearchScope(new ICompilationUnit[] { workingCopy });", "-\t\t\tIMethod method = workingCopy.getType(\"A\").getMethods()[0];", "-\t\t\tsearch(method, REFERENCES, scope, this.resultCollector);", "-\t\t\tmethod = workingCopy.getType(\"A\").getMethods()[1];", "-\t\t\tsearch(method, REFERENCES, scope, this.resultCollector);", "+\t\t\tIType type = workingCopy.getType(\"A\");", "+\t\t\tIMethod method = type.getMethods()[0];", "+\t\t\tsearch(method, REFERENCES);", "+\t\t\tmethod = type.getMethods()[1];", "+\t\t\tsearch(method, REFERENCES);", "-\t\t\t\t\"src/bugs/A.java void bugs.B1.bar1() [foo(null)] POTENTIAL_MATCH\\n\" + ", "-\t\t\t\t\"src/bugs/A.java void bugs.B2.bar2() [foo(null)] POTENTIAL_MATCH\\n\" + ", "-\t\t\t\t\"src/bugs/A.java void bugs.B1.bar1() [foo(null)] POTENTIAL_MATCH\\n\" + ", "-\t\t\t\t\"src/bugs/A.java void bugs.B2.bar2() [foo(null)] POTENTIAL_MATCH\",", "+\t\t\t\t\"src/b80890/A.java void b80890.B1.bar1() [foo(null)] POTENTIAL_MATCH\\n\" + ", "+\t\t\t\t\"src/b80890/A.java void b80890.B2.bar2() [foo(null)] POTENTIAL_MATCH\\n\" + ", "+\t\t\t\t\"src/b80890/A.java void b80890.B1.bar1() [foo(null)] POTENTIAL_MATCH\\n\" + ", "+\t\t\t\t\"src/b80890/A.java void b80890.B2.bar2() [foo(null)] POTENTIAL_MATCH\"", "+\t\t\t);", "+\t\t}", "+\t\tfinally {", "+\t\t\tif (workingCopy != null)", "+\t\t\t\tworkingCopy.discardWorkingCopy();", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac511458bede1c49ab2c718c60eb51e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "5a02e3ef9eebbbfbf5479e7ec13a8eec010013e9", "commitAfterChange": "b525c03916a55b82c2a2a3976eed083d2d68c216", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tprivate final void decodeModifiersForMethod(StringBuffer buffer, int accessFlags)", "signatureAfterChange": "  \tprivate final void decodeModifiersForMethod(StringBuffer buffer, int accessFlags)", "diff": ["-\t\t\tbuffer.append(Util.bind(\"classfileformat.acc_abstract\")); //$NON-NLS-1$", "+\t\t\tbuffer.append(\"abstract\"); //$NON-NLS-1$", "-\t\t\tbuffer.append(Util.bind(\"classfileformat.acc_final\")); //$NON-NLS-1$", "+\t\t\tbuffer.append(\"final\"); //$NON-NLS-1$", "-\t\t\tbuffer.append(Util.bind(\"classfileformat.acc_native\")); //$NON-NLS-1$", "+\t\t\tbuffer.append(\"native\"); //$NON-NLS-1$", "-\t\t\tbuffer.append(Util.bind(\"classfileformat.acc_private\")); //$NON-NLS-1$", "+\t\t\tbuffer.append(\"private\"); //$NON-NLS-1$", "-\t\t\tbuffer.append(Util.bind(\"classfileformat.acc_protected\")); //$NON-NLS-1$", "+\t\t\tbuffer.append(\"protected\"); //$NON-NLS-1$", "-\t\t\tbuffer.append(Util.bind(\"classfileformat.acc_public\")); //$NON-NLS-1$", "+\t\t\tbuffer.append(\"public\"); //$NON-NLS-1$", "-\t\t\tbuffer.append(Util.bind(\"classfileformat.acc_static\")); //$NON-NLS-1$", "+\t\t\tbuffer.append(\"static\"); //$NON-NLS-1$", "-\t\t\tbuffer.append(Util.bind(\"classfileformat.acc_strict\")); //$NON-NLS-1$", "+\t\t\tbuffer.append(\"strictfp\"); //$NON-NLS-1$", "-\t\t\tbuffer.append(Util.bind(\"classfileformat.acc_synchronized\")); //$NON-NLS-1$", "+\t\t\tbuffer.append(\"synchronized\"); //$NON-NLS-1$"]}], "num": 40624}