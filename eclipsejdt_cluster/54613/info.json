{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2af5b508c6ce4f5403cf4ffaac54db2d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c782bc644ae6091309ea77d493bb01b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "a4db13e870f0b638631acdc0b5496aeab206e505", "commitAfterChange": "6d89cdcefa6c4f6d9f7e2a6ec2f2469cf8fc5bab", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic ITypeBinding[] getInterfaces()", "signatureAfterChange": " \tpublic ITypeBinding[] getInterfaces()", "diff": ["-\t\tReferenceBinding[] interfaces = referenceBinding.superInterfaces();", "+\t\tReferenceBinding[] interfaces = null;", "+\t\ttry {", "+\t\t\tinterfaces = referenceBinding.superInterfaces();", "+\t\t} catch (AbortCompilation e) {", "+\t\t\t// in case the one of the super interfaces cannot be resolvable due to missing jars on the classpath", "+\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=57871", "+\t\t}", "+\t\tif (interfaces == null) {", "+\t\t\treturn NO_TYPE_BINDINGS;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d1fa895b45c33906718955eedc01705", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AptCompilationParticipant.java", "commitBeforeChange": "50edd18aecf53feeb87eedfe2eb9dbbb6ea16224", "commitAfterChange": "57e6ab81c3cf39fecb76455d174c657f7c273f84", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t\t \tprivate CompilationParticipantResult preBuildNotify( PreBuildCompilationEvent pbce )", "signatureAfterChange": " \t\t \tprivate CompilationParticipantResult preBuildNotify( PreBuildCompilationEvent pbce )", "diff": ["+\t\t", "+\t\t// Don't dispatch on pre-1.5 project. They cannot legally have annotations", "+\t\tString javaVersion = javaProject.getOption(\"org.eclipse.jdt.core.compiler.source\", true);", "+\t\t", "+\t\t// Check for 1.3 or 1.4, as we don't want this to break in the future when 1.6", "+\t\t// is a possibility", "+\t\tif (\"1.3\".equals(javaVersion) || \"1.4\".equals(javaVersion)) {", "+\t\t\treturn EMPTY_PRE_BUILD_COMPILATION_RESULT;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8b8e2ebeec1c54f98d03694f691d535", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "ad076ac3457d21950247155079c8bac974a24116", "commitAfterChange": "04bf0a24cb6eb3c1af3b526b67b8a2d1449e58da", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 32, "signatureBeforeChange": " \t \tpublic void searchDeclarations(IJavaElement enclosingElement, SearchRequestor requestor, SearchPattern pattern, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \t \tpublic void searchDeclarations(IJavaElement enclosingElement, SearchRequestor requestor, SearchPattern pattern, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\tIResource resource = this.getResource(enclosingElement);", "+\t\tIResource resource = enclosingElement.getResource();", "+\t\tif (enclosingElement instanceof IMember) {", "+\t\t\tIMember member = (IMember) enclosingElement;", "+\t\t\tICompilationUnit cu = member.getCompilationUnit();", "+\t\t\tif (cu != null) {", "+\t\t\t\tresource = cu.getResource();", "+\t\t\t} else if (member.isBinary()) {", "+\t\t\t\t// binary member resource cannot be used as this", "+\t\t\t\t// see bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=148215", "+\t\t\t\tresource = null;", "+\t\t\t}", "+\t\t}"]}], "num": 54613}