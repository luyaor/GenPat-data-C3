{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "448918655be4ee97195a2ba4ad6813cb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a90b560f53bb941487f1bca502977a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "9156e33be70429042b1d72217c4197f996fdfb3a", "commitAfterChange": "0bbc1f10f38c090526549c38a7d30ff164b71a76", "methodNumberBeforeChange": 167, "methodNumberAfterChange": 167, "signatureBeforeChange": " public void task(String message, int start, int end)", "signatureAfterChange": " public void task(String tag, String message, String priority, int start, int end)", "diff": ["-public void task(String message, int start, int end){", "+public void task(String tag, String message, String priority, int start, int end){", "-\t\tnew String[] { message },", "-\t\tnew String[] { message },", "+\t\tnew String[] { tag, message, priority/*secret argument that is not surfaced in getMessage()*/},", "+\t\tnew String[] { tag, message, priority/*secret argument that is not surfaced in getMessage()*/}, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "611ee27ab25ef88863011e0cfe497bd7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/BinaryIndexer.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public BinaryIndexer()", "signatureAfterChange": "  \tpublic BinaryIndexer(SearchDocument document, String indexPath)", "diff": ["- */", "-public BinaryIndexer() {", "-\tneedReferences = false;", "-}", "+\tpublic BinaryIndexer(SearchDocument document, String indexPath) {", "+\t\tsuper(document, indexPath);"]}], "num": 47815}