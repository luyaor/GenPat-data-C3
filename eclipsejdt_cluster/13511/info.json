{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5b2f5eb9248624ee86d61ec0e5d34780", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "194a4439e48dc41cf1954714990e4820", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "0a99f9e5758f5532911cc703fed29608d31e0690", "commitAfterChange": "6b1f52d06754e9410aa789dbd826f9d303675356", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  public UnconditionalFlowInfo mergedWith(UnconditionalFlowInfo otherInits)", "signatureAfterChange": "  public UnconditionalFlowInfo mergedWith(UnconditionalFlowInfo otherInits)", "diff": ["+\t\t", "+\t\t// WORK recode if tests succeed", "+\t\tthis.nullAssignmentValueBit1 &= ", "+\t\t\t~(a1 & na2 & na3 & a4 & nb1 & b2 & nb3 & nb4", "+\t\t\t\t\t| ~a1 & a2 & na3 & na4 & b1 & nb2 & nb3 & b4);", "+\t\t", "+", "+\t\t\t\t// WORK recode if tests succeed", "+\t\t\t\tthis.extra[4][i] &= ", "+\t\t\t\t\t~(a1 & na2 & na3 & a4 & nb1 & b2 & nb3 & nb4", "+\t\t\t\t\t\t\t| ~a1 & a2 & na3 & na4 & b1 & nb2 & nb3 & b4);", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e1794cad9ce07a8041ca11428791d00", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "1e5960a8e1d6d5a1af8d629bddab71c46e5ed5a1", "commitAfterChange": "0d665ff7724ca0a2df27fa238eee0ddf6c106c65", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "  \tprivate void initializeScanner(long sourceLevel, DefaultCodeFormatterOptions preferences)", "signatureAfterChange": "  \tprivate void initializeScanner(long sourceLevel, DefaultCodeFormatterOptions preferences)", "diff": ["+\t\tthis.tagsKind = 0;", "+\t\t\t}", "+\t\t}", "+\t\tif (taskTags != null) {", "+\t\t\tloop: for (int i=0,length=taskTags.length; i<length; i++) {", "+\t\t\t\tif (taskTags[i].length > 2 && taskTags[i][0] == '/') {", "+\t\t\t\t\tswitch (taskTags[i][1]) {", "+\t\t\t\t\t\tcase '/':", "+\t\t\t\t\t\t\tthis.tagsKind = TerminalTokens.TokenNameCOMMENT_LINE;", "+\t\t\t\t\t\t\tbreak loop;", "+\t\t\t\t\t\tcase '*':", "+\t\t\t\t\t\t\tif (taskTags[i][2] != '*') {", "+\t\t\t\t\t\t\t\tthis.tagsKind = TerminalTokens.TokenNameCOMMENT_BLOCK;", "+\t\t\t\t\t\t\t\tbreak loop;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}", "+\t\t\t\t}"]}], "num": 13511}