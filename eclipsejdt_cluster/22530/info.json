{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d03800c63a58beeae4eebfcefd651511", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75c14216bce20bfc7452c3b221e42abf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java", "commitBeforeChange": "43c947b648b5a1fa1fb7d4f5ce5b7cea1d4fa7a2", "commitAfterChange": "eee151556fa5628da58c297d3e841df408f33c62", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic int getExtendedEnd(ASTNode node)", "signatureAfterChange": " \tpublic int getExtendedEnd(ASTNode node)", "diff": ["-\t\t\t\tComment lastComment = this.comments[range[1]];", "-\t\t\t\tend = lastComment.getStartPosition() + lastComment.getLength();", "+\t\t\t\tif (range[0] == -1 && range[1] == -1) {", "+\t\t\t\t\tASTNode parent = node.getParent();", "+\t\t\t\t\tif (parent != null) {", "+\t\t\t\t\t\treturn getExtendedEnd(parent);", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\tComment lastComment = this.comments[range[1]];", "+\t\t\t\t\tend = lastComment.getStartPosition() + lastComment.getLength();", "+\t\t\t\t}", "-\t\treturn end;", "+\t\treturn end-1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7cbfb6ee0bce4535a87303a8369f2fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "e8c9a8ad63c042540bdf2089eae8eda8857cd19d", "commitAfterChange": "44ff943ce2a18d1de59c739946fda0722d1ad727", "methodNumberBeforeChange": 381, "methodNumberAfterChange": 381, "signatureBeforeChange": " public boolean hasLeadingTagComment(char[] commentPrefixTag, int rangeEnd)", "signatureAfterChange": " public boolean hasLeadingTagComment(char[] commentPrefixTag, int rangeEnd)", "diff": ["-\t\t\tif (charPos >= rangeEnd) return false; // comment is too small to host tag", "-\t\t\tif (source[charPos] != commentPrefixTag[iTag]) return false;", "+\t\t\tif (charPos >= rangeEnd // comment is too small to host tag", "+\t\t\t\t\t|| source[charPos] != commentPrefixTag[iTag]) {", "+\t\t\t\tif (iTag == 0) {", "+\t\t\t\t\treturn false; // didn't even match leading '$' -> not a tag comment", "+\t\t\t\t} else {", "+\t\t\t\t\tcontinue previousComment; // accept as tag comment -> skip it and keep searching backwards", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 22530}