{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a6ac7bec2d35cacdcf2b5833f9e28d7", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d6e590030ee2fd7af56b5e4f4a0d28c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JarPackageFragmentRoot.java", "commitBeforeChange": "1d91bb6095cf925ea7ef511c76b46befc586fea4", "commitAfterChange": "11e4e14c87ae9f5d3c387265b339332ab33728bd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprotected boolean computeChildren(OpenableElementInfo info, Map newElements) throws JavaModelException", "signatureAfterChange": " \tprotected boolean computeChildren(OpenableElementInfo info, Map newElements) throws JavaModelException", "diff": ["-\t\t\t\tString entryName= member.getName();", "-\t", "-\t\t\t\tif (member.isDirectory()) {", "-\t\t\t\t\t", "-\t\t\t\t\tinitPackageFragToTypes(packageFragToTypes, entryName, entryName.length()-1);", "-\t\t\t\t} else {", "-\t\t\t\t\t//store the class file / non-java rsc entry name to be cached in the appropriate package fragment", "-\t\t\t\t\t//zip entries only use '/'", "-\t\t\t\t\tint lastSeparator= entryName.lastIndexOf('/');", "-\t\t\t\t\tString fileName= entryName.substring(lastSeparator + 1);", "-\t\t\t\t\tString[] pkgName = initPackageFragToTypes(packageFragToTypes, entryName, lastSeparator);", "-", "-\t\t\t\t\t// add classfile info amongst children", "-\t\t\t\t\tArrayList[] children = (ArrayList[]) packageFragToTypes.get(pkgName);", "-\t\t\t\t\tif (org.eclipse.jdt.internal.compiler.util.Util.isClassFileName(entryName)) {", "-\t\t\t\t\t\tif (children[JAVA] == EMPTY_LIST) children[JAVA] = new ArrayList();", "-\t\t\t\t\t\tchildren[JAVA].add(fileName);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tif (children[NON_JAVA] == EMPTY_LIST) children[NON_JAVA] = new ArrayList();", "-\t\t\t\t\t\tchildren[NON_JAVA].add(fileName);", "-\t\t\t\t\t}", "-\t\t\t\t}", "+\t\t\t\tinitPackageFragToTypes(packageFragToTypes, member.getName(), member.isDirectory());", "+\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f75f14614e258577ce269feae2f5f1c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "bdd661ede446c1c3bdc76fd684c8f024821af3ac", "commitAfterChange": "0db27b507a6968d4fb2f769e63fcd5182f023962", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": " public IBinaryType getBinaryTypeInfo(IFile file) throws JavaModelException", "signatureAfterChange": " public IBinaryType getBinaryTypeInfo(IFile file) throws JavaModelException", "diff": ["-\tJavaElement le = (JavaElement) getParent();", "-\tif (le instanceof JarPackageFragment) {", "+\tJavaElement pkg = (JavaElement) getParent();", "+\tif (pkg instanceof JarPackageFragment) {", "-\t\t\tJarPackageFragmentRoot root = (JarPackageFragmentRoot) le.getParent();", "-\t\t\tIBinaryType info = null;", "-\t\t\tZipFile zip = null;", "-\t\t\ttry {", "-\t\t\t\tzip = root.getJar();", "-\t\t\t\tPackageFragment pkg = (PackageFragment) le;", "-\t\t\t\tString entryName = Util.concatWith(pkg.names, getElementName(), '/');", "-\t\t\t\tZipEntry ze = zip.getEntry(entryName);", "-\t\t\t\tif (ze != null) {", "-\t\t\t\t\tbyte contents[] = org.eclipse.jdt.internal.compiler.util.Util.getZipEntryByteContent(ze, zip);", "-\t\t\t\t\tString fileName = root.getHandleIdentifier() + IDependent.JAR_FILE_ENTRY_SEPARATOR + entryName;", "-\t\t\t\t\tinfo = new ClassFileReader(contents, fileName.toCharArray(), true/*fully initialize so as to not keep a reference to the byte array*/);", "-\t\t\t\t}", "-\t\t\t} finally {", "-\t\t\t\tJavaModelManager.getJavaModelManager().closeZipFile(zip);", "-\t\t\t}", "+\t\t\tIBinaryType info = getJarBinaryTypeInfo((PackageFragment) pkg);"]}], "num": 62312}