{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a6d98e12d3faf8b578a8f518633672b4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bd01846cf0834791bedcdbf5d3f85bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "821b6028ffbd0ba8edfd1a0534c32e817f4e830d", "commitAfterChange": "06e4a5efa4ac79a81431ad2110bd08f2ba1b98a7", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": " \t \tprotected VariableDeclarationFragment convertToVariableDeclarationFragment(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration)", "signatureAfterChange": " \t \tprotected VariableDeclarationFragment convertToVariableDeclarationFragment(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration)", "diff": ["-\t\tint start = fieldDeclaration.sourceEnd; // need the exclusive range for retrieveEndOfPotentialExtendedDimensions", "+\t\tint start = fieldDeclaration.sourceEnd;", "-\t\t\tend = retrieveEndOfPotentialExtendedDimensions(start + 1, fieldDeclaration.sourceEnd, fieldDeclaration.declarationSourceEnd);", "-\t\t\tif (end == -1) {", "+\t\t\tint possibleEnd = retrieveEndOfPotentialExtendedDimensions(start + 1, fieldDeclaration.sourceEnd, fieldDeclaration.declarationSourceEnd);", "+\t\t\tif (possibleEnd == Integer.MIN_VALUE) {", "+\t\t\t} if (possibleEnd < 0) {", "+\t\t\t\tend = -possibleEnd;", "+\t\t\t\tvariableDeclarationFragment.setFlags(variableDeclarationFragment.getFlags() | ASTNode.MALFORMED);", "+\t\t\t} else {", "+\t\t\t\tend = possibleEnd;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e658da064ed2dfcf52d5aa16793fd823", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "821b6028ffbd0ba8edfd1a0534c32e817f4e830d", "commitAfterChange": "06e4a5efa4ac79a81431ad2110bd08f2ba1b98a7", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": "  \tprotected VariableDeclarationFragment convertToVariableDeclarationFragment(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration localDeclaration)", "signatureAfterChange": "  \tprotected VariableDeclarationFragment convertToVariableDeclarationFragment(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration localDeclaration)", "diff": ["-\t\tint end = start;", "+\t\tint end;", "-\t\t\tif (possibleEnd != -1) {", "-\t\t\t\tend = possibleEnd;", "-\t\t\t} else {", "+\t\t\tif (possibleEnd == Integer.MIN_VALUE) {", "+\t\t\t\tend = start;", "+\t\t\t} else if (possibleEnd < 0) {", "+\t\t\t\tend = -possibleEnd;", "+\t\t\t\tvariableDeclarationFragment.setFlags(variableDeclarationFragment.getFlags() | ASTNode.MALFORMED);", "+\t\t\t} else {", "+\t\t\t\tend = possibleEnd;"]}], "num": 65443}