{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2fe8cbce48a776d68563ba748b837306", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4f54633987aabe2c3304dd2ac610780", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "a79a5fed20f0b79ac462e610bf3b449217b3ebc0", "commitAfterChange": "36f5372d7ac9bba55d944741c27bb1acbfd867c9", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic String getKey()", "signatureAfterChange": " \tpublic String getKey()", "diff": ["-\t\t\t\tif (this.binding.isClass() || this.binding.isInterface()) {", "+\t\t\t\tif (this.binding.isTypeVariable()) {", "+\t\t\t\t\tTypeVariableBinding typeVariableBinding = (TypeVariableBinding) this.binding;", "+\t\t\t\t\tBinding declaringElement = typeVariableBinding.declaringElement;", "+\t\t\t\t\tStringBuffer buffer = new StringBuffer();", "+\t\t\t\t\tbuffer.append(typeVariableBinding.sourceName);", "+\t\t\t\t\tif (declaringElement instanceof org.eclipse.jdt.internal.compiler.lookup.TypeBinding) {", "+\t\t\t\t\t\tbuffer.append(this.resolver.getTypeBinding((org.eclipse.jdt.internal.compiler.lookup.TypeBinding) declaringElement).getKey());", "+\t\t\t\t\t} else if (declaringElement instanceof org.eclipse.jdt.internal.compiler.lookup.MethodBinding) {", "+\t\t\t\t\t\tbuffer.append(this.resolver.getMethodBinding((org.eclipse.jdt.internal.compiler.lookup.MethodBinding) declaringElement).getKey());\t\t\t\t\t\t", "+\t\t\t\t\t}", "+\t\t\t\t\treturn String.valueOf(buffer);", "+\t\t\t\t} else if (this.binding.isWildcard()) {", "+\t\t\t\t\tWildcardBinding wildcardBinding = (WildcardBinding) binding;", "+\t\t\t\t\torg.eclipse.jdt.internal.compiler.lookup.TypeBinding bound = wildcardBinding.bound;", "+\t\t\t\t\tif (bound != null) {", "+\t\t\t\t\t\treturn this.resolver.getTypeBinding(bound).getKey();", "+\t\t\t\t\t}", "+\t\t\t\t\treturn new String(wildcardBinding.genericTypeSignature());", "+\t\t\t\t} else if (this.isClass()", "+\t\t\t\t\t\t|| this.isInterface()", "+\t\t\t\t\t\t|| this.isEnum()", "+\t\t\t\t\t\t|| this.isAnnotation()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e559f022206ede0cccf236892c7533f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tpublic boolean isFromSource()", "signatureAfterChange": " \tpublic boolean isFromSource()", "diff": ["+\t\t} else if (isTypeVariable()) {", "+\t\t\tfinal TypeVariableBinding typeVariableBinding = (TypeVariableBinding) this.binding;", "+\t\t\tfinal Binding declaringElement = typeVariableBinding.declaringElement;", "+\t\t\tif (declaringElement instanceof MethodBinding) {", "+\t\t\t\tMethodBinding methodBinding = (MethodBinding) declaringElement;", "+\t\t\t\treturn !methodBinding.declaringClass.isBinaryBinding();", "+\t\t\t} else {", "+\t\t\t\tfinal org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding = (org.eclipse.jdt.internal.compiler.lookup.TypeBinding) declaringElement;", "+\t\t\t\tif (typeBinding instanceof ReferenceBinding) {", "+\t\t\t\t\treturn !((ReferenceBinding) typeBinding).isBinaryBinding();", "+\t\t\t\t} else if (typeBinding instanceof ArrayBinding) {", "+\t\t\t\t\tfinal ArrayBinding arrayBinding = (ArrayBinding) typeBinding;", "+\t\t\t\t\tfinal org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType = arrayBinding.leafComponentType;", "+\t\t\t\t\tif (leafComponentType instanceof ReferenceBinding) {", "+\t\t\t\t\t\treturn !((ReferenceBinding) leafComponentType).isBinaryBinding();", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\t", "+\t\t} else if (isCapture()) {", "+\t\t\tCaptureBinding captureBinding = (CaptureBinding) this.binding;", "+\t\t\treturn !captureBinding.sourceType.isBinaryBinding();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f478bfced821f85a3ef38c04c9fae323", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "c8af5e76f44ad60b89fcc109db821631c8461cdd", "commitAfterChange": "7202d999e970cc0e26c9a6dc344ca659a295fdad", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic String getBinaryName()", "signatureAfterChange": " \tpublic String getBinaryName()", "diff": ["-\t\tchar[] constantPoolName = this.binding.constantPoolName();", "+\t\tif (this.binding.isTypeVariable()) {", "+\t\t\tTypeVariableBinding typeVariableBinding = (TypeVariableBinding) this.binding;", "+\t\t\torg.eclipse.jdt.internal.compiler.lookup.Binding declaring = typeVariableBinding.declaringElement;", "+\t\t\tStringBuffer binaryName = new StringBuffer();", "+\t\t\tswitch(declaring.kind()) {", "+\t\t\t\tcase org.eclipse.jdt.internal.compiler.lookup.Binding.METHOD :", "+\t\t\t\t\tMethodBinding methodBinding = (MethodBinding) declaring;", "+\t\t\t\t\tchar[] constantPoolName = methodBinding.declaringClass.constantPoolName();", "+\t\t\t\t\tif (constantPoolName == null) return null;", "+\t\t\t\t\tbinaryName", "+\t\t\t\t\t\t.append(CharOperation.replaceOnCopy(constantPoolName, '/', '.'))", "+\t\t\t\t\t\t.append('$')", "+\t\t\t\t\t\t.append(methodBinding.signature())", "+\t\t\t\t\t\t.append('$')", "+\t\t\t\t\t\t.append(typeVariableBinding.sourceName);", "+\t\t\t\t\tbreak;", "+\t\t\t\tdefault :", "+\t\t\t\t\torg.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding = (org.eclipse.jdt.internal.compiler.lookup.TypeBinding) declaring;", "+\t\t\t\t\tconstantPoolName = typeBinding.constantPoolName();", "+\t\t\t\t\tif (constantPoolName == null) return null;", "+\t\t\t\t\tbinaryName", "+\t\t\t\t\t\t.append(CharOperation.replaceOnCopy(constantPoolName, '/', '.'))", "+\t\t\t\t\t\t.append('$')", "+\t\t\t\t\t\t.append(typeVariableBinding.sourceName);", "+\t\t\t}", "+\t\t\treturn String.valueOf(binaryName);", "+\t\t}", "+ \t\tchar[] constantPoolName = this.binding.constantPoolName();"]}], "num": 57179}