{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e23df279e4d85f45a3d8a7519d57cab0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a24bd411edab3543f8d0fe0fd12cd48", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "b89ad18e17834e64930a830c92b5e2241f9a8b44", "commitAfterChange": "d9605208e25375e966739effbd053a969138c830", "methodNumberBeforeChange": 161, "methodNumberAfterChange": 161, "signatureBeforeChange": " \tpublic void test050a()", "signatureAfterChange": " \tpublic void test050a()", "diff": ["+\t\tString expectedCompilerLog = (this.complianceLevel == ClassFileConstants.JDK1_6)?", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. WARNING in X.java (at line 2)\\n\" + ", "+\t\t\t\t\"\tpublic static <S extends A> void foo() { System.out.print(\\\"A\\\"); }\\n\" + ", "+\t\t\t\t\"\t                                 ^^^^^\\n\" + ", "+\t\t\t\t\"Duplicate method foo() in type X\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\t\"\tpublic static <N extends B> N foo() { System.out.print(\\\"B\\\"); return null; }\\n\" + ", "+\t\t\t\t\"\t                              ^^^^^\\n\" + ", "+\t\t\t\t\"Duplicate method foo() in type X\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\t\"\tX.foo();\\n\" + ", "+\t\t\t\t\"\t  ^^^\\n\" + ", "+\t\t\t\t\"The method foo() is ambiguous for the type X\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"4. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\tfoo();\\n\" + ", "+\t\t\t\t\"\t^^^\\n\" + ", "+\t\t\t\t\"The method foo() is ambiguous for the type X\\n\" + ", "+\t\t\t\t\"----------\\n\":", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\t\t\"\tpublic static <S extends A> void foo() { System.out.print(\\\"A\\\"); }\\n\" + ", "+\t\t\t\t\t\"\t                                 ^^^^^\\n\" + ", "+\t\t\t\t\t\"Duplicate method foo() in type X\\n\" + ", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"2. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\t\t\"\tpublic static <N extends B> N foo() { System.out.print(\\\"B\\\"); return null; }\\n\" + ", "+\t\t\t\t\t\"\t                              ^^^^^\\n\" + ", "+\t\t\t\t\t\"Duplicate method foo() in type X\\n\" + ", "+\t\t\t\t\t\"----------\\n\";", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "-\t\t\t\"\tpublic static <S extends A> void foo() { System.out.print(\\\"A\\\"); }\\n\" + ", "-\t\t\t\"\t                                 ^^^^^\\n\" + ", "-\t\t\t\"Duplicate method foo() in type X\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 3)\\n\" + ", "-\t\t\t\"\tpublic static <N extends B> N foo() { System.out.print(\\\"B\\\"); return null; }\\n\" + ", "-\t\t\t\"\t                              ^^^^^\\n\" + ", "-\t\t\t\"Duplicate method foo() in type X\\n\" + ", "-\t\t\t\"----------\\n\"", "+\t\t\texpectedCompilerLog"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "627ca688fdcf37bdcd532efdd9874605", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "778e64a3c8e6903c625067607c9068d73d8cd5e5", "commitAfterChange": "e12812c02c749e710a55fe1f28fa9764f0ac6bd5", "methodNumberBeforeChange": 160, "methodNumberAfterChange": 160, "signatureBeforeChange": " \tpublic void test050a()", "signatureAfterChange": " \tpublic void test050a()", "diff": ["-\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=94754", "-\tpublic void test050a() {", "-\t\tif (new CompilerOptions(getCompilerOptions()).complianceLevel >= ClassFileConstants.JDK1_7) return; // see test187()", "-\t\t\t\t\"\t\t public static <S extends A> void foo() { System.out.print(\\\"A\\\"); }\\n\" +", "-\t\t\t\t\"\t\t public static <N extends B> N foo() { System.out.print(\\\"B\\\"); return null; }\\n\" +", "-\t\t\t\t\"\t\t static void test () {\\n\" +", "-\t\t\t\t\"\t\t \tX.foo();\\n\" +", "-\t\t\t\t\"\t\t \tfoo();\\n\" +", "-\t\t\t\t\"\t\t }\\n\" +", "-\t\t\t\t\"class B {}\\n\"", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. ERROR in X.java (at line 5)\\r\\n\" +", "-\t\t\t\"\tX.foo();\\r\\n\" +", "-\t\t\t\"\t  ^^^\\n\" +", "-\t\t\t\"The method foo() is ambiguous for the type X\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"2. ERROR in X.java (at line 6)\\r\\n\" +", "-\t\t\t\"\tfoo();\\r\\n\" +", "-\t\t\t\"\t^^^\\n\" +", "-\t\t\t\"The method foo() is ambiguous for the type X\\n\" +", "-\t\t\t// both references are ambiguous", "+\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=94754", "+\tpublic void test050a() {", "+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static <S extends A> void foo() { System.out.print(\\\"A\\\"); }\\n\" +", "+\t\t\t\t\"\tpublic static <N extends B> N foo() { System.out.print(\\\"B\\\"); return null; }\\n\" +", "+\t\t\t\t\"\tstatic void test () {\\n\" +", "+\t\t\t\t\"\t\tX.foo();\\n\" +", "+\t\t\t\t\"\t\tfoo();\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"}\\n\" +", "+\t\t\t\t\"class A {}\\n\" +", "+\t\t\t\t\"class B {}\"", "+\t\t\t},", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\"\tpublic static <S extends A> void foo() { System.out.print(\\\"A\\\"); }\\n\" + ", "+\t\t\t\"\t                                 ^^^^^\\n\" + ", "+\t\t\t\"Duplicate method foo() in type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tpublic static <N extends B> N foo() { System.out.print(\\\"B\\\"); return null; }\\n\" + ", "+\t\t\t\"\t                              ^^^^^\\n\" + ", "+\t\t\t\"Duplicate method foo() in type X\\n\" + ", "+\t\t\t\"----------\\n\"", "+\t\t);", "+/* javac 7", "+X.java:3: name clash: <N>foo() and <S>foo() have the same erasure", "+        public static <N extends B> N foo() { System.out.print(\"B\"); return null; }", "+                                      ^", "+  where N,S are type-variables:", "+    N extends B declared in method <N>foo()", "+    S extends A declared in method <S>foo()", "+1 error", "+ */"]}], "num": 68466}