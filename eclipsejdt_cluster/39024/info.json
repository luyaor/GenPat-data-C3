{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4119c269e0c9cac47be7c976bbd9b580", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78f8858a8aa7747a9476c1796c368216", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": " private final static void buildFileOfByteFor(String filename, String tag, String[] tokens) throws java.io.IOException", "signatureAfterChange": " private final static byte[] buildFileOfByteFor(String filename, String tag, String[] tokens) throws java.io.IOException", "diff": ["-private final static void buildFileOfByteFor(String filename, String tag, String[] tokens) throws java.io.IOException {", "-", "-\t//transform the String tokens into chars before dumping then into file", "-", "-\tint i = 0;", "-\t//read upto the tag", "-\twhile (!tokens[i++].equals(tag)){/*empty*/}", "-\t//read upto the }", "-\t", "-\tbyte[] bytes = new byte[tokens.length]; //can't be bigger", "-\tint ic = 0;", "-\tString token;", "-\twhile (!(token = tokens[i++]).equals(\"}\")) { //$NON-NLS-1$", "-\t\tint c = Integer.parseInt(token);", "-\t\tbytes[ic++] = (byte) c;", "-", "-\t//resize", "-\tSystem.arraycopy(bytes, 0, bytes = new byte[ic], 0, ic);", "-", "-\tbuildFileForTable(filename, bytes);", "-}", "+private final static byte[] buildFileOfByteFor(String filename, String tag, String[] tokens) throws java.io.IOException {", "+", "+\t//transform the String tokens into chars before dumping then into file", "+", "+\tint i = 0;", "+\t//read upto the tag", "+\twhile (!tokens[i++].equals(tag)){/*empty*/}", "+\t//read upto the }", "+\t", "+\tbyte[] bytes = new byte[tokens.length]; //can't be bigger", "+\tint ic = 0;", "+\tString token;", "+\twhile (!(token = tokens[i++]).equals(\"}\")) { //$NON-NLS-1$", "+\t\tint c = Integer.parseInt(token);", "+\t\tbytes[ic++] = (byte) c;", "+\t}", "+", "+\t//resize", "+\tSystem.arraycopy(bytes, 0, bytes = new byte[ic], 0, ic);", "+", "+\tbuildFileForTable(filename, bytes);", "+\treturn bytes;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8858e02e9424ed2a0cc45b329b995493", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "747c1eb91c4c0949e5f9ce17bdd2a765ef496fa4", "commitAfterChange": "f657f893ed970d58ce4565eab2924c903044ce31", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " private final static void buildFileOfIntFor(String filename, String tag, String[] tokens) throws java.io.IOException", "signatureAfterChange": " private final static char[] buildFileOfIntFor(String filename, String tag, String[] tokens) throws java.io.IOException", "diff": ["-private final static void buildFileOfIntFor(String filename, String tag, String[] tokens) throws java.io.IOException {", "+private final static char[] buildFileOfIntFor(String filename, String tag, String[] tokens) throws java.io.IOException {", "+\treturn chars;"]}], "num": 39024}