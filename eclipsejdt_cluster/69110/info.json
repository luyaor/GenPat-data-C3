{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6bcf81a6520e25ebab252cf80d6da843", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1659a4c0a8a01de1797adb5cd8ebd953", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "673b7eda95cd26449992e862f0c63f2c612903a0", "commitAfterChange": "b04602938404af4f8569a399fb36a5018768a262", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": "\r \r \tprotected void consumeLocalVariableDeclaration()", "signatureAfterChange": "\r protected void consumeLocalVariableDeclaration()", "diff": ["-\r", "-\tprotected void consumeLocalVariableDeclaration() {\r", "-\t\t// LocalVariableDeclaration ::= Modifiers Type VariableDeclarators ';'\r", "-\r", "-\t\t/*\r", "-\t\tastStack : \r", "-\t\texpressionStack: Expression Expression ...... Expression\r", "-\t\tidentifierStack : type  identifier identifier ...... identifier\r", "-\t\tintStack : typeDim      dim        dim               dim\r", "-\t\t ==>\r", "-\t\tastStack : FieldDeclaration FieldDeclaration ...... FieldDeclaration\r", "-\t\texpressionStack :\r", "-\t\tidentifierStack : \r", "-\t\tintStack : \r", "-\t\t  \r", "-\t\t*/\r", "-\t\tint variableDeclaratorsCounter = astLengthStack[astLengthPtr];\r", "-\t\t// retrieve modifiers\r", "-\t\t// The modifiers has been set and it is still at the right value\r", "-\t\t// declaration starts from the modifierSourceStart\r", "-\t\tfor (int i = variableDeclaratorsCounter - 1; i >= 0; i--) {\r", "-\t\t\tLocalDeclaration localDeclaration = (LocalDeclaration) astStack[astPtr - i];\r", "-\t\t\tlocalDeclaration.declarationSourceEnd = endStatementPosition;\r", "-\t\t\t// semi-colon included\r", "-\t\t}\r", "-\t\t// update the astStack, astPtr and astLengthStack\r", "-\t\tint startIndex = astPtr - variablesCounter[nestedType] + 1;\r", "-\t\tSystem.arraycopy(\r", "-\t\t\tastStack,\r", "-\t\t\tstartIndex,\r", "-\t\t\tastStack,\r", "-\t\t\tstartIndex - 1,\r", "-\t\t\tvariableDeclaratorsCounter);\r", "-\t\tastPtr--; // remove the type reference\r", "-\t\tastLengthStack[--astLengthPtr] = variableDeclaratorsCounter;\r", "-\t\tvariablesCounter[nestedType] = 0;\r", "-\t}\r", "+}\r", "+protected void consumeLocalVariableDeclaration() {\r", "+\t// LocalVariableDeclaration ::= Modifiers Type VariableDeclarators ';'\r", "+\r", "+\t/*\r", "+\tastStack : \r", "+\texpressionStack: Expression Expression ...... Expression\r", "+\tidentifierStack : type  identifier identifier ...... identifier\r", "+\tintStack : typeDim      dim        dim               dim\r", "+\t ==>\r", "+\tastStack : FieldDeclaration FieldDeclaration ...... FieldDeclaration\r", "+\texpressionStack :\r", "+\tidentifierStack : \r", "+\tintStack : \r", "+\t  \r", "+\t*/\r", "+\tint variableDeclaratorsCounter = astLengthStack[astLengthPtr];\r", "+\r", "+\t// update the astStack, astPtr and astLengthStack\r", "+\tint startIndex = astPtr - variablesCounter[nestedType] + 1;\r", "+\tSystem.arraycopy(\r", "+\t\tastStack, \r", "+\t\tstartIndex, \r", "+\t\tastStack, \r", "+\t\tstartIndex - 1, \r", "+\t\tvariableDeclaratorsCounter); \r", "+\tastPtr--; // remove the type reference\r", "+\tastLengthStack[--astLengthPtr] = variableDeclaratorsCounter;\r", "+\tvariablesCounter[nestedType] = 0;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f3aa5b874754e2471a3b95e87451749", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": " protected void consumeFieldDeclaration()", "signatureAfterChange": " protected void consumeFieldDeclaration()", "diff": ["-\tint variableDeclaratorsCounter = astLengthStack[astLengthPtr];", "+\tint variableDeclaratorsCounter = this.astLengthStack[this.astLengthPtr];", "-\t\tFieldDeclaration fieldDeclaration = (FieldDeclaration) astStack[astPtr - i];", "-\t\tfieldDeclaration.declarationSourceEnd = endStatementPosition; ", "-\t\tfieldDeclaration.declarationEnd = endStatementPosition;\t// semi-colon included", "+\t\tFieldDeclaration fieldDeclaration = (FieldDeclaration) this.astStack[this.astPtr - i];", "+\t\tfieldDeclaration.declarationSourceEnd = this.endStatementPosition; ", "+\t\tfieldDeclaration.declarationEnd = this.endStatementPosition;\t// semi-colon included", "-\tint endPos = flushCommentsDefinedPriorTo(endStatementPosition);", "-\tif (endPos != endStatementPosition) {", "+\tint endPos = flushCommentsDefinedPriorTo(this.endStatementPosition);", "+\tif (endPos != this.endStatementPosition) {", "-\t\t\tFieldDeclaration fieldDeclaration = (FieldDeclaration) astStack[astPtr - i];", "+\t\t\tFieldDeclaration fieldDeclaration = (FieldDeclaration) this.astStack[this.astPtr - i];", "-\tint startIndex = astPtr - variablesCounter[nestedType] + 1;", "+\tint startIndex = this.astPtr - this.variablesCounter[this.nestedType] + 1;", "-\t\tastStack, ", "+\t\tthis.astStack, ", "-\t\tastStack, ", "+\t\tthis.astStack, ", "-\tastPtr--; // remove the type reference", "-\tastLengthStack[--astLengthPtr] = variableDeclaratorsCounter;", "+\tthis.astPtr--; // remove the type reference", "+\tthis.astLengthStack[--this.astLengthPtr] = variableDeclaratorsCounter;", "-\tif (currentElement != null) {", "-\t\tlastCheckPoint = endPos + 1;", "-\t\tif (currentElement.parent != null && currentElement instanceof RecoveredField){", "-\t\t\tif (!(currentElement instanceof RecoveredInitializer)) {", "-\t\t\t\tcurrentElement = currentElement.parent;", "+\tif (this.currentElement != null) {", "+\t\tthis.lastCheckPoint = endPos + 1;", "+\t\tif (this.currentElement.parent != null && this.currentElement instanceof RecoveredField){", "+\t\t\tif (!(this.currentElement instanceof RecoveredInitializer)) {", "+\t\t\t\tthis.currentElement = this.currentElement.parent;", "-\t\trestartRecovery = true;", "+\t\tthis.restartRecovery = true;", "-\tvariablesCounter[nestedType] = 0;", "+\tthis.variablesCounter[this.nestedType] = 0;"]}], "num": 69110}