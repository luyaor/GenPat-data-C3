{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5876119841ea0019ff0609788b90b58c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acb7f966e4de291fe7c8b23a7852a69a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void bindThrownExceptions()", "signatureAfterChange": " \tpublic void bindThrownExceptions()", "diff": ["-\t\t\t\t\tthis.thrownExceptions[i].binding = this.binding.thrownExceptions[i];", "+\t\t\t\t\tthis.thrownExceptions[i].resolvedType = this.binding.thrownExceptions[i];", "-\t\t\t\t\t\t\tthrownException.binding = thrownExceptionBinding;", "+\t\t\t\t\t\t\tthrownException.resolvedType = thrownExceptionBinding;", "-\t\t\t\t\t\t\tthrownException.binding = thrownExceptionBinding;", "+\t\t\t\t\t\t\tthrownException.resolvedType = thrownExceptionBinding;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d49f33a4047505a94e428aaffaa0168b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "9713cc0fc86fbe0881ff90c5290328149c35cbdc", "commitAfterChange": "236485921f70a82e4283431ca8763bf21e25e459", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic ParameterizedGenericMethodBinding(MethodBinding originalMethod, TypeBinding[] typeArguments, LookupEnvironment environment)", "signatureAfterChange": " \tpublic ParameterizedGenericMethodBinding(MethodBinding originalMethod, TypeBinding[] typeArguments, LookupEnvironment environment)", "diff": ["-", "-\t    this.thrownExceptions = Scope.substitute(this, originalMethod.thrownExceptions);", "-\t    if (this.thrownExceptions == null) this.thrownExceptions = Binding.NO_EXCEPTIONS;", "+\t    this.thrownExceptions = Scope.substitute(this, originalMethod.thrownExceptions);", "+\t    if (this.thrownExceptions == null) this.thrownExceptions = Binding.NO_EXCEPTIONS;"]}], "num": 3257}