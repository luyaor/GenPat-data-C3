{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0ba6be9b71223674cccc263464d2b088", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "605436d7023e7e5c48541b4ece7af106", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyParser.java", "commitBeforeChange": "f42f6fde314bb3e2673238bee1f0dd8f360682c3", "commitAfterChange": "293f4c4c0cf7730a48afb98a4849499fa661b978", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t\t \t\tint nextToken()", "signatureAfterChange": " \t\t \t\tint nextToken()", "diff": ["-\t\t\t\t\t\tif (this.index == previousTokenEnd) {", "-\t\t\t\t\t\t\tthis.start = this.index+1;", "-\t\t\t\t\t\t\tpreviousTokenEnd = this.start;", "-\t\t\t\t\t\t} else if (this.start > 0) {", "+\t\t\t\t\t\tif (this.start > 0) {", "-\t\t\t\t\t\t\t\t\tthis.token = TYPE;", "-\t\t\t\t\t\t\t\t\treturn this.token;", "+\t\t\t\t\t\t\t\t\tif (this.index == previousTokenEnd) {", "+\t\t\t\t\t\t\t\t\t\tthis.start = this.index+1;", "+\t\t\t\t\t\t\t\t\t\tpreviousTokenEnd = this.start;", "+\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\tthis.token = TYPE;", "+\t\t\t\t\t\t\t\t\t\treturn this.token;", "+\t\t\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f52861d27e65873a16f466db01fd67c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "a899cd29a75883646450816539797817299ec777", "commitAfterChange": "bdf79fcc26d1f82ae3c59775bd7a3df51c38f892", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  \tpublic TypeBinding resolveTypeExpecting( \t\tBlockScope scope, \t\tTypeBinding expectedType)", "signatureAfterChange": "  \tpublic TypeBinding resolveTypeExpecting( \t\tBlockScope scope, \t\tTypeBinding expectedType)", "diff": ["-\t\tif (scope.isBoxingCompatibleWith(expressionType, expectedType)) {", "-\t\t\tthis.computeConversion(scope, expectedType, expressionType);", "-\t\t} else if (!expressionType.isCompatibleWith(expectedType)) {", "-\t\t\tscope.problemReporter().typeMismatchError(expressionType, expectedType, this);", "-\t\t\treturn null;", "+\t\tif (!expressionType.isCompatibleWith(expectedType)) {", "+\t\t\tif (scope.isBoxingCompatibleWith(expressionType, expectedType)) {", "+\t\t\t\tthis.computeConversion(scope, expectedType, expressionType);", "+\t\t\t} else {", "+\t\t\t\tscope.problemReporter().typeMismatchError(expressionType, expectedType, this);", "+\t\t\t\treturn null;", "+\t\t\t}"]}], "num": 2168}