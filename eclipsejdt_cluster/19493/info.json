{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5b16aebf453d71ea41026661b7d74608", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bae1ad35245c2436859567d70cead45b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryMethod.java", "commitBeforeChange": "cc1f02cebb98f873f24a2a66bba3f064297f99e9", "commitAfterChange": "9438dd37adc47f48787966423134ae4ea069824b", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " private String extractJavadoc(IType declaringType, String contents) throws JavaModelException", "signatureAfterChange": " private String extractJavadoc(IType declaringType, String contents) throws JavaModelException", "diff": ["-\tString typeQualifiedName = declaringType.getTypeQualifiedName('.');", "-\ttypeQualifiedName = typeQualifiedName.replace('$', '.');", "+\tString typeQualifiedName = null;", "+\tfinal boolean declaringTypeIsMember = declaringType.isMember();", "+\tif (declaringTypeIsMember) {", "+\t\tIType currentType = declaringType;", "+\t\tStringBuffer buffer = new StringBuffer();", "+\t\twhile (currentType != null) {", "+\t\t\tbuffer.insert(0, currentType.getElementName());", "+\t\t\tcurrentType = currentType.getDeclaringType();", "+\t\t\tif (currentType != null) {", "+\t\t\t\tbuffer.insert(0, '.');", "+\t\t\t}", "+\t\t}", "+\t\ttypeQualifiedName = new String(buffer.toString());", "+\t} else {", "+\t\ttypeQualifiedName = declaringType.getElementName();", "+\t}", "-\tif (declaringType.isMember()) {", "+\tif (declaringTypeIsMember) {", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de7166dbb1af995bc24a77c8f8254b7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryType.java", "commitBeforeChange": "48002ee062d7c822014af6ec72d244c2ed1bd402", "commitAfterChange": "cc1f02cebb98f873f24a2a66bba3f064297f99e9", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " public String getJavadocContents(IProgressMonitor monitor, String defaultEncoding) throws JavaModelException", "signatureAfterChange": " public String getJavadocContents(IProgressMonitor monitor, String defaultEncoding) throws JavaModelException", "diff": ["-\tString typeQualifiedName = this.getTypeQualifiedName('.');", "-\ttypeQualifiedName = typeQualifiedName.replace('$', '.');", "+\tString typeQualifiedName = null;", "+\tif (this.isMember()) {", "+\t\tIType currentType = this;", "+\t\tStringBuffer typeName = new StringBuffer();", "+\t\twhile (currentType != null) {", "+\t\t\ttypeName.insert(0, currentType.getElementName());", "+\t\t\tcurrentType = currentType.getDeclaringType();", "+\t\t\tif (currentType != null) {", "+\t\t\t\ttypeName.insert(0, '.');", "+\t\t\t}", "+\t\t}", "+\t\ttypeQualifiedName = new String(typeName.toString());", "+\t} else {", "+\t\ttypeQualifiedName = this.getElementName();", "+\t}", "+\t"]}], "num": 19493}