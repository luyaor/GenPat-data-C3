{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a84fd479ad71e66c2509fe58e5aa56f7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cad2665e5663404e75cb22de833306a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "fc25b1b826e7fad7f1da04ab9d452bc350b24919", "commitAfterChange": "19b4c669e6d8313d03dbcc8b595622002fe408a5", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tpublic void set(Map optionsMap)", "signatureAfterChange": "  \tpublic void set(Map optionsMap)", "diff": ["+\t\tif ((optionValue = optionsMap.get(OPTION_ReportNullContractViolation)) != null) updateSeverity(NullContractViolation, optionValue);", "+\t\tif ((optionValue = optionsMap.get(OPTION_ReportPotentialNullContractViolation)) != null) updateSeverity(PotentialNullContractViolation, optionValue);", "+\t\tif ((optionValue = optionsMap.get(OPTION_ReportNullContractInsufficientInfo)) != null) updateSeverity(NullContractInsufficientInfo, optionValue);", "+\t\tif ((optionValue = optionsMap.get(OPTION_NullableAnnotationName)) != null) {", "+\t\t\tthis.nullableAnnotationName = CharOperation.splitAndTrimOn('.', ((String)optionValue).toCharArray());", "+\t\t}", "+\t\tif ((optionValue = optionsMap.get(OPTION_NonNullAnnotationName)) != null) {", "+\t\t\tthis.nonNullAnnotationName = CharOperation.splitAndTrimOn('.', ((String)optionValue).toCharArray());", "+\t\t}", "+\t\tif ((optionValue = optionsMap.get(OPTION_EmulateNullAnnotationTypes)) != null) {", "+\t\t\tif (ENABLED.equals(optionValue)) {", "+\t\t\t\tthis.emulateNullAnnotationTypes = true;", "+\t\t\t\t// ensure that we actually have annotation names to emulate:", "+\t\t\t\tif (this.nullableAnnotationName == null)", "+\t\t\t\t\tthis.nullableAnnotationName = DEFAULT_NULLABLE_ANNOTATION_NAME;", "+\t\t\t\tif (this.nonNullAnnotationName == null)", "+\t\t\t\t\tthis.nonNullAnnotationName = DEFAULT_NONNULL_ANNOTATION_NAME;", "+\t\t\t} else if (DISABLED.equals(optionValue)) {", "+\t\t\t\tthis.emulateNullAnnotationTypes = false;", "+\t\t\t}", "+\t\t}", "+\t\tif ((optionValue = optionsMap.get(OPTION_DefaultImportNullAnnotationTypes)) != null) {", "+\t\t\tif (ENABLED.equals(optionValue)) {", "+\t\t\t\tthis.defaultImportNullAnnotationTypes = true;", "+\t\t\t\t// ensure that we actually have annotation names to be used for default imports:", "+\t\t\t\tif (this.nullableAnnotationName == null)", "+\t\t\t\t\tthis.nullableAnnotationName = DEFAULT_NULLABLE_ANNOTATION_NAME;", "+\t\t\t\tif (this.nonNullAnnotationName == null)", "+\t\t\t\t\tthis.nonNullAnnotationName = DEFAULT_NONNULL_ANNOTATION_NAME;", "+\t\t\t} else if (DISABLED.equals(optionValue)) {", "+\t\t\t\tthis.defaultImportNullAnnotationTypes = false;", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8f507b013c7ef31d1803607da2e0211", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "3e28b00b3ff1ea2877f4a4e8b245ac6023e86b59", "commitAfterChange": "52e6fbe49c09ab2aed24d8a25448612c4ab36bce", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic void set(Map optionsMap)", "signatureAfterChange": " \t \tpublic void set(Map optionsMap)", "diff": ["+\t\tif ((optionValue = optionsMap.get(OPTION_ImportRestrictionInclude)) != null) {", "+\t\t\tif (optionValue instanceof String) {", "+\t\t\t\tString stringValue = (String) optionValue;", "+\t\t\t\tif (stringValue.length() == 0) {", "+\t\t\t\t\tthis.importRestrictionInclude = null;", "+\t\t\t\t} else {", "+\t\t\t\t\tthis.importRestrictionInclude = CharOperation.splitAndTrimOn(',', stringValue.toCharArray());", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}\t", "+\t\tif ((optionValue = optionsMap.get(OPTION_ImportRestrictionExclude)) != null) {", "+\t\t\tif (optionValue instanceof String) {", "+\t\t\t\tString stringValue = (String) optionValue;", "+\t\t\t\tif (stringValue.length() == 0) {", "+\t\t\t\t\tthis.importRestrictionExclude = null;", "+\t\t\t\t} else {", "+\t\t\t\t\tthis.importRestrictionExclude = CharOperation.splitAndTrimOn(',', stringValue.toCharArray());", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}\t\t\t", "+\t\tif ((optionValue = optionsMap.get(OPTION_ExportRestrictionInclude)) != null) {", "+\t\t\tif (optionValue instanceof String) {", "+\t\t\t\tString stringValue = (String) optionValue;", "+\t\t\t\tif (stringValue.length() == 0) {", "+\t\t\t\t\tthis.exportRestrictionInclude = null;", "+\t\t\t\t} else {", "+\t\t\t\t\tthis.exportRestrictionInclude = CharOperation.splitAndTrimOn(',', stringValue.toCharArray());", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}\t\t\t", "+\t\tif ((optionValue = optionsMap.get(OPTION_ExportRestrictionExclude)) != null) {", "+\t\t\tif (optionValue instanceof String) {", "+\t\t\t\tString stringValue = (String) optionValue;", "+\t\t\t\tif (stringValue.length() == 0) {", "+\t\t\t\t\tthis.exportRestrictionExclude = null;", "+\t\t\t\t} else {", "+\t\t\t\t\tthis.exportRestrictionExclude = CharOperation.splitAndTrimOn(',', stringValue.toCharArray());", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}\t\t\t"]}], "num": 20756}