{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e167a451a79afb88974746a1d668039", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48bab7bb805aeb58ebba64ce9d554c73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  \tpublic void resolve()", "signatureAfterChange": "  \tpublic void resolve()", "diff": ["-\t\t\t\t\tif (field.isField()) {", "-\t\t\t\t\t\tFieldBinding fieldBinding = field.binding;", "-\t\t\t\t\t\tif (fieldBinding == null) {", "-\t\t\t\t\t\t\t// still discover secondary errors", "-\t\t\t\t\t\t\tif (field.initialization != null) field.initialization.resolve(field.isStatic() ? this.staticInitializerScope : this.initializerScope);", "-\t\t\t\t\t\t\tthis.ignoreFurtherInvestigation = true;", "-\t\t\t\t\t\t\tcontinue;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tif (needSerialVersion", "-\t\t\t\t\t\t\t\t&& ((fieldBinding.modifiers & (AccStatic | AccFinal)) == (AccStatic | AccFinal))", "-\t\t\t\t\t\t\t\t&& CharOperation.equals(TypeConstants.SERIALVERSIONUID, fieldBinding.name)", "-\t\t\t\t\t\t\t\t&& BaseTypes.LongBinding == fieldBinding.type) {", "-\t\t\t\t\t\t\tneedSerialVersion = false;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tthis.maxFieldCount++;", "-\t\t\t\t\t\tlastVisibleFieldID = field.binding.id;", "-\t\t\t\t\t} else { // initializer", "-\t\t\t\t\t\t ((Initializer) field).lastVisibleFieldID = lastVisibleFieldID + 1;", "+\t\t\t\t\tswitch(field.getKind()) {", "+\t\t\t\t\t\tcase AbstractVariableDeclaration.FIELD:", "+\t\t\t\t\t\tcase AbstractVariableDeclaration.ENUM_CONSTANT:", "+\t\t\t\t\t\t\tFieldBinding fieldBinding = field.binding;", "+\t\t\t\t\t\t\tif (fieldBinding == null) {", "+\t\t\t\t\t\t\t\t// still discover secondary errors", "+\t\t\t\t\t\t\t\tif (field.initialization != null) field.initialization.resolve(field.isStatic() ? this.staticInitializerScope : this.initializerScope);", "+\t\t\t\t\t\t\t\tthis.ignoreFurtherInvestigation = true;", "+\t\t\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (needSerialVersion", "+\t\t\t\t\t\t\t\t\t&& ((fieldBinding.modifiers & (AccStatic | AccFinal)) == (AccStatic | AccFinal))", "+\t\t\t\t\t\t\t\t\t&& CharOperation.equals(TypeConstants.SERIALVERSIONUID, fieldBinding.name)", "+\t\t\t\t\t\t\t\t\t&& BaseTypes.LongBinding == fieldBinding.type) {", "+\t\t\t\t\t\t\t\tneedSerialVersion = false;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tthis.maxFieldCount++;", "+\t\t\t\t\t\t\tlastVisibleFieldID = field.binding.id;", "+\t\t\t\t\t\t\tbreak;", "+", "+\t\t\t\t\t\tcase AbstractVariableDeclaration.INITIALIZER:", "+\t\t\t\t\t\t\t ((Initializer) field).lastVisibleFieldID = lastVisibleFieldID + 1;", "+\t\t\t\t\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7946a147a5eee50478f5ddf7c206bd1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public RecoveredElement add(FieldDeclaration fieldDeclaration, int bracketBalanceValue)", "signatureAfterChange": " public RecoveredElement add(FieldDeclaration fieldDeclaration, int bracketBalanceValue)", "diff": ["-\tRecoveredField element = fieldDeclaration.isField() ", "-\t\t\t\t\t\t\t\t? new RecoveredField(fieldDeclaration, this, bracketBalanceValue)", "-\t\t\t\t\t\t\t\t: new RecoveredInitializer(fieldDeclaration, this, bracketBalanceValue);", "+\tRecoveredField element;", "+\tswitch (fieldDeclaration.getKind()) {", "+\t\tcase AbstractVariableDeclaration.FIELD:", "+\t\tcase AbstractVariableDeclaration.ENUM_CONSTANT:", "+\t\t\telement = new RecoveredField(fieldDeclaration, this, bracketBalanceValue);", "+\t\t\tbreak;", "+\t\tcase AbstractVariableDeclaration.INITIALIZER:", "+\t\t\telement = new RecoveredInitializer(fieldDeclaration, this, bracketBalanceValue);", "+\t\t\tbreak;", "+\t\tdefault:", "+\t\t\t// never happens, as field is always identified", "+\t\t\treturn this;", "+\t}"]}], "num": 15609}