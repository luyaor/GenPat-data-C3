{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dc89c8295ec263a2b148b4e1c6c367f6", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cf018cf7df8a45e0aba0ede99de5224", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "d45a6d72ecac1399ae839b8bb0faf0b4626c38b4", "commitAfterChange": "ea3771830307a556e22215a6aa94c2a020dd70b2", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": " \tpublic String getSharedProperty(String key) throws CoreException", "signatureAfterChange": " \tpublic String getSharedProperty(String key) throws CoreException", "diff": ["+\t\t} else {", "+\t\t\t// when a project is imported, we get a first delta for the addition of the .project, but the .classpath is not accessible", "+\t\t\t// so default to using java.io.File", "+\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=96258", "+\t\t\tFile file  = rscFile.getLocation().toFile();", "+\t\t\tif (file.exists()) {", "+\t\t\t\tbyte[] bytes;", "+\t\t\t\ttry {", "+\t\t\t\t\tbytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(file);", "+\t\t\t\t} catch (IOException e) {", "+\t\t\t\t\treturn null;", "+\t\t\t\t}", "+\t\t\t\ttry {", "+\t\t\t\t\tproperty = new String(bytes, \"UTF-8\"); //$NON-NLS-1$ // .classpath always encoded with UTF-8", "+\t\t\t\t} catch (UnsupportedEncodingException e) {", "+\t\t\t\t\tUtil.log(e, \"Could not read .classpath with UTF-8 encoding\"); //$NON-NLS-1$", "+\t\t\t\t\t// fallback to default", "+\t\t\t\t\tproperty = new String(bytes);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cabc98d7c788eb0eeb5b3f1da36a36c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "ff60962397667d8f0b8f9465808cd2e926369be1", "commitAfterChange": "0e728cd1e89630be3eb8299ec5e4c703bc09030b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public IBinaryType getBinaryTypeInfo(IFile file) throws JavaModelException", "signatureAfterChange": " public IBinaryType getBinaryTypeInfo(IFile file) throws JavaModelException", "diff": ["-\t\t\t\tPackageFragment pkg = (PackageFragment) getParent();", "+\t\t\t\tPackageFragment pkg = (PackageFragment) le;", "-\t\t\t\tinfo = ClassFileReader.read(zip, entryName, true);", "+\t\t\t\tZipEntry ze = zip.getEntry(entryName);", "+\t\t\t\tif (ze != null) {", "+\t\t\t\t\tbyte contents[] = org.eclipse.jdt.internal.compiler.util.Util.getZipEntryByteContent(ze, zip);", "+\t\t\t\t\tString fileName = root.getHandleIdentifier() + IDependent.JAR_FILE_ENTRY_SEPARATOR + entryName;", "+\t\t\t\t\tinfo = new ClassFileReader(contents, fileName.toCharArray());", "+\t\t\t\t}", "-\t\t\treturn new ClassFileReader(contents, getElementName().toCharArray());", "+\t\t\treturn new ClassFileReader(contents, file.getFullPath().toString().toCharArray());"]}], "num": 29773}