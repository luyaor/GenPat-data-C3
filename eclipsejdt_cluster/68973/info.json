{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "96487642901450d3ba17cb752f8931ae", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15f6e3bdd083a7c71a6c87f82f102309", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/NullAnnotationMatching.java", "commitBeforeChange": "dbdde44f24ace4ee47bccce2cfe484eeeb8013f3", "commitAfterChange": "33bcc97ba28fd6319a8c922b4f8d989e4aab5311", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static int checkAssignment(BlockScope currentScope, FlowContext flowContext, \t\t\t\t\t\t\t\t\t   VariableBinding var, FlowInfo flowInfo, int nullStatus, Expression expression, TypeBinding providedType)", "signatureAfterChange": " \tpublic static int checkAssignment(BlockScope currentScope, FlowContext flowContext, \t\t\t\t\t\t\t\t\t   VariableBinding var, FlowInfo flowInfo, int nullStatus, Expression expression, TypeBinding providedType)", "diff": ["-\t\t\tif (annotationStatus.isDefiniteMismatch()) {", "-\t\t\t\tcurrentScope.problemReporter().nullityMismatchingTypeAnnotation(expression, providedType, var.type, annotationStatus);", "-\t\t\t\thasReported = true;", "-\t\t\t} else if (annotationStatus.isUnchecked()) {", "-\t\t\t\tflowContext.recordNullityMismatch(currentScope, expression, providedType, var.type, flowInfo, nullStatus);", "+\t\t\tif (annotationStatus.isAnyMismatch()) {", "+\t\t\t\tflowContext.recordNullityMismatch(currentScope, expression, providedType, var.type, flowInfo, nullStatus, annotationStatus);", "-\t\t\t\tflowContext.recordNullityMismatch(currentScope, expression, providedType, var.type, flowInfo, nullStatus);", "+\t\t\t\tflowContext.recordNullityMismatch(currentScope, expression, providedType, var.type, flowInfo, nullStatus, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b69f31762d6aa0c6bc058109ce5acb2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Statement.java", "commitBeforeChange": "dbdde44f24ace4ee47bccce2cfe484eeeb8013f3", "commitAfterChange": "33bcc97ba28fd6319a8c922b4f8d989e4aab5311", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " void internalAnalyseOneArgument18(BlockScope currentScope, FlowContext flowContext, TypeBinding expectedType, \t\tExpression argument, FlowInfo flowInfo, int nullStatus, Boolean expectedNonNullness, TypeBinding originalExpected)", "signatureAfterChange": " void internalAnalyseOneArgument18(BlockScope currentScope, FlowContext flowContext, TypeBinding expectedType, \t\tExpression argument, FlowInfo flowInfo, int nullStatus, Boolean expectedNonNullness, TypeBinding originalExpected)", "diff": ["-\tif (annotationStatus.isDefiniteMismatch() || statusFromAnnotatedNull == FlowInfo.NULL) {", "+\tif (statusFromAnnotatedNull == FlowInfo.NULL) {", "-\t} else if (annotationStatus.isUnchecked() || (statusFromAnnotatedNull & FlowInfo.POTENTIALLY_NULL) != 0) {", "-\t\tflowContext.recordNullityMismatch(currentScope, argument, argument.resolvedType, expectedType, flowInfo, nullStatus);", "+\t} else if (annotationStatus.isAnyMismatch() || (statusFromAnnotatedNull & FlowInfo.POTENTIALLY_NULL) != 0) {", "+\t\tflowContext.recordNullityMismatch(currentScope, argument, argument.resolvedType, expectedType, flowInfo, nullStatus, annotationStatus);"]}], "num": 68973}