{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "453612963284686dec7edfc925736ff2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d5ceda9dd35d4b5b5f499dce43103c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "9ccc53063dda8b7e1afdde95ae36a8417c582abc", "commitAfterChange": "7143e72571bb2e6a2e74f6791210a97b375b5ab6", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic static SearchPattern createAndSearchPattern(final SearchPattern leftPattern, final SearchPattern rightPattern)", "signatureAfterChange": " \tpublic static SearchPattern createAndSearchPattern(final SearchPattern leftPattern, final SearchPattern rightPattern)", "diff": ["-\t\t\tpublic void decodeIndexKey(char[] key) {", "-\t\t\t\tcurrent.decodeIndexKey(key);", "-\t\t\t}", "-\t\t\tpublic char[] encodeIndexKey() {", "-\t\t\t\treturn current.encodeIndexKey();", "-\t\t\t}", "-\t\t\tpublic SearchPattern getBlankPattern() {", "-\t\t\t\treturn current.getBlankPattern();", "-\t\t\t}", "-\t\t\tpublic char[][] getMatchCategories() {", "-\t\t\t\treturn current.getMatchCategories();", "-\t\t\t}", "-\t\t\tpublic int getMatchRule() {", "-\t\t\t\treturn current.getMatchRule();", "+\t\t\tpublic SearchPattern currentPattern() {", "+\t\t\t\treturn current;", "-\t\t\t}", "-\t\t\tpublic boolean matchesDecodedPattern(SearchPattern decodedPattern) {", "-\t\t\t\treturn current.matchesDecodedPattern(decodedPattern);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8a2295b6554a54c8e0a15254c532263", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "ef84f5fab4e549d913d92933638d556ae1ceefd2", "commitAfterChange": "3f513a524299babe8e8187ba844f5588920937db", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic static SearchPattern createAndSearchPattern(final SearchPattern leftPattern, final SearchPattern rightPattern)", "signatureAfterChange": " \tpublic static SearchPattern createAndSearchPattern(final SearchPattern leftPattern, final SearchPattern rightPattern)", "diff": ["-\t\treturn new AndPattern(0/*no kind*/, 0/*no rule*/){", "+\t\treturn new AndPattern(0/*no kind*/, 0/*no rule*/) {", "-", "-\t\t\tpublic SearchPattern getIndexRecord() {", "-\t\t\t\treturn current.getIndexRecord();", "+\t\t\tpublic SearchPattern getBlankPattern() {", "+\t\t\t\treturn current.getBlankPattern();", "-\t\t\tpublic boolean isMatchingIndexRecord() {", "-\t\t\t\treturn current.isMatchingIndexRecord();", "+\t\t\tpublic boolean matchesDecodedPattern(SearchPattern decodedPattern) {", "+\t\t\t\treturn current.matchesDecodedPattern(decodedPattern);"]}], "num": 64856}