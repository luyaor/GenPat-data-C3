{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e7c67fb39fc42d3f1ac4b8ebe9035f9d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "604f8ab9eb1e83fb9a81a64fcddbb080", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "3ec169b44d3736817b7c4ce9bf1791fcda57b692", "commitAfterChange": "4a83e27deea774790864c829cd5109d435b50edd", "methodNumberBeforeChange": 325, "methodNumberAfterChange": 325, "signatureBeforeChange": " \tpublic void _test323()", "signatureAfterChange": " \tpublic void test323()", "diff": ["-\t// TODO (philippe) reenable when addressed", "-\tpublic void _test323() {", "-\t\tthis.runConformTest(", "+\t// 76359 - also check warnings for raw conversion", "+\tpublic void test323() {", "+\t\tthis.runNegativeTest(", "-\t\t\t\t\"\tG<String>.Member x = new G().new Member();\\n\" + ", "-\t\t\t\t\"  Zork z;\\n\" +", "-\t\t\t\t\"}\\n\"\t\t\t", "+\t\t\t\t\"\tG<String>.Member gsm = g.new Member();\\n\" + ", "+\t\t\t\t\"\tG.Member gm = null;\\n\" + ", "+\t\t\t\t\"\tG<Thread>.Member gtm = gm;\\n\" + ", "+\t\t\t\t\"\tZork z;\\n\" +", "+\t\t\t\t\"}\\n\"\t\t", "-\t\t\t\"\");\t", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tG<String> g = new G();\\n\" + ", "+\t\t\t\"\t              ^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The expression of raw type G is converted to G<String>. References to generic type G<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tG<Thread>.Member gtm = gm;\\n\" + ", "+\t\t\t\"\t                       ^^\\n\" + ", "+\t\t\t\"Type safety: The expression of raw type G.Member is converted to G<Thread>.Member. References to generic type G<T>.Member should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tZork z;\\n\" + ", "+\t\t\t\"\t^^^^\\n\" + ", "+\t\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\t\"----------\\n\");\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7033e697bc54174fa7d8a81ee7d25ab1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/DefaultMethodsTest.java", "commitBeforeChange": "63b001f83264125c7dd42160689ada7c16b8afb5", "commitAfterChange": "c4baf766be166b04f595eec5cebbd2a64f399daa", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void _testModifiers1a()", "signatureAfterChange": " \tpublic void testModifiers1a()", "diff": ["-\tpublic void _testModifiers1a() {", "+\tpublic void testModifiers1a() {", "-\t\t\t\"    default void foo1() {}\\n\" +", "+\t\t\t\"    default void foo1() { System.out.println(3); }\\n\" +", "+\t\t\t\"    public default <T> T foo6(T t) { return t; }\\n\" +", "-\t    \"Some nice and few syntax errors - TODO -\");", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in I.java (at line 6)\\n\" +", "+\t\t\t\"\tstritfp default void foo3() {}\\n\" +", "+\t\t\t\"\t^^^^^^^\\n\" +", "+\t\t\t\"Syntax error, insert \\\"Identifier (\\\" to complete MethodHeaderName\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"2. ERROR in I.java (at line 6)\\n\" +", "+\t\t\t\"\tstritfp default void foo3() {}\\n\" +", "+\t\t\t\"\t^^^^^^^\\n\" +", "+\t\t\t\"Syntax error, insert \\\")\\\" to complete MethodDeclaration\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"3. ERROR in I.java (at line 6)\\n\" +", "+\t\t\t\"\tstritfp default void foo3() {}\\n\" +", "+\t\t\t\"\t^^^^^^^\\n\" +", "+\t\t\t\"Syntax error, insert \\\";\\\" to complete MethodDeclaration\\n\" +", "+\t\t\t\"----------\\n\");"]}], "num": 63698}