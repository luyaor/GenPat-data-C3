{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "07bd8d6f0606bba7d43b9f99b60b2cb8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d799e416d71da34cc7e258633ada943", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Util.java", "commitBeforeChange": "bc1ab2814efa96b0090d7fa3a6e0df572ad09b84", "commitAfterChange": "812814d4d7336d2de6b5ef94acb359cf36b0dc37", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic static final boolean isExcluded(IJavaElement element)", "signatureAfterChange": " \tpublic static final boolean isExcluded(IJavaElement element)", "diff": ["-\t\t\tcase IJavaElement.COMPILATION_UNIT:", "-\t\t\t\tchar[][] exclusionPatterns = root.getExclusionPatterns();", "-\t\t\t\tif (resource != null && Util.isExcluded(resource, exclusionPatterns)) {", "+\t\t\t\treturn resource != null && Util.isExcluded(resource, root.getExclusionPatterns());", "+\t\t\tcase IJavaElement.COMPILATION_UNIT:", "+\t\t\t\troot = (PackageFragmentRoot)element.getAncestor(IJavaElement.PACKAGE_FRAGMENT_ROOT);", "+\t\t\t\tresource = element.getResource();", "+\t\t\t\tif (resource != null && Util.isExcluded(resource, root.getExclusionPatterns()))", "-\t\t\t\t} else if (elementType == IJavaElement.COMPILATION_UNIT) {", "-\t\t\t\t\treturn isExcluded(element.getParent());", "-\t\t\t\t} else {", "-\t\t\t\t\treturn false;", "-\t\t\t\t}", "+\t\t\t\treturn isExcluded(element.getParent());", "-\t\t\t\tif (cu == null) {", "-\t\t\t\t\treturn false;", "-\t\t\t\t} else {", "-\t\t\t\t\treturn isExcluded(cu);", "-\t\t\t\t}", "+\t\t\t\treturn cu != null && isExcluded(cu);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "530f110a3294ba376a617db3c90cff27", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Util.java", "commitBeforeChange": "dec2dac6f78a5ffa915ffd3b73cb386c60b72cae", "commitAfterChange": "eead3352ceb339c6e7d1c285e537cdff0d79d4a6", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " \tpublic final static boolean isExcluded(IResource resource, char[][] exclusionPatterns)", "signatureAfterChange": " \tpublic static final boolean isExcluded(IJavaElement element)", "diff": ["+\t * Returns whether the given java element is exluded from its classpath.\r\t */", "+\tpublic static final boolean isExcluded(IJavaElement element) {", "+\t\tswitch (element.getElementType()) {", "+\t\t\tcase IJavaElement.JAVA_PROJECT:", "+\t\t\tcase IJavaElement.PACKAGE_FRAGMENT_ROOT:", "+\t\t\tcase IJavaElement.CLASS_FILE:", "+\t\t\t\t// projects, pkg fragment root and class files are never excluded", "+\t\t\t\treturn false;", "+\t\t\tcase IJavaElement.PACKAGE_FRAGMENT:", "+\t\t\tcase IJavaElement.COMPILATION_UNIT:", "+\t\t\t\tPackageFragmentRoot root = (PackageFragmentRoot)element.getAncestor(IJavaElement.PACKAGE_FRAGMENT_ROOT);", "+\t\t\t\tchar[][] exclusionPatterns = root.getExclusionPatterns();", "+\t\t\t\tIResource resource = element.getResource();", "+\t\t\t\treturn resource != null && Util.isExcluded(resource, exclusionPatterns);", "+\t\t\tdefault:", "+\t\t\t\t// everything in a compilation unit", "+\t\t\t\tIJavaElement cu = element.getAncestor(IJavaElement.COMPILATION_UNIT);", "+\t\t\t\tif (cu == null) return false;", "+\t\t\t\treturn isExcluded(cu);", "+\t\t}", "+\t}"]}], "num": 21827}