{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2d6dc33465d75e9094ceb1f5756a59c5", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "812bf0c22b1de48880d9e963c71eee61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "5ec4215ec4f52f55dcb6e314c5f755ceba34fff6", "commitAfterChange": "5a4580d346b40161405692269366aba5f28266bb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r private void createCompilationUnitFromPath(Openable handle, String osPath, ArrayList units) throws JavaModelException", "signatureAfterChange": "\r protected ICompilationUnit createCompilationUnitFromPath(Openable handle,String osPath) throws JavaModelException", "diff": ["- */\r", "-private void createCompilationUnitFromPath(Openable handle, String osPath, ArrayList units) throws JavaModelException {\r", "-\tString encoding = (String) JavaCore.getOptions().get(CompilerOptions.OPTION_Encoding);\r", "-\tif (\"\".equals(encoding)) encoding = null; //$NON-NLS-1$\r", "-\tBasicCompilationUnit unit = \r", "-\t\tnew BasicCompilationUnit(\r", "-\t\t\tnull,\r", "-\t\t\tosPath,\r", "-\t\t\tencoding);\r", "-\tunits.add(unit);\r", "+protected ICompilationUnit createCompilationUnitFromPath(Openable handle,String osPath) throws JavaModelException {\r", "+\tICompilationUnit unit = super.createCompilationUnitFromPath(handle, osPath);\r", "-}\r", "+\treturn unit;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5f144dbde725c94f390f0f2313e43ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SortElementsOperation.java", "commitBeforeChange": "9d28ff91378f9bfbe6756ae0331a10fbb52d3dba", "commitAfterChange": "9474d2cdea35a8b31f8fe2828fe199dbf7f1cf71", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate void processElement(ICompilationUnit unit, int[] positionsToMap, char[] source) throws JavaModelException", "signatureAfterChange": " \tprivate String processElement(ICompilationUnit unit, int[] positionsToMap, char[] source) throws JavaModelException", "diff": ["-\tprivate void processElement(ICompilationUnit unit, int[] positionsToMap, char[] source) throws JavaModelException {", "-\t\tsubTask(\"Sort \" + unit.getElementName()); //$NON-NLS-1$", "+\tprivate String processElement(ICompilationUnit unit, int[] positionsToMap, char[] source) throws JavaModelException {", "-\t\tIPackageFragment packageFragment = (IPackageFragment)unit.getAncestor(IJavaElement.PACKAGE_FRAGMENT);", "-\t\tchar[][] expectedPackageName = null;", "-\t\tif (packageFragment != null){", "-\t\t\texpectedPackageName = CharOperation.splitOn('.', packageFragment.getElementName().toCharArray());", "+\t\tif (unit.exists()) {", "+\t\t\tIPackageFragment packageFragment = (IPackageFragment)unit.getAncestor(IJavaElement.PACKAGE_FRAGMENT);", "+\t\t\tchar[][] expectedPackageName = null;", "+\t\t\tif (packageFragment != null){", "+\t\t\t\texpectedPackageName = CharOperation.splitOn('.', packageFragment.getElementName().toCharArray());", "+\t\t\t}", "+\t\t\tparser.parseCompilationUnit(", "+\t\t\t\tnew BasicCompilationUnit(", "+\t\t\t\t\tsource,", "+\t\t\t\t\texpectedPackageName,", "+\t\t\t\t\tunit.getElementName(),", "+\t\t\t\t\tnull),", "+\t\t\t\tfalse);", "+\t\t} else {", "+\t\t\tparser.parseCompilationUnit(", "+\t\t\t\tnew BasicCompilationUnit(", "+\t\t\t\t\tsource,", "+\t\t\t\t\tnull,", "+\t\t\t\t\t\"\",//$NON-NLS-1$", "+\t\t\t\t\tnull),", "+\t\t\t\tfalse);", "-\t\tparser.parseCompilationUnit(", "-\t\t\tnew BasicCompilationUnit(", "-\t\t\t\tsource,", "-\t\t\t\texpectedPackageName,", "-\t\t\t\tunit.getElementName(),", "-\t\t\t\tunit.getJavaProject().getOption(JavaCore.CORE_ENCODING, true)),", "-\t\t\tfalse);", "-\t\tString result = builder.getSource();", "-\t\tthis.hasChanged = !CharOperation.equals(result.toCharArray(), source);", "-\t\tif (this.hasChanged) {", "-\t\t\tunit.getBuffer().setContents(result);", "-\t\t}", "+\t\treturn builder.getSource();"]}], "num": 39076}