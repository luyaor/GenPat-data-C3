{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6514e48884a530dca11bf6327036b791", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4be807bf1ced9299ade3fab0d4162315", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "aba5db418de65ea21899bfdf893833cd0fc3f586", "commitAfterChange": "7aba284c4ea53048ed9ad4ccc85fef0f7294903a", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": " private IBinaryType[] processClassNames(FileSystem environment) throws InvalidInputException", "signatureAfterChange": " private ReferenceBinding[] processClassNames(LookupEnvironment environment) throws InvalidInputException", "diff": ["-private IBinaryType[] processClassNames(FileSystem environment) throws InvalidInputException {", "+private ReferenceBinding[] processClassNames(LookupEnvironment environment) throws InvalidInputException {", "-\tIBinaryType[] binaryTypes = new IBinaryType[length];", "+\tReferenceBinding[] referenceBindings = new ReferenceBinding[length];", "-\t\tNameEnvironmentAnswer type = environment.findType(compoundName, true);", "-\t\tif (type != null) {", "-\t\t\tbinaryTypes[i] = type.getBinaryType();", "+\t\tReferenceBinding type = environment.getType(compoundName);", "+\t\tif (type != null && type.isValidBinding()) {", "+\t\t\tif (type.isBinaryBinding()) {", "+\t\t\t\treferenceBindings[i] = type;", "+\t\t\t}", "-\t\t\t\tthis.bind(\"configure.invalidClassName\", currentName));//$NON-NLS-1$", "+\t\t\t\t\tthis.bind(\"configure.invalidClassName\", currentName));//$NON-NLS-1$", "-\treturn binaryTypes;", "+\treturn referenceBindings;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bb6359cedfe3f41ca06374829e1fa79", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "e6029c8b1adfe1296ee554ed42f00e5a663cecbf", "commitAfterChange": "d3d92e370789aaaed8a46c804d74e3cb2b4bb167", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " \tpublic boolean match(ParameterizedType node, Object other)", "signatureAfterChange": " \tpublic boolean match(PackageQualifiedType node, Object other)", "diff": ["+\t */", "+\tpublic boolean match(PackageQualifiedType node, Object other) {", "+\t\tif (!(other instanceof PackageQualifiedType)) {", "+\t\t\treturn false;", "+\t\t}", "+\t\tPackageQualifiedType o = (PackageQualifiedType) other;", "+\t\treturn safeSubtreeMatch(node.getQualifier(), o.getQualifier())", "+\t\t\t\t&& safeSubtreeListMatch(node.annotations(), o.annotations())", "+\t\t\t\t&& safeSubtreeMatch(node.getName(), o.getName());", "+\t}"]}], "num": 66405}