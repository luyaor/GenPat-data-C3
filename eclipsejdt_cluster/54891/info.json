{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c83fd2a5449238091fb7f2c6a886b9d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "326e2e6a8fb7b89d53538a9ec620afae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/diagnose/DiagnoseParser.java", "commitBeforeChange": "5fa6afe954089094ae8cca4de90fd35757e48b64", "commitAfterChange": "ae67359ba1af0f32a3cb74678feaffc1673aa2c9", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprivate RepairCandidate errorRecovery(int error_token)", "signatureAfterChange": " \tprivate RepairCandidate errorRecovery(int error_token, boolean forcedError)", "diff": ["-\tprivate RepairCandidate errorRecovery(int error_token) {", "+\tprivate RepairCandidate errorRecovery(int error_token, boolean forcedError) {", "+\t\t", "+\t\tif(forcedError) {", "+\t\t\tint name_index = Parser.terminal_index[TokenNameLBRACE];", "+", "+\t\t\treportError(INSERTION_CODE, name_index, prevtok, prevtok);", "+\t\t\t", "+\t\t\tRepairCandidate candidate = new RepairCandidate();", "+\t\t\tcandidate.symbol = TokenNameLBRACE;", "+\t\t\tcandidate.location = error_token;", "+\t\t\tlexStream.reset(error_token);", "+\t\t\t", "+\t\t\tstateStackTop = nextStackTop;", "+\t\t\tfor (int j = 0; j <= stateStackTop; j++) {", "+\t\t\t\tstack[j] = nextStack[j];", "+\t\t\t}", "+\t\t\tlocationStack[stateStackTop] = error_token;", "+\t\t\tlocationStartStack[stateStackTop] = lexStream.start(error_token);", "+\t\t\t", "+\t\t\treturn candidate;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69f227e3ec58c97bf1688f1b6b69151c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "c29ff6f3ca53453d86d6a9de68da632d3d253455", "commitAfterChange": "c11e4d3823cd197ba20b5c4c8ef1ddf1ca70b418", "methodNumberBeforeChange": 187, "methodNumberAfterChange": 187, "signatureBeforeChange": " protected void consumeInsideCastExpressionLL1WithBounds()", "signatureAfterChange": " protected void consumeInsideCastExpressionLL1WithBounds()", "diff": ["+\tint additionalBoundsLength = this.genericsLengthStack[this.genericsLengthPtr--];", "+\tTypeReference[] bounds = new TypeReference[additionalBoundsLength + 1];", "+\tthis.genericsPtr -= additionalBoundsLength;", "+\tSystem.arraycopy(this.genericsStack, this.genericsPtr + 1, bounds, 1, additionalBoundsLength);", "+", "+\tpushOnGenericsLengthStack(0); // handle type arguments", "+\tpushOnGenericsIdentifiersLengthStack(this.identifierLengthStack[this.identifierLengthPtr]);", "+\tbounds[0] = getTypeReference(0);", "+ ", "+\tfor (int i = 0; i <= additionalBoundsLength; i++) {", "+\t\tpushOnExpressionStack(bounds[i]);", "+\t\tif (i > 0)", "+\t\t\tthis.expressionLengthStack[--this.expressionLengthPtr]++;", "+\t}"]}], "num": 54891}