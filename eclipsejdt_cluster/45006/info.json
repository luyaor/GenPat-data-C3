{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "abe04c5035b25e25863a864bc6d18b98", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03384bcc136bba696d08a6ee2c34adfd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/SimpleIndexInput.java", "commitBeforeChange": "ae7797d27bfed7c3f6e7630a551ffec98598a05e", "commitAfterChange": "b5a62e48da3d2bb054c313f16e0e1c0a1279b4a4", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \tpublic IndexedFile getIndexedFile(IDocument document) throws IOException", "signatureAfterChange": "\r \tpublic IndexedFile getIndexedFile(IDocument document) throws IOException", "diff": ["+\t\tString name= document.getName();\r", "-\t\t\tString path= file.getPath();\r", "-\t\t\tString name= document.getName();\r", "-\t\t\tif (name.equals(path))\r", "+\t\t\tif (name.equals(file.getPath()))\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ce1796a3a4c8d4cf2ea25cd3fcceac8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AddJarFileToIndex.java", "commitBeforeChange": "28f793f875e5d5b5aa1f2b69f1f41ea8e36715ac", "commitAfterChange": "f456bcf7525ae06822c01b76c3a23003b807e9b7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\t\t\t\tfor (int i = 0; i < resultLength; i++) {", "-\t\t\t\t\t\tString fileName = results[i].getPath();", "-\t\t\t\t\t\tindexedFileNames.add(fileName);", "-\t\t\t\t\t}", "+\t\t\t\t\tfor (int i = 0; i < resultLength; i++)", "+\t\t\t\t\t\tindexedFileNames.add(results[i].getPath());", "-\t\t\t\t\t\t\t+zip.getName() + \" (\" //$NON-NLS-1$", "+\t\t\t\t\t\t\t+ zip.getName() + \" (\" //$NON-NLS-1$", "-\t\t\t\tif (index != null) {", "-\t\t\t\t\t// index already existed: recreate it so that we forget about previous entries", "+\t\t\t\tif (index != null) // index already existed: recreate it so that we forget about previous entries", "-\t\t\t\t}", "-\t\t\t\t\t\tif (JobManager.VERBOSE) {", "-\t\t\t\t\t\t\tJobManager.verbose(\"-> indexing of \" //$NON-NLS-1$", "-\t\t\t\t\t\t\t+zip.getName() + \" has been cancelled\"); //$NON-NLS-1$", "-\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (JobManager.VERBOSE)", "+\t\t\t\t\t\t\tJobManager.verbose(\"-> indexing of \" + zip.getName() + \" has been cancelled\"); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t\t\tbyte[] classFileBytes =", "-\t\t\t\t\t\t\torg.eclipse.jdt.internal.compiler.util.Util.getZipEntryByteContent(ze, zip);", "+\t\t\t\t\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getZipEntryByteContent(ze, zip);", "-\t\t\t\t\t+zip.getName() + \" (\" //$NON-NLS-1$", "-\t\t\t\t\t+ (System.currentTimeMillis() - initialTime) + \"ms)\"); //$NON-NLS-1$", "+\t\t\t\t\t\t+ zip.getName() + \" (\" //$NON-NLS-1$", "+\t\t\t\t\t\t+ (System.currentTimeMillis() - initialTime) + \"ms)\"); //$NON-NLS-1$", "-\t\t\t\t\tif (JavaModelManager.ZIP_ACCESS_VERBOSE) {", "+\t\t\t\t\tif (JavaModelManager.ZIP_ACCESS_VERBOSE)", "-\t\t\t\t\t}"]}], "num": 45006}