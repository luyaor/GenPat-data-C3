{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "05968fa4b78dad9a13da1d313760ca97", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "261bf75db6060c3f18bb31cc3a81745f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "ee73272992444a9c8e6586ce5a37f5dc6d6e8bd9", "commitAfterChange": "f598d68e65d421b1e902e4d71831d57a9b4e73ab", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tprotected void verifyComments(ICompilationUnit unit) throws JavaModelException", "signatureAfterChange": " \tprotected void verifyComments(ICompilationUnit unit) throws JavaModelException", "diff": ["-\t\tComment[] unitComments = null;", "+\t\tList unitComments = null;", "-\t\t\t\tproject.setOption(JavaCore.COMPILER_PB_INVALID_JAVADOC, this.compilerOption);", "-\t\t\t\tproject.setOption(JavaCore.COMPILER_PB_MISSING_JAVADOC_TAGS, this.compilerOption);", "-\t\t\t\tproject.setOption(JavaCore.COMPILER_PB_MISSING_JAVADOC_COMMENTS, this.compilerOption);", "-\t\t\t\tproject.setOption(JavaCore.COMPILER_PB_METHOD_WITH_CONSTRUCTOR_NAME, JavaCore.IGNORE);", "-\t\t\t\tCompilationUnit compilUnit = (CompilationUnit) runConversion(this.sourceUnit, this.resolveBinding); // resolve bindings", "-\t\t\t\tif (problems.equals(JavaCore.ERROR)) {", "-\t\t\t\t\tassertEquals(this.prefix+\"Unexpected problems\", 0, compilUnit.getProblems().length); //$NON-NLS-1$", "-\t\t\t\t} else if (problems.equals(JavaCore.WARNING)) {", "-\t\t\t\t\tIProblem[] problemsList = compilUnit.getProblems();", "-\t\t\t\t\tint length = problemsList.length;", "-\t\t\t\t\tSystem.out.println(this.prefix+length+\" unexpected problems:\"); //$NON-NLS-1$", "+\t\t\tproject.setOption(JavaCore.COMPILER_PB_INVALID_JAVADOC, this.compilerOption);", "+\t\t\tproject.setOption(JavaCore.COMPILER_PB_MISSING_JAVADOC_TAGS, this.compilerOption);", "+\t\t\tproject.setOption(JavaCore.COMPILER_PB_MISSING_JAVADOC_COMMENTS, this.compilerOption);", "+\t\t\tproject.setOption(JavaCore.COMPILER_PB_METHOD_WITH_CONSTRUCTOR_NAME, JavaCore.IGNORE);", "+\t\t\tCompilationUnit compilUnit = (CompilationUnit) runConversion(this.sourceUnit, this.resolveBinding); // resolve bindings", "+\t\t\tif (this.compilerOption.equals(JavaCore.ERROR)) {", "+\t\t\t\tassumeEquals(this.prefix+\"Unexpected problems\", 0, compilUnit.getProblems().length); //$NON-NLS-1$", "+\t\t\t} else if (this.compilerOption.equals(JavaCore.WARNING)) {", "+\t\t\t\tIProblem[] problemsList = compilUnit.getProblems();", "+\t\t\t\tint length = problemsList.length;", "+\t\t\t\tif (length > 0) {", "+\t\t\t\t\tproblems.append(\"  - \"+this.prefix+length+\" problems:\"); //$NON-NLS-1$", "-\t\t\t\t\t\tSystem.out.println(\"  - \"+problemsList[i]);", "+\t\t\t\t\t\tproblems.append(\"\t+ \"+problemsList[i]);", "-\t\t\t\tunitComments = compilUnit.getCommentTable();", "+\t\t\t}", "+\t\t\tunitComments = compilUnit.getCommentList();", "-\t\tassertNotNull(this.prefix+\"Unexpected problems\", unitComments);", "+\t\tassumeNotNull(this.prefix+\"Unexpected problems\", unitComments);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dcfe368acb010c50104eaf5ce0b5d31", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "bc11b8ca976f8360b7224f086a28378398f2dfd3", "commitAfterChange": "48f756ae0727772676a244af8217d19fe8e81145", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tprotected void verifyComments(ICompilationUnit unit) throws JavaModelException", "signatureAfterChange": " \tprotected void verifyComments(ICompilationUnit unit) throws JavaModelException", "diff": ["+\t\tthis.prefix = unit.getElementName()+\": \";", "-\t\tif (problems) {", "-\t\t\ttry {", "-\t\t\t\tproject.setOption(JavaCore.COMPILER_PB_INVALID_JAVADOC, JavaCore.ERROR);", "-\t\t\t\tproject.setOption(JavaCore.COMPILER_PB_MISSING_JAVADOC_TAGS, JavaCore.ERROR);", "-\t\t\t\tproject.setOption(JavaCore.COMPILER_PB_MISSING_JAVADOC_COMMENTS, JavaCore.ERROR);", "-\t\t\t\tCompilationUnit compilUnit = (CompilationUnit) runConversion(this.sourceUnit, true); // resolve bindings", "-\t\t\t\tassertEquals(this.prefix+\"Unexpected problems\", 0, compilUnit.getProblems().length); //$NON-NLS-1$", "+\t\ttry {", "+\t\t\t\tproject.setOption(JavaCore.COMPILER_PB_INVALID_JAVADOC, this.compilerOption);", "+\t\t\t\tproject.setOption(JavaCore.COMPILER_PB_MISSING_JAVADOC_TAGS, this.compilerOption);", "+\t\t\t\tproject.setOption(JavaCore.COMPILER_PB_MISSING_JAVADOC_COMMENTS, this.compilerOption);", "+\t\t\t\tproject.setOption(JavaCore.COMPILER_PB_METHOD_WITH_CONSTRUCTOR_NAME, JavaCore.IGNORE);", "+\t\t\t\tCompilationUnit compilUnit = (CompilationUnit) runConversion(this.sourceUnit, this.resolveBinding); // resolve bindings", "+\t\t\t\tif (problems.equals(JavaCore.ERROR)) {", "+\t\t\t\t\tassertEquals(this.prefix+\"Unexpected problems\", 0, compilUnit.getProblems().length); //$NON-NLS-1$", "+\t\t\t\t} else if (problems.equals(JavaCore.WARNING)) {", "+\t\t\t\t\tIProblem[] problemsList = compilUnit.getProblems();", "+\t\t\t\t\tint length = problemsList.length;", "+\t\t\t\t\tSystem.out.println(this.prefix+length+\" unexpected problems:\"); //$NON-NLS-1$", "+\t\t\t\t\tfor (int i = 0; i < problemsList.length; i++) {", "+\t\t\t\t\t\tSystem.out.println(\"  - \"+problemsList[i]);", "+\t\t\t\t\t}", "+\t\t\t\t}", "-\t\t\t} finally {", "-\t\t\t\tproject.setOptions(originalOptions);", "-\t\t\t}", "-\t\t} else {", "-\t\t\t\tCompilationUnit compilUnit = (CompilationUnit) runConversion(this.sourceUnit, true); // resolve bindings", "-\t\t\t\tunitComments = compilUnit.getCommentTable();", "+\t\t} finally {", "+\t\t\tproject.setOptions(originalOptions);", "-", "-\t\t// Get comments infos from test file", "+\t\t", "+\t\t// Verify source regardings converted comments", "+\t\tverifyComments(sourceStr, source, unitComments);", "+\t}", "-\t\t\t\tverifyBindings(docComment);"]}], "num": 2732}