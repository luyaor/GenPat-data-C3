{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2f6fbc5808c945e10e491c0e3c8bb3c6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "351a73573f5828739443288923a0accb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "070c89861c117098b82b25282c7c2d65a320aff5", "commitAfterChange": "b990e8e256f352022e2abad7a2d2f30c0852cd13", "methodNumberBeforeChange": 660, "methodNumberAfterChange": 660, "signatureBeforeChange": " public void test0655()", "signatureAfterChange": " public void test0655()", "diff": ["-\t\t\"Type safety: The cast from X.BB<capture-of ? extends Number,capture-of ? super Integer> to X.BD<Number> is actually checking against the erased type X.BD\\n\" + ", "+\t\t\"Type safety: The cast from X.BB<capture#1-of ? extends Number,capture#2-of ? super Integer> to X.BD<Number> is actually checking against the erased type X.BD\\n\" + ", "-\t\t\"Unnecessary cast from X.BB<capture-of ? extends Number,capture-of ? super Integer> to X.BD<Number>\\n\" + ", "+\t\t\"Unnecessary cast from X.BB<capture#1-of ? extends Number,capture#2-of ? super Integer> to X.BD<Number>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49395b8b40d351b852b2213f5f9c30a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "070c89861c117098b82b25282c7c2d65a320aff5", "commitAfterChange": "b990e8e256f352022e2abad7a2d2f30c0852cd13", "methodNumberBeforeChange": 257, "methodNumberAfterChange": 257, "signatureBeforeChange": " \tpublic void test0253()", "signatureAfterChange": " \tpublic void test0253()", "diff": ["-\t\t\t\"Type safety: The cast from List<capture-of ? extends Number> to List<Number> is actually checking against the erased type List\\n\" + ", "+\t\t\t\"Type safety: The cast from List<capture#1-of ? extends Number> to List<Number> is actually checking against the erased type List\\n\" + ", "-\t\t\t\"Type mismatch: cannot convert from List<capture-of ? extends Number> to List<Number>\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from List<capture#3-of ? extends Number> to List<Number>\\n\" + "]}], "num": 53835}