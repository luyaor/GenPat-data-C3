{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9abd69608028403e75841999f663c0c2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "421c2c5891d38a5991cfa5856ce1e724", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 149, "methodNumberAfterChange": 153, "signatureBeforeChange": " public void testTypeReferenceAsSingleNameReference() throws CoreException", "signatureAfterChange": " public void testTypeReference09() throws CoreException", "diff": ["-public void testTypeReferenceAsSingleNameReference() throws CoreException {", "-\tIType type = getCompilationUnit(\"JavaSearch\", \"src\", \"\", \"TypeReferenceAsSingleNameReference.java\").getType(\"TypeReferenceAsSingleNameReference\");", "-\t\tgetJavaSearchScope(), ", "-\t\t\"src/TypeReferenceAsSingleNameReference.java void TypeReferenceAsSingleNameReference.hasReference() [TypeReferenceAsSingleNameReference]\\n\" + ", "-\t\t\"src/TypeReferenceAsSingleNameReference.java void TypeReferenceAsSingleNameReference.hasReference() [TypeReferenceAsSingleNameReference]\",", "+ */", "+public void testTypeReference09() throws CoreException { // was testTypeReferenceAsSingleNameReference", "+\tIType type = getCompilationUnit(\"JavaSearch\", \"src\", \"\", \"TypeReferenceAsSingleNameReference.java\").getType(\"TypeReferenceAsSingleNameReference\");", "+\tJavaSearchResultCollector resultCollector = new JavaSearchResultCollector();", "+\tsearch(", "+\t\ttype, ", "+\t\tREFERENCES, ", "+\t\tgetJavaSearchScope(), ", "+\t\tresultCollector);", "+\tassertSearchResults(", "+\t\t\"src/TypeReferenceAsSingleNameReference.java void TypeReferenceAsSingleNameReference.hasReference() [TypeReferenceAsSingleNameReference]\\n\" + ", "+\t\t\"src/TypeReferenceAsSingleNameReference.java void TypeReferenceAsSingleNameReference.hasReference() [TypeReferenceAsSingleNameReference]\",", "+\t\tresultCollector);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f7f476597279bc9fa06102cf77af272", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 150, "methodNumberAfterChange": 165, "signatureBeforeChange": " public void testTypeReferenceInArray() throws CoreException", "signatureAfterChange": " public void testTypeReference21() throws CoreException", "diff": ["-public void testTypeReferenceInArray() throws CoreException {", "-\tIType type = getCompilationUnit(\"JavaSearch\", \"src\", \"TypeReferenceInArray\", \"A.java\").getType(\"A\");", "-\tJavaSearchResultCollector resultCollector = new JavaSearchResultCollector();", "-\tsearch(", "-\t\ttype, ", "-\t\tREFERENCES, ", "-\t\tgetJavaSearchScope(), ", "-\t\tresultCollector);", "-\tassertSearchResults(", "-\t\t\"src/TypeReferenceInArray/A.java TypeReferenceInArray.A.a [A]\\n\" +", "-\t\t\"src/TypeReferenceInArray/A.java TypeReferenceInArray.A.b [TypeReferenceInArray.A]\",", "-\t\tresultCollector);", "-}", "+ */", "+public void testTypeReference21() throws CoreException { // was testTypeReferenceInArray", "+\tIType type = getCompilationUnit(\"JavaSearch\", \"src\", \"TypeReferenceInArray\", \"A.java\").getType(\"A\");", "+\tJavaSearchResultCollector resultCollector = new JavaSearchResultCollector();", "+\tsearch(", "+\t\ttype, ", "+\t\tREFERENCES, ", "+\t\tgetJavaSearchScope(), ", "+\t\tresultCollector);", "+\tassertSearchResults(", "+\t\t\"src/TypeReferenceInArray/A.java TypeReferenceInArray.A.a [A]\\n\" +", "+\t\t\"src/TypeReferenceInArray/A.java TypeReferenceInArray.A.b [TypeReferenceInArray.A]\",", "+\t\tresultCollector);", "+}"]}], "num": 338}