{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "34a4ab5cb8cb5fcbaa4f94b3e79a5fb7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b1396a5ac42d6a6c596b338f11eb448", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "362233260739692d3401ff7da0020ced9d7f2557", "commitAfterChange": "bc6513051567ecd475a4c8693370e01173b2772a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  private static void setLogDir(StringBuffer buffer) throws CoreException", "signatureAfterChange": "  private static void setLogDir(StringBuffer buffer) throws CoreException", "diff": ["-//\tIWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();", "-//\tIProject project = root.getProject(\"Bugs\");", "-//\tIFolder rootFolder = project.getFolder(\"Formatter\");", "-//\tIFolder folder = rootFolder.getFolder(ECLIPSE_VERSION);", "-//\tif (!folder.exists()) folder.create(true, true, null);", "-\t\tif (TEMP_OUTPUT != null) {", "-\t\t\tlogDir = new File(logDir, \"tmp\");", "-\t\t}", "-//\t\tfolder = folder.getFolder(\"tests\");", "-//\t\tif (!folder.exists()) folder.create(true, true, null);", "-//\t\tfolder = folder.getFolder(PATCH_BUG);", "-//\t\tif (!folder.exists()) folder.create(true, true, null);", "-//\t\tfolder = folder.getFolder(PATCH_VERSION);", "-//\t\tif (!folder.exists()) folder.create(true, true, null);", "-//\t\tfolder = folder.getFolder(\"HEAD\");", "-//\t\tif (!folder.exists()) folder.create(true, true, null);", "-//\t\tfolder = folder.getFolder(ECLIPSE_MILESTONE);", "-//\t\tif (!folder.exists()) folder.create(true, true, null);", "-//\t\tfolder = folder.getFolder(JDT_CORE_VERSION);", "-//\t\tif (!folder.exists()) folder.create(true, true, null);", "-\tif (NO_COMMENTS || BRACES != null || JOIN_LINES != null) {", "+\tif (NO_COMMENTS || BRACES != null || JOIN_LINES != null || PRESERVED_LINES != -1) {", "-//\t\tfolder = folder.getFolder(\"profiles\");", "-//\t\tif (!folder.exists()) folder.create(true, true, null);", "-//\t\t\tfolder = folder.getFolder(\"join_lines\");", "-//\t\t\tif (!folder.exists()) folder.create(true, true, null);", "-//\t\t\tfolder = folder.getFolder(JOIN_LINES);", "-//\t\t\tif (!folder.exists()) folder.create(true, true, null);", "-//\t\t\tfolder = folder.getFolder(\"no_comments\");", "-//\t\t\tif (!folder.exists()) folder.create(true, true, null);", "-//\t\t\tfolder = folder.getFolder(\"braces\");", "-//\t\t\tif (!folder.exists()) folder.create(true, true, null);", "-//\t\t\tfolder = folder.getFolder(BRACES);", "-//\t\t\tif (!folder.exists()) folder.create(true, true, null);", "+\t\t}", "+\t\tif (PRESERVED_LINES != -1) {", "+\t\t\tlogDir = new File(new File(logDir, \"preserved_lines\"), Integer.toString(PRESERVED_LINES));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfc0bd455b43a56aef0ecd3d38b12034", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "48b439005b4e27b9edf7ac75008df6663dca3609", "commitAfterChange": "db94ada762c25cbafb7604978ccc4fc3df281550", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  private static void setLogDir(StringBuffer buffer)", "signatureAfterChange": "  private static void setLogDir(StringBuffer buffer) throws CoreException", "diff": ["-private static void setLogDir(StringBuffer buffer) {", "+private static void setLogDir(StringBuffer buffer) throws CoreException {", "+//\tIWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();", "+//\tIProject project = root.getProject(\"Bugs\");", "+//\tIFolder rootFolder = project.getFolder(\"Formatter\");", "+//\tIFolder folder = rootFolder.getFolder(ECLIPSE_VERSION);", "+//\tif (!folder.exists()) folder.create(true, true, null);", "+\t\tlogDir = new File(logDir, PATCH_VERSION);", "+//\t\tfolder = folder.getFolder(\"tests\");", "+//\t\tif (!folder.exists()) folder.create(true, true, null);", "+//\t\tfolder = folder.getFolder(PATCH_BUG);", "+//\t\tif (!folder.exists()) folder.create(true, true, null);", "+//\t\tfolder = folder.getFolder(PATCH_VERSION);", "+//\t\tif (!folder.exists()) folder.create(true, true, null);", "+//\t\tfolder = folder.getFolder(\"HEAD\");", "+//\t\tif (!folder.exists()) folder.create(true, true, null);", "+//\t\tfolder = folder.getFolder(ECLIPSE_MILESTONE);", "+//\t\tif (!folder.exists()) folder.create(true, true, null);", "+//\t\tfolder = folder.getFolder(JDT_CORE_VERSION);", "+//\t\tif (!folder.exists()) folder.create(true, true, null);", "+//\t\tfolder = folder.getFolder(\"profiles\");", "+//\t\tif (!folder.exists()) folder.create(true, true, null);", "+//\t\t\tfolder = folder.getFolder(\"join_lines\");", "+//\t\t\tif (!folder.exists()) folder.create(true, true, null);", "+//\t\t\tfolder = folder.getFolder(JOIN_LINES);", "+//\t\t\tif (!folder.exists()) folder.create(true, true, null);", "+//\t\t\tfolder = folder.getFolder(\"no_comments\");", "+//\t\t\tif (!folder.exists()) folder.create(true, true, null);", "+//\t\t\tfolder = folder.getFolder(\"braces\");", "+//\t\t\tif (!folder.exists()) folder.create(true, true, null);", "+//\t\t\tfolder = folder.getFolder(BRACES);", "+//\t\t\tif (!folder.exists()) folder.create(true, true, null);", "-\tString logFileName = INPUT_DIR.getName().replaceAll(\"\\\\.\", \"\")+\".txt\";", "+\tString filePrefix = INPUT_DIR.getName().replaceAll(\"\\\\.\", \"\");", "+\tString logFileName = filePrefix+\".txt\";", "+\tif (LOG_FILE.exists()) {", "+\t\tFile saveDir = new File(logDir, \"save\");", "+\t\tsaveDir.mkdir();", "+\t\tint i=0;", "+\t\twhile (true) {", "+\t\t\tString newFileName = filePrefix+\"_\";", "+\t\t\tif (i<10) newFileName += \"0\";", "+\t\t\tnewFileName += i+\".txt\";", "+\t\t\tFile renamedFile = new File(saveDir, newFileName);", "+\t\t\tif (LOG_FILE.renameTo(renamedFile)) break;", "+\t\t\ti++;", "+\t\t}", "+\t}", "+//\tLOG_RESOURCE = folder.getFile(logFileName);", "+//\tbuffer.append(LOG_RESOURCE.getFullPath());", "-\t\tif (LOG_FILE.exists()) {", "-\t\t\tUtil.delete(LOG_FILE);", "-\t\t}", "+\t\tLOG_STREAM.flush();", "+//\tif (LOG_RESOURCE.exists()) {", "+//\t\tUtil.delete(LOG_RESOURCE);", "+//\t}", "+//\tLOG_BUFFER = new StringBuffer();"]}], "num": 71363}