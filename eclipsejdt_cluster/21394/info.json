{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4ead8104bc978af97b651c671e96a2be", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e152018105f574c93f66c38b382e208", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/DoStatement.java", "commitBeforeChange": "94cf6b4f7af3fd80bbff88619e21ee7974889ee5", "commitAfterChange": "fe32c2fb1206f9aa293286057591b6614ed5e3a2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\t// generate condition", "-\t\tif (continueLabel != null) {", "-\t\t\tcontinueLabel.place();", "-\t\t\tcondition.generateOptimizedBoolean(", "-\t\t\t\tcurrentScope,", "-\t\t\t\tcodeStream,", "-\t\t\t\tactionLabel,", "-\t\t\t\tnull,", "-\t\t\t\ttrue);", "+\t\tConstant cst = condition.optimizedBooleanConstant();", "+\t\tboolean isConditionOptimizedFalse = cst != Constant.NotAConstant && cst.booleanValue() == false;\t\t", "+\t\tif (isConditionOptimizedFalse){", "+\t\t\tcondition.generateCode(currentScope, codeStream, false);", "+\t\t} else {", "+\t\t\t// generate condition", "+\t\t\tif (continueLabel != null) {", "+\t\t\t\tcontinueLabel.place();", "+\t\t\t\tcondition.generateOptimizedBoolean(", "+\t\t\t\t\tcurrentScope,", "+\t\t\t\t\tcodeStream,", "+\t\t\t\t\tactionLabel,", "+\t\t\t\t\tnull,", "+\t\t\t\t\ttrue);", "+\t\t\t}", "-\t\tbreakLabel.place();", "+\t\tif (breakLabel.hasForwardReferences())", "+\t\t\tbreakLabel.place();", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "789ccb5c076706e6545ee8bf13b0b742", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatter.java", "commitBeforeChange": "98f2bddac4ca73b1337b5f331ae5366c8a3be03a", "commitAfterChange": "269656063719e4f88fa4c7a37dcef13c364280f0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \tprivate void flushBuffer()", "signatureAfterChange": "\r \tprivate void flushBuffer()", "diff": ["-\t\tif (options.maxLineLength != 0) {\r", "-\t\t\tif (containsOpenCloseBraces) {\r", "-\t\t\t\tcontainsOpenCloseBraces = false;\r", "-\t\t\t\toutputLine(\r", "-\t\t\t\t\tcurrentString,\r", "-\t\t\t\t\tfalse,\r", "-\t\t\t\t\tindentationLevelForOpenCloseBraces,\r", "-\t\t\t\t\t0,\r", "-\t\t\t\t\t-1,\r", "-\t\t\t\t\tnull,\r", "-\t\t\t\t\t0);\r", "-\t\t\t\tindentationLevelForOpenCloseBraces = currentLineIndentationLevel;\r", "-\t\t\t} else {\r", "-\t\t\t\toutputLine(currentString, false, currentLineIndentationLevel, 0, -1, null, 0);\r", "-\t\t\t}\r", "+\t\tif (containsOpenCloseBraces) {\r", "+\t\t\tcontainsOpenCloseBraces = false;\r", "+\t\t\toutputLine(\r", "+\t\t\t\tcurrentString,\r", "+\t\t\t\tfalse,\r", "+\t\t\t\tindentationLevelForOpenCloseBraces,\r", "+\t\t\t\t0,\r", "+\t\t\t\t-1,\r", "+\t\t\t\tnull,\r", "+\t\t\t\t0);\r", "+\t\t\tindentationLevelForOpenCloseBraces = currentLineIndentationLevel;\r", "-\t\t\tformattedSource.append(currentString);\r", "+\t\t\toutputLine(currentString, false, currentLineIndentationLevel, 0, -1, null, 0);\r"]}], "num": 21394}