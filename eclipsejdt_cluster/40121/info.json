{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4591ddcc085df4af05961b1b9dc096ee", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84a8ba2afe2e22b741a12c5440ea6fb8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "2ee79aa2176c86c933fdef85c9bf2ea8123b4e1d", "commitAfterChange": "c3ea33f52711e4e769453ea9d7eb95255e1ee3ec", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": " public void performCompilation(int remainingIterations) throws InvalidInputException", "signatureAfterChange": " public void performCompilation() throws InvalidInputException", "diff": ["-public void performCompilation(int remainingIterations/*including the current iteration*/) throws InvalidInputException {", "+public void performCompilation() throws InvalidInputException {", "-\tthis.batchCompiler.remainingIterations = remainingIterations;", "+\tthis.batchCompiler.remainingIterations = this.maxRepetition-this.currentRepetition/*remaining iterations including this one*/;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9558330180d33b3fd868a4280f2e4132", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "09f42f58bcdf2fa84ccd2b8b65f28ab3036222ca", "commitAfterChange": "57e8dd41219d846363c918d62edb5007994c5c79", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void inferInvocationApplicability(MethodBinding method, TypeBinding[] arguments, boolean isDiamond, int checkType)", "signatureAfterChange": " \tpublic void inferInvocationApplicability(MethodBinding method, TypeBinding[] arguments, boolean isDiamond)", "diff": ["-\t/** JLS 18.5.1 Invocation Applicability Inference */", "-\tpublic void inferInvocationApplicability(MethodBinding method, TypeBinding[] arguments, boolean isDiamond, int checkType) {", "-\t\tConstraintExpressionFormula.inferInvocationApplicability(this, method, arguments, isDiamond, checkType);", "+\t/** JLS 18.5.1 Invocation Applicability Inference. */", "+\tpublic void inferInvocationApplicability(MethodBinding method, TypeBinding[] arguments, boolean isDiamond) {", "+\t\tConstraintExpressionFormula.inferInvocationApplicability(this, method, arguments, isDiamond, this.inferenceKind);"]}], "num": 40121}