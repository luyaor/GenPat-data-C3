{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "20ac9f7d67a58b8a49fbe8ec198b45de", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14fecdaead6aa7daf28417cf7c68dc84", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "e6f197651cbdf07261298d2395f1290ce2dfe4c1", "commitAfterChange": "5a485cb39d1ee33622141cf426fac71c4bf93ded", "methodNumberBeforeChange": 197, "methodNumberAfterChange": 182, "signatureBeforeChange": " final public void invoke(int opcode, int argsSize, int returnTypeSize, char[] declaringClass, char[] selector, char[] signature)", "signatureAfterChange": " protected void invoke(int opcode, int argsSize, int returnTypeSize, char[] declaringClass, char[] selector, char[] signature)", "diff": ["+}", "+protected void invoke(int opcode, int argsSize, int returnTypeSize, char[] declaringClass, char[] selector, char[] signature) {", "+\tcountLabels = 0;", "+\tint argCount = argsSize;", "+\tswitch(opcode) {", "+\t\tcase Opcodes.OPC_invokeinterface :", "+\t\t\tif (classFileOffset + 4 >= bCodeStream.length) {", "+\t\t\t\tresizeByteArray();", "+\t\t\t}", "+\t\t\tposition +=3;", "+\t\t\tbCodeStream[classFileOffset++] = Opcodes.OPC_invokeinterface;", "+\t\t\twriteUnsignedShort(constantPool.literalIndexForMethod(declaringClass, selector, signature, true));", "+\t\t\targCount++;", "+\t\t\tbCodeStream[classFileOffset++] = (byte) argCount;", "+\t\t\tbCodeStream[classFileOffset++] = 0;", "+\t\t\tbreak;", "+\t\tcase Opcodes.OPC_invokevirtual :", "+\t\tcase Opcodes.OPC_invokespecial :", "+\t\t\tif (classFileOffset + 2 >= bCodeStream.length) {", "+\t\t\t\tresizeByteArray();", "+\t\t\t}", "+\t\t\tposition++;", "+\t\t\tbCodeStream[classFileOffset++] = (byte) opcode;", "+\t\t\twriteUnsignedShort(constantPool.literalIndexForMethod(declaringClass, selector, signature, false));", "+\t\t\targCount++;", "+\t\t\tbreak;", "+\t\tcase Opcodes.OPC_invokestatic :", "+\t\t\tif (classFileOffset + 2 >= bCodeStream.length) {", "+\t\t\t\tresizeByteArray();", "+\t\t\t}", "+\t\t\tposition++;", "+\t\t\tbCodeStream[classFileOffset++] = Opcodes.OPC_invokestatic;", "+\t\t\twriteUnsignedShort(constantPool.literalIndexForMethod(declaringClass, selector, signature, false));", "+\t}", "+\tstackDepth += returnTypeSize - argCount;", "+\tif (stackDepth > stackMax) {", "+\t\tstackMax = stackDepth;", "+\t}", "+}", "-final public void invoke(int opcode, int argsSize, int returnTypeSize, char[] declaringClass, char[] selector, char[] signature) {", "-\tcountLabels = 0;", "-\tint argCount = argsSize;", "-\tswitch(opcode) {", "-\t\tcase OPC_invokeinterface :", "-\t\t\tif (classFileOffset + 4 >= bCodeStream.length) {", "-\t\t\t\tresizeByteArray();", "-\t\t\t}", "-\t\t\tposition +=3;", "-\t\t\tbCodeStream[classFileOffset++] = OPC_invokeinterface;", "-\t\t\twriteUnsignedShort(constantPool.literalIndexForMethod(declaringClass, selector, signature, true));", "-\t\t\targCount++;", "-\t\t\tbCodeStream[classFileOffset++] = (byte) argCount;", "-\t\t\tbCodeStream[classFileOffset++] = 0;", "-\t\t\tbreak;", "-\t\tcase OPC_invokevirtual :", "-\t\tcase OPC_invokespecial :", "-\t\t\tif (classFileOffset + 2 >= bCodeStream.length) {", "-\t\t\t\tresizeByteArray();", "-\t\t\t}", "-\t\t\tposition++;", "-\t\t\tbCodeStream[classFileOffset++] = (byte) opcode;", "-\t\t\twriteUnsignedShort(constantPool.literalIndexForMethod(declaringClass, selector, signature, false));", "-\t\t\targCount++;", "-\t\t\tbreak;", "-\t\tcase OPC_invokestatic :", "-\t\t\tif (classFileOffset + 2 >= bCodeStream.length) {", "-\t\t\t\tresizeByteArray();", "-\t\t\t}", "-\t\t\tposition++;", "-\t\t\tbCodeStream[classFileOffset++] = OPC_invokestatic;", "-\t\t\twriteUnsignedShort(constantPool.literalIndexForMethod(declaringClass, selector, signature, false));", "-\t}", "-\tstackDepth += returnTypeSize - argCount;", "-\tif (stackDepth > stackMax) {", "-\t\tstackMax = stackDepth;", "-\t}", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a9b86e4958d7cc38aba8b00215faf5f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "d35754bf597e1e3c63426404dbcb66843b76444c", "commitAfterChange": "889cbee9e452a2b606e084167406ae9a949acd46", "methodNumberBeforeChange": 185, "methodNumberAfterChange": 186, "signatureBeforeChange": " protected void invoke(int opcode, int argsSize, int returnTypeSize, char[] declaringClass, char[] selector, char[] signature)", "signatureAfterChange": "  protected void invoke(byte opcode, int receiverAndArgsSize, int returnTypeSize, char[] declaringClass, char[] selector, char[] signature)", "diff": ["-protected void invoke(int opcode, int argsSize, int returnTypeSize, char[] declaringClass, char[] selector, char[] signature) {", "-\tthis.countLabels = 0;", "-\tint argCount = argsSize;", "-\tswitch(opcode) {", "-\t\tcase Opcodes.OPC_invokeinterface :", "-\t\t\tif (this.classFileOffset + 4 >= this.bCodeStream.length) {", "-\t\t\t\tresizeByteArray();", "-\t\t\t}", "-\t\t\tthis.position +=3;", "-\t\t\tthis.bCodeStream[this.classFileOffset++] = Opcodes.OPC_invokeinterface;", "-\t\t\twriteUnsignedShort(this.constantPool.literalIndexForMethod(declaringClass, selector, signature, true));", "-\t\t\targCount++;", "-\t\t\tthis.bCodeStream[this.classFileOffset++] = (byte) argCount;", "-\t\t\tthis.bCodeStream[this.classFileOffset++] = 0;", "-\t\t\tbreak;", "-\t\tcase Opcodes.OPC_invokevirtual :", "-\t\tcase Opcodes.OPC_invokespecial :", "-\t\t\tif (this.classFileOffset + 2 >= this.bCodeStream.length) {", "-\t\t\t\tresizeByteArray();", "-\t\t\t}", "-\t\t\tthis.position++;", "-\t\t\tthis.bCodeStream[this.classFileOffset++] = (byte) opcode;", "-\t\t\twriteUnsignedShort(this.constantPool.literalIndexForMethod(declaringClass, selector, signature, false));", "-\t\t\targCount++;", "-\t\t\tbreak;", "-\t\tcase Opcodes.OPC_invokestatic :", "-\t\t\tif (this.classFileOffset + 2 >= this.bCodeStream.length) {", "-\t\t\t\tresizeByteArray();", "-\t\t\t}", "-\t\t\tthis.position++;", "-\t\t\tthis.bCodeStream[this.classFileOffset++] = Opcodes.OPC_invokestatic;", "-\t\t\twriteUnsignedShort(this.constantPool.literalIndexForMethod(declaringClass, selector, signature, false));", "-\tthis.stackDepth += returnTypeSize - argCount;", "+", "+protected void invoke(byte opcode, int receiverAndArgsSize, int returnTypeSize, char[] declaringClass, char[] selector, char[] signature) {", "+\tthis.countLabels = 0;", "+\tif (opcode == Opcodes.OPC_invokeinterface) {", "+\t\t// invokeinterface", "+\t\tif (this.classFileOffset + 4 >= this.bCodeStream.length) {", "+\t\t\tresizeByteArray();", "+\t\t}", "+\t\tthis.position +=3;", "+\t\tthis.bCodeStream[this.classFileOffset++] = opcode;", "+\t\twriteUnsignedShort(this.constantPool.literalIndexForMethod(declaringClass, selector, signature, true));", "+\t\tthis.bCodeStream[this.classFileOffset++] = (byte) receiverAndArgsSize;", "+\t\tthis.bCodeStream[this.classFileOffset++] = 0;", "+\t} else {", "+\t\t// invokespecial", "+\t\t// invokestatic", "+\t\t// invokevirtual", "+\t\tif (this.classFileOffset + 2 >= this.bCodeStream.length) {", "+\t\t\tresizeByteArray();", "+\t\t}", "+\t\tthis.position++;", "+\t\tthis.bCodeStream[this.classFileOffset++] = opcode;", "+\t\twriteUnsignedShort(this.constantPool.literalIndexForMethod(declaringClass, selector, signature, false));", "+\t}", "+\tthis.stackDepth += returnTypeSize - receiverAndArgsSize;"]}], "num": 4895}