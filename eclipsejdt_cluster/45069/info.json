{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eb730112919c56c29dd84949af3e616f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ab910d35570af47c65a379cfd408f31", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/QualifiedTypeDeclarationPattern.java", "commitBeforeChange": "6c719f0e5c9d00da68797ddc3b13bec6943a8d9c", "commitAfterChange": "3ba8416c88ea2caabb450ac956476cf3b7bed2e6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  protected void decodeIndexEntry(IEntryResult entryResult)", "signatureAfterChange": " protected void decodeIndexEntry(IEntryResult entryResult)", "diff": ["-", "-\t", "-\tint oldSlash = TYPE_DECL_LENGTH+1;", "-\tint slash = CharOperation.indexOf(SEPARATOR, word, oldSlash+1);", "-\tchar[] pkgName;", "-\tif (slash == oldSlash+1){ ", "-\t\tpkgName = CharOperation.NO_CHAR;", "-\t} else {", "-\t\tpkgName = CharOperation.subarray(word, oldSlash+1, slash);", "-\t}", "-\tthis.decodedSimpleName = CharOperation.subarray(word, slash+1, slash = CharOperation.indexOf(SEPARATOR, word, slash+1));", "+\tint oldSlash = TYPE_DECL_LENGTH + 1;", "+\tint slash = CharOperation.indexOf(SEPARATOR, word, oldSlash + 1);", "+\tchar[] pkgName = slash == oldSlash + 1", "+\t\t? CharOperation.NO_CHAR", "+\t\t: CharOperation.subarray(word, oldSlash+1, slash);", "+\tthis.decodedSimpleName = CharOperation.subarray(word, slash + 1, slash = CharOperation.indexOf(SEPARATOR, word, slash + 1));", "-\tif (slash+1 < size){", "-\t\tif (slash+3 == size && word[slash+1] == ONE_ZERO[0]) {", "-\t\t\tenclosingTypeNames = ONE_ZERO_CHAR;", "-\t\t} else {", "-\t\t\tenclosingTypeNames = CharOperation.splitOn('/', CharOperation.subarray(word, slash+1, size-1));", "-\t\t}", "+\tif (slash + 1 < size) {", "+\t\tenclosingTypeNames = (slash + 3 == size && word[slash + 1] == ONE_ZERO[0])", "+\t\t\t? ONE_ZERO_CHAR", "+\t\t\t: CharOperation.splitOn('/', CharOperation.subarray(word, slash + 1, size - 1));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af3ce59a95e07e5f4981a02a47590229", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern.java", "commitBeforeChange": "9037a5669c89fc0ae3f8548a99dce6fa5402fb31", "commitAfterChange": "e4e1e1935f0e7607d1265df332c7ce922de89c18", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 16, "signatureBeforeChange": " protected void matchReportReference(QualifiedNameReference qNameRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(QualifiedNameReference qNameRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\twhile (typeBinding != null && lastIndex >= 0){", "+\twhile (typeBinding != null && lastIndex >= 0) {", "-\t\tif (typeBinding instanceof ReferenceBinding){", "-\t\t\ttypeBinding = ((ReferenceBinding)typeBinding).enclosingType();", "-\t\t} else {", "-\t\t\ttypeBinding = null;", "-\t\t}", "+\t\ttypeBinding = typeBinding instanceof ReferenceBinding", "+\t\t\t? ((ReferenceBinding)typeBinding).enclosingType()", "+\t\t\t: null;", "-\t\tif (binding == null || binding instanceof ProblemBinding) {", "-\t\t\ttokens = new char[][] {this.simpleName};", "-\t\t} else {", "-\t\t\ttokens = qNameRef.tokens;", "-\t\t}", "+\t\ttokens = binding == null || binding instanceof ProblemBinding", "+\t\t\t? new char[][] {this.simpleName}", "+\t\t\t: qNameRef.tokens;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bab86ff3f5dc62cd81f4c715a823c99d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "9037a5669c89fc0ae3f8548a99dce6fa5402fb31", "commitAfterChange": "e4e1e1935f0e7607d1265df332c7ce922de89c18", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 22, "signatureBeforeChange": " protected boolean matchesType(char[] simpleNamePattern, char[] qualificationPattern, char[] fullyQualifiedTypeName)", "signatureAfterChange": " protected boolean matchesType(char[] simpleNamePattern, char[] qualificationPattern, char[] fullyQualifiedTypeName)", "diff": ["-\t\tif (qualificationPattern == null) {", "-\t\t\tpattern = ONE_STAR;", "-\t\t} else {", "-\t\t\tpattern = CharOperation.concat(qualificationPattern, ONE_STAR, '.');", "-\t\t}", "+\t\tpattern = qualificationPattern == null", "+\t\t\t? ONE_STAR", "+\t\t\t: CharOperation.concat(qualificationPattern, ONE_STAR, '.');", "-\t\tif (qualificationPattern == null) {", "-\t\t\tpattern = CharOperation.concat(ONE_STAR, simpleNamePattern);", "-\t\t} else {", "-\t\t\tpattern = CharOperation.concat(qualificationPattern, simpleNamePattern, '.');", "-\t\t}", "+\t\tpattern = qualificationPattern == null", "+\t\t\t? CharOperation.concat(ONE_STAR, simpleNamePattern)", "+\t\t\t: CharOperation.concat(qualificationPattern, simpleNamePattern, '.');", "-\tif (!this.isCaseSensitive) {", "+\tif (!this.isCaseSensitive)", "-\t}", "-\treturn ", "-\t\tCharOperation.match(", "-\t\t\tpattern,", "-\t\t\tfullyQualifiedTypeName,", "-\t\t\tthis.isCaseSensitive", "-\t\t);", "+\treturn CharOperation.match(pattern, fullyQualifiedTypeName, this.isCaseSensitive);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7b879ba0b8a99e5494ab5eae596719d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern.java", "commitBeforeChange": "6c719f0e5c9d00da68797ddc3b13bec6943a8d9c", "commitAfterChange": "3ba8416c88ea2caabb450ac956476cf3b7bed2e6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected void decodeIndexEntry(IEntryResult entryResult)", "signatureAfterChange": " protected void decodeIndexEntry(IEntryResult entryResult)", "diff": ["-protected void decodeIndexEntry(IEntryResult entryResult){", "-", "+protected void decodeIndexEntry(IEntryResult entryResult) {", "-\tint oldSlash = TYPE_DECL_LENGTH+1;", "-\tint slash = CharOperation.indexOf(SEPARATOR, word, oldSlash+1);", "-\tif (slash == oldSlash+1){ ", "-\t\tthis.decodedPackage = CharOperation.NO_CHAR;", "-\t} else {", "-\t\tthis.decodedPackage = CharOperation.subarray(word, oldSlash+1, slash);", "-\t}", "-\tthis.decodedSimpleName = CharOperation.subarray(word, slash+1, slash = CharOperation.indexOf(SEPARATOR, word, slash+1));", "+\tint oldSlash = TYPE_DECL_LENGTH + 1;", "+\tint slash = CharOperation.indexOf(SEPARATOR, word, oldSlash + 1);", "+\tthis.decodedPackage = (slash == oldSlash + 1)", "+\t\t? CharOperation.NO_CHAR", "+\t\t: CharOperation.subarray(word, oldSlash + 1, slash);", "+\tthis.decodedSimpleName = CharOperation.subarray(word, slash + 1, slash = CharOperation.indexOf(SEPARATOR, word, slash + 1));", "-\tif (slash+1 < size){", "-\t\tif (slash+3 == size && word[slash+1] == ONE_ZERO[0]) {", "-\t\t\tthis.decodedEnclosingTypeNames = ONE_ZERO_CHAR;", "-\t\t} else {", "-\t\t\tthis.decodedEnclosingTypeNames = CharOperation.splitOn('/', CharOperation.subarray(word, slash+1, size-1));", "-\t\t}", "+\tif (slash+1 < size) {", "+\t\tthis.decodedEnclosingTypeNames = (slash + 3 == size && word[slash + 1] == ONE_ZERO[0])", "+\t\t\t? ONE_ZERO_CHAR", "+\t\t\t: CharOperation.splitOn('/', CharOperation.subarray(word, slash+1, size-1));"]}], "num": 45069}