{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a14df7d2d1f4c5458eeb787fb7ab283b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "149ae24dd5a449759c6200d555b5ead3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/ThrownExceptionFinder.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic ReferenceBinding[] find(TryStatement tryStatement, BlockScope scope)", "signatureAfterChange": " \tpublic void processThrownExceptions(TryStatement tryStatement, BlockScope scope)", "diff": ["-\tpublic ReferenceBinding[] find(TryStatement tryStatement, BlockScope scope) {", "+\t */", "+\tpublic void processThrownExceptions(TryStatement tryStatement, BlockScope scope) {", "+\t\tthis.caughtExceptions = new SimpleSet();", "+\t\tthis.discouragedExceptions = new SimpleSet();", "-\t\tremoveCaughtExceptions(tryStatement);", "-", "-\t\tReferenceBinding[] result = new ReferenceBinding[this.thrownExceptions.elementSize];", "-\t\tthis.thrownExceptions.asArray(result);", "-\t\treturn result;", "+\t\tremoveCaughtExceptions(tryStatement, true /*remove unchecked exceptions this time*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89c12fc2bbb7e370bbed649cc6c5b56e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchParticipant.java", "commitBeforeChange": "1eb7b2ee6182b519d916ffa04d53971a548fcedb", "commitAfterChange": "f0bddbf5866cee7c180b234585e87d39e8347897", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic IPath[] selectIndexes( \t\tSearchPattern pattern, \t\tIJavaSearchScope scope)", "signatureAfterChange": " \tpublic IPath[] selectIndexes(SearchPattern pattern, IJavaSearchScope scope)", "diff": ["-\tpublic IPath[] selectIndexes(", "-\t\tSearchPattern pattern,", "-\t\tIJavaSearchScope scope) {", "+\tpublic IPath[] selectIndexes(SearchPattern pattern, IJavaSearchScope scope) {", "-\t\tif (this.indexSelector == null) {", "-\t\t\tthis.indexSelector = new IndexSelector(scope, pattern);", "+\t\tIndexSelector selector = (IndexSelector) this.indexSelector.get();", "+\t\tif (selector == null) {", "+\t\t\tselector = new IndexSelector(scope, pattern);", "+\t\t\tthis.indexSelector.set(selector);", "-\t\treturn this.indexSelector.getIndexLocations();", "+\t\treturn selector.getIndexLocations();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abbfa4362e4926b947a98c3e533961b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/BaseConfigurationBlock.java", "commitBeforeChange": "576407392080679bcaa93015edc00b23d7d42bf3", "commitAfterChange": "ddf6f6ea9caa1cb573b54d6cc772a0efdfa489b6", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " \t \t \tpublic void performDefaults()", "signatureAfterChange": " \t \t \tpublic void performDefaults()", "diff": ["-\t\tIScopeContext defaultScope= (fProject == null) ? new DefaultScope() : new InstanceScope();", "+\t\tIScopeContext[] lookupOrder; // not same as fLookupOrder!  Starts one layer deeper.", "+\t\tif (fProject != null) {", "+\t\t\tlookupOrder= new IScopeContext[] {", "+\t\t\t\tnew InstanceScope(),", "+\t\t\t\tnew DefaultScope()", "+\t\t\t};", "+\t\t} else {", "+\t\t\tlookupOrder= new IScopeContext[] {", "+\t\t\t\tnew DefaultScope()", "+\t\t\t};", "+\t\t}", "+", "-\t\t\tString defValue= curr.getStoredValue(defaultScope, null);", "+\t\t\tString defValue= curr.getStoredValue(lookupOrder, false, null);"]}], "num": 45894}