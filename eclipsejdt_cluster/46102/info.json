{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "247127b732b8a9439d56fec2782d4fc7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20f155a5fa9294a59ee6ba65870cd0f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "d8a456bd9b26260c97b05c5b9053ba80ab69b578", "commitAfterChange": "a460dab1d90a50493c5778c6266a2505ebe8bca6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic boolean equals(Object object)", "signatureAfterChange": " \tpublic boolean equals(Object object)", "diff": ["+\t\t\t\treturn false;", "+", "+\t\t\tif (this.isCleaningOutputLocation != otherEntry.isCleaningOutputLocation())", "+\t\t\t", "+\t\t\totherPath = otherEntry.getOutputLocation();", "+\t\t\tif (this.specificOutputLocation == null) {", "+\t\t\t\tif (otherPath != null)", "+\t\t\t\t\treturn false;", "+\t\t\t} else {", "+\t\t\t\tif (!this.specificOutputLocation.equals(otherPath))", "+\t\t\t\t\treturn false;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "380ec860e135af140ad22f7c7656a576", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "8376377bee92e0d16cfa404c8d1e948dcf5be147", "commitAfterChange": "0a6cb9139841c5f6143bc94201bfcbd6024601de", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprotected int classpathContains( \t\tIClasspathEntry[] list, \t\tIClasspathEntry entry)", "signatureAfterChange": " \tprotected int classpathContains( \t\tIClasspathEntry[] list, \t\tIClasspathEntry entry)", "diff": ["+\t\t\t\t\t// check custom outputs", "+\t\t\t\t\tIPath entryOutput = entry.getOutputLocation();", "+\t\t\t\t\tIPath otherOutput = other.getOutputLocation();", "+\t\t\t\t\tif (entryOutput == null) {", "+\t\t\t\t\t\tif (otherOutput != null)", "+\t\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tif (!entryOutput.equals(otherOutput))", "+\t\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\t", "+\t\t\t\t\t// check exclusion patterns"]}], "num": 46102}