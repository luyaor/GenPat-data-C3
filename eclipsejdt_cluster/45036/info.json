{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bc448c9bdf9952fa48b342a0a30bc0c8", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bbc0294147ad2a1d82d5dfecd16bb83", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/HierarchyResolver.java", "commitBeforeChange": "81506ae8cde4c9731bf1393802436c42681071e3", "commitAfterChange": "38b45821c6a8adb25c41b5b709d94fc0713cc3dd", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r \r public void accept(IBinaryType binaryType, PackageBinding packageBinding)", "signatureAfterChange": "\r \r public void accept(IBinaryType binaryType, PackageBinding packageBinding)", "diff": ["+\t\r", "+\t// fault in its hierarchy...\r", "+\ttry {\r", "+\t\ttypeBinding.superclass();\r", "+\t\ttypeBinding.superInterfaces();\r", "+\t} catch (AbortCompilation e) {\r", "+\t\treturn;\r", "+\t}\r", "+\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56b28f23dd56eb36f7bd607600c78692", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AptPlugin.java", "commitBeforeChange": "98f970f58fc61208a8cdd52e3b9981ef32c5937b", "commitAfterChange": "29a8044fc706583901ff89364d428dff04f6a567", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic void start(BundleContext context) throws Exception", "signatureAfterChange": " \t \tpublic void start(BundleContext context) throws Exception", "diff": ["+\t\t// Do we have access to ", "+\t\t", "+\t\ttry {", "+\t\t\t_java6ProcessorClass = Class.forName(JAVA6_FACTORY_NAME);", "+\t\t} catch (Throwable e) {", "+\t\t\t// ignore", "+\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6028b45464cc48f405ef80635a6e59b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "3e09b280c0e32bfbda308a91208d06b797d7df77", "commitAfterChange": "da92fbd475228d5f50e708b7e7dec29d3c55666e", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "\r \tpublic void deleting(IProject project)", "signatureAfterChange": "\r \tpublic void deleting(IProject project)", "diff": ["+\t\t\ttry {\r", "+\t\t\t\tJavaCore.create(project).close();\r", "+\t\t\t} catch (JavaModelException e) {\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92482d9fd20db4a8c9baf3e76a56f121", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/ClasspathJar.java", "commitBeforeChange": "47c6179e6e1821781901fe76cdd5f626014ad806", "commitAfterChange": "9185602916ae3d2b479dd70264118bc8aec45408", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public String getPath()", "signatureAfterChange": " public String getPath()", "diff": ["-public String getPath(){", "+public String getPath() {", "-\t\tthis.path = this.file.getAbsolutePath();", "+\t\ttry {", "+\t\t\tthis.path = this.file.getCanonicalPath();", "+\t\t} catch (IOException e) {", "+\t\t\t// in case of error, simply return the absolute path", "+\t\t\tthis.path = this.file.getAbsolutePath();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d6ddbb0fe77ae7ce53aa5d23603870c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NamedMember.java", "commitBeforeChange": "9abd8a438adc91f90d58429de1a36d7bec5cda45", "commitAfterChange": "b3955a9859955e98768694451b12e4fcd5ade5de", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprotected String getKey(IMethod method)", "signatureAfterChange": " \t \tprotected String getKey(IMethod method)", "diff": ["-\t\tkey.append('V'); // cannot get the return type without opening the element, default to void", "+\t\ttry {", "+\t\t\tkey.append(method.getReturnType());", "+\t\t} catch (JavaModelException e) {", "+\t\t\t// method doesn't exist", "+\t\t\tkey.append('V');", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc909e3c45f8d118ef15f16a86daab96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/ClasspathDirectory.java", "commitBeforeChange": "96e116cfe5663ff4b4647843e85fb0825b6be010", "commitAfterChange": "9280ea37a274542011a9538b65ec2f4506440d4b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  ClasspathDirectory(File directory, String encoding, int mode, \t\tAccessRuleSet accessRuleSet, String destinationPath)", "signatureAfterChange": "  ClasspathDirectory(File directory, String encoding, int mode, \t\tAccessRuleSet accessRuleSet, String destinationPath)", "diff": ["-\tthis.path = directory.getAbsolutePath();", "+\ttry {", "+\t\tthis.path = directory.getCanonicalPath();", "+\t} catch (IOException e) {", "+\t\t// should not happen as we know that the file exists", "+\t\tthis.path = directory.getAbsolutePath();", "+\t}"]}], "num": 45036}