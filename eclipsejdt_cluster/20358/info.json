{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6ba2a9f3b733f3b59eba96fba7eff814", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7392cfa8564f7574c8732d78463ef19e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "575e550c3da950f3c54755e34320456663152397", "commitAfterChange": "f263f2ef7943b444a7df1ecbae4d4e44696c99a8", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  \tvoid initialize(ReferenceBinding someType, TypeBinding[] someArguments)", "signatureAfterChange": "  \tvoid initialize(ReferenceBinding someType, TypeBinding[] someArguments)", "diff": ["-\t\tthis.modifiers = someType.modifiers | AccGenericSignature;", "-//\t\tthis.modifiers = someType.modifiers;", "-//\t\t// only set AccGenericSignature if parameterized or have enclosing type required signature", "-//\t\tif (someArguments != null)", "-//\t\t\tthis.modifiers |= AccGenericSignature;", "-//\t\telse if (this.enclosingType != null) ", "-//\t\t\tthis.modifiers |= (this.enclosingType.modifiers & AccGenericSignature);", "+\t\tthis.modifiers = someType.modifiers;", "+\t\t// only set AccGenericSignature if parameterized or have enclosing type required signature", "+\t\tif (someArguments != null)", "+\t\t\tthis.modifiers |= AccGenericSignature;", "+\t\telse if (this.enclosingType != null) ", "+\t\t\tthis.modifiers |= (this.enclosingType.modifiers & AccGenericSignature);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa1fd2a9bb7e4d7cf421c3cef37522ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " public MethodBinding resolveTypesFor(MethodBinding method)", "signatureAfterChange": " public MethodBinding resolveTypesFor(MethodBinding method)", "diff": ["-\t\t\t\tmethodDecl.scope.problemReporter().cannotThrowType(exceptionTypes[i], resolvedExceptionType);", "-\t\t\t\tcontinue;", "+\t\t\t\tif (resolvedExceptionType.isValidBinding()) {", "+\t\t\t\t\tmethodDecl.scope.problemReporter().cannotThrowType(exceptionTypes[i], resolvedExceptionType);", "+\t\t\t\t\tcontinue;", "+\t\t\t\t}", "-\t\t    if ((resolvedExceptionType.modifiers & ExtraCompilerModifiers.AccGenericSignature) != 0)", "-\t\t\t\tmethod.modifiers |= ExtraCompilerModifiers.AccGenericSignature;", "+\t\t\tif ((resolvedExceptionType.tagBits & TagBits.HasMissingType) != 0) {", "+\t\t\t\tmethod.tagBits |= TagBits.HasMissingType;", "+\t\t\t}\t\t\t\t\t\t", "+\t\t\tmethod.modifiers |= (resolvedExceptionType.modifiers & ExtraCompilerModifiers.AccGenericSignature);", "+\t\t\t\tif ((parameterType.tagBits & TagBits.HasMissingType) != 0) {", "+\t\t\t\t\tmethod.tagBits |= TagBits.HasMissingType;", "+\t\t\t\t}\t\t\t\t\t\t", "+\t\t\t\tif ((methodType.tagBits & TagBits.HasMissingType) != 0) {", "+\t\t\t\t\tmethod.tagBits |= TagBits.HasMissingType;", "+\t\t\t\t}\t\t\t\t\t"]}], "num": 20358}