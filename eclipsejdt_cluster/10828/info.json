{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c23dd927c4f63144272678c3c30a621f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14b249de05e0c1aeed176d89218adaa0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "c7e61e314902d7cf48e71c1a1c0437bb40107c2e", "commitAfterChange": "8a1621e802c664e59aba36b8a87f59ae57902e37", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 32, "signatureBeforeChange": " public void test_nonnull_parameter_016()", "signatureAfterChange": " public void test_nonnull_parameter_016()", "diff": ["-\t\t\t\"    X(@NonNull Object ... o) {\\n\" +", "+\t\t\t((this.complianceLevel < ClassFileConstants.JDK1_8)", "+\t\t\t ? \"    X(@NonNull Object ... o) {\\n\"", "+\t\t\t : \"    X(Object @NonNull... o) {\\n\") +", "-\t\t\t\"        Y(int i, @NonNull Object ... o) {\\n\" +", "+\t\t\t((this.complianceLevel < ClassFileConstants.JDK1_8)", "+\t\t\t ? \"    Y(int i, @NonNull Object ... o) {\\n\"", "+\t\t\t : \"    Y(int i, Object @NonNull... o) {\\n\") +", "-\t\t\t\"        Y(char c, @NonNull Object ... o) {\\n\" +", "+\t\t\t((this.complianceLevel < ClassFileConstants.JDK1_8)", "+\t\t\t ? \"    Y(char c, @NonNull Object ... o) {\\n\"", "+\t\t\t : \"    Y(char c, Object @NonNull... o) {\\n\") +", "-\t\t\t\"Redundant null check: The variable o is specified as @NonNull\\n\" +", "+\t\t\tredundant_check_nonnull(\"The variable o\", \"Object @NonNull[]\") + ", "-\t\t\t\"Null type mismatch: required \\'@NonNull Object[]\\' but the provided value is null\\n\" +", "+\t\t\t\"Null type mismatch: required \\'\"+nonNullArrayOf(\"Object\")+\"\\' but the provided value is null\\n\" +", "-\t\t\t\"Null type mismatch: required \\'@NonNull Object[]\\' but the provided value is null\\n\" +", "+\t\t\t\"Null type mismatch: required \\'\"+nonNullArrayOf(\"Object\")+\"\\' but the provided value is null\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "311207a33f76015f56688b6d8ad590c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "c7e61e314902d7cf48e71c1a1c0437bb40107c2e", "commitAfterChange": "8a1621e802c664e59aba36b8a87f59ae57902e37", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 31, "signatureBeforeChange": " public void test_nonnull_parameter_015()", "signatureAfterChange": " public void test_nonnull_parameter_015()", "diff": ["-\t\t\t\"    void foo(@NonNull Object ... o) {\\n\" +", "+\t\t\t((this.complianceLevel < ClassFileConstants.JDK1_8)", "+\t\t\t ? \"    void foo(@NonNull Object ... o) {\\n\"", "+\t\t\t : \"    void foo(Object @NonNull... o) {\\n\") +", "-\t\t\t\"Redundant null check: The variable o is specified as @NonNull\\n\" + ", "+\t\t\tredundant_check_nonnull(\"The variable o\", \"Object @NonNull[]\") + ", "-\t\t\t\"Null type mismatch: required \\'@NonNull Object[]\\' but the provided value is null\\n\" + ", "+\t\t\t\"Null type mismatch: required \\'\"+nonNullArrayOf(\"Object\")+\"\\' but the provided value is null\\n\" + ", "-\t\t\t\"Null type mismatch: required \\'@NonNull Object[]\\' but the provided value is null\\n\" + ", "+\t\t\t\"Null type mismatch: required \\'\"+nonNullArrayOf(\"Object\")+\"\\' but the provided value is null\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccbc109919f6eb00aeb2816b53b5a9b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "80a71329c6d3a0896fae7794150ec55104f5c2f0", "commitAfterChange": "f59cd62ee82097eb13f8e87f8fbab8b81f747c29", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 113, "signatureBeforeChange": " public void testBug372011()", "signatureAfterChange": " public void testBug372011()", "diff": ["-\t\t\"Type mismatch: required \\'@NonNull Object\\' but the provided value is null\\n\" + ", "+\t\t\"Null type mismatch: required \\'@NonNull Object\\' but the provided value is null\\n\" + ", "-\t\t\"Type mismatch: required \\'@NonNull Object\\' but the provided value is null\\n\" + ", "+\t\t\"Null type mismatch: required \\'@NonNull Object\\' but the provided value is null\\n\" + ", "-\t\t\"Type mismatch: required \\'@NonNull Object\\' but the provided value is null\\n\" + ", "+\t\t\"Null type mismatch: required \\'@NonNull Object\\' but the provided value is null\\n\" + ", "-\t\t\"Type mismatch: required \\'@NonNull Object\\' but the provided value is null\\n\" + ", "+\t\t\"Null type mismatch: required \\'@NonNull Object\\' but the provided value is null\\n\" + "]}], "num": 10828}