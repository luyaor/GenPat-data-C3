{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aec1fcb7a95dde635c83133a191662f4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69ff0138978c46602a7bc70b0eeb1f80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "ac2c3539b72e65a4a4e0b168769da151e63c5ff1", "commitAfterChange": "014710437062a15282800b8efb747a8973068ba8", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic CompilationUnitDeclaration resolve( \t\t\tCompilationUnitDeclaration unit,  \t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit,  \t\t\tboolean verifyMethods, \t\t\tboolean analyzeCode, \t\t\tboolean generateCode)", "signatureAfterChange": " \tpublic CompilationUnitDeclaration resolve( \t\t\tCompilationUnitDeclaration unit,  \t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit,  \t\t\tboolean verifyMethods, \t\t\tboolean analyzeCode, \t\t\tboolean generateCode)", "diff": ["-\t\t\t\tparseThreshold = 0; // will request a full parse", "+\t\t\t\tthis.parseThreshold = 0; // will request a full parse", "-\t\t\t\tunit = unitsToProcess[0];", "+\t\t\t\tunit = this.unitsToProcess[0];", "-\t\t\t\tlookupEnvironment.buildTypeBindings(unit);", "+\t\t\t\tthis.lookupEnvironment.buildTypeBindings(unit);", "-\t\t\t\tlookupEnvironment.completeTypeBindings();", "+\t\t\t\tthis.lookupEnvironment.completeTypeBindings();", "-\t\t\t\t\tunit.scope.verifyMethods(lookupEnvironment.methodVerifier());", "+\t\t\t\t\tunit.scope.verifyMethods(this.lookupEnvironment.methodVerifier());", "-\t\t\tif (unitsToProcess != null) unitsToProcess[0] = null; // release reference to processed unit declaration", "-\t\t\trequestor.acceptResult(unit.compilationResult.tagAsAccepted());", "+\t\t\tif (this.unitsToProcess != null) this.unitsToProcess[0] = null; // release reference to processed unit declaration", "+\t\t\tthis.requestor.acceptResult(unit.compilationResult.tagAsAccepted());", "-\t\t\treturn unit == null ? unitsToProcess[0] : unit;", "+\t\t\treturn unit == null ? this.unitsToProcess[0] : unit;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9154c6c1cbfd179261dca77afe5abb91", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "ac2c3539b72e65a4a4e0b168769da151e63c5ff1", "commitAfterChange": "014710437062a15282800b8efb747a8973068ba8", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic CompilationUnitDeclaration resolve( \t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit compilationUnit, \t\t\tNodeSearcher nodeSearcher, \t\t\tboolean verifyMethods, \t\t\tboolean analyzeCode, \t\t\tboolean generateCode)", "signatureAfterChange": " \tpublic CompilationUnitDeclaration resolve( \t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit compilationUnit, \t\t\tNodeSearcher nodeSearcher, \t\t\tboolean verifyMethods, \t\t\tboolean analyzeCode, \t\t\tboolean generateCode)", "diff": ["-\t\t\tparseThreshold = 0; // will request a diet parse", "+\t\t\tthis.parseThreshold = 0; // will request a diet parse", "-\t\t\tunit = unitsToProcess[0];", "+\t\t\tunit = this.unitsToProcess[0];", "-\t\t\t\t\t\t((AbstractMethodDeclaration)node).parseStatements(parser, unit);", "+\t\t\t\t\t\t((AbstractMethodDeclaration)node).parseStatements(this.parser, unit);", "-\t\t \t\t\t\t\t((org.eclipse.jdt.internal.compiler.ast.Initializer) node).parseStatements(parser, enclosingTypeDeclaration, unit);", "+\t\t \t\t\t\t\t((org.eclipse.jdt.internal.compiler.ast.Initializer) node).parseStatements(this.parser, enclosingTypeDeclaration, unit);", "-\t\t\t\t\t\t\t((org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)node).parseMethod(parser, unit);", "+\t\t\t\t\t\t\t((org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)node).parseMethod(this.parser, unit);", "-\t\t\t\t\tunit.scope.verifyMethods(lookupEnvironment.methodVerifier());", "+\t\t\t\t\tunit.scope.verifyMethods(this.lookupEnvironment.methodVerifier());", "-\t\t\tif (unitsToProcess != null) unitsToProcess[0] = null; // release reference to processed unit declaration", "-\t\t\trequestor.acceptResult(unit.compilationResult.tagAsAccepted());", "+\t\t\tif (this.unitsToProcess != null) this.unitsToProcess[0] = null; // release reference to processed unit declaration", "+\t\t\tthis.requestor.acceptResult(unit.compilationResult.tagAsAccepted());"]}], "num": 51505}