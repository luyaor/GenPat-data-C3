{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5ba165f3057c3c6d7062e726e004d390", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "874abd032f04fc2f72b0ade9736de1bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelCache.java", "commitBeforeChange": "09473c6b83f94b4ab60d09394d8636c0ec234aff", "commitAfterChange": "af33da7216734bcb2ae0e5dbadaa836c42812db8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public JavaModelCache()", "signatureAfterChange": " \t public JavaModelCache()", "diff": ["-\tthis.rootCache = new ElementCache((int) (DEFAULT_ROOT_SIZE * ratio));", "-\tthis.pkgCache = new ElementCache((int) (DEFAULT_PKG_SIZE * ratio));", "-\tthis.openableCache = new ElementCache((int) (DEFAULT_OPENABLE_SIZE * ratio));", "+\tif (VERBOSE) {", "+\t\tthis.rootCache = new VerboseElementCache((int) (DEFAULT_ROOT_SIZE * ratio), \"Root cache\"); //$NON-NLS-1$", "+\t\tthis.pkgCache = new VerboseElementCache((int) (DEFAULT_PKG_SIZE * ratio), \"Package cache\"); //$NON-NLS-1$", "+\t\tthis.openableCache = new VerboseElementCache((int) (DEFAULT_OPENABLE_SIZE * ratio), \"Openable cache\"); //$NON-NLS-1$", "+\t} else {", "+\t\tthis.rootCache = new ElementCache((int) (DEFAULT_ROOT_SIZE * ratio));", "+\t\tthis.pkgCache = new ElementCache((int) (DEFAULT_PKG_SIZE * ratio));", "+\t\tthis.openableCache = new ElementCache((int) (DEFAULT_OPENABLE_SIZE * ratio));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa35043786db590b4ab93728ba91d10d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MemberValuePair.java", "commitBeforeChange": "5166ddb130bcb062c1e82da491c829c5d95a6211", "commitAfterChange": "2894ba75386697d7bf484434d073fb6ffaf6cec9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic void resolveTypeExpecting(BlockScope scope, TypeBinding requiredType)", "signatureAfterChange": " \t \tpublic void resolveTypeExpecting(BlockScope scope, TypeBinding requiredType)", "diff": ["-\t\tif (this.value == null) ", "+\t\tif (this.value == null) {", "+\t\t\tthis.compilerElementPair = new ElementValuePair(this.name, this.value, this.binding);", "+\t\t}", "+\t\t\tthis.compilerElementPair = new ElementValuePair(this.name, this.value, this.binding);", "+\t\tthis.compilerElementPair = new ElementValuePair(this.name, this.value, this.binding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f326febd3410e587a8488d4fa25da56b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AnnotationParser.java", "commitBeforeChange": "6a44e0777af1a4632e0d20c0e9b92d35d2ad59f3", "commitAfterChange": "2ca339c139c0fe73a5bd2705f66592731098d347", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tAnnotationParser(Parser sourceParser)", "signatureAfterChange": " \t \tAnnotationParser(Parser sourceParser)", "diff": ["-\t\tthis.scanner = sourceParser.scanner;", "+\t\tif (this.sourceParser.options.checkAnnotation) {", "+\t\t\tthis.scanner = new Scanner(false, false, false, ClassFileConstants.JDK1_3, null, null);", "+\t\t}", "+\t\tthis.identifierStack = new char[30][];", "+\t\tthis.identifierLengthStack = new int[30];", "+\t\tthis.identifierPositionStack = new long[30];"]}], "num": 53182}