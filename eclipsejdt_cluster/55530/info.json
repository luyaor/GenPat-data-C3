{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6024bb1ce57fb1822cd862cbade71ff7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "880d8eac35b899d26311ccd61354d2ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "98d98039d31a5dcc8a3b24b4a05191f05e175f2b", "commitAfterChange": "f91fa46e8d1bc79474704dc3367b9b7e910d1272", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": " \t \tprivate void propagateErrors(CompilationUnit unit, IProblem[] problems, int problemLength)", "signatureAfterChange": " \t \tprivate void propagateErrors(CompilationUnit unit, IProblem[] problems, int problemLength)", "diff": ["-\t\tMessage[] messages = new Message[problemLength];", "-\t\tfor (int i = 0; i < problemLength; i++) {", "-\t\t\tIProblem problem = problems[i];", "-\t\t\tint start = problem.getSourceStart();", "-\t\t\tint end = problem.getSourceEnd();", "-\t\t\tmessages[i] = new Message(problem.getMessage(), start, end - start + 1);", "-\t\t}", "-\t\tunit.setMessages(messages);", "+\t\tunit.setProblems(resizeProblems);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9788892f8416464a15b2b01b7c26f927", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "ab9a706cb19f2f2eac77ce9aa86b568f8fa1be99", "commitAfterChange": "cfdd662bec42f5d5e062111a13d87bd30fa87cbf", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean referredByContainer)", "signatureAfterChange": " \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean referredByContainer)", "diff": ["-\t\t\t\t// resolve Class-Path: in manifest", "-\t\t\t\tIPath[] chainedJars = ClasspathEntry.resolvedChainedLibraries(path);", "-\t\t\t\tfor (int i = 0, length = chainedJars.length; i < length; i++) {", "-\t\t\t\t\tIPath chainedJar = chainedJars[i];", "-\t\t\t\t\tIJavaModelStatus status = validateLibraryEntry(chainedJar, project, null/*don't check source attachment*/, null/*force computing of entryPathMsg*/);", "-\t\t\t\t\tif (!status.isOK()) {", "-\t\t\t\t\t\tif (referredByContainer && status.getCode() == IJavaModelStatusConstants.INVALID_CLASSPATH)", "-\t\t\t\t\t\t\tcontinue; // ignore this entry (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=250946 )", "-\t\t\t\t\t\treturn status;", "-\t\t\t\t\t}", "-\t\t\t\t}", "+\t\t\t\t// do not validate entries from Class-Path: in manifest", "+\t\t\t\t// (these entries are considered optional since the user cannot act on them)", "+\t\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=252392"]}], "num": 55530}