{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b55db4bef1634eee36d21b2ed05f5a7f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bb6ab2498db9fe1b272b34a15a4a014", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "d6dc74869d8c303dbb7a6d8b327d8b104cd5865b", "commitAfterChange": "76a8025d64f3e2797e6f2fc43657ddca227a53e7", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "  \tprivate LambdaExpression cachedResolvedCopy(TypeBinding targetType)", "signatureAfterChange": "  \tprivate LambdaExpression cachedResolvedCopy(TypeBinding targetType, boolean anyTargetOk)", "diff": ["-\tprivate LambdaExpression cachedResolvedCopy(TypeBinding targetType) {", "-\t\tLambdaExpression copy = this.copiesPerTargetType != null ? this.copiesPerTargetType.get(targetType) : null;", "-\t\tif (copy != null)", "-\t\t\treturn copy;", "+\tprivate LambdaExpression cachedResolvedCopy(TypeBinding targetType, boolean anyTargetOk) {", "+\t\tLambdaExpression copy = null;", "+\t\tif (this.copiesPerTargetType != null) {", "+\t\t\tcopy = this.copiesPerTargetType.get(targetType);", "+\t\t\tif (copy != null)", "+\t\t\t\treturn copy;", "+\t\t\tif (anyTargetOk && this.copiesPerTargetType.values().size() > 0)", "+\t\t\t\treturn this.copiesPerTargetType.values().iterator().next();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8f38301cb271029721ae019a785b89e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "43c55ec0fd64bd306ef21c4d7e4780f0acc5640d", "commitAfterChange": "4ce45fe71444f9feef181a590f2dd1b839b0e917", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " public void cannotReadSource(CompilationUnitDeclaration unit, AbortCompilationUnit abortException)", "signatureAfterChange": " public void cannotReadSource(CompilationUnitDeclaration unit, AbortCompilationUnit abortException, boolean verbose)", "diff": ["-public void cannotReadSource(CompilationUnitDeclaration unit, AbortCompilationUnit abortException) {", "+public void cannotReadSource(CompilationUnitDeclaration unit, AbortCompilationUnit abortException, boolean verbose) {", "-\tabortException.exception.printStackTrace(writer);", "+\tif (verbose) {", "+\t\tabortException.exception.printStackTrace(writer);", "+\t} else {", "+\t\twriter.print(abortException.exception.getClass().getName());", "+\t\twriter.print(':');", "+\t\twriter.print(abortException.exception.getMessage());", "+\t}"]}], "num": 11763}