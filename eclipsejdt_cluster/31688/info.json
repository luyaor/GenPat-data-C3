{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "182484af7197ca9dcb295b4f794b9c50", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41e7d05a6f3d1dbe3ed6a557d602d8cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "a9c68df97efd734f3ed326f5e99e4d21e6054bec", "commitAfterChange": "af2f21c145913c8a7ccf22989ee905c5f5c7dd0d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public static void searchAllPossibleSubTypes( \tIType type, \tIJavaSearchScope scope, \tfinal Map binariesFromIndexMatches, \tfinal IPathRequestor pathRequestor, \tint waitingPolicy, \tIProgressMonitor progressMonitor)", "signatureAfterChange": " public static void searchAllPossibleSubTypes( \tIType type, \tIJavaSearchScope scope, \tfinal Map binariesFromIndexMatches, \tfinal IPathRequestor pathRequestor, \tint waitingPolicy, \tIProgressMonitor progressMonitor)", "diff": ["-\t\tnew JavaSearchParticipant(null), // java search only", "+\t\tnew JavaSearchParticipant(), // java search only"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b238101723dd1041772fb75387d27a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "a9c68df97efd734f3ed326f5e99e4d21e6054bec", "commitAfterChange": "af2f21c145913c8a7ccf22989ee905c5f5c7dd0d", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic void searchAllTypeNames( \t\tIWorkspace workspace, \t\tfinal char[] packageName,  \t\tfinal char[] typeName, \t\tfinal int matchMode,  \t\tfinal boolean isCaseSensitive, \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal ITypeNameRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": " \tpublic void searchAllTypeNames( \t\tIWorkspace workspace, \t\tfinal char[] packageName,  \t\tfinal char[] typeName, \t\tfinal int matchMode,  \t\tfinal boolean isCaseSensitive, \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal ITypeNameRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\t\t\t\t\tnew JavaSearchParticipant(getWorkingCopies()), // Java search only", "+\t\t\t\t\tgetDefaultSearchParticipant(), // Java search only"]}], "num": 31688}