{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2718f4ef7d3002b059b6681001e68cb1", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f9f90e70c99ef461fc265fa3aeaf06f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/env/AccessRuleSet.java", "commitBeforeChange": "58aaea35ae4c64a4ecebe06d6b1ab1679e04698a", "commitAfterChange": "d5df66f62f879926d0ab37840f8644f7133a2a54", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic String toString(boolean wrap)", "signatureAfterChange": " \t \tpublic String toString(boolean wrap)", "diff": ["-\t\tbuffer", "-\t\t\t.append(\"} [template:\\\"\") //$NON-NLS-1$", "-\t\t\t.append(this.messageTemplate)", "-\t\t\t.append(\"\\\"]\"); //$NON-NLS-1$", "+\t\tbuffer.append(\"} [templates:\\\"\"); //$NON-NLS-1$", "+\t\tfor (int i = 0; i < messageTemplates.length; i++)", "+\t\t\tbuffer.append(this.messageTemplates[i]);", "+\t\tbuffer.append(\"\\\"]\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb20a7edffd89c61103de044dca133cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "e4335f612db86aa6e739c4af37c0425a42aadb90", "commitAfterChange": "39f1f31087ae36f09c69d342ba90d4c2023a9fbb", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " \tprotected void checkCompilerLog(String[] testFiles, Requestor requestor, \t\t\tString platformIndependantExpectedLog, Throwable exception)", "signatureAfterChange": " \tprotected void checkCompilerLog(String[] testFiles, Requestor requestor, \t\t\tString[] alternatePlatformIndependantExpectedLogs, Throwable exception)", "diff": ["-\t\t\tString platformIndependantExpectedLog, Throwable exception) {", "+\t\t\tString[] alternatePlatformIndependantExpectedLogs, Throwable exception) {", "-\t\tif (!platformIndependantExpectedLog.equals(computedProblemLog)) {", "-\t\t\tlogTestTitle();", "-\t\t\tSystem.out.println(Util.displayString(computedProblemLog, INDENT, SHIFT));", "-\t\t\tlogTestFiles(false, testFiles);", "+\t\tint i;", "+\t\tfor (i = 0; i < alternatePlatformIndependantExpectedLogs.length; i++) {", "+\t\t\tif (alternatePlatformIndependantExpectedLogs[i].equals(computedProblemLog))", "+\t\t\t\treturn; // OK", "+\t\tlogTestTitle();", "+\t\tSystem.out.println(Util.displayString(computedProblemLog, INDENT, SHIFT));", "+\t\tlogTestFiles(false, testFiles);", "-\t\t\tassertEquals(\"Invalid problem log \", platformIndependantExpectedLog, computedProblemLog);", "+\t\t\tassertEquals(\"Invalid problem log \", alternatePlatformIndependantExpectedLogs[i-1], computedProblemLog);"]}], "num": 40182}