{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "93fd89d34ef983d68f556fa74bb449c1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39ab0619755ec6b385fe33b26e77aac7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "65014b9edcd64bc51154fcb1b47074eec77a5977", "commitAfterChange": "7109b1b8695adc90efc89b381fbef11f66adc5d7", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 118, "signatureBeforeChange": "\t\t \t \tpublic void testCharacterLiteral()", "signatureAfterChange": "\t\t \t \tpublic void testCharacterLiteral()", "diff": ["+\t\ttry {", "+\t\t\tx.setEscapedValue(\"\\\"z\\\"\"); //$NON-NLS-1$", "+\t\t\tassertTrue(false);", "+\t\t} catch(IllegalArgumentException e) {", "+\t\t\t// pass", "+\t\t}", "+", "-\t\tassertTrue(x.charValue() == '\\'');\t\t", "+\t\tassertTrue(x.charValue() == '\\'');", "-\t\tassertTrue(x.charValue() == '\\'');\t\t", "+\t\tassertTrue(x.charValue() == '\\'');", "-\t\tassertTrue(x.charValue() == '\\\\');\t\t", "-\t}\t\t", "+\t\tassertTrue(x.charValue() == '\\\\');", "+\t\tx.setCharValue('\\b');", "+\t\tassertTrue(x.getEscapedValue().equals(\"\\'\\\\b\\'\")); //$NON-NLS-1$", "+\t\tx.setCharValue('\\n');", "+\t\tassertTrue(x.getEscapedValue().equals(\"\\'\\\\n\\'\")); //$NON-NLS-1$", "+\t\tx.setCharValue('\\f');", "+\t\tassertTrue(x.getEscapedValue().equals(\"\\'\\\\f\\'\")); //$NON-NLS-1$", "+\t\tx.setCharValue('\\r');", "+\t\tassertTrue(x.getEscapedValue().equals(\"\\'\\\\r\\'\")); //$NON-NLS-1$", "+\t\tx.setCharValue('\\\"');", "+\t\tassertTrue(x.getEscapedValue().equals(\"\\'\\\\\\\"\\'\")); //$NON-NLS-1$", "+\t\tx.setCharValue('\\0');", "+\t\tassertTrue(x.getEscapedValue().equals(\"\\'\\\\0\\'\")); //$NON-NLS-1$", "+\t\tx.setCharValue('\\1');", "+\t\tassertTrue(x.getEscapedValue().equals(\"\\'\\\\1\\'\")); //$NON-NLS-1$", "+\t\tx.setCharValue('\\2');", "+\t\tassertTrue(x.getEscapedValue().equals(\"\\'\\\\2\\'\")); //$NON-NLS-1$", "+\t\tx.setCharValue('\\3');", "+\t\tassertTrue(x.getEscapedValue().equals(\"\\'\\\\3\\'\")); //$NON-NLS-1$", "+\t\tx.setCharValue('\\4');", "+\t\tassertTrue(x.getEscapedValue().equals(\"\\'\\\\4\\'\")); //$NON-NLS-1$", "+\t\tx.setCharValue('\\5');", "+\t\tassertTrue(x.getEscapedValue().equals(\"\\'\\\\5\\'\")); //$NON-NLS-1$", "+\t\tx.setCharValue('\\6');", "+\t\tassertTrue(x.getEscapedValue().equals(\"\\'\\\\6\\'\")); //$NON-NLS-1$", "+\t\tx.setCharValue('\\7');", "+\t\tassertTrue(x.getEscapedValue().equals(\"\\'\\\\7\\'\")); //$NON-NLS-1$", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f71683405145b6f0d1d140641d1cb5ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "cfb9e308b9934bc0d4a17e2d4604db46f20af164", "commitAfterChange": "592b135627e5a06d1b39aee23540f897beee493f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprivate boolean checkSelection( \t\t\tchar[] source, \t\t\tint selectionStart, \t\t\tint selectionEnd)", "signatureAfterChange": " \tprivate boolean checkSelection( \t\t\tchar[] source, \t\t\tint selectionStart, \t\t\tint selectionEnd)", "diff": ["-", "+\t\t", "+\t\t\tif (selectionStart == selectionEnd) { // Widen the selection to scan -> || :: if needed. No unicode handling for now.", "+\t\t\t\tif (selectionStart > 0 && selectionEnd < source.length - 1) {", "+\t\t\t\t\tif ((source[selectionStart] == '>' && source[selectionStart - 1] == '-') ||", "+\t\t\t\t\t\t\tsource[selectionStart] == ':' && source[selectionStart - 1] == ':') { ", "+\t\t\t\t\t\tselectionStart--;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tif ((source[selectionStart] == '-' && source[selectionEnd + 1] == '>') ||", "+\t\t\t\t\t\t\t\tsource[selectionStart] == ':' && source[selectionEnd + 1] == ':') {", "+\t\t\t\t\t\t\tselectionEnd++;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}  ", "+\t\t\t} // there could be some innocuous widening, shouldn't matter.", "+\t\t\t\t\t\tif (selectionStart >= scanner.startPosition && selectionEnd < scanner.currentPosition) {", "+\t\t\t\t\t\t\tthis.actualSelectionStart = selectionStart;", "+\t\t\t\t\t\t\tthis.actualSelectionEnd = selectionEnd;", "+\t\t\t\t\t\t\tthis.selectedIdentifier = CharOperation.NO_CHAR;", "+\t\t\t\t\t\t\treturn true;\t\t", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\t//$FALL-THROUGH$", "+\t\t\t\t\tcase TerminalTokens.TokenNameARROW:", "+\t\t\t\t\t\tif (selectionStart >= scanner.startPosition && selectionEnd < scanner.currentPosition) {", "+\t\t\t\t\t\t\tthis.actualSelectionStart = selectionStart;", "+\t\t\t\t\t\t\tthis.actualSelectionEnd = selectionEnd;", "+\t\t\t\t\t\t\tthis.selectedIdentifier = CharOperation.NO_CHAR;", "+\t\t\t\t\t\t\treturn true;\t\t", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\treturn false;"]}], "num": 33090}