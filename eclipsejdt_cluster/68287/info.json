{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f96f1fd8703c10004725105f56b0ca8", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "080483e1c9c7f694f2cb17c7d9790d33", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "00b719c0d7c4b5271c818d210d84b349bc0324e3", "commitAfterChange": "f90ca993824b1d0e38aec24edba147ca4e8ec0d1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t\t\t\t} else if (token.equals(\"predicateThrow\")) {//$NON-NLS-1$ ", "+\t\t\t\t\t} else if (token.equals(\"booleanThrow\")) {//$NON-NLS-1$ ", "+\t\t\t\t\t\t\tCompilerOptions.WARNING);", "+\t\t\t\t\t} else if (token.equals(\"uselessTypeCheck\")) {//$NON-NLS-1$ ", "+\t\t\t\t\t\toptions.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnnecessaryTypeCheck,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45ee960238ef4237d9c64213af87c2e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "34b4972480c62fc99b17d4728db2648e98460b52", "commitAfterChange": "a234173ab4d645c8990c97cafa00ec82ce0a909f", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " public void configure(String[] argv)", "signatureAfterChange": " public void configure(String[] argv)", "diff": ["-\t\t\t\tif (currentArg.equals(\"-nonNullByDefault\")) { //$NON-NLS-1$", "-\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_NonNullIsDefault, CompilerOptions.ENABLED);", "+\t\t\t\tif (currentArg.equals(\"-missingNullDefault\")) { //$NON-NLS-1$", "+\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_ReportMissingNonNullByDefaultAnnotation, CompilerOptions.WARNING);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "517cb54e2b8f3237c2d4111586a7551e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "5dcefdb7b6dc4ca118d352248744f6f6f0cfd53e", "commitAfterChange": "6568a2476b22c2b9915b48b3eb9ea4ea62f741d4", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t\t\t\t} else if (token.equals(\"override\")) { //$NON-NLS-1$", "+\t\t\t\t\t} else if (token.equals(\"Override\")) { //$NON-NLS-1$", "+\t\t\t\t\t} else if (token.equals(\"Deprecated\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportMissingDeprecatedAnnotation,", "+\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);\t\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5694860ffa449b87f083491a6423c058", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "bed3ca2531a0bd15601237e5d1a0c8400e43f29e", "commitAfterChange": "cf4403abeadc8dee9dfef541af716a8f200a1ee1", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": " public void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " public void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t\t\t    continue;", "+\t\t\t\t\tcontinue;", "-\t\t\t\t} else {", "+\t\t\t\t} else if (currentArg.equals(\"cldc1.1\")) { //$NON-NLS-1$", "+\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_CLDC1_1);", "+\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_InlineJsr, CompilerOptions.ENABLED);", "+\t\t\t\t}else {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "937ac8ea404463aec2d83bee4256fce5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "34b4972480c62fc99b17d4728db2648e98460b52", "commitAfterChange": "a234173ab4d645c8990c97cafa00ec82ce0a909f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \t \tpublic Map getMap()", "signatureAfterChange": "  \t \tpublic Map getMap()", "diff": ["-\t\tif (this.intendedDefaultNonNullness == TagBits.AnnotationNonNull)", "-\t\t\toptionsMap.put(OPTION_NonNullIsDefault, CompilerOptions.ENABLED);", "-\t\telse", "-\t\t\toptionsMap.put(OPTION_NonNullIsDefault, CompilerOptions.DISABLED);", "+\t\toptionsMap.put(OPTION_ReportMissingNonNullByDefaultAnnotation, getSeverityString(MissingNonNullByDefaultAnnotation));"]}], "num": 68287}