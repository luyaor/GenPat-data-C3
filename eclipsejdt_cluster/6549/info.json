{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "20910080f42a2dff40e2ee3dc5fe33ae", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e3b6c751e62ef958d7d7c34e4c6c6d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "aa1c17694b27b504666c5ba8972f5deebf077d85", "commitAfterChange": "26ddee9495db90c29b250e3eed03a94e2269259d", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " \tpublic static IClasspathEntry newVariableEntry( \t\t\tIPath variablePath, \t\t\tIPath variableSourceAttachmentPath, \t\t\tIPath variableSourceAttachmentRootPath, \t\t\tIAccessRule[] accessRules, \t\t\tIClasspathAttribute[] extraAttributes, \t\t\tboolean isExported)", "signatureAfterChange": " \tpublic static IClasspathEntry newVariableEntry( \t\t\tIPath variablePath, \t\t\tIPath variableSourceAttachmentPath, \t\t\tIPath variableSourceAttachmentRootPath, \t\t\tIAccessRule[] accessRules, \t\t\tIClasspathAttribute[] extraAttributes, \t\t\tboolean isExported)", "diff": ["-\t\tif (variablePath == null) Assert.isTrue(false, \"Variable path cannot be null\"); //$NON-NLS-1$", "+\t\tif (variablePath == null) throw new ClasspathEntry.AssertionFailedException(\"Variable path cannot be null\"); //$NON-NLS-1$", "-\t\t\tAssert.isTrue(", "-\t\t\t\tfalse,", "-\t\t\t\t\"Illegal classpath variable path: \\'\" + variablePath.makeRelative().toString() + \"\\', must have at least one segment\"); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\tthrow new ClasspathEntry.AssertionFailedException(\"Illegal classpath variable path: \\'\" + variablePath.makeRelative().toString() + \"\\', must have at least one segment\"); //$NON-NLS-1$//$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9abb8928e07abf861a5db32afc7467ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "aa1c17694b27b504666c5ba8972f5deebf077d85", "commitAfterChange": "26ddee9495db90c29b250e3eed03a94e2269259d", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tpublic static IClasspathEntry newContainerEntry( \t\t\tIPath containerPath, \t\t\tIAccessRule[] accessRules, \t\t\tIClasspathAttribute[] extraAttributes, \t\t\tboolean isExported)", "signatureAfterChange": " \tpublic static IClasspathEntry newContainerEntry( \t\t\tIPath containerPath, \t\t\tIAccessRule[] accessRules, \t\t\tIClasspathAttribute[] extraAttributes, \t\t\tboolean isExported)", "diff": ["-\t\t\tAssert.isTrue(false, \"Container path cannot be null\"); //$NON-NLS-1$", "+\t\t\tthrow new ClasspathEntry.AssertionFailedException(\"Container path cannot be null\"); //$NON-NLS-1$", "-\t\t\tAssert.isTrue(", "-\t\t\t\tfalse,", "-\t\t\t\t\"Illegal classpath container path: \\'\" + containerPath.makeRelative().toString() + \"\\', must have at least one segment (containerID+hints)\"); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\tthrow new ClasspathEntry.AssertionFailedException(\"Illegal classpath container path: \\'\" + containerPath.makeRelative().toString() + \"\\', must have at least one segment (containerID+hints)\"); //$NON-NLS-1$//$NON-NLS-2$"]}], "num": 6549}