{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5676f34c92618296d89f780cf30d5a95", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce0bbde6f6e19c63bc667df9c826b89d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "2b2b7318d43bbf7988138cdc5eb74c55ddf21827", "commitAfterChange": "6478e2ede221e392aeae64992fd8ab69061b142a", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tpublic MethodBinding findExactMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding findExactMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t\t\t\tfor (int i = argumentTypes.length; --i >= 0;)", "-\t\t\t\t\tif (isSubtypeOfRawType(argumentTypes[i]))", "+\t\t\t\tfor (int i = argumentTypes.length; --i >= 0;) {", "+\t\t\t\t\t// workaround for bug 464229: The type * cannot be resolved. It is indirectly referenced from required .class files", "+\t\t\t\t\tTypeBinding t = argumentTypes[i].leafComponentType();", "+\t\t\t\t\tif (! (t instanceof ReferenceBinding))", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\tReferenceBinding r = (ReferenceBinding)t;", "+\t\t\t\t\tif (r.isHierarchyConnected()) {", "+\t\t\t\t\t\tif (isSubtypeOfRawType(r))", "+\t\t\t\t\t\t\treturn null;", "+\t\t\t\t\t} else if (r.isRawType()) {", "+\t\t\t\t\t}", "+\t\t\t\t\t//TODO: should also check if any supertype of r is raw, but can't do this without resolving the whole hierarchy", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf91c4ed37a1f1289b10be4058d0cfa4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBinding.java", "commitBeforeChange": "b75c4b6d1f5233838746ca348c927bfe9d79a31e", "commitAfterChange": "5ffa6d87d82bcd877c2c1c819145a0122be38cd2", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public boolean isReifiable()", "signatureAfterChange": " public boolean isReifiable()", "diff": ["-\tswitch(leafType.bindingType()) {", "-\t\t", "-\t\tcase Binding.TYPE_PARAMETER :", "-\t\tcase Binding.WILDCARD_TYPE :", "-\t\tcase Binding.GENERIC_TYPE :", "-\t\t\treturn false;", "+\tif (!(leafType instanceof ReferenceBinding)) ", "+\t\treturn true;", "+\tReferenceBinding current = (ReferenceBinding) leafType;", "+\tdo {", "+\t\tswitch(current.bindingType()) {", "-\t\tcase Binding.PARAMETERIZED_TYPE :", "-\t\t\treturn !isBoundParameterizedType();", "-\t\t\t", "-\t\tcase Binding.RAW_TYPE :", "-\t\tdefault :", "+\t\t\tcase Binding.TYPE_PARAMETER :", "+\t\t\tcase Binding.WILDCARD_TYPE :", "+\t\t\tcase Binding.GENERIC_TYPE :", "+\t\t\t\treturn false;", "+\t\t\t\t", "+\t\t\tcase Binding.PARAMETERIZED_TYPE :", "+\t\t\t\tif (isBoundParameterizedType()) ", "+\t\t\t\t\treturn false;", "+\t\t\t\tbreak;", "+\t\t\t\t", "+\t\t\tcase Binding.RAW_TYPE :", "+\t\t\t\treturn true;", "+\t\t}", "+\t\tif (current.isStatic()) ", "-\t}", "+\t} while ((current = current.enclosingType()) != null);", "+\treturn true;"]}], "num": 36091}