{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4486247ebc7591fd030facabe2457557", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33358325a9f4de28407e81da6436017e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CommitWorkingCopyOperation.java", "commitBeforeChange": "844b891620178c0b92403d6108fad8dcdac272df", "commitAfterChange": "f4f81968c0fa49af0ebd2fc1f35fb9113776c823", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["+\t\t\t", "+\t\t\tif (resource == null) {", "+\t\t\t\t// case of a working copy without a resource", "+\t\t\t\tworkingCopy.getBuffer().save(this.progressMonitor, this.force);", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dc357bd6b604c64b1b27876c268c61e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "d308896dfb7ecfb50eaeedc5d022fe517c06c151", "commitAfterChange": "9af5f94a7f34f8aa21c824cf527428efe92e4a78", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "  \tpublic static void setSourceAttachmentProperty(IPath path, String property)", "signatureAfterChange": "  \tpublic static void setSourceAttachmentProperty(IPath path, String property)", "diff": ["-\t\tJavaModelManager.getJavaModelManager().rootPathToAttachments.put(path, property);", "+\t\tif (property == null) {", "+\t\t\tJavaModelManager.getJavaModelManager().rootPathToAttachments.put(path, PackageFragmentRoot.NO_SOURCE_ATTACHMENT);", "+\t\t} else {", "+\t\t\tJavaModelManager.getJavaModelManager().rootPathToAttachments.put(path, property);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "958a6511d636ae6191cbc7d966421e8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EmptyStatement.java", "commitBeforeChange": "3c24f3c5868942545b866a06aea7ff0e6d501ace", "commitAfterChange": "c52bf9c9641831c37e7ba4fe251dcc6debca74a5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic void resolve(BlockScope scope)", "signatureAfterChange": " \t \tpublic void resolve(BlockScope scope)", "diff": ["+\t\tif ((bits & IsUsefulEmptyStatementMASK) == 0) {", "+\t\t\tscope.problemReporter().superfluousSemicolon(this.sourceStart, this.sourceEnd);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbe98a03266f98f6c12de6d7c26617c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocReturnStatement.java", "commitBeforeChange": "0fcefa7fbabab6abdc9873690eec58ebe54b0ec5", "commitAfterChange": "98fac88fd0da38b66efb43921b50db56cf129025", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void resolve(BlockScope scope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope scope)", "diff": ["-\t\tMethodBinding methodBinding;", "+\t\tMethodBinding methodBinding = null;", "+\t\t} else if (this.empty) {", "+\t\t\tscope.problemReporter().javadocEmptyReturnTag(this.sourceStart, this.sourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc4b3f287115c2c99b1f259ce9831524", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EmptyStatement.java", "commitBeforeChange": "dfed7f1b9ca73af170ad52dc060f4fca93f91582", "commitAfterChange": "24d2b526806e9f4be8e8354c9cfa88d403c9a6eb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t\t \tpublic void resolve(BlockScope scope)", "signatureAfterChange": " \t\t \tpublic void resolve(BlockScope scope)", "diff": ["+\t\t} else {", "+\t\t\tscope.problemReporter().emptyControlFlowStatement(this.sourceStart, this.sourceEnd);"]}], "num": 13714}