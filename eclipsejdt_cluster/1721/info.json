{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b74d90a4d3e5e0652eded92e2e77070", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03d5a839e59121c1bf885e321c58734c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/InnerEmulationTest.java", "commitBeforeChange": "baba91778491837a84be9560b81c83086d98c36e", "commitAfterChange": "57b083b793c3b8c2d5620895f00ff1c58e226e44", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 106, "signatureBeforeChange": " public void test109()", "signatureAfterChange": " public void test109()", "diff": ["-\t\t\t\"1. WARNING in X.java (at line 4)\\n\" +", "-\t\t\t\"\tpublic void foo() {\\n\" +", "-\t\t\t\"\t            ^^^^^\\n\" +", "-\t\t\t\"The method foo() from the type C is never used locally\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"2. WARNING in X.java (at line 9)\\n\" +", "-\t\t\t\"\tpublic void foo() {\\n\" +", "-\t\t\t\"\t            ^^^^^\\n\" +", "-\t\t\t\"The method foo() from the type new X(){} is never used locally\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"3. WARNING in X.java (at line 13)\\n\" +", "-\t\t\t\"\tclass D extends C {\\n\" +", "-\t\t\t\"\t      ^\\n\" +", "-\t\t\t\"The type D is never used locally\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"4. ERROR in X.java (at line 13)\\n\" +", "+\t\t\t\"1. ERROR in X.java (at line 13)\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dffb89062476f4c540583a1b9cec1ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "baba91778491837a84be9560b81c83086d98c36e", "commitAfterChange": "57b083b793c3b8c2d5620895f00ff1c58e226e44", "methodNumberBeforeChange": 1117, "methodNumberAfterChange": 1117, "signatureBeforeChange": " public void test1088()", "signatureAfterChange": " public void test1088()", "diff": ["-\t\t\t\"4. WARNING in X.java (at line 11)\\n\" +", "-\t\t\t\"\tclass T {}; // hiding warning\\n\" +", "-\t\t\t\"\t      ^\\n\" +", "-\t\t\t\"The type T is never used locally\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"5. WARNING in X.java (at line 12)\\n\" +", "+\t\t\t\"4. WARNING in X.java (at line 12)\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"6. WARNING in X.java (at line 12)\\n\" +", "-\t\t\t\"\tclass Local {};\\n\" +", "-\t\t\t\"\t      ^^^^^\\n\" +", "-\t\t\t\"The type Local is never used locally\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"7. WARNING in X.java (at line 15)\\n\" +", "-\t\t\t\"\tclass T {}; // no hiding warning\\n\" +", "-\t\t\t\"\t      ^\\n\" +", "-\t\t\t\"The type T is never used locally\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"8. WARNING in X.java (at line 16)\\n\" +", "-\t\t\t\"\tclass Local {}; // no hiding warning\\n\" +", "-\t\t\t\"\t      ^^^^^\\n\" +", "-\t\t\t\"The type Local is never used locally\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a7086ba0127a51d6be5f658dab9ae7f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "b62a0575eabeb814900afcc3426a14b0da5fd6ad", "commitAfterChange": "fa4debd5be46821e4afe7fa2082f7a976e89007c", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": " \tpublic void testBug416176a()", "signatureAfterChange": " \tpublic void testBug416176a()", "diff": ["-\t\t\t\t\"\t@NonNull T bar2(@Nullable T t) { // argument: contradiction (1)\\n\" +", "-\t\t\t\t\"\t\treturn t;\\n\" +", "+\t\t\t\t\"\t@NonNull T bar2(@Nullable T t) { // argument: no contradiction (1)\\n\" +", "+\t\t\t\t\"\t\treturn t; // mismatch (1)\\n\" +", "-\t\t\t\t\"\t@Nullable T bar3(T t) { // return type: contradiction (2)\\n\" +", "-\t\t\t\t\"\t\t@Nullable T l = t; // local: contradiction (3)\\n\" +", "+\t\t\t\t\"\t@Nullable T bar3(T t) { // return type: no contradiction (2)\\n\" +", "+\t\t\t\t\"\t\t@Nullable T l = t; // local: no contradiction (3)\\n\" +", "-\t\t\t\t\"\t\t@Nullable T f; // field: contradiction (4)\\n\" +", "+\t\t\t\t\"\t\t@Nullable T f; // field: no contradiction (4)\\n\" +", "-\t\t\t\t\"\t\treturn null;\\n\" +", "+\t\t\t\t\"\t\treturn null; // mismatch (2)\\n\" +", "-\t\t\t\"1. ERROR in X.java (at line 11)\\n\" + ", "-\t\t\t\"\t@NonNull T bar2(@Nullable T t) { // argument: contradiction (1)\\n\" + ", "-\t\t\t\"\t                ^^^^^^^^^\\n\" + ", "-\t\t\t\"Contradictory null specification; only one of @NonNull and @Nullable can be specified at any location\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 12)\\n\" + ", "+\t\t\t\"\treturn t; // mismatch (1)\\n\" + ", "+\t\t\t\"\t       ^\\n\" + ", "+\t\t\t\"Null type mismatch (type annotations): required \\'@NonNull T\\' but this expression has type \\'@Nullable T\\'\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 14)\\n\" + ", "-\t\t\t\"\t@Nullable T bar3(T t) { // return type: contradiction (2)\\n\" + ", "-\t\t\t\"\t^^^^^^^^^\\n\" + ", "-\t\t\t\"Contradictory null specification; only one of @NonNull and @Nullable can be specified at any location\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 15)\\n\" + ", "-\t\t\t\"\t@Nullable T l = t; // local: contradiction (3)\\n\" + ", "-\t\t\t\"\t^^^^^^^^^\\n\" + ", "-\t\t\t\"Contradictory null specification; only one of @NonNull and @Nullable can be specified at any location\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. ERROR in X.java (at line 19)\\n\" + ", "-\t\t\t\"\t@Nullable T f; // field: contradiction (4)\\n\" + ", "-\t\t\t\"\t^^^^^^^^^\\n\" + ", "-\t\t\t\"Contradictory null specification; only one of @NonNull and @Nullable can be specified at any location\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"5. ERROR in X.java (at line 22)\\n\" + ", "-\t\t\t\"\treturn null;\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 22)\\n\" + ", "+\t\t\t\"\treturn null; // mismatch (2)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51d3ed7dfcdb079f7d5120fc91544e38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocBugsTest.java", "commitBeforeChange": "cac9429f9e1e6c3ad2af309bdebee3c3ed412664", "commitAfterChange": "00cd0ca8a53543548dcf06256caed9b4099fa9b2", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": " public void testBug65253()", "signatureAfterChange": " public void testBug65253()", "diff": ["-\t\t\"1. ERROR in Test.java (at line 3)\\n\" +", "-\t\t\"\t* @@@@see Unknown Should not complain on ref\\n\" +", "-\t\t\"\t   ^^^^^^\\n\" +", "-\t\t\"Javadoc: Invalid tag\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. ERROR in Test.java (at line 8)\\n\" +", "-\t\t\"\t* @@@param xxx Should not complain on param\\n\" +", "-\t\t\"\t   ^^^^^^^\\n\" +", "-\t\t\"Javadoc: Invalid tag\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"3. ERROR in Test.java (at line 9)\\n\" +", "-\t\t\"\t* @@return int\\n\" +", "-\t\t\"\t   ^^^^^^^\\n\" +", "-\t\t\"Javadoc: Invalid tag\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"4. ERROR in Test.java (at line 11)\\n\" +", "+\t\t\"1. ERROR in Test.java (at line 11)\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "562a75991a729b6aab6c6b3df7192680", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "af330be1052a8d3b1a31b10596d367fb42f89f79", "commitAfterChange": "b3a6b4ddf9d5bd5365b7e897739a001bb2ff860b", "methodNumberBeforeChange": 269, "methodNumberAfterChange": 269, "signatureBeforeChange": " public void test120()", "signatureAfterChange": " public void test120()", "diff": ["-\t\t\t\"\t\tabstract void a(T t);\\n\" + ", "-\t\t\t\"\t\tabstract void a(S s);\\n\" + ", "-\t\t\t\"\t\tvoid a(String s) {}\\n\" + ", "-\t\t\t\"\\n\" + ", "-\t\t\t\"\t\tabstract void b(T t);\\n\" + ", "-\t\t\t\"\t\tprotected void b(String s) {}\\n\" + ", "-\t\t\t\"\t\tprotected abstract void b(S s);\\n\" + ", "-\t\t\t\"\\n\" + ", "-\t\t\t\"\t\tpublic void c(String s) {}\\n\" + ", "-\t\t\t\"\t\tprotected abstract void c(T t);\\n\" + ", "-\t\t\t\"\t\tabstract void c(S s);\\n\" + ", "-\t\t\t\"\\n\" + ", "-\t\t\t\"\t\tprotected abstract void d(T t);\\n\" + ", "-\t\t\t\"\t\tpublic void d(S s) {}\\n\" + ", "-\t\t\t\"\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 21)\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 6)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d640204189fb4c5adaadd77e2cd7af83", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "baba91778491837a84be9560b81c83086d98c36e", "commitAfterChange": "57b083b793c3b8c2d5620895f00ff1c58e226e44", "methodNumberBeforeChange": 833, "methodNumberAfterChange": 833, "signatureBeforeChange": " public void test0812()", "signatureAfterChange": " public void test0812()", "diff": ["-\t\t\"1. WARNING in X.java (at line 2)\\n\" +", "-\t\t\"\tprivate T t;\\n\" +", "-\t\t\"\t          ^\\n\" +", "-\t\t\"The field X<T>.t is never read locally\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. WARNING in X.java (at line 3)\\n\" +", "-\t\t\"\tprivate X<?>.Inner inner;\\n\" +", "-\t\t\"\t                   ^^^^^\\n\" +", "-\t\t\"The field X<T>.inner is never read locally\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"3. WARNING in X.java (at line 4)\\n\" +", "-\t\t\"\tprivate X<?>.Inner[] inners;\\n\" +", "-\t\t\"\t                     ^^^^^^\\n\" +", "-\t\t\"The field X<T>.inners is never read locally\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"4. WARNING in X.java (at line 7)\\n\" +", "+\t\t\"1. WARNING in X.java (at line 7)\\n\" +", "-\t\t\"5. ERROR in X.java (at line 9)\\n\" +", "+\t\t\"2. ERROR in X.java (at line 9)\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebc11cf139f3dcf37259707bd98e0667", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeTypeAnnotationTest.java", "commitBeforeChange": "13badd688be686ebb5ba17a06b5117d9f7db22e6", "commitAfterChange": "678bd63c535ed58308236db21b34dad57015766d", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "\r \tpublic void test036() throws Exception", "signatureAfterChange": "\r \tpublic void test036() throws Exception", "diff": ["-\t\t\"1. ERROR in X.java (at line 3)\\n\" + \r", "-\t\t\"\tSystem.out.println(int @NonEmpty [] [] @NonEmpty @Empty [] [] @NonEmpty[].class); // illegal!\\n\" + \r", "-\t\t\"\t                       ^^^^^^^^^\\n\" + \r", "-\t\t\"Syntax error, type annotations are illegal here\\n\" + \r", "-\t\t\"----------\\n\" + \r", "-\t\t\"2. ERROR in X.java (at line 3)\\n\" + \r", "-\t\t\"\tSystem.out.println(int @NonEmpty [] [] @NonEmpty @Empty [] [] @NonEmpty[].class); // illegal!\\n\" + \r", "-\t\t\"\t                                       ^^^^^^^^^^^^^^^^\\n\" + \r", "-\t\t\"Syntax error, type annotations are illegal here\\n\" + \r", "-\t\t\"----------\\n\" + \r", "-\t\t\"3. ERROR in X.java (at line 3)\\n\" + \r", "-\t\t\"\tSystem.out.println(int @NonEmpty [] [] @NonEmpty @Empty [] [] @NonEmpty[].class); // illegal!\\n\" + \r", "-\t\t\"\t                                                              ^^^^^^^^^\\n\" + \r", "-\t\t\"Syntax error, type annotations are illegal here\\n\" + \r", "-\t\t\"----------\\n\" + \r", "-\t\t\"4. ERROR in X.java (at line 4)\\n\" + \r", "+\t\t\"1. ERROR in X.java (at line 4)\\n\" + \r", "-\t\t\"5. ERROR in X.java (at line 4)\\n\" + \r", "+\t\t\"2. ERROR in X.java (at line 4)\\n\" + \r", "-\t\t\"6. ERROR in X.java (at line 4)\\n\" + \r", "+\t\t\"3. ERROR in X.java (at line 4)\\n\" + \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecc19c0aba3a0e7a08185f0a27659c5b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_5.java", "commitBeforeChange": "baba91778491837a84be9560b81c83086d98c36e", "commitAfterChange": "57b083b793c3b8c2d5620895f00ff1c58e226e44", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "  public void test059()", "signatureAfterChange": "  public void test059()", "diff": ["-\t\t\"----------\\n\" +  /* expected compiler log */", "-\t\t\"1. WARNING in p\\\\FieldQualification.java (at line 5)\\n\" +", "-\t\t\"\tclass Local {\\n\" +", "-\t\t\"\t      ^^^^^\\n\" +", "-\t\t\"The type Local is never used locally\\n\" +", "-\t\t\"2. WARNING in p\\\\FieldQualification.java (at line 6)\\n\" +", "+\t\t\"1. WARNING in p\\\\FieldQualification.java (at line 6)\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"3. WARNING in p\\\\FieldQualification.java (at line 6)\\n\" +", "-\t\t\"\tString field = \\\"Enclosing field for anonymous type\\\";\\n\" +", "-\t\t\"\t       ^^^^^\\n\" +", "-\t\t\"The field Local.field is never read locally\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"4. WARNING in p\\\\FieldQualification.java (at line 7)\\n\" +", "-\t\t\"\tvoid foo() {\\n\" +", "-\t\t\"\t     ^^^^^\\n\" +", "-\t\t\"The method foo() from the type Local is never used locally\\n\" +"]}], "num": 1721}