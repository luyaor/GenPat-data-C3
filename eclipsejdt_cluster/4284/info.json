{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4bf5f179357bcea6207e87494f3f05df", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bf337c340187ba966b1bdfb9532f9c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "7cdc478cdd8ecd6517119ed517a89b2200812e0f", "commitAfterChange": "8a633d56819c44af45234d7a3760b2d36e5276ed", "methodNumberBeforeChange": 406, "methodNumberAfterChange": 406, "signatureBeforeChange": " public void testBug317719f() throws Exception", "signatureAfterChange": " public void testBug317719f() throws Exception", "diff": ["-\t\t\t\"Method forAccountSet(List) has the same erasure forAccountSet(List<E>) as another method in type X<Z>\\n\" + ", "+\t\t\t\"Erasure of method forAccountSet(List) is the same as another method in type X<Z>\\n\" +", "-\t\t\t\"Method forAccountSet(List<R>) has the same erasure forAccountSet(List<E>) as another method in type X<Z>\\n\" + ", "+\t\t\t\"Erasure of method forAccountSet(List<R>) is the same as another method in type X<Z>\\n\" +", "-\t\t\t\t\"Method forAccountSet(List) has the same erasure forAccountSet(List<E>) as another method in type X<Z>\\n\" + ", "+\t\t\t\t\"Erasure of method forAccountSet(List) is the same as another method in type X<Z>\\n\" +", "-\t\t\t\t\"Method forAccountSet(List<R>) has the same erasure forAccountSet(List<E>) as another method in type X<Z>\\n\" + ", "+\t\t\t\t\"Erasure of method forAccountSet(List<R>) is the same as another method in type X<Z>\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e9e503ce323e64f1a50dc73dec65e4e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchJavadocTests.java", "commitBeforeChange": "490f0dedc6b033aac107ccccbdc9e8361a921466", "commitAfterChange": "83feb6a3bbe889feb388b89a4854a090c75eaf0e", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic void testJavadocMethodArgReferenceWithJavadoc() throws CoreException", "signatureAfterChange": " \tpublic void testJavadocMethodArgReferenceWithJavadoc() throws CoreException", "diff": ["-\t\tIType type = getCompilationUnit(\"JavaSearch\", \"src\", \"j1\", \"AnnSearched.java\").getType(\"AnnSearched\");", "+\t\tIType type = getCompilationUnit(\"JavaSearch\", \"src\", \"j1\", \"JavadocSearched.java\").getType(\"JavadocSearched\");", "-\t\t\tIMethod method = type.getMethod(\"annSearchedMethod\", new String[] { \"QString;\" });", "+\t\t\tIMethod method = type.getMethod(\"javadocSearchedMethod\", new String[] { \"QString;\" });", "-\t\t\t\t\t\"src/j1/AnnValidRef.java void j1.AnnValidRef.valid() [annSearchedMethod] EXACT_MATCH\",", "+\t\t\t\t\t\"src/j1/JavadocValidRef.java void j1.JavadocValidRef.valid() [javadocSearchedMethod] EXACT_MATCH\","]}], "num": 4284}