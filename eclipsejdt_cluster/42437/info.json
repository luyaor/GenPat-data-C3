{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1bfd77d8e680499b25a1d713e002c8ca", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3612e72f39a44eb0095bad37aa48a535", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "8ff32a67561d85d16e0a42904446ef1ba698078c", "commitAfterChange": "65583c0d396b6d77e17bf3a8f03add75b5a18d0d", "methodNumberBeforeChange": 176, "methodNumberAfterChange": 176, "signatureBeforeChange": " protected void consumeFormalParameter(boolean isVarArgs)", "signatureAfterChange": " protected void consumeFormalParameter(boolean isVarArgs)", "diff": ["-\tthis.intStack : dim dim", "+\tthis.intStack : dim dim 1||0  // 1 => normal parameter, 0 => this parameter", "-", "+\tTypeReference qualifyingTypeReference = null;", "+    boolean isReceiver = this.intStack[this.intPtr--] == 0;", "+    if (isReceiver) {", "+    \tqualifyingTypeReference = (TypeReference) this.expressionStack[this.expressionPtr--];", "+    \tthis.expressionLengthPtr --;", "+    }", "-\tArgument arg =", "-\t\tnew Argument(", "+\tArgument arg;", "+\tif (isReceiver) {", "+\t\targ = new Receiver(", "+\t\t\t\tidentifierName, ", "+\t\t\t\tnamePositions, ", "+\t\t\t\ttype,", "+\t\t\t\tqualifyingTypeReference,", "+\t\t\t\tthis.intStack[this.intPtr + 1] & ~ClassFileConstants.AccDeprecated);", "+\t} else {", "+\t\targ = new Argument(", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83a364c13eb5e8f5b03d1ceff477d2ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/DocumentElementParser.java", "commitBeforeChange": "8ff32a67561d85d16e0a42904446ef1ba698078c", "commitAfterChange": "65583c0d396b6d77e17bf3a8f03add75b5a18d0d", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " protected void consumeFormalParameter(boolean isVarArgs)", "signatureAfterChange": " protected void consumeFormalParameter(boolean isVarArgs)", "diff": ["-\tintStack : dim dim", "+\tintStack : dim dim 1||0  // 1 => normal parameter, 0 => this parameter", "-", "+\tTypeReference qualifyingTypeReference = null;", "+    boolean isReceiver = this.intStack[this.intPtr--] == 0;", "+    if (isReceiver) {", "+    \tqualifyingTypeReference = (TypeReference) this.expressionStack[this.expressionPtr--];", "+    \tthis.expressionLengthPtr --;", "+    }", "-\tArgument arg =", "-\t\tnew Argument(", "+\tArgument arg;", "+\tif (isReceiver) {", "+\t\targ = new Receiver(", "+\t\t\t\tparameterName, ", "+\t\t\t\tnamePositions, ", "+\t\t\t\ttype,", "+\t\t\t\tqualifyingTypeReference,", "+\t\t\t\tthis.intStack[this.intPtr + 1] & ~ClassFileConstants.AccDeprecated);", "+\t} else {", "+\t\targ = new Argument(", "+\t}"]}], "num": 42437}