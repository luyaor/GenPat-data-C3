{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "85b67f95c237a74a3ce7606e8ef4af0b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27ce7f66b4aa056ab87821035790ae76", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/FileSystem.java", "commitBeforeChange": "a7e924b1651a1b9026ccc6590ce8e03365836a1b", "commitAfterChange": "d3da1d109c57a90a2bd8342736abf401463d58e5", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " static Classpath getClasspath(String classpathName, String encoding, int mode, AccessRuleSet accessRuleSet)", "signatureAfterChange": " static Classpath getClasspath(String classpathName, String encoding, boolean isSourceOnly, AccessRuleSet accessRuleSet)", "diff": ["-static Classpath getClasspath(String classpathName, String encoding, int mode, AccessRuleSet accessRuleSet) {", "+static Classpath getClasspath(String classpathName, String encoding, boolean isSourceOnly, AccessRuleSet accessRuleSet) {", "-\t\t\tresult = new ClasspathDirectory(file, encoding, mode, accessRuleSet);", "+\t\t\tresult = new ClasspathDirectory(file, encoding, isSourceOnly ? ClasspathLocation.SOURCE : ClasspathLocation.SOURCE | ClasspathLocation.BINARY, accessRuleSet);", "-\t\t\tif (mode == ClasspathLocation.SOURCE) {", "-\t\t\t\t// will throw an IOException if file does not exist", "+\t\t\tif (isSourceOnly) {", "+\t\t\t\t// source only mode", "-\t\t\t\t// will throw an IOException if file does not exist", "+\t\t\t\t// class file only mode"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e481db6b0ff7c56f3b2476389e5d2533", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SyntheticMethodBinding.java", "commitBeforeChange": "cb586d1ec75e8da71f4da23a7a5eb911d6960b1c", "commitAfterChange": "543f951d6390669f9bed8c637d9d6aef509af249", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic SyntheticMethodBinding(FieldBinding targetField, boolean isReadAccess, ReferenceBinding declaringClass)", "signatureAfterChange": "  \tpublic SyntheticMethodBinding(FieldBinding targetField, boolean isReadAccess, boolean isSuperAccess, ReferenceBinding declaringClass)", "diff": ["-\tpublic SyntheticMethodBinding(FieldBinding targetField, boolean isReadAccess, ReferenceBinding declaringClass) {", "+\tpublic SyntheticMethodBinding(FieldBinding targetField, boolean isReadAccess, boolean isSuperAccess, ReferenceBinding declaringClass) {", "-\t\t\tthis.purpose = SyntheticMethodBinding.FieldReadAccess;", "+\t\t\tthis.purpose = isSuperAccess ? SyntheticMethodBinding.SuperFieldReadAccess : SyntheticMethodBinding.FieldReadAccess;", "-\t\t\tthis.purpose = SyntheticMethodBinding.FieldWriteAccess;", "+\t\t\tthis.purpose = isSuperAccess ? SyntheticMethodBinding.SuperFieldWriteAccess : SyntheticMethodBinding.FieldWriteAccess;"]}], "num": 60553}