{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "779c5a375da4d5d9b84537835968d23e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bef94031310f69fa0cc024f5249c5fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 102, "signatureBeforeChange": " \tpublic boolean visit(SwitchStatement switchStatement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(SwitchStatement switchStatement, BlockScope scope)", "diff": ["-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameswitch);", "-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameLPAREN, this.preferences.insert_space_before_switch_condition);", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameswitch);", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLPAREN, this.preferences.insert_space_before_switch_condition);", "-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameRPAREN, this.preferences.insert_space_in_switch_condition);", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_in_switch_condition);", "-\t\t\tboolean wasABreak = false;", "+\t\t\tboolean wasACase = false;", "+\t\t\tboolean wasAStatement = false;", "-\t\t\t\tif (i == 0) {", "-\t\t\t\t\t// this is a case or a default statement", "+\t\t\t\tif (statement instanceof CaseStatement) {", "-\t\t\t\t\tif (this.preferences.indent_switchstatements_compare_to_cases) {", "-\t\t\t\t\t\tthis.scribe.indent();", "-\t\t\t\t\t}", "-\t\t\t\t} else if (statement instanceof CaseStatement) {", "-\t\t\t\t\tif (wasABreak) {", "-\t\t\t\t\t\tif (this.preferences.indent_breaks_compare_to_cases) {", "-\t\t\t\t\t\t\tthis.scribe.unIndent();", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else if (this.preferences.indent_switchstatements_compare_to_cases) {", "-\t\t\t\t\t\tthis.scribe.unIndent();", "-\t\t\t\t\t}", "-\t\t\t\t\tstatement.traverse(this, scope);", "-\t\t\t\t\twasABreak = false;", "-\t\t\t\t\tif (this.preferences.indent_switchstatements_compare_to_cases) {", "-\t\t\t\t\t\tthis.scribe.indent();", "-\t\t\t\t\t}", "+\t\t\t\t\twasACase = true;", "+\t\t\t\t\twasAStatement = false;", "-\t\t\t\t\twasABreak = true;", "-\t\t\t\t\tif (this.preferences.indent_switchstatements_compare_to_cases) {", "-\t\t\t\t\t\tif (!this.preferences.indent_breaks_compare_to_cases) {", "-\t\t\t\t\t\t\tthis.scribe.unIndent();", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else if (this.preferences.indent_breaks_compare_to_cases) {", "+\t\t\t\t\tif (wasAStatement && this.preferences.indent_switchstatements_compare_to_cases) {", "+\t\t\t\t\t\tthis.scribe.indent();", "+\t\t\t\t\t}", "+\t\t\t\t\tif (wasACase && this.preferences.indent_breaks_compare_to_cases) {", "-\t\t\t\t\tif (i == statementsLength - 1 && this.preferences.indent_breaks_compare_to_cases) {", "+\t\t\t\t\tif (wasACase && this.preferences.indent_breaks_compare_to_cases) {", "+\t\t\t\t\tif (wasAStatement && this.preferences.indent_switchstatements_compare_to_cases) {", "+\t\t\t\t\t\tthis.scribe.unIndent();", "+\t\t\t\t\t}", "+\t\t\t\t\twasACase = false;", "+\t\t\t\t\twasAStatement = false;", "-\t\t\t\t\twasABreak = false;", "+\t\t\t\t\tif (wasACase && this.preferences.indent_switchstatements_compare_to_cases) {", "+\t\t\t\t\t\tthis.scribe.indent();", "+\t\t\t\t\t}", "-\t\t\t\t\tif (i == statementsLength - 1 && this.preferences.indent_switchstatements_compare_to_cases) {", "+\t\t\t\t\tif (wasACase && this.preferences.indent_switchstatements_compare_to_cases) {", "+\t\t\t\t\twasAStatement = true;", "+\t\t\t\t\twasACase = false;", "-\t\t\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "+\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "-\t\t\t\t\t\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "+\t\t\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "-\t\t\t\t\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "+\t\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "-\t\t\t\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "+\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameRBRACE);", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b81025f175d51e92ff38e3e05584e26", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "c62ecfd031507c11ea236866605fedd6f3a952c5", "commitAfterChange": "ded73445e8c5cf2db0a4abcc53e1680f02ae6cf7", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 122, "signatureBeforeChange": " \tpublic boolean visit(SwitchStatement switchStatement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(SwitchStatement switchStatement, BlockScope scope)", "diff": ["-", "-\t\tif (this.preferences.indent_switchstatements_compare_to_switch) {", "-\t\t\tthis.scribe.indent();", "-\t\t}", "+\t\tint switchIndentationLevel = this.scribe.indentationLevel;", "+\t\tint caseIndentation = 0;", "+\t\tint statementIndentation = 0;", "+\t\tint breakIndentation = 0;", "+\t\tif (this.preferences.indent_switchstatements_compare_to_switch) {", "+\t\t\tcaseIndentation++;", "+\t\t\tstatementIndentation++;", "+\t\t\tbreakIndentation++;", "+\t\t}", "+\t\tif (this.preferences.indent_switchstatements_compare_to_cases) {", "+\t\t\tstatementIndentation++;", "+\t\t}", "+\t\tif (this.preferences.indent_breaks_compare_to_cases) {", "+\t\t\tbreakIndentation++;", "+\t\t}", "-\t\tboolean wasAStatement = false;", "+\t\tboolean wasABreak = false;", "+\t\t\t\t\tif (wasABreak) {", "+\t\t\t\t\t\tthis.scribe.setIndentation(switchIndentationLevel, caseIndentation);", "+\t\t\t\t\t\tthis.scribe.printComment();", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tif (wasACase) {", "+\t\t\t\t\t\t\tthis.scribe.printComment(Scribe.PRESERVE_EMPTY_LINES_IN_SWITCH_CASE);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tthis.scribe.printComment();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tthis.scribe.setIndentation(switchIndentationLevel, caseIndentation);", "+\t\t\t\t\t}", "-\t\t\t\t\tif ((wasACase && this.preferences.indent_switchstatements_compare_to_cases)", "-\t\t\t\t\t\t|| (wasAStatement && this.preferences.indent_switchstatements_compare_to_cases)) {", "-\t\t\t\t\t\tthis.scribe.unIndent();", "-\t\t\t\t\t}", "-\t\t\t\t\twasACase = true;", "-\t\t\t\t\twasAStatement = false;", "-\t\t\t\t\tif (this.preferences.indent_switchstatements_compare_to_cases) {", "-\t\t\t\t\t\tthis.scribe.indent();", "-\t\t\t\t\t}", "+\t\t\t\t\t// Print following trailing (if any) comment at statement indentation", "+\t\t\t\t\tthis.scribe.setIndentation(switchIndentationLevel, statementIndentation);", "+\t\t\t\t\twasACase = true;", "+\t\t\t\t\twasABreak = false;", "-\t\t\t\t\tif (this.preferences.indent_breaks_compare_to_cases) {", "-\t\t\t\t\t\tif (wasAStatement && !this.preferences.indent_switchstatements_compare_to_cases) {", "-\t\t\t\t\t\t\tthis.scribe.indent();", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tif (wasAStatement) {", "-\t\t\t\t\t\t\tif (this.preferences.indent_switchstatements_compare_to_cases) {", "-\t\t\t\t\t\t\t\tthis.scribe.unIndent();", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tif (wasACase && this.preferences.indent_switchstatements_compare_to_cases) {", "-\t\t\t\t\t\t\tthis.scribe.unIndent();", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "+\t\t\t\t\tthis.scribe.setIndentation(switchIndentationLevel, breakIndentation);", "+\t\t\t\t\tthis.scribe.printComment();", "-\t\t\t\t\tif (this.preferences.indent_breaks_compare_to_cases) {", "-\t\t\t\t\t\tthis.scribe.unIndent();", "-\t\t\t\t\t}", "-\t\t\t\t\twasAStatement = false;", "+\t\t\t\t\twasABreak = true;", "-\t\t\t\t\tString bracePosition;", "-\t\t\t\t\tif (wasACase) {", "-\t\t\t\t\t\tif (this.preferences.indent_switchstatements_compare_to_cases) {", "-\t\t\t\t\t\t\tthis.scribe.unIndent();", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tbracePosition =\tthis.preferences.brace_position_for_block_in_case;", "-\t\t\t\t\t\tformatBlock((Block) statement, scope, bracePosition, this.preferences.insert_space_after_colon_in_case);", "-\t\t\t\t\t\tif (this.preferences.indent_switchstatements_compare_to_cases) {", "-\t\t\t\t\t\t\tthis.scribe.indent();", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tbracePosition =\tthis.preferences.brace_position_for_block;", "-\t\t\t\t\t\tformatBlock((Block) statement, scope, bracePosition, this.preferences.insert_space_before_opening_brace_in_block);", "-\t\t\t\t\t}", "-\t\t\t\t\twasAStatement = true;", "+\t\t\t\t\tthis.scribe.setIndentation(switchIndentationLevel, wasACase ? caseIndentation : statementIndentation);", "+\t\t\t\t\tthis.scribe.printComment();", "+\t\t\t\t\tString bracePosition = wasACase ? this.preferences.brace_position_for_block_in_case : this.preferences.brace_position_for_block;", "+\t\t\t\t\tformatBlock((Block) statement, scope, bracePosition, this.preferences.insert_space_before_opening_brace_in_block);", "+\t\t\t\t\twasABreak = false;", "+\t\t\t\t\tthis.scribe.setIndentation(switchIndentationLevel, statementIndentation);", "+\t\t\t\t\tthis.scribe.printComment();", "-\t\t\t\t\twasAStatement = true;", "+\t\t\t\t\twasABreak = false;", "-\t\t\t\tthis.scribe.printComment();", "-", "-\t\tif ((wasACase || wasAStatement) && this.preferences.indent_switchstatements_compare_to_cases) {", "-\t\t\tthis.scribe.unIndent();", "-\t\t}", "-\t\tif (this.preferences.indent_switchstatements_compare_to_switch) {", "-\t\t\tthis.scribe.unIndent();", "-\t\t}", "+\t\tif (wasABreak) {", "+\t\t\tthis.scribe.setIndentation(switchIndentationLevel, 0);", "+\t\t\tthis.scribe.printComment();", "+\t\t} else {", "+\t\t\tthis.scribe.printComment();", "+\t\t\tthis.scribe.setIndentation(switchIndentationLevel, 0);", "+\t\t}"]}], "num": 15181}