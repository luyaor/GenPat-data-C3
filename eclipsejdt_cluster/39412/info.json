{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "15f5932387dbfb683e4a3f4690e30b62", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "585a50249bc5320f6b196a42af97c15f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexBinaryFolder.java", "commitBeforeChange": "f0e250f13749e7272bf06a2b15756605f80d1c3b", "commitAfterChange": "4bdd855d0f802eda5492db24df9cfcadb9d4328e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\t\tfinal Hashtable indexedFileNames = new Hashtable(100);", "+\t\t\tfinal SimpleLookupTable indexedFileNames = new SimpleLookupTable(max == 0 ? 33 : max + 11);", "-\t\t\tEnumeration names = indexedFileNames.keys();", "+\t\t\tObject[] names = indexedFileNames.keyTable;", "+\t\t\tObject[] values = indexedFileNames.valueTable;", "-\t\t\twhile (names.hasMoreElements()) {", "-\t\t\t\tif (this.isCancelled) return false;", "+\t\t\tfor (int i = 0, length = names.length; i < length; i++) {", "+\t\t\t\tString name = (String) names[i];", "+\t\t\t\tif (name != null) {", "+\t\t\t\t\tif (this.isCancelled) return false;", "-\t\t\t\tString name = (String) names.nextElement();", "-\t\t\t\tObject value = indexedFileNames.get(name);", "-\t\t\t\tif (value != OK) {", "-\t\t\t\t\tshouldSave = true;", "-\t\t\t\t\tif (value == DELETED)", "-\t\t\t\t\t\tthis.manager.remove(name, folderPath);", "-\t\t\t\t\telse", "-\t\t\t\t\t\tthis.manager.addBinary((IFile) value, folderPath);", "+\t\t\t\t\tObject value = values[i];", "+\t\t\t\t\tif (value != OK) {", "+\t\t\t\t\t\tshouldSave = true;", "+\t\t\t\t\t\tif (value == DELETED)", "+\t\t\t\t\t\t\tthis.manager.remove(name, folderPath);", "+\t\t\t\t\t\telse", "+\t\t\t\t\t\t\tthis.manager.addBinary((IFile) value, folderPath);", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a08ed371fdb8379e4afe01522ad87b2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexAllProject.java", "commitBeforeChange": "f0e250f13749e7272bf06a2b15756605f80d1c3b", "commitAfterChange": "4bdd855d0f802eda5492db24df9cfcadb9d4328e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\t\tfinal Hashtable indexedFileNames = new Hashtable(100);", "+\t\t\tfinal SimpleLookupTable indexedFileNames = new SimpleLookupTable(max == 0 ? 33 : max + 11);", "-\t\t\tEnumeration names = indexedFileNames.keys();", "+\t\t\tObject[] names = indexedFileNames.keyTable;", "+\t\t\tObject[] values = indexedFileNames.valueTable;", "-\t\t\twhile (names.hasMoreElements()) {", "-\t\t\t\tif (this.isCancelled) return false;", "+\t\t\tfor (int i = 0, length = names.length; i < length; i++) {", "+\t\t\t\tString name = (String) names[i];", "+\t\t\t\tif (name != null) {", "+\t\t\t\t\tif (this.isCancelled) return false;", "-\t\t\t\tString name = (String) names.nextElement();", "-\t\t\t\tObject value = indexedFileNames.get(name);", "-\t\t\t\tif (value != OK) {", "-\t\t\t\t\tshouldSave = true;", "-\t\t\t\t\tif (value == DELETED)", "-\t\t\t\t\t\tthis.manager.remove(name, projectPath);", "-\t\t\t\t\telse", "-\t\t\t\t\t\tthis.manager.addSource((IFile) value, projectPath);", "+\t\t\t\t\tObject value = values[i];", "+\t\t\t\t\tif (value != OK) {", "+\t\t\t\t\t\tshouldSave = true;", "+\t\t\t\t\t\tif (value == DELETED)", "+\t\t\t\t\t\t\tthis.manager.remove(name, projectPath);", "+\t\t\t\t\t\telse", "+\t\t\t\t\t\t\tthis.manager.addSource((IFile) value, projectPath);", "+\t\t\t\t\t}"]}], "num": 39412}