{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "582c2d3d678e5fe64f12fce84e0c1c10", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7350dbfbef31f3087f867abec24552d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/ClasspathDirectory.java", "commitBeforeChange": "f4fc58ef48a6d9d6c398d56576d18d3e70e62c86", "commitAfterChange": "6537a24c88f25f9b49763273df663f64d4b48580", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public NameEnvironmentAnswer findClass(char[] typeName, String qualifiedPackageName, String qualifiedBinaryFileName)", "signatureAfterChange": " public NameEnvironmentAnswer findClass(char[] typeName, String qualifiedPackageName, String qualifiedBinaryFileName)", "diff": ["-\t\tString fullSourcePath = path + qualifiedBinaryFileName.substring(0, qualifiedBinaryFileName.length() - 6)  + SUFFIX_STRING_java;", "+\t\tString fullSourcePath = this.path + qualifiedBinaryFileName.substring(0, qualifiedBinaryFileName.length() - 6)  + SUFFIX_STRING_java;", "-\t\tString fullBinaryPath = path + qualifiedBinaryFileName;", "+\t\tString fullBinaryPath = this.path + qualifiedBinaryFileName;", "-\t\t\tClassFileReader reader = ClassFileReader.read(path + qualifiedBinaryFileName);", "+\t\t\tClassFileReader reader = ClassFileReader.read(this.path + qualifiedBinaryFileName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9ae5e073a45009c062b9ccbff7dab8c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/processing/JobManager.java", "commitBeforeChange": "7daf62bc284b30571754ce8d7fd5c3a7c9740dcb", "commitAfterChange": "b8c9923212bd9598e5d2ca68e0dc316b81a3eccb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic synchronized int awaitingJobsCount()", "signatureAfterChange": " \tpublic synchronized int awaitingJobsCount()", "diff": ["-", "-\t\tif (!activated)", "-\t\t\treturn 1;", "-", "-\t\treturn jobEnd - jobStart + 1;", "-", "+\t\treturn this.activated ? this.jobEnd - this.jobStart + 1 : 1;"]}], "num": 62164}