{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1183ab86f7742d7b62ca9e450b7692b9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02e4d0e374d3da150df51f70fd9821c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "c56d8289161a1b2e501ace042a7085f33bafd661", "commitAfterChange": "f15f3a4daa4f7cbf363475bdb20d4707912f834f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " HashtableOfObject addQueryResults(char[][] categories, char[] key, int matchRule, MemoryIndex memoryIndex) throws IOException", "signatureAfterChange": " HashtableOfObject addQueryResults(char[][] categories, char[] key, int matchRule, MemoryIndex memoryIndex) throws IOException", "diff": ["-\tif (matchRule == SearchPattern.R_EXACT_MATCH + SearchPattern.R_CASE_SENSITIVE) {", "+\tif (key == null) {", "+\t\tfor (int i = 0, l = categories.length; i < l; i++) {", "+\t\t\tHashtableOfObject wordsToDocNumbers = readCategoryTable(categories[i], true); // cache if key is null since its a definite match", "+\t\t\tif (wordsToDocNumbers != null) {", "+\t\t\t\tchar[][] words = wordsToDocNumbers.keyTable;", "+\t\t\t\tif (results == null)", "+\t\t\t\t\tresults = new HashtableOfObject(wordsToDocNumbers.elementSize);", "+\t\t\t\tfor (int j = 0, m = words.length; j < m; j++)", "+\t\t\t\t\tif (words[j] != null)", "+\t\t\t\t\t\tresults = addQueryResult(results, words[j], wordsToDocNumbers, memoryIndex);", "+\t\t\t}", "+\t\t}", "+\t\tif (results != null && this.cachedChunks == null)", "+\t\t\tcacheDocumentNames();", "+\t} else if (matchRule == SearchPattern.R_EXACT_MATCH + SearchPattern.R_CASE_SENSITIVE) {", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "889148a74104a644f8476c55b41715b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "b501a050436f0ed4b21c2887b8c36095ae4a6672", "commitAfterChange": "b1617566bbecda597db8e35043fbdcfac0211c24", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " HashtableOfObject addQueryResults(char[][] categories, char[] key, int matchRule, MemoryIndex memoryIndex) throws IOException", "signatureAfterChange": " HashtableOfObject addQueryResults(char[][] categories, char[] key, int matchRule, MemoryIndex memoryIndex) throws IOException", "diff": ["-\t\t\tHashtableOfObject wordsToDocNumbers = readCategoryTable(categories[i], true); // cache if key is null since its a definite match", "+\t\t\tCategoryTable wordsToDocNumbers = readCategoryTable(categories[i], true); // cache if key is null since its a definite match", "-\t\t\t\t\tHashtableOfObject wordsToDocNumbers = readCategoryTable(categories[i], false);", "+\t\t\t\t\tCategoryTable wordsToDocNumbers = readCategoryTable(categories[i], false);", "-\t\t\t\t\tHashtableOfObject wordsToDocNumbers = readCategoryTable(categories[i], false);", "+\t\t\t\t\tCategoryTable wordsToDocNumbers = readCategoryTable(categories[i], false);", "-\t\t\t\t\tHashtableOfObject wordsToDocNumbers = readCategoryTable(categories[i], false);", "+\t\t\t\t\tCategoryTable wordsToDocNumbers = readCategoryTable(categories[i], false);"]}], "num": 51091}