{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4a561577fd1382b5fd17902cbf4e19a0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5ceb61427e4d701362a307f04f4b4ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/eval/EvaluationContextWrapper.java", "commitBeforeChange": "46418d248f89a29f49a77d154cdbfa57c408b256", "commitAfterChange": "c85433e27f0fa74bfe8e06c38c1c02c51b5599d7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public void evaluateCodeSnippet(\r \tString codeSnippet, \r \tString[] localVariableTypeNames, \r \tString[] localVariableNames, \r \tint[] localVariableModifiers, \r \tIType declaringType, \r \tboolean isStatic, \r \tboolean isConstructorCall, \r \tICodeSnippetRequestor requestor, \r \tIProgressMonitor progressMonitor) throws org.eclipse.jdt.core.JavaModelException", "signatureAfterChange": "\r public void evaluateCodeSnippet(\r \tString codeSnippet, \r \tString[] localVariableTypeNames, \r \tString[] localVariableNames, \r \tint[] localVariableModifiers, \r \tIType declaringType, \r \tboolean isStatic, \r \tboolean isConstructorCall, \r \tICodeSnippetRequestor requestor, \r \tIProgressMonitor progressMonitor) throws org.eclipse.jdt.core.JavaModelException", "diff": ["-\t\t\t}\r", "-\t\t} else {\r", "-\t\t\t// try to retrieve imports from the source\r", "-\t\t\tSourceMapper sourceMapper = ((ClassFile) declaringType.getClassFile()).getSourceMapper();\r", "-\t\t\tif (sourceMapper != null) {\r", "-\t\t\t\tchar[][] imports = sourceMapper.getImports((BinaryType) declaringType);\r", "-\t\t\t\tif (imports != null) {\r", "-\t\t\t\t\tthis.context.setImports(imports);\r", "-\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdd0d12d2f762690e141f92bc00cbe65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/eval/EvaluationContextWrapper.java", "commitBeforeChange": "c8bfaf82a67da861220348e09ccf8e5b65eea2d7", "commitAfterChange": "7c0d6dc61f1a3a5fa2460d48c92c28c9976c6e77", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public void evaluateCodeSnippet(\r \tString codeSnippet, \r \tString[] localVariableTypeNames, \r \tString[] localVariableNames, \r \tint[] localVariableModifiers, \r \tIType declaringType, \r \tboolean isStatic, \r \tboolean isConstructorCall, \r \tICodeSnippetRequestor requestor, \r \tIProgressMonitor progressMonitor) throws org.eclipse.jdt.core.JavaModelException", "signatureAfterChange": "\r public void evaluateCodeSnippet(\r \tString codeSnippet, \r \tString[] localVariableTypeNames, \r \tString[] localVariableNames, \r \tint[] localVariableModifiers, \r \tIType declaringType, \r \tboolean isStatic, \r \tboolean isConstructorCall, \r \tICodeSnippetRequestor requestor, \r \tIProgressMonitor progressMonitor) throws org.eclipse.jdt.core.JavaModelException", "diff": ["-\t\t\t\tdeclaringType.getSource(); // do the mapping and initialize the imports\r", "-\t\t\t\tchar[][] imports = sourceMapper.getImports();\r", "+\t\t\t\tchar[][] imports = sourceMapper.getImports((BinaryType) declaringType);\r", "-\t\t\t\t\tthis.context.setImports(sourceMapper.getImports());\r", "+\t\t\t\t\tthis.context.setImports(imports);\r"]}], "num": 26568}