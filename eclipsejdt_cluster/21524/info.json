{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "90182e8d017db0dc1d59b96fd6bb0f4f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e5ec5960f0fee732e7151b188b7d1dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "67be753fec1b8f88653e28d3d4d4837dd29cdece", "commitAfterChange": "c76b87d837ed14384819cb84439501329f23edce", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \r \tpublic TypeDeclaration convert(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDeclaration)", "signatureAfterChange": "\r \r \tpublic TypeDeclaration convert(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDeclaration)", "diff": ["+\t\t\ttypeDecl.resolveBinding();\r", "-\t\tMemberTypeDeclaration[] members = typeDeclaration.memberTypes;\r", "-\t\tif (members != null) {\r", "-\t\t\tfor (int i = 0, length = members.length; i < length; i++) {\r", "-\t\t\t\ttypeDecl.bodyDeclarations().add(convert(members[i]));\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\torg.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields = typeDeclaration.fields;\r", "-\t\tif (fields != null) {\r", "-\t\t\tint fieldsLength = fields.length;\r", "-\t\t\tfor (int i = 0; i < fieldsLength; i++) {\r", "-\t\t\t\tcheckAndAddMultipleFieldDeclaration(fields, i, typeDecl.bodyDeclarations());\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\tAbstractMethodDeclaration[] methods = typeDeclaration.methods;\r", "-\t\tif (methods != null) {\r", "-\t\t\tint methodsLength = methods.length;\r", "-\t\t\tfor (int i = 0; i < methodsLength; i++) {\r", "-\t\t\t\tif (!methods[i].isDefaultConstructor() && !methods[i].isClinit()) {\r", "-\t\t\t\t\ttypeDecl.bodyDeclarations().add(convert(methods[i]));\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t}\r", "+\t\t\r", "+\t\tbuildBodyDeclarations(typeDeclaration, typeDecl);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c04e74c7fa3e2cd10e4e1e6ea96bdd29", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "67be753fec1b8f88653e28d3d4d4837dd29cdece", "commitAfterChange": "c76b87d837ed14384819cb84439501329f23edce", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "\t\r \r \tpublic TypeDeclaration convert(MemberTypeDeclaration typeDeclaration)", "signatureAfterChange": "\t\r \r \tpublic TypeDeclaration convert(MemberTypeDeclaration typeDeclaration)", "diff": ["+\t\t\ttypeDecl.resolveBinding();\r", "-\t\tMemberTypeDeclaration[] members = typeDeclaration.memberTypes;\r", "-\t\tif (members != null) {\r", "-\t\t\tfor (int i = 0, length = members.length; i < length; i++) {\r", "-\t\t\t\ttypeDecl.bodyDeclarations().add(convert(members[i]));\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\torg.eclipse.jdt.internal.compiler.ast.FieldDeclaration fields[] = typeDeclaration.fields;\r", "-\t\tif (fields != null) {\r", "-\t\t\tint fieldsLength = fields.length;\r", "-\t\t\tfor (int i = 0; i < fieldsLength; i++) {\r", "-\t\t\t\tcheckAndAddMultipleFieldDeclaration(fields, i, typeDecl.bodyDeclarations());\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\tAbstractMethodDeclaration[] methods = typeDeclaration.methods;\r", "-\t\tif (methods != null) {\r", "-\t\t\tint methodsLength = methods.length;\r", "-\t\t\tfor (int i = 0; i < methodsLength; i++) {\r", "-\t\t\t\tif (!methods[i].isDefaultConstructor() && !methods[i].isClinit()) {\r", "-\t\t\t\t\ttypeDecl.bodyDeclarations().add(convert(methods[i]));\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t}\r", "+\t\tbuildBodyDeclarations(typeDeclaration, typeDecl);\r"]}], "num": 21524}