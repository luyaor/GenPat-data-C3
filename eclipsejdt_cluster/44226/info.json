{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "99b9db8b590739fd8e84f97dbe2518fa", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "064b2d9dcf0ff902f7a276dde941ad5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "c8a2939446a95f9a322e1a05c00fbcc6a0bbf68a", "commitAfterChange": "83b433cefe204b4efddb34a5fec23235369a79e2", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic LambdaExpression getResolvedCopyForInferenceTargeting(TypeBinding targetType)", "signatureAfterChange": " \tpublic LambdaExpression getResolvedCopyForInferenceTargeting(TypeBinding targetType)", "diff": ["-\t\tLambdaExpression lambda = this.resolvedCopies.get(targetType);", "+\t\tLambdaExpression lambda = this.resolvedCopies != null ? this.resolvedCopies.get(targetType) : null;", "-\t\t\tif (lambda != null) {", "-\t\t\t\tthis.resolvedCopies.put(targetType, lambda);", "-\t\t\t}", "+\t\t\tif (this.resolvedCopies == null)", "+\t\t\t\tthis.resolvedCopies = new HashMap<TypeBinding, LambdaExpression>();", "+\t\t\tthis.resolvedCopies.put(targetType, lambda);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae7d56d273d62d219dc86d9d2328e362", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "3256aef43e2296affdbf86e21f8cafdaa866161a", "commitAfterChange": "f357f309273e0bfe8345ff708d18fa83c6a34931", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic LambdaExpression getResolvedCopyForInferenceTargeting(TypeBinding targetType)", "signatureAfterChange": " \tpublic LambdaExpression getResolvedCopyForInferenceTargeting(TypeBinding targetType)", "diff": ["+\t\tLambdaExpression lambda = this.resolvedCopies.get(targetType);", "+\t\tif (lambda == null) {", "+\t\t\tlambda = getResolvedCopyForInferenceTargeting0(targetType);", "+\t\t\tif (lambda != null) {", "+\t\t\t\tthis.resolvedCopies.put(targetType, lambda);", "+\t\t\t}", "+\t\t}", "+\t\treturn lambda;", "+\t}", "-\t\ttargetType = targetType.uncapture(this.enclosingScope);", "-\t\t// TODO: caching"]}], "num": 44226}