{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "803d510bf819d7015f9905246f5da320", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d38b66eec36ba3efee1d84a937fceccc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/InMemoryIndex.java", "commitBeforeChange": "0050ce1e7f4e1aa09d2a0680eb2a656c745b9584", "commitAfterChange": "c557f8e28df32d4f3742c65d1f4547b281353194", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r \r \tprotected void save(IndexOutput output) throws IOException", "signatureAfterChange": "\r \r \tprotected void save(IndexOutput output) throws IOException", "diff": ["-\t\tgetSortedWordEntries(); // init the slot\r", "-\t\t\tint numFiles= this.files.size();\r", "-\t\t\tfor (int i= 0; i < numFiles; ++i) {\r", "-\t\t\t\tIndexedFile indexedFile= (IndexedFile) this.files.get(i);\r", "-\t\t\t\toutput.addFile(indexedFile); // written out in order BUT not alphabetical\r", "-\t\t\t}\r", "+\t\t\tIndexedFile[] indexedFiles= files.asArray();\r", "+\t\t\tfor (int i= 0, length = indexedFiles.length; i < length; ++i)\r", "+\t\t\t\toutput.addFile(indexedFiles[i]); // written out in order BUT not alphabetical\r", "+\t\t\tgetSortedWordEntries(); // init the slot\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d40498349803898edc35b748f48fbb7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/InMemoryIndex.java", "commitBeforeChange": "0050ce1e7f4e1aa09d2a0680eb2a656c745b9584", "commitAfterChange": "c557f8e28df32d4f3742c65d1f4547b281353194", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r \tprotected IndexedFile[] getSortedFiles()", "signatureAfterChange": "\r \tprotected IndexedFile[] getSortedFiles()", "diff": ["-\t\t\tIndexedFile[] indexedfiles= new IndexedFile[files.size()];\r", "-\t\t\tfor (int i= 0; i < indexedfiles.length; i++)\r", "-\t\t\t\tindexedfiles[i]= (IndexedFile) files.get(i);\r", "-\t\t\tUtil.sort(indexedfiles);\r", "-\t\t\tthis.sortedFiles= indexedfiles;\r", "+\t\t\tIndexedFile[] indexedFiles= files.asArray();\r", "+\t\t\tUtil.sort(indexedFiles);\r", "+\t\t\tthis.sortedFiles= indexedFiles;\r"]}], "num": 43812}