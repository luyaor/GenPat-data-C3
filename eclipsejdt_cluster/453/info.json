{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a335ec5d0edcdc6c52dfc5de1991af9b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fcafcc94843231a985150e845ef8994", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsBugsTest.java", "commitBeforeChange": "b86c62c9276301f4293d579436f1016659c6742c", "commitAfterChange": "9816d147cfcd9317931332a2edf2549b9a55fa79", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public void testBug232768_Javadoc01() throws JavaModelException", "signatureAfterChange": " public void testBug232768_Javadoc01() throws JavaModelException", "diff": ["-\t// TODO fix the incorrect indentation before the javadoc comment (also in 3.3 and 3.4M6)", "-\t\t\"        /**\\n\" +", "+\t\t\"\t/**\\n\" +", "-\t\t\"\t}     \\n\" +", "-\t\t\"\\n\" +", "+\t\t\"\t}\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb64cc0ed348998a81e36417f2a995d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsBugsTest.java", "commitBeforeChange": "b86c62c9276301f4293d579436f1016659c6742c", "commitAfterChange": "9816d147cfcd9317931332a2edf2549b9a55fa79", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public void testBug232768_Block01() throws JavaModelException", "signatureAfterChange": " public void testBug232768_Block01() throws JavaModelException", "diff": ["-\t// TODO fix the incorrect indentation before the block comment (also in 3.3 and 3.4M6)", "-\t\t\"        /*\\n\" +", "+\t\t\"\t/*\\n\" +", "-\t\t\"\t}     \\n\" +", "-\t\t\"\\n\" +", "+\t\t\"\t}\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3138a232d015466c66c7071116e3953", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "08c5b9004bde27fb4063ce300ce881966676fe74", "commitAfterChange": "28d58bf6eb942015446b8ffce8f446f86e9686d9", "methodNumberBeforeChange": 162, "methodNumberAfterChange": 162, "signatureBeforeChange": " public void test401610j()", "signatureAfterChange": " public void test401610j()", "diff": ["-\t\t\t\t\"\t        ^^^\\n\" + ", "-\t\t\t\t\"The method foo(I) in the type X is not applicable for the arguments ((Object o) -> {\\n\" + ", "-\t\t\t\t\"})\\n\" + ", "+\t\t\t\t\"\t             ^^^^^^\\n\" + ", "+\t\t\t\t\"Lambda expression\\'s parameter o is expected to be of type int\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7e43373fc3fd9ef7cad3e878db9372b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "08c5b9004bde27fb4063ce300ce881966676fe74", "commitAfterChange": "28d58bf6eb942015446b8ffce8f446f86e9686d9", "methodNumberBeforeChange": 154, "methodNumberAfterChange": 154, "signatureBeforeChange": " public void test401610b()", "signatureAfterChange": " public void test401610b()", "diff": ["-\t\t\t\t\"\t        ^^^\\n\" + ", "-\t\t\t\t\"The method foo(I) in the type X is not applicable for the arguments ((<no type> s) -> {\\n\" + ", "-\t\t\t\t\"})\\n\" + ", "+\t\t\t\t\"\t            ^^^^^^^\\n\" + ", "+\t\t\t\t\"Lambda expression\\'s signature does not match the signature of the functional interface method\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0cba3cccd2316f50ff47eb098123313", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "08c5b9004bde27fb4063ce300ce881966676fe74", "commitAfterChange": "28d58bf6eb942015446b8ffce8f446f86e9686d9", "methodNumberBeforeChange": 157, "methodNumberAfterChange": 157, "signatureBeforeChange": " public void test401610e()", "signatureAfterChange": " public void test401610e()", "diff": ["-\t\t\t\t\"\t        ^^^\\n\" + ", "-\t\t\t\t\"The method foo(I<T>) in the type X is not applicable for the arguments (() -> {\\n\" + ", "-\t\t\t\t\"})\\n\" + ", "+\t\t\t\t\"\t            ^^^^^^\\n\" + ", "+\t\t\t\t\"The target type of this expression is not a well formed parameterized type due to bound(s) mismatch\\n\" + "]}], "num": 453}