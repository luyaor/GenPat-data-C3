{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "02c8ea8df85da8cf0ec6f5a98dd1ccfd", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d371ed246754957ef025fbe72e6df4d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "0a52fc66fb4db2fd9981d577d974e91228093601", "commitAfterChange": "76d395ddd90431ef7cb4486078cb51e978a5ad63", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "  \tprivate int getTextLength(FormatJavadocBlock block, FormatJavadocText text)", "signatureAfterChange": "  \tprivate int getTextLength(FormatJavadocBlock block, FormatJavadocText text, boolean immutableEnd)", "diff": ["-\tprivate int getTextLength(FormatJavadocBlock block, FormatJavadocText text) {", "+\tprivate int getTextLength(FormatJavadocBlock block, FormatJavadocText text, boolean immutableEnd) {", "-\t\t\t\t\t\tif (CharOperation.indexOf('\\n', this.scanner.source, this.scanner.startPosition, this.scanner.getCurrentTokenEndPosition()) >= 0) {", "-\t\t\t\t\t\t\treturn textLength;", "+\t\t\t\t\t\tif (CharOperation.indexOf('\\n', this.scanner.source, this.scanner.startPosition, this.scanner.currentPosition) >= 0) {", "+\t\t\t\t\t\t\tif (immutableEnd) {", "+\t\t\t\t\t\t\t\ttextLength = 0;", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\treturn textLength;", "+\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a00df87a0a22e538a1f6832f27c8c4fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "d95feda7fc2f9a6563596c0e4c31ae322f705773", "commitAfterChange": "8477130b01f048bfc1fd1f484a88902aeefb2f38", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": "  public void duplicateInheritedMethods(SourceTypeBinding type, MethodBinding inheritedMethod1, MethodBinding inheritedMethod2)", "signatureAfterChange": "  public void duplicateInheritedMethods(SourceTypeBinding type, MethodBinding inheritedMethod1, MethodBinding inheritedMethod2, boolean isJava8)", "diff": ["-public void duplicateInheritedMethods(SourceTypeBinding type, MethodBinding inheritedMethod1, MethodBinding inheritedMethod2) {", "+public void duplicateInheritedMethods(SourceTypeBinding type, MethodBinding inheritedMethod1, MethodBinding inheritedMethod2, boolean isJava8) {", "-\t\tint problemID = (inheritedMethod1.isDefaultMethod() && inheritedMethod2.isDefaultMethod())", "-\t\t\t\t? IProblem.DuplicateInheritedDefaultMethods", "-\t\t\t\t: IProblem.DuplicateInheritedMethods;", "+\t\tint problemID = IProblem.DuplicateInheritedMethods;", "+\t\tif (inheritedMethod1.isDefaultMethod() && inheritedMethod2.isDefaultMethod()) {", "+\t\t\tif (isJava8)", "+\t\t\t\tproblemID = IProblem.DuplicateInheritedDefaultMethods;", "+\t\t\telse", "+\t\t\t\treturn; // don't report this error at 1.7-", "+\t\t}"]}], "num": 20609}