{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dcde6366fea3b866d226a4131c35a82d", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24abb0e1fbf9f51ce60e8a63819cf5d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetClassFile.java", "commitBeforeChange": "5c299eb8cb22ce38b6114c586d40f08bfc6e1564", "commitAfterChange": "206fac737bc2376a179bc4e7396937b42a53755f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static void createProblemType(TypeDeclaration typeDeclaration, CompilationResult unitResult)", "signatureAfterChange": " public static void createProblemType(TypeDeclaration typeDeclaration, CompilationResult unitResult)", "diff": ["+\tif (typeBinding.hasMemberTypes()) {", "+\t\t// see bug 180109", "+\t\tReferenceBinding[] members = typeBinding.memberTypes;", "+\t\tfor (int i = 0, l = members.length; i < l; i++)", "+\t\t\tclassFile.recordInnerClasses(members[i]);", "+\t}", "+\t// TODO (olivier) handle cases where a field cannot be generated (name too long)", "+\t// TODO (olivier) handle too many methods", "+\t// inner attributes", "+\t\t\t\tmethod.modifiers = ClassFileConstants.AccPublic | ClassFileConstants.AccAbstract;", "+\t\t\t\t} else if (method.isAbstract()) {", "+\t\t\t\t\tclassFile.addAbstractMethod(methodDecl, method);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "779b7e038cd7d34d36ebf1e2f79295dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetClassFile.java", "commitBeforeChange": "8701c4a8cdd4cfcef333eb417a8a44b776707f18", "commitAfterChange": "320aa5fedb76dc78979724836df71d78afa90447", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static void createProblemType(TypeDeclaration typeDeclaration, CompilationResult unitResult)", "signatureAfterChange": " public static void createProblemType(TypeDeclaration typeDeclaration, CompilationResult unitResult)", "diff": ["+\tif (typeBinding.hasMemberTypes()) {", "+\t\t// see bug 180109", "+\t\tReferenceBinding[] members = typeBinding.memberTypes;", "+\t\tfor (int i = 0, l = members.length; i < l; i++)", "+\t\t\tclassFile.recordInnerClasses(members[i]);", "+\t}", "+\t// TODO (olivier) handle cases where a field cannot be generated (name too long)", "+\t// TODO (olivier) handle too many methods", "+\t// inner attributes", "+\t\t\t\tmethod.modifiers = ClassFileConstants.AccPublic | ClassFileConstants.AccAbstract;", "+\t\t\t\t} else if (method.isAbstract()) {", "+\t\t\t\t\tclassFile.addAbstractMethod(methodDecl, method);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee8c595822b9884a392daeb232873425", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetClassFile.java", "commitBeforeChange": "4b451936e40ee6e37b40f41172ce8c99798c8cfe", "commitAfterChange": "967420f083224ef03eafb3539b31970ad4abc02e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static void createProblemType(TypeDeclaration typeDeclaration, CompilationResult unitResult)", "signatureAfterChange": " public static void createProblemType(TypeDeclaration typeDeclaration, CompilationResult unitResult)", "diff": ["+\tif (typeBinding.hasMemberTypes()) {", "+\t\t// see bug 180109", "+\t\tReferenceBinding[] members = typeBinding.memberTypes;", "+\t\tfor (int i = 0, l = members.length; i < l; i++)", "+\t\t\tclassFile.recordInnerClasses(members[i]);", "+\t}", "+\t// TODO (olivier) handle cases where a field cannot be generated (name too long)", "+\t// TODO (olivier) handle too many methods", "+\t// inner attributes", "+\t\t\t\tmethod.modifiers = ClassFileConstants.AccPublic | ClassFileConstants.AccAbstract;", "+\t\t\t\t} else if (method.isAbstract()) {", "+\t\t\t\t\tclassFile.addAbstractMethod(methodDecl, method);"]}], "num": 46490}