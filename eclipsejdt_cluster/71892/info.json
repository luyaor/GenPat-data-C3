{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d8fabd77047bedb3662cdfd5ea032984", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0662718df4f4d75762d02f32c277d4cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaConventions.java", "commitBeforeChange": "e22e3614eb69018940fae05b9e58858f8a672e01", "commitAfterChange": "56d8ad4b7df60e79a9ee98611feebac099c594f9", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r public static IStatus validatePackageName(String name)", "signatureAfterChange": "\r public static IStatus validatePackageName(String name)", "diff": ["-\t\treturn new Status(IStatus.ERROR, JavaCore.PLUGIN_ID, -1, \"A package name must not be null\", null);\r", "+\t\treturn new Status(IStatus.ERROR, JavaCore.PLUGIN_ID, -1, Util.bind(\"convention.package.nullName\"/*nonNLS*/), null);\r", "-\t\treturn new Status(IStatus.ERROR, JavaCore.PLUGIN_ID, -1, \"A package name must not be empty\", null);\r", "+\t\treturn new Status(IStatus.ERROR, JavaCore.PLUGIN_ID, -1, Util.bind(\"convention.package.emptyName\"/*nonNLS*/), null);\r", "-\t\treturn new Status(IStatus.ERROR, JavaCore.PLUGIN_ID, -1, \"A package name cannot start or end with a dot\", null);\r", "+\t\treturn new Status(IStatus.ERROR, JavaCore.PLUGIN_ID, -1, Util.bind(\"convention.package.dotName\"/*nonNLS*/), null);\r", "-\t\treturn new Status(IStatus.ERROR, JavaCore.PLUGIN_ID, -1, \"A package name must not start or end with a blank\", null);;\r", "+\t\treturn new Status(IStatus.ERROR, JavaCore.PLUGIN_ID, -1, Util.bind(\"convention.package.nameWithBlanks\"/*nonNLS*/), null);;\r", "-\t\t\treturn new Status(IStatus.ERROR, JavaCore.PLUGIN_ID, -1, \"A package name must not contain two consecutive dots\", null);\r", "+\t\t\treturn new Status(IStatus.ERROR, JavaCore.PLUGIN_ID, -1, Util.bind(\"convention.package.consecutiveDotsName\"/*nonNLS*/), null);\r", "-\treturn new Status(IStatus.OK, JavaCore.PLUGIN_ID, -1, \"OK\", null);\r", "+\treturn new Status(IStatus.OK, JavaCore.PLUGIN_ID, -1, \"OK\"/*nonNLS*/, null);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5de0a8b686f045a4a509a458dca1347d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaConventions.java", "commitBeforeChange": "e22e3614eb69018940fae05b9e58858f8a672e01", "commitAfterChange": "56d8ad4b7df60e79a9ee98611feebac099c594f9", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r public static IStatus validateJavaTypeName(String name)", "signatureAfterChange": "\r public static IStatus validateJavaTypeName(String name)", "diff": ["-\t\treturn new Status(IStatus.ERROR, JavaCore.PLUGIN_ID, -1, \"A Java type name must not be null\", null);\r", "+\t\treturn new Status(IStatus.ERROR, JavaCore.PLUGIN_ID, -1, Util.bind(\"convention.type.nullName\"/*nonNLS*/), null);\r", "-\t\treturn new Status(IStatus.ERROR, JavaCore.PLUGIN_ID, -1, \"A Java type name must not start or end with a blank.\", null);;\r", "+\t\treturn new Status(IStatus.ERROR, JavaCore.PLUGIN_ID, -1, Util.bind(\"convention.type.nameWithBlanks\"/*nonNLS*/), null);\r", "-\t\t\treturn new Status(IStatus.WARNING, JavaCore.PLUGIN_ID, -1, \"By convention, Java type names usually don't contain the $ character.\", null);\r", "+\t\t\treturn new Status(IStatus.WARNING, JavaCore.PLUGIN_ID, -1, Util.bind(\"convention.type.dollarName\"/*nonNLS*/), null);\r", "-\t\t\treturn new Status(IStatus.WARNING, JavaCore.PLUGIN_ID, -1, \"By convention, Java type names usually start with an uppercase letter.\", null);\r", "+\t\t\treturn new Status(IStatus.WARNING, JavaCore.PLUGIN_ID, -1, Util.bind(\"convention.type.lowercaseName\"/*nonNLS*/), null);\r", "-\t\treturn new Status(IStatus.OK, JavaCore.PLUGIN_ID, -1, \"OK\", null);\r", "+\t\treturn new Status(IStatus.OK, JavaCore.PLUGIN_ID, -1, \"OK\"/*nonNLS*/, null);\r", "-\t\treturn new Status(IStatus.ERROR, JavaCore.PLUGIN_ID, -1, \"The type name \" + name + \" is not a valid identifier.\", null);\r", "+\t\treturn new Status(IStatus.ERROR, JavaCore.PLUGIN_ID, -1, Util.bind(\"convention.type.invalidName\"/*nonNLS*/, name), null);\r"]}], "num": 71892}