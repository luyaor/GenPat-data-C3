{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2ea1aff14a7931620486944fff4857f9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1349294d11442b5940908d27db6511c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "e3beff3ddcf0f1da8ef71b6358fa3af7711e703f", "commitAfterChange": "6b8881c9416240b1f58c929f9746f01644e60deb", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " protected void reportMatching(TypeParameter[] typeParameters, IJavaElement enclosingElement, IJavaElement parent, Binding binding, MatchingNodeSet nodeSet) throws CoreException", "signatureAfterChange": " protected void reportMatching(TypeParameter[] typeParameters, IJavaElement enclosingElement, IJavaElement parent, Binding binding, MatchingNodeSet nodeSet) throws CoreException", "diff": ["-\t\t\t\t\t\t\t\tlevel = (Integer) nodeSet.matchingNodes.removeKey(wildcardBound);", "-\t\t\t\t\t\t\t\tif (level != null) {", "-\t\t\t\t\t\t\t\t\tIJavaElement localElement = createHandle(typeParameter, enclosingElement);", "-\t\t\t\t\t\t\t\t\tthis.patternLocator.matchReportReference(wildcardBound, enclosingElement, localElement, null, binding, level.intValue(), this);", "-\t\t\t\t\t\t\t\t}", "+\t                            if (wildcardBound != null) {", "+\t\t\t\t\t\t\t\t\tlevel = (Integer) nodeSet.matchingNodes.removeKey(wildcardBound);", "+\t\t\t\t\t\t\t\t\tif (level != null) {", "+\t\t\t\t\t\t\t\t\t\tIJavaElement localElement = createHandle(typeParameter, enclosingElement);", "+\t\t\t\t\t\t\t\t\t\tthis.patternLocator.matchReportReference(wildcardBound, enclosingElement, localElement, null, binding, level.intValue(), this);", "+\t\t\t\t\t\t\t\t\t}", "+\t                            }", "-\t\t\t\t\t\t\t\t\tlevel = (Integer) nodeSet.matchingNodes.removeKey(wildcardBound);", "-\t\t\t\t\t\t\t\t\tif (level != null) {", "-\t\t\t\t\t\t\t\t\t\tIJavaElement localElement = createHandle(typeParameter, enclosingElement);", "-\t\t\t\t\t\t\t\t\t\tthis.patternLocator.matchReportReference(wildcardBound, enclosingElement, localElement, null, binding, level.intValue(), this);", "-\t\t\t\t\t\t\t\t\t}", "+\t\t                            if (wildcardBound != null) {", "+\t\t\t\t\t\t\t\t\t\tlevel = (Integer) nodeSet.matchingNodes.removeKey(wildcardBound);", "+\t\t\t\t\t\t\t\t\t\tif (level != null) {", "+\t\t\t\t\t\t\t\t\t\t\tIJavaElement localElement = createHandle(typeParameter, enclosingElement);", "+\t\t\t\t\t\t\t\t\t\t\tthis.patternLocator.matchReportReference(wildcardBound, enclosingElement, localElement, null, binding, level.intValue(), this);", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t                            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2664083d06ac1c731ea31aa0539f2766", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "06c1fc5d4dd55fd1e0b31649f37b30f27170e633", "commitAfterChange": "e5d472ae376881b61d2a17c3e23cd62b7ed964f0", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " protected void reportMatching(TypeParameter[] typeParameters, IJavaElement enclosingElement, IJavaElement parent, Binding binding, MatchingNodeSet nodeSet) throws CoreException", "signatureAfterChange": " protected void reportMatching(TypeParameter[] typeParameters, IJavaElement enclosingElement, IJavaElement parent, Binding binding, MatchingNodeSet nodeSet) throws CoreException", "diff": ["+\t\t\t\tif (typeParameter.type instanceof ParameterizedSingleTypeReference) {", "+                    ParameterizedSingleTypeReference paramSTR = (ParameterizedSingleTypeReference) typeParameter.type;", "+                    if (paramSTR.typeArguments != null) {", "+                    \tint length = paramSTR.typeArguments.length;", "+                    \tfor (int k=0; k<length; k++) {", "+\t\t\t\t\t\t\tTypeReference typeArgument = paramSTR.typeArguments[k];", "+\t\t\t\t\t\t\tlevel = (Integer) nodeSet.matchingNodes.removeKey(typeArgument);", "+\t\t\t\t\t\t\tif (level != null) {", "+\t\t\t\t\t\t\t\tIJavaElement localElement = createHandle(typeParameter, enclosingElement);", "+\t\t\t\t\t\t\t\tthis.patternLocator.matchReportReference(typeArgument, enclosingElement, localElement, null, binding, level.intValue(), this);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (typeArgument instanceof Wildcard) {", "+\t                            TypeReference wildcardBound = ((Wildcard) typeArgument).bound;", "+\t\t\t\t\t\t\t\tlevel = (Integer) nodeSet.matchingNodes.removeKey(wildcardBound);", "+\t\t\t\t\t\t\t\tif (level != null) {", "+\t\t\t\t\t\t\t\t\tIJavaElement localElement = createHandle(typeParameter, enclosingElement);", "+\t\t\t\t\t\t\t\t\tthis.patternLocator.matchReportReference(wildcardBound, enclosingElement, localElement, null, binding, level.intValue(), this);", "+\t\t\t\t\t\t\t\t}", "+                            }", "+                    \t}", "+                    }", "+\t\t\t\t}", "-\t\t\t\t\tlevel = (Integer) nodeSet.matchingNodes.removeKey(typeParameter.bounds[j]);", "+\t\t\t\t\tTypeReference typeParameterBound = typeParameter.bounds[j];", "+\t\t\t\t\tlevel = (Integer) nodeSet.matchingNodes.removeKey(typeParameterBound);", "-\t\t\t\t\t\tthis.patternLocator.matchReportReference(typeParameter.bounds[j], enclosingElement, localElement, null, binding, level.intValue(), this);", "+\t\t\t\t\t\tthis.patternLocator.matchReportReference(typeParameterBound, enclosingElement, localElement, null, binding, level.intValue(), this);", "+\t\t\t\t\tif (typeParameterBound instanceof ParameterizedSingleTypeReference) {", "+\t                    ParameterizedSingleTypeReference paramSTR = (ParameterizedSingleTypeReference) typeParameterBound;", "+\t                    if (paramSTR.typeArguments != null) {", "+\t                    \tint length = paramSTR.typeArguments.length;", "+\t                    \tfor (int k=0; k<length; k++) {", "+\t\t\t\t\t\t\t\tTypeReference typeArgument = paramSTR.typeArguments[k];", "+\t\t\t\t\t\t\t\tlevel = (Integer) nodeSet.matchingNodes.removeKey(typeArgument);", "+\t\t\t\t\t\t\t\tif (level != null) {", "+\t\t\t\t\t\t\t\t\tIJavaElement localElement = createHandle(typeParameter, enclosingElement);", "+\t\t\t\t\t\t\t\t\tthis.patternLocator.matchReportReference(typeArgument, enclosingElement, localElement, null, binding, level.intValue(), this);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tif (typeArgument instanceof Wildcard) {", "+\t\t                            TypeReference wildcardBound = ((Wildcard) typeArgument).bound;", "+\t\t\t\t\t\t\t\t\tlevel = (Integer) nodeSet.matchingNodes.removeKey(wildcardBound);", "+\t\t\t\t\t\t\t\t\tif (level != null) {", "+\t\t\t\t\t\t\t\t\t\tIJavaElement localElement = createHandle(typeParameter, enclosingElement);", "+\t\t\t\t\t\t\t\t\t\tthis.patternLocator.matchReportReference(wildcardBound, enclosingElement, localElement, null, binding, level.intValue(), this);", "+\t\t\t\t\t\t\t\t\t}", "+\t                            }", "+\t                    \t}", "+\t                    }", "+                    }"]}], "num": 32782}