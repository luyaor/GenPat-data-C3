{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a9ed93fe3eaa28f5067821c0aa662c93", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57fdaf7a16f5adf3899d6b7ce21e0689", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "7fe004f7b5f0bcd4b089b0ee8582afd2bc4b79cd", "commitAfterChange": "530c48877da8402a05b3f0b84990331c9acd9df4", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r \tpublic void locateMatches(String[] filePaths, IWorkspace workspace)\r \t\tthrows JavaModelException", "signatureAfterChange": "\r \tpublic void locateMatches(String[] filePaths, IWorkspace workspace)\r \t\tthrows JavaModelException", "diff": ["-\t\tthis.potentialMatches = new PotentialMatch[10];\r", "-\t\tthis.potentialMatchesLength = 0;\r", "+\t\tthis.matchingOpenables = new MatchingOpenableSet();\r", "-\t\t\t\t\t\t\tthis.locateMatches();\r", "+\t\t\t\t\t\t\tthis.locateMatches(previousJavaProject);\r", "-\t\t\t\t\t\tthis.potentialMatchesLength = 0;\r", "+\t\t\t\t\t\tthis.matchingOpenables = new MatchingOpenableSet();\r", "-\t\t\t// add potential match\r", "-\t\t\tthis.addPotentialMatch(resource, openable);\r", "+\t\t\t// add matching openable\r", "+\t\t\tthis.addMatchingOpenable(resource, openable);\r", "-\t\t\t\tthis.locateMatches();\r", "+\t\t\t\tthis.locateMatches(previousJavaProject);\r", "-\t\t\tthis.potentialMatchesLength = 0;\r", "+\t\t\tthis.matchingOpenables = new MatchingOpenableSet();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3a159a21da7b2eb2875b15c00548b78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "d4a90dd90535197bda12b521c603853c2f8eb60c", "commitAfterChange": "d473849794f95ce2b5cbae060ffe683ee81ff056", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 33, "signatureBeforeChange": " protected void process(PossibleMatch possibleMatch, boolean bindingsWereCreated) throws CoreException", "signatureAfterChange": " protected void process(PossibleMatch possibleMatch, boolean bindingsWereCreated) throws CoreException", "diff": ["-\tMatchingNodeSet matchingNodeSet = null;", "-\t\tmatchingNodeSet = this.currentPossibleMatch.matchingNodeSet;", "-\t\tgetMethodBodies(unit, matchingNodeSet);", "+\t\tgetMethodBodies(unit);", "-\t\t\treduceParseTree(unit, matchingNodeSet);", "+\t\t\treduceParseTree(unit);", "-\t\t\tmatchingNodeSet.reportMatching(unit, true);", "+\t\t\treportMatching(unit, true);", "-\t\t\tmatchingNodeSet.reportMatching(unit, this.pattern.mustResolve);", "+\t\t\treportMatching(unit, this.pattern.mustResolve);", "-\t\tif (matchingNodeSet != null)", "-\t\t\tmatchingNodeSet.reportMatching(unit, true); // was partially resolved", "+\t\treportMatching(unit, true); // was partially resolved", "+\t\tthis.currentPossibleMatch.cleanUp();"]}], "num": 49061}