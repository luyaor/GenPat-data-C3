{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ca5cb149af7b5751cc82ad807eda320b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10f4333eb767bfb9df159817963b4c30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Case.java", "commitBeforeChange": "eb26a7cfa6d0bf96c880e80bcef15852e78da4ed", "commitAfterChange": "9d986e41486f99fe2903478c440ec46ac9aa7eec", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic Constant resolveCase( \t\tBlockScope scope, \t\tTypeBinding testTb, \t\tSwitchStatement switchStatement)", "signatureAfterChange": "  \tpublic Constant resolveCase( \t\tBlockScope scope, \t\tTypeBinding switchType, \t\tSwitchStatement switchStatement)", "diff": ["-\t\tTypeBinding testTb,", "+\t\tTypeBinding switchType,", "-\t\tTypeBinding caseTb = constantExpression.resolveType(scope);", "-\t\tif (caseTb == null || testTb == null)", "+\t\tTypeBinding caseType = constantExpression.resolveType(scope);", "+\t\tif (caseType == null || switchType == null)", "-\t\tif (constantExpression.isConstantValueOfTypeAssignableToType(caseTb, testTb))", "+\t\tif (constantExpression.isConstantValueOfTypeAssignableToType(caseType, switchType))", "-\t\tif (Scope.areTypesCompatible(caseTb, testTb))", "+\t\tif (Scope.areTypesCompatible(caseType, switchType))", "-\t\t\tcaseTb,", "-\t\t\ttestTb);", "+\t\t\tcaseType,", "+\t\t\tswitchType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f196c86efc49252f3052111c3b25517", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SwitchStatement.java", "commitBeforeChange": "3ea68e3d465e2db503f32911235b79fc28e0b277", "commitAfterChange": "cb7e1f0df8a87f2b400ca058ed57dff2a93cd223", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope upperScope)", "diff": ["-\t\tTypeBinding testType = testExpression.resolveType(upperScope);", "+\t\tTypeBinding testType = expression.resolveType(upperScope);", "-\t\ttestExpression.implicitWidening(testType, testType);", "-\t\tif (!(testExpression.isConstantValueOfTypeAssignableToType(testType, IntBinding))) {", "+\t\texpression.implicitWidening(testType, testType);", "+\t\tif (!(expression.isConstantValueOfTypeAssignableToType(testType, IntBinding))) {", "-\t\t\t\tupperScope.problemReporter().incorrectSwitchType(testExpression, testType);", "+\t\t\t\tupperScope.problemReporter().incorrectSwitchType(expression, testType);"]}], "num": 24091}