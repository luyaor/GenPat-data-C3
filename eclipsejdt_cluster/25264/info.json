{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1d158b35d4a315d50d12404c7efcfcf7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b1a4c0f3a3510d9f7a25c2a108aeafd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/env/AccessRuleSet.java", "commitBeforeChange": "cb1229e517a2018e5263ed249b199ae2a321da49", "commitAfterChange": "4732df192beaa38106d940c4bfeefb54a9e4a1cf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public boolean equals(Object object)", "signatureAfterChange": " public boolean equals(Object object)", "diff": ["-\tif (object == null) {", "+\tif (!(object instanceof AccessRuleSet))", "-\t}", "-\tif (getClass() != object.getClass()) {", "-\t\treturn false;", "-\t}", "-\tif (this.classpathEntryType != otherRuleSet.classpathEntryType)", "-\t\treturn false;", "-\tif (this.classpathEntryName == null) {", "-\t\tif (otherRuleSet.classpathEntryName != null) {", "-\t\t\treturn false;", "-\t\t}", "-\t} else if (!this.classpathEntryName.equals(otherRuleSet.classpathEntryName)) {", "+\tif (this.classpathEntryType != otherRuleSet.classpathEntryType ||", "+\t\t\tthis.classpathEntryName == null && otherRuleSet.classpathEntryName != null ||", "+\t\t\t! this.classpathEntryName.equals(otherRuleSet.classpathEntryName)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77c14d3141ce36746a0b745736097322", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "49089cbae1addf8c1c39b3104b7cd1cbaddbc1e7", "commitAfterChange": "5deead051fd76da1bc6ad122fc16f2ab2fddd2ef", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": "  MethodBinding computeSubstituteMethod(MethodBinding inheritedMethod, MethodBinding currentMethod)", "signatureAfterChange": "  MethodBinding computeSubstituteMethod(MethodBinding inheritedMethod, MethodBinding currentMethod)", "diff": ["-\tif (inheritedMethod == null) return null;", "-\tif (currentMethod.parameters.length != inheritedMethod.parameters.length) return null; // no match", "-\treturn inheritedMethod;", "+\treturn computeSubstituteMethod(inheritedMethod, currentMethod, this.environment);"]}], "num": 25264}