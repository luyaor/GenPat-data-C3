{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c5665dd3c352c005391b3b0db7bee99e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3924b45c19f5e5a0f60253bcdeeda3fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 124, "signatureBeforeChange": " public void testHierarchyScope() throws CoreException", "signatureAfterChange": " public void testSearchScope01() throws CoreException", "diff": ["-public void testHierarchyScope() throws CoreException {", "-\tICompilationUnit cu = this. getCompilationUnit(\"JavaSearch\", \"src\", \"a9\", \"A.java\");", "-\tIType type = cu.getType(\"C\");", "-\tIJavaSearchScope scope = SearchEngine.createHierarchyScope(type);", "-\tassertTrue(\"a9.C should be included in hierarchy scope\", scope.encloses(type));", "-\tassertTrue(\"a9.A should be included in hierarchy scope\", scope.encloses(cu.getType(\"A\")));", "-\tassertTrue(\"a9.B should be included in hierarchy scope\", scope.encloses(cu.getType(\"B\")));", "-\tassertTrue(\"a9/A.java should be included in hierarchy scope\", scope.encloses(cu.getUnderlyingResource().getFullPath().toString()));", "-}", "+public void testSearchScope01() throws CoreException { // was testHierarchyScope", "+\tICompilationUnit cu = this. getCompilationUnit(\"JavaSearch\", \"src\", \"a9\", \"A.java\");", "+\tIType type = cu.getType(\"C\");", "+\tIJavaSearchScope scope = SearchEngine.createHierarchyScope(type);", "+\tassertTrue(\"a9.C should be included in hierarchy scope\", scope.encloses(type));", "+\tassertTrue(\"a9.A should be included in hierarchy scope\", scope.encloses(cu.getType(\"A\")));", "+\tassertTrue(\"a9.B should be included in hierarchy scope\", scope.encloses(cu.getType(\"B\")));", "+\tassertTrue(\"a9/A.java should be included in hierarchy scope\", scope.encloses(cu.getUnderlyingResource().getFullPath().toString()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "393a5f3461b0740380c52cc74f041024", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "60507801da6a601cb9ccd1a6711dd6f2c042109a", "commitAfterChange": "ce85ea384272e2d2a973888e0c9a4872544d60c3", "methodNumberBeforeChange": 152, "methodNumberAfterChange": 149, "signatureBeforeChange": " public void testSearchScope18() throws CoreException", "signatureAfterChange": " public void testSearchScope17() throws CoreException", "diff": ["+        IJavaSearchScope scope = SearchEngine.createStrictHierarchyScope(null, type, true, false, null);", "- */", "-public void testSearchScope18() throws CoreException {", "-    \tICompilationUnit cuC = this. getCompilationUnit(\"JavaSearch\", \"src\", \"a10\", \"C.java\");", "-        ICompilationUnit cuE = this. getCompilationUnit(\"JavaSearch\", \"src\", \"a10\", \"E.java\");", "-        IType type = cuC.getType(\"C\");", "-        IJavaSearchScope scope = SearchEngine.createHierarchyScope(null, type, true, false, null);", "-        ", "-        // method of a member of a sub-type:", "-        assertTrue(\"a10.F$G.m() should be included in hierarchy scope\", scope.encloses(cuE.getType(\"F\").getType(\"G\").getMethod(\"m\", new String[0])));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d956ef8da156670a6561d90917d7315", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "60507801da6a601cb9ccd1a6711dd6f2c042109a", "commitAfterChange": "ce85ea384272e2d2a973888e0c9a4872544d60c3", "methodNumberBeforeChange": 143, "methodNumberAfterChange": 139, "signatureBeforeChange": " public void testSearchScope11() throws CoreException", "signatureAfterChange": " public void testSearchScope07a() throws CoreException", "diff": ["+ */", "+public void testSearchScope07a() throws CoreException {", "+    \tICompilationUnit cuC = this. getCompilationUnit(\"JavaSearch\", \"src\", \"a10\", \"C.java\");", "+        IType type = cuC.getType(\"C\");", "+        IJavaSearchScope scope = SearchEngine.createStrictHierarchyScope(null, type, true, true, null);", "+        ", "+        // include focus type:", "+        assertTrue(\"a10.C should be included in hierarchy scope\", scope.encloses(type));", "+        assertTrue(\"a10/C.java should be included in hierarchy scope\", scope.encloses(cuC.getUnderlyingResource().getFullPath().toString()));       ", "- */", "-public void testSearchScope11() throws CoreException {", "-    \tICompilationUnit cuC = this. getCompilationUnit(\"JavaSearch\", \"src\", \"a10\", \"C.java\");", "-        ICompilationUnit cuE = this. getCompilationUnit(\"JavaSearch\", \"src\", \"a10\", \"E.java\");", "-        IType type = cuC.getType(\"C\");", "-        IJavaSearchScope scope = SearchEngine.createHierarchyScope(null, type, true, false, null);", "-        ", "-        // member of a sub-type:", "-        assertTrue(\"a10.F$G should be included in hierarchy scope\", scope.encloses(cuE.getType(\"F\").getType(\"G\")));"]}], "num": 31234}