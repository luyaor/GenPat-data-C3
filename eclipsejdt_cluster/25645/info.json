{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dd46a9ea1b40a2cd213916f01f74bb9a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05d56f267c8e6098b522b95dc04cd57a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ExceptionHandlingFlowContext.java", "commitBeforeChange": "580c728201df4f59e1400e6feeeb245b12a49163", "commitAfterChange": "a43591ed0206cd23fd90053f7c1436df8e9d56a7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic ExceptionHandlingFlowContext( \t\tFlowContext parent, \t\tASTNode associatedNode, \t\tReferenceBinding[] handledExceptions, \t\tBlockScope scope, \t\tUnconditionalFlowInfo flowInfo)", "signatureAfterChange": " \t \tpublic ExceptionHandlingFlowContext( \t\tFlowContext parent, \t\tASTNode associatedNode, \t\tReferenceBinding[] handledExceptions, \t\tBlockScope scope, \t\tUnconditionalFlowInfo flowInfo)", "diff": ["-\t\t\tboolean isUnchecked =", "-\t\t\t\t(scope.compareUncheckedException(handledExceptions[i]) != NotRelated);", "-\t\t\tif (isUnchecked) {", "+\t\t\tif (handledExceptions[i].isUncheckedException(true)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99881a765114d4b69ebb0de868e99c44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ExceptionHandlingFlowContext.java", "commitBeforeChange": "3d1407281a9de06ef3da16640a6462b66a69a15f", "commitAfterChange": "d60153f38977c8d3c207bd95c4a9121cd05934cc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public ExceptionHandlingFlowContext( \t\tFlowContext parent, \t\tASTNode associatedNode, \t\tReferenceBinding[] handledExceptions, \t\tBlockScope scope, \t\tUnconditionalFlowInfo flowInfo)", "signatureAfterChange": " \t public ExceptionHandlingFlowContext( \t\tFlowContext parent, \t\tASTNode associatedNode, \t\tReferenceBinding[] handledExceptions, \t\tBlockScope scope, \t\tUnconditionalFlowInfo flowInfo)", "diff": ["+\tboolean reachUnchecked = !scope.compilerOptions().", "+\t\treportUnusedDeclaredThrownExceptionIncludeUncheckedExceptions;", "-\t\t\tthis.isReached[cacheIndex] |= bitMask;", "+\t\t\tif (reachUnchecked) {", "+\t\t\t\tthis.isReached[cacheIndex] |= bitMask;", "+\t\t\t}"]}], "num": 25645}