{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "418ba7f428549687d09ecd68844b35f1", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3956e781ffbb8f2a6f3ca1775b1c16fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "32aae0cf1b9f94fe336a2b34d2b2b110c5363f4a", "commitAfterChange": "7fa614421be752542e93fc8394ff005421401e06", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 5, "signatureBeforeChange": " private void buildForProject(JavaProject project, ArrayList infos, ArrayList closedUnits, org.eclipse.jdt.core.ICompilationUnit[] workingCopies, HashSet localTypes, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " private void buildForProject(JavaProject project, ArrayList potentialSubtypes, org.eclipse.jdt.core.ICompilationUnit[] workingCopies, HashSet localTypes, IProgressMonitor monitor) throws JavaModelException", "diff": ["-private void buildForProject(JavaProject project, ArrayList infos, ArrayList closedUnits, org.eclipse.jdt.core.ICompilationUnit[] workingCopies, HashSet localTypes, IProgressMonitor monitor) throws JavaModelException {", "+private void buildForProject(JavaProject project, ArrayList potentialSubtypes, org.eclipse.jdt.core.ICompilationUnit[] workingCopies, HashSet localTypes, IProgressMonitor monitor) throws JavaModelException {", "-\tIGenericType[] genericTypes;", "-\tint infosSize = infos.size();", "-\tif (infosSize > 0) {", "-\t\tgenericTypes = new IGenericType[infosSize];", "-\t\tinfos.toArray(genericTypes);", "-\t} else {", "-\t\tgenericTypes = new IGenericType[0];", "-\t}", "-\torg.eclipse.jdt.core.ICompilationUnit[] closedCUs;", "-\tint closedUnitsSize = closedUnits.size();", "-\tif (closedUnitsSize > 0) {", "-\t\tclosedCUs = new org.eclipse.jdt.core.ICompilationUnit[closedUnitsSize];", "-\t\tclosedUnits.toArray(closedCUs);", "-\t} else {", "-\t\tclosedCUs = new org.eclipse.jdt.core.ICompilationUnit[0];", "-\t}", "+\tint openablesLength = potentialSubtypes.size();", "+\tOpenable[] openables = new Openable[openablesLength];", "+\tpotentialSubtypes.toArray(openables);", "-\tif (infosSize > 0 || closedUnitsSize > 0) {", "+\tif (openablesLength > 0) {", "-\t\t\tthis.hierarchyResolver.resolve(genericTypes, closedCUs, localTypes, monitor);", "+\t\t\tthis.hierarchyResolver.resolve(openables, localTypes, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45df1946556b6ce6b05304520e754805", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedHierarchyBuilder.java", "commitBeforeChange": "b17f0033873962e79cd540a0937b76249dec8a6c", "commitAfterChange": "360e136a8e044225071869fa38d7072ea1d3cdac", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " private void createTypeHierarchyBasedOnRegion(ArrayList allTypesInRegion, IProgressMonitor monitor)", "signatureAfterChange": " private void createTypeHierarchyBasedOnRegion(ArrayList allTypesInRegion, IProgressMonitor monitor)", "diff": ["-\tArrayList units = new ArrayList();", "+\tArrayList closedUnits = new ArrayList();", "-\t\t\tthis.addInfoFromElement((Openable)type.getOpenable(), infos, units, type.getPath().toString());", "+\t\t\tthis.addInfoFromElement((Openable)type.getOpenable(), infos, closedUnits, type.getPath().toString());", "-\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit[] compilationUnits;", "-\tint unitsSize = units.size();", "-\tif (unitsSize > 0) {", "-\t\tcompilationUnits = new org.eclipse.jdt.internal.compiler.env.ICompilationUnit[unitsSize];", "-\t\tunits.toArray(compilationUnits);", "+\tICompilationUnit[] closedCUs;", "+\tint closedUnitsSize = closedUnits.size();", "+\tif (closedUnitsSize > 0) {", "+\t\tclosedCUs = new ICompilationUnit[closedUnitsSize];", "+\t\tclosedUnits.toArray(closedCUs);", "-\t\tcompilationUnits = new org.eclipse.jdt.internal.compiler.env.ICompilationUnit[0];", "+\t\tclosedCUs = new ICompilationUnit[0];", "-\t\tif (monitor != null) monitor.beginTask(\"\", (infosSize+unitsSize) * 2/* 1 for build binding, 1 for connect hierarchy*/); //$NON-NLS-1$", "-\t\tif (infosSize > 0 || unitsSize > 0) {", "+\t\tif (monitor != null) monitor.beginTask(\"\", (infosSize+closedUnitsSize) * 2/* 1 for build binding, 1 for connect hierarchy*/); //$NON-NLS-1$", "+\t\tif (infosSize > 0 || closedUnitsSize > 0) {", "-\t\t\t\t\tthis.hierarchyResolver.resolve(genericTypes, compilationUnits, monitor);", "+\t\t\t\t\tthis.hierarchyResolver.resolve(genericTypes, closedCUs, null, monitor);", "-\t\t\t\tthis.hierarchyResolver.resolve(genericTypes, compilationUnits, monitor);", "+\t\t\t\tthis.hierarchyResolver.resolve(genericTypes, closedCUs, null, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb68f3beb4f9e7da90d0119bf3e54fa6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "b17f0033873962e79cd540a0937b76249dec8a6c", "commitAfterChange": "360e136a8e044225071869fa38d7072ea1d3cdac", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " private void buildForProject(JavaProject project, ArrayList infos, ArrayList units, org.eclipse.jdt.core.ICompilationUnit[] workingCopies, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " private void buildForProject(JavaProject project, ArrayList infos, ArrayList closedUnits, org.eclipse.jdt.core.ICompilationUnit[] workingCopies, HashSet localTypes, IProgressMonitor monitor) throws JavaModelException", "diff": ["-private void buildForProject(JavaProject project, ArrayList infos, ArrayList units, org.eclipse.jdt.core.ICompilationUnit[] workingCopies, IProgressMonitor monitor) throws JavaModelException {", "+private void buildForProject(JavaProject project, ArrayList infos, ArrayList closedUnits, org.eclipse.jdt.core.ICompilationUnit[] workingCopies, HashSet localTypes, IProgressMonitor monitor) throws JavaModelException {", "-\tICompilationUnit[] compilationUnits;", "-\tint unitsSize = units.size();", "-\tif (unitsSize > 0) {", "-\t\tcompilationUnits = new ICompilationUnit[unitsSize];", "-\t\tunits.toArray(compilationUnits);", "+\torg.eclipse.jdt.core.ICompilationUnit[] closedCUs;", "+\tint closedUnitsSize = closedUnits.size();", "+\tif (closedUnitsSize > 0) {", "+\t\tclosedCUs = new org.eclipse.jdt.core.ICompilationUnit[closedUnitsSize];", "+\t\tclosedUnits.toArray(closedCUs);", "-\t\tcompilationUnits = new ICompilationUnit[0];", "+\t\tclosedCUs = new org.eclipse.jdt.core.ICompilationUnit[0];", "-\tif (infosSize > 0 || unitsSize > 0) {", "+\tif (infosSize > 0 || closedUnitsSize > 0) {", "-\t\t\t\t\tReferenceBinding focusTypeBinding = this.hierarchyResolver.setFocusType(CharOperation.splitOn('.', fullyQualifiedName));", "-\t\t\t\t\tif (focusTypeBinding == null ", "-\t\t\t\t\t\t\t|| (!inProjectOfFocusType && (focusTypeBinding.tagBits & TagBits.HierarchyHasProblems) > 0)) {", "+\t\t\t\t\tif (!inProjectOfFocusType && project.getSearchableNameEnvironment().findType(CharOperation.splitOn('.', fullyQualifiedName)) == null) {", "-\t\t\tthis.hierarchyResolver.resolve(genericTypes, compilationUnits, monitor);", "+\t\t\tthis.hierarchyResolver.resolve(genericTypes, closedCUs, localTypes, monitor);"]}], "num": 56527}