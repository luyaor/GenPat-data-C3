{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f44229d77917786e02e7480dd33b3e72", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c7e5e6647a0000efa366500da38705f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ConditionalExpression.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic Expression getElseExpression()", "signatureAfterChange": "  \tpublic Expression getElseExpression()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.elseExpression = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.elseExpression, ELSE_EXPRESSION_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.elseExpression == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.elseExpression = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.elseExpression, ELSE_EXPRESSION_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc1fb7e472a7467d2f6dc7a9473774e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ConditionalExpression.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Expression getThenExpression()", "signatureAfterChange": "  \tpublic Expression getThenExpression()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.thenExpression = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.thenExpression, THEN_EXPRESSION_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.thenExpression == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.thenExpression = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.thenExpression, THEN_EXPRESSION_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 31076}