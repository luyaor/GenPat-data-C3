{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6ad66061b8f50980931e03e2e1a33f1e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d925cae1b7e044d67934e517437cdbc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AddJarFileToIndex.java", "commitBeforeChange": "82722cc3b99f12f3da7f4aa25913a010e20b9b56", "commitAfterChange": "045a67be23e966bc4b7f49b2b17d7449e71c3890", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\t\tIIndex index = (IIndex) manager.getIndex(this.indexPath, false, /*do not reuse index file*/ false /*do not create if none*/);", "+\t\t\tIIndex index = (IIndex) manager.getIndexForUpdate(this.indexPath, false, /*do not reuse index file*/ false /*do not create if none*/);", "-\t\t\tindex = manager.getIndex(this.indexPath, true, /*reuse index file*/ true /*create if none*/);", "+\t\t\tindex = manager.getIndexForUpdate(this.indexPath, true, /*reuse index file*/ true /*create if none*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c64b4de0a5acb67aae23fa4a475c350", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldDeclaration.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic void resolve(MethodScope initializationScope)", "signatureAfterChange": " \t \tpublic void resolve(MethodScope initializationScope)", "diff": ["-\t\t\t\t\tBinding existingVariable = outerScope.getBinding(this.name, BindingIds.VARIABLE, this, false /*do not resolve hidden field*/);", "+\t\t\t\t\tBinding existingVariable = outerScope.getBinding(this.name, Binding.VARIABLE, this, false /*do not resolve hidden field*/);", "-\t\t\tthis.type.resolvedType = this.binding.type; // update binding for type reference", "+\t\t\tif (this.type != null ) { // enum constants have no declared type", "+\t\t\t\tthis.type.resolvedType = this.binding.type; // update binding for type reference", "+\t\t\t}"]}], "num": 69380}