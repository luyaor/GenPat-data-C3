{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cef759570de83d74d1389988ec5214d9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33a503d8b36ed6206677416f96c164bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "  \tpublic void test037()", "signatureAfterChange": "  \tpublic void test037()", "diff": ["-\t\t\t\"1. ERROR in XX.java (at line 1)\\r\\n\" + ", "-\t\t\t\"\tpublic abstract class XX implements I, J { public abstract void foo(A<String> a); }\\r\\n\" + ", "+\t\t\t\"1. ERROR in XX.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic abstract class XX implements I, J { public abstract void foo(A<String> a); }\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in XX.java (at line 2)\\n\" + ", "+\t\t\t\"\tinterface I { void foo(A a); }\\n\" + ", "+\t\t\t\"\t                       ^\\n\" + ", "+\t\t\t\"Type safety: A is a raw type. References to generic type A<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"7. WARNING in XX.java (at line 4)\\n\" + ", "+\t\t\t\"\tinterface I { void foo(A a); }\\n\" + ", "+\t\t\t\"\t                       ^\\n\" + ", "+\t\t\t\"Type safety: A is a raw type. References to generic type A<T> should be parameterized\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 1)\\r\\n\" + ", "-\t\t\t\"\tpublic abstract class X extends Y implements I { }\\r\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic abstract class X extends Y implements I { }\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 2)\\n\" + ", "+\t\t\t\"\tinterface I { void foo(A a); }\\n\" + ", "+\t\t\t\"\t                       ^\\n\" + ", "+\t\t\t\"Type safety: A is a raw type. References to generic type A<T> should be parameterized\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 1)\\r\\n\" + ", "-\t\t\t\"\tpublic abstract class X extends Y implements I { }\\r\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic abstract class X extends Y implements I { }\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tclass Y { void foo(A a) {} }\\n\" + ", "+\t\t\t\"\t                   ^\\n\" + ", "+\t\t\t\"Type safety: A is a raw type. References to generic type A<T> should be parameterized\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8e4fdf059dcd27cb9d85f34f79c2c3f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 783, "methodNumberAfterChange": 783, "signatureBeforeChange": " public void test777()", "signatureAfterChange": " public void test777()", "diff": ["-\t\t\"1. ERROR in X.java (at line 16)\\r\\n\" + ", "-\t\t\"\tpublic class E implements B<Integer>, C {\\r\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\"\tpublic interface C extends B {\\n\" + ", "+\t\t\"\t                           ^\\n\" + ", "+\t\t\"Type safety: X.B is a raw type. References to generic type X.B<T> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 16)\\n\" + ", "+\t\t\"\tpublic class E implements B<Integer>, C {\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 23)\\r\\n\" + ", "-\t\t\"\tpublic class F extends D implements C {\\r\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 23)\\n\" + ", "+\t\t\"\tpublic class F extends D implements C {\\n\" + ", "-\t\t\"3. WARNING in X.java (at line 24)\\r\\n\" + ", "-\t\t\"\tpublic Integer a() {\\r\\n\" + ", "+\t\t\"4. WARNING in X.java (at line 24)\\n\" + ", "+\t\t\"\tpublic Integer a() {\\n\" + ", "-\t\t\"4. ERROR in X.java (at line 43)\\r\\n\" + ", "-\t\t\"\tpublic class J extends I implements G {\\r\\n\" + ", "+\t\t\"5. WARNING in X.java (at line 33)\\n\" + ", "+\t\t\"\tpublic interface H extends G {\\n\" + ", "+\t\t\"\t                           ^\\n\" + ", "+\t\t\"Type safety: X.G is a raw type. References to generic type X.G<T> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"6. ERROR in X.java (at line 43)\\n\" + ", "+\t\t\"\tpublic class J extends I implements G {\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"7. WARNING in X.java (at line 43)\\n\" + ", "+\t\t\"\tpublic class J extends I implements G {\\n\" + ", "+\t\t\"\t                                    ^\\n\" + ", "+\t\t\"Type safety: X.G is a raw type. References to generic type X.G<T> should be parameterized\\n\" + "]}], "num": 55868}