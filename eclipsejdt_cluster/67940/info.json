{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fd6dd813cc61770028b810757b0c79a2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92e41b905ecdf00ff46ceeef2642ecd5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "signatureAfterChange": "  \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "diff": ["-\t\tcodeStream.recordPositionsFrom(pc, type.sourceStart);", "+\t\tif (this.type != null) { // null for enum constant body", "+\t\t\tcodeStream.recordPositionsFrom(pc, this.type.sourceStart);", "+\t\t} else {", "+\t\t\t// push enum constant name and ordinal", "+\t\t\tcodeStream.ldc(String.valueOf(enumConstant.name));", "+\t\t\tcodeStream.generateInlinedValue(enumConstant.binding.id);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb829b10959ebbc8eb278a25b6c8e2ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "signatureAfterChange": "  \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "diff": ["-\t\tcodeStream.recordPositionsFrom(pc, type.sourceStart);", "-", "+\t\tif (this.type != null) { // null for enum constant body", "+\t\t\tcodeStream.recordPositionsFrom(pc, this.type.sourceStart);", "+\t\t} else {", "+\t\t\t// push enum constant name and ordinal", "+\t\t\tcodeStream.ldc(String.valueOf(enumConstant.name));", "+\t\t\tcodeStream.generateInlinedValue(enumConstant.binding.id);", "+\t\t}"]}], "num": 67940}