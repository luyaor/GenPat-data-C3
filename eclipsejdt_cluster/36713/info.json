{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff7e56499d1ec1389a972fd5ce887581", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4909bff806ff0b1e91826a052b8e5a84", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementDelta.java", "commitBeforeChange": "b64d1790a5f1d194b864b70767eab7f336d609e0", "commitAfterChange": "13917151fd6e90489d7ba2ed9db47ea52955dbf3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r protected void addAffectedChild(JavaElementDelta child)", "signatureAfterChange": "\r protected void addAffectedChild(JavaElementDelta child)", "diff": ["-\tIJavaElementDelta sameChild = null;\r", "+\tIJavaElementDelta existingChild = null;\r", "+\tint existingChildIndex = -1;\r", "-\t\t\t\tsameChild = fAffectedChildren[i];\r", "+\t\t\t\texistingChild = fAffectedChildren[i];\r", "+\t\t\t\texistingChildIndex = i;\r", "-\tif (sameChild == null) { //new affected child\r", "-\r", "+\tif (existingChild == null) { //new affected child\r", "-\t\tIJavaElementDelta[] children = child.getAffectedChildren();\r", "-\t\tfor (int i = 0; i < children.length; i++) {\r", "-\t\t\tJavaElementDelta childsChild = (JavaElementDelta) children[i];\r", "-\t\t\t((JavaElementDelta) sameChild).addAffectedChild(childsChild);\r", "+\t\tswitch (existingChild.getKind()) {\r", "+\t\t\tcase ADDED:\r", "+\t\t\t\tswitch (child.getKind()) {\r", "+\t\t\t\t\tcase ADDED: // child was added then added -> it is added\r", "+\t\t\t\t\tcase CHANGED: // child was added then changed -> it is added\r", "+\t\t\t\t\t\treturn;\r", "+\t\t\t\t\tcase REMOVED: // child was added then removed -> noop\r", "+\t\t\t\t\t\tfAffectedChildren = this.removeAndShrinkArray(fAffectedChildren, existingChildIndex);\r", "+\t\t\t\t\t\treturn;\r", "+\t\t\t\t}\r", "+\t\t\t\tbreak;\r", "+\t\t\tcase REMOVED:\r", "+\t\t\t\tswitch (child.getKind()) {\r", "+\t\t\t\t\tcase ADDED: // child was removed then added -> it is changed\r", "+\t\t\t\t\t\tchild.fKind = CHANGED;\r", "+\t\t\t\t\t\tfAffectedChildren[existingChildIndex] = child;\r", "+\t\t\t\t\t\treturn;\r", "+\t\t\t\t\tcase CHANGED: // child was removed then changed -> it is removed\r", "+\t\t\t\t\tcase REMOVED: // child was removed then removed -> it is removed\r", "+\t\t\t\t\t\treturn;\r", "+\t\t\t\t}\r", "+\t\t\t\tbreak;\r", "+\t\t\tcase CHANGED:\r", "+\t\t\t\tswitch (child.getKind()) {\r", "+\t\t\t\t\tcase ADDED: // child was changed then added -> it is added\r", "+\t\t\t\t\tcase REMOVED: // child was changed then removed -> it is removed\r", "+\t\t\t\t\t\tfAffectedChildren[existingChildIndex] = child;\r", "+\t\t\t\t\t\treturn;\r", "+\t\t\t\t\tcase CHANGED: // child was changed then changed -> it is changed\r", "+\t\t\t\t\t\tIJavaElementDelta[] children = child.getAffectedChildren();\r", "+\t\t\t\t\t\tfor (int i = 0; i < children.length; i++) {\r", "+\t\t\t\t\t\t\tJavaElementDelta childsChild = (JavaElementDelta) children[i];\r", "+\t\t\t\t\t\t\t((JavaElementDelta) existingChild).addAffectedChild(childsChild);\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t\treturn;\r", "+\t\t\t\t}\r", "+\t\t\t\tbreak;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d880a1c1daae777ba0b267044ebc95ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "9edf0a990e69fc752ead21c476a00fb874aa8f40", "commitAfterChange": "a5351a8c92738db988d5e1c19e4b7b0af64944e3", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 40, "signatureBeforeChange": "\r public void mergeDeltas()", "signatureAfterChange": "\r public void mergeDeltas()", "diff": ["-\tIterator deltas = null;\r", "-\tif (fJavaModelDeltas.isEmpty()) {\r", "-\t\t//deltas = fResourceDeltas.elements();\r", "-\t\treturn;\r", "-\t} else {\r", "-\t\tdeltas = fJavaModelDeltas.iterator();\r", "-\t}\t\r", "-\tif (deltas != null) {\r", "-\t\tJavaElementDelta rootDelta = new JavaElementDelta(getJavaModel());\r", "-\t\tboolean insertedTree = false;\r", "-\t\twhile (deltas.hasNext()) {\r", "-\t\t\tIJavaElementDelta delta = (IJavaElementDelta)deltas.next();\r", "-\t\t\tIJavaElementDelta[] children = delta.getAffectedChildren();\r", "-\t\t\tfor (int j = 0; j < children.length; j++) {\r", "-\t\t\t\tJavaElementDelta projectDelta = (JavaElementDelta) children[j];\r", "-\t\t\t\trootDelta.insertDeltaTree(projectDelta.getElement(), projectDelta);\r", "-\t\t\t\tinsertedTree = true;\r", "-\t\t\t}\r", "+\tif (fJavaModelDeltas.size() <= 1) return;\r", "+\t\r", "+\tIterator deltas = fJavaModelDeltas.iterator();\r", "+\tJavaElementDelta rootDelta = new JavaElementDelta(getJavaModel());\r", "+\tboolean insertedTree = false;\r", "+\twhile (deltas.hasNext()) {\r", "+\t\tIJavaElementDelta delta = (IJavaElementDelta)deltas.next();\r", "+\t\tIJavaElementDelta[] children = delta.getAffectedChildren();\r", "+\t\tfor (int j = 0; j < children.length; j++) {\r", "+\t\t\tJavaElementDelta projectDelta = (JavaElementDelta) children[j];\r", "+\t\t\trootDelta.insertDeltaTree(projectDelta.getElement(), projectDelta);\r", "+\t\t\tinsertedTree = true;\r", "-\t\tif (insertedTree){\r", "-\t\t\tif (fJavaModelDeltas.isEmpty()) {\r", "-\t\t\t\tfResourceDeltas = new ArrayList(1);\r", "-\t\t\t\tfResourceDeltas.add(rootDelta);\r", "-\t\t\t} else {\r", "-\t\t\t\tfJavaModelDeltas = new ArrayList(1);\r", "-\t\t\t\tfJavaModelDeltas.add(rootDelta);\r", "-\t\t\t}\t\r", "-\t\t}\r", "-\t\telse {\r", "-\t\t\tif (fJavaModelDeltas.isEmpty()) {\r", "-\t\t\t\tfResourceDeltas = new ArrayList(0);\r", "-\t\t\t} else {\r", "-\t\t\t\tfJavaModelDeltas = new ArrayList(0);\r", "-\t\t\t}\t\r", "-\t\t}\r", "+\t}\r", "+\tif (insertedTree){\r", "+\t\tif (fJavaModelDeltas.isEmpty()) {\r", "+\t\t\tfResourceDeltas = new ArrayList(1);\r", "+\t\t\tfResourceDeltas.add(rootDelta);\r", "+\t\t} else {\r", "+\t\t\tfJavaModelDeltas = new ArrayList(1);\r", "+\t\t\tfJavaModelDeltas.add(rootDelta);\r", "+\t\t}\t\r", "+\t}\r", "+\telse {\r", "+\t\tif (fJavaModelDeltas.isEmpty()) {\r", "+\t\t\tfResourceDeltas = new ArrayList(0);\r", "+\t\t} else {\r", "+\t\t\tfJavaModelDeltas = new ArrayList(0);\r", "+\t\t}\t\r"]}], "num": 36713}