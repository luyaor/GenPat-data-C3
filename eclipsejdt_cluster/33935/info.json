{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2091c0e8e8a256b3a93d757e86609f27", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a62bc0c20aa48fd18ddfb17846e04ad5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 171, "methodNumberAfterChange": 171, "signatureBeforeChange": " \tprivate void findLocalMethods( \t\tchar[] methodName, \t\tTypeBinding[] typeArgTypes, \t\tTypeBinding[] argTypes, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems, \t\tchar[] castedReceiver, \t\tint receiverStart, \t\tint receiverEnd)", "signatureAfterChange": " \tprivate void findLocalMethods( \t\tchar[] methodName, \t\tTypeBinding[] typeArgTypes, \t\tTypeBinding[] argTypes, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems, \t\tchar[] castedReceiver, \t\tint receiverStart, \t\tint receiverEnd)", "diff": ["-\t\t\t\tif (method == otherMethod && receiverType == otherReceiverType)", "+\t\t\t\tif (method == otherMethod && TypeBinding.equalsEquals(receiverType, otherReceiverType))", "-\t\t\t\t\tif (receiverType == otherReceiverType) {", "+\t\t\t\t\tif (TypeBinding.equalsEquals(receiverType, otherReceiverType)) {", "-\t\t\tif (method.declaringClass != superTypeWithSameErasure) {", "+\t\t\tif (TypeBinding.notEquals(method.declaringClass, superTypeWithSameErasure)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd47ed2acaf991f021019c8dc7f146c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  void checkForRedundantSuperinterfaces(ReferenceBinding superclass, ReferenceBinding[] superInterfaces)", "signatureAfterChange": "  void checkForRedundantSuperinterfaces(ReferenceBinding superclass, ReferenceBinding[] superInterfaces)", "diff": ["-\t\t\t\t\tif (refs[r].resolvedType == toCheck) {", "+\t\t\t\t\tif (TypeBinding.equalsEquals(refs[r].resolvedType, toCheck)) {", "-\t\t\t\t\t\t\tif (refs[r].resolvedType == inheritedInterface) {", "+\t\t\t\t\t\t\tif (TypeBinding.equalsEquals(refs[r].resolvedType, inheritedInterface)) {", "-\t\t\t\t\t\t\tif (refs[r].resolvedType == inheritedInterface) {", "+\t\t\t\t\t\t\tif (TypeBinding.equalsEquals(refs[r].resolvedType, inheritedInterface)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc9f1f82aecd9eeb282b572c24a61be7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 145, "methodNumberAfterChange": 145, "signatureBeforeChange": " \tprivate void findFields( \t\tchar[] fieldName, \t\tFieldBinding[] fields, \t\tScope scope, \t\tObjectVector fieldsFound, \t\tObjectVector localsFound, \t\tboolean onlyStaticFields, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems, \t\tchar[] castedReceiver, \t\tint receiverStart, \t\tint receiverEnd)", "signatureAfterChange": " \tprivate void findFields( \t\tchar[] fieldName, \t\tFieldBinding[] fields, \t\tScope scope, \t\tObjectVector fieldsFound, \t\tObjectVector localsFound, \t\tboolean onlyStaticFields, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems, \t\tchar[] castedReceiver, \t\tint receiverStart, \t\tint receiverEnd)", "diff": ["-\t\t\t\tif (field == otherField && receiverType == otherReceiverType)", "+\t\t\t\tif (field == otherField && TypeBinding.equalsEquals(receiverType, otherReceiverType))", "-\t\t\t\t\t\tif (field.declaringClass == scope.getJavaLangObject())", "+\t\t\t\t\t\tif (TypeBinding.equalsEquals(field.declaringClass, scope.getJavaLangObject()))", "-\t\t\t\t\tif (declarationType.isAnonymousType() && declarationType != invocationScope.enclosingSourceType()) {", "+\t\t\t\t\tif (declarationType.isAnonymousType() && TypeBinding.notEquals(declarationType, invocationScope.enclosingSourceType())) {"]}], "num": 33935}