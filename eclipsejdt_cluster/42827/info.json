{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e989ea4ab1ff971567183d462ce8a72e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2581e6f252e2465379a2337ea301b2da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "9bef1c9466abe8b593c4d2051a95cedc2ae4d102", "commitAfterChange": "2b3faf03e480607600ec10a4a39f50f16f7be45e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public final boolean canBeSeenBy(TypeBinding receiverType, InvocationSite invocationSite, Scope scope)", "signatureAfterChange": " public final boolean canBeSeenBy(TypeBinding receiverType, InvocationSite invocationSite, Scope scope)", "diff": ["+\tif (invocationType == null) // static import call", "+\t\treturn !isPrivate() && scope.getCurrentPackage() == declaringClass.fPackage;", "+", "-\t\t\t\tif (invocationSite.isSuperAccess()){", "+\t\t\t\tif (invocationSite.isSuperAccess())", "-\t\t\t\t}", "-\t\t\t\tif (receiverType instanceof ArrayBinding){", "+\t\t\t\tif (receiverType instanceof ArrayBinding)", "-\t\t\t\t}", "-\t\t\t\tif (isStatic()){", "+\t\t\t\tif (isStatic()) {", "-\t\t\t\tif (currentType == receiverErasure || ((ReferenceBinding)receiverErasure).findSuperTypeWithSameErasure(currentType) != null){", "+\t\t\t\tif (currentType == receiverErasure || ((ReferenceBinding)receiverErasure).findSuperTypeWithSameErasure(currentType) != null) {", "-\t\t\t\tif (receiverType.isTypeVariable() && ((TypeVariableBinding) receiverType).isErasureBoundTo(declaringClass.erasure())) {", "+\t\t\t\tif (receiverType.isTypeVariable() && ((TypeVariableBinding) receiverType).isErasureBoundTo(declaringClass.erasure()))", "-\t\t\t\t}", "-\tPackageBinding declaringPackage;", "-\tif (invocationType.fPackage != (declaringPackage = declaringClass.fPackage)) return false;", "+\tPackageBinding declaringPackage = declaringClass.fPackage;", "+\tif (invocationType.fPackage != declaringPackage) return false;", "-\t\tPackageBinding currentPackage;", "+\t\tPackageBinding currentPackage = currentType.fPackage;", "-\t\tif ((currentPackage = currentType.fPackage) != null && currentPackage != declaringPackage) return false;", "+\t\tif (currentPackage != null && currentPackage != declaringPackage) return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59d46c1d7656558a7bbce5aeef07ac20", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/FieldBinding.java", "commitBeforeChange": "9bef1c9466abe8b593c4d2051a95cedc2ae4d102", "commitAfterChange": "2b3faf03e480607600ec10a4a39f50f16f7be45e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public final boolean canBeSeenBy(TypeBinding receiverType, InvocationSite invocationSite, Scope scope)", "signatureAfterChange": "  public final boolean canBeSeenBy(TypeBinding receiverType, InvocationSite invocationSite, Scope scope)", "diff": ["+\tif (invocationType == null) // static import call", "+\t\treturn !isPrivate() && scope.getCurrentPackage() == declaringClass.fPackage;", "+", "-\t\t", "+", "-\t\t\t\tif (invocationSite.isSuperAccess()){", "+\t\t\t\tif (invocationSite.isSuperAccess())", "-\t\t\t\t}", "-\t\t\t\tif (receiverType instanceof ArrayBinding){", "+\t\t\t\tif (receiverType instanceof ArrayBinding)", "-\t\t\t\t}", "-\t\t\t\tif (isStatic()){", "+\t\t\t\tif (isStatic()) {", "-\t\t\t\tif (currentType == receiverErasure || receiverErasure.findSuperTypeWithSameErasure(currentType) != null){", "+\t\t\t\tif (currentType == receiverErasure || receiverErasure.findSuperTypeWithSameErasure(currentType) != null) {", "-\t\t\t\tif (receiverType.isTypeVariable() && ((TypeVariableBinding) receiverType).isErasureBoundTo(declaringClass.erasure())) {", "+\t\t\t\tif (receiverType.isTypeVariable() && ((TypeVariableBinding) receiverType).isErasureBoundTo(declaringClass.erasure()))", "-\t\t\t\t}", "-\t\t\tReferenceBinding outerDeclaringClass = (ReferenceBinding)declaringClass.erasure();", "+\t\t\tReferenceBinding outerDeclaringClass = (ReferenceBinding) declaringClass.erasure();", "-\tif (invocationType.fPackage != (declaringPackage = declaringClass.fPackage)) return false;", "+\tif (invocationType.fPackage != declaringPackage) return false;", "-\t\tPackageBinding currentPackage;", "+\t\tPackageBinding currentPackage = currentType.fPackage;", "-\t\tif ((currentPackage = currentType.fPackage) != null && currentPackage != declaringPackage) return false;", "+\t\tif (currentPackage != null && currentPackage != declaringPackage) return false;"]}], "num": 42827}