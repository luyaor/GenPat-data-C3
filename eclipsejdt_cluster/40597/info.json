{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eb0c9e3d9738fa98c33827119d48c330", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9137a26966041728224fe1de36cf73ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "65e1f9794af1b0b3028b4c4ccf6c8c82d9c2fa61", "commitAfterChange": "a443bde4ac794ade15630c52c634e854501ba28b", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 51, "signatureBeforeChange": "  \tprivate boolean printBlockComment(int currentTokenStartPosition, int currentTokenEndPosition)", "signatureAfterChange": "  \tprivate boolean printBlockComment(int currentTokenStartPosition, int currentTokenEndPosition)", "diff": ["-\t\tboolean openedString = false;", "-\t\t\t\tString msg = iie.getMessage();", "-\t\t\t\tboolean insertSpace = (previousToken == TerminalTokens.TokenNameWHITESPACE || newLine) && !firstWord;", "-\t\t\t\tif (msg == Scanner.INVALID_CHARACTER_CONSTANT) {", "-\t\t\t\t\tif (insertSpace) {", "-\t\t\t\t\t\ttokensBuffer.append(' ');", "-\t\t\t\t\t}", "-\t\t\t\t\ttokensBuffer.append('\\'');", "-\t\t\t\t} else if (msg == Scanner.INVALID_CHAR_IN_STRING) {", "-\t\t\t\t\tif (openedString) {", "-\t\t\t\t\t\topenedString = false;", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tif (insertSpace) {", "-\t\t\t\t\t\t\ttokensBuffer.append(' ');", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\topenedString = true;", "-\t\t\t\t\t}", "-\t\t\t\t\ttokensBuffer.append('\"');", "-\t\t\t\t} else {", "-\t\t\t\t\t// skip failure", "-\t\t\t\t}", "-\t\t\t\t// Need to retrieve correct position", "-\t\t\t\tthis.scanner.resetTo(this.scanner.startPosition, currentTokenEndPosition-1);", "-\t\t\t\tthis.scanner.getNextChar();", "-\t\t\t\tpreviousToken = 2000;", "+\t    \t\ttoken = consumeInvalidToken(currentTokenEndPosition-1);", "-\t\t\t\tcontinue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe20c9b29691f5121c84b6d55ecab166", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "00cabdb6b90ee48364f71e75a5da5edca1e7837c", "commitAfterChange": "fcccc4dd1377e549112e0bdc9a74b0eb625c6ab2", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " \tprivate void printJavadocTextLine(StringBuffer buffer, int textStart, int textEnd, FormatJavadocBlock block, boolean firstText, boolean needIndentation, boolean isHtmlTag)", "signatureAfterChange": " \tprivate void printJavadocTextLine(StringBuffer buffer, int textStart, int textEnd, FormatJavadocBlock block, boolean firstText, boolean needIndentation, boolean isHtmlTag)", "diff": ["-\t\tboolean headerLine = block.isHeaderLine() && this.lastNumberOfNewLines == 0;", "+\t\tboolean headerLine = (buffer.indexOf(Util.LINE_SEPARATOR) < 0) && block.isHeaderLine() && this.lastNumberOfNewLines == 0;", "+\t\t\tboolean openedString  =false;", "+\t\t\t\t\tboolean insertSpace = previousToken == TerminalTokens.TokenNameWHITESPACE;", "+\t\t\t\t\t\tif (insertSpace) {", "+\t\t\t\t\t\t\tbuffer.append(' ');", "+\t\t\t\t\t\t\tthis.column++;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tthis.column++;", "+\t\t\t\t\t\tif (openedString) {", "+\t\t\t\t\t\t\topenedString = false;", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tif (insertSpace) {", "+\t\t\t\t\t\t\t\tbuffer.append(' ');", "+\t\t\t\t\t\t\t\tthis.column++;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\topenedString = true;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tthis.column++;", "-\t\t\t\t\tthis.column++;", "+\t\t\t\t\tpreviousToken = 1;", "-\t\t\t    \tthis.column = firstColumn;", "+\t\t\t    \tthis.column = headerLine ? firstColumn-1 : firstColumn;"]}], "num": 40597}