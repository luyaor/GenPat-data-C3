{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "043c1fea4b169d558a2c947b78733660", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09f7a8a6d631331a26aa9745f288b36c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "5fbb7a295fe51a8ea6177a5aeab11cf819ed3177", "commitAfterChange": "cb36eca9d9b9093df77fd23643572b1315c79e4d", "methodNumberBeforeChange": 1478, "methodNumberAfterChange": 1478, "signatureBeforeChange": " public void test1447()", "signatureAfterChange": " public void test1447()", "diff": ["+//https://bugs.eclipse.org/bugs/show_bug.cgi?id=263633", "+    this.runConformTest(", "+            new String[] {", "+                    \"X.java\",", "+        \t\t\t\"public abstract class X implements Visitable {\\n\" + ", "+        \t\t\t\"\tpublic <T, U extends Visitor<T>> T accept(U v) {\\n\" + ", "+        \t\t\t\"\t\treturn null;\\n\" + ", "+        \t\t\t\"\t}\\n\" + ", "+        \t\t\t\"\tpublic <T, U extends Visitor<T>> T accept2(U v) {\\n\" + ", "+        \t\t\t\"\t\tif (v == null)\\n\" + ", "+        \t\t\t\"\t\t\treturn this.accept(v);\\n\" + ", "+        \t\t\t\"\t\telse \\n\" + ", "+        \t\t\t\"\t\t\treturn this.<T, U> accept(v);\\n\" + ", "+        \t\t\t\"\t}\\n\" + ", "+        \t\t\t\"}\\n\" + ", "+        \t\t\t\"interface Visitable {\\n\" + ", "+        \t\t\t\"\t<T, U extends Visitor<T>> T accept(U v);\\n\" + ", "+        \t\t\t\"}\\n\" + ", "+        \t\t\t\"interface Visitor<T> {\\n\" + ", "+        \t\t\t\"}\\n\",", "+       \t\t},", "+            \"\"", "+    );", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0efcb10c6937d1896d07badc27b2544e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/InterfaceMethodsTest.java", "commitBeforeChange": "ba04cb6ba4b5497c184d335aa777690304f7e67a", "commitAfterChange": "b9fe1585cf31ec434ca228546eadf3af49447ab0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic void testModifiers5a()", "signatureAfterChange": " \tpublic void testSuperAccess01()", "diff": ["-\t// - witness for NoSuchMethodError in synthetic method (SuperMethodAccess)", "-\tpublic void testModifiers5a() {", "-\t\trunConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"C.java\",", "-\t\t\t\t\"interface I {\\n\" +", "-\t\t\t\t\"    public default void foo() {\\n\" +", "-\t\t\t\t\"        System.out.println(\\\"default\\\");\\n\" +", "-\t\t\t\t\"    }\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"public class C implements I {\\n\" +", "-\t\t\t\t\"    public static void main(String[] args) {\\n\" +", "-\t\t\t\t\"        C c = new C();\\n\" +", "-\t\t\t\t\"        c.foo();\\n\" +", "-\t\t\t\t\"    }\\n\" +", "-\t\t\t\t\"}\\n\"", "-\t\t\t},", "-\t\t\t\"default\"", "-\t\t\t);", "-\t}", "+\t// - witness for NoSuchMethodError in synthetic method (SuperMethodAccess)", "+\tpublic void testSuperAccess01() {", "+\t\trunConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"C.java\",", "+\t\t\t\t\"interface I {\\n\" +", "+\t\t\t\t\"    public default void foo() {\\n\" +", "+\t\t\t\t\"        System.out.println(\\\"default\\\");\\n\" +", "+\t\t\t\t\"    }\\n\" +", "+\t\t\t\t\"}\\n\" +", "+\t\t\t\t\"public class C implements I {\\n\" +", "+\t\t\t\t\"    public static void main(String[] args) {\\n\" +", "+\t\t\t\t\"        C c = new C();\\n\" +", "+\t\t\t\t\"        c.foo();\\n\" +", "+\t\t\t\t\"    }\\n\" +", "+\t\t\t\t\"}\\n\"", "+\t\t\t},", "+\t\t\t\"default\"", "+\t\t\t);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52e1fd565efbc3f42b6a08a0e0d19a06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "be13fad329d6d2e465d322326f6ef6df7d9942a2", "commitAfterChange": "e144a75ffba7db74ee583e06f85056d8de86880c", "methodNumberBeforeChange": 409, "methodNumberAfterChange": 409, "signatureBeforeChange": "\t\t \t \tpublic void test407()", "signatureAfterChange": " \tpublic void test407()", "diff": ["+\t// 78008", "+\t\t\t\t\"import java.util.*;\\n\" + ", "+\t\t\t\t\"public class X {\\n\" + ", "+\t\t\t\t\"\\n\" + ", "+\t\t\t\t\"    public Integer[] getTypes() {\\n\" + ", "+\t\t\t\t\"        List<Integer> list = new ArrayList<Integer>();\\n\" + ", "+\t\t\t\t\"        return list == null \\n\" + ", "+\t\t\t\t\"            ? new Integer[0] \\n\" + ", "+\t\t\t\t\"            : list.toArray(new Integer[list.size()]);\\n\" + ", "+\t\t\t\t\"    }\\n\" + ", "+\t\t\t\t\"\\n\" + ", "+\t\t\t\t\"    public static void main(String[] args) {\\n\" + ", "+\t\t\t\t\"        Class clazz = null;\\n\" + ", "+\t\t\t\t\"        try {\\n\" + ", "+\t\t\t\t\"            clazz = Class.forName(\\\"X\\\");\\n\" + ", "+\t\t\t\t\"\t\t\t System.out.println(\\\"SUCCESS\\\");\\n\" +", "+\t\t\t\t\"        } catch (Throwable e) {\\n\" + ", "+\t\t\t\t\"            e.printStackTrace();\\n\" + ", "+\t\t\t\t\"        }\\n\" + ", "+\t\t\t\t\"    }\\n\" + ", "+\t\t\t\t\"}\",", "+\t\t\t},", "+\t\t\t\"SUCCESS\");\t", "+\t}\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d8810ef3cb949e69d99dbafb62bbee9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "0cad9a75d8029433899afbdf88cbb39e8dd0618a", "commitAfterChange": "af1194b54eafec10f8134c763fe3f4b7174111fb", "methodNumberBeforeChange": 255, "methodNumberAfterChange": 255, "signatureBeforeChange": " \tpublic void test243()", "signatureAfterChange": "\t\t \tpublic void test243()", "diff": ["-\t// TODO (kent) simple covariance cases", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"    public X foo() {\\n\" +", "+\t\t\t\t\"        System.out.println(\\\"Did NOT add bridge method\\\");\\n\" +", "+\t\t\t\t\"        return this;\\n\" +", "+\t\t\t\t\"    }\\n\" +", "+\t\t\t\t\"    public static void main(String[] args) throws Exception {\\n\" +", "+\t\t\t\t\"        X x = new A();\\n\" +", "+\t\t\t\t\"        x.foo();\\n\" +", "+\t\t\t\t\"        System.out.print(\\\" + \\\");\\n\" +", "+\t\t\t\t\"        I i = new A();\\n\" +", "+\t\t\t\t\"        i.foo();\\n\" +", "+\t\t\t\t\"    }\\n\" +", "+\t\t\t\t\"}\\n\" +", "+\t\t\t\t\"interface I {\\n\" +", "+\t\t\t\t\"    public I foo();\\n\" +", "+\t\t\t\t\"}\\n\" +", "+\t\t\t\t\"class A extends X implements I {\\n\" +", "+\t\t\t\t\"    public A foo() {\\n\" +", "+\t\t\t\t\"        System.out.print(\\\"Added bridge method\\\");\\n\" +", "+\t\t\t\t\"        return this;\\n\" +", "+\t\t\t\t\"    }\\n\" +", "+\t\t\t\t\"}\\n\"", "+\t\t\t},", "+\t\t\t\"Added bridge method + Added bridge method\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89c867014e856de6ba92a661007da907", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 1055, "methodNumberAfterChange": 1055, "signatureBeforeChange": " public void test1027()", "signatureAfterChange": " public void test1027()", "diff": ["+\t\t\tthis.complianceLevel < ClassFileConstants.JDK1_7 ?", "-\t\t\t\"\\n\", // =================", "+\t\t\t\"\\n\" : ", "+\t\t\t\t\"import java.util.LinkedHashSet;\\n\" +", "+\t\t\t\t\"import java.util.Set;\\n\" +", "+\t\t\t\t\"\\n\" +", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\\n\" +", "+\t\t\t\t\"    public class A {};\\n\" +", "+\t\t\t\t\"    public class B extends A {};\\n\" +", "+\t\t\t\t\"\\n\" +", "+\t\t\t\t\"    public static void main(String[] args) {\\n\" +", "+\t\t\t\t\"        X g = new X();\\n\" +", "+\t\t\t\t\"        Set<A> set = g.newSet(g.new B());\\n\" +", "+\t\t\t\t\"    }\\n\" +", "+\t\t\t\t\"    @SuppressWarnings(\\\"unchecked\\\")\\n\" +", "+\t\t\t\t\"    public <T, V extends T> Set<T> newSet(V... objects) {\\n\" +", "+\t\t\t\t\"        Set<T> set = new LinkedHashSet<T>();\\n\" +", "+\t\t\t\t\"        for (T t : objects) {\\n\" +", "+\t\t\t\t\"            set.add(t);\\n\" +", "+\t\t\t\t\"        }\\n\" +", "+\t\t\t\t\"        return set;\\n\" +", "+\t\t\t\t\"    }\\n\" +", "+\t\t\t\t\"}\\n\" +", "+\t\t\t\t\"\\n\", // =================, // ================="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c2b27b15f8cbfdfe8d166ed10f679ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/InnerEmulationTest.java", "commitBeforeChange": "66645ff7b2e7900a6e51de489fc3a747bdbf1458", "commitAfterChange": "a24bdada3de440570b8b103bca0325b799f298f1", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": "  public void test087()", "signatureAfterChange": "  public void test087()", "diff": ["+\t\ttrue,", "-\t\t\t\"public class X {\t\\n\"+", "-\t\t\t\"\tpublic static void main(String[] arguments) {\t\\n\"+", "-\t\t\t\"\t\tnew X().f();\t\\n\"+", "-\t\t\t\"\t}\t\\n\"+", "-\t\t\t\"    void f () {\t\\n\"+", "-\t\t\t\"        class C {\t\\n\"+", "-\t\t\t\"        \tC() {\t\\n\"+", "+\t\t\t\"public class X {\\n\"+", "+\t\t\t\"\tpublic static void main(String[] arguments) {\\n\"+", "+\t\t\t\"\t\tnew X().f();\\n\"+", "+\t\t\t\"\t}\\n\"+", "+\t\t\t\"    void f () {\\n\"+", "+\t\t\t\"        class C {\\n\"+", "+\t\t\t\"        \tC() {\\n\"+", "-\t\t\t\"        \t}\t\\n\"+", "-\t\t\t\"        }\t\\n\"+", "-\t\t\t\"        class N extends X {\t\\n\"+", "+\t\t\t\"        \t}\\n\"+", "+\t\t\t\"        }\\n\"+", "+\t\t\t\"        class N extends X {\\n\"+", "-\t\t\t\"        }\t\\n\"+", "-\t\t\t\"        new N();\t\\n\"+", "+\t\t\t\"        }\\n\"+", "+\t\t\t\"        new N();\\n\"+", "-\t\t\t\"}\t\\n\"", "+\t\t\t\"}\\n\"", "-\t\t\"[X$1N]\");", "+\t\t\"\",", "+\t\t\"[X$1N]\", // should be [X] indeed", "+\t\t\"\",", "+\t\tJavacTestOptions.EclipseHasABug.EclipseBug235809);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a11d62917d18ad24d94e73eb5c8da974", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "6d4fe8b897d9f85de3c7e4f3c65c2b0dfb35f1ed", "commitAfterChange": "e99876c3df14b077c8fdb45729d7e80e1c7f1686", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": " \tpublic void test073()", "signatureAfterChange": " \tpublic void test073()", "diff": ["-// TODO (kent) incorrectly reported as ambiguous", "-//\t\tthis.runConformTest(", "-//\t\t\tnew String[] {", "-//\t\t\t\t\"NumericArray3.java\",", "-//\t\t\t\t\"class Array<T> {\\n\" + ", "-//\t\t\t\t\"\tpublic <U extends Number> void add(U u) {}\\n\" + ", "-//\t\t\t\t\"}\\n\" + ", "-//\t\t\t\t\"public class NumericArray3<T extends Number> extends Array<T> {\\n\" +", "-//\t\t\t\t\"\tpublic static void main(String[] s) { new NumericArray3<Integer>().add(1); }\\n\" +", "-//\t\t\t\t\"\t@Override public void add(Number n) { System.out.println(true); }\\n\" +", "-//\t\t\t\t\"}\"", "-//\t\t\t},", "-//\t\t\t\"true\"", "-//\t\t);", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"NumericArray3.java\",", "+\t\t\t\t\"class Array<T> {\\n\" + ", "+\t\t\t\t\"\tpublic <U extends Number> void add(U u) {}\\n\" + ", "+\t\t\t\t\"}\\n\" + ", "+\t\t\t\t\"public class NumericArray3<T extends Number> extends Array<T> {\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) { new NumericArray3<Integer>().add(1); }\\n\" +", "+\t\t\t\t\"\t@Override public void add(Number n) { System.out.println(true); }\\n\" +", "+\t\t\t\t\"}\"", "+\t\t\t},", "+\t\t\t\"true\"", "+\t\t);"]}], "num": 64086}