{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4db47861197eec4de93da8e29130b971", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bb0a55a87b2956710bf7f36a8acc1f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "bac18f086dd9a87e1d5b6dea3b31ca1c92463a84", "commitAfterChange": "1b53a525120894192853120c7678edb264d25490", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void resetEnclosingMethodStaticFlag()", "signatureAfterChange": " public void resetEnclosingMethodStaticFlag()", "diff": ["+\twhile (methodScope != null && methodScope.referenceContext instanceof LambdaExpression) {", "+\t\tLambdaExpression lambda = (LambdaExpression) methodScope.referenceContext;", "+\t\tlambda.shouldCaptureInstance = true;", "+\t\tmethodScope = methodScope.enclosingMethodScope();", "+\t}", "+\t\t\twhile (methodScope != null && methodScope.referenceContext instanceof LambdaExpression) {", "+\t\t\t\tLambdaExpression lambda = (LambdaExpression) methodScope.referenceContext;", "+\t\t\t\tlambda.shouldCaptureInstance = true;", "+\t\t\t\tmethodScope = methodScope.enclosingMethodScope();", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c5c896eefbcec4955f74b4ed3bdb2ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.java", "commitBeforeChange": "d78b8094daf355f9dfeb37d82fffda46614be5da", "commitAfterChange": "5903b5532387cc7ed73791cbff2d52e4ceee6d52", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\t\tTypeVariableBinding typeVariableBinding = (TypeVariableBinding) this.type.resolvedType;", "+\t\tif (methodScope != null && methodScope.referenceContext instanceof TypeDeclaration) {", "+\t\t\t// initialization scope", "+\t\t\tmethodScope = methodScope.enclosingMethodScope();", "+\t\t}", "-\t\tif (methodDeclaration != null && ((methodDeclaration.bits & ASTNode.CanBeStatic) != 0) && methodDeclaration.binding != null) {", "+\t\tif (methodDeclaration != null && methodDeclaration.binding != null) {", "-\t\t\t\tcurrentScope.resetEnclosingMethodStaticFlag();", "+\t\t\t\tif (typeVariableBinding.declaringElement instanceof TypeBinding)", "+\t\t\t\t\tcurrentScope.resetDeclaringClassMethodStaticFlag((TypeBinding) typeVariableBinding.declaringElement);", "+\t\t\t\telse", "+\t\t\t\t\tcurrentScope.resetEnclosingMethodStaticFlag();", "-\t\t\t\t\tcurrentScope.resetEnclosingMethodStaticFlag();", "+\t\t\t\t\tif (typeVariableBinding.declaringElement instanceof TypeBinding)", "+\t\t\t\t\t\tcurrentScope.resetDeclaringClassMethodStaticFlag((TypeBinding) typeVariableBinding.declaringElement);", "+\t\t\t\t\telse", "+\t\t\t\t\t\tcurrentScope.resetEnclosingMethodStaticFlag();"]}], "num": 58285}