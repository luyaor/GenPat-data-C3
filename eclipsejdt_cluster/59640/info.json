{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "214d5bbc5c99227823a712e83c4490d5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "171c3432b22e9c1618bb89aac580f228", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/diagnose/LexStream.java", "commitBeforeChange": "d100192f697f326dff66b368f9d71d16adde29e2", "commitAfterChange": "c99e3bd7df24eb7b0133eb18cfef3f12a0f60a4d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprivate void readTokenFromScanner()", "signatureAfterChange": " \t \tprivate void readTokenFromScanner()", "diff": ["-\t\t\t\t\tif(!RangeUtil.isInInterval(start, end, intervalStartToSkip, intervalEndToSkip)) {", "+\t\t\t\t\t", "+\t\t\t\t\tint nextInterval = currentInterval + 1;", "+\t\t\t\t\tif(intervalStartToSkip.length == 0 ||", "+\t\t\t\t\t\t\tnextInterval >= intervalStartToSkip.length ||", "+\t\t\t\t\t\t\tstart < intervalStartToSkip[nextInterval]) {", "-\t\t\t\t\t\tint pInterval = RangeUtil.getPreviousInterval(start, end, intervalStartToSkip, intervalEndToSkip);", "-\t\t\t\t\t\tif(pInterval != previousInterval && (intervalFlagsToSkip[previousInterval + 1] & RangeUtil.IGNORE) == 0){", "+\t\t\t\t\t\tif(currentInterval != previousInterval && (intervalFlagsToSkip[currentInterval] & RangeUtil.IGNORE) == 0){", "-\t\t\t\t\t\t\tif((intervalFlagsToSkip[pInterval] & RangeUtil.LBRACE_MISSING) != 0){", "+\t\t\t\t\t\t\tif((intervalFlagsToSkip[currentInterval] & RangeUtil.LBRACE_MISSING) != 0){", "-\t\t\t\t\t\tpreviousInterval = pInterval;", "+\t\t\t\t\t\tpreviousInterval = currentInterval;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tscanner.resetTo(intervalEndToSkip[++currentInterval] + 1, scanner.eofPosition - 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91be1083f5baacd2205a8e36e2a513d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "a8c43fb1703bc9585d371b45c5bc751b66052e18", "commitAfterChange": "40ace06b6f9aaa2f71ebf049ffa37ed745fa6ef3", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 40, "signatureBeforeChange": " \t\t \t\tpublic final int rewriteList(ASTNode parent, StructuralPropertyDescriptor property, int startPos, String keyword)", "signatureAfterChange": " \t\t \t\tpublic final int rewriteList(ASTNode parent, StructuralPropertyDescriptor property, int offset, String keyword)", "diff": ["-\t\tpublic final int rewriteList(ASTNode parent, StructuralPropertyDescriptor property, int startPos, String keyword) {", "-\t\t\tfStartPos= startPos;", "-\t\t\tfList= getEvent(parent, property).getChildren();", "+\t\tpublic final int rewriteList(ASTNode parent, StructuralPropertyDescriptor property, int offset, String keyword) {", "+\t\t\tthis.startPos= offset;", "+\t\t\tthis.list= getEvent(parent, property).getChildren();", "-\t\t\tint total= fList.length;", "+\t\t\tint total= this.list.length;", "-\t\t\t\treturn fStartPos;", "+\t\t\t\treturn this.startPos;", "-\t\t\t\tint currMark= fList[i].getChangeKind();", "+\t\t\t\tint currMark= this.list[i].getChangeKind();", "-\t\t\t\t\t\tASTNode elem= (ASTNode) fList[i].getOriginalValue();", "+\t\t\t\t\t\tASTNode elem= (ASTNode) this.list[i].getOriginalValue();", "-\t\t\t\t\tTextEditGroup editGroup= getEditGroup(fList[0]); // first node is insert", "-\t\t\t\t\tdoTextInsert(startPos, keyword, editGroup);", "+\t\t\t\t\tTextEditGroup editGroup= getEditGroup(this.list[0]); // first node is insert", "+\t\t\t\t\tdoTextInsert(offset, keyword, editGroup);", "-\t\t\t\tcurrPos= startPos;", "+\t\t\t\tcurrPos= offset;", "-\t\t\t\tcurrPos= startPos;", "+\t\t\t\tcurrPos= offset;", "-\t\t\t\tRewriteEvent currEvent= fList[i];", "+\t\t\t\tRewriteEvent currEvent= this.list[i];", "-\t\t\t\t\t\t\tif (fList[nextIndex].getChangeKind() != RewriteEvent.INSERTED) {", "+\t\t\t\t\t\t\tif (this.list[nextIndex].getChangeKind() != RewriteEvent.INSERTED) {", "-\t\t\t\t\t} else if (fList[nextIndex].getChangeKind() != RewriteEvent.UNCHANGED) {", "+\t\t\t\t\t} else if (this.list[nextIndex].getChangeKind() != RewriteEvent.UNCHANGED) {"]}], "num": 59640}