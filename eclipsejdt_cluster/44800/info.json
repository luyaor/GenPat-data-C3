{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "81c40fc04fb15d1a0938613912c73a33", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6043514ff03c775f49705291b2d2cbf1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "a8ed5c9ce2b125913ea11ffa5f66b79c1153133a", "commitAfterChange": "aff037e4075d974a1198e8a25c9e7f07acc35fc1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["+\tif (compilerOptions.isAnnotationBasedNullAnalysisEnabled && (this.binding.tagBits & TagBits.IsNullnessKnown) == 0) {", "+\t\t// not interested in reporting problems against this.binding:", "+\t\tnew ImplicitNullAnnotationVerifier(compilerOptions.inheritNullAnnotations)", "+\t\t\t\t.checkImplicitNullAnnotations(this.binding, null/*srcMethod*/, false, scope);", "+\t}", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "795fd8905d50d14de5a2ee4d277ecb8f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "8542678e2ceb736a9d19d031551da2cab5ea4a72", "commitAfterChange": "4ac6f89083748b9c4fc37b738ed82ea1a7c9c63b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["+\tif (compilerOptions.isAnnotationBasedNullAnalysisEnabled && (this.binding.tagBits & TagBits.IsNullnessKnown) == 0) {", "+\t\t// not interested in reporting problems against this.binding:", "+\t\tnew ImplicitNullAnnotationVerifier(compilerOptions.inheritNullAnnotations)", "+\t\t\t\t.checkImplicitNullAnnotations(this.binding, null/*srcMethod*/, false, scope);", "+\t}", "+\t"]}], "num": 44800}