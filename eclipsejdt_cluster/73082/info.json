{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4e658a101e7647a79b160cc51db0c3bb", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01a99e9a9208df06e7a8a1b60c1eb812", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "677c4b39a30069207f57550aec27ea9d04477c82", "commitAfterChange": "a8939af811304c63be0e7f585bcaea4e93cb581f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic ClasspathEntry( \t\tint contentKind, \t\tint entryKind, \t\tIPath path, \t\tIPath[] inclusionPatterns, \t\tIPath[] exclusionPatterns, \t\tIPath sourceAttachmentPath, \t\tIPath sourceAttachmentRootPath, \t\tIPath specificOutputLocation, \t\tboolean isExported, \t\tIAccessRule[] accessRules, \t\tboolean combineAccessRules, \t\tIClasspathAttribute[] extraAttributes)", "signatureAfterChange": " \tpublic ClasspathEntry( \t\tint contentKind, \t\tint entryKind, \t\tIPath path, \t\tIPath[] inclusionPatterns, \t\tIPath[] exclusionPatterns, \t\tIPath sourceAttachmentPath, \t\tIPath sourceAttachmentRootPath, \t\tIPath specificOutputLocation, \t\tboolean isExported, \t\tIAccessRule[] accessRules, \t\tboolean combineAccessRules, \t\tIClasspathAttribute[] extraAttributes)", "diff": ["-\t\tAccessRuleSet ruleSet = createAccessRuleSet(accessRules);", "-\t\tif (ruleSet != null) {", "-\t\t\t// compute message template", "-\t\t\truleSet.messageTemplates = getMessageTemplates();", "+\t\tint length;", "+\t\tif (accessRules != null && (length = accessRules.length) > 0) {", "+\t\t\tAccessRule[] rules = new AccessRule[length];", "+\t\t\tSystem.arraycopy(accessRules, 0, rules, 0, length);", "+\t\t\tthis.accessRuleSet = new AccessRuleSet(rules, getMessageTemplates());", "-\t\tthis.accessRuleSet = ruleSet;", "+//\t\telse { -- implicit!", "+//\t\t\tthis.accessRuleSet = null;", "+//\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec045bfa1502be9bb7a7e64393c1a01f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "0218d2fde27ae288f3eb227e030a2aee2bd32f49", "commitAfterChange": "025f6a96e3e3c149e01b0d88c99b73f42c4c49af", "methodNumberBeforeChange": 113, "methodNumberAfterChange": 110, "signatureBeforeChange": "  \tprivate static String toUnresolvedQualifiedTypeSignature(char[] signature)", "signatureAfterChange": " \tprivate static char[] toUnresolvedTypeSignature(char[] signature)", "diff": ["-", "-\tprivate static String toUnresolvedQualifiedTypeSignature(char[] signature) {", "+\tprivate static char[] toUnresolvedTypeSignature(char[] signature) {", "-\t\t\treturn new String(signature);", "+\t\t\treturn signature;", "-\t\ttoUnresolvedQualifiedTypeSignature(signature, 0, length, buffer);", "-\t\treturn String.valueOf(buffer);", "+\t\ttoUnresolvedTypeSignature(signature, 0, length, buffer);", "+\t\tint bufferLength = buffer.length();", "+\t\tchar[] result = new char[bufferLength];", "+\t\tbuffer.getChars(0, bufferLength, result, 0);", "+\t\treturn result;"]}], "num": 73082}