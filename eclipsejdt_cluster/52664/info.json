{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0266d260dad69a6366edbce215e60f39", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22f89400d026963aed8bb2a221f47ee6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "5010a900684b375d80f50d8445cc9e3fb6c61f3a", "commitAfterChange": "36af4ca0b413cc401b0bc4442925b5f641f8df7a", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic UnconditionalFlowInfo mergedWith(UnconditionalFlowInfo otherInits)", "signatureAfterChange": " \tpublic UnconditionalFlowInfo mergedWith(UnconditionalFlowInfo otherInits)", "diff": ["+\t\tif ((this.reachMode & UNREACHABLE) != (otherInits.reachMode & UNREACHABLE)){", "+\t\t\tif ((this.reachMode & UNREACHABLE) != 0){", "+\t\t\t\treturn otherInits;", "+\t\t\t} else {", "+\t\t\t\treturn this;", "+\t\t\t}", "+\t\t}", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3846ff06d5b4cf2bcfbffac2473349e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldReferencePattern.java", "commitBeforeChange": "8635a189d924741fc24bc4be873c4d30df46a524", "commitAfterChange": "903406128c19b4f927e6592cfb93facd59066f36", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r private int matchLevel(FieldBinding binding)", "signatureAfterChange": "\r private int matchLevel(FieldBinding binding)", "diff": ["-\t\treturn INACCURATE_MATCH;\r", "+\t\tif (binding == ArrayBinding.LengthField) {\r", "+\t\t\t// optimized case for length field of an array\r", "+\t\t\tif (this.declaringQualification == null && this.declaringSimpleName == null) {\r", "+\t\t\t\treturn ACCURATE_MATCH;\r", "+\t\t\t} else {\r", "+\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t\t}\r", "+\t\t} else {\r", "+\t\t\treturn INACCURATE_MATCH;\r", "+\t\t}\r"]}], "num": 52664}