{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e6bbcff91843a81eeb0e460e10a0c630", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37f661a08491376c66874de0d8ce6097", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "3ad9be41ed4dda741568679056b3faf6f8d0f62e", "commitAfterChange": "0cef88990b851def8b3e927443996ca444d24266", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tprivate void checkAndSetModifiers()", "signatureAfterChange": " \t \tprivate void checkAndSetModifiers()", "diff": ["-\t\t\tMethodScope methodScope = methodScope();", "-\t\t\tReferenceContext refContext = methodScope.referenceContext;", "-\t\t\tif (refContext instanceof TypeDeclaration) {", "-\t\t\t    ", "-\t\t\t\tSourceTypeBinding type = ((TypeDeclaration) refContext).binding;", "-", "-\t\t\t\t// inside field declaration ? check field modifier to see if deprecated", "-\t\t\t\tif (methodScope.initializedField != null) {", "-\t\t\t\t\t\t// currently inside this field initialization", "-\t\t\t\t\tif (methodScope.initializedField.isViewedAsDeprecated() && !sourceType.isDeprecated()){", "-\t\t\t\t\t\tmodifiers |= AccDeprecatedImplicitly;", "-\t\t\t\t\t}", "-\t\t\t\t} else {", "-\t\t\t\t\tif (type.isStrictfp())", "-\t\t\t\t\t\tmodifiers |= AccStrictfp;", "-\t\t\t\t\tif (type.isViewedAsDeprecated() && !sourceType.isDeprecated()) ", "-\t\t\t\t\t\tmodifiers |= AccDeprecatedImplicitly;", "-\t\t\t\t}\t\t\t\t\t", "-\t\t\t} else {", "-\t\t\t\tMethodBinding method = ((AbstractMethodDeclaration) refContext).binding;", "-\t\t\t\tif (method != null){", "-\t\t\t\t\tif (method.isStrictfp())", "-\t\t\t\t\t\tmodifiers |= AccStrictfp;", "-\t\t\t\t\tif (method.isViewedAsDeprecated() && !sourceType.isDeprecated())", "-\t\t\t\t\t\tmodifiers |= AccDeprecatedImplicitly;", "+\t\t\tScope scope = this;", "+\t\t\tdo {", "+\t\t\t\tswitch (scope.kind) {", "+\t\t\t\t\tcase METHOD_SCOPE :", "+\t\t\t\t\t\tMethodScope methodScope = (MethodScope) scope;", "+\t\t\t\t\t\tif (methodScope.isInsideInitializer()) {", "+\t\t\t\t\t\t\tSourceTypeBinding type = ((TypeDeclaration) methodScope.referenceContext).binding;", "+\t\t\t", "+\t\t\t\t\t\t\t// inside field declaration ? check field modifier to see if deprecated", "+\t\t\t\t\t\t\tif (methodScope.initializedField != null) {", "+\t\t\t\t\t\t\t\t\t// currently inside this field initialization", "+\t\t\t\t\t\t\t\tif (methodScope.initializedField.isViewedAsDeprecated() && !sourceType.isDeprecated()){", "+\t\t\t\t\t\t\t\t\tmodifiers |= AccDeprecatedImplicitly;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tif (type.isStrictfp())", "+\t\t\t\t\t\t\t\t\tmodifiers |= AccStrictfp;", "+\t\t\t\t\t\t\t\tif (type.isViewedAsDeprecated() && !sourceType.isDeprecated()) ", "+\t\t\t\t\t\t\t\t\tmodifiers |= AccDeprecatedImplicitly;", "+\t\t\t\t\t\t\t}\t\t\t\t\t", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tMethodBinding method = ((AbstractMethodDeclaration) methodScope.referenceContext).binding;", "+\t\t\t\t\t\t\tif (method != null){", "+\t\t\t\t\t\t\t\tif (method.isStrictfp())", "+\t\t\t\t\t\t\t\t\tmodifiers |= AccStrictfp;", "+\t\t\t\t\t\t\t\tif (method.isViewedAsDeprecated() && !sourceType.isDeprecated())", "+\t\t\t\t\t\t\t\t\tmodifiers |= AccDeprecatedImplicitly;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase CLASS_SCOPE :", "+\t\t\t\t\t\t// local member", "+\t\t\t\t\t\tif (enclosingType.isStrictfp())", "+\t\t\t\t\t\t\tmodifiers |= AccStrictfp;", "+\t\t\t\t\t\tif (enclosingType.isViewedAsDeprecated() && !sourceType.isDeprecated())", "+\t\t\t\t\t\t\tmodifiers |= AccDeprecatedImplicitly;", "+\t\t\t\t\t\tbreak;", "-\t\t\t}", "+\t\t\t\tscope = scope.parent;", "+\t\t\t} while (scope != null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b9247df925327e6cbc79ec5e7981224", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "d3d92e370789aaaed8a46c804d74e3cb2b4bb167", "commitAfterChange": "07061c09a4baa11ac0a53e425e478493f3662bd4", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void emulateOuterAccess(LocalVariableBinding outerLocalVariable)", "signatureAfterChange": " public void emulateOuterAccess(LocalVariableBinding outerLocalVariable)", "diff": ["+\t", "+\tint depth = 0;", "+\tScope scope = this;", "+\twhile (outerVariableScope != scope) {", "+\t\tswitch(scope.kind) {", "+\t\t\tcase CLASS_SCOPE:", "+\t\t\t\tdepth++;", "+\t\t\t\tbreak;", "+\t\t\tcase METHOD_SCOPE: ", "+\t\t\t\tif (scope.isLambdaScope()) {", "+\t\t\t\t\tLambdaExpression lambdaExpression = (LambdaExpression) scope.referenceContext();", "+\t\t\t\t\tlambdaExpression.addSyntheticArgument(outerLocalVariable);", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t}", "+\t\tscope = scope.parent;", "+\t}", "+\tif (depth == 0) ", "+\t\treturn;", "+\t"]}], "num": 3671}