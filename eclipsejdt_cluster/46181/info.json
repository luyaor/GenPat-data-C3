{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "814766c67dc8c1dab6a2020f2cca5cb5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "603cb7d52f5206f2e3204566d7b80904", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "a253e12d0e5500dde78cb361a701e1e0a42cc195", "commitAfterChange": "e6906c72fd0737bba033cc849684f3e2192fc730", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " public void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " public void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t\t\t\tif (this.destinationPath != null)", "+\t\t\t\t\tif (this.destinationPath != null) {", "+\t\t\t\t\t\tStringBuffer errorMessage = new StringBuffer();", "+\t\t\t\t\t\terrorMessage.append(currentArg);", "+\t\t\t\t\t\tif ((index + 1) < argCount) {", "+\t\t\t\t\t\t\terrorMessage.append(' ');", "+\t\t\t\t\t\t\terrorMessage.append(newCommandLineArgs[index + 1]);", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tMain.bind(\"configure.duplicateOutputPath\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t\t\tMain.bind(\"configure.duplicateOutputPath\", errorMessage.toString())); //$NON-NLS-1$", "+\t\t\t\t\t}", "-\t\t\t\t\tif (bootclasspaths.size() > 0)", "+\t\t\t\t\tif (bootclasspaths.size() > 0) {", "+\t\t\t\t\t\tStringBuffer errorMessage = new StringBuffer();", "+\t\t\t\t\t\terrorMessage.append(currentArg);", "+\t\t\t\t\t\tif ((index + 1) < argCount) {", "+\t\t\t\t\t\t\terrorMessage.append(' ');", "+\t\t\t\t\t\t\terrorMessage.append(newCommandLineArgs[index + 1]);", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tMain.bind(\"configure.duplicateBootClasspath\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t\t\tMain.bind(\"configure.duplicateBootClasspath\", errorMessage.toString())); //$NON-NLS-1$", "+\t\t\t\t\t}", "-\t\t\t\t\tif (sourcepathClasspaths.size() > 0)", "+\t\t\t\t\tif (sourcepathClasspaths.size() > 0) {", "+\t\t\t\t\t\tStringBuffer errorMessage = new StringBuffer();", "+\t\t\t\t\t\terrorMessage.append(currentArg);", "+\t\t\t\t\t\tif ((index + 1) < argCount) {", "+\t\t\t\t\t\t\terrorMessage.append(' ');", "+\t\t\t\t\t\t\terrorMessage.append(newCommandLineArgs[index + 1]);", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tMain.bind(\"configure.duplicateSourcepath\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t\t\tMain.bind(\"configure.duplicateSourcepath\", errorMessage.toString())); //$NON-NLS-1$", "+\t\t\t\t\t}", "-\t\t\t\t\tif (extdirsNames.size() > 0)", "+\t\t\t\t\tif (extdirsNames.size() > 0) {", "+\t\t\t\t\t\tStringBuffer errorMessage = new StringBuffer();", "+\t\t\t\t\t\terrorMessage.append(currentArg);", "+\t\t\t\t\t\tif ((index + 1) < argCount) {", "+\t\t\t\t\t\t\terrorMessage.append(' ');", "+\t\t\t\t\t\t\terrorMessage.append(newCommandLineArgs[index + 1]);", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tMain.bind(\"configure.duplicateExtdirs\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t\t\tMain.bind(\"configure.duplicateExtdirs\", errorMessage.toString())); //$NON-NLS-1$", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "907fec3b2411f16918d888058bf9b79e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "02009b41ec945f5cfcf629234ac75cbc76ce6809", "commitAfterChange": "3e46d275b92d309fd1fe675f261b23afc851c7bf", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " public void configure(String[] argv)", "signatureAfterChange": " public void configure(String[] argv)", "diff": ["+\t\t\t\tif (currentArg.startsWith(\"-nowarn\")) { //$NON-NLS-1$", "+\t\t\t\t\tswitch (currentArg.length()) {", "+\t\t\t\t\t\tcase 7:", "+\t\t\t\t\t\t\tdisableAll(ProblemSeverities.Warning);", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase 8:", "+\t\t\t\t\t\t\tthrow new IllegalArgumentException(this.bind(", "+\t\t\t\t\t\t\t\t\t\"configure.invalidNowarnOption\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\tint foldersStart = currentArg.indexOf('[') + 1;", "+\t\t\t\t\t\t\tint foldersEnd = currentArg.lastIndexOf(']');", "+\t\t\t\t\t\t\tif (foldersStart <= 8 || foldersEnd == -1 || foldersStart > foldersEnd", "+\t\t\t\t\t\t\t\t\t|| foldersEnd < currentArg.length() - 1) {", "+\t\t\t\t\t\t\t\tthrow new IllegalArgumentException(this.bind(", "+\t\t\t\t\t\t\t\t\t\t\"configure.invalidNowarnOption\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tString folders = currentArg.substring(foldersStart, foldersEnd);", "+\t\t\t\t\t\t\tif (folders.length() > 0) {", "+\t\t\t\t\t\t\t\tchar[][] currentFolders = decodeIgnoreOptionalProblemsFromFolders(folders);", "+\t\t\t\t\t\t\t\tif (this.ignoreOptionalProblemsFromFolders != null) {", "+\t\t\t\t\t\t\t\t\tint length = this.ignoreOptionalProblemsFromFolders.length + currentFolders.length;", "+\t\t\t\t\t\t\t\t\tchar[][] tempFolders = new char[length][];", "+\t\t\t\t\t\t\t\t\tSystem.arraycopy(this.ignoreOptionalProblemsFromFolders, 0, tempFolders, 0, this.ignoreOptionalProblemsFromFolders.length);", "+\t\t\t\t\t\t\t\t\tSystem.arraycopy(currentFolders, 0, tempFolders, this.ignoreOptionalProblemsFromFolders.length, currentFolders.length);", "+\t\t\t\t\t\t\t\t\tthis.ignoreOptionalProblemsFromFolders = tempFolders;", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tthis.ignoreOptionalProblemsFromFolders = currentFolders;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tthrow new IllegalArgumentException(this.bind(", "+\t\t\t\t\t\t\t\t\t\t\"configure.invalidNowarnOption\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\tcontinue;", "+\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tif (currentArg.startsWith(\"-nowarn\")) { //$NON-NLS-1$", "-\t\t\t\t\tdisableAll(ProblemSeverities.Warning);", "-\t\t\t\t\tmode = DEFAULT;", "-\t\t\t\t\tcontinue;"]}], "num": 46181}