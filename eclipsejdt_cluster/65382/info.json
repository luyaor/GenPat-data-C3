{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c71f232fb7cdf669e777c679e31a7d79", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2769291b45c15d70db17e2b37cd8a9fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/HandleFactory.java", "commitBeforeChange": "415b98b155644be36e3e8596750b7ffdbf4a3542", "commitAfterChange": "6917637e4d94d6b430f2f9b2341abe83418f5e26", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic IJavaElement createElement(Scope scope, int elementPosition, ICompilationUnit unit, HashSet existingElements, HashMap knownScopes)", "signatureAfterChange": " \tpublic IJavaElement createElement(Scope scope, int elementPosition, ICompilationUnit unit, HashSet existingElements, HashMap knownScopes)", "diff": ["-\t\t\t\t\t\tnewElement = new org.eclipse.jdt.internal.core.LambdaExpression((JavaElement) parentElement, expression).getMethod();", "+\t\t\t\t\t\t//newElement = new org.eclipse.jdt.internal.core.SourceLambdaExpression((JavaElement) parentElement, expression).getMethod();", "+\t\t\t\t\t\tnewElement = LambdaFactory.createLambdaExpression((JavaElement) parentElement, expression).getMethod();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c38ad9afaa905f493f12a605d6a6b2a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/HandleFactory.java", "commitBeforeChange": "06cedbd8bd184e3f34c939385e2cbddd9e3aedca", "commitAfterChange": "0d09a2966f3cebfb8d6601000e2b64259fed7dd8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate IJavaElement createElement(Scope scope, int elementPosition, ICompilationUnit unit, HashSet existingElements, HashMap knownScopes)", "signatureAfterChange": " \tprivate IJavaElement createElement(Scope scope, int elementPosition, ICompilationUnit unit, HashSet existingElements, HashMap knownScopes)", "diff": ["+\t\t\t\tif (scope.isLambdaScope()) {", "+\t\t\t\t\tparentElement = createElement(scope.parent, elementPosition, unit, existingElements, knownScopes);", "+\t\t\t\t\tnewElement = new org.eclipse.jdt.internal.core.LambdaExpression((JavaElement) parentElement, (LambdaExpression) scope.referenceContext()).getMethod();", "+\t\t\t\t\tknownScopes.put(scope, newElement);", "+\t\t\t\t\treturn newElement;", "+\t\t\t\t}"]}], "num": 65382}