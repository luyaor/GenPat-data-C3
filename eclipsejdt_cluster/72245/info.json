{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1528d2bcf354c5cb7e43cb9b1185b207", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c6a9b5dc271c33be35696f718585577", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "15119daf817db1018e77a6fda243b1a0915bea1f", "commitAfterChange": "46f57536ed8e2bfbe5a9484e153647c7c5b9cb5d", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void testCompletionFindImport1() throws JavaModelException", "signatureAfterChange": " public void testCompletionFindImport1() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionFindImport1.java\");", "-", "-\tString str = cu.getSource();", "-\tString completeBehind = \"pac\";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-", "-\tassertEquals(", "-\t\t\"should have three imports \\\"pack1\\\" & \\\"pack1\\\" & \\\"pack1.pack3\\\" & \\\"pack2\\\"\", ", "-\t\t\"element:pack    completion:pack.*;    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\"element:pack1    completion:pack1.*;    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\"element:pack1.pack3    completion:pack1.pack3.*;    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\"element:pack2    completion:pack2.*;    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED),", "-\t\trequestor.getResults());", "+\tthis.wc = getWorkingCopy(", "+            \"/Completion/src/CompletionFindImport1.java\",", "+            \"import pac\\n\"+", "+            \"\\n\"+", "+            \"public class CompletionFindImport1 {\\n\"+", "+            \"\\n\"+", "+            \"}\");", "+    ", "+    ", "+    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+    String str = this.wc.getSource();", "+    String completeBehind = \"pac\";", "+    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "+    ", "+\tassertResults(", "+\t\t\t\"pack[PACKAGE_REF]{pack.*;, pack, null, null, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\"pack1[PACKAGE_REF]{pack1.*;, pack1, null, null, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\"pack1.pack3[PACKAGE_REF]{pack1.pack3.*;, pack1.pack3, null, null, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\"pack2[PACKAGE_REF]{pack2.*;, pack2, null, null, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) +\"}\",", "+\t\t\trequestor.getResults());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "590fe4ce3ec56ee03549f9bf0fcf63b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "15119daf817db1018e77a6fda243b1a0915bea1f", "commitAfterChange": "46f57536ed8e2bfbe5a9484e153647c7c5b9cb5d", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  public void testCompletionFindImport2() throws JavaModelException", "signatureAfterChange": "  public void testCompletionFindImport2() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionFindImport2.java\");", "-", "-\tString str = cu.getSource();", "-\tString completeBehind = \"pack1.P\";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-", "-\tassertEquals(", "-\t\t\"should have six completions\",", "-\t\t\"element:PX    completion:pack1.PX;    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\"element:pack1.pack3    completion:pack1.pack3.*;    relevance:\"+(R_DEFAULT + R_INTERESTING + R_NON_RESTRICTED),", "-\t\trequestor.getResults());", "+\tthis.wc = getWorkingCopy(", "+            \"/Completion/src/CompletionFindImport2.java\",", "+            \"import pack1.P\\n\"+", "+            \"\\n\"+", "+            \"public class CompletionFindImport2 {\\n\"+", "+            \"\\n\"+", "+            \"}\");", "+    ", "+    ", "+    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+    String str = this.wc.getSource();", "+    String completeBehind = \"pack1.P\";", "+    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "+    ", "+\tassertResults(", "+\t\t\t\"pack1.pack3[PACKAGE_REF]{pack1.pack3.*;, pack1.pack3, null, null, null, \"+(R_DEFAULT + R_INTERESTING + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\"PX[TYPE_REF]{pack1.PX;, pack1, Lpack1.PX;, null, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED)+\"}\",", "+\t\t\trequestor.getResults());"]}], "num": 72245}