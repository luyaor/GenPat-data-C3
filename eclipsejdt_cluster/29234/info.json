{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "63c9ce955aab8efe6593ff33f0757076", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87a6130dd0a55337c0a3d9018bdf10b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "372783581a5723abe8e5c388f38ff5c205e01380", "commitAfterChange": "b0c126113d3919e827d562fe7ceede775b6f96a6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": "   \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["+\t\tif (isConstructorReference() && this.receiverType.isArrayType()) {", "+\t\t\tSourceTypeBinding sourceType = currentScope.enclosingSourceType();", "+\t\t\tthis.binding = sourceType.addSyntheticArrayConstructor((ArrayBinding) this.receiverType);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfad8b671c8ee67dde29fe4ce9aa82e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "43390194b204e2f99c26a50ecdeca6392ca62b37", "commitAfterChange": "31410ecb2f176484cb238465ae4dd080839b9388", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\t\t\t} else if (isConstructorReference()) {", "+\t\t\t\t\tscope.problemReporter().invalidType(", "+\t\t\t\t\t\t\tthis.lhs,", "+\t\t\t\t\t\t\tnew ProblemReferenceBinding(((NameReference) this.lhs).getName(), null,", "+\t\t\t\t\t\t\t\t\tProblemReasons.NotFound));", "+\t\t\t\t\treturn this.resolvedType = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fda7cac21af5db63e37cd3aae703a085", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "718192aaf9b0c9c98eabd9c303872394bcd107d2", "commitAfterChange": "f39f5ec882dc43ec2cc9b847a4ac8fd1d905874c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+    \t\t\tif (isConstructorReference() && lhsType.isRawType()) {", "+    \t\t\t\tscope.problemReporter().rawConstructorReferenceNotWithExplicitTypeArguments(this.typeArguments);", "+    \t\t\t\treturn this.resolvedType = null;", "+    \t\t\t}"]}], "num": 29234}