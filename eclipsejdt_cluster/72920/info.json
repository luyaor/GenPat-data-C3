{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa3d2452ffc7490cb77a286e36edfd1f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "201e37d72cefa5b2209cf9319b580dde", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "c2e73e92d84b995d792bc11e9e3cc44e31128806", "commitAfterChange": "7530e9811f8e0b012d59fd23237f75cdb4977fd6", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " private void scanTypeForNullDefaultAnnotation(IBinaryType binaryType, PackageBinding packageBinding, BinaryTypeBinding binaryBinding)", "signatureAfterChange": " private void scanTypeForNullDefaultAnnotation(IBinaryType binaryType, PackageBinding packageBinding)", "diff": ["-private void scanTypeForNullDefaultAnnotation(IBinaryType binaryType, PackageBinding packageBinding, BinaryTypeBinding binaryBinding) {", "+private void scanTypeForNullDefaultAnnotation(IBinaryType binaryType, PackageBinding packageBinding) {", "-\tboolean isPackageInfo = CharOperation.equals(binaryBinding.sourceName(), TypeConstants.PACKAGE_INFO_NAME);", "-\tboolean useTypeAnnotations = this.environment.globalOptions.sourceLevel >= ClassFileConstants.JDK1_8;", "+\tboolean isPackageInfo = CharOperation.equals(sourceName(), TypeConstants.PACKAGE_INFO_NAME);", "-\t\t\t\tIBinaryElementValuePair[] elementValuePairs = annotations[i].getElementValuePairs();", "-\t\t\t\tif (!useTypeAnnotations) {", "-\t\t\t\t\tif (elementValuePairs != null && elementValuePairs.length == 1) {", "-\t\t\t\t\t\tObject value = elementValuePairs[0].getValue();", "-\t\t\t\t\t\tif (value instanceof BooleanConstant", "-\t\t\t\t\t\t\t&& !((BooleanConstant)value).booleanValue())", "-\t\t\t\t\t\t{", "-\t\t\t\t\t\t\t// parameter is 'false': this means we cancel defaults from outer scopes:", "-\t\t\t\t\t\t\tannotationBit = TagBits.AnnotationNullUnspecifiedByDefault;", "-\t\t\t\t\t\t\tnullness = NULL_UNSPECIFIED_BY_DEFAULT;", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t} else {", "-\t\t\t\t\t// using NonNullByDefault we need to inspect the details of the value() attribute:", "-\t\t\t\t\tnullness = getNonNullByDefaultValue(annotations[i]);", "-\t\t\t\t\tif (nullness == NULL_UNSPECIFIED_BY_DEFAULT) {", "-\t\t\t\t\t\tannotationBit = TagBits.AnnotationNullUnspecifiedByDefault;", "-\t\t\t\t\t} else if (nullness != 0) {", "-\t\t\t\t\t\tannotationBit = TagBits.AnnotationNonNullByDefault;", "-\t\t\t\t\t}\t", "-\t\t\t\t\tthis.defaultNullness = nullness;", "-\t\t\t\t\tbreak;", "+\t\t\t\t// using NonNullByDefault we need to inspect the details of the value() attribute:", "+\t\t\t\tnullness = getNonNullByDefaultValue(annotations[i]);", "+\t\t\t\tif (nullness == NULL_UNSPECIFIED_BY_DEFAULT) {", "+\t\t\t\t\tannotationBit = TagBits.AnnotationNullUnspecifiedByDefault;", "+\t\t\t\t} else if (nullness != 0) {", "+\t\t\t\t\tannotationBit = TagBits.AnnotationNonNullByDefault;", "-\t\t\t\tannotationBit = TagBits.AnnotationNonNullByDefault;", "-\t\t\t\tnullness = NONNULL_BY_DEFAULT;", "+\t\t\t\tthis.defaultNullness = nullness;", "-\t\t\tbinaryBinding.tagBits |= annotationBit;", "+\t\t\tthis.tagBits |= annotationBit;", "-\t\tpackageBinding.defaultNullness = Binding.NULL_UNSPECIFIED_BY_DEFAULT;", "+\t\tpackageBinding.defaultNullness = Binding.NO_NULL_DEFAULT;", "-\tReferenceBinding enclosingTypeBinding = binaryBinding.enclosingType;", "+\tReferenceBinding enclosingTypeBinding = this.enclosingType;", "-\t\tif (useTypeAnnotations) {", "-\t\t\tbinaryBinding.defaultNullness = enclosingTypeBinding.getNullDefault();", "-\t\t\tif (binaryBinding.defaultNullness != 0) {", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t} else {", "-\t\t\tif ((enclosingTypeBinding.tagBits & TagBits.AnnotationNonNullByDefault) != 0) {", "-\t\t\t\tbinaryBinding.tagBits |= TagBits.AnnotationNonNullByDefault;", "-\t\t\t\treturn;", "-\t\t\t} else if ((enclosingTypeBinding.tagBits & TagBits.AnnotationNullUnspecifiedByDefault) != 0) {", "-\t\t\t\tbinaryBinding.tagBits |= TagBits.AnnotationNullUnspecifiedByDefault;", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t}", "+\t\tif (setNullDefault(enclosingTypeBinding.tagBits, enclosingTypeBinding.getNullDefault()))", "+\t\t\treturn;", "-\t\t\tpackageBinding.defaultNullness = Binding.NULL_UNSPECIFIED_BY_DEFAULT;", "+\t\t\tpackageBinding.defaultNullness = Binding.NO_NULL_DEFAULT;", "-\tif (useTypeAnnotations) {", "-\t\tbinaryBinding.defaultNullness = packageBinding.defaultNullness;", "-\t} else {", "-\t\tswitch (packageBinding.defaultNullness) {", "-\t\t\tcase Binding.NONNULL_BY_DEFAULT : ", "-\t\t\t\tbinaryBinding.tagBits |= TagBits.AnnotationNonNullByDefault;", "-\t\t\t\tbreak;", "-\t\t\tcase Binding.NULL_UNSPECIFIED_BY_DEFAULT :", "-\t\t\t\tbinaryBinding.tagBits |= TagBits.AnnotationNullUnspecifiedByDefault;", "-\t\t\t\tbreak;", "-\t\t}", "+\tsetNullDefault(0L, packageBinding.defaultNullness);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d606f1df786e1ae391951aab857d900", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "74d118e989117eba0163f0f707314197db0891af", "commitAfterChange": "43cdae5117454d896e9e9cf435f63b0b509e3a4c", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " private void scanTypeForNullDefaultAnnotation(IBinaryType binaryType, PackageBinding packageBinding, BinaryTypeBinding binaryBinding)", "signatureAfterChange": " private void scanTypeForNullDefaultAnnotation(IBinaryType binaryType, PackageBinding packageBinding, BinaryTypeBinding binaryBinding)", "diff": ["+// pre: null annotation analysis is enabled", "+\tboolean useTypeAnnotations = this.environment.globalOptions.sourceLevel >= ClassFileConstants.JDK1_8;", "-\t\t\t\tif (elementValuePairs != null && elementValuePairs.length == 1) {", "-\t\t\t\t\tObject value = elementValuePairs[0].getValue();", "-\t\t\t\t\tif (value instanceof BooleanConstant", "-\t\t\t\t\t\t&& !((BooleanConstant)value).booleanValue())", "-\t\t\t\t\t{", "-\t\t\t\t\t\t// parameter is 'false': this means we cancel defaults from outer scopes:", "-\t\t\t\t\t\tannotationBit = TagBits.AnnotationNullUnspecifiedByDefault;", "-\t\t\t\t\t\tnullness = NULL_UNSPECIFIED_BY_DEFAULT;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\t} else if (value instanceof Object[] && ((Object[])value).length == 0) {", "-\t\t\t\t\t\t// parameter is '{}': this means we cancel defaults from outer scopes:", "-\t\t\t\t\t\tannotationBit = TagBits.AnnotationNullUnspecifiedByDefault;", "-\t\t\t\t\t\tnullness = NULL_UNSPECIFIED_BY_DEFAULT;", "-\t\t\t\t\t\tbreak;", "+\t\t\t\tif (!useTypeAnnotations) {", "+\t\t\t\t\tif (elementValuePairs != null && elementValuePairs.length == 1) {", "+\t\t\t\t\t\tObject value = elementValuePairs[0].getValue();", "+\t\t\t\t\t\tif (value instanceof BooleanConstant", "+\t\t\t\t\t\t\t&& !((BooleanConstant)value).booleanValue())", "+\t\t\t\t\t\t{", "+\t\t\t\t\t\t\t// parameter is 'false': this means we cancel defaults from outer scopes:", "+\t\t\t\t\t\t\tannotationBit = TagBits.AnnotationNullUnspecifiedByDefault;", "+\t\t\t\t\t\t\tnullness = NULL_UNSPECIFIED_BY_DEFAULT;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\t// using NonNullByDefault we need to inspect the details of the value() attribute:", "+\t\t\t\t\tnullness = getNonNullByDefaultValue(annotations[i]);", "+\t\t\t\t\tif (nullness == NULL_UNSPECIFIED_BY_DEFAULT) {", "+\t\t\t\t\t\tannotationBit = TagBits.AnnotationNullUnspecifiedByDefault;", "+\t\t\t\t\t} else if (nullness != 0) {", "+\t\t\t\t\t\tannotationBit = TagBits.AnnotationNonNullByDefault;", "+\t\t\t\t\t}\t", "+\t\t\t\t\tthis.defaultNullness = nullness;", "+\t\t\t\t\tbreak;", "-\t\tif ((enclosingTypeBinding.tagBits & TagBits.AnnotationNonNullByDefault) != 0) {", "-\t\t\tbinaryBinding.tagBits |= TagBits.AnnotationNonNullByDefault;", "-\t\t\treturn;", "-\t\t} else if ((enclosingTypeBinding.tagBits & TagBits.AnnotationNullUnspecifiedByDefault) != 0) {", "-\t\t\tbinaryBinding.tagBits |= TagBits.AnnotationNullUnspecifiedByDefault;", "-\t\t\treturn;", "+\t\tif (useTypeAnnotations) {", "+\t\t\tbinaryBinding.defaultNullness = enclosingTypeBinding.getNullDefault();", "+\t\t\tif (binaryBinding.defaultNullness != 0) {", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\t} else {", "+\t\t\tif ((enclosingTypeBinding.tagBits & TagBits.AnnotationNonNullByDefault) != 0) {", "+\t\t\t\tbinaryBinding.tagBits |= TagBits.AnnotationNonNullByDefault;", "+\t\t\t\treturn;", "+\t\t\t} else if ((enclosingTypeBinding.tagBits & TagBits.AnnotationNullUnspecifiedByDefault) != 0) {", "+\t\t\t\tbinaryBinding.tagBits |= TagBits.AnnotationNullUnspecifiedByDefault;", "+\t\t\t\treturn;", "+\t\t\t}", "-\tswitch (packageBinding.defaultNullness) {", "-\t\tcase Binding.NONNULL_BY_DEFAULT : ", "-\t\t\tbinaryBinding.tagBits |= TagBits.AnnotationNonNullByDefault;", "-\t\t\tbreak;", "-\t\tcase Binding.NULL_UNSPECIFIED_BY_DEFAULT :", "-\t\t\tbinaryBinding.tagBits |= TagBits.AnnotationNullUnspecifiedByDefault;", "-\t\t\tbreak;", "+\tif (useTypeAnnotations) {", "+\t\tbinaryBinding.defaultNullness = packageBinding.defaultNullness;", "+\t} else {", "+\t\tswitch (packageBinding.defaultNullness) {", "+\t\t\tcase Binding.NONNULL_BY_DEFAULT : ", "+\t\t\t\tbinaryBinding.tagBits |= TagBits.AnnotationNonNullByDefault;", "+\t\t\t\tbreak;", "+\t\t\tcase Binding.NULL_UNSPECIFIED_BY_DEFAULT :", "+\t\t\t\tbinaryBinding.tagBits |= TagBits.AnnotationNullUnspecifiedByDefault;", "+\t\t\t\tbreak;", "+\t\t}"]}], "num": 72920}