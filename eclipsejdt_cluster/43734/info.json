{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "16966a44b0ed1fa9d0e957a3f3f3b650", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "699cbe8f641118f193aebb0551592b72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "4a7d6bdefb8cc07325fb8a5c7d2a751e2d99c2eb", "commitAfterChange": "a887ec375dde41cb8473606c9dfedbcef88b3ca9", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": " public void generateSyntheticEnclosingInstanceValues(BlockScope currentScope, ReferenceBinding targetType, Expression enclosingInstance, AstNode invocationSite)", "signatureAfterChange": " public void generateSyntheticEnclosingInstanceValues(BlockScope currentScope, ReferenceBinding targetType, Expression enclosingInstance, AstNode invocationSite)", "diff": ["-\t// perform some emulation work in case there is some and we are inside a local type only", "+\t// supplying enclosing instance for the anonymous type's superclass", "+\tReferenceBinding checkedTargetType = targetType.isAnonymousType() ? targetType.superclass() : targetType;", "-\tReferenceBinding[] syntheticArgumentTypes;", "+\tif (hasExtraEnclosingInstance ", "+\t\t\t&& (!checkedTargetType.isNestedType() || checkedTargetType.isStatic())) {", "+\t\tcurrentScope.problemReporter().unnecessaryEnclosingInstanceSpecification(enclosingInstance, checkedTargetType);", "+\t\treturn;", "+\t}", "+\t// perform some emulation work in case there is some and we are inside a local type only", "+\tReferenceBinding[] syntheticArgumentTypes;", "-\t\tReferenceBinding targetEnclosingType = targetType.isAnonymousType() ? ", "-\t\t\t\ttargetType.superclass().enclosingType() // supplying enclosing instance for the anonymous type's superclass", "-\t\t\t\t: targetType.enclosingType();", "-", "+\t\tReferenceBinding targetEnclosingType = checkedTargetType.enclosingType();", "-\t\t\tcurrentScope.problemReporter().unnecessaryEnclosingInstanceSpecification(enclosingInstance, targetType);", "-\t\t}", "-\t} else { // we may still have an enclosing instance to consider", "-\t\tif (hasExtraEnclosingInstance) {", "-\t\t\tcurrentScope.problemReporter().unnecessaryEnclosingInstanceSpecification(enclosingInstance, targetType);", "+\t\t\tcurrentScope.problemReporter().unnecessaryEnclosingInstanceSpecification(enclosingInstance, checkedTargetType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc0b66a15161776785d0ef10ff020f27", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "4701699c328f8ccea880a868670316140ebeb369", "commitAfterChange": "2d43a1569e3e21299eac0fe3cc4aa5f6b92b4ec9", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": "\r public void generateSyntheticArgumentValues(BlockScope currentScope, ReferenceBinding targetType, Expression enclosingInstance, AstNode invocationSite)", "signatureAfterChange": "\r public void generateSyntheticArgumentValues(BlockScope currentScope, ReferenceBinding targetType, Expression enclosingInstance, AstNode invocationSite)", "diff": ["-\t\tReferenceBinding targetEnclosingType = targetType.enclosingType();\r", "+\r", "+\t\tReferenceBinding targetEnclosingType = targetType.isAnonymousType() ? \r", "+\t\t\t\ttargetType.superclass().enclosingType() // supplying enclosing instance for the anonymous type's superclass\r", "+\t\t\t\t: targetType.enclosingType();\r", "+\t\t\t\t\r", "-\t\t\t\tboolean enclosingInstanceRequired = targetType.isAnonymousType() ? syntheticArgType == targetType.superclass().enclosingType() // supplying enclosing instance for the anonymous type's superclass\r", "-\t\t\t\t: syntheticArgType == targetEnclosingType;\r", "-\t\t\t\tif (!enclosingInstanceRequired) {\r", "+\t\t\t\tif (syntheticArgType != targetEnclosingType) {\r", "-\t\t\t\tenclosingInstance.generateCode(currentScope, this, enclosingInstanceRequired);\r", "+\t\t\t\tenclosingInstance.generateCode(currentScope, this, syntheticArgType == targetEnclosingType);\r", "-\t\t\t\t\t// could not emulate a path to a given enclosing instance (must specify one - if direct enclosing instance)\r", "-\t\t\t\t\tif (syntheticArgType == targetEnclosingType) { //  missing direct enclosing instance\r", "-\t\t\t\t\t\tcurrentScope.problemReporter().missingEnclosingInstanceSpecification(targetEnclosingType, invocationSite);\r", "-\t\t\t\t\t} else {\r", "-\t\t\t\t\t\tcurrentScope.problemReporter().needImplementation();\r", "-\t\t\t\t\t}\r", "+\t\t\t\t\tcurrentScope.problemReporter().missingEnclosingInstanceSpecification(syntheticArgType, invocationSite);\r"]}], "num": 43734}