{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "12988de446c4dffc0805b2594f24bb69", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "213993e2656fa2f6fa286839929534c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "bdc36c1971e498b37c4c4b3a754931c7b0d35e5d", "commitAfterChange": "dbe2f3d3dccb831df7ca2400a5b203d41536cb95", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\t\t\texpression.computeConversion(scope, this.resolvedType, expressionType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5ce676b97f2bd9026722cce8a5b4327", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\t\texpression.setExpectedType(this.resolvedType); // needed in case of generic method invocation\t\t\t", "-\t\t\t\t\t\tscope.problemReporter().unnecessaryCast(this);", "+\t\t\t\t\t\tif (!usedForGenericMethodReturnTypeInference()) // used for generic type inference ?", "+\t\t\t\t\t\t\tscope.problemReporter().unnecessaryCast(this);", "-\t\t} else { // expression as a cast !!!!!!!!", "+\t\t} else { // expression as a cast"]}], "num": 54232}