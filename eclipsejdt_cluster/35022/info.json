{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9e6af977ac9ef3906f8eca0b42982d90", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "421e066731dea768d65a23653e4fd7ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBinding.java", "commitBeforeChange": "d0b9fa49059380aa33c580ecd386773dc780db14", "commitAfterChange": "297d21321fa4e0f1df8ca75fc42ba95a96cc17a8", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public TypeBinding findSuperTypeWithSameErasure(TypeBinding otherType)", "signatureAfterChange": " public TypeBinding findSuperTypeWithSameErasure(TypeBinding otherType)", "diff": ["-\tswitch(kind()) {", "+\tint kind;", "+\tswitch(kind = kind()) {", "-\t\t    if (!otherType.isTypeVariable() && !otherType.isIntersectionType()) otherType = otherType.erasure();", "-\t\t    if (this == otherType || (!isTypeVariable() && !isIntersectionType() && erasure() == otherType)) return this;", "+\t\t\tswitch(otherType.kind()) {", "+\t\t\t\tcase Binding.PARAMETERIZED_TYPE :", "+\t\t\t\tcase Binding.RAW_TYPE :", "+\t\t\t\tcase Binding.ARRAY_TYPE : ", "+\t\t\t\t\totherType = otherType.erasure();", "+\t\t\t}", "+\t\t    if (this == otherType)", "+\t\t    \treturn this;", "+\t\t\tswitch(kind) {", "+\t\t\t\tcase Binding.PARAMETERIZED_TYPE :", "+\t\t\t\tcase Binding.RAW_TYPE :", "+\t\t\t\tcase Binding.ARRAY_TYPE : ", "+\t\t\t\t\tif (erasure() == otherType)", "+\t\t\t\t\t\treturn this;", "+\t\t\t}", "-\t\t\t\t\tif (currentType == otherType || (!currentType.isTypeVariable() && !currentType.isIntersectionType() && currentType.erasure() == otherType)) return currentType;", "+\t\t\t\t\tif (currentType == otherType)", "+\t\t\t\t\t\treturn currentType;", "+\t\t\t\t\tswitch(currentType.kind()) {", "+\t\t\t\t\t\tcase Binding.PARAMETERIZED_TYPE :", "+\t\t\t\t\t\tcase Binding.RAW_TYPE :", "+\t\t\t\t\t\tcase Binding.ARRAY_TYPE : ", "+\t\t\t\t\t\t\tif (currentType.erasure() == otherType)", "+\t\t\t\t\t\t\t\treturn currentType;", "+\t\t\t\t\t}\t\t\t\t\t", "-\t\t\t\tif (currentType == otherType || (!currentType.isTypeVariable() && !currentType.isIntersectionType() && currentType.erasure() == otherType))", "+\t\t\t\tif (currentType == otherType)", "-", "+\t\t\t\tswitch(currentType.kind()) {", "+\t\t\t\t\tcase Binding.PARAMETERIZED_TYPE :", "+\t\t\t\t\tcase Binding.RAW_TYPE :", "+\t\t\t\t\tcase Binding.ARRAY_TYPE : ", "+\t\t\t\t\t\tif (currentType.erasure() == otherType)", "+\t\t\t\t\t\t\treturn currentType;", "+\t\t\t\t}\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f48734005510bcb0b46f230250c090f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBinding.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public TypeBinding findSuperTypeWithSameErasure(TypeBinding otherType)", "signatureAfterChange": " public TypeBinding findSuperTypeOriginatingFrom(TypeBinding otherType)", "diff": ["-public TypeBinding findSuperTypeWithSameErasure(TypeBinding otherType) {", "+public TypeBinding findSuperTypeOriginatingFrom(TypeBinding otherType) {", "-\tint kind;", "-\tswitch(kind = kind()) {", "+\tswitch(kind()) {", "-\t\t\tTypeBinding leafSuperType = arrayType.leafComponentType.findSuperTypeWithSameErasure(otherType.leafComponentType());", "+\t\t\tTypeBinding leafSuperType = arrayType.leafComponentType.findSuperTypeOriginatingFrom(otherType.leafComponentType());", "-\t\t    \t\tTypeBinding match = captureBound.findSuperTypeWithSameErasure(otherType);", "+\t\t    \t\tTypeBinding match = captureBound.findSuperTypeOriginatingFrom(otherType);", "+\t\tcase Binding.INTERSECTION_TYPE:", "-\t\t\tswitch(otherType.kind()) {", "-\t\t\t\tcase Binding.PARAMETERIZED_TYPE :", "-\t\t\t\tcase Binding.RAW_TYPE :", "-\t\t\t\tcase Binding.ARRAY_TYPE : ", "-\t\t\t\t\totherType = otherType.erasure();", "-\t\t\t}", "+\t\t\totherType = otherType.original();", "-\t\t\tswitch(kind) {", "-\t\t\t\tcase Binding.PARAMETERIZED_TYPE :", "-\t\t\t\tcase Binding.RAW_TYPE :", "-\t\t\t\tcase Binding.ARRAY_TYPE : ", "-\t\t\t\t\tif (erasure() == otherType)", "-\t\t\t\t\t\treturn this;", "-\t\t\t}", "-\t\t    ", "+\t\t    if (original() == otherType)", "+\t\t    \treturn this;", "-\t\t\t\t\tswitch(currentType.kind()) {", "-\t\t\t\t\t\tcase Binding.PARAMETERIZED_TYPE :", "-\t\t\t\t\t\tcase Binding.RAW_TYPE :", "-\t\t\t\t\t\tcase Binding.ARRAY_TYPE : ", "-\t\t\t\t\t\t\tif (currentType.erasure() == otherType)", "-\t\t\t\t\t\t\t\treturn currentType;", "-\t\t\t\t\t}\t\t\t\t\t", "+\t\t\t\t\tif (currentType.original() == otherType)", "+\t\t\t\t\t\treturn currentType;", "-\t\t\t\tswitch(currentType.kind()) {", "-\t\t\t\t\tcase Binding.PARAMETERIZED_TYPE :", "-\t\t\t\t\tcase Binding.RAW_TYPE :", "-\t\t\t\t\tcase Binding.ARRAY_TYPE : ", "-\t\t\t\t\t\tif (currentType.erasure() == otherType)", "-\t\t\t\t\t\t\treturn currentType;", "-\t\t\t\t}\t\t\t\t\t", "+\t\t\t\tif (currentType.original() == otherType)", "+\t\t\t\t\treturn currentType;"]}], "num": 35022}