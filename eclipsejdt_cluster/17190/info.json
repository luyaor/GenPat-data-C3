{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e15b07af9cc921c6d8e55e61d456111d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55ac71493c2bb5173f310633c7b99655", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "a73c1b70646c33788c416636d54ca7b824b36c44", "commitAfterChange": "89bcdbe3377ffa239857ce6e220c3e9a2f048f0c", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 43, "signatureBeforeChange": "  \tprivate void printIndentationIfNecessary()", "signatureAfterChange": "  \tprivate void printIndentationIfNecessary()", "diff": ["-\t\tint indentationColumn = (this.useTab ? this.indentationLevel * this.tabSize : this.indentationLevel)+1;", "-\t\tif (this.column < indentationColumn) {", "-\t\t\tStringBuffer buffer = new StringBuffer();", "-\t\t\tfor (int i = getColumnIndentationLevel(), max = this.indentationLevel; i < max; i++) { ", "-\t\t\t\tif (this.useTab) {", "-\t\t\t\t\tthis.tab(buffer);", "-\t\t\t\t} else {", "-\t\t\t\t\tthis.column++;", "-\t\t\t\t\tbuffer.append(this.fillingSpace);", "-\t\t\t\t\tthis.needSpace = false;", "-\t\t\t\t}", "-\t\t\t}", "+\t\tStringBuffer buffer = new StringBuffer();", "+\t\tprintIndentationIfNecessary(buffer);", "+\t\tif (buffer.length() > 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5963a7bc1178940f8e381c54ec044219", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "93ae272625cf7aea539e03a762b5190105386996", "commitAfterChange": "c6f78f890c1ca00b0157b632da091fae2c781833", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 43, "signatureBeforeChange": "  \tprivate void printIndentationIfNecessary()", "signatureAfterChange": "  \tprivate void printIndentationIfNecessary()", "diff": ["-\t\tint indentationColumn = (this.useTab ? this.indentationLevel * this.tabSize : this.indentationLevel)+1;", "-\t\tif (this.column < indentationColumn) {", "-\t\t\tStringBuffer buffer = new StringBuffer();", "-\t\t\tfor (int i = getColumnIndentationLevel(), max = this.indentationLevel; i < max; i++) { ", "-\t\t\t\tif (this.useTab) {", "-\t\t\t\t\tthis.tab(buffer);", "-\t\t\t\t} else {", "-\t\t\t\t\tthis.column++;", "-\t\t\t\t\tbuffer.append(this.fillingSpace);", "-\t\t\t\t\tthis.needSpace = false;", "-\t\t\t\t}", "-\t\t\t}", "+\t\tStringBuffer buffer = new StringBuffer();", "+\t\tprintIndentationIfNecessary(buffer);", "+\t\tif (buffer.length() > 0) {"]}], "num": 17190}