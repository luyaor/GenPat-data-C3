{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "97d550460c8bfe20cb90d28020cf6b45", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4061dc286a78eb4d4ce04f277b0e16dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReturnStatement.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\tif (((this.bits & ASTNode.IsSynchronized) == 0) && this.expression != null && this.expression.resolvedType == TypeBinding.BOOLEAN) {", "+\t\tif (((this.bits & ASTNode.IsSynchronized) == 0) && this.expression != null && TypeBinding.equalsEquals(this.expression.resolvedType, TypeBinding.BOOLEAN)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92cdce58da5711337c4f69bb83eff378", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MethodDeclaration.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void resolveStatements()", "signatureAfterChange": "  \tpublic void resolveStatements()", "diff": ["-\t\t\t\tif (returnsUndeclTypeVar && this.typeParameters[i].binding == this.returnType.resolvedType) {", "+\t\t\t\tif (returnsUndeclTypeVar && TypeBinding.equalsEquals(this.typeParameters[i].binding, this.returnType.resolvedType)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a380e23d93930c2e2601fc28fd76bae0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 116, "signatureBeforeChange": " public void fieldHiding(FieldDeclaration fieldDecl, Binding hiddenVariable)", "signatureAfterChange": " public void fieldHiding(FieldDeclaration fieldDecl, Binding hiddenVariable)", "diff": ["-\t\t\t&& TypeBinding.LONG == field.type) {", "+\t\t\t&& TypeBinding.equalsEquals(TypeBinding.LONG, field.type)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9a9ff1e9569e9718281eeee8d1b6404", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "4106ed4f2c445aec08a08761ce48c9289a12d1a9", "commitAfterChange": "af0e25a1d5ee864ea84d164d70f77532a60cf58e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " void checkInheritedMethods(MethodBinding[] methods, int length, boolean[] isOverridden, boolean[] isInherited)", "signatureAfterChange": " void checkInheritedMethods(MethodBinding[] methods, int length, boolean[] isOverridden, boolean[] isInherited)", "diff": ["-\t\t\t\t\tif (concreteMethod.declaringClass == methods[i].declaringClass ", "+\t\t\t\t\tif (TypeBinding.equalsEquals(concreteMethod.declaringClass, methods[i].declaringClass) "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be2fedc99221ff3f72d180fd9bc85708", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " boolean canSkipInheritedMethods(MethodBinding one, MethodBinding two)", "signatureAfterChange": " boolean canSkipInheritedMethods(MethodBinding one, MethodBinding two)", "diff": ["-\t\t|| (one.declaringClass == two.declaringClass && !one.declaringClass.isParameterizedType());", "+\t\t|| (TypeBinding.equalsEquals(one.declaringClass, two.declaringClass) && !one.declaringClass.isParameterizedType());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7aa508db92d433971153d22b7042bbe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 491, "methodNumberAfterChange": 491, "signatureBeforeChange": " public void unusedPrivateField(FieldDeclaration fieldDecl)", "signatureAfterChange": " public void unusedPrivateField(FieldDeclaration fieldDecl)", "diff": ["-\t\t\t&& TypeBinding.LONG == field.type) {", "+\t\t\t&& TypeBinding.equalsEquals(TypeBinding.LONG, field.type)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed42c3f434eba7c2ab651960525e0351", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tboolean hasOnlyRawBounds()", "signatureAfterChange": "  \tboolean hasOnlyRawBounds()", "diff": ["-\t\tif (this.superclass != null && this.firstBound == this.superclass)", "+\t\tif (this.superclass != null && TypeBinding.equalsEquals(this.firstBound, this.superclass))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5a718b5ebb06520e598350d37b603f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBound.java", "commitBeforeChange": "82adc87bce1ed4088802638154568eeec8ab8e88", "commitAfterChange": "b1c69f20f23ddb575225e5b5cb5d470714f41aad", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic boolean equals(Object obj)", "signatureAfterChange": " \tpublic boolean equals(Object obj)", "diff": ["-\t\t\treturn this.left == other.left && TypeBinding.equalsEquals(this.right, other.right) && this.relation == other.relation; //$IDENTITY-COMPARISON$ InferenceVariable", "+\t\t\treturn TypeBinding.equalsEquals(this.left, other.left) && TypeBinding.equalsEquals(this.right, other.right) && this.relation == other.relation;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f66fbc5c4413831d4a25b4d49dde084a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "signatureAfterChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "diff": ["-\t\t\t&& this.receiver.resolvedType == this.binding.declaringClass // inherited fields are not tracked here", "+\t\t\t&& TypeBinding.equalsEquals(this.receiver.resolvedType, this.binding.declaringClass) // inherited fields are not tracked here"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f80658a1e67328de4b53243ebd20e5b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "  ProblemReporter problemReporter(MethodBinding currentMethod)", "signatureAfterChange": "  ProblemReporter problemReporter(MethodBinding currentMethod)", "diff": ["-\tif (currentMethod.declaringClass == this.type && currentMethod.sourceMethod() != null)\t// only report against the currentMethod if its implemented by the type", "+\tif (TypeBinding.equalsEquals(currentMethod.declaringClass, this.type) && currentMethod.sourceMethod() != null)\t// only report against the currentMethod if its implemented by the type"]}], "num": 65841}