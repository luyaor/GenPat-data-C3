{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1705808fe6d3c20b1ae178ba28b056ba", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "860d7d9c75b8b7680cd2b545ec12521e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SortElementBuilder.java", "commitBeforeChange": "2430a281333449aecffa1fcade92c26003c5a2cb", "commitAfterChange": "8a9626e6249aa5eb23c4206d02454f4ba02ae107", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " \tpublic void enterField( \t\tint declarationStart, \t\tint modifiers, \t\tchar[] type, \t\tchar[] name, \t\tint nameSourceStart, \t\tint nameSourceEnd)", "signatureAfterChange": " \tpublic void enterField( \t\tint declarationStart, \t\tint modifiers, \t\tchar[] type, \t\tchar[] name, \t\tint nameSourceStart, \t\tint nameSourceEnd)", "diff": ["-\t\t\t\t\t\tSortMultipleFielDeclaration multipleFielDeclaration = new SortMultipleFielDeclaration((SortFieldDeclaration) previousElement);", "+\t\t\t\t\t\tSortMultipleFieldDeclaration multipleFielDeclaration = new SortMultipleFieldDeclaration((SortFieldDeclaration) previousElement);", "-\t\t\t\t\t} else if (previousElement.id == SortJavaElement.MULTIPLE_FIELD && ((SortMultipleFielDeclaration) previousElement).declarationStart == declarationStart) {", "-\t\t\t\t\t\t((SortMultipleFielDeclaration) previousElement).addField(fieldDeclaration);", "+\t\t\t\t\t} else if (previousElement.id == SortJavaElement.MULTIPLE_FIELD && ((SortMultipleFieldDeclaration) previousElement).declarationStart == declarationStart) {", "+\t\t\t\t\t\t((SortMultipleFieldDeclaration) previousElement).addField(fieldDeclaration);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb686a4b16c909179c2ab97cfa978644", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SortElementBuilder.java", "commitBeforeChange": "a3da1013b6fe549ad5c2ee5b7dc726eba38ff59e", "commitAfterChange": "30692448718de71df165cc52c018bee7df31a8fb", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic void enterField( \t\tint declarationStart, \t\tint modifiers, \t\tchar[] type, \t\tchar[] name, \t\tint nameSourceStart, \t\tint nameSourceEnd)", "signatureAfterChange": " \tpublic void enterField(FieldInfo fieldInfo)", "diff": ["-\tpublic void enterField(", "-\t\tint declarationStart,", "-\t\tint modifiers,", "-\t\tchar[] type,", "-\t\tchar[] name,", "-\t\tint nameSourceStart,", "-\t\tint nameSourceEnd) {", "+\tpublic void enterField(FieldInfo fieldInfo) {", "-\t\t\t\tSortFieldDeclaration fieldDeclaration = new SortFieldDeclaration(declarationStart, modifiers, type, name, nameSourceStart);", "+\t\t\t\tSortFieldDeclaration fieldDeclaration = new SortFieldDeclaration(fieldInfo.declarationStart, fieldInfo.modifiers, fieldInfo.type, fieldInfo.name, fieldInfo.nameSourceStart);", "-\t\t\t\t\tif (previousElement.id == SortJavaElement.FIELD && ((SortFieldDeclaration) previousElement).declarationStart == declarationStart) {", "+\t\t\t\t\tif (previousElement.id == SortJavaElement.FIELD && ((SortFieldDeclaration) previousElement).declarationStart == fieldInfo.declarationStart) {", "-\t\t\t\t\t} else if (previousElement.id == SortJavaElement.MULTIPLE_FIELD && ((SortMultipleFieldDeclaration) previousElement).declarationStart == declarationStart) {", "+\t\t\t\t\t} else if (previousElement.id == SortJavaElement.MULTIPLE_FIELD && ((SortMultipleFieldDeclaration) previousElement).declarationStart == fieldInfo.declarationStart) {"]}], "num": 53342}