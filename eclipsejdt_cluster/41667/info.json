{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7bccb3fe4f7f2fc5bfbe73102b464db9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1a7cc06934a668e0c4b09023bdb0287", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExpressionFormula.java", "commitBeforeChange": "9043b6a8e4132c7e53a6fb980711e9a0982fef9b", "commitAfterChange": "416292d2f4be39d514e933551cdaebb7c7ebd8a7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tprivate Object reduceReferenceExpressionCompatibility(ReferenceExpression reference, InferenceContext18 inferenceContext)", "signatureAfterChange": "  \tprivate Object reduceReferenceExpressionCompatibility(ReferenceExpression reference, InferenceContext18 inferenceContext)", "diff": ["-\t\tMethodBinding potentiallyApplicable = reference.findCompileTimeMethodTargeting(t, inferenceContext.scope);", "+\t\treference = reference.resolveExpressionExpecting(t, inferenceContext.scope);", "+\t\tMethodBinding potentiallyApplicable = reference != null ? reference.binding : null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4b2e703dca8dfc6f47289dc8e4debbd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExpressionFormula.java", "commitBeforeChange": "9043b6a8e4132c7e53a6fb980711e9a0982fef9b", "commitAfterChange": "416292d2f4be39d514e933551cdaebb7c7ebd8a7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic Object reduce(InferenceContext18 inferenceContext) throws InferenceFailureException", "signatureAfterChange": "  \tpublic Object reduce(InferenceContext18 inferenceContext) throws InferenceFailureException", "diff": ["-\t\t\t\tlambda = lambda.getResolvedCopyForInferenceTargeting(t);", "+\t\t\t\tlambda = lambda.resolveExpressionExpecting(t, inferenceContext.scope);"]}], "num": 41667}