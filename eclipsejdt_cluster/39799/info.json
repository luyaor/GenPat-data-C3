{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "88cbeb89e685c7b2e0bcd37bb878550a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "374dc1987426d9748e18f07e0fa1539f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 177, "methodNumberAfterChange": 182, "signatureBeforeChange": " public void invokeJavaUtilIteratorHasNext()", "signatureAfterChange": "  public void invokeJavaUtilIteratorHasNext()", "diff": ["+", "-\tcountLabels = 0;", "-\tif (classFileOffset + 4 >= bCodeStream.length) {", "-\t\tresizeByteArray();", "-\t}", "-\tposition += 3;", "-\tbCodeStream[classFileOffset++] = OPC_invokeinterface;", "-\twriteUnsignedShort(constantPool.literalIndexForJavaUtilIteratorHasNext());", "-\tbCodeStream[classFileOffset++] = 1;", "-\t// Generate a  0 into the byte array. Like the array is already fill with 0, we just need to increment", "-\t// the number of bytes.", "-\tbCodeStream[classFileOffset++] = 0;", "+\tthis.invoke(", "+\t\t\tOPC_invokeinterface,", "+\t\t\t0, // argCount", "+\t\t\t1, // return type size", "+\t\t\tQualifiedNamesConstants.JavaUtilIteratorConstantPoolName,", "+\t\t\tQualifiedNamesConstants.HasNext,", "+\t\t\tQualifiedNamesConstants.HasNextSignature);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4dd396cb05f3585e1f559988b80e88bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 178, "methodNumberAfterChange": 183, "signatureBeforeChange": " public void invokeJavaUtilIteratorNext()", "signatureAfterChange": " public void invokeJavaUtilIteratorNext()", "diff": ["-\tcountLabels = 0;", "-\tif (classFileOffset + 4 >= bCodeStream.length) {", "-\t\tresizeByteArray();", "-\t}", "-\tposition += 3;", "-\tbCodeStream[classFileOffset++] = OPC_invokeinterface;", "-\twriteUnsignedShort(constantPool.literalIndexForJavaUtilIteratorNext());", "-\tbCodeStream[classFileOffset++] = 1;", "-\t// Generate a  0 into the byte array. Like the array is already fill with 0, we just need to increment", "-\t// the number of bytes.", "-\tbCodeStream[classFileOffset++] = 0;", "+\tthis.invoke(", "+\t\t\tOPC_invokeinterface,", "+\t\t\t0, // argCount", "+\t\t\t1, // return type size", "+\t\t\tQualifiedNamesConstants.JavaUtilIteratorConstantPoolName,", "+\t\t\tQualifiedNamesConstants.Next,", "+\t\t\tQualifiedNamesConstants.NextSignature);"]}], "num": 39799}