{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "971db9534a88c56c25a4a9f420c7dfcf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4520885eed92f86182b5f75fb5b80f8e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " \t \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\tif ((left.constant != NotAConstant) && (left.constant.typeID() == T_boolean)) {", "+\t\t\tif ((left.constant != Constant.NotAConstant) && (left.constant.typeID() == T_boolean)) {", "-\t\t\tif ((right.constant != NotAConstant) && (right.constant.typeID() == T_boolean)) {", "+\t\t\tif ((right.constant != Constant.NotAConstant) && (right.constant.typeID() == T_boolean)) {", "-\t\t\tif ((left.constant != NotAConstant) && (left.constant.typeID() == T_boolean)) {", "+\t\t\tif ((left.constant != Constant.NotAConstant) && (left.constant.typeID() == T_boolean)) {", "-\t\t\tif ((right.constant != NotAConstant) && (right.constant.typeID() == T_boolean)) {", "+\t\t\tif ((right.constant != Constant.NotAConstant) && (right.constant.typeID() == T_boolean)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff0f1d57079ec6562b5d464b8fc8cbad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/WhileStatement.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\tboolean isConditionTrue = cst != NotAConstant && cst.booleanValue() == true;", "-\t\tboolean isConditionFalse = cst != NotAConstant && cst.booleanValue() == false;", "+\t\tboolean isConditionTrue = cst != Constant.NotAConstant && cst.booleanValue() == true;", "+\t\tboolean isConditionFalse = cst != Constant.NotAConstant && cst.booleanValue() == false;", "-\t\tboolean isConditionOptimizedTrue = cst != NotAConstant && cst.booleanValue() == true;", "-\t\tboolean isConditionOptimizedFalse = cst != NotAConstant && cst.booleanValue() == false;", "+\t\tboolean isConditionOptimizedTrue = cst != Constant.NotAConstant && cst.booleanValue() == true;", "+\t\tboolean isConditionOptimizedFalse = cst != Constant.NotAConstant && cst.booleanValue() == false;"]}], "num": 62509}