{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ed0890f23199286dd54077fa223c0374", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bdd2ec21767b4456a770d81574f8092", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/RecoveredTypeBinding.java", "commitBeforeChange": "d752b26e3a6a22a0d2aea83eca1f4ca2bd2e36dd", "commitAfterChange": "24134b187b46ea16212a45107324227f46ba3e4a", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tpublic String getKey()", "signatureAfterChange": " \tpublic String getKey()", "diff": ["-\t\treturn null;", "+\t\tStringBuffer buffer = new StringBuffer();", "+\t\tbuffer.append(\"Recovered#\"); //$NON-NLS-1$", "+\t\tif (this.innerTypeBinding != null) {", "+\t\t\tbuffer.append(\"innerTypeBinding\") //$NON-NLS-1$", "+\t\t\t      .append(this.innerTypeBinding.getKey());", "+\t\t} else if (this.currentType != null) {", "+\t\t\tbuffer.append(\"currentType\") //$NON-NLS-1$", "+\t\t\t      .append(this.currentType.toString());", "+\t\t} else if (this.referenceBinding != null) {", "+\t\t\tbuffer.append(\"referenceBinding\") //$NON-NLS-1$", "+\t\t\t\t  .append(this.referenceBinding.computeUniqueKey());", "+\t\t} else if (variableDeclaration != null) {", "+\t\t\tbuffer", "+\t\t\t\t.append(\"variableDeclaration\") //$NON-NLS-1$", "+\t\t\t\t.append(this.variableDeclaration.getClass())", "+\t\t\t\t.append(this.variableDeclaration.getName().getIdentifier())", "+\t\t\t\t.append(this.variableDeclaration.getExtraDimensions());", "+\t\t}", "+\t\tbuffer.append(this.getDimensions());", "+\t\tif (this.typeArguments != null) {", "+\t\t\tbuffer.append('<');", "+\t\t\tfor (int i = 0, max = this.typeArguments.length; i < max; i++) {", "+\t\t\t\tif (i != 0) {", "+\t\t\t\t\tbuffer.append(',');", "+\t\t\t\t}", "+\t\t\t\tbuffer.append(this.typeArguments[i].getKey());", "+\t\t\t}", "+\t\t\tbuffer.append('>');", "+\t\t}", "+\t\treturn String.valueOf(buffer);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9b3ecb6be880167f4c13538579d1967", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "ee762753cd61547b0946cb35fcfd8e6f1db999a1", "commitAfterChange": "23d0eb606afafd696f3233ebc12d98689422aa13", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " \tpublic static void setClasspathContainer(final IPath containerPath, IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic static void setClasspathContainer(final IPath containerPath, IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\t\t\"\tvalues: {\" //$NON-NLS-1$", "+\t\t\t\t\"\tvalues: {\\n\" //$NON-NLS-1$", "-\t\t\t\t\t\t\tpublic String displayString(Object o) { return ((IClasspathContainer) o).getDescription(); }", "+\t\t\t\t\t\t\tpublic String displayString(Object o) { ", "+\t\t\t\t\t\t\t\tStringBuffer buffer = new StringBuffer(\"\t\t\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tif (o == null) {", "+\t\t\t\t\t\t\t\t\tbuffer.append(\"<null>\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\treturn buffer.toString();", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tIClasspathContainer container = (IClasspathContainer) o;", "+\t\t\t\t\t\t\t\tbuffer.append(container.getDescription());", "+\t\t\t\t\t\t\t\tbuffer.append(\" {\\n\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tIClasspathEntry[] entries = container.getClasspathEntries();", "+\t\t\t\t\t\t\t\tif (entries != null){", "+\t\t\t\t\t\t\t\t\tfor (int i = 0; i < entries.length; i++){", "+\t\t\t\t\t\t\t\t\t\tbuffer.append(\" \t\t\t\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\t\tbuffer.append(entries[i]); ", "+\t\t\t\t\t\t\t\t\t\tbuffer.append('\\n'); ", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tbuffer.append(\" \t\t}\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\treturn buffer.toString();", "+\t\t\t\t\t\t\t}", "-\t\t\t\t+ \"}\"); //$NON-NLS-1$", "+\t\t\t\t+ \"\\n\t}\"); //$NON-NLS-1$", "-\t\t\t\t\t\t\tUtil.verbose(\"\tprevious value: \" + previousContainer.getDescription()); //$NON-NLS-1$", "+\t\t\t\t\t\t\tStringBuffer buffer = new StringBuffer(previousContainer.getDescription());", "+\t\t\t\t\t\t\tbuffer.append(\" {\\n\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\tIClasspathEntry[] entries = previousContainer.getClasspathEntries();", "+\t\t\t\t\t\t\tif (entries != null){", "+\t\t\t\t\t\t\t\tfor (int j = 0; j < entries.length; j++){", "+\t\t\t\t\t\t\t\t\tbuffer.append(\" \t\t\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\tbuffer.append(entries[j]); ", "+\t\t\t\t\t\t\t\t\tbuffer.append('\\n'); ", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tbuffer.append(\" \t\t}\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\tUtil.verbose(\"\tprevious value: \" + buffer.toString()); //$NON-NLS-1$"]}], "num": 56096}