{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9d774a9b62d04641700f0c7a8711090a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2962af4ad86a5e8e0a2ff2898754a534", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/LineBreaksPreparator.java", "commitBeforeChange": "f4e74d70f4887f5aa91dac7da4ca9525dd9faf46", "commitAfterChange": "67e2d890d140f0b0ae567bdbbeeb1263627c1c3f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \t@Override \tpublic boolean visit(EnumDeclaration node)", "signatureAfterChange": "  \t@Override \tpublic boolean visit(EnumDeclaration node)", "diff": ["-\t\tfor (int i = 0; i < enumConstants.size() - 1; i++) {", "+\t\tfor (int i = 0; i < enumConstants.size(); i++) {", "-\t\t\tif (declaration.getAnonymousClassDeclaration() != null)", "+\t\t\tif (declaration.getJavadoc() != null)", "+\t\t\t\tthis.tm.firstTokenIn(declaration, TokenNameCOMMENT_JAVADOC).breakBefore();", "+\t\t\tif (declaration.getAnonymousClassDeclaration() != null && i < enumConstants.size() - 1)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71391bf903509b18c3465aa0c24b5a83", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "69780dcca529e8f2d1805302540c7bbe9fa503f2", "commitAfterChange": "7860b610be9e2eabb5e3243184589b586fd8ab56", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "\r \t\r \tpublic Statement convert(ExplicitConstructorCall statement)", "signatureAfterChange": "\r \t\r \tpublic Statement convert(ExplicitConstructorCall statement)", "diff": ["-\t\t\tSuperConstructorInvocation superConstructorInvocaTion = this.ast.newSuperConstructorInvocation();\r", "+\t\t\tSuperConstructorInvocation superConstructorInvocation = this.ast.newSuperConstructorInvocation();\r", "-\t\t\t\tsuperConstructorInvocaTion.setExpression(convert(statement.qualification));\r", "+\t\t\t\tsuperConstructorInvocation.setExpression(convert(statement.qualification));\r", "-\t\t\t\t\tsuperConstructorInvocaTion.arguments().add(convert(arguments[i]));\r", "+\t\t\t\t\tsuperConstructorInvocation.arguments().add(convert(arguments[i]));\r", "-\t\t\tnewStatement = superConstructorInvocaTion;\r", "+\t\t\tnewStatement = superConstructorInvocation;\r"]}], "num": 43149}