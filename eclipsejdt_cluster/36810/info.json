{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3badf7ba547f021ca9e1343a4480e48a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "567ea0cb4c855268988cc083372f43da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "13991702fc2c3e2b678aa9ef22a4a03b29ad808b", "commitAfterChange": "3a8b2107b944f5a4646c23d5049199496436bc6e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void cachePartsFrom(IBinaryType binaryType, boolean needFieldsAndMethods)", "signatureAfterChange": "  void cachePartsFrom(IBinaryType binaryType, boolean needFieldsAndMethods)", "diff": ["-\t\t/* https://bugs.eclipse.org/bugs/show_bug.cgi?id=324850, even in a 1.4 project, we", "-\t\t   must internalize type variables and observe any parameterization of super class", "-\t\t   and/or super interfaces in order to be able to detect overriding in the presence", "-\t\t   of generics.", "-\t\t */", "-\t\tchar[] typeSignature = binaryType.getGenericSignature(); // use generic signature even in 1.4", "-\t\tthis.tagBits |= binaryType.getTagBits();", "-\t\t", "+\t\tchar[] typeSignature = null;", "+\t\tif (sourceLevel >= ClassFileConstants.JDK1_5) {", "+\t\t\ttypeSignature = binaryType.getGenericSignature();", "+\t\t\tthis.tagBits |= binaryType.getTagBits();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f21c7af88651f535e0cbc75a9a671878", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CopyMoveResourcesTests.java", "commitBeforeChange": "fda975d98b069f678ae89a663957463bb7bd4088", "commitAfterChange": "2e99c72cc03690dcb30e61cdafeb829a4f1ada2f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public IJavaElement copyPositive(IJavaElement element, IJavaElement container, IJavaElement sibling, String rename, boolean force) throws JavaModelException", "signatureAfterChange": " public IJavaElement copyPositive(IJavaElement element, IJavaElement container, IJavaElement sibling, String rename, boolean force) throws JavaModelException", "diff": ["-\t\tIJavaElementDelta[] deltas = destDelta.getAddedChildren();", "+\t\tIJavaElementDelta[] deltas = null;", "+\t\tif (force) {", "+\t\t\tdeltas = destDelta.getChangedChildren();", "+\t\t}", "+\t\telse {", "+\t\t\tdeltas = destDelta.getAddedChildren();", "+\t\t}"]}], "num": 36810}