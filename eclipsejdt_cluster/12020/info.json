{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "36e8c3c4a1de24b747975fc1ade0808d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcb6c9e85a7dd47d15a4e6751d378eba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/OR_OR_Expression.java", "commitBeforeChange": "50431e234c5ece34d7b8d3e0af32a86a5079d5cd", "commitAfterChange": "e87f626a0744f3e42bfbad630a4e9545c488a83d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void generateOptimizedBoolean( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedBoolean( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "diff": ["-\t\t\t\tLabel internalFalseLabel = new Label(codeStream);", "+\t\t\t\tLabel internalTrueLabel = new Label(codeStream);", "+\t\t\t\t\tinternalTrueLabel,", "-\t\t\t\t\tinternalFalseLabel, // will be true in the end", "-\t\t\t\t\tfalse);", "+\t\t\t\t\ttrue); ", "-\t\t\t\tinternalFalseLabel.place();", "+\t\t\t\tinternalTrueLabel.place();", "+\t\t\t\tif (rightInitStateIndex != -1) {", "+\t\t\t\t\tcodeStream.addDefinitelyAssignedVariables(currentScope, rightInitStateIndex);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee05412873e9493e0e462041a5893bb5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AND_AND_Expression.java", "commitBeforeChange": "50431e234c5ece34d7b8d3e0af32a86a5079d5cd", "commitAfterChange": "e87f626a0744f3e42bfbad630a4e9545c488a83d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void generateOptimizedBoolean( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedBoolean( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "diff": ["-\t\t\t\tLabel internalTrueLabel = new Label(codeStream);", "+\t\t\t\tLabel internalFalseLabel = new Label(codeStream);", "-\t\t\t\t\tinternalTrueLabel, // will be false in the end", "-\t\t\t\t\tfalse);", "+\t\t\t\t\tinternalFalseLabel, ", "+\t\t\t\t\ttrue);", "-\t\t\t\tinternalTrueLabel.place();", "+\t\t\t\tinternalFalseLabel.place();"]}], "num": 12020}