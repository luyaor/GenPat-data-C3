{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a2f9327956a85cce3cd71dbf69de9ba5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8f7e512d3000fb3f6c3c7932e90ff58", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "77ac300d6d124e9b071b4e62fab3a583e6eecdc4", "commitAfterChange": "fbf658958d1eb066a4b5c16fdea253c3d8d5019c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "diff": ["-\t\t", "-\t\tthis.parentScope = blockScope;", "+\t\tthis.constant = Constant.NotAConstant;", "+\t\tthis.enclosingScope = blockScope;", "-\t\t\tif (devNullCompilationResult == null)", "-\t\t\t\tdevNullCompilationResult = new CompilationResult(this.compilationResult.getCompilationUnit(), 0, 0, blockScope.compilerOptions().maxProblemsPerUnit);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f79413ffd7d17e210eae84e6a3b0a4c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FunctionalExpression.java", "commitBeforeChange": "77ac300d6d124e9b071b4e62fab3a583e6eecdc4", "commitAfterChange": "fbf658958d1eb066a4b5c16fdea253c3d8d5019c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic FunctionalExpression()", "signatureAfterChange": " \t \tpublic FunctionalExpression(CompilationResult compilationResult)", "diff": ["-\tpublic FunctionalExpression() {", "-\t\tsuper();", "+\tpublic FunctionalExpression(CompilationResult compilationResult) {", "+\t\tthis.compilationResult = compilationResult;", "+\t\tif (devNullCompilationResult == null) {", "+\t\t\tdevNullCompilationResult = new CompilationResult(this.compilationResult.getCompilationUnit(), 0, 0, Integer.MAX_VALUE /* maximum problems per unit */);", "+\t\t}"]}], "num": 20324}