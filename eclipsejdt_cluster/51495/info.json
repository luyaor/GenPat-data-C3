{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f355d38062dacd23226c9af04092be6c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04988c900dccc5be3d05ea5d40edfbd3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "62ce2e8c5f0cb8acac7a47921bf6e9ae7974c7a1", "commitAfterChange": "3c755125fb6d43834cd7c6dfb58024a6d397b566", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": "  public void test137() throws JavaModelException", "signatureAfterChange": "  public void test137() throws JavaModelException", "diff": ["+\t\t\"wait[METHOD_REF]{wait(long, int), Ljava.lang.Object;, (JI)V, wait, (millis, nanos), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"wait[METHOD_REF]{wait(long), Ljava.lang.Object;, (J)V, wait, (millis), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"wait[METHOD_REF]{wait(), Ljava.lang.Object;, ()V, wait, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"toString[METHOD_REF]{toString(), Ljava.lang.Object;, ()Ljava.lang.String;, toString, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"notifyAll[METHOD_REF]{notifyAll(), Ljava.lang.Object;, ()V, notifyAll, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"notify[METHOD_REF]{notify(), Ljava.lang.Object;, ()V, notify, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"hashCode[METHOD_REF]{hashCode(), Ljava.lang.Object;, ()I, hashCode, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"getClass[METHOD_REF]{getClass(), Ljava.lang.Object;, ()Ljava.lang.Class;, getClass, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"finalize[METHOD_REF]{finalize(), Ljava.lang.Object;, ()V, finalize, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"equals[METHOD_REF]{equals(Object), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, (obj), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"clone[METHOD_REF]{clone(), Ljava.lang.Object;, ()Ljava.lang.Object;, clone, null, \"+this.positions+R_DICNRNS+\"}\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3950957b44eccc2f69212bbe439fa3b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "62ce2e8c5f0cb8acac7a47921bf6e9ae7974c7a1", "commitAfterChange": "3c755125fb6d43834cd7c6dfb58024a6d397b566", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  public void test040() throws JavaModelException", "signatureAfterChange": "  public void test040() throws JavaModelException", "diff": ["+\t\t\"wait[METHOD_REF]{wait(long, int), Ljava.lang.Object;, (JI)V, wait, (millis, nanos), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"wait[METHOD_REF]{wait(long), Ljava.lang.Object;, (J)V, wait, (millis), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"wait[METHOD_REF]{wait(), Ljava.lang.Object;, ()V, wait, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"toString[METHOD_REF]{toString(), Ljava.lang.Object;, ()Ljava.lang.String;, toString, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"notifyAll[METHOD_REF]{notifyAll(), Ljava.lang.Object;, ()V, notifyAll, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"notify[METHOD_REF]{notify(), Ljava.lang.Object;, ()V, notify, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"hashCode[METHOD_REF]{hashCode(), Ljava.lang.Object;, ()I, hashCode, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"getClass[METHOD_REF]{getClass(), Ljava.lang.Object;, ()Ljava.lang.Class;, getClass, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"finalize[METHOD_REF]{finalize(), Ljava.lang.Object;, ()V, finalize, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"equals[METHOD_REF]{equals(Object), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, (obj), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"clone[METHOD_REF]{clone(), Ljava.lang.Object;, ()Ljava.lang.Object;, clone, null, \"+this.positions+R_DICNRNS+\"}\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c8da1ff31d81993cb32e209dd03db29", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocFieldCompletionModelTest.java", "commitBeforeChange": "62ce2e8c5f0cb8acac7a47921bf6e9ae7974c7a1", "commitAfterChange": "3c755125fb6d43834cd7c6dfb58024a6d397b566", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  public void test024() throws JavaModelException", "signatureAfterChange": "  public void test024() throws JavaModelException", "diff": ["+\t\t\"wait[METHOD_REF]{wait(long, int), Ljava.lang.Object;, (JI)V, wait, (millis, nanos), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"wait[METHOD_REF]{wait(long), Ljava.lang.Object;, (J)V, wait, (millis), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"wait[METHOD_REF]{wait(), Ljava.lang.Object;, ()V, wait, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"toString[METHOD_REF]{toString(), Ljava.lang.Object;, ()Ljava.lang.String;, toString, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"notifyAll[METHOD_REF]{notifyAll(), Ljava.lang.Object;, ()V, notifyAll, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"notify[METHOD_REF]{notify(), Ljava.lang.Object;, ()V, notify, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"hashCode[METHOD_REF]{hashCode(), Ljava.lang.Object;, ()I, hashCode, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"getClass[METHOD_REF]{getClass(), Ljava.lang.Object;, ()Ljava.lang.Class;, getClass, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"finalize[METHOD_REF]{finalize(), Ljava.lang.Object;, ()V, finalize, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"equals[METHOD_REF]{equals(Object), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, (obj), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"clone[METHOD_REF]{clone(), Ljava.lang.Object;, ()Ljava.lang.Object;, clone, null, \"+this.positions+R_DICNRNS+\"}\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a8a6de63fc94823fdb3dfd40a03dc03", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "62ce2e8c5f0cb8acac7a47921bf6e9ae7974c7a1", "commitAfterChange": "3c755125fb6d43834cd7c6dfb58024a6d397b566", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": "  public void test138() throws JavaModelException", "signatureAfterChange": "  public void test138() throws JavaModelException", "diff": ["+\t\t\"wait[METHOD_REF]{wait(long, int), Ljava.lang.Object;, (JI)V, wait, (millis, nanos), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"wait[METHOD_REF]{wait(long), Ljava.lang.Object;, (J)V, wait, (millis), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"wait[METHOD_REF]{wait(), Ljava.lang.Object;, ()V, wait, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"toString[METHOD_REF]{toString(), Ljava.lang.Object;, ()Ljava.lang.String;, toString, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"notifyAll[METHOD_REF]{notifyAll(), Ljava.lang.Object;, ()V, notifyAll, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"notify[METHOD_REF]{notify(), Ljava.lang.Object;, ()V, notify, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"hashCode[METHOD_REF]{hashCode(), Ljava.lang.Object;, ()I, hashCode, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"getClass[METHOD_REF]{getClass(), Ljava.lang.Object;, ()Ljava.lang.Class;, getClass, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"finalize[METHOD_REF]{finalize(), Ljava.lang.Object;, ()V, finalize, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"equals[METHOD_REF]{equals(Object), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, (obj), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"clone[METHOD_REF]{clone(), Ljava.lang.Object;, ()Ljava.lang.Object;, clone, null, \"+this.positions+R_DICNRNS+\"}\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b7c4b88f339b37b474f8718b4dec740", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocPackageCompletionModelTest.java", "commitBeforeChange": "62ce2e8c5f0cb8acac7a47921bf6e9ae7974c7a1", "commitAfterChange": "3c755125fb6d43834cd7c6dfb58024a6d397b566", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  public void test024() throws JavaModelException", "signatureAfterChange": "  public void test024() throws JavaModelException", "diff": ["+\t\t\"wait[METHOD_REF]{wait(long, int), Ljava.lang.Object;, (JI)V, wait, (millis, nanos), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"wait[METHOD_REF]{wait(long), Ljava.lang.Object;, (J)V, wait, (millis), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"wait[METHOD_REF]{wait(), Ljava.lang.Object;, ()V, wait, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"toString[METHOD_REF]{toString(), Ljava.lang.Object;, ()Ljava.lang.String;, toString, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"notifyAll[METHOD_REF]{notifyAll(), Ljava.lang.Object;, ()V, notifyAll, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"notify[METHOD_REF]{notify(), Ljava.lang.Object;, ()V, notify, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"hashCode[METHOD_REF]{hashCode(), Ljava.lang.Object;, ()I, hashCode, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"getClass[METHOD_REF]{getClass(), Ljava.lang.Object;, ()Ljava.lang.Class;, getClass, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"finalize[METHOD_REF]{finalize(), Ljava.lang.Object;, ()V, finalize, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"equals[METHOD_REF]{equals(Object), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, (obj), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"clone[METHOD_REF]{clone(), Ljava.lang.Object;, ()Ljava.lang.Object;, clone, null, \"+this.positions+R_DICNRNS+\"}\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "841b936e8afe57460983ccc3455b5854", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "62ce2e8c5f0cb8acac7a47921bf6e9ae7974c7a1", "commitAfterChange": "3c755125fb6d43834cd7c6dfb58024a6d397b566", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 109, "signatureBeforeChange": "  public void test140() throws JavaModelException", "signatureAfterChange": "  public void test140() throws JavaModelException", "diff": ["+\t\t\"wait[METHOD_REF]{wait(long, int), Ljava.lang.Object;, (JI)V, wait, (millis, nanos), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"wait[METHOD_REF]{wait(long), Ljava.lang.Object;, (J)V, wait, (millis), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"wait[METHOD_REF]{wait(), Ljava.lang.Object;, ()V, wait, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"toString[METHOD_REF]{toString(), Ljava.lang.Object;, ()Ljava.lang.String;, toString, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"notifyAll[METHOD_REF]{notifyAll(), Ljava.lang.Object;, ()V, notifyAll, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"notify[METHOD_REF]{notify(), Ljava.lang.Object;, ()V, notify, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"hashCode[METHOD_REF]{hashCode(), Ljava.lang.Object;, ()I, hashCode, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"getClass[METHOD_REF]{getClass(), Ljava.lang.Object;, ()Ljava.lang.Class;, getClass, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"finalize[METHOD_REF]{finalize(), Ljava.lang.Object;, ()V, finalize, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"equals[METHOD_REF]{equals(Object), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, (obj), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"clone[METHOD_REF]{clone(), Ljava.lang.Object;, ()Ljava.lang.Object;, clone, null, \"+this.positions+R_DICNRNS+\"}\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8837143f05885c6dc0c7e690c5d1f7dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "62ce2e8c5f0cb8acac7a47921bf6e9ae7974c7a1", "commitAfterChange": "3c755125fb6d43834cd7c6dfb58024a6d397b566", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "  public void test038() throws JavaModelException", "signatureAfterChange": "  public void test038() throws JavaModelException", "diff": ["+\t\t\"wait[METHOD_REF]{wait(long, int), Ljava.lang.Object;, (JI)V, wait, (millis, nanos), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"wait[METHOD_REF]{wait(long), Ljava.lang.Object;, (J)V, wait, (millis), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"wait[METHOD_REF]{wait(), Ljava.lang.Object;, ()V, wait, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"toString[METHOD_REF]{toString(), Ljava.lang.Object;, ()Ljava.lang.String;, toString, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"notifyAll[METHOD_REF]{notifyAll(), Ljava.lang.Object;, ()V, notifyAll, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"notify[METHOD_REF]{notify(), Ljava.lang.Object;, ()V, notify, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"hashCode[METHOD_REF]{hashCode(), Ljava.lang.Object;, ()I, hashCode, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"getClass[METHOD_REF]{getClass(), Ljava.lang.Object;, ()Ljava.lang.Class;, getClass, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"finalize[METHOD_REF]{finalize(), Ljava.lang.Object;, ()V, finalize, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"equals[METHOD_REF]{equals(Object), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, (obj), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"clone[METHOD_REF]{clone(), Ljava.lang.Object;, ()Ljava.lang.Object;, clone, null, \"+this.positions+R_DICNRNS+\"}\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a606718217f06dc0322ab22dd1a8f772", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "62ce2e8c5f0cb8acac7a47921bf6e9ae7974c7a1", "commitAfterChange": "3c755125fb6d43834cd7c6dfb58024a6d397b566", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  public void test037() throws JavaModelException", "signatureAfterChange": "  public void test037() throws JavaModelException", "diff": ["+\t\t\"wait[METHOD_REF]{wait(long, int), Ljava.lang.Object;, (JI)V, wait, (millis, nanos), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"wait[METHOD_REF]{wait(long), Ljava.lang.Object;, (J)V, wait, (millis), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"wait[METHOD_REF]{wait(), Ljava.lang.Object;, ()V, wait, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"toString[METHOD_REF]{toString(), Ljava.lang.Object;, ()Ljava.lang.String;, toString, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"notifyAll[METHOD_REF]{notifyAll(), Ljava.lang.Object;, ()V, notifyAll, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"notify[METHOD_REF]{notify(), Ljava.lang.Object;, ()V, notify, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"hashCode[METHOD_REF]{hashCode(), Ljava.lang.Object;, ()I, hashCode, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"getClass[METHOD_REF]{getClass(), Ljava.lang.Object;, ()Ljava.lang.Class;, getClass, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"finalize[METHOD_REF]{finalize(), Ljava.lang.Object;, ()V, finalize, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"equals[METHOD_REF]{equals(Object), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, (obj), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"clone[METHOD_REF]{clone(), Ljava.lang.Object;, ()Ljava.lang.Object;, clone, null, \"+this.positions+R_DICNRNS+\"}\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dba5feb681c4ffe4dfcd18b2dbfa79f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "62ce2e8c5f0cb8acac7a47921bf6e9ae7974c7a1", "commitAfterChange": "3c755125fb6d43834cd7c6dfb58024a6d397b566", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": "  public void test139() throws JavaModelException", "signatureAfterChange": "  public void test139() throws JavaModelException", "diff": ["+\t\t\"wait[METHOD_REF]{wait(long, int), Ljava.lang.Object;, (JI)V, wait, (millis, nanos), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"wait[METHOD_REF]{wait(long), Ljava.lang.Object;, (J)V, wait, (millis), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"wait[METHOD_REF]{wait(), Ljava.lang.Object;, ()V, wait, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"toString[METHOD_REF]{toString(), Ljava.lang.Object;, ()Ljava.lang.String;, toString, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"notifyAll[METHOD_REF]{notifyAll(), Ljava.lang.Object;, ()V, notifyAll, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"notify[METHOD_REF]{notify(), Ljava.lang.Object;, ()V, notify, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"hashCode[METHOD_REF]{hashCode(), Ljava.lang.Object;, ()I, hashCode, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"getClass[METHOD_REF]{getClass(), Ljava.lang.Object;, ()Ljava.lang.Class;, getClass, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"finalize[METHOD_REF]{finalize(), Ljava.lang.Object;, ()V, finalize, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"equals[METHOD_REF]{equals(Object), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, (obj), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"clone[METHOD_REF]{clone(), Ljava.lang.Object;, ()Ljava.lang.Object;, clone, null, \"+this.positions+R_DICNRNS+\"}\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebc3e8cec8cfb6da8934f20dc7225473", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "62ce2e8c5f0cb8acac7a47921bf6e9ae7974c7a1", "commitAfterChange": "3c755125fb6d43834cd7c6dfb58024a6d397b566", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  public void test039() throws JavaModelException", "signatureAfterChange": "  public void test039() throws JavaModelException", "diff": ["+\t\t\"wait[METHOD_REF]{wait(long, int), Ljava.lang.Object;, (JI)V, wait, (millis, nanos), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"wait[METHOD_REF]{wait(long), Ljava.lang.Object;, (J)V, wait, (millis), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"wait[METHOD_REF]{wait(), Ljava.lang.Object;, ()V, wait, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"toString[METHOD_REF]{toString(), Ljava.lang.Object;, ()Ljava.lang.String;, toString, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"notifyAll[METHOD_REF]{notifyAll(), Ljava.lang.Object;, ()V, notifyAll, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"notify[METHOD_REF]{notify(), Ljava.lang.Object;, ()V, notify, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"hashCode[METHOD_REF]{hashCode(), Ljava.lang.Object;, ()I, hashCode, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"getClass[METHOD_REF]{getClass(), Ljava.lang.Object;, ()Ljava.lang.Class;, getClass, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"finalize[METHOD_REF]{finalize(), Ljava.lang.Object;, ()V, finalize, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"equals[METHOD_REF]{equals(Object), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, (obj), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "+\t\t\"clone[METHOD_REF]{clone(), Ljava.lang.Object;, ()Ljava.lang.Object;, clone, null, \"+this.positions+R_DICNRNS+\"}\\n\" + "]}], "num": 51495}