{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e831112b408d606419c65ab651aeb83", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "299de959c2641869b2bcab4852764f75", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "5fa6afe954089094ae8cca4de90fd35757e48b64", "commitAfterChange": "ae67359ba1af0f32a3cb74678feaffc1673aa2c9", "methodNumberBeforeChange": 232, "methodNumberAfterChange": 236, "signatureBeforeChange": "  public void parse( \tInitializer ini,  \tTypeDeclaration type,  \tCompilationUnitDeclaration unit)", "signatureAfterChange": "  public void parse( \tInitializer ini,  \tTypeDeclaration type,  \tCompilationUnitDeclaration unit)", "diff": ["-\tgoForInitializer();", "+\tgoForBlockStatementsopt();", "-", "+\tpushOnRealBlockStack(0);", "+\t", "-\tscanner.resetTo(ini.sourceStart, ini.sourceEnd); // just on the beginning {", "+\tscanner.resetTo(ini.bodyStart, ini.bodyEnd); // just on the beginning {", "+\tcheckNonNLSAfterBodyEnd(ini.declarationSourceEnd);", "+\t", "-", "-\tini.block = ((Initializer) astStack[astPtr]).block;", "+\t", "+\t//refill statements", "+\tini.block.explicitDeclarations = realBlockStack[realBlockPtr--];", "+\tint length;", "+\tif ((length = astLengthStack[astLengthPtr--]) != 0)", "+\t\tSystem.arraycopy(", "+\t\t\tastStack, ", "+\t\t\t(astPtr -= length) + 1, ", "+\t\t\tini.block.statements = new Statement[length], ", "+\t\t\t0, ", "+\t\t\tlength); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39a361c80fe6ebebecb9d70b0f795e51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "5f2456aa4b2b769de40fe8c031c43b1afaff3ffc", "commitAfterChange": "7234934f3efed703cbf030a33d03d36a447aeef6", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " public void parseBlockStatements(MethodDeclaration md, CompilationUnitDeclaration unit)", "signatureAfterChange": " public void parseBlockStatements(MethodDeclaration md, CompilationUnitDeclaration unit)", "diff": ["+\t", "+\tif (this.assistNode != null || lastAct == ERROR_ACTION) {", "+\t\treturn;", "+\t}", "+", "+\t// if no assist node was found, attach the statements as we might be searching for a declaration in a local type", "+\tmd.explicitDeclarations = realBlockStack[realBlockPtr--];", "+\tint length;", "+\tif ((length = astLengthStack[astLengthPtr--]) != 0) {", "+\t\tSystem.arraycopy(", "+\t\t\tastStack, ", "+\t\t\t(astPtr -= length) + 1, ", "+\t\t\tmd.statements = new Statement[length], ", "+\t\t\t0, ", "+\t\t\tlength); ", "+\t} else {", "+\t\tif (!containsComment(md.bodyStart, md.bodyEnd)) {", "+\t\t\tmd.bits |= AstNode.UndocumentedEmptyBlockMASK;", "+\t\t}", "+\t}", "+"]}], "num": 12462}