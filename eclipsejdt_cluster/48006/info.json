{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "304feab3a8c2de5d15d6718ac5d6aa93", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56a659db83fcf0ef202beb3d24e4066f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "3861d4cfff200f4a20f9b2846cf8819b2fe85539", "commitAfterChange": "1ab7b833f2e8fe1eaa17a4c72f8b9580f4ae1592", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "  protected void report(SearchMatch match) throws CoreException", "signatureAfterChange": "  protected void report(SearchMatch match) throws CoreException", "diff": ["+\t\tSystem.out.print(\"\\tMatch rule: \"); //$NON-NLS-1$", "+\t\tif ((match.getMatchRule() & SearchPattern.R_EQUIVALENT_MATCH) != 0) {", "+\t\t\tif ((match.getMatchRule() & SearchPattern.R_ERASURE_MATCH) != 0) {", "+\t\t\t\tSystem.out.println(\"EQUIVALENT + ERASURE\"); //$NON-NLS-1$", "+\t\t\t} else {", "+\t\t\t\tSystem.out.println(\"EQUIVALENT\"); //$NON-NLS-1$", "+\t\t\t}", "+\t\t} else if ((match.getMatchRule() & SearchPattern.R_ERASURE_MATCH) != 0) {", "+\t\t\tSystem.out.println(\"ERASURE\"); //$NON-NLS-1$", "+\t\t} else {", "+\t\t\tSystem.out.println(\"PERFECT\"); //$NON-NLS-1$", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6af7b255cb5338071904e0157b13adb5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "9ee78f50bb7fb9d70095ea7ff2d9f2e27d840c37", "commitAfterChange": "b6410432af18704990f18fa69a09dd7a76e8fb04", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 59, "signatureBeforeChange": "  protected void report(SearchMatch match) throws CoreException", "signatureAfterChange": "  protected void report(SearchMatch match) throws CoreException", "diff": ["-\t\tSystem.out.print(\"\\tMatch rule: \"); //$NON-NLS-1$", "-\t\tif ((match.getMatchRule() & SearchPattern.R_EQUIVALENT_MATCH) != 0) {", "-\t\t\tif ((match.getMatchRule() & SearchPattern.R_ERASURE_MATCH) != 0) {", "-\t\t\t\tSystem.out.println(\"EQUIVALENT + ERASURE\"); //$NON-NLS-1$", "-\t\t\t} else {", "-\t\t\t\tSystem.out.println(\"EQUIVALENT\"); //$NON-NLS-1$", "-\t\t\t}", "-\t\t} else if ((match.getMatchRule() & SearchPattern.R_ERASURE_MATCH) != 0) {", "+\t\tSystem.out.print(\"\\tRule: \"); //$NON-NLS-1$", "+\t\tif (match.isExact()) {", "+\t\t\tSystem.out.println(\"EXACT\"); //$NON-NLS-1$", "+\t\t} else if (match.isEquivalent()) {", "+\t\t\tSystem.out.println(\"EQUIVALENT\"); //$NON-NLS-1$", "+\t\t} else if (match.isErasure()) {", "-\t\t\tSystem.out.println(\"PERFECT\"); //$NON-NLS-1$", "+\t\t\tSystem.out.println(\"INVALID RULE\"); //$NON-NLS-1$", "+\t\tSystem.out.println(\"\\tRaw: \"+match.isRaw()); //$NON-NLS-1$"]}], "num": 48006}