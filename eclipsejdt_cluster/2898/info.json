{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3bc571211737eb39c042df8518c4d0d4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59842c20afa718d556cc662439bc5cce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "2eab698c606e3b17217602bbc99837242c743a5a", "commitAfterChange": "6d141275326cf4caf65ec5dca68b565e2e9b1360", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "  public UnconditionalFlowInfo mergedWith(UnconditionalFlowInfo otherInits)", "signatureAfterChange": "  public UnconditionalFlowInfo mergedWith(UnconditionalFlowInfo otherInits)", "diff": ["-\t\t", "+    \t\t// workaround for Bug 386181 - [compiler][null] wrong transition in UnconditionalFlowInfo.mergedWith()", "+    \t\tax = a1 & ~a2 & a3 & ~a4;", "+    \t\tbx = b1 & ~b2 & ~b3 & b4;", "+    \t\tx = ax&bx;", "+    \t\tax = a1 & ~a2 & ~a3 & a4;", "+    \t\tbx = b1 & ~b2 & b3 & ~b4;", "+    \t\tx |= (ax&bx);", "+    \t\tif (x != 0) {", "+    \t\t\t// establish state 0011 for all variable ids in x:", "+    \t\t\tthis.nullBit1 &= ~x;", "+    \t\t\tthis.nullBit2 &= ~x;", "+    \t\t\tthis.nullBit3 |= x;", "+    \t\t\tthis.nullBit4 |= x;", "+    \t\t}", "+", "+    \t\t// workaround for Bug 386181 - [compiler][null] wrong transition in UnconditionalFlowInfo.mergedWith()", "+    \t\tax = a1 & ~a2 & a3 & ~a4;", "+    \t\tbx = b1 & ~b2 & ~b3 & b4;", "+    \t\tx = ax&bx;", "+    \t\tax = a1 & ~a2 & ~a3 & a4;", "+    \t\tbx = b1 & ~b2 & b3 & ~b4;", "+    \t\tx |= (ax&bx);", "+    \t\tif (x != 0) {", "+    \t\t\t// establish state 0011 for all variable ids in x:", "+    \t\t\tthis.extra[2][i] &= ~x;", "+    \t\t\tthis.extra[3][i] &= ~x;", "+    \t\t\tthis.extra[4][i] |= x;", "+    \t\t\tthis.extra[5][i] |= x;", "+    \t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7196ffe9285a07fd1ef687fb92d90af9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "8c030d505f30b0cafedd9f4204a10256b97739b1", "commitAfterChange": "7ad108ea3de2b7d68d2737f4428379110b97b811", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "  public UnconditionalFlowInfo mergedWith(UnconditionalFlowInfo otherInits)", "signatureAfterChange": "  public UnconditionalFlowInfo mergedWith(UnconditionalFlowInfo otherInits)", "diff": ["-\t\t", "+    \t\t// workaround for Bug 386181 - [compiler][null] wrong transition in UnconditionalFlowInfo.mergedWith()", "+    \t\tax = a1 & ~a2 & a3 & ~a4;", "+    \t\tbx = b1 & ~b2 & ~b3 & b4;", "+    \t\tx = ax&bx;", "+    \t\tax = a1 & ~a2 & ~a3 & a4;", "+    \t\tbx = b1 & ~b2 & b3 & ~b4;", "+    \t\tx |= (ax&bx);", "+    \t\tif (x != 0) {", "+    \t\t\t// establish state 0011 for all variable ids in x:", "+    \t\t\tthis.nullBit1 &= ~x;", "+    \t\t\tthis.nullBit2 &= ~x;", "+    \t\t\tthis.nullBit3 |= x;", "+    \t\t\tthis.nullBit4 |= x;", "+    \t\t}", "+", "+    \t\t// workaround for Bug 386181 - [compiler][null] wrong transition in UnconditionalFlowInfo.mergedWith()", "+    \t\tax = a1 & ~a2 & a3 & ~a4;", "+    \t\tbx = b1 & ~b2 & ~b3 & b4;", "+    \t\tx = ax&bx;", "+    \t\tax = a1 & ~a2 & ~a3 & a4;", "+    \t\tbx = b1 & ~b2 & b3 & ~b4;", "+    \t\tx |= (ax&bx);", "+    \t\tif (x != 0) {", "+    \t\t\t// establish state 0011 for all variable ids in x:", "+    \t\t\tthis.extra[2][i] &= ~x;", "+    \t\t\tthis.extra[3][i] &= ~x;", "+    \t\t\tthis.extra[4][i] |= x;", "+    \t\t\tthis.extra[5][i] |= x;", "+    \t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ce607a1b8c0594b8d8f702b59d03500", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "41fe30d0273f5089ef76e570928ab7cb2dabbec3", "commitAfterChange": "3cca2130a88b1412da5c23c480bb1e524d89ea5e", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "  public UnconditionalFlowInfo mergedWith(UnconditionalFlowInfo otherInits)", "signatureAfterChange": "  public UnconditionalFlowInfo mergedWith(UnconditionalFlowInfo otherInits)", "diff": ["+    \t\t// the above formulae do not handle the state 0111, do it now explicitly:", "+    \t\tlong ax = ~a1 & a2 & a3 & a4;", "+    \t\tlong bx = ~b1 & b2 & b3 & b4;", "+    \t\tlong x = ax|bx;", "+    \t\tif (x != 0) {", "+    \t\t\t// restore state 0111 for all variable ids in x:", "+    \t\t\tthis.nullBit1 &= ~x;", "+    \t\t\tthis.nullBit2 |= x;", "+    \t\t\tthis.nullBit3 |= x;", "+    \t\t\tthis.nullBit4 |= x;", "+    \t\t}", "+\t\t", "+    \t\t// the above formulae do not handle the state 0111, do it now explicitly:", "+    \t\tlong ax = ~a1 & a2 & a3 & a4;", "+    \t\tlong bx = ~b1 & b2 & b3 & b4;", "+    \t\tlong x = ax|bx;", "+    \t\tif (x != 0) {", "+    \t\t\t// restore state 0111 for all variable ids in x:", "+    \t\t\tthis.extra[2][i] &= ~x;", "+    \t\t\tthis.extra[3][i] |= x;", "+    \t\t\tthis.extra[4][i] |= x;", "+    \t\t\tthis.extra[5][i] |= x;", "+    \t\t}"]}], "num": 2898}