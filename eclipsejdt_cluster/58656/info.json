{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2cadcf9f1a5a8251a809e10cae9bb776", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ac818a5cff551200da07096184519f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "3db4ce27557c02689107a83d27fb757d363e9707", "commitAfterChange": "6b9c67fdfa3245347902558ec7bd2d647d0b986f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tprivate TypeDeclaration convert(SourceType typeHandle, CompilationResult compilationResult) throws JavaModelException", "signatureAfterChange": " \tprivate TypeDeclaration convert(SourceType typeHandle, CompilationResult compilationResult) throws JavaModelException", "diff": ["-\t\t\t\tboolean isConstructor = sourceMethod.isConstructor();", "-\t\t\t\tif ((sourceMethod.getFlags() & ClassFileConstants.AccAbstract) != 0) {", "+\t\t\t\tSourceMethodElementInfo methodInfo = (SourceMethodElementInfo)sourceMethod.getElementInfo();", "+\t\t\t\tboolean isConstructor = methodInfo.isConstructor();", "+\t\t\t\tif ((methodInfo.getModifiers() & ClassFileConstants.AccAbstract) != 0) {", "-\t\t\t\t\tAbstractMethodDeclaration method = convert(sourceMethod, compilationResult);", "+\t\t\t\t\tAbstractMethodDeclaration method = convert(sourceMethod, methodInfo, compilationResult);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ef8ed4e2cbf16882c005452215d67f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "4facfcdf4a36f611ae455f345faa2a13f779251b", "commitAfterChange": "9b4626a240c7fe9f3a95f4bc274592915f73c7ef", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate TypeDeclaration convert(ISourceType sourceType, CompilationResult compilationResult)", "signatureAfterChange": " \tprivate TypeDeclaration convert(ISourceType sourceType, CompilationResult compilationResult)", "diff": ["-\t\t\tboolean isInterface = type.getKind() == IGenericType.INTERFACE;", "-\t\t\tif (!isInterface) {", "+\t\t\tint kind = type.getKind();", "+\t\t\tboolean isAbstract = kind == IGenericType.INTERFACE || kind == IGenericType.ANNOTATION_TYPE;", "+\t\t\tif (!isAbstract) {", "-\t\t\t\t\tAbstractMethodDeclaration method =convert(sourceMethod, compilationResult);", "-\t\t\t\t\tif (isInterface || method.isAbstract()) { // fix-up flag ", "+\t\t\t\t\tAbstractMethodDeclaration method = convert((SourceMethodElementInfo) sourceMethod, compilationResult);", "+\t\t\t\t\tif (isAbstract || method.isAbstract()) { // fix-up flag "]}], "num": 58656}