{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5aad01380a7b84598cd87480a83ffe17", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08c781ca4a69dbff045bd60c1cf5974d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "5e4ea8ac03b51c08067ab35c8af60e3999ca1301", "commitAfterChange": "aaea57f144ce91db666531c49de57c996bd81422", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " protected void reportMatchingSuper(TypeReference superReference, IJavaElement enclosingElement, MatchingNodeSet nodeSet, boolean matchedClassContainer) throws CoreException", "signatureAfterChange": " protected void reportMatchingSuper(TypeReference superReference, IJavaElement enclosingElement, MatchingNodeSet nodeSet, boolean matchedClassContainer) throws CoreException", "diff": ["-\tif (superReference instanceof ParameterizedSingleTypeReference) {", "-\t\tTypeReference[] typeArguments = ((ParameterizedSingleTypeReference)superReference).typeArguments;", "-\t\tif (typeArguments != null && typeArguments.length > 0) {", "-\t\t\tnodes = nodeSet.matchingNodes(superReference.sourceStart, typeArguments[typeArguments.length-1].sourceEnd);", "-\t\t}", "-\t} else if (superReference instanceof ParameterizedQualifiedTypeReference) {", "-\t\tTypeReference[][] typeArguments = ((ParameterizedQualifiedTypeReference)superReference).typeArguments;", "-\t\tif (typeArguments != null && typeArguments.length > 0) {", "-\t\t\tTypeReference[] lastTypeArgs = typeArguments[typeArguments.length-1];", "-\t\t\tint end = superReference.sourceEnd;", "-\t\t\tif (lastTypeArgs != null && lastTypeArgs.length > 0 && lastTypeArgs[lastTypeArgs.length-1].sourceEnd > end) {", "-\t\t\t\tend = lastTypeArgs[lastTypeArgs.length-1].sourceEnd;", "-\t\t\t}", "-\t\t\tnodes = nodeSet.matchingNodes(superReference.sourceStart, end);", "-\t\t}", "+\tif (superReference instanceof ParameterizedSingleTypeReference || superReference instanceof ParameterizedQualifiedTypeReference) {", "+\t\tlong lastTypeArgumentInfo = findLastTypeArgumentInfo(superReference);", "+\t\tnodes = nodeSet.matchingNodes(superReference.sourceStart, (int)lastTypeArgumentInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "740e91ca85ff973f4d1109ca8aba43ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "fe01542fcd3aa3aadeb3ef9dbecdc34ba5993c8d", "commitAfterChange": "e89bfd441ddc86e7db4459ee29b0092f7959a77e", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 53, "signatureBeforeChange": " protected void consumeTypeArgumentReferenceType1()", "signatureAfterChange": "  protected void consumeTypeArgumentReferenceType1()", "diff": ["+", "-\tthis.typeRefFineGrain |= IJavaSearchConstants.TYPE_ARGUMENT_TYPE_REFERENCE;", "-\tpatternLocator.match((TypeReference)genericsStack[genericsPtr], nodeSet);", "-\tthis.typeRefFineGrain &= ~IJavaSearchConstants.TYPE_ARGUMENT_TYPE_REFERENCE;", "+\tif ((this.patternFineGrain & IJavaSearchConstants.TYPE_ARGUMENT_TYPE_REFERENCE) != 0) {", "+\t\tint length = this.genericsLengthStack[this.genericsLengthPtr];", "+\t\tif (length == 1) {", "+\t\t\tTypeReference typeReference = (TypeReference)this.genericsStack[this.genericsPtr];", "+\t\t\tTypeReference[] typeArguments = null;", "+\t\t\tif (typeReference instanceof ParameterizedSingleTypeReference) {", "+\t            typeArguments = ((ParameterizedSingleTypeReference) typeReference).typeArguments;", "+            } else if (typeReference instanceof ParameterizedQualifiedTypeReference) {", "+\t            TypeReference[][] allTypeArguments = ((ParameterizedQualifiedTypeReference) typeReference).typeArguments;", "+\t            typeArguments = allTypeArguments[allTypeArguments.length-1];", "+            }", "+\t\t\tif (typeArguments != null) {", "+\t            for (int i=0, ln=typeArguments.length; i<ln; i++) {", "+\t            \tif (!(typeArguments[i] instanceof Wildcard)) {", "+\t\t\t\t\t\tthis.patternLocator.match(typeArguments[i], this.nodeSet);", "+\t            \t}", "+\t            }", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be622d49d0f8738ce11d6060d8e749f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "fe01542fcd3aa3aadeb3ef9dbecdc34ba5993c8d", "commitAfterChange": "e89bfd441ddc86e7db4459ee29b0092f7959a77e", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 54, "signatureBeforeChange": " protected void consumeTypeArgumentReferenceType2()", "signatureAfterChange": "  protected void consumeTypeArgumentReferenceType2()", "diff": ["+", "-\tthis.typeRefFineGrain |= IJavaSearchConstants.TYPE_ARGUMENT_TYPE_REFERENCE;", "-\tpatternLocator.match((TypeReference)genericsStack[genericsPtr], nodeSet);", "-\tthis.typeRefFineGrain &= ~IJavaSearchConstants.TYPE_ARGUMENT_TYPE_REFERENCE;", "+\tif ((this.patternFineGrain & IJavaSearchConstants.TYPE_ARGUMENT_TYPE_REFERENCE) != 0) {", "+\t\tint length = this.genericsLengthStack[this.genericsLengthPtr];", "+\t\tif (length == 1) {", "+\t\t\tTypeReference typeReference = (TypeReference)this.genericsStack[this.genericsPtr];", "+\t\t\tTypeReference[] typeArguments = null;", "+\t\t\tif (typeReference instanceof ParameterizedSingleTypeReference) {", "+\t            typeArguments = ((ParameterizedSingleTypeReference) typeReference).typeArguments;", "+            } else if (typeReference instanceof ParameterizedQualifiedTypeReference) {", "+\t            TypeReference[][] allTypeArguments = ((ParameterizedQualifiedTypeReference) typeReference).typeArguments;", "+\t            typeArguments = allTypeArguments[allTypeArguments.length-1];", "+            }", "+\t\t\tif (typeArguments != null) {", "+\t            for (int i=0, ln=typeArguments.length; i<ln; i++) {", "+\t            \tif (!(typeArguments[i] instanceof Wildcard)) {", "+\t\t\t\t\t\tthis.patternLocator.match(typeArguments[i], this.nodeSet);", "+\t            \t}", "+\t            }", "+\t\t\t}", "+\t\t}", "+\t}"]}], "num": 67109}