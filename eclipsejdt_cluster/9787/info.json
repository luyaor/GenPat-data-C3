{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a0a6b20deed965e1494caadd1caa1e9d", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d731b20abab69dc36a1b706b03b204bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceType.java", "commitBeforeChange": "23d1f03b5721ce2de9c0b6bda12e344c2ac468ba", "commitAfterChange": "966ae4bbaf97367f3fc38a9b2c2261f477021842", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": " public String[] getTypeParameterSignatures() throws JavaModelException", "signatureAfterChange": " public String[] getTypeParameterSignatures() throws JavaModelException", "diff": ["-\tSourceTypeElementInfo info = (SourceTypeElementInfo) getElementInfo();", "-\tchar[][] signatures = info.getTypeParameterSignatures();", "-\tif (signatures == null) ", "-\t\treturn EmptyStringList;", "-\tint length = signatures.length;", "-\tString[] stringSignatures = new String[length];", "+\tArrayList typeParameters = getChildrenOfType(TYPE_PARAMETER);", "+\tint length = typeParameters.size();", "+\tString[] typeParameterSignatures = new String[length];", "-\t\tstringSignatures[i] = new String(signatures[i]);", "+\t\tTypeParameter typeParameter = (TypeParameter) typeParameters.get(i);", "+\t\tTypeParameterElementInfo info = (TypeParameterElementInfo) typeParameter.getElementInfo();", "+\t\tchar[][] bounds = info.bounds;", "+\t\tif (bounds == null) {", "+\t\t\ttypeParameterSignatures[i] = Signature.createTypeParameterSignature(typeParameter.getElementName(), CharOperation.NO_STRINGS);", "+\t\t} else {", "+\t\t\tint boundsLength = bounds.length;", "+\t\t\tchar[][] boundSignatures = new char[boundsLength][];", "+\t\t\tfor (int j = 0; j < boundsLength; j++) {", "+\t\t\t\tboundSignatures[j] = Signature.createCharArrayTypeSignature(bounds[j], false);", "+\t\t\t}", "+\t\t\ttypeParameterSignatures[i] = new String(Signature.createTypeParameterSignature(typeParameter.getElementName().toCharArray(), boundSignatures));", "+\t\t}", "-\treturn stringSignatures;", "+\treturn typeParameterSignatures;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2c588e050f81735a0e15449357d92db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMethod.java", "commitBeforeChange": "23d1f03b5721ce2de9c0b6bda12e344c2ac468ba", "commitAfterChange": "966ae4bbaf97367f3fc38a9b2c2261f477021842", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": " public String[] getTypeParameterSignatures() throws JavaModelException", "signatureAfterChange": " public String[] getTypeParameterSignatures() throws JavaModelException", "diff": ["-\tSourceMethodElementInfo info = (SourceMethodElementInfo) getElementInfo();", "-\tchar[][] signatures = info.getTypeParameterSignatures();", "-\tif (signatures == null) ", "-\t\treturn EmptyStringList;", "-\tint length = signatures.length;", "-\tString[] stringSignatures = new String[length];", "+\tArrayList typeParameters = getChildrenOfType(TYPE_PARAMETER);", "+\tint length = typeParameters.size();", "+\tString[] typeParameterSignatures = new String[length];", "-\t\tstringSignatures[i] = new String(signatures[i]);", "+\t\tTypeParameter typeParameter = (TypeParameter) typeParameters.get(i);", "+\t\tTypeParameterElementInfo info = (TypeParameterElementInfo) typeParameter.getElementInfo();", "+\t\tchar[][] bounds = info.bounds;", "+\t\tif (bounds == null) {", "+\t\t\ttypeParameterSignatures[i] = Signature.createTypeParameterSignature(typeParameter.getElementName(), CharOperation.NO_STRINGS);", "+\t\t} else {", "+\t\t\tint boundsLength = bounds.length;", "+\t\t\tchar[][] boundSignatures = new char[boundsLength][];", "+\t\t\tfor (int j = 0; j < boundsLength; j++) {", "+\t\t\t\tboundSignatures[j] = Signature.createCharArrayTypeSignature(bounds[j], false);", "+\t\t\t}", "+\t\t\ttypeParameterSignatures[i] = new String(Signature.createTypeParameterSignature(typeParameter.getElementName().toCharArray(), boundSignatures));", "+\t\t}", "-\treturn stringSignatures;", "+\treturn typeParameterSignatures;"]}], "num": 9787}