{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e2750820877530bd6eede510f8f4b327", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "604083e41edbe4e3c92105e7851dc374", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "fde095e0f0a4d97a0e65a7c6307c3d16195d07f7", "commitAfterChange": "9ea1cdb7f6499dc7c1092eeaa0da392a32816565", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 37, "signatureBeforeChange": " private IType[] getImplementingClasses0(IType interfce)", "signatureAfterChange": " private IType[] getImplementingClasses0(IType interfce)", "diff": ["-\tIterator iter = this.typeToSuperInterfaces.entrySet().iterator();", "-\tArrayList iMenters = new ArrayList();", "+\tIterator<Map.Entry<IType,IType[]>> iter = this.typeToSuperInterfaces.entrySet().iterator();", "+\tArrayList<IType> iMenters = new ArrayList<>();", "-\t\tMap.Entry entry = (Map.Entry) iter.next();", "-\t\tIType type = (IType) entry.getKey();", "+\t\tMap.Entry<IType, IType[]> entry = iter.next();", "+\t\tIType type = entry.getKey();", "-\t\tIType[] types = (IType[]) entry.getValue();", "+\t\tIType[] types = entry.getValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75fbbfebcc8db5fdef39087b996e2954", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "fde095e0f0a4d97a0e65a7c6307c3d16195d07f7", "commitAfterChange": "9ea1cdb7f6499dc7c1092eeaa0da392a32816565", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 35, "signatureBeforeChange": " private IType[] getExtendingInterfaces0(IType extendedInterface)", "signatureAfterChange": " private IType[] getExtendingInterfaces0(IType extendedInterface)", "diff": ["-\tIterator iter = this.typeToSuperInterfaces.entrySet().iterator();", "-\tArrayList interfaceList = new ArrayList();", "+\tIterator<Entry<IType, IType[]>> iter = this.typeToSuperInterfaces.entrySet().iterator();", "+\tArrayList<IType> interfaceList = new ArrayList<>();", "-\t\tMap.Entry entry = (Map.Entry) iter.next();", "-\t\tIType type = (IType) entry.getKey();", "+\t\tMap.Entry<IType, IType[]> entry = iter.next();", "+\t\tIType type = entry.getKey();", "-\t\tIType[] superInterfaces = (IType[]) entry.getValue();", "+\t\tIType[] superInterfaces = entry.getValue();"]}], "num": 23392}