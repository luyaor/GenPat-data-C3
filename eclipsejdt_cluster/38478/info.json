{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bbaef5d91867103f8b19be8bd8973c62", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b575a954bda7e5bf47d220e2e560efff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodReferencePattern.java", "commitBeforeChange": "8d3a80d6ae4963f77008a085d8594027df9d6302", "commitAfterChange": "b736ca9b5c529e8455312865c769b9a1151265f5", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r public int matchLevel(Binding binding, MessageSend messageSend)", "signatureAfterChange": "\r public int matchLevel(Binding binding, MessageSend messageSend)", "diff": ["-\t// return type\r", "-\tint newLevel = this.matchLevelForType(this.returnSimpleName, this.returnQualification, method.returnType);\r", "-\tswitch (newLevel) {\r", "-\t\tcase IMPOSSIBLE_MATCH:\r", "-\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\tcase ACCURATE_MATCH: // keep previous level\r", "-\t\t\tbreak;\r", "-\t\tdefault: // ie. INACCURATE_MATCH\r", "-\t\t\tlevel = newLevel;\r", "-\t\t\tbreak;\r", "+\t// look at return type only if declaring type is not specified\r", "+\tif (this.declaringSimpleName == null) {\r", "+\t\tint newLevel = this.matchLevelForType(this.returnSimpleName, this.returnQualification, method.returnType);\r", "+\t\tswitch (newLevel) {\r", "+\t\t\tcase IMPOSSIBLE_MATCH:\r", "+\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t\tcase ACCURATE_MATCH: // keep previous level\r", "+\t\t\t\tbreak;\r", "+\t\t\tdefault: // ie. INACCURATE_MATCH\r", "+\t\t\t\tlevel = newLevel;\r", "+\t\t\t\tbreak;\r", "+\t\t}\r", "-\t\t\t\tnewLevel = this.matchLevelForType(type, qualification, method.parameters[i]);\r", "+\t\t\t\tint newLevel = this.matchLevelForType(type, qualification, method.parameters[i]);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8beb754230bf5509ce6c120a5224762", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodDeclarationPattern.java", "commitBeforeChange": "8d3a80d6ae4963f77008a085d8594027df9d6302", "commitAfterChange": "b736ca9b5c529e8455312865c769b9a1151265f5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r public int matchLevel(Binding binding)", "signatureAfterChange": "\r public int matchLevel(Binding binding)", "diff": ["-\t// return type\r", "-\tint newLevel = this.matchLevelForType(this.returnSimpleName, this.returnQualification, method.returnType);\r", "-\tswitch (newLevel) {\r", "-\t\tcase IMPOSSIBLE_MATCH:\r", "-\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\tcase ACCURATE_MATCH: // keep previous level\r", "-\t\t\tbreak;\r", "-\t\tdefault: // ie. INACCURATE_MATCH\r", "-\t\t\tlevel = newLevel;\r", "-\t\t\tbreak;\r", "+\t// look at return type only if declaring type is not specified\r", "+\tif (this.declaringSimpleName == null) {\r", "+\t\tint newLevel = this.matchLevelForType(this.returnSimpleName, this.returnQualification, method.returnType);\r", "+\t\tswitch (newLevel) {\r", "+\t\t\tcase IMPOSSIBLE_MATCH:\r", "+\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t\tcase ACCURATE_MATCH: // keep previous level\r", "+\t\t\t\tbreak;\r", "+\t\t\tdefault: // ie. INACCURATE_MATCH\r", "+\t\t\t\tlevel = newLevel;\r", "+\t\t\t\tbreak;\r", "+\t\t}\r", "-\t\t\tnewLevel = this.matchLevelForType(type, qualification, method.parameters[i]);\r", "+\t\t\tint newLevel = this.matchLevelForType(type, qualification, method.parameters[i]);\r"]}], "num": 38478}