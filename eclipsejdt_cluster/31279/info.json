{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8c3cdacdb0f917d6a88484707f97ba74", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db349e877c2b6b5c99ca9f816f32a791", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void addSubscope(Scope childScope)", "signatureAfterChange": "  public void addSubscope(Scope childScope)", "diff": ["+public void addSubscope(Scope childScope) {", "+\tif (this.subscopeCount == this.subscopes.length)", "+\t\tSystem.arraycopy(", "+\t\t\tthis.subscopes,", "+\t\t\t0,", "+\t\t\t(this.subscopes = new Scope[this.subscopeCount * 2]),", "+\t\t\t0,", "+\t\t\tthis.subscopeCount);", "+\tthis.subscopes[this.subscopeCount++] = childScope;", "+}", "-", "-\tpublic void addSubscope(Scope childScope) {", "-\t\tif (subscopeCount == subscopes.length)", "-\t\t\tSystem.arraycopy(", "-\t\t\t\tsubscopes,", "-\t\t\t\t0,", "-\t\t\t\t(subscopes = new Scope[subscopeCount * 2]),", "-\t\t\t\t0,", "-\t\t\t\tsubscopeCount);", "-\t\tsubscopes[subscopeCount++] = childScope;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9a555297984dd00e73c1bb03b9f3277", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic final void addLocalVariable(LocalVariableBinding binding)", "signatureAfterChange": " public final void addLocalVariable(LocalVariableBinding binding)", "diff": ["+ */", "+public final void addLocalVariable(LocalVariableBinding binding) {", "+\tcheckAndSetModifiersForVariable(binding);", "+\t// insert local in scope", "+\tif (this.localIndex == this.locals.length)", "+\t\tSystem.arraycopy(", "+\t\t\tthis.locals,", "+\t\t\t0,", "+\t\t\t(this.locals = new LocalVariableBinding[this.localIndex * 2]),", "+\t\t\t0,", "+\t\t\tthis.localIndex);", "+\tthis.locals[this.localIndex++] = binding;", "+\t// update local variable binding ", "+\tbinding.declaringScope = this;", "+\tbinding.id = this.outerMostMethodScope().analysisIndex++;", "+\t// share the outermost method scope analysisIndex", "+}", "-\t */", "-\tpublic final void addLocalVariable(LocalVariableBinding binding) {", "-", "-\t\tcheckAndSetModifiersForVariable(binding);", "-", "-\t\t// insert local in scope", "-\t\tif (localIndex == locals.length)", "-\t\t\tSystem.arraycopy(", "-\t\t\t\tlocals,", "-\t\t\t\t0,", "-\t\t\t\t(locals = new LocalVariableBinding[localIndex * 2]),", "-\t\t\t\t0,", "-\t\t\t\tlocalIndex);", "-\t\tlocals[localIndex++] = binding;", "-", "-\t\t// update local variable binding ", "-\t\tbinding.declaringScope = this;", "-\t\tbinding.id = this.outerMostMethodScope().analysisIndex++;", "-\t\t// share the outermost method scope analysisIndex", "-\t}"]}], "num": 31279}