{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b672d7fb1e7951c641243b40a0837713", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7529debc68d4da085ea7a600d31fa2c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "bce0dbd9dd489d3038652b337b4b76bb1f2246a4", "commitAfterChange": "f04ae71cc7d18b0e34f184a3124e4f7f58dafcf3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired)", "signatureAfterChange": " public void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired)", "diff": ["+\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=185682", "+\tswitch (this.bits & ASTNode.RestrictiveFlagMASK) {", "+\t\tcase Binding.LOCAL:", "+\t\t\tLocalVariableBinding localBinding = (LocalVariableBinding) this.binding;", "+\t\t\t// check if compound assignment is the only usage of this local", "+\t\t\tReference.reportOnlyUselesslyReadLocal(currentScope, localBinding, valueRequired);", "+\t\t\tbreak;", "+\t\tcase Binding.FIELD:", "+\t\t\t// check if compound assignment is the only usage of a private field", "+\t\t\treportOnlyUselesslyReadPrivateField(currentScope, (FieldBinding)this.binding, valueRequired);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9077c714ef34c6375b87e349e226844e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "bce0dbd9dd489d3038652b337b4b76bb1f2246a4", "commitAfterChange": "f04ae71cc7d18b0e34f184a3124e4f7f58dafcf3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public void generatePostIncrement(BlockScope currentScope, CodeStream codeStream, CompoundAssignment postIncrement, boolean valueRequired)", "signatureAfterChange": "  public void generatePostIncrement(BlockScope currentScope, CodeStream codeStream, CompoundAssignment postIncrement, boolean valueRequired)", "diff": ["-\t\t\tFieldBinding codegenField = (((FieldBinding)this.binding).original());", "+\t\t\tFieldBinding fieldBinding = (FieldBinding)this.binding;", "+\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=185682", "+\t\t\t// check if postIncrement is the only usage of a private field", "+\t\t\treportOnlyUselesslyReadPrivateField(currentScope, fieldBinding, valueRequired);", "+\t\t\tFieldBinding codegenField = fieldBinding.original();", "+\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=185682", "+\t\t\t// check if postIncrement is the only usage of this local", "+\t\t\tReference.reportOnlyUselesslyReadLocal(currentScope, localBinding, valueRequired);", "+"]}], "num": 46222}