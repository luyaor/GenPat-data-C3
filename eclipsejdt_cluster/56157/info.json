{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2a21333ed63ddd8dc21f3b143ee15bdd", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "690a2ef4643141b87200f85c62467555", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "afec7d4a120ad9d3de76bf79cb0366f8fe30669d", "commitAfterChange": "57c6d386f529d0e8572acc77526ab668fb7c3818", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic UnconditionalFlowInfo addPotentialInitializationsFrom(UnconditionalFlowInfo otherInits)", "signatureAfterChange": " \t \tpublic FlowInfo addPotentialInitializationsFrom(FlowInfo otherInits)", "diff": ["-\tpublic UnconditionalFlowInfo addPotentialInitializationsFrom(UnconditionalFlowInfo otherInits) {", "+\tpublic FlowInfo addPotentialInitializationsFrom(FlowInfo otherInits) {", "-\t\treturn unconditionalInits().addPotentialInitializationsFrom(otherInits);", "+\t\tthis.initsWhenTrue.addPotentialInitializationsFrom(otherInits);", "+\t\tthis.initsWhenFalse.addPotentialInitializationsFrom(otherInits);", "+\t\treturn this;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae11a4a11cd68f62bbe9ab60e137a898", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "afec7d4a120ad9d3de76bf79cb0366f8fe30669d", "commitAfterChange": "57c6d386f529d0e8572acc77526ab668fb7c3818", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic UnconditionalFlowInfo addInitializationsFrom(UnconditionalFlowInfo otherInits)", "signatureAfterChange": " \t \tpublic FlowInfo addInitializationsFrom(FlowInfo otherInits)", "diff": ["-\tpublic UnconditionalFlowInfo addInitializationsFrom(UnconditionalFlowInfo otherInits) {", "+\tpublic FlowInfo addInitializationsFrom(FlowInfo otherInits) {", "-\t\treturn unconditionalInits().addInitializationsFrom(otherInits);", "+\t\tthis.initsWhenTrue.addInitializationsFrom(otherInits);", "+\t\tthis.initsWhenFalse.addInitializationsFrom(otherInits);", "+\t\treturn this;"]}], "num": 56157}