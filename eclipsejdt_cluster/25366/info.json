{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "67e47506b3a4c7b29d95daae5568cc03", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b5db6872cb09b88c859b56202be4e99", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/SourceParameterDeclarationImpl.java", "commitBeforeChange": "80b216af2abfbc335ce04bf55fc463ba47e45873", "commitAfterChange": "8eb843ef75292ca86ade9a64a79ec382d0e5f4fa", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 7, "signatureBeforeChange": "       public SourcePosition getPosition()", "signatureAfterChange": "          public String toString()", "diff": ["- ", "-    public SourcePosition getPosition()", "-    {", "-\t\tfinal ASTNode node = getAstNode();", "-\t\tif( node == null ) return null;", "-        final CompilationUnit unit = _executable.getCompilationUnit();", "-        final int offset = node.getStartPosition();\t\t", "-        return new SourcePositionImpl(node.getStartPosition(),", "-                                      node.getLength(),", "-                                      unit.lineNumber(offset),", "-                                      unit.columnNumber(offset),", "-                                      this);", "+    ", "+    public String toString(){", "+    \treturn _astNode.toString();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "febd7bfa3b6fb00dc33986b685ecc5e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "5166ddb130bcb062c1e82da491c829c5d95a6211", "commitAfterChange": "2894ba75386697d7bf484434d073fb6ffaf6cec9", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 28, "signatureBeforeChange": "  ReferenceBinding getTypeFromConstantPoolName(char[] signature, int start, int end, boolean isParameterized)", "signatureAfterChange": "  ReferenceBinding getTypeFromConstantPoolName(char[] signature, int start, int end, boolean isParameterized)", "diff": ["-\tReferenceBinding binding = getCachedType(compoundName);", "-\tif (binding == null) {", "-\t\tPackageBinding packageBinding = computePackageFrom(compoundName);", "-\t\tbinding = new UnresolvedReferenceBinding(compoundName, packageBinding);", "-\t\tpackageBinding.addType(binding);", "-\t} else if (binding == TheNotFoundType) {", "-\t\tproblemReporter.isClassPathCorrect(compoundName, null);", "-\t\treturn null; // will not get here since the above error aborts the compilation", "-\t} else if (!isParameterized) {", "-\t    // check raw type, only for resolved types", "-        binding = (ReferenceBinding)convertToRawType(binding);", "-\t}", "-\treturn binding;", "+\treturn getTypeFromCompoundName(compoundName, isParameterized);"]}], "num": 25366}