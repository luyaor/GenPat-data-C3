{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0d6893778f60fedbf705621a2a110539", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e0f222d76a8dfd7c5fe94475f16f002", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "eebfb231fd7e6ee98747d5335cf2b140503ced34", "commitAfterChange": "a3c940c9ba4fb947ed601c181e38c98afc79ec41", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tprotected boolean seekTypesInWorkingCopies( \t\t\tString name, \t\t\tIPackageFragment pkg, \t\t\tint firstDot, \t\t\tboolean partialMatch, \t\t\tString topLevelTypeName, \t\t\tint acceptFlags, \t\t\tIJavaElementRequestor requestor)", "signatureAfterChange": " \tprotected boolean seekTypesInWorkingCopies( \t\t\tString name, \t\t\tIPackageFragment pkg, \t\t\tint firstDot, \t\t\tboolean partialMatch, \t\t\tString topLevelTypeName, \t\t\tint acceptFlags, \t\t\tIJavaElementRequestor requestor)", "diff": ["-\t\t\t\t\tif (object == NO_TYPES) return true; // all types where deleted -> type is hidden", "+\t\t\t\t\tif (object == NO_TYPES) {", "+\t\t\t\t\t\t// all types where deleted -> type is hidden, OR it is the fake type package-info", "+\t\t\t\t\t\tString packageInfoName = String.valueOf(TypeConstants.PACKAGE_INFO_NAME);", "+\t\t\t\t\t\tif (packageInfoName.equals(name))", "+\t\t\t\t\t\t\trequestor.acceptType(pkg.getCompilationUnit(packageInfoName.concat(SUFFIX_STRING_java)).getType(name));", "+\t\t\t\t\t\treturn true;", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88502f07bfdb05b0998bab6c440483b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CopyResourceElementsOperation.java", "commitBeforeChange": "d35828dbe6c72fc68c5ab7d479b15a3b31394d26", "commitAfterChange": "722c4d5360d346a714211adcc2c6d805ac4414b0", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprivate void updateTypeName(ICompilationUnit cu, CompilationUnit astCU, String oldName, String newName, IDocument document) throws JavaModelException", "signatureAfterChange": " \tprivate void updateTypeName(ICompilationUnit cu, CompilationUnit astCU, String oldName, String newName, IDocument document) throws JavaModelException", "diff": ["-\t\t\t\t\t\t\t\tSimpleName methodName = methodDeclaration.getName();", "-\t\t\t\t\t\t\t\tif (methodName.getIdentifier().equals(oldTypeName)) {", "-\t\t\t\t\t\t\t\t\trewriter.replace(methodName, ast.newSimpleName(newTypeName), null);", "+\t\t\t\t\t\t\t\tif (methodDeclaration.isConstructor()) {", "+\t\t\t\t\t\t\t\t\tSimpleName methodName = methodDeclaration.getName();", "+\t\t\t\t\t\t\t\t\tif (methodName.getIdentifier().equals(oldTypeName)) {", "+\t\t\t\t\t\t\t\t\t\trewriter.replace(methodName, ast.newSimpleName(newTypeName), null);", "+\t\t\t\t\t\t\t\t\t}"]}], "num": 40}