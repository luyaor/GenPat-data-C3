{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1ec3815136261aeb6fcf2c05ea8a0824", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "484838d51611aeabaa777ba4e1d6cf28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedSingleTypeReference.java", "commitBeforeChange": "2aca7755ada443ed3cdced7d77f812416f0a5df2", "commitAfterChange": "ec4f5191bf93babf60e3a4a12896e663ade5817f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds)", "diff": ["-\t\tif (checkBounds) { // otherwise will do it in Scope.connectTypeVariables() or generic method resolution", "+\t\tif (checkBounds) // otherwise will do it in Scope.connectTypeVariables() or generic method resolution", "-\t\t}", "+\t\telse", "+\t\t\tscope.deferBoundCheck(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6abb52c7a2092b938473954ab72b42e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedSingleTypeReference.java", "commitBeforeChange": "17cb72936c7817f00ee632f41ae5246b6b9db5dd", "commitAfterChange": "037cfa6bf481cd6ec3ad222bceff2d82fb8a8179", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds, int location)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds, int location)", "diff": ["-\t\t\tcheckNullConstraints(scope, this.typeArguments);", "+\t\t\tif (checkBounds)", "+\t\t\t\tcheckNullConstraints(scope, this.typeArguments);", "-\t\t\t\tcheckNullConstraints(scope, this.typeArguments);", "+\t\t\t\tif (checkBounds)", "+\t\t\t\t\tcheckNullConstraints(scope, this.typeArguments);", "-\t\t\t\tcheckNullConstraints(scope, this.typeArguments);", "+\t\t\t\tif (checkBounds)", "+\t\t\t\t\tcheckNullConstraints(scope, this.typeArguments);"]}], "num": 72975}