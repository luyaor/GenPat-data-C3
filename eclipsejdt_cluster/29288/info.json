{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "72567b8abddc480bc45f1252252ba290", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e30eead0c8c18d7284c3d4686c5e992", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e6e8c555a7d6f504d4ea246c591d5bb3f080d438", "commitAfterChange": "3316f207e855c46fb5e805791239fa37620ca8c4", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " public synchronized Index getIndex(IPath containerPath, String indexLocation, boolean reuseExistingFile, boolean createIfMissing)", "signatureAfterChange": " public synchronized Index getIndex(IPath containerPath, IPath indexLocation, boolean reuseExistingFile, boolean createIfMissing)", "diff": ["-public synchronized Index getIndex(IPath containerPath, String indexLocation, boolean reuseExistingFile, boolean createIfMissing) {", "+public synchronized Index getIndex(IPath containerPath, IPath indexLocation, boolean reuseExistingFile, boolean createIfMissing) {", "-\tIndex index = (Index) indexes.get(indexLocation);", "+\tIndex index = getIndex(indexLocation);", "+\t\tString indexLocationString = indexLocation.toOSString();", "-\t\t\tFile indexFile = new File(indexLocation);", "+\t\t\tFile indexFile = new File(indexLocationString);", "-\t\t\t\t\tindex = new Index(indexLocation, containerPathString, true /*reuse index file*/);", "-\t\t\t\t\tindexes.put(indexLocation, index);", "+\t\t\t\t\tindex = new Index(indexLocationString, containerPathString, true /*reuse index file*/);", "+\t\t\t\t\tthis.indexes.put(indexLocation, index);", "-\t\t\t\t\t\t\tUtil.verbose(\"-> cannot reuse existing index: \"+indexLocation+\" path: \"+containerPathString); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\t\t\tUtil.verbose(\"-> cannot reuse existing index: \"+indexLocationString+\" path: \"+containerPathString); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t\tUtil.verbose(\"-> create empty index: \"+indexLocation+\" path: \"+containerPathString); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\tindex = new Index(indexLocation, containerPathString, false /*do not reuse index file*/);", "-\t\t\t\tindexes.put(indexLocation, index);", "+\t\t\t\t\tUtil.verbose(\"-> create empty index: \"+indexLocationString+\" path: \"+containerPathString); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tindex = new Index(indexLocationString, containerPathString, false /*do not reuse index file*/);", "+\t\t\t\tthis.indexes.put(indexLocation, index);", "-\t\t\t\t\tUtil.verbose(\"-> unable to create empty index: \"+indexLocation+\" path: \"+containerPathString); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\tUtil.verbose(\"-> unable to create empty index: \"+indexLocationString+\" path: \"+containerPathString); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3af6cfee1ac869f2feac50f340729f6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "07a7e8072bdec094e9ef52b674b1aac8f1f20d15", "commitAfterChange": "6b047504a49d2679fa08264f4459dab0ba213ade", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public synchronized Index getIndex(IPath containerPath, String indexLocation, boolean reuseExistingFile, boolean createIfMissing)", "signatureAfterChange": " public synchronized Index getIndex(IPath containerPath, String indexLocation, boolean reuseExistingFile, boolean createIfMissing)", "diff": ["+\t\tString containerPathString = containerPath.getDevice() == null ? containerPath.toString() : containerPath.toOSString();", "-\t\t\t\t\tindex = new Index(indexLocation, containerPath.toString(), true /*reuse index file*/); //$NON-NLS-1$", "+\t\t\t\t\tindex = new Index(indexLocation, containerPathString, true /*reuse index file*/); //$NON-NLS-1$", "-\t\t\t\t\t\t\tUtil.verbose(\"-> cannot reuse existing index: \"+indexLocation+\" path: \"+containerPath.toOSString()); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\t\t\tUtil.verbose(\"-> cannot reuse existing index: \"+indexLocation+\" path: \"+containerPathString); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t\tUtil.verbose(\"-> create empty index: \"+indexLocation+\" path: \"+containerPath.toOSString()); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\tindex = new Index(indexLocation, containerPath.toString(), false /*do not reuse index file*/); //$NON-NLS-1$", "+\t\t\t\t\tUtil.verbose(\"-> create empty index: \"+indexLocation+\" path: \"+containerPathString); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tindex = new Index(indexLocation, containerPathString, false /*do not reuse index file*/); //$NON-NLS-1$", "-\t\t\t\t\tUtil.verbose(\"-> unable to create empty index: \"+indexLocation+\" path: \"+containerPath.toOSString()); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\tUtil.verbose(\"-> unable to create empty index: \"+indexLocation+\" path: \"+containerPathString); //$NON-NLS-1$ //$NON-NLS-2$"]}], "num": 29288}