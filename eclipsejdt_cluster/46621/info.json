{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "116a350781ed4d9346b67694ff5d6502", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "814eed22132dc5c9da6550d58aa0bb68", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "79a792fd2ce5bf4b6db39e3bfe8729f652ff2091", "commitAfterChange": "61910f9ffdfc607d31120af5ce39e6bf8d69bab0", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprotected void checkDisassembledClassFile(String fileName, String className, String expectedOutput, int mode) throws Exception", "signatureAfterChange": " \tprotected void checkDisassembledClassFile(String fileName, String className, String expectedOutput, int mode) throws Exception", "diff": ["-\t\tFileInputStream stream = new FileInputStream(classFile);", "-\t\tClassFileReader.read(stream, className + \".class\", true);", "-\t\tstream.close();", "+\t\tFileInputStream stream = null;", "+\t\ttry {", "+\t\t\tstream = new FileInputStream(classFile);", "+\t\t\tClassFileReader.read(stream, className + \".class\", true);", "+\t\t} finally {", "+\t\t\tif (stream != null) {", "+\t\t\t\ttry {", "+\t\t\t\t\tstream.close();", "+\t\t\t\t} catch (IOException e) {", "+\t\t\t\t\t/* ignore */", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8fdc9bc57eeee4bef7a28c1135d5bd0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileComparatorTest.java", "commitBeforeChange": "79a792fd2ce5bf4b6db39e3bfe8729f652ff2091", "commitAfterChange": "61910f9ffdfc607d31120af5ce39e6bf8d69bab0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprivate boolean areStructurallyDifferent(String classFile1, String classFile2, boolean orderRequired, boolean excludeSynthetic)", "signatureAfterChange": " \t \tprivate boolean areStructurallyDifferent(String classFile1, String classFile2, boolean orderRequired, boolean excludeSynthetic)", "diff": ["+\t\tFileInputStream stream = null;", "-\t\t\tjava.io.FileInputStream stream = new java.io.FileInputStream(file);", "+\t\t\tstream = new java.io.FileInputStream(file);", "-\t\t\tstream.close();", "+\t\t} finally {", "+\t\t\tif (stream != null) {", "+\t\t\t\ttry {", "+\t\t\t\t\tstream.close();", "+\t\t\t\t} catch (IOException e) {", "+\t\t\t\t\t/* ignore */", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 46621}