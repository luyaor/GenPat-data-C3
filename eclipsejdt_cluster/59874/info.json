{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "addd4cd97c4a46be22914c1adc9f39e5", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35c1cf737c94dffe9f3b84d91ce02d47", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Openable.java", "commitBeforeChange": "888ff915accf0f7dc08ba845bca467c94f1e290b", "commitAfterChange": "f69c200469412ca3b93e80844c6c1f4e077169ac", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " protected abstract boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException;", "signatureAfterChange": " protected void generateInfos(Object info, HashMap newElements, IProgressMonitor monitor) throws JavaModelException", "diff": ["+protected void generateInfos(Object info, HashMap newElements, IProgressMonitor monitor) throws JavaModelException {", "- */", "-protected abstract boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException;", "+\tif (JavaModelManager.VERBOSE){", "+\t\tSystem.out.println(\"OPENING Element (\"+ Thread.currentThread()+\"): \" + this.toStringWithAncestors()); //$NON-NLS-1$//$NON-NLS-2$", "+\t}", "+\t", "+\t// open the parent if necessary", "+\topenParent(info, newElements, monitor);", "+\tif (monitor != null && monitor.isCanceled()) return;", "+", "+\t", "+\tnewElements.put(this, info); // TODO: should not have to put info before building structure", "+", "+\t// build the structure of the openable (this will open the buffer if needed)", "+\ttry {", "+\t\tOpenableElementInfo openableElementInfo = (OpenableElementInfo)info;", "+\t\tboolean isStructureKnown = buildStructure(openableElementInfo, monitor, newElements, getResource());", "+\t\topenableElementInfo.setIsStructureKnown(isStructureKnown);", "+\t} catch (JavaModelException e) {", "+\t\tnewElements.remove(this);", "+\t\tthrow e;", "+\t}", "+\t", "+\t// remove out of sync buffer for this element", "+\tJavaModelManager.getJavaModelManager().getElementsOutOfSynchWithBuffers().remove(this);", "+", "+\tif (JavaModelManager.VERBOSE) {", "+\t\tSystem.out.println(\"-> Package cache size = \" + JavaModelManager.getJavaModelManager().cache.pkgSize()); //$NON-NLS-1$", "+\t\tSystem.out.println(\"-> Openable cache filling ratio = \" + JavaModelManager.getJavaModelManager().cache.openableFillingRatio() + \"%\"); //$NON-NLS-1$//$NON-NLS-2$", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4fd81212d1d81a9b47ef4bd620597c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "581702d71a138ac97fe73cfd2b06cc855f39a496", "commitAfterChange": "d47f7e16ee9a06ebea0c1bfa73440fda6af0235f", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 52, "signatureBeforeChange": "  \tprotected void removeInfo(IJavaElement element)", "signatureAfterChange": " \tpublic synchronized void removeInfoAndChildren(JavaElement element) throws JavaModelException", "diff": ["-\tprotected void removeInfo(IJavaElement element) {", "-\t\tthis.cache.removeInfo(element);", "-\t}", "+\t */", "+\tpublic synchronized void removeInfoAndChildren(JavaElement element) throws JavaModelException {", "+\t\tObject info = peekAtInfo(element);", "+\t\tif (info != null) {", "+\t\t\tboolean wasVerbose = false;", "+\t\t\ttry {", "+\t\t\t\tif (VERBOSE) {", "+\t\t\t\t\tSystem.out.println(\"CLOSING Element (\"+ Thread.currentThread()+\"): \" + element.toStringWithAncestors());  //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t\t\twasVerbose = true;", "+\t\t\t\t\tVERBOSE = false;", "+\t\t\t\t}", "+\t\t\t\telement.closing(info);", "+\t\t\t\tif (element instanceof IParent && info instanceof JavaElementInfo) {", "+\t\t\t\t\tIJavaElement[] children = ((JavaElementInfo)info).getChildren();", "+\t\t\t\t\tfor (int i = 0, size = children.length; i < size; ++i) {", "+\t\t\t\t\t\tJavaElement child = (JavaElement) children[i];", "+\t\t\t\t\t\tremoveInfoAndChildren(child);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tthis.cache.removeInfo(element);", "+\t\t\t\tif (wasVerbose) {", "+\t\t\t\t\tSystem.out.println(\"-> Package cache size = \" + this.cache.pkgSize()); //$NON-NLS-1$", "+\t\t\t\t\tSystem.out.println(\"-> Openable cache filling ratio = \" + this.cache.openableFillingRatio() + \"%\"); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t\t}", "+\t\t\t} finally {", "+\t\t\t\tJavaModelManager.VERBOSE = wasVerbose;", "+\t\t\t}", "+\t\t}", "+\t}\t"]}], "num": 59874}