{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e682e90aaf89656710d849e01e81bc46", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5057f18a2da95c53e64265314b91c423", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CommitWorkingCopyOperation.java", "commitBeforeChange": "9674e3cb2b45f11c40bb76a8bdb3c8663d35e93e", "commitAfterChange": "14a4ce740e51b0d8505a35bf0508f7e51e888977", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r protected void executeOperation() throws JavaModelException", "signatureAfterChange": "\r protected void executeOperation() throws JavaModelException", "diff": ["+\tboolean hasSaved = false;\r", "-\t} catch(JavaModelException e){\r", "-\t\t// restore original buffer contents since something went wrong\r", "-\t\toriginal.getBuffer().setContents(originalContents);\r", "-\t\tthrow e;\r", "+\t\thasSaved = true;\r", "+\t} finally {\r", "+\t\tif (!hasSaved){\r", "+\t\t\t// restore original buffer contents since something went wrong\r", "+\t\t\toriginal.getBuffer().setContents(originalContents);\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58f1276832f540c03effea0e95b70c21", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "943e87ade1f62a6dfca41dc1a4f70210f25f08e8", "commitAfterChange": "bcb907ad93b1202cb7679b9dabebf16d872cd1bf", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "\r \tpublic static IClasspathEntry[] getResolvedClasspathContainer(IPath containerPath, IJavaProject project) throws JavaModelException", "signatureAfterChange": "\r \tpublic static IClasspathEntry[] getResolvedClasspathContainer(IPath containerPath, IJavaProject project) throws JavaModelException", "diff": ["+\t\t\t\tboolean ok = false;\r", "-\t\t\t\t\t\t\t\tJavaModelManager.Containers.put(project, null); // flush cache\r", "-\r", "+\t\t\t\t\tok = true;\r", "-\t\t\t\t\tJavaModelManager.Containers.put(project, null); // flush cache\r", "+\t\t\t\t} finally {\r", "+\t\t\t\t\tif (!ok) JavaModelManager.Containers.put(project, null); // flush cache\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a54dbb8bda5a05da12c55ec32994c4eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyNotInClasspathTests.java", "commitBeforeChange": "acb78a276c067a425abc6d87dbb7eb61d13a2cd0", "commitAfterChange": "a105f81992f5bd4d6508e905eedff01391ae5134", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void testIsOnClasspath() throws CoreException", "signatureAfterChange": " public void testIsOnClasspath() throws CoreException", "diff": ["-\t\ttry {", "-\t\t\tworkingCopy.getJavaProject().isOnClasspath(workingCopy);", "-\t\t\t// shouldn't reach that far, since isOnClasspath should throw an exception (not present)", "-\t\t\tassertTrue(\"working copy shouldn't answer to isOnClasspath\", false);", "-\t\t} catch(JavaModelException e) {", "-\t\t}", "+\t\tboolean isOnClasspath = workingCopy.getJavaProject().isOnClasspath(workingCopy);", "+\t\tassertTrue(\"working copy shouldn't answer to isOnClasspath\", !isOnClasspath);"]}], "num": 13292}