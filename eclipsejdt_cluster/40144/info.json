{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9ce08ee2e318f275790b2dc66a2bed75", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c4f700210f717d4a2dfcb97dddd1d73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "fe3a48f1f7f1a7c40cc246cc6fcf6be8ef3f9c35", "commitAfterChange": "193e5a666fe587859e4ffe3b97be66bcfde5cbec", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void _testSearchPotentialMatchInOutput() throws JavaModelException, CoreException", "signatureAfterChange": " public void testSearchPotentialMatchInOutput() throws CoreException", "diff": ["-public void _testSearchPotentialMatchInOutput() throws JavaModelException, CoreException {", "-\tthis.setClasspath(new String[] {\"/P\", \"src/\", \"/P/src\", \"\"});", "-\tthis.createFile(", "-\t\t\"/P/bin/X.java\",", "-\t\t\"public class X {\\n\" +", "-\t\t\"}\"", "-\t);", "-\tJavaSearchTests.JavaSearchResultCollector resultCollector = new JavaSearchTests.JavaSearchResultCollector();", "-\tIJavaSearchScope scope = SearchEngine.createJavaSearchScope(new IJavaElement[] {getJavaProject(\"P\")});", "-\tnew SearchEngine().search(", "-\t\tgetWorkspace(), ", "-\t\t\"X\",", "-\t\tIJavaSearchConstants.TYPE,", "-\t\tIJavaSearchConstants.DECLARATIONS, ", "-\t\tscope, ", "-\t\tresultCollector);", "-\tassertEquals(\"\", resultCollector.toString());", "+public void testSearchPotentialMatchInOutput() throws CoreException {", "+\ttry {", "+\t\tJavaCore.run(new IWorkspaceRunnable() {", "+\t\t\tpublic void run(IProgressMonitor monitor) throws CoreException {", "+\t\t\t\tIJavaProject project = createJavaProject(\"P2\", new String[] {}, \"bin\");", "+\t\t\t\tproject.setRawClasspath(createClasspath(new String[] {\"/P2\", \"src/\", \"/P2/src\", \"\"}), null);", "+\t\t\t\tcreateFile(", "+\t\t\t\t\t\"/P2/bin/X.java\",", "+\t\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\t\"}\"", "+\t\t\t\t);", "+\t\t\t}", "+\t\t}, null);", "+\t\t", "+\t\tJavaSearchTests.JavaSearchResultCollector resultCollector = new JavaSearchTests.JavaSearchResultCollector();", "+\t\tIJavaSearchScope scope = SearchEngine.createJavaSearchScope(new IJavaElement[] {getJavaProject(\"P\")});", "+\t\tnew SearchEngine().search(", "+\t\t\tgetWorkspace(), ", "+\t\t\t\"X\",", "+\t\t\tIJavaSearchConstants.TYPE,", "+\t\t\tIJavaSearchConstants.DECLARATIONS, ", "+\t\t\tscope, ", "+\t\t\tresultCollector);", "+\t\tassertEquals(\"\", resultCollector.toString());", "+\t} finally {", "+\t\tthis.deleteProject(\"P2\");", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3144490005c748f9729626fafcb71b37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyTests.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 121, "methodNumberAfterChange": 122, "signatureBeforeChange": " public void testPackageInfo01() throws CoreException", "signatureAfterChange": " public void testBug300576b() throws CoreException", "diff": ["-// Ensure that package-info doesn't cause AbortCompilation from the HierarchyResolver.", "-public void testPackageInfo01() throws CoreException {", "-\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL_LIB\"}, new String[0], \"bin\");", "-", "-\t\tcreateFolder(\"/P/src/p\");", "-\t\tcreateFile(", "-\t\t\t\t\"/P/src/p/package-info.java\",", "-\t\t\t\t\"/** Doc comment*/ package p;\\n\"", "-\t\t\t);", "-\t\tcreateFile(", "-\t\t\t\t\"/P/src/p/A.java\",", "-\t\t\t\t\"package p;\\n\" +", "-\t\t\t\t\"public class A {\\n\" +", "-\t\t\t\t\"}\\n\"", "-\t\t\t);", "-\t\tcreateFile(", "-\t\t\t\t\"/P/src/p/C.java\",", "-\t\t\t\t\"package p;\\n\" +", "-\t\t\t\t\"public class C extends A {\\n\" +", "-\t\t\t\t\"    void foo() {\\n\" +", "-\t\t\t\t\"        class Bar extends C {}\\n\" +", "-\t\t\t\t\"    }\\n\" +", "-\t\t\t\t\"}\\n\"", "-\t\t\t);", "-\t\tICompilationUnit cu = getCompilationUnit(\"/P/src/p/C.java\");", "-\t\tIType type = cu.getType(\"C\");", "-\t\tIMethod method = type.getMethod(\"foo\", new String[0]);", "-\t\tIType local = method.getType(\"Bar\", 1);", "-\t\tITypeHierarchy cHierarchy = type.newTypeHierarchy(null);", "-\t\tassertTrue(\"Local type should be in the hierarchy\", cHierarchy.contains(local));", "-\t\tdeleteProject(\"P\");", "+// test that a bogus java.lang.Enum (non-generic) doesn't cause NPE", "+public void testBug300576b() throws CoreException {", "+\tIJavaProject prj = null;", "+\ttry {", "+\t\tprj = createJavaProject(\"Bug300576\", new String[] {\"src\"}, new String[] {\"JCL_LIB\"}, \"bin\", \"1.5\");", "+\t\tcreateFolder(\"/Bug300576/src/p\");", "+\t\tcreateFolder(\"/Bug300576/src/java/lang\");", "+\t\tcreateFile(\"/Bug300576/src/java/lang/Enum.java\",", "+\t\t\t\t\"package java.lang;\\n\" +", "+\t\t\t\t\"public class Enum {}\\n\");", "+\t\tcreateFile(\"/Bug300576/src/p/Outer.java\",", "+\t\t\t\t\"package p;\\n\" + ", "+\t\t\t\t\"class Outer {\\n\" + ", "+\t\t\t\t\"    enum A {\\n\" + ", "+\t\t\t\t\"        GREEN, DARK_GREEN, BLACK;\\n\" +", "+\t\t\t\t\"        /** Javadoc of getNext() */\\n\" + ", "+\t\t\t\t\"        A getNext() {\\n\" + ", "+\t\t\t\t\"            switch (this) {\\n\" + ", "+\t\t\t\t\"                case GREEN : return DARK_GREEN;\\n\" + ", "+\t\t\t\t\"                case DARK_GREEN : return BLACK;\\n\" + ", "+\t\t\t\t\"                case BLACK : return GREEN;\\n\" + ", "+\t\t\t\t\"                default : return null;\\n\" + ", "+\t\t\t\t\"            }\\n\" + ", "+\t\t\t\t\"        }\\n\" + ", "+\t\t\t\t\"    }\\n\" + ", "+\t\t\t\t\"    {\\n\" + ", "+\t\t\t\t\"        A a= A.GREEN.getNext();\\n\" + ", "+\t\t\t\t\"    }\\n\" + ", "+\t\t\t\t\"}\\n\");", "+\t\tIType a = getCompilationUnit(\"Bug300576\", \"src\", \"p\", \"Outer.java\").getType(\"Outer\").getType(\"A\");", "+\t\tIRegion region = JavaCore.newRegion();", "+\t\tregion.add(getPackageFragmentRoot(\"Bug300576\", \"src\"));", "+\t\tITypeHierarchy hierarchy = prj.newTypeHierarchy(a, region, new NullProgressMonitor());", "+\t\tassertHierarchyEquals(", "+\t\t\t\t\"Focus: A [in Outer [in Outer.java [in p [in src [in Bug300576]]]]]\\n\" + ", "+\t\t\t\t\"Super types:\\n\" + ", "+\t\t\t\t\"Sub types:\\n\",", "+\t\t\t\thierarchy);", "+\t} finally {", "+\t\tif (prj != null)", "+\t\t\tdeleteProject(prj);"]}], "num": 40144}