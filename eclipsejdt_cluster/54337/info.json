{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dfae6f76e9ea5bf31aa3bffec3fd7566", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c8a8966e1507571043a69d977910ead", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementDelta.java", "commitBeforeChange": "b0acd443a36e322f7afa5778ad381a3437727af2", "commitAfterChange": "342a0847eab95d8ca2e8608616a2c691828b55df", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected void addAffectedChild(JavaElementDelta child)", "signatureAfterChange": " protected void addAffectedChild(JavaElementDelta child)", "diff": ["-\tif (fAffectedChildren.length == 0) {", "-\t\tfAffectedChildren = new IJavaElementDelta[] {child};", "+\tif (this.affectedChildren.length == 0) {", "+\t\tthis.affectedChildren = new IJavaElementDelta[] {child};", "-\tif (fAffectedChildren != null) {", "-\t\tfor (int i = 0; i < fAffectedChildren.length; i++) {", "-\t\t\tif (this.equalsAndSameParent(fAffectedChildren[i].getElement(), child.getElement())) { // handle case of two jars that can be equals but not in the same project", "-\t\t\t\texistingChild = (JavaElementDelta)fAffectedChildren[i];", "+\tif (this.affectedChildren != null) {", "+\t\tfor (int i = 0; i < this.affectedChildren.length; i++) {", "+\t\t\tif (this.equalsAndSameParent(this.affectedChildren[i].getElement(), child.getElement())) { // handle case of two jars that can be equals but not in the same project", "+\t\t\t\texistingChild = (JavaElementDelta)this.affectedChildren[i];", "-\t\tfAffectedChildren= growAndAddToArray(fAffectedChildren, child);", "+\t\tthis.affectedChildren= growAndAddToArray(this.affectedChildren, child);", "-\t\t\t\t\t\tfAffectedChildren = this.removeAndShrinkArray(fAffectedChildren, existingChildIndex);", "+\t\t\t\t\t\tthis.affectedChildren = this.removeAndShrinkArray(this.affectedChildren, existingChildIndex);", "-\t\t\t\t\t\tfAffectedChildren[existingChildIndex] = child;", "+\t\t\t\t\t\tthis.affectedChildren[existingChildIndex] = child;", "-\t\t\t\t\t\tfAffectedChildren[existingChildIndex] = child;", "+\t\t\t\t\t\tthis.affectedChildren[existingChildIndex] = child;", "-\t\t\t\tfAffectedChildren[existingChildIndex] = child;", "+\t\t\t\tthis.affectedChildren[existingChildIndex] = child;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bea711527bca5cb0680b5779448e65ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementDelta.java", "commitBeforeChange": "cccafe00dbf29f156949d8f0d0aec370b02aa048", "commitAfterChange": "1a542c460a449efbae14d1057ba233825602248d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 4, "signatureBeforeChange": " protected void addAffectedChild(JavaElementDelta child)", "signatureAfterChange": " protected void addAffectedChild(JavaElementDelta child)", "diff": ["-\tif (this.affectedChildren == null || this.affectedChildren.length == 0) {", "-\t\tthis.affectedChildren = new IJavaElementDelta[] {child};", "-\t\treturn;", "-\t}", "-\tJavaElementDelta existingChild = null;", "-\tint existingChildIndex = -1;", "-\tfor (int i = 0; i < this.affectedChildren.length; i++) {", "-\t\tif (equalsAndSameParent(this.affectedChildren[i].getElement(), child.getElement())) { // handle case of two jars that can be equals but not in the same project", "-\t\t\texistingChild = (JavaElementDelta)this.affectedChildren[i];", "-\t\t\texistingChildIndex = i;", "-\t\t\tbreak;", "-\t\t}", "-\t}", "-\tif (existingChild == null) { //new affected child", "-\t\tthis.affectedChildren= growAndAddToArray(this.affectedChildren, child);", "+\tKey childKey = new Key(child.getElement());", "+\tInteger existingChildIndex = getChildIndex(childKey);", "+\tif (existingChildIndex == null) { //new affected child", "+\t\taddNewChild(child);", "+\t\tJavaElementDelta existingChild = (JavaElementDelta) this.affectedChildren[existingChildIndex];", "-\t\t\t\t\t\tthis.affectedChildren = removeAndShrinkArray(this.affectedChildren, existingChildIndex);", "+\t\t\t\t\t\tremoveExistingChild(childKey, existingChildIndex);"]}], "num": 54337}