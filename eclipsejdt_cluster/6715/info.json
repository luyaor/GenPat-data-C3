{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "95b10ce294e238acf64f8db01f762e46", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dfe159f7d3b9ba194bf517022af5a3f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "396ca10810550c7712741dd65ea60d50dccc4f9c", "commitAfterChange": "5942739e510eee0fb38fa2f7a6c0a4bcc3408c60", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \tpublic void performPreBuildCheck(\r \t\tIResourceDelta delta,\r \t\tIJavaElement parent)", "signatureAfterChange": "\r \tpublic void performPreBuildCheck(\r \t\tIResourceDelta delta,\r \t\tIJavaElement parent)", "diff": ["+\t\t\t\t\t\t\t\t\tUtil.log(e, \"Could not save classpath for \"+ project.getPath()); //$NON-NLS-1$\r", "-\t\t\t\t\t\t\t\t\ttry {\r", "-\t\t\t\t\t\t\t\t\t\tproject.setRawClasspath(\r", "-\t\t\t\t\t\t\t\t\t\t\tfileEntries, \r", "-\t\t\t\t\t\t\t\t\t\t\toutputLocation, \r", "-\t\t\t\t\t\t\t\t\t\t\tnull, // monitor\r", "-\t\t\t\t\t\t\t\t\t\t\ttrue, // canChangeResource\r", "-\t\t\t\t\t\t\t\t\t\t\tfalse, // forceSave\r", "-\t\t\t\t\t\t\t\t\t\t\tproject.getResolvedClasspath(true), // ignoreUnresolvedVariable\r", "-\t\t\t\t\t\t\t\t\t\t\ttrue, // needCycleCheck\r", "-\t\t\t\t\t\t\t\t\t\t\ttrue); // needValidation\r", "-\t\t\t\t\t\t\t\t\t} catch (JavaModelException e) {\r", "-\t\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\t\t\tproject.setRawClasspath(\r", "+\t\t\t\t\t\t\t\t\t\tfileEntries, \r", "+\t\t\t\t\t\t\t\t\t\toutputLocation, \r", "+\t\t\t\t\t\t\t\t\t\tnull, // monitor\r", "+\t\t\t\t\t\t\t\t\t\ttrue, // canChangeResource\r", "+\t\t\t\t\t\t\t\t\t\tfalse, // forceSave\r", "+\t\t\t\t\t\t\t\t\t\tproject.getResolvedClasspath(true), // ignoreUnresolvedVariable\r", "+\t\t\t\t\t\t\t\t\t\ttrue, // needCycleCheck\r", "+\t\t\t\t\t\t\t\t\t\ttrue); // needValidation\r", "-\t\t\t\t\t\t\t\t\tUtil.log(e, \"Exception updating classpath for \"+ project.getPath()); //$NON-NLS-1$\r", "+\t\t\t\t\t\t\t\t\tUtil.log(e, \"Could not set classpath for \"+ project.getPath()); //$NON-NLS-1$\r", "-\t\t\t\t\t\t\t\t\t// setRawClasspath might fire a delta, and a listener may throw an exception\r", "-\t\t\t\t\t\t\t\t\tUtil.log(e, \"Exception updating classpath for \"+ project.getPath()); //$NON-NLS-1$\r", "+\t\t\t\t\t\t\t\t\t// happens if the .classpath could not be written to disk\r", "+\t\t\t\t\t\t\t\t\tUtil.log(e, \"Could not set classpath for \"+ project.getPath()); //$NON-NLS-1$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5d31b9737fbbc96c3690348339b7048", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "edee822e0be0769ce438b2f09d4a690a0d540647", "commitAfterChange": "93095c2a7ab7ebf10c67a53f522d196aee31692f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \tpublic void performPreBuildCheck(\r \t\tIResourceDelta delta,\r \t\tIJavaElement parent)", "signatureAfterChange": "\r \tpublic void performPreBuildCheck(\r \t\tIResourceDelta delta,\r \t\tIJavaElement parent)", "diff": ["-\t\t\t\t\t\t\t\t\tif (project.getProject().isAccessible()){\r", "+\t\t\t\t\t\t\t\t\tif (project.getProject().isAccessible()) {\r", "-\t\t\t\t\t\t\t\t\t\tUtil.log(e, \r", "-\t\t\t\t\t\t\t\t\t\t\t\"Exception while retrieving \"+ project.getPath() //$NON-NLS-1$\r", "-\t\t\t\t\t\t\t\t\t\t\t+\"/.classpath, ignore change\"); //$NON-NLS-1$\r", "+\t\t\t\t\t\t\t\t\t\tif (project.getProject().isAccessible()) {\r", "+\t\t\t\t\t\t\t\t\t\t\tUtil.log(e, \r", "+\t\t\t\t\t\t\t\t\t\t\t\t\"Exception while retrieving \"+ project.getPath() //$NON-NLS-1$\r", "+\t\t\t\t\t\t\t\t\t\t\t\t+\"/.classpath, ignore change\"); //$NON-NLS-1$\r", "+\t\t\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\t\t\tUtil.log(e, \r", "-\t\t\t\t\t\t\t\t\t\t\t\"Exception while retrieving \"+ project.getPath() //$NON-NLS-1$\r", "-\t\t\t\t\t\t\t\t\t\t\t+\"/.classpath, ignore change\"); //$NON-NLS-1$\r", "+\t\t\t\t\t\t\t\t\t\tif (project.getProject().isAccessible()) {\r", "+\t\t\t\t\t\t\t\t\t\t\tUtil.log(e, \r", "+\t\t\t\t\t\t\t\t\t\t\t\t\"Exception while retrieving \"+ project.getPath() //$NON-NLS-1$\r", "+\t\t\t\t\t\t\t\t\t\t\t\t+\"/.classpath, ignore change\"); //$NON-NLS-1$\r", "+\t\t\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\t\tUtil.log(e, \"Could not set classpath for \"+ project.getPath()); //$NON-NLS-1$\r", "+\t\t\t\t\t\t\t\t\tif (project.getProject().isAccessible()) {\r", "+\t\t\t\t\t\t\t\t\t\tUtil.log(e, \"Could not set classpath for \"+ project.getPath()); //$NON-NLS-1$\r", "+\t\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\t\tUtil.log(e, \"Could not set classpath for \"+ project.getPath()); //$NON-NLS-1$\r", "+\t\t\t\t\t\t\t\t\tif (project.getProject().isAccessible()) {\r", "+\t\t\t\t\t\t\t\t\t\tUtil.log(e, \"Could not set classpath for \"+ project.getPath()); //$NON-NLS-1$\r", "+\t\t\t\t\t\t\t\t\t}\r"]}], "num": 6715}