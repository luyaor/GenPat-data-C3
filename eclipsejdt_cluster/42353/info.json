{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "026a637f414248ebd122b052365fba43", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e31e9f5cca2bf787da87f19558fb47b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "4b4dbca0bb97a8d7d91d56de2e2d0246704ead9c", "commitAfterChange": "f45c88f3e7a99f05a0822482d3d6807236a1c216", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tpublic static IClasspathEntry elementDecode(Element element, IJavaProject project)", "signatureAfterChange": " \t \tpublic static IClasspathEntry elementDecode(Element element, IJavaProject project)", "diff": ["+\t\t// accessible files patterns (optional)", "+\t\tIPath[] accessibleFiles = decodePatterns(element, TAG_ACCESSIBLE);", "+\t\tif (accessibleFiles == null) accessibleFiles = inclusionPatterns; // backward compatible", "+\t\t", "+\t\t// non accessible files patterns (optional)", "+\t\tIPath[] nonAccessibleFiles = decodePatterns(element, TAG_NONACCESSIBLE);", "+\t\tif (nonAccessibleFiles == null) nonAccessibleFiles = exclusionPatterns; // backward compatible", "+\t\t", "+\t\t// extra attributes (optional)", "+\t\tIClasspathAttribute[] extraAttributes = decodeExtraAttributes(element);", "+\t\t", "-\t\t\t\t\t\t\t\t\t\t\t\tinclusionPatterns,", "-\t\t\t\t\t\t\t\t\t\t\t\texclusionPatterns,", "+\t\t\t\t\t\t\t\t\t\t\t\taccessibleFiles,", "+\t\t\t\t\t\t\t\t\t\t\t\tnonAccessibleFiles,", "+\t\t\t\t\t\t\t\t\t\t\t\textraAttributes,", "-\t\t\t\t\t\t\t\t\t\t\t\tinclusionPatterns,", "-\t\t\t\t\t\t\t\t\t\t\t\texclusionPatterns,", "+\t\t\t\t\t\t\t\t\t\t\t\taccessibleFiles,", "+\t\t\t\t\t\t\t\t\t\t\t\tnonAccessibleFiles,", "+\t\t\t\t\t\t\t\t\t\t\t\textraAttributes,", "-\t\t\t\t\treturn JavaCore.newSourceEntry(path, inclusionPatterns, exclusionPatterns, outputLocation);", "+\t\t\t\t\treturn JavaCore.newSourceEntry(path, inclusionPatterns, exclusionPatterns, outputLocation, extraAttributes);", "-\t\t\t\t\t\t\t\t\t\t\t\tinclusionPatterns,", "-\t\t\t\t\t\t\t\t\t\t\t\texclusionPatterns,", "+\t\t\t\t\t\t\t\t\t\t\t\taccessibleFiles,", "+\t\t\t\t\t\t\t\t\t\t\t\tnonAccessibleFiles,", "+\t\t\t\t\t\t\t\t\t\t\t\textraAttributes,", "-\t\t\t\t\t\treturn JavaCore.newSourceEntry(path, inclusionPatterns, exclusionPatterns, outputLocation);", "+\t\t\t\t\t\treturn JavaCore.newSourceEntry(path, inclusionPatterns, exclusionPatterns, outputLocation, extraAttributes);", "-\t\t\t\t\t\tinclusionPatterns,", "-\t\t\t\t\t\texclusionPatterns,", "+\t\t\t\t\t\taccessibleFiles,", "+\t\t\t\t\t\tnonAccessibleFiles,", "+\t\t\t\t\t\textraAttributes,", "-\t\t\t\t\t\tinclusionPatterns,", "-\t\t\t\t\t\texclusionPatterns,", "+\t\t\t\t\t\taccessibleFiles,", "+\t\t\t\t\t\tnonAccessibleFiles,", "+\t\t\t\t\t\textraAttributes,", "-\t\t\t\t\t\tfalse);", "+\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\tINCLUDE_ALL, ", "+\t\t\t\t\t\tEXCLUDE_NONE,", "+\t\t\t\t\t\tNO_EXTRA_ATTRIBUTES);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc4e1b8f99a401f8b635e81a66c3114b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ExternalFoldersManager.java", "commitBeforeChange": "69c59f0267102692d57da5d57d379c16633b234c", "commitAfterChange": "a7da40a1a62439fc4b1ece4f5221022e1778c205", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t\t\t\tprotected IStatus run(IProgressMonitor pm)", "signatureAfterChange": " \t\t \t\tprotected IStatus run(IProgressMonitor pm)", "diff": ["-\t\t\t\t}", "-\t\t\t\tprotected IStatus run(IProgressMonitor pm) {", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\twhile (iterator.hasNext()) {", "-\t\t\t\t\t\t\tIPath externalPath = (IPath) iterator.next();", "-\t\t\t\t\t\t\tIFolder folder = getFolder(externalPath);", "-\t\t\t\t\t\t\tif (folder != null)", "-\t\t\t\t\t\t\t\tfolder.refreshLocal(IResource.DEPTH_INFINITE, pm);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} catch (CoreException e) {", "-\t\t\t\t\t\treturn e.getStatus();", "-\t\t\t\t\t}", "-\t\t\t\t\treturn Status.OK_STATUS;", "-\t\t\t\t}", "+\t\t", "+\t\tprotected IStatus run(IProgressMonitor pm) {", "+\t\t\ttry {", "+\t\t\t\twhile (this.externalFolders.hasNext()) {", "+\t\t\t\t\tIPath externalPath = (IPath) this.externalFolders.next();", "+\t\t\t\t\tIFolder folder = getFolder(externalPath);", "+\t\t\t\t\tif (folder != null) {", "+\t\t\t\t\t\tfolder.refreshLocal(IResource.DEPTH_INFINITE, pm);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t} catch (CoreException e) {", "+\t\t\t\treturn e.getStatus();", "+\t\t\t}", "+\t\t\treturn Status.OK_STATUS;", "+\t\t}"]}], "num": 42353}