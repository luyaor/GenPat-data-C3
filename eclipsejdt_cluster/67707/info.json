{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dc31bf10112b8871b961cf3d81eec0d9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7321229319b5b977848d03828479a02a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferenceLocator.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " protected int matchLevelForTokens(char[][] tokens)", "signatureAfterChange": " protected int matchLevelForTokens(char[][] tokens)", "diff": ["-\tchar[] packageName = null;", "-\tif (this.isCamelCase) {", "-\t\tpackageName = CharOperation.concatWith(tokens, '.');", "-\t\tif (CharOperation.camelCaseMatch(this.pattern.pkgName, packageName, (this.matchMode & SearchPattern.R_PREFIX_MATCH) != 0)) {", "-\t\t\treturn POSSIBLE_MATCH;", "-\t\t}", "-\t\tif (this.isCaseSensitive) return IMPOSSIBLE_MATCH;", "-\t}", "-\t\t\tif (packageName==null) packageName = CharOperation.concatWith(tokens, '.');", "-\t\t\tif (CharOperation.prefixEquals(this.pattern.pkgName, packageName, this.isCaseSensitive)) {", "+\t\t\tif (CharOperation.prefixEquals(this.pattern.pkgName, CharOperation.concatWith(tokens, '.'), this.isCaseSensitive)) {", "+", "-\t\t\tif (packageName==null) packageName = CharOperation.concatWith(tokens, '.');", "-\t\t\tif (CharOperation.match(patternName, packageName, this.isCaseSensitive)) {", "+\t\t\tif (CharOperation.match(patternName, CharOperation.concatWith(tokens, '.'), this.isCaseSensitive)) {", "+", "+", "+\t\tcase SearchPattern.R_CAMELCASE_MATCH:", "+\t\t\tchar[] packageName = CharOperation.concatWith(tokens, '.');", "+\t\t\tif (CharOperation.camelCaseMatch(this.pattern.pkgName, packageName, false)) {", "+\t\t\t\treturn POSSIBLE_MATCH;", "+\t\t\t}", "+\t\t\t// only test case insensitive as CamelCase already verified prefix case sensitive", "+\t\t\tif (!this.isCaseSensitive && CharOperation.prefixEquals(this.pattern.pkgName, packageName, false)) {", "+\t\t\t\treturn POSSIBLE_MATCH;", "+\t\t\t}", "+\t\t\tbreak;", "+", "+\t\tcase SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH:", "+\t\t\tpackageName = CharOperation.concatWith(tokens, '.');", "+\t\t\tif (CharOperation.camelCaseMatch(this.pattern.pkgName, CharOperation.concatWith(tokens, '.'), true)) {", "+\t\t\t\treturn POSSIBLE_MATCH;", "+\t\t\t}", "+\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91629fac1fe207181150e2887af8b933", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public boolean matchesName(char[] pattern, char[] name)", "signatureAfterChange": " public boolean matchesName(char[] pattern, char[] name)", "diff": ["-\t\tboolean isCamelCase = (this.matchRule & R_CAMEL_CASE_MATCH) != 0;", "-\t\tboolean isPrefix = (this.matchRule & R_PREFIX_MATCH) != 0;", "-\t\tif (isPrefix && emptyPattern) return true;", "+\t\tif (emptyPattern && (this.matchRule & R_PREFIX_MATCH) != 0) return true;", "-\t\tif (isCamelCase) {", "-\t\t\tif (matchFirstChar && CharOperation.camelCaseMatch(pattern, name, isPrefix)) {", "-\t\t\t\treturn true;", "-\t\t\t}", "-\t\t\tif (isCaseSensitive) return false;", "-\t\t}", "+", "+\t\t\tcase SearchPattern.R_CAMELCASE_MATCH:", "+\t\t\t\tif (matchFirstChar && CharOperation.camelCaseMatch(pattern, name, false)) {", "+\t\t\t\t\treturn true;", "+\t\t\t\t}", "+\t\t\t\t// only test case insensitive as CamelCase already verified prefix case sensitive", "+\t\t\t\tif (!isCaseSensitive && matchFirstChar && CharOperation.prefixEquals(pattern, name, false)) {", "+\t\t\t\t\treturn true;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+", "+\t\t\tcase SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH:", "+\t\t\t\treturn matchFirstChar && CharOperation.camelCaseMatch(pattern, name, true);", "+"]}], "num": 67707}