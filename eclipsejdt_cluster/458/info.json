{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5dfff5ce1471a7f50bc8919f21ab41b5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0021e3b233090f11bef56aed29b4bafe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Statement.java", "commitBeforeChange": "f966b547afe1ce6e5e600680e6f3625db1aa756f", "commitAfterChange": "9d0a82ef5a22888c642513ca181ce9549bbdb17a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  protected boolean isBoxingCompatible(TypeBinding expressionType, TypeBinding targetType, Expression expression, Scope scope)", "signatureAfterChange": "  protected boolean isBoxingCompatible(TypeBinding expressionType, TypeBinding targetType, Expression expression, Scope scope)", "diff": ["-\treturn expressionType.isBaseType()  // narrowing then boxing ?", "+\treturn expressionType.isBaseType()  // narrowing then boxing ? Only allowed for some target types see 362279", "+\t\t&& (targetType.id == TypeIds.T_JavaLangByte || targetType.id == TypeIds.T_JavaLangShort || targetType.id == TypeIds.T_JavaLangCharacter)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61f664316dd75be967db2f2e205db5a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "2af4d6c5a01ec5b5f71fc5f4417f402b3cbb8976", "commitAfterChange": "938c6a1a841b22e47405cea69af1a008feb65db4", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \t\t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t\t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\tif (!leftType.isBaseType() && rightTypeID != T_JavaLangString) {", "+\t\t\tif (!leftType.isBaseType() && rightTypeID != T_JavaLangString && rightTypeID != T_null) {", "-\t\t\tif (!rightType.isBaseType() && leftTypeID != T_JavaLangString) {", "+\t\t\tif (!rightType.isBaseType() && leftTypeID != T_JavaLangString && leftTypeID != T_null) {"]}], "num": 458}