{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7b6386ce7db40a3bf8cd276adeb76523", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b962d552c9c19e7372efe57b3c1917f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "5d2e6e466ee272d62f273fff98dd2423f77bd2f3", "commitAfterChange": "e702e6a53e23b4f475e9578e987e56b628fcf8d7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected Map getCompilerOptions()", "signatureAfterChange": " protected Map getCompilerOptions()", "diff": ["-// Augment problem detection settings", "+static boolean setNullRelatedOptions = true;", "-//    defaultOptions.put(CompilerOptions.OPTION_ReportNullReference, CompilerOptions.WARNING);", "-    defaultOptions.put(CompilerOptions.OPTION_ReportNullReference, CompilerOptions.ERROR);", "-\tdefaultOptions.put(CompilerOptions.OPTION_ReportRawTypeReference, CompilerOptions.IGNORE);", "-//    defaultOptions.put(CompilerOptions.OPTION_ReportNoEffectAssignment, CompilerOptions.WARNING);", "+    if (setNullRelatedOptions) {", "+\t    defaultOptions.put(CompilerOptions.OPTION_ReportNullReference, CompilerOptions.ERROR);", "+\t    defaultOptions.put(CompilerOptions.OPTION_ReportPotentialNullReference, CompilerOptions.ERROR);", "+\t    defaultOptions.put(CompilerOptions.OPTION_ReportRedundantNullCheck, CompilerOptions.ERROR);", "+\t\tdefaultOptions.put(CompilerOptions.OPTION_ReportRawTypeReference, CompilerOptions.IGNORE);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22d05db87b061053b207c5b04de48a5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprotected Map getCompilerOptions()", "signatureAfterChange": " protected Map getCompilerOptions()", "diff": ["-\t// Augment problem detection settings", "-\tprotected Map getCompilerOptions() {", "-\t\tMap defaultOptions = super.getCompilerOptions();", "-\t\tdefaultOptions.put(CompilerOptions.OPTION_ReportNullReference, CompilerOptions.WARNING);", "-\t\tdefaultOptions.put(CompilerOptions.OPTION_ReportNoEffectAssignment, CompilerOptions.WARNING);", "-\t\treturn defaultOptions;", "-\t}", "+// Augment problem detection settings", "+protected Map getCompilerOptions() {", "+    Map defaultOptions = super.getCompilerOptions();", "+//    defaultOptions.put(CompilerOptions.OPTION_ReportNullReference, CompilerOptions.WARNING);", "+    defaultOptions.put(CompilerOptions.OPTION_ReportNullReference, CompilerOptions.ERROR);", "+//    defaultOptions.put(CompilerOptions.OPTION_ReportNoEffectAssignment, CompilerOptions.WARNING);", "+    return defaultOptions;", "+}"]}], "num": 31161}