{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "125c8393c062266674aa85bf3f9925e5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66286c6b405e433066198c10024d2914", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "9a9af4e642a47932f3bfeeec13330339dcc48de3", "commitAfterChange": "c3ad34ec44b228feb09e91ff5ac00fc774236d05", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " \tpublic void test050()", "signatureAfterChange": " \tpublic void test050()", "diff": ["-\t\t\t\t\"\t\t public static <S extends String> S foo() { \\n\" + ", "-\t\t\t\t\"\t\t     System.out.print(\\\"String\\\"); \\n\" + ", "+\t\t\t\t\"\t\t public static <S extends A> S foo() { \\n\" + ", "+\t\t\t\t\"\t\t     System.out.print(\\\"A\\\"); \\n\" + ", "-\t\t\t\t\"\t\t   }\\n\" + ", "-\t\t\t\t\"\t\t public static <N extends Number> N foo() { \\n\" + ", "-\t\t\t\t\"\t\t     System.out.print(\\\"Number\\\");\\n\" + ", "+\t\t\t\t\"\t\t  }\\n\" + ", "+\t\t\t\t\"\t\t public static <N extends B> N foo() { \\n\" + ", "+\t\t\t\t\"\t\t     System.out.print(\\\"B\\\");\\n\" + ", "-\t\t\t\t\"\t\t \tX.<String>foo();\\n\" + ", "-\t\t\t\t\"\t\t \tX.<Number>foo();\\n\" + ", "+\t\t\t\t\"\t\t \tX.<A>foo();\\n\" + ", "+\t\t\t\t\"\t\t \tX.<B>foo();\\n\" + ", "-\t\t\t\t\"\t\t    o.<Number>foo();\\n\" + ", "+\t\t\t\t\"\t\t    o.<B>foo();\\n\" + ", "-\t\t\t\t\"}\\n\"", "+\t\t\t\t\"}\\n\" + ", "+\t\t\t\t\"class A {}\\n\" + ", "+\t\t\t\t\"class B {}\\n\"", "-\t\t\t\"StringNumberNumber\");", "-\t}\t", "+\t\t\t\"ABB\"", "+\t\t);", "+// TODO (philippe) we get BBB", "+//\t\tthis.runConformTest(", "+//\t\t\tnew String[] {", "+//\t\t\t\t\"X.java\",", "+//\t\t\t\t\"public class X {\\n\" + ", "+//\t\t\t\t\"\t\t public static <S extends A> void foo() { \\n\" + ", "+//\t\t\t\t\"\t\t     System.out.print(\\\"A\\\"); \\n\" + ", "+//\t\t\t\t\"\t\t  }\\n\" + ", "+//\t\t\t\t\"\t\t public static <N extends B> N foo() { \\n\" + ", "+//\t\t\t\t\"\t\t     System.out.print(\\\"B\\\");\\n\" + ", "+//\t\t\t\t\"\t\t     return null; \\n\" + ", "+//\t\t\t\t\"\t\t }\\n\" + ", "+//\t\t\t\t\"\t\t public static void main(String[] args) {\\n\" + ", "+//\t\t\t\t\"\t\t \tX.foo();\\n\" + ", "+//\t\t\t\t\"\t\t \tX.<B>foo();\\n\" + ", "+//\t\t\t\t\"\t\t \tX o = new X();\\n\" + ", "+//\t\t\t\t\"\t\t    o.<B>foo();\\n\" + ", "+//\t\t\t\t\"\t\t }\\n\" + ", "+//\t\t\t\t\"}\\n\" + ", "+//\t\t\t\t\"class A {}\\n\" + ", "+//\t\t\t\t\"class B {}\\n\"", "+//\t\t\t},", "+//\t\t\t\"ABB\"", "+//\t\t);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9dd9c8933e4627b93d0626730825c0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "29d04c67639da8c85ba49a17424d09db5c2a2fad", "commitAfterChange": "fb2096a8900d812472337f28518928b970bad197", "methodNumberBeforeChange": 1335, "methodNumberAfterChange": 1335, "signatureBeforeChange": " public void test1305()", "signatureAfterChange": " public void test1305()", "diff": ["-\t\t\t\t\t\"LayoutOrganizer.java\",", "+\t\t\t\t\t\"bug/ConflictManager.java\",// =================", "+\t\t\t\t\t\"package bug;\\n\" +", "-\t\t\t\t\t\"class ConflictManager<T> {\\n\" + ", "+\t\t\t\t\t\"public class ConflictManager<T> {\\n\" + ", "-\t\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\t\"class LayoutOrganizable<T> {\\n\" + ", "+\t\t\t\t\t\"}\\n\",", "+\t\t\t\t\t\"bug/LayoutOrganizable.java\",// =================", "+\t\t\t\t\t\"package bug;\\n\" +", "+\t\t\t\t\t\"public class LayoutOrganizable<T> {\\n\" + ", "-\t\t\t\t\t\"}\\n\" + ", "+\t\t\t\t\t\"}\\n\",", "+\t\t\t\t\t\"bug/LayoutOrganizer.java\",", "+\t\t\t\t\t\"package bug;\\n\" +", "+\t\t\t\t\t\"import java.util.*;\\n\" + ", "+\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\t\"bug/LayoutOrganizer.java\",", "+\t\t\t\t\t\"package bug;\\n\" +", "+\t\t\t\t\t\"import java.util.*;\\n\" + ", "+\t\t\t\t\t\"public class LayoutOrganizer<T> {\\n\" + ", "+\t\t\t\t\t\"\tConflictManager<LayoutOrganizable<T>> conflictManager = new ConflictManager<LayoutOrganizable<T>>();\\n\" + ", "+\t\t\t\t\t\"\tprivate boolean optimizeEqual() {\\n\" + ", "+\t\t\t\t\t\"\t\tList<Map.Entry<Integer, ? extends Collection<LayoutOrganizable<T>>>> list;\\n\" + ", "+\t\t\t\t\t\"\t\tListIterator<Map.Entry<Integer, ? extends Collection<LayoutOrganizable<T>>>> i;\\n\" + ", "+\t\t\t\t\t\"\t\t// create sorted list of pairs\\n\" + ", "+\t\t\t\t\t\"\t\t// (#conflicts, list of LayoutOrganizable sharing this #conflicts)\\n\" + ", "+\t\t\t\t\t\"\t\t// Here is the problem...\\n\" + ", "+\t\t\t\t\t\"\t\tlist = conflictManager.getConflictsSortedBySize();\\n\" + ", "+\t\t\t\t\t\"\t\treturn null == list;\\n\" + ", "+\t\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\t\"}\\n\", // =================", "+\t\t\t},", "+\t\t\t\"\",", "+\t\t\tnull,", "+\t\t\tfalse,", "+\t\t\tnull);\t"]}], "num": 33120}