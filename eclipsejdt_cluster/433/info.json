{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f984f176f9044104f67c852c22a9150e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "326bd29652b60f4bc7f1a01a5314d8cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTParser.java", "commitBeforeChange": "0534618c17c0b5f6c361eb5acf9c22731255984f", "commitAfterChange": "d85ef445439a7932d1fe7c7dafa9bf16e2d2dd51", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tprivate ASTNode internalCreateASTForKind()", "signatureAfterChange": " \tprivate ASTNode internalCreateASTForKind()", "diff": ["-\t\t\t\tConstructorDeclaration constructorDeclaration = codeSnippetParsingUtil.parseStatements(this.rawSource, this.sourceOffset, this.sourceLength, this.compilerOptions, true);", "+\t\t\t\tConstructorDeclaration constructorDeclaration = codeSnippetParsingUtil.parseStatements(this.rawSource, this.sourceOffset, this.sourceLength, this.compilerOptions, true, true);", "+\t\t\t\tRecoveryScannerData data = constructorDeclaration.compilationResult.recoveryScannerData;", "+\t\t\t\tif(data != null) {", "+\t\t\t\t\tScanner scanner = converter.scanner;", "+\t\t\t\t\tconverter.scanner = new RecoveryScanner(scanner, data.removeUnused());", "+\t\t\t\t\tconverter.docParser.scanner = converter.scanner;", "+\t\t\t\t\tconverter.scanner.setSource(scanner.source);", "+\t\t\t\t\t", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5657d44871805139408a0e73cab53eaf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeDeclaration.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tTypeDeclaration(AST ast)", "signatureAfterChange": " \tTypeDeclaration(AST ast)", "diff": ["+\t\tif (ast.API_LEVEL == AST.LEVEL_2_0) {", "+\t\t\tthis.superInterfaceNames = new ASTNode.NodeList(false, Name.class);", "+\t\t}", "+\t\tif (ast.API_LEVEL >= AST.LEVEL_3_0) {", "+\t\t\tthis.typeParameters = new ASTNode.NodeList(false, TypeParameter.class);", "+\t\t\tthis.superInterfaceTypes = new ASTNode.NodeList(false, Type.class);", "+\t\t}"]}], "num": 433}