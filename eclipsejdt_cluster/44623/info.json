{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f58eb4ea2b775ea47aada7c0d0f19e82", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14e464667885c37b491b68a44310a989", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ExternalAnnotationProvider.java", "commitBeforeChange": "6c085192f8ca1a30dcc3f8eecf0c1b2085d19f7e", "commitAfterChange": "b1d9b2131096901775539a68eb3d7a7d50bc45d5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic ExternalAnnotationProvider(File annotationSource) throws IOException", "signatureAfterChange": " \t \tpublic ExternalAnnotationProvider(String baseDir, String typeName) throws IOException", "diff": ["-\tpublic ExternalAnnotationProvider(File annotationSource) throws IOException {", "-\t\tif (!annotationSource.exists()) throw new FileNotFoundException(annotationSource.getAbsolutePath());", "-\t\tthis.annotationSource = annotationSource;", "+\tpublic ExternalAnnotationProvider(String baseDir, String typeName) throws IOException {", "+\t\tthis.annotationSource = new File(baseDir+File.separatorChar+typeName+ANNOTATION_FILE_SUFFIX);", "+\t\tif (!this.annotationSource.exists()) throw new FileNotFoundException(this.annotationSource.getAbsolutePath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9320c2091bea49f1a0a5ed87300bd79b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "cdead094a9813fdba5ccda0ce2f9f48a99552dbc", "commitAfterChange": "3be4aa0b7d051355f329ce1003f3f4c0f7acfab2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprivate void parseReturn()", "signatureAfterChange": " \tprivate void parseReturn()", "diff": ["-\t\t\tthis.javadoc.returnStatement = new JavadocReturnStatement(scanner.getCurrentTokenStartPosition(),", "-\t\t\t\t\tscanner.getCurrentTokenEndPosition(),", "-\t\t\t\t\tscanner.getRawTokenSourceEnd());", "+\t\t\tthis.javadoc.returnStatement = new JavadocReturnStatement(this.scanner.getCurrentTokenStartPosition(),", "+\t\t\t\t\tthis.scanner.getCurrentTokenEndPosition(),", "+\t\t\t\t\tthis.scanner.getRawTokenSourceEnd());", "-\t\t\tthis.sourceParser.problemReporter().javadocDuplicateReturnTag(", "-\t\t\t\t\tscanner.getCurrentTokenStartPosition(),", "-\t\t\t\t\tscanner.getCurrentTokenEndPosition());", "+\t\t\tthis.sourceParser.problemReporter().javadocDuplicatedReturnTag(", "+\t\t\t\t\tthis.scanner.getCurrentTokenStartPosition(),", "+\t\t\t\t\tthis.scanner.getCurrentTokenEndPosition());"]}], "num": 44623}