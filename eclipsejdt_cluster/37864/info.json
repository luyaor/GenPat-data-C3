{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "49974499c4fd1a58b811de229e3c1508", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54fa9e4d52dc25410f1107e8f3528404", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "8924dfc4fa3fe74549012523c4b06ea66d1d771f", "commitAfterChange": "32ddf534b04d269b876c2c25ef9641f93fbc4b4b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public BinaryTypeBinding(PackageBinding packageBinding, IBinaryType binaryType, LookupEnvironment environment)", "signatureAfterChange": "   public BinaryTypeBinding(PackageBinding packageBinding, IBinaryType binaryType, LookupEnvironment environment)", "diff": ["-\t// source name must be one name without \"$\".", "-\tchar[] possibleSourceName = this.compoundName[this.compoundName.length - 1];", "-\tint start = CharOperation.lastIndexOf('$', possibleSourceName) + 1;", "-\tif (start == 0) {", "-\t\tthis.sourceName = possibleSourceName;", "-\t} else {", "-\t\tthis.sourceName = new char[possibleSourceName.length - start];", "-\t\tSystem.arraycopy(possibleSourceName, start, this.sourceName, 0, this.sourceName.length);", "-\t}", "-", "+\tthis.sourceName = binaryType.getSourceName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9712b39238df212f48e22f2262eed2e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "56f02b653e0dc58dc37c3d15b2e6a78c25c99600", "commitAfterChange": "ee09a8a98faa8f7f5560760965a7dd66e79f6d04", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "\r private void storeLabelsIfNeeded()", "signatureAfterChange": "\r private void storeLabelsIfNeeded()", "diff": ["-\tint counter = this.labelCounterPtr >= 0 ? this.labelCounterStack[this.labelCounterPtr] : 0;\r", "-\tif (this.labels == null && this.identifierPtr >= 0) {\r", "-\t\tthis.labels = new char[counter][];\r", "-\t\tSystem.arraycopy(this.identifierStack, this.identifierPtr - counter + 1, this.labels, 0, counter);\r", "-\t}\r", "-\tthis.identifierPtr -= counter;\r", "-\tthis.identifierLengthPtr -= counter; // labels have not been concatenated yet\r", "+//\tint counter = this.labelCounterPtr >= 0 ? this.labelCounterStack[this.labelCounterPtr] : 0;\r", "+//\tif (this.labels == null && this.identifierPtr >= 0) {\r", "+//\t\tthis.labels = new char[counter][];\r", "+//\t\tSystem.arraycopy(this.identifierStack, this.identifierPtr - counter + 1, this.labels, 0, counter);\r", "+//\t}\r", "+//\tthis.identifierPtr -= counter;\r", "+//\tthis.identifierLengthPtr -= counter; // labels have not been concatenated yet\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1c04dcf6d3f8d5ee5e5c5fae7c88df8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/FormatterCommentParser.java", "commitBeforeChange": "1a8cfd60f35f9eb233d4395676551d0101e49aa3", "commitAfterChange": "acbc84bdd187bdb6c7f4afd96c97bfaa149e3ef9", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  private void pushText(int start, int end, int htmlIndex, int htmlDepth)", "signatureAfterChange": "  private void pushText(int start, int end, int htmlIndex, int htmlDepth)", "diff": ["-\tint textEnd = end;", "-\tif (this.javadocTextEnd > 0 && end >= this.javadocTextEnd) {", "-\t\t// Special case on javadoc text end, need to retrieve the space", "-\t\t// position by rescanning the text", "-\t\tint restart = this.spacePosition == -1 ? start : this.spacePosition;", "-\t\tthis.scanner.resetTo(restart, end-1/* before last star*/);", "-\t\ttry {", "-\t\t\tif (this.scanner.getNextToken() == TerminalTokens.TokenNameEOF) {", "-\t\t\t\ttextEnd = this.spacePosition;", "-\t\t\t}", "-\t\t}", "-\t\tcatch (InvalidInputException iie) {", "-\t\t\t// do nothing", "-\t\t}", "-\t}", "-\tFormatJavadocText text = new FormatJavadocText(start, textEnd-1, lineStart, htmlIndex, htmlDepth);", "+\tFormatJavadocText text = new FormatJavadocText(start, end-1, lineStart, htmlIndex, htmlDepth);"]}], "num": 37864}