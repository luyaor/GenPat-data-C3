{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fade9f69b656c4a291717391da342328", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "226949804b6be3c28504e296fd0f4069", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b98c5445ecec402caa11dd14f61dc75d1a13da5a", "commitAfterChange": "d785f90166aa4c50a893672b2f8b10875313fedd", "methodNumberBeforeChange": 522, "methodNumberAfterChange": 522, "signatureBeforeChange": " \tpublic void test0504()", "signatureAfterChange": " \tpublic void test0504() throws Exception", "diff": ["-\tpublic void test0504() {", "+\tpublic void test0504() throws Exception {", "-\t\ttry {", "-\t\t\tFile f = new File(OUTPUT_DIR + File.separator + \"X.class\");", "-\t\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);", "-\t\t\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "-\t\t\tString result = disassembler.disassemble(classFileBytes, \"\\n\", ClassFileBytesDisassembler.DETAILED);", "-\t\t\tint index = result.indexOf(expectedOutput);", "-\t\t\tif (index == -1 || expectedOutput.length() == 0) {", "-\t\t\t\tSystem.out.println(Util.displayString(result, 3));", "-\t\t\t}", "-\t\t\tif (index == -1) {", "-\t\t\t\tassertEquals(\"Wrong contents\", expectedOutput, result);", "-\t\t\t}", "-\t\t} catch (org.eclipse.jdt.core.util.ClassFormatException e) {", "-\t\t\tassertTrue(false);", "-\t\t} catch (IOException e) {", "-\t\t\tassertTrue(false);", "+\t\tFile f = new File(OUTPUT_DIR + File.separator + \"X.class\");", "+\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);", "+\t\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "+\t\tString result = disassembler.disassemble(classFileBytes, \"\\n\", ClassFileBytesDisassembler.DETAILED);", "+\t\tint index = result.indexOf(expectedOutput);", "+\t\tif (index == -1 || expectedOutput.length() == 0) {", "+\t\t\tSystem.out.println(Util.displayString(result, 3));", "+\t\t}", "+\t\tif (index == -1) {", "+\t\t\tassertEquals(\"Wrong contents\", expectedOutput, result);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b636a577659305aacfb99c766ac7b78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b98c5445ecec402caa11dd14f61dc75d1a13da5a", "commitAfterChange": "d785f90166aa4c50a893672b2f8b10875313fedd", "methodNumberBeforeChange": 519, "methodNumberAfterChange": 519, "signatureBeforeChange": " \tpublic void test0501()", "signatureAfterChange": " \tpublic void test0501() throws Exception", "diff": ["-\tpublic void test0501() {", "+\tpublic void test0501() throws Exception {", "-\t\ttry {", "-\t\t\tFile f = new File(OUTPUT_DIR + File.separator + \"X.class\");", "-\t\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);", "-\t\t\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "-\t\t\tString result = disassembler.disassemble(classFileBytes, \"\\n\", ClassFileBytesDisassembler.DETAILED);", "-\t\t\tint index = result.indexOf(expectedOutput);", "-\t\t\tif (index == -1 || expectedOutput.length() == 0) {", "-\t\t\t\tSystem.out.println(Util.displayString(result, 3));", "-\t\t\t}", "-\t\t\tif (index == -1) {", "-\t\t\t\tassertEquals(\"Wrong contents\", expectedOutput, result);", "-\t\t\t}", "-\t\t} catch (org.eclipse.jdt.core.util.ClassFormatException e) {", "-\t\t\tassertTrue(false);", "-\t\t} catch (IOException e) {", "-\t\t\tassertTrue(false);", "+\t\tFile f = new File(OUTPUT_DIR + File.separator + \"X.class\");", "+\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);", "+\t\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "+\t\tString result = disassembler.disassemble(classFileBytes, \"\\n\", ClassFileBytesDisassembler.DETAILED);", "+\t\tint index = result.indexOf(expectedOutput);", "+\t\tif (index == -1 || expectedOutput.length() == 0) {", "+\t\t\tSystem.out.println(Util.displayString(result, 3));", "+\t\t}", "+\t\tif (index == -1) {", "+\t\t\tassertEquals(\"Wrong contents\", expectedOutput, result);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b146b8b5323834ac8c5320f866aa30ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b98c5445ecec402caa11dd14f61dc75d1a13da5a", "commitAfterChange": "d785f90166aa4c50a893672b2f8b10875313fedd", "methodNumberBeforeChange": 521, "methodNumberAfterChange": 521, "signatureBeforeChange": " \tpublic void test0503()", "signatureAfterChange": " \tpublic void test0503() throws Exception", "diff": ["-\tpublic void test0503() {", "+\tpublic void test0503() throws Exception {", "-\t\ttry {", "-\t\t\tFile f = new File(OUTPUT_DIR + File.separator + \"X.class\");", "-\t\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);", "-\t\t\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "-\t\t\tString result = disassembler.disassemble(classFileBytes, \"\\n\", ClassFileBytesDisassembler.DETAILED);", "-\t\t\tint index = result.indexOf(expectedOutput);", "-\t\t\tif (index == -1 || expectedOutput.length() == 0) {", "-\t\t\t\tSystem.out.println(Util.displayString(result, 3));", "-\t\t\t}", "-\t\t\tif (index == -1) {", "-\t\t\t\tassertEquals(\"Wrong contents\", expectedOutput, result);", "-\t\t\t}", "-\t\t} catch (org.eclipse.jdt.core.util.ClassFormatException e) {", "-\t\t\tassertTrue(false);", "-\t\t} catch (IOException e) {", "-\t\t\tassertTrue(false);", "+\t\tFile f = new File(OUTPUT_DIR + File.separator + \"X.class\");", "+\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);", "+\t\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "+\t\tString result = disassembler.disassemble(classFileBytes, \"\\n\", ClassFileBytesDisassembler.DETAILED);", "+\t\tint index = result.indexOf(expectedOutput);", "+\t\tif (index == -1 || expectedOutput.length() == 0) {", "+\t\t\tSystem.out.println(Util.displayString(result, 3));", "+\t\t}", "+\t\tif (index == -1) {", "+\t\t\tassertEquals(\"Wrong contents\", expectedOutput, result);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7fc1862ba8503697a12010a56d345ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b98c5445ecec402caa11dd14f61dc75d1a13da5a", "commitAfterChange": "d785f90166aa4c50a893672b2f8b10875313fedd", "methodNumberBeforeChange": 523, "methodNumberAfterChange": 523, "signatureBeforeChange": " \tpublic void test0505()", "signatureAfterChange": " \tpublic void test0505() throws Exception", "diff": ["-\tpublic void test0505() {", "+\tpublic void test0505() throws Exception {", "-\t\ttry {", "-\t\t\tFile f = new File(OUTPUT_DIR + File.separator + \"X.class\");", "-\t\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);", "-\t\t\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "-\t\t\tString result = disassembler.disassemble(classFileBytes, \"\\n\", ClassFileBytesDisassembler.DETAILED);", "-\t\t\tint index = result.indexOf(expectedOutput);", "-\t\t\tif (index == -1 || expectedOutput.length() == 0) {", "-\t\t\t\tSystem.out.println(Util.displayString(result, 3));", "-\t\t\t}", "-\t\t\tif (index == -1) {", "-\t\t\t\tassertEquals(\"Wrong contents\", expectedOutput, result);", "-\t\t\t}", "-\t\t} catch (org.eclipse.jdt.core.util.ClassFormatException e) {", "-\t\t\tassertTrue(false);", "-\t\t} catch (IOException e) {", "-\t\t\tassertTrue(false);", "+\t\tFile f = new File(OUTPUT_DIR + File.separator + \"X.class\");", "+\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);", "+\t\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "+\t\tString result = disassembler.disassemble(classFileBytes, \"\\n\", ClassFileBytesDisassembler.DETAILED);", "+\t\tint index = result.indexOf(expectedOutput);", "+\t\tif (index == -1 || expectedOutput.length() == 0) {", "+\t\t\tSystem.out.println(Util.displayString(result, 3));", "+\t\t}", "+\t\tif (index == -1) {", "+\t\t\tassertEquals(\"Wrong contents\", expectedOutput, result);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc5d12d8725778a1e8d6238971264165", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b98c5445ecec402caa11dd14f61dc75d1a13da5a", "commitAfterChange": "d785f90166aa4c50a893672b2f8b10875313fedd", "methodNumberBeforeChange": 520, "methodNumberAfterChange": 520, "signatureBeforeChange": " \tpublic void test0502()", "signatureAfterChange": " \tpublic void test0502() throws Exception", "diff": ["-\tpublic void test0502() {", "+\tpublic void test0502() throws Exception {", "-\t\ttry {", "-\t\t\tFile f = new File(OUTPUT_DIR + File.separator + \"X.class\");", "-\t\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);", "-\t\t\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "-\t\t\tString result = disassembler.disassemble(classFileBytes, \"\\n\", ClassFileBytesDisassembler.DETAILED);", "-\t\t\tint index = result.indexOf(expectedOutput);", "-\t\t\tif (index == -1 || expectedOutput.length() == 0) {", "-\t\t\t\tSystem.out.println(Util.displayString(result, 3));", "-\t\t\t}", "-\t\t\tif (index == -1) {", "-\t\t\t\tassertEquals(\"Wrong contents\", expectedOutput, result);", "-\t\t\t}", "-\t\t} catch (org.eclipse.jdt.core.util.ClassFormatException e) {", "-\t\t\tassertTrue(false);", "-\t\t} catch (IOException e) {", "-\t\t\tassertTrue(false);", "+\t\tFile f = new File(OUTPUT_DIR + File.separator + \"X.class\");", "+\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);", "+\t\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "+\t\tString result = disassembler.disassemble(classFileBytes, \"\\n\", ClassFileBytesDisassembler.DETAILED);", "+\t\tint index = result.indexOf(expectedOutput);", "+\t\tif (index == -1 || expectedOutput.length() == 0) {", "+\t\t\tSystem.out.println(Util.displayString(result, 3));", "+\t\t}", "+\t\tif (index == -1) {", "+\t\t\tassertEquals(\"Wrong contents\", expectedOutput, result);"]}], "num": 68787}