{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "36b67dd5189b61c57e74205094364880", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a592fbc147a6730288c897ae97abbf4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "09f42f58bcdf2fa84ccd2b8b65f28ab3036222ca", "commitAfterChange": "57e8dd41219d846363c918d62edb5007994c5c79", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 32, "signatureBeforeChange": " public boolean hasInferenceFinished()", "signatureAfterChange": " public void registerInferenceContext(ParameterizedGenericMethodBinding method, InferenceContext18 infCtx18)", "diff": ["-}", "-public boolean hasInferenceFinished() {", "-\treturn (this.inferenceContext == null && this.inferenceKind == 0) // only relevant if inference has been started", "-\t\t\t|| (this.inferenceKind & InferenceContext18.CHECK_FINISHED) != 0;", "-}", "+public void registerInferenceContext(ParameterizedGenericMethodBinding method, InferenceContext18 infCtx18) {", "+\tif (this.inferenceContexts == null)", "+\t\tthis.inferenceContexts = new SimpleLookupTable();", "+\tthis.inferenceContexts.put(method, infCtx18);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d8e5d605b4316897ff3b86f32921ead", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "09f42f58bcdf2fa84ccd2b8b65f28ab3036222ca", "commitAfterChange": "57e8dd41219d846363c918d62edb5007994c5c79", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 35, "signatureBeforeChange": " public InferenceContext18 freshInferenceContext(Scope scope)", "signatureAfterChange": " public InferenceContext18 freshInferenceContext(Scope scope)", "diff": ["-public InferenceContext18 freshInferenceContext(Scope scope) {", "-\tInferenceContext18 outer = this.inferenceContext != null ? this.inferenceContext.outerContext : null;", "-\tthis.inferenceContext = new InferenceContext18(scope, this.arguments, this);", "-\tthis.inferenceContext.outerContext = outer;", "-\treturn this.inferenceContext;", "-}", "+// -- Interface InvocationSite: --", "+public InferenceContext18 freshInferenceContext(Scope scope) {", "+\treturn new InferenceContext18(scope, this.arguments, this);"]}], "num": 30939}