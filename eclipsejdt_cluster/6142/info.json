{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0039f4ccb41af591fa1b6555889f711d", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "160815a10b30cb52a284dc039ef4dc52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "33e03339ed2881c9f793c3a49497633bbac5c8a8", "commitAfterChange": "09c3f545375b31028657f0b8044c5cbcb5324abc", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 124, "signatureBeforeChange": " protected void consumeToken(int token)", "signatureAfterChange": " protected void consumeToken(int token)", "diff": ["+\t\t\t\t\tcase K_INSIDE_ASSERT_EXCEPTION :", "+\t\t\t\t\t\tif(topKnownElementInfo(COMPLETION_OR_ASSIST_PARSER) == this.bracketDepth) {", "+\t\t\t\t\t\t\tpopElement(K_INSIDE_ASSERT_EXCEPTION);", "+\t\t\t\t\t\t\tpopElement(K_INSIDE_ASSERT_STATEMENT);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreak;", "-\t\t\t\tif(topKnownElementKind(COMPLETION_OR_ASSIST_PARSER) == K_CONDITIONAL_OPERATOR", "-\t\t\t\t\t&& topKnownElementInfo(COMPLETION_OR_ASSIST_PARSER) == QUESTION) {", "-\t\t\t\t\tpopElement(K_CONDITIONAL_OPERATOR);", "-\t\t\t\t\tpushOnElementStack(K_CONDITIONAL_OPERATOR, COLON);", "-\t\t\t\t} else {", "-\t\t\t\t\tif(topKnownElementKind(COMPLETION_OR_ASSIST_PARSER) == K_BETWEEN_CASE_AND_COLON) {", "+\t\t\t\tswitch (topKnownElementKind(COMPLETION_OR_ASSIST_PARSER)) {", "+\t\t\t\t\tcase K_CONDITIONAL_OPERATOR:", "+\t\t\t\t\t\tif (topKnownElementInfo(COMPLETION_OR_ASSIST_PARSER) == QUESTION) {", "+\t\t\t\t\t\t\tpopElement(K_CONDITIONAL_OPERATOR);", "+\t\t\t\t\t\t\tpushOnElementStack(K_CONDITIONAL_OPERATOR, COLON);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase K_BETWEEN_CASE_AND_COLON:", "-\t\t\t\t\t} else {", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase K_BETWEEN_DEFAULT_AND_COLON:", "-\t\t\t\t\t}", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase K_INSIDE_ASSERT_STATEMENT:", "+\t\t\t\t\t\tpushOnElementStack(K_INSIDE_ASSERT_EXCEPTION, this.bracketDepth);", "+\t\t\t\t\t\tbreak;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27d9d38e8a2850b9df1fe098ce218169", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "67da1da15e9afbcd33679f07597c706e7915cf4a", "commitAfterChange": "027fccb2c17e0f0d2b28705c6704af10fc8ce0aa", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " private boolean checkInvocation()", "signatureAfterChange": " private boolean checkInvocation()", "diff": ["-\tint startInvocationPtr = this.blockInvocationPtr >= 0 ? this.blockInvocationStack[this.blockInvocationPtr] : 0;", "-\tif (this.invocationPtr >= startInvocationPtr", "+\tif (topKnownElementKind(COMPLETION_OR_ASSIST_PARSER) == K_SELECTOR_QUALIFIER", "-\t\tint invocationType = this.invocationTypeStack[this.invocationPtr];", "-\t\tint qualifierExprPtr = this.qualifierStack[this.invocationPtr];", "+\t\tint invocationType = topKnownElementInfo(COMPLETION_OR_ASSIST_PARSER, 1);", "+\t\tint qualifierExprPtr = topKnownElementInfo(COMPLETION_OR_ASSIST_PARSER);", "-\t\t\tint selectorPtr = this.selectorStack[this.invocationPtr];", "+\t\t\tint selectorPtr = topKnownElementInfo(COMPLETION_OR_ASSIST_PARSER, 2);", "-\t\t\tint selectorPtr = this.selectorStack[this.invocationPtr];", "+\t\t\tint selectorPtr = topKnownElementInfo(COMPLETION_OR_ASSIST_PARSER, 2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44001426e65a1e8b2788966a991604c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "fa5b9584504523e008d75d3102bbd9fdb41a99d1", "commitAfterChange": "be28c707007790646fb850eb239db7444413aebf", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 46, "signatureBeforeChange": " protected void consumeToken(int token)", "signatureAfterChange": " protected void consumeToken(int token)", "diff": ["-\t\t\t\tpopElement(K_BETWEEN_NEW_AND_LEFT_BRACKET);", "+\t\t\t\tif(topKnownElementKind(COMPLETION_OR_ASSIST_PARSER) == K_BETWEEN_NEW_AND_LEFT_BRACKET) {", "+\t\t\t\t\tpopElement(K_BETWEEN_NEW_AND_LEFT_BRACKET);", "+\t\t\t\t\tpushOnElementStack(K_ARRAY_CREATION);", "+\t\t\t\t}", "-\t\t\t\tpopElement(K_BLOCK_DELIMITER);", "+\t\t\t\tif(topKnownElementKind(COMPLETION_OR_ASSIST_PARSER) == K_BLOCK_DELIMITER) {", "+\t\t\t\t\tpopElement(K_BLOCK_DELIMITER);", "+\t\t\t\t} else {", "+\t\t\t\t\tpopElement(K_ARRAY_INITIALIZER);\t", "+\t\t\t\t}", "-\t\t\t\tpushOnElementStack(K_BLOCK_DELIMITER);", "+\t\t\t\tint kind;", "+\t\t\t\tif((kind = topKnownElementKind(COMPLETION_OR_ASSIST_PARSER)) == K_FIELD_INITIALIZER_DELIMITER", "+\t\t\t\t\t|| kind == K_LOCAL_INITIALIZER_DELIMITER", "+\t\t\t\t\t|| kind == K_ARRAY_CREATION) {", "+\t\t\t\t\tpushOnElementStack(K_ARRAY_INITIALIZER, endPosition);", "+\t\t\t\t} else {", "+\t\t\t\t\tpushOnElementStack(K_BLOCK_DELIMITER);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b61c8bfc0f528004a519b4106271b57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "d6e5d876af1c7cd9dd29efed1cd58efa12e573dc", "commitAfterChange": "023d82c5fbd419b466f80e6e6502f81097f25134", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": " protected void consumeToken(int token)", "signatureAfterChange": " protected void consumeToken(int token)", "diff": ["-\t\t\t\tif(topKnownElementKind(COMPLETION_OR_ASSIST_PARSER) == K_BLOCK_DELIMITER) {", "-\t\t\t\t\tpopElement(K_BLOCK_DELIMITER);", "-\t\t\t\t} else {", "-\t\t\t\t\tpopElement(K_ARRAY_INITIALIZER);", "+\t\t\t\tint kind = topKnownElementKind(COMPLETION_OR_ASSIST_PARSER);", "+\t\t\t\tswitch (kind) {", "+\t\t\t\t\tcase K_BLOCK_DELIMITER:", "+\t\t\t\t\t\tpopElement(K_BLOCK_DELIMITER);", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase K_MEMBER_VALUE_ARRAY_INITIALIZER:", "+\t\t\t\t\t\tpopElement(K_MEMBER_VALUE_ARRAY_INITIALIZER);", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tdefault:", "+\t\t\t\t\t\tpopElement(K_ARRAY_INITIALIZER);", "+\t\t\t\t\t\tbreak;", "-\t\t\t\tint kind;", "-\t\t\t\tif((kind = topKnownElementKind(COMPLETION_OR_ASSIST_PARSER)) == K_FIELD_INITIALIZER_DELIMITER", "+\t\t\t\tint kind = topKnownElementKind(COMPLETION_OR_ASSIST_PARSER);", "+\t\t\t\tif(kind == K_FIELD_INITIALIZER_DELIMITER", "+\t\t\t\t} else if (kind == K_BETWEEN_ANNOTATION_NAME_AND_RPAREN) {", "+\t\t\t\t\tpushOnElementStack(K_MEMBER_VALUE_ARRAY_INITIALIZER, endPosition);", "+\t} else if (isInsideAnnotation()){", "+\t\tswitch (token) {", "+\t\t\tcase TokenNameLBRACE:", "+\t\t\t\tthis.bracketDepth++;", "+\t\t\t\tint kind = topKnownElementKind(COMPLETION_OR_ASSIST_PARSER);", "+\t\t\t\tif (kind == K_BETWEEN_ANNOTATION_NAME_AND_RPAREN) {", "+\t\t\t\t\tpushOnElementStack(K_MEMBER_VALUE_ARRAY_INITIALIZER, endPosition);", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb1fe187cbbac2b24e81751be1aa9243", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 77, "signatureBeforeChange": " protected void consumeToken(int token)", "signatureAfterChange": " protected void consumeToken(int token)", "diff": ["+\t\t\t\tswitch(previous) {", "+\t\t\t\t\tcase TokenNameDOT :", "+\t\t\t\t\t\tpushOnElementStack(K_PARAMETERIZED_METHOD_INVOCATION);", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase TokenNamenew :", "+\t\t\t\t\t\tpushOnElementStack(K_PARAMETERIZED_ALLOCATION);", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\tcase TokenNameextends:", "+\t\t\t\tpushOnElementStack(K_EXTENDS_KEYWORD);", "+\t\t\t\tbreak;", "+\t\t}", "+\t} else {", "+\t\tswitch(token) {", "+\t\t\tcase TokenNameextends:", "+\t\t\t\tpushOnElementStack(K_EXTENDS_KEYWORD);", "+\t\t\t\tbreak;", "+\t\t\tcase TokenNameLESS:", "+\t\t\t\tpushOnElementStack(K_BINARY_OPERATOR, LESS);", "+\t\t\t\tbreak;", "+\t\t\tcase TokenNameGREATER:", "+\t\t\t\tpushOnElementStack(K_BINARY_OPERATOR, GREATER);", "+\t\t\t\tbreak;", "+\t\t\tcase TokenNameRIGHT_SHIFT:", "+\t\t\t\tpushOnElementStack(K_BINARY_OPERATOR, RIGHT_SHIFT);", "+\t\t\t\tbreak;", "+\t\t\tcase TokenNameUNSIGNED_RIGHT_SHIFT:", "+\t\t\t\tpushOnElementStack(K_BINARY_OPERATOR, UNSIGNED_RIGHT_SHIFT);", "+\t\t\t\tbreak;", "+\t\t\t", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de7b55740cb5d92826129100bc5dbdf6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "640acef52e5546e028d01779949b08d883ff8475", "commitAfterChange": "78950c7a462ba6fe8424532e69a4abeff0c7c745", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": " public void recoveryTokenCheck()", "signatureAfterChange": " public void recoveryTokenCheck()", "diff": ["+\t\tcase TokenNamecase :", "+\t\t\tsuper.recoveryTokenCheck();", "+\t\t\tif(topKnownElementKind(COMPLETION_OR_ASSIST_PARSER) == K_BLOCK_DELIMITER", "+\t\t\t\t&& topKnownElementInfo(COMPLETION_OR_ASSIST_PARSER) == SWITCH) {", "+\t\t\t\tpushOnElementStack(K_SWITCH_LABEL);", "+\t\t\t}", "+\t\t\tbreak;", "+\t\tcase TokenNamedefault :", "+\t\t\tsuper.recoveryTokenCheck();", "+\t\t\tif(topKnownElementKind(COMPLETION_OR_ASSIST_PARSER) == K_BLOCK_DELIMITER", "+\t\t\t\t&& topKnownElementInfo(COMPLETION_OR_ASSIST_PARSER) == SWITCH) {", "+\t\t\t\tpushOnElementStack(K_SWITCH_LABEL, DEFAULT);", "+\t\t\t} else if(topKnownElementKind(COMPLETION_OR_ASSIST_PARSER) == K_SWITCH_LABEL) {", "+\t\t\t\tpopElement(K_SWITCH_LABEL);", "+\t\t\t\tpushOnElementStack(K_SWITCH_LABEL, DEFAULT);", "+\t\t\t}", "+\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eddfaf5a4219902be07d0779f7fb7889", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "eaaeea046b340f91bd2146e38b8d80abded44679", "commitAfterChange": "86fe4304e38dbacb9ce564974c620e8c2ba6ee77", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 130, "signatureBeforeChange": " public NameReference createSingleAssistNameReference(char[] assistName, long position)", "signatureAfterChange": " public NameReference createSingleAssistNameReference(char[] assistName, long position)", "diff": ["+\t\t\t\t\t", "+\t\t\t\t\tkeywords[count++]= Keywords.ASSERT;", "+\t\t\t\t\tkeywords[count++]= Keywords.DO;", "+\t\t\t\t\tkeywords[count++]= Keywords.FOR;", "+\t\t\t\t\tkeywords[count++]= Keywords.IF;", "+\t\t\t\t\tkeywords[count++]= Keywords.RETURN;", "+\t\t\t\t\tkeywords[count++]= Keywords.SWITCH;", "+\t\t\t\t\tkeywords[count++]= Keywords.SYNCHRONIZED;", "+\t\t\t\t\tkeywords[count++]= Keywords.THROW;", "+\t\t\t\t\tkeywords[count++]= Keywords.TRY;", "+\t\t\t\t\tkeywords[count++]= Keywords.WHILE;", "+\t", "+\t\t\t\t\tkeywords[count++]= Keywords.FINAL;", "+\t\t\t\t\tkeywords[count++]= Keywords.CLASS;", "+\t\t\t\t\t", "+\t\t\t\t\tif(isInsideLoop()) {", "+\t\t\t\t\t\tkeywords[count++]= Keywords.CONTINUE;", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f03cd2dc075b2cb08a40be5475da60b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "8ca64d051cb2b705e931d512b7e8165159874636", "commitAfterChange": "fb2f69442af38478fd737734fbf56ae45623c81f", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": " public NameReference createSingleAssistNameReference(char[] name, long position)", "signatureAfterChange": " public NameReference createSingleAssistNameReference(char[] name, long position)", "diff": ["+\t\t} else if(kind == K_BLOCK_DELIMITER", "+\t\t\t&& topKnownElementInfo(COMPLETION_OR_ASSIST_PARSER) == SWITCH) {", "+\t\t\treturn new CompletionOnKeyword3(name, position, new char[][]{Keywords.CASE, Keywords.DEFAULT});", "-\t\t\t\tif(topKnownElementInfo(COMPLETION_OR_ASSIST_PARSER) == SWITCH) {", "-\t\t\t\t\tkeywords[count++]= Keywords.CASE;", "-\t\t\t\t\tkeywords[count++]= Keywords.DEFAULT;", "-\t\t\t\t}", "+//\t\t\t\tif(topKnownElementInfo(COMPLETION_OR_ASSIST_PARSER) == SWITCH) {", "+//\t\t\t\t\tkeywords[count++]= Keywords.CASE;", "+//\t\t\t\t\tkeywords[count++]= Keywords.DEFAULT;", "+//\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffe94e4f8906586fd59d829a20683597", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "67da1da15e9afbcd33679f07597c706e7915cf4a", "commitAfterChange": "027fccb2c17e0f0d2b28705c6704af10fc8ce0aa", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " private boolean checkClassInstanceCreation()", "signatureAfterChange": " private boolean checkClassInstanceCreation()", "diff": ["-\tif (this.betweenNewAndLeftBraket) {", "+\tif (topKnownElementKind(COMPLETION_OR_ASSIST_PARSER) == K_BETWEEN_NEW_AND_LEFT_BRACKET) {", "-\t\tif(this.throwBracketDepth != -1 && this.throwBracketDepth == this.bracketDepth) {", "-\t\t\tthis.nextTypeReferenceIsException = true;\t", "+\t\tTypeReference type;", "+\t\tif (topKnownElementKind(COMPLETION_OR_ASSIST_PARSER, 1) == K_INSIDE_THROW_STATEMENT", "+\t\t\t&& topKnownElementInfo(COMPLETION_OR_ASSIST_PARSER, 1) == this.bracketDepth) {", "+\t\t\tpushOnElementStack(K_NEXT_TYPEREF_IS_EXCEPTION);", "+\t\t\ttype = getTypeReference(0);", "+\t\t\tpopElement(K_NEXT_TYPEREF_IS_EXCEPTION);", "+\t\t} else {", "+\t\t\ttype = getTypeReference(0);", "-\t\tTypeReference type = getTypeReference(0);", "-\t\tthis.nextTypeReferenceIsException = false;"]}], "num": 6142}