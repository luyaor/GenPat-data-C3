{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2ca67927cfb6f9abfaa7df6869de066a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48c86a1b6dec4b73615a89e5398044d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 153, "methodNumberAfterChange": 153, "signatureBeforeChange": " public MethodDeclaration parseStatementsAfterCompletion(int start, int end, CompilationUnitDeclaration unit)", "signatureAfterChange": " public MethodDeclaration parseSomeStatements(int start, int end, int fakeBlocksCount, CompilationUnitDeclaration unit)", "diff": ["-public MethodDeclaration parseStatementsAfterCompletion(int start, int end, CompilationUnitDeclaration unit) {", "+public MethodDeclaration parseSomeStatements(int start, int end, int fakeBlocksCount, CompilationUnitDeclaration unit) {", "+\tthis.diet = false;", "+\tfor (int i = 0; i < fakeBlocksCount; i++) {", "+\t\tconsumeOpenFakeBlock();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf61adf58c88aacd5aef30e0c112d529", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionParser.java", "commitBeforeChange": "dd3bff4d99a5193497eb7e3c0e1bc46a32b7c36a", "commitAfterChange": "cc1c110e9641a2cecfab702ac9383376aefe030a", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " protected NameReference getUnspecifiedReference()", "signatureAfterChange": " protected NameReference getUnspecifiedReference(boolean rejectTypeAnnotations)", "diff": ["-protected NameReference getUnspecifiedReference() {", "+protected NameReference getUnspecifiedReference(boolean rejectTypeAnnotations) {", "-\t\treturn super.getUnspecifiedReference();", "+\t\treturn super.getUnspecifiedReference(rejectTypeAnnotations);", "+\tif (rejectTypeAnnotations) {", "+\t\tconsumeNonTypeUseName();", "+\t}", "+\t\t\t// There is some voodoo going on here in combination with SelectionScanne#scanIdentifierOrKeyword, do in Rome as Romans do and leave the stacks at the right depth.", "+\t\t\tfor (int i = 0; i < completionIndex; i++) {", "+\t\t\t\tpushOnTypeAnnotationLengthStack(0);", "+\t\t\t}"]}], "num": 65447}