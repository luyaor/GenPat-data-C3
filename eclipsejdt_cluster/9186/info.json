{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c61b63ce8d09a7a33c2b4ab08b176b51", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fef6f36b134aac635fc6e8f1e11a2cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "4cbca3a5c8650b81b5a31d226fc27b2c31db5b39", "commitAfterChange": "2d45e82533a4fdf2e19ac612c4a04c15da28bf1a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void testClassFileGetElementAt() throws JavaModelException", "signatureAfterChange": " public void testClassFileGetElementAt02() throws JavaModelException", "diff": ["-public void testClassFileGetElementAt() throws JavaModelException {", "-\tIClassFile cf = this.pkgFragmentRoot.getPackageFragment(\"x.y\").getClassFile(\"A.class\");", "-\tIJavaElement elt = null;", "-\t", "-\telt = cf.getElementAt(15);", "-\tassertTrue(\"should have found \\\"A\\\"\",", "-\t\telt != null &&", "-\t\telt.getElementType() == IJavaElement.TYPE &&", "-\t\telt.getElementName().equals(\"A\"));", "-\t", "-\telt = cf.getElementAt(53);", "-\tassertTrue(\"should have found \\\"public A()\\\"\",", "-\t\telt != null &&", "-\t\telt.getElementType() == IJavaElement.METHOD &&", "-\t\telt.getElementName().equals(\"A\"));", "-", "-\telt = cf.getElementAt(72);", "-\tassertTrue(\"should have found \\\"public void foo()\\\"\",", "-\t\telt != null &&", "-\t\telt.getElementType() == IJavaElement.METHOD &&", "-\t\telt.getElementName().equals(\"foo\"));", "+ */", "+public void testClassFileGetElementAt02() throws JavaModelException {", "+\tIClassFile classFile = this.pkgFragmentRoot.getPackageFragment(\"x.y\").getClassFile(\"A.class\");", "+\tString source = classFile.getSource();", "+\tIJavaElement element = classFile.getElementAt(source.indexOf(\"public A\"));", "+\tassertElementEquals(", "+\t\t\"Unexpected element\",", "+\t\t\"A() [in A [in A.class [in x.y [in attach.jar [in AttachSourceTests]]]]]\",", "+\t\telement);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f780bac17c4aa31c2349a84d601d93e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "4cbca3a5c8650b81b5a31d226fc27b2c31db5b39", "commitAfterChange": "2d45e82533a4fdf2e19ac612c4a04c15da28bf1a", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void testGetNameRange() throws JavaModelException", "signatureAfterChange": " public void testGetNameRange01() throws JavaModelException", "diff": ["-public void testGetNameRange() throws JavaModelException {", "-\tIClassFile cf = this.pkgFragmentRoot.getPackageFragment(\"x.y\").getClassFile(\"A.class\");", "-\tIMethod method = cf.getType().getMethod(\"foo\", null);", "-\tassertTrue(\"method name range not correct\", method.getNameRange().getOffset() != -1 && method.getNameRange().getLength() != 0);", "-", "-\tIClassFile objectCF = this.pkgFragmentRoot.getPackageFragment(\"x.y\").getClassFile(\"A.class\");", "-\tISourceRange range= objectCF.getType().getNameRange();", "-\tint start, end;", "-\tstart= range.getOffset();", "-\tend= start + range.getLength() - 1;", "-", "-\tassertTrue(\"source code does not exist for the entire attached compilation unit\", start != -1 && end != -1);", "-\tString source= objectCF.getSource().substring(start, end + 1);", "-\tassertSourceEquals(\"name should be 'A'\", \"A\", source);", "+public void testGetNameRange01() throws JavaModelException {", "+\tIClassFile classFile = this.pkgFragmentRoot.getPackageFragment(\"x.y\").getClassFile(\"A.class\");", "+\tIMethod method = classFile.getType().getMethod(\"foo\", null);", "+\tassertSourceEquals(\"Unexpected name source\", \"foo\", getNameSource(classFile.getSource(), method));", "+}"]}], "num": 9186}