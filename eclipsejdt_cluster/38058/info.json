{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c7f0a959370a393c0483004e4aa3b404", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb6563f67400f20d52c4d140c3593e1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java", "commitBeforeChange": "43c947b648b5a1fa1fb7d4f5ce5b7cea1d4fa7a2", "commitAfterChange": "eee151556fa5628da58c297d3e841df408f33c62", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tint storeTrailingComments(ASTNode node, int nextStart, Scanner scanner, boolean lastChild)", "signatureAfterChange": " \tint storeTrailingComments(ASTNode node, int nextStart,  boolean lastChild)", "diff": ["-\tint storeTrailingComments(ASTNode node, int nextStart, Scanner scanner, boolean lastChild) {", "+\tint storeTrailingComments(ASTNode node, int nextStart,  boolean lastChild) {", "+", "+\t\tif (nodeEnd == nextStart) {", "+\t\t\t// special case for last child of its parent", "+\t\t\tthis.trailingComments.put(node, new int[] { -1, -1 });", "+\t\t\treturn nodeEnd;", "+\t\t}", "-\t\tint nodeEndLine = scanner.getLineNumber(nodeEnd);", "+\t\tint nodeEndLine = this.scanner.getLineNumber(nodeEnd);", "-\t\tint idx = getCommentIndex(this.commentIndex, nodeEnd, 1);", "+\t\tint idx = getCommentIndex(0, nodeEnd, 1);", "-\t\t\t\tscanner.resetTo(previousEnd, commentStart);", "+\t\t\t\tthis.scanner.resetTo(previousEnd, commentStart);", "-\t\t\t\t\tint token = scanner.getNextToken();", "-\t\t\t\t\tif (token != TerminalTokens.TokenNameWHITESPACE || scanner.currentPosition != commentStart) {", "+\t\t\t\t\tint token = this.scanner.getNextToken();", "+\t\t\t\t\tif (token != TerminalTokens.TokenNameWHITESPACE || this.scanner.currentPosition != commentStart) {", "-\t\t\t\tchar[] gap = scanner.getCurrentIdentifierSource();", "+\t\t\t\tchar[] gap = this.scanner.getCurrentIdentifierSource();", "-\t\t\tint commentLine = scanner.getLineNumber(commentStart);", "+\t\t\tint commentLine = this.scanner.getLineNumber(commentStart);", "-\t\t\t\tint nextLine = scanner.getLineNumber(nextStart);", "-\t\t\t\tint previousLine = scanner.getLineNumber(previousEnd);", "+\t\t\t\tint nextLine = this.scanner.getLineNumber(nextStart);", "+\t\t\t\tint previousLine = this.scanner.getLineNumber(previousEnd);", "-\t\t\tthis.commentIndex = endIdx;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9e406f7b88baee59d57c41699971496", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "8257947b843e715f21b92a87dc4b423cbc1eed03", "commitAfterChange": "00cae100ff4808e2019f6a4d94df4143c8fabbd0", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tprivate boolean updateCurrentDeltaAndIndex(IResourceDelta delta, int elementType, RootInfo rootInfo)", "signatureAfterChange": " \tpublic boolean updateCurrentDeltaAndIndex(IResourceDelta delta, int elementType, RootInfo rootInfo)", "diff": ["-\tprivate boolean updateCurrentDeltaAndIndex(IResourceDelta delta, int elementType, RootInfo rootInfo) {", "+\tpublic boolean updateCurrentDeltaAndIndex(IResourceDelta delta, int elementType, RootInfo rootInfo) {", "-\t\t\t\t\tthis.updateRoots(deltaRes.getFullPath(), delta);", "+\t\t\t\t\tthis.state.updateRoots(deltaRes.getFullPath(), delta, this);", "-\t\t\t\t\tthis.updateRoots(deltaRes.getFullPath(), delta);", "+\t\t\t\t\tthis.state.updateRoots(deltaRes.getFullPath(), delta, this);", "-\t\t\t\t\t\t\tthis.updateRoots(res.getFullPath(), delta);", "+\t\t\t\t\t\t\tthis.state.updateRoots(res.getFullPath(), delta, this);", "-\t\t\t\t\t\t\t\tthis.indexManager.indexAll(res);", "+\t\t\t\t\t\t\t\tthis.manager.indexManager.indexAll(res);", "-\t\t\t\t\t\t\t\tthis.indexManager.discardJobs(element.getElementName());", "-\t\t\t\t\t\t\t\tthis.indexManager.removeIndexFamily(res.getFullPath());", "+\t\t\t\t\t\t\t\tthis.manager.indexManager.discardJobs(element.getElementName());", "+\t\t\t\t\t\t\t\tthis.manager.indexManager.removeIndexFamily(res.getFullPath());", "-\t\t\t\t\t\t\t\tthis.indexManager.indexAll(res);", "+\t\t\t\t\t\t\t\tthis.manager.indexManager.indexAll(res);", "-\t\t\t\t\t\t\t\tthis.indexManager.discardJobs(element.getElementName());", "-\t\t\t\t\t\t\t\tthis.indexManager.removeIndexFamily(res.getFullPath());", "+\t\t\t\t\t\t\t\tthis.manager.indexManager.discardJobs(element.getElementName());", "+\t\t\t\t\t\t\t\tthis.manager.indexManager.removeIndexFamily(res.getFullPath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2830cd322c82513379ac7c5614c84bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetConstantPool.java", "commitBeforeChange": "302df05b099c1ea06faca0b00f806513c7db6904", "commitAfterChange": "c661afbb38268ca6f18a772df813f6c69bb9e17c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public int literalIndex(MethodBinding aMethodBinding)", "signatureAfterChange": " public int literalIndex(MethodBinding aMethodBinding)", "diff": ["-\t\t\t\tif ((index = interfaceMethodCache.get(aMethodBinding)) < 0) {", "+\t\t\t\tif ((index = this.interfaceMethodCache.get(aMethodBinding)) < 0) {", "-\t\t\t\t\tindex = interfaceMethodCache.put(aMethodBinding, currentIndex++);", "+\t\t\t\t\tindex = this.interfaceMethodCache.put(aMethodBinding, this.currentIndex++);", "-\t\t\t\tif ((index = methodCache.get(aMethodBinding)) < 0) {", "+\t\t\t\tif ((index = this.methodCache.get(aMethodBinding)) < 0) {", "-\t\t\t\t\tindex = methodCache.put(aMethodBinding, currentIndex++);", "+\t\t\t\t\tindex = this.methodCache.put(aMethodBinding, this.currentIndex++);", "-\t\t\tif ((index = wellKnownMethods[indexWellKnownMethod]) == 0) {", "+\t\t\tif ((index = this.wellKnownMethods[indexWellKnownMethod]) == 0) {", "-\t\t\t\t\tindex = wellKnownMethods[indexWellKnownMethod] = currentIndex++;", "+\t\t\t\t\tindex = this.wellKnownMethods[indexWellKnownMethod] = this.currentIndex++;", "-\t\t\t\t\tindex = wellKnownMethods[indexWellKnownMethod] = currentIndex++;", "+\t\t\t\t\tindex = this.wellKnownMethods[indexWellKnownMethod] = this.currentIndex++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd509ef2ced3d1c455cd1d9a3961ec69", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 197, "methodNumberAfterChange": 197, "signatureBeforeChange": "   public int flushCommentsDefinedPriorTo(int position)", "signatureAfterChange": "   public int flushCommentsDefinedPriorTo(int position)", "diff": ["-\tint lastCommentIndex = scanner.commentPtr;", "+\tint lastCommentIndex = this.scanner.commentPtr;", "-\t\tint commentEnd = scanner.commentStops[index];", "+\t\tint commentEnd = this.scanner.commentStops[index];", "-\t\tint immediateCommentEnd = -scanner.commentStops[index+1]; //non-javadoc comment end positions are negative", "+\t\tint immediateCommentEnd = -this.scanner.commentStops[index+1]; //non-javadoc comment end positions are negative", "-\t\t\tif (scanner.getLineNumber(position) == scanner.getLineNumber(immediateCommentEnd)){", "+\t\t\tif (this.scanner.getLineNumber(position) == this.scanner.getLineNumber(immediateCommentEnd)){", "-\t\tSystem.arraycopy(scanner.commentStarts, index + 1, scanner.commentStarts, 0, validCount);", "-\t\tSystem.arraycopy(scanner.commentStops, index + 1, scanner.commentStops, 0, validCount);\t\t", "+\t\tSystem.arraycopy(this.scanner.commentStarts, index + 1, this.scanner.commentStarts, 0, validCount);", "+\t\tSystem.arraycopy(this.scanner.commentStops, index + 1, this.scanner.commentStops, 0, validCount);\t\t", "-\tscanner.commentPtr = validCount - 1;", "+\tthis.scanner.commentPtr = validCount - 1;"]}], "num": 38058}