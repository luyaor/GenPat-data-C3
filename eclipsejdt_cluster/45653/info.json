{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "339551a892ea68bbfe32291b8f58de0d", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ba710b9ecc3735fa84ff7b27c28d167", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern.java", "commitBeforeChange": "135399ac7f48d47679e738d0a583e6c95ff87fd6", "commitAfterChange": "092d49846655da2c4e511a256ba551dc4e15c674", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r private boolean matches(TypeReference typeRef, boolean resolve)", "signatureAfterChange": "\r private int matchLevel(TypeReference typeRef, boolean resolve)", "diff": ["- */\r", "-private boolean matches(TypeReference typeRef, boolean resolve) {\r", "-\tif (!resolve) {\r", "-\t\tif (this.simpleName != null) {\r", "-\t\t\tif (typeRef instanceof SingleTypeReference) {\r", "-\t\t\t\treturn this.matchesName(this.simpleName, ((SingleTypeReference)typeRef).token);\r", "-\t\t\t} else { // QualifiedTypeReference\r", "-\t\t\t\tchar[][] tokens = ((QualifiedTypeReference)typeRef).tokens;\r", "-\t\t\t\tfor (int i = 0, max = tokens.length; i < max; i++){\r", "-\t\t\t\t\tif (this.matchesName(this.simpleName, tokens[i])) return true;\r", "-\t\t\t\t}\r", "-\t\t\t\treturn false;\r", "-\t\t\t}\t\t\t\t\r", "-\t\t}\r", "-\t} else {\r", "-\r", "-\t\tTypeBinding typeBinding = typeRef.binding;\r", "-\t\tif (typeBinding != null){\r", "-\t\t\tif (typeBinding instanceof ArrayBinding) typeBinding = ((ArrayBinding)typeBinding).leafComponentType;\r", "-\t\t\tif (typeRef instanceof SingleTypeReference){\r", "-\t\t\t\tif (!this.matchesType(this.simpleName, this.qualification, typeBinding)){\r", "-\t\t\t\t\treturn false;\r", "-\t\t\t\t}\r", "-\t\t\t} else { // QualifiedTypeReference\r", "-\t\t\t\tQualifiedTypeReference qNameRef = (QualifiedTypeReference)typeRef;\r", "-\t\t\t\tchar[][] tokens = qNameRef.tokens;\r", "-\t\t\t\tint lastIndex = tokens.length-1;\r", "-\t\t\t\t// try to match all enclosing types for which the token matches as well.\r", "-\t\t\t\twhile (typeBinding != null && lastIndex >= 0){\r", "-\t\t\t\t\tif (matchesName(this.simpleName, tokens[lastIndex--])\r", "-\t\t\t\t\t\t&& matchesType(this.simpleName, this.qualification, typeBinding)) return true;\r", "-\t\t\t\t\t\t//&& matchesAsSubtype(this.simpleName, this.qualification, typeBinding)) return true;\r", "-\t\t\t\t\tif (typeBinding instanceof ReferenceBinding){\r", "-\t\t\t\t\t\ttypeBinding = ((ReferenceBinding)typeBinding).enclosingType();\r", "-\t\t\t\t\t} else {\r", "-\t\t\t\t\t\ttypeBinding = null;\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r", "-\t\t\t\treturn false;\r", "-\t\t\t} \r", "-\t\t}\r", "-\t\t\t\r", "-\t}\r", "-\treturn true;\r", "-}\r", "+ */\r", "+private int matchLevel(TypeReference typeRef, boolean resolve) {\r", "+\tif (!resolve) {\r", "+\t\tif (this.simpleName == null) {\r", "+\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t} else {\r", "+\t\t\tif (typeRef instanceof SingleTypeReference) {\r", "+\t\t\t\tif (this.matchesName(this.simpleName, ((SingleTypeReference)typeRef).token)) {\r", "+\t\t\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t\t\t}\r", "+\t\t\t} else { // QualifiedTypeReference\r", "+\t\t\t\tchar[][] tokens = ((QualifiedTypeReference)typeRef).tokens;\r", "+\t\t\t\tfor (int i = 0, max = tokens.length; i < max; i++){\r", "+\t\t\t\t\tif (this.matchesName(this.simpleName, tokens[i])) {\r", "+\t\t\t\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t\t}\t\t\t\t\r", "+\t\t} \r", "+\t} else {\r", "+\t\tTypeBinding typeBinding = typeRef.binding;\r", "+\t\tif (typeBinding == null) {\r", "+\t\t\treturn INACCURATE_MATCH;\r", "+\t\t} else {\r", "+\t\t\tif (typeBinding instanceof ArrayBinding) typeBinding = ((ArrayBinding)typeBinding).leafComponentType;\r", "+\t\t\tif (typeRef instanceof SingleTypeReference){\r", "+\t\t\t\treturn this.matchLevelForType(this.simpleName, this.qualification, typeBinding);\r", "+\t\t\t} else { // QualifiedTypeReference\r", "+\t\t\t\tQualifiedTypeReference qNameRef = (QualifiedTypeReference)typeRef;\r", "+\t\t\t\tchar[][] tokens = qNameRef.tokens;\r", "+\t\t\t\tint lastIndex = tokens.length-1;\r", "+\t\t\t\t// try to match all enclosing types for which the token matches as well.\r", "+\t\t\t\twhile (typeBinding != null && lastIndex >= 0){\r", "+\t\t\t\t\tif (matchesName(this.simpleName, tokens[lastIndex--])) {\r", "+\t\t\t\t\t\tint level = this.matchLevelForType(this.simpleName, this.qualification, typeBinding);\r", "+\t\t\t\t\t\tif (level != IMPOSSIBLE_MATCH) {\r", "+\t\t\t\t\t\t\treturn level;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tif (typeBinding instanceof ReferenceBinding){\r", "+\t\t\t\t\t\ttypeBinding = ((ReferenceBinding)typeBinding).enclosingType();\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\ttypeBinding = null;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t\t} \r", "+\t\t}\r", "+\t\t\t\r", "+\t}\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a7ad54725892ec8e31ed7f1b31375a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern.java", "commitBeforeChange": "60e138d2828b37f2615e0cced57acea3adb47644", "commitAfterChange": "3c340a30d5ee47c28968789969de0fd1189f5b30", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r private boolean matches(TypeReference typeRef, boolean resolve)", "signatureAfterChange": "\r private int matchLevel(TypeReference typeRef, boolean resolve)", "diff": ["- */\r", "-private boolean matches(TypeReference typeRef, boolean resolve) {\r", "-\tif (!resolve) {\r", "-\t\tif (this.simpleName != null) {\r", "-\t\t\tif (typeRef instanceof SingleTypeReference) {\r", "-\t\t\t\treturn this.matchesName(this.simpleName, ((SingleTypeReference)typeRef).token);\r", "-\t\t\t} else { // QualifiedTypeReference\r", "-\t\t\t\tchar[][] tokens = ((QualifiedTypeReference)typeRef).tokens;\r", "-\t\t\t\tfor (int i = 0, max = tokens.length; i < max; i++){\r", "-\t\t\t\t\tif (this.matchesName(this.simpleName, tokens[i])) return true;\r", "-\t\t\t\t}\r", "-\t\t\t\treturn false;\r", "-\t\t\t}\t\t\t\t\r", "-\t\t}\r", "-\t} else {\r", "-\r", "-\t\tTypeBinding typeBinding = typeRef.binding;\r", "-\t\tif (typeBinding != null){\r", "-\t\t\tif (typeBinding instanceof ArrayBinding) typeBinding = ((ArrayBinding)typeBinding).leafComponentType;\r", "-\t\t\tif (typeRef instanceof SingleTypeReference){\r", "-\t\t\t\tif (!this.matchesType(this.simpleName, this.qualification, typeBinding)){\r", "-\t\t\t\t\treturn false;\r", "-\t\t\t\t}\r", "-\t\t\t} else { // QualifiedTypeReference\r", "-\t\t\t\tQualifiedTypeReference qNameRef = (QualifiedTypeReference)typeRef;\r", "-\t\t\t\tchar[][] tokens = qNameRef.tokens;\r", "-\t\t\t\tint lastIndex = tokens.length-1;\r", "-\t\t\t\t// try to match all enclosing types for which the token matches as well.\r", "-\t\t\t\twhile (typeBinding != null && lastIndex >= 0){\r", "-\t\t\t\t\tif (matchesName(this.simpleName, tokens[lastIndex--])\r", "-\t\t\t\t\t\t&& matchesType(this.simpleName, this.qualification, typeBinding)) return true;\r", "-\t\t\t\t\t\t//&& matchesAsSubtype(this.simpleName, this.qualification, typeBinding)) return true;\r", "-\t\t\t\t\tif (typeBinding instanceof ReferenceBinding){\r", "-\t\t\t\t\t\ttypeBinding = ((ReferenceBinding)typeBinding).enclosingType();\r", "-\t\t\t\t\t} else {\r", "-\t\t\t\t\t\ttypeBinding = null;\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r", "-\t\t\t\treturn false;\r", "-\t\t\t} \r", "-\t\t}\r", "-\t\t\t\r", "-\t}\r", "-\treturn true;\r", "-}\r", "+ */\r", "+private int matchLevel(TypeReference typeRef, boolean resolve) {\r", "+\tif (!resolve) {\r", "+\t\tif (this.simpleName == null) {\r", "+\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t} else {\r", "+\t\t\tif (typeRef instanceof SingleTypeReference) {\r", "+\t\t\t\tif (this.matchesName(this.simpleName, ((SingleTypeReference)typeRef).token)) {\r", "+\t\t\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t\t\t}\r", "+\t\t\t} else { // QualifiedTypeReference\r", "+\t\t\t\tchar[][] tokens = ((QualifiedTypeReference)typeRef).tokens;\r", "+\t\t\t\tfor (int i = 0, max = tokens.length; i < max; i++){\r", "+\t\t\t\t\tif (this.matchesName(this.simpleName, tokens[i])) {\r", "+\t\t\t\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t\t}\t\t\t\t\r", "+\t\t} \r", "+\t} else {\r", "+\t\tTypeBinding typeBinding = typeRef.binding;\r", "+\t\tif (typeBinding == null) {\r", "+\t\t\treturn INACCURATE_MATCH;\r", "+\t\t} else {\r", "+\t\t\tif (typeBinding instanceof ArrayBinding) typeBinding = ((ArrayBinding)typeBinding).leafComponentType;\r", "+\t\t\tif (typeRef instanceof SingleTypeReference){\r", "+\t\t\t\treturn this.matchLevelForType(this.simpleName, this.qualification, typeBinding);\r", "+\t\t\t} else { // QualifiedTypeReference\r", "+\t\t\t\tQualifiedTypeReference qNameRef = (QualifiedTypeReference)typeRef;\r", "+\t\t\t\tchar[][] tokens = qNameRef.tokens;\r", "+\t\t\t\tint lastIndex = tokens.length-1;\r", "+\t\t\t\t// try to match all enclosing types for which the token matches as well.\r", "+\t\t\t\twhile (typeBinding != null && lastIndex >= 0){\r", "+\t\t\t\t\tif (matchesName(this.simpleName, tokens[lastIndex--])) {\r", "+\t\t\t\t\t\tint level = this.matchLevelForType(this.simpleName, this.qualification, typeBinding);\r", "+\t\t\t\t\t\tif (level != IMPOSSIBLE_MATCH) {\r", "+\t\t\t\t\t\t\treturn level;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tif (typeBinding instanceof ReferenceBinding){\r", "+\t\t\t\t\t\ttypeBinding = ((ReferenceBinding)typeBinding).enclosingType();\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\ttypeBinding = null;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t\t} \r", "+\t\t}\r", "+\t\t\t\r", "+\t}\r", "+}\r"]}], "num": 45653}