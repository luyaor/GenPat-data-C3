{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1eb0800b53e44ddb1561af2f44e155c7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "938f94350724510e53ab5a7fceca3b1e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/FactoryPathConfigurationBlock.java", "commitBeforeChange": "6a39aeee024a65d73e9084e99bead655e3ded072", "commitAfterChange": "30a0d8b166ac2fa2854a231544dfecb8e382982a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tprivate void cacheOriginalValues()", "signatureAfterChange": " \tprivate void cacheOriginalValues()", "diff": ["-\t\tfOriginalPath = FactoryPath.getAllContainers(fJProj);", "-\t\tfOriginallyProjectSpecific = FactoryPath.hasProjectSpecificFactoryPath(fJProj);", "+\t\tIFactoryPath ifp = AptConfig.getFactoryPath(fJProj);", "+\t\t// we'll risk this downcast because we're such good buddies with apt.core.", "+\t\tFactoryPath fp = (FactoryPath)ifp;", "+\t\tMap<FactoryContainer, FactoryPath.Attributes> path = fp.getAllContainers();", "+\t\tfOriginalPath = FactoryPathEntry.pathListFromMap(path);", "+\t\tfOriginallyProjectSpecific = AptConfig.hasProjectSpecificFactoryPath(fJProj);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d65641dc9f490a0f791f854ad77b103d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "0d04687b56af18c0d3597efa62c9f67d3fdc3a51", "commitAfterChange": "d471673792c33710d43ba989e7727f72f37f7860", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " private IBuffer mapSource(SourceMapper mapper, IBinaryType info)", "signatureAfterChange": " private IBuffer mapSource(SourceMapper mapper, IBinaryType info)", "diff": ["-\t\t", "+", "-\t\t", "+", "-\t\tbuffer.addBufferChangedListener(this);\t", "-\t\t\t\t", "+\t\tbuffer.addBufferChangedListener(this);", "+", "-\t\t", "+", "+\t\treturn buffer;", "+\t} else {", "+\t\t// create buffer", "+\t\tIBuffer buffer = BufferManager.createNullBuffer(this);", "+\t\tif (buffer == null) return null;", "+\t\tBufferManager bufManager = getBufferManager();", "+\t\tbufManager.addBuffer(buffer);", "+", "+\t\t// listen to buffer changes", "+\t\tbuffer.addBufferChangedListener(this);", "-\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5af90822a3f1f79a34a5bf25c542816", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/ResourceChangedListener.java", "commitBeforeChange": "f04f8b342c7b71da1a56858ab790d24d761e7d9c", "commitAfterChange": "cb9adfe2a810fff7861c89a641a842e760d0d109", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t\tpublic boolean visit(IResourceDelta delta) throws CoreException", "signatureAfterChange": "  \t\tpublic boolean visit(IResourceDelta delta) throws CoreException", "diff": ["+\t\t\tIProject project = r.getProject();", "+\t\t\tGeneratedFileManager gfm = GeneratedFileManager.getGeneratedFileManager( project );", "-\t\t\t\tfor (GeneratedFileManager gfm : GeneratedFileManager.getGeneratedFileManagers()) {", "-\t\t\t\t\tIFile f = (IFile)r;", "-\t\t\t\t\tif ( gfm.isParentFile( f ) )", "-\t\t\t\t\t{", "-\t\t\t\t\t\tgfm.parentFileDeleted( (IFile) r, null /* progress monitor */ );", "-\t\t\t\t\t}", "-\t\t\t\t\telse if ( gfm.isGeneratedFile( f ) )", "-\t\t\t\t\t{", "-\t\t\t\t\t\tgfm.generatedFileDeleted( f, null /*progress monitor */ );", "-\t\t\t\t\t}", "+\t\t\t\tIFile f = (IFile)r;\t\t\t\t", "+\t\t\t\tif ( gfm.isParentFile( f ) )", "+\t\t\t\t{", "+\t\t\t\t\tgfm.parentFileDeleted( (IFile) r, null /* progress monitor */ );", "-\t\t\t}", "-\t\t\t\t", "-\t\t\tif ( delta.getKind() == IResourceDelta.REMOVED && r instanceof IFolder )", "-\t\t\t{", "-\t\t\t\t// handle delete of generated source folder", "+\t\t\t\telse if ( gfm.isGeneratedFile( f ) )", "+\t\t\t\t{", "+\t\t\t\t\t\tgfm.generatedFileDeleted( f, null /*progress monitor */ );", "+\t\t\t\t}", "+\t\t\t}\t\t\t\t", "+\t\t\telse if ( delta.getKind() == IResourceDelta.REMOVED && r instanceof IFolder )", "+\t\t\t{\t", "+\t\t\t\tIFolder f = (IFolder) r;", "+\t\t\t\tif ( gfm.isGeneratedSourceFolder( f ) )", "+\t\t\t\t\tgfm.generatedSourceFolderDeleted();", "-\t\t}\t\t", "+\t\t}\t"]}], "num": 45922}