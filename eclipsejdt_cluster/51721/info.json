{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "50971a91b2ef5c7d9d662765eb954975", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2998c33fb9870558c2f3f61b070c3968", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/internal/compiler/tool/ArchiveFileObject.java", "commitBeforeChange": "f6d7e4c8ebdaaf8a904962804a027a09edc0c0d3", "commitAfterChange": "30e98d6cc084dfe1b207ffb7493b2de7b6cec8c4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t@Override \tpublic Modifier getAccessLevel()", "signatureAfterChange": " \t@Override \tpublic Modifier getAccessLevel()", "diff": ["-\t\t\treader = ClassFileReader.read(this.zipFile, this.entryName);", "+\t\t\ttry (ZipFile zip = new ZipFile(this.file)) {", "+\t\t\t\treader = ClassFileReader.read(zip, this.entryName);", "+\t\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef940926334da1ef24f91e8dc2bf3bd1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/internal/compiler/tool/ArchiveFileObject.java", "commitBeforeChange": "f6d7e4c8ebdaaf8a904962804a027a09edc0c0d3", "commitAfterChange": "30e98d6cc084dfe1b207ffb7493b2de7b6cec8c4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t@Override \tpublic NestingKind getNestingKind()", "signatureAfterChange": " \t@Override \tpublic NestingKind getNestingKind()", "diff": ["-\t\t\tcase SOURCE :", "-\t\t\t\treturn NestingKind.TOP_LEVEL;", "-\t\t\tcase CLASS :", "-        \t\tClassFileReader reader = null;", "-        \t\ttry {", "-        \t\t\treader = ClassFileReader.read(this.zipFile, this.entryName);", "-        \t\t} catch (ClassFormatException e) {", "-        \t\t\t// ignore", "-        \t\t} catch (IOException e) {", "-        \t\t\t// ignore", "-        \t\t}", "-        \t\tif (reader == null) {", "-        \t\t\treturn null;", "-        \t\t}", "-        \t\tif (reader.isAnonymous()) {", "-        \t\t\treturn NestingKind.ANONYMOUS;", "-        \t\t}", "-        \t\tif (reader.isLocal()) {", "-        \t\t\treturn NestingKind.LOCAL;", "-        \t\t}", "-        \t\tif (reader.isMember()) {", "-        \t\t\treturn NestingKind.MEMBER;", "-        \t\t}", "-        \t\treturn NestingKind.TOP_LEVEL;", "-        \tdefault:", "-        \t\treturn null;", "+\t\tcase SOURCE :", "+\t\t\treturn NestingKind.TOP_LEVEL;", "+\t\tcase CLASS :", "+\t\t\tClassFileReader reader = null;", "+\t\t\ttry {", "+\t\t\t\ttry (ZipFile zip = new ZipFile(this.file)) {", "+\t\t\t\t\treader = ClassFileReader.read(zip, this.entryName);", "+\t\t\t\t}", "+\t\t\t} catch (ClassFormatException e) {", "+\t\t\t\t// ignore", "+\t\t\t} catch (IOException e) {", "+\t\t\t\t// ignore", "+\t\t\t}", "+\t\t\tif (reader == null) {", "+\t\t\t\treturn null;", "+\t\t\t}", "+\t\t\tif (reader.isAnonymous()) {", "+\t\t\t\treturn NestingKind.ANONYMOUS;", "+\t\t\t}", "+\t\t\tif (reader.isLocal()) {", "+\t\t\t\treturn NestingKind.LOCAL;", "+\t\t\t}", "+\t\t\tif (reader.isMember()) {", "+\t\t\t\treturn NestingKind.MEMBER;", "+\t\t\t}", "+\t\t\treturn NestingKind.TOP_LEVEL;", "+\t\tdefault:", "+\t\t\treturn null;"]}], "num": 51721}