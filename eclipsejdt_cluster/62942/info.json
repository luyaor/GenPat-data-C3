{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "605fdd2211105b2fe7f2a27d0d57bd35", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21252ea88c0c02addb901582b8c1309f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldReferencePattern.java", "commitBeforeChange": "5af30c3917bf512b1381c83cf2b214b4e93e8c9e", "commitAfterChange": "40810d6d8748f2beada6fc3922fddf79c52aa3fb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r protected int matchContainer()", "signatureAfterChange": "\r protected int matchContainer()", "diff": ["-\treturn METHOD | FIELD;\r", "+\tint matchContainer = METHOD | FIELD;\r", "+\tif (this.writeAccess && !this.readAccess) {\r", "+\t\tmatchContainer |= CLASS;\r", "+\t}\r", "+\treturn matchContainer;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3207c7e1718798d84ed74a121d83996f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/WhileStatement.java", "commitBeforeChange": "bd9b00bcf9923b9da6ff38651a157fa6bc3f2dc8", "commitAfterChange": "ff2b96761b3897e8f6c8feeb8c31198c182dd190", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-", "-\t\t\tif ((actionInfo.tagBits &", "-\t\t\t\t\tloopingContext.initsOnContinue.tagBits &", "-\t\t\t\t\tFlowInfo.UNREACHABLE) != 0) {", "-\t\t\t\tthis.continueLabel = null;", "+            int combinedTagBits = actionInfo.tagBits & loopingContext.initsOnContinue.tagBits;", "+\t\t\tif ((combinedTagBits & FlowInfo.UNREACHABLE) != 0) {", "+\t\t\t\tif ((combinedTagBits & FlowInfo.UNREACHABLE_OR_DEAD) != 0)", "+\t\t\t\t\tthis.continueLabel = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "932a4652ba3f073c607e7c6850ff4da2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/NullAnnotationMatching.java", "commitBeforeChange": "dbdde44f24ace4ee47bccce2cfe484eeeb8013f3", "commitAfterChange": "33bcc97ba28fd6319a8c922b4f8d989e4aab5311", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic static NullAnnotationMatching analyse(TypeBinding requiredType, TypeBinding providedType, TypeBinding providedSubstitute, int nullStatus, CheckMode mode)", "signatureAfterChange": " \tpublic static NullAnnotationMatching analyse(TypeBinding requiredType, TypeBinding providedType, TypeBinding providedSubstitute, int nullStatus, CheckMode mode)", "diff": ["+\t\t\t\t\t\tint currentNullStatus = nullStatus;", "-\t\t\t\t\t\t\t\tnullStatus = -1; // don't use beyond the outermost dimension", "-\t\t\t\t\t\t\tseverity = Math.max(severity, computeNullProblemSeverity(requiredBits, providedBits, nullStatus, mode == CheckMode.OVERRIDE && nullStatus == -1));", "+\t\t\t\t\t\t\t\tcurrentNullStatus = -1; // don't use beyond the outermost dimension", "+\t\t\t\t\t\t\tseverity = Math.max(severity, computeNullProblemSeverity(requiredBits, providedBits, currentNullStatus, mode == CheckMode.OVERRIDE && nullStatus == -1));", "+\t\t\t\t\t\t\tif (severity == 0)", "+\t\t\t\t\t\t\t\tnullStatus = -1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b80ebd54d3362180a3b0a4a8aa799efb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "44074e366655e2cf89768617c1e64463f5949123", "commitAfterChange": "554b7e9d4b83387bf453feaa375a85dacceedced", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic MethodBinding createDefaultConstructorWithBinding(MethodBinding inheritedConstructorBinding)", "signatureAfterChange": " \tpublic MethodBinding createDefaultConstructorWithBinding(MethodBinding inheritedConstructorBinding)", "diff": ["-\t\tcd.modifiers = modifiers & AccVisibilityMASK;", "+\t\tint newModifiers = modifiers & AccVisibilityMASK;", "+\t\tif (inheritedConstructorBinding.isVarargs()) {", "+\t\t\tnewModifiers |= AccVarargs;", "+\t\t}", "+\t\tcd.modifiers = newModifiers;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1012d161adbd68cdd6bf7c482a4e82c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "3817fb9be5d23e5c6f76a434da338233b90b5a46", "commitAfterChange": "8d9f700412e8d76f89db3ccd17a42191a013d35d", "methodNumberBeforeChange": 165, "methodNumberAfterChange": 165, "signatureBeforeChange": " public void invokestatic(MethodBinding methodBinding)", "signatureAfterChange": " public void invokestatic(MethodBinding methodBinding)", "diff": ["-\tsuper.invokestatic(methodBinding);", "-\tthis.currentFrame.numberOfStackItems -= methodBinding.parameters.length;", "-\tif (methodBinding.returnType != TypeBinding.VOID) {", "-\t\tthis.currentFrame.addStackItem(methodBinding.returnType);", "-\t}\t", "+    super.invokestatic(methodBinding);", "+\tint parametersLength = methodBinding.parameters.length;", "+    if (this.currentFrame.numberOfStackItems >= parametersLength) {", "+\t\tthis.currentFrame.numberOfStackItems -= parametersLength;", "+    }", "+    if (methodBinding.returnType != TypeBinding.VOID) {", "+        this.currentFrame.addStackItem(methodBinding.returnType);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca6890d3d537194a3cf6bef88964dee8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "3817fb9be5d23e5c6f76a434da338233b90b5a46", "commitAfterChange": "8d9f700412e8d76f89db3ccd17a42191a013d35d", "methodNumberBeforeChange": 236, "methodNumberAfterChange": 236, "signatureBeforeChange": " public void pop2()", "signatureAfterChange": " public void pop2()", "diff": ["-\tsuper.pop2();", "-\tswitch(this.currentFrame.stackItems[this.currentFrame.numberOfStackItems - 1].id()) {", "-\t\tcase TypeIds.T_long :", "-\t\tcase TypeIds.T_double :", "-\t\t\tthis.currentFrame.numberOfStackItems--;", "-\t\t\tbreak;", "-\t\tdefault:", "-\t\t\tthis.currentFrame.numberOfStackItems -= 2;", "-\t}", "+    super.pop2();", "+    int numberOfStackItems = this.currentFrame.numberOfStackItems;", "+    if (numberOfStackItems >= 1) {", "+        switch(this.currentFrame.stackItems[numberOfStackItems - 1].id()) {", "+            case TypeIds.T_long :", "+            case TypeIds.T_double :", "+                this.currentFrame.numberOfStackItems--;", "+                break;", "+            default:", "+                if (numberOfStackItems >= 2) {", "+                    this.currentFrame.numberOfStackItems -= 2;", "+                }", "+        }", "+    }"]}], "num": 62942}