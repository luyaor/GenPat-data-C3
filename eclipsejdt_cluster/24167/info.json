{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "81501fb6fc243a61b64fa80e7d09f766", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36b472a508a244a17d5e2eb828a4d92a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "e5d472ae376881b61d2a17c3e23cd62b7ed964f0", "commitAfterChange": "447de272007f97647787cc473ca78784fcaddeeb", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic IPackageFragment findPackageFragment(IPath path) \t\tthrows JavaModelException", "signatureAfterChange": "  \tpublic IJavaElement findPackageFragment(String packageName) \t\t\tthrows JavaModelException", "diff": ["+\tpublic IJavaElement findPackageFragment(String packageName)", "+\t\t\tthrows JavaModelException {", "+\t\tNameLookup lookup = newNameLookup((WorkingCopyOwner)null/*no need to look at working copies for pkgs*/);", "+\t\tIPackageFragment[] pkgFragments = lookup.findPackageFragments(packageName, false);", "+\t\tif (pkgFragments == null) {", "+\t\t\treturn null;", "+", "+\t\t} else {", "+\t\t\t// try to return one that is a child of this project", "+\t\t\tfor (int i = 0, length = pkgFragments.length; i < length; i++) {", "+", "+\t\t\t\tIPackageFragment pkgFragment = pkgFragments[i];", "+\t\t\t\tif (this.equals(pkgFragment.getParent().getParent())) {", "+\t\t\t\t\treturn pkgFragment;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\t// default to the first one", "+\t\t\treturn pkgFragments[0];", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "891117d83ae42639969fedd6f4acadca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "e5d472ae376881b61d2a17c3e23cd62b7ed964f0", "commitAfterChange": "447de272007f97647787cc473ca78784fcaddeeb", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic IJavaElement findElement(IPath path, WorkingCopyOwner owner) throws JavaModelException", "signatureAfterChange": " \tpublic IJavaElement findElement(IPath path, WorkingCopyOwner owner) throws JavaModelException", "diff": ["-", "-\t\t\t\tNameLookup lookup = newNameLookup((WorkingCopyOwner)null/*no need to look at working copies for pkgs*/);", "-\t\t\t\tIPackageFragment[] pkgFragments = lookup.findPackageFragments(packageName, false);", "-\t\t\t\tif (pkgFragments == null) {", "-\t\t\t\t\treturn null;", "-", "-\t\t\t\t} else {", "-\t\t\t\t\t// try to return one that is a child of this project", "-\t\t\t\t\tfor (int i = 0, length = pkgFragments.length; i < length; i++) {", "-", "-\t\t\t\t\t\tIPackageFragment pkgFragment = pkgFragments[i];", "-\t\t\t\t\t\tif (this.equals(pkgFragment.getParent().getParent())) {", "-\t\t\t\t\t\t\treturn pkgFragment;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\t// default to the first one", "-\t\t\t\t\treturn pkgFragments[0];", "-\t\t\t\t}", "+\t\t\t\treturn findPackageFragment(packageName);"]}], "num": 24167}