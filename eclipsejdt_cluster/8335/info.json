{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ee29a096648dbfa037034b0922ea90a9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89009f751613832368185b1f5dd1a863", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExpressionFormula.java", "commitBeforeChange": "9506194ecd38aa227915d4452e8097fba7bd6231", "commitAfterChange": "27a13e874a8de3a8e74e5e1ab65479e9dace8b8c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic Object reduce(InferenceContext18 inferenceContext) throws InferenceFailureException", "signatureAfterChange": "  \tpublic Object reduce(InferenceContext18 inferenceContext) throws InferenceFailureException", "diff": ["+", "-\t\t\treturn new ConstraintTypeFormula(exprType, this.right, COMPATIBLE);", "+\t\t\treturn new ConstraintTypeFormula(exprType, this.right, COMPATIBLE, this.isSoft);", "-\t\t\t\t\tnew ConstraintExpressionFormula(conditional.valueIfTrue, this.right, this.relation),", "-\t\t\t\t\tnew ConstraintExpressionFormula(conditional.valueIfFalse, this.right, this.relation)", "+\t\t\t\t\tnew ConstraintExpressionFormula(conditional.valueIfTrue, this.right, this.relation, this.isSoft),", "+\t\t\t\t\tnew ConstraintExpressionFormula(conditional.valueIfFalse, this.right, this.relation, this.isSoft)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a07edb5e8d781a95395aaa3b47297798", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ImportRewrite.java", "commitBeforeChange": "540532d90ea319b134aad3a0154f549c66728687", "commitAfterChange": "6a0eebe34bd6b3f3c957d0d1c92bc68d99fa8f40", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tpublic final TextEdit rewriteImports(IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tpublic final TextEdit rewriteImports(IProgressMonitor monitor) throws CoreException", "diff": ["-\t\t\tImportRewriteAnalyzer computer= new ImportRewriteAnalyzer(this.compilationUnit, usedAstRoot, this.restoreExistingImports);", "+\t\t\tImportRewriteAnalyzer computer= new ImportRewriteAnalyzer(this.compilationUnit, usedAstRoot, this.importOrder, this.importOnDemandThreshold, this.staticImportOnDemandThreshold, this.restoreExistingImports);"]}], "num": 8335}