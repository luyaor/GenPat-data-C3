{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e79e3c512d278974b0f045a16279f3da", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "956139e866d7dd1b866ecad97ab42fed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "5f7b1ccfabc400ea9e65986d696417445a37876d", "commitAfterChange": "d3d3fd84014a6dcb70309f0821240a82ccf93b29", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tprivate boolean isResFilteredFromOutput(OutputsInfo info, IResource res, int elementType)", "signatureAfterChange": " \tprivate boolean isResFilteredFromOutput(RootInfo rootInfo, OutputsInfo info, IResource res, int elementType)", "diff": ["-\tprivate boolean isResFilteredFromOutput(OutputsInfo info, IResource res, int elementType) {", "+\tprivate boolean isResFilteredFromOutput(RootInfo rootInfo, OutputsInfo info, IResource res, int elementType) {", "+\t\t\tJavaProject javaProject = null;", "+\t\t\tString sourceLevel = null;", "+\t\t\tString complianceLevel = null;", "-\t\t\t\t\t\tif (elementType == IJavaElement.JAVA_PROJECT ", "-\t\t\t\t\t\t\t\t&& res instanceof IFile ", "-\t\t\t\t\t\t\t\t&& Util.isValidClassFileName(res.getName())) {", "-\t\t\t\t\t\t\treturn true;", "+\t\t\t\t\t\tif (elementType == IJavaElement.JAVA_PROJECT && res instanceof IFile) {", "+\t\t\t\t\t\t\tif (sourceLevel == null) {", "+\t\t\t\t\t\t\t\t// Get java project to use its source and compliance levels", "+\t\t\t\t\t\t\t\tjavaProject = rootInfo == null ?", "+\t\t\t\t\t\t\t\t\t(JavaProject)this.createElement(res.getProject(), IJavaElement.JAVA_PROJECT, null) :", "+\t\t\t\t\t\t\t\t\trootInfo.project;", "+\t\t\t\t\t\t\t\tif (javaProject == null) {", "+\t\t\t\t\t\t\t\t\t// Cannot get any project => use workspace options", "+\t\t\t\t\t\t\t\t\tsourceLevel = this.manager.getOption(JavaCore.COMPILER_SOURCE);", "+\t\t\t\t\t\t\t\t\tcomplianceLevel = this.manager.getOption(JavaCore.COMPILER_COMPLIANCE);", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tsourceLevel = javaProject.getOption(JavaCore.COMPILER_SOURCE, true);", "+\t\t\t\t\t\t\t\t\tcomplianceLevel = javaProject.getOption(JavaCore.COMPILER_COMPLIANCE, true);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (Util.isValidClassFileName(res.getName(), sourceLevel, complianceLevel)) {", "+\t\t\t\t\t\t\t\treturn true;", "+\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c8c54d2d8e08b79951df2d81c3fbcc8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "5f7b1ccfabc400ea9e65986d696417445a37876d", "commitAfterChange": "d3d3fd84014a6dcb70309f0821240a82ccf93b29", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tprivate int elementType(IResource res, int kind, int parentType, RootInfo rootInfo)", "signatureAfterChange": " \tprivate int elementType(IResource res, int kind, int parentType, RootInfo rootInfo)", "diff": ["-\t\t\t\t\tif (Util.isValidFolderNameForPackage(res.getName())) {", "+\t\t\t\t\tif (Util.isValidFolderNameForPackage(res.getName(), rootInfo.project.getOption(JavaCore.COMPILER_SOURCE, true), rootInfo.project.getOption(JavaCore.COMPILER_COMPLIANCE, true))) {", "-\t\t\t\tif (Util.isValidCompilationUnitName(fileName)) {", "+\t\t\t\tString sourceLevel = rootInfo.project.getOption(JavaCore.COMPILER_SOURCE, true);", "+\t\t\t\tString complianceLevel = rootInfo.project.getOption(JavaCore.COMPILER_COMPLIANCE, true);", "+\t\t\t\tif (Util.isValidCompilationUnitName(fileName, sourceLevel, complianceLevel)) {", "-\t\t\t\t} else if (Util.isValidClassFileName(fileName)) {", "+\t\t\t\t} else if (Util.isValidClassFileName(fileName, sourceLevel, complianceLevel)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fba0b7c524544aaf8d82b3419b78d629", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "5f7b1ccfabc400ea9e65986d696417445a37876d", "commitAfterChange": "d3d3fd84014a6dcb70309f0821240a82ccf93b29", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  \tprotected CompilationUnit verifyComments(String fileName, char[] source, Map options)", "signatureAfterChange": "  \tprotected CompilationUnit verifyComments(String fileName, char[] source, Map options)", "diff": ["+\t\tString sourceLevel = null;", "+\t\tString complianceLevel = null;", "+\t\t\t\tcomplianceLevel = currentProject.getOption(JavaCore.COMPILER_COMPLIANCE, true);", "+\t\t\t\tsourceLevel = currentProject.getOption(JavaCore.COMPILER_SOURCE, true);", "+\t\t\t\tcurrentProject.setOption(JavaCore.COMPILER_COMPLIANCE, JavaCore.VERSION_1_5);", "+\t\tif (sourceLevel != null) {", "+\t\t\tcurrentProject.setOption(JavaCore.COMPILER_COMPLIANCE, complianceLevel);", "+\t\t\tcurrentProject.setOption(JavaCore.COMPILER_SOURCE, sourceLevel);", "+\t\t}"]}], "num": 18224}