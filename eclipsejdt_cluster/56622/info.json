{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3542dff7c7d613114aa19d8b824cb9dd", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38eb69d4eab224216c43bc0f989ee3e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "7e61b3f01f8b2328acee556fdc4ddf75c1702dd3", "commitAfterChange": "f98c9e376d07d0e65cfd307c772db2eeb92af6b9", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tprivate int addDependencies(BoundSet boundSet, Set variableSet, int i)", "signatureAfterChange": "  \tprivate boolean addDependencies(BoundSet boundSet, Set variableSet, InferenceVariable currentVariable, int min)", "diff": ["-\tprivate int addDependencies(BoundSet boundSet, Set variableSet, int i) {", "-\t\tInferenceVariable currentVariable = this.inferenceVariables[i];", "-\t\tif (boundSet.isInstantiated(currentVariable)) return 0;", "-\t\tif (!variableSet.add(currentVariable)) return 1;", "-\t\tint numUninstantiated = 1;", "-\t\tfor (int j = 0; j < this.inferenceVariables.length; j++) {", "-\t\t\tif (i == j) continue;", "-\t\t\tif (boundSet.dependsOnResolutionOf(currentVariable, this.inferenceVariables[j]))", "-\t\t\t\tnumUninstantiated += addDependencies(boundSet, variableSet, j);", "-\t\treturn numUninstantiated;", "+", "+\tprivate boolean addDependencies(BoundSet boundSet, Set variableSet, InferenceVariable currentVariable, int min) {", "+\t\tif (variableSet.size() >= min)", "+\t\t\treturn false; // no improvement", "+\t\tif (boundSet.isInstantiated(currentVariable)) return true; // not added", "+\t\tif (!variableSet.add(currentVariable)) return true; // already present", "+\t\tfor (int j = 0; j < this.inferenceVariables.length; j++) {", "+\t\t\tInferenceVariable nextVariable = this.inferenceVariables[j];", "+\t\t\tif (nextVariable == currentVariable) continue; //$IDENTITY-COMPARISON$ Inference variables", "+\t\t\tif (boundSet.dependsOnResolutionOf(currentVariable, nextVariable))", "+\t\t\t\tif (!addDependencies(boundSet, variableSet, nextVariable, min))", "+\t\t\t\t\treturn false; // abort traversal: no improvement", "+\t\t}", "+\t\treturn true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b19020a8d5d3fe13c6bc69962e5580d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "7e61b3f01f8b2328acee556fdc4ddf75c1702dd3", "commitAfterChange": "f98c9e376d07d0e65cfd307c772db2eeb92af6b9", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprivate BoundSet resolve() throws InferenceFailureException", "signatureAfterChange": " \tprivate BoundSet resolve() throws InferenceFailureException", "diff": ["-\t\t\tfor (int i = 0; i < this.inferenceVariables.length; i++) {", "-\t\t\t\tInferenceVariable currentVariable = this.inferenceVariables[i];", "-\t\t\t\tif (this.currentBounds.isInstantiated(currentVariable)) continue;", "-\t\t\t\t// find a minimal set of dependent variables:", "-\t\t\t\tSet variableSet = new HashSet();", "-\t\t\t\tint numUninstantiated = addDependencies(tmpBoundSet, variableSet, i);", "+\t\t\t// find a minimal set of dependent variables:", "+\t\t\tSet variableSet;", "+\t\t\twhile ((variableSet = getSmallestVariableSet(tmpBoundSet)) != null) {", "+\t\t\t\tint oldNumUninstantiated = tmpBoundSet.numUninstantiatedVariables(this.inferenceVariables);", "-\t\t\t\t", "-\t\t\t\tif (numUninstantiated > 0 && numVars > 0) {", "+\t\t\t\tif (numVars > 0) {", "-\t\t\t\t\t\tTypeBinding[] lowerBounds = tmpBoundSet.lowerBounds(variable, false/*onlyProper*/);", "+\t\t\t\t\t\tTypeBinding[] lowerBounds = tmpBoundSet.lowerBounds(variable, true/*onlyProper*/);", "-\t\t\t\t\tif (tmpBoundSet.incorporate(this))", "+\t\t\t\t\tif (tmpBoundSet.incorporate(this)) {", "+\t\t\t\t\t\tif (tmpBoundSet.numUninstantiatedVariables(this.inferenceVariables) == oldNumUninstantiated)", "+\t\t\t\t\t\t\treturn null; // abort because we made no progress", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c44845dc0eb48585e2bf16f2b94e165a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "3fa398907bc325a632b9517a054fc223461325fb", "commitAfterChange": "4e3d522e86b4dbde916017a602e046903b89c502", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "  \tprivate boolean addDependencies(BoundSet boundSet, Set<InferenceVariable> variableSet, InferenceVariable currentVariable, int min)", "signatureAfterChange": "  \tprivate void addDependencies(BoundSet boundSet, Set<InferenceVariable> variableSet, InferenceVariable currentVariable)", "diff": ["-\tprivate boolean addDependencies(BoundSet boundSet, Set<InferenceVariable> variableSet, InferenceVariable currentVariable, int min) {", "-\t\tif (variableSet.size() >= min)", "-\t\t\treturn false; // no improvement", "-\t\tif (boundSet.isInstantiated(currentVariable)) return true; // not added", "-\t\tif (!variableSet.add(currentVariable)) return true; // already present", "+\tprivate void addDependencies(BoundSet boundSet, Set<InferenceVariable> variableSet, InferenceVariable currentVariable) {", "+\t\tif (boundSet.isInstantiated(currentVariable)) return; // not added", "+\t\tif (!variableSet.add(currentVariable)) return; // already present", "-\t\t\t\tif (!addDependencies(boundSet, variableSet, nextVariable, min))", "-\t\t\t\t\treturn false; // abort traversal: no improvement", "+\t\t\t\taddDependencies(boundSet, variableSet, nextVariable);", "-\t\treturn true;"]}], "num": 56622}