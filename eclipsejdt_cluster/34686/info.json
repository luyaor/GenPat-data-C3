{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0e421a60c05b4a1c3600a756dcc84219", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08c4e99657ec6f3d6281946fff6bec73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Annotation.java", "commitBeforeChange": "b408a62caccca74d44dff8a675af3f155c36a61f", "commitAfterChange": "77ddbbd21774b8734c478b3fa222a0fb696417c4", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\t\t} else if ((metaTagBits & TagBits.AnnotationForType) != 0)", "+\t\t\t\t\t\t} else if ((metaTagBits & TagBits.AnnotationForType) != 0) {", "+\t\t\t\t\t\t} else if ((metaTagBits & TagBits.AnnotationForPackage) != 0) {", "+\t\t\t\t\t\t\tif (CharOperation.equals(((ReferenceBinding)this.recipient).sourceName, TypeConstants.PACKAGE_INFO_NAME))", "+\t\t\t\t\t\t\t\tbreak checkTargetCompatibility;", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1b60197514415674f2e6d30d69aaf8a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodBinding.java", "commitBeforeChange": "99697e231d7abf709bf21ed4dc6a92bbb307b9f9", "commitAfterChange": "b37b35b6931149654f122100957e976afd95264d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprotected IAnnotationBinding[] filterTypeAnnotations(org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding[] internalAnnotations)", "signatureAfterChange": "  \tprotected IAnnotationBinding[] filterTypeAnnotations(org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding[] internalAnnotations)", "diff": ["-\t\t\t\tif (isConstructor && (metaTagBits & TagBits.AnnotationForConstructor) == 0)", "-\t\t\t\t\tcontinue; // must be type use.", "+\t\t\t\t// Exclude all other targets including TYPE_USE, even though TYPE_USE is accepted.", "+\t\t\t\tif (isConstructor && (metaTagBits & TagBits.AnnotationForConstructor) == 0 &&", "+\t\t\t\t\t\t((metaTagBits & TagBits.AnnotationTargetMASK) != 0)) {", "+\t\t\t\t\tcontinue;", "+\t\t\t\t}"]}], "num": 34686}