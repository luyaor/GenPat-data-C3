{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c219478684e24bcf39b9b1ee51879e48", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75fb693c6be1bf15f6ad312cb29f43be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CodeCorrectionTests.java", "commitBeforeChange": "19198639bc25484a459cb1c53c953f761d4a6a3d", "commitAfterChange": "f495bb04967a33ceb30ace84eb082a0e7e182ce6", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void testCorrectSuperInterface2() throws JavaModelException", "signatureAfterChange": " public void testCorrectSuperInterface2() throws JavaModelException", "diff": ["-\tif(CompletionEngine.PROPOSE_MEMBER_TYPES) {", "-\t\tassertEquals(", "-\t\t\t\"should have two suggestions\", ", "-\t\t\t\"AListener\",", "-\t\t\trequestor.getSuggestions());", "-\t\tassertEquals(", "-\t\t\t\"a start of a suggestion is not correct\", ", "-\t\t\t\"\"+start,", "-\t\t\trequestor.getStarts());", "-\t\tassertEquals(", "-\t\t\t\"a end of a suggestion is not correct\", ", "-\t\t\t\"\"+end,", "-\t\t\trequestor.getEnds());", "-\t} else {", "-\t\tassertEquals(", "-\t\t\t\"should have two suggestions\", ", "-\t\t\t\"AListener\\n\"+", "-\t\t\t\"AListenerEvent\",", "-\t\t\trequestor.getSuggestions());", "-\t\tassertEquals(", "-\t\t\t\"a start of a suggestion is not correct\", ", "-\t\t\tstart+\"\\n\"+", "-\t\t\tstart,", "-\t\t\trequestor.getStarts());", "-\t\tassertEquals(", "-\t\t\t\"a end of a suggestion is not correct\", ", "-\t\t\tend+\"\\n\"+", "-\t\t\tend,", "-\t\t\trequestor.getEnds());", "-\t}", "+\tassertEquals(", "+\t\t\"should have two suggestions\", ", "+\t\t\"AListener\",", "+\t\trequestor.getSuggestions());", "+\tassertEquals(", "+\t\t\"a start of a suggestion is not correct\", ", "+\t\t\"\"+start,", "+\t\trequestor.getStarts());", "+\tassertEquals(", "+\t\t\"a end of a suggestion is not correct\", ", "+\t\t\"\"+end,", "+\t\trequestor.getEnds());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97f731059748fba52546b5c8c5a1f638", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "19198639bc25484a459cb1c53c953f761d4a6a3d", "commitAfterChange": "f495bb04967a33ceb30ace84eb082a0e7e182ce6", "methodNumberBeforeChange": 640, "methodNumberAfterChange": 640, "signatureBeforeChange": " public void testCompletionAllMemberTypes() throws JavaModelException", "signatureAfterChange": " public void testCompletionAllMemberTypes() throws JavaModelException", "diff": ["-    if(CompletionEngine.PROPOSE_MEMBER_TYPES) {", "-    \tassertResults(", "-\t            \"CompletionAllMemberTypes.Member1.Member2.Member3[TYPE_REF]{test.CompletionAllMemberTypes.Member1.Member2.Member3, test, Ltest.CompletionAllMemberTypes$Member1$Member2$Member3;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\t\"CompletionAllMemberTypes.Member1[TYPE_REF]{Member1, test, Ltest.CompletionAllMemberTypes$Member1;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\t\"CompletionAllMemberTypes.Member1.Member2[TYPE_REF]{Member2, test, Ltest.CompletionAllMemberTypes$Member1$Member2;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\",", "-\t            requestor.getResults());", "-    } else {", "-    \tassertResults(", "-\t            \"CompletionAllMemberTypes.Member1[TYPE_REF]{Member1, test, Ltest.CompletionAllMemberTypes$Member1;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\t\"CompletionAllMemberTypes.Member1.Member2[TYPE_REF]{Member2, test, Ltest.CompletionAllMemberTypes$Member1$Member2;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\",", "-\t            requestor.getResults());", "-    }", "+\tassertResults(", "+            \"CompletionAllMemberTypes.Member1.Member2.Member3[TYPE_REF]{test.CompletionAllMemberTypes.Member1.Member2.Member3, test, Ltest.CompletionAllMemberTypes$Member1$Member2$Member3;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\"CompletionAllMemberTypes.Member1[TYPE_REF]{Member1, test, Ltest.CompletionAllMemberTypes$Member1;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\"CompletionAllMemberTypes.Member1.Member2[TYPE_REF]{Member2, test, Ltest.CompletionAllMemberTypes$Member1$Member2;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\",", "+            requestor.getResults());"]}], "num": 66867}