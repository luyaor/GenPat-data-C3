{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "18159bb1e9463106abe8e526a9844187", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "015058ce06d7797753d383075dff333b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "a64e2bfe34ce5cd9321a9c519897f6c11db5eddd", "commitAfterChange": "c270ff57e75841606a99505b6ccf3e93c595f397", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t} else if (options.get(CompilerOptions.OPTION_Compliance).equals(CompilerOptions.VERSION_1_4)) {", "-\t\t\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_2);", "+\t\t} else if (options.get(CompilerOptions.OPTION_Compliance).equals(CompilerOptions.VERSION_1_4)", "+\t\t\t\t  && options.get(CompilerOptions.OPTION_TargetPlatform).equals(CompilerOptions.VERSION_1_1)) {", "+\t\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.incompatibleComplianceForTarget11\", (String)options.get(CompilerOptions.OPTION_Compliance))); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "053bd59d7a38392915bf243fa8b36098", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "f372eb4169324cad87b7cff6d25b5939cf1574c9", "commitAfterChange": "aac9fc656ae32e1d44c924b003ab11a649890335", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \tprivate void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": "\r \tprivate void configure(String[] argv) throws InvalidInputException", "diff": ["+\t\t// target cannot be 1.4 if compliance is 1.3\r", "+\t\tif (options.get(CompilerOptions.OPTION_TargetPlatform).equals(CompilerOptions.VERSION_1_4)\r", "+\t\t\t\t&& !options.get(CompilerOptions.OPTION_Compliance).equals(CompilerOptions.VERSION_1_4)){ \r", "+\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.incompatibleComplianceForTarget14\", (String)options.get(CompilerOptions.OPTION_Compliance))); //$NON-NLS-1$\r", "+\t\t}\r", "+\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40332b40cb3016189bd464bbfa3e58a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceTests.java", "commitBeforeChange": "87b777c1fc477e9b3f12a1e072f005600f998f84", "commitAfterChange": "f66fb438b9cc0be7e04e5e7cd4ac6af72beb4f11", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tprotected Hashtable warningOptions(int kind)", "signatureAfterChange": " \tprotected Hashtable warningOptions(int kind)", "diff": ["+\t\t// Ignore 3.2 options", "+\t\toptionsMap.put(CompilerOptions.OPTION_ReportUnusedLabel, CompilerOptions.IGNORE); ", "+", "+\t\t// Set compliance", "+\t\tString compliance= compliance();", "+\t\tif (compliance != null) {", "+\t\t\toptionsMap.put(CompilerOptions.OPTION_Compliance, compliance);", "+\t\t\toptionsMap.put(CompilerOptions.OPTION_Source, compliance);", "+\t\t\toptionsMap.put(CompilerOptions.OPTION_TargetPlatform, compliance);", "+\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5243daa55ed3fd23f30dbeda96993e7f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/TypeBindingTests308.java", "commitBeforeChange": "5ecdad70bb6e2e1bbd5c5ec539acc885a5698c4e", "commitAfterChange": "7f8c41fdd4e487762406a2cb6aaa3aa1d260201c", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "\r \t\r \tpublic void _testAnnotatedBinaryMemberType() throws CoreException, IOException", "signatureAfterChange": "\r \t\r \tpublic void _testAnnotatedBinaryType() throws CoreException, IOException", "diff": ["-\tpublic void _testAnnotatedBinaryMemberType() throws CoreException, IOException {\r", "+\tpublic void _testAnnotatedBinaryType() throws CoreException, IOException {\r", "-\t\t\tlibraryOptions.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_8);\r", "-\t\t\tlibraryOptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_8);\r", "-\t\t\tlibraryOptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_8);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d1ee7f4f18e40d097228d9cf0c23137", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsMassiveTests.java", "commitBeforeChange": "dbb21f9a082cc8b4fc9a756e4b7778384b3f408c", "commitAfterChange": "bbd2ac48b173a123c7419ce013244d878b152c22", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 15, "signatureBeforeChange": "  private Map getDefaultCompilerOptions()", "signatureAfterChange": "  private Map getDefaultCompilerOptions()", "diff": ["-\toptionsMap.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_4);", "-\toptionsMap.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_2); ", "+\toptionsMap.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_6);", "+\toptionsMap.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_6); ", "-\toptionsMap.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_5);", "+\toptionsMap.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_6);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "635e1a59785bf64a43bfd585f56c8b3e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "ad94e7c70968c32bc14232e983e71554b9e4e876", "commitAfterChange": "2a5005d0f0faf2e32a9545440516f869ce34bcdd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected Map getCompilerOptions()", "signatureAfterChange": " protected Map getCompilerOptions()", "diff": ["+", "+\t\tif (false) { // check that all tests are 1.3 & 1.4 compatible by default (compliance tests must specify which version to use)", "+\t\t\tdefaultOptions.put(", "+\t\t\t\tCompilerOptions.OPTION_Compliance, ", "+\t\t\t\tCompilerOptions.VERSION_1_3);", "+\t\t\tdefaultOptions.put(", "+\t\t\t\tCompilerOptions.OPTION_Source, ", "+\t\t\t\tCompilerOptions.VERSION_1_3);", "+\t\t\tdefaultOptions.put(", "+\t\t\t\tCompilerOptions.OPTION_TargetPlatform, ", "+\t\t\t\tCompilerOptions.VERSION_1_1);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96643049c0c756f4924457d3683bae35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "717a44c6b6c761be0c48243cde9dff6857a6db32", "commitAfterChange": "df9941361641a347d1ba4ee80fe7f9c7468ba17a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \r \tprotected Main(PrintWriter writer, boolean systemExitWhenFinished)", "signatureAfterChange": "\r \r \tprotected Main(PrintWriter writer, boolean systemExitWhenFinished)", "diff": ["-\t\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_1);\r", "-\t\toptions.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_3);\r", "+\t\toptions.put(\r", "+\t\t\tCompilerOptions.OPTION_Compliance,\r", "+\t\t\tCompilerOptions.VERSION_1_3);\r", "+\t\toptions.put(\r", "+\t\t\tCompilerOptions.OPTION_Source,\r", "+\t\t\tCompilerOptions.VERSION_1_3);\r", "+\t\toptions.put(\r", "+\t\t\tCompilerOptions.OPTION_TargetPlatform,\r", "+\t\t\tCompilerOptions.VERSION_1_1);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0dbe8d602fcde6cc55d188283af2d76", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "96a3c39fce5721600f8af3fa5110163336b3ab64", "commitAfterChange": "ea176c4b30f0ccecbe1ef65d5acaa7a437fc7839", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t} else {", "-\t\t\tString javaVMVersion = System.getProperty(\"java.vm.version\"); //$NON-NLS-1$", "-\t\t\tif (javaVMVersion != null && javaVMVersion.startsWith(\"1.4\")) { //$NON-NLS-1$", "-\t\t\t\toptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_3);", "-\t\t\t\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_2);", "-\t\t\t}", "+\t\t} else if (options.get(CompilerOptions.OPTION_Compliance).equals(CompilerOptions.VERSION_1_4)) {", "+\t\t\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_2);"]}], "num": 15701}