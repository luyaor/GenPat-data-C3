{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e23d233311c39a6c7da40cc5c01ad77c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11f508b2441a7026d7c56c04486e461e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest.java", "commitBeforeChange": "97881e1f65dad02c5fcba69e18ae3332573c3839", "commitAfterChange": "5ae43aadc33d93b5c6af6a0612729105eee79d4f", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": " \tpublic void test0103() throws JavaModelException", "signatureAfterChange": " \tpublic void test0103() throws JavaModelException", "diff": ["-\t\tICompilationUnit sourceUnit = getCompilationUnit(\"Converter\" , \"\", \"test0103\", \"Test.java\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$", "+\t\tICompilationUnit sourceUnit = getCompilationUnit(\"Converter\" , \"src\", \"test0103\", \"Test.java\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12bbd50dec64bd97af61ec218b5de916", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/AbstractMethodTests.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void test002() throws JavaModelException", "signatureAfterChange": " \tpublic void test002() throws JavaModelException", "diff": ["-\t\texpectingOnlySpecificProblemFor(classX, new Problem(\"X.foo(I__X)\", \"I__X cannot be resolved (or is not a valid type) for the parameter x of the method foo\", classX)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingOnlySpecificProblemFor(classX, new Problem(\"X.foo(I__X)\", \"I__X cannot be resolved to a type\", classX)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "193a6e8f7c53e4982ff95b1009452900", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "da2dbc8ee1c4e3f2d651fde4a074689a00f209fc", "commitAfterChange": "3d4c211d581e5ab7a648e648f6e07c2d98cd2b06", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " \tpublic void test0076() throws JavaModelException", "signatureAfterChange": " \tpublic void test0076() throws JavaModelException", "diff": ["-\t\tString expectedOutput = \"The type Map is not generic; it cannot be parameterized with arguments <String, Double>\";", "+\t\tString expectedOutput = \"Type mismatch: cannot convert from Map[] to Map<String,Double>[][]\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21ad3979711a2b92afbe9fcb34f8abbc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/AbstractMethodTests.java", "commitBeforeChange": "1ede5db942dab56847266219887a4967d7979998", "commitAfterChange": "c6aa9b39e08583e923f9e92afcde2dd1c7924e1c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic void test001() throws JavaModelException", "signatureAfterChange": "  \tpublic void test001() throws JavaModelException", "diff": ["-\t\texpectingOnlySpecificProblemFor(classY, new Problem(\"Y\", \"Class must implement the inherited abstract method X.foo(IX)\", classY)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingOnlySpecificProblemFor(classY, new Problem(\"Y\", \"Class must implement the inherited abstract method IX.foo(IX)\", classY)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25ccbb02d67363285365b7ca4b14426a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/AbstractMethodTests.java", "commitBeforeChange": "f44833f9e9c6c61508713666b8c272384401715c", "commitAfterChange": "3c177c114f149202cca752edb83c75765d8ba623", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void test002() throws JavaModelException", "signatureAfterChange": " \tpublic void test002() throws JavaModelException", "diff": ["-\t\texpectingOnlySpecificProblemFor(classY, new Problem(\"Y\", \"The type Y must implement the inherited abstract method X.foo(IX)\", classY, 38, 39, CategorizedProblem.CAT_MEMBER, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t", "+\t\texpectingOnlySpecificProblemFor(classY, new Problem(\"Y\", \"The type Y must implement the inherited abstract method IX.foo(IX)\", classY, 38, 39, CategorizedProblem.CAT_MEMBER, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cda1abd8b31dad58389b439be2cb3cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTestsRequestor2.java", "commitBeforeChange": "1f258635fb49ca32f9def120a3d2f7561eca1435", "commitAfterChange": "f3cbbf9c2974017737d02d4ae4c1412f1a96ce0d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tprotected void appendProposal(CompletionProposal proposal, StringBuffer buffer)", "signatureAfterChange": "  \tprotected void appendProposal(CompletionProposal proposal, StringBuffer buffer)", "diff": ["-\t\t\t\tbuffer.append(\"ANNOTATION_ATTRIBUT_REF\"); //$NON-NLS-1$", "+\t\t\t\tbuffer.append(\"ANNOTATION_ATTRIBUTE_REF\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3673381ea5eadfd66579422ef9a45ef0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest.java", "commitBeforeChange": "97881e1f65dad02c5fcba69e18ae3332573c3839", "commitAfterChange": "5ae43aadc33d93b5c6af6a0612729105eee79d4f", "methodNumberBeforeChange": 172, "methodNumberAfterChange": 172, "signatureBeforeChange": " \tpublic void test0171() throws JavaModelException", "signatureAfterChange": " \tpublic void test0171() throws JavaModelException", "diff": ["-\t\tICompilationUnit sourceUnit = getCompilationUnit(\"Converter\" , \"\", \"test0171\", \"Test.java\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$", "+\t\tICompilationUnit sourceUnit = getCompilationUnit(\"Converter\" , \"src\", \"test0171\", \"Test.java\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "582a5d6967244dee0888088de3871d76", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/AbstractMethodTests.java", "commitBeforeChange": "11ed38e74464eb2e7d149f52bb984520286f9a3a", "commitAfterChange": "ad8b3feb3cd31efef290116a3645f74aac42c9f3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void test001() throws JavaModelException", "signatureAfterChange": " \tpublic void test001() throws JavaModelException", "diff": ["-\t\texpectingOnlySpecificProblemFor(classX, new Problem(\"X.foo(I__X)\", \"I__X cannot be resolved (or is not a valid type) for the argument x of the method foo\", classX)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingOnlySpecificProblemFor(classX, new Problem(\"X.foo(I__X)\", \"I__X cannot be resolved (or is not a valid type) for the parameter x of the method foo\", classX)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60829f25f7354aee882554f7e68521c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/AbstractMethodTests.java", "commitBeforeChange": "0faf571a2b978290e761500f873fc8f116675788", "commitAfterChange": "16ea2a8daece1ce57aeee98ca0579c5d79d5f9c9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void test001() throws JavaModelException", "signatureAfterChange": " \tpublic void test001() throws JavaModelException", "diff": ["-\t\texpectingOnlySpecificProblemFor(classY, new Problem(\"Y\", \"Class must implement the inherited abstract method IX.foo(IX)\", classY)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingOnlySpecificProblemFor(classY, new Problem(\"Y\", \"The type Y must implement the inherited abstract method IX.foo(IX)\", classY)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75ac4496f31f69fbb3c124f2a6a5a76d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTestsRequestor2.java", "commitBeforeChange": "fa568df637cfba49109de9a23ecbf57eda89325f", "commitAfterChange": "699f85df0061a8b41250aa99562a0fc140375ee5", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \tprotected StringBuffer printProposal(CompletionProposal proposal, int tab, StringBuffer buffer)", "signatureAfterChange": "  \tprotected StringBuffer printProposal(CompletionProposal proposal, int tab, StringBuffer buffer)", "diff": ["-\t\t\t\tbuffer.append(\"METHOD_IMPORT\"); //$NON-NLS-1$", "+\t\t\t\tbuffer.append(\"METHOD_NAME_REFERENCE\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83d7a2cb2fea2dcef9f36399753fdab0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "991f1409bd400be711e46d765f6fd8e3f406ddac", "commitAfterChange": "6ab6a87ca5d929b4ba822bcc3a8b7337ae50a5fb", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": " public void testMissingClasspath() throws CoreException", "signatureAfterChange": " public void testMissingClasspath() throws CoreException", "diff": ["-\t\t\t\"Unable to read \\'.classpath\\' file of project P\",", "+\t\t\t\"Unable to read \\'.classpath\\' file of project 'P'\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "980ae4f20ff3d3858739ddc7bf194eed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "97881e1f65dad02c5fcba69e18ae3332573c3839", "commitAfterChange": "5ae43aadc33d93b5c6af6a0612729105eee79d4f", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": " \tpublic void test0467() throws JavaModelException", "signatureAfterChange": " \tpublic void test0467() throws JavaModelException", "diff": ["-\t\t\tICompilationUnit sourceUnit = getCompilationUnit(\"Converter\" , \"\", \"test0467\", \"Assert.java\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$", "+\t\t\tICompilationUnit sourceUnit = getCompilationUnit(\"Converter\" , \"src\", \"test0467\", \"Assert.java\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a39f4fbe000afe0c1fe40f663e614da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/AbstractMethodTests.java", "commitBeforeChange": "11ed38e74464eb2e7d149f52bb984520286f9a3a", "commitAfterChange": "ad8b3feb3cd31efef290116a3645f74aac42c9f3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void test002() throws JavaModelException", "signatureAfterChange": " \tpublic void test002() throws JavaModelException", "diff": ["-\t\texpectingOnlySpecificProblemFor(classX, new Problem(\"X.foo(I__X)\", \"I__X cannot be resolved (or is not a valid type) for the argument x of the method foo\", classX)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingOnlySpecificProblemFor(classX, new Problem(\"X.foo(I__X)\", \"I__X cannot be resolved (or is not a valid type) for the parameter x of the method foo\", classX)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cedd481eb66495ed6c94344afcded8a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathInitializerTests.java", "commitBeforeChange": "1e3339b390895f43e0c4a01c40dd8982b9a1cea5", "commitAfterChange": "7b7865fc0854344a6b06c0d58bee2ec35a66de53", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void testContainerInitializer05() throws CoreException", "signatureAfterChange": " public void testContainerInitializer05() throws CoreException", "diff": ["-\t\t\t\"P1[*]: {CHILDREN}\\n\" + ", "+\t\t\t\"P1[*]: {CHILDREN | RESOLVED CLASSPATH CHANGED}\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af0626a9aecaccb235a3d329db41499f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/IncrementalTests.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void testRenameMainType() throws JavaModelException", "signatureAfterChange": " \tpublic void testRenameMainType() throws JavaModelException", "diff": ["-\t\texpectingSpecificProblemFor(pathToB, new Problem(\"B\", \"A cannot be resolved or is not a valid superclass\", pathToB)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(pathToB, new Problem(\"B\", \"A cannot be resolved to a type\", pathToB)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba94af879464ef5063a57cd91d2a39d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceModelTests.java", "commitBeforeChange": "87b777c1fc477e9b3f12a1e072f005600f998f84", "commitAfterChange": "f66fb438b9cc0be7e04e5e7cd4ac6af72beb4f11", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " private void setUpBigProject() throws CoreException", "signatureAfterChange": " private void setUpBigProject() throws CoreException", "diff": ["-\t\tSystem.out.println(\"\t- create \"+FOLDERS_COUNT+\" folders and \"+PACKAGES_COUNT+\" packages...\");", "+\t\tSystem.out.println(\"\t- create \"+FOLDERS_COUNT+\" folders x \"+PACKAGES_COUNT+\" packages...\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf1ee71c31849eecb71ceb5251e0b309", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/AbstractMethodTests.java", "commitBeforeChange": "0faf571a2b978290e761500f873fc8f116675788", "commitAfterChange": "16ea2a8daece1ce57aeee98ca0579c5d79d5f9c9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void test002() throws JavaModelException", "signatureAfterChange": " \tpublic void test002() throws JavaModelException", "diff": ["-\t\texpectingOnlySpecificProblemFor(classY, new Problem(\"Y\", \"Class must implement the inherited abstract method X.foo(IX)\", classY)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingOnlySpecificProblemFor(classY, new Problem(\"Y\", \"The type Y must implement the inherited abstract method X.foo(IX)\", classY)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0d9efc4f9227bd6881e8f110ecc9ea4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "97881e1f65dad02c5fcba69e18ae3332573c3839", "commitAfterChange": "5ae43aadc33d93b5c6af6a0612729105eee79d4f", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 133, "signatureBeforeChange": " \tpublic void test0515() throws JavaModelException", "signatureAfterChange": " \tpublic void test0515() throws JavaModelException", "diff": ["-\t\tICompilationUnit sourceUnit = getCompilationUnit(\"Converter\", \"\", \"test0515\", \"A.java\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$", "+\t\tICompilationUnit sourceUnit = getCompilationUnit(\"Converter\", \"src\", \"test0515\", \"A.java\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c23cf0cf0655799665cc4c4c40fbde60", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaProjectTests.java", "commitBeforeChange": "30bd6fd62b89d5f2276220c0b08c348e7472c47b", "commitAfterChange": "6d532e3e6bb5f869c4cf89800d8c25d215a96667", "methodNumberBeforeChange": 113, "methodNumberAfterChange": 113, "signatureBeforeChange": " public void testUserLibrary() throws JavaModelException", "signatureAfterChange": " public void testUserLibrary() throws JavaModelException", "diff": ["-\t\t\"<userlibrary systemlibrary=\\\"false\\\" version=\\\"1\\\">\\n\" +", "+\t\t\"<userlibrary systemlibrary=\\\"false\\\" version=\\\"2\\\">\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c992eac0e215e8d22eb0eeb9b64ca64f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest.java", "commitBeforeChange": "97881e1f65dad02c5fcba69e18ae3332573c3839", "commitAfterChange": "5ae43aadc33d93b5c6af6a0612729105eee79d4f", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": " \tpublic void test0106() throws JavaModelException", "signatureAfterChange": " \tpublic void test0106() throws JavaModelException", "diff": ["-\t\tICompilationUnit sourceUnit = getCompilationUnit(\"Converter\" , \"\", \"test0106\", \"Test.java\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$", "+\t\tICompilationUnit sourceUnit = getCompilationUnit(\"Converter\" , \"src\", \"test0106\", \"Test.java\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd425f5662e8741e51fc1912839f69f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "1604916d6741dbeed2eba3f23e50e2c27c0addeb", "commitAfterChange": "3e728f3d8a16e09193442fa8bf8a662af153fd8d", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " \tpublic void test0440() throws JavaModelException", "signatureAfterChange": " \tpublic void test0440() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Wrong number of errors\", 0, unit.getProblems().length); //$NON-NLS-1$<", "+\t\tassertEquals(\"Wrong number of problems\", 0, unit.getProblems().length); //$NON-NLS-1$<"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db0f7a5f07e3e61cc7d31fa4d6294577", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "97881e1f65dad02c5fcba69e18ae3332573c3839", "commitAfterChange": "5ae43aadc33d93b5c6af6a0612729105eee79d4f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void test0412() throws JavaModelException", "signatureAfterChange": " \tpublic void test0412() throws JavaModelException", "diff": ["-\t\tICompilationUnit sourceUnit = getCompilationUnit(\"Converter\" , \"\", \"test0412\", \"A.java\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$", "+\t\tICompilationUnit sourceUnit = getCompilationUnit(\"Converter\" , \"src\", \"test0412\", \"A.java\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb84343f96c70ec53175d9044c29e6f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "1604916d6741dbeed2eba3f23e50e2c27c0addeb", "commitAfterChange": "3e728f3d8a16e09193442fa8bf8a662af153fd8d", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void test0412() throws JavaModelException", "signatureAfterChange": " \tpublic void test0412() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Wrong number of errors\", 0, unit.getProblems().length); //$NON-NLS-1$", "+\t\tassertEquals(\"Wrong number of problems\", 0, unit.getProblems().length); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6f89c9ef3938a26fac4dabe7cc65b78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "da2dbc8ee1c4e3f2d651fde4a074689a00f209fc", "commitAfterChange": "3d4c211d581e5ab7a648e648f6e07c2d98cd2b06", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": " \tpublic void test0077() throws JavaModelException", "signatureAfterChange": " \tpublic void test0077() throws JavaModelException", "diff": ["-\t\tString expectedOutput = \"The type Map is not generic; it cannot be parameterized with arguments <String, Double>\";", "+\t\tString expectedOutput = \"Type mismatch: cannot convert from Map[] to Map<String,Double>[][]\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f910c7dea2e604854e3a3bc84231c008", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest.java", "commitBeforeChange": "97881e1f65dad02c5fcba69e18ae3332573c3839", "commitAfterChange": "5ae43aadc33d93b5c6af6a0612729105eee79d4f", "methodNumberBeforeChange": 341, "methodNumberAfterChange": 341, "signatureBeforeChange": " \tpublic void test0340() throws JavaModelException", "signatureAfterChange": " \tpublic void test0340() throws JavaModelException", "diff": ["-\t\tICompilationUnit sourceUnit = getCompilationUnit(\"Converter\" , \"\", \"p3\", \"B.java\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$", "+\t\tICompilationUnit sourceUnit = getCompilationUnit(\"Converter\" , \"src\", \"p3\", \"B.java\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbac8f3b58d8b6a34475fd51ef068bab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "97881e1f65dad02c5fcba69e18ae3332573c3839", "commitAfterChange": "5ae43aadc33d93b5c6af6a0612729105eee79d4f", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " \tpublic void test0440() throws JavaModelException", "signatureAfterChange": " \tpublic void test0440() throws JavaModelException", "diff": ["-\t\tICompilationUnit sourceUnit = getCompilationUnit(\"Converter\" , \"\", \"test0440\", \"A.java\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$", "+\t\tICompilationUnit sourceUnit = getCompilationUnit(\"Converter\" , \"src\", \"test0440\", \"A.java\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdd187327bf193a956fcaf2645ac7a22", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/AbstractMethodTests.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void test001() throws JavaModelException", "signatureAfterChange": " \tpublic void test001() throws JavaModelException", "diff": ["-\t\texpectingOnlySpecificProblemFor(classX, new Problem(\"X.foo(I__X)\", \"I__X cannot be resolved (or is not a valid type) for the parameter x of the method foo\", classX)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingOnlySpecificProblemFor(classX, new Problem(\"X.foo(I__X)\", \"I__X cannot be resolved to a type\", classX)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff3f501592dd46642c9ed407513167ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/AbstractMethodTests.java", "commitBeforeChange": "1369ee539fab963cb9212bc0e7728c8e7ea1581c", "commitAfterChange": "8677d75931646723a12e1b4ccafa141861462004", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic void test001()", "signatureAfterChange": "  \tpublic void test001()", "diff": ["-\t\texpectingOnlySpecificProblemFor(classY, new Problem(\"Y\", \"Class must implement the inherited abstract method p2.X.foo(IX)\", classY));", "+\t\texpectingOnlySpecificProblemFor(classY, new Problem(\"Y\", \"Class must implement the inherited abstract method X.foo(IX)\", classY));"]}], "num": 34719}