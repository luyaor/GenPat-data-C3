{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d8690dbf8358bbd8fb9477c613174af8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38524b67750af2f7a2895eb3de09516d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "fe905e29a608f61f2afe181f4c1e4e27bb2b95dc", "commitAfterChange": "53a7cfa9bf2a3a1ade921d716dbdc58a4bfc35d4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic ICompilationUnit findCompilationUnit(String qualifiedTypeName)", "signatureAfterChange": " \tpublic ICompilationUnit findCompilationUnit(String qualifiedTypeName)", "diff": ["-\t\tString[] pkgName= CharOperation.NO_STRINGS;", "-\t\tString cuName= qualifiedTypeName;", "+\t\tString[] pkgName = CharOperation.NO_STRINGS;", "+\t\tString cuName = qualifiedTypeName;", "-\t\tcuName += SUFFIX_STRING_java;", "-\t\t\t\t\tICompilationUnit cu = root.getPackageFragment(pkgName).getCompilationUnit(cuName);", "-\t\t\t\t\tif (cu.exists()) {", "-\t\t\t\t\t\treturn cu;", "+\t\t\t\t\tIPackageFragment pkg = root.getPackageFragment(pkgName);", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tICompilationUnit[] cus = pkg.getCompilationUnits();", "+\t\t\t\t\t\tfor (int j = 0, length = cus.length; j < length; j++) {", "+\t\t\t\t\t\t\tICompilationUnit cu = cus[j];", "+\t\t\t\t\t\t\tif (Util.equalsIgnoreJavaLikeExtension(cu.getElementName(), cuName))", "+\t\t\t\t\t\t\t\treturn cu;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t\t\t// pkg does not exist", "+\t\t\t\t\t\t// -> try next package"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f794e62b2e5ea7eabdfcce0564fb5df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedHierarchyBuilder.java", "commitBeforeChange": "8f40b18693d984d1b3346925dd24dfb773855585", "commitAfterChange": "98a24097737828240f1d21a0b23b90c66df1d2e5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate void injectAllTypesForPackageFragment( \t\tIPackageFragment packFrag, \t\tArrayList types)", "signatureAfterChange": " \tprivate void injectAllOpenablesForPackageFragment( \t\tIPackageFragment packFrag, \t\tArrayList openables)", "diff": ["-\tprivate void injectAllTypesForPackageFragment(", "+\tprivate void injectAllOpenablesForPackageFragment(", "-\t\tArrayList types) {", "+\t\tArrayList openables) {", "-\t\t\t\t\tICompilationUnit[] typeContainers = packFrag.getCompilationUnits();", "-\t\t\t\t\tinjectAllTypesForTypeContainers(typeContainers, types);", "+\t\t\t\t\tICompilationUnit[] cus = packFrag.getCompilationUnits();", "+\t\t\t\t\tfor (int i = 0, length = cus.length; i < length; i++) {", "+\t\t\t\t\t\topenables.add(cus[i]);", "+\t\t\t\t\t}", "-\t\t\t\t\tIClassFile[] typeContainers = packFrag.getClassFiles();", "-\t\t\t\t\tinjectAllTypesForTypeContainers(typeContainers, types);", "+\t\t\t\t\tIClassFile[] classFiles = packFrag.getClassFiles();", "+\t\t\t\t\tfor (int i = 0, length = classFiles.length; i < length; i++) {", "+\t\t\t\t\t\topenables.add(classFiles[i]);", "+\t\t\t\t\t}"]}], "num": 22990}