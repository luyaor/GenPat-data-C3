{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e7daf72a74eef5f1569341f0e79b94f7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0603943f34e197eac16c9efedd6731fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ReconcileEnv.java", "commitBeforeChange": "6cb413dbd992ad73f847d7b4e14e78f1406fa2fc", "commitAfterChange": "8659b871eae5c2008485cfb120ce2c8f8ecbfe04", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 7, "signatureBeforeChange": "\t\t \t\tpublic void close() throws IOException", "signatureAfterChange": " \t@Override \tpublic void close()", "diff": ["-\t\t}\t\t", "-\t\tpublic void close() throws IOException {", "-\t\t\treturn;", "-\t\t}", "+\t */", "+\t@Override", "+\tpublic void close() {", "+\t\t// Notify the compiler that the working copy was modified, so that the editor", "+\t\t// and any downstream compilationParticipants will get a recomputed AST,", "+\t\t// taking into account any changes to generated types.", "+\t\t//TODO: don't call unless generated types were changed - WSH 10/06", "+\t\t_context.resetAST();", "+\t\tsuper.close();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd8f082753e5ba6ec359bb61deada611", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExistenceTests.java", "commitBeforeChange": "8ce8831af304ccf9323d0e03328e25efb4af1a79", "commitAfterChange": "7d5d82386f68c0fa6701931b2514e0faa31f94b7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void testClassFileInSource() throws CoreException", "signatureAfterChange": " public void testClassFileInSource1() throws CoreException", "diff": ["-public void testClassFileInSource() throws CoreException {", "+ */", "+public void testClassFileInSource1() throws CoreException {", "-\t\t// for now, we don't check the kind (source or library), ", "-\t\t// so class file can exist in source folder", "-\t\tassertTrue(\"Class file should exist\", classFile.exists()); ", "+\t\tassertTrue(\"Class file should not exist\", !classFile.exists()); ", "+\t} finally {", "+\t\tthis.deleteProject(\"P\");", "+\t}", "+}"]}], "num": 66563}