{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a2aea34f044834bd264aea2e638748c3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c512edf810bd69be87b5d56f2ff90be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "a05a975af5c0bba95d0d398d2bd3a368d9cd616f", "commitAfterChange": "3a562aaf09f9f323b583086b80b4683378886606", "methodNumberBeforeChange": 114, "methodNumberAfterChange": 114, "signatureBeforeChange": " final public void goto_(Label label)", "signatureAfterChange": " final public void goto_(Label label)", "diff": ["-\ttry {", "-\t\tlabel.inlineForwardReferencesFromLabelsTargeting(position);", "-\t\t/*", "-\t\t Possible optimization for code such as:", "-\t\t public Object foo() {", "-\t\t\tboolean b = true;", "-\t\t\tif (b) {", "-\t\t\t\tif (b)", "-\t\t\t\t\treturn null;", "-\t\t\t} else {", "-\t\t\t\tif (b) {", "-\t\t\t\t\treturn null;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\treturn null;", "-\t\t}", "-\t\tThe goto around the else block for the first if will", "-\t\tbe unreachable, because the thenClause of the second if", "-\t\treturns.", "-\t\tSee inlineForwardReferencesFromLabelsTargeting defined", "-\t\ton the Label class for the remaining part of this", "-\t\toptimization.", "-\t\t if (!lbl.isBranchTarget(position)) {", "-\t\t\tswitch(bCodeStream[classFileOffset-1]) {", "-\t\t\t\tcase OPC_return :", "-\t\t\t\tcase OPC_areturn:", "-\t\t\t\t\treturn;", "-\t\t\t}", "-\t\t}*/", "-\t\tposition++;", "-\t\tbCodeStream[classFileOffset++] = OPC_goto;", "-\t} catch (IndexOutOfBoundsException e) {", "-\t\tresizeByteArray(OPC_goto);", "+\tif (classFileOffset >= bCodeStream.length) {", "+\t\tresizeByteArray();", "+\tlabel.inlineForwardReferencesFromLabelsTargeting(position);", "+\t/*", "+\t Possible optimization for code such as:", "+\t public Object foo() {", "+\t\tboolean b = true;", "+\t\tif (b) {", "+\t\t\tif (b)", "+\t\t\t\treturn null;", "+\t\t} else {", "+\t\t\tif (b) {", "+\t\t\t\treturn null;", "+\t\t\t}", "+\t\t}", "+\t\treturn null;", "+\t}", "+\tThe goto around the else block for the first if will", "+\tbe unreachable, because the thenClause of the second if", "+\treturns.", "+\tSee inlineForwardReferencesFromLabelsTargeting defined", "+\ton the Label class for the remaining part of this", "+\toptimization.", "+\t if (!lbl.isBranchTarget(position)) {", "+\t\tswitch(bCodeStream[classFileOffset-1]) {", "+\t\t\tcase OPC_return :", "+\t\t\tcase OPC_areturn:", "+\t\t\t\treturn;", "+\t\t}", "+\t}*/", "+\tposition++;", "+\tbCodeStream[classFileOffset++] = OPC_goto;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b756bd4d07969a9bb57ea79c78f5e15e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "c9050a3a9594b7d361850fa9a3880d65c49e6aec", "commitAfterChange": "861f1162953e56602b4d7507e52e1f13733854c4", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 118, "signatureBeforeChange": "\r final public void goto_(Label lbl)", "signatureAfterChange": "\r final public void goto_(Label lbl)", "diff": ["+\tif (this.wideMode) {\r", "+\t\tthis.goto_w(lbl);\r", "+\t\treturn;\r", "+\t}\r", "+\ttry {\r", "+\t\tlbl.inlineForwardReferencesFromLabelsTargeting(position);\r", "+\t\t/*\r", "+\t\t Possible optimization for code such as:\r", "+\t\t public Object foo() {\r", "+\t\t\tboolean b = true;\r", "+\t\t\tif (b) {\r", "+\t\t\t\tif (b)\r", "+\t\t\t\t\treturn null;\r", "+\t\t\t} else {\r", "+\t\t\t\tif (b) {\r", "+\t\t\t\t\treturn null;\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t\treturn null;\r", "+\t\t}\r", "+\t\tThe goto around the else block for the first if will\r", "+\t\tbe unreachable, because the thenClause of the second if\r", "+\t\treturns.\r", "+\t\tSee inlineForwardReferencesFromLabelsTargeting defined\r", "+\t\ton the Label class for the remaining part of this\r", "+\t\toptimization.\r", "+\t\t if (!lbl.isBranchTarget(position)) {\r", "+\t\t\tswitch(bCodeStream[classFileOffset-1]) {\r", "+\t\t\t\tcase OPC_return :\r", "+\t\t\t\tcase OPC_areturn:\r", "+\t\t\t\t\treturn;\r", "+\t\t\t}\r", "+\t\t}*/\r", "+\t\tposition++;\r", "+\t\tbCodeStream[classFileOffset++] = OPC_goto;\r", "+\t} catch (IndexOutOfBoundsException e) {\r", "+\t\tresizeByteArray(OPC_goto);\r", "+\t}\r", "+\tlbl.branch();\r", "+}\r"]}], "num": 37297}