{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "275521f9b986aa2c1069728cb7655022", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ba1f6e39a877680f9e4f7cfcfd1fd77", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "06734c9185cf2920c0b21b4263e30c1ea3cbc085", "commitAfterChange": "753a6a1eefe385cd875ac1931b6199ee406e2292", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic void appendKey(StringBuffer buffer, boolean rawTypeOnly)", "signatureAfterChange": " \tpublic void appendKey(StringBuffer buffer, boolean rawTypeOnly)", "diff": ["-\t\t\t\t\tITypeBinding[] typeParameters = getTypeParameters();", "-\t\t\t\t\tint typeParametersLength = typeParameters.length;", "-\t\t\t\t\tif (typeParametersLength != 0) {", "-\t\t\t\t\t\tbuffer.append('<');", "-\t\t\t\t\t\tfor (int i = 0; i < typeParametersLength; i++) {", "-\t\t\t\t\t\t\tTypeBinding typeParameter = (TypeBinding) typeParameters[i];", "-\t\t\t\t\t\t\ttypeParameter.appendParameterKey(buffer);", "-\t\t\t\t\t\t\tITypeBinding[] bounds = typeParameter.getTypeBounds();", "-\t\t\t\t\t\t\tfor (int j = 0, length = bounds.length; j < length; j++) {", "-\t\t\t\t\t\t\t\tTypeBinding bound = (TypeBinding) bounds[j];", "-\t\t\t\t\t\t\t\tbuffer.append(':');", "-\t\t\t\t\t\t\t\tbound.appendParameterKey(buffer);", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tbuffer.append(',');", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tbuffer.append('>');", "-\t\t\t\t\t}", "-\t\t\t\t\tITypeBinding[] typeArgs = getTypeArguments();", "-\t\t\t\t\tint typeArgsLength = typeArgs.length;", "-\t\t\t\t\tif (typeArgsLength != 0) {", "-\t\t\t\t\t\tbuffer.append('<');", "-\t\t\t\t\t\tfor (int i = 0; i < typeArgsLength; i++) {", "-\t\t\t\t\t\t\tTypeBinding typeArg = (TypeBinding) typeArgs[i];", "-\t\t\t\t\t\t\ttypeArg.appendParameterKey(buffer);", "-\t\t\t\t\t\t\tbuffer.append(',');", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tbuffer.append('>');", "-\t\t\t\t\t}", "+\t\t\t\t\t// only one of the type parameters or type arguments is non-empty at the same time", "+\t\t\t\t\tappendTypeParameters(buffer, getTypeParameters());", "+\t\t\t\t\tappendTypeArguments(buffer, getTypeArguments());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c54bbb217c5111e55ae8df29e66e7c62", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NamedMember.java", "commitBeforeChange": "f6b98e81e084c7fc5756b6873d78549cc1ce9d4c", "commitAfterChange": "334acc099e45b6ce9ec3bc9c1d31c4c1fb234636", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tprotected String getFullyQualifiedParameterizedName(String fullyQualifiedName, ITypeParameter[] typeParameters) throws JavaModelException", "signatureAfterChange": " \t \tpublic String getFullyQualifiedName(char enclosingTypeSeparator, boolean showParameters) throws JavaModelException", "diff": ["-\tprotected String getFullyQualifiedParameterizedName(String fullyQualifiedName, ITypeParameter[] typeParameters) throws JavaModelException {", "-\t\tif (typeParameters.length == 0) return fullyQualifiedName;", "-\t\tStringBuffer buffer = new StringBuffer(fullyQualifiedName);", "-\t\tbuffer.append('<');", "-\t\tfor (int i = 0, length = typeParameters.length; i < length; i++) {", "-\t\t\tITypeParameter typeParameter = typeParameters[i];", "-\t\t\tbuffer.append(typeParameter.getElementName());", "-\t\t\tString[] bounds = typeParameter.getBounds();", "-\t\t\tint boundsLength = bounds.length;", "-\t\t\tif (boundsLength > 0) {", "-\t\t\t\tbuffer.append(\" extends \"); //$NON-NLS-1$", "-\t\t\t\tfor (int j = 0; j < boundsLength; j++) {", "-\t\t\t\t\tbuffer.append(bounds[j]);", "-\t\t\t\t\tif (j < boundsLength-1)", "-\t\t\t\t\t\tbuffer.append(\" & \"); //$NON-NLS-1$", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tif (i < length-1)", "-\t\t\t\tbuffer.append(\", \"); //$NON-NLS-1$", "+\t", "+\tpublic String getFullyQualifiedName(char enclosingTypeSeparator, boolean showParameters) throws JavaModelException {", "+\t\tString packageName = getPackageFragment().getElementName();", "+\t\tif (packageName.equals(IPackageFragment.DEFAULT_PACKAGE_NAME)) {", "+\t\t\treturn getTypeQualifiedName(enclosingTypeSeparator, showParameters);", "-\t\tbuffer.append('>');", "-\t\treturn buffer.toString();", "+\t\treturn packageName + '.' + getTypeQualifiedName(enclosingTypeSeparator, showParameters);"]}], "num": 22993}