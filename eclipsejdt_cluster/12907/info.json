{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "607d70c150fe86cbfcfce4b27647c69c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c237673e4c5b27881b42bfb5c03c59b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatter.java", "commitBeforeChange": "f63db2314417880fb03b69a3a2d9f245018f9762", "commitAfterChange": "ed05e516511eea449e523a1d3b6827ca6c8a5f46", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "\r \r \tprivate void updateMappedPositions(int startPosition)", "signatureAfterChange": "\r \r \tprivate void updateMappedPositions(int startPosition)", "diff": ["-\t\tif (positionsToMap == null)\r", "+\t\tif (positionsToMap == null) {\r", "+\t\t}\r", "+\t\t\t\tif (posToMap == sourceLength) {\r", "+\t\t\t\t\tmappedPositions[indexToMap] = formattedSource.length();\r", "+\t\t\t\t}\r", "-\t\t\t\tmappedPositions[indexToMap] = posToMap + globalDelta + lineDelta;\r", "+\t\t\t\tif (posToMap == sourceLength - 1) {\r", "+\t\t\t\t\tmappedPositions[indexToMap] = startPosition + globalDelta + lineDelta;\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\tmappedPositions[indexToMap] = posToMap + globalDelta + lineDelta;\r", "+\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6428b2ebffced202ee5d0d75e69a76c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration.java", "commitBeforeChange": "4ea9156aba6eb1b480b630995ce26fe5d9cc158a", "commitAfterChange": "08a27bd42ab478e28ef52da212e8300b848a1dc3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void bindArguments()", "signatureAfterChange": " \tpublic void bindArguments()", "diff": ["-\t\t\t\t\tif (paramAnnotations == null)", "+\t\t\t\t\tif (paramAnnotations == null) {", "+\t\t\t\t\t\tfor (int j=0; j<i; j++) {", "+\t\t\t\t\t\t\tparamAnnotations[j] = Binding.NO_ANNOTATIONS;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t} else if (paramAnnotations != null) {", "+\t\t\t\t\tparamAnnotations[i] = Binding.NO_ANNOTATIONS;"]}], "num": 12907}