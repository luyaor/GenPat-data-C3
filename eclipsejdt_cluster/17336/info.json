{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d61366355adb4022fe5c8500fb107441", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43c3b3bb1bd2e7850afdd5b339549563", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "0aed651787bbf037293557b7c88429b8514a95c0", "commitAfterChange": "1719c13f5400eb5914bb79f89f0e1d4c54e3cd14", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprivate static SearchPattern createTypePattern(String patternString, int limitTo, int matchRule)", "signatureAfterChange": " \tprivate static SearchPattern createTypePattern(String patternString, int limitTo, int matchRule)", "diff": ["+\t\tchar[] paramName = null;", "-\t\t\t\t\t\t\tif (parameterized == 1) {", "-\t\t\t\t\t\t\t\tparamPtr++;", "+\t\t\t\t\t\t\tif (parameterized == 1 && storeParam) {", "+\t\t\t\t\t\t\t\tif (paramPtr < paramNames.length) {", "+\t\t\t\t\t\t\t\t\tparamNames[paramPtr++] = paramName;", "+\t\t\t\t\t\t\t\t\tparamName = null;", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tif (parameterized == 1) storeParam = false;", "+\t\t\t\t\t\t\tif (parameterized == 1) {", "+\t\t\t\t\t\t\t\tif (storeParam) {", "+\t\t\t\t\t\t\t\t\tstoreParam = false;", "+\t\t\t\t\t\t\t\t\tif (paramPtr < paramNames.length) {", "+\t\t\t\t\t\t\t\t\t\tparamNames[paramPtr] = paramName;", "+\t\t\t\t\t\t\t\t\t\tparamName = null;", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tif (paramPtr < paramNames.length) {", "-\t\t\t\t\t\t\t\t\tif (paramNames[paramPtr] == null) {", "-\t\t\t\t\t\t\t\t\t\t// never store id at this index", "-\t\t\t\t\t\t\t\t\t\tparamNames[paramPtr] = scanner.getCurrentIdentifierSource();", "-\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tif (paramName == null) {", "+\t\t\t\t\t\t\t\t\t// never store id at this index", "+\t\t\t\t\t\t\t\t\tparamName = scanner.getCurrentIdentifierSource();", "-\t\t\t\t\t\t\t\t\t// syntax error", "+\t\t\t\t\t\t\t\t\tparamName = CharOperation.concat(paramName, scanner.getCurrentIdentifierSource());", "+\t\t\t\t\t\tcase TerminalTokens.TokenNameDOT:", "+\t\t\t\t\t\t\tif (parameterized == 1 && storeParam && paramName != null) {", "+\t\t\t\t\t\t\t\tparamName = CharOperation.append(paramName, '.');", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "662923cb71d3ac39b1b3253dd8f7c37f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/junit/extension/TestCase.java", "commitBeforeChange": "2405db5aa5fe68001490d17fc143b2b94cd3e4c0", "commitAfterChange": "f9e197d5d504f2f1e192bb89ac7c3b3675cc44f4", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  protected void setUp() throws Exception", "signatureAfterChange": "  protected void setUp() throws Exception", "diff": ["-\tif (CURRENT_CLASS == null || CURRENT_CLASS != getClass()) {", "+\tboolean isFirstTestRun = CURRENT_CLASS == null;", "+\tif (isFirstTestRun || CURRENT_CLASS != getClass()) {", "+\t\tif (isFirstTestRun) clean();", "-\t\t\tstream.print(used);", "+\t\t\tstream.print(format(used));", "-\t\t\tstream.print(total);", "+\t\t\tstream.print(format(total));", "-\t\t\tstream.print(Runtime.getRuntime().maxMemory());", "+\t\t\tstream.print(format(Runtime.getRuntime().maxMemory()));", "+\t\t\tif (isFirstTestRun) {", "+\t\t\t\tSystem.out.println(\"\t\"+format(used));", "+\t\t\t}", "+\t\t} else {", "+\t\t\tif (isFirstTestRun) {", "+\t\t\t\tlong total = Runtime.getRuntime().totalMemory();", "+\t\t\t\tlong used = total - Runtime.getRuntime().freeMemory();", "+\t\t\t\tSystem.out.println(\"\talready used while starting: \"+format(used));", "+\t\t\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e45a36ff84b90583854dbd6f7a37dbd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceTests.java", "commitBeforeChange": "f15f3a4daa4f7cbf363475bdb20d4707912f834f", "commitAfterChange": "1e2211eded7d5ae87dfcf507bb00676a5a81d8e9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprotected void setUp() throws Exception", "signatureAfterChange": " \tprotected void setUp() throws Exception", "diff": ["+\t\t// Perform gc several times to be sure that it won't take time while executing current test", "+\t\tint iterations = 0;", "+\t\tlong delta;", "+\t\tdo {", "+\t\t\tlong free = Runtime.getRuntime().freeMemory();", "+\t\t\tSystem.gc();", "+\t\t\tdelta = Runtime.getRuntime().freeMemory() -free;", "+\t\t\tif (DEBUG) System.out.println(\"Loop gc \"+ ++iterations + \" (free=\"+free+\", delta=\"+delta+\")\");", "+\t\t\tThread.sleep(500);", "+\t\t} while (iterations<10 && delta>100);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "969a8c348e42ae94389866530c922419", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyParser.java", "commitBeforeChange": "19de0bf25a38cb3c78ae5b1452a4badcf6ffab4c", "commitAfterChange": "d45a6d72ecac1399ae839b8bb0faf0b4626c38b4", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " \t \tprivate void parseTypeVariable()", "signatureAfterChange": " \t \tprivate void parseTypeVariable()", "diff": ["-\t\tconsumeTypeVariable(this.scanner.getTokenSource());", "+\t\tchar[] typeVariableName = this.scanner.getTokenSource();", "+\t\tchar[] position;", "+\t\tint length = typeVariableName.length;", "+\t\tif (length > 0 && Character.isDigit(typeVariableName[0])) {", "+\t\t\tint firstT = CharOperation.indexOf('T', typeVariableName);", "+\t\t\tposition = CharOperation.subarray(typeVariableName, 0, firstT);", "+\t\t\ttypeVariableName = CharOperation.subarray(typeVariableName, firstT+1, typeVariableName.length);", "+\t\t} else {", "+\t\t\tposition = CharOperation.NO_CHAR;", "+\t\t}", "+\t\tconsumeTypeVariable(position, typeVariableName);"]}], "num": 17336}