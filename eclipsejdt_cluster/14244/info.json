{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9091bf67911674ebdbffa495b69efeb5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f3b31ec426430e8e0a8e4e70e4611dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AnnotationBinding.java", "commitBeforeChange": "ee7a9f184cb78c9a997b3d97c102d52d6cad8cc9", "commitAfterChange": "5ce130e25c355987e77b700c026948aca2c3cdd7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic IJavaElement getJavaElement()", "signatureAfterChange": " \t \tpublic IJavaElement getJavaElement()", "diff": ["-\t\tITypeBinding annotationType = getAnnotationType();", "-\t\tif (annotationType == null)", "+\t\tif (!(this.bindingResolver instanceof DefaultBindingResolver)) return null;", "+\t\tASTNode node = (ASTNode) ((DefaultBindingResolver) this.bindingResolver).bindingsToAstNodes.get(this);", "+\t\tif (!(node instanceof Annotation)) return null;", "+\t\tASTNode parent = node.getParent();", "+\t\tIJavaElement parentElement = null;", "+\t\tswitch (parent.getNodeType()) {", "+\t\tcase ASTNode.PACKAGE_DECLARATION:", "+\t\t\tIJavaElement cu = ((CompilationUnit) parent.getParent()).getJavaElement();", "+\t\t\tif (cu instanceof ICompilationUnit) {", "+\t\t\t\tString pkgName = ((PackageDeclaration) parent).getName().getFullyQualifiedName();", "+\t\t\t\tparentElement =  ((ICompilationUnit) cu).getPackageDeclaration(pkgName);", "+\t\t\t}", "+\t\t\tbreak;", "+\t\tcase ASTNode.TYPE_DECLARATION:", "+\t\t\tparentElement = ((TypeDeclaration) parent).resolveBinding().getJavaElement();", "+\t\t\tbreak;", "+\t\tcase ASTNode.FIELD_DECLARATION:", "+\t\t\tVariableDeclarationFragment fragment = (VariableDeclarationFragment) ((FieldDeclaration) parent).fragments().get(0);", "+\t\t\tparentElement = fragment.resolveBinding().getJavaElement();", "+\t\t\tbreak;", "+\t\tcase ASTNode.METHOD_DECLARATION:", "+\t\t\tparentElement = ((MethodDeclaration) parent).resolveBinding().getJavaElement();", "+\t\t\tbreak;", "+\t\tcase ASTNode.VARIABLE_DECLARATION_STATEMENT:", "+\t\t\tfragment = (VariableDeclarationFragment) ((VariableDeclarationStatement) parent).fragments().get(0);", "+\t\t\tparentElement = fragment.resolveBinding().getJavaElement();", "+\t\t\tbreak;", "+\t\tdefault:", "-\t\treturn annotationType.getJavaElement();", "+\t\t}", "+\t\tif (! (parentElement instanceof IAnnotatable)) return null;", "+\t\treturn ((IAnnotatable) parentElement).getAnnotation(getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f95af42eec060a6c66779d56f7f2300f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterBugsTest.java", "commitBeforeChange": "624d1b561ac3289a55fdc4319658cfc9a95be40b", "commitAfterChange": "5b2838f3bb9b9310e5fe5dd75385e9134612c357", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " public void testBug226357() throws CoreException, IOException", "signatureAfterChange": " public void testBug226357() throws CoreException, IOException", "diff": ["-\tworkingCopies = new ICompilationUnit[1];", "-\tworkingCopies[0] = getWorkingCopy(\"/Converter15/src/Test.java\",", "-\t\t\"public class Test {\\n\" + ", "+\tworkingCopies = new ICompilationUnit[2];", "+\tworkingCopies[0] = getWorkingCopy(\"/Converter15/src/ParameterSubsetAnnotated.java\",", "+\t\t\"public class ParameterSubsetAnnotated {\\n\" + ", "+\tworkingCopies[1] = getWorkingCopy(\"/Converter15/src/ParameterSubsetClient.java\",", "+\t\t\"public class ParameterSubsetClient {\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"        public void client() {\\n\" + ", "+\t\t\"                ParameterSubsetAnnotated.safeDiv(5, 0);\\n\" + ", "+\t\t\"        }\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"}\\n\"", "+\t);", "-\tCompilationUnit unit = (CompilationUnit) runConversion(workingCopies[0], true/*bindings*/, false/*no statement recovery*/, true/*bindings recovery*/);", "-\tMethodDeclaration methodDeclaration = null;", "-\tswitch(unit.getAST().apiLevel()) {", "-\t\tcase AST.JLS2 :", "-\t\t\tmethodDeclaration = (MethodDeclaration) getASTNode(unit, 0, 0);", "-\t\t\tbreak;", "-\t\tcase AST.JLS3 :", "-\t\t\tmethodDeclaration = (MethodDeclaration) getASTNode(unit, 0, 1);", "-\t}", "-\tassertNotNull(\"No method declaration\", methodDeclaration);", "+\tCompilationUnit unit = (CompilationUnit) runConversion(workingCopies[1], true/*bindings*/, false/*no statement recovery*/, true/*bindings recovery*/);", "+\tMethodDeclaration methodDeclaration = (MethodDeclaration) getASTNode(unit, 0, 0);", "+\tExpressionStatement statement = (ExpressionStatement) methodDeclaration.getBody().statements().get(0);", "+\tMethodInvocation methodInvocation = (MethodInvocation) statement.getExpression();", "-\t\t\"@LTest$NonZero;\\n\",", "-\t\tmethodDeclaration.resolveBinding()", "+\t\t\"@LParameterSubsetAnnotated$NonZero;\\n\",", "+\t\tmethodInvocation.resolveMethodBinding()"]}], "num": 14244}