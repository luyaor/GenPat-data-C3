{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f2d0ee18a3565f9e8bae6b3a099350bc", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38543a77d86701e4562b5dc0377978ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceTests.java", "commitBeforeChange": "5281f7a1d02f4134760334f239cbffb833f0ed1c", "commitAfterChange": "b8222e0e4564cc4472bb2fdfd410e7de68bbf0fa", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tprotected File buildUsingBatchCompiler(String options) throws IOException", "signatureAfterChange": " \tprotected void buildUsingBatchCompiler(String options) throws IOException", "diff": ["-\tprotected File buildUsingBatchCompiler(String options) throws IOException {", "+\tprotected void buildUsingBatchCompiler(String options) throws IOException {", "+\t\tPrintWriter out = new PrintWriter(new StringWriter());", "+\t\tPrintWriter err = new PrintWriter(new StringWriter());", "-\t\t\tMain.compile(cmdLine, new PrintWriter(new StringWriter()), new PrintWriter(new StringWriter()));", "+\t\t\tMain main = new Main(out, err, false);", "+\t\t\tmain.compile(Main.tokenize(cmdLine));", "+\t\tint warnings = 0;", "+\t\t\trunGc();", "-\t\t\tMain.compile(cmdLine, new PrintWriter(new StringWriter()), new PrintWriter(new StringWriter()));", "+\t\t\tMain main = new Main(out, err, false);", "+\t\t\tmain.compile(Main.tokenize(cmdLine));", "+\t\t\twarnings = main.globalWarningsCount;", "-\t\treturn new File(logs);", "+\t\t// Store warning", "+\t\tif (warnings>0) {", "+\t\t\tSystem.out.println(\"\\t- \"+warnings+\" warnings found while performing batch compilation.\");", "+\t\t}", "+\t\tif (this.scenarioComment == null) {", "+\t\t\tthis.scenarioComment = new StringBuffer(\"[\"+TEST_POSITION+\"]\");", "+\t\t} else {", "+\t\t\tthis.scenarioComment.append(' ');", "+\t\t}", "+\t\tthis.scenarioComment.append(\"warn=\");", "+\t\tthis.scenarioComment.append(warnings);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43995d5b2a145efb4a624872077bdd8c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "4c1d4b601e686baad6c5a6a92ddbbebe0b64a62d", "commitAfterChange": "efbaf5f01b1dd1c4f8135936aa48ce411ca71c6c", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 108, "signatureBeforeChange": " \tpublic boolean visit(SwitchStatement switchStatement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(SwitchStatement switchStatement, BlockScope scope)", "diff": ["+\t\t\t\t\tif (wasACase) {", "+\t\t\t\t\t\tthis.scribe.printNewLine();", "+\t\t\t\t\t}", "+\t\t\t\t\tthis.scribe.printTrailingComment();", "+\t\t\t\t\tif (wasACase) {", "+\t\t\t\t\t\tthis.scribe.printNewLine();", "+\t\t\t\t\t}", "+\t\t\t\t} else if (statement instanceof Block) {", "+\t\t\t\t\tString bracePosition;", "+\t\t\t\t\tif (wasACase) {", "+\t\t\t\t\t\tif (this.preferences.indent_switchstatements_compare_to_cases) {", "+\t\t\t\t\t\t\tthis.scribe.unIndent();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbracePosition =\tthis.preferences.brace_position_for_block_in_case;", "+\t\t\t\t\t\tformatBlock((Block) statement, scope, bracePosition, this.preferences.insert_space_after_colon_in_case);", "+\t\t\t\t\t\tif (this.preferences.indent_switchstatements_compare_to_cases) {", "+\t\t\t\t\t\t\tthis.scribe.indent();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tbracePosition =\tthis.preferences.brace_position_for_block;", "+\t\t\t\t\t\tformatBlock((Block) statement, scope, bracePosition, this.preferences.insert_space_before_opening_brace_in_block);", "+\t\t\t\t\t}", "+\t\t\t\t\twasAStatement = true;", "+\t\t\t\t\twasACase = false;", "+\t\t\t\t\tthis.scribe.printNewLine();", "+\t\t\t\t\tthis.scribe.printNewLine();", "+\t\t\t\t\t\t\t\tthis.scribe.printNewLine();", "+\t\t\t\t\t\t\tthis.scribe.printNewLine();", "+\t\t\t\t\t\tthis.scribe.printNewLine();", "+\t\t\t\t} else if (!wasACase) {", "+\t\t\t\t\tthis.scribe.printNewLine();", "-\t\t\t\tthis.scribe.printNewLine();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91ec2fd63e54f2874539d86f63a08c10", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "148d909d5d1bb379a215402c9ae6d0c2993ad9d1", "commitAfterChange": "918eef64ca6418a800e340287b8f92eb641467b8", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " \tpublic boolean visit(IfStatement ifStatement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(IfStatement ifStatement, BlockScope scope)", "diff": ["-\t\t\t\t\tif (elseStatement == null || this.preferences.insert_new_line_in_control_statements) {", "-\t\t\t\t\t\tthis.scribe.printTrailingComment();", "+\t\t\t\t\tif (elseStatement != null && this.preferences.insert_new_line_in_control_statements) {", "+\t\t\t\t\tthis.scribe.printTrailingComment();", "-\t\t\t\tthis.scribe.printTrailingComment();", "-\t\t\t\tthis.scribe.printNewLine();", "+\t\t\t\tif (elseStatement != null) {", "+\t\t\t\t\tthis.scribe.printNewLine();", "+\t\t\t\t}", "-\t\t\t\tthis.scribe.printTrailingComment();", "+\t\t\t\t\tthis.scribe.printTrailingComment();", "-\t\t\t\tthis.scribe.printTrailingComment();", "-\t\t\t\tthis.scribe.printNewLine();", "+\t\t\t\tif (elseStatement != null) {", "+\t\t\t\t\tthis.scribe.printNewLine();", "+\t\t\t\t}", "-\t\t\tthis.scribe.printTrailingComment();", "+\t\t\tif (this.preferences.insert_new_line_in_control_statements) {", "+\t\t\t\tthis.scribe.printTrailingComment();", "+\t\t\t}", "-\t\t\t\t\tthis.scribe.printTrailingComment();", "-\t\t\t\t\tthis.scribe.printTrailingComment();", "+\t\t\t\t\tthis.scribe.printTrailingComment();", "-\t\t\t\tthis.scribe.printTrailingComment();", "-\t\t\t\tthis.scribe.printNewLine();", "-\t\t\t\tthis.scribe.printTrailingComment();", "-\t\t\t\tthis.scribe.printTrailingComment();", "-\t\t\t\tthis.scribe.printNewLine();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee1760a6f4f9f7140cc0232fffd760a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "1fd4391b9d956e4b222e75746a12248fe673ae09", "commitAfterChange": "0ac06ace387f6f7ca79dcd41a12a6564b157c4e4", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 41, "signatureBeforeChange": "  \t\tpublic void printStats(Main main)", "signatureAfterChange": "  \t\tpublic void printStats()", "diff": ["-\t\tpublic void printStats(Main main) {", "-\t\t\tfinal boolean isTimed = main.timing;", "+\t\tpublic void printStats() {", "+\t\t\tfinal boolean isTimed = this.main.timing;", "-\t\t\t\tlong time = System.currentTimeMillis() - main.startTime;", "-\t\t\t\tthis.logTiming(time, main.lineCount);", "-\t\t\t\tif (main.times != null) {", "-\t\t\t\t\tmain.times[main.timesCounter++] = time;", "+\t\t\t\tlong time = System.currentTimeMillis() - this.main.startTime;", "+\t\t\t\tthis.logTiming(time, this.main.lineCount);", "+\t\t\t\tif (this.main.times != null) {", "+\t\t\t\t\tthis.main.times[this.main.timesCounter++] = time;", "-\t\t\tif (main.globalProblemsCount > 0) {", "-\t\t\t\tthis.logProblemsSummary(main.globalProblemsCount, main.globalErrorsCount, main.globalWarningsCount, main.globalTasksCount);", "+\t\t\tif (this.main.globalProblemsCount > 0) {", "+\t\t\t\tthis.logProblemsSummary(this.main.globalProblemsCount, this.main.globalErrorsCount, this.main.globalWarningsCount, main.globalTasksCount);", "-\t\t\tif (main.exportedClassFilesCounter != 0", "-\t\t\t\t\t&& (main.showProgress || isTimed || main.verbose)) {", "-\t\t\t\tthis.logNumberOfClassFilesGenerated(main.exportedClassFilesCounter);", "+\t\t\tif (this.main.exportedClassFilesCounter != 0", "+\t\t\t\t\t&& (this.main.showProgress || isTimed || this.main.verbose)) {", "+\t\t\t\tthis.logNumberOfClassFilesGenerated(this.main.exportedClassFilesCounter);", "+\t\t}"]}], "num": 20360}