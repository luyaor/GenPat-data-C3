{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1e66452d7b4506aea3044be3a48789ac", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "243287f047aa9c8bf653503181526171", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "00cd0ca8a53543548dcf06256caed9b4099fa9b2", "commitAfterChange": "a12e2a9c36a34086d79057a03aa281994c8caaa9", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic static boolean matchesWithIgnoreCase(String[] compoundName, String pattern)", "signatureAfterChange": " \tpublic static char[] concatCompoundNameToCharArray(String[] compoundName)", "diff": ["+\t */", "+\tpublic static char[] concatCompoundNameToCharArray(String[] compoundName) {", "+\t\tif (compoundName == null) return null;", "+\t\tint length = compoundName.length;", "+\t\tif (length == 0) return new char[0];", "+\t\tint size = 0;", "+\t\tfor (int i=0; i<length; i++) {", "+\t\t\tsize += compoundName[i].length();", "+\t\t}", "+\t\tchar[] compoundChars = new char[size+length-1];", "+\t\tint pos = 0;", "+\t\tfor (int i=0; i<length; i++) {", "+\t\t\tString name = compoundName[i];", "+\t\t\tif (i > 0) compoundChars[pos++] = '.';", "+\t\t\tint nameLength = name.length();", "+\t\t\tname.getChars(0, nameLength, compoundChars, pos);", "+\t\t\tpos += nameLength;", "+\t\t}", "+\t\treturn compoundChars;", "+\t}", "-\t */", "-\tpublic static boolean matchesWithIgnoreCase(String[] compoundName, String pattern) {", "-\t\tif (pattern.equals(\"*\")) return true; //$NON-NLS-1$", "-\t\tint nameLength = compoundName.length;", "-\t\tif (pattern.length() == 0) return nameLength == 0;", "-\t\tif (nameLength == 0) return false;", "-\t\tint length = nameLength-1;", "-\t\tfor (int i=0; i<nameLength; i++) {", "-\t\t\tlength += compoundName[i].length();", "-\t\t}", "-\t\tchar[] compoundChars = new char[length];", "-\t\tint pos = 0;", "-\t\tfor (int i=0; i<nameLength; i++) {", "-\t\t\tif (pos > 0) compoundChars[pos++] = '.';", "-\t\t\tchar[] array = compoundName[i].toCharArray();", "-\t\t\tint size = array.length;", "-\t\t\tSystem.arraycopy(array, 0, compoundChars, pos, size);", "-\t\t\tpos += size;", "-\t\t}", "-\t\treturn CharOperation.match(pattern.toCharArray(), compoundChars, false);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccef77a63d790697f71c1b13e2b65d39", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SearchableEnvironment.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \tpublic NameEnvironmentAnswer findType(char[][] compoundTypeName)", "signatureAfterChange": "\r public NameEnvironmentAnswer findType(char[][] compoundTypeName)", "diff": ["+ */\r", "+public NameEnvironmentAnswer findType(char[][] compoundTypeName) {\r", "+\tif (compoundTypeName == null)\r", "+\tint length = compoundTypeName.length;\r", "+\tif (length == 1)\r", "+\t\treturn find(new String(compoundTypeName[0]), null);\r", "+\tStringBuffer buffer = new StringBuffer(length * 6);\r", "+\tint lengthM1 = length - 1;\r", "+\tfor(int i = 0; i < lengthM1; i++) {\r", "+\t\tbuffer.append(compoundTypeName[i]);\r", "+\t\tif (i + 1 != lengthM1)\r", "+\t\t\tbuffer.append('.');\r", "+\tString className = new String(compoundTypeName[lengthM1]);\r", "+\treturn find(className, buffer.toString());\r", "+}\r", "-\t */\r", "-\tpublic NameEnvironmentAnswer findType(char[][] compoundTypeName) {\r", "-\t\tif (compoundTypeName == null)\r", "-\t\t\treturn null;\r", "-\t\tint length = compoundTypeName.length;\r", "-\t\tif (length == 1)\r", "-\t\t\treturn find(new String(compoundTypeName[0]), null);\r", "-\t\tStringBuffer buffer = new StringBuffer(length * 6);\r", "-\t\tint lengthM1 = length - 1;\r", "-\t\tfor (int i = 0; i < lengthM1; i++) {\r", "-\t\t\tbuffer.append(compoundTypeName[i]);\r", "-\t\t\tif (i + 1 != lengthM1)\r", "-\t\t\t\tbuffer.append(\".\");\r", "-\t\t}\r", "-\t\tString className = new String(compoundTypeName[lengthM1]);\r", "-\t\treturn find(className, buffer.toString());\r"]}], "num": 24095}