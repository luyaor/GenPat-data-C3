{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "88dd526d3e28cf6cface6478b577c6b4", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1471bd707c78658c4cdfb20b1df39c12", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "14ced256210e2be1ddbfa96af4bbf52bf7f64e6e", "commitAfterChange": "2e69e8a11cb05780970de056d7605d61449c8411", "methodNumberBeforeChange": 213, "methodNumberAfterChange": 213, "signatureBeforeChange": " public void test412284c()", "signatureAfterChange": " public void test412284c()", "diff": ["-", "+\t\t\"The blank final field t may not have been initialized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\"\tt += 3;\\n\" + ", "+\t\t\"\t^\\n\" + ", "-\t\t\"3. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\"4. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\"\tt += 4;\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"The blank final field t may not have been initialized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. ERROR in X.java (at line 9)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e855e9e557f7eb3110b27fba92751407", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GrammarCoverageTests308.java", "commitBeforeChange": "62a40ae820eb3f4d9fe13acbfcd6c17882e53721", "commitAfterChange": "6e5d8fb1fa59c43c60c58828e1e292aaafa3465f", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic void test034() throws Exception", "signatureAfterChange": " \tpublic void test034() throws Exception", "diff": ["-\t\t\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\t\"\tY y1 = @Marker x.new @Marker Y();\\n\" + ", "+\t\t\t\t\"\t                      ^^^^^^\\n\" + ", "+\t\t\t\t\"Marker cannot be resolved to a type\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\t\t\"3. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"4. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"5. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\tY y2 = @Marker x.new <String> @Marker Y();\\n\" + ", "+\t\t\t\t\"\t                               ^^^^^^\\n\" + ", "+\t\t\t\t\"Marker cannot be resolved to a type\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f548582b3a3840f98a86afcc2fe60184", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 189, "methodNumberAfterChange": 189, "signatureBeforeChange": "     public void test183()", "signatureAfterChange": "     public void test183()", "diff": ["-    \t\t\"y.initialize cannot be resolved or is not a field\\n\" + ", "+    \t\t\"Zork cannot be resolved to a type\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"2. WARNING in X.java (at line 3)\\n\" + ", "+    \t\t\"\tint i = y.initialize;\\n\" + ", "+    \t\t\"\t          ^^^^^^^^^^\\n\" + ", "+    \t\t\"The field Y.initialize is deprecated\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"2. WARNING in Y.java (at line 6)\\n\" + ", "+    \t\t\"\tpublic Zork initialize;\\n\" + ", "+    \t\t\"\t            ^^^^^^^^^^\\n\" + ", "+    \t\t\"The deprecated field Y.initialize should be annotated with @Deprecated\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb660342dd380b6c0adaa194b1095e73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/DefaultMethodsTest.java", "commitBeforeChange": "2adf5e7af76ae05ae6976726576af8c12845ba88", "commitAfterChange": "f8ad0d5bfc02915772c8bb705662d0256beab7ec", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void testModifiers3()", "signatureAfterChange": " \tpublic void testModifiers3()", "diff": ["-\t\t\t\"    native void foo3() default {}\\n\" +", "-\t\t\t\"    static void foo4() default {}\\n\" +", "+\t\t\t\"    native default void foo3() {}\\n\" +", "+\t\t\t\"    default native void foo4() {}\\n\" +", "+\t\t\t\"    static default void foo5() {}\\n\" +", "+\t\t\t\"    default static void foo6() {}\\n\" +", "-\t\t\t\"\tnative void foo3() default {}\\n\" +", "-\t\t\t\"\t            ^^^^^^\\n\" +", "+\t\t\t\"\tnative default void foo3() {}\\n\" +", "+\t\t\t\"\t                    ^^^^^^\\n\" +", "-\t\t\t\"\tstatic void foo4() default {}\\n\" +", "-\t\t\t\"\t            ^^^^^^\\n\" +", "+\t\t\t\"\tdefault native void foo4() {}\\n\" +", "+\t\t\t\"\t                    ^^^^^^\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"5. ERROR in I.java (at line 6)\\n\" +", "+\t\t\t\"\tstatic default void foo5() {}\\n\" +", "+\t\t\t\"\t                    ^^^^^^\\n\" +", "+\t\t\t\"Illegal modifier for the interface method foo5; only public, abstract, strictfp & synchronized are permitted\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"6. ERROR in I.java (at line 7)\\n\" +", "+\t\t\t\"\tdefault static void foo6() {}\\n\" +", "+\t\t\t\"\t                    ^^^^^^\\n\" +", "+\t\t\t\"Illegal modifier for the interface method foo6; only public, abstract, strictfp & synchronized are permitted\\n\" +"]}], "num": 39787}