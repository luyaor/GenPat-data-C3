{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "76dbab0dcdf2af93ac69d20b10be2537", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f5c2cf1ea051f86491b0cb2fcc111d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "fe905e29a608f61f2afe181f4c1e4e27bb2b95dc", "commitAfterChange": "53a7cfa9bf2a3a1ade921d716dbdc58a4bfc35d4", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public IJavaElement[] codeSelect(int offset, int length, WorkingCopyOwner owner) throws JavaModelException", "signatureAfterChange": " public IJavaElement[] codeSelect(int offset, int length, WorkingCopyOwner owner) throws JavaModelException", "diff": ["-\t    String topLevelTypeName = getTopLevelTypeName();", "-\t\tBasicCompilationUnit cu = new BasicCompilationUnit(contents, null, topLevelTypeName + SUFFIX_STRING_java);", "+\t    BinaryType type = (BinaryType) getType();", "+\t\tBasicCompilationUnit cu = new BasicCompilationUnit(contents, null, type.sourceFileName((IBinaryType) type.getElementInfo()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a32d87f7a5ae2e3be37b45e9df0f28b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/src/org/eclipse/jdt/compiler/apt/tests/ModelTests.java", "commitBeforeChange": "6942ba89260ced8761513584f97535ed598c868d", "commitAfterChange": "2254b84309b2e5733188a240f2a612a1b002f2ba", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tprivate void internalTestElement(JavaCompiler compiler) throws IOException", "signatureAfterChange": " \tprivate void internalTest(JavaCompiler compiler, Class<? extends Processor> processor) throws IOException", "diff": ["-\tprivate void internalTestElement(JavaCompiler compiler) throws IOException {", "-\t\tSystem.clearProperty(ELEMENTPROCNAME);", "+\tprivate void internalTest(JavaCompiler compiler, Class<? extends Processor> processor) throws IOException {", "+\t\tSystem.clearProperty(processor.getName());", "-\t\toptions.add(\"-A\" + ELEMENTPROCNAME);", "+\t\toptions.add(\"-A\" + processor.getName());", "-\t\tassertEquals(\"succeeded\", System.getProperty(ELEMENTPROCNAME));", "+\t\tassertEquals(\"succeeded\", System.getProperty(processor.getName()));"]}], "num": 9693}