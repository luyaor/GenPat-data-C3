{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5ac35738138589f367fda7fad8b60ba9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6bf120ba0a4b9fc9c9d4b424586bf69", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 658, "methodNumberAfterChange": 658, "signatureBeforeChange": "\t\t \tpublic void test654()", "signatureAfterChange": "\t\t \tpublic void test654()", "diff": ["+\t        \"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tMap myMap = new HashMap();\\n\" + ", "+\t\t\t\"\t^^^\\n\" + ", "+\t\t\t\"Type safety: Map is a raw type. References to generic type Map<K,V> should be parameterized\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tMap myMap = new HashMap();\\n\" + ", "+\t\t\t\"\t                ^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: HashMap is a raw type. References to generic type HashMap<K,V> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 6)\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tfor (Map.Entry e : myMap.entrySet())\\n\" + ", "+\t\t\t\"\t     ^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Map.Entry is a raw type. References to generic type Map<K,V>.Entry<K,V> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. ERROR in X.java (at line 8)\\n\" + ", "-\t\t\t\"3. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"6. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tSet<Map.Entry> set = myMap.entrySet();\\n\" + ", "+\t\t\t\"\t    ^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Map.Entry is a raw type. References to generic type Map<K,V>.Entry<K,V> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"7. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"8. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"\tfor (Map.Entry e : set)\\n\" + ", "+\t\t\t\"\t     ^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Map.Entry is a raw type. References to generic type Map<K,V>.Entry<K,V> should be parameterized\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dca632c17df24a576e01cdc68cdfa871", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 534, "methodNumberAfterChange": 534, "signatureBeforeChange": " \tpublic void test530()", "signatureAfterChange": " \tpublic void test530()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tabstract class Foo<T extends List>\\n\" + ", "+\t\t\t\"\t                             ^^^^\\n\" + ", "+\t\t\t\"Type safety: List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tList l = new LinkedList();\\n\" + ", "+\t\t\t\"\t^^^^\\n\" + ", "+\t\t\t\"Type safety: List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tList l = new LinkedList();\\n\" + ", "+\t\t\t\"\t             ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: LinkedList is a raw type. References to generic type LinkedList<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 9)\\n\" + ", "-\t\t\t\"2. WARNING in X.java (at line 15)\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 13)\\n\" + ", "+\t\t\t\"\tpublic class X extends Foo<ArrayList>\\n\" + ", "+\t\t\t\"\t                           ^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: ArrayList is a raw type. References to generic type ArrayList<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. WARNING in X.java (at line 15)\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"7. WARNING in X.java (at line 15)\\n\" + ", "+\t\t\t\"\tvoid foo(ArrayList l)\\n\" + ", "+\t\t\t\"\t         ^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: ArrayList is a raw type. References to generic type ArrayList<E> should be parameterized\\n\" + "]}], "num": 49351}