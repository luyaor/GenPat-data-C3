{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "07c72d735712ad88693e37819e2707e6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e2eaafceefbaff1ee806fde46beff90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/internal/compiler/tool/EclipseCompilerImpl.java", "commitBeforeChange": "ccd12469d7fc21a8e1a0a597451a059df56002ad", "commitAfterChange": "9454e9fdd85131c7503e9846e1e6c7d9c91dd2fb", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \t@Override \t@SuppressWarnings(\"unchecked\") \tprotected void setPaths(ArrayList bootclasspaths, \t\t\tString sourcepathClasspathArg, \t\t\tArrayList sourcepathClasspaths, \t\t\tArrayList classpaths, \t\t\tArrayList extdirsClasspaths, \t\t\tArrayList endorsedDirClasspaths, \t\t\tString customEncoding) throws InvalidInputException", "signatureAfterChange": "  \t@Override \t@SuppressWarnings(\"unchecked\") \tprotected void setPaths(ArrayList bootclasspaths, \t\t\tString sourcepathClasspathArg, \t\t\tArrayList sourcepathClasspaths, \t\t\tArrayList classpaths, \t\t\tArrayList extdirsClasspaths, \t\t\tArrayList endorsedDirClasspaths, \t\t\tString customEncoding) throws InvalidInputException", "diff": ["-\t\t\t\tfileSystemClasspaths.add(FileSystem.getClasspath(", "-\t\t\t\t\tfile.getAbsolutePath(),", "-\t\t\t\t\tnull,", "-\t\t\t\t\tnull));", "+\t\t\t\tClasspath classpath = FileSystem.getClasspath(", "+\t\t\t\t\t\tfile.getAbsolutePath(),", "+\t\t\t\t\t\tnull,", "+\t\t\t\t\t\tnull);", "+\t\t\t\tif (classpath != null) {", "+\t\t\t\t\tfileSystemClasspaths.add(classpath);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d2671ebc7f3438da0bf71de0472d219", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/internal/compiler/tool/EclipseCompiler.java", "commitBeforeChange": "2e8a793e6520c6e6e15de28a5b1851796222737d", "commitAfterChange": "3d8fd8b145b9fa1f2c27b19a7df3e728982e46e7", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  \t@Override \t@SuppressWarnings(\"unchecked\") \tprotected void setPaths(ArrayList bootclasspaths, \t\t\tString sourcepathClasspathArg, \t\t\tArrayList sourcepathClasspaths, \t\t\tArrayList classpaths, \t\t\tArrayList extdirsClasspaths, \t\t\tArrayList endorsedDirClasspaths, \t\t\tString customEncoding) throws InvalidInputException", "signatureAfterChange": "  \t@Override \t@SuppressWarnings(\"unchecked\") \tprotected void setPaths(ArrayList bootclasspaths, \t\t\tString sourcepathClasspathArg, \t\t\tArrayList sourcepathClasspaths, \t\t\tArrayList classpaths, \t\t\tArrayList extdirsClasspaths, \t\t\tArrayList endorsedDirClasspaths, \t\t\tString customEncoding) throws InvalidInputException", "diff": ["-\t\t\t\tfileSystemClasspaths.add(FileSystem.getClasspath(", "+\t\t\t\tClasspath classpath = FileSystem.getClasspath(", "-\t\t\t\t\tnull));", "+\t\t\t\t\tnull);", "+\t\t\t\tif (classpath != null) {", "+\t\t\t\t\tfileSystemClasspaths.add(classpath);", "+\t\t\t\t}", "-\t\t\t\tfileSystemClasspaths.add(FileSystem.getClasspath(", "+\t\t\t\tClasspath classpath = FileSystem.getClasspath(", "-\t\t\t\t\tnull));", "+\t\t\t\t\tnull);", "+\t\t\t\tif (classpath != null) {", "+\t\t\t\t\tfileSystemClasspaths.add(classpath);", "+\t\t\t\t}"]}], "num": 34831}