{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a0c6917413ff30520d314f445fe29cd3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e41d9256dcfbc3acb778f32d6688e82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "1784048e951cac8e5c6590cc5827817757e6384e", "commitAfterChange": "4a48abb3b4027036bdeac61104059b6c83710144", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tprivate void parseParam()", "signatureAfterChange": " \tprivate boolean parseParam()", "diff": ["-\tprivate void parseParam() {", "+\tprivate boolean parseParam() {", "-\t\t\tint token = readTokenAndConsume();", "+\t\t\tint token = readToken();", "+\t\t\t\t\tconsumeToken();", "-\t\t\t\t\tpushParamName(argument);", "-\t\t\t\t\treturn;", "+\t\t\t\t\treturn pushParamName(argument);", "-\t\t\t\t\t//end = scanner.eofPosition-2;", "-\t\t\t\t\tend = this.scanner.getCurrentTokenEndPosition();", "+\t\t\t\t\tend = getEndPosition();", "+\t\t\t\t\tif (end < start) start = this.tagSourceStart;", "-\t\tconsumeToken();", "+\t\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ede958630bc638070b96108b0b42987", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AnnotationParser.java", "commitBeforeChange": "aabd59e4934a861167bc5ad69597bc9fd97e06dc", "commitAfterChange": "4ed2786f22dd00c9c1f7773433c3548c8c0f6fc3", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tvoid parseThrows()", "signatureAfterChange": " \t \tprivate void parseThrows() throws InvalidInputException", "diff": ["+\tprivate void parseThrows() throws InvalidInputException {", "+\t\tint start = this.scanner.currentPosition;", "+\t\ttry {", "+\t\t\tTypeReference typeRef = parseQualifiedName(true);", "+\t\t\tif (typeRef == null) {", "+\t\t\t\tthis.sourceParser.problemReporter().annotationMissingThrowsClassName(this.tagSourceStart, this.tagSourceEnd);", "+\t\t\t}", "+\t\t\telse {", "+\t\t\t\tpushThrowName(typeRef);", "+\t\t\t}", "+\t\t}", "+\t\tcatch (InvalidInputException ex) {", "+\t\t\tthis.sourceParser.problemReporter().annotationInvalidThrowsClass(start, getEndPosition());", "+\t\t}", "+\t\tfinally {", "+\t\t\tconsumeToken();", "+\t\t}", "-\t", "-\tvoid parseThrows() {", "-\t\t// to be continued"]}], "num": 44307}