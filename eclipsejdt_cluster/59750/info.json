{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b66cbbbda65534fee5397b9b4148b1af", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29a6d0240f4fc7b5777cd71faa529389", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "c9651dd760925de2ad18a518e1aebff7786be226", "commitAfterChange": "473c73ddfee69cf3ff77433ec4aa07963775b0ee", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  \tpublic NumberLiteral convert(org.eclipse.jdt.internal.compiler.ast.DoubleLiteral expression)", "signatureAfterChange": "  \tpublic NumberLiteral convert(org.eclipse.jdt.internal.compiler.ast.DoubleLiteral expression)", "diff": ["-\t\tchar[] tokens = new char[length];", "-\t\tSystem.arraycopy(this.compilationUnitSource, sourceStart, tokens, 0, length);", "-\t\tNumberLiteral literal = this.ast.newNumberLiteral(new String(tokens));", "+\t\tNumberLiteral literal = this.ast.newNumberLiteral(new String(this.compilationUnitSource, sourceStart, length));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f7909d53347cbcbe8586f82116ca987", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "c9651dd760925de2ad18a518e1aebff7786be226", "commitAfterChange": "473c73ddfee69cf3ff77433ec4aa07963775b0ee", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "  \tpublic NumberLiteral convert(org.eclipse.jdt.internal.compiler.ast.IntLiteralMinValue expression)", "signatureAfterChange": "  \tpublic NumberLiteral convert(org.eclipse.jdt.internal.compiler.ast.IntLiteralMinValue expression)", "diff": ["-\t\tchar[] tokens = new char[length];", "-\t\tSystem.arraycopy(this.compilationUnitSource, sourceStart, tokens, 0, length);", "-\t\tNumberLiteral literal = this.ast.newNumberLiteral(new String(tokens));", "+\t\tNumberLiteral literal = this.ast.newNumberLiteral(new String(this.compilationUnitSource, sourceStart, length));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1e6dae1875d7de1355687ed78084ee4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "c9651dd760925de2ad18a518e1aebff7786be226", "commitAfterChange": "473c73ddfee69cf3ff77433ec4aa07963775b0ee", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "  \tpublic NumberLiteral convert(org.eclipse.jdt.internal.compiler.ast.LongLiteralMinValue expression)", "signatureAfterChange": "  \tpublic NumberLiteral convert(org.eclipse.jdt.internal.compiler.ast.LongLiteralMinValue expression)", "diff": ["-\t\tchar[] tokens = new char[length];", "-\t\tSystem.arraycopy(this.compilationUnitSource, sourceStart, tokens, 0, length);", "-\t\tNumberLiteral literal = this.ast.newNumberLiteral(new String(tokens));", "+\t\tNumberLiteral literal = this.ast.newNumberLiteral(new String(this.compilationUnitSource, sourceStart, length));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c134ad1ad3401a1f009440008892b2e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "c9651dd760925de2ad18a518e1aebff7786be226", "commitAfterChange": "473c73ddfee69cf3ff77433ec4aa07963775b0ee", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "  \tpublic NumberLiteral convert(org.eclipse.jdt.internal.compiler.ast.IntLiteral expression)", "signatureAfterChange": "  \tpublic NumberLiteral convert(org.eclipse.jdt.internal.compiler.ast.IntLiteral expression)", "diff": ["-\t\tchar[] tokens = new char[length];", "-\t\tSystem.arraycopy(this.compilationUnitSource, sourceStart, tokens, 0, length);", "-\t\tNumberLiteral literal = this.ast.newNumberLiteral(new String(tokens));", "+\t\tNumberLiteral literal = this.ast.newNumberLiteral(new String(this.compilationUnitSource, sourceStart, length));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6b9470aebd5ddca4545d7f78841e680", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "c9651dd760925de2ad18a518e1aebff7786be226", "commitAfterChange": "473c73ddfee69cf3ff77433ec4aa07963775b0ee", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "  \tpublic NumberLiteral convert(org.eclipse.jdt.internal.compiler.ast.FloatLiteral expression)", "signatureAfterChange": "  \tpublic NumberLiteral convert(org.eclipse.jdt.internal.compiler.ast.FloatLiteral expression)", "diff": ["-\t\tchar[] tokens = new char[length];", "-\t\tSystem.arraycopy(this.compilationUnitSource, sourceStart, tokens, 0, length);", "-\t\tNumberLiteral literal = this.ast.newNumberLiteral(new String(tokens));", "+\t\tNumberLiteral literal = this.ast.newNumberLiteral(new String(this.compilationUnitSource, sourceStart, length));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f75dee98ccdbe8aa4ef1ce9446ceaffb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "d2c440c4d75459a29772e576816c3ab1f42954d0", "commitAfterChange": "937789ed834184c7a38322f47917f9a78ddaed41", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic Name convert(QualifiedNameReference nameReference)", "signatureAfterChange": "  \tpublic Name convert(QualifiedNameReference nameReference)", "diff": ["-\t\tchar[][] typeName = nameReference.tokens;", "-\t\tlong[] positions = scanAllIdentifiersPositions(nameReference.sourceStart, nameReference.sourceEnd, typeName.length);", "-\t\treturn setQualifiedNameNameAndSourceRanges(typeName, positions, nameReference);", "+\t\treturn setQualifiedNameNameAndSourceRanges(nameReference.tokens, nameReference.sourcePositions, nameReference);"]}], "num": 59750}