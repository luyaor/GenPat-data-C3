{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0e69f62b89714b3a3eb7be6a1facfbda", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2218b838071cc7d1dcf682212960b4f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/InternalExtendedCompletionContext.java", "commitBeforeChange": "fd3ab9c75de2623a0c445ae20bbf9555b802842b", "commitAfterChange": "dc82ed373b675aa38d1bde68b062faa0d442c79e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tprivate TypeBinding getTypeFromSignature(String typeSignature, Scope scope)", "signatureAfterChange": " \t \tprivate TypeBinding getTypeFromSignature(String typeSignature, Scope scope)", "diff": ["-\t\t\ttypeVariables = methodDeclaration.binding.typeVariables;", "+\t\t\tTypeParameter[] typeParameters = methodDeclaration.typeParameters();", "+\t\t\tif (typeParameters != null && typeParameters.length > 0) {", "+\t\t\t\tint length = typeParameters.length;", "+\t\t\t\tint count = 0;", "+\t\t\t\ttypeVariables = new TypeVariableBinding[length];", "+\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\tif (typeParameters[i].binding != null) {", "+\t\t\t\t\t\ttypeVariables[count++] = typeParameters[i].binding;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\tif (count != length) {", "+\t\t\t\t\tSystem.arraycopy(typeVariables, 0, typeVariables = new TypeVariableBinding[count], 0, count);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dc780041f780a0b9cd6d567fb77c889", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/FileSystem.java", "commitBeforeChange": "ed216bad8ac7db85d4e5d7fd2492a6cf18c498b9", "commitAfterChange": "45e574c9370a9e1fe1175a8641ff2dc7a4b4a6e7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " FileSystem(Classpath[] classpaths, String[] initialFileNames)", "signatureAfterChange": " FileSystem(Classpath[] paths, String[] initialFileNames)", "diff": ["-FileSystem(Classpath[] classpaths, String[] initialFileNames) {", "-\tthis.classpaths = classpaths;", "+FileSystem(Classpath[] paths, String[] initialFileNames) {", "+\tfinal int length = paths.length;", "+\tint counter = 0;", "+\tthis.classpaths = new FileSystem.Classpath[length];", "+\tfor (int i = 0; i < length; i++) {", "+\t\tfinal Classpath classpath = paths[i];", "+\t\ttry {", "+\t\t\tclasspath.initialize();", "+\t\t\tthis.classpaths[counter++] = classpath;", "+\t\t} catch(IOException exception) {", "+\t\t\t// ignore", "+\t\t}", "+\t}", "+\tif (counter != length) {", "+\t\t// should not happen", "+\t\tSystem.arraycopy(this.classpaths, 0, (this.classpaths = new FileSystem.Classpath[counter]), 0, counter);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71edfd2558124cac51998d382ea38df4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "8457dc17f56c4fff3fa2589438e210393d270f41", "commitAfterChange": "60249e9dd075ec142e7f7240fcef068b0fddb812", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  public String toString()", "signatureAfterChange": "  public String toString()", "diff": ["+\t\t\tString[] paths = new String[this.relativePaths.length];", "+\t\t\tint index = 0;", "-\t\t\t\tresult.append(\"\\n\\t\"); //$NON-NLS-1$", "+\t\t\t\tString containerPath;", "-\t\t\t\t\tresult.append(((IFolder) target).getLocation().toOSString());", "+\t\t\t\t\tcontainerPath = ((IFolder) target).getLocation().toOSString();", "-\t\t\t\t\tresult.append(this.containerPaths[i]);", "+\t\t\t\t\tcontainerPath = this.containerPaths[i];", "-\t\t\t\t\tresult.append('/');", "-\t\t\t\t\tresult.append(path);", "+\t\t\t\t\tpaths[index++] = containerPath + '/' + path;", "+\t\t\t\t} else {", "+\t\t\t\t\tpaths[index++] = containerPath;", "+\t\t\tSystem.arraycopy(paths, 0, paths = new String[index], 0, index);", "+\t\t\tUtil.sort(paths);", "+\t\t\tfor (int i = 0; i < index; i++) {", "+\t\t\t\tresult.append(\"\\n\\t\"); //$NON-NLS-1$", "+\t\t\t\tresult.append(paths[i]);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e7270183ee226aff8a489fdf5a06ee3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/FileSystem.java", "commitBeforeChange": "9247f5a1413614555183073da9b25dcae829dcbb", "commitAfterChange": "ec2243f132866e54d9401c9f64dee23249b2b464", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public FileSystem(String[] classpathNames, String[] initialFileNames, String encoding)", "signatureAfterChange": " public FileSystem(String[] classpathNames, String[] initialFileNames, String encoding)", "diff": ["-", "-\tthis(classpathNames, initialFileNames, encoding, null);", "-}", "+\t\tClasspath classpath = getClasspath(classpathNames[i], encoding, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5efc935ae6f0fafec40032daf88730a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceTypeElementInfo.java", "commitBeforeChange": "3cafb99305d503c85758a4587b5b1a2f9d2b1e9c", "commitAfterChange": "0173274d861db8ed84b76cf780f5ec91387bcfeb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r public ISourceType[] getMemberTypes()", "signatureAfterChange": "\r public ISourceType[] getMemberTypes()", "diff": ["-\treturn fMemberTypes;\r", "+\tint length = fChildren.length;\r", "+\tif (length == 0) return NO_TYPES;\r", "+\tISourceType[] memberTypes = new ISourceType[length];\r", "+\tint typeIndex = 0;\r", "+\tfor (int i = 0; i < length; i++) {\r", "+\t\tIJavaElement child = fChildren[i];\r", "+\t\tif (child instanceof SourceType) {\r", "+\t\t\ttry {\r", "+\t\t\t\tISourceType type = (ISourceType)((SourceType)child).getElementInfo();\r", "+\t\t\t\tmemberTypes[typeIndex++] = type;\r", "+\t\t\t} catch (JavaModelException e) {\r", "+\t\t\t}\r", "+\t\t}\r", "+\t}\r", "+\tif (typeIndex == 0) return NO_TYPES;\r", "+\tSystem.arraycopy(memberTypes, 0, memberTypes = new ISourceType[typeIndex], 0, typeIndex);\r", "+\treturn memberTypes;\r"]}], "num": 44314}