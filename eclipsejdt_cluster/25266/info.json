{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1977dac7d3c6c30ff6ca3164eb6e3550", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14f5360647c639e70019dc71ef829e64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/AnnotatableTypeSystem.java", "commitBeforeChange": "8d3c2646ec0224ab936125ae7e1adde5786e1231", "commitAfterChange": "dfa40837336948a1f985e74dddef96333913f44c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic ParameterizedTypeBinding getParameterizedType(ReferenceBinding genericType, TypeBinding[] typeArguments, ReferenceBinding enclosingType, AnnotationBinding [] annotations)", "signatureAfterChange": "  \tpublic ParameterizedTypeBinding getParameterizedType(ReferenceBinding genericType, TypeBinding[] typeArguments, ReferenceBinding enclosingType, AnnotationBinding [] annotations)", "diff": ["-\t\t   type references in source code. Probably need similar treatment for raw types and wildcards ?", "+\t\t   type references in source code.", "-\t\t\t", "+\t\t// generic type is expected to come in unannotated, if it came in with any misattributed annotations, they have been duly re-attributed and it is unannotated now.\t", "+\t\t", "-\t\tTypeBinding[] cachedInfo = (TypeBinding[]) this.annotatedTypes.get(genericType);", "+\t\tTypeBinding keyType = getUnannotatedType(genericType);", "+\t\tTypeBinding[] cachedInfo = (TypeBinding[]) this.annotatedTypes.get(keyType); // promotes better instance sharing", "-\t\t\tthis.annotatedTypes.put(genericType, cachedInfo = new TypeBinding[4]);", "+\t\t\tthis.annotatedTypes.put(keyType, cachedInfo = new TypeBinding[4]);", "-\t\t\tthis.annotatedTypes.put(genericType, cachedInfo);", "+\t\t\tthis.annotatedTypes.put(keyType, cachedInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44d1db1cf9e676436274353383cd1f06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/AnnotatableTypeSystem.java", "commitBeforeChange": "8d3c2646ec0224ab936125ae7e1adde5786e1231", "commitAfterChange": "dfa40837336948a1f985e74dddef96333913f44c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprivate TypeBinding getAnnotatedType(TypeBinding type, TypeBinding enclosingType, TypeBinding [] typeArguments, AnnotationBinding[] annotations)", "signatureAfterChange": " \tprivate TypeBinding getAnnotatedType(TypeBinding type, TypeBinding enclosingType, TypeBinding [] typeArguments, AnnotationBinding[] annotations)", "diff": ["-\t\tTypeBinding[] cachedInfo = (TypeBinding[]) this.annotatedTypes.get(type);", "+\t\tTypeBinding keyType = getUnannotatedType(type);", "+\t\tTypeBinding[] cachedInfo = (TypeBinding[]) this.annotatedTypes.get(keyType);", "-\t\t\tthis.annotatedTypes.put(type, cachedInfo = new TypeBinding[4]);", "+\t\t\tthis.annotatedTypes.put(keyType, cachedInfo = new TypeBinding[4]);", "-\t\t\tthis.annotatedTypes.put(type, cachedInfo);", "+\t\t\tthis.annotatedTypes.put(keyType, cachedInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cdcd899514456d835131bd6758553fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/AnnotatableTypeSystem.java", "commitBeforeChange": "8d3c2646ec0224ab936125ae7e1adde5786e1231", "commitAfterChange": "dfa40837336948a1f985e74dddef96333913f44c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic ArrayBinding getArrayType(TypeBinding leafType, int dimensions, AnnotationBinding [] annotations)", "signatureAfterChange": " \t \tpublic ArrayBinding getArrayType(TypeBinding leaftType, int dimensions)", "diff": ["+\tpublic ArrayBinding getArrayType(TypeBinding leaftType, int dimensions) {", "+\t\treturn getArrayType(leaftType, dimensions, Binding.NO_ANNOTATIONS);", "+\t}", "-\tpublic ArrayBinding getArrayType(TypeBinding leafType, int dimensions, AnnotationBinding [] annotations) {", "-\t\tif (!haveTypeAnnotations(leafType, annotations))", "-\t\t\treturn this.unannotatedTypeSystem.getArrayType(leafType, dimensions);", "-\t\tTypeBinding[] cachedInfo = (TypeBinding[]) this.annotatedTypes.get(leafType);", "-\t\t\tthis.annotatedTypes.put(leafType, cachedInfo = new TypeBinding[4]);", "-\t\t\tthis.annotatedTypes.put(leafType, cachedInfo);", "-\t\tArrayBinding unannotatedArrayType = this.unannotatedTypeSystem.getArrayType(leafType, dimensions);", "-\t\tTypeBinding arrayBinding = new ArrayBinding(leafType, dimensions, this.environment);"]}], "num": 25266}