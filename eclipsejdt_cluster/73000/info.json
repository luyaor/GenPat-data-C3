{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d9ec4a276a74fde5da0b6975cfc342fb", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb216720003bcc6fa213909a22567e04", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/imports/ReorderingImportAdder.java", "commitBeforeChange": "f78b6c4d80823115b2a0c851e53515d68cdcf5c5", "commitAfterChange": "c044b38393640b202de21fc2c846d93b3cac96f2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tpublic List<ImportName> addImports(Collection<ImportName> existingImports, Collection<ImportName> importsToAdd)", "signatureAfterChange": "  \t@Override \tpublic List<ImportName> addImports(Collection<ImportName> existingImports, Collection<ImportName> importsToAdd)", "diff": ["-\t\tSet<ImportName> existingImportsSet = new HashSet<ImportName>(existingImports);", "+\t\tint setCapacity = 2 * (existingImports.size() + importsToAdd.size());", "+\t\tSet<ImportName> uniqueImportsWithAdditions = new HashSet<ImportName>(setCapacity);", "+\t\tuniqueImportsWithAdditions.addAll(existingImports);", "+\t\tuniqueImportsWithAdditions.addAll(importsToAdd);", "-\t\tList<ImportName> importsWithAdditions = new ArrayList<ImportName>(existingImports.size() + importsToAdd.size());", "-\t\timportsWithAdditions.addAll(existingImports);", "-\t\tfor (ImportName importToAdd : importsToAdd) {", "-\t\t\tif (!existingImportsSet.contains(importToAdd)) {", "-\t\t\t\timportsWithAdditions.add(importToAdd);", "-\t\t\t}", "-\t\t}", "+\t\tList<ImportName> sortedImports = new ArrayList<>(uniqueImportsWithAdditions);", "+\t\tCollections.sort(sortedImports, this.importComparator);", "-\t\tCollections.sort(importsWithAdditions, this.importComparator);", "-", "-\t\treturn importsWithAdditions;", "+\t\treturn sortedImports;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df6d5d1e715533ea1ba429915a636839", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "c8bfaf82a67da861220348e09ccf8e5b65eea2d7", "commitAfterChange": "7c0d6dc61f1a3a5fa2460d48c92c28c9976c6e77", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r public void acceptImport(int declarationStart, int declarationEnd, char[] name, boolean onDemand)", "signatureAfterChange": "\r public void acceptImport(int declarationStart, int declarationEnd, char[] name, boolean onDemand)", "diff": ["-\tif (this.imports == null) {\r", "-\t\tthis.imports = new char[5][];\r", "-\t\tthis.importsCounter = 0;\r", "+\tchar[][] imports = (char[][]) this.importsTable.get(fType);\r", "+\tint importsCounter;\r", "+\tif (imports == null) {\r", "+\t\timports = new char[5][];\r", "+\t\timportsCounter = 0;\r", "+\t} else {\r", "+\t\timportsCounter = ((Integer) this.importsCounterTable.get(fType)).intValue();\r", "-\tif (this.imports.length == this.importsCounter) {\r", "-\t\tSystem.arraycopy(this.imports, 0, (this.imports = new char[this.importsCounter * 2][]), 0, this.importsCounter);\r", "+\tif (imports.length == importsCounter) {\r", "+\t\tSystem.arraycopy(imports, 0, (imports = new char[importsCounter * 2][]), 0, importsCounter);\r", "-\tthis.imports[this.importsCounter++] = name;\r", "+\timports[importsCounter++] = name;\r", "+\tthis.importsTable.put(fType, imports);\r", "+\tthis.importsCounterTable.put(fType, new Integer(importsCounter));\r"]}], "num": 73000}