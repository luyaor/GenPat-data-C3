{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "247bd63eac10571939ec0284bbaf9440", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a0f1c695deb39b2bcec99a2ade86d73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "6bbe631c4aee5403134035d5558f68ceeb91c520", "commitAfterChange": "a387db32f06bcc44b6b47e5aa021853a1cfee33c", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": " public final int getNextChar()", "signatureAfterChange": " public final int getNextChar()", "diff": ["-\t\t\t//-------------unicode traitement ------------", "-\t\t\tint c1, c2, c3, c4;", "-\t\t\tint unicodeSize = 6;", "-\t\t\tthis.currentPosition++;", "-\t\t\twhile (this.source[this.currentPosition] == 'u') {", "-\t\t\t\tthis.currentPosition++;", "-\t\t\t\tunicodeSize++;", "-\t\t\t}", "-", "-\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t|| c1 < 0)", "-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)", "-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)", "-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {", "-\t\t\t\treturn -1;", "-\t\t\t}", "-", "-\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "-", "-\t\t\tthis.unicodeAsBackSlash = this.currentCharacter == '\\\\';", "-", "-\t\t\t//need the unicode buffer", "-\t\t\tif (this.withoutUnicodePtr == 0) {", "-\t\t\t\t//buffer all the entries that have been left aside....", "-\t\t\t    unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);", "-\t\t\t}", "-\t\t\t//fill the buffer with the char", "-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);", "-\t\t\treturn this.currentCharacter;", "-", "-\t\t} //-------------end unicode traitement--------------", "-\t\telse {", "+\t\t\t\tgetNextUnicodeChar();", "+\t\t} else {", "-\t\t\treturn this.currentCharacter;", "+\t\treturn this.currentCharacter;", "+\t\treturn -1;", "+\t} catch(InvalidInputException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a58b82d4fd42914a1ea773902a4c8801", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "c83f12517cdac51319ba031385bd9a380905c315", "commitAfterChange": "3230c94014e69f2e2750889e5eaac5c1e552ded1", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": " public final int getNextChar()", "signatureAfterChange": " public final int getNextChar()", "diff": ["-\t\t\t//-------------unicode traitement ------------", "-\t\t\tint c1, c2, c3, c4;", "-\t\t\tint unicodeSize = 6;", "-\t\t\tthis.currentPosition++;", "-\t\t\twhile (this.source[this.currentPosition] == 'u') {", "-\t\t\t\tthis.currentPosition++;", "-\t\t\t\tunicodeSize++;", "-\t\t\t}", "-", "-\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t|| c1 < 0)", "-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)", "-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)", "-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {", "-\t\t\t\treturn -1;", "-\t\t\t}", "-", "-\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "-", "-\t\t\tthis.unicodeAsBackSlash = this.currentCharacter == '\\\\';", "-", "-\t\t\t//need the unicode buffer", "-\t\t\tif (this.withoutUnicodePtr == 0) {", "-\t\t\t\t//buffer all the entries that have been left aside....", "-\t\t\t    unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);", "-\t\t\t}", "-\t\t\t//fill the buffer with the char", "-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);", "-\t\t\treturn this.currentCharacter;", "-", "-\t\t} //-------------end unicode traitement--------------", "-\t\telse {", "+\t\t\t\tgetNextUnicodeChar();", "+\t\t} else {", "-\t\t\treturn this.currentCharacter;", "+\t\treturn this.currentCharacter;", "+\t\treturn -1;", "+\t} catch(InvalidInputException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e821d375f91b5270ec09bcf97103d8cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionScanner.java", "commitBeforeChange": "13b501923d975b39fcf9769686302cfbbf5a49d6", "commitAfterChange": "006d0d2bcd46f9eeb26a0d3ca2d5e66e5408265f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": " public boolean getNextCharAsJavaIdentifierPart()", "signatureAfterChange": " public final void getNextUnicodeChar() throws InvalidInputException", "diff": ["- */", "-public boolean getNextCharAsJavaIdentifierPart() {", "-\tif (this.currentPosition >= this.source.length) // handle the obvious case upfront", "-\t\treturn false;", "-", "-\tint temp = this.currentPosition;", "-\ttry {", "-\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')", "-\t\t\t&& (this.source[this.currentPosition] == 'u')) {", "-\t\t\t//-------------unicode traitement ------------", "-\t\t\tint c1, c2, c3, c4;", "-\t\t\tint unicodeSize = 6;", "-\t\t\tthis.currentPosition++;", "-\t\t\twhile (this.source[this.currentPosition] == 'u') {", "-\t\t\t\tthis.currentPosition++;", "-\t\t\t\tunicodeSize++;", "-\t\t\t}", "-", "-\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t|| c1 < 0)", "-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)", "-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)", "-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {", "-\t\t\t\tthis.currentPosition = temp;", "-\t\t\t\treturn false;", "-\t\t\t}", "-", "-\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "-\t\t\tif (!Character.isJavaIdentifierPart(this.currentCharacter)) {", "-\t\t\t\tthis.currentPosition = temp;", "-\t\t\t\treturn false;", "-\t\t\t}", "-", "-\t\t\t//need the unicode buffer", "-\t\t\tif (this.withoutUnicodePtr == 0) {", "-\t\t\t\t//buffer all the entries that have been left aside....", "-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);", "-\t\t\t}", "-\t\t\tif (temp < this.cursorLocation && this.cursorLocation < this.currentPosition-1){", "-\t\t\t\tthrow new InvalidCursorLocation(InvalidCursorLocation.NO_COMPLETION_INSIDE_UNICODE);", "-\t\t\t}", "-\t\t\t// store the current unicode, only if we did not pass the cursor location", "-\t\t\t// Note: this does not handle cases where the cursor is in the middle of a unicode", "-\t\t\tif ((this.completionIdentifier != null)", "-\t\t\t\t|| (this.startPosition <= this.cursorLocation+1 && this.cursorLocation >= this.currentPosition-1)){", "-\t\t\t    unicodeStoreAt(++this.withoutUnicodePtr);", "-\t\t\t}", "-\t\t\treturn true;", "-\t\t} //-------------end unicode traitement--------------", "-\t\telse {", "-\t\t\tif (!Character.isJavaIdentifierPart(this.currentCharacter)) {", "-\t\t\t\tthis.currentPosition = temp;", "-\t\t\t\treturn false;", "-\t\t\t}", "-", "-\t\t\tif (this.withoutUnicodePtr != 0){", "-\t\t\t\t// store the current unicode, only if we did not pass the cursor location", "-\t\t\t\t// Note: this does not handle cases where the cursor is in the middle of a unicode", "-\t\t\t\tif ((this.completionIdentifier != null)", "-\t\t\t\t\t\t|| (this.startPosition <= this.cursorLocation+1 && this.cursorLocation >= this.currentPosition-1)){", "-\t\t\t\t    unicodeStoreAt(++this.withoutUnicodePtr);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\treturn true;", "-\t\t}", "-\t} catch (IndexOutOfBoundsException e) {", "-\t\tthis.currentPosition = temp;", "-\t\treturn false;", "-\t}", "-}", "+public final void getNextUnicodeChar() throws InvalidInputException {", "+\tint temp = this.currentPosition;", "+\tsuper.getNextUnicodeChar();", "+\tif (temp < this.cursorLocation && this.cursorLocation < this.currentPosition-1){", "+\t\tthrow new InvalidCursorLocation(InvalidCursorLocation.NO_COMPLETION_INSIDE_UNICODE);", "+\t}", "+}"]}], "num": 25885}