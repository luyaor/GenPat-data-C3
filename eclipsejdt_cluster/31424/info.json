{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2b2ac6fe61956eff3b5269af30148c4b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fa9c48b61e527ecd5d074fbc55737e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 374, "methodNumberAfterChange": 375, "signatureBeforeChange": " public void typeMismatchError(TypeBinding actualType, TypeBinding expectedType, ASTNode location)", "signatureAfterChange": " public void typeMismatchError(TypeBinding actualType, TypeBinding expectedType, ASTNode location, ASTNode expectingLocation)", "diff": ["-public void typeMismatchError(TypeBinding actualType, TypeBinding expectedType, ASTNode location) {", "+public void typeMismatchError(TypeBinding actualType, TypeBinding expectedType, ASTNode location, ASTNode expectingLocation) {", "+\tif (actualType != null && (actualType.tagBits & TagBits.HasMissingType) != 0) { // improve secondary error", "+\t\tthis.handle(", "+\t\t\t\tIProblem.UndefinedType,  ", "+\t\t\t\tnew String[] {new String(actualType.leafComponentType().readableName())},", "+\t\t\t\tnew String[] {new String(actualType.leafComponentType().shortReadableName())},", "+\t\t\t\tlocation.sourceStart,", "+\t\t\t\tlocation.sourceEnd);", "+\t\t\treturn;\t\t", "+\t}\t", "+\tif (expectingLocation != null && (expectedType.tagBits & TagBits.HasMissingType) != 0) { // improve secondary error", "+\t\tthis.handle(", "+\t\t\t\tIProblem.UndefinedType,  ", "+\t\t\t\tnew String[] {new String(expectedType.leafComponentType().readableName())},", "+\t\t\t\tnew String[] {new String(expectedType.leafComponentType().shortReadableName())},", "+\t\t\t\texpectingLocation.sourceStart,", "+\t\t\t\texpectingLocation.sourceEnd);", "+\t\t\treturn;\t\t", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf6a2f4dfd67879e3dad4e5b8ea49f69", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 166, "methodNumberAfterChange": 170, "signatureBeforeChange": " public void incorrectSwitchType(Expression expression, TypeBinding testType)", "signatureAfterChange": " public void incorrectSwitchType(Expression expression, TypeBinding testType)", "diff": ["-\tthis.handle(", "-\t\tIProblem.IncorrectSwitchType,", "-\t\tnew String[] {new String(testType.readableName())},", "-\t\tnew String[] {new String(testType.shortReadableName())},", "-\t\texpression.sourceStart,", "-\t\texpression.sourceEnd);", "+\tif (this.options.sourceLevel < ClassFileConstants.JDK1_7) {", "+\t\tif (testType.id == TypeIds.T_JavaLangString) {", "+\t\t\tthis.handle(", "+\t\t\t\t\tIProblem.SwitchOnStringsNotBelow17,", "+\t\t\t\t\tnew String[] {new String(testType.readableName())},", "+\t\t\t\t\tnew String[] {new String(testType.shortReadableName())},", "+\t\t\t\t\texpression.sourceStart,", "+\t\t\t\t\texpression.sourceEnd);", "+\t\t} else {", "+\t\t\tthis.handle(", "+\t\t\t\tIProblem.IncorrectSwitchType,", "+\t\t\t\tnew String[] {new String(testType.readableName())},", "+\t\t\t\tnew String[] {new String(testType.shortReadableName())},", "+\t\t\t\texpression.sourceStart,", "+\t\t\t\texpression.sourceEnd);", "+\t\t}", "+\t} else {", "+\t\tthis.handle(", "+\t\t\t\tIProblem.IncorrectSwitchType17,", "+\t\t\t\tnew String[] {new String(testType.readableName())},", "+\t\t\t\tnew String[] {new String(testType.shortReadableName())},", "+\t\t\t\texpression.sourceStart,", "+\t\t\t\texpression.sourceEnd);", "+\t}"]}], "num": 31424}