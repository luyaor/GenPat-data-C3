{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "18a5bb5c23e5d9542dbd21ebdc2635af", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5da8385fd9970b4d1fe95db373d4ee74", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ModelTestsUtil.java", "commitBeforeChange": "471b30fcd9175fdd69611c88984722b9e0b5e4ee", "commitAfterChange": "1a356ccfb3b5b00256393a405276ebc654766b8b", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " public static String trimLinesLeadingWhitespaces(String input)", "signatureAfterChange": " public static String trimLinesLeadingWhitespaces(String input)", "diff": ["-\t\tString line = tokenizer.nextToken().trim();", "-\t\tint index = line.indexOf('*');", "-\t\tif (index >= 0) {", "-\t\t\tint length = line.length();", "-\t\t\tif (length > 80 && line.charAt(length-1) == '>') { // should not happen:  bug of old formatter", "-\t\t\t\tint idx = line.lastIndexOf('<');", "-\t\t\t\tbuffer.append(line.substring(index+1, idx).trim());", "-\t\t\t\tbuffer.append(Util.LINE_SEPARATOR);", "-\t\t\t\tbuffer.append(line.substring(idx).trim());", "-\t\t\t\tcontinue;", "-\t\t\t} else {", "-\t\t\t\tbuffer.append(line.substring(index+1).trim());", "+\t\tString line = tokenizer.nextToken();", "+\t\tint length = line.length();", "+\t\tint size = 0;", "+\t\tint idx = -1;", "+\t\tif (length > 0) {", "+\t\t\tloop: while ((idx+1) < length) {", "+\t\t\t\tchar ch = line.charAt(++idx);", "+\t\t\t\tswitch (ch) {", "+\t\t\t\t\tcase '\\t':", "+\t\t\t\t\t\tsize += 4;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase '*':", "+\t\t\t\t\tcase ' ':", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tdefault:", "+\t\t\t\t\t\tbreak loop;", "+\t\t\t\t}", "+\t\t}", "+\t\tif (length > 0 && idx > 0 && idx < length) {", "+\t\t\tint splitLineIndex = line.indexOf(\"||\", idx);", "+\t\t\tif (splitLineIndex > 0) {", "+\t\t\t\tint commentStart = line.indexOf(\"/*\", splitLineIndex);", "+\t\t\t\tif (commentStart >= 80-((size*3)/4)) {", "+\t\t\t\t\tStringBuffer newLine = new StringBuffer(line.substring(idx-1, splitLineIndex).trim());", "+\t\t\t\t\tnewLine.append('\\n');", "+\t\t\t\t\tnewLine.append(line.substring(splitLineIndex).trim());", "+\t\t\t\t\tnewLine.append('\\n');", "+\t\t\t\t\tbuffer.append(newLine);", "+\t\t\t\t\tcontinue;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tbuffer.append(line.substring(idx).trim());", "-\t\tbuffer.append(Util.LINE_SEPARATOR);", "+\t\tbuffer.append('\\n');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b596ee3dd57ac6b0b448e96a102c118e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "73e4e5da548699442420cad384be2992b7f88d9b", "commitAfterChange": "023cc39732253ba12561183cd2939bd86444b19a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void set(Map settings)", "signatureAfterChange": "  \tpublic void set(Map settings)", "diff": ["-\t\t\t\tif (stringValue.trim().length() == 0) {", "+\t\t\t\tint idx = stringValue.indexOf('\\n');", "+\t\t\t\tif (idx == 0) {", "-\t\t\t\t\tint idx = stringValue.indexOf('\\r');", "-\t\t\t\t\tif (idx == 0) {", "+\t\t\t\t\tString tag = idx < 0 ? stringValue.trim() : stringValue.substring(0, idx).trim();", "+\t\t\t\t\tif (tag.length() == 0) {", "-\t\t\t\t\t\tString tag = idx < 0 ? stringValue : stringValue.substring(0, idx);", "-\t\t\t\t\t\tidx = stringValue.indexOf('\\n');", "-\t\t\t\t\t\tif (idx == 0) {", "-\t\t\t\t\t\t\tthis.disabling_tag = null;", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tif (idx > 0) {", "-\t\t\t\t\t\t\t\ttag = tag.substring(0, idx);", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tthis.disabling_tag = tag.toCharArray();", "-\t\t\t\t\t\t}", "+\t\t\t\t\tthis.disabling_tag = tag.toCharArray();", "-\t\t\t\tif (stringValue.trim().length() == 0) {", "+\t\t\t\tint idx = stringValue.indexOf('\\n');", "+\t\t\t\tif (idx == 0) {", "-\t\t\t\t\tint idx = stringValue.indexOf('\\r');", "-\t\t\t\t\tif (idx == 0) {", "+\t\t\t\t\tString tag = idx < 0 ? stringValue.trim() : stringValue.substring(0, idx).trim();", "+\t\t\t\t\tif (tag.length() == 0) {", "-\t\t\t\t\t\tString tag = idx < 0 ? stringValue : stringValue.substring(0, idx);", "-\t\t\t\t\t\tidx = stringValue.indexOf('\\n');", "-\t\t\t\t\t\tif (idx == 0) {", "-\t\t\t\t\t\t\tthis.enabling_tag = null;", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tif (idx > 0) {", "-\t\t\t\t\t\t\t\ttag = tag.substring(0, idx);", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tthis.enabling_tag = tag.toCharArray();", "-\t\t\t\t\t\t}", "+\t\t\t\t\tthis.enabling_tag = tag.toCharArray();"]}], "num": 23340}