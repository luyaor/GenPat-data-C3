{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "63cef6ca0aa96b1cb22b7a998dfb00ce", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0375cd80ff509f61e85b802fc643e327", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "3ef9e96615da3a52fd8a4f5bccecbd03a8a0e20a", "commitAfterChange": "a40a64996efc0fc528fbb320900183524a4cc13c", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": " \t \tprivate void createType(TypeBinding type, StringBuffer completion)", "signatureAfterChange": " \t \tprivate void createType(TypeBinding type, Scope scope, StringBuffer completion)", "diff": ["-\tprivate void createType(TypeBinding type, StringBuffer completion) {", "+\tprivate void createType(TypeBinding type, Scope scope, StringBuffer completion) {", "-\t\t\t\t\tcreateType(wildcardBinding.bound, completion);", "+\t\t\t\t\tcreateType(wildcardBinding.bound, scope, completion);", "-\t\t\t\t\t\t\tcreateType(wildcardBinding.otherBounds[i], completion);", "+\t\t\t\t\t\t\tcreateType(wildcardBinding.otherBounds[i], scope, completion);", "-\t\t\t\t\tcreateType(wildcardBinding.bound, completion);", "+\t\t\t\t\tcreateType(wildcardBinding.bound, scope, completion);", "-\t\t\tcreateType(type.leafComponentType(), completion);", "+\t\t\tcreateType(type.leafComponentType(), scope, completion);", "-\t\t\t\tcreateType(parameterizedType.enclosingType(), completion);", "+\t\t\t\tcreateType(parameterizedType.enclosingType(), scope, completion);", "-\t\t\t        createType(parameterizedType.arguments[i], completion);", "+\t\t\t        createType(parameterizedType.arguments[i], scope, completion);", "+\t\t\t\t\t(ReferenceBinding)type,", "-\t\t\t\t\ttype.sourceName(),", "-\t\t\t\t\ttype.isMemberType() ? type.enclosingType().qualifiedSourceName() : null,", "-\t\t\t\t\t((ReferenceBinding)type).modifiers)) {", "+\t\t\t\t\tscope)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed3d4e3d280a53949a65ce120073d70b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/scripts/GenerateBuildScript.java", "commitBeforeChange": "a9669ba54738c50871a6fabb5798db0e4e95ee47", "commitAfterChange": "f681e9c0c3cc6c59d4593a72e3527dde2cae7215", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tprivate static void collectAllPropertiesFiles(File root, ArrayList collector)", "signatureAfterChange": "  \tprivate static void collectAllFiles(File root, ArrayList collector, FileFilter fileFilter)", "diff": ["-\tprivate static void collectAllPropertiesFiles(File root, ArrayList collector) {", "-\t\tFile[] files = root.listFiles();", "+\tprivate static void collectAllFiles(File root, ArrayList collector, FileFilter fileFilter) {", "+\t\tFile[] files = root.listFiles(fileFilter);", "-\t\t\t\tcollectAllPropertiesFiles(files[i], collector);", "-\t\t\t} else if (files[i].getName().endsWith(\".rsc\") || files[i].getName().endsWith(\".properties\")) { //$NON-NLS-1$", "+\t\t\t\tcollectAllFiles(files[i], collector, fileFilter);", "+\t\t\t} else {"]}], "num": 55789}