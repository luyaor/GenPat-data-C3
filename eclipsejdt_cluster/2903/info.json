{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0e6c69596ced4152300f6cf3cbfbe431", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f1b571ef4817e53c8952eefc01eb1c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "2e810cf626465e41259becd7125dd36c56f25bba", "commitAfterChange": "6a535b4099793b71184321570c224994c4b63f74", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " void computeInheritedMethods(ReferenceBinding superclass, ReferenceBinding[] superInterfaces)", "signatureAfterChange": " void computeInheritedMethods(ReferenceBinding superclass, ReferenceBinding[] superInterfaces)", "diff": ["+\tReferenceBinding superType = superclass;", "-\tif (itsInterfaces != NoSuperInterfaces)", "+\tif (itsInterfaces != NoSuperInterfaces) {", "+\t\tif (this.type.isInterface())", "+\t\t\tsuperType = null; // do not need to find Object's methods when its an interface extending another interface", "+\t}", "-\tReferenceBinding superType = superclass;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a17ce0e93c83722b51abb0bb484164a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "f5733c2118cce9570c584a3c84480228a3b7fc00", "commitAfterChange": "2325884dde9438b06c0c79c1dfd33a091d106072", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " \tpublic ReferenceBinding[] superInterfaces()", "signatureAfterChange": " \tpublic ReferenceBinding[] superInterfaces()", "diff": ["-\t    \tthis.superInterfaces = Scope.substitute(this, this.type.superInterfaces());", "+\t    \t\tif (this.type.isHierarchyBeingConnected())", "+\t    \t\t\treturn Binding.NO_SUPERINTERFACES; // prevent superinterfaces from being assigned before they are connected", "+\t    \t\tthis.superInterfaces = Scope.substitute(this, this.type.superInterfaces());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abe8c1b25b714563c2ada56d1c91b3eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "67df655e205e898d37ac6f69bac36e149a463d5e", "commitAfterChange": "2431fcce5ad38081147c6e09cb53c7dc03a305b0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public boolean build(SimpleLookupTable deltas)", "signatureAfterChange": "  public boolean build(SimpleLookupTable deltas)", "diff": ["+\t\tif (this.hasStructuralChanges && javaBuilder.javaProject.hasCycleMarker())", "+\t\t\tjavaBuilder.mustPropagateStructuralChanges();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b835aabf16e1f93c2498936dfd4bf928", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/BatchImageBuilder.java", "commitBeforeChange": "67df655e205e898d37ac6f69bac36e149a463d5e", "commitAfterChange": "2431fcce5ad38081147c6e09cb53c7dc03a305b0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void build()", "signatureAfterChange": "  public void build()", "diff": ["+", "+\t\tif (javaBuilder.javaProject.hasCycleMarker())", "+\t\t\tjavaBuilder.mustPropagateStructuralChanges();"]}], "num": 2903}