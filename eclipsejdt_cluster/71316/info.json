{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "70e37c730088d231397807831156530a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4001af5325d7dabcaf195568d8d8f2e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "0aed651787bbf037293557b7c88429b8514a95c0", "commitAfterChange": "1719c13f5400eb5914bb79f89f0e1d4c54e3cd14", "methodNumberBeforeChange": 142, "methodNumberAfterChange": 152, "signatureBeforeChange": " public void testTypeDeclarationBug73696i() throws CoreException", "signatureAfterChange": " public void testTypeDeclarationBug73696() throws CoreException", "diff": ["-// Test type declaration with interface suffix", "-public void testTypeDeclarationBug73696i() throws CoreException {", "+public void testTypeDeclarationBug73696() throws CoreException {", "-\tJavaSearchResultCollector resultCollector = new JavaSearchResultCollector();", "+//\tJavaSearchResultCollector resultCollector = new JavaSearchResultCollector();", "-\tSearchPattern pattern = new TypeDeclarationPattern(", "+\t// Interface declaration", "+\tTypeDeclarationPattern pattern = new TypeDeclarationPattern(", "-\tassertSearchResults(\"src/b73696/I.java b73696.I [I]\", resultCollector);", "-}", "+\t// Class declaration", "+\tpattern = new TypeDeclarationPattern(", "+\tassertSearchResults(", "+\t\t\"src/b73696/I.java b73696.I [I]\\n\" + ", "+\t\t\"src/b73696/C.java b73696.C [C]\",", "+\t\tthis.resultCollector);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5dbadf357d40913c5ac27a8e23d25b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "a9c68df97efd734f3ed326f5e99e4d21e6054bec", "commitAfterChange": "af2f21c145913c8a7ccf22989ee905c5f5c7dd0d", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 40, "signatureBeforeChange": "\t \t \tprivate void searchDeclarations(IWorkspace workspace, IJavaElement enclosingElement, IJavaSearchResultCollector resultCollector, SearchPattern pattern) throws JavaModelException", "signatureAfterChange": "\t \t \tprivate void searchDeclarations(IWorkspace workspace, IJavaElement enclosingElement, IJavaSearchResultCollector resultCollector, SearchPattern pattern) throws JavaModelException", "diff": ["-\t\tif (resource instanceof IFile) {", "-\t\t\tif (VERBOSE) {", "-\t\t\t\tSystem.out.println(\"Searching for \" + pattern + \" in \" + resource.getFullPath()); //$NON-NLS-1$//$NON-NLS-2$", "-\t\t\t}", "-\t\t\ttry {", "-\t\t\t\tSearchParticipant participant = new JavaSearchParticipant(getWorkingCopies(enclosingElement));", "+\t\ttry {", "+\t\t\tif (resource instanceof IFile) {", "+\t\t\t\tif (VERBOSE) {", "+\t\t\t\t\tSystem.out.println(\"Searching for \" + pattern + \" in \" + resource.getFullPath()); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t\t}", "+\t\t\t\tSearchParticipant participant = getDefaultSearchParticipant();", "+\t\t\t\tSearchDocument[] documents = pattern.addWorkingCopies(", "+\t\t\t\t\tnew SearchDocument[] {new JavaSearchDocument(enclosingElement.getPath().toString(), participant)},", "+\t\t\t\t\tgetWorkingCopies(enclosingElement),", "+\t\t\t\t\tparticipant);", "-\t\t\t\t\tnew SearchDocument[] {new JavaSearchDocument(enclosingElement.getPath().toString(), participant)}, ", "+\t\t\t\t\tdocuments, ", "-\t\t\t} catch (CoreException e) {", "-\t\t\t\tif (e instanceof JavaModelException) {", "-\t\t\t\t\tthrow (JavaModelException) e;", "-\t\t\t\t} else {", "-\t\t\t\t\tthrow new JavaModelException(e);", "-\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tsearch(", "+\t\t\t\t\tpattern, ", "+\t\t\t\t\tnew SearchParticipant[] {getDefaultSearchParticipant()}, ", "+\t\t\t\t\tscope, ", "+\t\t\t\t\tnew ResultCollectorAdapter(resultCollector), ", "+\t\t\t\t\tresultCollector.getProgressMonitor());", "-\t\t} else {", "-\t\t\tsearch(workspace, pattern, scope, resultCollector);", "+\t\t} catch (CoreException e) {", "+\t\t\tif (e instanceof JavaModelException) {", "+\t\t\t\tthrow (JavaModelException) e;", "+\t\t\t} else {", "+\t\t\t\tthrow new JavaModelException(e);", "+\t\t\t}"]}], "num": 71316}