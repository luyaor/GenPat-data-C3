{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2f439038272cb854ef0f293045d06885", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d582a9035d36a4cbf92f0081926b5793", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "2e2135e23ec5738f13780e9b130faac2db0c376b", "commitAfterChange": "3d9ca5323b31c8907d129d4437482cfc3b641c64", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 122, "signatureBeforeChange": " protected void consumeToken(int token)", "signatureAfterChange": " protected void consumeToken(int token)", "diff": ["-\t\t\t\t\tswitch(previous) {", "-\t\t\t\t\t\tcase TokenNameRPAREN :", "-\t\t\t\t\t\t\tswitch(previousKind) {", "-\t\t\t\t\t\t\t\tcase K_BETWEEN_IF_AND_RIGHT_PAREN :", "-\t\t\t\t\t\t\t\t\tpushOnElementStack(K_BLOCK_DELIMITER, IF);", "-\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\tcase K_BETWEEN_CATCH_AND_RIGHT_PAREN :", "-\t\t\t\t\t\t\t\t\tpushOnElementStack(K_BLOCK_DELIMITER, CATCH);", "-\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\tcase K_BETWEEN_WHILE_AND_RIGHT_PAREN :", "-\t\t\t\t\t\t\t\t\tpushOnElementStack(K_BLOCK_DELIMITER, WHILE);", "-\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\tcase K_BETWEEN_SWITCH_AND_RIGHT_PAREN :", "-\t\t\t\t\t\t\t\t\tpushOnElementStack(K_BLOCK_DELIMITER, SWITCH);", "-\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\tcase K_BETWEEN_FOR_AND_RIGHT_PAREN :", "-\t\t\t\t\t\t\t\t\tpushOnElementStack(K_BLOCK_DELIMITER, FOR);", "-\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\tcase K_BETWEEN_SYNCHRONIZED_AND_RIGHT_PAREN :", "-\t\t\t\t\t\t\t\t\tpushOnElementStack(K_BLOCK_DELIMITER, SYNCHRONIZED);", "-\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\tdefault :", "-\t\t\t\t\t\t\t\t\tpushOnElementStack(K_BLOCK_DELIMITER);", "-\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase TokenNametry :", "-\t\t\t\t\t\t\tpushOnElementStack(K_BLOCK_DELIMITER, TRY);", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase TokenNamedo:", "-\t\t\t\t\t\t\tpushOnElementStack(K_BLOCK_DELIMITER, DO);", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tdefault :", "-\t\t\t\t\t\t\tpushOnElementStack(K_BLOCK_DELIMITER);", "-\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\tif (kind == K_CONTROL_STATEMENT_DELIMITER) {", "+\t\t\t\t\t\tint info = topKnownElementInfo(COMPLETION_OR_ASSIST_PARSER);", "+\t\t\t\t\t\tpopElement(K_CONTROL_STATEMENT_DELIMITER);", "+\t\t\t\t\t\tif (info == IF) {", "+\t\t\t\t\t\t\tpushOnElementStack(K_BLOCK_DELIMITER, IF, this.expressionStack[this.expressionPtr]);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tpushOnElementStack(K_BLOCK_DELIMITER, info);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tswitch(previous) {", "+\t\t\t\t\t\t\tcase TokenNameRPAREN :", "+\t\t\t\t\t\t\t\tswitch(previousKind) {", "+\t\t\t\t\t\t\t\t\tcase K_BETWEEN_CATCH_AND_RIGHT_PAREN :", "+\t\t\t\t\t\t\t\t\t\tpushOnElementStack(K_BLOCK_DELIMITER, CATCH);", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\tcase K_BETWEEN_SWITCH_AND_RIGHT_PAREN :", "+\t\t\t\t\t\t\t\t\t\tpushOnElementStack(K_BLOCK_DELIMITER, SWITCH);", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\tcase K_BETWEEN_SYNCHRONIZED_AND_RIGHT_PAREN :", "+\t\t\t\t\t\t\t\t\t\tpushOnElementStack(K_BLOCK_DELIMITER, SYNCHRONIZED);", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\tdefault :", "+\t\t\t\t\t\t\t\t\t\tpushOnElementStack(K_BLOCK_DELIMITER);", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tcase TokenNametry :", "+\t\t\t\t\t\t\t\tpushOnElementStack(K_BLOCK_DELIMITER, TRY);", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tcase TokenNamedo:", "+\t\t\t\t\t\t\t\tpushOnElementStack(K_BLOCK_DELIMITER, DO);", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tdefault :", "+\t\t\t\t\t\t\t\tpushOnElementStack(K_BLOCK_DELIMITER);", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tpushOnElementStack(K_CONTROL_STATEMENT_DELIMITER, IF, this.expressionStack[this.expressionPtr]);", "+\t\t\t\t\t\t\tpushOnElementStack(K_CONTROL_STATEMENT_DELIMITER, WHILE);", "+\t\t\t\t\t\t\tpushOnElementStack(K_CONTROL_STATEMENT_DELIMITER, FOR);", "+\t\t\t\tbreak;", "+\t\t\tcase TokenNameelse:", "+\t\t\t\tif (topKnownElementKind(COMPLETION_OR_ASSIST_PARSER) == K_CONTROL_STATEMENT_DELIMITER) {", "+\t\t\t\t\tpopElement(K_CONTROL_STATEMENT_DELIMITER);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea1d5265319f7c5842b9c84cdeb5601c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": " private boolean checkClassInstanceCreation()", "signatureAfterChange": " private boolean checkClassInstanceCreation()", "diff": ["+\t\tint length = identifierLengthStack[identifierLengthPtr];", "+\t\tint numberOfIdentifiers = this.genericsIdentifiersLengthStack[this.genericsIdentifiersLengthPtr];", "+\t\tif (length != numberOfIdentifiers || this.genericsLengthStack[this.genericsLengthPtr] != 0) {", "+\t\t\t// no class instance creation with a parameterized type", "+\t\t\treturn true;", "+\t\t}", "+\t\t", "-\t\tif (topKnownElementKind(COMPLETION_OR_ASSIST_PARSER, 1) == K_INSIDE_THROW_STATEMENT", "-\t\t\t&& topKnownElementInfo(COMPLETION_OR_ASSIST_PARSER, 1) == this.bracketDepth) {", "-\t\t\tpushOnElementStack(K_NEXT_TYPEREF_IS_EXCEPTION);", "-\t\t\ttype = getTypeReference(0);", "-\t\t\tpopElement(K_NEXT_TYPEREF_IS_EXCEPTION);", "-\t\t} else {", "-\t\t\ttype = getTypeReference(0);", "-\t\t}", "-\t\tthis.assistNode = type;", "-\t\tthis.lastCheckPoint = type.sourceEnd + 1;", "+\t\t\tif (topKnownElementKind(COMPLETION_OR_ASSIST_PARSER, 1) == K_INSIDE_THROW_STATEMENT", "+\t\t\t\t&& topKnownElementInfo(COMPLETION_OR_ASSIST_PARSER, 1) == this.bracketDepth) {", "+\t\t\t\tpushOnElementStack(K_NEXT_TYPEREF_IS_EXCEPTION);", "+\t\t\t\ttype = getTypeReference(0);", "+\t\t\t\tpopElement(K_NEXT_TYPEREF_IS_EXCEPTION);", "+\t\t\t} else {", "+\t\t\t\ttype = getTypeReference(0);", "+\t\t\t}", "+\t\t\tpushOnGenericsIdentifiersLengthStack(identifierLengthStack[identifierLengthPtr]);", "+\t\t\tpushOnGenericsLengthStack(0);", "+\t\t\tif (topKnownElementKind(COMPLETION_OR_ASSIST_PARSER, 1) == K_INSIDE_THROW_STATEMENT", "+\t\t\t\t&& topKnownElementInfo(COMPLETION_OR_ASSIST_PARSER, 1) == this.bracketDepth) {", "+\t\t\t\tpushOnElementStack(K_NEXT_TYPEREF_IS_EXCEPTION);", "+\t\t\t\ttype = getTypeReference(0);", "+\t\t\t\tpopElement(K_NEXT_TYPEREF_IS_EXCEPTION);", "+\t\t\t} else {", "+\t\t\t\ttype = getTypeReference(0);", "+\t\t\t}", "+\t\tthis.assistNode = type;", "+\t\tthis.lastCheckPoint = type.sourceEnd + 1;", "+\t\t"]}], "num": 33680}