{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "01688437147640fe69d385fbe72b8c50", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78eb58c50ca9e9d29b4a7ea8805407eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetFieldReference.java", "commitBeforeChange": "302df05b099c1ea06faca0b00f806513c7db6904", "commitAfterChange": "c661afbb38268ca6f18a772df813f6c69bb9e17c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired)", "signatureAfterChange": "  public void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired)", "diff": ["-\tif (this.codegenBinding.canBeSeenBy(receiverType, this, currentScope)) {", "-\t\treceiver.generateCode(currentScope, codeStream, !(isStatic = this.codegenBinding.isStatic()));", "+\tif (this.codegenBinding.canBeSeenBy(this.receiverType, this, currentScope)) {", "+\t\tthis.receiver.generateCode(currentScope, codeStream, !(isStatic = this.codegenBinding.isStatic()));", "-\t\tif ((operationTypeID = implicitConversion >> 4) == T_String) {", "+\t\tif ((operationTypeID = this.implicitConversion >> 4) == T_String) {", "-\t\t\tcodeStream.generateImplicitConversion(implicitConversion);", "+\t\t\tcodeStream.generateImplicitConversion(this.implicitConversion);", "-\t\t\t\tcodeStream.generateConstant(expression.constant, implicitConversion);\t\t\t", "+\t\t\t\tcodeStream.generateConstant(expression.constant, this.implicitConversion);\t\t\t", "-\t\treceiver.generateCode(currentScope, codeStream, !(isStatic = this.codegenBinding.isStatic()));", "+\t\tthis.receiver.generateCode(currentScope, codeStream, !(isStatic = this.codegenBinding.isStatic()));", "-\t\t\t((CodeSnippetCodeStream) codeStream).generateEmulationForField(binding);", "-\t\t\treceiver.generateCode(currentScope, codeStream, !(isStatic = this.codegenBinding.isStatic()));", "+\t\t\t((CodeSnippetCodeStream) codeStream).generateEmulationForField(this.binding);", "+\t\t\tthis.receiver.generateCode(currentScope, codeStream, !(isStatic = this.codegenBinding.isStatic()));", "-\t\tif ((operationTypeID = implicitConversion >> 4) == T_String) {", "+\t\tif ((operationTypeID = this.implicitConversion >> 4) == T_String) {", "-\t\t\tcodeStream.generateImplicitConversion(implicitConversion);", "+\t\t\tcodeStream.generateImplicitConversion(this.implicitConversion);", "-\t\t\t\tcodeStream.generateConstant(expression.constant, implicitConversion);\t\t\t", "+\t\t\t\tcodeStream.generateConstant(expression.constant, this.implicitConversion);\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e09bb08a248846f3c2799cb23212e003", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldPattern.java", "commitBeforeChange": "458161dc550c876a0d717a9a36eda696046c367f", "commitAfterChange": "59d8c0d8b554a42bbafdc0ad10f524f90fa03b31", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 7, "signatureBeforeChange": " protected boolean matchIndexEntry()", "signatureAfterChange": " protected boolean matchIndexEntry()", "diff": ["-\tif (name != null) {", "-\t\tswitch(matchMode) {", "+\tif (this.name != null) {", "+\t\tswitch(this.matchMode) {", "-\t\t\t\treturn CharOperation.equals(name, decodedName, isCaseSensitive);", "+\t\t\t\treturn CharOperation.equals(this.name, this.decodedName, this.isCaseSensitive);", "-\t\t\t\treturn CharOperation.prefixEquals(name, decodedName, isCaseSensitive);", "+\t\t\t\treturn CharOperation.prefixEquals(this.name, this.decodedName, this.isCaseSensitive);", "-\t\t\t\treturn CharOperation.match(name, decodedName, isCaseSensitive);", "+\t\t\t\treturn CharOperation.match(this.name, this.decodedName, this.isCaseSensitive);", "-}"]}], "num": 51280}