{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "17b16fe181d7deb998397a455260f789", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f4f666e469d4fb4bc94349075c2c845", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "d33b892acebec2bc1c5d62c55db84a184bb6f3b3", "commitAfterChange": "86ecd2ba171e241fbd6f2290ee8ff607c4ff535a", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic FieldBinding findField(TypeBinding receiverType, char[] fieldName, InvocationSite invocationSite, boolean needResolve)", "signatureAfterChange": " \tpublic FieldBinding findField(TypeBinding receiverType, char[] fieldName, InvocationSite invocationSite, boolean needResolve)", "diff": ["-\t\tcompilationUnitScope().recordTypeReference(receiverType);", "+\t\tCompilationUnitScope unitScope = compilationUnitScope();", "+\t\tunitScope.recordTypeReference(receiverType);", "-\t\t\tcompilationUnitScope().recordTypeReference(currentType);", "+\t\t\tunitScope.recordTypeReference(currentType);", "-\t\t\t\t\t\tcompilationUnitScope().recordTypeReference(anInterface);", "+\t\t\t\t\t\tunitScope.recordTypeReference(anInterface);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc133917d42a93629a21234638660167", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "d33b892acebec2bc1c5d62c55db84a184bb6f3b3", "commitAfterChange": "86ecd2ba171e241fbd6f2290ee8ff607c4ff535a", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic MethodBinding findExactMethod( \t\tReferenceBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding findExactMethod( \t\tReferenceBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "diff": ["-\t\tcompilationUnitScope().recordTypeReferences(argumentTypes);", "-\t\tMethodBinding exactMethod = receiverType.getExactMethod(selector, argumentTypes, compilationUnitScope());", "+\t\tCompilationUnitScope unitScope = compilationUnitScope();", "+\t\tunitScope.recordTypeReferences(argumentTypes);", "+\t\tMethodBinding exactMethod = receiverType.getExactMethod(selector, argumentTypes, unitScope);", "-\t\t\tcompilationUnitScope().recordTypeReferences(exactMethod.thrownExceptions);", "+\t\t\tunitScope.recordTypeReferences(exactMethod.thrownExceptions);"]}], "num": 72607}