{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d660f63fb19e3e37e1ac5d318af1b5b0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7ebdb3cb9a8735e4a5b895332f64df2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LocalTypeBinding.java", "commitBeforeChange": "4070a80ec708f74aed77de9c7062557e3db209e8", "commitAfterChange": "e40a14518c878498ad39595017fa5c41fd3a84fd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public char[] computeUniqueKey(boolean isLeaf)", "signatureAfterChange": " public char[] computeUniqueKey(boolean isLeaf)", "diff": ["-\tStringBuffer buffer = new StringBuffer();", "-\tbuffer.append(outermostEnclosingType().computeUniqueKey(isLeaf));", "-\t", "-\t// innsert $sourceStart", "-\tint semicolon = buffer.lastIndexOf(\";\"); //$NON-NLS-1$", "-\tbuffer.insert(semicolon, '$');", "-\tsemicolon = buffer.lastIndexOf(\";\"); //$NON-NLS-1$", "-\tbuffer.insert(semicolon, this.sourceStart);", "-\tint length = buffer.length();", "-\tchar[] uniqueKey = new char[length];", "-\tbuffer.getChars(0, length, uniqueKey, 0);", "-\treturn uniqueKey;", "+\tchar[] outerKey = outermostEnclosingType().computeUniqueKey(isLeaf);", "+\tint semicolon = CharOperation.lastIndexOf(';', outerKey);", "+", "+\t// insert $sourceStart", "+\treturn CharOperation.concat(", "+\t\tCharOperation.concat(", "+\t\t\tCharOperation.subarray(outerKey, 0, semicolon),", "+\t\t\tString.valueOf(", "+\t\t\tthis.sourceStart).toCharArray(),", "+\t\t\t'$'),", "+\t\tCharOperation.subarray(outerKey, semicolon, outerKey.length));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce54458e7e4ba3417dcf844ab3543f0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFileInfo.java", "commitBeforeChange": "369ffd3db09511488e039ba2575df2eeea055320", "commitAfterChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r private void readBinaryChildren()", "signatureAfterChange": "\r private void readBinaryChildren()", "diff": ["-\tVector children = new Vector();\r", "-\tHashtable newElements = new Hashtable();\r", "+\tArrayList children = new ArrayList();\r", "+\tHashMap newElements = new HashMap();\r", "-\tfor (Enumeration e = newElements.keys(); e.hasMoreElements();) {\r", "-\t\tIJavaElement key = (IJavaElement) e.nextElement();\r", "-\t\tObject value = newElements.get(key);\r", "-\t\tmanager.putInfo(key, value);\r", "+\t\r", "+\tfor (Iterator iter = newElements.entrySet().iterator(); iter.hasNext();) {\r", "+\t\tMap.Entry entry = (Map.Entry) iter.next();\r", "+\t\tmanager.putInfo(\r", "+\t\t\t(IJavaElement) entry.getKey(), \r", "+\t\t\tentry.getValue());\r", "-\tchildren.copyInto(fBinaryChildren);\r", "+\tchildren.toArray(fBinaryChildren);\r"]}], "num": 46302}