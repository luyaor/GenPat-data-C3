{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "95de41c5cf5b851217f04b59c02b7538", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03793ad0b6aadb2758b5390f073fa47e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "7757a5934fde86433c9c42221d6117d1b7f29e23", "commitAfterChange": "0bbfe267fb7eaaa77628088e8cdbd841ddb40de5", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tpublic static CompilationUnitDeclaration resolve( \t\tchar[] source, \t\tchar[][] packageName, \t\tString unitName, \t\tIJavaProject javaProject, \t\tNodeSearcher nodeSearcher, \t\tMap options, \t\tboolean cleanUp, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "signatureAfterChange": "  \tpublic static CompilationUnitDeclaration resolve( \t\tchar[] source, \t\tchar[][] packageName, \t\tString unitName, \t\tIJavaProject javaProject, \t\tNodeSearcher nodeSearcher, \t\tMap options, \t\tboolean cleanUp, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "diff": ["-\t\t\t\t\t\t(String) options.get(JavaCore.CORE_ENCODING)),", "+//\t\t\t\t\t\t(String) options.get(JavaCore.CORE_ENCODING)),", "+\t\t\t\t\t\tjavaProject),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1267c42a0ad59a6579d860b4eb583a62", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "06245fd2babdc26904fe63b2efeb2b3ec75db92f", "commitAfterChange": "04e492585ec94bbdfe8f3ba07279d9329063465d", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " \tfinal Binding getTypeOrPackage(char[] name, int mask)", "signatureAfterChange": " \tfinal Binding getTypeOrPackage(char[] name, int mask)", "diff": ["-\t\t\t\t\t\tunitScope.resolvedSingeTypeImports.put(type.compoundName[type.compoundName.length - 1], type);", "+\t\t\t\t\t\tunitScope.resolvedSingeTypeImports.put(name, type);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d5ce2041f7a65712b96cbf72c36cbe7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "63739b2368f2809d49b2ea10b6b3b2f6af96a94d", "commitAfterChange": "a08ab6c5a1a888fb837cc617f27fffac78616bdc", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "  \tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.EqualExpression expression)", "signatureAfterChange": "  \tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.EqualExpression expression)", "diff": ["-\t\tinfixExpression.setSourceRange(startPosition, expression.sourceEnd - startPosition + 1);", "+\t\tsetInfixSourcePositions(infixExpression, startPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fb02b757e7c0da6890242510aff462d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/Indents.java", "commitBeforeChange": "115aa955b9babd8a2ed6e802830c5035a2e2a28f", "commitAfterChange": "c555269f6d77af957f827daf14cfb9a3af0c01ad", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic static ReplaceEdit[] getChangeIndentEdits(String source, int sourceIndentLevel, int tabWidth, int indentWidth, String newIndent)", "signatureAfterChange": " \tpublic static ReplaceEdit[] getChangeIndentEdits(String source, int sourceIndentLevel, int tabWidth, String newIndent)", "diff": ["-\tpublic static ReplaceEdit[] getChangeIndentEdits(String source, int sourceIndentLevel, int tabWidth, int indentWidth, String newIndent) {", "+\tpublic static ReplaceEdit[] getChangeIndentEdits(String source, int sourceIndentLevel, int tabWidth, String newIndent) {", "-\t\t\t\tint length= Indents.computeIndentLength(line, sourceIndentLevel, tabWidth, indentWidth);", "+\t\t\t\tint length= Indents.computeIndentLength(line, sourceIndentLevel, tabWidth);", "-\t\t\t\t\tlength= Indents.computeIndentUnits(line, tabWidth, indentWidth);", "+\t\t\t\t\tlength= Indents.computeIndent(line, tabWidth);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36d5f41cae1d478fccc0db80dc7696bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "9b0a7dbe196111bace472ad6d38ba1cdd25696dc", "commitAfterChange": "a118736b4df6d2c2d76c2e8540c6ee6242953cb2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tprivate BindingKeyResolver(BindingKeyParser parser, Compiler compiler, LookupEnvironment environment, int wildcardRank, CompilationUnitDeclaration outerMostParsedUnit, HashtableOfObject parsedUnits)", "signatureAfterChange": "  \tprivate BindingKeyResolver(BindingKeyParser parser, Compiler compiler, LookupEnvironment environment, CompilationUnitDeclaration outerMostParsedUnit, HashtableOfObject parsedUnits)", "diff": ["-\tprivate BindingKeyResolver(BindingKeyParser parser, Compiler compiler, LookupEnvironment environment, int wildcardRank, CompilationUnitDeclaration outerMostParsedUnit, HashtableOfObject parsedUnits) {", "+\tprivate BindingKeyResolver(BindingKeyParser parser, Compiler compiler, LookupEnvironment environment, CompilationUnitDeclaration outerMostParsedUnit, HashtableOfObject parsedUnits) {", "-\t\tthis.wildcardRank = wildcardRank;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b7db16c0548cc1eadbe5bba7b448d08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern.java", "commitBeforeChange": "b0dc1dab558ce36f11677d02e0885d555028b05e", "commitAfterChange": "91fd6592eedea8aedfdfc8b40a21d626aa183875", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " protected void decodeModifiers(char value)", "signatureAfterChange": " protected void decodeModifiers()", "diff": ["-protected void decodeModifiers(char value) {", "-\tthis.modifiers = value; // implicit cast to int type", "+protected void decodeModifiers() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5afd86c7ac95cd31886b02515dc702bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ModifyingResourceTests.java", "commitBeforeChange": "fbe65ac77be2b022440c72364815c024d31da8b6", "commitAfterChange": "52b00369d469c7b24a63a3fde464411aba7b73af", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t protected IFile createFile(String path, byte[] content) throws CoreException", "signatureAfterChange": "  protected IFile createFile(String path, InputStream content) throws CoreException", "diff": ["-\t", "+", "+protected IFile createFile(String path, InputStream content) throws CoreException {", "+\tIFile file = this.getFile(path);", "+\tfile.create(content, true, null);", "+\treturn file;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a904beac93e837375a8b9ded8276de6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/SourceModifier.java", "commitBeforeChange": "115aa955b9babd8a2ed6e802830c5035a2e2a28f", "commitAfterChange": "c555269f6d77af957f827daf14cfb9a3af0c01ad", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic ReplaceEdit[] getModifications(String source)", "signatureAfterChange": " \t \tpublic ReplaceEdit[] getModifications(String source)", "diff": ["-\t\tint destIndentLevel= Indents.computeIndentUnits(this.destinationIndent, this.tabWidth, this.indentWidth);", "+\t\tint destIndentLevel= Indents.computeIndent(this.destinationIndent, this.tabWidth);", "-\t\treturn Indents.getChangeIndentEdits(source, this.sourceIndentLevel, this.tabWidth, this.indentWidth, this.destinationIndent);", "+\t\treturn Indents.getChangeIndentEdits(source, this.sourceIndentLevel, this.tabWidth, this.destinationIndent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e8c246412693ecc1495fe7dd43a20f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "6ba8969cfb610f1f976fc162e09094107082e31f", "commitAfterChange": "e5daecdc1d88073905628fd03c01d496bde72798", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate String failedToFormat(final char[] compilationUnitSource)", "signatureAfterChange": "  \tprivate String failedToFormat()", "diff": ["-\tprivate String failedToFormat(final char[] compilationUnitSource) {", "+\tprivate String failedToFormat() {", "-\t\treturn new String(compilationUnitSource);", "-\t}", "+\t\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84f304acef57de3aa213ce2579f4b505", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyType.java", "commitBeforeChange": "0d8b14fcdd186ef07894db465104582e473b32af", "commitAfterChange": "cb1176594034666f0f8d852dc8fc01987d54d11b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public HierarchyType( \tIType typeHandle,  \tint kind, \tchar[] name,  \tint modifiers,  \tchar[] superclassName, \tchar[][] superInterfaceNames)", "signatureAfterChange": " \t public HierarchyType( \tIType typeHandle,  \tchar[] name,  \tint modifiers,  \tchar[] superclassName, \tchar[][] superInterfaceNames)", "diff": ["-\tint kind,", "-\tthis.kind = kind;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91264553de8893884b95f033eb813e01", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/DietRecoveryTest.java", "commitBeforeChange": "738e086e894bacdbfae0e65ffe73d6cdfbe7d90c", "commitAfterChange": "9af380edbebe260c532550e38eabb05a50b6fe99", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void checkParse( \tchar[] source,  \tString expectedDietUnitToString, \tString expectedDietPlusBodyUnitToString,\t \tString expectedFullUnitToString, \tString expectedCompletionDietUnitToString,  \tString testName)", "signatureAfterChange": "  public void checkParse( \tchar[] source,  \tString expectedDietUnitToString, \tString expectedDietPlusBodyUnitToString,\t \tString expectedFullUnitToString, \tString expectedCompletionDietUnitToString,  \tString testName)", "diff": ["-\t\t\t\tcomputedUnit.types[i].binding = new SourceTypeBinding(){};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93f43bf6a09b9a3a2d761a1a15c1361e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceModelTests.java", "commitBeforeChange": "412b5a0ec0dfab66c031df9b59ae1b7baa453536", "commitAfterChange": "595f655f5a3a3883f3b3197ce8738de2d9981cc1", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " public void testCreateJavaElement() throws CoreException", "signatureAfterChange": " public void testCreateJavaElement() throws CoreException", "diff": ["-\tgetNameLookup((JavaProject) JavaCore.create(file.getProject()));", "+\tgetNameLookup(BIG_PROJECT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9412aadf845fcc823ee25117af04cc74", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ImportRewriteAnalyzer.java", "commitBeforeChange": "58ac155fe8fb4f7f4076bbdf4b592c9cf009b81e", "commitAfterChange": "2bf935e5d3774dff53798f1623d3ae7a250790a5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic ImportRewriteAnalyzer(ICompilationUnit cu, CompilationUnit root, String[] importOrder, int threshold, int staticThreshold, int spacesBetweenGroups, boolean restoreExistingImports)", "signatureAfterChange": " \t \tpublic ImportRewriteAnalyzer(ICompilationUnit cu, CompilationUnit root, String[] importOrder, int threshold, int staticThreshold, boolean restoreExistingImports)", "diff": ["-\tpublic ImportRewriteAnalyzer(ICompilationUnit cu, CompilationUnit root, String[] importOrder, int threshold, int staticThreshold, int spacesBetweenGroups, boolean restoreExistingImports) {", "+\tpublic ImportRewriteAnalyzer(ICompilationUnit cu, CompilationUnit root, String[] importOrder, int threshold, int staticThreshold, boolean restoreExistingImports) {", "-\t\tthis.spacesBetweenGroups= spacesBetweenGroups;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af93da4767f160d5eca8d69b1917cc4d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocReturnStatement.java", "commitBeforeChange": "330aeaad59d1633d10c0cd3a9ee9ac57073b385f", "commitAfterChange": "960ce528d76bd309a28ce655fc14cff77629ffa5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic JavadocReturnStatement(int s, int e, char[] descr)", "signatureAfterChange": "  \tpublic JavadocReturnStatement(int s, int e)", "diff": ["-\tpublic JavadocReturnStatement(int s, int e, char[] descr) {", "+\tpublic JavadocReturnStatement(int s, int e) {", "-\t\tthis.description = descr;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2cb487237cd29b9b65c6ef9973276cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MethodDeclaration.java", "commitBeforeChange": "6665973e9a36116a8cb24b7143317e47a83a98f0", "commitAfterChange": "305123b230bcfd1f733969b7cd2c687b75857ff0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void analyseCode(ClassScope classScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void analyseCode(ClassScope classScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\t// tag parameters as being set", "+\t\t\t// nullity and mark as assigned", "+\t\t\tanalyseArguments(flowInfo);", "+", "-\t\t\t\t\tflowInfo.markAsDefinitelyAssigned(this.arguments[i].binding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0999976bd9502ca9c7f57132c8370c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration.java", "commitBeforeChange": "191f90d8b8e3d032d6a88890167c13d9311990d0", "commitAfterChange": "3a3faf3d0aa82cf2ed2b8375e651ef0b429b1314", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void addParameterNonNullAnnotation(int i, ReferenceBinding annotationBinding)", "signatureAfterChange": " \tpublic void addParameterNonNullAnnotation(Argument argument, ReferenceBinding annotationBinding)", "diff": ["-\tpublic void addParameterNonNullAnnotation(int i, ReferenceBinding annotationBinding) {", "-\t\tArgument argument = this.arguments[i];", "+\tpublic void addParameterNonNullAnnotation(Argument argument, ReferenceBinding annotationBinding) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddb631a4c6255ce46b962cb12ec4883f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PotentialMatch.java", "commitBeforeChange": "27972218ed8defc4f5ddd3b9a170f5fdb151cf9f", "commitAfterChange": "a56935849424110ea08cc35443a2b0092ada7f33", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \tpublic char[] getMainTypeName()", "signatureAfterChange": "\r \tpublic char[] getMainTypeName()", "diff": ["-\t\treturn this.compoundName[this.compoundName.length-1];\r", "+\t\treturn null; // cannot know the main type name without opening .java or .class file\r", "+\t\t                  // see http://bugs.eclipse.org/bugs/show_bug.cgi?id=32182\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef56823043eb8084b7b7b786edcbff38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/SourceModifier.java", "commitBeforeChange": "115aa955b9babd8a2ed6e802830c5035a2e2a28f", "commitAfterChange": "c555269f6d77af957f827daf14cfb9a3af0c01ad", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t\t \tpublic SourceModifier(int sourceIndentLevel, String destinationIndent, int tabWidth, int indentWidth)", "signatureAfterChange": " \t\t \tpublic SourceModifier(int sourceIndentLevel, String destinationIndent, int tabWidth)", "diff": ["-\tpublic SourceModifier(int sourceIndentLevel, String destinationIndent, int tabWidth, int indentWidth) {", "+\tpublic SourceModifier(int sourceIndentLevel, String destinationIndent, int tabWidth) {", "-\t\tthis.indentWidth= indentWidth;"]}], "num": 26775}