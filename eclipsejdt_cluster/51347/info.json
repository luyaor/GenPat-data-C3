{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0bccb1ba078afb5f8b71e84ba1a2957a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "560f0e1719f2b980d9804702387d9630", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Assignment.java", "commitBeforeChange": "3f131825dfbebcd2d9846517fd8419ae56311784", "commitAfterChange": "ede87229fe271e061ecd80820c468f7956351f61", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tif (local != null) {", "-\t\tLocalVariableBinding previousTrackerBinding = null;", "-\t\tif (local.closeTracker != null) {", "-\t\t\t// Assigning to a variable already holding an AutoCloseable, has it been closed before?", "-\t\t\tpreviousTrackerBinding = local.closeTracker.binding;", "-\t\t\tif (!flowInfo.isDefinitelyNull(local)) // only if previous value may be non-null", "-\t\t\t\tlocal.closeTracker.recordErrorLocation(this, flowInfo.nullStatus(previousTrackerBinding));", "-\t\t}", "-\t\tFakedTrackingVariable.handleResourceAssignment(flowInfo, this, this.expression, local, previousTrackerBinding);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6df1f281a7b498de162d91f419c20753", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "5d2cd7f1076b45eee90e6733e80765abd1df3d6a", "commitAfterChange": "14e86a8141996732826e41cf3c8dd392bb1fd5ba", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 41, "signatureBeforeChange": " \tprivate void reconcileClasspathFileUpdate(IResourceDelta delta, JavaProject project)", "signatureAfterChange": " \tprivate void reconcileClasspathFileUpdate(IResourceDelta delta, JavaProject project)", "diff": ["-\t\t", "+", "-\t\t\t\ttry {", "-\t\t\t\t\tJavaModelManager.PerProjectInfo info = project.getPerProjectInfo();", "-\t\t\t\t\tif (info.rawClasspath != null) { // if there is an in-memory classpath", "-\t\t\t\t\t\tproject.saveClasspath(info.rawClasspath, info.outputLocation);", "-\t\t\t\t\t}", "-\t\t\t\t} catch (JavaModelException e) {", "-\t\t\t\t\tif (project.getProject().isAccessible()) {", "-\t\t\t\t\t\tUtil.log(e, \"Could not save classpath for \"+ project.getPath()); //$NON-NLS-1$", "-\t\t\t\t\t}", "-\t\t\t\t}", "+//\t\t\t\ttry {", "+//\t\t\t\t\tJavaModelManager.PerProjectInfo info = project.getPerProjectInfo();", "+//\t\t\t\t\tif (info.rawClasspath != null) { // if there is an in-memory classpath", "+//\t\t\t\t\t\tproject.saveClasspath(info.rawClasspath, info.outputLocation);", "+//\t\t\t\t\t}", "+//\t\t\t\t} catch (JavaModelException e) {", "+//\t\t\t\t\tif (project.getProject().isAccessible()) {", "+//\t\t\t\t\t\tUtil.log(e, \"Could not save classpath for \"+ project.getPath()); //$NON-NLS-1$", "+//\t\t\t\t\t}", "+//\t\t\t\t}"]}], "num": 51347}