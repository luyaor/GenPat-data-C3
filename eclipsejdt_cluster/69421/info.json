{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "141d10262ebe8955db983db51545c701", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "452981c848c00df0a1280b611c63ebfc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "3256aef43e2296affdbf86e21f8cafdaa866161a", "commitAfterChange": "f357f309273e0bfe8345ff708d18fa83c6a34931", "methodNumberBeforeChange": 1306, "methodNumberAfterChange": 1306, "signatureBeforeChange": " public void test1271()", "signatureAfterChange": " public void test1271()", "diff": ["+\t\t\tthis.complianceLevel < ClassFileConstants.JDK1_8 ? ", "+\t\t\t\"----------\\n\"", "+\t\t\t: // ATM, in 1.8+ we generate an extra error due to inner poly expression resolution after the target type is known.", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 24)\\n\" + ", "+\t\t\t\"\tput(Integer.class, combine(FUNC2, FUNC1));\\n\" + ", "+\t\t\t\"\t^^^\\n\" + ", "+\t\t\t\"The method put(Class<E>, X.TO<? super E>) in the type X is not applicable for the arguments (Class<Integer>, X.OO<String,Object>)\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 24)\\n\" + ", "+\t\t\t\"\tput(Integer.class, combine(FUNC2, FUNC1));\\n\" + ", "+\t\t\t\"\t                   ^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from X.OO<String,Object> to X.TO<? super E>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8e281f7052a19bda975a8b5676fb4c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "3256aef43e2296affdbf86e21f8cafdaa866161a", "commitAfterChange": "f357f309273e0bfe8345ff708d18fa83c6a34931", "methodNumberBeforeChange": 1172, "methodNumberAfterChange": 1172, "signatureBeforeChange": " public void test1142()", "signatureAfterChange": " public void test1142()", "diff": ["+\t\tthis.complianceLevel < ClassFileConstants.JDK1_8 ? ", "+\t\t\"----------\\n\"", "+\t\t// 1.8+ ATM, we generate an extra error due to inner poly expression evaluation.", "+\t\t:\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\"\treturn compound(asList(a, b));\\n\" + ", "+\t\t\"\t       ^^^^^^^^\\n\" + ", "+\t\t\"The method compound(Iterable<? extends Comparator<? super T>>) in the type X is not applicable for the arguments (List<Comparator<? extends Object>>)\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\"\treturn compound(asList(a, b));\\n\" + ", "+\t\t\"\t                ^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type mismatch: cannot convert from List<Comparator<? extends Object>> to Iterable<? extends Comparator<? super T>>\\n\" + "]}], "num": 69421}