{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a7dab6eddc016ec863ed00bc3e4ec07b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "707ac7677beb5fde6c83c165dbafdd13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "6b9858225d67923b049526e9f466d853be4594d9", "commitAfterChange": "203b107c64823e65870bfe71689c6f409c925937", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " public static char[][] getTypeParameters(char[] methodOrTypeSignature) throws IllegalArgumentException", "signatureAfterChange": " public static char[][] getTypeParameters(char[] methodOrTypeSignature) throws IllegalArgumentException", "diff": ["+\t\t\t\t\tcase C_CAPTURE:", "+\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\ti = Util.scanCaptureTypeSignature(methodOrTypeSignature, i);", "+\t\t\t\t\t\t\ti++; // position at start of next param if any", "+\t\t\t\t\t\t} catch (IllegalArgumentException e) {", "+\t\t\t\t\t\t\t// not a capture variable signature -> it is a new type parameter", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d21f837a17af9b08c420c54170c295ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/Factory.java", "commitBeforeChange": "93435bbc903bd3b20b6b025e5785dd8f0ccdee63", "commitAfterChange": "725055f2b34cdbfae0fb11f5bfd68ad41728348a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tprivate static void decodeModifiers(Set<Modifier> result, int modifiers, int[] checkBits)", "signatureAfterChange": " \t \tprivate static void decodeModifiers(Set<Modifier> result, int modifiers, int[] checkBits)", "diff": ["+\t\t\t\tcase ExtraCompilerModifiers.AccDefaultMethod :", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tappendModifier(result, modifiers, checkBits[i], Modifier.valueOf(\"DEFAULT\")); //$NON-NLS-1$", "+\t\t\t\t\t} catch(IllegalArgumentException iae) {", "+\t\t\t\t\t\t// Don't have JDK 1.8, just ignore and proceed.", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;"]}], "num": 34436}