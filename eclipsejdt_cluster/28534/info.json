{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f942fc73ccaa9133e78111a059a1ba2b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19e24767c454c4ace39ef4fd9df31732", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "8e2ef31cf8fd6f75aa20407e8ef5b91a95949af6", "commitAfterChange": "7b76bd109981132b10232dab12b61206fb5d8435", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tprivate synchronized ICompilationUnit getWorkingCopyForGeneratedFile(IFile parentFile, String typeName, CompilationUnitHelper cuh)", "signatureAfterChange": " \tprivate synchronized ICompilationUnit getWorkingCopyForReconcile(IFile parentFile, String typeName, CompilationUnitHelper cuh)", "diff": ["-\tprivate synchronized ICompilationUnit getWorkingCopyForGeneratedFile(IFile parentFile, String typeName, CompilationUnitHelper cuh)", "+\tprivate synchronized ICompilationUnit getWorkingCopyForReconcile(IFile parentFile, String typeName, CompilationUnitHelper cuh)", "-\t\tworkingCopy = _hiddenBuiltTypes.get(generatedFile);", "+\t\tworkingCopy = _hiddenBuiltTypes.remove(generatedFile);", "+\t\t\t_reconcileNonDeps.remove(parentFile, generatedFile);", "+\t\t\t_reconcileGenTypes.put(generatedFile, workingCopy);", "+\t\t\t_reconcileDeps.put(parentFile, generatedFile);", "-\t\t\t\t\t\"move working copy from hidden to regular list: \" + generatedFile); //$NON-NLS-1$", "-\t\t\t_hiddenBuiltTypes.remove(generatedFile);", "-\t\t\t_workingCopies.put(generatedFile, workingCopy);", "+\t\t\t\t\t\"moved working copy from hidden to regular list: \" + generatedFile); //$NON-NLS-1$", "-\t\t\tworkingCopy = _workingCopies.get(generatedFile);", "-\t\t\tif (null == workingCopy) {", "+\t\t\tworkingCopy = _reconcileGenTypes.get(generatedFile);", "+\t\t\tif (null != workingCopy) {", "+\t\t\t\tif (AptPlugin.DEBUG_GFM_MAPS) AptPlugin.trace(", "+\t\t\t\t\t\t\"obtained existing working copy from regular list: \" + generatedFile); //$NON-NLS-1$", "+\t\t\t} else {", "-\t\t\t\tworkingCopy = cuh.createWorkingCopy(typeName, root);", "-\t\t\t\t_workingCopies.put(generatedFile, workingCopy);", "+\t\t\t\tworkingCopy = cuh.getWorkingCopy(typeName, root);", "+\t\t\t\t_reconcileDeps.put(parentFile, generatedFile);", "+\t\t\t\t_reconcileGenTypes.put(generatedFile, workingCopy);", "-\t\t\t} else {", "-\t\t\t\tif (AptPlugin.DEBUG_GFM_MAPS) AptPlugin.trace(", "-\t\t\t\t\t\t\"obtained existing working copy from regular list: \" + workingCopy.getElementName()); //$NON-NLS-1$", "-\t\t\t}", "-\t\t}", "-", "-\t\t// Add it to the dependency map (a no-op if it's already there)", "-\t\tboolean added = _parentToGenWorkingCopies.put(parentFile, workingCopy);", "-\t\tif (AptPlugin.DEBUG_GFM_MAPS) {", "-\t\t\tif (added)", "-\t\t\t\tAptPlugin.trace(\"working copy association added: \" + parentFile + \" -> \" + workingCopy.getElementName()); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\telse", "-\t\t\t\tAptPlugin.trace(\"working copy association already present: \" + parentFile + \" -> \" + workingCopy.getElementName()); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t} ", "-", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "562f158d038f5538c9ab106973324bb5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "6cb413dbd992ad73f847d7b4e14e78f1406fa2fc", "commitAfterChange": "8659b871eae5c2008485cfb120ce2c8f8ecbfe04", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tprivate ICompilationUnit getCachedWorkingCopy( IFile parentFile, String typeName )", "signatureAfterChange": " \tprivate synchronized ICompilationUnit getWorkingCopyForGeneratedFile(IFile parentFile, String typeName, CompilationUnitHelper cuh)", "diff": ["-\t//", "-\tprivate ICompilationUnit getCachedWorkingCopy( IFile parentFile, String typeName )", "+\t */", "+\tprivate synchronized ICompilationUnit getWorkingCopyForGeneratedFile(IFile parentFile, String typeName, CompilationUnitHelper cuh)", "-\t\tIFile derivedFile = getIFileForTypeName( typeName );", "-\t\tICompilationUnit workingCopy= null;", "+\t\tIPackageFragmentRoot root = _generatedPackageFragmentRoot.get().root;", "+\t\tIFile generatedFile = getIFileForTypeName(typeName);", "+\t\tICompilationUnit workingCopy;", "-\t\tsynchronized( this )", "-\t\t{", "-\t\t\tworkingCopy = _generatedFile2WorkingCopy.get( derivedFile );", "+\t\tworkingCopy = _hiddenBuiltTypes.get(generatedFile);", "+\t\tif (null != workingCopy) {", "+\t\t\t// file is currently hidden with a blank WC. Move that WC to the regular list.", "+\t\t\tif (AptPlugin.DEBUG_GFM_MAPS) AptPlugin.trace(", "+\t\t\t\t\t\"move working copy from hidden to regular list: \" + generatedFile); //$NON-NLS-1$", "+\t\t\t_hiddenBuiltTypes.remove(generatedFile);", "+\t\t\t_workingCopies.put(generatedFile, workingCopy);", "+\t\t} else {", "+\t\t\tworkingCopy = _workingCopies.get(generatedFile);", "+\t\t\tif (null == workingCopy) {", "+\t\t\t\t// we've not yet created a working copy for this file, so make one now.", "+\t\t\t\tworkingCopy = cuh.createWorkingCopy(typeName, root);", "+\t\t\t\t_workingCopies.put(generatedFile, workingCopy);", "+\t\t\t\tif (AptPlugin.DEBUG_GFM_MAPS) AptPlugin.trace( ", "+\t\t\t\t\t\t\"added new working copy to regular list: \" + generatedFile); //$NON-NLS-1$", "+\t\t\t} else {", "+\t\t\t\tif (AptPlugin.DEBUG_GFM_MAPS) AptPlugin.trace(", "+\t\t\t\t\t\t\"obtained existing working copy from regular list: \" + workingCopy.getElementName()); //$NON-NLS-1$", "+\t\t\t}", "-\t\t", "-\t\tif ( workingCopy != null )", "-\t\t\taddEntryToWorkingCopyMaps( parentFile, workingCopy );", "+", "+\t\t// Add it to the dependency map (a no-op if it's already there)", "+\t\tboolean added = _parentToGenWorkingCopies.put(parentFile, workingCopy);", "+\t\tif (AptPlugin.DEBUG_GFM_MAPS) {", "+\t\t\tif (added)", "+\t\t\t\tAptPlugin.trace(\"working copy association added: \" + parentFile + \" -> \" + workingCopy.getElementName()); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\telse", "+\t\t\t\tAptPlugin.trace(\"working copy association already present: \" + parentFile + \" -> \" + workingCopy.getElementName()); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t}", "+", "+\t\tassert checkIntegrity();"]}], "num": 28534}