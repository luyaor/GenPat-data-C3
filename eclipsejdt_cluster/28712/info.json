{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c1ac6abb55ab99449e22c48f898be51d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45d2e1a9797f57d394c4cf022c984a30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "12bbec9151d1b613c62f44289e9e604128f21de0", "commitAfterChange": "cfad6931331ca38f2461ad24853dd9b6dfa652de", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tpublic String toString()", "signatureAfterChange": " \tpublic String toString()", "diff": ["-\t\tpatterns = getAccessibleFiles();", "-\t\tif ((length = patterns == null ? 0 : patterns.length) > 0) {", "-\t\t\tbuffer.append(\"[accessible files:\"); //$NON-NLS-1$", "-\t\t\tfor (int i = 0; i < length; i++) {", "-\t\t\t\tbuffer.append(patterns[i]);", "-\t\t\t\tif (i != length-1) {", "-\t\t\t\t\tbuffer.append('|');", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tbuffer.append(']');", "-\t\t}", "-\t\tpatterns = getNonAccessibleFiles();", "-\t\tif ((length = patterns == null ? 0 : patterns.length) > 0) {", "-\t\t\tbuffer.append(\"[non accessible files:\"); //$NON-NLS-1$", "-\t\t\tfor (int i = 0; i < length; i++) {", "-\t\t\t\tbuffer.append(patterns[i]);", "-\t\t\t\tif (i != length-1) {", "-\t\t\t\t\tbuffer.append('|');", "-\t\t\t\t}", "-\t\t\t}", "+\t\tif (this.accessRuleSet != null) {", "+\t\t\tbuffer.append('[');", "+\t\t\tbuffer.append(this.accessRuleSet);", "-\t\t\tbuffer.append(\"[combine access restrictions:\"); //$NON-NLS-1$", "-\t\t\tbuffer.append(this.combineAccessRestrictions);", "+\t\t\tbuffer.append(\"[combine access rules:\"); //$NON-NLS-1$", "+\t\t\tbuffer.append(this.combineAccessRules);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb4ecd59de3ca1663018b068a924e8e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceTests.java", "commitBeforeChange": "87b777c1fc477e9b3f12a1e072f005600f998f84", "commitAfterChange": "f66fb438b9cc0be7e04e5e7cd4ac6af72beb4f11", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tprotected ICompilationUnit getCompilationUnit(String projectName, String packageName, String unitName) throws JavaModelException", "signatureAfterChange": " \tprotected ICompilationUnit getCompilationUnit(String projectName, String packageName, String unitName) throws JavaModelException", "diff": ["-\t\tIPackageFragmentRoot[] fragmentRoots = javaProject.getPackageFragmentRoots();", "-\t\tint length = fragmentRoots.length;", "-\t\tfor (int i=0; i<length; i++) {", "-\t\t\tif (fragmentRoots[i] instanceof JarPackageFragmentRoot) continue;", "-\t\t\tIJavaElement[] packages= fragmentRoots[i].getChildren();", "-\t\t\tfor (int k= 0; k < packages.length; k++) {", "-\t\t\t\tIPackageFragment pack = (IPackageFragment) packages[k];", "-\t\t\t\tif (pack.getElementName().equals(packageName)) {", "-\t\t\t\t\tICompilationUnit[] units = pack.getCompilationUnits();", "-\t\t\t\t\tfor (int u=0; u<units.length; u++) {", "-\t\t\t\t\t\tif (units[u].getElementName().equals(unitName))", "-\t\t\t\t\t\t\treturn units[u];", "-\t\t\t\t\t}", "+\t\tIType type = javaProject.findType(packageName, unitName);", "+\t\tif (type != null) {", "+\t\t\treturn type.getCompilationUnit();", "+\t\t}", "+\t\treturn null;", "+\t}"]}], "num": 28712}