{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d211d1b4def846270be323931ff57d57", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0614a597ef9126c151dc1399b1b029f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "763e42ee77f843bf78751f85365c5a74eb47696c", "commitAfterChange": "525a282931680472e1c4e0ea3a9d163e6052ec36", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "\r protected void updateIndex(Openable element, IResourceDelta delta)", "signatureAfterChange": "\r protected void updateIndex(Openable element, IResourceDelta delta)", "diff": ["-\t\t\tbreak;\r", "-\t\tcase IJavaElement.COMPILATION_UNIT :\r", "-\t\t\tString extension;\r", "+\t\t\tIFolder binaryFolder;\r", "+\t\t\ttry {\r", "+\t\t\t\tbinaryFolder = (IFolder)element.getPackageFragmentRoot().getUnderlyingResource();\r", "+\t\t\t} catch (JavaModelException e) {\r", "+\t\t\t\tbreak;\r", "+\t\t\t}\r", "-\t\t\t\t\tif (file.isLocal(IResource.DEPTH_ZERO)) indexManager.add(file);\r", "+\t\t\t\t\tif (file.isLocal(IResource.DEPTH_ZERO)) indexManager.add(file, binaryFolder);\r", "-\t\t\t\t\textension = file.getFileExtension();\r", "+\t\t\t\t\tindexManager.remove(file.getFullPath().toString(), binaryFolder);\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t}\r", "+\t\t\tbreak;\r", "+\t\tcase IJavaElement.COMPILATION_UNIT :\r", "+\t\t\tfile = (IFile)delta.getResource();\r", "+\t\t\tswitch (delta.getKind()) {\r", "+\t\t\t\tcase IResourceDelta.CHANGED:\r", "+\t\t\t\t\t// no need to index if the content has not changed\r", "+\t\t\t\t\tif ((delta.getFlags() & IResourceDelta.CONTENT) == 0) break;\r", "+\t\t\t\tcase IResourceDelta.ADDED:\r", "+\t\t\t\t\tif (file.isLocal(IResource.DEPTH_ZERO)) indexManager.add(file, file.getProject());\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\tcase IResourceDelta.REMOVED:\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad58eec6749a73ca0abf76f415ee4c62", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CopyResourceElementsOperation.java", "commitBeforeChange": "b56e158886e2aa788170d58a91d156aead978bb2", "commitAfterChange": "49293b1e00b2d634f6e8ca0ca2462907a22f935a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprivate void processCompilationUnitResource(ICompilationUnit source, IPackageFragment dest) throws JavaModelException", "signatureAfterChange": " \tprivate void processCompilationUnitResource(ICompilationUnit source, IPackageFragment dest) throws JavaModelException", "diff": ["-\t\t// copy resource", "+\t\t// TODO (frederic) remove when bug 67606 will be fixed (bug 67823)", "+\t\t// store encoding (fix bug 66898)", "-\t\tString encoding = null;", "+\t\tString sourceEncoding = null;", "-\t\t\tencoding = sourceResource.getCharset();", "+\t\t\tsourceEncoding = sourceResource.getCharset(false);", "-\t\t\t// use no encoding", "+\t\t\t// no problem, use default encoding", "+\t\t// end todo", "+\t\t// copy resource", "-\t\t\t\t\t", "+\t\t\t\t\tString encoding = null;", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\t// TODO (frederic) remove when bug 67606 will be fixed (bug 67823)", "+\t\t\t\t\t\t// fix bug 66898", "+\t\t\t\t\t\tif (sourceEncoding != null) destFile.setCharset(sourceEncoding);", "+\t\t\t\t\t\t// end todo", "+\t\t\t\t\t\tencoding = destFile.getCharset();", "+\t\t\t\t\t}", "+\t\t\t\t\tcatch (CoreException ce) {", "+\t\t\t\t\t\t// use no encoding", "+\t\t\t\t\t}", "+\t\t\t\t\tString encoding = null;", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\t// TODO (frederic) remove when bug 67606 will be fixed (bug 67823)", "+\t\t\t\t\t\t// fix bug 66898", "+\t\t\t\t\t\tif (sourceEncoding != null) destFile.setCharset(sourceEncoding);", "+\t\t\t\t\t\t// end todo", "+\t\t\t\t\t\tencoding = destFile.getCharset();", "+\t\t\t\t\t}", "+\t\t\t\t\tcatch (CoreException ce) {", "+\t\t\t\t\t\t// use no encoding", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccddd7df19a3ae1c48cf335d84ec08ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "15960429370eb59e63bf5b77d39c92b5c06c9f8e", "commitAfterChange": "0d0ece63676205621683728295e330e5d3ff8080", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \t \tpublic char[] findSource(String fullName)", "signatureAfterChange": " \t \tpublic char[] findSource(String fullName)", "diff": ["-\t\t\tif (target instanceof IFolder) {", "-\t\t\t\tIFolder folder = (IFolder)target;", "-\t\t\t\tIResource res = folder.findMember(fullName);", "-\t\t\t\tif (res instanceof IFile) {", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\tsource = org.eclipse.jdt.internal.core.util.Util.getResourceContentsAsCharArray((IFile)res);", "-\t\t\t\t\t} catch (JavaModelException e) {", "-\t\t\t\t\t\t// ignore", "+\t\t\tif (target instanceof IResource) {", "+\t\t\t\tif (target instanceof IContainer) {", "+\t\t\t\t\tIResource res = ((IContainer)target).findMember(fullName);", "+\t\t\t\t\tif (res instanceof IFile) {", "+\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\tsource = org.eclipse.jdt.internal.core.util.Util.getResourceContentsAsCharArray((IFile)res);", "+\t\t\t\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t\t\t\t// ignore", "+\t\t\t\t\t\t}", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\tsource = Util.getFileCharContent(sourceFile, this.encoding);", "-\t\t\t\t\t} catch (IOException e) {", "-\t\t\t\t\t\t// ignore", "+\t\t\t\t\tif (sourceFile.isFile()) {", "+\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\tsource = Util.getFileCharContent(sourceFile, this.encoding);", "+\t\t\t\t\t\t} catch (IOException e) {", "+\t\t\t\t\t\t\t// ignore", "+\t\t\t\t\t\t}"]}], "num": 19939}