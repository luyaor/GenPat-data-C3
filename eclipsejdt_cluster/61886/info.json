{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f55c5948ea97dc7d34f17d69580007b2", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af76eb8ff2191ba069a7bd7bd920fb51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatter.java", "commitBeforeChange": "1e7b2635fdd10a3d2af3009a814cf3bf5195dca6", "commitAfterChange": "e8694b9ceffda8295cb9649e947b736f9206efbd", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \tpublic String format(String string, int indentationLevel, int[] positions)", "signatureAfterChange": "\r \tpublic String format(String string, int indentationLevel, int[] positions)", "diff": ["-\t\t// XXX temporary inefficient implementation to meet API\r", "+\t\treturn this.format(string, indentationLevel, positions, null);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db1ef52e67757fe6f2dde2b36a8cd66f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "04b1f777f72aaed365425972c86158987dc99f47", "commitAfterChange": "627e74400f5d869da7cccfccaf9f22c5e00c372a", "methodNumberBeforeChange": 178, "methodNumberAfterChange": 178, "signatureBeforeChange": "  \tprivate void findVariableName( \t\t\tchar[] token, \t\t\tchar[] qualifiedPackageName, \t\t\tchar[] qualifiedSourceName, \t\t\tchar[] sourceName, \t\t\tfinal TypeBinding typeBinding, \t\t\tchar[][] discouragedNames, \t\t\tfinal char[][] forbiddenNames, \t\t\tboolean forCollection, \t\t\tint dim, \t\t\tint kind, \t\t\tint modifiers)", "signatureAfterChange": "  \tprivate void findVariableName( \t\t\tchar[] token, \t\t\tchar[] qualifiedPackageName, \t\t\tchar[] qualifiedSourceName, \t\t\tchar[] sourceName, \t\t\tfinal TypeBinding typeBinding, \t\t\tchar[][] discouragedNames, \t\t\tfinal char[][] forbiddenNames, \t\t\tboolean forCollection, \t\t\tint dim, \t\t\tint kind)", "diff": ["-\t\t\tint kind,", "-\t\t\tint modifiers){", "+\t\t\tint kind){", "-\t\tswitch (kind) {", "-\t\t\tcase FIELD :", "-\t\t\t\tInternalNamingConventions.suggestFieldNames(", "-\t\t\t\t\tthis.javaProject,", "-\t\t\t\t\tqualifiedPackageName,", "-\t\t\t\t\tqualifiedSourceName,", "-\t\t\t\t\tdim,", "-\t\t\t\t\tmodifiers,", "-\t\t\t\t\ttoken,", "-\t\t\t\t\tdiscouragedNames,", "-\t\t\t\t\tnamingRequestor);", "-\t\t\t\tbreak;", "-\t\t\tcase LOCAL :", "-\t\t\t\tInternalNamingConventions.suggestLocalVariableNames(", "-\t\t\t\t\tthis.javaProject,", "-\t\t\t\t\tqualifiedPackageName,", "-\t\t\t\t\tqualifiedSourceName,", "-\t\t\t\t\tdim,", "-\t\t\t\t\ttoken,", "-\t\t\t\t\tdiscouragedNames,", "-\t\t\t\t\tnamingRequestor);", "-\t\t\t\tbreak;", "-\t\t\tcase ARGUMENT :", "-\t\t\t\tInternalNamingConventions.suggestArgumentNames(", "-\t\t\t\t\tthis.javaProject,", "-\t\t\t\t\tqualifiedPackageName,", "-\t\t\t\t\tqualifiedSourceName,", "-\t\t\t\t\tdim,", "-\t\t\t\t\ttoken,", "-\t\t\t\t\tdiscouragedNames,", "-\t\t\t\t\tnamingRequestor);", "-\t\t\t\tbreak;", "-\t\t}", "+\t\tInternalNamingConventions.suggestVariableNames(", "+\t\t\t\tkind,", "+\t\t\t\tInternalNamingConventions.BK_SIMPLE_TYPE_NAME,", "+\t\t\t\tqualifiedSourceName,", "+\t\t\t\tthis.javaProject,", "+\t\t\t\tdim,", "+\t\t\t\ttoken,", "+\t\t\t\tdiscouragedNames,", "+\t\t\t\ttrue,", "+\t\t\t\tnamingRequestor);"]}], "num": 61886}