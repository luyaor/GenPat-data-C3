{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f7cba46e97ac5cc3eeee2319d3d58e86", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af1a99965dd48d0087aa1aad968496fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/internal/compiler/tool/Options.java", "commitBeforeChange": "2f058cfa3165f95e2fa19653ebb726256ae58b18", "commitAfterChange": "b6c213d292f2a14fc7e944fa6a9473734abc07ab", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic static int processOptions(String option)", "signatureAfterChange": "  \tpublic static int processOptions(String option)", "diff": ["-\t\t\t\tif (\"constructorName\".equals(token)//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"pkgDefaultMethod\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"packageDefaultMethod\")//$NON-NLS-1$", "+\t\t\t\tif (token.equals(\"allDeadCode\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"allDeprecation\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"allJavadoc\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"assertIdentifier\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"boxing\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"charConcat\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"compareIdentical\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"conditionAssign\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"constructorName\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"deadCode\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"dep-ann\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"deprecation\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"discouraged\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"emptyBlock\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"enumIdentifier\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"enumSwitch\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"fallthrough\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"fieldHiding\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"finalBound\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"finally\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"forbidden\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"hashCode\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"hiding\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"incomplete-switch\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"indirectStatic\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"interfaceNonInherited\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"intfAnnotation\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"intfNonInherited\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"intfRedundant\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"javadoc\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"localHiding\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"deprecation\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"allDeprecation\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"unusedLocal\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"unusedLocals\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"nls\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"noEffectAssign\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"noImplicitStringConversion\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"null\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"nullDereference\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"over-ann\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"packageDefaultMethod\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"paramAssign\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"pkgDefaultMethod\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"raw\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"semicolon\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"serial\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"specialParamHiding\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"static-access\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"staticReceiver\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"super\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"suppress\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"syncOverride\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"synthetic-access\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"syntheticAccess\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"typeHiding\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"unchecked\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"unnecessaryElse\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"unqualified-field-access\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"unqualifiedField\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"unsafe\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"unused\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"unusedPrivate\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"localHiding\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"fieldHiding\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"specialParamHiding\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"conditionAssign\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"syntheticAccess\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"synthetic-access\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"nls\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"staticReceiver\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"indirectStatic\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"noEffectAssign\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"intfNonInherited\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"interfaceNonInherited\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"charConcat\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"noImplicitStringConversion\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"semicolon\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"serial\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"emptyBlock\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"uselessTypeCheck\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"unchecked\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"unsafe\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"raw\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"finalBound\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"suppress\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"warningToken\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"unnecessaryElse\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"javadoc\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"allJavadoc\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"assertIdentifier\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"enumIdentifier\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"finally\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"unusedLocal\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"unusedLocals\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"unusedPrivate\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"unqualifiedField\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"unqualified-field-access\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"typeHiding\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"unusedTypeArgs\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"uselessTypeCheck\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"null\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"boxing\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"over-ann\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"dep-ann\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"intfAnnotation\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"enumSwitch\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"incomplete-switch\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"hiding\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"static-access\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"unused\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"paramAssign\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"discouraged\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"forbidden\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"fallthrough\")) {//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"warningToken\")) {//$NON-NLS-1$", "-    \t\t\t} else if (token.equals(\"tasks\")) {//$NON-NLS-1$", "-    \t\t\t\tString taskTags = \"\";//$NON-NLS-1$", "-    \t\t\t\tint start = token.indexOf('(');", "-    \t\t\t\tint end = token.indexOf(')');", "-    \t\t\t\tif (start >= 0 && end >= 0 && start < end){", "-    \t\t\t\t\ttaskTags = token.substring(start+1, end).trim();", "-    \t\t\t\t\ttaskTags = taskTags.replace('|',',');", "-    \t\t\t\t}", "-    \t\t\t\tif (taskTags.length() == 0){", "-    \t\t\t\t\treturn -1;", "-    \t\t\t\t}", "-    \t\t\t\tcontinue;", "-    \t\t\t} else {", "-    \t\t\t\treturn -1;", "-    \t\t\t}", "+\t\t\t\t} else if (token.equals(\"tasks\")) {//$NON-NLS-1$", "+\t\t\t\t\tString taskTags = \"\";//$NON-NLS-1$", "+\t\t\t\t\tint start = token.indexOf('(');", "+\t\t\t\t\tint end = token.indexOf(')');", "+\t\t\t\t\tif (start >= 0 && end >= 0 && start < end){", "+\t\t\t\t\t\ttaskTags = token.substring(start+1, end).trim();", "+\t\t\t\t\t\ttaskTags = taskTags.replace('|',',');", "+\t\t\t\t\t}", "+\t\t\t\t\tif (taskTags.length() == 0){", "+\t\t\t\t\t\treturn -1;", "+\t\t\t\t\t}", "+\t\t\t\t\tcontinue;", "+\t\t\t\t} else {", "+\t\t\t\t\treturn -1;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5adead682109fe7ddf7997d27b2d7a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/util/Options.java", "commitBeforeChange": "f6d7e4c8ebdaaf8a904962804a027a09edc0c0d3", "commitAfterChange": "30e98d6cc084dfe1b207ffb7493b2de7b6cec8c4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic static int processOptions(String option)", "signatureAfterChange": "  \tpublic static int processOptions(String option)", "diff": ["-\t\tif (ZERO_ARGUMENT_OPTIONS.contains(option)) {", "+\t\tif (Options.ZERO_ARGUMENT_OPTIONS.contains(option)) {", "-\t\tif (ONE_ARGUMENT_OPTIONS.contains(option)) {", "+\t\tif (Options.ONE_ARGUMENT_OPTIONS.contains(option)) {", "-\t\t\t\tif (\"constructorName\".equals(token)//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"pkgDefaultMethod\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"packageDefaultMethod\")//$NON-NLS-1$", "+\t\t\t\tif (token.equals(\"allDeadCode\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"allDeprecation\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"allJavadoc\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"allOver-ann\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"assertIdentifier\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"boxing\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"charConcat\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"compareIdentical\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"conditionAssign\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"constructorName\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"deadCode\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"dep-ann\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"deprecation\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"discouraged\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"emptyBlock\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"enumIdentifier\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"enumSwitch\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"fallthrough\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"fieldHiding\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"finalBound\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"finally\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"forbidden\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"hashCode\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"hiding\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"includeAssertNull\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"incomplete-switch\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"indirectStatic\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"interfaceNonInherited\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"intfAnnotation\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"intfNonInherited\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"intfRedundant\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"javadoc\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"localHiding\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"deprecation\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"allDeprecation\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"unusedLocal\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"unusedLocals\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"nls\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"noEffectAssign\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"noImplicitStringConversion\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"null\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"nullDereference\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"over-ann\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"packageDefaultMethod\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"paramAssign\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"pkgDefaultMethod\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"raw\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"semicolon\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"serial\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"specialParamHiding\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"static-access\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"staticReceiver\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"super\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"suppress\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"syncOverride\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"synthetic-access\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"syntheticAccess\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"typeHiding\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"unchecked\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"unnecessaryElse\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"unnecessaryOperator\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"unqualified-field-access\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"unqualifiedField\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"unsafe\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"unused\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"unusedPrivate\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"localHiding\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"fieldHiding\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"specialParamHiding\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"conditionAssign\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"syntheticAccess\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"synthetic-access\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"nls\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"staticReceiver\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"indirectStatic\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"noEffectAssign\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"intfNonInherited\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"interfaceNonInherited\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"charConcat\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"noImplicitStringConversion\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"semicolon\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"serial\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"emptyBlock\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"uselessTypeCheck\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"unchecked\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"unsafe\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"raw\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"finalBound\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"suppress\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"warningToken\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"unnecessaryElse\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"javadoc\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"allJavadoc\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"assertIdentifier\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"enumIdentifier\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"finally\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"unusedLocal\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"unusedLocals\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"unusedPrivate\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"unqualifiedField\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"unqualified-field-access\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"typeHiding\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"unusedTypeArgs\")//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"uselessTypeCheck\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"null\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"boxing\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"over-ann\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"dep-ann\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"intfAnnotation\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"enumSwitch\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"incomplete-switch\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"hiding\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"static-access\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"unused\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"paramAssign\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"discouraged\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"forbidden\")//$NON-NLS-1$", "-\t\t\t\t\t\t|| token.equals(\"fallthrough\")) {//$NON-NLS-1$", "+\t\t\t\t\t\t|| token.equals(\"warningToken\")) {//$NON-NLS-1$", "-    \t\t\t} else if (token.equals(\"tasks\")) {//$NON-NLS-1$", "-    \t\t\t\tString taskTags = \"\";//$NON-NLS-1$", "-    \t\t\t\tint start = token.indexOf('(');", "-    \t\t\t\tint end = token.indexOf(')');", "-    \t\t\t\tif (start >= 0 && end >= 0 && start < end){", "-    \t\t\t\t\ttaskTags = token.substring(start+1, end).trim();", "-    \t\t\t\t\ttaskTags = taskTags.replace('|',',');", "-    \t\t\t\t}", "-    \t\t\t\tif (taskTags.length() == 0){", "-    \t\t\t\t\treturn -1;", "-    \t\t\t\t}", "-    \t\t\t\tcontinue;", "-    \t\t\t} else {", "-    \t\t\t\treturn -1;", "-    \t\t\t}", "+\t\t\t\t} else if (token.equals(\"tasks\")) {//$NON-NLS-1$", "+\t\t\t\t\tString taskTags = \"\";//$NON-NLS-1$", "+\t\t\t\t\tint start = token.indexOf('(');", "+\t\t\t\t\tint end = token.indexOf(')');", "+\t\t\t\t\tif (start >= 0 && end >= 0 && start < end){", "+\t\t\t\t\t\ttaskTags = token.substring(start+1, end).trim();", "+\t\t\t\t\t\ttaskTags = taskTags.replace('|',',');", "+\t\t\t\t\t}", "+\t\t\t\t\tif (taskTags.length() == 0){", "+\t\t\t\t\t\treturn -1;", "+\t\t\t\t\t}", "+\t\t\t\t\tcontinue;", "+\t\t\t\t} else {", "+\t\t\t\t\treturn -1;", "+\t\t\t\t}", "+\t\tif (option.startsWith(\"-nowarn\")) {//$NON-NLS-1$", "+\t\t\tswitch (option.length()) {", "+\t\t\t\tcase 7:", "+\t\t\t\t\treturn 0;", "+\t\t\t\tcase 8:", "+\t\t\t\t\treturn -1;", "+\t\t\t\tdefault:", "+\t\t\t\t\tint foldersStart = option.indexOf('[') + 1;", "+\t\t\t\t\tint foldersEnd = option.lastIndexOf(']');", "+\t\t\t\t\tif (foldersStart <= 8 || foldersEnd == -1", "+\t\t\t\t\t\t\t|| foldersStart > foldersEnd", "+\t\t\t\t\t\t\t|| foldersEnd < option.length() - 1) {", "+\t\t\t\t\t\treturn -1;", "+\t\t\t\t\t}", "+\t\t\t\t\tString folders = option.substring(foldersStart, foldersEnd);", "+\t\t\t\t\tif (folders.length() > 0) {", "+\t\t\t\t\t\treturn 0;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\treturn -1;", "+\t\t\t\t\t}", "+\t\t\t}", "+\t\t}"]}], "num": 11819}