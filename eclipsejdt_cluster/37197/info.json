{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d217e6e4159e0526abe4456a7c606b66", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ca03efee2427c35570d15e8b8b86a8a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SearchableEnvironmentRequestor.java", "commitBeforeChange": "11c24986fc925cfc43f4c88e72e0daee39a1576b", "commitAfterChange": "55350d5af8386833b94a470ab6a0d389ee3fc665", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public SearchableEnvironmentRequestor(ISearchRequestor requestor, ICompilationUnit unitToSkip)", "signatureAfterChange": " public SearchableEnvironmentRequestor(ISearchRequestor requestor, ICompilationUnit unitToSkip, IJavaProject project, NameLookup nameLookup)", "diff": ["-public SearchableEnvironmentRequestor(ISearchRequestor requestor, ICompilationUnit unitToSkip) {", "-\tfRequestor = requestor;", "-\tfUnitToSkip= unitToSkip;", "+public SearchableEnvironmentRequestor(ISearchRequestor requestor, ICompilationUnit unitToSkip, IJavaProject project, NameLookup nameLookup) {", "+\tthis.requestor = requestor;", "+\tthis.unitToSkip= unitToSkip;", "+\tthis.project= project;", "+\tthis.nameLookup = nameLookup;", "+\tthis.checkAccessRestrictions = !JavaCore.IGNORE.equals(project.getOption(JavaCore.COMPILER_PB_FORBIDDEN_REFERENCE, true));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9557f8387807963928716b40e48a07c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "4b4dbca0bb97a8d7d91d56de2e2d0246704ead9c", "commitAfterChange": "f45c88f3e7a99f05a0822482d3d6807236a1c216", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic ClasspathEntry( \t\tint contentKind, \t\tint entryKind, \t\tIPath path, \t\tIPath[] inclusionPatterns, \t\tIPath[] exclusionPatterns, \t\tIPath sourceAttachmentPath, \t\tIPath sourceAttachmentRootPath, \t\tIPath specificOutputLocation, \t\tboolean isExported)", "signatureAfterChange": " \tpublic ClasspathEntry( \t\tint contentKind, \t\tint entryKind, \t\tIPath path, \t\tIPath[] inclusionPatterns, \t\tIPath[] exclusionPatterns, \t\tIPath sourceAttachmentPath, \t\tIPath sourceAttachmentRootPath, \t\tIPath specificOutputLocation, \t\tboolean isExported, \t\tIPath[] accessibleFiles, \t\tIPath[] nonAccessibleFiles, \t\tIClasspathAttribute[] extraAttributes)", "diff": ["-\t\tboolean isExported) {", "+\t\tboolean isExported,", "+\t\tIPath[] accessibleFiles,", "+\t\tIPath[] nonAccessibleFiles,", "+\t\tIClasspathAttribute[] extraAttributes) {", "+\t\tthis.accessibleFiles = accessibleFiles;", "+\t\tthis.nonAccessibleFiles = nonAccessibleFiles;", "+\t\tthis.extraAttributes = extraAttributes;", "-\t\t\tthis.importRestriction = UNINIT_RESTRICTION;", "+\t    }", "+\t    if (accessibleFiles != INCLUDE_ALL && accessibleFiles.length > 0) {", "+\t\t\tthis.importRestriction = UNINIT_RESTRICTION;", "+\t    }", "+\t    if (nonAccessibleFiles.length > 0) {"]}], "num": 37197}