{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5c94dbcdf5ebf42242e89ef2a03e685e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93bb83b34cc714bbdd618f7b67214e23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "cd140389e1d0cdca9f232f9b33d1b09e90034b22", "commitAfterChange": "8cb3365a924e5869d5c8a5715a80d4cd8189b243", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public final boolean checkCastTypesCompatibility(Scope scope, TypeBinding castType, TypeBinding expressionType, Expression expression)", "signatureAfterChange": " public final boolean checkCastTypesCompatibility(Scope scope, TypeBinding castType, TypeBinding expressionType, Expression expression)", "diff": ["-\t\t} else if (use17specifics && expressionType instanceof ReferenceBinding && !expressionType.isPrimitiveOrBoxedPrimitiveType()) {", "+\t\t} else if (use17specifics && castType.isPrimitiveType() && expressionType instanceof ReferenceBinding && ", "+\t\t\t\t!expressionType.isPrimitiveOrBoxedPrimitiveType() && checkCastTypesCompatibility(scope, scope.boxing(castType), expressionType, expression)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "943521348a45eb60fba6c927a9d3e53c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "6f632e6c9b1f2ab8d4dcc2c951d7c4d82550641a", "commitAfterChange": "abe6a4b8c7a37b999ce782468f77dcc11e925eae", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public final boolean checkCastTypesCompatibility(Scope scope, TypeBinding castType, TypeBinding expressionType, Expression expression)", "signatureAfterChange": " public final boolean checkCastTypesCompatibility(Scope scope, TypeBinding castType, TypeBinding expressionType, Expression expression)", "diff": ["-\t\t} else if (use17specifics && expressionType.id == TypeIds.T_JavaLangObject){", "-\t\t\t// cast from Object to base type allowed from 1.7, see JLS $5.5", "+\t\t} else if (use17specifics && expressionType instanceof ReferenceBinding && !expressionType.isPrimitiveOrBoxedPrimitiveType()) {", "+\t\t\t// cast from any reference type (other than boxing types) to base type allowed from 1.7, see JLS $5.5", "+\t\t\t// by our own interpretation (in accordance with javac) we reject arays, though."]}], "num": 24502}