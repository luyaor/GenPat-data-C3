{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b9bfeea1f61443c9bce5f30b55e1a8c1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c871850f47f1ddf2ee225edc9c46d59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 213, "methodNumberAfterChange": 213, "signatureBeforeChange": " public void test207()", "signatureAfterChange": " public void test207()", "diff": ["-\t\t\"foo cannot be resolved\\n\" + ", "+\t\t\"Cannot reference a field before it is defined\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\"\t@Ann(m=foo)\\n\" + ", "+\t\t\"\t       ^^^\\n\" + ", "+\t\t\"NonExisting cannot be resolved to a type\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 3)\\n\" + ", "-\t\t\"3. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\"4. ERROR in X.java (at line 4)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2187f7b0a9b3937e15fbdcc6017078dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "93de56b29d808bccb957df4ffa2902903a4c6151", "commitAfterChange": "baaa74c4f9aeaa7948ea0d073edd04cfcc2c793e", "methodNumberBeforeChange": 280, "methodNumberAfterChange": 279, "signatureBeforeChange": " public void test132()", "signatureAfterChange": " public void test132()", "diff": ["-// variant - simpler test case", "+// variant - type identity vs type equivalence", "-\t\t\t\"  U foo();\\n\" + ", "+\t\t\t\"  U foo(I<?> p);\\n\" + ", "+\t\t\t\"  U foo2(I<? extends Object> p);\\n\" + ", "-\t\t\t\"  public Object foo() {\\n\" + ", "-\t\t\t\"    return null;\\n\" + ", "-\t\t\t\"  }\\n\" + ", "+\t\t\t\"  public Object foo(I<? extends Object> p) { return null; }\\n\" + ", "+\t\t\t\"  public Object foo2(I<?> p) { return null; }\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\"\tpublic Object foo() {\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"\tpublic Object foo(I<? extends Object> p) { return null; }\\n\" + ", "-\t\t\"The return type is incompatible with I<U>.foo()\\n\" + ", "-\t\t\"----------\\n\");", "+\t\t\"The return type is incompatible with I<U>.foo(I<?>)\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\"\tpublic Object foo2(I<?> p) { return null; }\\n\" + ", "+\t\t\"\t       ^^^^^^\\n\" + ", "+\t\t\"The return type is incompatible with I<U>.foo2(I<? extends Object>)\\n\" + ", "+\t\t\"----------\\n\"", "+\t);"]}], "num": 12802}