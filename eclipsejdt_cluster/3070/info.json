{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "66743881ae01ebb26bebaba4f8bc92eb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a383c608e9581add1da00926d0e3a19", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/BinaryIndexer.java", "commitBeforeChange": "45385c42d33d34d82cce64b08ed0e453cded1e96", "commitAfterChange": "30ec825eb31162680cfe9de305168a6c878fa9bb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r private void indexClassFile(byte[] contents, char[] documentName) throws IOException", "signatureAfterChange": "\r private void indexClassFile(byte[] contents, char[] documentName) throws IOException", "diff": ["+\t\t\tif (nameLength <= 0) {\r", "+\t\t\t\t// See PR 1GIR345: ITPJCORE:ALL - Indexer: NegativeArraySizeException\r", "+\t\t\t\treturn;\r", "+\t\t\t}\r", "-\t\tif (DEBUG) {\r", "-\t\t\tif (packageName != null) {\r", "-\t\t\t\tSystem.out.println(\"package name = \" + new String(packageName)); //$NON-NLS-1$\r", "-\t\t\t}\r", "-\t\t\tif (name != null) {\r", "-\t\t\t\tSystem.out.println(\"class name = \" + new String(name)); //$NON-NLS-1$\r", "-\t\t\t}\r", "-\t\t\tif (superinterfaces != null) {\r", "-\t\t\t\tfor (int i = 0, max = superinterfaces.length; i < max; i++) {\r", "-\t\t\t\t\tSystem.out.println(\"superinterfaces[\" + i + \"]= \" + new String(superinterfaces[i])); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\t\t\t}\r", "-\t\t\t} \r", "-\t\t}\r", "-\t\t\tif (DEBUG) {\r", "-\t\t\t\tif (superclass != null) {\r", "-\t\t\t\t\tSystem.out.println(\"superclass name = \" + new String(superclass)); //$NON-NLS-1$\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t\t\tif (DEBUG) {\r", "-\t\t\t\t\tif (method.getSelector() != null) {\r", "-\t\t\t\t\t\tSystem.out.println(\"method selector = \" + new String(method.getSelector())); //$NON-NLS-1$\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\tif (parameterTypes != null) {\r", "-\t\t\t\t\t\tfor (int j = 0, max2 = parameterTypes.length; j < max2; j++) {\r", "-\t\t\t\t\t\t\tSystem.out.println(\"parameterTypes[\" + j + \"]= \" + new String(parameterTypes[j])); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\tif (returnType != null) {\r", "-\t\t\t\t\t\tSystem.out.println(\"return type = \" + new String(returnType)); //$NON-NLS-1$\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\tif (exceptionTypes != null) {\r", "-\t\t\t\t\t\tfor (int j = 0, max2 = exceptionTypes.length; j < max2; j++) {\r", "-\t\t\t\t\t\t\tSystem.out.println(\"exceptionTypes[\" + j + \"]= \" + new String(exceptionTypes[j])); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r", "-\t\t\t\tif (DEBUG) {\r", "-\t\t\t\t\tif (fieldName != null) {\r", "-\t\t\t\t\t\tSystem.out.println(\"field name = \" + new String(fieldName)); //$NON-NLS-1$\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\tif (fieldType != null) {\r", "-\t\t\t\t\t\tSystem.out.println(\"field type = \" + new String(fieldType)); //$NON-NLS-1$\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b39dd23d82f46b9d2bb868f4889fc93e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "837307d08b616384b505afc73627ca69c848f688", "commitAfterChange": "3766f92877d37ddf99f4fd2284092baada4bd7d4", "methodNumberBeforeChange": 246, "methodNumberAfterChange": 246, "signatureBeforeChange": " public void ldc(String constant)", "signatureAfterChange": " public void ldc(String constant)", "diff": ["-\t\tstackDepth++;", "-\t\tif (stackDepth > stackMax) {", "-\t\t\tstackMax = stackDepth;", "-\t\t}", "-\t\tif (index > 255) {", "-\t\t\tif (DEBUG) System.out.println(position + \"\\t\\tldc_w:\"+constant); //$NON-NLS-1$", "-\t\t\t// Generate a ldc_w", "-\t\t\tif (classFileOffset + 2 >= bCodeStream.length) {", "-\t\t\t\tresizeByteArray();", "-\t\t\t}", "-\t\t\tposition++;", "-\t\t\tbCodeStream[classFileOffset++] = Opcodes.OPC_ldc_w;", "-\t\t\twriteUnsignedShort(index);", "-\t\t} else {", "-\t\t\tif (DEBUG) System.out.println(position + \"\\t\\tldc:\"+constant); //$NON-NLS-1$", "-\t\t\t// Generate a ldc", "-\t\t\tif (classFileOffset + 1 >= bCodeStream.length) {", "-\t\t\t\tresizeByteArray();", "-\t\t\t}", "-\t\t\tposition += 2;", "-\t\t\tbCodeStream[classFileOffset++] = Opcodes.OPC_ldc;", "-\t\t\tbCodeStream[classFileOffset++] = (byte) index;", "-\t\t}", "+\t\tthis.ldcForIndex(index, constantChars);", "-\t\tstackDepth++;", "-\t\tif (stackDepth > stackMax) {", "-\t\t\tstackMax = stackDepth;", "-\t\t}", "-\t\tif (index > 255) {", "-\t\t\t// Generate a ldc_w", "-\t\t\tif (classFileOffset + 2 >= bCodeStream.length) {", "-\t\t\t\tresizeByteArray();", "-\t\t\t}", "-\t\t\tposition++;", "-\t\t\tbCodeStream[classFileOffset++] = Opcodes.OPC_ldc_w;", "-\t\t\twriteUnsignedShort(index);", "-\t\t} else {", "-\t\t\t// Generate a ldc", "-\t\t\tif (classFileOffset + 1 >= bCodeStream.length) {", "-\t\t\t\tresizeByteArray();", "-\t\t\t}", "-\t\t\tposition += 2;", "-\t\t\tbCodeStream[classFileOffset++] = Opcodes.OPC_ldc;", "-\t\t\tbCodeStream[classFileOffset++] = (byte) index;", "-\t\t}", "+\t\tthis.ldcForIndex(index, subChars);", "-\t\t\tstackDepth++;", "-\t\t\tif (stackDepth > stackMax)", "-\t\t\t\tstackMax = stackDepth;", "-\t\t\tif (index > 255) {", "-\t\t\t\t// Generate a ldc_w", "-\t\t\t\tif (classFileOffset + 2 >= bCodeStream.length) {", "-\t\t\t\t\tresizeByteArray();", "-\t\t\t\t}", "-\t\t\t\tposition++;", "-\t\t\t\tbCodeStream[classFileOffset++] = Opcodes.OPC_ldc_w;", "-\t\t\t\twriteUnsignedShort(index);", "-\t\t\t} else {", "-\t\t\t\t// Generate a ldc", "-\t\t\t\tif (classFileOffset + 1 >= bCodeStream.length) {", "-\t\t\t\t\tresizeByteArray();", "-\t\t\t\t}", "-\t\t\t\tposition += 2;", "-\t\t\t\tbCodeStream[classFileOffset++] = Opcodes.OPC_ldc;", "-\t\t\t\tbCodeStream[classFileOffset++] = (byte) index;", "-\t\t\t}", "+\t\t\tthis.ldcForIndex(index, subChars);"]}], "num": 3070}