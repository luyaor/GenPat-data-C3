{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "673bfd62ea93ab9635ac1d130bc40491", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46b78b38a6e2ad22958c882d51826e96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "895b1bbc42bc6ec924c8066f964f04fd4701ee79", "commitAfterChange": "67975c44c978fcc3c550a5b5ce1ec6de6e5d9bb1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " void cachePartsFrom(IBinaryType binaryType, boolean needFieldsAndMethods)", "signatureAfterChange": " void cachePartsFrom(IBinaryType binaryType, boolean needFieldsAndMethods)", "diff": ["+\t// must retrieve member types in case superclass/interfaces need them", "+\tthis.memberTypes = NoMemberTypes;", "+\tIBinaryNestedType[] memberTypeStructures = binaryType.getMemberTypes();", "+\tif (memberTypeStructures != null) {", "+\t\tint size = memberTypeStructures.length;", "+\t\tif (size > 0) {", "+\t\t\tthis.memberTypes = new ReferenceBinding[size];", "+\t\t\tfor (int i = 0; i < size; i++)", "+\t\t\t\t// attempt to find each member type if it exists in the cache (otherwise - resolve it when requested)", "+\t\t\t\tthis.memberTypes[i] = environment.getTypeFromConstantPoolName(memberTypeStructures[i].getName(), 0, -1, false);", "+\t\t\tthis.tagBits |= \tHasUnresolvedMemberTypes;", "+\t\t}", "+\t}", "+", "-\t\t}", "-\t}", "-", "-\tthis.memberTypes = NoMemberTypes;", "-\tIBinaryNestedType[] memberTypeStructures = binaryType.getMemberTypes();", "-\tif (memberTypeStructures != null) {", "-\t\tint size = memberTypeStructures.length;", "-\t\tif (size > 0) {", "-\t\t\tthis.memberTypes = new ReferenceBinding[size];", "-\t\t\tfor (int i = 0; i < size; i++)", "-\t\t\t\t// attempt to find each member type if it exists in the cache (otherwise - resolve it when requested)", "-\t\t\t\tthis.memberTypes[i] = environment.getTypeFromConstantPoolName(memberTypeStructures[i].getName(), 0, -1, false);", "-\t\t\tthis.tagBits |= \tHasUnresolvedMemberTypes;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a184dd7721d159d62110c8e2d270450c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateMethodOperation.java", "commitBeforeChange": "90d481edc9060cc498a8f085b08186108312e37b", "commitAfterChange": "f3a3c06f6e68ab7680c250209b9759ac3d56fec6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected String[] convertDOMMethodTypesToSignatures()", "signatureAfterChange": " protected String[] convertASTMethodTypesToSignatures()", "diff": ["-// TODO - JDOM - remove once model ported off of JDOM", "-protected String[] convertDOMMethodTypesToSignatures() {", "-\tif (fParameterTypes == null) {", "-\t\tif (isDOMNodeNull()) {", "-\t\t\tString[] domParameterTypes = ((IDOMMethod)fDOMNode).getParameterTypes();", "-\t\t\tif (domParameterTypes != null) {", "-\t\t\t\tfParameterTypes = new String[domParameterTypes.length];", "-\t\t\t\t// convert the DOM types to signatures", "-\t\t\t\tint i;", "-\t\t\t\tfor (i = 0; i < fParameterTypes.length; i++) {", "-\t\t\t\t\tfParameterTypes[i] = Signature.createTypeSignature(domParameterTypes[i].toCharArray(), false);", "-\t\t\t\t}", "+protected String[] convertASTMethodTypesToSignatures() {", "+\tif (this.parameterTypes == null) {", "+\t\tif (this.createdNode != null) {", "+\t\t\tList parameters = ((MethodDeclaration) this.createdNode).parameters();", "+\t\t\tint size = parameters.size();", "+\t\t\tthis.parameterTypes = new String[size];", "+\t\t\tIterator iterator = parameters.iterator();", "+\t\t\t// convert the AST types to signatures", "+\t\t\tfor (int i = 0; i < size; i++) {", "+\t\t\t\tSingleVariableDeclaration parameter = (SingleVariableDeclaration) iterator.next();", "+\t\t\t\tthis.parameterTypes[i] = Util.getSignature(parameter.getType());", "-\treturn fParameterTypes;", "+\treturn this.parameterTypes;"]}], "num": 5374}