{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4d23744db4e05faa106d500977fcf592", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "223a9661ec1d7137e07a8b7b97210462", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/StringOperation.java", "commitBeforeChange": "62acea3260f4f00bef914855d231d5ca0b875fd6", "commitAfterChange": "a68053c2948ee889fd2391b7d830587638604892", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public static final int[] getCamelCaseMatchingRegions(String pattern, int patternStart, int patternEnd, String name, int nameStart, int nameEnd, boolean samePartCount)", "signatureAfterChange": " public static final int[] getCamelCaseMatchingRegions(String pattern, int patternStart, int patternEnd, String name, int nameStart, int nameEnd, boolean samePartCount)", "diff": ["-\t\tif ((ScannerHelper.OBVIOUS_IDENT_CHAR_NATURES[pattern.charAt(i)] & (ScannerHelper.C_UPPER_LETTER | ScannerHelper.C_DIGIT)) != 0) {", "+\t\tfinal char ch = pattern.charAt(i);", "+\t\tif (ch < ScannerHelper.MAX_OBVIOUS) {", "+\t\t\tif ((ScannerHelper.OBVIOUS_IDENT_CHAR_NATURES[ch] & (ScannerHelper.C_UPPER_LETTER | ScannerHelper.C_DIGIT)) != 0) {", "+\t\t\t\tparts++;", "+\t\t\t}", "+\t\t} else if (Character.isJavaIdentifierPart(ch) && (Character.isUpperCase(ch) || Character.isDigit(ch))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8bf3ce8a102227ac17931342a3fded1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/core/compiler/CharOperation.java", "commitBeforeChange": "4d4b7498948247746461ed52cdc63a141986de38", "commitAfterChange": "79620cc5a2ab93e8afb2f50dfb60d3aac3ac52a1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public static final boolean camelCaseMatch(char[] pattern, int patternStart, int patternEnd, char[] name, int nameStart, int nameEnd)", "signatureAfterChange": " public static final boolean camelCaseMatch(char[] pattern, int patternStart, int patternEnd, char[] name, int nameStart, int nameEnd)", "diff": ["-\t\t\t\t\tswitch (ScannerHelper.OBVIOUS_IDENT_CHAR_NATURES[nameChar]) {", "-\t\t\t\t\t\tcase ScannerHelper.C_LOWER_LETTER :", "-\t\t\t\t\t\tcase ScannerHelper.C_IDENT_PART :", "-\t\t\t\t\t\tcase ScannerHelper.C_DIGIT :", "-\t\t\t\t\t\t\t// lowercase/digit char is ignored", "-\t\t\t\t\t\t\tiName++;", "-\t\t\t\t\t\t\tcontinue nextNameChar;", "+\t\t\t\t\tif ((ScannerHelper.OBVIOUS_IDENT_CHAR_NATURES[nameChar] & ScannerHelper.C_LOWER_LETTER|ScannerHelper.C_IDENT_PART|ScannerHelper.C_DIGIT) != 0) {", "+\t\t\t\t\t\t// lowercase/digit char is ignored", "+\t\t\t\t\t\tiName++;", "+\t\t\t\t\t\tcontinue nextNameChar;"]}], "num": 70887}