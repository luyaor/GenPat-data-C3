{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "904708cf39f52b68bb3af2a28f640210", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58e9cca999ab9cb766d565b2926bd6b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "e30351551cacd61d107b0f2c8e2d961ea6077c69", "commitAfterChange": "65c816d51274509d33505e25446def26adbebd32", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tpublic void _test016()", "signatureAfterChange": "  \tpublic void _test016()", "diff": ["-\tpublic void _test016() { // 73971 and 77228", "+\tpublic void _test016() { // 73971", "-\t\t);", "-\t\tthis.runConformTest(\t// cannot have 2 methods with compatible return types like Object & String so how is this legal?", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"class X implements I, J {\\n\" + ", "-\t\t\t\t\"\tpublic <T extends I> T getValue(String value) { return null; }\\n\" + ", "-\t\t\t\t\"\tpublic <T extends J> T getValue(String value) { return null; }\\n\" + ", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"interface I { <T extends I> T getValue(String value); }\\n\" + ", "-\t\t\t\t\"interface J { <T extends J> T getValue(String value); }\\n\"", "-\t\t\t},", "-\t\t\t\"\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba1f62b7f4d1916a353008266d76ee5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "8eebb11e46f28beaadc740a4b76f1cf698acf7a1", "commitAfterChange": "77d7a71c34d1f984564aceab6a75ee9e680a55a5", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tpublic void test050a()", "signatureAfterChange": " \tpublic void test050a()", "diff": ["-\t\t\t\t\"\tclass C7 {\\n\" + ", "-\t\t\t\t\"\t\t<T extends Y, U> T foo(Object o) {  return null; } // ok\\n\" + ", "-\t\t\t\t\"\t\t<T extends Z> T foo(Object o) {  return null; } // ok\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "+\t\t);", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" + ", "+\t\t\t\t\"\tclass C7 {\\n\" + ", "+\t\t\t\t\"\t\t<T extends Y, U> T foo(Object o) {  return null; } // ok\\n\" + ", "+\t\t\t\t\"\t\t<T extends Z> T foo(Object o) {  return null; } // ok\\n\" + ", "+\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"}\\n\" +", "+\t\t\t\t\"class A<T> {}\" +", "+\t\t\t\t\"class Y {}\" +", "+\t\t\t\t\"class Z {}\"", "+\t\t\t},", "+\t\t\t\"\""]}], "num": 62665}