{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "999e05efad5c0da255440d7013793af7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d40c59d2e9768b39393373b7ea95230", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldDeclaration.java", "commitBeforeChange": "332f2b4bbc61519d48f9e1634468f589fe6ec357", "commitAfterChange": "1dac44e6f5251febeac5322fb143c153ef780c6a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void resolve(MethodScope initializationScope)", "signatureAfterChange": "  \tpublic void resolve(MethodScope initializationScope)", "diff": ["-\t\t\t\t\t\t} else if (initializationScope.compilerOptions().sourceLevel >= JDK1_5 // autoboxing", "-\t\t\t\t\t\t\t\t\t\t&& (initializationScope.isBoxingCompatibleWith(initializationType, fieldType) ", "-\t\t\t\t\t\t\t\t\t\t\t\t|| (initializationType.isBaseType()  // narrowing then boxing ?", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& !fieldType.isBaseType()", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& initialization.isConstantValueOfTypeAssignableToType(initializationType, initializationScope.environment().computeBoxingType(fieldType))))) {", "+\t\t\t\t\t\t} else if (initializationScope.isBoxingCompatibleWith(initializationType, fieldType) ", "+\t\t\t\t\t\t\t\t\t\t\t|| (initializationType.isBaseType()  // narrowing then boxing ?", "+\t\t\t\t\t\t\t\t\t\t\t\t\t&& initializationScope.compilerOptions().sourceLevel >= JDK1_5 // autoboxing", "+\t\t\t\t\t\t\t\t\t\t\t\t\t&& !fieldType.isBaseType()", "+\t\t\t\t\t\t\t\t\t\t\t\t\t&& initialization.isConstantValueOfTypeAssignableToType(initializationType, initializationScope.environment().computeBoxingType(fieldType)))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c66aa5efe3aec4127df8239b5c01adc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.java", "commitBeforeChange": "332f2b4bbc61519d48f9e1634468f589fe6ec357", "commitAfterChange": "1dac44e6f5251febeac5322fb143c153ef780c6a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void resolve(BlockScope scope)", "signatureAfterChange": " \t \tpublic void resolve(BlockScope scope)", "diff": ["-\t\t\t\t\t} else if (scope.compilerOptions().sourceLevel >= JDK1_5 // autoboxing", "-\t\t\t\t\t\t\t\t\t&& (scope.isBoxingCompatibleWith(initializationType, variableType) ", "-\t\t\t\t\t\t\t\t\t\t\t|| (initializationType.isBaseType()  // narrowing then boxing ?", "-\t\t\t\t\t\t\t\t\t\t\t\t\t&& !variableType.isBaseType()", "-\t\t\t\t\t\t\t\t\t\t\t\t\t&& initialization.isConstantValueOfTypeAssignableToType(initializationType, scope.environment().computeBoxingType(variableType))))) {", "+\t\t\t\t\t} else if (scope.isBoxingCompatibleWith(initializationType, variableType) ", "+\t\t\t\t\t\t\t\t\t\t|| (initializationType.isBaseType()  // narrowing then boxing ?", "+\t\t\t\t\t\t\t\t\t\t\t\t&& scope.compilerOptions().sourceLevel >= JDK1_5 // autoboxing", "+\t\t\t\t\t\t\t\t\t\t\t\t&& !variableType.isBaseType()", "+\t\t\t\t\t\t\t\t\t\t\t\t&& initialization.isConstantValueOfTypeAssignableToType(initializationType, scope.environment().computeBoxingType(variableType)))) {"]}], "num": 41924}