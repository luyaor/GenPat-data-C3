{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a1ff8d3c7dc594ac57bb7c880dd6b539", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89b6e6cb3608f7bab63de48ab2318e4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "83b433cefe204b4efddb34a5fec23235369a79e2", "commitAfterChange": "f0ad677ecfc3fb2aae0264f20715771e958071e0", "methodNumberBeforeChange": 904, "methodNumberAfterChange": 904, "signatureBeforeChange": " public void test0883()", "signatureAfterChange": " public void test0883()", "diff": ["-// FAIL ERRMSG", "-\tif (this.complianceLevel >= ClassFileConstants.JDK1_8)", "-\t\treturn;", "-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 6)\\n\" +", "-\t\t\"\tString s = (String)foo(listu);\\n\" +", "-\t\t\"\t                   ^^^\\n\" +", "-\t\t\"Bound mismatch: The generic method foo(U) of type X is not applicable for the arguments (List<U>). The inferred type List<U> is not a valid substitute for the bounded parameter <U extends List<U>>\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. ERROR in X.java (at line 11)\\n\" +", "-\t\t\"\tString s = (String)foo(listv);\\n\" +", "-\t\t\"\t                   ^^^\\n\" +", "-\t\t\"Bound mismatch: The generic method foo(U) of type X is not applicable for the arguments (List<V>). The inferred type List<V> is not a valid substitute for the bounded parameter <U extends List<U>>\\n\" +", "-\t\t\"----------\\n\" ));", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tString s = (String)foo(listu);\\n\" + ", "+\t\t\t\"\t                   ^^^\\n\" + ", "+\t\t\t\"The method foo(U) in the type X is not applicable for the arguments (List<U>)\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\t\"\tString s = (String)foo(listv);\\n\" + ", "+\t\t\t\"\t                   ^^^\\n\" + ", "+\t\t\t\"The method foo(U) in the type X is not applicable for the arguments (List<V>)\\n\" + ", "+\t\t\t\"----------\\n\" ));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4f35b1469964f5862888d22c30a049e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "285d9f55145724991833663a691553a09e2c72de", "commitAfterChange": "b36a137cc1f0fb3b34ff097a37fce4ecbf12fde7", "methodNumberBeforeChange": 197, "methodNumberAfterChange": 197, "signatureBeforeChange": " \tpublic void test0189()", "signatureAfterChange": " \tpublic void test0189()", "diff": ["+\t\tString expectedOutput = this.complianceLevel < ClassFileConstants.JDK1_7", "+\t\t\t? \t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\t\"\tSystem.out.println(new X().<String>foo());\\n\" + ", "+\t\t\t\t\"\t                                   ^^^\\n\" + ", "+\t\t\t\t\"The method foo() of type X is not generic; it cannot be parameterized with arguments <String>\\n\" + ", "+\t\t\t\t\"----------\\n\"", "+\t\t\t: \t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\t\"\tSystem.out.println(new X().<String>foo());\\n\" + ", "+\t\t\t\t\"\t           ^^^^^^^\\n\" + ", "+\t\t\t\t\"The method println(boolean) in the type PrintStream is not applicable for the arguments (void)\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\t\"\tSystem.out.println(new X().<String>foo());\\n\" + ", "+\t\t\t\t\"\t                            ^^^^^^\\n\" + ", "+\t\t\t\t\"Unused type arguments for the non generic method foo() of type X; it should not be parameterized with arguments <String>\\n\" + ", "+\t\t\t\t\"----------\\n\";", "+\t\t", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\t\"\tSystem.out.println(new X().<String>foo());\\n\" + ", "-\t\t\t\"\t                                   ^^^\\n\" + ", "-\t\t\t\"The method foo() of type X is not generic; it cannot be parameterized with arguments <String>\\n\" + ", "-\t\t\t\"----------\\n\");", "+\t\t\texpectedOutput);"]}], "num": 32771}