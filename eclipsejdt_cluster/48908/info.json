{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e524e808b3970675ef8aa52a484f8b04", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3aa7d6eb42922295b55c466ef22975bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "fa78e4ce6e57928678189feff94d4c736b9ff2c4", "commitAfterChange": "0f248db43070dcf1bc4390d09f1d6625c113fc80", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tprivate void enterAbstractMethod(MethodInfo methodInfo)", "signatureAfterChange": " \tprivate void enterAbstractMethod(MethodInfo methodInfo)", "diff": ["+\t\t\tIType currentType = this.types[typeDepth];", "+\t\t\tIMethod method = currentType.getMethod(", "+\t\t\t\t\tthis.memberName[typeDepth],", "+\t\t\t\t\tconvertTypeNamesToSigs(this.methodParameterTypes[typeDepth]));", "+\t\t\t", "+\t\t\t// type parameters", "-\t\t\t\tfinal IType currentType = this.types[typeDepth];", "-\t\t\t\tIMethod method = currentType.getMethod(", "-\t\t\t\t\t\tthis.memberName[typeDepth],", "-\t\t\t\t\t\tconvertTypeNamesToSigs(this.methodParameterTypes[typeDepth]));", "-\t\t\t\tif (method == null) return;", "-\t\t\t\t", "-\t\t\t\t\tfinal TypeParameterInfo typeParameterInfo = methodInfo.typeParameters[i];", "-\t\t\t\t\tfinal ITypeParameter typeParameter = method.getTypeParameter(new String(typeParameterInfo.name));", "+\t\t\t\t\tTypeParameterInfo typeParameterInfo = methodInfo.typeParameters[i];", "+\t\t\t\t\tITypeParameter typeParameter = method.getTypeParameter(new String(typeParameterInfo.name));", "+\t\t\t", "+\t\t\t// categories", "+\t\t\taddCategories(method, methodInfo.categories);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fb1a89063b61aa3373a846c0b805f08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "8c8cd78ee7d91af397b355193b993289ef7f4454", "commitAfterChange": "dab69163a24dbd341ec146b21a1806a7799bbbc6", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tprivate void enterAbstractMethod(MethodInfo methodInfo)", "signatureAfterChange": " \tprivate void enterAbstractMethod(MethodInfo methodInfo)", "diff": ["+\t\t\t// parameters infos", "+\t\t\tif (methodInfo.parameterInfos != null) {", "+\t\t\t\tfor (int i = 0, length = methodInfo.parameterInfos.length; i < length; i++) {", "+\t\t\t\t\tParameterInfo parameterInfo = methodInfo.parameterInfos[i];", "+\t\t\t\t\tLocalVariableElementKey key = new LocalVariableElementKey(method, new String(parameterInfo.name));", "+\t\t\t\t\tSourceRange[] allRanges = new SourceRange[] {", "+\t\t\t\t\t\tnew SourceRange(", "+\t\t\t\t\t\t\tparameterInfo.declarationStart,", "+\t\t\t\t\t\t\tparameterInfo.declarationEnd - parameterInfo.declarationStart + 1),", "+\t\t\t\t\t\tnew SourceRange(", "+\t\t\t\t\t\t\tparameterInfo.nameSourceStart,", "+\t\t\t\t\t\t\tparameterInfo.nameSourceEnd - parameterInfo.nameSourceStart + 1)", "+\t\t\t\t\t};", "+\t\t\t\t\tthis.parametersRanges.put(", "+\t\t\t\t\t\tkey,", "+\t\t\t\t\t\tallRanges);", "+\t\t\t\t\tif (parameterInfo.modifiers != 0) {", "+\t\t\t\t\t\tif (this.finalParameters == null) {", "+\t\t\t\t\t\t\tthis.finalParameters = new HashSet();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tthis.finalParameters.add(key);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a4114f173a93de1c15f4ee5a2ef4f73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "ef0a598e8142fdc0982c3f62cf49d826edaa6505", "commitAfterChange": "89e5cfe6011c44c81db4c1b525146cb6d514af0e", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprivate void enterAbstractMethod(MethodInfo methodInfo)", "signatureAfterChange": " \tprivate void enterAbstractMethod(MethodInfo methodInfo)", "diff": ["-\t\t\tfMethodParameterNames[typeDepth] =methodInfo. parameterNames;", "+\t\t\tfMethodParameterNames[typeDepth] = methodInfo. parameterNames;", "+\t\t\t", "+\t\t\tif (methodInfo.typeParameters != null) {", "+\t\t\t\tfinal IType currentType = this.types[typeDepth];", "+\t\t\t\tIMethod method = currentType.getMethod(", "+\t\t\t\t\t\tfMemberName[typeDepth],", "+\t\t\t\t\t\tconvertTypeNamesToSigs(fMethodParameterTypes[typeDepth]));", "+\t\t\t\tif (method == null) return;", "+\t\t\t\t", "+\t\t\t\tfor (int i = 0, length = methodInfo.typeParameters.length; i < length; i++) {", "+\t\t\t\t\tfinal TypeParameterInfo typeParameterInfo = methodInfo.typeParameters[i];", "+\t\t\t\t\tfinal ITypeParameter typeParameter = method.getTypeParameter(new String(typeParameterInfo.name));", "+\t\t\t\t\tsetSourceRange(", "+\t\t\t\t\t\ttypeParameter,", "+\t\t\t\t\t\tnew SourceRange(", "+\t\t\t\t\t\t\ttypeParameterInfo.declarationStart,", "+\t\t\t\t\t\t\ttypeParameterInfo.declarationEnd - typeParameterInfo.declarationStart + 1),", "+\t\t\t\t\t\tnew SourceRange(", "+\t\t\t\t\t\t\ttypeParameterInfo.nameSourceStart,", "+\t\t\t\t\t\t\ttypeParameterInfo.nameSourceEnd - typeParameterInfo.nameSourceStart + 1));", "+\t\t\t\t}", "+\t\t\t}\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbec486d313cf4f28c68068fdda796ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "ef0a598e8142fdc0982c3f62cf49d826edaa6505", "commitAfterChange": "89e5cfe6011c44c81db4c1b525146cb6d514af0e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void enterType(TypeInfo typeInfo)", "signatureAfterChange": " \tpublic void enterType(TypeInfo typeInfo)", "diff": ["+", "+\t\tif (typeInfo.typeParameters != null) {", "+\t\t\tfinal IType currentType = this.types[typeDepth];", "+\t\t\tfor (int i = 0, length = typeInfo.typeParameters.length; i < length; i++) {", "+\t\t\t\tfinal TypeParameterInfo typeParameterInfo = typeInfo.typeParameters[i];", "+\t\t\t\tfinal ITypeParameter typeParameter = currentType.getTypeParameter(new String(typeParameterInfo.name));", "+\t\t\t\tsetSourceRange(", "+\t\t\t\t\ttypeParameter,", "+\t\t\t\t\tnew SourceRange(", "+\t\t\t\t\t\ttypeParameterInfo.declarationStart,", "+\t\t\t\t\t\ttypeParameterInfo.declarationEnd - typeParameterInfo.declarationStart + 1),", "+\t\t\t\t\tnew SourceRange(", "+\t\t\t\t\t\ttypeParameterInfo.nameSourceStart,", "+\t\t\t\t\t\ttypeParameterInfo.nameSourceEnd - typeParameterInfo.nameSourceStart + 1));", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e493000f960ac7845c3160fdfa12744d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "fa78e4ce6e57928678189feff94d4c736b9ff2c4", "commitAfterChange": "0f248db43070dcf1bc4390d09f1d6625c113fc80", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void enterType(TypeInfo typeInfo)", "signatureAfterChange": " \tpublic void enterType(TypeInfo typeInfo)", "diff": ["+\t\tIType currentType = this.types[typeDepth];", "+\t\t", "+\t\t// type parameters", "-\t\t\tfinal IType currentType = this.types[typeDepth];", "-\t\t\t\tfinal TypeParameterInfo typeParameterInfo = typeInfo.typeParameters[i];", "-\t\t\t\tfinal ITypeParameter typeParameter = currentType.getTypeParameter(new String(typeParameterInfo.name));", "+\t\t\t\tTypeParameterInfo typeParameterInfo = typeInfo.typeParameters[i];", "+\t\t\t\tITypeParameter typeParameter = currentType.getTypeParameter(new String(typeParameterInfo.name));", "+\t\t", "+\t\t// categories", "+\t\taddCategories(currentType, typeInfo.categories);"]}], "num": 48908}