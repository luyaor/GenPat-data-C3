{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2fb8712fda497158f5acf8e292c2d561", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31e34fcaf495ba1b5137efd07fef2f0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ExternalFoldersManager.java", "commitBeforeChange": "5b1a9dba806424416a6f5ec8efc329e5fdace03c", "commitAfterChange": "6f37c2ba7b93e48dfb1ea5d77d4a2519799074c6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate synchronized ArrayList getFoldersToCleanUp(IProgressMonitor monitor) throws CoreException", "signatureAfterChange": "  \tprivate ArrayList getFoldersToCleanUp(IProgressMonitor monitor) throws CoreException", "diff": ["-\tprivate synchronized ArrayList getFoldersToCleanUp(IProgressMonitor monitor) throws CoreException {", "+\tprivate ArrayList getFoldersToCleanUp(IProgressMonitor monitor) throws CoreException {", "-\t\tHashMap knownFolders = getFolders();", "-\t\tIterator iterator = knownFolders.entrySet().iterator();", "+\t\tMap knownFolders = getFolders();", "-\t\twhile (iterator.hasNext()) {", "-\t\t\tMap.Entry entry = (Map.Entry) iterator.next();", "-\t\t\tIPath path = (IPath) entry.getKey();", "-\t\t\tif ((roots != null && !roots.containsKey(path))", "-\t\t\t\t\t&& (sourceAttachments != null && !sourceAttachments.containsKey(path))) {", "-\t\t\t\tIFolder folder = (IFolder) entry.getValue();", "-\t\t\t\tif (folder != null) {", "-\t\t\t\t\tif (result == null)", "-\t\t\t\t\t\tresult = new ArrayList();", "-\t\t\t\t\tresult.add(folder);", "+\t\tsynchronized (knownFolders) {", "+\t\t\tIterator iterator = knownFolders.entrySet().iterator();", "+\t\t\twhile (iterator.hasNext()) {", "+\t\t\t\tMap.Entry entry = (Map.Entry) iterator.next();", "+\t\t\t\tIPath path = (IPath) entry.getKey();", "+\t\t\t\tif ((roots != null && !roots.containsKey(path))", "+\t\t\t\t\t\t&& (sourceAttachments != null && !sourceAttachments.containsKey(path))) {", "+\t\t\t\t\tIFolder folder = (IFolder) entry.getValue();", "+\t\t\t\t\tif (folder != null) {", "+\t\t\t\t\t\tif (result == null)", "+\t\t\t\t\t\t\tresult = new ArrayList();", "+\t\t\t\t\t\tresult.add(folder);", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b0ce8262eb910160627dff7d7872faf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "6b97e0e0385eaee70dad3a39c532ecba2f431f7d", "commitAfterChange": "b2f247d693fb1c4457e39814eacc8edd600c0ad7", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": " \tprotected synchronized void putInfos(IJavaElement openedElement, Map newElements)", "signatureAfterChange": " \tprotected synchronized void putInfos(IJavaElement openedElement, Map newElements)", "diff": ["-\t\tIterator iterator = newElements.keySet().iterator();", "+\t\t// Need to put any JarPackageFragmentRoot in first.", "+\t\t// This is due to the way the LRU cache flushes entries.", "+\t\t// When a JarPackageFragment is flused from the LRU cache, the entire", "+\t\t// jar is flushed by removing the JarPackageFragmentRoot and all of its", "+\t\t// children (see ElementCache.close()). If we flush the JarPackageFragment ", "+\t\t// when its JarPackageFragmentRoot is not in the cache and the root is about to be ", "+\t\t// added (during the 'while' loop), we will end up in an inconsist state. ", "+\t\t// Subsequent resolution against package in the jar would fail as a result.", "+\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=102422", "+\t\t// (theodora)", "+\t\tfor(Iterator it = newElements.entrySet().iterator(); it.hasNext(); ) {", "+\t\t\tMap.Entry entry = (Map.Entry)it.next();", "+\t\t\tIJavaElement element = (IJavaElement)entry.getKey();", "+\t\t\tif( element instanceof JarPackageFragmentRoot ){", "+\t\t\t\tObject info = entry.getValue();", "+\t\t\t\tit.remove();", "+\t\t\t\tthis.cache.putInfo(element, info);", "+\t\t\t}", "+\t\t}\t", "+\t", "+\t\tIterator iterator = newElements.keySet().iterator();\t"]}], "num": 57020}