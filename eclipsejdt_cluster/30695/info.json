{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6970c0c927766d3624882fe3b6d94fb7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b5d39027cb0200a5956ff8a1b34fb4d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "abd333621a0cbd2492673b0e887a888245d2d663", "commitAfterChange": "0adf7a4e0894d18d3979e493aafe00dfa5c14f8d", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 63, "signatureBeforeChange": " \t \tpublic IPath setOutputFolder(IPath projectPath, String outputFolder)", "signatureAfterChange": " \t \tpublic IPath setOutputFolder(IPath projectPath, String outputFolder)", "diff": ["-\t\t\tIJavaProject javaProject =", "-\t\t\t\t(IJavaProject) getProject(projectPath).getNature(JavaCore.NATURE_ID);", "+\t\t\tIJavaProject javaProject = JavaCore.create(getProject(projectPath));", "-\t\t} catch (CoreException e) {", "-\t\t\te.printStackTrace();", "-\t\t\tcheckAssertion(\"CoreException\", false); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff9c51652c72eb7d465749a661ca52ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "15c2b522f5262c38358d1658cadb7327545be8ce", "commitAfterChange": "7a5fa6d4e7beb7ad1bc8fa652ccd4c2cc1dd4339", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic boolean equals(Object o)", "signatureAfterChange": " \tpublic boolean equals(Object o)", "diff": ["-\t\tif (o instanceof JavaElement) {", "-\t\t\tJavaElement other = (JavaElement) o;", "-\t\t\tif (getElementType() != other.getElementType()) return false;", "-\t\t\t", "-\t\t\treturn fName.equals(other.fName) &&", "-\t\t\t\t\tfParent.equals(other.fParent) &&", "-\t\t\t\t\tfOccurrenceCount == other.fOccurrenceCount;", "-\t\t}", "-\t\treturn false;", "+\t\t// assume instanceof check is done in subclass", "+\t\tJavaElement other = (JavaElement) o;\t\t", "+\t\treturn fOccurrenceCount == other.fOccurrenceCount &&", "+\t\t\t\tfName.equals(other.fName) &&", "+\t\t\t\tfParent.equals(other.fParent);"]}], "num": 30695}