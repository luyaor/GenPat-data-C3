{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "46b1632389cee375e16c6f3ce5ae0f4a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06555b1a83c1e9ca8b1c55fee4d1382f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "3f9a272754f4dbcde614fed0b8e02a6b49fdf380", "commitAfterChange": "07ee10ab5650bcb39d86bc9b77c1572a63409b02", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " protected void locateMatches(JavaProject javaProject, PossibleMatch[] possibleMatches, int start, int length) throws CoreException", "signatureAfterChange": " protected void locateMatches(JavaProject javaProject, PossibleMatch[] possibleMatches, int start, int length) throws CoreException", "diff": ["-\tboolean bindingsWereCreated = true;", "+\tboolean mustResolve = ((InternalSearchPattern)this.pattern).mustResolve;", "+\tboolean bindingsWereCreated = mustResolve;", "-\t\tfor (int i = start, maxUnits = start + length; i < maxUnits; i++)", "-\t\t\tbuildBindings(possibleMatches[i]);", "-\t\tlookupEnvironment.completeTypeBindings();", "+\t\tfor (int i = start, maxUnits = start + length; i < maxUnits; i++) {", "+\t\t\tPossibleMatch possibleMatch = possibleMatches[i];", "+\t\t\ttry {", "+\t\t\t\tparseAndBuildBindings(possibleMatch, mustResolve);", "+\t\t\t\tif (!mustResolve)", "+\t\t\t\t\tprocess(possibleMatch, bindingsWereCreated);", "+\t\t\t} finally {", "+\t\t\t\tif (!mustResolve)", "+\t\t\t\t\tpossibleMatch.cleanUp();", "+\t\t\t}", "+\t\t}", "+\t\tif (mustResolve)", "+\t\t\tlookupEnvironment.completeTypeBindings();", "+\tif (!mustResolve) {", "+\t\treturn;", "+\t}", "+\t", "-\t\t\tpossibleMatch.parsedUnit.cleanUp();", "-\t\t\tpossibleMatch.parsedUnit = null;", "+\t\t\tpossibleMatch.cleanUp();", "-\t\tif (this.progressMonitor != null)", "-\t\t\tthis.progressMonitor.worked(5);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "088062cbd195f78122837583c46768b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator2.java", "commitBeforeChange": "d9032a87dfcb69e19b4c3aae869d4a786d1fb149", "commitAfterChange": "eee6512d26cd1c50a9b02d1b4b78531f507d95fc", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprotected void createAndResolveBindings(PotentialMatch[] potentialMatches)", "signatureAfterChange": " \tprotected void createAndResolveBindings(PotentialMatch[] potentialMatches, int start, int length)", "diff": ["-\tprotected void createAndResolveBindings(PotentialMatch[] potentialMatches) {", "+\tprotected void createAndResolveBindings(PotentialMatch[] potentialMatches, int start, int length) {", "-\t\tfor (int i = 0, maxUnits = potentialMatches.length; i < maxUnits; i++) {", "+\t\tfor (int i = start, maxUnits = start+length; i < maxUnits; i++) {", "+\t\t\t\tif (SearchEngine.VERBOSE) {", "+\t\t\t\t\tSystem.out.println(\"Parsing \" + potentialMatch.openable.toStringWithAncestors()); //$NON-NLS-1$", "+\t\t\t\t}", "+", "-\t\t\t\t", "-\t\t\t\tif (options.verbose) {", "-\t\t\t\t\tSystem.out.println(", "-\t\t\t\t\t\tUtil.bind(", "-\t\t\t\t\t\t\t\"compilation.request\" , //$NON-NLS-1$", "-\t\t\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\t\t\tString.valueOf(i + 1),", "-\t\t\t\t\t\t\t\tString.valueOf(maxUnits),", "-\t\t\t\t\t\t\t\tnew String(potentialMatch.getFileName())}));", "+\t\t\t\t\t\t\t\t", "+\t\t\t\t// initial type binding creation", "+\t\t\t\tif (parsedUnit != null && !parsedUnit.isEmpty()) {", "+\t\t\t\t\tthis.lookupEnvironment.buildTypeBindings(parsedUnit);", "-\t\t\t\t// initial type binding creation", "-\t\t\t\tthis.lookupEnvironment.buildTypeBindings(parsedUnit);"]}], "num": 71164}