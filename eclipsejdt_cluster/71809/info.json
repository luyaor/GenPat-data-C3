{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "622f2dc7c388d39068ce1e17bcd84871", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78f631fbc4a7d368dab55a6a17e9c39c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "commitAfterChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "\r \tpublic ISourceRange mapSource(\r \t\tIType type,\r \t\tchar[] contents,\r \t\tIJavaElement searchedElement)", "signatureAfterChange": "\r public ISourceRange mapSource(IType type, char[] contents, IJavaElement searchedElement)", "diff": ["-\t */\r", "-\tpublic ISourceRange mapSource(\r", "-\t\tIType type,\r", "-\t\tchar[] contents,\r", "-\t\tIJavaElement searchedElement) {\r", "-\t\tfType = (BinaryType) type;\r", "+ */\r", "+public ISourceRange mapSource(IType type, char[] contents, IJavaElement searchedElement) {\r", "+\tfType= (BinaryType)type;\r", "-\t\tthis.importsTable.remove(fType);\r", "-\t\tthis.importsCounterTable.remove(fType);\r", "-\t\tthis.searchedElement = searchedElement;\r", "-\t\tthis.types = new IType[1];\r", "-\t\tthis.typeDeclarationStarts = new int[1];\r", "-\t\tthis.typeNameRanges = new SourceRange[1];\r", "+\tthis.searchedElement = searchedElement;\r", "+\tthis.types = new IType[1];\r", "+\tthis.typeDeclarationStarts = new int[1];\r", "+\tthis.typeNameRanges = new SourceRange[1];\r", "+\tthis.typeDepth = -1;\r", "+\r", "+\tHashtable oldSourceRanges = (Hashtable)fSourceRanges.clone();\r", "+\ttry {\r", "+\t\tIProblemFactory factory= new DefaultProblemFactory();\r", "+\t\tSourceElementParser parser = new SourceElementParser(this, factory);\r", "+\t\tparser.parseCompilationUnit(new BasicCompilationUnit(contents, type.getElementName() + \".java\"/*nonNLS*/), false);\r", "+\t\tif (searchedElement != null) {\r", "+\t\t\tISourceRange range = this.getNameRange(searchedElement);\r", "+\t\t\treturn range;\r", "+\t\t} else {\r", "+\t\t\treturn null;\r", "+\t\t}\r", "+\t} finally {\r", "+\t\tif (searchedElement != null) {\r", "+\t\t\tfSourceRanges = oldSourceRanges;\r", "+\t\t}\r", "+\t\tfType= null;\r", "+\t\tthis.searchedElement = null;\r", "+\t\tthis.types = null;\r", "+\t\tthis.typeDeclarationStarts = null;\r", "+\t\tthis.typeNameRanges = null;\r", "-\r", "-\t\tHashtable oldSourceRanges = (Hashtable) fSourceRanges.clone();\r", "-\t\ttry {\r", "-\t\t\tIProblemFactory factory = new DefaultProblemFactory();\r", "-\t\t\tSourceElementParser parser = new SourceElementParser(this, factory);\r", "-\t\t\tparser.parseCompilationUnit(\r", "-\t\t\t\tnew BasicCompilationUnit(contents, type.getElementName() + \".java\" ), //$NON-NLS-1$\r", "-\t\t\t\tfalse);\r", "-\t\t\tif (searchedElement != null) {\r", "-\t\t\t\tISourceRange range = this.getNameRange(searchedElement);\r", "-\t\t\t\treturn range;\r", "-\t\t\t} else {\r", "-\t\t\t\treturn null;\r", "-\t\t\t}\r", "-\t\t} finally {\r", "-\t\t\tif (searchedElement != null) {\r", "-\t\t\t\tfSourceRanges = oldSourceRanges;\r", "-\t\t\t}\r", "-\t\t\tfType = null;\r", "-\t\t\tthis.searchedElement = null;\r", "-\t\t\tthis.types = null;\r", "-\t\t\tthis.typeDeclarationStarts = null;\r", "-\t\t\tthis.typeNameRanges = null;\r", "-\t\t\tthis.typeDepth = -1;\r", "-\t\t}\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93cb9a578d1e8d7bb2de6ee07457c7b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "7e5cc03e445550d3cbc10c611218c79332074276", "commitAfterChange": "c57706d05dc3654769cca2053ff9cb20fb0a6664", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "\r \tpublic ISourceRange mapSource(\r \t\tIType type,\r \t\tchar[] contents,\r \t\tIJavaElement searchedElement)", "signatureAfterChange": "\r public ISourceRange mapSource(IType type, char[] contents, IJavaElement searchedElement)", "diff": ["-\t */\r", "-\tpublic ISourceRange mapSource(\r", "-\t\tIType type,\r", "-\t\tchar[] contents,\r", "-\t\tIJavaElement searchedElement) {\r", "-\t\tfType = (BinaryType) type;\r", "+ */\r", "+public ISourceRange mapSource(IType type, char[] contents, IJavaElement searchedElement) {\r", "+\tfType= (BinaryType)type;\r", "-\t\tthis.importsTable.remove(fType);\r", "-\t\tthis.importsCounterTable.remove(fType);\r", "-\t\tthis.searchedElement = searchedElement;\r", "-\t\tthis.types = new IType[1];\r", "-\t\tthis.typeDeclarationStarts = new int[1];\r", "-\t\tthis.typeNameRanges = new SourceRange[1];\r", "+\tthis.searchedElement = searchedElement;\r", "+\tthis.types = new IType[1];\r", "+\tthis.typeDeclarationStarts = new int[1];\r", "+\tthis.typeNameRanges = new SourceRange[1];\r", "+\tthis.typeDepth = -1;\r", "+\r", "+\tHashtable oldSourceRanges = (Hashtable)fSourceRanges.clone();\r", "+\ttry {\r", "+\t\tIProblemFactory factory= new DefaultProblemFactory();\r", "+\t\tSourceElementParser parser = new SourceElementParser(this, factory);\r", "+\t\tparser.parseCompilationUnit(new BasicCompilationUnit(contents, type.getElementName() + \".java\"/*nonNLS*/), false);\r", "+\t\tif (searchedElement != null) {\r", "+\t\t\tISourceRange range = this.getNameRange(searchedElement);\r", "+\t\t\treturn range;\r", "+\t\t} else {\r", "+\t\t\treturn null;\r", "+\t\t}\r", "+\t} finally {\r", "+\t\tif (searchedElement != null) {\r", "+\t\t\tfSourceRanges = oldSourceRanges;\r", "+\t\t}\r", "+\t\tfType= null;\r", "+\t\tthis.searchedElement = null;\r", "+\t\tthis.types = null;\r", "+\t\tthis.typeDeclarationStarts = null;\r", "+\t\tthis.typeNameRanges = null;\r", "-\r", "-\t\tHashtable oldSourceRanges = (Hashtable) fSourceRanges.clone();\r", "-\t\ttry {\r", "-\t\t\tIProblemFactory factory = new DefaultProblemFactory();\r", "-\t\t\tSourceElementParser parser = new SourceElementParser(this, factory);\r", "-\t\t\tparser.parseCompilationUnit(\r", "-\t\t\t\tnew BasicCompilationUnit(contents, type.getElementName() + \".java\" ), //$NON-NLS-1$\r", "-\t\t\t\tfalse);\r", "-\t\t\tif (searchedElement != null) {\r", "-\t\t\t\tISourceRange range = this.getNameRange(searchedElement);\r", "-\t\t\t\treturn range;\r", "-\t\t\t} else {\r", "-\t\t\t\treturn null;\r", "-\t\t\t}\r", "-\t\t} finally {\r", "-\t\t\tif (searchedElement != null) {\r", "-\t\t\t\tfSourceRanges = oldSourceRanges;\r", "-\t\t\t}\r", "-\t\t\tfType = null;\r", "-\t\t\tthis.searchedElement = null;\r", "-\t\t\tthis.types = null;\r", "-\t\t\tthis.typeDeclarationStarts = null;\r", "-\t\t\tthis.typeNameRanges = null;\r", "-\t\t\tthis.typeDepth = -1;\r", "-\t\t}\r", "+}\r"]}], "num": 71809}