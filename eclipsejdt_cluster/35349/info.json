{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4b496d41a9eaabe3576c13eb0104923b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "260ca9f58036f3eea383da67b8057c86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsMassiveTests.java", "commitBeforeChange": "881da43b7e0b2ca5798e9c55f57054ccdaa23c6e", "commitAfterChange": "be760997ffe69084a7c4bd4d1ab81289e2452d86", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " protected void assertSourceEquals(String message, String expected, String actual)", "signatureAfterChange": " protected void assertSourceEquals(String message, String expected, String actual)", "diff": ["-\t\tif (COMPARE) {", "-\t\t\tString trimmedExpected;", "-\t\t\tString trimmedActual;", "+\t\tif (\"true\".equals(COMPARE)) {", "+\t\t\tString trimmedExpected = expected;", "+\t\t\tString trimmedActual = actual;", "-\t\t\t\tdefault:", "-\t\t\t\t\ttrimmedExpected = filterFormattingInComments(expected);", "-\t\t\t\t\ttrimmedActual= filterFormattingInComments(actual);", "-\t\t\t\t\tif (trimmedExpected.equals(trimmedActual)) {", "-\t\t\t\t\t\tthis.whitespacesFailures.add(this.path);", "-\t\t\t\t\t\treturn;", "-\t\t\t\t\t}", "-\t\t\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "292ec515f44c02815229e9c40f3ddd79", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsMassiveTests.java", "commitBeforeChange": "881da43b7e0b2ca5798e9c55f57054ccdaa23c6e", "commitAfterChange": "be760997ffe69084a7c4bd4d1ab81289e2452d86", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 21, "signatureBeforeChange": "  String runFormatter(CodeFormatter codeFormatter, String source, int kind, int indentationLevel, int offset, int length, String lineSeparator)", "signatureAfterChange": "  String runFormatter(CodeFormatter codeFormatter, String source, int kind, int indentationLevel, int offset, int length, String lineSeparator)", "diff": ["-\tif (!COMPARE && length == source.length()) {", "+\tif (COMPARE == null && length == source.length()) {", "-\t\t\t\t\t\tthis.whitespacesFailures.add(this.path);", "-\t\t\t\t\t\tthis.hasSpaceFailure = true;", "-\t\t\t\t\t\treturn previousResult;", "-\t\t\t\t\t}", "-\t\t\t\t\tbreak;", "-\t\t\t\tdefault:", "-\t\t\t\t\ttrimmedExpected = filterFormattingInComments(previousResult);", "-\t\t\t\t\ttrimmedActual= filterFormattingInComments(result);", "-\t\t\t\t\tif (trimmedExpected.equals(trimmedActual)) {"]}], "num": 35349}