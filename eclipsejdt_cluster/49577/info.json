{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "99523c7f99eb2bd7b0701eca3e941751", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "173b60d82dc4ba788fe60912fea27abd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImplicitNullAnnotationVerifier.java", "commitBeforeChange": "04996b75901373b837d36e90493b2bc03452f201", "commitAfterChange": "2c8186e7489f922689211662fed2641fe910c44e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tvoid checkNullSpecInheritance(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod,  \t\t\tboolean hasNonNullDefault, boolean shouldComplain, \t\t\tMethodBinding inheritedMethod, Scope scope, InheritedNonNullnessInfo[] inheritedNonNullnessInfos)", "signatureAfterChange": " \tvoid checkNullSpecInheritance(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod,  \t\t\tboolean hasNonNullDefault, boolean shouldComplain, \t\t\tMethodBinding inheritedMethod, Scope scope, InheritedNonNullnessInfo[] inheritedNonNullnessInfos)", "diff": ["-\t\t\t\t} else if (inheritedNonNullNess != null", "+\t\t\t\t} else if (inheritedNonNullNess == Boolean.FALSE // unannotated conflics only with inherited @Nullable", "-\t\t\t\t\t// weak conflict (TODO reconsider this case)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b314a4062384776616b610cc3b9dc553", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImplicitNullAnnotationVerifier.java", "commitBeforeChange": "16efd827ef17fd438d7ee95c275c7d08039d0249", "commitAfterChange": "0001b1dcd0c4e435d76a7a88b7548ff6832acf06", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tvoid checkNullSpecInheritance(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod,  \t\t\tboolean hasNonNullDefault, boolean shouldComplain, \t\t\tMethodBinding inheritedMethod, Scope scope, InheritedNonNullnessInfo[] inheritedNonNullnessInfos)", "signatureAfterChange": " \tvoid checkNullSpecInheritance(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod,  \t\t\tboolean hasNonNullDefault, boolean shouldComplain, \t\t\tMethodBinding inheritedMethod, Scope scope, InheritedNonNullnessInfo[] inheritedNonNullnessInfos)", "diff": ["-\t\t\t\t} else if (inheritedNonNullNess != null", "+\t\t\t\t} else if (inheritedNonNullNess == Boolean.FALSE // unannotated conflics only with inherited @Nullable", "-\t\t\t\t\t// weak conflict (TODO reconsider this case)"]}], "num": 49577}