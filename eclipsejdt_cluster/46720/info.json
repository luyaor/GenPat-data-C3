{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "80d639c2110736afbc91e63cb0fd1b51", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e135ab068f199719366d23aabe3e3109", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "15fa59f515a70009e6cbf51fc1f1e76b789612ec", "commitAfterChange": "3d6e00e97b57234862bfc1c608c23df209272cea", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " protected void attachOrphanCompletionNode()", "signatureAfterChange": " protected void attachOrphanCompletionNode()", "diff": ["+\t\t\t\t|| (expression instanceof Assignment\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=287939", "+\t\t\t\t\t&& ((Assignment)expression).expression == this.assistNode", "+\t\t\t\t\t&& (this.expressionPtr > 0 && this.expressionStack[this.expressionPtr - 1] instanceof InstanceOfExpression))", "+\t\t\t\tif (this.assistNodeParent == null", "+\t\t\t\t\t&& expression instanceof Assignment) {", "+\t\t\t\t\tthis.assistNodeParent = detector.getCompletionNodeParent();", "+\t\t\t\t}", "+\t\t\t\treturn;", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\t}", "+\t}", "+\tif (this.astPtr > -1 && this.astStack[this.astPtr] instanceof LocalDeclaration) { // https://bugs.eclipse.org/bugs/show_bug.cgi?id=287939", "+\t\t// To take care of:  if (a instance of X)  int i = a.|", "+\t\tLocalDeclaration local = (LocalDeclaration) this.astStack[this.astPtr];", "+\t\tif (local.initialization == this.assistNode) {", "+\t\t\tStatement enclosing = buildMoreCompletionEnclosingContext(local);", "+\t\t\tif (enclosing instanceof IfStatement) {", "+\t\t\t\tif (this.currentElement instanceof RecoveredBlock) {", "+\t\t\t\t\t// RecoveredLocalVariable must be removed from its parent because the IfStatement will be added instead", "+\t\t\t\t\tRecoveredBlock recoveredBlock = (RecoveredBlock) this.currentElement;", "+\t\t\t\t\trecoveredBlock.statements[--recoveredBlock.statementCount] = null;", "+\t\t\t\t\tthis.currentElement = this.currentElement.add(enclosing, 0);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1ff6f4bebb6914aee36297894a54e37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " private void buildMoreTryStatementCompletionContext(TypeReference exceptionRef)", "signatureAfterChange": " private void buildMoreTryStatementCompletionContext(TypeReference exceptionRef)", "diff": ["-\tif (this.astLengthPtr > -1 &&", "-\t\t\tthis.astPtr > 1 &&", "-\t\t\tthis.astStack[this.astPtr] instanceof Block &&", "-\t\t\tthis.astStack[this.astPtr - 1] instanceof Argument) {", "+\tif (this.astLengthPtr > 0 &&", "+\t\t\tthis.astPtr > 2 &&", "+\t\t\tthis.astStack[this.astPtr -1] instanceof Block &&", "+\t\t\tthis.astStack[this.astPtr - 2] instanceof Argument) {", "-\t\tint newAstPtr = this.astPtr;", "+\t\tint newAstPtr = this.astPtr - 1;", "-\t\tint length = this.astLengthStack[this.astLengthPtr];", "+\t\tint length = this.astLengthStack[this.astLengthPtr - 1];", "-\t\targs[args.length - 1] = new Argument(FAKE_ARGUMENT_NAME,0,exceptionRef,0);", "+\t\tif (this.astStack[this.astPtr] instanceof UnionTypeReference) {", "+\t\t\tUnionTypeReference unionTypeReference = (UnionTypeReference) this.astStack[this.astPtr];", "+\t\t\targs[args.length - 1] = new Argument(FAKE_ARGUMENT_NAME,0,unionTypeReference,0);", "+\t\t} else {", "+\t\t\targs[args.length - 1] = new Argument(FAKE_ARGUMENT_NAME,0,exceptionRef,0);", "+\t\t}", "-\t\t\tthis.astPtr > -1 &&", "-\t\t\tthis.astStack[this.astPtr] instanceof Block) {", "+\t\t\tthis.astPtr > 0 &&", "+\t\t\tthis.astStack[this.astPtr - 1] instanceof Block) {", "-\t\tint newAstPtr = this.astPtr;", "+\t\tint newAstPtr = this.astPtr - 1;", "-\t\targs[0] = new Argument(FAKE_ARGUMENT_NAME,0,exceptionRef,0);", "+\t\tif (this.astStack[this.astPtr] instanceof UnionTypeReference) {", "+\t\t\tUnionTypeReference unionTypeReference = (UnionTypeReference) this.astStack[this.astPtr];", "+\t\t\targs[0] = new Argument(FAKE_ARGUMENT_NAME,0,unionTypeReference,0);", "+\t\t} else {", "+\t\t\targs[0] = new Argument(FAKE_ARGUMENT_NAME,0,exceptionRef,0);", "+\t\t}"]}], "num": 46720}