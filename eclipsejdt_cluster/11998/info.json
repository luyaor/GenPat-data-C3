{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "55f9bef10c69e1f1ac0f9ae07a35ecde", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a50b73990e541508c96c22ff2c5e51f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CopyMoveTests.java", "commitBeforeChange": "ac348213720090e8c973890decef046772847214", "commitAfterChange": "32aaa515ff5df3a5c0b4fe7c5798b8e987579c0b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public IJavaElement copyPositive(IJavaElement element, IJavaElement container, IJavaElement sibling, String rename, boolean force) throws JavaModelException", "signatureAfterChange": " public IJavaElement copyPositive(IJavaElement element, IJavaElement container, IJavaElement sibling, String rename, boolean force) throws JavaModelException", "diff": ["-", "+\tDeltaListener listener = new DeltaListener();", "-\t\tstartDeltas();", "+\t\tstartDeltas(listener);", "-\t\tIJavaElementDelta destDelta = this.deltaListener.getDeltaFor(container, true);", "+\t\tIJavaElementDelta destDelta = listener.getDeltaFor(container, true);", "-\t\tstopDeltas();", "+\t\tstopDeltas(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a19c13d8062163b0da0d458a8a1546b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CopyMoveResourcesTests.java", "commitBeforeChange": "ac348213720090e8c973890decef046772847214", "commitAfterChange": "32aaa515ff5df3a5c0b4fe7c5798b8e987579c0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public IJavaElement copyPositive(IJavaElement element, IJavaElement container, IJavaElement sibling, String rename, boolean force) throws JavaModelException", "signatureAfterChange": " public IJavaElement copyPositive(IJavaElement element, IJavaElement container, IJavaElement sibling, String rename, boolean force) throws JavaModelException", "diff": ["+\tDeltaListener listener = new DeltaListener();", "-\t\tstartDeltas();", "+\t\tstartDeltas(listener);", "-\t\tIJavaElementDelta destDelta = this.deltaListener.getDeltaFor(container, true);", "+\t\tIJavaElementDelta destDelta = listener.getDeltaFor(container, true);", "-\t\tstopDeltas();", "+\t\tstopDeltas(listener);"]}], "num": 11998}