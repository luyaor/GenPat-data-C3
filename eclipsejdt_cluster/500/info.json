{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c135239a8256197e345517cdc4e4de7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b2dfdebb32cd593bed650085d67487a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 83, "signatureBeforeChange": " \tpublic IClasspathEntry[] getRawClasspath() throws JavaModelException", "signatureAfterChange": " \tpublic IClasspathEntry[] getRawClasspath() throws JavaModelException", "diff": ["-\t\t// Do not create marker but log problems while getting raw classpath", "-\t\treturn getRawClasspath(false, true);", "-\t}", "+\t\tJavaModelManager.PerProjectInfo perProjectInfo = getPerProjectInfo();", "+\t\tIClasspathEntry[] classpath = perProjectInfo.rawClasspath;", "+\t\tif (classpath != null) return classpath;", "+\t\t", "+\t\tclasspath = perProjectInfo.readAndCacheClasspath(this);", "+\t\tif (classpath == JavaProject.INVALID_CLASSPATH)", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46973a05370c34e7d0b7bfa8087e8db5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "809c21ac086d44a312f3c31c6951126c6520aeaa", "commitAfterChange": "495067f03b4b0bfec29183e25c4db2e6b2a1dc02", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tIClasspathEntry[] classpathEntries, \t\tIPath projectOutputLocation, \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tIClasspathEntry[] classpathEntries, \t\tIPath projectOutputLocation, \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError, \t\tMap reverseMap) \t\tthrows JavaModelException", "diff": ["-\t\tboolean ignoreUnresolvedEntry,", "-\t\tboolean generateMarkerOnError) // if unresolved entries are met, should it trigger initializations", "+\t\tboolean ignoreUnresolvedEntry, // if unresolved entries are met, should it trigger initializations", "+\t\tboolean generateMarkerOnError,", "+\t\tMap reverseMap) // can be null if not interested in reverse mapping", "+\t\t\t\t\t\tif (reverseMap != null) reverseMap.put(resolvedEntry.getPath(), rawEntry);", "+\t\t\t\t\t\tif (reverseMap != null) reverseMap.put(cEntry.getPath(), rawEntry);", "+\t\t\t\t\tif (reverseMap != null) reverseMap.put(rawEntry.getPath(), rawEntry);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83fa42aa9a00307f998459d63ac19ae2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/TypeParameterDeclarationImpl.java", "commitBeforeChange": "ac3d830e6e8728fac5ab5382119bdddda1d9f7df", "commitAfterChange": "f6481dd9693bf03828e045ffe5a565f52edfa2f0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public Declaration getOwner()", "signatureAfterChange": "      public Declaration getOwner()", "diff": ["-        // TODO: (theodora) uncomment the following code when we get the next version of jdt.core", "-\t/*", "-\t\treturn Factory.createDeclaration(owner, _env);", "-\t\t", "-\t*/\t", "-        throw new UnsupportedOperationException(\"Need version 1.44 of jdt.core.dom.ITypeBinding.java. tyeung@bea.com\"); //$NON-NLS-1$", "+\t\treturn Factory.createDeclaration(owner, _env);    "]}], "num": 500}